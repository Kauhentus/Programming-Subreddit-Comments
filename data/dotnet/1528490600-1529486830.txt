For many applications, a 40 MB file would be considered quite small.
Somehwat longer cliffs notes: 1. Allocating an array in a hot loop results in a lot of allocations. *(He uses ArrayPool\&lt;T\&gt;.Shared.Rent/Return instead. If the application is single\-threaded, careful reuse of a single array would probably have been even slightly faster.)* 2. Calling String.Split in a hot loop results in a lot of allocations. *(Find the indexes of your delimiters and pull out the substring you need directly. He used a loop and a StringBuilder here\-\-which ends up being a problem later. Not sure why he didn't just use String.Substring. And in a world where we have Memory\&lt;T\&gt; and Span\&lt;T\&gt;, those are probably even better.)* 3. Calling int.Parse and decimal.Parse might be expensive. *(He lumps this in with the StringBuilder stuff. I'd want to see it split out to be totally convinced that writing your own number parsers from scratch is the right decision.)* 4. StreamReader.ReadLine does a surprising amount of allocations. *(If you are certain of your file format and text encoding, just read bytes manually from a FileStream.)* For me, the first two seem like they should be common sense to anyone who's been working with C# for a while. The second two were somewhat surprising.
Ha, yeah. "How do we get a substring out of a string based on known locations in the string?" Hmm, sure would be nice if String had a method that did exactly that! Oh well, guess we'll just write a loop to copy out the characters one by one into a dynamically growing StringBuilder! I took everything he wrote after that point with a grain of salt.
&gt; If you had read the article, you would understand why StringBuilders are such a huge waste of memory even if they're easy to use. Oh yeah, I don't use them that often, but there have been cases where they were the smart thing to use. &gt; strings can be evil sometimes because it's so easy to create enormous performance bugs. hehehehe. Yeah, that's sometimes the downside of such awesome frameworks like .NET -- They can often hide important details from folks who are operating at a higher level (C#). It's important to know the difference between an array of Char, a String, and something like StringBuilder. They all have their trade-offs.
At Build 2017, David Fowler demoed broadcasting his webcam as ASCII using an alpha version of SignalR Core. It's probably on Channel 9 somewhere. 
Look at the old versions of the spa templates (not 2.1) on best practices in doing this. Or you can use this repo I contribute to https://github.com/MarkPieszak/aspnetcore-angular2-universal
&gt;On my Windows 10 machine, the USERProcessHandleQuota is set at 10K, so that would explain what is going on. That's a whole lot of handles though. That's the reason why all browsers implement their own UI elements instead of using Windows buttons, textboxes and so on, in case you ever wondered. If each of those had a Windows handle, a single web page might hit the limit of 10k.
If you're generating lots of UI controls, see if you can replace them with lists. Listview or DataGridView or Listboxes for example. You can use custom drawing to make them look like you want while massively saving on handles.
Please make it work with Xamarin properly 
I think WebRTC could achieve that. 
I am enjoying my blazor so far. Down with JS! \*j/k JS still has its purpose.
Sick reference
Does react still have license "issues"?
Use procmon.
Write a small asp page that dumps the session details but only over localhost so you can load them back and forth to .net. Then add your mvc app as a virtual application under the current site and flip one page at a time. No matter how small the site is, there will be something that is missed. Better to find out week 2 on one page then months later when everything is broken.
I am using Zetpdf.com. I find it very useful.
I also really like React. Particularly if you come from an Angular 1 background it will be much easier to get familiar with the new concepts, vs jumping to React IMO
No. It’s MIT. 
I support the message you are trying to deliver about the web developer no matter the stack will find a job if you are willing, but there's no need to shit on jquery, it is a very good tool still. I know most of it is in the browsers specs but shit man, 80kb(or whatever it is nowadays) is a very small price for the usability and even just plain syntactic sugar it provides. Damn, I would bet most developers that bitch about jquery don't even compress images on their sites but would go nuts about jquery slowing opening times.
Does anything change when you manually copy the files to the publish directory? 
Looks similar to [Marten project](http://jasperfx.github.io/marten), which is for PostgreSQL. Unfortunately, YesSQL hasn't gained a big community so the development is a bit slow (no commits last 4 months).
Since it looks like the OP is parsing a CSV file, I'd love to see his numbers if he were to use CsvHelper directly instead ... CsvHelper is a pretty nifty CSV library allowing the consumer to parse directly from the stream, among other things. If it truly is a CSV file the OP is parsing, getting numbers on how much overhead it would have been to use CsvHelper instead of manually doing it himself, would be highly interesting ...
If you ever find an intelligent answer to this question, I would love to hear from you. I've tried all libs out there to create PDF from C#,and quite frankly, they all are _"#$%&amp;"_ ...!! :P
This. Author started with really wasteful algorithm and got smarter along the way until his allocations were around 32 K instead of 7.5 GB for a 300 MB input file.
Almost everyone in this thread is overcomplicating for no reason. You need a simple report? Use a templating system such as Handlebars.Net, nustache or mustache-sharp. 1) Generate a skeleton like this using HTML/CSS and save it as skeleton.html (simplified): &lt;html&gt; ... &lt;body&gt; &lt;table&gt; ... {{#People}} &lt;tr&gt; &lt;td&gt;{{Name}}&lt;/td&gt; &lt;td&gt;{{Email}}&lt;/td&gt; &lt;/tr&gt; {{/People}} &lt;/table&gt; &lt;/body&gt; &lt;/html&gt; 2) Populate collection (People) and render a template from your code. 3) Output will be a HTML file with your data in it. 4) Convert the HTML file to PDF. 5) Print. Done.
What happens when you: 1) Publish from 2015 to the same directory 2) Publish a newly created project to the same directory 3) Publish from 2017 to another directory
It isn't.
What?
So just transcoding. Live?
Can you try check your connection string again? Or maybe your database credentials? The error looks familiar to me as I had it a hundred times with MSSQL. More often than not, its a db credential or connection string problem.
Did you raise a case for Shay Rojanski (author on npgsql) on github? He is usually super quick to respond. Looking at what you posted, the migration id is not correctly escaped
I came from React and Node to .NET. React is my favorite thing in the world. 
Recently I'm working on my experimental LINQ project which uses LINQ as query expression to heuristic algorithms. I use Xunit data driven testing model to verify the validity of solution found by the algorithm. You can find details here. https://github.com/rvhuang/linq-to-astar/tree/master/src/LinqToAStar.Test 
Not really, the Angular CLI was version 1.6 when Angular Core was 5, then when 6 came around the Angular team decided to make everything version 6. Basically, the difference between Angular CLI version 6.0.7 and 1.6.3 is one major release.
Ah, okay. So in that case I should be learning how to use Angular 6, if possible, with ASP.Net Core, or downgrade my global version of angular CLI?
Yep! The upgrade to 6 from 5 might take you 15 minutes of work at worst, but if you're just trying it out, you might find it to be more worth it to just stick to Angular 5 and uninstall your global Angular CLI package.
Congratulations! You're free!!!
Python is reqlly slow unless you are calling into C libraries, plus it doesn't support threading very well.
I think FluentMigrator is on .NET Core now. There’s also DBUp and EntityFramework Core has migrations built in. 
Psst ... https://gaiasoul.com/2018/06/06/an-independent-security-experts-code-review-of-phosphorus-five/ and ... https://gaiasoul.com/2018/06/08/here-is-my-weakly-hashed-password-file-feel-free-to-try-to-crack-it/ :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D :D 
Fluent migrator is my favorite. 
;(
DDL scripts, but you probably won't find that helpful lol
&gt;Personally I just run my Angular project in .net code and have a separate project for it's API. It's slightly simpler when starting out and you really don't lose anything.
This looks cool. Can you use this in place of ef core migrations?
I have been thinking of this but can you still use webpack for bundling? I'm still learning about webpack and finding it a bit confusing honestly. Not sure if I still need to use gulp with it as my taskrunner. 
Love DBUp
To be honest I've paid little attention to the details. I think the CLI uses webpack and not gulp. The only thing I've really needed to look at is how npm manages packages as it is a bit happy go lucky on which versions of stuff it will use by default.
Pro tip: No one used fetch in React. Use axios instead. 
Evolve. Based on a library from Java world
I don’t know what you’re gloating about. I pointed out two security holes, one of which you haven’t fixed, and the other you’ve fixed _badly_. There are many other security holes of which, based on your recent commits, you remain blissfully unaware. It’s pretty funny to see you try to turn this into a victory after you spent _days_ denying there was any problem in the first place, but funny is all it is. There’s little actual improvement here. Back to the drawing board. 
have you seen this already? https://blogs.msdn.microsoft.com/webdev/2016/03/11/first-look-authentication-in-asp-net-core/ basically it should all be there if you choose the `Individual User Accounts`authentication when you create a new project using the asp.net core template 
I've done it years ago in mvc4, so just trying to catch up on all these changes. Thank you.
Is dbup ported to core yet? 
From past experience ef inevitably gets abused by developers, resulting in 1000 line generated sql statements and performance issues. 
Looks good, thanks 
That’s an interesting idea. But he’s doing the math based on the amount of words in the English language, wouldn’t the math of 72 characters to the power of the length of the password be more accurate? 
Depends. The amount of ‘available’ entropy based on password length and character set doesn’t always translate to a good password. No attacker would bother brute-forcing a password from a site with a 25-character password, but with a big enough data set they’ll probably have a lot of luck trying popular song lyrics, movie quotes, and so on. Ask someone to invent a 25-character password and a lot will end up with something like “go ahead punk, make my day” or “I got 99 problems but a bitch ain’t one”. Still tough to crack, but not as high entropy as you might think. Of course, in this particular case, the software has enough other security holes that a long password won’t help much. 
&gt; wouldn’t the math of 72 characters to the power of the length of the password be more accurate? Well, the number of words literally explodes, due to UNICODE and different languages, such as e.g.  or æ, ø, å, Æ, Ø, Å, etc ... However, you're arguably right - At which point the entropy would literally _explode_ and become much larger, though not be exactly accurate, assuming the idea is to construct a sentence which is **easily remembered** ...
However, I guess the idea is that 8 words from the English dictionary is more easily remembered when combined together to form at least some partially intelligent sentence, including _"yoda speak"_ such as; _"The force in you, truly strong it is!"_ ... ... than 8 random characters, while at the same time providing a _"gazilion"_ times better entropy ...
Does your price table not have a primary key?
The primary keys are currently defined as ItemNumber and PriceLevel
How about having the linq statement loop through matches to itemNumber and update each individual match to (itemNumber, pricelevel)?
What is your database? You are trying to do a pivot operation, which linq does not support. Some rdms support pivot operation https://docs.microsoft.com/en-us/sql/t-sql/queries/from-using-pivot-and-unpivot?view=sql-server-2017 In that case bypass linq and execute raw sql - dapper can really help cutting down on boilerplate to fill the object back with field values. 
It's sql2014. Thanks for the link, I'll investigate. 
To which class type? Generic or explicit? 
I would use store the A-G and price in a dictionary. Also, split up your tables into Item and ItemPrice.
If I have a table of pricecodes and price how would I join it to the items table? 
I've read an article where they gave cracker salted db. He cracked 90 percent in 2 days - the brute force algorithms are staged and tailored to take into account grammar, character substitution and other factors. Most people password will be an English word or two with a symbol that looks like a letter ($ instead of s) 
Using a foreign key...
You can write regilar SQL migrations and do triggers. The fluent interface doesn't support triggers. It's more for schema changes. You can also so stored procs this way.
Yep. Virtually nobody uses brute force as a first option. That’s why slow hashes are so important - unless you’re OP, in which case they are completely useless based on a faulty understanding of math and a totally broken threat model. 
This gives a false sense if security. If the phrase is made up from random dictionary words like "manure seasick lift pastry contract puppy", it's extremely secure, since there are about 200,000 words in the OED and 400,000 if you use random capitalization. However people don't usually use random dictionary words, they use phrases of words they use frequently, which is closer to 5,000 words. It's still a reasonably large key space but is nowhere near the security implied by the linked article.
&gt; It's still a reasonably large key space but is nowhere near the security implied by the linked article. The sentences that will be used are highly cultural aware, implying any attempt at successfully trying to brute force any passwords, would imply knowledge about the individual of who's password you're trying to crack. For instance ... _"But ya bomboclock man, can't see nothin'"_ _"bomboclock"_ is the equivalent of the _"N"_ word, except it implies _"fat white rich ass####"_. The above would be Jamaican'ish, which also contains hundreds of not thousands of different dialects, often on a _"per village"_ level. Cerote for instance is San Salvador slang, and implies _"poodle shit"_, or rather the _"physical form dog shit sometimes happens to create"_. For me personally, I'd probably throw in a couple of North Norwegian dialectic slang words. All in all, this implies that unless you know everything about the human being who owns the password (which you rarely do), you'd end up with an entropy equivalent to having to try out every single character combination on the planet up to 25-40 characters. Yet still making the password ridiculously easy to remember for its owner ... I guess all I've got to tell you is; _"Rubbadub dawg, Jah-jah no man, ya wrong! A dread a step!"_ Hint; https://www.youtube.com/watch?v=pl0JpC7XO74
.NET Core does not have a mature cross platform library. Avalonia and Blazor are your best bets. I recommend looking into the Mono ecosystem for cross platform .NET UI. 
That’s why I use a password manager and the entire lower Unicode set in a completely random string of characters, typically as long as the maximum allowed length of the password field of the site, or 64 characters; whichever is shorter. At least ⅔ of all characters in any one password don’t exist on your typical English keyboard. And with a password manager, I never have to actually remember them. Of course, when companies like Microsoft limit password lengths to a maximum of 16 characters, you really have to wonder at the IQ of the person who made that insanely boneheaded decision. Doubly so for some banks, like BMO in Canada, which have their limit at 8 characters. While 16 characters is not yet in the range that is “trivially crackable” (that now sits at 12 or less with off-the-shelf consumer/prosumer hardware), it sure is getting close awfully fast.
&gt; That’s why I use a password manager and the entire lower Unicode set in a completely random string of characters So what do you do when you're on a different device, and don't have access to your password manager then ...? For me that's a highly relevant question, since I'm creating a framework for creating web apps, for multiple devices (renders responsively). How do you remember your randomly generated password ...? &gt; Of course, when companies like Microsoft limit password lengths to a maximum of 16 characters, you really have to wonder at the IQ of the person who made that insanely boneheaded decision. Doubly so for some banks, like BMO in Canada, which have their limit at 8 characters. Hehehe, no comment Sir ... ;) With the suggested solution, you could in theory use an entire chapter from Shakespear's Romeo and Juliet as your _"password"_. Not sure I recommend it, but it is possible ... ;)
&gt; So what do you do when you're on a different device, and don't have access to your password manager then ...? Bitwarden ensures my passwords are *available* on all my devices. And on something that isn’t mine (and I can be *reasonably* assured that it is safe to do so), Bitwarden has a web interface. My Bitwarden master password is a set of normal words, but as it clocks in at over 150 characters (it is a phrase that I can easily remember) it is the only such password I have. But I have yet to access Bitwarden on any device which isn’t mine. I would rather copy a password to a text file and sneakernet that shit over than risk my Bitwarden database. And for extended storage (more than just usernames and passwords) I do have KeePass (encrypted and synced through BitTorrent Sync v1.1), although it is a lot less accessible on anything other than traditional computers.
If you're just trying to catch up on changes, the newish [API Explorer](https://docs.microsoft.com/en-us/aspnet/core/index?view=aspnetcore-2.1) is pretty good. I was able to use ASP.net Core just fine with pretty much only this.
&gt; Bitwarden ensures my passwords are available on all my devices. And on something that isn’t mine (and I can be reasonably assured that it is safe to do so) So basically what you're saying is that you allow access to all your passwords and hence secret information to a 3rd party. Respectfully Sir, but if you advocated that solution to for instance an embassy, or the police, or some (serious) politicians such as your country's prime minister, I suspect they'd chase you out of the building with a stick ... ;) Sure, it might jive for you, but for anyone in the paranoia business I'm aiming at, that would equal having _"password"_ as your password ... &gt; But I have yet to access Bitwarden on any device which isn’t mine Another example of a use case. You need to borrow your girlfriend's iPad while on vacation in Greece, because your CEO has sent you an email, you just _have_ to read ... For the record, with my solution, you could even use code as a valid password. The following would be a perfect example of a password ... if (!string.IsNullOrEmpty (newPassword)) { if (!IsGoodPassword (context, newPassword)) { throw new Exception ("foo bar"); } } Making your password ridiculously long, yet still easily remembered (for a coder).
Got it - we should all use insults for passwords
Not only that, but the example is a grammatical sentence, which cuts it much farther still.
I'm one of the maintainers for Avalonia! If you have any questions, you can ask me or pop into our Gitter chat room and ask. We'll try to help you out with any issues your having getting your project going.
Woah awesome! Is it possible to develop avalonia applications **on** a Linux machine? Also, does a rich text editor exist? 
&gt; we should all use insults for passwords Hehehehehe, well. Maybe it won't increase our entropy that much, but it'll sure as hell make life funnier :D
Very useful functionality. For the record nUnit provides the same using TextFixture attribute. Latest versions of Visual Studio show test results with parameter value. 
Yep! Vscode and Rider should both work. We don't have the designer up and running on those platforms though so you'll just have to run it to see what your UI looks like. There's an AvaloniaEdit package that provides a basic text editor similar to WPFs AvalonEdit. Also, I highly suggest using the nightly builds. They're pretty stable and they have a lot of bug fixes since our last release.
Have you all completed a data grid yet?
One of our contributors is working on it. The DataGrid control code is surprisingly massive so it might take a bit.
Def not surprising 🤣 it's certainly one of the most, if not *the* most complex controls. Their DataGrid controls is the reason a lot of those companies like Telerik and DevExpress are able to charge so much for their products.
Oh really? Nice! Thank you. 
Haha yeah. One of the other maintainers crunched the numbers a few months back and the Xceed.Wpf.DataGrid that's open sourced had more lines of code and XAML for the DataGrid alone than we had in all of Avalonia at the time.
All the stuff you mentioned for sure. Also be prepared to answer questions about foreign keys, normalization, o/rm.
&gt; So basically what you're saying is that you allow access to all your passwords and hence secret information to a 3rd party. Respectfully Sir, but if you advocated that solution to for instance an embassy, or the police, or some (serious) politicians such as your country's prime minister, I suspect they'd chase you out of the building with a stick ... ;) If you took the time to examine the Bitwarden source code, you would see that not only do they *not* have access to any of your content (it is encrypted before it is even uploaded), but they also have a self-hosted version, which puts your content *entirely* out of their reach. I am running Bitwarden in a self-hosted context. As long as my own server remains un-expoited, my passwords are likely very safe.
I would brush up on testing (approaches, designing for testability, mocks, etc.)
Thanks
Also If. Net core then the lifecycle of middlewares and the built-in Dependency injection, and know of SPA frameworks 
Went for a job recently and here are some of the things I was asked. - difference between abstract and interfaces - Orms - Design patterns - SQL (joins, group by) Other tech questions where : Check if first character of string is uppercase (remember error handling). Build a comma delimited string from a collection of strings (string builder, trim the trailing ',', check if string is empty)
Difference between abstract class and interface seems to be a pretty common question. 
Read about SOLID, SRP, Dependency Injection, decoupling and abstracting code, doesn't hurt to look at some functional concepts too.
&gt; I am running Bitwarden in a self-hosted context Than I apologize for my assumptions ... How's it encrypted? AES ...? Alternatively you'd need some sort of private async key, that you somehow are able to put into your device, right ...? Let me guess, you've got a master password which you type during installation ...? If so, I apologize, but would still like to emphasize that's a lot of eggs in one basket though. In a self hosted context though, assuming nothing but your server's got access to it, that wouldn't be toomuch of a trouble though ...
Know about abstract classes and behaviors around them. (abstract, virtual, overloading, constructors) Know what a delegate is. Kudos if you can describe a few ways in which they are used. What is a generic? Have you written your own generic? What is a type constraint? Know structs vs classes, their behaviors in the runtime. Know a few common structs used by everyone. async/await: What is it? What are the requirements around the async keyword, as far as method signatures go? What will you get a warning for wrt async and await keywords? Know common gotchas around async/await. What is the convenience introduced by async/await that wasn't there previously? Know LINQ \- know the moment IQueryable is resolved and in memory, know when a database is hit in LINQ to Entities. What are some thing made possible by the Type system? What are attributes? Can you have objects at runtime that are not defined by classes? How? What are a few ways to define routing? What is REST? What do the requests look like depending on the verbs used? That's more the baseline knowledge. Brush up on common design patterns (Observer, MVC, Singleton, Factory, Adapter / Proxy) and data structures. Depending on where you're interviewing, these may or may not be important. The tech might go away from .NET, specifically too \- It won't hurt to know a few javascript frameworks. React, Angular, Vue. Know what benefits Bootstrap gives you.
Regardless of the format, because images are so much larger than text I would expect any document with embedded images to be a nightmare to merge since it'd be 95% nonsense binary data.
Don't wing it. If you don't have direct experience with something but have read up on it, say so in the interview. I would rather have a candidate who has boundries on their knowledge than somebody who just does a lot of hand waving to get through the interview. You don't have to know everything about everything, you just need to show mastery in some things and a basic understanding of the rest.
Man, if any of our applicants could answer even one of those questions I'd be in heaven. 
That's why other UI frameworks like Delphi VCL had mechanism that internally releases handles of controls on invisible tabs and recreates them when another tab becomes active. Another solution is to switch to WPF from WinForms.
man, i’m a .net dev and i couldn’t answer half that. switched to .net from Node in the last year though (when i switched jobs)
After reading through that, it's very excellent. So again, thanks :)
I always get asked about design patterns. 
It can vary massively. I don't know that there are any specific things you can do to brush up on your knowledge. You will ultimately have to rely on your experience. If you are asked a bunch of things that could be googled, then that's not a good interview IMHO. When I interview developers I want to know how they _think_. I will give them a basic exercise, then give them some theoretical problems where my goal isn't to find a specific solution but to hear what their thought process is. Good luck!
Every now and then I get a candidate who nails all my questions. At that point I know it's a race to hire him/her.
To tack on to this: Difference between abstract class and interface What is dependency injection What is IOC Be familiar with SOLID principles Know your access modifiers If EF comes up. What is an ORM and what's their purpose. (hint: Object Relational-Mapping pretty much tells us the purpose)
I found this site to be extremely helpful" http://www.csharpstar.com/
How do I even get useful experience in all these things? This seems like at least 5-10 years of full immersion, right?
DI can also be asked for Framework
Have you tried deleting the publish profile and re-creating it? I've had this happen before with a corrupted publish profile.
I have, yeah. I've even recreated the publish profile directory
For sake of troubleshooting, publish to a new folder and point IIS to it. Does that show your changes?
C# 8 will allow interfaces to have method implementations. At that point, I’m not sure anymore what the difference between abstract classes and interfaces will be...
There is no need for string builder. String.Join(yourCollection, “,”);
Default interface implementations are still a proposal in the early prototype stage, so there's still many open questions and no actual timeframe for their release. As for the current state of the proposal, there are multiple significant differences: - interfaces cannot declare fields - interfaces cannot have constructors (not that they'd be very useful without fields) - default interface implementations can only be called through the interface, i.e. `IFoo a = new Bar();` `a.DefaultImplementation(); // ok` `Bar b = new Bar();` `b.DefaultImplementation(); // not ok` There may or may not be other differences like no `protected` members, no operators, and other stuff that's still TBD.
&gt; .NET Developer &gt; The job requires knowledge of ASP.NET MVC, C#, JavaScript, SQL. It's also in my best interests to know HTML5 and CSS3. Sounds like a back-end development job but you are preparing like it's a full stack development job. &gt; I haven't had many interviews for .NET positions What is your current experience? A lot of understanding of languages do translate to .net/c# although MVC itself can be challenging at times to wrap your head around it your first year. People say the same thing about AngularJS too. Once you mentally buy in to process it starts making sense. &gt; Things like OOP, inheritance, classes and interfaces? Difference between class and object? Stacks and queues? Personally, I rarely get interview questions or quizzes. If I got an interview where they stressed questions or quizzes and that was even 50% of the quiz, I wouldn't accept the job. It depends on the interviewer. They may not care if you know the best use case off the top of your head for an abstract class. Sometimes they want someone to say ,"Well, I have dabbled in c# but I've mostly written in Java the past 3 years and we wrote an API using blah blah..." If you've written an API in one language, you can write an API in almost any language (whether you want to or not is another case). I tend to try to get a picture of what they are asking for because it reflects on what they think they need. If you can understand based on their description they want a back-end developer, start probing them on their necessity in a backend developer as opposed to a full stack developer. Insert your understanding with html5/css3. Always try to put the interview back on the interviewer as if you are inquiring about why you should work there. I'd look up the business and industry, Try to familiarize yourself with the software that is offered to that industry. If they do a particular type of business, there is a particular type of EHR that may be their core system they are trying to interface with or it may be they offer the EHR and you've versed yourself with their's and their competitors. Is there a common standard of file/xml/json the industry communicates in? Try to know about that. 
I've only been half immersed for 3 years and can answer most of it. It mostly comes down to what you're doing with your time. Being able to answer all of that without producing any useful code is obviously useless. Conversely, being able to produce code but not knowing any of these things - while useful - can lead to gotchas.
This is an excellent list. I'd like to add a few: * Understand the `using` keyword * Understand the `Dispose() =&gt; Dispose(true);` pattern * CLR locks. What are they, when might you use one? That last one is the least important if you're not up on everything else. Dispose is pretty easy to understand but it doesn't click immediately for a lot of people (myself included). Understand why you wouldn't just implement the IDisposable.Dispose method as a virtual method, and why you pass the disposing flag to overrides. It's actually a useful thought experiment. 
Use abstract class to provide default behavior across classes that share an inheritance chain. Use Interfaces to provide default behavior across classes that do not share an inheritance chain.
Damn good advice. Have an upvote :)
Would this ignore values in a collection that has a bunch of whitespace? Think the question was more to do with the logic you use rather than your knowledge of the .net framework. They where more eager to see how you work out things and then go on to see how you'd unit test it
No it would take every element of the collection and join them into one string separated with commas. You could easily remove any null or whitespace only character with Linq: String.Join(yourCollection.Where(s =&gt; !string.IsNullOrWhiteSpace(s)), “,”);
That's pretty cool. What is the performance on that like? I read somewhere that building up strings can be fairly slow but a string builder should help with that.
It's in the string class, performance is better than anything you could write yourself. 
There won’t be, it will be the ultimate cancer. I propose a Roslyn analyser that will make interfaces with code in a build error at least then teams can maintain code quality.
I don’t see any positive outcome of this at all, I’ve said this many times now. Hopefully teams will not allow putting code in interfaces because it’s going to cause maintenance hell and probably going to cause more junior level developers to start abusing the “feature” too much. Interfaces are contracts. Someone is probably now going to give a long winded explanation of how this niche feature is useful for game development because of long winded and complicated inheritance graphs between different characters in a game or whatever. Well I think at that point you probably have deeper problems and abusing interfaces is not the solution. Things like dependency injection and the strategy pattern would probably be a better idea. To answer your question I don’t think hopefully there will be too much difference: teams will hopefully just not allow it’s use. I wonder if someone will make a Roslyn analyser that will error the build of you use it...
The difference will be that if you choose an abstract class you will have to inherit it in order to use it. If you choose an interface you will be able to implement it and use it through composition. So in my opinion, the difference will depend on the design you adopt while creating the application. Cheers
&gt; default interface implementations can only be called through the interface wow, thats really weird, but makes sense I guess. I assumed that the class 'inherits' the implementation from the interface. I was going to say that it's similar to an extension method, but even those can be called on the concrete type... hmmm
Change out the bootstrap min for the full one. Then you’ll be able to find the line that fails. Also remove and re-add node modules just in case something is off with the bootstrap upgrade
I assume the reasoning is that it interferes with the feature's stated purpose of making versioning interfaces easier. Default implementations are supposed to allow developers to add methods to interfaces without breaking existing code, but if classes inherited the interface implementations then adding a method with a duplicate name to an interface could suddenly make calls ambiguous on classes that implement multiple interfaces. It's unfortunate since it significantly reduces the utility of default interface implementations, but I guess those use cases could be better covered by shapes instead.
Difference between public/private/protected/internal. How you can join strings in C#? Difference between JOIN and LEFT JOIN in SQL. Difference between decimal and float. What is dictionary, what is list? You have block of code, and you the same code between try and catch - which one will execute faster and why? What is serialization? What is reflection? What value will x have in var x = (int)0,99; ? How many classes and interfaces can single class inherit?
No, because you do the decryption at the client devices (as opposed to on the server). The client downloads a binary *highly* encrypted blob, and then you decrypt it locally using your master password.
&gt;I don’t see any positive outcome of this at all, I’ve said this many times now. Hopefully teams will not allow putting code in interfaces because it’s going to cause maintenance hell and probably going to cause more junior level developers to start abusing the “feature” too much. Interfaces are contracts. &gt; &gt;[...] &gt; &gt;To answer your question I don’t think hopefully there will be too much difference: teams will hopefully just not allow it’s use. &gt; &gt;I wonder if someone will make a Roslyn analyser that will error the build of you use it... It sounds like you're objecting to this feature on the grounds of purity. Well... I object to library developers turning to abstract classes, when interfaces would make more sense for those use cases, just out of fear of them not being able to extend an interface later in a backwards-compatible way. I object to having to go the approach that LINQ-to-Objects did in order to implement APIs that strike a balance between being generally usable and fast enough in the most common cases. - To elaborate, the team did this by writing extension methods which are slow by default, but which bake in special-case fast versions of themselves for a very specific list of circumstances based on the runtime type of the first parameter. I'd rather have the implementing class decide which methods it wants to implement in "fast mode" (and how, especially since it has access to its own internals which it can use to speed it up), and reimplementing virtual method dispatch in user code using runtime type checking offends my own sense of purity. I object to having to use either abstract classes, extension methods, default parameters, "implementing-class-must-implement" overloads, or having to force all callers to pass in some kind of `CancellationToken`, when exposing an API with support for the modern cancellation pattern. It's one thing to be in a situation where you don't expect to find a need for this (you're probably an application developer exclusively, which is fine!), but please don't then categorically rule it out just on that basis.
In other words, there's a big difference between "wtf, nobody needs this" and "wtf, I can't think of a single reason why anyone would need this".
Care to elaborate on the "maintenance hell"?
If you don't want to use [ML.NET](https://www.microsoft.com/net/learn/apps/machine-learning-and-ai/ml-dotnet) or [nuML](http://numl.net), then this is probably a case where you're better off using one of the many Java or Javascript libraries out there rather than trying to stick to .NET.
Excellent write-up.
&gt; and then you decrypt it locally using your master password AES (probably) then ... You haven't eliminated your passwords though, simply replaced it with a single password. Where is this file stored? On your own server, or somebody else's server ...?
Good post
They’ll be killed in committee. There’s no way the c# team will be cool with forcing you to cast up to an interface in order to call a method. Definitely not pit of success. Like seriously: ((IFoo)b).DefaultImplementation(); It hurts me.
We already have that with explicit implementations of interfaces, though.
If you are using composition over inheritance when using interfaces (which is preferred), this is actually very much a pit of success. It also solves the problem of multiple inheritance. If I have an IRunner and IJumper interface, the code that works with “runners” shouldn’t care about whether or not an implementation also implements IJumper. So assigning or casting to IRunner makes it clear the current block only works with IRunner members. Future you will have a much easier time reading code that present you is forced to SOLIDify.
Dang. You are right. I did not think of that. I suppose that might explain why such software does not exist :) But I guess problems haven't stopped people before! Thank you kindly for your input. I'm getting more comfotable with markdown so maybe I should just accept it for what it is.
I'd be thrilled to have a candidate point that out, so I expect to keep asking it (and there still are differences).
fair. But then you should also be able to call an interface method on a concrete class without having to "know" that it implements IRunner.
That is what regular method implementations are for (or abstract class method implementations if the behavior is to be inherited). Behavior imposed by an interface’s default implementation should only matter when viewing a class as an implementation of that specific interface.
If I have an instance of a class, ALL behavior matters. If I'm calling an interface method on myself, it's silly for me to have to specify the name of the interface in my own class. If you're saying it'd be an ambiguous reference otherwise, then sure, but otherwise this is bad, it creates a needless dependency inside the class. 
Look up Mosh Hamedani. He's a good teacher. I got a job once doing wed dev work because I brushed up with his courses. His stuff is on Udemy and he has youtube channel I think.
1) 2015 gives me back 1 build succeeded, 1 publish failed. 2) New project produces files in the directory 3) 2017 does not produce files in any directory
This is necessary to avoid introducing breaking changes with this feature. Just add a `Frob() =&gt; ((IFoo)this).Frob()` if it's bothersome to do the cast.
That's not really EF's fault though. It's down to the developers. Regardless of what tools you use, if you're unfamiliar and don't read up on the subject then you'll fuck it up.
Thank you for this post! Great Job!!! 😊
It seems like they're specifically designing this feature to not be a replacement for abstract classes. Working with a concrete type versus an interface type is different and they shouldn't be used interchangeably. I actually really like this approach because it forces you to pass around interface types instead of concrete types if you want to take advantage of the new feature, which is widely regarded as a best practice anyway, at least if you value automated testing. A lot of legacy untestable OOP code is going to find this feature very painful to use, but the necessary refactoring to use the feature will be very beneficial. 
&gt; There’s no way the c# team will be cool with forcing you to cast up to an interface in order to call a method A bold assertion for a language where this is already necessary.
Thanks for your advice! When I finish my current MOOC I'll buy his 3 C# courses (basic, intermediate and advanced) on Udemy.
What kind of answer would you be looking for regarding dispose? At a glance I'd say it's to ensure unmanaged resources are always freed but to avoid repeatedly calling dispose on managed resources.
And don't forget about writing TESTS!!! 
It only forces you to explicitly specify IFoo.Operation because your interface impl is private. This works: interface IFoo { void Operation(); } class Foo : IFoo { public void Operation() =&gt; Console.WriteLine("This is Foo, doing Operation"); } class Program { public static void Main() { Foo f = new Foo(); f.Operation(); } } Private interface implementations are kind of oddball anyway. My thing is... why then, if I move the writeline up into the interface... if I do that why must my line in Main change to ((IFoo)f).Operation()? Seems needless.
Basically, there is the Dispose Pattern that Microsoft recommends you implement for disposable resources. If someone asked me about the Dispose Pattern, I'd rattle off something along the lines of this: 1. A contract for how multiple calls to `IDisposable.Dispose()` works 2. For any class that is not marked with the `sealed` modifier, a `protected virtual Dispose(bool)` method should be declared. In an abstract class that is marked as `IDisposable` but does not hold any managed or unmanaged resources, this would also be virtual, because derivations of the abstract class won't always intrinsically hold disposable resources. The reason for implementing it using `protected virtual void Dispose(bool)` consistency. This _is_ the pattern that is documented by Microsoft, and is therefore the most accessible. Deviation from this pattern requires more internal documentation, which is more work for your developers. You _could_ deviate from the pattern using something similar to `public virtual void Dispose() { }`, and this would work _just fine_ in terms of function, but it is not very familiar to developer audiences. Additionally, the reason for the `bool` flag is so that implementations know if the call to `Dispose(bool)` occurred from the main `Dispose()` method. This is important if the resource holds both _unmanaged_ resources. In such cases, you would also declare a finalizer, which invokes `Dispose(false)`. In general, it is considered unsafe to access managed references from a finalizer, because the behavior for doing this isn't defined: your managed references may have already been cleaned up by the garbage collector. The reason to do this would be to free any unmanaged memory that you've stored in your object, which should be done from the finalizer (if it wasn't done in a proper call to `Dispose` earlier). I'd never _expect_ anyone to rattle off the answer I provided above, but if ever asked about the pattern specifically, the answer above is what I'd provide.
What's the use case for hosting a web service as a windows service? Is this just for people who want to avoid the overhead of IIS?
Yes. It's all about input/output, protocols and codecs.
Thank you for this post
So, I want to talk about VB.Net for a moment. In VB.Net, marking the class as implementing an interface and implementing methods with matching signatures *was not sufficient*. You also needed to explicitly map the implementing method to the interface method, e.g.: Public foo() Implements Interface.foo The *power* of this is that it lets you do something like this: Public bar() Implements Interface.foo Now, if I have an instance of `MyClass`, I could do something like this: i = new MyClass() j as Interface = i i.bar() j.foo() 'functionally identical to the line above I'm not going to claim that this is a must-have feature, but it is a really interesting way to divorce the interface from implementation. Why do I bring this up? Because of the fundamental difference between an interface and an abstract class: interfaces declare a "can do" relationship, classes declare a "is a" relationship. Because of this, I might implement many interfaces, (because I "can do" lots of different things), and I'll receive different implementations of different methods. Which, as an aside, is almost certainly why you *will* need to cast to the interface, because if I receive the default implementation of a method with the same signature from different interfaces, there's no graceful way to resolve which implementation should resolve the call unless I cast to the interface type.
That's pretty sad. Are you offering competitive pay?
&lt;shudder&gt;
If he's hiring out of college I wouldn't expect them to know any of that, except maybe the first OOP question.
That's pretty sad. 4 years of courses and you still wouldn't know what a delegate is, or a generic, REST, or differences between a struct and a class? Yikes. I'm sure all that Scheme will really come in handy, though.
&gt; It's in the string class, performance is better than anything you could write yourself. Maybe better than anything *you* could write yourself. I can beat `String.Join` consistently (StringUtil_Join): https://i.imgur.com/QFQev4B.png
Cool, make a pull request to the .NET Core repo.
Nah fam, I'm just dropping a hint for other passerbys that they shouldn't be so naive to assume the BCL will inevitably outperform anything they could write.
Not everything that requires hosting communicates via HTTP 😉
It can out perform anything anyone who is so new to c# they don't know about string.join can write. 
I for one, want that because I need to communicate to a windows service via http. I'm currently using WCF for this, but it's clunky, error prone and the binding for entities is pretty basic. 
I wouldn't expect any given recent grad candidate to have ever used C# before, so no. &gt; know what a delegate is Java doesn't have delegates, C++ calls them function pointers (although some courses may have picked up C++11 lambdas by now). Python doesn't have delegates, per se, given that functions/methods are already first-class objects. &gt; or a generic I might add this one to the list as well, as it's common to learn in OOP classes &gt; REST Nope. I doubt any course would teach HTTP APIs in general, or REST in particular. &gt; differences between a struct and a class This one is also C#-specific. in C++ the only difference is whether members are default-private or default-public. In Java there is no struct and no user-definable value types.
Try the answer here to save the resource to file: https://stackoverflow.com/questions/13031778/how-can-i-extract-a-file-from-an-embedded-resource-and-save-it-to-disk With any luck, its a dll that you can open with dotPeek (or IL Spy)
Great! 
Trying this now - hope it works! Thanks for sharing
The interfaces will have *static extension method* implementations. It's not really an implementation that exists as a part of the interface. The compiler probably generates a static class behind the scenes that implements the interface extension methods.
I'd expect someone to talk about Interop / unmanaged code. You can leave the cleanup to the GC when in a pure .NET world, but the moment you talk to something outside of the box, you need to make sure that things are tidy. For a web dev spot that implements a regular js / MVC / WebAPI / EF solution, Dispose would be esoteric.
This is functionally identical to C# code like public void bar() { ... } void Interface.foo() { bar(); }
Have you considered strong signing your assemblies with a certificate?
If you don't work in it and want to learn it, then you need to work in it. The best way to learn anything is to jump in. See if there are any junior or mid\-range development jobs available. If you manage to get one, and they have a good set of tools internally, look through all of those tools. If you don't want to do work as a job\-job, hit up github or other OSS repos and pull some stuff down. Mess around with it. Break it, then fix what you broke. Try to see the patterns underneath what you're looking at. Look for code that looks really crazy to you, then pull it apart and work on understanding what it's doing. Look for weird syntax and do the same. Also, don't simply focus on C# or whatever language / platform your intended goal is. Mental flexibility is helpful in problem solving, and certain constructs pop up that you'll recognize across all languages. When it comes to Microsoft's stack, they love to commingle their ideologies. Consider where the ***let*** statement in LINQ query syntax comes from.
Either of webforms or WPF or ASP.NET are fine for the UI. I think your approach sounds good. You can use native .NET classes to reate GTTP requests to API endpoints, it's pretty simple, just Google it.
That actually makes sense. Sort of what strategy pattern was used for...
&gt; If I got an interview where they stressed questions or quizzes and that was even 50&amp;#37; of the interview, I probably wouldn't accept the job. The quiz nature of the technical is purely to establish the boundaries of a candidate's understanding. A lot of it is truly trivial, but the purpose is not to insult, but to see how good a fit you might be. We have individuals come through that cannot give an answer to the difference between a class and an object, or the difference in behaviors between primitives and object references as parameters to methods. When you're looking for someone that you intend to work with for the next several years, you want to make sure the following is true, from a technical standpoint: * They won't drown for lack of knowledge of the framework we build our tooling upon * They will be able to bring something to the table to help us improve ourselves, or are willing to participate in our own self\-discovery. * They are curious. This, to me, is the single biggest factor of any tech interview. If you don't know something we're asking, I want to hear a response that shows that you're intrigued by it. Some candidates get nervous in that sort of interview too \- not everyone really does great at a "test." We'll change it up to a more conversational discussion at times, but still will need to see evidence that we'd be good to proceed to the team interview. The conversational is more like "tell me what your experience is with X, Y, Z." As they go through, we explore the mechanisms through which problems were solved. That works better for some people. 
Thanks for the post. Great info. 
I wouldn't expect a recent CS grad to know the particulars of C#, but I'd expect a recent CS grad interviewing for a .NET position to have at least spent some time learning about C# and the framework. 
No. It's not private. It's ["explicit"](https://blogs.msdn.microsoft.com/mhop/2006/12/13/implicit-and-explicit-interface-implementations/), as per the language spec. You say they are "oddball", but that's not the point. There is a feature in the c# language that specifically works this way, and it wasn't "killed in committee".
The generic host thing and the background service are just what I needed! 
make sure whenever you buy anything on Udemy you google *@UdemyCourseName* (sale/discount/etc). Udemy prices are an internet joke akin to that Turkish guy with the appliance store on the corner who has had a going out of business sale for 15 years. They are permanently on sale even if the website says like 200 bucks. You should find them for $10-$15
Maybe change it to netcoreapp2.0 and use Microsoft.AspNetCore.All instead?
I've been doing reverse engineering for years... the most basic thing that developers do when they see a hack (patch, serial, bot, trainer... etc) they start to think "how did he do it?" Basically, they forget how ugly their security is built... it's that simple ! What does the hack do exactly ? Let's say increase the health of the player... so check where you store the health value (if it's in the memory, there is an easy way to override that). And maybe you can add a check of the health each time you add or subtract health from a backup field (or maybe file or api)... ah, dont excessively check the health value in many places till your code becomes lasghania, it's better to follow a pattern. If your game is making lots of pennies then it's time to hire an expert to add a decent protection layer ;)
&gt; If I got an interview where they stressed questions or quizzes and that was even 50% of the interview, I probably wouldn't accept the job. You gave a very accurate to the above statement. I don't want to quote it all but everything you said was correct and I probably should have clarified my feelings about that statement. To expand on it I usually turn my interviews from technical to ideological very quick. Not because I don't know my stuff but because I am not presenting just my experience with the code but also the challenges and accomplishments I have had since I started in development. I was giving OP the advice I wish I had when I started which is, cheat the interview process and fake it till you make it. I knew I could deliver, most people can. The questions in the interview process tend to rarely come into play. They are hard to answer at times because it's not what you know but the second question when they ask you to describe you have implemented it. Thats a show stopper. There are alot of concepts i understand that I have never had a reason to implement and usually this is where I pivot the conversation to asking ,"so what is it you want? Yeah...we can do that."
 Startup.cs(8,28): error CS0234: The type or namespace name 'HttpsPolicy' does not exist in the namespace 'Microsoft.AspNetCore' (are you missing an assembly reference? Now I'm getting this error instead. Is there a way to force it to use dotnet core 2.0 when using the `dotnet new` command?
If want a lightweight container and not have to depend on the OS for a web server.
If you want to run a system that processes queues or handles other back end services then it may make more sense than running behind IIS. IIS likes to recycle your app pool periodically if you don't go out of your way to disable that behavior and it doesn't like to start your instance until the first request (which is rough if your app doesn't do HTTP). Running as a service also doesn't require configuring your server for IIS [ASP.NET](https://ASP.NET) Core hosting (installing the features, installing the hosting pack, setting up the app pool and website, configuring web deploy, installing certs, etc...). It hasn't been my cuppa tea, but I could see using this more often now that it is support for .net core. I hope they add "dotnet service install" and "dotnet service remove" cli functions that work cross platform, that would really help their micro service strategy.
You lost me with the implied subject of the "But ..." section. Is the following a correct reading? * for a component-based framework, it [Angular] puts up a lot of ceremony/overhead just to create a component, to the point it could become a deterrent for developers to do good UI decomposition. * while some like JS and HTML separated, in practice we found JSX [React] gives better debugging experience. * [Angular's] learning curve is higher due to large number of abstractions to learn. * while its [Angular's] walled garden approach has great benefits, doesn't seem conducive to innovation. We felt at some point, we'd be banging our heads against its wall fighting the framework when want to do something out-of-the-box.
You have to do that for the property changed event on collections. Damned if I know why.
&gt; interfaces cannot declare fields While technically true, you can get the same effect using a `ConditionalWeakTable`.
Maybe you can update the description to better describe what it does? I have no idea actually, even after reading the current one...
Make sure you also have the correct dotnet runtime installed. 
Cool for small projects. If you have stuff with client, server and a ton of libraries it kind of breaks down unfortunately. However, you can make key binding for the 'Start debugging' and 'Set as startup project' context menu. It works on projects and the solution.
Care to share your work as an example project?
Yes, by using --framework netcoreapp2.0 flag. e.g. dotnet new web --framework netcoreapp2.0 You can find the documentation here: https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-new?tabs=netcore20
I know the bizzarre Udemy price, currently I'm taking a CCNA course on that Platform (and I was stunned by how much quality contenent you can find in a 10$ course).
Nice post
Most of that is true except for the docker bit. Docker just doesn't have the security requirements most/all fortune 500s require.
Thank ye kindly for the reassurance.
Great post. Incidentally, does anybody know how to create a sources\-only package using just \`dotnet pack\` and the NuGet additions to the csproj format? Consuming them is easy, creating them is driving me crazy...
There's still not an ibuprofen\-free alternative to Active Directory on \*nix for sprawling bureaucracies, so until that is addressed, Server will still be around for a while. I've been in groups that use Apache LDAP or Solaris LDAP, but they don't scale well with regard to organizational permutations. Other large components like policies and WSUS will need to be ported as well and that despite Satya's authority, he would still have an uphill battle to get all of that moved to cross\-platform. Server might be worthless from your perspective, but it takes a lot of human infrastructure to keep your paychecks coming. And most of those people need simple abstractions from the inner workings of technology.
You got either Avalonia or UnoPlatform (don't know if one of them has what you look for though )
I think the gist of the article is correct though. AD is still used heavily (and needed) for the obvious reason of managing users and security policies but that aside there isn't much else Windows Server offers that can't be done on Linux. There is Exchange but there's plenty of other email options and SQL Server runs perfectly on Linux now.
Time will tell... I personally would prefer all of Windows to switch to a Linux base and Windows itself become a desktop environment that puts Gnome and KDE out by the street for collection. First \*nix needs to catch up on very simple practices, though, such as the notion that groups can be members of groups.
https://www.grapecity.com/en/activereports-developer
Wow! It's so expensive... There aren't free tools for .NET?
Only when Visual Studio (not Code with its Electron thingie) with all its goodies runs on GNU/Linux. Oracle drivers on Core have 1:1 feature parity with the native drivers on Windows. There is nice GUI tooling even if browser based comparable with what windows server native management UI offers. Active Directory and Exchange server capabilities. All major third party component companies have ported their frameworks on top of Core.
SQL Server Reporting Services. Comes with SQL Server, but some would say it leaves something to be desired. Pretty simple though if you're just spitting out tabular data.
"I would be happy to apply for your company. But first, please run this tool on your codebase and let me know the results."
No but looking into this now \- thank you for sharing
The only requirement for you is to purchase a strong signing certificate from a trusted authority, in order for your users to install your app without warnings. 
The server has authority over most of the crucial gameplay systems, i.e. health, combat, puzzles, quests, etc.. We do need to tighten up movement more, but for the most part automation seems to be a bigger culprit than data integrity. Any suggestions for detecting and mitigating automation?
I have put Cloudflare in front of my blog and choosen some good caching rules that fit my publish cycle.
(.Net Core) I would create a `CMSService` in between your controller and the CMS API. You could use the [`IMemoryCache`](https://docs.microsoft.com/en-us/aspnet/core/performance/caching/memory?view=aspnetcore-2.1) for caching. When your application starts you can pre-cache all of the results. Just be sure that when the results are modified you also update the cache.
I've run into the same issue for asp.net core 2 site running locally and when deploying from TFS to a server or azure app service. I had to stop site/app pool first, publish, then start site/app pool. Really weird one, but only .net core specific. Just in case build your project in Release mode and check obj folder (and Release sub-folder within). Also, try to run Visual Studio as an Administrator. 
The last point is wrong for many cases and there's one line which is probably an oversight but could be read as very wrong. &gt; This results in unnecessary memory allocation and copying of all the enumeration values into it So for value types that's true, but for reference types it's not. I just don't want people misreading it as it clones the reference type. I know that's C# 101, but it's worth mentioning. Ok so the big problem: &gt; This results in a big performance penalty. You should only use these methods when it’s strictly necessary to cache the values and it’s guaranteed that they always fits in memory Depends on the numbers and the end result what the enumeration will be used for. Here's some totally bogus code that shows that executing all the where clause logic is 5 times slower than doing it once and copying it into a list before abusing it badly :) What's interesting is I've moved the linq statement into a method that returns the IEnumerable. So if the IEnumerable is passed around a bit that iteration count could go up. And remember, you're holding onto an underlying collection of some sort anyway. If it's an entity set you probably don't want that held in memory if you just wanted the numbers (as one example). So potato code first: [Test] public void TestSpeedOfIterator() { var source = new List&lt;int&gt;(Enumerable.Range(1, 50000)); var stopwatch = new Stopwatch(); int total = 0; var linqy = GetFilteredList(source); TimeSpan[,] durations = new TimeSpan[5,3]; TimeSpan elapsed; for (var outer = 0; outer &lt; 5; outer++) { Console.WriteLine("-----------------: " + outer); stopwatch.Reset(); stopwatch.Start(); elapsed = stopwatch.Elapsed; Console.WriteLine(elapsed); durations[outer, 0] = elapsed; for (var i = 0; i &lt; 10000; i++) { foreach (var i2 in linqy) { total += i2; } } elapsed = stopwatch.Elapsed; Console.WriteLine(elapsed); durations[outer, 1] = elapsed; stopwatch.Reset(); stopwatch.Start(); total = 0; var newList = new List&lt;int&gt;(linqy); for (var i = 0; i &lt; 10000; i++) { foreach (var i2 in newList) { total += i2; } } elapsed = stopwatch.Elapsed; Console.WriteLine(elapsed); durations[outer, 2] = elapsed; } } public IEnumerable&lt;int&gt; GetFilteredList(List&lt;int&gt; source) { return from n in source where n % 2 == 0 select n; } and here are the results as I see them on my PC: -----------------: 0 00:00:00.0002111 00:00:02.8458239 00:00:00.6690635 -----------------: 1 00:00:00.0000002 00:00:02.7922608 00:00:00.6712057 -----------------: 2 00:00:00 00:00:02.7832443 00:00:00.6702912 -----------------: 3 00:00:00 00:00:02.8022052 00:00:00.6688635 -----------------: 4 00:00:00 00:00:02.7757771 00:00:00.6677093 So executing that where clause is 5ish times slower in **this** test. In reality, for a lot of code, your point is accurate, but having spent an hour this morning fixing code that abuses these very notions I thought I'd chip in :) 
This is the way to go, unless you want some delayed publish approach then you need to cache.
&gt; No. It's not private. It is private. In your original tio snippet, the Operation() method wasn't marked public, thus, it was a private method. Implementing an interface method as private requires explicit specification, and it's very odd to mark an interface impl private. What exactly is the point of having it in the interface then? The "explicit specification" you link to is there in case your class wants to implement IFoo and IBar and both interfaces have Baz(): interface IF1 { void Operation(); } interface IF2 { void Operation(); } class Foo : IF1, IF2 { public void Operation() =&gt; Console.WriteLine("..."); // error, ambiguous. } In the error line above, you either need public void IF1.Operation(), or public void IF2.Operation(), so the compiler can figure out which interface method you're implementing. That's the reason explicit specification is required.
Good article. The only thing: There are some steriliser vs serialiser typos on your article. Damn autocorrector, I guess.
Oops going to fix that right away 
This is underestimating the sheer amount of Windows-only software that runs on these servers, Microsoft or other vendors. It's not as simple as ".net and MSSQL run on Linux".
"Private" is defined in the C# language specification. It is distinct from explicit implementation. Your example is a good one. Now imagine the `IF1.Operation()` and `IF2.Operation()` have default implementations. The calling code will need to specify which interface on which to call `Operation()`. That's the reason this won't be killed in committee.
Create an infrastructure using the zip file to deploy, update, management website features on AspNetCore. 
if you put in "private void IFoo.Operation() {}" it'll work.
Ah... one of the best ways to know how to protect your stuff is know possible attacks, what I would do if I'm the bot authors is: 1. Automate through the UI components, e.g:using HTML classes and submit elements or Unity game engine components... etc 2. In case I don't have knowledge about the UI components, I will simply automate the mouse and keyboard and act as much as a real player does. For no. 1, yeah you have an issue and you should provide a way of preventing usage of UI components from any external app. For no. 2, he is acting as a real player and you have to restrict features of the real player.
That core clr blazor only using Electron as a rendering engine really looks interesting. Although I'd love to use XAML instead of HTML it seems to be a plausible .Net xplat desktop framework. Really hoping it's gonna be a commited MS product soon. I'd love to code the web in C#
Uno Platform might be more what you are after? Is a XAML everywhere approach: http://platform.uno/ There recent tweet on XAML in webassembly https://twitter.com/UnoPlatform/status/1006553119986208768
Because writing reporting tools is a painful experience that never makes anyone happy. And the people who need reporting tools are businesses that can afford to pay for it.
Oh that seems nice indeed. I'll be following it closely, thanks for the heads up. Wasm really opened a lot of opportunity for non web languages it seems and I am loving it. We'll see how this transition and how MS would take this.
&gt; So for value types that's true, but for reference types it's not. I just don't want people misreading it as it clones the reference type. I know that's C# 101, but it's worth mentioning. No, it's true. Reference-typed values aren't cloned, but their references are. If you have a large sequence of values, this could matter.
For Json serialization, go with this one https://github.com/neuecc/Utf8Json
This is normal its data embedded in the binary for troubleshooting purposes. IIRC you can turn it off with some build switches, check the debug generation options in the solution/project file if using Visual Studio.
Awesome! I will take a look. Using VS2017 Enterprise. It’s always fun trying to figure it where everything is in different IDEs. Thanks for the suggestion. 
I have dotnet\-runtime 2.1.0, the latest version available from Arch Linux's package manager, and it looks like the latest version available for download from Microsoft.
Sorry, the "But..." section should've been indented so it's under the last bullet point. That would've made more sense :) 
&gt; I don’t see any positive outcome of this at all I don't see any negative outcome of this at all. Here's a positive. `IList&lt;T&gt;` could have implemented `AddRange()`
It is a bit stupid to mix docker-compose with separate docker runs. Easiest is to put everything in the same docker compose and run the yml.
After asking around and giving a bit of thought we hope to implement methods to prevent .dll injection or at least detect it. Second, we hope to identify bot\-like behavior in which the input show patterns of extreme precision and efficiency, i.e attacking a mob of monsters with no indication of breaks or delays. Right now they straight up inject into our .dll... so if we can at least push them to a UI\-based bot, we can limit them to more player\-like botting. Thanks for the feedback and ideas.
Thanks for the clarification. Nice write-up, BTW.
What about Crystal Reports for Visual Studio Developers? Anyone used it? AFAIR, time ago this was the "standard" reporting tool for Visual Studio or VB6
Nice one, Carlos. Your article and sample were "straight to the point" if you know what I mean.
WMI definitely needs more libraries that make it easier to use. Can you add a license to the git repo and tag the license type in nuget?
&gt; Of course, in this particular case, the software has enough other security holes that a long password won’t help much Which holes ...?
&gt; Not only that, but the example is a grammatical sentence, which cuts it much farther still. Most (real) people would highly likely end up using something personal for them, largely eliminating a dictionary attack's success, since we all have slang words. For devs for instance we've got ROFLMAO, TL;DR, RTFM - For _"normal people"_ the anomalies are even larger, and basically explodes, and are culturally aware and highly personal in nature. Effectively eliminating a dictionary attack's ratio of success down to 0%, even if 90% of your words are common words, from a common sentence in the English language. E.g. &gt; Jo dude, I am freakin' out here Even though the above sentence is in arguably the _"easier spectrum"_ of the scale, I doubt you'd find dictionaries capable of figuring it out, unless you create your dictionary for each person's password you're trying to hack ... ... which of course would require the adversary to know everything about the user owning the password.
The ones already pointed out to you at length that you haven't fixed properly. And at least 3 others that I know of which haven't been shared with you due to your toxic reaction to constructive criticism, including one so catastrophic that it potentially makes both the length of your password *and* your hashing algorithm irrelevant to someone who has compromised enough of your system. 
&gt; I and others have had this conversation with him ad nauseum. If it's so boring, then why do you continue it ...? &gt; I'm also pretty sure that he leaks password hashes in cookies too, which he then uses for auth I'd check out that link again if I were you ... Hint, what you're looking for can be found [here](https://github.com/polterguy/phosphorusfive/blob/master/plugins/extras/p5.auth/helpers/Authentication.cs#L186). Would there be something more ...? ;)
&gt; The ones already pointed out to you at length that you haven't fixed properly. Yet again, which holes ... Feel free to point to parts of my source code where these holes can be found ... &gt; And at least 3 others that I know of which haven't been shared with you due to your toxic reaction to constructive criticism For the record (not for you, I realize you're probably immune to this argument - But for others reading this), I have no problem with constructive criticism. &gt; including one so catastrophic that it potentially makes both the length of your password and your hashing algorithm irrelevant to someone who has compromised enough of your system OK, so assuming you're right, you'd rather want the good users of Reddit downloading a system with a _"catastrophic security hole"_ and potentially using it for their sensitive data, than to inform the developer and his users about it ...? Did I get that right ...?
Try having your application execute itself using the AD account/password credentials; then update the password.
&gt; Feel free to point to parts of my source code where these holes can be found ... Nope, work them out yourself. If you had properly fixed the ones that had been pointed out already, that would be more encouraging. &gt; For the record (not for you, I realize you're probably immune to this argument - But for others reading this), I have no problem with constructive criticism. "If you studied the code, you'd see that I am not using "single iterations"." - shortly before writing a blog post arguing single-iteration SHA256 is good enough "There is not a single place in Phosphorus Five where the above pattern is not being used. Spending more than 2 seconds studying its code would easily confirm that fact ......Yet again, there's not a single place in Phosphorus Five or its modules where this is being done." - shortly before (badly) fixing a SQL injection vulnerability you'd just denied even existed This isn't even mentioning of course the numerous posts and comments you've made trying to get a reaction out of someone you claimed to have blocked. &gt; OK, so assuming you're right, you'd rather want the good users of Reddit downloading a system with a "catastrophic security hole" and potentially using it for their sensitive data, than to inform the developer and his users about it ...? No, I'd rather warn the good users of reddit away from your software. Your security holes are your problem. &gt; Did I get that right ...? Of course not, You never do.
&gt; If it's so boring, then why do you continue it ...? To mitigate the risk of some poor unfortunate soul believing anything you say and actually using your software. &gt; Hint, what you're looking for can be found [here](https://github.com/polterguy/phosphorusfive/blob/master/plugins/extras/p5.auth/helpers/Authentication.cs#L186). Hint, that's not where the bug is. Keep looking.
No, but that's where the code that double hashes the credential cookie is, proving not only that you're wrong, but that I am able to perceive and understand the arguments of those with constructive criticism to apply ... ... in addition to that it also proves that you're wrong of course ... ;)
&gt; No, I'd rather warn the good users of reddit away from your software You do realize 98% of all Reddit users only read headlines, right ...?
Then those same 98% won't be using your software. not a problem. I'm more worried about the people that engage further.
Except that your double-hash doesn't fix the bug, so clearly you don't understand the issue. To be clear - you could hash it a thousand times, and the bug would still be there.
That's why I also wrote: &gt; You should only use these methods when it’s strictly necessary to cache the values and it’s guaranteed that they always fits in memory. If you need to iterate the collection multiple times and it fits in memory, I do suggest testing if caching improves performance. When iterating only once, I see no reason to do it. When calling ToList() or the List constructor, it will enumerate the collection to copy the data and then this copy is enumerated so data is processed. Of course this second enumeration is much faster, specially if data is remote. When only enumerating only once, there's little reason to enumerate a second time. Process the data directly on the first enumeration. Your benchmark leaves out the enumeration performed by the constructor. I do agree that it may not always be true but I see too many people having multiple copies on the same data. Sometimes one copy is needed but many times one single enumeration is enough. By the way, have you tried BenchmarkDotNet? You'll get more accurate results. It performs a warmup to exclude JIT time, performs multiples tests until getting a stable result and excludes outliers. Check my other article to see how I use it: https://medium.com/@antao.almada/enumeration-in-net-ii-9fd8e72cf83f Thanks for the comment. 
&gt; Except that your double-hash doesn't fix the bug, so clearly you don't understand the issue. [Would there be anything more ...?](https://github.com/polterguy/phosphorusfive/blob/master/plugins/extras/p5.auth/helpers/Authentication.cs#L188) ...?
Yes, there are more. At least now you are attempting to fix things rather than denying there's a problem. Progress at last!
&gt; Progress at last! Thank you for the compliment ... ;) Psst, your mom says hi :D She told me to tell you to send those Marvin Gay records with uncle Buck over to my house ... ;)
I believe if you build the solution in release mode and have the compilation mode for debug set to false it may clear those paths out. I've seen this happen before in the stack trace for an asp.net site when a developer publishes a build with debug still enabled and not release.
Still making mom jokes. How old are you again?
If Excel output is OK for you, you could try \[EPPlus\]([https://github.com/JanKallman/EPPlus](https://github.com/JanKallman/EPPlus)) (it's open source).
&gt; How old are you again? 23 1/2 :) &gt; Still making mom jokes. You invited me to play ... ;) Psst, https://github.com/polterguy/phosphorusfive/commit/dda2595b0d10d4e86b40a336bce99ad6e909b13e Do you want to have credits for this ...? :D
We change then when we have too which is rarely. When you do change one upgrade it across the solution. If you're using mainstream packages you won't see a lot of issues and if you do it should be a compile failure. 
&gt; Do you want to have credits for this ...? No, I didn't find any of these problems. But well done for (finally) listening to what people have been telling you for the last two weeks.
&gt; But well done for (finally) listening Do you want to know a secret? Sometimes people needs _"proper motivation"_ for being able to put in an honest day's work. Even after I wrote this article, /u/Cifize kept on spreading security holes on the net, most of which are now fixed, and the rest are scheduled for being fixed before the upcoming release ... https://gaiasoul.com/2018/06/06/an-independent-security-experts-code-review-of-phosphorus-five/ Exactly how I _"motivated"_ him, is for another day though, but I believe you _"get the point"_ if you want to take the time to read the above article ... ;)
Are you using visual studio?
dotnet watch run
I am not, I'm using a text editor + command line only because I'll be bouncing between projects and frameworks, and I'd rather have a uniform way of working on my projects.
We use / abuse wildcards to allow for updating and as part of our build pipeline we always update as soon as one is released (within the scope of the wildcard). We have good (not great) unit and regression testing. Regression runs weekly (because it takes 36 hours) so while the nightly build I produce might have an update, I don't know that it's 100% safe until regression has ran. 
Clemens Vasters gave me the idea in 2003, at which he said; _"IIS is the most secure web server in the world, it's being debugged by the world"_. No arguably, agreeing with the first parts of that sentence is pretty difficult for me. However, its second parts that it's _"being debugged by the world"_ is quite awesome. At some point /u/Cifize started bashing me, and my work. I quite rapidly realized he was extremely skilled, and for some reasons had a _"horn in my side"_, and had started on a crusade against me, and my work - So I chose to _"nurture"_ his _"passions"_ towards me, for then to block him, realizing he'd stalk me, and comment on everything I posted at Reddit. Then I unblocked him, and started reading through all of his arguments, most of whom were very, very good may I add, and I added them to my TODO. After 4 years of exclusively looking at the code in solitude, it's difficult to see everything. And I long ago decided to use this release iteration to significantly beef up the security of the system. Now arguably, a lot of the issues Cifize commented about where issues I already knew about,and had on my TODO - But he also managed to find a couple of unique holes, which I hadn't been able to pinpoint without his help ... ... I assume the conclusion is that nobody knows you better than your adversary ... ... the question was hence; _"How do I use that resentment to my advantage"_ ... ... and /u/Cifize went in with both of his feet ... :D Thank you Cifize :D
The point isn't too avoid database calls, but to preserve the current state of the UI.
Psst, in case somebody is reading this still ... https://gaiasoul.com/2018/06/13/implementing-blowfish-password-storage/
&gt; I doubt you'd find dictionaries capable of figuring it out Why? This is an honest question. Is it because it has a person's name? The Census bureau, and probably others, publish name lists. How is that different from a dictionary? You could build a dictionary by scraping reddit or urbandictionary to give you all the up-to-the-minute slang you could want.
That sounds like it's along the lines of what I'm looking for. Thanks!
What would you recommend if, for example, you wanted to get a list of drop down items which is stored in the database? We tend to not hard code things as we might want to edit the dropdown list of selectable values from the database rather than editing the logic. Without the ViewState we would need to call the database per each request.
&gt; Do you want to know a secret? Sometimes people needs "proper motivation" for being able to put in an honest day's work. Really? Because it seems to me that she offered up pretty complete breakdowns [here](https://www.reddit.com/r/TempleOS_Official/comments/8b0y2l/i_just_stumbled_about_templeos_and_wow/dzw8l8m/) and [here](https://www.reddit.com/r/programming/comments/8nzgsa/youre_obsolete/dzzq9kb/) without much prompting from you at all. It was other users that spelled out the specifics for you when you denied what Cifize was telling you. If you'd accepted the breakdown when it was presented to you, the last two weeks of arguing would have been entirely unnecessary.
&gt; I have now implemented every single security hole he originally bashed the system for having. However, I somehow suspect he won't be giving me anymore feature requests, or security reports though ... I suspect the same, given how you've reacted.
The view will update but the C# code will not without recompilation. C# is a compiled language unlike Python which is interpreted.
It´s done man. I´ve added MIT license to the project.
We tend to do this post big releases, whenever a release is branched off. So once a year'ish.. 
VS 2017 debugging pause works ok. not for all use cases, but making some changes for methods will work fine once debugging is resumed. Not sure how it works under the covers. My assumption is a recompile of the binary on the fly
Yeah, I'm still coming to terms with that fully -- this just means that with any backend changes the application will need to be compiled again, yes?
The common problem with viewstate is it makes your pages huge and with each postback the client is taking time and bandwidth to send it all back to the server. If it is something like populating a drop-down list you should be getting it from the DB and caching it in memory for some amount of time. You certainly don't want 1000 db calls on each page load, but 5 or so would generally be ok. Of course depending on how long they take, but SQL is pretty easy to optimize in most cases. 
A proper caching layer, you can start with memory, move up to something more advanced like redis
&gt; I suspect the same, given how you've reacted Actually, every time I reacted with a _"mom joke"_, he'd feed me with more, frenetically looking for holes, and spreading them _"all over the place"_. Only after I actually told him my intentions, he started silencing himself. Not sure what I should conclude with ... ;)
I personally don't like using ViewStates for this reason. We've had issues of other developers exploiting them and causing massive page loading times, but we are encouraged to use them to prevent database calls and it doesn't seem like a smart idea to me. \&gt; you should be getting it from the DB and caching it in memory for some amount of time. Is there a specific way of caching data in WebForms? I don't think we cache anything because we use Sessions for this and I've been told to avoid using sessions if possible.
&gt; Because it seems to me that she offered up pretty complete breakdowns here and here without much prompting from you at all She ...? Hmm, interesting ... :) Actually, at that time, we had already been heavily debating _"other issues"_ for quite some time. Check out _"TempleOS"_ sub-Reddit for details. I don't think any of those comments would make it past the censorship regime of this sub ... ;)
&gt; You could build a dictionary by scraping reddit or urbandictionary to give you all the up-to-the-minute slang you could want Because all people have words that are unique for themselves, and their sub-culture, making the art of composing a dictionary literally explode beyond the 150,000 - 400,000 words you'd normally find in something such as the Oxford Dictionary. And this is before we even start counting alternate languages, Spanish, French, Italian, etc, etc, etc ... Yet again, a Jamaican might use; _"Rubadub Rastafari, a dred a step now bomboclock"_. With a dictionary of 20 million words, and a minimum of 8 words per password, contrary to an 8 character password, with 72 different possibilities for each character, the difference in the magnitude of the job becomes literally 40 orders of magnitudes. Sure, you could create a dictionary, if you had access to for instance every single PM and status posting on for instance Facebook or something, but the dictionary would contain probably hundreds of millions of words, and hence require a computer (_literally_) the size of our Galaxy to be able to create all possible permutations, up to say some 8 words or something. Hence the job would arguably be little different from creating a dictionary of 25-40 random characters ...
Not sure which .net version you are using but this should get you started https://msdn.microsoft.com/en-us/library/18c1wd61.aspx
People are working on better tools for this. See e.g. nuget tools listed here: https://github.com/AnthonySteele/dotnet-tools The default state of infrequent updates when someone can be bothered, and without a feature requirement for it, is frankly a poor one.
Thank you very much. I also found another Microsoft page giving [an overview of application vs output caching](https://msdn.microsoft.com/en-us/library/ms178597(v=vs.100).aspx). Sounds like this is a promising solution.
&gt; is frankly a poor one. Why? I don't enjoy unnecessary mysterious changes. 
&gt; She ...? Hmm, interesting ... :) Sounds like a feminine username to me. Do you know otherwise? &gt; Check out "TempleOS" sub-Reddit for details One of the links I gave you was from the start of a TempleOS thread.
Put the state on the client side.
&gt; Do you know otherwise? Well, it when spoken in Norwegian sounds like you're saying; _"say fart"_. &gt; Sounds like a feminine username to me. Maybe it was prejudice on my part assuming she was a he ...
Redis looks very interesting. A bit overkill for now but I will definitely give it a look.
I don't enjoy tracking down bugs, only to find that it was fixed in a library 6 months ago. 
Can you do this in MVC? The point is that I currently do this in WebForms but I want to know how MVC does this without the ViewState component.
*shrug* maybe. Not important.
&gt; Why? This is an honest question. Here is an example of two passwords I might have used myself, being a developer and a native Norwegian. _"Heisann Tjommisen min, ka farsken, har du drukke opp all karsken?"_ 5 of the above words doesn't even exist in _any_ dictionary, because they're not even actual words, but slang extremely localized to my place of birth - North Norway - And have a potential usage among some roughly 2-400,000 people. Here's another password I might choose ... _'for (int idx = 0; idx &lt; 10; idx++) { cout &lt;&lt; "Thomas is cool"; }'_ Both of the above passwords would be ridiculously easy for me to remember, and retype exactly, without making a single mistake in the process. Try to create a 25-40 character long password containing _"DSjd$#54hªı$#"_ and see if you can remember it ...
You _should_ be right I guess ... ;)
I am actually on your side with respect to pass-phrases, and I think they're a good idea, but I still think you're overestimating how much security they provide. You've demonstrated how difficult it would be to brute-force one by making a number of assumptions that aren't always true. And you wouldn't need a computer the size of a galaxy. Here's a python program that will generate more values even than the quantity of pass phrases from your example. (10^40 if I'm reading it right) This program could probably run on a toaster. It would just take a long time. n = 1 while True: n += 1 When it comes to security, my default philosophy is that the attackers are smarter than me, so if I think of a way of attacking a system, I try to remember it's not the only one. So I understand the computational difficulty in the personalized dictionary attack you've outlined, but that only establishes an upper bound. I don't think either of us will be convinced of anything. Neither of us probably has any convincing evidence. 
&gt; Try to create a 25-40 character long password containing "DSjd$#54hªı$#" and see if you can remember it ... I wouldn't try to remember it. That's what I use LastPass for, but I take your point. 
So far for a small shop with lots of independent apps the rule of think is: When you HAVE to. Unless the update is for security or a feature I was dying for, it can sit.
Some packages (eg Newtonsoft.Json) are very reliable and we update them whenever we notice a new version. Other things only get updated when we notice an issue that would be fixed with an update. Some have huge numbers of dependencies that they update when they get updated, we try not to update these unless we have to. "When we notice" :S If we had someone dedicated to build management and a QA department to check before each release, we would probably try to keep things as up to date as possible. Still, we don't want to build on a house or cards, reliability is important: We have a solution using MySql, when I upgraded to .Core 2.1 and EF Core 2.1, the MySql didn't work anymore so we had to remove the meta package and manually add the nuget packages for EF Core 2.0 
&gt; but I take your point Thank you. I think I have already taken yours too already ... ;)
There are out of the box caching providers for .net that use redis as backend. You just have to configure connection string, you don't need to understand redis api to use them. 
Ratio of my bugs vs. library bugs is ~250:1. And when that happens, a quick google for the error tends to point to the fixed version. The other tow reasons you offer are kinda "meh". So a bunch of references upgraded, so what? So people don't need my work, so what?
You could potentially leverage client side browser local storage features to cache on client side of your site is not an spa. But that involves bunch of js which I would avoid unless you're trying to extra optimize (in which case spa is a right fit anyways) 
One of the main sources of problems with WebForms is that you can pretty much do whatever you want. The view state should only be used to hold state for the view, not as a cache. The data you put in viewstate needs to be posted back to the server on each request and then gets served back to the client. That can use a lot of bandwidth. Complex objects in the session tends to become an issue when you have multiple servers. 
&gt; I am actually on your side with respect to pass-phrases, and I think they're a good idea Thank you :) &gt; but I still think you're overestimating how much security they provide Maybe, but anything that's an _improvement_ is worthy of consideration I believe, which was my main argument here I guess ... &gt; This program could probably run on a toaster Sorry, I didn't get that ...? I mean it creates numbers from 1 to ... sure, what does that have to do with passwords and creating a dictionary ...? &gt; When it comes to security, my default philosophy is that the attackers are smarter than me I think that is a good philosophy :) &gt; but that only establishes an upper bound I guess my idea was that this _"upper boundary"_ is moved to such an extreme extent, it becomes _"ridiculously high"_, to the point of _"oblivion"_ ... In theory, you might imagine people using entire chapters by Shakespeare's Romeo and Juliet, translated with an old version of a bad translation software, from its Greek value, to Icelandic. Of course, that would be a bad example, and I realize it, since the user would have to have the password stored on disc somewhere, or spend 15 hours typing it per client - However, it provides the point of plurality. The statistical probability of having each user create an extremely secure password if we encourage our users to use sentences, becomes so high, that the _"average"_ security on the net as a whole, would increase (probably) several orders of magnitudes. And we know, that when one of us are secure, this makes more of us secure. And when everybody is secure, nobody are insecure ... Security also have _"network effects"_, such as for instance if somebody can hack my email account, I might have sent _you_ an email, quoting parts of _your_ email(s), and hence without even knowing it, given away _you_ while giving away myself ...
&gt; I don't enjoy tracking down bugs, only to find that it was fixed in a library 6 months ago. That's an annoying one, but what I find even worse is tracking down bugs, only to find that it was created by a library that we updated yesterday. &gt;I don't enjoy trying to apply a necessary update, and finding that I have to update the world and fix all of the resulting issues because no packages have been updated for a year. If all those other package could have been updated without issues, maybe people would have updated them sooner 
You could use [Syncfusion's SFReportViewer](https://www.syncfusion.com/products/uwp/sfreportviewer) for actual RDL/RDLC viewing. Or if you're willing to use a different template format, you can use [GrapeCity's FlexViewer](https://www.grapecity.com/en/blogs/flexviewer-for-uwp). Neither one is cheap, much less free. You can also use the standard ReportViewer control (either Winforms or Webforms) in a "headless" fashion. If you instantiate it in your code instead of plopping it on a visual form, there's no reason you can't use it just like any other .Net object in your app. The Report.Render() (from either ReportViewer.ServerReport.Render() or ReportViewer.LocalReport.Render()) call returns a byte[] containing the final report output. For server-side reports, you have to check what the server supports (usually HTML, Excel, Word, PDF, Image, CSV, and XML). For client-side reports, you can have Excel, Word, PDF, or Image. ([MSDN documentation for Report.Render()](https://msdn.microsoft.com/en-us/library/dd496959.aspx)) From there, it's a pretty simple matter to display an Image in your program.
&gt; even worse is tracking down bugs, only to find that it was created by a library that we updated yesterday. I am going to disagree there, something that happened yesterday is always easier to work with. One of the points of small frequent releases is that they contain few changes, so it's usually pretty clear which change broke things.
&gt; So people don't need my work, so what? Might as well stop coding then. Go home, watch TV. 
&gt; If all those other package could have been updated without issues, maybe people would have updated them sooner I would rather say, if it was easier and less effort to apply those updates and find out if they're good, then maybe people would update them sooner. Small changes deployed often are good, packages are no exception to this idea.
For product to the customer, it's quite rare. We like to have a known stable system. Updating can sometimes cause new dependencies. It may require other developers to update their projects as well. It becomes a large coordination process for us. We also need to remember to update the installer with all of the latest files and add any new dependencies. For the backend services or internal applications and web projects, I am much more likely to update these. Perhaps every 6 months or so. Though I sometimes run into issues where some packages won't update. But I will tend to update things like JSON.NET and jQuery/UI when I remember to look for updates.
Even better. I'll research some provides, thanks. I'll stick with page caching and application caching for now because I don't yet see the benefit with upgrading beyond that but I'm sure there are good circumstances where it becomes necessary to find better alternatives.
You're right, I tried to couch all my assertions with the specific cases where it's really bad. Your article is not bad. As mentioned, I spent time the other day dealing with similar problems. Honestly I think it's a problem with proscriptive learners more than anything. I'm constantly having to be careful not to say something that suddenly becomes lore in that person's head :) I warned you it was potato code, but yes Benchmarkdotnet is good. I use it in the office for things. I really wanted something that could be copypasted into file without having to nuget stuff or worry about anything (even the quality of the code :) ) :)
Yes :)
I think its a pain point that could lead to a conscious effort to stay a couple versions behind :(
Yeah I usually only use local storage if using an SPA framework (only used angular in the past). I'm liking the sounds of user control, or page, caching as a solution for WebForms though (as well as individual key/value pair caching). 
Agreed. I think my boss is using ViewState in a very bad way and has taught me some bad habits (it being my first job) and only just starting to realise that we should be using the Cache object for this sort of thing. ViewState has caused us so many issues with bandwidth which has caused me to hate using it and now I'm trying to find alternatives.
I made a project in MVC4 years ago. It’s still MVC 4. Upgrading sounds fun but why. It works. I do tons of Dotnet Core but some are still 1.0. So? It works. I have over 50 separate projects across several companies to manage. I would spend my life upgrading and dealing with API change hell. Things like AngujarJS to Angular(6) ? What. Why. It’s not even the same stuff any more. If you make your own internal packages then that’s different. Those gave zero dependancies usually and usually you need to upgrade those because some internal stuff changed and shits broken with people panicking. If it works don’t touch it. 
to
We try to update to stay current, but have been severely bitten by this. It's one thing when API changes, it's another when behavior changes silently. For example Automapper screwed us over several times over the years. Unless you closely follow a library, it's not an easy task. I guess if you have amazing unit testing and even integration testing, it's pretty dangerous.
I strongly advise people do it at the beginning of every release cycle so we have time to fix and test. I've had tech leads wait until forced to by a bug. But when you're several versions/months (or years) out of date it becomes a huge hassle. 
Too much absolutes coming from you.
If at all possible, migrate your projects to the 2017 format. The transitive references alone will make your life so much easier in this situation.
which db? sql server, mysql,...? autoincrement or normal int column? possible solutions: select max(col) from table @@identity scope_identity
With version control you can always roll back an update to a more stable version. Paket helps to keep the whole solution in synch (or shared imported project files)... Combine the two and you can do routine incremental updates, but then lock &amp; comment anything that's giving you trouble, and fire off a work item about it. No sense in upgrading into trouble or falling so far behind everything is deeply broken in the :latest version of multiple libs. 
1) yes, asp.net core and asp.net mvc5. However a lot of the concepts are transferable. MVC concept is in both, as well as routing, IoC, C# features, razor pages, etc. A few key differences are: MVC5 uses Katana as its OWIN implementation, while ASP.NET Core uses Krestel. ASP.NET Core is lightweight and you only load what you need in startup.cs-&gt;configuration, where ASP.NET MVC has a much larger base framework it loads. If a company is specifically looking for asp.net MVC5 talent, then it's most likely to augment their existing project / team that's already using asp.net MVC5 framework. I'd say there's absolutely nothing wrong about learning ASP.NET Core, as long as you also take the time to learn the differences. A good company would look favorably upon you knowing ASP.NET Core AND knowing the high level difference in MVC5/ASP.NET Framework, while a smaller company may not.
Sorry if you've already heard this or are happy with your current setup, but consider checking out VSCode.
If the application is not running as the user, but the user is authenticated already, you can get the WindowsIdentity object and call .Impersonate to do this. Of course if the app itself is running under the user account you want to change it is unnecessary to impersonate yourself! But since the user is entering a username this might not be the case I guess.
I trust most "big" packages because they are often good at versioning and/or will let you know when there are breaking changes. Packages I update without batting an eye would include AWS SDK stuff, MySQL, NewtonSoft.JSON, and most all Microsoft ones. Usually if there is a significant/major version upgrade I will check GitHub to see if there's any breaking changes reported.
Cool, thanks for sharing the solution. The file should also have showed up in the Resources.resx display where you could have exported it from (and in fact it should have been on disk in the Resources directory), assuming dotNet Peek exported resources the same way Visual Studio projects organize them.
&gt; .Impersonate to do this I like this approach better
On a Xamarin project the answer is NEVER. Once you get it working don’t even look at it. 
Make sure you have the Microsoft.Exchange.WebServices nuget package installed and referenced. Make sure the EmailMessage object you're creating is a Microsoft.Exchange.WebServices.Data.EmailMessage type. What type of project are you putting this code in? 
What he said. 
Hey. Thanks for the link on tooling. Tooling definitely needs to improve here. For example we haven't found a way using nuget.exe where you could specify the packages you want to ignore in some project. Could be done using update-package cmdlet, but that's bound to VS. Unfortunately also we're on .NET Framework, so not sure how much evolution will be there on tooling. Also really had ```Newtonsoft.Json``` in mind when I was writing the post :) I don't consider it a "behemoth", since I never had any issues updating it. Such a nice library to work with. It really gets more tricky with frameworks than libraries when I think again. &gt; Is he selling a tool for that? I don't think so &gt; The automation of the updates to third-party components and their integration in continuous software delivery pipelines is a much preferable solution. Yeah, this sounds a bit magical, since there can be braking changes in APIs. I'll try to do something close to that. Script that updates packages across solution, checks if there are some packages that require consolidation (e.g. something went wrong when updating package X in project Y). Then if all good, run msbuild, nunit-console and if all green, commit &amp; push the changes. 
I say keep it simple. Use only the one class that represents the table record. Item PriceLevel Price Not sure about non-Core, but in EF Core (which I highly recommend you use assuming this is data from a database) I can just make a class like so: public class Item { public string Id; public char PriceLevel; public int PriceInCents; } Or whatever. Bam, EF Core figures out the schema for me (though I need to declare the primary key in the database class' OnModelCreated or whatever it's called). There's not even a base class I need to use. So I can reuse this class outside of EF with no consequence. In this case I can grab my enumeration of Item using a LINQ query, for example .Where(x =&gt; x.Id == "Item1") and display it or whatever. But yeah the problem is still going to be updating the table. You have a good primary key though so that should help out immensely. (Side note: even though you have a primary key with Id and PriceLevel, you might need to make the Id column indexed so the query for display is fast on its own) I would try: db.Table.First(x =&gt; x.Id == blah &amp;&amp; x.PriceLevel == blah2).PriceInCents = price; And just repeat for all 7 and then db.SaveChanges(). Or if the user can add/remove price ranges: db.Table.RemoveRange(db.Table.Where(x =&gt; x.Id == blah)); // Assuming a is an array of prices and we can just generate letters for them incrementally char level = 'A'; db.Table.AddRange(a.Select(x =&gt; new Item() { Id = blah, PriceLevel = level++, Price = x))); db.Table.RemoveRange(db.Table.Where(x =&gt; x.Id == blah)); // Assuming a is Dictionary&lt;char, int&gt; db.Table.AddRange(a.Select(x =&gt; new Item() { Id = blah, PriceLevel = x.Key, Price = x.Value))); db.Table.RemoveRange(db.Table.Where(x =&gt; x.Id == blah)); // Or just make A an Item[] through serialization on your API, though you have to be careful to check Item Ids first to make sure they match. db.Table.AddRange(a); 
Yeah the moment I saw toy were using a third-party connector that suggested to me to possibly be it. I would suggest in the future testing with MSSQL as well when you have a problem with this to help isolate issues to a problem with EF or a problem with your connector.
You have over 10,000 handles which usually translates into ~10,000 Control objects in your program. There is probably one or two big things using controls, probably generating in a loop or something. Those are what you should focus on. Like others have said, finding a better way to do it with less controls such as a datagrid. Or instead of looping through and making a bunch of the same controls, make one set of controls on a new form and just put buttons or links to open the new form to edit one at a time.
Well actually I think that is a reason, but a minor one. Here are some of the reasons I am aware of that I think are bigger factors: * CSS can style them so you can't use native OS components since they are not flexible enough. * The browser would have to use native OS layering in order to put elements above the components properly and layer things, in addition to managing the OS components themselves alongside the other HTML. So that increases the complexity of the rendering.. * Web browsers are typically cross-platform and native OS controls behave differently between platforms. So the web browser creates its own controls drawn using the rendering engine it already had to make anyway, and they work on all platforms automatically. Exception to the last rule: OS-specific APIs are usually used to get visual styling information for controls so they look like their native counterparts, as long as CSS styling is not applied. So scrollbars, buttons, etc look and feel like their native counterparts.
Pretty much agree for this case. Especially if the project is not really receiving many updates once when in production. 
[edx.org](https://edx.org) has a lot Microsoft sponsored courses. You can always "Audit" the courses too, which grants you free full access to the course. You just doesn't give you the certificate at the end, which doesn't matter IMO unless you take their "mini masters" courses.
There are js libraries that let you sign on a canvas and sage the result as picture. I would do that instead of a Windows solution. 
Cool. This sounds like a success story. I assume you are updating minor versions using wildcards. What about when major version changes? Manual update and off to regression tests?
SQL will do this for you when you add new records on an autoincrementing column. If that is what you want then in EFCore you'd add the following to your OnModelCreating override: modelBuilder.Entity&lt;YourClass&gt;(e =&gt; { e.Property&lt;int&gt;("Id").ValueGeneratedOnAdd(); e.HasKey("Id"); // Only if it is also a primary key }); Then build and generate a migration on the command line. Then as long as you don't set .Id it should work automatically. If you want to know something like "what Id number did the record I just add get"? Don't just calculate the maximum value and add one. If another record is added before you add your new one, your value will be wrong. There is SQL you can use to get the value of the newly added record's auto-increment column. This is only needed if you're not using EF. If you are using EF, you shouldn't ever need to mess with identifiers directly. Just make a relationship between the two tables by adding a property to one of the classes with the type of the other. EF will automatically create and maintain the foreign key so you just need to work with the objects on the properties. However if you need that SQL, here it is. This is MSSQL, not sure if it works elsewhere. Might also be a cleaner way to do it: DECLARE @newId table( id int ) INSERT INTO [Table] ([Column1], [Etc]) OUTPUT INSERTED.[id] INTO @newId VALUES (1, 2) SET @id = (SELECT [id] FROM @newId) Key bit is the OUTPUT part which can grab values from the inserted row after it is inserted.
We have an internal nuget repo that all packages we use are hosted on. If NewtonSoft.Json is at version 7.0 in the internal repo, then that's the latest version available for devs. If you want to add a new package or package version to the repo it needs to be vetted first. 
Yes. Definitely the most painful one in our solution.
Yes, it should remove those in Release mode IIRC. They are included in debug builds to help you find source code locations corresponding to messages or errors.
&gt; Yeah, this sounds a bit magical, since there can be braking changes in APIs Right, the best answer that I have seen is to submit it as a Pull Request, and the build automation picks it up and if it still compiles and tests still pass then you have a bit more confidence. 
Yeah, that's actually even better as you just reuse the whole CI pipeline.
Exactly. 
Agreez, if you are not relying on a big monolith project that is supposed to earn you money for next decade, or maybe three :) I think you tackle it very differently if you are investing in your own product, or you are perhaps an agency that gets paid per project. &gt; Things like AngujarJS to Angular(6) ? What. Why. It’s not even the same stuff any more. That you don't do for sure. :)
Yep - and each team's tech lead has been diligent enough to communicate when they're rolling major updates out in their team's codebase so we don't wind up with the wrong .dll in our products in the end. So this is still human-managed and subject to human-fallacy. Centralizing it in an architect's responsibilities would be one option, but we have opted not to do that at this time.
Fool me onc, shame on you. Fool me twice, shame on me. I don't let nuget update anything now.
Oh, yes, Automapper. Defenetly one of the top ones on the problematic list. There were braking changes on static mapper at some point that even got reverted in next version. Then it was removal of Configure method and probably some more... But now think of getting it all at once. You probably have no idea where to start.
Worst of all they changed how recursive and self referencing mapping works. It's a complete silent change but absolutely breaks your application if you map something like EF model to more or less equivalent DTOs.
First reaction would be "if it hurts, do it more often", but this doesn't actually work in practice where Nuget packages aren't updated at all, ever, and even operating systems and backend services can easily go without updates for half a decade or more. Same thing with Docker images. This is a problem in the case of bugs but plain dangerous in the case of security vulnerabilities, where we very probably don't even know about them until it's too late or the CVE has a marketing department and a website. So I'm leaning towards just admitting that we're lazy bastards playing Russian roulette with our customer's data, and looking at integrating vulnerability scanners into the build pipeline and into the runtime environment. Which is of course work that doesn't directly add value to the customer, so good luck convincing everybody on allocating engineering time for that, since we're agile but not really agile.
Assuming that you have teamcity/travic/Jenkins configured to build and test pull requests, of course.
Dude, recursive mappings? You are a stuntman indeed ;) 
&gt; and looking at integrating vulnerability scanners into the build pipeline &gt; since we're agile but not really agile If you wouldn't mention Docker images, I'd really suspect that we are co-workers ;) 
So I double checked and the exported project did not contain a Resources directory and convert the .resources file to a .resx file leaving the Solution Explorer looking like: * Project * Properties * Resources.cs * Resources.resx * References * Program.cs And when I select the .resx file I see a table with headers Name, Type, Value, and Comment with a single entry.
&gt; CSS can style them so you can't use native OS components since they are not flexible enough. everything you can do in css you can do in wpf/xaml. You can even use css on them: https://github.com/warappa/XamlCSS
Try selecting "Files" or "Other" from the upper left dropdown? I was thinking maybe the Resources folder isn't shown in the Solution Explorer but it is shown for my project so that's weird.
IIRC XAML/WPF does not use native controls though you can explicitly drop them in in some cases.
Well for better or for worse our DTOs are basically a copy of the entities is many cases. So Class has Students and Student belongs to a Class. We then add some other stuff to the DTOs as needed. Anyway it all used to work fine but as of Version 5 of Automapper the implementation changed and nothing worked. None of the basic suggested fixes seemed to work. We're not Automapper wizards so we decided to forgo the upgrade for now and move on to more pressing things. But anyway that library changed so many times, it's a perfect example how blindly upgrading can be quite dangerous.
We run a stack of 13 active micro-services and 20 odd solutions and we check package references with ever PR we make and cross reference it with those in the rest of the stack for consistency. Patch, Minor versions are often "no-brainer" updates and we schedule a "big-bang" approach to breaking change updates if we require the update for features we want to implement or it makes our implementations simpler. We rely on automated integration testing to confirm the impact and risks are "mitigated" We are a team of approximately fifteen and two of us actively maintain the package updates as we "babysit" the whole stack for releases. Other members will update packages as their own personal needs require however. We've had scenarios where our "no-brainer" updates break tests, we then roll back and proceed with the PR and separately will investigate whether we should put in the effort for the updated package. Disclaimer: I did not read your link, I'm just sharing my personal experience.
Never!
Almost every time I open a project. Sometimes multiple times per day.
Oh, yeah, we don't actually use Docker that much, we've basically reached the stage where we know it exists, all the cool kids seem to be using it and we want to be hip and modern too, so surely it must solve some sort of problem for us as well, and wouldn't you agree it would be nice to ship an application and all its backing infrastructure with it? Now we can use the right tool for the job and put our data in Hadoop and Cassandra and Mongo and every other Big Data solution under the sun! Also we're not actually that good with the whole Linux thing, if we have to touch it there's three guys that seem to know it, the rest of us just sort of paste StackOverflow answers into the terminal and Git is really much more complicated than TFVC with the cryptic command line stuff and I've just downloaded this shiny GUI where I can just click 'Commit all and Sync' and it just checks in all the changes to the server with the message "Edit the code"!
This would be my first impression as well, OP. This is the simplest solution and I would scale up to something like cloudflare if the amount of data is getting large or there are other needs. And note, you don't HAVE to prefetch everything on load, timed expired or proactive caching is just as good. Either way you will have a much more predictable load on your datastore.
ABU: Always be updating
I agree. Someone knowledgeable should write a post about this.
Ms SQL server. Not exactly sure for your second question 
Call a web api that delivers the results when needed. Apply response caching server side if needed. Stop doing postbacks for simple page changes. Prefer SPA it SPA-lit.
Do you just want the id to increase each time? If so you just need to make the column auto increment. This is built into most sql servers.
Well, for one, make sure your project is properly covered with unittests. Then have all your own code changes checked into source control, so you can focus purely on updating nugets without losing anything Then just big-bang update everything whenever you feel comfortable. If it doesn't compile at all, see if it's a lot to fix, otherwise plan it in your sprint or something. If it does compile (again), run your unit-tests and see your project still functions. Then try to get everything to be green again. If it takes too much effort to get everything green, and your error messages point to people complaining on github dealing with the same shit, just undo all your pending changes, wait a couple weeks, and try again
I gave up and went back to direct control. I use Dapper for a bit of light weight SQL to/from model in a repository class. Dapper makes it easy (and fast) to insert from a list too. 
i have to more carefully. you have a system.data.datatable? then just use linq sorry on mobile (will not compile) oftype&lt;datarow&gt;().max(r =&gt; r.field&lt;int&gt;("fieldname"))
Performance wise, I'd start by getting rid of EF and write your own queries direct to the MySQL client library. (or use Dapper to give you a bit of lightweight ORM.) I appreciate that EF Core's a lot faster than EF, but it's still pretty abstract and can start getting interesting with many joins etc. The MySQL Connector comes with a caching option for readers too. (Disabled by default.) So you can cache results for sixty seconds for example. (I've never used it.) ASP Dot.net core comes with a few different caching options, such as https://docs.microsoft.com/en-us/aspnet/core/performance/caching/memory . Older MVC stuff can use Partial View Caching with a similar idea.
Thank you! It's definitely appreciated to see the license on a project/package when looking into it.
Yeah I love Dapper but really wanted to use EF Core but I'm about to switch it seems.
Is [start mode](https://blogs.msdn.microsoft.com/vijaysk/2012/10/09/iis-8-whats-new-application-pool-settings/) set to always running?
How sluggish? If you don’t precompile a site, a Webform or MVC razor view might take a couple seconds the first time, but I have never heard of IIS “warming up”... Please do post the cause of the problem when you get it. Also, what are you doing with PowerShell?
I updated some content and added UI. You can more clearly know which features are loaded.
So, here's how I see this. WebForms was invented, back in the day, when browsers sucked, to give the "feeling" of a WinForms application, by building a complicated set of artificial stuff to do rendering on the server, communicate it to the browser, and back again. It was NEVER how an an app SHOULD be written. It was a hack. To work around shitty browsers. Now browser's aren't shitty. So all of the patterns should be discarded, and you should go back to developing web apps the way we've always done rich apps: the client maintains client state. The server serves out requests for data. And that's it. Don't try to reinvent viewstate. It was a hack to begin with. Client state does not belong on the server in the first place.
This is good advice on looking into precompiling your web applications. On a more recent app we've been working, any first call that returned a View was noticeably slower than subsequent calls. Precompiling the site added ~20seconds to the overall build time but completely eliminated slow first calls going forward. Also, uncheck the "Allow precompiled site to be updateable" as this is what causes the .cshtml files to be compiled as well. https://stackoverflow.com/a/16180430/130387 for a slight bit more information. 
Fire up a profiler and you'll be able to determine precisely where's the problem.
insert into MyTable select (select MAX(ID) + 1 from MyTable)
I agree. Enable pre-compile and set the pool to always running
Simply create a sample React project in Visual Studio (.Net Core, ideally), and dig around to see how it all fits together. I'd recommend doing the same with Angular also - it's certainly worth considering, even if you do end up using React. 
Thank you for your comment! Just out of curiosity, I’m not very familiar with .Net core, but would it be a rough transition from web forms if most of my server side code is in web methods?
.Net Core would be a really easy transition for you, I think. In practical terms the framework itself is pretty similar to what you're used to, though you'll need to budget time to get used to it - some things are missing, and you'll probably rely on nuget packages a LOT more than you're used to. The solution/project layout will be quite different to what you're used to. The sample solutions do a good job of setting things out logically, and have simple examples of a few common scenarios (like dynamically loading data onto a page via a controller [web api method]). Dig around, make changes, and if you break it just nuke the sample and recreate it :) If you used AJAX then there's a chance some/most of your web methods may be ported to Controller methods without too much fuss. Hopefully your existing methods produce json? 
[https://www.forbes.com/sites/laurencebradford/2017/11/27/nyc\-or\-sf\-where\-to\-live\-based\-on\-the\-tech\-job\-you\-want/#fda760c5c396](https://www.forbes.com/sites/laurencebradford/2017/11/27/nyc-or-sf-where-to-live-based-on-the-tech-job-you-want/#fda760c5c396)
LINQ is a great tool for streaming data into expressions rather than statements. I find myself using LINQ over foreach statements 90% of the time.
What type of profiler? Is there a specific one, like how there's SQL Profiler? Sorry I'm not familiar with those tools.
Not too sluggish, you can tell the website is loading something whereas it's normally very snappy. It's not a caching problem, as all the data is already cached at the time of the deployment. As for PowerShell, just simple Invoke-WebRequests to hit various endpoints.
Yep, it sure is.
I work in primarily C# and there are still a good deal of jobs. Not as many as other stacks, but they are still there.
So did you check the pre-compile box and uncheck the allow site to be updated box when publishing it? That is probably what is going on.
They do produce json! Thank you so much for your help :) Ill start working with some examples!
Thanks for your insight! I'm not entirely sure which boxes you are referring to. I will check the settings tomorrow morning
I would not be afraid to leave your wheel house. You won't be able to run as fast in the beginning, but you have a ton of experience in problem solving with different languages. I do love C#, but I do think you need to need to be a decent javascript developer anymore unless you are purely working on backend services.
a lot.
We're in a similar boat having picked Pomelo as our provider. We're leaning towards migrating our DB to sql server since that tends to stay in sync with the main netcore updates. They're not kidding about this bit: &gt; **Important** &gt; EF Core providers are built by a variety of sources. Not all providers are maintained as part of the Entity Framework Core Project. When considering a provider, be sure to evaluate quality, licensing, support, etc. to ensure they meet your requirements. Also make sure you review each provider's documentation for detailed version compatibility information. https://docs.microsoft.com/en-us/ef/core/providers/
Well there are indeed multiple types of profilers. In this case you need a code profiler. If you can reproduce the problem locally it's easier to do anything you want without worrying about wreacking havoc in production. So for profiling locally I'd suggest [Prefix](https://stackify.com/prefix/), which IMO has a very good balance of data and ease of use. You can get started with just a few clicks.
Awesome thank you! Yeah I'm running this entire profiling tool on a machine, far from production. No need to risk anything. Although this "warming up" IIS sounds like a fundamental IIS issue. 
LINQ makes my life as a C# developer 1000x better. Some things are made so simple with LINQ it almost feels like I'm cheating. Almost.
&gt; Ever since I started working for my current employer (my first real programming job) I keep trying to understand why WebForms (what we currently use) tries to avoid multiple calls to the DB by using ViewState to hold data temporarily. Close, but wrong. ViewState is used to maintain the state of the view: combo boxes, text boxes, dynamically loaded controls, etc.. **A page refresh is an application restart.** Yes database data is part of it, but beyond that the WebForms life-cycle requires view-state so that you have the illusion of not reloading restarting the application every time someone hits a button. ***** The solution in modern application design is to literally not restart the application. We're talking "single page applications" such as Angular. Or even just using REST calls in a MVC page. Anything to avoid dumping the whole program and reloading it. 
You're welcome. There's not much "warming up" in IIS itself, it comes from the application for the most part. There is some initialization here and there but nothing that would last for more than a couple seconds. Razor views compilation could very well be the issue here. However sooner or later there comes a stubborn problem that doesn't want to go away, having relevant data comes in handy then.
So much of EF I can't figure out good practices. How do I model entities so I won't have to worry about lazy loads or exceptions because of unloaded navigational properties? I eager load, but how to make sure that entity X is always loaded with its navigational properties every time? And what if I have a second entity that needs X but doesn't need all of X's navigational properties loaded? How do I have any confidence? And calculated properties - is there a good story for those yet?
Might be worth taking a look at [aspnetzero](https://aspnetzero.com/)
 &gt; For example we haven't found a way using nuget.exe where you could specify the packages you want to ignore in some project. If your project files are using the `PackageReference` format instead of packages.config, you can apply msbuild conditions to the property group that contains the nuget packages. These conditions can use your custom properties that your CI build configures before the build or use a built-in property like `$(Configuration)` to determine which packages to build in whichever configuration.
Cool. I rebuilt in release mode after cleaning and removing the debug references that I could find. Something about a pdb. Then recompiled. Hopefully that fixes it. 
The pdb contains the mapping to the source code IIRC. Removing this will probably remove the source code references, but building in release mode is always a good idea to make sure all optimizations are enabled, and any debug-only code you put in is disabled.
Bay Area is pretty hostile to Microsoft in general. Switch to Java, Go or Ruby, .net is much more valued on the east coast or in the mid\-west. 
We tend to use EF for migrations and Code First approach, then really only use Dapper with AutoMapper and it works well.
Tons in Sacramento
Good explanation, thanks. The problem is that WebForms seems to post a lot of stuff back with event handlers, like on selected index changed, or when clicking any button. I think I should just try to use JavaScript more.
I think the reason for me is that line conveys intention better. I use linq to find or transform the data I want, and loop constructs to process it. Now I cringe when I see or I'm forced to use loop constructs to _find_ the elements I need.
That's my ideal setup and I have done that a lot in the past but my current project at work requires WebForms unfortunately.
i think its just the bay area, in socal i've had no problems finding .net jobs although I'm surprised, do bay area governments only use java and oracle db then?I don't recall even seeing government positions using .net 
I have honestly barely ever used it, other than very occasionally to query XML documents. By and large, I'm getting back the data I need from parameterized sproc calls, already filtered and in the order desired; I don't often have the need to query, filter, or sort collections in these ways.
The performance and cross platform ability of .NET Core will make it more attractive to start-ups but that will take some time before become reality. 
Come to Europe, millions of jobs for c#. :)
Dapper. Yes.
I've often said this: that LINQ is a poor stand-in for pure SQL when it comes to databases. Now that said, it's perfect for querying object graphs, like you mention doing against a XML DOM. EF provides an imperfect abstraction over tables for emulating that, whereas SQL is the right tool for database jobs almost every time; in sprocs or otherwise. The only real exception I've seen to this was when I was querying a fairly complex sproc that already returned a semi-denormalized dataset. I needed two different datasets from it and rather than force the issue, I got back the set, queried it twice with LINQ and was on my way. Felt nice.
This, there was even an article that came out a few years ago titled "Why we don't hire .net developers" (or something like that) by a silicon firm that stirred up quite the controversy. But yeah C#/.net is not well received in that market.
[I somehow get the feeling the author wants us to share the article](https://i.imgur.com/lO9UScl.png)
I remember when it was introduced. Totally mindblowing, and a massive change to so many coding tasks. 
I'm in the UK, so a totally different job market. However... My experience was quite similar to yours I think. There are .NET jobs out there, but most seem to have requirements around some of the JavaScript stuff that has appeared over the last couple of years. There seem to be very few 'pure' .NET jobs. I did manage to get a C# application dev job, but I have been hitting Pluralsight hard for JavaScript skills. I'm concerned that the next time I'm job hunting, I'll be stuck in the dark ages. It also really doesn't help that most of my web dev work over the last 5 years was in Silverlight.... 
Totally agree! I'm a long time .net developer myself, and I recently started a new gig where I'm using a Macbook and writing Kotlin all day. New OS, new IDE, new Language, new Framework, etc. It was ropey at first, but I'm enjoying it now.
hipsters programmers hate MS, and of course they all live in san fran the mecha of hipsters. so its all jvm. i was at this shitty company as a LOB dev the head architect was a complete idiot, he was going to completely rewrite it in groovy and scala on the jvm. this is old shitty legacy C# / vb.net. tons of it. but the customers love it. it does a lot of point of sales integration with fast food joints where it automatically does their financials. which is highly geared to using an RDBMS vs no sql as its highly relational data. the new CIO who proposed this vaporware garbage, wouldnt even look at the old code, just hired some consultancy to gather requirements, even tho all the devs had been fired by 5 rounds of redundancy. lol. i cant wait till it burns to the ground. he did all this because he wanted a highly scalable SaaS product the retarded thing is, he can migrate that way with the existing .net code, you just need to rearchitect it. which would make a hell of a lot more sense. but uno, hes from san fran... loves node js, despite that asp.net core blows it out of the water. loves nosql, totally against RDMS despite him lacking the understanding of when to use what. hates microsoft, so jvm all the way, throw in some miscellaneous micro services, and uve got urself san fran architect. 
Rather something like AngularJS -&gt; VueJs :)
If you really love software why wouldn't you learn other technologies? 
[Obligatory](https://i.imgur.com/gyU0me4.png) 
i created a veery simple DataGrid, that allowed me to use DataTemplates and Binding. But somewhere in the Virtualizing chain is a memory leak (virtualized items never get cleaned up) (https://i.imgur.com/SuGnn0z.png)[Example]
You didn't specify what problem you are having. There's a quotation mark in front of Conn. Also you are opening the wrong connection object (con.open should be Conn.Open (case insensitive))
I think it's just the area. My company is based out of Maryland and it sounds like companies in that area are struggling to find enough .net developers.
Thanks for your Reply ive edited the post to more accurately represent my issue as for the Conn vs con it is correct in the actual code as well as the [Con.Open](https://Con.Open) is correct in the code sorry for the confusion 
I honestly think it is just because the MS stack isn't free to use. That's why node and all the other opensource stacks are pooular. They are free and can be played around with.(aside from their technical accomplishments).
Perhaps the sqloledb provider is not registered in the Windows registry? Try running this in the command prompt: regsvr32 "C:\Program Files\Common Files\System\Ole DB\sqloledb.dll"
Try "Provider = SQLOLEDB" instead of "Provider = SQLLEDB" which looks like a typo.
You have “Provider = SQLLEDB;”. It should be “Provider = SQLOLEDB;”. That’s why you’re getting missing provider error. 
That looks very interesting, thank you!
Tons of .NET dev jobs in Ohio. 
Create a text file on desktop Rename to .udl Double click Configure it to connect Edit file with notepad Read connection string
Prefix is a Web app profiler and does not show waterfalls or call traces into code, you want dotTrace.
I forgot about that trick - haven't had to use it in twenty years. I love it!
Born, raised, worked as a developer in the Bay Area for many years. As many here have said, .NET hasn't been trendy enough to used in the Bay Area. We can talk about hipsters and whatnot all day long, but it's also a matter of the geography and the organizations that sprouted in the area. That being said: .NET jobs have always been tougher to find in the Bay Area, and they often pay less than other jobs (Java, Ruby, Go, Scala, etc.). I'm a .NET developer because I personally love C# as a language, but I didn't lock myself down to it, and have picked up plenty of skill in many other languages (Java, Ruby, JavaScript, TypeScript, Swift, C/C\+\+, and others). These days, I manage a team of developers (while still doing a lot of coding), and here's my advice, from both a developer standpoint and from a hiring manager standpoint: while I love C# (and am especially excited about what I see as a major renaissance with .NET Core), it would really benefit you to learn other stacks. Don't be afraid to pick up other languages. If you have the fundamentals down, you'll find you can jump between languages much easier, and you'll be a better\-rounded engineer that demonstrates your ability to think more abstractly about problems, solutions, and architectures than just a single language's syntax and framework features. If you're bent on staying in C#/.NET, I'd recommend checking out different parts of the country, if you're able. I'm in the midwest right now (Kansas City) and .NET jobs are all over the place here. Other metros outside of the Bay Area are similar. Another potential option for you: remote. Take a look at some of the remote job posting sites ([Remotive.io](https://Remotive.io), [remote.co](https://remote.co), [stackoverflow.com/jobs](https://stackoverflow.com/jobs), [workingnomads.co](https://workingnomads.co), etc.), as they always have a number of C#/.NET jobs. Lastly: good luck! Job hunts are never super fun, but the reward of progression is great.
What isn't free about ASP.NET Core?
Interesting Thank you, I will look into Dapper as I am not familiar with it and now there are two recommendations. with the application level caching for a site in mind are there any concerns with initializing objects at that level for page consumption? it sounds as though I should be able to utilizing the objects self caching to generate the data set and have it auto update any time the limit is hit which would be ideal but I obviously don't want to hit any performance traps at that level as my resources will be limited and outside of my control. Many thanks again.
Classic asp! On error resume next Memories :)
Do you have any good resources for learning Dapper with Automapper with one to many and many to many relationships?
You sound a lot like me. There is nothing wrong with .Net at all; the problem is the bay area. Adding to all the other on-point comments, bill yourself as language agnostic. You just happen to be deeply familiar with the Microsoft stack and that experience maps to so many different things. I personally embrace my broadness and use it as a factor to set myself apart. Understanding the business side as well as development is such an under respected skill mix these days. IMHO, too many companies look for niche unicorns with a single-focus skill set. Lately, I have been marketing myself as a technology engineer with a focus on data engineering. Ironically, a bay area company was very interested so I know the jobs are out there. While I am sure the right opportunity could come along in the bay area, you may want to consider being open to relocation. 
Hosting.
Not really, I just came from a different platform and went with what was already here, but the documentation is decent enough to explain basics.
The EF team was aware of the issue with MySql (they had an issue that they closed after an issue was created for Pomelo) but as far as I can tell, they didn't do much, if anything, to inform the community when they released 2.1
How is node.js cheaper for hosting than ASP.NET Core on linux?
That may have been true before, but not so much now. They've introduced free options that you can play around with. And it doesn't have to reside on Azure, so hosting can be anywhere.
For .Net *Core*, they can both be free. But it's still new enough that adoption is low. A large majority of did are still using .Net Framework, which does not run on Linux.
# i tried that thanks but i get this error # [DBNETLIB]ConnectionOpen (SECDoClientHandshake())ssl security error 
&gt;i changed to SQLOLEDB and i got a new error thanks "invalid connection string attribute" 
&gt; SECDoClientHandshake())ssl You need to update your SCHANNEL
Please also check aurelia and intercooler.io
That trick helped get me a job about 15 years ago; I'd never come across anyone else who knew it before.
I see Integrated Security AND a username and password in your connection string. I’m not at a spot to test, but can you have both options at the same time?
Omg, I’ve never heard the phrase “Code Artisan” before but that’s hilarious 
LINQ makes code more readable by encapsulating the mundane and exposing the juicy bits.
i'm new to asp.net core/ef core... is it really such a pain?
Provider=SQLOLEDB;Data Source=server;Database=db;Uid=username;Pwd=password; Not that I'd ever admit to having classic ASP still running, but if I did, I'd be using that connection string. As DSimmon mentions below, I think it's your combination of Integrated Security and a username/pass.
Thanks for this! I tried out Prefix, upon initial loading it was compilation for 10 seconds then 1 second or less for the .Net calls. Unfortunately, it wouldn't let me dig in any further into this compilation.
Not crazy about the android framework but the Kotlin language is pretty awesome! C# 8 will include a lot of kotlin type features ie null safety, default methods in interfaces, pared down switch syntax and return expression, data classes - man really starting to miss my kotlin days. Are you using it for android or server side development?
Right. All of that postback stuff is a hack, in order to make it feel like a Windows app. Server side events for client clicks? Wrong. That should be on the client side.
Which checkboxes are you referring to? I don't manually publish our application
https://msdn.microsoft.com/en-us/library/hh475319(v=vs.110).aspx
Make sure you are doing precompile and uncheck allow precompiled...
&gt; Xamarin yeaaah, it's not just the packaging, the whole ecosystem is bad. foreg, I hack the java.interop right now, but I can't make any pull request to their git, because It would break their "standards" and everything is a mess/ 2012 un\-updated code, with net framework **4.5**.. I can't wait for the CoreCLR arm32 anymore!! I really want to drop the current Xamarin into the trash and start a new interop with the coreclr without mono
FINALLY!
&gt; 1) Linq is clean and simple. It's cleanish but will bite you when you screw up. And yet another article is claiming fewer lines of code = better code. Seriously... &gt; Linq syntax is unique no matter the data source. I'd go with "the same", although this isn't really true as certain linq providers will support expression tree evaluation that others don't. &gt; Reactive LINQ Doesn't exist. Rx is not LINQ. Similar in some respects, but not LINQ. &gt; spam including: List&lt;int&gt; myListOfNumbers = new List&lt;int&gt;(); myListOfNumbers.AddRange(new int[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }); myListOfNumbers.ToList().ForEach(c =&gt; { //Perform apropriate action }); Worse example ever. THIS IS NOT LINQ, it's not even following the sort of stream based processing, pseudo functional approach that is linq. btw. Use Enumerable.Range(1,10) to save some typing. 
The problem with this is The idea came from Java\-ish interface... and this is bad When you're developing a language, you don't adopt other languages features... You have to improve your own language based on existing features...
There's a little Android, and a lot of server-side stuff. I'm using Idea (from IntelliJ, the ReSharper folk) and I'm really enjoying working with it. Basically, if I'm not sure how to do something, I try it first how I would do it in C#, then if that doesn't work, I try it how I would do it in Javascript. Between that and the intellisense, I can usually figure it out without having to hit Google. I've been surprised at how quickly I have picked it up!
I use ADO.NET :))))))))))
Found it. Thank you!
So here's the msdn explanation of it: &gt;Allow precompiled site to be updatable &gt;This setting corresponds to the –u option of the aspnet_compiler.exe command. &gt; &gt;If you select this option, pages and user controls (.aspx, .ascx, and .master files) &gt;are copied as-is to the target folder and can be updated as text files without &gt;recompiling the project. Otherwise, the HTML markup for pages and user controls &gt;is removed and compiled into the assembly output. " Just so I understand correct and I apologize if this is a stupid question, but setting it to false (unchecked) forces all of the pages and user controls to be compiled into the package, *therefore* all of the pages and user controls will get loaded when IIS initially load, correct? 
They get compiled into the sites .dlls. Not sure when those .dlls are loaded into memory, but it’s faster than IIS having to read a file to get the markup.
im not sure ether ive never Tuched anything like this before though the thinking right now is i need the right user id/ password 
For deep digging into a call stack Prefix is not the best tool for the job, that'd be more Jetbrains dotTrace or Redgate ANTS. However that's a pretty strong hint towards view compilation, you might want to try to precompile the site and see if it solves the issue.
I disable cascade deletes because we had issues with imperfect relationship definitions (Nav properties) deleting the wrong things. (A delete category deleted all the things using the category instead of generating an error) protected void DisableCascadeDelete(ModelBuilder modelBuilder) { var cascadeFKs = modelBuilder.Model.GetEntityTypes() .SelectMany(t =&gt; t.GetForeignKeys()) .Where(fk =&gt; !fk.IsOwnership &amp;&amp; fk.DeleteBehavior.IsIn(DeleteBehavior.Cascade, DeleteBehavior.ClientSetNull)); foreach (var fk in cascadeFKs) { fk.DeleteBehavior = DeleteBehavior.Restrict; } } static public class StructExtensions { public static bool IsIn&lt;T&gt;(this T source, params T[] values) where T:struct { return values.Contains(source); } }
Got it. Now if I do that, those are files are then non\-updatable. So if I wanted to make them updateable, is there anything wrong with setting "updatable" to "true" in the PrecompiledApp.config? If the " allow precompiled..." is checked, the "updatable" value is set to "true".
Yeah it appears that's where all my questions are heading. I'm giving that a whirl right now. 
sure, but silicon valley isn't going to switch overnight. these changes have been in the last few years.
No one said Rx is LINQ. Rx extends LINQ, that is what is said in the article 
Have you tried the sort of options described here? (They are trying to force 1.2) https://stackoverflow.com/questions/22254763/wcf-using-soap-1-2-generates-wsdl-with-soap-1-1-reference 
Utilize IQueryable. Schedule SQL jobs for generating your report data. Use an ORM with IQueryable to query those. Just my 0.02.
Define “does not like spaces”. What specifically is the problem? And how about having this rewritten in, say, ASO.NET?
I just haven't found much useful documentation on best practices. I can get things to work, but it seems so much more like Frankenstein code than when I was working with Node. I came to ASP.NET to write enterprise apps, but I just can't figure out good data access techniques.
Rx does not extend LINQ. It doesn't use the same codebase but is shares some DNA perhaps. It looks sort of similar, with its fluent interface. It doesn't extend LINQ, it isn't LINQ. It's like arguing French is English because we both like a sandwich. 
A lot of our report data is being generated nightly and placed into our data warehouse, but we still have to query and join the data to get meaningful output. As such, we have varying filters to apply.
When is hosting ever free?
Focus on Angular. The amount of the .NET you need to know to setup a basic web server is trivial by comparison.
Not too long ago, we tried creating a new site with a VS templates and Docker support enabled but it didn't work. We have someone with a bit of Docker experience and he got things working by building all the docker files by hand
So lets say it is looking at a folder in: \\server-1\data\client data\company1 - 2017 no go. We discovered the no spaces thing by making it look into a folder with a path like: \\server-1\data\test\folder and that worked just fine. Any folder that had spaces just won't pick up. As much as we would love to rewrite this; we are a pretty small team here and we can't afford the luxury of time required for a rewrite without users yanking us to fix a bloody printer.
not exactly what you asked but maybe this helps [https://www.pluralsight.com/courses/aspnetcore-mvc-efcore-bootstrap-angular-web](https://www.pluralsight.com/courses/aspnetcore-mvc-efcore-bootstrap-angular-web)
Thanks for this, this seems a lot more relevant to me than the courses I found on udemy and basically uses all the same technologies I'll be using on the project. 
you're welcome mate :)
added this to my bookmarks, then I noticed it's already been there
added this to my bookmarks, then I noticed it had already been there
Your can also check out this resource i found a few days ago. [Link](https://codecraft.tv/courses/angular/). This teaches you angular 2+. I haven't had the time to start it yet, but i thought you might benefit from it.
Condescending, rhetorical question having nothing to do with the topic... found the code artisan. :)
&gt; I've often said this: that LINQ is a poor stand-in for pure SQL when it comes to databases. I mean, when I read the Clickbait title I immediately thought of the meme "DBA's HATE Him!" Except, in this case, they do, because the SQL EF craps out is depressingly hilarious.
Thanks! 
Asp.net core and .net standard. Use visual studio code. It blows other light weight ides out of the water
`MemoryCache` is a beautiful thing once you put some wrapping around it. Extension methods that take a producer function make it incredibly usable. Even short cache lifetimes (say, 3 minutes) can ease the pain on the DB. *If* you are running on a single server, you can cheat and have any writes to the keyed item in question 'clear' out the current cached value, if that's a concern. As to your original question: - Viewstate: Minimal Taxing on the DB, but a lot of pain on the server and client (Which have to read/send viewstate). It's also arguably the easiest/laziest way to go in Webforms. - Session: Minimal taxing on the DB. This one is actually not ALWAYS terrible, with the caveat that anything involving session will, depending on how it's used, cause all calls to be done in a serial manner (i.e. you can't do multiple AJAX calls in parallel, they will be processed one by one in the order they are recieved.) This is because the session is meant to hold stateful data, and, well, that could change between calls. The size and number of calls can be worse with a more modern approach, or it could be better. Lots of that depends on the design. I could have my application's UI-Facing API just have singular Save/Load methods per entity, or I could have individual commands for updating components as I see fit. 
I write all my queries with iqueyable directly on the dbset where Dbconext lives. I've made it all implement an interface. There's no need for fancy repository patterns. You're just hurting yourself. Whatever u do stay away from the generic repository and the predicate builder
I'm not sure you can get *enterprise-level* Linux hosting for *free* (if you can I'd like to get some), but yeah, Linux is always significantly cheaper.
Write filters with iqueyable. You can build complex expression trees easily if you do this. Just b careful if it's ef core. Lots of features not available that cause in code execution of them lambda
Not having any free options is definitely a major reason the MS stack lagged behind to start with. And at this point I'm sure a lot of devs don't even realize they've changed that, since they're anti-MS now.
What's the reasoning for staying away from the predicate builder? I'm using one I built to bind my EF contexts to Jquery DataTables, and it seems to work pretty well. As for the reports, we're actually not using entity framework. Those reports are using ADO.net and it returns a DataSet object. Not as flexible unfortunately, and I need to modify the underlying queries.
Unfortunately, I'm not sure if we'll be able to easily convert all of these queries to entity framework. Especially since the data warehouse doesn't have any directly defined relationships (due to the nature of data warehouses).
It's much simpler to write complex queries with Iqueyable and much less verbose
LINQ is suited towards way more than just finding elements. 
Yeah, even today I had an issue with it. First of all, my Visual Studio 2017 won't show the SQL being generated, so that was fun. Once I figured out what it was doing, I found it was doing a whole table retrieve and performing the where clause in pure LINQ. Doh... I finally located the offending bits and changed it and now it's returning what I expect. I only needed 1 row, and it was retrieving 4000. I even had a Take method in there to force a SQL top, and rather than given an error because it was forced to do the limit in LINQ; it just derped its way through it. The EF motto seems to be "do any damn thing you have to do to just give a result!". That said, it took SO much longer to do that than it would have just to give it my 5 lines of SQL and go from there. I only really only need EF to automap between objects and rows; that's it. The LINQ code I have to write is MUCH more complicated than the equivalent SQL though. Sure, EF is convenient for simple selects, but throw even a single join in there, much less something advanced like grouping or having and the resulting LINQ gets indecipherable fast.
LINQ allows you to easily project data to a type of your choosing using select Do the joins in LINQ into a DTO (I just call them models) style object that represents your report data. You could even use attributes on this class to specify filterable properties. This gives you a nice object model to work from and a flexible mechanism to filter with. You dont need to have any relationships defined in your report tables to make this work.
This is the point of having an installer. I hope you’re not just handing out application files or just zipping them. You need an installer the runs the driver installer and check the process on it. If possible you might be able to install the driver in silent mode and have your installer capture the progress or any type of errors.
We actually use LINQ-to-Entities in many other places, but unfortunately, due to the structure of the database, linq joins can become incredibly tedious and over complicated for these reports. Many of these queries also do not have direct LINQ counterparts, so it can become a bit troublesome to combine in-memory C# logic and lists to SQL Server datasets. I may take a look at converting some of the code over to LINQ, but I'm afraid it may be ill-suited. 
Gotcha. Totally understandable. Best of luck to you!
Read up on the caching docs at MS. Their implementations are basically in memory cache's that are retained (after the first completed request) for a set duration of time that can be unique based on different incoming parameters. Or you can roll your own of course...It depends how much that level of optimisation is important to you.
Go check out wes Doyle on YouTube
Use Wix or InstallShield and make a proper installer that bundles your driver
I am well aware. I am not in SV, nor do I run a startup there ;)
Has anybody used graphQL for .net?
I'm using this; I have a process that needs a web frontend for configuration and needs to run all the time...so yes technically I am not hosting a website as a service (rather I'm hosting a long running thread) but that's just semantics
imo get out of there, im an aussie, so take it with a grain of salt, but i thoguht about oging to hte US to do dev, and san fran is the no1 place i would avoid. microsoft hate, high cost of living, yeah the salaries are great, but they dont keep up withe cost of living. and i live in sydney!
I currently use Teamcity to do a msbuild and WebDeploy of our solution (git as our repo). If I was looking to Docker as a replacement framework for this, would I be barking up the right tree? Would anyone here have some insight or expertise on transitioning to Docker with a similar setup? 
Well, it worked! Here we are, sharing and gloating over our LINQ prowess! 
https://www.indeed.com/jobs?q=.net&amp;l=Bay+Area%2C+CA Seems plenty to me, no?
If you are deploying within a corporate domain, you could use Group Policy to configure ODBC by PowerShell script.
Eh, Angular is getting a little dated. Vue seems to be the best framework for new development right now, and Blazor is going to take the cake in a few months to years.
I use CS-Script, which allows C# to be used as a scripting language. https://github.com/oleg-shilo/cs-script You can also embed Python or Ruby using IronPython/IronRuby.
F#
I'll second a tip for [WIX](http://wixtoolset.org/),. It's got a bit of a learning curve, but I think it;s worth it for the flexibility. A previous boss used to always remind me... "I don't care if it runs on your machine - we are not shipping your machine" ;)
Try moonsharp 
[@edit's latest tweet](https://i.imgur.com/pT205Xk.jpg) [@edit on Twitter](https://twitter.com/edit) - ^I ^am ^a ^bot ^| ^[feedback](https://www.reddit.com/message/compose/?to=twinkiac)
I totally agree, EF Core + Linq makes old developers feel like that. In the past, we needed 10x the effort needed to do the things now.
i would say the best material to learn most programming is to read their official documentation. https://docs.microsoft.com/en-us/aspnet/core/?view=aspnetcore-2.1
Not really a textbook but maybe a browser book? I have to hand it to MS for doing so well with their documentation and samples. There are some really great walkthroughs on their [docs](https://docs.microsoft.com/en-us/aspnet/core/tutorials/?view=aspnetcore-2.1). Also, the walkthroughs point to samples on GitHub which is really helpful when you're looking for source code. Hope this helps and happy coding!
That's just like, your opinion, man.
F# is head and shoulders above for running scripts and scripting around .NET projects (checkout FAKE and Paket). Exactly right now, on .NET Core, FSharp interactive isn't 100%, but when it gets there it'll be the best of both worlds there, too.
&gt; IronPython Is this still supported ?
May be the next one available, Manning publish great books: https://www.manning.com/books/asp-net-core-in-action
Installed this at work, then stupid antivirus alarms fired all the way to HQ and my computer was quarantined and analyzed with various tools. I've felt I've been under extra surveillance ever since. \*shifty eyes\* Seriously though, the software is all OK, but I don't dare going there again. :D
Its hard to make a recommendation without knowing who your users are and why they would want to write automation scripts. If they are ops guys, then allowing them to write command line (like powershell) scripts probably makes more sense than a hosted language script (unless you want to control the context and sandboxing, like if you are making an editor).
Why not C# itself? Use Roslyn.
I've been using IronPython for some time.
I would recommend pluralsight before any book. You can deep dive into a majority of the framework, and learn by seeing coding in visual studio.
They just released a new version of Angular... AngularJS is getting old yes. And Blazer and web-assembly is years (In my opinion 5+) away.
powershell?
Cake build [https://cakebuild.net](https://cakebuild.net/) 
&gt; To make it clear I'm talking about something like Lua, but running on the CLR. [Like this?](https://github.com/frabert/NetLua)
I was using JavaScript by [ClearScript](https://github.com/Microsoft/ClearScript), when I knew my users knew JS.
[Pro ASP.NET Core MVC 2](https://www.apress.com/us/book/9781484231494)
Beware of any “ASP.NET” book that has a publication date older than two or three years: it is a likely chance that it will be for the obsolete Web Forms instead of MVC/Core. In fact, if it doesn’t say MVC/Core in the title, assume Web Forms.
Barely. Honestly I wouldn't trust anything important to it.
Sounds very easy, but then so is Fizz Buzz which is very commonly used.
Use webassembly
This is probably the icebreaker.
If the only restriction is one pass, yeah pretty easy.
We use questions like this to make sure that you're not blowing smoke when you say you can code. There's no catch. If you fail to do something this basic then the rest of the interview is pointless. It's a fantastic filter.
What are your needs? Are the scripts going to shared in a P2P fashion? In that case there are security concerns. What are your performance needs? Are they going to be grinding large quantities of data, or working in a real-time fashion? Are you going to want to be able to run this stuff in the browser?
I mean in San Francisco, if you show up at a Starbucks with a Windows PC, the staff will kick you out because they'll think you're a homeless.
Vue for the UI and Vuex for the state management. I also like to use Vuetify for a material design https://steemit.com/utopian-io/@alfarisi94/how-to-use-vuetify-and-learn-its-components
Ok so what’s the code look like?
Well, my first pass at it would be: https://dotnetfiddle.net/bw0Dw8 
Ok yeah that's what I was thinking, just didn't want to overthink it. Thanks
I've been using JavaScript with [Jint](https://github.com/sebastienros/jint). It works great.
Yup, I've read nearly every revision of this book from the very first one. It's a good book. It teaches important concepts like Dependency Injection, Unit Testing, and TDD (amongst other things... like MVC!) ;)
 void Main() { int[] numbers = new int[] {1, 15, -34, 123, 0, 15, 999, 3}; PrintMinAndMax(numbers); } public void PrintMinAndMax(int[] numbers) { if (numbers == null) { throw new ArgumentNullException("numbers"); } if (numbers.Length == 0) { throw new ArgumentException("Parameter 'numbers': array is empty."); } int min = numbers[0]; int max = numbers[0]; foreach (int num in numbers) { if (num &lt; min) { min = num; } if (num &gt; max) { max = num; } } Console.WriteLine("min: " + min); Console.WriteLine("max: " + max); } 
It's a big book but you can definitely knock it out in a week or two. It's very well put together.
Have 2 variables that track the current min and max value. Iterate through the items, and for each one update the two variables accordingly.
`static (int min, int max) GetMinMax2(params int[] numbers) =&gt; (numbers.Min(), numbers.Max());`
I'd skip the entire function and use the new ValueTuple var random = new Random(); var numbers = Enumerable.Range(1, 100).Select(i =&gt; random.Next()).ToList(); `(int min, int max) mm = (numbers.Min(), numbers.Max());` As a function static (int min, int max) GetMinMax(params int[] numbers) { return (numbers.Min(), numbers.Max()); } Or even a local function `(int min, int max) GetMinMax(params int[] numbers) =&gt; (numbers.Min(), numbers.Max());` The params array parameter is to ensure deferred execution doesn't create two separate lists. If IEnumerable input is desired, as it often is, overload it and call ToArray Is LINQ cheating?
Nullable number types and checks are a bit new to me with the ? usage. Here's a quick link to help others. https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/null-conditional-operators
Is it missing in the WSDL **only** or in the response as well? 
**one pass**
You're enumerating twice - the question asked for one pass.
Right. It did feel like cheating.
I could have used `Math.Max()` / `Math.Min()` and get it down to just two lines inside the loop. min = Math.Min(min ?? v, v); max = Math.Max(max ?? v, v);
/u/tatsean linked the official docs, I found they were very good and I have less experience than you do.
Hmm.. i can't reach my PC now. I dont know the difference between a signed and non signed timestamp. Do you have time to show? Otherwise i'll look into it somrwhere tomorrow or monday. What if it is in the response? What if it isn't? :)
wow, a good use of ValueTuple is surely what they were looking for. I did something that had a similar signature: ```static int[] GetMinMax(IEnumerable&lt;int&gt; numbers) ``` where element 0 would be the min and element 1 would be the max but your approach surely takes the cake! And yes, linq feels like cheating, tough not entirely sure on whom. Oh and I would stay away from the to array thing since it copies everything over and that kinda kills performance if you're doing anything nontrivial. 
bro with o(n). Nice
The params array is actually quite necessary otherwise you might get completely wrong results. By accepting IEnumerable&lt;T&gt; someone could pass in `Enumerable.Range(1, 100).Select(i =&gt;` [`random.Next`](https://random.Next)`())` If you did .Min() and .Max() on this input it would execute the select query for each call and you'd get numbers from different lists. To prove this, try it by giving it the aforementioned input and return `(numbers.Min(), numbers.Min())`
I now have an urge to write a LINQ extension method that takes an IEnumerable&lt;T&gt; and multiple functions using T that are then evaluated simultaneously while enumerating just once. I think that should be possible.
myArray.Min();
Back in the day when standard C was more of a thing, I used to ask interviewees to re-implement the string library string compare function. There was no catch, it was just to verify that the interviewee could do basic pointer manipulation, loops, etc that were covered in a 200 level data structures class. A depressing number of applicants failed this check. An equally depressing number wouldn't even try to do it.
The greater than if can be an else if in this solution, which would be more efficient :) 
Amusing. I'm wondering what environment shaped your thinking into coming up with this kind of examples :) (You do have my respect though, I would have never thought of that). I think people responded one pass not because they thought of randoms but because it was a requirement. Next we move on to [performance] and to [decent hardware]. They are between brackets because they are relative, not well defined. I too don't worry too much about performance or memory usage until.... your company decides that yeah, azure costs money and that one core 2gb ram VMs should suffice. Also they are the cheapest (imagine the coincidence, right?) Suddenly your 6 million rows fetch from the database causes an "Out of memory exception" something I honestly haven't seen since 97 when my 386 had 4 megs of ram and my skills in (borland) c were not that skillful :) And then you begin to think twice before calling to array :) But again, I'm really impressed with your answer! 
I interviewed a guy yesterday who said he had 25 years of programming experience. He did not even know the syntax of a for loop, or what an enumerable object is.
Bingo. Those are the folks we flush out with super simple questions like this. Most of the time they ask what the catch is and proceed to WAAAAY overthink it to the point of analysis paralysis. Then a recent college grad comes in and whips through it without a second thought.
I have to ask, did his first name start with a J?
Yes, it was Jason.
I just realized that you aren't the OP i was replying to. Were you seriously answering (like, you are a colleague of the OP), or were just guessing at the "J" name?
Serious question, what if you can do this...but basic stuff like this is all you can do, and you then get the job?
Could you do it like this? &gt; foreach (int num in numbers) &gt; { &gt; min = Math.Min(min, num) &gt; max = Math.Max(max, num) &gt; } &gt; 
You wouldn't get the job if that's all you can do. That comes out in other questions later since we don't ONLY ask freshman level questions. We just start with that to see if we're wasting our time right off the bat.
I read that "in one pass" as "not with linq min.max" :)
I'm assuming it's something like [this](https://pastebin.com/jqHnDX3t)
Excellent choice of an array right there :) Not sure that they had a string in mind when they said "finds the minimum and the maximum" though...
You can achieve CS-Script using native Roslyn goodness if you're wary of setting off alarms again. At least if for some reason Roslyn sounds alarms, it's blessed by Microsoft, gives you a little breathing space when explaining yourself.
I assume the instructions would tell you not to use `Math.min` or `Math.max`.
&gt; Not sure that they had a string in mind Yeah, I wasn't sure what type to make it. In the real world, it would be dependent on what was consuming the result. Since it was just going to Console.WriteLine() I decided string was the best choice.
 let minMax min max index array = if index = Array.length array then (min, max) else let current = array.[index] let min = if current &lt; min then current else min let max = if current &gt; max then current else max minMax min max (index + 1) array let minMax array = minMax array.[0] array.[0] 1 array Can probably make it neater with a foreach expression, but I often find it's "better" to think about this kind of problem in terms of recursion.
Nope.
For the exercise I mentioned above, half of the test is to see if you can read requirements and the other half is writing a simple method to address them. It's crazy how difficult it is to find somebody who can do both. And, this isn't difficult. If you know how to use loops, enumerables, and basic mathematical operations, you can do it.
&gt; Use webassembly wat
Years ago had some technical questions/tests like this... I thought it was waaaay to simple and that I had to be missing the point somehow, it was only a few years later that I came to realise it was a filter for those wholly unqualified. In matter of fact I remember having a test to find something such as the max value of an array... knowing I could just use Linq’s Max() method I did, but I had a niggling feeling they wanted me to roll out a for loop with a state variable. Fortunately I believe it went in my favour. 
We usually accept any answer that solves the problem and doesn't take 45 minutes to illustrate. Think of it like a programming equivalent of a sobriety test haha.
What happens when you run in release mode locally?
Would you accept this? array.Reverse()
Have it print out afterwards and yup, we'd accept that.
Treat yourself and use `nameof` in your ArgumentNullException. It's so relaxing to have fewer magic strings in your code!
array.Reverse().ToList().ForEach(x =&gt; Console.WriteLine(x)); When is my start date?
Congrats, you passed more than most of our applicants did haha. The next interview question is probably something about D&amp;D if I remember correctly.
ufff, i'll need some time to wrap my head around that one :)
While there is active work on IronPython the story is different for IronRuby. I haven't had the motivation lately to get it running but I am one of a handful of people actually looking at getting it back up amd running after the 5+ year hiatus
I don't think your localhost tools will be useful for anyone like this.
It behaves the same as the Debug run.
Whoops!
Reminds me a bit of this: http://bash.org/?742386
Test your assumptions first. Make sure it's calling what you think it's calling. If your endpoints hit a db, run a profiler. Try fiddler to see where the calls are going and what's being sent back. Are you using different config files between debug and release, run a compare. Once you verify what you think you know, start pulling out variables one at a time. 
https://github.com/RyanLamansky/dotnet-webassembly 
Last I checked, Roslyn didn't have a scripting engine. It can be used to build a scripting engine though. I use CS-Script + Roslyn. 
Ours is to sum all the even numbers of an array, and we even give you the IsEven function because too many people didn't know how to mod
damn, I should've brought my dice to the interview...
&gt; I interviewed a guy yesterday who said he had 25 years of programming experience. He did not even know the syntax of a for loop, or what an enumerable object is. Everybody should know a "for" loop. iEnumerable is a Microsoft thing and a recent one at that.
weird. i would assume the instructions would tell you not to use temp variables. ;)
I aced an interview a little while back. Someone asked me what the "most important part of programming was" and I said "that my phone should never, ever ring at 3am with a problem I didn't prevent and that my code should be clear enough to fix at 3am if it does". I got the job. 8-)
&gt; There was no catch, it was just to verify that the interviewee could do basic pointer manipulation, loops, etc that were covered in a 200 level data structures class. Glad you're not doing it now. 8-) With multi-byte character sets, string comparisons are a bitch if the towo strings don't use the same one.
I think this comes from imposter syndrome and internet horror stories about Google interview questions for whiteboarding complex/novel algorithms... then when somebody asks you to write FizzBuzz at home you try to make it “enterprise” and wonder what the catch is. 
there was a 2.7.8 release earlier this year, but yeah, traffic has seemed to stall on this one
It shouldn't be too hard to understand. I kinda deliberately wrote it in a way that makes it less obvious to a C# programmer, but anyone familiar with F# should understand it pretty much straight away. let rec minMax min max index array = // Declares a recursive (curried) function that takes 4 parameters if index = Array.length array then (min, max) // If we're past the end of the array, then return the minimum and maximum values else let current = array.[index] let min = if current &lt; min then current else min // Binds min to either the "current" value in the array, or to its previous value (ie. the "min" parameter) let max = if current &gt; max then current else max // Same for max minMax min max (index + 1) array // (Tail) recursive call for the next value in the array let minMax array = minMax array.[0] array.[0] 1 array // "Hides" the previous function of minMax with a function taking just the array and passing sensible initial values (min and max set to the first item in the array and index to the second item)
Wouldn't see why not. You're still going to have to implement the core of the actual solution. 
It's not cheating, it's just an objectively incorrect answer to the question.
Compile it with debugging symbols and attach Visual Studio remote debugger.
Am I missing something or is Lua itself not an option? NLua is very easy to use and Lua is a nice little language. 
Not bad, what's the usage of a contracts project? I really really hate generic repository pattern. It's far easier to just use iqueryable on Dbset, it's not hard either to implement with an interface. The predicate builder is just going to give u pain for anything complex Also
&gt; My company's favorite question is to ask applicants to print out an array of numbers in reverse order. Can I use LINQ? :-)
If you claim to have experience in C# you should know what it is though. 
 var (min, max) = numbers.Aggregate((min: int.MaxValue, max: int.MinValue), (state, i) =&gt; (Math.Min(i, state.min), Math.Max(i, state.max))); Console.WriteLine($"min: {min}; max: {max}"); Do I win a prize for ugliest code?
I've always thought it was lame that there's no foreach on IEnumerable itself. It's not unexpected to want to build up a pipeline of operations culminating in doing something side effecty with each. There's the foreach keyword but eh... You could have a side effecting select but that's kind of gross. 
You type for &lt;tab&gt; &lt;tab&gt; right?
Ha! I had some heated discussions with a fellow developer (Haskell background) regarding this very topic. In the end, I agreed with him that a pure functional interface should not allow for side effects. C# is a multi-paradigm language and thus will lead to scenarios where one has to awkwardly straddle the fence between one paradigm and another. My code tends to be a hell of a lot cleaner and leaner when I am able to employ as much functional programming as possible, though. 
for these sorts of questions, usually i write a linq solution in 30 seconds and say this is what i would actually do, but this sort of defeats the point of the question, so here's the iterative/recursive solution.
 Console.WriteLine(string.Join(",", collection. Reverse()) 
probably would just be ascii
imo i wouldnt use nullables. the minimum of a collection of 0 elements is undefined and should throw. initialize to first element, then do your normal logic. 
fails for array size == 0 btw. 
whats the value for an empty collection? i dont see a seed value in there 
I tend to lean towards a functional style as well, but it's hard in C# sometimes mostly because the functional aspects feel very tacked on and I find myself wanting to express something the type system can't handle well (or at all, looking at you ADTs). At its heart, C# will always be an OO language with all the pros and cons that entails.
Yea, Entity already uses a Unit-of-work pattern (DbContext), I'm not sure why people feel the need to wrap another repository/unit-of-work pattern around that for an additional layer of abstraction. I also hate that people include this as part of a best practice, when there's a clear argument for that not being the case.
“if (owner.IsObjectNull())” I haven’t tried this with an extension method before, but if owner is in fact null, wont calling this method result in an NRE? Not only that, but I’m not entirely sure this is more clean than the C# 7 feature if (owner is null). Aside from my pedantic criticisms, I think this is a nice start if you are a beginner and don’t mind using the anemic domain model. 
You are right, if I handle empty input, it will make the code even uglier! Fixed.
What kind of asshole would pass an empty array?
Agreed. It's basically an antipattern.
Ugh. This is the worst extension method. I don't know why people have such a problem just using `o == null` or something similar. Why add confusion to this mess?
I despite the word "Helper" used anywhere. If it's a helper, what is it helping? Put it on that class...
Just wanted to let you know that I love you.
I do this now, after going through all the recommended repo patterns online, generic repository etc. what do you think? im using EF Core, this is just a hacked togeather example based on my own side project, diff names etc, so prob compile errors. I've actually commented out IDispose implementaiton in my code, because im not sure if its needed what are your thoughts on that? Anything else i should be thinking about? I guess its a very simple example so might not be able to add much in terms of feed back. But yeah, im mainly highlighting the point to ppl who read this post, you dont need fancy repository patterns, it just makes things harder, just use IQuerable e.g. IQueryable&lt;Person&gt; query = _someEntities.Person.AsNoTracking(); query.Where(x=&gt; x.FirstName.Equals(searchQuery.FirstName, StringComparison.OrdinalIgnoreCase)); // build a more complex expression tree here if you need to... query.OrderBy(x =&gt; x.Age); SearchResultsDto searchResultsDto = await query.AsNoTracking().Select(e =&gt; e.Person); return searchResultsDto; basic implementation: namespace UniversityApp.Repository.Sql { public interface ISomeEntities: IDisposable { DbSet&lt;Person&gt; Person { get; } DbSet&lt;University&gt; University { get; } void Commit(); Task CommitAsync(); DbSet&lt;T&gt; Set&lt;T&gt;() where T : class; } } namespace UniversityApp.Repository.Sql { public class SomeEntities : DbContext, ISomeEntities, IDisposable { public SomeEntities(DbContextOptions&lt;SomeEntities&gt; options) : base(options) { } public void Commit() { SaveChanges(); } public async Task CommitAsync() { await SaveChangesAsync(); } DbSet&lt;T&gt; ISomeEntities.Set&lt;T&gt;() { return Set&lt;T&gt;(); } public DbSet&lt;Person&gt; Person { get; set; } public DbSet&lt;University&gt; University { get; set; } protected override void OnModelCreating(ModelBuilder modelBuilder) { modelBuilder.Entity("UniversityApp.Repository.Sql.Entities.Person ", b =&gt; { b.HasKey("Id"); }); modelBuilder.Entity("UniversityApp.Repository.Sql.Entities.University", b =&gt; { b.HasKey("Id"); b.Property&lt;int&gt;("Id").ValueGeneratedOnAdd(); b.HasOne("UniversityApp.Repository.Sql.Entities.Person", "Person").WithMany().HasForeignKey("Id"); }); } protected virtual void Dispose() { if (!disposed) { if (disposing) Context.Dispose(); disposed = true; } } } } namespace UniversityApp.Service { public interface ISearchService { Task&lt;SearchResultsDto&gt; FindStudents(SearchQuery searchQuery); } } namespace UniversityApp.Service { public class SearchService : ISearchService { private readonly ISomeEntities _someEntities; public SearchService(ISomeEntities someEntities) { _someEntities = someEntities; } public async Task&lt;SearchResultsDto&gt; FindStudents(SearchQuery searchQuery) { IQueryable&lt;Person&gt; query = _someEntities.Person.AsNoTracking(); query.Where(x=&gt; x.FirstName.Equals(searchQuery.FirstName, StringComparison.OrdinalIgnoreCase)); // build a more complex expression tree here if you need to... query.OrderBy(x =&gt; x.Age); SearchResultsDto searchResultsDto = await query.AsNoTracking().Select(e =&gt; e.Person); return searchResultsDto; } } }
So thankful someone finally wrote this! Good job and please continue to post!
Helper is a useless work. Use a thesaurus.
In this case the name of the library is CryptoHelper. It can't be put on a class, because the class it is helping is going to be a consumer of the library not controlled by the authors of CryptoHelper...
it won't NRE as extension method aren't actually called on the object they're static and the null is passed in. however it's utterly pointless and isn't any nicer than == null imo.
&gt; “if (owner.IsObjectNull())” It won't result in NRE. Extension methods are just static methods that get passed the reference. IsObjectNull is part of System.Data.Common, and checks if an object is null, DBNull or implements INullable and is null. It's not appropriate to use that extension method on input arguments to a web api endpoint; it is designed to be used when checking parameter inputs for [ADO.NET](https://ADO.NET) commands.
Gotcha! I’d never thought of trying an extension on a null object on purpose. Thanks!
if it helps I disagree with most they said. Configuration - sure it wasn't that readable but all they did was hide the code, they didn't make the configuration any more readable. Project Structure - I tend to follow Jimmy Bogard's advice to group by feature rather than type. Environment based settings - much better off using a release tool to store your config like Octopus deploy or VSTS Data Access Layer - the repository pattern is basically an antipattern at this point and restricts you more than it gives you. Actions - validating models etc can be pulled out into action filters to prevent repeated code. Overall wasn't a great article and there's much better people you should follow instead.
You doing any async await synchronously?
While I agree with some of what you've said, I think defining the extension methods for configuration is a good idea in a large app. That being said, tell me more about your opinion and alternative to the repository pattern please!
Writing unit tests that depend on the in-memory EF backing are more brittle and take longer than using a generic repository or specification pattern as recommended by Microsoft's architecture guidance book and sample project. What is the clear argument that abstracting EF isn't a best practice? 
Why not just make an IDbContext that contains all of the dbsets etc that u need and then just mock that?
It depends on how complex the app is. Sometimes i'm "naughty" and just use the DBContext directly in a controller. I won't get reuse of the query but sometimes that ok. If I need to reuse a query then I'll look into adding something to help with reuse, if I don't need reuse then it's just extra layers of no value. (often methods on a repository are only used by one thing anyway) Sometimes I'll wrap common logic in extension methods so I can reuse parts of it (eg for pagination, soft deletes). I find this type of slicing gains more reuse than the repository pattern anyway. Otherwise i'll use something like a query object/handler pattern, sometimes hiding it behind something like mediatr. https://lostechies.com/jimmybogard/2015/05/05/cqrs-with-mediatr-and-automapper/ https://rob.conery.io/2014/03/03/repositories-and-unitofwork-are-not-a-good-idea/ 
hm, good point
I like it. Here is my answer. In real life I would convert to list and use Min and Max but since you said one pass... class Program { private static void MinAndMax(int[] arrayOfInts, out int? min, out int?max) { min = null; max = null; foreach (var i in arrayOfInts) { if (!min.HasValue) min = i; if (!max.HasValue) max = i; if (i &lt; min) min = i; if (i &gt; max) max = i; } } static void Main(string[] args) { int[] arrayOfInts = new[] { 1,2,10,0,3}; //Real world var list = arrayOfInts.ToList(); var minimum = arrayOfInts.Min(); var maximum = arrayOfInts.Max(); //But answer int? min; int? max; MinAndMax(arrayOfInts, out min,out max); Console.Write($"Min = {min}"); Console.Write($"Max = {max}"); Console.ReadLine(); } }
 int[] arrayOfInts = new[] { 1,2,10,0,3}; var s = string.Empty; foreach (var i in arrayOfInts) { if (!string.IsNullOrEmpty(s)) s = "," + s; s = i.ToString() + s; } Console.Write(s); Console.ReadLine();
We give a the devs a simple programming exercise and give them three hours to do it. Basically, we give them a solution with a web project and class library. The class library has entity framework and an ado.net class. We ask them to make a drop down list (select) on a web page and grid under it. Filter the grid by what they pick in the select list. We use the (now really old) pubs database. It has really worked out well. We have about a 25% pass rate. But everyone who has started on my team has succeeded. 
Too funny. He was lying. My favorite C# question is. Q. What is the most common .Net Exception A. Object Reference Not Set To an Instance of An Object. Follow up question, what does that mean? If they get it right, you know they are coding .net for real. We ask easy, easy questions on the phone screen and so many people get them wrong. Simple stuff, like how to check if a string is a date... DateTime.TryParse. Or the difference between Single() and First() in a LINQ expression.
The authors could have chosen a different name. I'm not specifically talking to op
At my company, yes. We make the developer make a website with a grid filtered by a drop down list. If you can do that in a couple hours, you get an offer. 3/4 people can't do it. We even let them use WebForms or MVC and give them EF already modeled to the database. We even give them and ADO.Net class with a partially implemented solution. But most people can't make a simple screen work when under the pressure of an interview... But if they pass, as long they don't scare off the CEO they are gonna get job offer.
Looks good to me. 
No offense but that code is too complicated for a simple task. You would not move on to the next part of the interview if you were interviewing at my company.
I guess that also means you haven't been checking if the input to your extension methods are null before you use them.
How is it complicated? It's a simple recursive function. As a loop it would be 3 lines less.
&gt; Why not just make an IDbContext that contains all of the dbsets etc that u need and then just mock that? That is a valid approach as well, but it can cause your business logic to become fragmented. This article seems to offer some discussion on returning IQueryables / DbSets from repository or DAL code: https://deviq.com/repository-pattern/ This link ( https://www.microsoft.com/net/learn/architecture ) can be used to see the guidance book and sample app I was speaking of (look under ASP.NET Web Apps for the pdf and sample app). 
Great, I'm going to give it a read! Thanks.
What language is that? Why do you care about purity and immutability? What does that even mean?
The language is F#. Pure functions have no side effects, immutable values do not change after assignment.
check out my implementaiton of using IQuerable in post comment above
https://github.com/dotnet/roslyn/wiki/Scripting-API-Samples
Probably a good idea to refresh 
&gt; My company's favorite question is to ask applicants to print out an array of numbers in reverse order. Not sort them, not order them by primes, nothing special. Literally just print out the array in reverse. A shocking amount of applicants fail to pass this. What kind of errors do they make?
thanks. 
It's not optional. ArgumentNullException asks for a param name in the constructor s/he used.
I meant: `throw new ArgumentNullException(nameof(numbers)):`
I also agree.. not sure all these best practices actually help in anything. Specially didn’t like having catch blocks in controller actions. A global handler is much better IMHO.
Because it makes your code and architecture clearer, and more 3rd party independent. The thing is, that EF design is terrible, it's like people who made it do not understand the idea of Repository pattern at all. Abstraction is used to hide details of accessing data and the way that data is stored. By using EF's DbSet directly, you lose that. You can't just supply a different DbSet that uses Dapper f.e. You're stuck with, and dependant on a certain framework which is a really bad practice and something that people in big, enterprise projects simply won't allow. Hiding the way tou access your data IS a part of best practices, it's just that repository pattern in this case also requires UoW which tends to be a little too much of boilerplate altogethet. Uncle Bobs explains this pretty well in Clean Architecture and I'd advise to read it to everyone, even if you don't agreee or won't use all of practices mentioned, it's still good(mandatory IMO) to know this stuff.
Let the holy wars begin.
Yes. That is the only correct use here. What s/he did is provide a error string into a constructor that is supposed to build the error string for you. S/He's gonna look at "argument' parameter XYZ is null' is null" when getting that exception in the logs
What if the array has only one number?! WHAT THEN!???
Ive seen very few projects that have ripped out a ORM and replace it with another and those that did generally did for reasons that needed much bigger refactors than replacing a repository. Its much more common IMO to need multiple ORMs than to replace one. Which is one of the many reasons I'd recommend query objects over repository pattern. 
What? Like this? https://github.com/EnterpriseQualityCoding/FizzBuzzEnterpriseEdition
Well i'd have to disagree with the "check if the string is a data part" because yeah, datetime.tryparse, great. but you get into culture/localization issues pretty fast if that's the only check you make.
you wrap it in an interface, any service that needs it u can provide it a mock with a return value to test xyz. EF already has unit of work. repos ontop just add complexity, useless code and dont add any adv to unit testing 
[Jason Web Tokens?](https://i.imgur.com/fUJVyyj.jpg)
&gt; Ive seen very few projects that have ripped out a ORM and replace it with another Apps more than about 5 years old and still getting significant development time, or any high-load web app, can see a lot of benefit from updating its data access tech. Go back to 2008-2010 area and look around at what was around.. ADO.Net, Linq2Sql, very first version of Entity Framework, NHibernate v2/3, SubSonic, Lightspeed, DataObjects.Net, LLBLGen.. Terrible and woefully limited LINQ to SQL translation (L2S was the best for quite a while), no async/await, no micro ORMs. Developers working with decade old SQL libs are slowly dying inside, and in my experience trying to extricate last decade's ORM comes up more often than you imply. Depends on the types of apps and the shop's general philosophy though I suppose. I've pretty much always worked in shops where we're writing software for ourselves, not for external clients. External clients never want to pay for bringing their stack up to do, unless you roll it into a big rewrite like you say.
I prefer the way `stringVar.IsNullOrEmpty()` extension reads versus `string.IsNullOrEmpty(stringVar)` and then I use `.IsNullOrEmpty()` for `IEnumerable`'s as well
Thank you for your comment! I looked into some sample projects with vue and it looks very interesting. Quick question - how do you do user authentication with .net core and vue? Is there a similar way as there was in web forms? Or is it best to use a 3rd party service. I’m having troubles finding good resources on how to do this.
`throw new ArgumentNullException(nameof(numbers));` and `throw new ArgumentException($"Parameter '{nameof(array)}: array is empty.", nameof(array));`
` (int min, int max) FindMinMax(int[] array) { if(array == null) throw new ArgumentNullException(nameof(array)); if (array.Length == 0) throw new InvalidOperationException(nameof(array)); int min = Int32.MaxValue; int max = Int32.MinValue; foreach (int i in array) { min = Math.Min(i, min); max = Math.Max(i, max); } return (min, max); }`
nice initial choice of values for min and max :)
Jesus lord more replaces please.
Injecting repository directly into controller? Downvoted.
Thanks for sharing. How would you unit test a command or query?
I'm on mobile so it might be a little hard to convey my point, here goes nothing. I definitely see and agree with you point about making your application dependant on EF. I still use an abstraction, but a much much simpler one. In my DAL I have a notion of "DataProviders". They play a similar role to repositories, however, they do not layer on another UoW over EF. As an example, if I want to get data from my Foo database using EF, I have IFooDbContext in my DAL as well as a IFooDataProvider. IFooDataProvider will have Func&lt;IFooDbContext&gt; injected into the constructor. My IFooDataProvider will have many methods in it depending on my requirements for data, similar to a respository. So I may have "function List&lt;FooDTO&gt; IFooDataProvider.GetAllFoos()", which will then use the private Func&lt;IFooDbContext&gt; to create and dispose a FooDbContext connect, use linq to get my required data and transform it into a DTO. In this way all my EF entity models are in my DAL, all references to EF dlls are in my DAL and basically everything EF is self contained in my DAL. As long as I have a separate project (similar to OPs example) that contains my domain models (DTO, interfaces/contracts), any service layer that needs Foo data simply has to reference my DAL, inject in IFooDataProvider and call the method(s) needed. In this way you could re-implement your entire DAL using another technology, but as long as a concrete implementation existed for IFooDataProvider (and the other nexessary data providers) and swap it out without doing anything other than changing the DAL reference in your service layer. Anyway, I'm sure I may have missed some key information here that really drives home what I'm trying to say, but again, I'm on mobile and rushing as I have a golf tee time to get too soon here heh. If anything I said doesn't make more sense or raises questions/concerns, let me know and I will happily reply and/or correct any mistakes I made in this post later on, from an actual computer. :) Great discussion!
Failing to even answer the question is the big one. They'll look at it for 20 minutes and have nothing. A few will try making some convoluted error-checking, sorting monster of a function that's both unnecessary and not what we told them to do. Keep it simple and you're golden.
The kind of asshole that expects argument validation, bitch.
I've been finding this all over Javascript code lately. `if (_.isNull(obj))` what the hell. In the process of converting to Typescript, and TS can't understand your null checks when they don't look like null checks.
Right, something like null or empty (or whitespace) makes sense because you can't implement it as a simple `== null`.
It looks decent, but I don't know if I agree with that approach without seeing how it is used. If you are using those abstractions directly in business logic or controller methods, then I would not agree with that usage for any system with complicated business logic.
Interesting. What would be a more correct answer?
Interesting. Never used F#.
Lol. I didn’t write it. I’m just the messenger 
*Applicant rolls a 20* "When can you start?"
What is a span in this context? I assume it’s not an HTML element?
You ought to return them as a dto with properties min and max. Who said anything about logging to the console? Also, you could abstract away your validation by making the request for min max a controller action, and the array to reverse could exist as a command model with data validation attributes. The controller would then call the business logic (injected through dependency injection, of course) min max method, which of return the min max dto as a part of a BusinessResult object of type BusinessResult&lt;MinMaxResultCode, MinMaxDto&gt;. The controller would then either pass the resulting dto back to whatever called it as JSON, or it would perform a dictionary lookup of error messages based on the MinMaxResultCode. 
Fair enough. Goes to show how easy an assumption can create a code smell right? I honestly don’t use homegrown extensions that often, but that doesn’t mean I should trust any library developer to get it right either. 
I agree on that. I’ve always found string.IsNullOrEmpty to be cumbersome compared to a nice and neat extension method. 
Who said anything about a web app? Or dependency injection lol.. this is just a interview question. 
https://msdn.microsoft.com/en-us/magazine/mt814808.aspx
It was a joke lol, like enterprise fizzbuzz. 
Step up a notch. Change array to an IEnumerable. 
What would be a more correct question? I would make the question very precise if I were to include it in an interview. Something like "Given a current thread culture of en-US, determine if an input string is a date."
Big lol
Thank you!!! https://codereview.stackexchange.com/q/77610/63064
It was just a joke, mate.
You extract bits you want to test into methods and test those methods.
Good point I typically make things for others rather than products
Thanks. That explains it. It’s pretty specialised. Not something I’ve ever needed. But now I know it’s there if I want it. As long as I’m using core. 
Well you nailed the name, so you had me for a minute!
lodash works in typescript too. That would still work, assuming you imported lodash in the .ts
It works fine, but TS doesn't change the type of the variable to non-nullable after the if.
I understand what you are doing but I would take it further to the method level. You would end up with dozens of methods your have to implement all at once vs having everything 1 to 1.
Press x to JSON
I did something similar for training when I started my first job. Pretty good test. Would this be for a junior role or mid level?
Mid level. Dev II position.
OK.
&gt; but they dont keep up withe cost of living. and i live in sydney! That’s just not true for the most part. 
I don't think I'm following your point. Care to expand on this a bit?
I think most people probably use identity server 4, but if you want to roll your own with identity, feel free to check out my sandbox implementation here: https://www.reddit.com/r/dotnet/comments/8gf30i/is_it_ok_to_store_user_id_as_name_identifier_in/dyb975g/
Hmm I'll pm u my repo. I did it this way because I figured I could mock dbsets but they r in my interface as concrete types. I haven't unit test yet. Do u mind taking a look
Agree, IdentityServer 4. Can't recommend rolling your own.
Definitely. I rolled my own jwt implementation on top of identity, but that’s about as custom as I would go.
Asp.net Identity 
It should make stuff like XML/JSON deserializers a lot faster, so you will probably end up using it without knowing it.
Auth0
Using Keycloak here. Identity Server is free without the admin UI. Keycloak is the full deal for free. Keycloak is built by RedHat and is an all inclusive solution. Works with nearly every technology we integrate with it, be it .net apps, asp.net, Java, Python, ect.
SOLID. by putting all your methods on a single interface like that you are breaking the SOLID principal.
Sure, I'll take a look. 
What is the benefit to use MemoryCache instead of a simple HashMap?
How are you liking Auth0? This is what I considered first and haven’t gotten around to being able to issue a token... any tips?
It's been good for us. Took me a bit to figure out how to get it all working. Not sure I have any tips but if you have specific questions I can try and help.
Well, if i wanted to be super extra and be a show off for an interview, I'd probably do something like this: [https://pastebin.com/uRRGvbRt](https://pastebin.com/uRRGvbRt)
Looks cool. Is there any end-user interface for it?
`static void Main(string[] args)` `{` `var random = new Random().Next(25);` `var numbers = Enumerable.Range(0, 100)` `.Select(n =&gt; n * random)` `.ToArray();` `var (max, min) = FindMaximumAndMinimum(numbers);` `Console.WriteLine($"Minimum: {min}");` `Console.WriteLine($"Maximum: {max}");` `Console.ReadLine();` `}` `public static (int max, int min) FindMaximumAndMinimum(int[] numbers)` `{` `if (numbers == null) throw new ArgumentNullException(nameof(numbers));` `if (numbers.Length == 0) throw new ArgumentException($"{nameof(numbers)} is empty.");` `var max = numbers[0];` `var min = numbers[0];` `for (int i = 0; i &lt; numbers.Length; i++)` `{` `var num = numbers[i];` `if (num &lt; min) min = num;` `if (num &gt; max) max = num;` `}` `return (max, min);` `}`
If I wanted to be super extra for an interview, I'd probably do something like this: using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; namespace MinMax { class Program { static void Main(string[] args) { var random = new Random().Next(25); var numbers = Enumerable.Range(0, 100) .Select(n =&gt; n * random) .ToArray(); var (max, min) = FindMaximumAndMinimum(numbers); Console.WriteLine($"Minimum: {min}"); Console.WriteLine($"Maximum: {max}"); Console.ReadLine(); } public static (int max, int min) FindMaximumAndMinimum(int[] numbers) { if (numbers == null) throw new ArgumentNullException(nameof(numbers)); if (numbers.Length == 0) throw new ArgumentException($"{nameof(numbers)} is empty."); var max = numbers[0]; var min = numbers[0]; for (int i = 0; i &lt; numbers.Length; i++) { var num = numbers[i]; if (num &lt; min) min = num; if (num &gt; max) max = num; } return (max, min); } } } 
Azure Active Directory
Injecting repository directly into controller? Downvoted.
Azure AD B2C
Make sure you aren't holding references to any of those Forms or Controls on those forms or related objects. As long as there is a reference to the Form somewhere it can't be cleaned up.
I know that creating JWTs is simple, so it makes sense to DIY, but isn’t there a NuGet package that already does it? Is there a reason you didn’t go w/ that?
I'm using AWS' Cognito which is Auth as a Service married with AWS' API Gateway. Felt funny in the beginning running .NET on AWS but while it is obviously not as well supported as on Azure, it's been fine. Reasonably happy with it.
You only have all of your Foo methods on the foo interface and your Bar methods on your bar interface. It doesn't violate SOLID whatsoever.
Since many have already shared their solution and the only requirement was a single pass: public static (int Min, int Max) GetExtrema(int[] array) { if(array == null) throw new ArgumentNullException(nameof(array)); if(array.Length == 0) throw new ArgumentException("Array cannot be empty", nameof(array)); if(array.Length == 1) return (array[0], array[0]); //no iteration Array.Sort(array); //one pass return (array[0], array[array.Length - 1]); // or Max: array[^1] }
Step 1: Move to ASP.NET Core 
https://stackoverflow.com/questions/7251535/what-are-the-compelling-reasons-to-use-a-memorycache-over-a-plain-old-dictionary
Didn’t know about that package and didn’t need to know about it.
The article kinda plagiarizes the code from [this](http://blog.developers.ba/simple-way-implement-caching-asp-net-web-api/) three year old article. 
Thanks, saved the comment so I can cash in on that!
Thanks again, playing around with Dapper and it is pulling the data fast enough I may not need to implement a caching option at this point. 
Woops... I meant `Dictionary` . Been working on Java as of now and HashMap came to my mind...
I know APM tools like dynatrace do this. Free tools like zipkin https://zipkin.io/ can also document communication paths.
Net core 2.1's Httpclient is much better too due to Span
Good to hear.
So all Foo methods are always fully used by all service layers that reference them?
Web based UI for Service configuration that doesn't need the full power and complexity of a web server like IIS.
Each "client" can have its own login theme and interface. You could have a theme for one site or a theme for a whole realm. It works very much like Google's SSO and very professional looking. Your site or app redirects to the sign on and then redirects back. It even supports two-factor authentication, with Google Authenticator or FreeOTP. Of course you have full control over how you want to authenticate. So you can handle the entire signon process yourself too. It has a full Rest API.
Do you have a good tutorial on best practices when using IS4? I read the docs but looking for a real world example.
I think pluralsight has a good one. I think thi might be good too: https://www.youtube.com/watch?v=J5p72gTdx_M
Can you provide a better article? I'm about to start writing my API and would love to read some.
**Project Structure** i haven't seen any feature slice ones for webapi, however its the same general idea from MVC (and i guess they're the same thing now with .net core). https://msdn.microsoft.com/en-us/magazine/mt763233.aspx?f=255&amp;MSPPError=-2147217396 https://www.kenneth-truyers.net/2016/02/02/vertical-slices-in-asp-net-mvc/ http://www.ojdevelops.com/2017/08/vertical-slices-with-mediatr.html http://www.ojdevelops.com/2017/09/vertical-slices-with-mediatr-part2.html 
what we need here is more layers that provide no value.
Digital Ocean?
Literally any Linux host that gives you full control and tells you what you get up front?
https://www.a2hosting.com
I use them. Good service. Good support.
Great! I had bookmarked that site. 
seconded
From the top of my head: - In your azure app service, you can define various virtual paths, that map to a folder on your endpoint url, for instance for mapping *http://mysite.azurewebsites.net/angularapp* (inside Azure known as "/angularapp" =&gt; *Solution.Name\Angular.Project\dist* - Then you could just make sure there's a web.config in your dist folder with the appropiate rewrite rules in it.
How do you find the pricing when you go above the free tier?
thanks i think ill do that, its better to separate the FE from the api as best practice.
App Services are very much IIS! It's easy enough to add rewrite rules into the applicationHost.config using an applicationHost.xdt, made a lot easier using this [IIS Manager extension](https://github.com/shibayan/IISManager). 
awesome thank you
And for those too lazy to click the link below or find it too long: &gt; We are entering a new era of memory-efficient and high-performance computing with .NET, with the introduction of Span&lt;T&gt; and related types. - &gt; Today, if you want to pass the first 1000 elements of a 10,000 element array, you need to make a copy of those 1000 elements and pass that copy to your caller. That operation is expensive in both time and space. - &gt; The new Span&lt;T&gt; type enables you to provide a virtual view of that array without the time or space cost. - &gt; Span&lt;T&gt; is a struct, which means that you can enable complex pipelines of parsing or other computation without allocating. We are using this new type extensively in corefx for this reason. (from: https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/)
Whatever. I'm still stuck on 4.0 sadface.jpg
[sadface.jpg](http://i.imgur.com/Xo9GNok.jpg) --- ^(*Feedback welcome at /r/image_linker_bot* | )[^(Disable)](https://www.reddit.com/message/compose/?to=image_linker_bot&amp;subject=Ignore%20request&amp;message=ignore%20me)^( with "ignore me" via reply or PM) 
Oh. Didn't know whe had this..
I'm so sorry. I know what that's like.
This looks interesting, but how does it work? Nothing about the servers, just "droplets". Do you specify it later?
You compile your code as bundled if you don’t know how or what to install on Linux. But it’s simple. Just install the Dotnet SDK or Runtime and you can then build any. 
What about Azure?
Scaleway is the cheapest one i know 
Scaleway is the cheapest one i know 
Install dokku on your DigitalOcean droplet, create a dockerfile that compiles, runs and hosts your app on port 5000. Git push to your droplet, dokku automatically detects your dockerfile and does your magic. Enjoy your hosted app.
Does Identity server 4 require the hosting of another website altogether, in a separate app service (if using azure)?
$$$$
linode.com is pretty good and costs 5 US$ per month.
Is this viable if you don't know shit about server maintenance and security?
 Is it possible to use EventFlow without ES?
&gt; It seems Microsoft forbid them to make Windows builds after they bought Xamarin. I can't find anything that suggests this is true on any front, can you provide information? I've never used MonoDevelop, [but their website roadmap still points to 2010?](https://www.monodevelop.com/archived/developers/roadmap/) Are you sure it hasn't been dying for along time? Regardless what are you developing, can you provide us more information? 
What works for me is a DigitalOcean drop preconfigured with Dokku (https://www.digitalocean.com/products/one-click-apps/dokku/). Then you can push your .net core app, containing a Dockerfile, to the git repo on your droplet. Then Dokku handles all the build stuff. It works really well and it's el cheapo. All in all, this is a cheap solution with a nice deployment flow.
I use VS Code with omnisharp and it's all I use. Did you forget to install a unity snippet extension because it most certainly works with any .csproj or .sln file.
VS Code works with Unity: https://code.visualstudio.com/docs/other/unity
I don't work with Unity, I work with .NET Framework.
I think it was less forbid and more they decided to provide better integration with VS. Personally i always found monodevelop a step behind VS even in speed. Rider on the other hand is very zippy. 
Gotcha, I usually see posts about MonoDevelop for Unity, my bad. 
It should work with MSBuild solutions for the .Net Framework, per their docs, but I haven't used it for that myself, as my company uses VB.Net. :/ https://code.visualstudio.com/docs/languages/csharp
AWS? The smallest instance size is a t2.nano. If you for a year up-front, it will cost about $3 per month. [https://aws.amazon.com/blogs/aws/ec2-update-t2-nano-instances-now-available/](https://aws.amazon.com/blogs/aws/ec2-update-t2-nano-instances-now-available/) You can also pay per month and it should still be less than $5. 
Also, if you want to save money you can dockerise the sites and then run many of them on the same instance. 
"The repository logic should always be based on interfaces and generic as well. " - ever heard of DDD? Generic repositories are usually cancer.
Is it that bad?
I'm saving your comment. Thanks for the info!
Has anyone used GraphQL in production with many clients utilizing their API. Most of my clients are just now getting accustomed to REST and was wondering how was the switch? 
You can check out this list - https://graphql.org/users/
GraphQL has so many languages support. It's hard to say who is using which language.
Cloud web hosting is exactly for this!
Yeah I saw that list. I guess I meant more as in has anyone on the subreddit actually implemented this in an organization that is exposing APIs to a wider range of clients. Was wondering how the transition went and if they had any advice/gotchas to be aware of.
[https://dejanstojanovic.net/aspnet/2018/june/clean-service-stop-on-linux-with-net-core-21/](https://dejanstojanovic.net/aspnet/2018/june/clean-service-stop-on-linux-with-net-core-21/)
you can host for free... provided you don't want a custom domain or ssl.
I use Linode with Docker and I have a fun time doing it. I'm hovering around 10 containers, all but 2-3 are .net core, on a $10 machine. Running fine. I second!
Click on your tenant name dropdown in the top right and select Settings, then choose the Subscription tab. You can view the different tiers and pricing within each using the sliders.
I really like the idea of using C# instead of Python. I hope they do the catching-up as quick as possible so I can delete the Python codebase. What I need: TensorFlow, Dlib, etc.
Thanks for posting. It's great to see the .NET platform moving to 'compete' with Python / R. 
Should also mention that the initial values for your current min and max should be set to the largest and smallest possible values, respectively. Assuming signed 32-bit integers, like this: int min = Int32.MaxValue; int max = Int32.MinValue; If you set max = 0 to begin with, your answer will be wrong if the highest value in the collection of integers is a negative number because we'd presumably be doing something like `if (max &lt; i) { max = i; }` -- since max (0) is greater than all negative integers, the max result will be 0.
Thanks for reading! It is still far away in terms of data manipulation, but C# is definitely getting closer to Python and R.
&gt;I'm wondering also if it would be easier to separate the angular and core api into two separate projects Much easier. Set up CORS and call it a day.
I think my main issue is interpreting what they actually mean by "7000 active users".
I feel like not having span in 4.8 is basically a death strike to aspnetcore on desktop framework. For those of us stuck on desktop framework due to a library dependency that doesn't work on Core, there appears to be no path forward.
I wish I could disagree, but 4.8 isn't going to be released until next year and they're still not offering Span&lt;T&gt;.
In my opinion an exception is definitely not the way to go. Exceptions are for things that are exceptional. If you provide a user with a blank option then they are presumably allowed to select that option. Therefore it's not exceptional. You have a few options for the key for the blank option. Not knowing your business rules, I don't know which of these would work, if any: 0, -1, double.MinValue, double.MaxValue If none of those work (i.e. all of those could be valid keys), you could also use a non-numeric value like "X" or even just "". Then your code could check if the value is numeric and if not, the user chose the blank option. The nice thing about the value of a dropdown is it can be anything. I have even used values like "10/30" for a dropdown which has two keys. Then I just split the value on "/" to get both keys. It doesn't have to be numeric and it doesn't have to correspond exactly to the objects in your code. You can pre-process the value to turn it into a key (or keys) that you need.
Hovering over the "X Regular Active Users" text at the top pf that page displays the following info: "A user that has authenticated with username/password, passwordless connections or any social provider in the last calendar month, counted per application."
Perhaps it's just that I cannot believe how they offer 7000 users for free. It seems like quite a gift. Then, on the other hand, the moment you need anything above that, it seems to be very expensive.
For something tiny, I'd recommend either 1. use free tier on Azure and get around the database cost by using SQLite. If you eventually have a lot of traffic, IT budgets should eventually back you up since you'll be adding a lot of value. OR... 2. Digital Ocean or Vultr. Personally, I've had great experience hosting ASP.net Core apps in Docker under Linux, and that was in a commercial production setting, so I can verify that it is pretty dependable. It means having to know a lot more about things like Docker and Linux, and I don't know where you on those technologies.
&gt; monodevelop a step behind Monodevelop was a buggy piece of garbage. Renaming a method or variable wasn't case sensitive. It crashed all the time. I had a whole big list of bugs that I reported several times, but it's been a while. I don't know how anyone could use that thing full time for real development.
https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/nullable-types/
I think there's already a C# wrapper for Tensorflow, isn't there?
What libraries will still have a full framework dependency in 2019?
Comparing Platform with programming languages ? 
The base URL’s is the subroute. Mysite.com/subroute Configure your cli to deploy to the wwwroot folder. You don’t need a web config or iOS rewriting rules. Use defaultfiles and staticfiles middleware. There is a spa Nuget package from Microsoft. I can’t remember the name now. I think it’s spa services. It’ll be called after MVC controller/action/etc and looks almost the same. This is important because any route that your SPA is on that refreshes will be a 404 otherwise. The other option for the 404 protection is to write a simple middleware that redirects all 404s to your Index.html file. Do that after your MVC middleware is called. Don’t forget to handle CORS. Sorry my writing style is so sloppy. I’m putting my kids to bed 
Sybase.AdoNet4.AseClient.dll from SAP is the one I hit first. Due to https://github.com/dotnet/corefx/issues/9872 we get a TypeInitializationException because `AseConnection` is utilizing instance methods on `System.Security.AccessControl.DirectorySecurity` that were added to CoreFx as extension methods. I do not expect any movement from SAP on that. I just recently found https://github.com/DataAction/AdoNetCore.AseClient which we are now considering. 
aspnix.com is good. I've used for years
Have you tried Visual Studio Community 2017? It's miles better than previous versions. The vast, vast majority of people doing .NET Framework projects on Windows are going to be using Visual Studio. Are there specific things that bother you? Perhaps configuring VS to your liking might be more productive than looking for a replacement.
Yes, there is https://github.com/migueldeicaza/TensorFlowSharp
Well there are still a lot of limitations to the free tier, mostly around branding. I wouldn't go live without it.
He means with regards to machine learning. He is proud to see a programming language from the .NET moving beautifully in the ML space.
Assistant? 
yeah i need a custom domain and SSL. chrome is going to mark sites without default SSL with a warning in the browser. i dont agree with what they have done but eh what can you do. plus SSL helps better with google rankings ive heard. i have no enforced SSL but it does use it if you add https to my site.
If you are returning ModelState errors, might as well use the overload for it. if (!ModelState.IsValid) { return BadRequest(ModelState); }
yep
No worries
This... I would love to be on Azure, so many cool toys and technology, but its stupidly expensive unless you are a business. 
Then you clearly don't understand the point.
I've heard good things about [apiary](https://apiary.io/) but have not tried it myself
Instead of returning EF models, return viewmodels with only properties that you need.
GDI+ uses lots of native objects that the .net gc can't collect for you. That's why the .net wrappers all implement the disposable interface. Call the dispose methods of all your global objects when closing the form and use using blocks for local objects.
Hoping this becomes part of mainstream support, but something tells me Google isn't terribly interested in C#. 
I love posts like these, lots of good info in one place.
Please do not self-promote your YouTube channel.
It's not free for most commercial use. I believe MonoDevelop was (could be wrong).
Feel free to explain the point if you like.
Everything /u/worstdev said and also check the DLLs on both working and non-working. It's rare but sometimes the files won't update.
idk. I found some nice generic repositories for example: https://github.com/niksacdev/samples.microservice/blob/master/src/samples.microservice.core/BaseRepository.cs https://garywoodfine.com/generic-repository-pattern-net-core/ https://hk.saowen.com/a/0530eb226dad78a4bf7604e58623bd703d9b61680ee1b1158411711903cfcf00 ...in any case, generic repository is much like a proxy, routing to different architectures. I like to think of them like Type Providers in F#, although different.
I'm not necessarily convinced the fault is with Intel here. If dotnet is having to scale the number of pause instructions this aggressively then the existing duration was obviously much to short.
&gt; It's not free for most commercial use. Not true. VS Community can be used for commercial use. There are some limitations for corporations (namely, those with &gt;250 PCs or &gt;$1 Million USD in annual revenue) but there are no limitations for individuals. See here: https://www.visualstudio.com/vs/community/
Google has a lot of .Net support in Google Cloud Platform 
If you want it to show up on that page, use AJAX to send just the fields back. In the success part of the AJAX, populate that field with the computed value.
This could result in a nightmare if you ever want to change the business logic down the line. All that old data in a weird format that you now have to account separately for. I've seen code bases where they have to handle dozens of strange edge cases like this because years ago a developer decided to take the easy way out and store complex data in a non-standard way that worked only in that particular scenario.
Thank you very much!
I'm not suggesting STORING those values. They're just a flag to indicate "null". I assume his code would detect these special flag values and store null or something else sensible in the database or wherever.
Not really an option in a dropdown. A dropdown has to have a value that can be represented as text.
If you're writing software you always blame it on hardware, solar flares, or the new guy. Duh!
It's certainly a big change, and it probably should have been communicated better, but if your starting point is 50 your unit is probably too small. 
I think you replied to the wrong comment 
With the release of 2.1, we now have support for SignalR in ASP.NET Core. In this tutorial, Kristoffer show you how to build a collaborative editor using SignalR.
No, I was further clarifying my point.
Sure but that applies to who owns the source code. So if you're a freelancer and you're selling your services to a company that meets those thresholds then you need to pay for VS. So if you mainly freelance for small companies then it's probably ok but otherwise you're going to need to pay.
Why not just... Create a new file manually? Granted it doesn't solve your problem but the only thing it does is automatically add the `: Controller` for you.
I assume you use MySQL with this? Do you use ef core as well?
Yes, ef core. With Postgres but Mysql should work as well.
Do you use Npgsql in visual studio? Says it only supports ef6.
What happens when you add Npgsql.EntityFrameworkCore.PostgreSQL? It should automatically add the right dependencies. I use it is with vs on mac bit it should work on vs on Windows as well.
Ahh ok. I was looking at the Npgsql vs extension to have a Postgres dB show up in sever explorer.
I think you should use ajax. You can show result without reload the page.
Can't remember exactly what I had an issue with back a while ago but to get the response from the server signed as well we had to set AuthenticationMode to "MutualCertificateDuplex" otherwise it was responding with a non signed message. Might be unrelated but since you're talking about the response specifically in the question I happened to remember that.
Glad I could help 👍🏼
I'm definitely hyped for the notion of being able to (reasonably) do machine learning in .NET rather than having to reach for a different platform for this. Python in particular is not a language I'm awfully fond of writing.
Managed heaps are not shared between .NET processes. In Workstation GC mode CLR creates one heap per process. The heap is divided to small objects heap and LOH. In Server GC mode there will be one heap (small objects + LOH) per logical processor. Btw, since .NET Framework 4.5.1 it's possible to compact LOH on demand using `GCSettings.LargeObjectHeapCompactionMode`
Heaps are local to the process. Typically there is one (logical) heap, split into multiple generations and the LOH, each consisting of multiple segments. In server GC mode there is a separate heap for each CPU core, but they are still shared across the entire process and not limited to a specific thread or core.
Where's the GC mode determined?
https://docs.microsoft.com/en-us/dotnet/standard/garbage-collection/fundamentals#configuring-garbage-collection
True…
Yeah, same thought.
Can't the caption be separate from the selected value? If the value is null the dropdown shows "No value selected."
Specifically what is the problem? Is your project going to be MVC with Vue and the problem is getting the data layer on another class library? Only this or something more? 
Try this one: https://github.com/dotnet-architecture/eShopOnContainers
Since I'm fairly new to the entire VS environment, I was a tad weary that this could causes issues down the line. But if i'm unable to find a solution, I'm just going to go this route. Thanks for the reply. 
Full disclosure this is my GitHub.These projects are generated and have most of what you're asking about. If you have any questions let me know. https://github.com/codenesium/samples?files=1
Isn't that one a bit complicated for someone wanting to get started?
Windows auth can be done in 2 different ways: NTLM is the basic method where credentials are transferred directly with http requests to your server in the headers. The responsibility of authenticating these credentials is on the application processing the request. In the case of IIS, it has this ability built in when you use windows authentication. Kerberos is the other authentication method. It's sort of like NTLM but super beefed up. It authenticates the process that's making the request. The [Integrated Windows Auth (IWA)](https://docs.secureauth.com/display/KBA/Enable+Integrated+Windows+Authentication+%28IWA%29+in+Internet+Explorer) option in Internet Explorer is required for Kerberos. It authenticates you to the server as _the user that launched IE_. There won't be any entering credentials with Kerberos. Kerberos actually works under the hood by issuing the client a domain-controller issued ticket that contains their identity. Kerberos is a pretty big and honestly difficult system to work with, I'm not sure it would even work with linux. You should read up on [NTLM Auth](https://msdn.microsoft.com/en-us/library/windows/desktop/aa378749\(v=vs.85\).aspx) as that's probably what you want to know about. When visiting a server that has NTLM enabled from your web browser, the first response you receive will be a 401. Your browser gets the 401 and knows it means you need credentials so it prompts you and you provide them. The creds are sent in the next http request header. Future requests still need these credentials in the header, but your browser is smart enough to cache what you entered the first time. If you write a c# application that does web requests to a server with NTLM, you have to explicitly include this information with every request.
https://github.com/kxxt/Study/blob/master/Termux-run-mono.md Mono is ok ; You can try dotnetcore 
[JsonIgnore] seems to work. 
UWP does not run on .NET Core. At least not until 3.0 at which time WinForms and WPF will as well. The diagram is incorrect.
Fair comment, but I think it fits the bill. 
I am somewhat familiar with the protocols. What I'm wondering is how does the IIS make Windows Authentication work on ASP.NET Core (even when not targeting NET Framework but NET Core). It does not work on Linux because there is no implementation of NTLM/Kerberos for Kestrel. If both IIS and NGINX can support Kerberos as reverse proxies, why only IIS+Kestrel works and not NGINX+Kestrel
Are you trying to create the controller at the root of your site? This would not work. Try creating a 'Controllers' folder then creating it in there.
Not really my area of expertise, but a quick search brings up: https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/aspnet-core-module &gt;`forwardWindowsAuthToken` &gt;If true, the token is forwarded to the child process listening on %ASPNETCORE_PORT% as a header 'MS-ASPNETCORE-WINAUTHTOKEN' per request. It's the responsibility of that process to call CloseHandle on this token per request. https://github.com/aspnet/IISIntegration/tree/dev/src/Microsoft.AspNetCore.Server.IISIntegration https://github.com/aspnet/IISIntegration/blob/dev/src/Microsoft.AspNetCore.Server.IISIntegration/IISMiddleware.cs#L76 https://github.com/aspnet/IISIntegration/blob/dev/src/Microsoft.AspNetCore.Server.IISIntegration/AuthenticationHandler.cs
The runtime is not the same... stopped reading there. Seems poorly researched.
/r/drawtherestoftheowl
These are intense. What do you mean by generated?
I would love to see the same with IdentityServer4 too. 
The current price is just $45/mo for VS Pro which is pretty darn affordable for a tool you'll use every day. Just add $45 into your monthly rate with your customer--that's a small enough number that most won't even notice. If you don't like Visual Studio, that's an entirely different matter. But the cost is negligible for anyone that is using this for their primary income stream. Using the best available tools is always a good investment.
[https://github.com/KevinDockx/RESTfulAPIAspNetCore\_Course](https://github.com/KevinDockx/RESTfulAPIAspNetCore_Course) this?
Why do you feel that you need to? Looking at this code, I don't see anything that can go wrong that you wouldn't detect using other tests. [CustomAuthorization("Admin")] [HttpGet] [Route("{id}")] public async Task&lt;IHttpActionResult&gt; HttpGetAsync(Int32 id) { return this.Ok(await Domain.Foo.LoadFooAsync(id)); } 
I feel that you would get far more effective test coverage if you focused on CRUD testing your domain. By that I mean write automated tests that creates, reads, updates, and then deletes a record. Each test is a full lifecycle of a record to ensure that you didn't make any mistakes in your database integration. I'm not seeing anything here that needs unit testing. I guess you could unit test `ParseDataRow`, but that's going to be covered by your CRUD lifecycle test anyways.
I very much doubt it. If you are on Windows, the right way it to wrap it via C++/CLI or expose it via COM. Other if using UWP, to expose it via C++/CX or C++/WinRT. For other platforms is even more complicated, because these alternatives aren't possible. It may be that with some clever MSIL and MarshalInterop tricks one could create some kind of trampolines for the calls between ABIs, but I doubt it would be a stable solution you can trust. On non-Windows platforms, exposing a C ABI or RPC calls into another process might be an easier solution.
You can PInvoke to C++ code just fine (whether it uses multiple inheritance or any other feature), but it needs to be accessible through a "C interface". Same with any other native-compilable language. For C++ compilers, this involves making sure the public API is marked with the correct "visibility" and "linkage" modifiers; the specific syntax differs by compiler. The C# side of things has no deep knowledge about the structure of the code on the other side -- it will just see a call to a function accepting a pointer or handle, or whatever. The native side can then invoke a virtual function through that pointer, dereference it, etc.
Thanks for the reply, could you clarify something? This would be considered integration testing right? Since we are including components like a database, or would we be testing the domain without the database. Would we need to create a mock database to test the inserting/creating/deleting of the records?
I believe it does it through a header which is stripped out by Kestrel before it reaches your application. IIS handles the actual authentication. Kestrel just takes the user token IIS gives it and can use it to do impersonation or whatever you want. On Linux you would not have anything to do authentication for you so you would have to do it yourself. Kestrel cannot do the actual authentication.
The problem is that these are ways you would authenticate to IIS. OP could, perhaps, build the server-side portion of this, but he still has to connect to an Active Directory server and perform the actual authentication, which is the other piece of the problem.
IIS handles the authentication; .NET Core does not do any Windows authentication whatsoever AFAIK. IIS just forwards the results of the authentication (a token) to Kestrel. Basically, IIS verifies authentication and tells Kestrel the username (the token has a bit more power; you can impersonate a user for example). Kestrel itself has the easier job. So on Linux you have no Windows authentication. You would need a third-party library or otherwise something made from scratch.
Good article! Thanks for the benchmarking :)
&gt; This would be considered integration testing right? Depends on who you ask. A lot of people would say yes, but I subscribe to the older thought that "integration testing" is when you test your code with code written by other teams to see if everything combines well together. **How you label and categorize your tests isn't important.** That's all in bold to remind me to not stress about different definitions of the term. &gt; Would we need to create a mock database to test the inserting/creating/deleting of the records? A lot of people would say yes, because "UNIT TESTING!!!!". But they will be at a loss to explain exactly what such a test would really accomplish. Rather than thinking in terms of "unit vs integration test" ask yourself, "what do I want this test to prove?" A good thing to prove is that you can successfully read and write to the database. So that's always one of the first tests I write. 
P.S. Are you using Swagger? If not, I highly recommend that you add Swashbuckle (or another Swagger tool) to your project. Seeing how the tool translates your routes to a Swagger API spec is incredibly helpful for spotting problems. And it allows you to easily invoke API calls from the browser.
Nice! That's very helpful thank you. I totally forgot about the IIS Integration and ".UseIIS". The default VS ASP.NET Core template does not generate a Program.cs where .UseIIS is called on the WebHostBuilder, even when Windows Auth is selected in the template. Do you maybe know how come it still works then ? Is there some magic that the IIS Integration is always used when launching with VS and IIS Express or smt like that ?
Weird. Does this happen in a brand new project as well? I know you mentioned project(s) but I'm wondering if they are all older and if some update borked things for ya. 
Yeah, while that one works only on Windows though. I was think more along the lines of using [this NGINX module](https://github.com/stnoonan/spnego-http-auth-nginx-module) and then forwarding the token from it to Kestrel somehow. Hence, my interest in the IIS integration with Kestrel. One of the answers gives a pretty good reference on how that integration works. Think it might be enough for me to at least give the NGINX experiment a shot.
I'm guessing for optimization LINQ will need special implemenation for ```ReadOnlySpan&lt;T&gt;```???
Whoops, didn't see it was Windows only. :(
I use VS as a primary dev tool and I pay for it. I've also considered cheaper alternatives because who wants to spend money when they don't have to? If there's a tool that's cheaper and you're just as productive with it then use that tool instead. If someone is productive with Mono I can see why the cost of VS would turn them off.
I upgraded my web project from 2.0 to 2.1 recently and it was only a couple of steps. Is it really that easy or did I miss something?
I don't think that really makes sense, since you will have to allocate the result anyway.
Got it. Good point, I really just need to prove the CRUD operations work. I'm not really sure how to get started. Im faimilar with the basics of unit testing, but when it comes to connecting to the domain and/or database, I'm lost on how to approach it. All the resources I've seen online use repositories and EF, and I'm using neither. 
I see. So I can't actually get the type itself to be "translated" into something compliant with the Common Type System?
A simple mention to your company's service and features would have sufficed, but your usage of the Okta template added a lot of bloat to the article (relative to the title) and made it uninteresting to read. Nonetheless, I found the topic very interesting, and I think [this](https://markheath.net/post/four-ways-to-deploy-aspnet-core-website-in-azure) article is a good 5 minute read up on the various deployment options. 
It's not clear to me what you mean by that, but most likely: no. .NET allows you to call C functions, and to share blittable data between the managed and native sides, but it doesn't know anything about the C++ type system. Perhaps it would help to give a more concrete example of what you mean or are trying to build?
No need, that answer suffices. I didn't know .NET had zero compatibility with the C++ type system, and now I do. I thought maybe a C++/CLI class could bridge that gap, but from your answer I can tell that's not possible. Thank you for your help.
.NET core is not tied to the operating system.. that's kind of a big deal. .NET Framework must be installed at the OS level
It isn't the same. The .NET Core CLR is not the same virtual machine as the .NET Framework CLR. They both support .NET Stantard libs, but the runtimes do not have the same feature set.
Also you can debug any CRUD code without starting the application and keying in data. It can really come in handy when debugging in the future.
+1 for COM. We use this to interop a legacy codebase with newer c# stuff, it works. Just be careful of the marshalling cost.
You don't need to unit test a controller. Instead, you should refactor it so that the controller methods are as simple as possible and any complex logic is pushed into extension methods / service classes that do not have the dependency hell that is a typical MVC controller.
There isn't much to do, you can optionally update your app to match the new templates as well: https://docs.microsoft.com/en-us/aspnet/core/migration/20\_21?view=aspnetcore-2.1
I imagine that it adds support for (more?) Postgres &lt;&gt; EF specific functionality above what Npgsql provides: [https://github.com/npgsql/Npgsql.EntityFrameworkCore.PostgreSQL/blob/f35bed978f3fc8071c3e31d04dd020916fb6786e/src/EFCore.PG/Extensions/NpgsqlServiceCollectionExtensions.cs#L85](https://github.com/npgsql/Npgsql.EntityFrameworkCore.PostgreSQL/blob/f35bed978f3fc8071c3e31d04dd020916fb6786e/src/EFCore.PG/Extensions/NpgsqlServiceCollectionExtensions.cs#L85)
That's what I was wondering. If it's not necessary, I wasn't planning on using it.
Thanks for sharing! For me, learn how big company are implementing technology, is pure gold.
I personally use ASPhostportal for .net hosting. Been with them for several years, so far so good, I like their support, responsive!
Well you can already ```.Slice``` using it... Hmm... So basically if you have to do a Linq style operation, just use an array or .ToArray() on the span.
Nevermind. It has actually been made part of CreateDefaultBuilder https://github.com/aspnet/MetaPackages/blob/afee0de3e416f8e2807c7d49ad2bdef5016dae5f/src/Microsoft.AspNetCore/WebHost.cs#L185
Wew.... Please just ask him to escalate to senior support. If you see 403 forbidden error message, it seems that you forget to setup your default page. Could you please check it again?
A couple of things: 1. Make sure you are building for the right platform. https://docs.microsoft.com/en-us/dotnet/core/rid-catalog 2. Make sure either a) the host has the 2.1 runtime installed or b) you are building self contained.
The real question is, why go offshore? This doesn't ask or answer that, probably because of some vested interest. Local developers are always the better option with regard to management and efficiency, offshoring is usually only the better option with regard to cost, and in most cases should be your last resort.
I have some sympathy for this view. I've been pushing .net code to Linux for some time now and have long wished there was better integration with the platform the way there is with Windows so that things like event logging is more idiomatic.
That you should write logs into database or log daemon. On UNIX platforms the correct way is to make use of something like syslog, preferably via UDP broadcast as security measure against servers being p0wned. Log4net has syslog appenders. 