Easy, I'm joking :). I have been programming for years, so I have a practical skill too. The short time is just for refreshing my memory. I know what of the purpose of each pattern is. Please don't tell me you have all in your head. If my experience concerning patterns isn't enough, so the only way of changing that is working with this topic, but how to do that if nobody wants to employ me? Any ideas?
Can you elaborate why? I'm interested.
Don't worry about MVVM now, that is just a design pattern and if you try to learn it as you're learning WPF it will only make your life harder. One thing that will probably cause you to trip up often is the DataContext. When your bindings fail and you don't know why, it's usually a DataContext problem. Check out this tutorial: http://www.blackwasp.co.uk/WPF.aspx Have fun learning! :)
Gearhost.com is Free. Easy to scale as well for only $5. I’ve used it many times...even for client hosting.
I feel like this is on the fence between a genuine question and just some frustration being vented (based on some of your comment replies). I think additional information would really help if you are hoping for constructive advice. Where are you located, what is your knowledge level with C#, what credentials do you have (degrees/certifications/work history/awesome side projects/etc...), what have you been doing so far (applying directly/where is your resume posted/have you been getting callbacks or interviews/etc...) and finally, what sort of jobs are you applying for? There really are quite a lot of C# jobs out there, depending on your location. And I've personally worked at companies that were struggling to hire qualified candidates for (literally) years. So, I don't think there is a conspiracy to mislead people. Still, I totally know how frustrating it can be when you aren't getting positive responses.
https://app.pluralsight.com/library/courses/wpf-fundamentals/table-of-contents 
Just a heads up not to use .dev as a tld for localhost. Google owns it now and it will cork your project. 🤬
Thank you, good to know that's news to me. 
It'll all be worth it when Microsoft releases HARDER, BETTER, and STRONGER.
&gt; &gt; &gt; There really are quite a lot of C# jobs out there, depending on your location. ...and pay scale. Where I'm at I could easily get a another job if I'm willing to move or take a pay cut. But if I want to maintain my current lifestyle, I have to say with my current employer.
I hope it's of some help :-)
If you want a bite size way of learning portions of WPF, you can't go wrong with Sean Sexton's [2000 Things You Should Know About WPF](https://wpf.2000things.com). I refer back to it all the time, and I'd consider myself a WPF expert. And it's equally approachable for a beginner. Highly recommended
Right - absolutely a great point. Not that I think C# jobs are underpaid or anything, but with location and experience in mind that's certainly an issue for some.
Look at companies doing shitty enterprise work. That's where you'll find C# and .NET. 
Oh I certainly have no complaints about my salary. Just getting a little tired of the job.
This is fantastic, thanks. 
AWS?
I had lived in Australia, but I came back to the Central Europe and here I'm trying to find another job with C#. I was hired by Italians to create some 3D projects in Unity. We are working over a 3D platform for business. I have a long experience with various IT technologies, including .NET and C#, but I only worked for small companies, not corporations. I started my programming life with HTML/CSS/JavaScript and then I used Java, Python, C, C++ and C#. I've been working with c# since 10 years. I apply directly or with the help of recruiters. Usually, I get some callbacks, but because there are a lot of candidates I'm no lucky enough to be a winner. I have a work history (over 10 years) some certifications as CompTIA+ 2009 Essentials (220-701) Networking , Computer graphics and website designing and SUSE Linux Enterprise Server 10. I'm a Master of History. I have some code on GIthub, but not much. I have some projects done with Unity and UE4. I think my C# knowledge is more than average and I would like to work with .NET.
&gt;Just getting a little tired of the job. The same situation. I would love starting to work over new projects.
I repeat my previous comment so that you can find the content easily: I had lived in Australia, but I came back to the Central Europe and here I'm trying to find another job with C#. I was hired by Italians to create some 3D projects in Unity. We are working over a 3D platform for business. I have a long experience with various IT technologies, including .NET and C#, but I only worked for small companies, not corporations. I started my programming life with HTML/CSS/JavaScript and then I used Java, Python, C, C++ and C#. I've been working with c# since 10 years. I apply directly or with the help of recruiters. Usually, I get some callbacks, but because there are a lot of candidates I'm no lucky enough to be a winner. I have a work history (over 10 years) some certifications as CompTIA+ 2009 Essentials (220-701) Networking , Computer graphics and website designing and SUSE Linux Enterprise Server 10. I'm a Master of History. I have some code on GIthub, but not much. I have some projects done with Unity and UE4. I think my C# knowledge is more than average and I would like to work with .NET. All what I need is to get a code to write. I think all candidates should write an app and it will show all the skills, a style, knowing the design patterns and sticking to the best practices, etc. They can get a feedback from the company what they did wrong. And the best thing in this idea is that even if they are not employed, they can learn something in programming. It is better than analyzing their resumes/CVs by recruiters that aren't programmers. It is fruitless.
Actually, writing insecure connections WAS best practice 5-10 years ago. When MITM attacks were mostly unheard of, PageRank (Google rankings) would consider the additional time/overhead in secure connections AGAINST you. Static assets were recommended to be served over HTTP if HTTPS wasn't a requirement for supper-qjick sites (and, therefore, good Google rankings) Safari stopped supporting GetUserMedia a while ago, they brought it back, JUST, but it doesn't work try well. Try it on 3-4 iPhones. Maybe half will work.
Hetzner.com has an auction with very cheap, hosted web servers. They offer to install Windows server on them for you. I know that 60 USD Per month might be a bit much for you, but you can use a dedicated web server for all sorts of things 
Thanks. I am glad it's useful for you. I use it as a reason to keep digging on ASP.NET Core. The surface API of this framework is gargantuan and it's very easy to coast on the basic MVC stuffs.
Fire up a Windows server VM locally or out on Azure or similar. You get some free time with a new account. Now you can practise with seeing up what you need, and which techniques you will be able to use when you get out in the wild. IIS and SQLS, plus use Web Platform installer to add Web Deploy. From VS you can now set up your Publish operation to target Web Deploy using a file. When ready copy the file to the server and follow the included instructions to deploy it. App and DB are deployed automagically and incrementally. 
That would have been a good idea but I didn't do anything. The problem was most of the samples were in 1.1 and they never brought to 2.0. For your situation, the only thing that you have to care about is 'What's new in ASP.NET Core 2.1'. Everything else will work fine in 2.0. In general, it is better to upgrade to 2.1 asap because that version is gonna be out of support soon (https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)
Hey man, super cool thanks for this. Haven't seen these before so I'll have a proper read through tomorrow after I wake up... Do you have one for global unhandled event logging? I'm used to using MVC 5 with Elmah and that logs every unhandled exception. Trying to find "the .net core" way of doing the equivalent
https://www.strathweb.com/2018/07/centralized-exception-handling-and-request-validation-in-asp-net-core/ 
That's my site, sorry about this issue. I'll look into it and see what's going on.
It's a bit odd! I'm the developer for Cheatography, and I use Linux almost exclusively, so it definitely should work. I'll check into this.
Sending data over plain http has never been the right thing to do. It was what people did, but that's not the same as right. Safari sucks to work with, news at 11.
It's a shame Azure Web Apps are so expensive, I think the smallest price I could get was 30-35 $ a month.
Fantastic Idenity is now Identiy.UI shoved down your razorPages throat using AREAs ... whilst you start a MVC project ... Developers now have opportunity to re-scaffold out of the dll.. using a buggey scafolding tool that will add a bunch of AREAs and shitty razorpages straight to your API/MVC project ... Thanks for the "IMPROVEMENT". Before i'm downvoted just try it out on your next MVC/API project. If you look on github/stackoverflow nothing but "this is shit" -ignored comments.. no one saying this is great. I think there is not more of an backlash because not everyone is on the current version.(just wait until you have to deal with this mess). I can't believe they made this default... Im going to just setup ID4 and roll my own ffs. 
Backend stack... and you're pairing the question with Xamarin? Really wierd because Xamarin is for development of Mobile applications. When people talk about backend stack I think they generally refer to which technologies to use when building the database, business logic, application logic behind-the-scenes stuff? Xamarin is for Mobile development and their presentation is XAML and I think you can do styling and even js with it? So the UI/UX makes up the frontend stack or the UX stack. With .Net Core alone (or your preferred language framework) , you can build RESTful APIs already.
If you're building a Web API (from reading I infer it's your "main" project?), you could use JWT Security Tokens for Web API authorisation. Then any web app can call your API if they can authenticate properly and obtain the security token, and send their requests together with the issued token.
Yeah I just started a new project with Identity, its a very very weird approach. If there was a quick way to scaffold CRUD controllers with ID4 I definitely would have gone that route.
Just to clarify, it's Visual Studio Dev Essentials and you get 3 months free.
Yes sorry my phone must have auto corrected that 
I agree the experience could be better and I totally get the template approach since having an experience out of the box without confusion is valuable. I wonder if scaffold identity had better context to create "MVC" pages for MVC apps would be better. I know RP is MVC under the covers but it feels weird mixing paradigms.
For me, just hosting a smaller sideproject, it's important that costs are low. I'm on .Net Core 2.0, so Linux is of course an option. I just can't handle dealing with a Linux VPS myself, I feel like my knowledge and time is being stretched too thin if I do, and I believe the .Net Core Rest API/Database/Angular app is plenty work in itself.
Ok so you may want to try finding a docker or VM image that is ready to go for your needs. That means all the heavy lifting linux side will already be done for you, and you will only have to copy your files to the right spots to get going. When you go production you may choose to do it the same way or differently, it won't matter much if the stack you choose is the same. 
I thought about finding an image yes. But still, I reckon I'd have to be cautious about security issues etc.
Glad it worked for you! 
@no1name did you solve your issue? I have same problem I thought A2Hosting really has ASP.NET Core 2.1 hosting
Check out this playlist from AngelSix (Youtuber). [Link](https://www.youtube.com/watch?v=Vjldip84CXQ&amp;list=PLrW43fNmjaQVYF4zgsD0oL9Iv6u23PI6M)
They were going to get it this month. So they probably have it now. I tried he roku, which was good. 
MVP? MVVM is superior, and can you elaborate how MVVM is oudated in async/await world?
Here are a couple youtube videos that can get you a head start: * [Intro to WPF: Learn the basics and best practices of WPF for C#](https://www.youtube.com/watch?v=gSfMNjWNoX0) * [WPF Controls: Learn basic WPF controls in C#](https://www.youtube.com/watch?v=-zM486rVopk) * [WPF in C# with MVVM using Caliburn Micro](https://www.youtube.com/watch?v=laPFq3Fhs8k) Speaking of which, Caliburn.Micro is a pretty amazing MVVM framework that offers tons of features yet remains lightweight. Also check out MahApps and [MahApps Material Design Toolkit](https://github.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit) which gives you a very modern looking UI with lots of nice controls. 
Is the app pool running under the correct context? 
Sorry, still reading the actual code, but real quick thing: this code is susceptible to SQL Injection. Please rewrite the query into this, and add as parameters. INSERT INTO userInfo (columns) VALUES (@firstName, @lastName, etc) command.Parameters.AddWithValues("firstName", firstName); 
First things first: WPF doesn't use .designer.cs files to lay things out. Instead, you use an XML-like language called XAML to design your GUI, sort of like using HTML to make a web page.
&gt; Nothing really goes in the XAML code behind. Aww shit, I've been doing it very very wrong :(
You would want to use ASP.NET Core to build a REST API and then consume that REST API from your app. You can use literally anything for the backend, it does not really matter if you are developing the API for mobile, desktop or SPAs. However, C# and ASP.NET Core are really the best at what they do and can scale well, so you might as well use it. See [this](https://docs.microsoft.com/en-us/aspnet/core/tutorials/first-web-api?view=aspnetcore-2.1) tutorial on using ASP.NET Core for building a REST API and get started. 
Thank you for all yours opinions. So dear candidates, do not make mistakes in your CVs/resumes, learn at least ten technologies, have your Github full of code, but even with that all, you have no chance to be a happy programmer. You are reviewed by ladies in various moods who have no idea of programming. There have been empty seats for years, but they are prepared for ghosts only.
That's a fairly common approaches ie: a native app mostly being a shell to interact with a external service it works well depending on the context 
We use .NET Core Web API on backend, and Xamarin Forms as one of the frontends. To communicate between the frontends and that API we created a .NET Standard Library, for DTO’s and communication logic. This approach enabled us to share all that logic between 5 projects in total. :) I can highly recommend this method for maximizing code sharing.
No not wrong! Just not MVVM :). Thing I did wrong in my current project was having one giant xaml and one giant viewmodel. I’m in the process of breaking it up from into user controls with their own view models and this is making my code much more clear and and concise. Basically following that WPF MVVM in depth course. 
It's most like a write issue. If you are using an AppPool you need to change it to run as a specific user that has access to read/write to the access database file. If this is vbscript running in an .asp extension, I'll be honest but I forget if you need to grant iis_user or change the iis service user account (world wide web publishing service in services) to have read/write access to the database. 
Do you have Linux or Windows on A2Hosting? I have Windows. Not sure what you mean by heroku, what does heroku have to do with A2Hosting?
[removed]
You can do containerized hosting on it. I am using windows also. 
&gt;Have you thought about making the project image and title clickable? I think that would be a slight improvement. Thanks. It's on the list. Looking forward to your submission.
Thanks for sharing the numbers!
We for example handle notifications from Azure Functions, we push events onto a Service Bus and we have some Azure Functions set up to do work aside from regular API(sending notifications, sending emails, adding some stuff asynchronously to the DB, resizing images in Storage, working with PDFs). Other than that, like already mentioned, CQRS with MediatR is quite nice, though I believe you need to handle repeating tasks by yourself.
So far I'm loving it! I'm really interested in the embedded widgets, "I Use This" and creator interviews. Sounds like you might be able to do some pretty awesome stuff for the community. Well, you already are ;) - keep it up!
Thanks James. Always good to hear from you!
TIL people still use VB
It's not that expensive if you choose the lower tier. I'm paying £7.14 ($9.11) a month to host an App Service resource (it's the D1 tier). And I'm not paying that much for Azure SQL. Probably £4 ($6) a month.
This might aswell have been. How to deploy docker to digital ocean ? :) 
I could probably find a job that paid more, but I would have to sacrifice some of the life/work balance.
thanks, i'll update it. fixed my issue, for some reason site Connection string was wrong
thanks, fix my issue, site Connection String was pointing to |DataDirectory|mydb.accdb
Might want to also mention this: https://github.com/benaadams/Ben.Demystifier 
/u/ben_a_adams is always a good reference. 😄
You shouldn't be creating a container per user. You will need to get a list of images for that user and delete that way.
I just want to echo what everyone else said and try to add something to help you understand APIs. API can be developed in any language. All your mobile app will care about is URLs. For example: You create a method in .net web api called "GetAllEmployees" Now, when you deploy your api let's say the name of api will be "[myFirstWebAPI.com/api](https://myFirstWebAPI.com/api)". You can get all employees by simply going to "[myFirstWebAPI.com/api/GetAllEmployees](https://myFirstWebAPI.com/api/GetAllEmployees)" in your browser.(assuming no authentication is required and anyone can access it) You would also get this data in a similar way from your mobile app, you would have a class Employee and you would fill it with data by creating a list and getting all employees from "[myFirstWebAPI.com/api/GetAllEmployees](https://myFirstWebAPI.com/api/GetAllEmployees)" URL. I suggest using Postman to help you call your API.
Never heard of til now. :|
I ended up going the route you are advising. Thanks!
Yeah just make sure you keep a link between your objects (users) and the images and you should be fine.
Can you elaborate on what you mean by "link between your objects and the images"? I currently implement it as the following: "images/userGuid/image.type" and I save the paths in the db. Whenever a new image is added, I run the new image file name against all the paths and if it's the same filename, I delete the original blob (and db record) and add a new one.
Unless you are writing your own TPL-equivalent library, you can enjoy the benefits without knowing that it exists.
Ahh gotcha. Good deal. Thanks for your advice. :)
It’s pretty new. 
Depends on the situation. 
Bing is strong!
I remember the day i removed a kendo grid control from the last mvc appliaction i worked on. It was a great day. It simplified the mvc application by removing it, suddenly we wernt loading pages multiple ways, the code got simpler and easier to understand and we were no longer tied to another god damn telerik control.
.net core on linux. Microsoft is trying to dodge those server licensing fees like the rest of us.
Well, the proper way to do it would be to locate the source code, change it there, then re-deploy the site. That way the changes would be in version control and there is no risk of your changes on the web site being overwritten the next time the application is updated. If the source code is lost, then your suggestion will probably work too. Just keep a copy of the old file in case it doesn't ;)
Where does it say they are using linux?
It's the joke. I.E. gouging themselves on licensing. Har har
In Chicago market you are better off starting with MVC 5, then moving to api/{insert client-side framework of choice}. MVC 5 is very popular still, and once you learn client side you will be able to always find work.
They probably just waive the licence fees for internal use.
Nice, thanks for mentioning this. https://xkcd.com/1053/
My intent had been the latter, a screen for each view.
The thing that makes me hesitant to do this is that I dream of building a web interface for this someday, and strict separation of the views and view-models would allow for that to happen much easier. 
That defeats the purpose of the view-model, which is to act as a model of the view. While multiple views can share a single instance of a view-model, there is still a strong relationship there. Instead what you should do is push as much business logic as possible into the data model. I'll go so far as to put the views/view-models in one project and the models in a separate project in order to enforce the division between layers. For professional applications, I usually have three layers/projects. * Models and unit-testable business logic. * Services (including database repositories and WCF/REST clients). Integration testing happens here * UI (views &amp; view-models) The first two layers can be reused in a website. 
I am just learning this, so I may be way off, but basically I thought one of the core benefits of strictly keeping the VM unaware of views and building views to map against VM's is that later you just build a different view and connect it the same way to the VM, and everything just works. So you can reuse the model, services, and view models, and just have to develop, say, views via some web interface to plug in to the VM layer and deploy. 
That a very common myth. People often get carried away with the idea of reusability and try to take it much farther than is reasonable. In their quest for reusability, they forget why something exists in the first place and their code suffers for it. For example, concepts such as "currently selected customer" and "detail window is open" are common in a WPF view-model. But they don't correspond to anything in the server-side code for a Razor view or WebAPI controller. 
just wondering whether they are using a mix of Linux and Windows ServerOS or pure Windows Server OS?
What do you mean by set a DNS? DNS records need to be hosted on a name server, which in turn needs to be registered with one of the various authorities on that. Are you saying the IP of your application changes over time and you need to update A records or something?
We unfortunately have a database where almost all the data is expected to be in uppercase, not all of it, but most.
This doesn't sound correct at all. Are you using Docker?
Public DNS? Private? Do you just need subdomains?
i hope you are aware of this very easy and handy feature: (no clickbait) https://blogs.msdn.microsoft.com/amb/2012/02/03/easiest-way-to-take-your-web-site-offline-iis-6-0-or-iis-7-5-with-net-4-0/
This is probably the best bet.
The app_offline.html file is one of the best ways to go IMHO, you could even have an automated processes that places and removes the file at the beginning and end of whatever process needs to run.
Depends on your setup, but a single host with docker I would say: take a look at etcd if it's in kubernetes: you're doing it wrong, there is an already available internal dns if docker-compose: please read the docs again (since you will be using docker-compose to resolve stuff)
https://docs.microsoft.com/en-us/aspnet/web-forms/overview/deployment/advanced-enterprise-web-deployment/taking-web-applications-offline-with-web-deploy
This is my main option right now with the Host One tier so far... Please I have a few questions. I have: Netcore 2.1 Webapi backend (SQL server database) VueJs frontend 1- Did the support to host compiled (built) webpack app like Vuejs? 2- Did they support netcore 2.1? 3- How is the speed and performance? 4- Worth the price? 5- Why not a2hosting.com?
&gt;What do you mean by set a DNS? DNS records need to be hosted on a name server, which in turn needs to be registered with one of the various authorities on that. Are you saying the IP of your application changes over time and you need to update A records or something? the dns server the container uses.
yeap created the entries in my own private dns server as a forward lookup zone
&gt;Please tell us more about your scenario so that we m@y understand how best to help you. The right solution might be to do something than what you've asked. well said...it takes time...how can I see all the dns state of all of my network?
&gt;if docker-compose: please read the docs again (since you will be using docker-compose to resolve stuff) so you mean? [https://docs.docker.com/config/containers/container-networking/#dns-services](https://docs.docker.com/config/containers/container-networking/#dns-services) I am using a container hosting solution from Microsoft. [https://docs.microsoft.com/en-us/azure/app-service/environment/create-ilb-ase](https://docs.microsoft.com/en-us/azure/app-service/environment/create-ilb-ase)
If you're trying to implement high availability by having one microservice instance take over for another microservice instance, you don't want to be modifying DNS records. You still haven't told us what you're trying to do, so I can only guess. One typical way to implement high availability is to use a distinct IP address to identify your service, separate from the IP addresses used to identify your machines. The machine that's running as the Active machine takes the service IP. * You have one machine, ServerA, with IP address 1.1.1.1 with a DNS record ServerA.mycompany.com. This IP/Hostname is only used for administration. * You have another machine, ServerB, with IP address 1.1.1.2 with a DNS record ServerB.mycompany.com. This IP/Hostname is only used for administration. * You have a separate, public DNS name for the service itself that users use, MyServiceApi.mycompany.com with IP address 1.1.1.3. * ServerA is the Active server, so it responds for 1.1.1.1 and 1.1.1.3. * ServerB is an Inactive server, so it responds for only 1.1.1.2. * .. time passes .. * ServerA dies unexpectedly. * ServerB notices that ServerA is not responding. * ServerB assigns IP address 1.1.1.3 to itself and begins responding to requests. This is the old fashioned way of doing it, but gives you a general idea of the process. Nowadays, there are redundant routers / load balancers that do this for you.
The app_offline.htm might work for the short term but long term you REALLY need to look into setting up your system so you can do backups on the fly/swap stages/do processing without taking the entire site down.
Thanks so much, I ended up editing my solutioninto my post, in case other people find this thread as well.
Is resharper necessary anymore or even still provide much more than visual studio does out of box? 
Azure has a free tier that is okay for experimentation. It puts your app in hibernation after some time so after idling there's a delay when you access it again. You get an .azure websites.net or something like that but you cannot put a custom one on it. It is very easy though as you can do it right from Visual Studio. It's certainly not for production stuff though ;) There is some free credit that you get when you sign up that might help you to get a better tier that will allow custom domains and it'll be a little faster. For a domain I'd just use a big registrar like GoDaddy. Anyway, the big advantage of Azure is that you'll learn some great things that might come in handy if you aspire to be a (cloud) developer in the future.
There is a comparison for ReSharper 2018.1 vs VisualStudio 2017 15.6: https://www.jetbrains.com/resharper/documentation/comparisonMatrix_R2018_1_vs2017.html
I've started using roslynator and not missing resharper
Haven't used it in about 2 years now. VS + code analyzers (with stylecop sets) pretty much solved all my teams needs and is easier to distribute. The ONLY thing I really miss is it gave you a T4 template editor that there is no good replacement for (yes, I tried all of them RS was WAY better). That, plus RS bringing a lot of large projects to their knees kind of killed it for us.
I'm a fullstack web developer. I was a fan and long term user of R# for about 8 years but last several years I've been trying to get rid of it because it was causing more problems than giving benefits and since this summer I was able to completely switch without losing any important functionality I needed. So I'd say it's no longer a must have. If you are developing for web it's even better without it, for WPF it may be good to have, for other - probably not needed as well.
Cheers :) We do something similar, but there's a bottleneck I'm trying to resolve. I'm guessing it's going to be something that will resolve itself as we scale, as long as we keep an eye on who knows what and the relative experience levels. Thanks for the insights, it's always helpful :) 
I use it for its decompile source option. It's really the only thing I need. 
app\_offline.html is the easiest way to go for sure. I was trying to figure out a way to allow users to enable/disable the app\_offline.html page itself but couldn't figure out a decent way to do it so let me know if you do! I was playing around with the idea of some step in deployment since all the requests are rerouted for the web app itself to that offline page.
Exactly what I meant! (just was a bit lazy with linking to them from my phone)
I've switched to Rider a few months ago and it's like VS + Resharper, but super fast. It took me a couple of days to get used to it and set up all my shortcuts. I'm finding myself a lot more productive now.
&gt; The easiest way to rethrow the exception without losing the original stack trace is to just do throw and don’t pass the exception object. WHAT. You can do that? Hm. Wish I had known this sooner.
I haven't used resharper for about a year now, I haven't looked back. My colleagues who do use are always complaining about how slow their machines are.
Not a huge deal, but when you add `?WT.mc_id=social-reddit-marouill` to all of the links you submit, it makes it harder to find the other related conversations that might be submitted to this or other subreddits without that parameter. Usually when official .net core msdn links are submitted there is a good amount of discussion both here and in /r/programming but that can be fragmented if the urls aren't exactly the same
Your post has been removed. Self promotion posts are not allowed.
It would be pretty cool if I could do something like this: [ContractAnnotation("null =&gt; -1")] int Foo(string s) { if (s == null) return -1; return s.Length; } public void Bar() { var x = Foo(null); if (x == -1) { Console.WriteLine("expression is always true"); } else { Console.WriteLine("detect this as unreachable"); } } similarly if I changed the first line in `Bar()` to `var x = -1;` it could detect the truthiness of that `if` statement like this does: public void Bar() { var x = true; if (x) { Console.WriteLine("expression is always true"); } else { Console.WriteLine("detect this as unreachable"); } } and this does: [ContractAnnotation("null =&gt; true")] bool Foo(string s) =&gt; string.IsNullOrEmpty(s); public void Bar() { var x = Foo(null); if (x) { Console.WriteLine("expression is always true"); } else { Console.WriteLine("detect this as unreachable"); } } The whole engine here could stand to be significantly improved if it were to follow all known compile-time values (instead of merely `null`-ness, `true` and `false`) through local variable assignment statements and contract annotations on the method calls made in those methods.
The refactorings are still pretty useful imo.
Thanks! I'm working really hard to get an RC out now, more amazingness to come!
Thanks! Does angular makes it a lot easier to create the front end? When I am learning xamarin you can design the visual part without coding. Wonder is there is something like this in asp.net? 
is this the one that fixes the new relic agent bug?
Angular is a client side framework. That means that the display running in your browser is clearly decoupled from the code running on the server. This can also be done with ASP.NET, but it's easier to blur the line when you're developing the fully application in the same codebase. I personally would recommend a large company to isolate their client side code from their server side code, but I don't think there will be a big benefit for a single neophyte developer. ASP.NET has a visual designer, but I personally find that it can produce code that's more confusing than you might prefer.
It can, but these frameworks have a steep learning curve. Our team is building vanilla JavaScript web components instead, because we want zero dependency components that can last 10 years. It avoids all the command line, build/bundle stuff.
You can store it in a file and instead of read the file every request you can cache it into the application cache and define a 1 minute expiration time, so you will have just one file read per minute. The problem with IIS ofline .html is that once enable your website won't run so the user won't be able to delete them
Sorry. What do you mean by zero dependency components?
Take a day and watch this learning path [https://mva.microsoft.com/learning-path/aspnet-core-20-23](https://mva.microsoft.com/learning-path/aspnet-core-20-23) Well worth it.
Unless OP works for MS and wants to keep track of how much traffic his link brings in
The free tier doesn't offer database storage after one year though. 
Sonar and Stylecop
No dependency to Angular, to React, to jQuery, or any other library.
[@lastName's latest tweet](https://i.imgur.com/QQMv1v1.jpg) [@lastName on Twitter](https://twitter.com/lastName) - ^I ^am ^a ^bot ^| ^[feedback](https://www.reddit.com/message/compose/?to=twinkiac)
Because it's so easy to learn and understand, and does almost everything C# does at close to the same speed. C# people love to hate it but it's almost always undeserved.
This article fails to mention that Microsoft has done a 180 and decided to move forward with VB.NET support in .NET Core 3.0.
Australian here. Any post-doc positions going in Adelaide? :) I usually write desktop apps, so I might be speaking out my arse. With web development there is server-side (the code that generates webpages) and client-side (the web page the user downloads). IMO it is a big problem that client side is basically HTML + Javascript\*. Responsive (single page) sites use the javascript to get more data from the server and update parts of the page, rather than reload a whole new page. To make this easier, you have libraries like Angular. To learn, sign up to pluralsight and do some of the courses. That is what I have been doing lately and it makes things so much more understandable. \*WebAssembly you to write in something other that javascript, e.g. c# with [blazor](https://blazor.net/), but is in its infancy. &amp;#x200B;
At the risk of sounding like a shill cause I keep posting this, try watching "WPF MVVM In Depth" by Brian Noyes on pluralsight - it gives a few different ways to create the Views and ViewModels The ViewModel is coupled with the View, but I don't think it "owns" the model. The model and other dependencies are injected into the ViewModel, and you could have the same model / service injected into different ViewModels. (Someone tell me if I'm wrong). There are some dependency injection frameworks but I haven't used one yet because my apps are pretty simple. I just manually inject via the constructor. From what I understand, the frameworks automatically inject the dependencies when the ViewModel is created, and you can change the dependencies in some centralised place to make testing easier.
I'm still learning too, and am interested in what you do with Views consisting of many child views (as UserControls). Currently I have instances of the ViewModels in the top-level ViewModel, and bind the DataContext of each UserControl to these. Most of my apps are a single window with tabs and lots of controls. (They are for controlling machines, so lots of indicators, buttons, images etc). Should I instead have services to locate the models? I guess that would mean a DI framework?
https://github.com/Cybermaxs/awesome-analyzers 
Thanks for the list! I switched from Resharper to Rosylnator plus some other lightweight extensions not too long ago and have found it to be great.
SonarQube 
Close? With option strict turned on it's just the same. 
Usually blog/ should route to blog/index.chstml will 
Microsoft.fxcop.analyzers Stylecop.analyzers SecurityCodeScan
Roslynator
Try enabling `stdoutLogEnabled` and take a look at the logs.
I made the image and heading clickable.
 I believe you and in excited. What is your source / evidence?
That wasn't logging anything due to the permissions error I mentioned. I got it fixed. 
Can you please tell us how you solved this problem, in case we get into the same situation? Thank you :)
https://github.com/dotnet/vblang/issues/322
&gt;ithub.com/mj1856/SimpleImpersonation FYI this was because UAC wasn't turned off correctly. [https://stackoverflow.com/questions/51862476/net-impersonation-not-working?noredirect=1#comment90678263\_51862476](https://stackoverflow.com/questions/51862476/net-impersonation-not-working?noredirect=1#comment90678263_51862476)
I prefer StyleCop. Best to get it in there at the beginning of your project though. 
I'm late to the party but if you have access denied problems like this you can use [https://docs.microsoft.com/en-us/sysinternals/downloads/procmon](https://docs.microsoft.com/en-us/sysinternals/downloads/procmon) and search for access\_denied. You had logging this time but sometimes there isn't and procmon is a life safer. 
That makes sense. You can impersonate all you want but if your process is not elevated you don't get Administrator group permissions. If you have a need for a program which performs such actions without user intervention, I recommend writing a Windows Service which can run under Local Service or Network Service accounts, which can do those things. If there is also a desktop portion of your app it can run as a separate binary without elevation and interface with the service.
I've used that before to help diagnose things. It would have helped in this case I believe, I just figured it out before I was going to resort to combing through that log
https://www.microsoft.com/net/learn/architecture is definitely a good place to start. Just keep in mind that these are just patterns and blueprints (architecture) to laws and rules. Use them where it makes sense. 
Refresh Tokens should be securely stored (not possible in a purely browser based app) so there’s 2 methods. If you have a server side component you can use the refresh token + bearer token combo. If you have a SPA or a browser based app you can look into doing a “Silent Refresh” https://www.scottbrady91.com/OpenID-Connect/Silent-Refresh-Refreshing-Access-Tokens-when-using-the-Implicit-Flow
&gt;This may be a solution but it sounds awful. 1. Silent refresh triggered (e.g. by event triggered by access token lifetime, or 401 received from protected resource) 2. Open iFrame 3. Issue OpenID Connect authorization request including a \`prompt\` parameter with a value of \`none\` 4. Receive response 5. If tokens received, update session 6. Else, interrupt UX and redirect main window to OpenID Provider
What you need is an Authentication and Authorization server. You would initiate the authentication flow from React and get redirected to your Auth server (aka Implicit Flow). When you sign in with google, you are returned back to your app with a token (or 2 tokens, depending which protocol you are using Oauth2 or OpenId Connect, OpenId Connect is prefered for authentication). The token should be included in each request from your React app to your dotnet core API. &amp;#x200B; Authentication and Authorization is a deep topic, there are some good pluralsight courses which talk about Oauth2 and OpenId Connect (check Kevin Dockx for example). For auth server check IdentityServer4 and/or OpenIddict
Christ! I just finished upgrading my samples to 2.1 last week.
Constant state of update. At least for this one, you just change the csproj
&gt; In addition to these features area, we’ve also: Updated our web templates to Bootstrap 4 and Angular 6 Woo! I, right now, only care about Bootstrap 4, but I'm excited about that because doing the update myself and then scaffolding things on top of it (like Identity) can be such a pain because it's still using BS3
Great read, thank you. This does not talk about ASP.net unfortunately.
FYI your tables are broken on mobile. No way to scroll or zoom out to see them. 
I wonder if the String.Equals benchmark is reliable given this code: private string String1 = "Hello World!"; private string String2 = "Hello World!"; Because the strings are literals, they are interned, and there is only one copy. If String.Equals checks for that, it will do almost no work to determine equality.
&gt; Do you use refresh tokens? Luckily, for now I live that NTLM lifestyle, for better or worse. Before that I let Auth0 deal with it. For my Server-&gt;Server communication, I tend towards short-lived tokens because my preferred mode is both 'airtight hatch' safe and low penalty for continually generating new tokens. &gt; Are they worth the added complexity? I mean, it's a value balance between: - How important is the data in the app/what it can do if misused. - Will my reconnect flow actually handle situations like 'oshit users account is compromised, cached credentials must be invalidated and require relogin'. If the cached credentials still refresh, it just *looks* pretty. (Yes, I've seen some absolutely stupid auth schemes in my day.)
Watching it now, quite informative, thanks for the reference!
Good article. Can you include gc modes 
I just use an exception filter at the ASP.NET pipeline level. https://stackoverflow.com/questions/24201795/how-to-use-exception-filters-in-mvc-5
Yes exactly, that benchmark is completely worthless. A good one would be: private string String1 = "Hello World!"; private string String2 = "Hello World?"; &amp;#x200B;
You can use Stackify. We automatically collect unhandled exceptions via .NET profiling. We can also take exceptions from log4net, NLog, or Serilog. https://Stackify.com
Really good info. Updated the post a bit with a new section. Takeaways were : 1. When the strings are of the same instance, .NET Core seems to have made some optimizations there that give great performance. 2. When the strings are not the same instance, but are small, no performance gains at all (If anything, slight performance hit). 3. When the strings are long, the optimization for .NET Core kicks in. In short. Benchmarking is hard when there is so much that can be optimized away! Thanks for setting me on the right path though!
We use application insights
We tried it, but the UI on the Azure Portal is cancer. It is a cool idea, and reasonably priced. 
Use the analytics interface and you will be in log analysis paradise.
I'll check it out, thanks. 
I love a service called sentry.io, you can self-host it, and it's not language or framework specific. I also wrote a more modern client/middleware for it, for ASP.NET core. https://github.com/mausworks/pidget
Thank you. You mean workstation/server mode etc.? I'm not sure if there's enough to discuss about in in a separate post, but you can find more details on GC modes e.g. here: [https://blogs.msdn.microsoft.com/seteplia/2017/01/05/understanding-different-gc-modes-with-concurrency-visualizer/](https://blogs.msdn.microsoft.com/seteplia/2017/01/05/understanding-different-gc-modes-with-concurrency-visualizer/) &amp;#x200B;
The default Identity Configuration uses [Session](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity?view=aspnetcore-2.1&amp;tabs=visual-studio). If you want to use Token have a look at [IdentityServer](https://identityserver4.readthedocs.io/en/release/) as a starting point.
Thank you! Since I could add in my asp net project without identity server methods which generate tokens and send them to the client, how is identity server special?
Awesome, I'm going to check it out. Thanks. 
This made me chuckle. We're in the progress of removing Kendo from our main application - not much left to remove. We'll definitely be having a beer once that crap is gone for good!
Keep up the good fight. The next place i worked at wanted to reimplement some javascript table bollox, which to its credit was open source. I wrote a pangination, filter, sorting table thing over the weekend just to avoid the pain of shoe horning another lib in for a simple problem. I suspect its a go to for people who cant program.
Thanks. For me a big part in learning programming is to learn how the people in the industry talk. So thanks now i can add one more word into my programming vocabulary.
Ok noted! I am thinking it is just easier to learn one language that can do all. I mean learning c# is hard enough, now i have to learn java/swift. I think maybe i just learn c# and be a jack of all trade. Ok i noted what u said. Used c# for web and dont bother angular now just use razor. Later on when i want to learn apps for phone learn java. Thanks alot &amp;#x200B;
This is awesome. I am looking at it now. Thanks alot
ok I got the discount now. 12.99 for the udemy course. I think i will shelf Angular now. I am not very good with programming so i think i will stick to razor. 
HAha not sure about post doc. But i definitely seen alot of jobs on [ASP.net](https://ASP.net). I am with Puralsight now. unfortunately the [asp.net](https://asp.net) course there sint updated. I follow one course and it is using "Bower" for the bootstrap and the new VS dont support that anymore. They didnt update thier courses. I go to the meetup session for .Net. Ilterally cannot understand anything they talk about there. However I saw a few employers attending these events. I think that is a good spot to find job. &amp;#x200B;
Open a command prompt as admin, navigate to the directory your project is in and execute `dotnet &lt;your projectname.dll here&gt;`. Running from the cli usually gives more information as to what's going on. Also check your environment variables that the dotnet variable is there.
I edited the text with the solution. I also mentioned it ran fine running it via command line
Use Serilog with Sql Server Sinks and wire up the Serilog.Extensions.Logging provider. Done.
Well said. &amp;#x200B; I have tried to develop an internal application using Xamarin and it was a nightmare. I kept having issues and Visual Studio crashes. I decided just to develop in Java/Android Studio and it was a much better experience. I had issues with emulators too, I got in touch with microsoft and they were blaming Google for making changes to some of their tools and Visual Studio was no longer compatible and they could not tell me if the issue would ever be fixed lol..... &amp;#x200B; Native development is the way to go. Better support, better documentation, more tutorials and helpful posts on stackoverflow.
Learning C# isn't hard. Learning programming concepts(variables, classes, conditionals, collections) is hard :) What do I mean by that? Programming languages are very similar to one another, and most of them have the same concepts, so once you learn those concepts in C#, you will already know them in other languages, you won't have to learn them again. So once you learn classes in C#, they look and work almost exactly the same in Java, same goes for conditionals etc. You have to understand what a class is, or what conditional is, or whatever is. Once you understand that, you can easily write those things in many languages. &amp;#x200B; Developing software, especially mobile apps, is not only knowing how to use a certain language, but also how to use frameworks and libraries. Xamarin is a framework which uses C#, Android SDK is a framework which uses Java. C# as a language may be jack of all trades, but frameworks are just as important as languages. Xamarin is not great, it's filled with bugs and problems, it has many outdated things that don't work anymore etc. Android SDK on the other hand, is developed by Google and it works great. It also has some problems of course, as any framework does, but not nearly as much as Xamarin. Xamarin is nothing more than Android SDK ported to C#. So why not just use original thing? Especially since C# and Java are so similar, they almost look like the same language with minor differences. &amp;#x200B; Focus just on C# for now. And only on web development. Once you are able to make a simple website which can store and delete information in database, then try to learn mobile apps. Just don't try to learn many different things at once, it's too overwhelming :) Good luck on your path to become software developer.
I'm most likely going with application cache. Thank u.
In my limited experience, debugging is better in VS but I think rider is more intuitive and faster. 
I'm curious, what reason is there to care about code coverage?
How do you consume the logs? Just look in sql?
Glad I could help! My previous workplace had so much help from Sentry, it's super useful, and helps you find even the trickiest bugs (but sometimes you need to aggregate data over time first). Conventional logging doesn't stand a chance. I don't know how many times I've dug through Exception logs, trying to find which HTTP request was responsible for which exception, trying to figure out what the common denominator is for all these boogeyman-errors. Sentry is Amazing (yes, with a capital A); because you have all useful information, exactly where you need it. Which user triggered which error, and what they *actually* posted in that form (not only what form value was erroneous) It also does a really good job grouping exceptions/errors logically. But now I'm starting to sound like an advertisement.
&gt; because our laptop started to be very slow with visual studio and ReSharper. Try Visual Studio without ReSharper. Because ReSharper is what makes it actually extremely slow. And VS became a lot better in the latest versions. I honestly don't miss ReSharper a bit - good riddance.
Why not vscode?
Yes. I think it’s better. Especially because its UI is much nicer and more powerful. I haven’t used Visual Studio for months since I started with Rider (and I haven’t ever used intelliJ or whatever).
I do miss it too much, or would if I didn’t use Rider instead. In part because VS still has too much trouble navigating to sources that are direct assembly references and not project references. 
SOLID principles. Unit testing vs integration testing. How and why. Algorithms. Especially sorting for an interview code test. Dumb but comes up a lot. Difference between data structures. Events\\delegates\\lamdas Action\\Func Async\\Await Tasks. Concurrent programming in general. General questions about security. General questions about the database. &amp;#x200B; I don't have any resources off the top of my head but I'd expect a senior interview to cover all of this. I'd expect you to know a lot of this in a mid-level interview. &amp;#x200B; &amp;#x200B;
 How so? I've never had a problem navigating to an assembly reference.
I concur with Kyle0654 that a decent understanding of how garbage collection works and reflection questions could come up even if it's not game dev.
Depends too... Is this c#for console apps or services, or c# to power an api back-end? If you're doing web stuff, I expect you to know some front end even in a back-end position, because knowing what the other side is capable of and what's difficult for them is good teamwork. Adding to random stuff to know: the difference between net core and standard and framework.
Yes. Way, way too high. 
I think it's all about the depth of knowledge. Some people 'know of' generics. If you ask them about generics they'd be able to say &gt; Yeah, generics are awesome. I use List&lt;string&gt; all the time! But someone more senior could go into a lot of depth, explaining not just how to use a few canned generic classes, but how to create them, be able to explain all of the constraint options for types, explain contra/co-variance, know all the places generics can be used (IE - not just vaguely aware of generic classes, but interfaces, methods, delegates), maybe they'd be able to explain how the CLR knows methods are generic and talk about the various metadata accessible through reflection, and then, I mean, just being able to actually work with them in a meaningful way. I suck with generics so like, I use List&lt;T&gt; just fine and I can fumble my way through a really simple generic class but when I look at more complex examples - like some of the Linq source code - the truth is I suck. If you asked me in an interview to write a non-trivial generic class given a bunch of specific criteria, I wouldn't even be able to get the syntax remotely close on a whiteboard. But some devs could do that and give a 20 minute lecture on their design choices and the underlying implications and all that jazz.
Yes. A junior developer is someone straighr out of a 4 year CS program. They would know almost none of this especially the c# specific stuff.
Be confident in what you know and honest about what you don't know. A little BS might go unnoticed, but if you try to sound like you know something and you don't know it as well as the interviewer(s) you're going to be out the door.
Good list. Throw in DI, and don’t forget brushing up on explaining the basics like Class vs interfaces etc those have always been starters regardless of level. 
I agree on DI, but class/interface is programming 101 (aka if you need refreshing on that, you probably shouldn't be pushing for something above junior level)
When you say it's a bit overkill and to just use jwt tokens...isn't that exactly what identity server does for you?
I really wish people would stop using Cake. It is overlay complex for something that is really easy to do these days with a simple ```csproj``` and a ```Program.cs```. This package is a great little CI helper for writing "Targets" with dependencies that can be invoked easily. https://github.com/adamralph/bullseye Please people, stop using Cake. There is just so many moving parts for something so stupid-simple.
I think if you really like resharper then Rider is probably worth a consideration.
To be fair, you get *way* more with that $539/yr than you do with $139 from Jetbrains.
You are right but, I use a lot of refactory and navigation shortcuts from ReSharper/Rider. Anyway having Rider I can try it without ReSharper. Thanks for the advice 
Pretty sure it uses cookies, and not sessions. Sessions are not even enabled in ASP.NET Core by default. Though the implementations are kind of similar as session do use a cookie too.
I just did a search and there is one called Building a web app with ASP.NET Core, MVC, Entity Framework Core, Bootstrap and Angular. It says it uses Angular v6 so that is pretty recent?
&amp;#x200B;
Did you know cake makes it really easy to use Bullseye without the need for csproj or Program.cs? ** Install tool once ** dotnet tool install -g Cake.Tool ** Create bullseye.cake #addin nuget:?package=Bullseye&amp;version=1.1.0 using static Bullseye.Targets; Target("default", () =&gt; Information("Hello, world!")); RunTargets(Environment.GetCommandLineArgs().Skip(2)); ** Execute ** dotnet cake bullseye.cake ** Profit ** Bullseye: Starting... (default) Bullseye/default: Starting...Hello, world! Bullseye/default: Succeeded. (6.04 ms) Bullseye: Succeeded. (default) (19.2 ms) Cake is just C# and .NET it's a superset of C# which means you can do everything you can do in C# plus a littler more. There's no magic. One advantage is that it also works with mono and full dotnet, see the script above could also just be executed as mono Cake.exe bullseye.cake or on Windows Cake.exe bullseye.cake It's only as complex as you make it, it's actually fewer steps than the .NET Cli, create text file and *profit* :)
Honestly I think code coverage is probably the least important metric when it comes to test. It doesn't cover test quality, correctness or literally anything that actually matters in reality.
So, I am curious... Do you have the same opinion regarding say FAKE, or Peale? Or is the grudge you have only directed at Cake?
The debugging is okay but really not up to the standards of an IDE (nor should it be). 
How is your experience with its Web API debug experience for .NET Core? I've had problems with that and stopped just short of diving into the rabbit hole.
In my option it give you a metrics to know how much code is covered by test and give you spots/paths not covered. This help you to find corner case or simply not used code you can easily remove it
Speed, performance, fastness
A lot of the refactoring and nav shortcuts are in the newer versions of VS. I turfed Resharper earlier this year and haven't looked back.
How is it more powerful than Visual Studio?
Is it free yet? No? Then we'll stick with Visual Studio Community, thanks.
So Identity Server is well, an entire server you need to run to handle your auth. While simply adding JWT tokens to your .net core project is a bit easier, you can integrate it with the baked in core User/Role Identity stuff. &amp;#x200B;
The last job I went for I studied for about 50 hours solid. I knew they were going to give me online tests so I just kept doing them to death. When I got hit with the questions they were on topics I really only knew the basics but because I had practised passing tests I pulled it off and nailed the tests. If you have done the homework and the ask you to whiteboard or ask obscure questions you will be more confident which will show. &amp;#x200B;
Dear sir, I haven't got past the S in solid. After looking at all the code bases I've worked on for the last 20 years, neither has anyone else. Best Regards, S
Why not just "dotnet run"? Then you can use any IDE/debugger.
There really is no reason not to just do "dotnet run".
Been using Rider for a while, since i'm now developing on a Mac. The performance is horrible on a 4K res monitor. The only "solution" is to run it in a relatively small window. Seems to affect all Jetbrains IDE's on macOS.
Sorry, I am confused... Where does mono come into this? You don't have to install mono to run Cake. I think you might have a misconception about the requirements in order to run Cake.
Another one: [https://stackoverflow.com/questions/51991070/possible-net-jit-call-parameter-lifetime-bug](https://stackoverflow.com/questions/51991070/possible-net-jit-call-parameter-lifetime-bug)
Maybe the latest version officially supports .NET Core, but it's been a long standing requirement that you need mono. https://github.com/cake-build/cake/blob/develop/build.sh#L97
&gt; Clean Directories ```Directory.Delete("/somewhere", true);Directory.Create("/somewhere)``` &gt; Compile Code ``` using static SimpleExec.Command; Run("dotnet build ./project"); ``` &gt; Run static analysis tools I'm sure there is a simple CLI to invoke as well. How is this a *feature* of Cake? &gt; Run unit tests ``` Run("dotnet test ./project"); ``` &gt; Run code coverage tools I'm sure there is a simple CLI. It isn't a feature of Cake. &gt; Generate reports Same thing... &gt; Push packages to MyGet/NuGet/Chocolatey Run("dotnet nuget push"); &gt; Generate release notes It isn't a feature of Cake. &gt; The list goes on No it doesn't.
&gt;It isn't a feature of Cake. Yeah, you must be right, I made that up. No, wait... [https://cakebuild.net/api/Cake.Common.Tools.GitReleaseNotes/GitReleaseNotesAliases/](https://cakebuild.net/api/Cake.Common.Tools.GitReleaseNotes/GitReleaseNotesAliases/) [https://cakebuild.net/api/Cake.Common.Tools.GitReleaseManager/GitReleaseManagerAliases/](https://cakebuild.net/api/Cake.Common.Tools.GitReleaseManager/GitReleaseManagerAliases/) Adding that functionality into Cake was actually one of the first contributions that I made to the Cake project.
I wasn't asking to use Bullseye in Cake, it has it's own concept of targets. My point is that the required feature of "Targets" exists outside of Cake. &gt; It's only as complex as you make it, it's actually fewer steps than the .NET Cli, create text file and profit :) Except the ```build.sh``` and ```build.ps1``` and it's 100+ line of bootstrap code that has failed me in the past. Or managing the ```tools/package.config``` to make sure you pin your dependencies (God help you if you don't). Debugging is complicated in each IDE, same thing for intellisense. Why not just use C# the way it was meant to...
That tool also exists outside of Cake. Cake just wraps it. https://www.nuget.org/packages/GitReleaseNotes/ If this alias (not a tool) is *the* reason you choose to bring in an unwieldy dependency, then go for it.
You are absolutely correct. I am also a maintainer of both of the tools that I referenced in my above comment, so I am more that familiar with them. Being able to wrap those tools, is exactly one of the main reasons that I choose to help maintain, and use Cake. Cake is a build automation and orchestration tool. It allows me to easily wrap these tools, and literally hundreds of other tools, without the need to go digging to find out the command line switches, and introducing boiler plate code to do the work that I am trying to do. Most things are a simple alias away in my Cake script.
&gt;Cake is a useless dependency. Perhaps in your opinion, but we have a very large community of people who are using it, and who are getting a lot of usage out of both it, and it's addins. As of today, Cake has been downloaded over 2 million times: [https://www.nuget.org/packages/Cake/](https://www.nuget.org/packages/Cake/) and the 223 addins that we know about and track over 5 million times: [https://www.nuget.org/profiles/cake-contrib](https://www.nuget.org/profiles/cake-contrib)
If you have .NET Core you don't need build.sh/build.ps1, above was a complete example. Install Cake (this is standard .NET cli stuff) dotnet tool install -g Cake.Tool Create your C# file Then execute that dotnet cake bullseye.cake Done. Cake is just .NET so if you want to use Bullseye, SimpleTask, what cake provides, it's totally up to you. Advantage is that as Cake engine runs on any OS / Framework / runtime you can have the choice. Also the reason for build.sh / build.ps1 is to have a recipe how do install dependencies, including the .NET Core SDK your using. So when you walk up to a repository you can just do * git clone * build.ps1 / build.sh And you'll get the right SDK versions, cake etc. so you get reproducible builds. If you use things like .NET Tools or Containers you've got other means of boostrapping.
&gt; Most things are a simple alias away in my Cake script. Look, my home is .NET. I love C#. I've been using it for years. I've also developed and maintained many large systems/projects in many *different* languages/eco-systems as well (C++/C/golang/Python). There is something about JavaScript and C# developers that make them want to over-architect things and bring in large dependencies without thinking. I just created [a PR](https://github.com/Firwood-Software/AdvanceDLSupport/pull/46) for just this reason. I've really digged golang because the entire dev community puts a large amount of thought into the tools they choose and the libraries they depend on, and it makes life easier in the long-run. I hope C#/JS devs will eventually come around and think twice about "simply add a reference".
What about ```tools/packages.config```? What about debugging and intellisense? How many times do you just ```Console.WriteLine``` because the debug experience sucks?
I personally have no trouble with Web API debugging. Its debugger does very well with async code like most WebAPI stuff. As far as WebAPI in .NET Core specifically, I haven't had the chance to test that unfortunately.
Write programs that a mid-level/senior would write.
Have you got a link to those online tests?
I agree on DI too, especially now with .NET Core and its IServiceProvider
Just last week I got asked to explain the difference between a class and an object. Seriously. It threw me due to its simplicity and, in retrospect, was a pretty shrewd question. The purpose, I presume, was not whether I knew the answer but to determine how well I explained it. The key point is that the team were heavily agile based and, based on this and other questions I got asked, I think they had experienced some considerable friction in the past due to poor communication and were keen to avoid going forward. This was for a mid-level contract position. I was completely unprepared to answer the question even though I've been coding .Net in an enterprise environment since the early 2000s. Before that it was C. The point is this: don't assume you won't get asked simple questions. Know the juicy stuff sure, but make sure you can cover the basics too.
If you have Cake installed as a .NET tool, via container or globally i.e. via Chocolatey or homebrew you don't need `tools/packages.config` at all. `build.sh`, `build.ps1` and `tools/packages.config` is just a way if you want to boostrap the installation per repository. So you get the exact dependencies used when the code was last built. But if you get your Cake elsewhere you don't need them. So these are ways of acquiring Cake - but they're not part of "Cake" / something Cake depends on. So guess it depends on what your trying to achieve, Cake is targeted as an build orchestration tool. Which means it'll most likely be executed on a build server where debugging experience is basically based on what you're logging. It's rarely possible or desirable to single step on the server. That said Cake is just .NET Code so you can attach to it's process just like any .NET process, single step through the code. Often though scripts aren't that advanced, the goal isn't to replace console/web/windows applications, if your build process has thousands of lines you're likely going beyond the scope of what the tool was intended for. If you have the need for something really advanced, then you can create an .NET assembly package that as an nuget package and load it just as I did in my example with Bullseye. That assembly can of course be unit tested, debugged and authored as any other .NET assembly. Regarding intellisense, if you're using VS Code you can get full intellisense, code snippets, debugging assistance, variable watching etc. So in VS Code I would say you have a very rich experience. There's an excellent playlist on YouTube which showcases some of the features you get in VCCode https://www.youtube.com/playlist?list=PL84yg23i9GBg7_7an5Qbo0Qllg-l2e-q- In Visual Studio the experience isn't as polished as VS Code, currently you get debugging and syntax highlighting, we're working adding intellisense to Visual Studio, we've been blocked by an bug in Visual Studio, but the release of 15.8 got that sorted, so we can continue that work. I'm in no way saying you have to use Cake, use what ever tool that works for your team. But actively seeking up people on the internet discouraging them to use Cake without knowing what it is just seems like a waste of energy and time.
So you don't use an IoC container and all of your methods and properties are public? You use one big interface for a class instead of using multiple based on how the functionality should be separated? Solid like everything has degrees I agree the S is the most important but it should be a conscious decision to be breaking the other rules not just ignore them.
Kind of sounds like a trick question to throw you off to me.
It was kind of a joke. But.. * IOC imho is missused because its the cool new thing, people dont seem to really understand its purpose. * Sure I scope, tbh i do make too much stuff public, not enough test driven. * Interfaces are over used, cool new thing etc.. apart from those crazy java developers. * Was joke
I target core and do not have to manage any project files. Other than the initial creation. 
When was the last time that you tried to use debugging or intellisense with Cake? I can say that I haven't had the need to do a Console.WriteLine in a LONG time!
Better performance with larger solutions, that's the main thing.
They aren't comparable. Rider is a full fledged ide, vscode is really just a code editor.
Broken link
If it's a *dynamic* assembly, you can use [`AssemblyBuilder.Save(…)`](https://docs.microsoft.com/en-us/dotnet/api/system.reflection.emit.assemblybuilder.save?view=netframework-4.7.2): var assemblyRef = ...; if (assemblyRef is AssemblyBuilder assemblyBuilderRef) { assemblyBuilderRef.Save(…); } else { /*handle error condition*/ } 
That has been my experience as well.......
AddMvc() also enables Cors but it’s a blank one, since it’s after your cors setup maybe it is overriding it and the services can’t find he one you named “Cors”?
that "contentType: false" is throwing me off. I post JSON data files to a WebAPI and never noticed this behavio. I use AngularJS opposed to what looks like jQuery in your code. &amp;#x200B; My call looks like this: `$http({ url: url, method: "PUT", data: $scope.ciDetailsToImport, headers: { "UserName": userName } })` I omit contentType and use "PUT" instead of "POST". &amp;#x200B; Those tips may not directly relate to your size issue, but maybe try permuting some of these combinations to see different results.
Thanks for your reply. &amp;#x200B; It threw me off too, until I read this "the contentType option to false is used for multipart/form-data forms that pass files. When one sets the contentType option to false, it forces jQuery not to add a Content-Type header, otherwise, the boundary string will be missing from it. Also, when submitting files via multi-part/form one must leave the processData flag set to false, otherwise, jQuery will try to convert your FormData into a string, which will fail. " &amp;#x200B; From here &amp;#x200B;
I feel pretty confident in my technical abilities and understandings. The interview questions that always get me (if I didn't specifically prepare for them) are the ones like these: - Tell me about the piece of software you wrote that you're most proud of. - (Of your last work project) Tell me what you would have done better if you started it over now. - Tell me about a bug that you shipped. How did you resolve it? How did you ensure it wouldn't happen again? - (Of a popular open source library you've used) Tell me what you would change to make it better. etc.
Try ‘ services.AddCors(config =&gt; { var policy = new CorsPolicy(); policy.Headers.Add("*"); policy.Methods.Add("*"); policy.Origins.Add("*"); policy.SupportsCredentials = true; config.AddPolicy("AllowAll", policy); });‘
Http://www.csharpstar.com I found very useful.
You need to add CORS to the microservice, if I understand correctly the code you pasted above enables CORS within the health-check app (which is unneeded). If you can't modify the microservice, you have a couple of options: 1. Write a scheduled job that runs a health checker *on the backend* on a regular basis and inserts the results into a database. Your Health Checker app then reads the database rather than making calls directly against the microservice. IMO this is the best architecture and much more scalable than your example (imagine if 15 users were refreshing the health check page all at once) 2. If you want to keep the same architecture you have now, simply add a "proxy controller" to the Health Checker and, instead of your javascript directly calling the microservice, it calls an API on the Health Checker that, in turn, makes an HTTP call to the service. Yes you're chaining two HTTP calls together (Browser -&gt; App -&gt; Microservice) but the C# code running in MVC's backend (HttpClient) is not bound by CORS. Since you've already added CORS to the Health Checker app, you shouldn't have any issues with (Browser -&gt; App) either.
That would be so great. Please link me to your github example whenever you get around to it! Thanks again.
There seems to be a lot going on for simple functionality but why not just open the stream again? I am more worried about the flow. Maybe its not communicated well with reddit but is middleware1 actually calling middlewear2 which is calling N which calls 2 which calls 1 or us thete a controlling class making these calls? 
Maybe it's something with your usings? Using blocks call dispose at the end of them. Maybe one of your dispose calls does a little more than you want?
The problem is that both middleware dispose of the responseBody variable since they are using the using keyword to initialize it. At the end of the using block the variable is disposed. Any attempt to use it afterwards results in that exception. Since you set content.Response.Body to that variable, ASP.NET Core is trying to use it. I would go with the advise of the other users and figure out a better way to do whatever it is you're doing. Are you trying to see the output of the other middlewares? Why? You can use the Chrome Developer Tools to view the requests and responses if that is all you need (Network tab). Generally any code generating body output won't be forwarding onto the next middleware. So trying to isolate specific body output from a specific middleware probably isn't necessary since only one middleware will be doing it per request. Other middlewares will be passively observing the request or response or maybe might inject some headers before the response is set. To just slap a bandage on this, you probably would have to set context.Response.Body back to the originalBodyStream, and then pipe your MemoryStream back into it to ensure the content is sent to the browser. 
I think maybe you could benefit examining how ExpressJS (a NodeJS package) manages their middleware chaining, [the section at the top here describes how it operates](https://expressjs.com/en/guide/using-middleware.html), maybe it can inspire you on how to adjust your Invoke methods and handle them in a higher level managing class? I know this isn't really a definitive answer but it sounds like you're doing this for learning anyway so it gives some material to learn from.
[https://howtocode.net/2018/08/dumping-executing-assembly-back-to-byte-array-pe-file/](https://howtocode.net/2018/08/dumping-executing-assembly-back-to-byte-array-pe-file/)
In HttpApplication....nevermind
Did you try context.Request.EnableRewind(). Add that before you read the request in the first middleware and try 
WebAPI won't have a browser and logging request\response bodies is standard practice for APIs so you can debug the live site later. ASP.NET Core makes logging this data quite frustrating when running without a reverse proxy. If I recall correctly, OP needs to do some weird hijinks, but I don't remember what they are exactly.
IoC and coding against abstractions instead of implementations make your code easy to maintain and to test. For small projects it may look as an overkill, but have fun bug fixing if the above are not properly applied in bigger projects. 
Why would I use this over Entity framework?
No performance benchmarks have been shared by the authors. How do we know that SQLKata is faster than EF (if it is).
As I understand SQLKata uses Dapper for SQL execution so it should be as fast as Dapper in results mapping. However it's hard to assume what overhead is added by SQLKata query generation code. If you're looking for ultimate performance for dynamic queries you may check [nreco/data](https://github.com/nreco/data) which offers almost the same efficiency as Dapper.
Isn't ef core meant to be faster than dapper?
The only thing that bothers me, is that library heavily relies on strings. Table names, columns, etc forces you to either abuse "nameof" a lot, of worse - constants
It's going to be a little slower than using ADO.Net and faster than EF. It uses ADO.Net under the hood, wth the overhead of their 'compilers' doing some work to prevent SQL injection, but I'm struggling to see how this is beneficial. You lose the ease of use of EF and other ORMs, which also means you need to be intimate wth the database layout to use properly, and in that case you should be just fine using ADO.Net, or just raw SQL, doing all of the appropriate binding and sanitation. It doesn't even properly handle pagination of large tables in SQL Server properly, using the default fetch offset which is a massive performance hit on tables with more then a ~100,000 records.
This looks like a special-case of StringBuilder, so maybe it's still better than ado.net, where you need to write queries by hand.
This library looks like a sort of middle ground between "do everything with LINQ" (EF) and "write everything by hand" (Dapper). I can definitely see use cases for it.
I must be terrible at my job because that reference eludes me completely. 
People love hard and fast rules. I want to puke every time someone tells me inheritance is "bad" 
I've been switching to linq2db to find a good compromise between ef and dapper.
My new hobby is following you on Reddit and making you puke ;p
It's all just technology bigotry and limited perspective. Unless you're talking about something that's obviously broken like a resource leak, everything is a compromise between development time, performance, security, UI, and a boatload of other stuff. 
Yes. We applied for a monopoly but it turns out it's just human nature. 
What was your ASP.NET MVC .net version?
From nreco/data: var selectCmd = dbContext.CommandBuilder.GetSelectCommand(new Query("Employees", (QField)"BirthDate" &gt; new QConst(new DateTime(1960,1,1)) )); I wish people could just learn plain readable SQL. It's not that hard, and queries are often something you write once and seldom touch again.
&gt; I wish people could just learn plain readable SQL. It's not that hard, and queries are often something you write once and seldom touch again. You're absolutely right, however correct building of ADO.NET DbCommand with parameters usually takes too many boilerplate code. BTW, for complex queries nreco/data supports 'dataviews' concept (usual SQL with placeholders for dynamic parts).
If you need ioc for testing, excellent, good for you. Interface the crap out of that, enjoy. But coding against needless abstractions is just obfuscation. Personally i am about to delete 160 interface files on a current project that achieve nothing apart from made a junior programmer feel like he did the smart thing.
When is inheritance not bad?
It is just laziness a lot of the time. Instead of explaining why they dislike a certain design or style, they'd prefer just to call it wrong/bad/anti-pattern and implying the reasoning for that is *obvious*. In a lot of cases they themselves don't know why something is an anti-pattern, they just regurgitate factoids they read in some article once. A classic example is when non-C coders see [mature C code](https://github.com/torvalds/linux/blob/master/fs/ext4/dir.c#L287) and start flipping out about "omg it uses GOTO!!!" Or people looking at ten year old C# code and start telling you that you could have used language features which literally didn't exist when it was written, or for a .Net library that has limitations due to targeting 2.0. Honestly before people call something an anti-pattern, they should themselves know exactly *why* and be able to explain the correct way of doing it, and why that is advantageous. Otherwise you just look like a tit. 
In Dapper (and similar light-weight mappers) you'd write var employees = conn.Query("select * from Employees where BirthDate &gt; @date", new { date = new DateTime(1960,1,1) }); I find this easier to read (and much easier to fine-tune for performance later, or move to a stored procedure) but I don't expect everyone to share that view of course.
Have you tried setting LogLevel.Trace on the server? You should be able to see if the request gets to the CORS middleware and if it logs why the policy isn’t being applied.
I guess you haven’t used EF in a long time?
Of course it is, they just use different terminology. For example, in other industries "anti-pattern" is referred to as "commonly made mistake" and "is evil" is referred to as "stupid shit that doesn't work". 
linq2db is wayyyyy better than EF for brown-field engineering (i.e. the system wasn't written in the EF way of thinking). This looks vaguely similar to Chain, somehow surprised not to see /u/grauenwolf weighing in.
That you for bring it to my attention. Looks like the internals are built different, but I agree that this is the API aesthetics I was going for in Chain. I'll definitely have to look at it more closely.
How does this know the database schema? Does it read it at runtime or does it just assume the column names are correct when it generates the SQL?
Agreed. There’s a difference between opinionated paradigms and best practices. Computer engineering is relatively new to the engineering space, however, at a certain point we’re all going to have to agree that there are specific ways of doing things, which fall into the categories of design and architecture patterns and programming best practices. Some things change over time, like capitalization, but there are ideas, like those of the Gang of Four and Fowler that are beyond opinions and have turned into practical standards. As our field evolves, so must our standards.
Only a sith deals in absolutes
Some things are objectively an anti-pattern. Some things depend more on what you're working on in terms of importance and size of the project. Experience is recognizing it might be an anti-pattern and making conscious decisions about the tradeoffs you're making.
So you're saying the distinction is that while the concept of antipatterns is good, people in the industry can be immature with how they knock others down under the pretence of preaching best practices? If so, I think that's a fair stance.
Absolutely. That’s what I got from reading the post topic and immediately a handful of people popped into my head who act like this. Sure there are patterns and antipatterns, but there’s reasons behind each and sometimes business reasons transcend all of them. The people I have in mind are they type to talk down or shame others because of some anti pattern they read about on Twitter once. There’s unfortunately a lot of people like that. I don’t know if it’s unique to the industry but it certainly seems very prevalent.
Using strings isn't too bad since mistakes are easily caught by smoke tests. But I think it's a missed opportunity to not include some kind of runtime database analysis. For example, my ORM won't panic if your app has properties before the matching columns are deployed to the database. (Unless you turn on strict mode of course.) 
Give [raven DB](https://ravendb.net/) a try. It’s .NET native, much more friendly than Mongo, and extremely high performance. Also free. 
&gt;nreco/data EF is ORM, SqlKata is just a Query Builder, the ORM should be aware of your db schema, track changes, while you don't have real control on how the queries are built and executed, due to the far abstraction, this is fine for 60% of the cases. I will give a small exercise and try to apply them in EF, and you will feel the difference: \- Left or Right Join in EF \- Batch update \`update \[Users\] set \[Score\] = \[Score\] + 100 \` \- Batch delete for 1000 records without retrieving them first \- There is no \`OrWhere\` operator \`if (showDeleteUsers) query = query.OrWhere("IsDeleted", 1)\` and many more. Each one have it's own use cases
Exactly 
Yes SqlKata is more performant comparing to EF, since there is no validation phase (like if column is not found in the db), and it doesn't keep track of your entities changes. 
Yes, mainly sync and async methods are available
It is Community free with [limited functionality](https://ravendb.net/buy). Is it enough for production?
... Until you actually need a two legged barking animal. Then you will be cursing the guy who made your life miserable because he lacked imagination. I think most of the time we are very bad about predicting what could be useful or not. Using components + factories allows you to guide other people to use your composite objects in the correct way without locking them to much in your design.
When you have a bunch of things that share the bulk of implementation details but have specific details that are different per type.
YAGNI my bro
I use a T4 template to generate helpers for all the magic strings - table, column, procedures, functions, arguments, etc. Works pretty well. My build chain runs migrations against a copy of my db, then generates the template prior to compilation to ensure nothing is missed.
So this isn't just a query builder but more like a micro-orm? What kind of objects is it returning from queries? Frankly I would be more interested in just a query builder. Micro-orms have already been well covered. I would say it's a bad decision to use some random small project as your [micro-] orm.
Hmm I don't know of a library, but it seems common practice to have some small library like this written internally within company and reused across projects. You basically end up with an interface and then have additional libraries/dlls implementing the interface in whatever way necessary. Then manage what is issued via internal packages + dependency injection. It's not so much code, and it's quite flexible since it's in-house solution.
CacheManager: http://cachemanager.michaco.net/
What are some use cases you imagine people using this for?
Hey bud, I love the concept, but writing a dynamically compiled script language after her, isn't a way to win her back. But seriously, looks cool, can't wait to give it a try in the morning. Thanks for sharing!
I am doing professional development today although I'm not in what you would define as a coding role. I write applications to make my job easier and automate what i can. In fact i used Vim with omnisharp for a long time and still miss it so may end up going back at some point. 
That looks ideal. I looked at examples and it supports Redis but do you know if it supports an entity framework context for cache storage?
I don't know that it does. But honestly, using a database for cache storage sounds a bit counterintuitive to me. It's just not going to be as fast as some of the other options. What's your use case for wanting that feature if you don't mind me asking?
well, modding for a game comes to mind
Honestly, I don't think VS Code has anything on vim + omnisharp. It [looks pretty good](https://www.youtube.com/watch?v=X0vVVHGFotc).
This is /u/mr-gaiasoul. &amp;#x200B; [https://np.reddit.com/user/mr-gaiasoul/posts/](https://www.reddit.com/user/mr-gaiasoul/posts/) &amp;#x200B; You've been warned. 
Ah yes. Me one tool to rule them all. Why build modularization and components when we can just randomly compile strings of information.
&gt; writing a dynamically compiled script language after her, isn't a way to win her back. Hahaha, she's still with me - But I see how you could come to think that thought :D When I told her what I would say in the YouTube video, that _"Lizzie is equally forgiving as my girlfriend"_, she said; _"People are going to think you're cheating on me every week"_. Which of course is not the case may I add. But the conclusion you made did not occur to neither of us. However, I can assure you we're still very much together (and I am not cheating on her), and the idea is that _"she's not dangerous"_. But I think she was flattered by having it named after herself. As far as I know, there's only Ada actually named after another girl on the planet. So she's in an _"exclusive club"_. (not that I compare my work with Lizzie with Ada though, but you get the point)
Only thing I don't like about the .NET MongoDB driver is the lack of documentation on geospatial queries. It took me forever to figure out how to form one using the typed methods, as opposed to just making a string with the JSON query and using that.
And you've never used it at scale.
This is very interesting. I'll be learning compilers next semester. Can't wait to dig in and make some sense of what's written here at that time. Until then I'll just play around and try to make something fun. My first thought is to make a calculator that can take custom functions. Would this be an appropriate use case for Lizzie?
&gt; My first thought is to make a calculator that can take custom functions. Would this be an appropriate use case for Lizzie? I think so, go for it, have fun :) Let me know if you get stuck (in the Issues at the GitHub project website) &gt; I'll be learning compilers next semester. Its entire codebase is only ~2,000 LOC, so in regards to understanding such things, at least the tokenization process, it should probably be a good foundation for such a thing. In regards to the actual _"compilation process"_ though, Lizzie technically doesn't qualify as a traditional _"compiler"_ ... However, due to its small codebase, it would probably be an easy introduction to these ideas ...
Apart from being weakly typed which is obvious, JS also lacks order and organization that comes with a proper programming language. Classes don't exist, for instance, and as much as the function based prototyping is stubbornly touted by JS programmers, those methods are hackish and convoluted at best and go through multiple hoops to achieve the same thing which is easily done in languages like C# and Java.
[Classes](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes) 
It is almost impossible for a beginner like myself to read js code and understand what is going on. 
It's only a problem if that's where the conversation stops. "Why is Y an anti-pattern? What would you do instead in this particular situation, and why is it better?"
This is what Typescript is for
No, I love JavaScript, because it is a very *creative* language. It doesn't have the strict rules which C# imposes. This means you have to set up your own limitations, and be disciplined, and that can be very frightening for new developers. It's also loosely typed, which again, can be frightening but typescript can solve that for you, if you really need types. JavaScript done "right" is super beautiful, intuitive and easy to read. I don't like Java, because of the JRE, but it has it place (truly cross-platform). C++ is fine I suppose, but I've rarely touched it. All these languages have different applications (though they often overlap), and a good developer picks the right tool, for the right job. They don't pick their favourite language, just because they like it more. I do however hate elitism, and there's loads of it, even in the developer community. Languages have different philosophies. You can't go from C# and expect JS to be the same. Just because something is different, doesn't make it bad, get used to the differences between the languages, and apply fresh eyes, and you'll find it much less frustrating.
Why must this be a bad thing?
https://softwareengineering.stackexchange.com/questions/38002/what-arguments-are-there-in-favor-of-weak-typing
That's a useful discussion, and not very biased. But I don't see any arguments for why weakly typed languages would be inherently worse. Mind excepting it for me?
everything?
It's stupid to *hate* a language, but there are plenty of disadvantages. I think the point is it's really easy to write bad (unclear, unmaintainable, unreadable) Javascript, and takes more work to write good code. Javascript is too broad a term, and really, too broad a language. It's a Frankenstein's monster, out-of-the-box.
It walks like a duck, quacks like a duck, so it must be a duck, right? Too bad, this duck is featherless, now your `getColor()` method threw "cannot get 'color' attribute of undefined" and the client is not happy. Strongly typed languages avoid stupid mistakes like sending a `duck` object with a missing `featherType` attribute. They also allow your IDE to be more powerful (catch errors before compilation, and better autocompletion), because it has a lot less to guess.
"this" keyword. Hoisting. == and === operators (ergh). No type safety. The utterly hackish confusing way in which you group code into modules. The node_js and npm ecosystem. Ergh, just everything. It drives me nuts. 
The JRE hasn't been slow for 10+ years, and still beats .net in several benchmarks, and is still more efficient for long running processes. I love .net core, but I still understand the strengths of the JRE.
Because you let the implementation of complex type conversion rules define what you meant. It doesn't save you anytime because it still requires that you're mindful of the datatypes you use. It doesn't save you from anything. It's just another way your code can break.
Haha so it is. Avoid.
The class system is just syntax sugar over the old object model. It doesn't change anything, you just have another way of expressing the same thing.
Not OP but maybe a “temporary” central storage place for values used across multiple computers / servers? Kinda like a session state store across load balanced servers.
Been using this for a while now. I was mainly looking for a SQL query builder that does not easily allow for SQL injection to combine with Dapper. Before that I was just using embedded resources to define the queries. Setting up queries to use dynamically was a not very clean, and could easily lead to SQL-injection. (adding where clauses at runtime and such). SqlKata looked promising and easy to use. Of course if you misuse it, you can still get SQL injection issues. Using \`WhereRaw\` for instance. Till now I've been happy using it, my dynamic query building is very clean and readable. 
Javascript isn't the right tool for any job, but for certain jobs it is the only tool available. If that was not the case, I believe Javascript would slowly die out. When Web Assembly becomes a reality, we may start to see this happen.
First class functions are in fact one of the best parts of JS
Step in TypeScript. The == and === is down to the type safety though.
So under that assumption, are you saying that PHP &lt; 7 was a bad language? Despite it powering the majority of sites and probably still does because of WordPress 
It's still got all the common controls that every language has. Loops, branches, conditionals, functions, objects. Reading it shouldn't be much of an issue, writing it on the other hand if you aren't familiar is different story. The biggest thing you need to think about with JavaScript is that it executes sequentially at run time, so you need to think about the order you define functions, sometimes. ES6 brings a lot of niceties expected from other OOP languages and then TypeScript takes that one step further again.
Have you looked at the Date class? Granted JavaScript doesn't give you a lot of things out of the box, but that's where NPM and the open source community comes in.
You can't just say it's not the right tool for any job. Where's the argument for that? Interactivity on websites? We had flash and silverlight to do this for us too. JavaScript survived. We don't need to use JavaScript to build desktop apps, but with electron we can. And some major companies are using it. VS Code is built with JavaScript. We don't need JavaScript to build mobile apps, but step in Cordova and soon, Ionic Capacitor. We don't need JavaScript to build server side code we have "better" languages for that. C#, python, ruby, PHP etc. But we have node.js. JavaScript is a language which people have managed to take to any platform, any execution environment, and create some amazing things with it. 
I don't deny people have done those things, I just think it is not the right tool for those jobs either. For all those examples there were better tools and I am still wondering why they chose Javascript.
Yes. PHP a fractal of bad design, Google it for a article. 
Think I've read it before. PHP still has it's uses and is being used in a wide variety of places, possibly because it's very entry level.
TypeScript is a different language, though. It is true that some day Javascript may become much more like Typescript than it is right now, and that is a good thing, but you cannot credibly argue that things developed with Typescript were developed with Javascript. People choose Typescript *instead* of Javascript for a reason (or many reasons, actually)
How about it just being a scripting language vs. a programming language?
Not exactly. All JavaScript is valid Typescript. And Typescript transpiles back to JavaScript. Most people go to Typescript for the OOP implementation and the widespread browser support.
Well yeah. But it's fucking awful. Both designed by one guy at his desk, not a coincidence.
Yes, of course I did. It's why I used moment.js as a solution to lack of possibilities in Date object ;) Yeah, community can create any function, but it does not simplifies the whole problem - mind stability of Date implementation in comparison to dependencies of other modules and think about leftpad. I'm not even starting to talk about trust and bad actors. This is why I bring that up as a serious con of js.
I haven't had a chance to glance over this or try it out but this could be really useful for work. We're building a template to base projects on that includes the groundwork with authentication and authorization. There hasn't been enough focus on the frontend part of things so this might be able to help in that department! Thanks for sharing this!
Initially JS had a problem called callback hell where the nested callbacks made the code unreadable. To solve this they introduced promises. If that wasn't messed up enough, they also added async/await. Now we have a clusterf**k of libraries/old codebase that either uses callbacks/promises/async. Sure, you can write a wrapper, but I don't think this is good design.
You do not need to define what Typescript is for me, or why people go to it. My point is that if you go through the list of features that make Typescript *different* from Javascript (and it is much more than OOP, Typescript is also more functional-friendly than Javascript) you will actually find all the things that make Javascript a not-very-good language.
What do you mean it doesn't change anything? Have you used it? How does what happens under the hood matter? It changes everything. It standardizes the way to create create classes, it standardizes inheritance, it adds static methods. The only thing it really lacks is encapsulation. Before classes, everyone basically just created their own way of doing classes, which was confusing and made every code base entirely different. 
Hope it can be of help to you. I already use this approach in a big project and it works really good. Please leave some feedback if/when you get time to look through it and try it out.
[MemoryCache](https://docs.microsoft.com/en-us/dotnet/api/microsoft.extensions.caching.memory.memorycache?view=aspnetcore-2.1)
It's free in the way SQL Express is free - it's a limited version. Personally I'd go for MongoDB or CouchDB is another well supported free option.
Well said. And moment.js ftw lol
;
Implicit coercions are the big killer for me. You can add a string and an object together. Why? Javascript's answer is why not. 
Until you come across the things where undefined doesn't belong there or doesn't work consistently. Then it sucks.
Python is strongly typed yet would allow the same thing. Strongly vs weakly typed is ill defined and typically comes down to how are interactions between types handled. Weakly typed languages will do their best to make it work, until it can't anymore. Strongly typed ones will only do what they're defined to. Take `"a" * 5` Javascript will return NaN because the interaction between a string, an integer and the multiplication operator is undefined. Python instead will return `"aaaaa"` because it is defined by str's multiplication operator. If we swap the order, Javascript still returns NaN. But python will issue a ValueError (or TypeError, don't recall off hand) because the multiplication operator defined by int doesn't know how to handle strings. 
Can you program in it? Must be a programming language (albeit, not a very good one in my opinion). Just because it's not compiled doesn't mean it's lesser. 
Too many errors you can't see until runtime.
Massive comparison inconsistencies. (For example this one: https://stackoverflow.com/q/34055818/1035297) but there are lots of them! If a language evaluates `a == b` to `true` but `a &gt;= b` to `false` you can throw it in the trash.
Yeah fuck this and hoisting when you have been away from us for a while.
https://visualstudio.microsoft.com/dev-essentials/ 
&gt;JS is different, in many ways. For instance, functions are just objects which can (for instance) be passed as arguments, to another function. You can do that in C# too. Delegates have been a feature of C# since the beginning.
`undefined` aka the second `null` like the single one wasn't PITA enough.
I'm going to guess he's referring to standard (but hacky) ways of achieving certain actions in javascript. E.g. setting a default value in a function would look like: function foo (param1, param2) { param1 = param1 || "default"; param2 = param2 || 0; } This is just abusing the truthy/falsey evaluation, and is definitely not clear for beginners in javascript. It's also not clear that it breaks down when the value passed in is a falsey value (0, false, ""). Additionally, closures are a quirk of how the javascript interpreter works, and is unintuitively used to create private functions and variables in an object. First time I saw one, I definitely didn't understand what it was trying to achieve. The point is, I think javascript can be easy for beginners, but can be deceptively confusing when you start to do anything of minor complexity.
1. Be yourself. 2. Only out what you really have experience in on your resume. 3. Be honest if you don't know the answer to something 4. Talk things through out loud and tell them you're going to so they understand how you think. Otherwise. You can't prepare for an interview outside of what you already know and have experience in. You'd be misleading yourself and them if you did some quick study test to get temporarily better at anything and you'll just be setting yourself up for failure. 
Well memory I/O can't be bad since it takes my whole fucking memory hostage. The JRE is fast and perhaps faster than .NET but the latter is much easier on system resources.
Spot on
You mean C# Func and Actions? They are special constructs, not the same as a method in a class.
JavaScript's Date class seems to have been modeled after Java's `java.util.Date` class. You know the one that was so terrible that it was almost immediately replaced with `java.util.Calendar` which was still insufficient for regular usage so everyone started using JodaTime instead?
Uhm.. what? They're types, not special constructs. And class methods are implicitly convertible to those types, e.g: void SomeMethod(Func&lt;string&gt; getString) { Console.WriteLine(getString()); } //… var foo = new Foo(); SomeMethod(foo.ToString) //I pass foo.ToString method as a Func object, and it also has sensible 'this' (foo object). 
Forget the typing name debate. In these conversations most people are talking about whether you catch basic type related errors at runtime or compile time. Languages like C# catch them at compile time. Languages like JavaScript and Python catch them at runtime.
Functors, custom operator overloading, and the lack of pointers would do it for me
You should use Chrome Dev Tools to debug then. You can set breakpoints and step through your code. Vs Code would have tracked down your reference issues and your misspelt method. Don't blame the tooling around it.
Why are you debugging using console.log?
Strings are not interned in dotnet core. But the compiler might optimize this by assigning the same const. We should check the IL to be certain.
It’s like someone saying JS lacks a good linear algebra library and you respond “have you looked at + and * operators? You can even use arrays.”
That's not a feature, that's just lack of types (which is usually a primary complaint against js). Essentially any js function is just a `Func&lt;object, object[], object&gt;`. No way to ensure that function if of correct type.
Yes, of course! :) I'm not claiming that C# (or other languages lack support). But there is a *difference* between a delegate and method in C#, they have different purposes, and generate very different IL. In JS, you *only have* `function`, and as a JS-newbie, I naturally compared them to C# methods, and you "can't just pass" a method in C#, you have to use a delegate, `Func` or `Task`.
Did you consider IronPython, or C# + Roslyn? On top of that I would probably have the code run in an AWS Lambda or Azure Function so that if there is malicious code, it destroys the function container and instead of causing damage to your application. &amp;#x200B;
Honestly it is all about the colorschemes at this point. I know i know but don't judge ;)
I will get a closer look later, I have seen some interesting things, but I'm not quite sure about the performances with the use of dynamic types in the helpers. 
In my opinion, it just sounds like you got your abstractions wrong. In C# it could have just as well thrown a `NotImplementedException` or `NotSupportedException`.
&gt; Did you consider IronPython, or C# + Roslyn? No, but I wanted something that was impossible to blow of my feet with, and that was super dynamic, and su easily understood that I could (at least to some extend) teach a non-developer how to create his own rules. &gt; On top of that I would probably have the code run in an AWS Lambda or Azure Function so that if there is malicious code, it destroys the function container and instead of causing damage to your application. Not entirely sure how that would work for my use case, which could potentially be hundreds of function invocations every second, all of which have a requirement that the (web) app as a whole should not suffer in any ways, if the scripting code throws an exception. And where the script code also requires access to objects from the C# code ... But thx for the heads up :)
Chrome Dev Tools can be used on my locally-running node process? I do all this work in VS Code. It did not track down my reference issue. I do blame the tooling because it's not acceptable for me coming from .NET and Visual Studio. I can't place breakpoints, can't see variable values w/o console.log.
In javascript missspelling is not even catched by a compiler/parser - it can make some changes at runtime - you only find when it failes. Further - you can change a class structure runtime in different scopes. So you can start definening your class in one state - and then add some properties to the same instance other places in the execution. Compared to the spelling problem - the floating-class-structure-problem has cost me lots of wasted time. I hate javascript - but works with it every day.
Given the RAM limitation I think he actually is better of with visual studio rather vscode. We're still talking about chromium in there.
Automatic Semicolon insertion 
Things you are trying to do can not be (and actually must not be) solved by the middleware pipeline. As it's said in [the manual](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/middleware/?view=aspnetcore-2.1) middleware is for setting environment and short-circuiting errors, static, etc. Response and request must not be handled here. To solve your problem you have to go down to the level of parsing request and forming response. You may implement those yourself raising events of reading request data and writing response data. Then you may create and register custom hanldlers for the events.
Because it's another thing to learn to achieve the same sh*t you're already doing. To be a modern day web developer, you need to know about 100 different things, of which next year 50 will change because the cool kids will no longer use them.
Only if you intentionally throw that exception, tho. It doesn't happen by accident.
I have removed the dynamics, they were not used anyway. Looking forward to hearing your feedback.
I was just starting to learn in the mid 90’s (95 was when we got internet) and the first book my parents bought me started off with a section on writing cross-browser-compatible JS. Writing functions to wrap multiple browser scenarios was so god damned tedious, I eventually just said fuck it and had an alert that would tell people the page was best viewed with one browser at a certain resolution and it might not work otherwise.
If you're already using VS Code to write your node.js stuff then I dont see why you can't set breakpoints and watch variable values. https://code.visualstudio.com/docs/nodejs/nodejs-debugging
PHP &lt; 7 was pretty garbage, but it was effective garbage. It was also incredibly easy to shoot yourself in the foot and prior to mainstream frameworks the code base of just about any application was a dumpster fire of inconsistency. Personally, I love PHP for what it is and will keep using it, but I’d be lying if I said my brief stint with ASP.NET didn’t leave me looking for excuses to jump ship to something with more structure out of the box, strong typing, etc.
&gt;Chrome Dev Tools can be used on my locally-running node process? Yes. https://hackernoon.com/debugging-javascript-typescript-node-apps-with-chrome-devtools-vs-code-and-webstorm-97b882aee0ad
This is true of any language. It's really easy to write bad code. That's why we practice for years to be able to write good code.
MVC is just for the UI. Your system architecture could be much more complicated. Generally you should have some intermediate persistence layer between the UI (MVC) and the data. There are several approaches here, like simple repositories up to a complex CQRS approach with an event store. Anyway, you should put it somewhere there. An alternative would be to do it directly in the database, based on triggers.
[insert made for IE 3D rotating gif]
I've been learning c#, .net, ef, azure, angular over the last year. I'm currently using it for a personal project/task management application. I hope to eventually use these skills to develop for my current employer. 
Uh yes but I’m saying it’s easier to write bad code in certain languages. - such as Javascript
Splash pages were all the rage before people found out what bounce rate was!
&gt;. Took 2 hours to track down that I had changed the casing of a method and missed a few references. Sounds like you should've used a linter. It's very helpful. 
https://i.imgur.com/IsmDMDp.png
Because that doesn't mean anything unless you're a student who wants to try and make yourself feel superior.
&gt;you "can't just pass" a method in C#, you have to use a delegate, `Func` or `Task`. Not really? A method's (or method group's) type matches a delegate (or Func, which is just a generic framework delegate type) with the same signature. A method that accepts a delegate as a parameter will allow you to pass any matching method. static void printStringFunc(Func&lt;string&gt; f) { Console.WriteLine(f()); } static void main(string[] argv) { int foo = 100; printString(foo.ToString); // prints 100 } This will compile and run. The `ToString` method matches `Func&lt;string&gt;` - it's a method that takes no parameters and returns a `string`.
Do you realize how weird this is to read on a subreddit dedicated to a language that was created as a copy of Java?
I graduated in '98 from UCF. JavaScript, "script" being optional apparently, is a "Scripting" language. It is NOT a compiled language. I am no student.
I'd really not call Blazor part of ASP.NET Core basics. It's a very early preview of something that might or might not become an established product in the Microsoft eco-system.
&gt; Undefined means that the property simply doesn't exist, which can be extremely useful when used properly. You miss one word in your argument : YET &gt; Undefined means that the property simply doesn't exist **yet**, which can be extremely useful when used properly. And that exactly what I hate about javascript. You can add (and redefine) a property any time. And only find it at runtime - or even worse .... in some cases at rutime. 
Well, I DO have a grey bush. I do have authority. And just because you know some .js libraries does not make you a programmer.
&gt;And just because you know some .js libraries does not make you a programmer. Ha, there it is. Do you think knowing some js libraries means you can't learn anything else?
&gt; It’s a prototypical language you can’t complain it lacks classes, Well, you can if you dont like prototypical languages. :p And they do fulfill similar purposes 
lol so he did He's crazy nutter that spammed r/shittyprogramming with about 20 threads a day for a couple months after ending up there from his posts on other subs like r/programming. It I remember right, it surrounded a "language" he invented that was nothing more than the most convoluted config file for a code generator that you've ever seen. And he was dead serious about it. I have this name tagged in RES for him, so I'm sure this name's post history is a gold mine too.
Here's a sneak peek of /r/shittyprogramming using the [top posts](https://np.reddit.com/r/shittyprogramming/top/?sort=top&amp;t=year) of the year! \#1: [Empty Comment To No One Lost in an Unending Sea of Brackets. B&amp;W 2017.](https://i.redd.it/of9nbkgblztz.png) | [50 comments](https://np.reddit.com/r/shittyprogramming/comments/78o49t/empty_comment_to_no_one_lost_in_an_unending_sea/) \#2: [I'm not a web dev, but I think this is the wrong approach](https://i.redd.it/j45r77ydvwoz.png) | [57 comments](https://np.reddit.com/r/shittyprogramming/comments/73brtf/im_not_a_web_dev_but_i_think_this_is_the_wrong/) \#3: [Change upvotes and downvotes to -=-1 and +=-1](https://i.imgur.com/BbcYpLI.jpg) | [24 comments](https://np.reddit.com/r/shittyprogramming/comments/8nsxi6/change_upvotes_and_downvotes_to_1_and_1/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/8wfgsm/blacklist/)
&gt; It doesn't have the strict rules which C# imposes. And what strict rules does C# impose upon you? Daring to require that you have a well defined program entry point and put all your code into a namespace? &gt; This means you have to set up your own limitations, and be disciplined, and that can be very frightening for new developers. It's also loosely typed, which again, can be frightening but typescript can solve that for you, if you really need types. This mentality is utterly patronizing. You know that, right? The idea that removing all safety rails is something only "experienced developers" is hilarious. I cannot recall a time I was so painfully constrained by the type system that I wish it went away. I also have not had a time where I was unable to express an algorithm due to the type system. Being able to convey usage and intent through types helps humans and compilers. It's a win/win. I am working in JavaScript for a number of projects, and I feel none of this freedom you speak of. Instead, I have to live in utter _fear_ that my variable, which is supposed to be a number all the time, may suddenly be holding the Declaration of Independence instead. Meanwhile, if I want dynamic typing in C#, I just use an `object` in the _one_ place that needs it, and it's clear to anyone reading the code that it is the only variable that may jump types. If you believe have the things you are typing in this thread, you should just code exclusively in assembly. It's typeless, and only the best of the best code with all safety rails off! TL;DR - Structure is good.
That looks beautiful. I've tested it out with c# and the syntax highlighting is pretty far off. I'll play around with it and see if I can make it better. Thanks for the link.
A lot of companies cannot use community due to the restrictions so they are forced to go pro or enterprise. 
&gt; Don't blame the tooling around it. The fact that a JavaScript program _runs at all_ with the misspelling is an inherent *flaw* in the language.
Agreed. Maybe just a badly worded title? "ASP.NET Core Blazor: Basics" would be better.
It doesn't matter, wasm is about to kill JavaScript.
There are cases, such as when braces are on the next line, where adding the semicolon to the end of a line changes the behavior of the code. Either white space matters, or it doesn't. They shouldn't try to have it both ways. The interpreter should never try to fix my code for me.
I wanna take this a step further: dynamic typing and weak typing are features that are so bad, they should _never_ be the default behavior in any general purpose programming language. Expose them using special keywords/modes/etc. sure, but don't take away the developer's ability to be explicit about variable/object lifetimes and behaviors. I honestly want to know: what kind of power/expressive does one lose by not having top-to-bottom typelessness? What code trick can JS do that is so awesome that C# will never hope to match?
Compared to how many trouples it makes - its still a weakness in js.
The denial surrounding this is pretty hilarious, too. Yes, _currently_ wasm has no access to the DOM... but that's coming. The moment wasm becomes a first-class citizen and has as much access to APIs as JavaScript has, the real apocalypse begins. JavaScript ceases to have a monopolistic stranglehold on browser technology, and developers have to actually make a case for using JavaScript.
It's still a stupid "feature".
Because _this_ should never be allowed to happen. https://stackoverflow.com/a/42510/264712
malbolge. we should all hate malbolge. 
I do both. Of course I do a great deal of development in an IDE, but there are situations where I need to edit and then rebuild (via SSH or something). There may just be times where I didn't see the red squiggly and proceed to build. The point is that the compiler will inform me I don't even have a valid program to begin with. Why is JS different? Because it only objects when the busted code is actually executed. Otherwise, it acts like everything is fine. Why allow the running/shipping of a malformed program?
You can, surprisingly, in C#as well which can occasionally lead to puzzling situations. Now, powershell, on the other hand, has so much implicit stuff “helping” the programmer that I’ve hardly ever written a initially bug free script, even a small one. 
&gt;Why is JS different? Because it only objects when the busted code is actually executed. Otherwise, it acts like everything is fine. Why allow the running/shipping of a malformed program? Because you aren't using a compiler it's interpreted in the browser. Compile it and it will break before it's shipped. Also, don't directly edit code in production. I mean, this is a classic example of [this](https://i.imgflip.com/2gmo0h.jpg), you realize that right? It sounds like you have serious issues in your process.
&gt;but there are situations where I need to edit and then rebuild (via SSH or something).
And you just assumed I was talking about production systems in this context??? And insulted me for it???
Sweet!
I didn't mean come across as patronizing, and I want to apologize if that's the case. I do, however feel it unnecessary to patronize me in return. Reading my comment back, well yeah, it just seems as I'm trying to defend JavaScript to the death; that is simply not true! But I do like JavaScript, I really do. And I think much of the hate it gets, is simply from people who try to impose ideas and paradigms from other languages on it. They try to code JavaScript, like they code C# or Java; and that's never going to turn out good. I've seen it time, and time again! JavaScript *can* be a very intuitive and useful tool, but only if you do things on *its terms.* JavaScript is like a small child, it can be super difficult and annoying, and it will be, most of the times. But! It can also be super cute, but only if you nurture and foster it properly. It will never be particularly performant or "safe", it will rarely be the *best* tool for the job, but it will be a super-available and OK tool for some jobs, and sometimes the only tool which is available (yes, WASM is becoming a thing). I would never advocate "throwing out types" they have a very clear and useful purpose. I would also never advocate "not having structure". I'd even go as far to say that programming is dependent on structure, you can't do programming without it! My here point is the contrary: JavaScript doesn't give you any structure, ergo; you need to "create it yourself". If you skip this step, you're destined to get in real trouble. But doing this step is frustrating, and often feels very unnecessary. "Why isn't this already here". I concur that it is objectively better to provide the developer with guard rails, instead of forcing the programmer set them up for themselves. But JavaScript is a harsh reality, and if you're a web developer, you're bound to deal with it, in one form or another. I don't think it's constructive at all to complain about it's shortcomings — *JavaScript doesn't have types?! WTF, that sucks man!* This mindset doesn't lead to anything constructive. Instead, I think it's better to just realize it's shortcomings, and try to figure out how to best deal with them. Which is what I'm trying to do here, hence; "JavaScript doesn't have guard rails, and you have to set these up yourself, and that can be frightening, because there aren't any rules imposed by the language itself." JavaScript is not our lord and saviour. It's a tool, albeit a pretty annoying one.
What's the business requirement? (theres too much unknown to answer) 
Just what I said. I need to store some bit of data in the C# end, then get it back in the C# at the other end. And I can't pass a data structure reference through the mess. The database works currently because both ends open separate connections to the database and read the same table. So it's a common area to put data that both can see. So that's what I need. A common area that both ends can get to, but that operates in memory.
Are both the C# ends within the same process?
[MemCache?](https://docs.microsoft.com/en-us/dotnet/framework/performance/caching-in-net-framework-applications)
We'll it's not a compiled language. All interpreted languages have the same "flaw" as you put it. It's more of a flaw in the concepts of interpreted languages than it is of JavaScript
It's only a trouble if you don't learn about it and choose accordingly. Someone who has spent time with JavaScript will know about it and code to expect it
If everything that needs to access the database is in the same process, you could use SQLite in-memory and get the advantage of not having to write your own psuedo-database
Do you mean the implicit keyword? Because those are well defined. They might not always be obvious, but they're well defined. What I'm talking about is when javascript encounters an operation between two types that it didn't know how handle so it just does something. 
Look up IPC - Inter process communications with .net if you're just wanting to communicate between the two C# processes. I've used Named Pipes for years ..decades? To do things like this.
&gt; From day one Mozilla and Google have pushed the mantra that it wasn't going to replace Javascript and the tech commentators seem to be echoing this nonsense without question. They _have_ to maintain this position. It would be a terrible look for them to say, "You know those 23 Quintilian lines of JavaScript the industry has written? We're dropping it all cold. Time to move on, everyone!" They need to play nice until the industry direction changes.
This is a peculiar viewpoint given that languages like Swift, Kotlin, and even C# 8 are trying to kill `null` (except where the user asks for it). Null causes enough headache for many developers; JavaScript introducing an even _nuller_ value is just bonkers.
.Net is a **platform** to build applications providing a standard library that can be used across multiple languages(such as C# which is the preferred option for most of us). there's multiple versions and the one most will recommending focusing on is .Net Core as it's the newest and the one that's getting all the cool new toys right now. &amp;#x200B; It's absolutely possible to create smaller apps, you see a lot of enterprise users for .Net because it's well supported by Microsoft long term and it makes your manager feel warm and fuzzy telling them you've chosen big, safe Microsoft over some scary open source option (that's potentially better). It's also built to scale well. &amp;#x200B; Have a look at the [ASP.Net core tutorials](https://docs.microsoft.com/en-us/aspnet/core/tutorials/?view=aspnetcore-2.1), there's a hell of a lot there to get you going. When it starts to talk about entity framework have a good look at [Entity framework tutorials](https://docs.microsoft.com/en-us/ef/core/get-started/) as things will actually make far more sense that the scaffolding 'just get it done' approach the [asp.net](https://asp.net) tutorials focus on. Other than that go learn some basic C# first if your not already a semi competent programmer, i made the mistake of jumping in head first and i can tell you even as a competent programmer not knowing anything about C# and .Net going in made things much harder. &amp;#x200B; &amp;#x200B;
You can just develop your projects in windows, MacOS or Linux, and run them in Linux. You can build a docker image if you want docker, and you can publish a self-contained package if you don't want to install .net core runtime in your Linux machine.
Just install the .Net core SDK for your distro([downloads page](https://www.microsoft.com/net/download) has instructions for a few distributions). After that you can use visual studio code(free) or jetbrains rider(paid) for development. &amp;#x200B; You can follow the [standard ASP.Net Core tutorials](https://docs.microsoft.com/en-us/aspnet/core/tutorials/?view=aspnetcore-2.1) using the dotnet CLI, these used to be terrible but I'm pretty sure all of the tutorials are no longer assuming visual studio so you should be fine. &amp;#x200B;
There's few things on my blog specifically regarding [ASP.NET](https://ASP.NET) and Linux ... [https://coderscoffeehouse.com/tech/2017/11/24/aspnetcore-ssl.html](https://coderscoffeehouse.com/tech/2017/11/24/aspnetcore-ssl.html) [https://coderscoffeehouse.com/tech/2016/08/19/real-world-aspnetcore-linux-example.html](https://coderscoffeehouse.com/tech/2016/08/19/real-world-aspnetcore-linux-example.html)
Yeah. The Net Core stuff sucks. Oh well. They done screwed up, and now we have to live with it.
&gt; I have a SalesRep and Sales table. And then a table that combines the two (a sale could have multiple sales reps). Can a SalesRep be associated with multiple Sales? If not, that extra table combining the two is likely just extra cruft. &gt; It seems like doing that at the EF Core level would be fastest, but then I would be returning a Model that feels more coupled to the UI. Sounds like Command Query Responsibility Segregation, and that's a very common pattern. Your data for viewing has quite different needs than data for modification, and it's a useful pattern to implement these separately. An entirely separate DbContext wouldn't be unusual. You might consider this a separate Domain Aggregate Root, but since it's just for display that's a bit misleading and it's more like CQRS. &gt; I could get the SalesRep record from a Service class and then go get all the Sales records from a different Service class This is going to lead you down the path to an anemic domain and is generally an anti-pattern. As you say, you'll be making multiple calls to the DB to gather related data, when you could (and likely should) just be .Include(sale =&gt; sale.SalesReps)'ing it. This applies to code modifying data as well as only displaying it.
This worked perfectly. Thanks.
The database is the core of the problem with this system. *everything* goes through it for no good reason. It's a mess.
lol if you took that as an insult, you're an idiot. You're the one who said it, not me. How else should I take it? Why aren't you doing this locally? Why are you SSHing into other boxes changing code? That's a fucked up system if you have to do that, if you asked me. Regardless of if it's production or not. But you're complaining about something, but treating it differently. If you treat it the same, it acts the same. It's not a hard stretch to make. 
So, you make an incorrect assumption, get called on it, start backpedaling, but then double down on a whole new set of assumptions? You literally know _nothing_ about the systems I work on. You took one thing I said and ran with it. You don't know the circumstances. You don't know the reasons. You really ought to rethink your position.
I like Typescript when your dev team is experienced in statically-typed languages. I don't like it when your team has mainly used dynamically-typed languages and just drops `any` whenever it gets "too annoying" to use types.
\&gt; So, you make an incorrect assumption, get called on it, start backpedaling, but then double down on a whole new set of assumptions? &amp;#x200B; I did absolutely no such thing. I don't know what you're reading, but I've been on the same track this entire time and didn't get called on anything. &amp;#x200B; \&gt; You literally know *nothing* about the systems I work on. &amp;#x200B; And you think this is a good thing? This is called a ball of mud. It's nothing to be proud of. There are accepted standards in the industry and if you don't follow them, then that's on you. I've been at multiple companies that all work nearly identically. 
I updated some javascript files with examples of dynamic import and ES6 classes to show off some more features.
Nice! I actually removed that particular function as i found it irrelevant.
You're overthinking this. ASP.NET Web Applications (which is what we call MVC nowadays) are no different than any other kind of web application. You get HTTP endpoints and some supporting infrastructure like routing, authentication, and html templating. You get your data however data needs to be gotten in your system (e.g. a database, a mainframe, a service, a flat file...), cast it into some type of object that has meaning for you, and expose it to the client through JSON or a template. Ideally you would use JSON and communicate with the SPA framework of your choice (Angular, React, or Vue) at which point you approach it like any other application. Or, if you really need to, you could use the built-in templating feature (Razor) and some of the Helpers. 
Yeah, my problem is figuring out how to cast it into those objects that make sense in the View. I've traditionally worked on the back-end for .NET, so I've been very careful to always be intentional with how programs are designed. I never wanted there to be ambiguity. And I'm trying to use those ideals here, but finding out it's a lot harder. Overthinking it, perhaps - like you said.
So, your logic is that they will all suddenly disappear and stop working and that all applications require the speed of wasm? WASM will change how we think about web apps. You'll see more native apps served through the browser like Photoshop or Sketch. But, the application needs for most purposes will not change. 
My point is that, thanks to wasm, people will have options even for simple web page shenanigans. After all, wasm is just a compilation target. Even for sites where performance is irrelevant, people will finally be able to build their frontend in Python or Go or whatever else. JavaScript will have to stand on its merits as a way to express logic rather than being the only option.
It would just be a standard C# object, your main concern would be that the object doesn't have circular references, otherwise you could run into trouble if you need to serialize it. Serialization will become more important if you're using a front end library like React or Angular. If you're just using Razor templates it just needs to be something the Razor template can understand.
Well, I guess we'll find out. :)
If you start screwing around with things as central as what kind of datastore it uses, you're going to break stuff in strange ways and won't even know what or how. If you were asked to fix something, just fix it and move on.
Typically you’ll use LINQ to join together the tables you need, then project them into a DTO representing the aggregate data. This then gets mapped to a view model used by the front end, which may contain unrelated UI specific things (maybe drop down list options). This three layer hierarchy is pretty much the standard setup that you’ll see in many/most MVC apps. 
It won't drop dead, it will be a cobol esq death. Most programmers preffer to code in a single language. Oh, and it is hard to change languages if you are looking to achieve a high level of productivity. (To be frank your low shot at the original poster just weakened your argument) Why do you think we see so many adverts for a font end developer. If it was easy and efficient there would be no such job requirement. We already use java for the front end and the backend in our projects. When we moved to this model we saw a close to doubling in productivity. There will be some that decide that their single language will be JavaScript but I'm prepared to state on the record that it will be the minority. JavaScript will with us for a while due to the large amount of legacy code but in the end it will die out because fundamentally it's a badly designed language. 
You can get Angular in just $10 at Eduonix. All the best for learning 
I'm confused about the purpose of Models. Most tutorials have them being a somewhat close representation of the database. So if you need to send the Model back (to save/update/etc), it isn't too much of a problem. But are you saying that a Model can be even just a slice of a DB table or multiple DB tables?
"Models" are just C# objects containing the data you need on a page. It *can* be the same as a database table, but I recommend designing your model independently of any database. Make it work without a database, and then hook up the database (or other storage later) later. A database is an external dependency and should be isolated behind an interface. The reason for this is your database is likely to change out from under the app. This happens most often in unit tests, but your company could also decide that you no longer have direct access to a database and you need to go through a microservice or something instead. And more to the point, databases use relational design whereas applications use object-oriented design, and they aren't always the same thing.
C# compiles to IL and the resulting IL code can be interpreted at runtime (using [Mono's Interpreter](https://www.mono-project.com/news/2017/11/13/mono-interpreter/)), compiled to machine language at at runtime (using [RyuJIT/CoreCLR](https://github.com/dotnet/coreclr)) or straight up compiled to native machine language (using [RyuJIT/CoreRT](https://github.com/dotnet/corert)) during the build process. The compiler still catches the errors regardless of however IL code executes. 
Maybe you're able to switch from managed C++ to C++/CLI, which should greatly simplify interoperability between C++ and C#?
This is ASP.NET Core tho, not ASP.NET. He asked for ASP.NET.
Was it written by a bot? A dumb bot? 
Thank you in return for not assuming my calm response as a condescending tone! I just love to talk about code, I don't "preach", and I love getting criticism. I don't like to use JavaScript for big applications either. At work, we almost exclusively work in typescript (you should too!), because typescript is a really good way of applying guard rails to JavaScript, without having to teach your opinionated guard rails to your colleagues. Because the only way to stay safe in regular JS, is to say "we don't do that here", to prevent shooting yourself in the foot (or head). As a stupid, but clear example: Let's never reassign a variable, to a value of a different type. JS allows this, but it's a terrible idea (and everybody knows it). Sometimes that can be very hard in a team, because people might not be as experienced, or have different opinions, which may conflict with the philosophy of the previous coder, creating a fragmented convoluted mess. Even in C#, I almost never use type names in assignments, always `var` (if possible), meaning, my for-loops look exactly the same in (pre ES5) JS as in C#. `for (var i = 0 ...`. I don't think it makes the code less clear, do you? My philosophy is that, if you need to type out type names in your assignments, you have failed to create intent with your code, it's just as bad as Hungarian notation in my eyes. Of course, in C# `i` will have a implicit (but very real) type, even if you use var, but it sure looks the same. Leading to your other point: performance. And performance in JS is "just OK", certainly decent enough for most applications, like most things JS. Be it your react application, or a node JS server. They will never outperform a C# counterpart, but I don't think it's trying to. Consensus has always been that if you need performance: don't use JS. The lack of rules in JavaScript *can* be liberating, and I stand by that point. You *can* create namespaces in JS, you just have to be creative. You can (pre ES5) create classes in JavaScript, again, you just have to be very creative, and it won't be a "native class or namespace", but it will sort of "feel" like it. Just, as a dumb example: namespace('foo.bar', function (root) { root.createClass('baz', function () { this.foo = 'durr'; }); }); JavaScript provides you with very few constructs, and you have to use them creatively. So if you dearly need namespaces and classes, there you go! JavaScript didn't stop me from creating them. I just had to figure out how to do it myself. My example has problems of course, I'm just trying to prove a point. But this often feels convoluted and unnecessary. You want to focus on creating your application, not set up guard rails to prevent you from shooting yourself in the foot. To summarize, I think JavaScript can be *super fun*: like a kid, it's fun to play with, because it will never tell you what to do, or impose strict and boring rules on you. But strict and boring rules are important for creating understandable, well-structured and uniform applications. And JS does make that pretty annoying, because it doesn't tell you you're doing something wrong. It just plays along. You need go discipline yourself, because that kid certainly won't do it for you. But if you persist, you will create a neat, tidy and easy-to-understand application, even in JS. Just don't expect to be able to use paradigms and ideas your comfortable with. Different applications will require different guard rails, and it's often hard to know where to place them. And it does require you to be super open-minded about what those guard rails have to be. I like to use JS for two things — small useful tools, frameworks and applications (say a small react app), where complex pattern simply don't emerge, and for fast prototyping or testing. A few days ago I created super small HTTP server JS using node and express (having never used express before), it had a super clear and narrow purpose, and it took me less than 20 minutes to write, `npm init` and `npm install` included. It was simple, and super useful and could likely work in a production environment. For anything complex, where types start to become important to provide intent, I would use typescript, or another language.
The one great thing about asp files is that they have all the code in one file. Your vbscript, javascript and html is all in one. There's no other code to worry about. Just check for include files, they are chunks of asp that get merged into the original asp page. Think footers, headers, etc. The original asp pages is probably where the term spaghetti code originated. So, you don't have to worry about changing any compiled code, cause there is none. You can copy, edit, paste the files like you can html files. I would make sure you make a backup of them first because there's no debugging these without putting in a bunch of response.writeline to display variables and commenting out code that is blowing up. Good luck.
You don't need a specialized VPS for running .net core applications like asp.net core. You can deploy on linux or windows.
will it run under shared hosting?
Can you just do it in JavaScript?
To say that C# is a *copy* of Java is like saying that the guitar is a copy of the bass. It just isn't true. They share many core ideas and concepts, and yes C# could have been J++. But! They are, at least now, pretty goddamned different. Even if C# was created in response to Java, it has become its own, in my opinion, more mature language. 
The only documentation worth writing is documentation people will read. In my experience that's a tiny subset of the things people write. ERD are fairly useless. You should already have tools to autogenerate them. If they auto generate the wrong thing, your design is wrong. Class diagrams become out of date sooo quickly, even if they had value you'd be looking at the wrong thing. I use them sometimes when trying to design something as a team effort and our class diagrams are not as rigid as the UML definition of a class diagram. Resharper headers are a nightmare. I worked at a company once were I stripped out 90pc of them because they were tautological. Do use comments if it adds some colour to the code. ``` //adds 1 to count``` is lunacy, ``` //divides mass by wavelength ``` is slightly better but would probably have been obvious if you had variables mass and wavelength. ``` // relies on lesser used Cartman equation for performance reasosns``` Is a contribution. But I'll cycle fully around. Only write documentation people will read. Do write documentation which addresses a question that is asked more than n times. Don't document because some consultant said it was "best practice".
Yes, but there are many shared hosting options below $5 per month.
When the language allows you to call a function that has parameters with no parameters things get really bad awfully fast......
&gt;Seriously, are there just a bunch of fuckwits coding up really inept bots out there today? Yes.
Yeah, I agree with all your points. Perhaps defining the whole app in one solution wasn't a great idea, as I'm tempted to follow the DB design. That was again how all the tutorials were doing it with EF Core.
How do I get up and running with the codebase? How is it deployed? How are different connection strings/config for different devs managed? Are there any conventions for unit testing? What are the key objects/entities in the project? 
Keep it light, one main readme.md and maybe one per project file. I try not to split up projects unless the project itself benefits from it's own rich folder structure to organize it, or if you know it'll be reused (in which case just start it off as a standalone nuget solution.) Don't write documentation that'll get stale. Keep it conceptual.
They should all have a README.md that gives a brief description of what the project is, a getting started section that lists how to build the project and what dependencies are needed, and if there are business entities, a data dictionary describing the intent of each entity (not the implementation). 
"the code is its own documentation" bugs me. It assumes common ground and there is always a lack of common ground in project because someone who has worked on a project for 2 years has a wealth of domain knowlege. Some poor graduate walking in will shit bricks for months trying to work it out. And sure, the answer is well, the guy with 2 years should have written more obvious code. But its always the same womble who spouts "the code is its own documentation" that ends up writing the domain specific stuff that takes months to learn. /rant
I usually write a "dev directed" documentation as I go along. It usually covering overall architecture, setup (how to get started), deployment, url/config and tech debt. Its usually started off informal and appended with company logo, toc etc when I leave. I'm a contractor so I don't expect myself to be in a place for more than a year and thought that taking away all the knowledge without anything apart from "this is the tfs" is rather irresponsible.
Thanks for your reply. I am passing a docx file. I will try using the other stream provider, but the issue appears to be that the Content-Length of the ajax request is not correct. I have a feeling I'll need to post something over there. &amp;#x200B; Thanks &amp;#x200B;
I use .Net at work, we simply decided to go with .Net because we had existing SQL databases and users on Active Directory. On our internal website I utilized windows authentication and it works great with active directory. I don't need to manage the groups because someone else is responsible for that. &amp;#x200B; You can create a very basic website using .Net framework. There is guides for SPA websites too, which are pretty popular. &amp;#x200B; Here's a link to some guides: [https://docs.microsoft.com/en-us/dotnet/](https://docs.microsoft.com/en-us/dotnet/) If you want to start with [ASP.Net](https://ASP.Net) MVC 5 then I can recommend a book called pro [ASP.NET](https://ASP.NET) MVC 5. I think the same publisher has a book on MVC Core 2.1.
I tried ConfuserEx, which has a lot of features, but some of them breaks your executable for some reason, so be aware of that, test before shipping obfuscated version.
Sorry, I meant to say Action.
But if you have created a "bird" abstraction, which require a `FeatherType`, and you need to create a "featherless bird", then it doesn't matter if you use C# or JavaScript, the abstraction is simply wrong.
I... guess?
The lack of static typing and weird cruft like having to use === instead of ==. IMHO Javascript itself is not really a language that's suitable for coding directly in, but rather one you should only use via transpiling from other languages such as TypeScript, which do a decent job of fixing all the wonkiness. Hopefully at some point, we can deprecate it entirely (or close to) and just compile other languages directly to WebAssembly instead.
I hope the people downvoting you actually read the article and understand the context of your comment.
You're going to need to set the selected value to your default value when the page is loaded. ```csharp public class IndexModel : PageModel { public string SelectedOption { get; set; } = "Green"; public List&lt;SelectListItem&gt; Options { get; } = new List&lt;SelectListItem&gt; { new SelectListItem { Text = "Red", Value = "Red" }, new SelectListItem { Text = "Green", Value = "Green"}, new SelectListItem { Text = "Blue", Value = "Blue" }, }; public void OnGet() { } } ``` ```html &lt;select asp-for="SelectedOption" asp-items="Model.Options"&gt;&lt;/select&gt; ```
``` /// /// comment go her /// ///&lt;param "one" waahwaah="" /&gt; That sort of thing. I've spent so long deleting I barely remember :) 
Thank you, TriptychButWith8Bits, for voting on GalacticMoneyBug. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://botrank.pastimes.eu/). *** ^(Even if I don't reply to your comment, I'm still listening for votes. Check the webpage to see if your vote registered!)
I'm just trying to understand what you mean about "nightmare". The summary is only created after you type \`///\`... and that will include the params, if your're on a method. Do you mean that is too much?
Sorry, you're right I'm not being helpful :) I worked at a company a few years back where someone "refactored" a class of 15,000 lines by adding 3+n lines of comment to each. Mostly "Get's the value of K", etc. 
Something about culture and style. Years ago I was pretty good at javascript, but I stoppped doing it because I was tired of people coming for help with bad code. In recent projects where I work I often see a lot of duplication of code in js. 
Digital ocean is cheap and quick
Good bot
If you don't want to mess with VPS configuration or deployment setup, I recommend https://www.a2hosting.com. I'm having a good experience with them. I don't know how their shared Linux hosting works, but with Windows, deploying couldn't be easier. You download the web deploy template from the A2 dashboard, import it into Visual Studio, and deploy. They even have automated Let's Encrypt installation on all your domains (free). Also, their support is stellar.
A long time ago when I was very much into .NET dev, I'd heard about the Red Gate Reflector as the standard tool for these kinds of things. I don't know whether its still around and that's still the case.
Well where the f*ck where you earlier ..shit bot. 
To be honest, i always deploy on dedicated machines, so i have no experience on shared hosting (at least not in recent times and not with [asp.net](https://asp.net) core) (hence my digitalocean suggestion). I just made a quick search and linked a relevant article. Anyway i'm taking note of your suggestion, in case somewhere in future i need some other options.
I'm surprised nobody has mentioned Mono yet. The Mono Runtime and the MonoDevelop IDE was the only way to run ASP.NET apps on Linux before .NET core became a thing.
I use that too, it's a great program
Thanks for the tip. Do the support full net core 2.1? In my case, I have the backend in net core 2.1 and frontend in Vuejs, can I host both on the windows "**SWIFT"** plan? &amp;#x200B;
Obfuscar is more lightweight obfuscator than ConfuserEx, it only renames classes and methods and compress strings. But it is an option too.
Don't click on the link. Full of ads on his site. Spam spam spam.
Please dont spread rumors. I do have ads on my site but Its not a spam so please do not spread false information.
Direct link to the live service: https://sketch2code.azurewebsites.net/
Because TIOBE doesn't work very well. See: https://trends.google.com/trends/explore?geo=US&amp;q=C%23,VB.net,Visual%20Basic%20.Net 
Who cares?
I’ve also wondered this! It also seem to get crazier over time... I know TIOBE has its limitations as a tool to judge actual popularity, but they try and most other things there make sense. Like when Swift jumped in popularity after its launch and how Go has slowly been climbing... But Microsoft doesn’t even market VB.NET much nowadays and how can a mostly legacy product in maintenance mode be climbing?
While I don't think much of TIOBE, I do think people should care. - Technological trends can inform you what you need to learn. - They can shape your career trajectory. - They can save you from learning a still-born tech. - They stop you being the last off a sinking ship. For example, back when C# was young and VB6 was still highly popular, there were those who stayed on VB6 too long or went the VB.net route, and it hurt their career. 
&gt; On the other hand, C# popularity probably didn’t absolutely crash in the start of this year either. Yes it did. These are search trends, people weren't working during that week of December, so the number of searches for C# fell off a cliff. Same during Thanks Giving holiday. 
`mkbundle` does not do full AOT. It simply creates a self contained native executable, even [.NET Core has the capability](https://docs.microsoft.com/en-us/dotnet/core/deploying/) to do that. Mono has the capability to do full AOT compilation (and LLVM backend is also somewhat working) just like CoreRT and it is used in Xamarin I think. Unity3D uses IL2CPP for the same, I'm not 
Openshift Online is a good option.
&gt; What I could try is put the chosen value in a div with a unique ID then use jQuery after the DOM loads to put the contents of that div into select. This is what I was thinking. JavaScript doesn't play nicely with the razor syntax or other helpers, so I find it's best just to ignore those altogether. It can play half-nice, but it's often more trouble than it is worth in my experience. My second suggestion is probably best shown, I'm sure there's an analog for doing this in a code-behind of a web forms style page, but I can't remember it at the moment. Controller: [HttpGet] public IActionResult ShowAnswer(int id){ var answer = GetAnswerForQuestionId(id); var model = new AnswerModel{ answerForText = answer }; return View(model); } What this does will pre-set the value displayed on the screen without you needing to do anything more. The drop-box will still be a list of options, but the option you are passing in through the model will be selected. 
&gt; LLBLGen I had been using ServiceStack Ormlite previously along with DbUp for migrations. Now that I'm starting new projects in .net core I'm looking heavily at EF Core since it seems like it would combine the best of both worlds. How much of the time do you find yourself 'fighting' with it? Sorry to respond to an old thread.
They currently have 2.0 installed on their servers. They're testing 2.1 internally, but I couldn't get an ETA from them. However, you can still use 2.1 if you do a self-contained deployment. I'm using 2.1 on my sites with no issues. If you're unfamiliar with framework-dependent vs. self-contained, I recommend looking it up. But basically, with self-contained, the entire .NET Core runtime gets published with your app, so it doesn't matter what's on the server. Larger first deployment, but you only have to push all those files once. And again if they change. Your choice of front-end shouldn't matter, as far as I know. I've tested a React app, and it worked fine. And I use websockets extensively. I'm also using the Swift plan.
Neat! Thanks
Good basic tips, that I see many developers fail to follow.
I have a lot experience in c# and net core programming (I started from net framework 1.0 about 15 years ago), but all my jobs always hosting in IIS local servers and I never hosting in public websites. I am programming now a personal project and that's why I asking because I have no experience with public hosting. Has you try asphostportal? what are the differences with a2hosting? Sorry my english, is not my native language.
I wouldn't care about Tiobe Index because in my opinion it doesn't reflect the actual popularity very well. According to [this MSDN article](https://blogs.msdn.microsoft.com/dotnet/2017/02/01/the-net-language-strategy/) C# is used by millions of people, visual basic by hundreeds of thousands of people, while F# by tens of thousands of people. Even if these figures are inflated due to marketing reasons then I'd assume that they are right about relative popularity of these languages. My favourite alternative to Tiobe Index is [PYPL Index](http://pypl.github.io/PYPL.html) Figures shown there are much more reasonable IMHO.
Very little but we're pretty seasoned with it. It is considerable improvement from EF 6, but make sure all features you want are already implemented - for instance spatial support is still in the works.
Unless you have a team that's going to manage one of these endpoints I'd put them in one project. You can ways refactor into separate services later. I'm saving you a lot of headache...
Depends on the architecture you choose; there is such a thing as "microservices". But traditionally, you'd have one API that has controllers that denote functional "areas" of your program, like your example splitting Login and Messages into different controllers. There isn't necessarily an upper bound on endpoints. But they should all be related to some common core functionality.
Usually Microsoft uses Visual Studio's metrics to know what languages/types of projects people are working on. So every time you create a new VB or F# project, you are voting for more resources for those languages. 
Use EF and if you find something too slow for your liking use dapper for that. They are not mutually exclusive, you can use both - in fact stackoverflow is heading that way https://mobile.twitter.com/Nick_Craver/status/1032237963982319616
I'm using it in our apps to protect some of our IP from simple decompilation. It's not complex to get past but every level of indirection helps a little. Quite quick and simple to setup
More transparent and probably more realistic barometer of language popularity; https://redmonk.com/sogrady/2018/08/10/language-rankings-6-18/
Your post has been removed. Self promotion posts are not allowed.
Your post has been removed. Self promotion posts are not allowed.
Your post has been removed. Self promotion posts are not allowed.
Ooh I missed this was some regional data. 
How do you create the Aspects?
I used to follow TIOBE but they lost all credibility with these numbers.
The PYPL Index seems much more in line with reality. I don't think anyone should be using the TIOBE list as a guide for language selection on new projects. I don't know exactly how they come up with those TIOBE rankings, but they seem flawed somehow. I mean, Delphi only missed the top 10 because it got beat by Swift and Assembly Language? And is 5 spots higher than Go? I'm not buying it.
[removed]
"Draw the rest of the fucking owl" Whats in said attribute and how it's handled is 99.9% of this technique and i'm fairly sure it's what the above comment (and myself for the logging) would love to see an example of.
This is going to be an [ActionFilter](https://docs.microsoft.com/en-us/aspnet/mvc/overview/older-versions-1/controllers-and-routing/understanding-action-filters-cs). You have to inherit from Asp.Net attributes and inject them into the pipeline, where Asp.Net will call the overridden methods e.g. `OnActionExecuting`, on the registered instance of your attribute at the right stage in the request pipeline. Attributes in .NET don't have any ability to execute code wrapping the decorated method. Some code has to be looking for the marker Attributes and calling methods on them. Also, the transactional attribute is a really bad idea. Transaction scoped to HTTP request in any non-trivial system is going to smack you in the face in really nasty ways. 
Its probably just using crappy metrics that take the word "visual" or "basic" at face value instead of having to have them coincide with each-other.
Mini Profiler? https://miniprofiler.com/dotnet/AspDotNetCore
EF can be a nightmare. Good luck. I actually suggest you start looking into the EF queries generated. Check their sql execution plans. Check for expensive queries. Perhaps you may need some indexes to help as well.
You can check the queries that are run in the diagnostics window. This will also show you what it’s doing. It could be some middleware you developed that is holding up the pipeline. Also, make sure you didn’t change the RazorCompileOnBuild And publish properties. 
That would make a LOT of sense. :o
Shared hosting generally sucks for performance
Most of our queries are basic selects or updates. I am just focusing on the selects.
What is your hosting environment?
No need to apologize. :) I wouldn't have known anyway. Plus, I have a lot of respect for people who can speak and/or write in multiple languages. I haven't tried that one. I've tried WinHost, SmarterASP, Azure (if that counts), and a few VPS's. I liked Azure the most, but it's too expensive for me. Both WinHost and SmarterASP were okay, but lacking in features. Like no Let's Encrypt or dedicated app pool. Don't know if that's changed. And one had slow transfer speeds. Forget which one. A2 also has a REST API for programmatically controlling your sites. DigitalOcean was really slick, but I don't know Linux very well. So I spent too much time on basic stuff that I could easily do in Windows and IIS. There were some cheap Windows VPS services that looked promising too, but ultimately, I didn't want to maintain a server for very basic sites. 
Well I run my local one on Windows 10 and I am pretty sure we have the latest version of Windows server completely patched.
Set a break point in your controller. Step through the code. You should be able to see what methods are taking the longest.
Set a breakpoint in the constructor of the controller. Open the diagnostics tools window in Visual Studio.
I started with VB6 and spent 3 years doing VB.Net but I thought myself C# and got a nice pay raise... I haven’t coded VB.Net in 10 years but back in the day I was proficient with both. Back then, that was a big deal. Times have changed though...
It is nonsense. What could this possibly mean? Just nonsense. Nobody in their right mind would make a new application with VB.Net.
As some other user mentioned maybe they were searching for the words visual and basic and a lot of results came up. It will be first place next year. 😂
TBH if VB really became more popular than c# I would just leave .net all together 😅😅😅
Yeah like what was mentioned, use separate controllers instead of separate projects (APIs). Even if you have a team working on it, assuming different controllers, it is always easy to do a merge to master on e.g. GitLab, from different branches.
Lol Okay I know that is from a 'fan' developer's PoV. :p
&gt; So as many of you know, in Chrome you can load a page and it would tell you how long different steps take and with that you can see what thing took a long time and eliminate it. Is there anything like that for .NET Core? It is called a profiler, and it won't be specific to .NET Core. If you are on Windows, check out the one built into Visual Studio or the tools in the Windows Performance Toolkit like xperf. For other operating systems, lookup the system appropriate tool. .NET Core will work with the standard tools for the system. Last time I was on Linux, perf and lttng were the standard tools there.
I have no idea what you mean by that. 
Definitely related to non default monitor scale for me. 32" 4k, and using native makes it way too small. JVM on macOS to blame, perhaps? MacBook Pro (13-inch, 2017, Four Thunderbolt 3 Ports), so not an old one.
Elastic Beanstalk on AWS.
Aspect is basically a decorator used for cross cutting conserns. In asp.net they are implemented using action filters. One may also implement them using DI container + dynamic proxy or smth like Postsharp
This is awesome. Thanks for the contribution :) &amp;#x200B; SVG's are supported, but just through the regular url-loader, actually i already had some more specific image related Webpack configuration in my other project, like svg-url-loader for SVG's and img-loader to auto lossless-compress image assets. I took it out to try and simplify the Webpack configuration a bit. But when i think about it, why would you not want those features. I might and them back.
I tried to convert a project once (a huge one), and this is what I found out: * The conversion is only ~70-80% useful (due to mouse pointer and error handling) * Mouse pointer and exception handling stuff is different and at least the error handling is difficult to translate 1:1 to a new Windows Forms/.NET application * It'll definitely be lots of work to clean it up * Be prepared to replace every COM/ActiveX component * You **can** use them, but the GUI components were sluggish and sometimes caused problems when they had to be resized * You'll get hit by a performance penalty for all transitions between .NET and DAO/ADO (COM/ActiveX) and especially on first use of an ActiveX/COM component * Everything has/should be converted, because otherwise your components are just "hosted" and are therefore unable to use .NET (this isn't strictly true, because you can still create ActiveX components from .NET, but really, who want to do this kind of stuff?) * This includes data access (from DAO or ADO to ADO.NET) which should *definitely* be rewritten * Don't even try to convert a project when you rely on a third-party grid (or other component) and have no replacement at hand (e.g. Infragistics components for ActiveX) Due to the huge amount of post-conversion work, the converted project was scrapped and the VB6 project will be maintained until the end of the universe (or until the robot- and/or zombie apocalypse, whatever will come first). 
I think the correct terms would be COM Callable Wrapper (CCW) and Runtime Callable Wrapper (RCW). The performance impact will depend on the design of the interface. A chunky interface (few calls doing more work) will not be impacted that much, but chatty interfaces (many calls) will be less efficient. In the application I'm working on the code is not ported to .NET as a whole but the new features are written in c#. Extending and replacing the old code. So far this has worked well, but it takes a long time before all vb6 code is replaced.
&gt; I am currently in the process of migrating a substantial vb6 project towards vb.net What is the goal? &gt; After having used the default migration tool in Visual Studio 2008, I’ve noticed that these are now treated as COM objects Visual Studio 2008? Seems a bit...old. If the goal is to bring the project up-to-date on modern technologies, your approach isn't going to work. It's basically the minimum effort required to check the box 'Works on .NET' without it actually benefiting in anyway. &gt; This project has a number of referenced dependencies, custom controls and components - essentially additional functionality found in other vb6 projects hooked up to the main project. If I were you, I would download Visual Studio 2017 community and start a new solution. I would use C# but there's nothing wrong with VB.NET if that's what you are comfortable with. For each of the custom controls projects, create corresponding WinForms custom controls projects, and re-implement each one. Once you have all the dependencies, you can migrate the main project as well. It will take longer, but it will be a better project in the long run. I can tell you from experience the next step they'll ask to turn it into a web application, and those COM components are not going to migrate very well, but winforms -&gt; webforms isn't a big stretch. 
Do yourself a favor, rewrite it from scratch with c#. [VB.NET](https://VB.NET) is dead tech and you shouldn't even bother.
&gt; Are there any possible downsides to this approach? Presumably performance, first and foremost Performance is the biggie. Code executing within the CLR is running inside managed memory. Code executing outside of the CLR isn't. This means that any data passing across that boundary needs to be marshalled. &gt; If external components can be interpreted by the CLR through Interop, why can’t the whole project Because external components implement COM interfaces, while (by default) a VB6 project does not. Were it an ActiveX project, it could be both an EXE and an interopable library. &gt; Am I able to thus avoid having to alter or migrate these projects in any way? Look: the VB6 IDE, the only tool that allows you to modify and build your VB6 projects, officially became abandonware in 2008. The VB6 runtime remains supported, but VB6 applications and libraries are only going to run in 32-bit mode. *You have to rewrite them*. 
Yea, I know some companies have a crawler that hits every page once so it takes out the first time slowness. You would think that would be something that would be built into visual studio by now. If there was some way to put the burden of that compiling on the compile stage so it compiles slower but my website loads fine I would be cool with that.
Razor pages can be pre-compiled, it's quite easy to set up. https://docs.microsoft.com/en-us/aspnet/core/mvc/views/view-compilation?view=aspnetcore-2.1 (obviously I'd follow the non-deprecated method if you can!) As someone else suggested, Prefix might help you get off the ground with identifying the issue.
If I do that can I still make changes to views on the fly without having to rebuild?
Plus one for starting small and refactoring as it grows. Get in there and get your hands dirty! :) 
While VB.Net isn't hip and shiny like C# it's far from a dead language. It inherited the stigma of VB6 even though it's every bit as competent as C#. I'd describe it as the less popular brother of C# that had a bad rep growing up that nobody likes to play with.
Having done a few VB6 to VB.Net conversions of my own of various degrees of difficulty, I'll tell you from experience it's actually quicker in most cases to just re-write from scratch, using the original code as a model. You can stay with VB.Net because portions of the VB6 code can be transferred as-is or with minimal conversion to speed things along (subroutines and the like) but to do a straight up conversion using migration tools will only give you migraines down the road when trying to support the code later, and these tools only work decently for the most simple of programs. Usually when I do one of these I rewrite to C# if time permits, and/or rewrite using WPF framework, but as we all know, time is never on our side.
This really doesn't answer the question.
you could use a simple middleware to time the rest of the pipeline. then keep inserting it at different points in your Startup.Configure() method to track down the delay. public static IApplicationBuilder UseTimer(this IApplicationBuilder app) { return app.Use(async (context, next) =&gt; { var stopwatch = System.Diagnostics.Stopwatch.StartNew(); await next(); app.ApplicationServices.GetRequiredService&lt;ILoggerFactory&gt;().CreateLogger("Timing") .LogDebug($"Elapsed: {stopwatch.ElapsedMilliseconds}ms"); }); }
Mosh’s videos are not bad at all, he also has a ton of free content on YouTube check those out before buying on Udemy just incase. And if you want to use MVC5 on Mac I think you will need mono. I believe Mac OS is only supported in Net Core. 
I see no reason to continue using MVC 5 aside from companies that don't wish to upgrade to .NET Core.
Very true 
We have our own dedicated servers. This is an internal app with a very small footprint and several other applications on it that aren't slow at all.
Eventually it will die. It was never developed with the intention of lasting this long. In addition there is no .NET Core for VB.NET which in my mind and the mind of many others effectively makes it a dead language.
&gt; In addition there is no .NET Core for VB.NET which in my mind and the mind of many others effectively makes it a dead language. Very much this
&gt; Visual Studio 2008? Seems a bit...old. IIRC, that was the last version that included the VB6 to VB.NET converter.
`RazorCompileOnPublish` looks like what you would need then, judging by the docs.
A controller for each resource is generally what you should be doing. When you say "separate APIs" what do you mean? Do you mean individual service for each resource? That might be overkill. Start simple for now and refactor as and when you need to
My queries run pretty fast in SQL management studio. If the RazorCompileOnPublish only helps with the first time the page loads I am not sure that's my issue anymore. I loaded our home page, which consists of a very simple bootstrap menu and a table with 2 rows. I should have done this when I first wrote this, but I kicked the app off in debug mode with Chrome and after it loaded I went to the network tab in chrome and clicked disable cache and reloaded, some interesting numbers. localhost | 18.9kb | 1.4 min jquery.js | 273kb | 7.4 seconds jquery-deparam.js | 4.6kb | 6.55 seconds custom.js | 4kb | 6 seconds Yup, that's right jquery-deparam.js, a 4.6kb file, took 6.55 seconds to load.... 
1. No. If you want everything to be .NET, you'll have to migrate everything. 2. You're stuck compiling as x86 as long as you have any COM references. Performance when using COM components (especially UI components) is a real issue. 3. The portions of the project that are running through Interop are still using the VB6 runtime, and aren't using .NET. In addition. Make sure that you remove any reference to Microsoft.VisualBasic.Compatibility.* in the new project. This library / namespace only exists on your local machine, and isn't part of the normal .NET framework. The Compatibility Library is only there for the converter to get a project functional after a conversion, so the code isn't optimized at all. You'll also want to ensure that you're using Option Explicit (This should have been on in VB6 as well), and Option Strict (this is new in VB.NET). You can switch both of these on at the project level, and as the default in VS for new projects (you can turn Option Strict off in individual files temporarily while cleaning up / converting code if you need it). Like others, we found that most of the code from the conversion was pretty unusable. We ended up rewriting it all from scratch over several years (while writing all new code in .NET libraries). 
For large enterprises, switching from .NET Framework (MVC5 or otherwise) to Core would be a monumental task that requires a lot of time, planning, money, and often training. Also, apps may be relying on assemblies that don't exist in Core, making it longer/harder/more costly to switch due to re-engineering or finding alternative dependencies in Core. For many of those companies, it isn't worth it, or even possible for some. .NET Framework and MVC will be around for a very long time yet. I don't see any issue with learning both in tandem. They are similar enough that it'd be relatively painless, and it's good to have both on your resume. Plus, MVC in general is a pattern that can be applied outside of ASP.NET, so it's good to know. I don't know why one would say there's no point in using it?
Bloody hell, are they hosted alongside the application?
I'm actually working on a beginner C# course right now. I hope to become like a laracasts version for msdevs. Would you like me to pm you when the course is done? It will be available for free on youtube since it's my first course but the next course after that will probably be behind a paywall.
Those files are on my machine in the wwwroot folder. I am accessing them from my machine.
I really like the "Pro ASP .NET" book series by Adam Freeman, he has one for MVC 5. Outside of that, the Coding Blocks podcast is awesome, and while not strictly dotnet/c# focused its definitely their language of choice for the most part (apparently Joe Zack is JS 4 lyfe now). They also discuss a lot of architecture patterns, and best practice type stuff you would be expected to be familiar with in a dotnet shop.
I &lt;3 Mosh. I learned C# from Bob Tabor @ learnvisualstudio.net, but all my advanced courses have been from Mosh.
You're not gaining much by moving it to vb.net. it's still legacy code that's probably crap. I'd mantain it in vb6 until it hits end of life in 2024 or whenever. Plenty of time to rewrite it in c#.
Why didn't anyone mention garbage collection yet? That's the real problem. COM uses reference counting GC. .NET uses the incompatible mark-and-sweep. This means you need to liberally sprinkle your code with Marshal.ReleaseComObject or you'll leak COM objects. Doing this right is very difficult, and gets harder as the number of related COM objects increase. 
There's 3 logos. If you are using GitHub, it will show the GitHub logo If you're using another git provider, we'll show the git logo. If you're using a non-git provider, we'll show brackets `{}`
Thanks for the info.
The Microsoft virtual academy has a lot of useful videos. https://mva.microsoft.com/ 
The benchmark is interesting but my big take away here is how you measured both .NET Core and .NET Framework in one benchmark. Nice.
I’ve recently been in this exact spot only I went the opposite direction and decided to trust the SPA middleware. Fun fact: You can repurpose the React template to use a Vue CLI project with less than 5 or so lines of config change. What I’ve ended up doing is having the cookie based auth handled via an API endpoint and then every time the UI Router goes into a route that has ‘auth: true’ set, I use a beforeEnter hook to call a simple API method that has [Authorize] on it. If I get a 200 back then the user carries on, 401 sends them to /login, I also use this route to send down a new user JSON object so even if the Vuex store is altered, it’s user object is rehydrated on the entering of the route. Ofc you still need to secure all API properly on the server, never trust your UI, but I’m now wondering if I’ve gone too far with all these extra check calls. IMO, I’d say that if each of your Razor pages also had a separate Vue bundle generated, you’ve kinda gone down the ‘micro-site’ route where each page is technically a full SPA app. There are other considerations to be made here like the sharing of a global state but IF the pages all load the same JS bundle then I’m not sure what benefit, if any, your approach would give you. Sorry for the slight rambling post!
You can always run SQL server profiler against your database (it's installed with sql server manager), if you don't have lazy loading enabled you should see just a few big queries being run per web request, if you see smaller multiple queries like you should check if there's a rogue member of an EF model being initialized via lazy loading. &amp;#x200B; You can also disable Lazy loading entirely [https://docs.microsoft.com/en-us/ef/ef6/querying/related-data](https://docs.microsoft.com/en-us/ef/ef6/querying/related-data) &amp;#x200B;
Very announced I can't use It in a natural Mac environment.
I'm looking to move from an agency using Laravel, to a consultancy using C#. Is it an easy environment to work in using windows on a Mac.
Lite DB as mentioned above is pretty great if a local file db is okay. If you need something bigger and more full featured, Postgres using Marten is pretty awesome.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/windows10] [Windows 10 Upgrade - IIS Express Can't Render ASP.NET MVC Application • r\/dotnet](https://www.reddit.com/r/Windows10/comments/9b20uz/windows_10_upgrade_iis_express_cant_render_aspnet/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Bootcamp directly into windows is just like having a PC; plug in a windows keyboard and you are good to go. In parallels vm there was some overhead. Some of my software was on the Mac side and some was in Windows so it was a little awkward switching between the two operating systems. I ended up spending more time than I wanted to setup shortcut keys, for example. 
Are you logging? I had to switch my simple logger to Serilog because it was adding a minimum of 100ms. I have also pulled out custom file based loggers that have adding almost a full second a request. You won't ever see this stepping through the code because all the middleware logs A LOT before it gets to your controller. In my case, the log from the controller action was 2-6ms, but response was still 100ms. The other part is you could have something causing issues with dependency injection. Say you have added a class that is Transient, and it turns out this gets created 200 times a request, and the constructor has some slow code (against best practices), but it could happen. Easy test is also to just create a new project, and test it locally, that way you know it's either hardware or software.
We do log updates and writes, but not our reads.
Ug. You are right. They added VB.NET support in 2.0 but the ASP.NET isn't done yet. I wish somebody could give me one good reason for why Microsoft persists in dragging this dead and ugly language along for the ride. Whats even more amazing is that there are still enough luddites around who wish to make use of it that this is a conversation we are having. And this is coming from a guy who spent well over a decade of his career doing VB6 and VB.NET work.
Been there for decades.
I think your viewpoint on this is skewed. https://insights.stackoverflow.com/survey/2017#technology VB.NET enjoys no significant popularity from what I've seen. In fact shops that advertise for VB.NET devs around here (though they are far and few between, they exist) have a really hard time finding talent. No self respecting C# developer wants to work with VB.NET. The vast majority of .NET development talent works primarily with C#. Choosing VB.NET at this stage of the game is akin to inflicting an order of magnitude of additional pain and suffering upon yourself in addition to what you'd normally experience with any run of the mill project. Who wins here? A few lazy devs who can't be bothered to pick up a far more popular language, knowledge of which will only enhance their career? Thanks, but thanks. Though maybe VB.NET being integrated with .NET Core is a good thing as it allows Microsoft some possible leeway in the future in terms of being able to say, "We aren't supporting it anymore and if you want it, feel free to fork .NET Core at version X and develop/support it yourselves." Just the thought of a bunch of ragtag VB.NET devs trying to support a real code base brings a smile to my face ;)
Have you considered using the tool LinqPad? You can test the performance and functionality of Linq with it.
Never heard of it.
Your arguments are based on emotions. My position is based on the metrics Microsoft extracts from Visual Studio.
Have you tried running `aspnet_regiis -ir`, as suggested in [this StackOverflow thread](https://stackoverflow.com/a/2376484/124386)?
Link? I provided a link to my sources. You could at least have the courtesy to do the same if you insist on belaboring the point. A quick DDG search isn't pulling this information up for me.
Thats because Microsoft stupidly decides to talk about their numbers only in videos, not in written, searchable form. As to my point, the Stackoverflow survey is a rather limited slice of the overall .NET community. And it's mostly concerned with the feelings, not facts. Professional programmers often, wrongly, attach moral values to their tools. As you said yourself, they see using an unpopular tool as somehow injuring their self respect. A common, but nonsensical belief. But beginners have no such hangups. Not having learned such dogma, they instead tend towards whatever is easier to learn. And there's no doubt that VB requires less ceremony than C-based languages. It should, however, be noted that relatively few people stick with VB. Microsoft's research suggest that it is mostly used as stepping stone to other languages.
It's not stopping you, you just have to unblock it first It's not a GitHub feature either, windows security policies can be set to treat every zip file from untrusted sources behave like that.
Having just downloaded another project from github (I have to mark students work) it never showed these limitations.They don't exist in the options. However all the work from one college have this on their source code files. To get their programs running I have to change each file to unblock. I wonder what might be the difference between the projects, its the .cs files predominantly that have this block. And until I started looking at files from another college I had never seen it. 
No I didn't actually. I argued that people using tools have to understand the database. You is one of those funny words you see. It doesn't mean just the person you're talking to. 
This is specific to IIS Express, I don't know exactly where those files live. I know where the IIS logs live, but not the IIS Express.
This command is more for .net 1.1 - 3.0 and doesn't really work in .net 4.7.2 world sadly.
Why don't you just use Git command line to clone it?
Who said that? Many shared hosting support latest [asp.net](https://asp.net) core. I use asphostportal windows shared hosting packages and they support latest .net core. You can check them, the price are competitive, around $5.00/month.
Every major web browser has been doing this for literally years.
I will try to help you here 1. I dont know if they support Vuejs. You can ask them. But the most important thing is they fully support .net here. So, if your application is built using .net, then it will work fine on their system. 2. Yes, they have support it, I have tried it. 3. Gooooooooodddddd 4. For me, it is worth for money 5. A2? hmmm.... I'm comfortable with asphostportal, so I don't think to switch. 
Git CLI still downloads the repository locally, it just won't do it in the same way as the browser, and it'll give you the folder itself instead of the zip file.
Hey my dude, first of all, you've got this. If you can do other stuff, you can do dotnet better, It's convention over configuration in the best kind of way, as everything is fairly integrated. If you can master 3 things, master vanilla SQL, vanilla C# and vanilla JavaScript.
Interesting to see the issues opened from this: https://github.com/dotnet/coreclr/issues?q=is%3Aissue+author%3Ajakobbotsch+label%3Aarea-CodeGen
... MVC? The first couple of questions seems to be WebForms specific .. not sure but I think the candidate should consider running at this point (MVC interview where the interviewer asks about Viewstate and aspx handling ....)
I am sorry to hear this feedback, title has been changed.
&gt; The bugs are often sorted out impressively quickly though! Yeah, I've been impressed by that, they triage, analyse and fix the bugs very quickly!
Sadly, I've tried every possible option in the thread to no positive result.
Yes thank you. I have so far invested in about $3k worth of gear so I hope I at least manage to create a somewhat good courses. I realized what I like about good online educators is that they have a really clear voice along with the crisp video so I bought an expensive microphone in order to help me achieve that goal. The only real caveat is that I'm not a native english speaker but I hope that my english is good enough. I'm from Sweden so it should be I'd like to think.
Startup is very different in .NET Core. Everything is moved to a startup.cs/program.cs file in terms of bootstrapping your web app. It takes a little getting used to, but it's worth the change. Things like Dependency Injection are a lot easier to deal with and are there right out of the box now. Using appsettings.json instead of a web.config file is kind of nice actually. I've been working with .net core for a while now and I've grown quite fond of it. I find myself having to think 'Ok, how does this work again?' whenever I have to work with a non-.NET Core project.
Lots of good suggestions here. I'm actually building a .Net Core tool that brings features in Laravel that aren't in .Net Core! Not sure if it'll help, but maybe it will give some more context or will be a good starting point given the Laravel knowledge you have: [https://github.com/jamesmh/coravel](https://github.com/jamesmh/coravel) ?
Good post, makes me want to give it a crack. 
Not for me... moving away from Visual Studio to a text editor (advanced as it may be) sounds like madness.
&gt; Visual studio code &gt; Command palette &gt; Speed demon Laughs in emacs/vim
I use both, and after a bit of a learning curve with VS Code, it's now my preferred IDE whenever possible. 
This really isn't a fix, it just enables directory browsing. What I need is to have the MVC application run through the .net engine.
Same. VS Code is really nice and I use it for pretty much every language (including C#) and it's cross-platform experience.
It's good to hear there are opportunities. I really like the .Net and Azure stack and would like to stick with it. Hopefully things will work out.
My next challenge ;)
I ummed and ahhed about whether to call VS Code a text editor or an IDE. I came to the conclusion that it can sort of be either, but with the setup I use and describe in the post, I think it falls into the latter camp. Honestly, give it a go. It's a really useful experience.
I use VSCode anywhere I can. VS has a far more robust and powerful feature set, but VSCode does what I need nicely without adding all the features and components that I don't need. I don't use powerful machines for development and there is something nice about being able to open VSCode and run my project before VS can even load the project. I also like the Git integration and the integrated command line. VS' equivalent features have always felt clunky to me in comparison. Even extension management in VSCode feels nicer in my opinion. Not to mention updates. I have no fears when I update VSCode. When VS says I have an update I put it off because I fear it will take a while. 
C#? Visual studio. Powershell? VS Code. 
About 7 
Too fiddy
Happy cake day. I can't look at webforms after 5 pm, it's to keep some sort of calm in my home
I dunno, I miss features like CodeLens when I use Visual Studio Community. It just doesn't cut it for me compared to VS Code.
I am stuck working on a .Net framework application and the only thing I miss is the tag helpers. Web.Config or appsetting.json really makes no difference. I actually find the .Net Framework MVC applications to be a little easier. No need to mess around with the bootstrapping the application, almost everything you need is already there.
I really like how DI is there by default and you don't need to set up some third party solution. I think registering services in the startup file "makes more sense" than having some random xml in a web.config file. Not everyone will like the new way, and some will embrace it. To each their own 😀
I don’t dislike it. But it kind of copied Node.js. DI is only useful if you actually create multiple or new implementations of your interface. Most applications only have one implementation so it is often pointless. But it is very easy and nice to have it built in if you need it. As I said, I ❤️ the tag helpers and that api and MVC controllers have merged. I also ❤️ TypeScript. It’s my favorite language and that works in both frameworks.
Only downside to vs code is lack of powerful debugging support, unless I'm wrong and someone could give me some pointers
The bottleneck is almost always the database.
Wow calm down.
i'm just reading the ebook of eshoponcontainer.. so i must read this article :)
&gt;Is Mosh Hamedani on Udemy a good resource? I believe so yes. I've only watched small sections of his videos but the quality is good, he explains things very clearly and I know a few devs who recommend him highly. &amp;#x200B; &gt;Is there a Laracasts equivalent? [https://www.dotnetrocks.com/](https://www.dotnetrocks.com/) has been around for years. Worth noting though, they rarely dive deep into [ASP.NET/MVC](https://ASP.NET/MVC) stuff these days and the topics vary widely from DevOps, to VR, to Azure etc. Always an interesting listen though. &amp;#x200B; &gt;Who would be the best twitter accounts to follow? Just looking through my follows, here's a few to get started. * Scott Hunter: [@**coolcsh**](https://twitter.com/coolcsh) * Damian Edwards: [@**DamianEdwards**](https://twitter.com/DamianEdwards) * Microsoft Developer: [@**msdevUK** ](https://twitter.com/msdevUK)‏ * Andrew Lock: [@**andrewlocknet**](https://twitter.com/andrewlocknet) * The Morning Brew: [@**MorningBrewNet**](https://twitter.com/MorningBrewNet) (Twitter account for the web site which is a a handy daily roundup of .net related blog posts) * Carl Franklin: [@**carlfranklin**](https://twitter.com/carlfranklin) (co-host of .net rocks) * Richard Campbell: [@**richcampbell** ](https://twitter.com/richcampbell)‏ (co-host of .net rocks) Clearly there are plenty more, but start with some of these and the rest will probably emerge :-) ​More generally, if you want to seek out some useful [ASP.NET](https://ASP.NET) content [https://discoverdot.net/](https://discoverdot.net/) is really useful. You can use this to find podcasts, blogs and github projects etc.
I think I did something similar once. The solution I used doesn't seek to replace the stream (your responseBody = new MemoryStream()) but rather encapsulate it in a custom defined stream class. If you create a stream class that embed the original stream, you can override every read and write operations in order to both write into the original stream and into your logger/file.
Thanks for the read. You have inspired me to give vs code more than a cursory glance. I will take up the challenge and use it exclusively for a week and see what happens!
Does [Failed Request Tracing](https://docs.microsoft.com/en-us/iis/troubleshoot/using-failed-request-tracing/troubleshooting-failed-requests-using-tracing-in-iis-85) give you any clues?
Right. But in my 20 years of coding, probably 90% of the time, I have seen only one implementation and no unit tests therefore the DI was pointless. I agree with you, but not every project is the same. If there is no Unit Tests and there is only ever one implementation then the DI was was unnecessary complexity. 
I use VSCode for front-end development. For C# though, I'm kind of invested in extensions like ReSharper and OzCode that make my life easier and don't exist in VSCode. 
So postman does support writing javascript to assert success and failure, and you can run it on CI. That said, however, i’d start with classic ITs to make sure all parts of you code have decent amount of assertion.
Your post has been removed. Self promotion posts are not allowed.
I do not understand how it was a self promotion? I do not own that tool. I just wanted to help by sharing but this incident is very bad experience for me. Who does not have ads on their site? Is it bad to have ads?
&gt;I do not understand how it was a self promotion? I do not own that tool. I just wanted to help by sharing but this incident is very bad experience for me. Who does not have ads on their site? Is it bad to have ads? I do not understand how it was a self promotion? I do not own that tool. I just wanted to help by sharing but this incident is very bad experience for me. Who does not have ads on their site? Is it bad to have ads? 
which version of IIS and which version of Core ? I had the same issue when I tryed to upgrade my web app from Core 2.0 to 2.1 on IIS 10
You can [expand additional details](https://www.petri.com/powershell-problem-solver-getting-process-details) in PowerShell to include Path or ProductName Get-Process | Select ID, Name, Path
If you're running in windows, you can use Task Manager. If you add the Command Line column to the Details tab, it will show you which app that dotnet.exe is running. [Show Command Line in Windows 10 Task Manager](https://winaero.com/blog/show-command-line-windows-10-task-manager/)
It was 2.1, but my solution is in my edit.
I've been tasked in my current company with upgrading legacy VB6 software to C#, many (several hundred) thousands of lines of code. We also had legacy C++ 03 code to rewrite and even legacy C# code (.Net 1.1 stuff written with much misunderstanding of .Net). This is not a process where you use a code-conversion wizard and change the syntax. The point is to benefit from the current tech, current knowledge and skills and to learn from past mistakes - we have changed protocols, design patterns, approaches and concepts. Also, we've done it the hard way as there are VB6 components still running which communicate to new components via named pipes or interop - these legacy components are always the bottlenecks of the system, consistently and periodically causing problems on regular basis, they have been the bane of my existence in the company. The point is, simply changing syntax from VB6 to C# is a pointless undertaking, gradually upgrading is better than nothing but only real fix to all the problems caused by VB6 is to eliminate the VB6. The tech burden accumulated by sticking to VB6 for years has one of the highest interest rates.
For PowerShell, try this. The name of the app might not be available or really useful in all scenarios. The best bet is where the app is running from. To get that, you need to see the `CommandLine` attribute of the process (works in Win10). ```powershell Get-CimInstance Win32_Process -Filter "name = 'dotnet.exe'" | select CommandLine | foreach { Write-Host $_.CommandLine } ``` As an example, I've run `dotnet new console` within a new folder, added a `Console.ReadLine` in the Main code to hang the app until I could gather the output. Running the above command while running the app gives me the following output: ```none "C:\Program Files\dotnet\dotnet.exe" "C:\Program Files\dotnet\sdk\2.1.300\Roslyn\bincore\VBCSCompiler.dll" "-pipename:maxim.F.BARKNmSUplaA7XVgGbMRuOoX6" "C:\Program Files\dotnet\dotnet.exe" run "dotnet" exec "C:\_prototypes\testapp\bin\Debug\netcoreapp2.1\testapp.dll" ```
All over the place, some pretty okay, some terrible.
Hmm, that commadn just prints out a bunch of blank lines for me... By the way, is there any way you know of to make Powershell load faster?
Which version of Windows are you using? Check your local profile script? Maybe something's slowing it down?
Oh wow, thanks! That's just what I was looking for. Any idea what the green leaf icons are next to some of my processes in Task Manager, by the way?
Windows 10. What do you mean by local profile script?
&gt; Get-CimInstance Win32_Process -Filter "name = 'dotnet.exe'" | select Run this after select hit `CTRL-SPACE`. `CommandLine` should be in there technically. To open your local profile script, you can open it with `notepad.exe $PROFILE` or any other code editor. This script is run everytime you open PowerShell.
In my opinion .Net core is a very easy transition from standard. I just started learning it a few months ago, and was expecting it to be this huge change. It’s really not. They are very similar, and other than a few things like not having a web Config, it’s almost identical for your day to day stuff. Any time I have hangups I can usually Google it and be on my way in 5 minutes.
Is this the green leaf you're talking about? [https://www.tenforums.com/performance-maintenance/109216-green-leaf-icon.html](https://www.tenforums.com/performance-maintenance/109216-green-leaf-icon.html) 
Oh, I see the command line now, thanks! I tried `notepad.exe $PROFILE` and Notepad gave me an error saying that the file was not found. I thought maybe the file being missing was slowing down PowerShell trying to search for it, so I created it, but I got an error about running scripts. So I followed the instructions in the link in the error and now everything's nice and fast! Thanks! :)
Yes, thanks! So it looks like it mean the process is suspended in order to improve performance and save power?
Something isn't "bullshit" because it is a limited data set. Go ahead and provide data that backs up your assertions. 
lol
I think you're right. 
You are pretty much just linking through to your website. That is considered self-promotion.
You can set up a .NET app with .NET Core's DI library by installing Microsoft.Extensions.DependencyInjection from NuGet. It's really nice.
Try running Visual Studio as Administrator? 
Why either VS or VS Code? I use both daily. I prefer .NET Core on Visual Studio. But I prefer any other type of development on VS Code. (Even writing documentation) 
Is it? I have spread this knowledge to those who did not even know about this tool. Anyways I am really upset with this incident. Same post has been praised a lot in other sites. For example: [https://www.linkedin.com/feed/update/urn:li:activity:6440921968945520640/](https://www.linkedin.com/feed/update/urn:li:activity:6440921968945520640/)
I love how with nUnit's cross-product test parameters you can make hundreds of tests easily. Like: [Test] public void TestLots( [Values(1, 2, 3, 4, 5)]int param1, [Values(1, 2, 3, 4, 5)]int param2, [Values(1, 2, 3, 4, 5)]int param3) { } Produces 5x5x5 = 125 test cases. 
Although I've found with this that if you're multiplying like that, then you need to be sure that all of those cases are actually telling you something about the unit under test rather than just giving it some pointless exercise.
Yep, also you can only use constants, so good luck passing objects as parameters. In the rare cases I need to validate a unit against multiple inputs, I always do it inside the unit by enumerating the parametersets by hand. 
Do people actually do parameterised tests for their production system? It's always seemed like a fairly niche feature and I struggle to think of good example of a parameterised test case (apart from something like bounds checking maybe?) Someone enlighten me :)
Parameterized tests get a lot more powerful when one of the parameters is the expected result. [Test] [InlineData("valid@mail.com", true)] [InlineData("i am@invalid.com, false)] public void TestEmailValidation(string email, bool expected) { Assert.Equals(expected, Validator.ValidateEmail(email)); }
I guess, I’m just not clear on why you wouldn’t write two separate tests in that case. It seems like minimising code taken to the nth degree. Are there other practical benefits.
DOM manipulation is coming in via WebAssembly object references.
Try Powershell Core. It can also run C# code
What you want is called a REPL. See [this](https://github.com/filipw/dotnet-script) tool. 
The Link is from the official WebAssembly site. No idea about object references, but I've always heard that you'll want to use both WA and JS side-by-side.
Don't bother, this sub is full of people who would give their left nut to avoid learning how to code JS properly. They're convinced that the entire front end community is going to learn C# rather than stick with JavaScript they like just fine.
This is also from official Web Assembly site https://github.com/WebAssembly/reference-types/blob/master/proposals/reference-types/Overview.md https://github.com/WebAssembly/host-bindings/blob/master/proposals/host-bindings/Overview.md Basically, reference types together with host bindings will provide the ground work for such access. 
Then there are those that actually know one thing or two about Web Assembly and don't have any sentimental attachments to JavaScript.
Super excited! I'm working on a prototype for Blazor which will use a JavaScript component that's gonna enable basic two-way data binding from C#. And another one to manipulate the DOM from C#. I don't want everyone to write code in C#, but if I have a say in it, I'll try to make it a viable alternative! It won't be able to replace JavaScript, but the main application logic will be in C#. 
That article could use a thorough proof-reading. 
Yeah. It was part of [ASP.NET](https://ASP.NET) Core 2.1
If you can do the same thing with less code there is always a maintainability benefit. I believe the point of the article is if it is easy to write additional tests then you are more likely to do so. This in turn means it is easier to increase your code coverage. 
God damn and I still can't even get my push notifocations to work with SignalR :*)
I wish I could work with you, or anyone... no one wants to hire me because I've been on disability for so long! :(
The first time I saw SignalR, I thought it was a joke because it was only capable of pushing plaintext notifications. I'm glad to see that they didn't stick with that and it's finally starting to look like a proper message service. 
Don't bother, the entire front end community is full of people who would give their left nut to avoid learning how to code C# properly. They're convinced that this sub is going to learn JavaScript rather than stick with C# they like just fine. :P :D 
You mean the page model, or the model for the user?
Would it make more sense for your user model to have a collection of users, or the page model?
The user model prob
That would be recursive. You don't want that. Your pages is for displaying a collection of users so that is where the data should live.
I'm really looking forward to Blazor. I'm pretty sick of Angular 85 or whatever we're on now and I've been eyeing Vue to simplify, but I'm really hoping that Blazor makes all the pain go away!
Can you please elaborate how do you manipulate DOM from C#?
I'm interested in it not for Blazor style C# frontend but for being able to \*share .NET libraries with javascript\*. Lots of domains have really niche libraries, and reimplementing them in javascript is a pain.
Well yeah, a sub based around .NET is probably not doing to be the biggest fan of JavaScript. I'm sure if I went to the JavaScript sub they are also not going to have the best view of other languages. I'm sure most of us here though at some point have done front end / full stack stuff with JavaScript. For me it's usually painful. Typescript makes it tolerable but I spend more time figuring out stupid looking problems when I do solving actual issues. Then there is the dependency fun with most of the modern frameworks. It's got to the point I miss doing Razor pages...
In your controller you get a list of users and have that be your view model, or assign it to a property of the view model. See here for how to get the list of users: [https://stackoverflow.com/questions/18773838/how-to-obtain-a-list-of-users-from-asp-net-identity](https://stackoverflow.com/questions/18773838/how-to-obtain-a-list-of-users-from-asp-net-identity) Then in the view, you loop through the users doing something like this: ``` &lt;ul&gt; @foreach (var user in Model) { // or Model.Users &lt;li&gt;@user.Username&lt;/li&gt; } &lt;/ul&gt; ```
Pretty sure it's going to replace everything. 
Except the difference is that those people are already writing front ends and they're good at it and the people complaining aren't. A product which caters for people who don't do something very often and do it badly when they do is probably not a winner. Even Microsoft knows this. 
I write dotnet, I love dotnet, but I also know that stuff like blazor is always going to be behind because it has no real appeal to the people who actually write front end Web code for a living. If the front end community isn't excited about it all it's ever going to be is a failure. The people making webasm say it's not intended to replace JS, but that's not stopped pretty much every person who wants to use it trying to do exactly that. Blazor isn't even capable of doing a really simple real world app, and it may never be? 
What, you mean like the fact that DOM manipulation in WebASM uses JS interop and may always do so? Or how about the fact that about 90% of the horror of JS development is the fact that the DOM is horrific, so even if you could access the DOM directly it would still suck? Or the fact that literally every single current webasm UI framework that is actually remotely usable is a facade over a bunch of JS calls? Those kind of things? 
And not a line of code. 
Thanks! This is exactly the way I'm going forward now. 
Bro I have provided the links for each and every principle where I explain each principle with real time examples. It is not possible to provide the examples of each principle in a single post. For You reference find the below links. **Single Responsibility Principle** [https://dotnettutorials.net/lesson/single-responsibility-principle/](https://dotnettutorials.net/lesson/single-responsibility-principle/) **Open Closed Principle** [https://dotnettutorials.net/lesson/open-closed-principle/](https://dotnettutorials.net/lesson/open-closed-principle/) **Liskov Substitution Principle** [https://dotnettutorials.net/lesson/liskov-substitution-principle/](https://dotnettutorials.net/lesson/liskov-substitution-principle/) **Interface Segregation Principle** [https://dotnettutorials.net/lesson/interface-segregation-principle/](https://dotnettutorials.net/lesson/interface-segregation-principle/) **Dependency Inversion Principle** [https://dotnettutorials.net/lesson/dependency-inversion-principle/](https://dotnettutorials.net/lesson/dependency-inversion-principle/) &amp;#x200B;
This is a good complete definition of SOLID. I'm not sure how it's specific to dotnet or C# though.
Hi bro, Its not specific to Dotnet. You can implement solid principle in each programming language.
(sorry for my english french man from Qc Canada) 1) Is it true that .Net developer are inferior Frontend programmer compared a expert Frontend guy who do just JS for like 10 years ? 2) the majority of the .Net community is it full of old windows programmer who switched from Visual Basic or Delphi or win32 C++ even Java to C# and they have no interest or capablity in learning JS correctly is that what you're saying in others reply up in the thread or here ?
Really? His discussion of ISP ignores the definition of ISP, which relates to its effect on the client, and replaces it with a discussion on how interfaces are created from the implementer's standpoint. His version of OCP doesn't even address the closed part. It just implies inheritance exists. (Or maybe strategy objects? Event handlers? Like many discussions of OCP he's just using it as a short-hand for any form of extensibility.) Even the introduction is garbage. Stressing out the software? Injuring it? That's not a technical argument. It's just hyperbole taken even further than the usual SOLID garbage. 
The glimmer VM does something with the Dom and wasm
Not quite true. You can only pass constants with TestCase, but look into TestCaseSource. You can do any kind of logic and return any object to your params you want. [https://stackoverflow.com/questions/11722888/nunit-testcasesource](https://stackoverflow.com/questions/11722888/nunit-testcasesource)
You are kind of an angry person.
When it comes to people pushing snake oil, yes. Billions of dollars have been wasted on this nonsense. I've been personally involved in more than one multi-million dollar project that experienced huge costs overruns because someone decided that we had to chase SOLID. Engineering and science, not dogma and superstition, should dictate design.
Not excited, but I think it has a future. Javascript is quite entrenched and isn't going to disappear any time soon.
I sure hope the Front-End guy is better at JS than I (a Back-End guy) am. We have a mix where I work. Full-Stack, Front-End, and Back-End, different platforms too. 
The app runs from an app pool but usually as it’s own process. It’s a little different from MVC. Stop that app pool before deploying or the files may be locked by the running process.
Nope, I'm still getting the old version from... somewhere?
Yes, I think WebAssembly will be huge. It doesn't need to replace Javascript as Javascript is just another language. I wouldn't be surprised if within 5 years it too compiles to WebAssembly.
Yeah. Unity has support for webgl/wasm now. I'm excited to play with it this weekend. I'm going to see if I can get a site up and running that demos a few projects I've been working on.
Something that lets me do client side stuff without needing JavaScript? As long as it works, I'm sold!
Some of us are old enough to remember that DOM started as part of JavaScript. DOM level 0 is literally defined as "Whatever Internet Explorer did in the late 90s"
Are you actually publishing to the IIS hosted path? Sounds silly but it’s easy to forget you changed the path being hosted by IIS
It shows you that JavaScript and front end design are hard. I didn't say that everyone wants to do this. I said that everyone who is pushing webasm hard at the moment is pushing it for this purpose. A purpose it is **not** designed to achieve. 
Yes, one of those people is me. Frontend development is hard, it always has been, leaving aside having to know a completely different language and very different frameworks, you need design skills and you need to optimise completely differently. JS is hard to master, but if you are writing backend node code in it, it's a lot less complicated. With TS it's not bad at all. Blazor isn't going to fix the DOM, and it's not going to make UI development easy, and the people who really know that stuff, who are making real strides are not writing in or for C#. 
Ctrl k, d is my favorite shortcut. 
Could be serving from temp files : c:\Windows\Microsoft.NET\Framework\v4.0.30319\Temporary ASP.NET Files Delete everything in there and restart your site. Check franework64 directory too. 
Isn't it Ctrl+k,Ctrl+d? And, yeah, it's like toilet paper: - cleans up the mess, - you don't even stop to think about it - but some people are like savages...
Can it apply stylecop settings?
Multi-caret support is one of the best features of IntelliJ VS lacked, I love the fact that they finally added this.
I've never had to reset the control.
Not sure if I'm answering your question or not but, if you look at the TestCaseData in the NUnit example, you can provide the test name via the SetName function. This way when you see the test fail in the test explorer, you know what the issue is. Haven't looked if this is possible in XUnit or MSTest. 
Not sure if I'm answering your question or not but, if you look at the TestCaseData in the NUnit example, you can provide the test name via the SetName function. This way when you see the test fail in the test explorer, you know what the issue is. Haven't looked if this is possible in XUnit or MSTest. Aside from that, it is real about aligning your test inputs with the expected output. .
Teamcity, nuget, xunit/nunit/mstest, fake or cake, octopus. That should get you going :)
whats the magic to glue it all together? In maven, it's just "mvn install" to resolve, build and test everything. 
Some extra info, ive a broken arm, so one handed. Profiling in VS is ok, but I use RedGate, it's the best. Msbuild has build tools installers, but, yes, msi. No need for VS. No idea about Maven, it's more popular on Java side. Fake or Cake do build automation. Fake is an f# version of cake
Oh, come on. At least make the null object a singleton. Don't let people make `new` instances of the null object.
Hi there, So, with a friend of mine, we've been working on an open source project and eventually a video course, all about .NET Core &amp; Microservices. You can find the source code here: https://github.com/devmentors and introduction post here: http://piotrgankiewicz.com/2018/07/05/net-core-microservices-dshop/ (however some parts of the stack has already changed). The database should be designed for the service needs, so pick whatever makes sense to you. Speaking of the remaining parts: Gateway: Quite easy to implement on your own (but Ocelot looks nice). RestEase for requests forwarding. Caching: Redis Auth: start with your own JWT server. If you really need something like OAuth2 try out Identity Server. Circuit Breaker: Polly Queue: RabbitMQ (but again, there's a lot of different solutions, you might as well use Kafka or anything else) Configuration / Secrets: HashiCorp Vault (you can also try Lockbox - my OS project: https://github.com/lockbox-stack/lockbox) Service Discovery: HashiCorp Consul (however, if you use some orchestration system for the services deployment it usually has its own SD feature). Logging: ELK Stack, Seq or something else (+ Serilog or NLog as library) Monitoring / Alerting: AppMetrics for ASP.NET Core application + Grafana + InfluxDB + Prometheus CI/CD: Travis CI, BitBucket Pipelines, Jenkins, VSTS or your own GitLab hosting Deployment: Rancher or plain Kubernetes 
Your stack depends also on your platform. Are you hosting the system yourself or is this going to be in a cloud provider? Outsource all you can to managed services as the engineering hours to build and maintain some components are going to be more expensive than your cloud spend. 
He's just explaining what a Null Object is. There's no need to complicate that explanation by introducing other concepts the reader may or may not be familiar with.
Fake is the starting point. We set that to retrieve nuget packages, build with msbuild, run tests and then build the deployment package with nuget again. nuget is like npm, a package and tool management system. TeamCity uses the fake build to build, and it integrates with github, so it can be triggered on a commit. Octopus will then deploy as required. It requires some effort to set up. There's also VSTS from MS. I don't know Maven, so i don't know where it gets the install info when you run mvn install. It can be simple, you can just call msbuild and the test runner for your test framework, but for a CI pipeline you need a bit more. 
I understand the pattern and the example of it but I feel like this is more of an example in how not to create the "Total" property. If you really need to calculate the total it should be it's own method that does the calculation and then applies a discount if applicable.
Or you could set the discount to 0 and use the same formulas for normal discount calculation without problems. 
I normally call these NOOPs since null is a bit of a misnomer and keyword hell can bit you. Def make sure these are only constructed and used internally by your own code, do not expose these to consumers.
mvn install (generally) means, compile, test, package your stuff as an assembly (jar file) and 'install' the jar into the local maven repo which enables other projects to resolve that jar as a dependency. It uses the groupId (oranization usually), artifactId (your jar file's name), and a version for versioning (there's more options but those are the basics). All this info is defined in the pom.xml file, which is what maven uses to figure out what to build, test, etc. Kind of similar to the "solution" file or the "project" file used in microsoft land. Remote publishing can also be defined there (urls, etc)
Check out servicestack. Ormlite is a great orm that also includes dapper. Their auth modules are easy to implement. Integration to redis. Works on core or .net with little to no changes. Has a wonderful configuration provider that supports multiple cascading configs out of the box. 
The reason I've never really used the null object pattern is for logic that needs to determine if an entity actually exists or not. Sure, you could put an IsNull property on it, but that defeats the whole purpose of using the pattern in the first place. Sometimes, if something really doesn't exist then you don't want to do any further processing, or hand it off to another service that may be expensive. Does anyone have a counter to this? Am I just not really seeing the benefits? A concrete example of where I can see it being bad is the following: a message lands on a server, a table row is updated (if applicable information could be found), and a push notification is sent. If you were using the null object pattern and palmed that off to the push notification service, you'd always send a message even when the information couldn't be found..
Another commenter mentioned they sometimes call the objects NOOP objects instead of null objects. They’re useful when used in behavioral patterns, like the strategy pattern, where you inject behavior objects and want to define some default behavior. Often that default behavior would be to do nothing (a no-op). By using a null object here you can do a null check in the constructor and leave the logic in your methods clean. Plenty of other scenarios exist too. Maybe you could receive null and/or invalid input at the IO later but you still need to take some actions (audits, logs, monitoring, etc). You could create a null object on input validation and pass that around to keep the rest of your logic cleaner/simpler. The concept gets a lot of use in Functional programming as well with Monads. See the Identity Monad and Maybe Monad concepts. Here’s a good stackoverflow thread on why the Identity Monad is useful https://stackoverflow.com/questions/28645505/why-is-identity-monad-useful Whether you use it and how you use it basically boils down to your and/or your teams coding style and conventions though.
I would guess that you have build errors, but some other time when you had build errors, you clicked Yes to the dialog that says "Would you like to continue and run the last successful build?". Then you also checked the box that says "Do not show the dialog again". If that's the case, just follow these instructions https://stackoverflow.com/a/2925168/4889131
Yikes... It was a nightmare. We constantly had premier support tickets open with MS. The instability of the process to upgrade cluster or upgrade service process. The error codes, which aren't open, so only MS has an internal tool to lookup the actual error and figure out what's going on. The lack of visibility into Stateful services. How many items/messages are in the ReliableDictionary/ReliableQueue? The dashboard should have visibility into that or an API into it. How can I troubleshoot them when something is strange, we had to write a ton of infrastructure code that in a real world, comes out of the box with any major platform. The end of support/life a release/version is like 6 months, and in a corporate world, is ridiculous to get the business to sign off on that, especially since we had nothing but problems, all of this requires a full regression. Oh, I didn't mention about the client SDK going incompatible just as quickly. If you have multiple teams deploying to the same cluster, it's a really tough communication / dependancy issue, since everyone needs to client SDK upgrade at the same time. Oh by the way, log much? Ever try setting up the secure cluster using certificate security for all the nodes? It was terrible. Logging everything by default means it's difficult to debug actual issues, perf counters, we had to just do memory dumps and use winDBG to actually figure out what's going on. All of this had us pretty much hand cuffed. &amp;#x200B; Granted, all of this was their OnPrem solution, which is probably not what you see with the PaaS ServiceFab hosted version in Azure. &amp;#x200B; But props to the team, they were very involved and tried to help. They just didn't think of a bunch of non-azure situations. 
Make sure you have saved the form changes before starting or they may not end up in the build. And as the other guy said do a Clean or Rebuild if what you are seeing when running doesn't make sense. Make sure you didn't accidentally remove the call to .InitializeComponent in the constructor, though I think this might break the designer as well if you did it.
Multi-cursor is a very useful feature, glad to hear it is now natively implemented. Now VS Code needs to have Ctrl+Alt+Click. It only supports Ctrl+Alt+Up/Down AFAIK which means multicursors on every N lines can't be done easily.
I'll give it a fair shake and look at it. I've admired the stack for awhile, but have never doven in. Probably because before it was a much larger team, now it's probably affordable.
I'm in a heavily regulated environment, and while we are going to the cloud, it's going to take a bit to get it right and rewrite or lift and shift the legacy. The important part for me is just getting the policies and security in place first, so that we are in a good place to have this as an extension of it Dev data center. Then we'll mature into using more paas and azure functions and the like.
Check the dependencies section on the NuGet gallery: https://www.nuget.org/packages/ClosedXML.Report/
Yes. .net standard is basically a list of libraries that a compliant implementation must support.
Yes.
There is an official Microsoft visual studio extension, named ". Net Portability Analyser" It scans the dll and source code in a project. Many projects only use api that are already supported. See : https://docs.microsoft.com/en-us/dotnet/standard/analyzers/portability-analyzer 
I know from experience that NPOI works in core.
Thank you! Just had to rebuild.
Usually that means it doesn't target netstandard. You can usually find the [repo](https://github.com/tonyqus/npoi) by chasing down the project link. If the owner provided a README.md, it'll be in there. Else you can read the code itself and look for precompiler directives for the various versions of .NET. If it doesn't have any, and there's no mention of core or standard (as is the case with NPOI), you can still use it in a core project. Just target "net461" or whatever version you prefer in your csproj. One caveat, of course: Windows only.
There's [icanhasdot.net](https://icanhasdot.net/result?github=ClosedXML~2FClosedXML.Report). It checks if the repository is portable. Not sure if that's something you could use.
Dude, [link to your project ;)](https://github.com/bartoszgolek/NFlags/tree/commands)
Just looking at the readme I find CommanLineParsers approach to configuration via attributes more pleasant to use. And also I automatically get strongly-typed object after parsing. I'm probably going to try NFlags for one of our tools just to compare it with CommanLineParser.
I don’t say that often, but this is exactly what we need for dotnet core.
Why do you need a tutorial for that? Open Visual Studio -&gt; Start new project -&gt; Class Library... and write your code...
Well, it certainly seems easier than the other popular one: https://github.com/commandlineparser/commandline with it's confusing documentation and about three ways of doing the same thing. A nice feature it has though is it supports F# a little easier. Maybe you need to promote yours more, I've starred it.
NPOI targets .NET 4.0 (even though Nuget doesn't say so) and the project maintainers are a bit inactive (with the last update being in 2017). Someone already ported it to .NET Core (both Unix and Windows) - see [this](https://github.com/dotnetcore/NPOI) project. 
I doubt its what OP meant, but if they were trying to get guidance on how to create class libraries for distribution (e.g. for a nuget library) then that is a legit and sometimes fairly complicated question.
In that case, right-click Project, then click Pack. :D
If the task is that simple have you looked at running it through Windows task scheduler? It has tons of functionality and conditions when to run your application.
You should submit it to https://dotnet.libhunt.com. It's a really great way to find different libraries for certain things. 
Right, but figuring out multi targeting, inclusion of native libraries to wrap, and how to declare transitive dependencies when multi targeting frameworks can be a pain in the ass and I haven't found many quality tutorials that help with all of that.
Topshelf - https://github.com/Topshelf/Topshelf Easy to setup, loads of features and very well supported.
This. You can also add Quartz.NET for executing your service at configurable intervals.
Parrot the last. Used it in recent deployments and it's made life SO much easier.
I used DasMulli with .net core 2.0, and when 2.1 came out I switched to the windows compatibility pack. Very easy and it worked fine. It is an asp.net core app that I work on, but if you've ever used ServiceBase with full framework, it's just about identical and should work just fine with a console app.
I love Topsheld. Last I checked they didn’t support netcore, have they been able to target netcore now?
If it's a DLL produced by .net core, you can execute it with dotnet run, and you can feed it command line params, task scheduler or otherwise.
It may be easier to decouple your code into a DLL and just reference it in your service project
In that case this is the best article that I know of: https://weblog.west-wind.com/posts/2017/Jun/22/MultiTargeting-and-Porting-a-NET-Library-to-NET-Core-20 It explains how you can configure your library to multi-target both .net core and .net 4.5 but it explains and covers everything you need to know to setup your class library as a nuget package.
`dev` does, but so far no news about when it will be stable afaik.
Have a look into the [Immediate Window](https://docs.microsoft.com/en-us/visualstudio/ide/reference/immediate-window?view=vs-2015). You can basically execute code at the current breakpoint, if that's what you're after
Oh cool, thanks!
I had to make one for work recently, I ended up following this guide - https://www.stevejgordon.co.uk/running-net-core-generic-host-applications-as-a-windows-service - along with using Hangfire.Core in the host class just to utilise it's CRON based timer functions - http://docs.hangfire.io/en/latest/background-processing/processing-jobs-in-windows-service.html.
Curious on this. Could you give an example on the scenario you'd want to do this? Thanks
Note : I'd recommend you use the VS2017 plugin, it's much easier to set the scan options for target framework (such as .Net Core 2.1 + "Platform Extensions", etc.) 
Have you looked at Azure Logic Apps yet? You can do exactly what you've described here with Logic Apps without writing and maintaining any infrastructure - it's all done for you and very easy to setup. It'll be cheaper, too.
Cheers!
are they free? 
i did a bit of reading and honestly it was a bit over my head, i get that its an orchestrating microservices architecture, but all the messaging and actions was a bit much. i found that you can just run an azure function with a timer, that should be enough yeah? https://docs.microsoft.com/en-us/azure/azure-functions/functions-create-scheduled-function tho i imagine the above is just an example of what logic apps can do, a function app doing that, but leveraging their framework i guess you would call for improved efficiency, but i dont really know mcuh about microservices architecture, just guessing 
A language is a tool :) skilled master can draw amazing pictures with a shitty pen il. A lamer can’t really draw anything with the most exquisite brush.
Free to setup and only pay for when it runs (it's very very cheap)
Hello. Yeah I mentioned Logic Apps but really you can do this using Azure Function (the tutorial you just posted). Functions are just services you create to run on a trigger (can be called explicitly or on a timer). Logic Apps are workflows (ie when this thing happens, do this, this and this). Logic apps are trigger based or timer based. There's loads of way you can get Logic Apps to trigger if you have a look. In your case I would stick with the tutorial you posted. Just create a timer based Function that runs some code to get the prices and write them to your database. It's really that simple. Have a play with it.
I always get confused about the benefits with weakly typed languages... Then I use them and forget that its not strongly typed and just write code.
That's horse shit. Languages provide different benefits and different disadvantages. Pretending otherwise is just asinine. Managing a large project over a long period of time with a weakly typed language is much more difficult than doing the same in a strongly typed language. It's not impossible, but it's dramatically harder. That's why stuff like Typescript exists. Pretending it's just a matter of skill is just silly. 
Skilled master can draw great pictures with a shitty pen, but he can draw much better pictures with a better pen. And he will always choose better pen if there is a choice
In my opinion, for large application in teams, it would be better to use a strongly typed languages just because of the type checking at compile time. I would probably use weakly types language for prototyping or for fast development like demos.
As I only wanted to create a Windows service I chose to have a all my code in a .Net Standard library, and then create a separate .Net framework console app and use Topshelf. The .Net Standard library is also then used in a ASP.Net Core web app.
I’m not going to lie... that makes absolutely no sense. 
Not .net related, but the red [Scala book](https://www.manning.com/books/functional-programming-in-scala) is really interesting. I’m not a big fan of using Scala for getting actual work done, but the big picture functional concepts have helped change the way I think about software design in general.
I'm loving their [dependency injection](https://www.manning.com/books/dependency-injection-in-dot-net-second-edition) book. It uses .NET as the example language but the concepts are applicable to anything. They start with examples of inverting dependencies by creating abstractions and then go into raw dependency injection. After that, they deal with dependency injection containers, but I haven't gotten that far yet.
We are using this solution as well. Everything common in .net standard libraries referenced in either framework or core agents depending on the the target environment(s). Works fairly well in a CD pipeline too. The only downside is duplicate config files when not using environment variables
c# in depth 4th ed meap natch. 
Don't seemto be 1/2 price for me :(
Thank you kind person :)
Yep for sure. https://www.manning.com/books/c-sharp-in-depth-fourth-edition You get a copy of v3 to read right away (and there is a lot of content already in 4)
This book is a must have for every developer, one of the few books that will affect how you write and think about code. You'll come out of it with much more than just dependency injection. Another good one is ["The Art of Unit Testing"](https://www.manning.com/books/the-art-of-unit-testing-second-edition), get it if you are interested in or not familiar with the subject.
That's exactly how I feel. I went into it expecting to get more familiar with ASP.NET Core's built in dependency injection, but I was blown away by how much wider in breadth the knowledge was. With the dependency injection part, the concepts clicked so well for me that I was able to go back to InversifyJS after it looking like Greek to me before and finally get how to use it, and I was able to put together an Express app in TypeScript that had perfect working DI with constructor injection. And I know now where to instantiate the object graph in apps I work on that don't use it. I can refactor the instantiation of the objects up to the composition root to solve a lot of problems the apps have. I picked The Art of Unit Testing too but I'm not very familiar with Windows .NET development so a lot of the libraries they use and the advanced parts of Visual Studio go over my head. I'm much more familiar with .NET development on Linux using VS Code. Still some great techniques in that book too, and that book helped convince me to always aim for 100% test coverage and use TDD. Slightly off topic, but having done TDD in .NET Core and Node, I have to say it's a much more pleasurable experience in Node. Much easier to stub and mock things without using 3rd party libraries. With JavaScript, you just make your objects with what properties they need for the tests, and with TypeScript, you just case as `any` after you've added the needed properties.
Why is that?
Thank You for Your feedback. I'm looking forward for Your opinion if You use it.
Did'nt know this page. Thanks for the tip. just published NFlags there: [https://dotnet.libhunt.com/nflags-alternatives](https://dotnet.libhunt.com/nflags-alternatives)
Thank You, I'm curious about "better support for F#". I've never used it and will try to find out why CommandLine approach is more "F# more friendly". I would appreciate if You can explain this a littlebit more. I've also published NFlags on [https://dotnet.libhunt.com/nflags-alternatives](https://dotnet.libhunt.com/nflags-alternatives).
Their EF Core book is top notch: [https://www.manning.com/books/entity-framework-core-in-action](https://www.manning.com/books/entity-framework-core-in-action). &amp;#x200B;
Nice overview of how to do it. Although I didnt get a real good sense of why hosting as a service was advantageous
Now, to poor architectural decisions and shit coding add a weakly-typed language to the mix...
Great book! If you do .net dev, you should definitely read this. He's a good author so it's not totally dry, even though you would imagine it should be.
Depends what containers you use. Windows containers run on the system. It also uses hyperv rather than virtualbox.
Your best bet is to start with the [Math.NET](https://Math.NET) libraries - look at packages that either depend on or are depended upon by them which is where most of the useful math/science packages in .NET are found. See [https://symbolics.mathdotnet.com/](https://symbolics.mathdotnet.com/) as starting point for symbolic algebras.
Thanks! This applies if you use MVVM too? 
Your post has been removed. Self promotion posts are not allowed.
Usually weakly typed languages are easier to test so if you're serious about testing anyway it doesn't matter as much. One thing that makes strongly typed languages easier is IDE support. Much faster and easier to autocomplete. I have bad memory and that's just my own memory, so I prefer the strongest typing available. There's also a difference between shitty typed languages and beautifully typed languages. Python and F# are great examples of languages that have a pretty good type system without discussing weak or strong.
Your post has been removed. Self promotion posts are not allowed.
I am restricted to my phone this evening or I would give you more than stack overflow posts, however I think this should get you on the right track: https://stackoverflow.com/questions/8074072/change-content-of-contentcontrol-wpf-using-mvvm
I wouldn't put too much thought into the "F# friendly" line. All it means is the author of the library added a Maybe class inspired by F#'s 'Optional' and allows swapping that out with the F# class at build time (which is turned off in NuGet, because otherwise it pulls in an unneeded F# core dependency)
Can you explain how a service is easier to deploy and debug as a scheduled task? Also, how can all your microservices be scheduled tasks?
Type systems are always going to be more limiting and difficult to test than structurally typed languages, just how it goes. The design time inference and compile time optimizations make it worth it though. I would say don't cast as any in typescript if you can avoid it. That's turning off type checking and at that point you might as well be using vanilla JS. It's a rigor thing.
When I say cast as any I mean when writing tests. That way you can opt in to the dynamic typing aspects of TypeScript and get the best of both worlds: compiler help and tooling for the application source code and quick easy dynamic typing for the test source code. And I was lamenting that in non-structurally typed strongly typed languages, like C#, you don't have that option.
If you want something like MDI, you can look at AvalonDock. I've been using for for a few years now and it gets the job done
Is it from some template or something?
That used to be true, but isn't true anymore if using Windows based containers. Changed around the release of server 2016 I think.
We have implemented a "browser tab"'ish concept, so instead of the MDI structure, we simply have tabs instead, works quite well. You can just load a usercontrol xaml in a tab.
RemindMe! 1 week
I will be messaging you on [**2018-09-11 05:47:40 UTC**](http://www.wolframalpha.com/input/?i=2018-09-11 05:47:40 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/dotnet/comments/9cljp2/all_manning_books_are_50_off_today_any/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/dotnet/comments/9cljp2/all_manning_books_are_50_off_today_any/]%0A%0ARemindMe! 1 week) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
Thanks! My solution was: In the page model: public List&lt;string&gt; GetUsers { get; set; } public async void OnGetAsync() { var allUsers = await _context.Users.Select(u =&gt; u.UserName).ToListAsync(); GetUsers = allUsers; } And in the page i used a foreach loop
Bought both the Depedency Injection and C# In Depth MEAPs which gets you the older version too. Nice deal. Thanks.
I don’t understand how you’d have a microservice run as a scheduled task at all, at least not as anything more than “run at startup”, which just seems like it could be handled in a more straightforward manner anyway. 
Thank you for bringing up IDE support. One thing that moved me away from Python and toward C# was how ridiculously easy Visual Studio and intellisense make it to browse and use the API. 
Yes
When you think about that, certificates allow the client who has the certificate to reach the server. So It should be doable but I don't believe not only just with certificates, because that way anyone who has the certificate will be known by the server.
Hmm, I'm not sure - I have a login screen and a register user sceren that were created automatically as part of my ASP.NET Core Razor Pages project template... I guess that would be Forms authentication? How do I add the module to IIS?
Yeah, I used the ASP.NET Core Razor Pages template in Visual Studio 2017 and added a few pages...
What would you suggest? Certificate directly to the web api and after that create a token and use that to authenticate the same user in the angular front end?
You could use 2 way SSL. But I would t make that your only form of authentication.
Something token based would probably be best. .NET Core has some pretty good authorization stuff. We've Role and Claims based authentication in our API which lets you put attributes on your controller methods for a certain claim or role (stored inside the token) and it restricts access that way.
Would also like to know. Orleans snuck up on me. I thought MS had a stake or interest in Akka.Net. Akka.net works is all i can say right now. 
Doesn't help you, but might help others in my position [vs](https://github.com/akka/akka-meta/blob/master/ComparisonWithOrleans.md)
VSTS has been crashed across the board today.
I usually use Akka.net, but to be fair I’ve never used or looked at Orleans. This is mostly because I’ve used Akka with Java, and the two are obviously very similar. The main concern with actor model libraries/frameworks is that they’re often an all-or-nothing affair. In order for the pattern to work well, everything in your app/microservice needs to be wrapped in an actor, including any other third-party libraries you use. Depending on how large your application is, this may be more work than it’s worth. I prefer only using the actor model for individual/small microservices. Otherwise I would use an entirely separate language (like Elixir) that has first-class actor support.
I've played with Akka.NET a bit, trying to adapt my experiences with Elixir to C#. What I can say is Akka.NET is *okay*, but you'll run into lots of closure/context issues if you're coming from an actor-native language. Haven't used Orleans, but it's next on my playtime list. :-)
I have some experience with Orleans as well as Akka. Orleans feels more natural and less boilerplate code. But in general actor frameworks are not a silver bullet and don't fit well for simple apps or apps which have CRUDish nature. The only place where they fit well are event driven apps (like if you use any message queue system or it will be a good fit to use it). In such scenarios they allow you to simplify the architecture by some degree by replacing the mq.
Why not? If you issue personal client certificates you should be OK, I thought.
&gt;The only place where they fit well are event driven apps That's what I will be building &gt;Orleans feels more natural and less boilerplate code have you ran into any limitations by the extra abstraction used to remove the boilerplate?
&gt;is that they’re often an all-or-nothing affair That's what I saw being problematic. It pretty much requires anyone else who'd work on the project to become equally familiar with the library. &gt;this may be more work than it’s worth The immediate need is more or less a collection of event triggered ETL processes. E.g. File watcher triggered, so go run "ETL A" or "ETL B" just finished, so go start both "ETL C" and "ETL D". Each process represents a discrete unit of work, so they fit nicely into individual "actors". The reason I was looking into the pattern is the system them have in place today has issues with both fault handling and performance. If an individual process fails it kills the entire app, additionally, scaling the bottleneck processes, without impacting the rest of the application is impossible in the current infrastructure. &gt;Otherwise I would use an entirely separate language (like Elixir) that has first-class actor support. I don't think I'd be able to sell that to the team unfortunately.
build a little first, theres some gr8 guides out there, its gonna help in interviews to know some details even if you aren't super comfortable with the stack yet
thanks for the link!
[https://twitter.com/VSTS/status/1037016317134557184](https://twitter.com/VSTS/status/1037016317134557184)
Take a look at ProtoActor (http://proto.actor) as well. Written by the same guy who wrote Akka.net, but runs on .net, go and Java.
I would definitely try it as a first step. I think you do a `dotnet restore`... I think the tools are included in one of the packages.
MDI was deprecated decades ago. Tabs is the common model to use now, or using individual desktop windows.
Probably cookies which map to server-side storage. First step is to make sure your browser is receiving and sending back the cookie (Chrome can show you in the Network tab of its development tools). If the cookie is working but you still get logged out, it's something misconfigured on the server end.
.NET Standard's purpose is to allow projects to support both .NET Framework and .NET Core. So if you see it you're good (though you might need to check which version of .NET Core/Framework adds support for the specific .NET Standard version, in your case you already did).
It should be no different than creating a class library in .NET Framework, except that .NET Core Class Libraries are only usable by .NET Core. If you need a more basic explanation, a class library allows you to create a project containing code that can't be run by itself. Another project (or projects) can reference this first project and call functions in it. Windows has DLLs, Linux has SOs, .NET has DLLs that aren't like non-.NET DLLs but it reused the name because Microsoft. For an example, I regularly create code that is not specific to a project and I think may be useful in other projects. I could copy and paste it, but instead I have a class library to hold all that code. When I start a new project, I can add that class library to the solution and immediately start using my existing functions I wrote. Here is the basic steps to making a class library: 1. Create a new project you want to use the class library in. 2. Add a new project to the solution and make a class library. You can choose from .NET Framework, Core, or Standard. The choice will affect which project types (Framework/Core/Standard) can use this library. Standard allows both Framework and Core (as long as they are recent enough versions) projects to use the library. 3. Add as much code as you want. `public` classes and functions will be available to other projects. The main difference from including code directly in the other projects is `internal` classes and methods will not be available. 4. In your non-class library project, right click references and click Add Reference. In the Project list, click the checkbox for your class library. 5. Now in your non-class library project you will see intellisense will show you suggestions for classes and functions from the class library project, which you can now call. The DLL from the class library will appear in the build folder along with your normal build assembly. It may be best to eventually put the class library in its own solution, and use Add Existing Project to pull it in to other projects as needed.
I suppose I have no way to prove it, but I have coded a lot of JS and I can code it properly. The main problem is that lots of problems languages like C# will treat like compiler errors (or even show them to you as you're typing) JS will only alert you to when the specific piece of code is being run. And lots of other bits of lax design mean things that would produce an error in C# or other languages would be quietly ignored in JS, and you have to recognize there's something wrong (maybe your page fills with NaNs) and hunt down the bug yourself. The biggest thing is strong typing. It's far too easy to end up with something like "101" when trying to add 10 and 1 in JS because along the way one of them got cast to a string somehow. In C# you'd get a compiler error trying to store a string in an int variable.
Would be interested in some metrics especially the difference between logging levels (i.e. the cost of skipping a log). It would round out the article. 
Java? I only see .NET and Go on the page. ?
Will do! Thanks for the link. Fyi, reddit markup is to put the words in square brackets, followed by the link in parens \[like this](http://google.com)
Added additional detail to my original comment
Added additional detail to my original comment
With just `dotnet` without the `run`. 
You're right, thank you for the correction ... I will update my comment
Yes, but the difference between Typescript and C# is that Typescript is functionally identical to JS and C# is not. 
I don't see anything about cookies on the Network tab; is it possible they're not being set? Or am I looking for the wrong thing? Where on the Network tab would they appear?
I had to run `dotnet restore` as an administrator, and it gave me a bunch of errors... dotnet : System.AggregateException: One or more errors occurred. (One or more errors occurred. (The process cannot access the file 'C:\Program Files\dotnet\sdk\NuGetFallbackFolder\system.interactive.async\3.1.1\lib\netstandard1.3\System.Interactive.Async.dll' because it is being used by another process.)) (The process cannot access the file 'C:\Program Files\dotnet\sdk\NuGetFallbackFolder\system.interactive.async\3.1.1\lib\netstandard1.3\System.Interactive.Async.dll' because it is being used by another process.) ---&gt; System.IO.IOException: The process cannot access the file 'C:\Program Files\dotnet\sdk\NuGetFallbackFolder\system.interactive.async\3.1.1\lib\netstandard1.3\System.Interactive.Async.dll' because it is being used by another process. At line:1 char:1 + dotnet restore + ~~~~~~~~~~~~~~ + CategoryInfo : NotSpecified: (System.Aggregat...nother process.:String) [], RemoteException + FullyQualifiedErrorId : NativeCommandError at System.IO.FileStream.ValidateFileHandle(SafeFileHandle fileHandle) at System.IO.FileStream.CreateFileOpenHandle(FileMode mode, FileShare share, FileOptions options) at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options) at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize) at System.IO.File.Create(String path) at Microsoft.DotNet.Archive.IndexedArchive.CopyOperation.Execute() at Microsoft.DotNet.Archive.IndexedArchive.ExtractOperation.DoOperation() at Microsoft.DotNet.Archive.IndexedArchive.&lt;&gt;c__DisplayClass19_1.&lt;Extract&gt;b__0(ExtractOperation extractOperation) at System.Linq.Parallel.ForAllOperator`1.ForAllEnumerator`1.MoveNext(TInput&amp; currentElement, Int32&amp; currentKey) at System.Linq.Parallel.ForAllSpoolingTask`2.SpoolingWork() at System.Linq.Parallel.SpoolingTaskBase.Work() at System.Linq.Parallel.QueryTask.BaseWork(Object unused) at System.Linq.Parallel.QueryTask.&lt;&gt;c.&lt;.cctor&gt;b__10_0(Object o) at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state) --- End of stack trace from previous location where exception was thrown --- at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task&amp; currentTaskSlot) --- End of inner exception stack trace --- at System.Linq.Parallel.QueryTaskGroupState.QueryEnd(Boolean userInitiatedDispose) at System.Linq.Parallel.SpoolingTask.SpoolForAll[TInputOutput,TIgnoreKey](QueryTaskGroupState groupState, PartitionedStream`2 partitions, TaskScheduler taskScheduler) at System.Linq.Parallel.MergeExecutor`1.Execute() at System.Linq.Parallel.MergeExecutor`1.Execute[TKey](PartitionedStream`2 partitions, Boolean ignoreOutput, ParallelMergeOptions options, TaskScheduler taskScheduler, Boolean isOrdered, CancellationState cancellationState, Int32 queryId) at System.Linq.Parallel.PartitionedStreamMerger`1.Receive[TKey](PartitionedStr eam`2 partitionedStream) at System.Linq.Parallel.ForAllOperator`1.WrapPartitionedStream[TKey](PartitionedStream`2 inputStream, IPartitionedStreamRecipient`1 recipient, Boolean preferStriping, QuerySettings settings) at System.Linq.Parallel.UnaryQueryOperator`2.UnaryQueryOperatorResults.ChildResultsRecipient.Receive[TKey](PartitionedStream`2 inputStream) at System.Linq.Parallel.ListQueryResults`1.GivePartitionedStream(IPartitionedStreamRecipient`1 recipient) at System.Linq.Parallel.UnaryQueryOperator`2.UnaryQueryOperatorResults.GivePartitionedStream(IPartitionedStreamRecipient`1 recipient) at System.Linq.Parallel.QueryOperator`1.GetOpenedEnumerator(Nullable`1 mergeOptions, Boolean suppressOrder, Boolean forEffect, QuerySettings querySettings) at System.Linq.Parallel.ForAllOperator`1.RunSynchronously() at System.Linq.ParallelEnumerable.ForAll[TSource](ParallelQuery`1 source, Action`1 action) at Microsoft.DotNet.Archive.IndexedArchive.Extract(String compressedArchivePath, String outputDirectory, IProgress`1 progress) at Microsoft.DotNet.Configurer.NuGetPackagesArchiver.ExtractArchive(String archiveDestination) at Microsoft.DotNet.Configurer.NuGetCachePrimer.PrimeCache() at Microsoft.DotNet.Configurer.DotnetFirstTimeUseConfigurer.Configure() at Microsoft.DotNet.Cli.Program.ConfigureDotNetForFirstTimeUse(INuGetCacheSentinel nugetCacheSentinel, IFirstTimeUseNoticeSentinel firstTimeUseNoticeSentinel, IAspNetCertificateSentinel aspNetCertificateSentinel, IFileSentinel toolPathSentinel, Boolean hasSuperUserAccess, DotnetFirstRunConfiguration dotnetFirstRunConfiguration, IEnvironmentProvider environmentProvider) at Microsoft.DotNet.Cli.Program.ProcessArgs(String[] args, ITelemetry telemetryClient) at Microsoft.DotNet.Cli.Program.Main(String[] args) ---&gt; (Inner Exception #0) System.IO.IOException: The process cannot access the file 'C:\Program Files\dotnet\sdk\NuGetFallbackFolder\system.interactive.async\3.1.1\lib\netstandard1.3\System.Interactive.Async.dll' because it is being used by another process. at System.IO.FileStream.ValidateFileHandle(SafeFileHandle fileHandle) at System.IO.FileStream.CreateFileOpenHandle(FileMode mode, FileShare share, FileOptions options) at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options) at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize) at System.IO.File.Create(String path) at Microsoft.DotNet.Archive.IndexedArchive.CopyOperation.Execute() at Microsoft.DotNet.Archive.IndexedArchive.ExtractOperation.DoOperation() at Microsoft.DotNet.Archive.IndexedArchive.&lt;&gt;c__DisplayClass19_1.&lt;Extract&gt;b__0(ExtractOperation extractOperation) at System.Linq.Parallel.ForAllOperator`1.ForAllEnumerator`1.MoveNext(TInput&amp; currentElement, Int32&amp; currentKey) at System.Linq.Parallel.ForAllSpoolingTask`2.SpoolingWork() at System.Linq.Parallel.SpoolingTaskBase.Work() at System.Linq.Parallel.QueryTask.BaseWork(Object unused) at System.Linq.Parallel.QueryTask.&lt;&gt;c.&lt;.cctor&gt;b__10_0(Object o) at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state) --- End of stack trace from previous location where exception was thrown --- at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task&amp; currentTaskSlot)&lt;--- This didn't help with the `Add-Migration`...
The author prefers https://serilog.net/ but I am not really convinced by their arguments.
When the Dev Tools are open individual requests and responses to the server will start to appear, select one and you can view headers to see cookies being sent and received.
Found an [answer](https://stackoverflow.com/a/2714264/1159763) on StackOverflow - cookies don't work on localhost, so I had to make a fake domain in my hosts file!
 log.Debug("Shutting down"); This one line pretty much sums up all of the reasons why I don't like generic logging frameworks. The hard-coded logging levels are invariably not the logging levels that I actually need for my company's ecosystem. For example, at one company the logging levels we used the more were: * ErrorWillRetry - automatic retry, probably a bad network connection * ErrorManualIntervention - automatic retry failed, someone needs to review this and fix the transaction manually before we're fined * ErrorUserMayRetry - a report timed out. User can hit refresh. * ServiceFailed - nothing's working and the app has crashed. These weren't just generic labels like Info, Debug, Error, Critical. These logging levels told operations what their response needed to be.
You can use structured logging with nlog also (I do on multiple projects): https://github.com/NLog/NLog/wiki/How-to-use-structured-logging
Token auth and CORS is what you want. SSL has nothing to do with client auth.
That’s incorrect. Cookies absolutely work on localhost.
Sounds like the type of system that should be built on top of a generic logging framework (event tags or something). 
By passing in a raw integer? One that is basically ignored by the framework and will certainly be ignored by the developers? No thanks. As for severity, it has no "intended use". It's just a short enum list and a vague concept. It doesn't become meaningful until there is business logic (in code or manual procedures) backing it.
The problem with tags is that they are optional. For it to serve its purpose it has to replace the built-in levels. Which means that you remove anything that looks like `log.Debug` or `log.Error` and replace it with `log.Write( T level)`.
I like that. When I looked at structured logging in the past the overhead was too much. 
You need to read the documentation. The raw integer is mapped to a textual representation no different than DEBUG, INFO, etc. You select a number that falls within the predefined constants to represent your levels throughout the application. Log4net absolutely honors those levels you assign and they are treated no differently than the defaults. Intended use is debatable, but completely discrediting logging frameworks for not using them as designed seems like bad advice to others reading. 
They aren’t if you make them required. Heck, you can set up extension methods so that your log calls look like `log.ErrorWillRetry()` if you so desire. My point is more about mixing together two unrelated things, the log message severity and metadata about the log event. What if a message needs to have multiple tags, like “service failed will retry”? I’m not telling you to go replace all of your logging if it’s working for you. IME though, most people are better off extending an existing tool rather than wasting a lot of time writing an entire system from scratch because one little piece of behavior they like is missing (currently fighting this battle at work...).
&gt; What if a message needs to have multiple tags, like “service failed will retry”? It won't because "service failed" means the application crashed and someone needs to find out why ASAP. Meanwhile "will retry" means that it will automatically retry, no immediate intervention is needed but it should be investigated when time permits if it continues to happen.
&gt; IME though, most people are better off extending an existing tool rather than wasting a lot of time writing an entire system from scratch because one little piece of behavior they like is missing (currently fighting this battle at work...). It's a logging framework. Anyone with more than a year's experience should be able to build one from scratch faster than they can read the documentation. 
There would still be value to the framework. The appender model would all be valuable. It sounds like you want to prevent developers using error for all outputs as you have an internal policy you want them to follow. You could wrap log4net or nlog to meet your needs in minutes and get all the other stuff from the framework. Like structured logging, appenders, formatters etc. 
Again, that's my point. It takes roughly the same amount of effort to create a wrapper as it would to just create a new purpose specific logging framework from scratch.
That feature set is only needed because the framework is generic. If you are building a special purpose logging framework, you don't need to implement all that. The whole infrastructure around appends, formatters, etc. just disappear. 
"Furthermore, it cannot be both a "predefined constant" and a raw integer. Its either one or the other." Actually here, it is technically neither or maybe even both depending how you look at it. The log level in this case is represented by a class called Level that contains the "raw integer" a.k.a. constant called value (int32), along with its name and display name which are strings. You define a constant for your application needs. The constant is represented externally by the textual representation set when you define the level. And you only do that once per application, not every time you log. It goes into a map that maps string-&gt;constant From the documentation : &gt;Level(Int32, String, String) The "predefined constants (levels)" are (log4net): [here] (https://git-wip-us.apache.org/repos/asf?p=logging-log4net.git;a=blob;f=src/Core/Level.cs;h=713918dd0e62272b50ff692eed176a44a47d7e3c;hb=refs/heads/master#l515) There's even an Alert level at 100000. public readonly static Level Emergency = new Level(120000, "EMERGENCY"); public readonly static Level Fatal = new Level(110000, "FATAL"); public readonly static Level Alert = new Level(100000, "ALERT"); public readonly static Level Critical = new Level(90000, "CRITICAL"); public readonly static Level Severe = new Level(80000, "SEVERE"); ...etc Writing a wrapper to hide the ERROR log level from use seems like a better option than blanket scrapping of logging frameworks. Structured logging with tagging/data enrichment is the way to go. 
Just build something in ur github, certs r crap especially the ms ones. It's easy to cheat and buy the answers. There are alot of Indian Devs who come to syd. Full Microsoft certified with Years of experience with 10 page resumes. Yet they can't reverse a string... One of our filter questions
It's documented using WormDocs - you copy a known working config from one project to another ad infinitum, like a Worm spreading through a network, because it's easier than digging around for the docs again.
Again, none of these are the levels that we needed at that company. It would take more effort in training and code reviews to ensure the right levels, which aren't in that list, are used exclusively than it did to just create a new logging framework specific to their needs.
This is been a really great debate. I really enjoyed reading all of your comments.
This is so true.
90% of the config is useless stuff that you don't understand. But don't remove any of it because "hey, it works!" 
Not all servers send a bounce back on failure. 
I agree for the reasons mentioned (structured logging and encrichers) and the variety of sinks available, e.g. azure app insights or various db’s. however I think that to get the best out of serilog you need seq or another aggregator 
Less of comparison more of an opinion. 
I can only talk about personal experience. So far most .NET projects I was involved with, made use of ADO.NET directly or with help of Dapper.NET. In the last six years after returning to .NET as main platform, I have only touched EF during a 3 month project.
ʕっ•ᴥ•ʔっ I'm using log4net and it's great. 
I've only ever seen it once used for production. And even then the people who worked on it didn't like it, but it was too much work to remove it. I mainly see straight ADO.NET either talking to SPs or SQL in the code. I really like Dapper though.
I have a small project that uses EF. I did code-first to build the database and I was happy with it at first but to get past the built-in conventions I had to add configurations. Then I ran into trouble updating the object graph so I had to write a lot of code around that. At the end of the day, it’s more of a hindrance than a help. I like the idea but not the implementation. I’ll probably port the data layer over to ADO the next time I have a little slack time at work.
&gt; however I think that to get the best out of serilog you need seq or another aggregator Totally this - Seq is really good but you need quite a meaty setup I found. Ended up using the Elasticsearch Sink and then pumping log into an AWS Elasticsearch Service cluster (which comes installed with Kibana). Works pretty well for us so far!
They don't listen because they are missing 20 lines of XML config to setup the right sink. 
I don't know about two dimensional arrays, but `dotnet restore` could help you. Did that worked?
LOL. Very accurate.
The main application I work on at work uses EF 6 (using Model First still in 2018). We have plans to migrate to EF Core, but we aren't there yet. Some of the newer projects use EF Core, but many use raw Dapper. Depends on the development team.
Getting rid of the two-dimensional array and replacing it with a HashSet worked.
The best part is that if you do anything wrong you get *nothing*. It doesn't throw exceptions on errors, it just silently fails (unless you deal with a hellscape of config mangling to capture the trace log).
Have you tried googling it? It's literally the second link.
Very nice article explaining in depth how objects are finalized during GC. Despite the fact that pretty much the same pattern can be found on MSDN on how to implement IDisposable, this article succeeds in explaining in detail, providing a deep insight into specifics. Loved it
need this in your web.config. not sure about .net core, though. &lt;appSettings&gt; &lt;add key="log4net.Internal.Debug" value="true"/&gt; &lt;/appSettings&gt;
The container is running your application that is listening on a specific port, you than port forward the host port to the container's listening port.
Thanks @[operatorius](https://www.reddit.com/user/operatorius), I'm glad you find it useful. Regarding Dispose - well, you know, it's a pattern, so in most sources you can find similar implementation :) Mine or the one from MSDN or any other book are probably all good ones.
The code does retry. But we need to know that it's retrying so we can reduce the frequency of that bug. Silent retries were a real problem for us.
Kestral instead of IIS. Just as an FYI if you run your dotnet core application under IIS on a windows server you are really just having IIS fwd the request to Kestral.
Yes, you do need to know it's retrying. You should log that. You don't need to have a special log level for that though. You might also want to log that error to a database, or to logstash. You might want to log different amounts of data to each of those things. You might want to rotate your logs or log in parallel. You might want to be able to tune the level of logging your application does depending on your needs too. Tracing detail is going to fill up your server, but it's useful when things are broken. Generic logging frameworks do all of that for you out of the box, and you're throwing that away because you want custom log level values, which you can do with the generic framework anyway. Writing your own logging framework is a huge amount of work. 
Yeah I looked into the differences to better understand what's going on. Basically when using IIS, Kestral will only listen to requests from IIS on localhost on a port of IIS' choosing. A secret key IIS tells Kestral to look for in the HTTP headers is used to ensure Kestral doesn't accidentally handle requests from anyone but IIS. The key and port to use are passed in via environment variables when dotnet is launched. When IIS gets a request, it will authenticate the Windows user (if that option is enabled) and pass in all the information relevant to the request on HTTP headers. Kestral can then fix up the HttpContext so it has the same information it would as if the request was a direct one. tl;dr Kestral/IIS you can code the same for both, but if you want to know if you're running under IIS the easiest way is to check for those environment variables.
&gt; Writing your own logging framework is a huge amount of work. No, it only took an hour or two. 