Hey Angular is cooler than React :(
You can reload the page
wut?
That's how SPA works as far as I know. :-)
Try [Exceptionless](https://exceptionless.com/). They have a self-host option that you can use.
Not sure what you mean. If you're looking at something along the lines of: PAGE &lt;--&gt; SERVER &lt;--api--&gt; DATA with something like WCF connecting to the data store, then that's a pretty bad idea! You'll be adding latency, so unless you're doing some serious data processing that will last for several seconds or more (which would be handed off to a backgrund thread) there's no reason to move the data access out of the web app. it takes mere milliseconds to pull data, whereas you can be looking at entire seconds if you're transporting the data across the wire.
What? Unless I'm missing the point a decent SOA would have website &gt; web service &gt; database. That's what I've done for years. That's what you're 'meant' to do. Right? 
If you want to host .NET site, you need to find hosting provider that specialize in .net. I've been with http://asphostportal.com for many years. They are good and have great pricing. Another alternative you can find it on microsoft.com/web/hosting. Hope it helps
Nice. It would awesome to have some sample code.
The answer, like so many architectural ones, is "it depends". Without knowing something about the kind of data you're accessing, the quantity retrieved in each API call, the load you expect on your application, the ratio of data access to data processing, and many other variables, there is no right answer to your question.
It sounds like you're asking whether you should basically have two "web apps" instead of one, with: * One representing the website itself -- providing content, forms, etc. * The other (basically) just mediating database calls Is that basically what you have in mind? If your intent is to put them in two separate app pools in IIS with different recycling schedules, then yes, that would be a good way to accomplish what you want. But: 1. There are probably other ways to solve the problem that has you looking at app pool recycling. 2. There are other incentives for splitting your application into a "site" and and an API. 3. If you make the split, there will be additional challenges and overhead. You will probably have to write a lot more code, because you're not just scaling your project -- you're increasing its complexity.
Angular is losing popularity. It is like the webforms of the JavaScript frameworks. Both get the job done, don't get me wrong, but you can feel the momentum swinging away from angular I feel
This lazy loading also works fine with EF 'model first' just as it does with 'code first'.
I recommend you look into the following stack: SQL Server &gt; Entity Framework &gt; .NET WEB API &gt; .NET MVC 4 &gt; KnockoutJS+HTML5 The learning materials below can be done in an afternoon. All you need is Visual Studio 2012 and SQL Server (express versions will do) 1. [Run through this quick example first.](http://www.asp.net/web-api/overview/creating-web-apis/creating-a-web-api-that-supports-crud-operations) 2. [Then this slightly longer one] (http://www.asp.net/web-api/overview/creating-web-apis/using-web-api-with-entity-framework/part-1) 3. [Great online tool for learning more about KnockoutJS](http://learn.knockoutjs.com/) So grab a coffee and happy coding! 
This. And... [You gotta eat your own dog food!](http://programmers.stackexchange.com/questions/148556/should-a-website-use-its-own-public-api)
Good enough. Thanks.
I know you probably want something free. Unfortunately, I didn't find anything very useful. As a git user myself, I just purchased this: http://www.amazon.com/Professional-Team-Foundation-Server-Programmer/dp/1118836340
Is this an official forum sponsored by Microsoft for their open source .NET projects? 
What is react and why is it better than Angular? As someone just learning new stuff. How can I catch be brought up to speed if development is at the speed of light. Need to toss my bicycle for a worm hole. :-)
Did he mention Apple's logic? This doesn't make sense to me given MS already makes ios apps. 
Silly question. Is Xamarin.Forms a part of the open source or their paid platform? I'm confused at how mono is open source, but Xamarin are basically turning into a multi-platform competitor for VS13? As a person new to the scene, it's getting confusing. 
Thanks a bunch! This is exactly what I was looking for. 
No but on a side note: Fuck TFS.
Agreed. Using it on my current project, messed up the code base at least twice
Could you expand on this? Serious question - I've only ever used TFS lightly and it seemed to me not hugely different from something like Git or SVN, at least at the basic conceptual level. I know it gets a lot of hate but I'd like to know a bit more why that is because my shop is trying to enforce it everywhere.
&gt; This exactly. Plus it likes to randomly lock files and set them to read only. Well no, it doesn't. It locks them if you check them in, of course, because that's what most VCS's do and it's pretty helpful because now you know you're editing a file that hasn't been checked out. Randomly though? No, I've never experienced that. Ever. I'm guessing it's a PEBKAC error.
Do you mean TFS Source control or TFS? Because today TFS can actually be used with Git as a source control. TFS is not **only** a source control system, but it's a huge project management / continuous integration / test management tool. Before you didn't have the choice but use their (arguably bad) source control system which is an evolution of the infamous SourceSafe. But since ~~the latest version~~ TFS 2013, you actually have the choice of using Git as a source control. I'm currently working on [Visual Studio Online](http://www.visualstudio.com/en-us/products/what-is-visual-studio-online-vs.aspx) which is an "in the cloud" TFS and I must say I'm very happy with it. We are using it for some Scrum project management and we use Git as a source control. We even have the possibilty to do continuous build and deploy to Azure our app, which is really awesome. Git integration in Visual Studio is OK in VS2012, better in 2013, but I prefer to use the command line (Posh-Git is awesome) anyway. So, to those who say TFS is awful, I say... update and migrate your source control to Git, then you can use the really good part of TFS, which is the management of the project, continuous integration and test management.
What are you learning exactly, the source control aspect of TFS? If you are stuck on TFS at your job, but prefer git, check out https://github.com/git-tfs/git-tfs
&gt; I could just be doing something wrong, I never had these types of problems with git. I've never had those types of problems with any source control system. The biggest problem that I've had with TFS is that it's friggin' gigantic. Like, it does *everything*.
This is a configuration option iirc. You can tell the server to allow concurrent check outs and not lock stuff. 
Official forum of the .Net Foundation, an independent entity from MS, started by MS, and which MS funds.
Pls, I would appreciate it :)
Nice name.... Check below/above for a link to an article.
- Mono and MonoDevelop (aka Xamarin Studio w/o the Xamarin.[iOS,Android,Mac] addins) are free and open source for all platforms. - Xamarin Studio is free but not completely open source (it is effectively just MonoDevelop + proprietary addins for Xamarin's commercial products) for Mac and Windows (no Linux version). - Xamarin.Android, Xamarin.iOS, and Xamarin.Mac are proprietary products that bind the native frameworks to .NET and are proprietary. - Xamarin.Forms is an abstraction layer over Xamarin.Android, Xamarin.iOS, and Windows Phone that provides a unified GUI framework for mobile platforms.
I thought he meant learning materials for TFS. I didn't find any good free ones that went in depth, so recommended a professional book. 
You are right. I multitask bad. 
The project I'm on has issues maintaining the code base with it. In order to get updates fron the tfs server we have to overwrite the entire file. We also gave had issues maintaining the code base integrity. Something compiles on one end but not another etc. Although that tends to be a problem generally with version control
eh, I like it. 
I have no idea, I haven't touched vnet yet. I know when you go to add a "view" there should be a checkbox to define it as a "partial" or something.
Go create a visual studio online account. To play around, its free. Few things I can think of off the top of my head: TfsVcs us a connected source control system. It's not easily distributed like git. There is a disconnected mode, but I don't trust it. (TFS version control system) TFS has work items that work a lot like github issues. They are used to track requirements, test cases and defects. TfsVcs doesn't resolve differences in files on merge, it uses history. If two items conflict in history, it will trigger a merge conflict resolution. Somwtimes you have do checkout a file, add trivial whitespace and then check it back in. TfsVcs a team project is essentially the same as a git repo. There is an higher level grouping called a team project collection. This would be like a github account. TfsVcs branches are a little more heavy weight (may have changed in 2013), but multiple people can work on a single branch without overwriting. TFS supports git VCS as well, it works like any other git provider you have used and has work items . 
Four things have me sold on reactjs over angular 1) If it ever stops being cool, I'm not married to it. It's just the view engine more or less. With angular you are all in 100%. That's not a bad thing, but our work tends to fall out of typical workflows so it matters to me 2) Performance. It's fast, very fast 3) You can render server-side. I f'ing hate single page applications and other apps that display a loading bar when I first access them. They are confusing for some users (including myself), tough to troubleshoot and all kinds of javascript headaches just to show a table of data 4) Very nice .NET support. One of the facebook guys (who maintain and wrote reactjs) has a [first class .NET library](http://reactjs.net/) for working with it. I'd recommend walking through the tutorial from the reactjs.net site on an existing .net site. Unlike angular, you'll find you can start using reactjs very easily on an existing website without having to redo the whole damn thing and spam ng with a shotgun all over your views. I think it's a nice middle ground for what we need. Not for everyone, but at our scale, developer skillset and requirements it fits our need well
this isn't bad advice. I think short of investing in javascript simply doing a post, redirect, get on form submission is a very valid approach.
In my opinion, yes. Accepting patches, or providing feedback on patches is a great place to start. From the the successful OS projects I've seen on other platforms, the core devs at some point take a step back and turn more into maintainers. Providing feedback on patches, merging patches, helping to foment a direction from community feedback.
Hello, I had it running on my desktop and laptop for a long time now. You first install Windows on a partition/hdd and then install mint. The order is pretty important, as mint installs grub so you get the dual boot menu. If you install Windows as the last the mbr will override grub
I've been interested in MimeKit and MailKit for quite a white but I haven't actually gotten the chance to use them. I'd like to contribute, but just looking at the Github page right now, I don't know how I would. There are no or little issues associated with the project and I'm uncertain what other work needs to be done to the library. Maybe some kind of vision documentation or needed feature list would appropriate? Btw, thanks for all of your work on MimeKit and MailKit. I work on a project that requires a lot of MIME interaction and currently we're using a paid-for library that none of us like too well. I'd love to be able to replace it with your open source work.
Tfs works great. It has git built in if you don't want to use tfsvc but even tfsvc works really well these days, is just not as easy / fast to do branches like git but handles everything else great. Also Tfs is much more than just version control it's full end to end project management.
Interesting, thank you! I'll take a look at this tomorrow when I get a chance.
I guess so, I just want to make sure the server does all of the work instead of slowing down the user experience on the web application. Does that make better sense? 
I guess I really don't know what I'm trying to accomplish 100%, I just want to make sure whatever I do in the future is the best way for it to be accomplished. If I build an app that needs to perform something every day at a certain time, I'd rather use a separate application on some server to update my information instead of the web application having to do the work. Does that make better sense? 
I think the "problem" with MimeKit and MailKit is that the pool of potential users is relatively small, so you will probably always struggle with getting a lot of contributors. I think the key is going to be finding that user base but once you do, I think you will be fine. The Read Me on your projects is one of the best I've seen so far. I haven't had the need to use either one but I always remember your projects because of that. 
I don't believe this to be the case. It started out that way but I think it's definitely improving (and largely due to the efforts of people outside MS). I think a big problem with open source development in C# is that a lot of devs are used to relying on MS for everything. So there was never a community to build from. But I think that's starting to change. MS is doing a lot of new development out in the open (Azure, ASP.NET, NuGet, Rosyln, MS Open Tech, etc.) and some of the open source projects are have gained enough traction (F#, ServiceStack, SignalR, NancyFx, etc.) that they have have been able to sustain themselves. Hopefully that will continue and we get a thriving OSS ecosystem around C#/.NET.
You can look into [VirtualBox](https://www.virtualbox.org/), if you want to try using a VM instead of dual booting. 
The CI bit is the only bit that is half decent. The project bit is just as lousy as the source control bit. EDIT: Downvoted. I can only assume by someone that is ignorant of other source control systems that don't restrict file path lengths or need databases that can get full.
1. Create a partition on the HDD 2. Install Windows on that partition 3. Install Mint on the unpartitioned part. You can mess around with the partitions a bit (I usually assign a large separate partition as the /home) but it's not necessary. 4. That's it. If you boot, you'll be able to pick Linux, Linux recovery, Memtest and Windows.
Two other great tools are Fiddler and SoapUI, especially when Im doing integration stuff (which sadly is most work).
Really depends on your setup. I've had applications where it was super fast.
&gt; If I build an app that needs to perform something every day at a certain time, I'd rather use a separate application on some server to update my information instead of the web application having to do the work. Yes, that makes a little more sense. :) There are two approaches I'd recommend, assuming your program will be running on a Windows machine: * If your daily task is relatively simple, write a non-UI application that will perform the task when it's run and simply trigger it through Windows Task Scheduler. It's simple and straight-forward to get this set up with just a little Googling. * If your daily task is more complex, or requires you to maintain state between runs, you might be better served writing it as a Windows service. It's more complex to get one going, but still not that hard with a little perseverance and access to the Global Data Mind. :) In both of those cases, you're probably best served by just having your app access the data directly. Putting a separate communication layer between your app and the database is typically only useful when you've got multiple applications that all need access to the same pieces of data, and even then you'll need to choose between something like you describe on your post or a simpler solution like a shared library. As with ALL software design advice, your mileage may vary greatly depending on a number of other factors unknown to anyone but you. Good luck!
That's kind of the point. Most people assume dog food tastes like shit and is low quality. If you have to eat your own dog food, you have a vested interest in making it tasty and nutritious.
Indeed, I was thinking of the version control part of the system.
The load is going to be shared to some degree anyway. Unless you have specific problems that splitting it up would address (like app pool recycling problems, or providing that logic/data access to other applications), there is probably not a good reason to do it. I think that [/u/kintar](http://www.reddit.com/user/kintar1900)'s suggestions are very sound, assuming that you don't need a user interface for your daily task. If it does need to be a web app: what's the problem, specifically? What does your application look like now? It sounds like you are concerned with performance and a nice user experience. Here are some ways to address that, off-the-cuff: * If your application does full-page postbacks, stop it! You need some kind of AJAX support. Suggestions: jQuery if you just need to create some calls; otherwise, dive into one of the MVVM frameworks like Angular or Knockout. You'll get up and running faster with jQuery, but Angular/Knockout will help you more with other problems. (They are also extremely popular right now.) * If your application is relying a lot on HTML generated by a ListView or something, stop it! Those ASP.NET controls are nice and convenient when you start out, but they don't scale well, and can bloat your application's responses severely. Suggestions: switch to Razor views, and write all the HTML yourself, or with Razor's helpers... unless you dive into Angular/Knockout.
Right click &gt; undo?
As I said, it feels awkward for a SVN of GIT user. 
Ohhhh, glazed over that sorry. I've only used svn and TFS, svn for a short period of time so TFS doesn't feel to weird to me.
I would recommend running Linux inside of a VM, that's how I've been doing it for years. It's extremely convienient. I use [Conemu](https://code.google.com/p/conemu-maximus5/) as my terminal on Windows, specifically [Cmder](http://bliker.github.io/cmder/) which is a nicely preconfigured version of Conemu. I interact with the Linux VM exclusively using SSH, and I have a network drive set up on Windows that is mounted on the VM. I edit source code using Sublime Text on Windows and whenever I need to compile it or issue whatever other command, I invoke the terminal using a Ctrl+` keyboard shortcut. Sorry about talking about a bit different solution but I've found it preferable for some light development on Linux without fussing about with rebooting.
Thanks this is the kind of info I was looking for.
Having dual booted my laptop several times, I definitely advocate just using VMs instead. Much less overhead to deal with. I'm using VirtualBox now and it works great.
No, I like this. Could you should a demo of your setup somehow? I'm completely blown away by this suggestion but feel it might be the way to go. I might do this on my laptop, but dual boot on my PC for heavy lifting. 
Thanks
I just installed virtualbox and created an Ubuntu virtual machine. It runs terribly. Its always trying running at 27% of the cpu.
There isn't much to tfs if you've used other central source control repositories like svn. You have to maintain all code through solution files unless you are using more advanced tools. If you are maintaining multiple branches you need multiple copies the code on your file system, which makes branching a bit a pain imo. TFS also has the concept of stash which is called shelving. That's about it for the basics. 
lol
Yea, that's been what I've been thinking as well. Thanks for your comment!
I'm not too disheartened and I have gotten some good pull requests and such, which makes me happy... and the feedback I get from people using my libraries is fantastic, so that in itself is enough to keep me going.
You make an excellent observation / suggestion. Thanks! At this point both MimeKit and MailKit could be considered "done" (other than getting Bouncy Castle PCL'd so that MimeKit on Windows Phone has S/MIME support, but it seems that someone just submitted a pull request to the BouncyCastle project which adds PCL support, so I'll have to fork that branch and add the tiny fixes I need and just use that), but... API Additions that I'd love to have: - Microsoft's Exchange framework has a TextConverter API that can convert between plain text, HTML, and RTF. This would be fantastic to have - anyone writing any sort of mail client / renderer could probably really benefit from having this type of functionality. Things that could be improved: - The async methods right now are just Tasks that run the synchronous versions of the method, but perhaps a redesign of the POP3 and IMAP command engines would be better if they were designed to be async instead of sync. - For APIs like Pop3Client.GetMessages() or ImapFolder.Fetch() that return an array of items might be better if, instead of returning an array of items, called a callback to pass each item off to the caller as they arrive? This would be nice because then, if the command ultimately fails due to a dropped connection or whatever, then at least you don't have to start fetching the data from the beginning again. - Some way to report progress for the APIs that download large chunks of data (such as Pop3Client.GetMessage[s](), ImapFolder.GetMessage(), ImapFolder.Fetch(), etc). .NET 4.5 seems to have an IProgress&lt;T&gt; interface that might be worth using. Otherwise a custom interface could be made. - Flush out the rest of MimeKit.Tnef. The TNEF API is a clone of an API that is part of the Microsoft Exchange framework, but is missing the ability to write TNEF data. It's also has a few NotImplementedExceptions for things I couldn't figure out what they did (and none of the docs I could find online or the samples I could find even mentioned them). If someone happens to have access to this framework, maybe they could tinker with it and figure out what those 2 or 3 properties were used for. - More unit tests. Some people love writing unit tests and if I could find one of these types of developers and let him or her loose on MimeKit and MailKit, I would be overjoyed. What I've got so far is decent, but it's not as comprehensive as I'd like. - More samples (I'm not much of a GUI programmer, so my knack for WinForms, WPF, etc is horrible). Wow.. having written all that down, there's more work to be done than I originally thought when I went to respond to your comment! I'll add these thoughts to the README and file them as issues so that potentially interested developers like yourself who don't know what they might be able to do to help out have some place to start. Thanks again for such an important observation.
Thank you for your help! I think I understand what I want to do now :)!
Compared with the cost of Visual Studio, it's extremely cheap.
You need to have a model, and properties on that model to use DisplayNameFor. So, you must have coded that bit atleast? Post your view code. 
Nah, regex is a perfectly good tool for validation and data extraction. I see it a bit like LINQ. Yes, you can do it another more verbose way, but it won't always be as readable, especially when you get used to the syntax.
Well yea I have models, that's what I brought in from Entity Framework through an Azure SQL db.
No one is used to the syntax because regex is virtually its own language with such a specific purpose that you only come across it three times a year. 
Congratulations on the release JetBrains :-) The future is here and it's Windows 10 preview + VS 2014 CTP + Resharper 9.0 EAP ;-)
Change the route setup for this instance. Purists will propose some things to try and maintain the crud type adherence to the http verbs, but sometimes it's just easier to make it less pure rest and more rest-like. In fact you run into a lot of that in the real world. With the addition of attribute routing, it's even easy to make this an exception for the single endpoint and leave the rest of them intact. 
The Bitcoin tip for 10 bits has been collected by *issafram*. [ChangeTip info](https://www.changetip.com/tip-online/reddit) | [ChangeTip video](https://www.youtube.com/watch?v=_AnfKpypMNw) | /r/Bitcoin
1. Branches can only be merged into the branches they were originally branched from. 2. Merges are done at the changeset level. 3. Locks you out of files if you haven't checked them out. 4. Projects are checked out at the solution level. 
&gt;Well no, it doesn't. It locks them if you check them in, of course, because that's what most VCS's do and it's pretty helpful because now you know you're editing a file that hasn't been checked out. Which is exactly what's fucking wrong with it. Editing source code shouldn't operate on the same mechanics as editing some sort of business document. I have source code mapped to a repository, I'm a big boy, let me handle my own damn files and keeping them in sync. TFS is WAY too heavy handed.
When was the last time you used tfsvc? 
No probs!
That depends on what kind of projects you're working on. And there's a difference between basic regex that anyone with a brain can understand and remember, and the dark magic of look-ahead expressions and such.
This would pull an AWFUL lot of Apps from the App Store. Apple doesn't care so much about what tools you use as long as the Apps are good and selling. When they originally put a ban on Apps created outside of Xcode + Obj-C, all the Unity games we're banned and that didn't last long. 
Dependeny doesn't work for aspnet vNext. 
If I'm understanding you correctly, you're proposing creating routes specifically for the exceptions and then letting the verbs fall through when nothing else matches? 
Pretty much. Honestly we just abandon the REST routing completely and use it more like RPC. We found ourselves needing that more than REST which I think usually works better for strict data service type implementations.
Yea Team City exploded with broken builds. One look at the log and I could see the incremented version 4.0.0.1 Now I just upgraded everything to MVC5.2.2
I ran in to this one yesterday morning. Given that no other devs had the problem and our CI server didn't show any problems, it left me scratching my head for longer than I'd like to admit.
I vaguely recall running into a similar error when I was trying to stick an anonymous type in a ViewBag... what exactly are you doing with it?
I don't think I understand your problem correctly. If I was to design this rest api I would have a PasswordController with a Post, Put, Get, Delete action. The Post verb would support Generating a new password. The Put verb would support storing a new password. Get would support Retrieving a password and the Delete would support deleting a password. If I understand correctly your Post(Generate) will also return the password and the problem you are struggling with is that you don't think a Post should return something. I don't believe there is any technical reason or spiritual (ie Rest philosophy) that would prevent you from doing so.
I felt your pain. Pretty much ruined my Wednesday. 
This ruined my Thursday; good one you for being fast!
Does anyone have any ideas for working around a 3rd party assembly that references 3.0.0.0? We are using MvcContrib in an MVC4 application for a few of its controller attributes. We can update the MVC packages in our projects all day long but this fucker is still holding us back.
I think for this you have 2 options. http://msdn.microsoft.com/en-us/library/7wd6ex19(v=vs.110).aspx basically option 1) - turning off the publisher policy - I *think* this will work. option 2) see the line titled: Specifying assembly binding in configuration files - this looks like you can redirect an assembly to bind to another version of a dependent dll.
Do you think that would fix the compile-time problem? I though assembly redirection was for runtime.
Clean, rebuild. Works more often than I'd like.
Why is it both [Required] and Nullable? Try using int? instead of Nullable&lt;int&gt;, I've read before that in EF it works a bit differently. Also check that your DB schema is up to date with any code changes.
Started a new job just the day of that update. Was the only one that couldn't build the project. Day later a colleague had the same problem until I pushed out my update (moved old ASP.NET MVC 4 project to use NuGet).
Sadly this didn't work.
On mobile so I can't grab the code but you need two other things: A DbContext. This defines your database. EF code first migrations. This is what you use to make the db. If you google those you ought to be able to find a walkthrough.
I had created the DbContext but thought migrations was only for pre-populating an existing table. I shall investigate migrations further. Thank you.
You can use migrations to seed some data in the database as well, so you're not wrong, but the primary thing it does is look at your DbContext and your target database and adds/updates tables/columns.
You're wrong. EF can create the database and tables without code first migrations.
K. I'm sure it can, EF migrations is what I use. What do you use?
You're missing the important half of your answer... how?
I believe that is of you create the model in the designer or whatever it is. The OP is using POCO classes
https://stackoverflow.com/questions/4028830/c-sharp-nullableint-vs-int-is-there-any-difference I've read something similar to the last answer before. Never confirmed this myself though.
Try Vmware Player. 
This video/page cleared it up for me: [http://msdn.microsoft.com/en-US/data/jj193542](http://msdn.microsoft.com/en-US/data/jj193542)
If you have a dreamspark account you can get a free 90 day subscription to pluralsight. Might be closer to the training videos you are looking for - they are pretty much the standard for. Net training
I second the Pluralsight recommendation. I've had a subscription for a couple of years now, most other developers I know and work with have an account as well. Plus you get access to videos on topics other than ASP.NET, like AngularJS and Entity Framework.
Wow thanks guys!! I never realized dreamspark offered a free subscription. This is amazing!!! I wish I knew this sooner.
Do you have VS2013 handy? Could be worth seeing if it is an issue with your CTP install
I got over zealous and uninstalled VS2013.
I actually bought a subscription to that site, and once I got in I was severely disappointed with the amount of relevant material. The free videos were good, but after paying, there weren't that many more. A lot of stuff was a work in progress or kind of half-assed together. I was honestly disappointed with it. That was maybe 1.5 years ago, it may be better now. But from my experience, stuff like Lynda and Pluralsight are far better and more professionally done.
I had a subscription to that site as well. I found that although what they had was great the content was not being updated. Disappointing, yet sad as the tutor was really good, apart from the distracting binary clock.
He is a good tutor, but his lack of communication is pretty bad. Like the last three months he had a few weeks of regular new video's. Suddenly over a month of no message at all, and out of the blue new feature where you can more easily track your progress and earn achievements (yay, i guess?). And now it's been more than a month and counting of no updates or anything. If he offered it for free then yeah, complaining about it would be silly, but since he asks money for it, the lack of updates is annoying.
I'm not sure why you're doing this but the Aspose have a library which does this. It's not free though. 
I did this about 10 years ago. I went about it by way of office automation, printing the file to postscript and then converting the postscript to a tiff. A lot has happened since then, like going to docs from doc. 
**Update:** I noticed that in the Package Manager Console the Default project drop-down is empty. If I open an example solution I downloaded, "Geek Quiz", I see that the drop-down contains the project name and NuGet works just fine. And this is in the same version of Visual Studio. So I have researched why the drop-down might be empty for my Solution/Project and what to do about it but so far have found no solution.
Sounds like eDiscovery. Best way is to use a print driver. 
WPF or WinForms? 
My suggestion would be go docx -&gt; PDF -&gt; TIFF. I've done this with Open Office and imagemagick on Linux. I'd go Office 2013 and ghostscript if I was doing this on Windows. For docx to PDF see solution #5 at http://www.codeproject.com/Questions/346784/How-to-convert-word-document-to-pdf-in-Csharp It requires the server have Word installed, but is really straightforward and will render the documents correctly. PDF to TIFF just needs something like ghostscript or imagemagick. You'll want to setup some queueing as doing this on demand will melt your server's face off.
I think a tree view is better option.
Here's how I finally got packages into my app. Forget using NuGet Package Manager. Go to the command prompt. Go to the folder containing your project.json file. To install a new package type, for example: kpm install SomeCoolPackage Warning: The package name is case sensitive. Another good command to know is: kpm restore 
Great, seems that, it will solved. Is there any code sample out there this way?
You should have mentioned that you are using a vNext project. NuGet does not work with vNext projects. It's still in a **very early alpha**. And you do not need kpm, it's enough to adjust the dependency in your project file.
If you use a ListView, you can add columns to show details about each item, and you can separate the items into groups: http://visualbasic.w3computing.com/vb2008/4/vb-listview-sample-project.php
Actually, this is exactly what I was visioning. Thanks it saves me a lot of google time. 
This is discussed elsewhere in the thread, as it appears to be a rather common solution. .NET 1.1 worked just fine with Office automation. It did require an install of Word, but I didn't mention anything wrt it existing on a server. /shrug Phone spell checked changed docx to docs, as well. I'm too lazy to go edit it. 
You can use LibreOffice for the docx -&gt; PDF as well.
thank you. Never heard about pluralsight. I will check it.
Google, Stack Overflow. Also, http://www.microsoftvirtualacademy.com
I just started as a .net developer too. Stack overflow and the MSDN library are my goto sources
if uLikeVideos { searchYoutube = "kudvenkat" } 
Second that [channel](https://www.youtube.com/user/kudvenkat). 
Agreed. I've learned a lot from him. 
Don't forget Microsoft virtual academy.
pretty much just google. prefix all your search terms with "c#" and you should be fine. I would also highly encourage you to ask your coworkers for help too. If you are working on something new, ask your senior / team lead / mentor how they would approach the problem. 
Adding to the list - the ASP.NET website: http://www.asp.net/ 
Pluralsight is amazing for .NET developers. Well worth it.
If you invest the time, PluralSight will definitely be an invaluable resource. There are numerous C# and .net courses covering a wide range of applicable and architectural areas, and the breadth of other languages/platforms will broaden your skill set immensely. They also have career development lessons for the soft skills which can be more important than your technical abilities.
Same here! We will learn together. I'll keep you posted on what I use in my process of learning. 
&gt; &gt; You should have mentioned that you are using a vNext project. &gt; &gt; I had put that as the very first line so that everyone would know. No, you did not. You just mentioned that you use VS 14 CTP, which of course still can be used for regular projects.
I would recommend using the resharper trial. It can warn you about simple mistakes/best practices. If you're not familiar with LINQ, resharper can convert fairly complex for loops and if statements to LINQ. It's nice to quickly and easily see the LINQ equivalent of your code (whether you end up using it or not). It's not as big-picture as Pluralsight, but I'd definitely recommend it if you're new to .NET
Stackoverflow, MSDN and the ASP.NET website. If you can afford or can convince your employer to pay for it, pluralsight is a great video training resource. 
Seconding LINQ, one of the first features I miss when I have to work in other languages.
Which requires you to have LibreOffice to be installed on the machine. Not really any better. :-)
I've done similar work with pretty good success, and didn't have to buy any software to make it work. As far as the postscript &gt;&gt; tiff conversion goes, what did you use? We wrapped [GhostScript](http://www.ghostscript.com/), running it in its own process with its own "printer." It tended to be pretty stable, but crashes weren't so easy to recover from. Unless there's a cleaner and more reliable alternative to what we did (about eight years ago), I would not recommend this approach.
Make sure you understand that there might be substantial limitations on what the word document can include, and that even a "small subset" might be pretty time-consuming.
Transforming docx into an image via OpenXML is good only if you either: 1. Do not mind restricting the kinds of document content 2. Have lots and lots of time to spend implementing complex XML &gt;&gt; drawing mappings Either way, this will be a long, hard approach. Before you spend to much time on doing it this way, be sure that a third-party print-to-tiff or document conversion tool won't do the trick. It might be better to just spend the money.
Looks like a good list to me. The only site really missing here that I personally have learned a lot from would be http://www.codeproject.com/ 
StackOverflow, definitely. But, don't just go there to ask questions. Read through other questions people post and attempt to answer them. When, I was getting started I found tracking down answers to questions there was a great way to quickly expose myself to all the language features.
Answering my own post: found one demo app at Redgate: http://www.red-gate.com/products/dotnet-development/ants-performance-profiler/walkthrough http://assets.red-gate.com/offerings/NerdDinner.zip Not sure if this is somehow a modified version of this : http://nerddinner.codeplex.com/ 
Usually when someone wants me to do this I delete DNN and install umbraco and then create a template in that.
will do 
Can you enlighten me on this site?
You can find documentation, tutorials and video's at http://www.dnnsoftware.com/wiki/page/skins 
Office XP (2002) was its initial release. 
Depends what is embedded into the DOCX
Ugh... Have you tried DNN in the past few years? It's actually pretty good. Also, it's content model is a lot more intuitive for people running small to midsized sites. 
You don't give enough detail about the requirements for an accurate estimate. Somethings you may wish to provide. 1) Will this 'form' be a single page? 2) Does the website use MVC or is it an old .aspx website? 3) Does the database already contain tables/columns that will be populated with this data? 4) Does a layer exist that communicates with the database and if so what technologies does it use? There is a big difference between using an ORM like EF or using System.Data.SQL. 5) Does the data need to be sanitized or encrypted? 6) Will only the form be written or does it need to handle transitions between pages? 
2. Without knowing the technologies it makes *time* hard to calculate. The reason for this is that each technology requires a different set of tasks to accomplish the job. 4. The fact that no data from your website is currently entered into the database is a BIG piece of information as far as requirements go. The integration from a website to a database is not necessarily hard so much as it requires additional time. 5. That was a trick question, all data needs to be sanitized. If you have a user enter a phone number but they type abc-defc-hhhh that does you no good. So the answer to sanitized is yes. Encryption is only required for storing secure information like SSN. 6. So lets say a user clicks a link that says "Get Information!" and that transitions them to the web form you are requesting, after they fill out the information the user will then be transitioned to a new webpage. The transitions are simply moving a user between one page and the next. From talking to you further I believe that the transitions between pages will be a requirement as well. No point in designing a page no one can access! Well all in all the job seems like a 2 week - 1 month depending on the difficulties of integrating with a SalesForce database (which I know nothing about). That equates to 200-400 hours. The going rate for a developer who can manage this is around $45 -$60 an hour. That is how I would estimate this. I would probably write the contract for 1 week of investigation work and then a second contract would be written up that would include the total estimate for the entire project requirements and documentation of each precise detail. I am really just trying to help you flush out all the things a good dev would ask. I myself am gainfully employed... maybe I should have mentioned that first.. Anyway, hope this helps.
Check out one of the default skins like Gravity in DNN7. See how it's built and replace it with your code.
You might not need something developed. Check out [Action Forms](http://www.dnnsharp.com/dnn/modules/action-form-builder) with their [Salesforce Addon](http://www.dnnsharp.com/dnn/modules/action-form-builder/dnn-salesforce).
agreed. Only bad part of DNN these days is the cost. If you need/want/have to upgrade to their paid model, it gets pricey really quickly. Thankfully most projects can be done with community edition.
Yeah, I've also been disappointed at the cost structure... Particularly for the social stuff. But, it seems to be helping pay for a bigger team working on the core platform as well... So, I guess it's OK. 
Your solution requires groups of exactly 1000 to work properly. You could get flagged as a spammer due to the amount of outgoing mail. Usually once you reach this volume you contact a third party bulk mailer so your domain doesn't get flagged and deranked. 
I've used this very synthetic demo in the past - https://github.com/davidwhitney/PoorlyPerformingApplicationDemo 
Haha, that's a version of NerdDinner that I helped crapify. Good to see it's going strong.
Now free for all.
So you have a api like: * get api/password/generate ---&gt; Returns 200 with the password * post api/password/store(password) ---&gt; Returns 302 No content, it have been saved * get api/password/retrieve(id) ---&gt; Returns 200 with the password * delete api/password/delete(id) ---&gt; Returns 302 no content Is this not fine?
Bob is a cool teacher. I used to have a learnvs sub but these days I use pluralsight. I think MS commissioned him as he has a whole series of free content available on Channel9 http://channel9.msdn.com/Niners/BobTabor
cool, so it's actually a version of "Nerddinner" that has intentional mistakes etc there? Sounds like the exact thing i was looking for :) 
Nice, thanks!
why would store/delete return 302?
Is the new survey part of the existing model?
Are you using a ViewModel ?
The survey is another instance of the Survey class.
If I add another parameter to the method: public ActionResult AddCompany(AddCompanyModel model, SurveyModel modelOne) I get a survey in modelOne. However I can't get a second one to appear using List, Collection or array. After viewing the source, it appears the problem is that because each Survey is getting injected, the ids of the elements are being repeated and (understandably) .Net can't handle that.
Awesome, thank you for this. Mid poly dev here.
I view missing regex in place of 50 lines of logic as a junior who doesn't know how to regex.
I am not sure what you are saying.
The heart of this answer is correct. Do the display work on the client with javascript and web service calls. I do the same thing but with jquery and lodash (or underscore)
A regex pattern is capable of replacing enormous amounts of if/then style logic which can be very prone to bugs. Using an editor like expresso makes it trivial to write decent expressions that work as intended. The only time I ever see regex used is from senior devs, in its place is typically tons of unesscary logic to try parse the text written by juniors who don't know how to use it correctly. 
Although I respect your opinion I do disagree. I find most bad programers tend to put large regex statements to parse very complicated lines for import files. Usually trying to parse a title,summary, detail lines all in the same string. It makes it impossible to find that 1 char mistake because there are no debug lines along the way to pick it apart. But hey, like everything in programming every one has their styles. 
Our opinions are likely just based on our respective experiences in the industry. The core issue is people not using the right tool for the right job.
Your only as good as your experiences that's for sure. Anyway, I think in my op I said something along the lines of regex having a right place and a correct use. 
You present no code, just some vague description and suddenly you expect people here will know what you're doing wrong. EntitySpaces isn't commercial anymore, though it's OSS now, and to my knowledge there are docs, even more than what EF comes with. 
This was announced at the Build conference. They're gonna help Xamarin and Mono to support ASP vNext, and probably give them some money too.
hooray for desktop apps still being mentioned!
Okay, I didn't present code because I hadn't anything to present. I know my instantiating the entity works because I have no problem querying or even updating it. However the OSS thing helped. For anyone else looking for this solution I just found this and it pretty much answers the question: https://github.com/EntitySpaces/entityspaces.js/wiki/Adding-New-Records
I would think [FizzBuzz](http://c2.com/cgi/wiki?FizzBuzzTest), but 3 hours seems a bit long for that.
I can do FizzBuzz. If that show's up I'll be quite happy. But as you said, 3 hours seems a bit much for that type of test. 
I got fizzbuzzed, string reversed and make an algorithm to solve x problem from the last 3 dev interviews I went to. I'd expect a quiz and a few live coding tasks. Tougher ones usually involved linked lists or associative array sorting, ranking array values and outputting highest ranked index. Most places wanted me to explain what inheritance, polymorphism, static void and MVC are. Check out the company on GlassDoor, might be someone listed what it is they do with you for 3 hours. I wound up taking a position at a Fortune 500 who was more interested in my experience than testing me on the spot. 
A common one that I've had in several interviews is having to fix some code that won't compile, or throws an exception. Never had one with a time limit of any sort though, it's usually taken 10-15 mins, sometimes the interviewers have stayed in the room, sometimes not. One nasty one that a friend of mine had to do was 'write a random number generator using TDD'. I also had to write a passport validator for one job but that took about 2 days work prior to the actual interview (I had to demo it in the interview) Don't worry too much, even if you don't succeed in solving the problem they set, they want to see how you approach it and how you write your code.
I've had to do (in the past): - a Roman number (MCXIV) to int convertor) - the first round of google code jam exercices - some random ones from projecteuler.net (go and practice there if you want random math problems) - a whole bunch of exercices that ask you to to filter/sort elements from a list (extra credits for being cpu &amp; memory efficient) Most of the time, they want to see how you reason.
So...will Telerik tools get even shittier?
I really hope they keep JustDecompile free. I've tried Telerik's tools and quite honestly I'm not a fan of the vast majority of them. JustDecompile is every bit as good as .NET Reflector. 
ASP.NET + IIS + hosts file = Sub Domain on the fly (when you don't have access to the DNS server)
Most stuff got integrated into Visual Studio. So why should it be a failure?
I don't know. I would say yes it failed at its primary goal, getting designers to build XAML. But it greatly improved the Xaml editing experience for developers, and now within Visual Studio, and means MS has best in class UI designer compared to Android (by a large margin) and Apple by a smaller margin. So in that way its a success imo.
Even if your users can't decompile the application, wouldn't they still be able to use a tool like Fiddler to see the API calls? (Not that I have done that exact thing so I could figure out how to push my own data to a proprietary system....)
yeah, I sit in the ASP.Net house as well. Last time I was looking at code obfuscation I came across a program called 'eazfuscator.net'. Haven't used it, so can't really recommend it, but from a concept level it looked like they had the right ideas.
Then why not just integrate the rest? 
They did bring in some blend into VS but then I wonder why not just integrate the rest since there is a lot of overlap ?
UI complexity?
obfuscate the c# code (built in in vs ultimate or you can get a paid plugin for pro) as /u/cyong said, you can just fiddle the API to get the code, so you need to enable rate limiters on the server, as well as likely encoding on the location string to make it more difficult for people to figure out. Maybe hash the location string and append a timestamp at the end or whatever
You'll very well be likely tested on OOP concepts(but not just limited to). Make sure you have those down pat, I can't stress that enough. I've had to implement linked lists before, find out what's wrong with a particular code block, explain what happens in an inheritance tree(i.e. C inherits from B which inherits from A, they all have virtual "Hello" methods that get overridden, and get polymorphically cast into each other. What happens when you do A c = new C(); ? etc), and probably on other certain .Net trivia(what is the CLR? Can you explain threads vs a process? What is autoboxing?). And oh god brush up on recursion, too! I've also had an interview where to write an ASP.Net site from scratch that could connect to a database and display data from a table onto a page. I've only had to do that once so I'd say that's rare. My most recent coding test, aside from a pencil/paper deal, was to model a traffic intersection by coming up with a design for it - what kind of objects would there be, how can they be best arranged into parent/child relationships, etc. I've had to do the same for modeling the subway system in a major city, too - all very high level and conceptual stuff, but they want to see confidently demonstrate your OOP skills here. Don't worry too much about correctness(or whether you know something, be honest but say "I don't know, but I could look it up and learn about it), they expect people to get some parts of it wrong - the important parts are how you approach problems to solve, and whether you'd be someone they'd like to work with. The last part is very important, someone could be great but if they're a dick, they will likely not get hired. Also don't lie about stuff either.
If you want to make sure the call is unique, encrypt the key client-side along with the current date. That way if they capture the call they can only reuse it for a limited time. Now you just have to worry about obfuscating your app as it has the encryption key. But that's the usual problem with DRM.
Yeah. Today was the first time I've ever heard anyone badmouth Telerik. I must be living in a bubble...
Expression is over, if that's what you mean, and Blend with it. Microsoft isn't actively developing it anymore. That said, I don't think it was a failure; it was a useful tool until Microsoft got a real XAML designer in Visual Studio. 
At our last job we used YouTrack which I had to integrate with an MVC system and it wasn't very hard. Might look into it.
yep, that's about right
I actually like Telerik's controls. Sometimes they give me problems, but overall using them saves me time over writing something myself.
Personally, if I have to interoperate with stored procedures, I prefer [Insight.Database](https://github.com/jonwagner/Insight.Database). It works *really* well as far as sprocs are concerned, and works pretty much the same as every other micro-ORM when using ad-hoc SQL queries. 
Admittedly, their WebForms controls sometimes were pretty horrendous. On the other hand, I have *never* had any problem with any of their WPF controls and their data-binding capabilities were IMO the best compared to their competitors (at least ~1.5 years ago). KendoUI controls (HTML/JS) are also pretty good. Not perfect, but good, especially grid control.
I like and use Dapper a lot, but I also wrote an "anti-ORM" framework called QueryHelper: https://github.com/ctigeek/QueryHelper I think it's a better abstraction layer (i.e. you don't have to manage the connection.) and therefore it's very testable. I also like it because you can separate the part of the code that builds a query (including parameters, etc) from the part of the code that actually runs the query. It supports running multiple queries in a transaction, running multiple queries in parallel, and external (distributed) transactions. It's compatible with any ADO library that supports the standard factory methods. Side note: I'm about to do an update for it to support async callbacks and possibly support for returning an IObservable. 
On a side note: please stay away from the larger frameworks like EF and NHibernate. I've had exceedingly unpleasant experiences with both, ranging from poor performance to race conditions causing errors.
Why not try a service like cloudflare to help against attackers? That should eliminate the spamming part at least. As far as keeping it from being decompiled or reverse engineered, that is a fool's game. You can do many things to deter a prospective reverse engineer, but if someone is determined, they will always break your protection, it is just a matter of time. Your best bet is using a paid commercial protection suite for the application level protection, since IMO (not that I would ever *think* of reversing commercially protected applications), they provide the most adequate "deterrent" to decompilation. Encrypting your traffic is something else you need to look into as others said. I am actually going to use some less than savory software's technique as an example here (and a *very* simplistic one at that): * Find computer specific and unique info on the PC (ComputerName + MAC Address + OS Version + (whatever else you decide to use)) * Send that data back to the server to create an encryption key on the server using your algo of choice * Each time the app needs to be authenticated, send the same data back to the server, not the key - then create the key using the same algo and compare No method will be bulletproof and they all can be cracked, but maybe this will help you get some ideas going. 
If you'd like to keep the data going into the table the same, you could transform the data before it's merged into the database. Otherwise (as /u/ravenf noted), you can definitely increase the size of that field, but might want to investigate how that change might affect processes that act on that data and might be expecting it in a specific format.
We just started using Kendo for MVC and I love it. 
What are some other controls that you guys use(d) that you can recommend. I've used ComponentArt before, not a fan of their ASP.Net controls.
Is it one connection per interface? If I had 300 stored procedures, how would that work? Many interfaces, many connections?
replace rocket with an office building
I looked at PetaPoco but appears to have little maintenance these days, but that is the way for many of these libraries.
I'm not sure what you mean by 'one connection per interface'. If you have several (300 is an extreme example, but still) stored procedures, you can mix and map them in different interfaces. For example, if you have procedures: CalculateStuff(@baz VARCHAR(50)) // returns INT GetFoo(@id INT) // returns one row of dataset PutBar(@obj CustomBarType) // doesn't return anything CalculateMetrics() // returns decimal then you can map them to two interfaces public interface IFirst { public int CalculateStuff(string baz); public Foo GetFoo(int id); } public interface ISecond { public void PutBar(CustomBarType obj); public decimal CalculateMetrics(); } and then you can 'map' either of those interfaces onto a connection: IDbConnection conn = new SqlConnection(connString); var first = conn.As&lt;IFirst&gt;(); // or .As&lt;ISecond&gt;(); Default connection handling is described [here](https://github.com/jonwagner/Insight.Database/wiki/Auto-Open), generally I found their documentation to be *really* extensive - which is a very good thing.
Thanks. I checked and nothing depends on the size of the field. I was just concern cause when I changed in my test SQL server, SSMS said it was going save the current table along with other tables. But I guess because there relationship using other fields. 
If your giving the user the key, they will be able to use any endpoints themselves. So stick with the golden rule of all input, including webapi being hostile. Our job apart from stopping them doing anything they shouldn't, is to make it hard to abuse your service. Just like an anti-hack for a game, it's a bit of a cat and mouse game. My 2c, these aren't solutions, simply ideas that you might look to incorporate. Use a unique id/key per user. Generate this on the server side. Use rate limiting on the server side - enforce these rates on the client side too. Any user id that exceeds these rates likely isn't using your client to talk to the server. Use a "sharedsecret" instead of an id to do hmac, include a nonce in the messages to prevent replay attacks. Reissue the id and/or shared secret regularly. Maybe even mid-session. Don't notify the user when this occurs. You could even encrypt the shared secret when stored on the client and require a call to the server to decrypt it. Make updates compulsory (some sort of self-updater would be best). Update regularly. Move your endpoints regularly. Use and identify quirks that the spammers won't replicate in their own code to "lock out" the id. It's pretty easy to slightly mangle some http headers the first time a user authenticates or makes calls to 3 different apis to retrieve some meaningless data (that an attacker might not make). Make it hard (CAPTCHA) to generate a new ID/secret. If it's trivial to create a new ID, all the "bad user" detection is worth naught. Pay attention to logs.
[NPoco](https://github.com/schotime/NPoco) is the more active fork of PetaPoco (the dev branch has some recent commits).
My opinion: when you combine the learning curve with the painful troubleshooting involved, it always adds up to taking up way more of my time than just hand wiring everything. My other problem with full-blown ORMs is that it tends to promote poor schema design so that the mapping doesn't get insane. I was just using NHibernate last week and I couldn't get it to generate the schema I wanted to save my life. We've shifted to using more micro-ORMs and generating the schema (and subsequent SQL) we want ourselves.
&gt; Admittedly, their WebForms controls sometimes were pretty horrendous I think that's the problem. They took a terrible idea (webforms) and pushed it to it's limits.
Telerik should open source fiddler, I guess its too late.
Basically, you can have child actions and render partial views. So you can have one view call @Html.action several times and each one is passing in the model for the form inside the partial. Of course you have to do a little more to handle validation smoothly but that's the basic idea
I've been pretty happy with their reporting stuff. It's a much smaller commitment than crystal and it works well. 
Kendo UI is pretty great
Kendo UI is great. Maybe you're using it wrong or something. I make heavy use of the client side and Ajax parts of it myself.
ComponentOne you mean. ComponentArt is a reseller site. I've used many control packs from a lot of vendors over the years, can't say there's one of them that's so much better than the other, they all have their quirks and good sides. 
Boilerplate code needs to be eradicated. Patterns should raise above mere intentions. PostSharp Professional unbridles the potential of aspect-oriented programming, for all .NET platforms. Plus, get a top-notch implementation of the worldвЂ™s most wanted aspect logging. Advanced aspect framework Automate complex patterns with composite aspects and dynamic aspect providers. Build faster applications thanks to the aspect optimizer. Scale to large teams and projects with robust aspect composition. Diagnostics pattern library Add comprehensive logging to your whole application in just one click. Support for System.Diagnostics, Enterprise Library, NLog, and Log4Net. Get highly-optimized code you could not beat by hand. Broad platform support Build apps that target Silverlight, Windows Phone and Windows Store. Write cross-platform aspects using Portable Class Libraries.
The official tutorial is a good starting point. I believe it covers the use of partials later on http://www.asp.net/mvc/tutorials/older-versions/nerddinner/introducing-the-nerddinner-tutorial
Are there any other alternatives if they do screw it up/add a price tag? 
Everything focuses on one model because that's all a view can handle. If you need to work with multiple entities (your database-backed classes) at once, you can create a "view model", which is just a class, usually with VM or ViewModel in its name, with properties for each entity. Then you can pass this one model to the view.
I'll check it out, thanks!
I'm not sure this is what we need, but I'll check it out. Thanks for the help!
But the dust can stay, because the building's crumbling under the weight of changed requirements.
I don't think Eric wants to open source fiddler. He probably would have done so by now.
_______ is much less of a hassle than Crystal Reports. Fill in the blank with anything.
I don't think so. JustDecompile seems sluggish to me.
I know there's Charles, but I've never used it. It costs $50 http://www.charlesproxy.com/
When I look at the add rows from collection, I appear to be missing a step. If I'm not mistaken, in this above, ResidenceFDD is my entity, so I am not using a collection. Do I need to use a collection? Is this part of the code that entity would create or is it something I need to define?
Okay nevermind, I figured this out. I needed to instantiate the collection before I attempted to addnew(); My code should have looked like this: ResidenceFDD resu = new ResidenceFDD(); ResidenceFDDCollection rein = new ResidenceFDDCollection(); ResidenceFDD resi = rein.AddNew(); resu.Query.Select(resu.Query.FDDKey); resu.Query.OrderBy(resu.Query.FDDKey.Descending); var dttable = resu.Query.LoadDataTable(); resi.FDDKey = (dttable.Rows[0].Field&lt;int&gt;(0) + 1); resi.StNum = tbaddaddressnumber.Text; resi.StName = tbaddaddressname.Text; resi.PhaseID = "PhaseB"; rein.Save();
IE : a OrderVM might hold data for the order details, the order items, user information and addresses.
I'm guessing there is lots of sample code, just not for the exact complete flow you are looking for. You have three main problems here: 1) Show different views for different users in MVC. This can be solved in a number of ways. You could for example have two completely different views with their own urls, and simply redirect to them from the Home/Index action. 2) Get information about which groups a user belongs to. http://stackoverflow.com/questions/5309988/how-to-get-the-groups-of-a-user-in-active-directory-c-asp-net 3) Unit test. Well, I have no idea where to start you off, because it's a very broad subject. Do you need to learn how to write unit tests in general?
Thank you for your reply. Upvote given in appreciation. In response to 3), I need to learn the following about unit testing: 1. How to conduct Unit Testing in general for MVC5. 2. How to write Unit Test to verify different user groups are correctly seeing their specific unit testing. PS - Any sample which shows what you propose in 1)? I am new to the framework. Thanks. 
Visual Assist X dramatically reduces application development time with key new features and improvements to existing features in Visual Studio, allowing you to: Visual Assist increases automation, simplifies navigation and displays vital information as you develop. The features are so well integrated into the IDE that it is difficult to distinguish what Visual Assist X provides and what is built into the IDE. One thing is certain, you like your IDE more when Visual Assist X is installed. Visual Assist X provides assistance for all of the programming languages of Microsoft Visual Studio 2005 and Microsoft Visual Studio .NET, including C/C++, C#, ASP, Visual Basic, Java and HTML. The product also offers assistance for C/C++ users of Microsoft Visual C++ 6.0 and 5.0.
sorry but I could not understand what you asked.. can you please elaborate
I should iron this on my shirt for work lol 
But that wasn't expressed in Geek Code, so I'm gonna rip all the badges off your jacket and give you a dishonorable discharge.
 &lt;form method=post action=/controller/action1&gt; ... &lt;/form&gt; &lt;form method=post action=/controller/action2&gt; ... &lt;/form&gt; &lt;form method=post action=/controller/action3&gt; ... &lt;/form&gt; 
definitely worth it, definitely ask employer
Azure is pretty scalable, flexible and the lower tiers of these services are pretty cheap. The lower instance of the SQL-Server managed tier is 15 bucks a month. Websites around 10 bucks a month. You could integrate WebAPI into one of the MVC websites if you felt like it, instead of paying for an API service as well. There are a ton of other services they offer also, CDN, email marketing through SendGrid, etc. I've been very impressed with their offerings and am in the process of moving my entire infrastructure to Azure. (My MSDN Sub gets me Azure credits each month as well). In fact, the MSDN (renewal) is ~800 USD, with 150USD per month in Azure credit (1200/yr) it's a no-brainer for me.
That would be kind of cool actually. :) Can you make a mock up of this spacebaronmonkey? 
Do you have a bigger version of this? It would be a cool desktop background. 
While you'll have to price out your exact needs, I think you'll find it's actually pretty inexpensive. Figure in the costs of servers, storage, backup, colocation, bandwidth, licensing, monitoring and people to manage it all - and then realize with Azure that most of that stuff is already taken care of for you. Architect it right, and scaling out is just a matter of moving a few sliders. Not to mention all the ancillary services that /u/rinpiels mentioned.
Compared to other PaaS cloud providers azure should never be an option. It's slower, more expensive and has many limitations in terms of database functionality with MSSQL. Go with ec2 or google. 
/u/rinpiels and /u/alinroc thanks for your quick answers!. Azure starts to seem really nice indeed. But for instance, if I just want a simple website for a small company, Azure its horrendously overkill since they just need a Website+Domain hosting and a small SQL Database, and Azure pricing for just that its really bigger than lets say, winhost.com offers. What kind of architectures/systems should be considered to be done in azure? Or its a matter of scalability?
Then I guess I will do the BizSpark thing to try it!
C:\windows\system32\drivers\etc\hosts can add DNS like records to the localhost. 
I can say that azure-while certainly expensive-is a great way to go. But all so depends on your client as well, and how much traffic they thing they will be facing and what other services they may be interested in. Is there something as a service that the client knows and/ understands? Ir is it just a pop culture decision. Also, as far as the store deal goes. I strong recommend Bing maps. Its SUPER easy to use as a web API, easy for the client to enter in store location, hours , and just about every other custom field imaginable. And it all just cones nicely to your service as a json request. I can also add that its very scaleable as well
What about the vm's make it slow and clunky. I personally don't use other services like amazon for instance, I do a lot of load balance testing and its anything BUT slow, and I don't even know how to address "clunky?"
If it's not fast enough for Turbo_swag, it's not fast enough for me.
You do realize that every cloud hosting provider gives you a vm right? Vms have had full cpu acceleration for a while now and run just as efficient as standard installs but are much easier to replace, backup, and upgrade 
The EDMX stuff has always been a nightmare, if things got out of sync it was (i found) hard to get them back together again. I have just started using the code first with migrations and I like it... though I have not had to do anything particularly complex yet!
Yup, that was my experience. And then when I tried Ruby's ActiveRecord or Python's Sql Alchemy I realised what a bloated mess it is.
What the hell, Microsoft. Not everyone can do code first. Some of us have legacy SQL apps we need to maintain.
Sitting here shaking my head over it as well, I'm balls-deep in an app that'll be front-ending a flow test facility that I'm now going to have to go back and spend time switching it out to code-first. I at least had the good sense to stick that off in a separate dll at least.
So? What's your problem? 1) You do not have to update to the new EF version. 2) Database first is still supported. "Code First" is just a poor naming. There will be tools to generate the classes for existing schema, so you can continue using your existing databases. They simply drop the **edmx** support, and that is a VERY good thing.
Dapper, Petapoco, Massive, etc. Personally, I don't really like EF. Probably because I have a lot of SQL experience and I work with complex databases. Trying to force EF to do things I need has ended up with more complexity that I want.
I looked at all those, but they all choked when tryinng to manage complex relationships. Here's code relies on those .___.
Yes, I hope this is the case. I hope if I fail my approach will have been enough. 
I like this type of problem. I think I can manage something like this.
Thanks, I'll look into all this.
how is database first still supported? They provide no tooling, their designer won't support EF7. You're better off with 3rd party tools (albeit commercial) anyway if you want to work database first/model first and EF. 
I'm the lead developer of LLBLGen Pro (http://www.llblgen.com), an entity model system which supports 4 ORM frameworks, among them EF (v1-6), offering database first and model first modeling capabilities for EF using a designer that doesn't bog down on large models. For EFv6 you can opt for emitting mappings as code first as well as dbcontext+edmx, it's up to you. For EF7 we'll provide code first mappings once it reaches beta, from a model you create using model first or database first. No need for worries, we got you covered :)
There is really no good reason for the EDMX approach. Having done projects on both I would never ever choose EDMX again. The EF team has said itself what a horrible name "Code First" is. This is because you can have an existing database and still do "code first". I just completed a very large project using the reverse engineering "Code First" on a 2005 sql database and it was so much easier then if I would have had to use EDMX.
In the latest version they have added support for reverse engineer code first so it shouldn't be an issue. In this case you just point it to the database and it generates the code first files for you. This functionality used to be a part of the Entity Framework Power Tools but has now been incorporated into the standard.
of course I read it (and the original blogpost). You are referring to the power tools for EF, sure they exist, but they're not really helpful with a changing DB as it simply replaces the model you already had and it has little customization options other than 'follow the db'. How to get inheritance mappings from the DB schema? naming customization? you want to alter mappings perhaps, like not map a readonly field? It's not that hard to create flat classes and 1:1 mappings to tables from a collection of table meta-data, but it's rarely what you want for 100% of your project. Sad thing is: altering what's being produced isn't going to work, the tool will overwrite it the next time. 
As others pointed out here it's a standard part of EF now and no longer requires the powertools. And all it does is generate classes that you can customize to your heart's delight. But it seems your mind has been made up already.
&gt; And all it does is generate classes that you can customize to your heart's delight. But it seems your mind has been made up already. sure you can customize them. I didn't say you couldn't. The problem starts when the DB changes. :) 
So what you're saying is you're better off? SQL isn't hard; it's quite easy. *Not* using ORM gives you a shitload of performance enhancements because you're not doing an abstracted transform. And when you learn to use a database properly, you'll find there are frequently instances where classes do a very poor job of representing a good database model. ORMs can work Ok, when it's you and a relatively small group of people using your application and you don't expect to scale to a large quantity of users. They might speed up setup time, depending on the approach. But if you're looking at an application that will need to scale, kick ORM out. I make these statements, BTW, as somebody who wrote ORMs in early 00's.
What do you expect? Not ever changing your code again? When you have a column named "Address" that's being used in your code and you remove it from the DB, you're going to have to update your code to no longer call the property anyway, so why not just modify the reverse-engineered class too?
That's the most trivial example, and not that much work. It's different if a table is split, fields now have different types, are renamed, relationships change type, relationships change FK fields, an intermediate table in an m:n relationship gets a non-PK field (so effectively becomes a separate entity). But the core of the problem is that you often don't know what has changed in the DB in detail, other than 'there were changes', as changes were made by the DBA, not you: asking the DBA what changed might result in a list of changes, but is it complete? why the urge for manual labor? point a tool to the db, it figures out what to migrate in your model, shows a clear overview what has been migrated, you use that to alter your own code (next to the compile errors after regenerating), done. No room for errors as in "I have to remember to change that field", that's taken care of by tooling, very quickly but above all: without errors. Changing things all over the place is error prone work when done manually. (and boring, why would you want to do boring plumbing code a tool can do too?)
It's both. I'm reiterating there are better services. 
You've got a point: ORMs mandate more thought to your DB change policy. Two things, though... One: in a 'production' system (ie any DB that has supporting apps), breaking changes should 'never' be made. Back-ward compatible views (ideally with stored proc interfaces for updates), along with restricting changes to additive operations that won't impact running code are the order of the day. Two: if you're running a "code first" domain model, you don't update the DB and then change the model to reflect. You update the domain model which in turn creates the DB schema alterations (tweaked after-the-fact or not), necessary to support itself. Especially with relationship modelling. The whole goal with POCOs is independence from persistence concerns while modelling, and even assuming a DB is a (minor) design sin. Not knowing what happens to your DB is the root evil in that example, and the point where things will have to change for a sane process. If your DBA is making breaking changes without a very detailed log of what/why/when then what's going to happen when you have customers running multiple versions of your software?
&gt; NHibernate There were benchmarks posted in /r/csharp a number of months ago that actually showed that NHibernate was the worst as far as performance goes (with Entity only doing marginally better). Again, for an inter-office application, not a big deal. For millions of users? Forget about it. Me? I find that the setup necessary for an ORM takes about as much time as I'll spend putting together CRUD classes. Oh, and something that ORM makes far too easy: var obj = get_something_from_orm(); obj.increment_some_counter(); obj.save(); Nice race condition.
it's not that difficult to add a few lines to wrap that in a transaction and commit (or rollback on exception).
Don't forget EDMX was also a bit MS SQL Server biased. Working with Oracle meant flipping around values by hand in the XML because it checked and failed to see how Oracle works with sequential keys.
SQL Data Projects are awesome. Even with Code First! It helps build upgrade scripts for production DBs and the sort.
GhostDoc is a Visual Studio extension that automatically generates XML documentation comments for methods and properties based on their type, parameters, name, and other contextual information. When generating documentation for class derived from a base class or for interface implementation (e.g. .NET Framework or your custom framework), GhostDoc will use the documentation that Microsoft or the framework vendor has already written for the base class or interface.
I don't get it. How is Right click -&gt; update model from database w/ a designer not nice features?
For MVC I use the owins context.
Millions of users would require caching and scaling regardless, an area where NHibernate is quite strong... While benchmarks are nice looping through a query a few million times is not really representative of app performance. Intelligent and minimalistic querying becomes much more relevant at scale, CRUD objects or ORM. Drop the dynamic automapping and use a pure/tuned SQL query on a reasonable/tuned object tree and any ORM should be performant for all but the query intense apps - hence my comment about selecting ORMs that will get out of your way. Honestly, I don't see the race condition... Identity and update management are prime arguments for ORMs, thread/access safety as well... 
NHibernate and EF are very slow with querying though, compared to a lot of others, see: https://github.com/FransBouma/RawDataAccessBencher I profiled everything to see whether it's a setting I missed, but it's simply a lot of overhead internally they have to cope with which other frameworks don't have. EF has a fast projection pipeline though, however as soon as you want change tracking, you're not going to see any real performance. 
any orm worth something can execute an expression based update, it's not 2001 anymore ;)
None
You explicitly avoid caching in those benchmarks... Obviously no mapping is faster than mapping, and no query interpretation is faster than interpretation. Compared to avoiding network hops, though? With an adequate caching solution you are trading (networked) operations with in-memory operations. Change tracking in domains that require data-consistency are also night-and-day vs homegrown solutions, are cache-enabled, and handle a broader array of persistence strategies. Remember, the "E" in "EF" is for enterprise. Rapid-fire one-off queries on constantly changing data are generally antithetical to the domains that require ORMs. Intelligent ORM use simply doesn't look like how most benchmarks are performed, and in now way prevents direct data access (or even multiple ORMs being used), for data bottle-necks. If an ORM isn't changing the data access patterns in your app then either you want a light-weight micro-ORM (ie PetaPOCO mentioned in my first post), which can be comparable to hand-rolled CRUD objects, or a serious rethink of your architecture.
I've been using [SimpleInjector](https://simpleinjector.org/) due to the simplicity and I found some blog which tested performance for many IoC frameworks, and SimpleInjector was in the top.
I like how it warns you about destructive updates.
yeah, it's a narrow focus on a specific part of the machinery: materializing rows from a resultset obtained by executing a simple query. So caching can obviously help, I switched it off to show the raw speed of the materialization pipeline, so people can have an idea how fast it really is. 
Why is that a race condition?
I haven't tried it on other DBs.
This is due to the fact a security issue was fixed in the MVC assemblies, bumping their version in your case likely from 3.0.0.0. to 3.0.0.1. If your project has references to them with 'specific version' set to true (properties of the reference in vs.net), it won't update the reference. Change it to 'false' and it will reference the 3.0.0.1 one, or re-add the reference, or alter the csproj file and specify the version there. 
Castle.Windsor Nice fluent interface for setups. Been using it for years and it's generally the first package I install in a new project
&gt; My bad for thinking you were raising a legitimate issue. Let me see here. You saw a segment of code that increments a counter. Your *first thought* was to wrap it in a transaction. While YourFavoriteORM^TM might have the capability within its bowels to run an update statement, the thought of doing that didn't even enter that head of yours. And that is the problem that I am discussing -- not the ORM, but the machinery sitting between the keyboard and the chair. This is complicated when Newbie Developer who's been shielded his entire life from the big scary database monster comes around is completely unaware of the existence of an update statement, let alone SQL. TL;DR: This is not an argument about technology but rather about the methodology that people tend to take with ORMs.
Between the select done to fetch the object and the save, the value of the counter could have changed in the database.
BTW, IoC is a type of design and DI is one of many ways to implement it. That being said I like simpleinjector. Does the simplest level of what you need and is highly opinionated. Other frameworks with built in conventions and helpers seem to just cloud the issue over the lifetime of an app behind their magic. Documentation plus the ease to plug into the MVC pipeline was nice too. 
I'm in the exact same boat. Unity is all I've ever used and I've had zero problems what so ever. I've always been confused why there are so many others.
Autofac - clean, fast, adaptable, and the direct control over resolutions allows some very sexy solutions. It's saved my bacon a few times. 
It's really a stretch for me to believe that DI was the reason the app took that long to load. More of a stretch because I've seen people blame DI for performance issues on two previous projects, zealously demanding that it's "over engineering". These were guys that hadn't written a single unit test for their broken-ass code and who didn't know how to use a profiler. It only took a few minutes after they'd complained for several weeks to confirm that it was not, in fact, the container that was making their code slow, it was multiple O(n^x) operations.
I've used a few containers and I find that Autofac has the best combination of features and performance. I might choose another container with less features if you need *extreme* performance (you don't), but I've not used another that is better.
I've found that not using an IoC container makes the code more flexible and easier to test. Containers are basically another flavor of the service locator anti-pattern.
I'll give you my SQL when you pry it from my cold, dead hands.
Those projects are a complete mess. I have to sync about 3 times before it will work at all.
Yeah, this has nothing to do with .NET.
It was built with . Net
Because it doesn't work as advertised. Update a column type? Delete a column? Add a column? You'd expect it to work every time but my experience is that you might as well roll a dice.
I too love simple injector. 
That's why you have concurrency_id field in your DB tables and a checking mechanism as part of your save method to see if the concurrency_id has changed between retrieving and saving. Edit: I use MS SQL, I'm sure there are similar datatypes to [timestamp](http://support2.microsoft.com/kb/917040?wa=wsignin1.0) in other DBMS's.
Yeah, so? Who cares? Thousand of programs are build with .NET. If you do not share the source code, it does not belong here.
I've seen lately a lot of people express similar opinions against IOC containers. But I have to say, I'm completely lost at how one would compose a large application without a container. While still being testable and decoupled. What is the alternative?
If you only need to access it server-side, then just add a public property - public string ControlGroup { get; set; } then you can easily find all controls with the same group name - maybe using a recursive search (I'd do it as an extension...) c# pseudocode: public IEnumerable&lt;WebControl&gt; FindControlsInGroup(string groupName, Control host) { foreach(var ctrl in this.Controls) { if(ctrl is serverControl &amp;&amp; ((serverControl)ctrl).ControlGroup.Equals(groupName)) yield return ctrl; if(ctrl.HasChildren) foreach(var child in FindControlsInGroup(ctrl)) yield return child }
Wow, so I can avoid a lot of the Label code, what you posted is very straight forward, ace!. =) I think I'll look into the stack size check while I'm working on it - if it's good enough for Label, it's good enough for me! Thanks for your help. (and not commenting on my control names, they're just for the Figs. =) )
All hail Autofac. I'd used Unity and Ninject for years but Autofac is just the king, IMO.
Your customers expectations have never been higher. What they expect - now more than ever - are visually stunning applications. With our controls, you get over a dozen stylized themes that can be applied to your applications, as well as full detailed styling &amp; CSS control with our Web App Stylist tool. And its easy to start building your next solution from one of our beautiful sample applications.
I use Ninject too. But I choose it mostly for the ninja references
Sigh. Obvious troll is obvious.
And you're still overcomplicating a very trivial update with a lot of extra extra steps and load. You're solving a problem that didn't exist to start out with and was completely your own creation by using ORM.
In the case that I present, this simple SQL will accomplish the same: update mytable set counter=counter + 1 Concurrency checks are good practice as well, but you're assuming the developer bothered to implement them.
VSdocman - a .NET documentation compiler - is directly integrated in Visual Studio so it will assist you with complete process of creating a documentation. This includes intelligent semi-automatic commenting of your code elements, creating additional topics (non-API reference) and generating and deploying the documentation. Based on your settings, VSdocman scans a VS project or a solution, and then it generates the final documentation. It automatically reads namespaces, types and their members. Summary, remarks, parameter descriptions and other content are extracted from XML documentation comments in your code (those that start with /// or '''). The tool will boost your productivity no matter whether you create a class library, a component, a control, an application, a web site (ASP .NET) or any other C#/VB project type.
Oh yeah! I did a deep dig to find the 'IoC king' and walked away thinking Autofac edged out the competition. Years later I'd be hard pressed to switch to anything which wasn't more-or-less the same. I've had at least three stomach-dropping "oh no" moments where autofac has saved the day and a non-lambda based container would have fallen short.
Okay, I've experienced some of that but its rare and I've always been able to fix it pretty quick. It also was a great help customizing your db context &amp; relationships. Why wouldn't they just work on making it better rather than scrapping it? I always found that tool to be indispensable, and database first always made more sense to me. But maybe I'm alone :(
Tools &gt; Options &gt; Text Editor &gt; HTML &gt; Advanced &gt; Auto insert closing tag
What are paragraphs? You also forgot to say what's actually going wrong...
i didnt see a way to make formatting. Well when i do it this way, I see the "lookup" key in the HttpContext.Application indexes but it is type string, not my result set type
I'm not sure what you mean. `HttpApplicationState` is just a key value store where the keys are all `string`s and the values are all `object`s. So your keys are all going to be strings, and when you retrieve a value you are going to have to cast it from `object` back to its actual type. That's just how the class works. 
So if I want to store a resultset (from a sproc) in HttpApplicationState would I do Application["lookup"] = FunctionThatReturnsResultSet(); ?
Yes. Then, when you want to use the resultset, you do var resultSet = (ObjectResult&lt;GetLookupTable_Result&gt;)HttpContext.Application["lookup"]
In global.asax, Application_start() i do Application["lookup"] = InitializeLookup(); which is a function that returns ObjectResult&lt;GetLookupTable_Result&gt; (from my sproc) then in my controller I have var myVar = HttpContext.Application["lookup"] as ObjectResult&lt;GetLookupTable_Result&gt;; 
cancel that last post. I did var myVar = (ObjectResult&lt;GetLookupTable_Result&gt;)HttpContext.Application["lookup"]; but when I tried to view it in quick watch it gave me a 'calling 'read' when the datareader is closed is not a valid operation' error ... fml 
Well a couple guesses as you've only given us a little to go on, but your data context is closed most likely. Though have seen simular errors using ORMs that lazy load sub classes, in which case you can convert your result set to a list or change your ORM to not lazy load.
you can also use the Package Manger Console in Visual Studio. The command "Update-Database" will compare your models to the current DB and make any necessary changes. If you also use the Migration tools, you can create roll-back and restore scripts for any changes you make. (This is done with the "Add-Migration" command in the same package console.) Sorry for the late reply to your question. 
MEF is built in to .Net and with version 2 supports fluent configuration along with / instead of doing attributes. That said we often use unity instead. 
It is not free, but having the variety of courses with different levels of detail can greatly improve your productivity and understanding of areas of the framework you may not be familiar with. In terms of bringing this up to your employers: * It is far cheaper than attending any training session vs their pricing * You can watch it at work or at home 
Hmmm, don't know if I really understand your opinion. I think there's a proper way to use IoC and an IoC container: Create classes with explicit dependencies in the constructor. Instead of handwiring your objects manually, let a IoC container resolve the object hierachies and creation order. Nothing to say against this. All the dependencies are obvious. Just a bit "hidden" magic by the container. And there's of cause the misuse: Hide the dependencies of your classes by getting them somewhere hidden in the code of your class by runtime-lookups using a container, see here: http://blog.ploeh.dk/2010/02/03/ServiceLocatorisanAnti-Pattern/ This is certainly not proper IoC! Actually, I don't use a container yet, but IoC all the time. I just assemble my object hierarchies manually by manager/assembler classes. So, well used IoC containers with proper IoC pattern saves work when assembling the objects. Using an IcC container without proper IoC pattern is an antipattern, see the link above.
I used DotConnect as well. Going with their own designer seems like the way to go.
I'm sorry that's stopped you enjoying my post. I'll bear that in mind for my next blog.
I used https://www.nuget.org/packages/Faker.Net. I needed runtime generation.
They are. VS know which tags require closing and which don't.
This is not "JavaScript-free"; it's "JavaScript already written for you". There's no way to create a SPA, sans-JavaScript.
?
By JavaScript-free I meant the developer doesn't write any JavaScript. It turns razor code into an SPA.
I think it was made clear in /r/csharp already, that *JavaScript-free* is a very bad and misleading term for this, no matter what you actually **mean**.
mef is not what i'd call an ioc container though. it's just a bit more and a bit less at the same time :) i guess you can use it as one (and be disappointed), but mef is really centered around modularity and not ioc. 
Please correct the blog post title. Sinlge Page Applications for ASP.NET MVC
Never used TWAIN, but I've done some scanning work with WIA (mostly automatically scanning single pages). You can search for ".NET WIA" and you should find plenty of samples. It's all pretty hacky and ugly, but you might find something that works. 
You say that you "don't use a container yet". Why yet? Do you expect that dependency management is suddenly going to get dramatically more complex, yet still fit within the narrow capabilities of a off-the-shelf IoC Container? *** In regard to "Inversion of Control", it has nothing to do with IoC Containers at all. But before we talk about it more, let us talk about some other terms that get confused. First there is "Dependency Inversion", which often gets confused with "Dependency Injection" **Dependency Inversion** merely means you take the dependency chain A--&gt;B and reverse it to be B--&gt;A. Applying DI twice in a row should result in the original code. **Dependency Injection** is when you pass in dependencies via constructors, etc. instead of using **Encapsulation** or **Service Locators**. **Inversion of Control** is a harder concept. Rather than dealing with dependencies, which are easy to visualize, it deals with control flow. Which is to say, which parts of the application control which other parts. So lopping back to the beginning, what the hell is a **Inversion of Control Container**? Well to read Fowler's description (http://martinfowler.com/articles/injection.html) it is just a global state bag holding an random assortment of objects. 
Had not thought of WIA, that looks promising. Thanks 
Not quite. It also works if JavaScript is disabled. The Ajax only kicks in for modern JavaScript-enabled browsers.
So is this the new iteration of ASP.NET Ajax UpdatePanel? Does it not have the same hindrances and limitations as that did?
Good question. It's built for MVC with HyperLinks front and centre so there's no ViewState bloat and it's SEO-friendly. Ajax is only used in browsers that support HTML5 history so the back button and bookmarking still work. Are those some of the limitations you meant?
If you just want something that injects the right implementation for an interface MEF works fine. Also because v2 doesn't require attributes and can use a fluent style configuration it's almost exactly the same as unity's configuration. http://blog.longle.net/2013/05/17/generically-implementing-the-unit-of-work-repository-pattern-with-entity-framework-in-mvc-simplifying-entity-graphs-part-2-mvc-4-di-ioc-with-mef-attributeless-conventions/ For a sample. MEF does work really well and visual Studio uses it. I think most other people (including us) don't use it because we already use something else. 
It wasn't the only issue, but it was one of the factors, and yes, it was a profiler that identified it. Over engineered? Absolutely. Complete enterprisy code, and let's not talk about the lack of schematic design. We also had about 10 thousands tests, I was responsible for a healthy number of them. Full data layer, service layer, controllers, and ui. Actually made any improvements come to a halt. Because of excess layering, and test isolation it would often take days to fix the tests after a business lock change. In this particular case, our answer came from new management. We restructured the team, threw away the old code, rewrote the application in about 4 months with three people. It is still layered code, we still have tests, but fewer and more meaningful. And we dropped test isolation. All of our tests are integration tests. 
Just a couple comments... * only create 1 connection, use it for each command. * There's no way for the connection to be open when you check it for closed and then open it. Just call open * You could change the query to determine if the user exists to 'SELECT COUNT(*) FROM tblUSer WHERE Username=@Username' and then use cmd.ExecuteScalar(). If the value is 1, the user exists * Personally, I create the commands after the connection is open. I _think_ opening the connection after you create the command should work, but I'm not sure. Do you get an error? What happens when you debug it? Do you get to the else case to insert the user like you expect? 
I just updated it to make more examples of how awesome functional reactive programming is.
To add, you might get an error due to this line depending how you are handling it; insertcmd.Parameters.Add("Sex", SqlDbType.Bit).Value = rdlSex.Text Are you sure you have a boolean value from that textbox? 
And why should I be concerned about my SPA not being SEO friendly?
So let's waste server-side resources, bandwidth, and our visitors time in order to cater to a handful of customers that simply need told to upgrade their browsers? Let me guess. You work for an "Enterprise" right? :)
You can't use your MSDN Azure subscription for production websites: http://azure.microsoft.com/en-gb/pricing/member-offers/msdn-benefits-details/
Not every SPA needs to be SEO-friendly but having working Hyperlinks in a SPA benefits users, too.
What is your idea of a good web navigation experience?
I've used Atalasoft for years, and had very few problem with it.
isn't F# the best?
**Teams** I had a similar problem where I had people with access to their own data as well as to group data. My solution was to not use the roles but to roll my own (Pun!). Simply put every user had a group Id which was checked when they requested/posted data. The end solution included a custom session object (so I could cache user/group data), a custom annotation to authorize without smelling my code up, and a fancy group controller which handled join/leave/invite and other group tasks. 
You can either use role-based stuff and do role-checks at a higher level (can this user see this page/controller action? if not redirect to access denied page, etc) which is really the primary usage pattern, or at the data-level, like a police system where only certain people have access (claims) against certain artifacts (cases/open investigations/etc). That latter is probably overkill for a lot of systems, and I don't even know to what extent any of the Identity stuff even supports claims type authorization. That being said, as long as you have a way to associate functionality or data to their associates roles, it's pretty straightforward to limit access to just those roles. Role based security out of the box (unless it has changed) is not heirarchal where roles and be members of other roles, but that's relatively easy to get past if you check for membership of at last one role in a set of roles instead of only one. You could probably write an action filter to support authorization against a set of roles as well, if that doesn't already exist.
ASP.NET Identity comes with roles out of the box, doesn't it? Does that not work with AD? Normally the User class has a collection of roles. Anyway, assuming AD accounts work that way (it does for database), you just need to put AuthorizeAttribute on controllers/actions as you see fit to limit things to certain roles or users or claims.
Have a look at the identity samples nuget package. https://www.nuget.org/packages/Microsoft.AspNet.Identity.Samples Install it into a new web project and it has a lot of code that give examples of how you can do roles/claims based authentication for an mvc 5 application. Some of it is a little overkill, but there are some good aspects. It shows how to use the identity as an owin middle ware module and how to modify it. If you need any more direction please feel free to pm me. P.s. Sorry for formatting I'm on my phone!
What, change what keys so what? How do I do that? Also, do you know if there's an equivalent of shift-F9?
http://stackoverflow.com/questions/200499/visual-studios-keybindings-for-eclipse I'm not an Eclipse expert; I don't know what Shift+F9 does =p
Odd title. This article introduces and expands these initializes, but does little to explain what they are.
Are you adding them in javascript or in the postback itself? If you are adding them in JS, then you can access their information in the postback via request.item("name"). You'll have to have logic on the server that recognizes the data and redraws the page correctly if you want them to survive postbacks. If you are adding them via a postback, then I think you'll have to add them in the Page Init event IIRC. That way they are added to the control tree before viewstate is processed.
I like the pipeline. 1. CMD: download install K (okay, clear.. cmd I have) 2. KVM: install KRE (wait, what? What's KVM? I just installed K I thought!) 3. KPM: restore packages (And where did I get KPM suddenly?) 4. KRE: run application (and.. KRE? Heh?) 
I suffered that pain last week. Thankfully I am only working on one project. 
There's a huge chance I am doing it all wrong. I am doing Android dev stuff. I assume (possibly wrongly??) that Eclipse is the only way to do that. 
Android Studio (unless you are doing NDK stuff). You are welcome.
Bandwidth costs.
You people fucking rule. Thank you. 
/u/Deep-Thought pointed this out also. I am very grateful for all the info.
Uh... what? I'm not familiar with this... technique. Can you elaborate?
If the controls you are loading are inside a User Control, during Page_Init recreate the user control(s) and assign the ID property to what it was before the postback to allow the viewstate for those controls to be recreated. All the data entered in the user controls should then be kept after postback.
Every closing &lt;/td&gt;, &lt;/tr&gt;, etc. is 5 bytes. Now add on a few million page views per day. On a metered connection, it adds up very quickly. Yes, we also strip out extraneous spaces, etc.
thx for the response, I'll just work more with MVC an see what do I like more
Even if you must use Eclipse can't you just rebind those hot keys?
Noooooooo! It was always nice for small projects that needed to get done quick provided you didn't have any major changes to the schema and stuff. But I use Mongo now for those projects so I'm OK with this. 
You can also develop android apps using .NET. Xamarin is not a requirement however it does make life easier.
How about Xamarin ? Then you could do Android in C# and inside Visual Studio ?
I appreciate Xamarin, but unless you actually need the code to be multi platform or in C# I don't recommend the overhead.
There is no overhead ?
I anytime you convert from one language to another you lose some optimizations. A good example of this is Entity Framework. Writing the SQL yourself would be far more optimized then having MS build the SQL for you. 
Also please subscribe to /r/androiddev . Lot of good tips there.
I thought Xamarin compiled c# directly to Android-native machine code, not to another programming language.
I imagine they do compile directly to machine native. Which is my bad for saying Java. But that still leaves compiler optimizations out. On a side note, I am starting to be convinced the overhead is negligible. Which is nice.
You work on your side project using version 6. You know, the one you can show off one day when you decide to look for greener pastures. Hint: it's most likely a blog.
Yep, theres a really good introduction on channel9 i found very helpful: http://channel9.msdn.com/Series/Introduction-to-ASP-NET-MVC&amp;ved=0CCEQFjAC&amp;usg=AFQjCNGnBMzJVTTIShDJ3e0IZzquFHytmg&amp;sig2=xTi6FotGHsZSAti_3PAzaQ
&gt; Xamarin They compile to MSIL on Android. The mono runtime is actually usually much faster than Dalvik or ART. Where you lose performance is calling into the Java side of things but honestly that's only a problem if you're passing huge arrays around. On iOS they compile down to native.
VS is the best IDE in existence. No question. In my day job I use VS 2013 Ultimate. It's basically perfect. 
What are you using it for? There are lots of alternatives. I write C# on a Macbook and use Sublime and Xamarin Studio, both serve me pretty well. If you're not using .NET then there are plenty of other choices as others have posted :-)
link is not working properly :P but I'll check some channel9 videos later
I don't think your first statement is necessarily true (definitely not true in many cases). The second statement isn't a good example. And the last is only true in some cases. I don't even like Entity Framework, or ORMs in general. That's just misinformation, though. Optimization should be your final concern, not your first.
No one has said this yet, but with things like this, run a SQL profiler trace, what is hitting the Db?
5mb per 1 million hits per extraneous end tag... hardly worth bothering with especially with how cheap bandwidth is these days... not to mention the majority will not be unique so the data will be cached for the most part. there are far better ways to bit bash, but then again i guess if you cut down everything you can think of you may save a few quid a year. I always use CDN's though for my js stuff and images especially on azure, that saves me more than anything else.
Yes be picky. Hold out until you find a company that values the newer technologies. There are just so many .net jobs out there. The maintenance of legacy applications are very easy to find but you'll be happier looking for more greenfield type work where you can leverage newer tech. On the other side of the coin maintenance is pretty easy. If the entire system is already built its not too much to learn or maintain existing legacy applications. It's only when you built entire new systems that you want to use the latest and greatest. So be open to something where you may spend some time maintaining an existing webforms system but get to do new development and enhancements in MVC etc.
Serious question: does anyone like Eclipse? I haven't gotten in development much past .Net. 
His idea of a good web navigation experience is " How quickly can I find someone to berate" i think judging from the comment history. Personally I think it's a great idea, granted though 99% of people that can write Razor markup can also write java script I would have thought.. but as a prototyping tool.. bang on! Also the spelling mistake on the title is glaring and makes you look like a tool ;)
Sorry, that does not make any sense, Java gets compiled into byte code, c# gets compiled into byte code, not really any difference other than the compilers code generation quality. And the Mono compiler is actually pretty good. Not sure you know how Xamarin works..
&gt; ~~link~~ linq is not working properly. Sorry, couldn't resist. I like Linq.
&gt; Writing the SQL yourself would be far more optimized then having MS build the SQL for you. Then I guess it's a good thing that [EF lets you use Stored Procedures](http://msdn.microsoft.com/en-us/data/gg699321.aspx)
something like 90% of the asp.net apps out there were written in web forms. where I work we still do web forms. It's not just about new development, its existing applications to support and enhance. We even have classic ASP too. learn and experience whatever gets you paid and happy. you'll eventually learn other stuff too as you go along. also, learn some side stuff like arxe41, learn some jquery, bootstrap, and a bit of everything else so you know what people are talking about. 
I loathe Eclipse. Completely loathe it. It takes more time to start up than Windows 8 did under virtualization. Want to use plugins? It makes DLL hell from the 90s seem like an easy to manage problem.
Thanks, the title's fixed. Sorry it took me so long.
http://channel9.msdn.com/Series/Introduction-to-ASP-NET-MVC
Thank god for being the only sane answer in this thread.
That error sounds like you are using the textbox when you want to be using the Text property. Do you have any thing where you have txtFirstname but should have txtFirstname.Text? Can you put the code in pastebin.com and provide a link?
Close to perfect. I'm still missing the macro functionality.
Pricey too!
By something special, how do you mean? Is it crap? It never seemed particularly good but a lot of people seem to be quite content with it...
I did the same process, actually its kind of cool the workspaces (the way eclipse organize your projects).
Glad to help
Un contended locks are cheap, and even then the lock keyword is implemented first as a spinlock. Locking, when done right, is rarely an issue. Lots of people don't understand this and use all the lock free mechanisms. Those still create memory barriers with compare and swap atomic actions, and the side effect is the CPU can't reorder your instructions and do optimizations. In general lock free algorithms are slower than locked one, it's just that you are guaranteed continual progress vs stop and go bursts. 
so....you're not concerned about a SPECIFIC security issue, you're just worried that there might be one? personally i'd be more concerned about the fact that on a standard desktop-sized monitor that page is completely unuseable and unreadable without your code it's going to take HOURS for someone to completely pen-test your page/site. do you have authority to give us permission to attack your servers? there's not much we can do for you
I'd say yes, but not directly. A lot of people are turning to a kickass library lead by Damien Edwards called [SignalR](http://www.asp.net/signalr) SignalR uses Web Sockets, and falls back to other compatible techniques for older clients. It's awesome, use it. :)
Thanks! Will take a look.
"does not match generally used formatting, but who cares?" So, is this an argument to follow convention even if you're not required to? Compiler writers do their best to make sure new version won't break old code; but, that doesn't absolve you of any responsibility.
Is there an issue you want advice on or are you asking if there are any security issues as it sits now?
[&gt;mfw async but no monads](http://i.imgur.com/PI46P8r.gif)
So it doesn't do anything... except for the thing it does?
Steaming
And for the situations where you actually need to prevent ThreadAbortExceptions, there's Constrained Execution Regions: https://antiduh.com/blog/?q=node/4
Which part do you find unreadable? I'm currently on my Surface 3 (relatively high DPI), and the site looked fine to me. Agreed on every other count though.
And then there are the Real Bad Exceptions that can skip CERs... NOTHING IS SAFE
Thanks, I was wondering about that.
It is to use the mobile framework but I was referring to the IDE. Xamarin Studio is Mono Develop rebranded :-)
Yep.
erm, Monitor is also used across threads, that's the whole reason it's there: to schedule access across threads to a single piece of data/code. The point is that there can be multiple tasks accessing the same data/code and you want to schedule access to that data/code between tasks, not threads: all the tasks might be running on the same thread, and therefore with lock will fall through the locking mechanism as the thread is the same and it allows re-entry. This thus requires a different kind of locking mechanism, e.g. this one: http://blogs.msdn.com/b/pfxteam/archive/2012/02/12/10266988.aspx (edit) The issue you're referring to is likely another one than I described: https://social.msdn.microsoft.com/Forums/vstudio/en-US/e350f7d0-b860-482e-9b84-8dba12267d25/failure-of-lock-with-tpl?forum=parallelextensions See Taub's answer. 
This is really high level but what I would do is sit down and write out all the actions that your program is going to take. Each of these actions, on their own, could be classes in your program. What I usually do is take this approach of separation of concerns, creating classes that ONLY do one thing (the S in SOLID) and then I have a manager/director class that utilizes them. It takes time and practice in recognizing when to create a separate class or just add a function to an existing class, but you'll get it. The SOLID class on pluralsight is awesome. I recommend you watch it all the way through, taking notes on how you can apply it to your application.
try resizing the browser window to more typical desktop and tablet sizes, eg 1366x768 most of the text-based content works fine, but the homepage and other pages...not so much
You could pull that Save function out in to another class and let someone else be responsible for Saving portion. For instance, a DatabaseTransition class (not sure on name). It's job would be to take an Order (or IValidatable, ISaveable) and run ValidateOrder(), SaveChanges() and then raise the OrderChanged event.
I took a look at this code, and it adheres well to SRP. Then again, it doesn't do much. One thing you could do would be to take that DataRecord class and split the source and target records into a data structure class like Person. One way to start thinking about SRP is to anthropomorphism your classes and think of each class as an overworked intern, who has one hard job and can't possibly take on anything else. Don't make your validator also parse the incoming file. Don't make it also report the results. It's corny, but if you can find a way to leverage your real life instincts for such things, you'll be halfway there. Good luck!
What I like to do is start with just one class and one method. As that method grows to more than 5* or so lines of code, start re-factoring it by grouping lines of code together and moving them to separate methods. As this class grows to 5* or more methods groups the methods in a way that makes sense and move those to separate classes. I prefer this approach compared to trying to decide all the classes and methods you need upfront. *This number can actually be smaller or even 2. I would strongly recommend you read this book: http://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882#
I would use something like [EntitfyFramework Hooks](http://dombrovsky.github.io/EntityHooks/) in order to capture your BL rules.
The project you supplied isn't big enough to try to apply those concepts. Sure, DRY and SOLID help in the long run for the application, but don't forget [KISS (or YAGNI)](http://blog.codinghorror.com/kiss-and-yagni/).
I was thinking of breaking it into 3 main classes, one for importing of the data, one for going through and validating the records and writing them results back to the list(identifying which records are incorrect to make grouping in the next stage possible) and then a final class which goes through and takes the list and writes it into a nice layout. these 3 main classes will obviously have some functionality moved into other classes if they started getting to big. Would calling these 3 classes from the main method and passing the list into them each time(so the list is defined and owned by the program class) be bad practise? Tom.
Sorry for confusion you pointed out me correct,I have question if there are any security issues as it sits now.
Ah unfortunately I don't have that permission, because it all handled by school server. And I don't want to cause trouble for that. Thanks!
Wait...you can't fix page layout in your web app because you don't have the right permissions on the server? That's not how web applications work.
&gt; Ah unfortunately I don't have that permission, because it all handled by school server. And I don't want to cause trouble for that. Thanks! I think you may be the rookie programmer. =)
They havn't officially declared it dead though. But honestly what is driving this company? Here is a brief history of abandoned Microsoft technologies i encountered so far: Managed directx was abandoned for XNA which was left to die. They briefly played with the surface SDK for WPF which they abandoned. They drove people to Silverlight for web applications which they abandoned. Anyone remember Windows Phone 6.5? Admittedly that was terrible... Even on the desktop they more or less deprecated Windows Forms in favor of WPF which they ababdoned for Windows UI or however they call it now. They also used to include a feature for setup projects in VS 2010 which they removed entirely in VS 2013. The things i learned so far: Never ever recommend a Microsoft technology to a client! Period no exceptions this company will make you feel like a complete idiot once once they drop the technology half a year later. Hell I feel so incredibly stupid for trying to adopt their techologies. Never again! As far as i am concerned my trust in being able to compile a qtquick or an android application 3 years from now is greater. At the moment i'm not even sure that they won't ditch .Net entirely a few years from now. The quality of their development products is mostly good as far as i'm concerned. But their management is batshit insane and is showing a disregard for developers that is worrying me. If i recommend a certain technology to a client and Microsoft is deprecating the same technology a year later i look like a complete idiot. I did that with Windows Phone 6.5 once. Ok for that i deserve to be ashamed...
Use GitHub Flow. Be the maintainer of the project. Only accept Pull Requests with test covered code. Consider tests as executable comments. Profit.
Your description is extremely vague. What do you mean by "hint"?
To be fair, WinRT is very similar to WPF, having done both. WPF is like a stepping stone I guess.
Sorry, I forgot to mention that I use ReSharper also. I opened up a wiki, and ReSharper would hint at me to write a description for my function. I think its a setting in Visual Studio, maybe a project setting. Cause I have never seen it before in the 8+ years of using VS before. 
WinRT is the framework based around .Net, it's not ARM exclusive. Their work on 10 is opening WinRT up on the desktop. They want people to get their apps through the store and want to make WinRT as attractive as possible to make that happen
Yep, and if you want to actually force yourself to write these comments, change "Treat warnings as errors" to "All". Your project won't even build until you ~~appropriately~~ document your public and protected members. 
Take "appropriately" with a grain of salt. I've seen projects with this turned on where devs who hated commenting their members would do this everywhere: /// &lt;summary&gt; /// /// &lt;/summary&gt; /// &lt;param name="param1"&gt;&lt;/param&gt; /// &lt;param name="param2"&gt;&lt;/param&gt; That said, you can catch it in code review as long as you can keep every code review from turning into a discussion about why you have to document your public and protected members.
You're absolutely correct. No replacement for human eyes on the code and a good code review.
Having been a microsoft developer since 1991, this has been the norm for Microsoft. I mean my first real life lesson involving this was WinG. It has happened again and again over the years as Microsoft tries to initiate new platforms to create a need in programmers to try the new and cool and of course making Microsoft a consistent revenue stream. But this is not just a microsoft problem. This type of situation is always driven by the "Young" programmer, the programmer who looks at features instead of output. I agree with you that it sucks that Microsoft is not supporting touch well on windows 7. Keep in mind it does not drive there users to newer technology to make new interfaces work well on old operating systems. **Bone** p.s. we still develop apps using winforms for the desktop because WPF was never great in the first place. When working with microsoft tech, choose the platform that has been around for ever and you will not get zapped. 
Isn't that something you can configure in reddit preferences? https://www.reddit.com/prefs/ there's a checkbox that says "open links in a new window"
doesn't work unless your logged in...
done! https://github.com/ProfessorPopTart/RedditBrowser
Why not write a browser extension instead?
Could... This just came to mind first...
Why would you want to browse reddit outside of your web browser? Why not just log in? 
Think of what you're doing man, you're developing a touch screen app on the version of windows before 8. 8 was built for this stuff. Win 10 is coming out relatively soon. Win 7 is dead in combo with WPF for touch interfaces.
Does this functionality Also build *assemblyname*.xml files and put them into your build directory? 
Have you checked the execution plans on the Sql server? On occasion we have found some odd things there with problems that seem random.
Forcing comments is pointless. Unless you can come up with an algorithm that somehow recognises that the comment is meaningfull. Rather, you should focus on the "soft" side and try to cultivate a culture within your company that encourages commenting.
I don't see it. Using VS 2013 ultimate with C#. 
Launch VS in debug mode and check out activitylog.xml for errors.
Stockholm syndrome.
We use dapper and it works amazingly. Use a CQRS pattern and write plain SQL on good databases. Plus it is smoking fast.
&gt; even then the lock keyword is implemented first as a spinlock Hi, do you have a source for this? I was under the impression that lock was just compiled to Monitor.Enter? Or is it part of Monitor.Enter?
What happens if you close the design view? Can you still edit the XAML and build the project? (I'm assuming you mean the XAML designer/editor)
I don't see how they could ditch .NET without destroying their core developer base. There are huge numbers of applications both web and desktop written in .NET by Microsoft and third parties including Microsoft software such as VS, Sharepoint, ASP.NET MVC and the whole Dynamics suite. ASP.NET at least has the vNext project on the horizon and I don't see VS, Sharepoint or Dynamics going away any time soon.
As you're a junior you probably won't be able to avoid legacy code. You'll have to come to terms with that. That aside, stay away from companies that focus on web sites for businesses. Been stuck with web forms for a while because of it and can't seem to escape. The majority of .NET CMS options, at least that are sellable to clients, are based on web forms. Then not only do you get to deal with maintaining some shitty legacy code, you have to deal with a CMS that's horribly coded and lacks meaningful documentation.
Whether it's absurd depends on what you think an order should do, i.e. whether you think that this is acceptable: myOrder.Save() The first question is: is this actually how you should be saving your order? More to it, *should persistence be part of how your order object works?* I think that some people (not necessarily me, but probably the person whose response you cite) would say "no," because your Order type becomes more responsible than it "should" be. It's not SOLID enough. If you don't care about responsibility, here's a simple idea: send the context downstream, like this: myOrder.Save(myIDbContext); or like this: Order myOrder = new Order(myIDbContext); ... myOrder.Save(); Then implement your save method any way you like. If you change your mind about Order's level of responsibility, go with [/u/bryanray](http://www.reddit.com/user/bryanray)'s approach. That's pretty good, although I'm not sure that you need events for it, per se. Just to make it clearer, you'd do something like this: public class Order : IValidatable, // lets us call myThing.Validate() from your context wrapper IFollowsUp // lets us call myThing.FollowUp() from your context wrapper { ...implement basic order stuff... ...implement Validate() and FollowUp() per your interface requirements... } public class ContextWrapper { private IDbContext context; public ContextWrapper(IDbContext someContext) { context = someCntext; } public Save(object thing) { if (thing is IValidatableThing) { ((IValidatableThing)thing).Validate(); } context.Save(); if (thing is IFollowsUp) { ((IFollowsUp)thing).FollowUp(); } } } Then you call: (new ContextWrapper(myDbContext)).Save(myOrder);
I can't find this Managed Exceptions thing in the Exceptions menu. Here's a screenshot of the menu: http://prntscr.com/51kr1x
I can open my XAML with Source Code Editor and the like. I just can't open it with XAML UI Designer. And I can't close the design view if I can't even open it.
Doesn't show any errors.
Ok I did that. But when I open de designer, nothing happens in instance B.
It does compile to that, but my point was that it doesn't go straight to the kernel to get a condition variable, it first spins in user space for some number of spins. So if it's uncontended it's basically free http://stackoverflow.com/a/5144801/310196
I recommend checking out the OWASP Top 10 list. OWASP is an acronym for Open Web Application Security Project, and they have lots of wisdom that advanced beginners such as yourself would benefit from. This list contains information about common security vulnerabilities such as SQL Injection, Cross Site Scripting, Direct Object Request, Directory Traversal, and others that commonly affect web applications. I would also suggest downloading a Tool called fiddler and reading the HTTP spec (google 'RFC 2616') so that you understand exactly how a browser communicates with a web-server. I've been developing commercial apps using the .NET platforms for many years, and the OWASP Top 10 list is a great start. I have seen experienced programmers have issues with keeping those vulnerabilities out of their code bases, but if you pay attention to it while you are learning, then you will be much better off a few years from now. Good luck and happy coding!
Ohhh webforms, been a while. Could you do something like height="&lt;%= new Unit(this.CustomHeight)%&gt;"? If that doesnt work, you could go another route and set the height and width from CSS. If the height is somewhat fixed to a few different ones, you could set the class on the image instead of setting the height, then you define your classes with the height values in your stylesheet. If the height is dynamic, you could set the height and width inline in the element like so style="height: &lt;%= this.CustomHeight %&gt;px".
you have to be more specific with the webforms control myimage.height = System.Drawing.Unit.Pixel(200) [More Information](http://msdn.microsoft.com/en-us/library/system.web.ui.webcontrols.unit.pixel.aspx) I would suggest just using a css style for all of your control layouts though. Dont get stuck using specific properties of controls it will cause you issues later on when you want to move stuff around. **Bone**
It could be another function within the contentprovider class that also takes a path, like bool CheckReadPermissions(string folderPath) bool CheckWritePermissions(string folderPath) bool CheckDeletePermissions(string folderPath) There are quite a few overrides you might have to take care of for it to work properly. The biggest is read/write permissions, I believe it checks those whenever there is an interaction with the contentprovider at all.
That would explain a lot. It doesn't seem like permissions would append the local path the way it is, but I'll definitely check the other methods.
GhostDoc is a great VS plugin that can insert these comments using a configurable keyboard shortcut.
I like your second approach. 
Is that one of those tools that auto-generates comments? Great - now they're commented with semi-meaningless gibberish and you can no longer detect at-a-glance (or with a tool) which members are not commented.
I always wonder why customers of a commercial tool/library tend to post on forums not dedicated to these commercial tools/libraries, while the vendor does have support forums dedicated to these tools/libraries. Tried at telerik's forums?
Yes I have tried the forum, multiple sub forums also. If I could pay someone to fix this I would.
DevExpress all the way
Your update sql has where userid = @userid, but you're not passing it as an update parameter.
Funny. Just one month ago I got a job on mantaining and improving a web site built with EPiServer CMS 6. I'm going to follow your advice and quit this Monday.
it's not for updating, think about your sql update statement, you're saying where userid = 0 cause you're not telling it which user id, you're not passing it to change it, you're passing it to tell it which record to update.
&gt; I know why people start developing in Java, PHP, and all these other programming languages, because it's free. That's actually a common misconception. Yes, Microsoft's .Net is closed source to living hell, but C#, CLI, and other components are under the ISO/EMCA standards. Meaning, anyone under the sun can reimplant it at will. The most well known of these is the open source Mono project, which is used on OS X and Linux. Many in the open source community go ape shit over Mono, cause MS like sue, like Oracle/Sun has done in the past. However, C# was a reponse to Sun, before Oracle brought them, at the time, sueing Microsoft for creating their own implanation of Java. So, in that respect, C# is probably more freeer then Java.
Drop a log statement into your Global.asax.cs file for your primary web project. This is the first load point your application has. If you get that log then your website is *running*. Next try to browse to Global.asax. TO do this open IIS, select your website, select content view, right click on the global.asax file and click browse. You will either get 1 of 3 things. (A) You get a pretty page and just describes stuff. (B) You get a page that says you don't have permissions to view this. (C) You get a page that says you have some invalid values in the web.config, or you have some missing .dlls. (B) Will require a settings change in IIS. Then you should get A or C. (C) If your web.config is wrong you will have to try and figure out what nodes are bunk. If your missing .dlls... well you have to go find them :P.
What a disappointing click that was..
That's a lot of code for parsing s expressions . This could be done in like 20 lines of fparsec 
If you have any await statements, try ending them with .ConfigureAwait(false).
Any notes from the logs (http lots, as well as the windows event logs)? Does other content (html, images, other scripts and resource files like CSS, JS, etc) download from the site? Tried browsing the site from the server to provoke a better error? Use developer tools in the browser to see if there is any information there to use (console, network times and requests, etc)
a tool we use for unknown hangs is debugdiag. It'll create a dump for you that you can bring into vs to see where it is hanging http://www.microsoft.com/en-us/download/details.aspx?id=42933 Second option is going to be freb. Make sure you get the fancy logging installed into iis. Then get failed request logging configured for all requests. This will create an XML file full of details. Freb is going to be easier to do than debugdiag so maybe start with it.
I assume your requests are showing up in in the iis logs? Have you checked the event logs for messages?
Does your app try to connect to a DB?
DebugDiag and Freb I didn't know about and they look promising. I'll check them out. Thanks. 
Not quite. I think even if I did, it may not have occurred to me - good to know! Cheers
I could load static resources (css, js etc) in the browser. I am actually running IIS locally on my dev machine and it doesn't really throw an error :( I should probably check out windows event log though. Thanks
I did try turning it off and on again, but I'll give deleting and adding a go :D
Interesting idea to browse Global.asax. Will give it a go when I am back at my place tonight. Cheers
Quick look: seems like you're not making a session object anywhere nor saving it to the db
Hello, User_ID=@User_ID What thisonehereone is asking (I think) is if there is something updating @User_ID? Try putting in 1 instead of @User_ID as a test to see if it's having a problem with that variable. I usually write the SQL commands in c# so I'm not an expert in the HTML SQL formatting but that should help as a general troubleshooting issue, write the code in a way you know it definitely works then try putting the variables in after you're sure the code is correct. This helps isolate the issue so I would reccomend doing the same for @Firstname and @LastName Just for testing purposes. If it passes when you change them to something static then you know you have an issue with your variables setting. 
Really? I haven't seen webforms in years (and 6 companies). Here old MVC 1 or 2 apps are considered old and usually rewritten (not always though). If you don't want to do webforms, don't. 
I generally write the summary my self, and use the tool to auto-populate the method parameters. Any tool, can be abused. It takes as much discipline to force yourself to write a meaningful comment by hand as it would be to modify an auto-generated comment. However, the tool has the added benefit of adding parameter and exception info for you.
Object metadata. It's stringly-typed so that you can match model state errors to object property names and present errors tied to properties (if it makes sense).
This. It stores error messages about your model, you can add your own errors, check if it's valid, throw exceptions if you want. 
&gt; The Conditional attribute is entirely handled by the compiler without any cooperation from the runtime. [Source](http://blogs.msdn.com/b/jmstall/archive/2007/10/15/trivia-about-the-conditional-attribute.aspx)
I think it is used directly by the compiler to inject some boilerplate code depending on if a compiler flag is set. There are a few attributes in .NET that do special things you can't actually do within normal usage of the languages exposed. If you really do need to do things like what this attribute does (modify your code during compilation depending on an attribute for example) consider using a tool like postsharp: http://www.postsharp.net/ edit: this discussion over on the roslyn boards has neat ideas: https://roslyn.codeplex.com/discussions/541131
In an MVC app, if you use any automagic DataAnnotations you can set field errors in your server code that will display in your front end code. 
Honestly, you need to work with other, more experienced, programmers. If you can find a way to do that without having to go down a few wrungs on the ladder then well done. However, you might have to suck up a few years of being the junior person and getting paid a bit less. Good luck. 
Sure, it should be declared in the notes controller, but here is a link to the view from which it gets the sessionID on pastebin: http://pastebin.com/jKRcSCC1
Thanks everyone. Upvotes for all. This makes a little bit more sense. 
Agreed. The longer I stay, the harder it will become to find something else. Time to bite the bullet now. Thanks for your feedback!
Thank you very much for your thoughts. It is all too easy for one to find themselves in the situation that I'm in. Convenience and the comfort zone are the enemy. I certainly cannot let another year pass by status quo. Also, due to factors specific to my company, I don't think there is much future here. Perhaps I will start looking while at the same time look into options you've outlined to sharpen my skills outside the workplace. Thanks again!
No problem at all! I found myself in the same situation a while back. I did learn that full-stack developers with certifications and experience are *HIGHLY* sought after, especially for management level positions. So I felt much better knowing that adding to my repertoire of skills would keep me well employed. However I did have to concede that I will likely never work for the likes of Google, Apple, Microsoft, or any other large tech firms. However I'm capable of pulling a comfortable salary and living doing what I do, and I'm versatile enough to step in and fill many roles. Recently started studying and learning the VMWare world (already familiar with HyperV) in an effort to further branch out my skills and improve on what I know.
Is the select command working ? 
 Updatecommand="Update tblUser Set FirstName=@FirstName, LastName=@LastName Where User_ID=@User_ID" &lt;asp:button id="UpdateButton" text="Update" commandname="Update" Have you tried putting &lt;asp:button id="UpdateButton" text="Update" commandname="Updatecommand" 
After days of searching, this is what I came up with. Of course I figure it out 10 minutes after posting for help! &lt;!-- Start:Border --&gt; &lt;Style TargetType="Border" x:Key="BlueBorder" &gt; &lt;Setter Property="BorderBrush" Value="{StaticResource DarkBlue}"/&gt; &lt;Setter Property="BorderThickness" Value="1"/&gt; &lt;Style.Triggers&gt; &lt;DataTrigger Value="True" Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}"&gt; &lt;Setter Property="BorderBrush" Value="#333" /&gt; &lt;Setter Property="BorderThickness" Value="5" /&gt; &lt;/DataTrigger&gt; &lt;DataTrigger Value="False" Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" &gt; &lt;Setter Property="BorderBrush" Value="{StaticResource DarkBlue}" /&gt; &lt;Setter Property="BorderThickness" Value="1" /&gt; &lt;/DataTrigger&gt; &lt;/Style.Triggers&gt; &lt;/Style&gt; &lt;!--End:Border--&gt; Anyone want to comment on a better solution?
Dot net is a little more difficult to do open source.. do you have any recommendations on projects?
I'm sorry, I wasn't clear enough. What I meant was when the page is opened in the browser, right click and view page source. Just wanted to check what value is being saved in the hidden session id field.
Not for me. I learned what OMeta is.
This was a last-minute setup. They decided 5 minutes before starting to stream this for everyone, and Scott Hanselman just placed his Surface there and was recording it. The audio is fixed at 32:40 after Scott found a better microphone.
Bugger.... Thank you for the link!
mmm... &gt; Salary is money, so it is a floating point numerical information. Data types **double and float** are commonly used to represent simple numerical information like this (with only two decimal places).
I think you should mention this data type and why it could be a better option for money: http://msdn.microsoft.com/en-us/library/364x0z75.aspx
Got it. Yeah, I think you are right. Thank you for your suggestion.
Done. I've updated the post as you suggested. Thank you for your help in improving the article!
It's probably that you should be using a Decimal because doubles can't accurately represent all decimal values. Nowhere I've been ever uses decimals though.
Well first of all you shouldn't download the code from a VCS, that's what pull/clone/get commands are for. Second of all, you need to open a new powershell (as admin) and enter the following command: Set-ExecutionPolicy Unrestricted (**edit**: or Set-ExecutionPolicy RemoteSigned which isn't as dangerous as Unrestricted) Then confirm it with Y. Afterwars the nuget scripts should run without an issue.
Yeah. Decimal is necessary when you need to perform high accurate calculations and can't afford a precision error no matter how insigficant it may be. On the other hand, for simple applications which makes simple calculations the double data type should be enough to represent money, I think.
XMR1, thanks for your reply. I agree that is what VCS is for, but would this issue have happened if I did pull/clone/get and not just download the project as a zip? I did what you said last night. I did it two ways. I ran VS13 as admin and ran that command in the powershell inside of VS. I then got a message telling me it would only allow RemoteSigned. So I then ran the command in powershell in standalone just like you said and got the same message. Long story short, the same error remains since I downloaded code I build on another machine. I appreciate MS being security conscious. It's a good idea, but I need to know two things: 1. How to fix my current problem. 2. How to avoid this in the future when I am using VCS? Thanks so much for your reply. 
&gt; I agree that is what VCS is for, but would this issue have happened if I did pull/clone/get and not just download the project as a zip? I'm not certain, but if you download a zip containing a Visual Studio project and open that in Visual Studio, you'll get a warning saying that you downloaded it and "insecure blahblah". I never got that message when using any VCS, so I assume they work around this (I assume all Visual Studio does is to look at the file properties where a "this content is from a remote location" is displayed, when you download it). VCS probably remove that attribute automatically. &gt; So I then ran the command in powershell in standalone Make sure you run the Powershell as admin (right click, run as admin or hold Ctrl+Shift while you start Powershell). I get the same error message as you when not running it in admin mode.
&gt;double data type should be enough to represent money, I think No. To prevent yourself from being embarassed when someone audits your code [educate yourself first before trying to educate others](http://stackoverflow.com/questions/3730019/why-not-use-double-or-float-to-represent-currency/3730040). Although I'm pretty sure anyone writing serious money handling code isn't going to read your article there's no need to spread bullshit.
my company uses them constantly. it's our most commonly used datatype (except we use decimal? where our variables can be nullable) -- insurance company
Really? For a simple budget application to control how much you spend montly, decimal would be like a bazooka to kill a little ant. Let the bazooka to kill a dinossaur. Your sandals should be more than enough to kill ants.
Totally agree with you.
Anyways, your review is valid, and I have already updated the post to tell readers to use decimal instead of double or float to represent monetary information. Thank you.
I've updated the post. Now it says to use decimal to represent money. Thank you for taking your time to suggest improviments to the article.
&gt; I'm not certain, but if you download a zip containing a Visual Studio project and open that in Visual Studio, you'll get a warning saying that you downloaded it and "insecure blahblah". Ha ha ha. Exactly. I'll go ahead and clone my repo tonight. Shame, shame, I know my name. Lesson learned for being lazy. Do you use git tool in VS13 natively or do you use git terminal tool for windows? &gt; Make sure you run the Powershell as admin (right click, run as admin or hold Ctrl+Shift while you start Powershell). Okay weird. So if you start the powershell as admin, it will go to unrestricted and not care about remotesign? If so, then I must have screwed something up. 
It really depends on your use case. If you need to be sure you represent every penny perfectly then you need a Decimal. If you're writing mathematical models that level of accuracy is a waste.
I can only imagine the reaction of a Microsoft representative actually seeing this title and freaking out.
I could present arguments, especially in the case of models where scale differences can amplify FP inaccuracy to amounts you actually care about, however I don't think you or the OP bothered to read SO page on the reasons so it wouldn't do any good.
Your condescending tone doesn't make you any more correct than you were before.
It's just an entry level programming position. I've taken several languages so I'm not necessarily worried about learning anything new. I am just looking for solid information on this instead of learning an entire framework in 2 weeks time before the interview.
Start looking at ADO.Net ... there was talk of it being phased out but it's still kicking. A lot of your other course work concepts are still relevant, just need to learn the vocabulary of it all. Also look at how .Net and Azure (MS's cloud infrastructure) integrate. Get a decent grasp on the basics of those and you should be able to make it through the interview. EDIT: Check out EF as well (entity framework). 
Thanks for this, I will take a look at EF and ADO.NET for sure! 
A very basic answer: http://en.wikipedia.org/wiki/.NET_Framework I'd suggest reading that. Also note the templates at the bottom of the page. The ".NET Framework" template lists the pieces of the framework, which it sounds like is more what you're looking for. They're most likely talking about using ADO.NET from ASP.NET. Once you have a better higher level view, go for more detailed questions.
EF/ADO.NET are the primary access technologies for SQL databases. I also just want to point at WCF, which is a popular .NET framework for creating services (usually soap services). WCF can be a bit daunting, but it's such a huge thing for data access in the enterprise that it can't hurt to be aware of it. 
&gt; Is this done just by using C# OOP to replace PHP in communicating with the database? Ohhhhh mmmmm yea I think you're right.
The ado.net classes are what you are looking for.
MyProject.csproj\App_Start\ReouteConfig.cs This is responsible for routing calls to the correct controller. If you changed any of the default routing configuration this could be your problem.
**EntityFramework** - Takes a connection string in the web.config. Builds objects that represent the database tables with properties that represent the columns. Uses what is known as a Context to manage connections to the database. Performs all the CRUD via calling context.SaveChanges(). Please review some syntax online. **System.data, System.Data.SqlClient** - Communicates with the database via a SqlConnection(string connection). The new sqlConnection object has a .CreateCommand() method which returns a new SqlCommand object. You set some values on this object, specifically a string representation of the SQL you wish to run, You open the connection then execute the command. Please review the syntax online. EF is the ORM of choice for a lot of .Net devs. The System.data.SqlClient library is the old school way of communication to the database. The last topic you should look into is the **Repository Pattern**. This OOP was created mostly for the System.Data.SqlClient stuff but people still use it even though they use EF. Basically you create a class that does all your CRUD (Create, Read, Update, Delete) for a set of data like like a Users table or a Cars table. 
I didn't change it. However, I just decided to add a new route, and to use that new route using the @Html.BeginRouteForm method. When I look at the generated source code for the website, it even shows the correct URL to post to. However, it still never hits the correct controller. It still goes to the Edit controller, even when the URL says to go to the Add controller and I have explicitly added the custom route to the page you have mentioned and told the form which routing configuration to use. 
Bravo for them sharing to everyone. Hopefully this becomes official policy moving forward. 
" Traditionally developers work on their local machines, when they're done for the day they hopefully push that into some kind of source control (or save it on a floppy drive)" Wait... Floppy drive? O_o
Tyvm that helps a lot! Seeing some of the flow of it really helped me to understand it. I've taken a lot of JAVA OOP and have done PHP OOP so it shouldn't be too hard to learn. Definitely reminds me a lot of Java
I'll scream if they force me to abstract out everything through EF. I come from decades of programming, including SQL... Sometime the quick and dirty POCO with an optimized query that lives on the dB is best for scale and performance. I get the convenience of EF (and linq2sql) and I understand that up and comers aren't deep in the nuances of optimal db tuning, but don't take away my access to the clutch because flybywire is neat.
I have to straighten out your terminology. A controller is the class. An action is the method.
I use linq2sql when it's simple, and a proc when it's not. Using one doesn't preclude the other. 
just took another look at your code. Just reiterating what AbstractLogic said above, the controller is the class and the action is the method that is being called. That being said, are you getting any errors, and if so what error?
For an excellent example of n tier application, Nerddinner is great. It is sample code but also the documentation explains the various tiers and the communication between the various layers
&gt; Your textboxfor shouldn't have a semicolon after it. Is your model just this one field? Do you have any global filters catching your invalid model states prior to hitting your controller? Yes, I have more than one. I have three, actually. Here is the code: @Html.TextBoxFor(m =&gt; m.FieldName) @{ List&lt;SelectListItem&gt; listItems = new List&lt;SelectListItem&gt;(); listItems.Add(new SelectListItem { Text = "-Select-", Value = "0" }); listItems.Add(new SelectListItem { Text = "Query String", Value = "1" }); listItems.Add(new SelectListItem { Text = "Cookie", Value = "2" }); listItems.Add(new SelectListItem { Text = "HTML Control", Value = "3" }); } @Html.DropDownListFor(m =&gt; m.Source, listItems) @Html.TextBoxFor(m =&gt; m.SourceID) 
I posted it wrong on this thread. It is actually written in the correct order in the code. 
I'm not getting any errors. It just refuses to post to the correct action method. 
There's no reason the code you've shown me should hit edit. You're posting for 1 and your edit is a get so that doesn't even make sense. As for your select list, put that in your viewbag in the controller. Access in your view like this: instead of listItems use (SelectList)@ViewBag.SelectList. That gets all that junk out of your view.
Why are you using a get for the edit? You should be using a put 
Why wouldn't it? Most companies are looking for smart folk who are willing to learn rather than people who know a lot about a technology they've never used. Especially for a graduate position.
That's a good question, and points toward a potential flaw with this approach. The method *looks* like it's going to save your thing-object, but it's not. It's going to save everything in context. Your thing-object *might* be in the to-be-saved list, but if it hasn't changed, it won't be. The intent seems wrong. The question is: are you okay with this? If you are, here's an easy answer: just make child validation and follow-up part of the parent object's validation and follow up. This makes sense, doesn't it? If, for instance, a just one of a customer's orders are invalid, the whole customer is invalid. Validation "bubbles up." Likewise, followup "cascades down." But what if you don't like the confused intent? You might think that entities should validate and follow-up "autonomously." If this is the case, you might try re-working Save() like this: 1. Empty signature -- it's not just saving one thing any more. 2. Get changed objects. (There's a lot of literature out there about tracking and change detection in the EF.) 3. Validate() the changed objects that are IValidatable. 4. Save *everything*. 5. FollowUp() on the changed objects that are IFollowsUp.
Of course they don't, but I was taking about EF, having to scaffold and proxy classes and the like.
US only?
At the moment 'State' is a required field. I've filled in CA and will report later if it succeeded or not. **Edit:** It worked for me. I can develop for Android/Windows Phone but not for iOS now. iOS cost some money, understandable.
No, definitely care about your first job. The reason I think you should care is I've seen so many talented people settle for less, not knowing their potential or the potential of their craft. You have your entire life to be burnt out, don't start so young. * Really find out what culture the business has (not building, but actually has) * Is it a software product company or a company where the devs work to support the business actual core purpose. * Dig into the philosophy of the dev team. * Find out what they use. Ask why, be ready to discuss their answer. * Don't be so sold on what you want, be open to hear what they have (but ask why) Don't be blinded by the lights of developer nirvana, look for a pragmatic company that cares about how they practice their craft but knows how to ship. Look for passion. But look for a balanced respect that products that ship and meet someone's real pain matter more than the best way to refactor. (But definitely do TDD, it'll save your bacon)
How long did it take for you to hear from them? I filled this out yesterday, but still haven't heard anything. 
I prefer terminal/powershell over GUI stuff. Do you use vim in VS13? 
This thread has been linked to from elsewhere on reddit. - [/r/mistyfront] [Telerik experts... I need help. (/r/dotnet)](http://np.reddit.com/r/mistyfront/comments/2lfpse/telerik_experts_i_need_help_rdotnet/) *^If ^you ^follow ^any ^of ^the ^above ^links, ^respect ^the ^rules ^of ^reddit ^and ^don't ^vote ^or ^comment. ^Questions? ^Abuse? [^Message ^me ^here.](http://www.reddit.com/message/compose?to=%2Fr%2Fmeta_bot_mailbag)* 
Is this an Indie, Business, or Enterprise plan?
Looks like indie. 
No I don't. I use ReSharper and other tools. I understand that vim's keyboard mappings are supposed to help you navigate faster, but most of the Features it provides are automatically handled by other tools I use.
Yup. I use EF when I need updates and stuff (tedious to write SQL by hand), and a micro-ORM of choice for stored procedures when needed. 
Smart companies are. Most? How large is your sample set? Also I wish most companies were smart. It really seems, the more people you have working on something the more communication gets in the way. P.s. I have a very small sample set.
http://www.asp.net/mvc/overview/models-(data) 
Every week there's a post in /r/javascript that says something like "LOOK AT THIS &lt;REALLY DIFFICULT THING&gt; MADE IN JAVASCRIPT WITH UNDER 100 LINES OF CODE!!!" And then you find out it uses about 80 different JS libraries. 
Indie for free and still a huge discount for business. 
&gt; I've been wanting to try Xamarin for years. Same. The trial's size limit is so low that it can't even open their own sample apps, which is beyond fucking bizarre. 
I am downloading now, it took me about 30 minutes from sign up to download. I got an e-mail within 10 minutes from an actual person, replied with my info, got another e-mail with my download code 10 minutes later. I just had to send them a school verification from a .edu email address.
Dat username doe
Sweet, glad I paid for it recently. :-/ In all seriousness, good move Xamarin.
Yeah, I've been on the fence about getting the $99/year student kit, and the trial size limit is a complete dealbreaker. Given this new development, realistically I'm going to get a business license within six months.
I think you are right about most developers treating it as a job, learn what they need to know to get it done. I don't know about what companies are looking for though. It seems all of them are looking for the rock star programmer crap. It would be great if you're right. 
Well yeah, they are obviously looking for that one great programmer who can also talk the talk but they are so rare that they just have to settle for someone who can show they will learn anything that's asked of them, which I don't think is a problem, although on this subreddit it's treated like a sin if you don't know absolutely every vague question about the related technology. 
Yes, I did get that wrong. But is there a trial without the size limits?
Update: It took me a day to hear back. Must have gotten in before the wave. ;)
What is the range that the average of the monitor is taken over? Without knowing which database this tied to it's a lot harder to do blind. What kind of access do you have to the SQL server? If you can't run system views you're probably not going to figure it out. If you can run a script then run [this]( http://www.brentozar.com/responder/triage-wait-stats-in-sql-server/). You should get a few result sets. The first one will show what the highest waits are. This will give you a starting point. If reporting is enabled then some of the warehouse operations could cause this from time to time.
&gt; What is the range that the average of the monitor is taken over? I don't know. How can I find this out? &gt; Without knowing which database this tied to it's a lot harder to do blind. What kind of access do you have to the SQL server? If you can't run system views you're probably not going to figure it out. My supervisor has access to the health monitoring stuff, but I don't. What I was given access to (in order to figure this out) was the SQL server itself. I can interface with it using MS SQL Management Studio. &gt; If you can run a script then run this. You should a few result sets. The first one will show what the highest waits are. This will give you a starting point. This is great! Can I pm you or ask questions after I read up on this tonight? &gt; If reporting is enabled then some of the warehouse operations could cause this from time to time. Again, how do I figure this out? I'm new to the technology. I really appreciate the helping hand. Upvoted you. 
I was two seat behind him. ;-)
MVP here. I freaked out for a second until I remembered that moment.
MVP here. This was considered a community stand up on what is coming up with vnext. This session was in the middle of the MVP summit where MVPs are having discussions with the product team. Most of it is NDA except that video. :-)
To know what the time interval of the monitor is you'll have to ask someone or look up the defaults for your monitoring system and the specific rule. Even with access to SSMS you'll still need to try and query one of the DMVs to know if you have the proper access. Simply running 'select * from sys.dm_os_wait_stats' and getting some results will confirm. If the Tfs_Warehouse database is in the list of databases when you connect to SQL server that means reporting was at least installed at one time. You will need to run the [TFS Administration Console](http://msdn.microsoft.com/en-us/library/dd312131.aspx) from the TFS server and look at the reporting section to know if it is in fact setup and running.
They have a 30 day refund policy I think 
For those who live outside the US, use the inpect element on chrome to change the data-value of any selection in the listbox. Worked a charm for me, changed Arkansas to Queensland (in australia) and it worked, they replied with my state being listed as queensland.
We have started using WF in one of my company's software products to push around data and follow the processes through for monitoring. It just works. We are using Visual Studio 2013 to do the development, so I don't understand your question about not running. A lot of the companies that I know have used WF have kept it a relatively low-key behind the scenes component. It's not revolutionary, but it certainly does help formalize processes that could change at a later date.
Or product has some pretty heavy WF architecture put in place by engineers long past. We find it to be an impossible to maintain mess that we continually look for opportunity to refactor out. This could just be personal preference though.
Microsoft has some pretty serious products that depend on WWF. SharePoint. BizTalk. Identity Manager. It's not going anywhere.
IMHO, WWF is a good choice *if* you intend to make your products' workflows extensible by your customers. Think of activities as Lego blocks, and the XOML workflows as the kits that can make a car, castle, etc. Hm. Except Lego doesn't deliver it to you already built... Damn you, imperfect analogies!! Anyway, the customer can use the existing XOML you provide out of the box, or they can modify them to add/remove behavior using either activities you provide, standard activities, or even activities they write themselves. In that respect, it's a really awesome technology. On the other hand, I don't think it's worth the effort to package everything up as an activity if the only people building workflows are your engineers. Building proper, well-behaved activities is a non-trivial task, and they're going to be more productive expressing the flow/logic using the lower-level language they're used to. 
We use it the same way. We made some mistakes when we first started using it though (because no one here knew anything about it) that we're still sort of stuck with but in general, it's a pretty good tool for that kind of thing. We've been using it for 3 or 4 years now with little complaint.
Thanks. The good news is that my boss is the CFO and for the most part leaves me alone. I will start looking for a new job, but in the meantime it wouldn't be a good idea to start improving the quality of my code. I will start by googling all of the big words you included in your comment. In its present form, I certainly understand my code, but I would feel bad for the next guy. Also, since I have you, what metrics should one use to evaluate the size of a .net project? Number of forms, lines of code, etc.? Thanks for your input!
I've been using the Fleck websocket library in a standalone server app for over a year now with great success, albeit in an environment where I know all my clients are using browsers that support websockets. https://github.com/statianzo/Fleck
Try StackOverflow.com
No.
That's a good question, and I'm not sure what's best measure to use. This might be a good [/r/learnprogramming](http://www.reddit.com/r/learnprogramming/) topic. Personally and casually I have referred to: * Writing ___ lines (for a specific project) * Creating ___ applications of &lt;low|moderate|high&gt; complexity * Defining ___ entities * Supporting ___ users 
Thanks for all the advice folks.. much appreciated.
I've never done it before, but there are a few good links on this page: http://www.codeproject.com/Questions/187388/USB-Port-Communication-in-C
Edited my post with config files. Basically I threw everything out and started with a fresh WCF service and a fresh WebForms web app (webforms because that's what all the crap we are trying to convert over to ADFS is, not by choice). Added in the webconfigs to get them to talk to ADFS and tried to add it as a service reference. When I run it on the server it says something about CardServices not being installed, but when I run it locally, CardServices pops up and says "At least one security token in the message could not be validated." I enabled tracing and the service is spitting an AudienceURIValidationException even though I thought I turned that off. I told it to save the BootstrapContext and tried creating a channel using ActAs, but that returns the same errors. Any other info I can give you? I really just need a super basic, working example, of how to essentially pass a token between the website and the wcf service for authentication.
Have you tried LibUsbDotNet ?
Thanks I tried it but could get it to work.
I will check this out but I may have already been there.
You might need to have the following signature public void Month_Changed(Object sender, MonthChangedEventArgs e) instead of public void Month_Changed(object sender, EventArgs e)
Edit: added extra question. See if this example helps: http://travisspencer.com/blog/2012/01/authenticating-to-a-wcf-servic.html Also, the code around the wcf call including proxy instantiation would be useful.
no not a personal preference. For my company has experienced the same thing.
This is over 5 years old.
No, it applies to anyone in a degree or diploma granting course of study.
MVP bromance!!! Loll
I'm on mobile right now, but I dint think I've seen that guide yet I will try it. And also post the other code. Question though, it seems like something that should be able to be set up in the web.config and not manually done, is that possible out a pipe dream?
Avoiding entity framework in the first place would be a start.
I don't think the monitor is of concern now that we know the warehouse is not installed. Running the top 5 waits should be informative itself, but the other script I linked earlier will be more informative.
Microsoft has rewritten it once and the current version is a lot smaller than the first. The thing is they have not thought through its place in the dotNet ecosystem. It's doodleware that doesnt scale and its too heavy for small needs. What we've done a few years back is take its models and the designer, extend it with our own and run it on our own engine that uses MassTransit to drive the distributed workflow. In retrospect, it adds no value cause the designer couldnt handle the amount of activities we had and the model we could easily replace with something lightweight.
I know -- It does what I needed it to do, and it's not in a production application or anything. I've been migrating to Dapper as I've touched that code, though
It wouldn't exist if it wasn't useful and for a lot of businesses it saves a lot of work. As always, right tool for the job.
And? There is still some excellent information in here about N-Tier anti-patterns. 
And nothing? I made a neutral comment. Just mentioning something.
In your entity model, create a new Entity (Mapped to the Users table) without those columns. Then use that in your queries instead of the users table.
Selecting specific columns is much more efficient than returning all columns. In a large, enterprise application that I've been working on for over a year, the sheer number of .Includes around the site has made it extremely slow. Wherever you can, only select the data you need. Each .Include creates a union and you're returning much, much more data than necessary. Depending on what you're trying to do, you're better off using LINQ to SQL or creating a SQL view to wrap the exact data elements you need and mapping a model entity to that SQL view.
Can you make those properties you don't want each time virtual and then include them only when needed?
You have to use the wstrust channel factory in most of the examples I've seen. There isn't a configuration example for the client side that I'm aware of. You could write a wcf client behavior to expose it as a configurable component. The key words I'm finding a lot of hits on are "adfs identity delegation"
The server_idle_check is one I haven't seen that high up before. I would bet that's the cause of the alert. Unfortunately I don't know what would cause that. Your best bet is to ensure that the max server memory is set to at least 2GB less than the total system memory. This varies depending on the total amount of system memory and other processes running on the server. After checking or setting the memory I would reboot the server and reset the monitor. See if it comes back.
Oh! That'll be great for the unenlightened managers I've been working for who haven't progressed past .NET 2.0.
Multiple data contexts is very useful as well. On my current project we have a lot of entities, so the objectcontext is pretty slow to generate. Splitting out data contexts allows us to improve the speed of the site because each entity isn't being analyzed when spinning up a new context. It's a very practical application. Here's an example of a way to split out contexts: -One context for CRUD entities (entities that users will interact with and update) -One context for read-only entities (drop down values stored in the database) which users will never create or update
I'm also a dev, not a DBA, and have been in your situation. SQL is not a simple product to learn and performance troubleshooting is even harder to learn since it always depends on the environment and workload. That said, I only know of the big important wait types to look out for. On average, page latch, anything with IO, cxpacket, log, and any lck (lock) should all have average low wait times. So in the screenshot you posted I see 2 that are a bit high. The server idle check and the lck one in the first row. The lock wait is not all that unreasonable on TFS if it is a busy server since multiple check-ins at a time with a few associations/links can take a bit to complete. The idle check I don't recall ever seeing in all my research or when running wait helper queries like you ran. Plus the average wait time for it is very high. If you Google SQL server wait types you will easily find some good documentation and brief descriptions of all of them. You can do the memory setting via a script or you can do it via SSMS. Both methods are documented on [MSDN]( http://msdn.microsoft.com/en-us/library/ms178067.aspx).
That's not going to work. The thing is that if you have Customer.Orders, the type in the 'Orders' collection is e.g. 'Order', I can't use another type 'Orders2' which has less columns mapped as the type used in the collection available as Customer.Orders, so I can't use it in an include query. The only way it will work is if you define another relationship, namely Customer - Order2, but that's messy.
Read only entities in EF, how did you do that, or was that an effect resulting from the fact the entities were mapped to e.g. views?
AsNoTracking() indeed makes sure there's no change tracking but you can still persist it (will be seen as new entity). I was wondering whether I had missed a setting somewhere (so you could make an entity readonly and another one read/write, like llblgen pro and nhibernate allow you to do) but an override to SaveChanges is indeed the only way to accomplish it. 
Might I ask what your usage scenario is? The majority of them are Linux/BSD based because of what it required to do this. The OS it sits on top of has to do all the routing in addition to providing the page and managing the session(s). And it's the kind of thing you'd really want running on its own machine/VM, not really doing much else. At bare minimum you need a full-fledged server OS. But also a networking stack that lends itself well to this type of application. While I'm sure there is some hugely expensive enterprise solution like PfSense that sits on top of Windows Server, I doubt there is any open-source .Net solution. Also, since this type of solution has to be integrated from the web server all the way down to the networking stack, I'm not sure it would matter if it's .Net, so much as it runs on Windows. It's not like a library you'd plug into another project. All of that said, I am curious about your usage scenario. I've done work integrating pfSense with a .Net application, so I might have a few tips or pointers, depending on what you're looking to achieve. 
The SaveChanges override throws a NotImplementedException to ensure changes aren't saved to the database. And yes, the models mapped to views are in the read-only context. 
Thanks -- I'm to do research to find a way to integrate captive portal within our "cafe software" type program. Right now, everything is super manual for users that bring their own laptops and it doesn't really log them in via wifi. It's literally the admin pressing an egg timer and hoping we pay attention when it goes off to log them out. Trying to find an API or something that will help do this .. This WOULD run on a server PC, but windows. It's unfortunate most are all Linux-based, because that means it can't be integrated in 1 piece of software. Hrmmm... What to do...... I mean I suppose we can give instructions on how to emulate a linux box and throw on the open source software, but it would be so nice to integrate it within our windows app.
Well, your use case is pretty much identical to mine. So, I can tell you when I had to solve this problem about three years ago, there was nothing on the Windows side (.Net or otherwise) of things that I found that was free or OSS... or even reasonable for a small shop. What I settled on was pfSense in a VM (on a Linux server, but that shouldn't matter) and a voucher system for our POS app, which was written in .Net. It's worth noting that you will need at least two NICs, likely three if you're going to set only part of your network to be managed by pfSense. (I got a pretty cheap dual NIC on eBay) Basically what I did was setup pfSense to require a voucher to connect to the network. pfSense can pre-generate a few thousand voucher codes at a time and export them to CVS. You generate them in batches based on session length (IE: 1000 30min tickets, 2000 60min tickets, etc). Then I had the POS software import the CVS and print a voucher code at the bottom of each receipt, if selected. Though, you could handle the voucher distribution a few other ways than printing them. Mind you, I'm describing the mile-high view of how it worked. But you would need to have at least some experience with Virtual Machines and pretty solid grasp on networking. 
Not sure that will work: say I add a Customer instance and it contains several changed (dirty) order entities in its Orders collection. The Order entity is actually readonly for this DB, so it shouldn't persist any changes: SaveChanges then is called once, so there's no way to block it there. 
I'm pretty sure you can iterate over all changed, added and deleted entries and remove them from the collections before calling the base SaveChanges method, but you may be right.
Mind if I ask what sort of dotnet POS solution you run?
There is parity between the namespaces. If you see Microsoft.IdentityModel just look here http://msdn.microsoft.com/en-us/library/jj157089(v=vs.110).aspx
Http modules are relevant in both .net 4.5 and 4.0. You work with them more when you do direct asp.net programming. When you work with MVC you will use action filters more. MVC is a framework built on asp.net. Microsoft also built web forms on the same asp.net foundation. MSDN docs are a great reference, but I don't think I've ever read it straight through. I typically go to Microsoft virtual academy or pluralsight to learn. 
Okay, this is going to be confusing. There are two major revisions of the CLR (Common Language Runtime) that are still in wide use today - Version 2 and version 4. Version 2 was the CLR used by .NET 2.0, 3.0, and 3.5. Version 4 is what's used by .NET 4.0 and 4.5. So basically, when you're dealing with MSDN just mentally group 2.0, 3.0, and 3.5 together, and group 4.0 and 4.5 together. Now, the current version of .NET is 4.5, however, there is no "ASP.NET MVC 4.5." MVC is one of three methods we have for doing websites in ASP.NET, and the version of the MVC framework we're currently at is 5. It went from 4, which came out sometime around the same time as .NET 4.0, to 5.0, which came out around the same time as .NET 4.5. Oh, and HTTP Modules aren't part of MVC. They ARE a part of ASP.NET, but typically, if you're doing MVC development, you'll want to use filters rather than HTTP Modules. Thoroughly confused yet? Yeah, I personally don't think we've done a great job with out version numbering, and it doesn't help that the CLR versions, the versions of the framework as a whole, and the versions of frameworks like MVC and Entity Framework are all managed separately. It kind of requires you to have a historical context. By and large, the "Other Versions" dropdown in MSDN will let you easily home in on the revision you're dealing with. Remember what I said, the CLR 2 versions are: .NET 2.0 (Visual Studio 2005) .NET 3.0 .NET 3.5 (Visual Studio 2008) and the CLR 4 versions are: .NET 4.0 (Visual Studio 2010) .NET 4.5 (Visual Studio 2012 and 2013) ASP.NET MVC 5 is the current version of MVC, and it runs on .NET 4.5, but generally (with a few exceptions) the documentation for MVC 4 still applies to 5. While MSDN is a great resource for finding specific classes within the Base Class Library, the better resource for *learning* ASP.NET is [ASP.NET](http://www.asp.net) (the website, not the framework). (Disclaimer: I am a Microsoft Premier Field Engineer specializing in .NET and Azure, but this post does not represent Microsoft officially and my opinions are my own.)
I've been writing and developing a .net POS suite (also from scratch) since 2001. I was curious about what others' experiences have been. Cash drawers are generally plugged into the receipt printer. Epson TM T88V seem to be the most common printer (as well as Citizen Business Machines) and accept a printer command that kicks open the cash drawer. (traditionally this was the BELL command, but has changed from manufacturer to manufacturer and generation to generation). 
Well, this wasn't anything with that kind of dedicated development. It was a 6-8 month project, and the goals were tightly defined by the business, so it wasn't exactly general purpose. For instance things like grille ticket support, or transaction timestamp integration with our DVR. I found out about cash drawers working in tandem with the receipt printer a bit late. At that point I had settled on the DYMO, which was needed for it's ability to also print label stickers. But looking at my old notes, I think I had settled on this: http://www.barcodesinc.com/logic-controls/part-cr3003-gy.htm which could be independantly controlled via USB. I thought about throwing the project up somewhere, but I doubt it could be easily reused given how specific it is. Not to mention, since it was developed in realtime while in production, it's not exactly as elegant as could be. 
GhostDoc is one of the first tools I install! It's a great help to get those comments created correctly. The Pro version lets you set up a lot of custom rules that help work around the gibberish - my favorite is a ToString() method being auto-commented with a summary of "Toes the string." LOL
This sounds very interesting... What's a "Captive Portal" if I may ask?
You know when you go to Starbucks/hotel/airport and it'll be like "Hi, welcome to our company: click AGREE to sign in to wifi!" (or can charge/have them make an account)
Super awesome response. I almost danced to know that over 90% of my current domain knowledge can be carried over if I am careful. I think .NET has a very high learning curve, but it's abilities are hugely powerful and customizable over other frameworks. That being said, could you please share with me how you got into .NET and leveled up all the way to become a part of the magic that makes the stew so to speak? Any skills, attitudes, and code lifestyles I can emulate will only make me a better developer. Thanks again. :) 
Great write up as always!
or does anyone know some type of API or something? So these premium apps that are 100% designed for Windows, they made them all from scratch? Man, I don't want to start from scratch, no idea where to begin.. lol. Google has failed me -- the only windows ones are premium and closed code, but everything else is like their own Linux distro. Ahh....
[Visual Studio 64 bit?](http://stackoverflow.com/questions/2516436/visual-studio-64-bit) As for thumbdrive I wouldn't hold my breath on it, VS installs a ton of dependencies and libs, making that portable is far from a couple hours of work.
Use the FileUpload control to save the image somewhere on the server. Then point an Image control at the location you saved the file to. Here's a VB walkthrough of the entire process: ~~http://www.dotnetheaven.com/article/how-to-upload-a-image-in-asp.net-using-vb.net~~ (but you should also read the MSDN page for both controls) **EDIT** That first link is confusing. Here's a simpler example of the FileUpload control in VB: http://www.vbasic.net/how-to-upload-a-file-in-visual-basic-net/
I'm sure the process itself wouldn't be easy by any means. My hope is that if it gets enough traction on UserVoice, Microsoft might take a look into it and invest a bit of funding / developers into it to see how feasible it really is. 
Thank you !!!! I'll try to do it :D
Why? If you can't install VS on the machine you're working on, why would you develop on it? Seems like more trouble than it's worth. 
&gt;does anyone know some type of API or something? Dude, it's not an 'API' type of thing. Like I said, it's not just a login page, or something, it's an entire software stack that manages your network and routing. &gt;Man, I don't want to start from scratch I don't mean to be rude, but 'starting from scratch' means everything from the login page at the top of the stack, down to writing your own network driver in C++ at the bottom. Then there is interfacing with the server and the network adapter, *plus* a service to actually route the traffic, or like, your own RADIUS implementation. If this were a simple task you would have found 10 open-source projects fo .Net/Windows in your first search.
 Protected Sub fvPostProduct_ItemUpdating(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.FormViewUpdateEventArgs) Handles fvPostProduct.ItemUpdating ' Get the connection string from Web.config. ' When we use Using statement, ' we don't need to explicitly dispose the object in the code, ' the using statement takes care of it. Using conn As New SqlConnection(ConfigurationManager.ConnectionStrings("UserCS").ToString()) ' Create a command object. Dim cmd As New SqlCommand() ' Assign the connection to the command. cmd.Connection = conn ' Set the command text ' SQL statement or the name of the stored procedure. cmd.CommandText = "UPDATE tblItem SET Prod_Name = @Prod_Name, Img_Path = ISNULL(@Img_Path, Img_Path), Brand=@Brand, Model=@Model, Description=@Description, Price=@Price WHERE Prod_ID = @Prod_ID" ' Set the command type ' CommandType.Text for ordinary SQL statements; ' CommandType.StoredProcedure for stored procedures. cmd.CommandType = CommandType.Text ' Get the field names from the ' EditItemTemplate of the FormView control. Dim strProdID As String = DirectCast(fvPostProduct.Row.FindControl("lblProdID"), Label).Text Dim strProdName As String = DirectCast(fvPostProduct.Row.FindControl("txtProdName"), TextBox).Text Dim Image As Image = DirectCast(fvPostProduct.Row.FindControl("imgPicture"), Image) Dim strBrand As String = DirectCast(fvPostProduct.Row.FindControl("txtBrand"), TextBox).Text Dim strModel As String = DirectCast(fvPostProduct.Row.FindControl("txtModel"), TextBox).Text Dim strDescription As String = DirectCast(fvPostProduct.Row.FindControl("txtDescription"), TextBox).Text Dim strPrice As String = DirectCast(fvPostProduct.Row.FindControl("txtPrice"), TextBox).Text ' Append the parameters to the SqlCommand and set values. cmd.Parameters.Add("@Prod_ID", SqlDbType.Int).Value = strProdID cmd.Parameters.Add("@Prod_Name", SqlDbType.NVarChar, 50).Value = strProdName cmd.Parameters.Add("@Img_Path") = Image cmd.Parameters.Add("@Brand", SqlDbType.NVarChar, 50).Value = strBrand cmd.Parameters.Add("@Model", SqlDbType.NVarChar, 50).Value = strModel cmd.Parameters.Add("@Description", SqlDbType.NVarChar, 200).Value = strDescription cmd.Parameters.Add("@Price", SqlDbType.Money).Value = strPrice Dim uploadPicture As FileUpload = DirectCast(fvPostProduct.FindControl("uploadPicture"), FileUpload) If fileUpload.HasFile Then Try Dim image As String = "~\images\prod\" + fileUpload.FileName fileUpload.PostedFile.SaveAs(Server.MapPath(image)) Catch ex As Exception lblImage.Text = "ERROR: " &amp; ex.Message.ToString() End Try Else lblImage.Text = "You have not specified a file." End If ' Open the connection. conn.Open() ' Execute the command. cmd.ExecuteNonQuery() End Using ' Switch FormView control to the ReadOnly display mode. fvPostProduct.ChangeMode(FormViewMode.ReadOnly) ' Rebind the FormView control to show data after updating. BindFormView() End Sub ============================================= Can you tell me how to write these two lines properly ? Dim Image As Image = DirectCast(fvPostProduct.Row.FindControl("imgPicture"), Image) cmd.Parameters.Add("@Img_Path") = Image My image datatype is nvarchar. Thanks in advance.
Are we doing ironic upvotes now or what's the deal here? Or is this supposed to be in /r/programmerHumor? edit: I'm asking because of the trainwreck in the comments, stemming from 1) Those two requests are two totally separate issues, 2) Both of them are immensly resource-heavy tasks which doesn't make much sense to me for Microsoft to prioritize. (On the 64 bit issue [read this](http://blogs.msdn.com/b/ricom/archive/2009/06/10/visual-studio-why-is-there-no-64-bit-version.aspx))
You should separate out these two things into separate suggestions. It's not helpful to have them together like this.
&gt; Can you tell me how to write these two lines properly ? &gt; Dim Image As Image = DirectCast(fvPostProduct.Row.FindControl("imgPicture"), Image) &gt; cmd.Parameters.Add("@Img_Path") = Image &gt; My image datatype is nvarchar. &gt; Thanks in advance. You need to save the image's path (location) in the database. You're not saving the image directly into the database. But before you can fix either of those lines (and some other issues), you'll need to add the FileUpload control to your form. Dim uploadPicture As FileUpload = DirectCast(fvPostProduct.FindControl("uploadPicture"), FileUpload) This line not only really, really wrong, but also shouldn't be needed, since you don't need to define the FileUpload control once it's added to your form.
Read the article linked in the post linked in the parent post by irwiss about x64 and why it's not really worth it. This feature request is a typical 'add this, it's great' request from people who have no clue about the work required and even what the net effect will be of what they're requesting. What's sad is that this behavior is often seen by non-developers requesting features from developers, but now it's seen among developers as well. 
Id rather my VS not run off a slow ass thumb drive but 64 bit would be neat
&gt; I'm also a dev, not a DBA, and have been in your situation. SQL is not a simple product to learn and performance troubleshooting is even harder to learn since it always depends on the environment and workload. This makes me feel better. I agree that SQL is not a simple product to learn and performance can wildly wary since it depends on environment and workload. &gt; That said, I only know of the big important wait types to look out for. On average, page latch, anything with IO, cxpacket, log, and any lck (lock) should all have average low wait times. So in the screenshot you posted I see 2 that are a bit high. The server idle check and the lck one in the first row. The lock wait is not all that unreasonable on TFS if it is a busy server since multiple check-ins at a time with a few associations/links can take a bit to complete. The idle check I don't recall ever seeing in all my research or when running wait helper queries like you ran. Plus the average wait time for it is very high. If you Google SQL server wait types you will easily find some good documentation and brief descriptions of all of them. Agreed. My TFS server is used daily, but isn't super maxed since we are a small shop. &gt; You can do the memory setting via a script or you can do it via SSMS. Both methods are documented on MSDN. Right, this helped a lot. I am seeing some weird stuff with the memory already. I'll give an update with what I find. I need to figure out some stuff about the OS first before I change the memory. 
You should be testing the `e` variable in that event and not the `favControl.IsNotLoggedIn` setting. In WebForms, those events are not bound because it's a post back and you're explicitly not data binding the events anymore. You should inspect the `e` value in the `ShowLogin` event to handle what the event is passing you. You can probably cast it to a specific type of event for compile-time checking.
If you're going to downvote a completely legitimate and helpful response, please explain why.
I can't inspect the `e` value because the event is not firing so `ShowLogin` is never executed.
You might want to try the rptVideos_ItemCommand event, and see if that is fired before the IsNotLoggedIn event. Because you might be able to wire up a handler to it in rptVideos_ItemCommand prior to it being raised. 
Find people whose blogs and Twitter feeds you like to read. This will help you keep tabs on what's new. A great place to start is with Scott Hanselman (/u/shanselman), who is a program manager in Microsoft. Accept that you will NEVER know everything, and that what you know today is going to change tomorrow. Practice reading and grokking code so that you can easily learn new things as you need to. 99% of my job supporting Microsoft's Premier customers is being able to understand what they're asking and knowing the right places to find answers for them. If you were to sit me down and ask me "job interview" questions - like, trivia and theory and the like - you'd think I sucked. What makes me pretty good at MY job is being able to say, "Okay, I get what you're asking. I don't know the answer off the top of my head, but let me go find out." Then I actually find out and am able to show the customer in a way they can understand. IMHO, it's the best job in the company. Well, /u/shanselman's gig ain't bad... ;)
&gt;In WebForms, those events are not bound because it's a post back and you're explicitly not data binding the events anymore. But weren't they wired when the page loaded for the very first time?
You might be able to accomplish what you're looking to do with [D3DImage](http://www.codeproject.com/Articles/28526/Introduction-to-D-DImage)
A Grid with a [SkewTransform](http://msdn.microsoft.com/en-us/library/system.windows.media.skewtransform\(v=vs.110\).aspx) might do it.
I made one in Silverlight once, used a bunch of polygons. No perspective transform, but those aren't needed for simple isometric layouts anyway. 
WPF has support for 3D rendered content via the UIElement3D class. I don't know very much about it, but it is likely worth looking into.
Why 74 bit?
There ARE 10+ open source projects, just not .net/windows. I also have a team with me; I'm just being lazy. Plus there are people that have already accomplished it .. they are just not open source. FYI there is an API out there, .NET based actually (directly from Microsoft!), it's TOO new; only for windows 8.1+ though, and Windows phones .. even development requires 8+ It doesn't work on clients for mac/android/win 7 or lower .. a bit useless now, but awesome for later. Never say never, things exist, the internet goes deep.. which is why I come here for those that have maybe found something that I missed. And no need for network driver, we'll just require a 2-slot NIC card, one to internet/wired, and the other to wifi router, if it's split no need for that. That's why I think it's possible to do it somewhat easier because no need for REALLY low level stuff
Hey, thanks for the reply. Heres some more detail to kind of give you the implementation idea I'm playing with: * The visuals of the tiles will be parsed in from a tilesheet, png so no real 3d is actually going to be implemented. It's just the illusion of 3d (2.5D I guess). * By map editor I mean the user can place and drop the tiles, and it'll export the data into an XML sheet, i.e which sprite to use correlating to an integer id * Nope, there's no animation requirements or anything. It's purely designed to be an interfacing tool with my c++ game engine. I've actually [mocked up an image of my interface](http://i.imgur.com/tbYPuDy.png) to help with some visualisation of what I mean. Please note, the file browser is null now as I'm only going to use a specific set of png tiles, so there will be some reworking. I'm primarily concerned with whether the grid visualisation will be possible to accomplish. Thank you **so** much for your help.
Totally doable. The tiles are just regular square images with transparent parts. You just need to make sure they're indexed so they look right when you snap to the grid and that the z order is correct. 
Yeah, I'd look at the Viewport3D from the link I posted then. The class supports drag and drop so you could do something clever about determining which tile-space is under the mouse when dragging to highlight the square that the tile will be dropped onto when they release the mouse button.
I would, just passed it by my tutor though and he unfortunately said I'm restricted form using any direct 3d related stuff. The game and map aren't actually 3D though, so I'm thinking if I can draw a 2d grid and somehow convert the grid into isometric space, maybe using the skew or something, then I can create the illusion of isometry. Bit of a shame about the d3d though as it looked good. I'll have to figure something out. I'll keep you uys updated on my progress!
Sounds like a basic firewall / proxy. Most implementations are in c due to speed and memory footprint, but technically you can implement the concept using any language. http://www.codeproject.com/Articles/5144/An-Easy-Firewall-Application
We use spa but only use c# for business logic and controller actions. The rest is done using ko or angular depending on the app. I dont mind the. Net spa template but its lacking in certain areas. Have a look at john papa course on spa's its a nicer starting point imo. Although if you understand the basic .net one first it will make things easier
Learn to build a WPF control with an overridden onrender. WPF is powerful and fantastically extensible. Under it's outer layer of convenience features is a well thought out and powerful engine. You'll save a lot of time just writing it yourself. WPF is a great tool for this job, if you learn to extend it a bit. When in doubt, go deeper. Based on your mockup, I'd use 9 panel .png tiles (only three of which visible in any specific view), and spend a little time learning about cutting up bitmaps programmatically in WPF and applying transforms. Overriding OnRender gives you direct access to draw commands. TLDR: What you're looking to do is easy with custom code and a little math, hard if you try to break something preexisting into doing what you want. Sounds like your professor is clever.
PM me if you have any questions. I'd be happy to help. The power and flexibility of WPF is criminally under-documented. 
Wow thanks. I'm actually relatively excited about trying to work this out! He released the framework today so I'm going to download it when I get home, wrap my head around the xml and window designer, then start trying to make this work. Thanks massively for the offer of help! I'm sure I'll have some questions, it's great to know theirs people enthusiastic to help me learn out there who I can ask!
I don't do this much but IIRC m0n0wall would let you setup a captive portal with a URL rather than hosting it itself, you should be able to do anything you want behind said URL. TFM is at http://doc.m0n0.ch/handbook/captiveportal.html
My biggest hurdle moving from the MVC cshtml world was coming up with a consistent way of handling data flow between the client and the server. It seems easy when everything is working, the issues unveil when things start blowing up. Localization is also a soaring pain to work out especially if you need to use the same resources in different apps simultaneously. Automated client side tests... yeah, maybe some day. Prepare to spend time on working out how you build and deploy (and to bust the browser cache). With all that said, I really like the ecosystem, teaches you a lot of things but you have to work for it.
&gt;now I can't get anything to redirect AUTOMATICALLY Google a dhcp server, give your own DNS ip to clients in DHCP response &gt;"www.blah.com" ... redirect to \SERVER\index.htm DHCP gives your local DNS which will resolve anything to your server's IP, bind IIS to *:80 &gt;Let's say they log in successfully, can I give them internet access? Add rule to your firewall, set your DNS to proxy requests to a real DNS. DNS and DHCP libraries exist in C# iirc
All of these hurdles are easy to overcome, you just haven't searched hard enough. If you go SPA, abandon .NET MVC and go WebAPI all the way. Use a SPA framework like AngularJS and use it properly so you can do unit testing.
Thanks guys -- I especially like this comment ^
One more question about the streamline: DHCP server is running on server PC &gt;&gt; person connects to wifi (DHCP server turned OFF on router, turned ON on server PC) &gt;&gt; server gives them local DNS &gt;&gt; because IIS is bound to *:80, any website goes to my IIS portal &gt;&gt; Am I understanding so far? Now, to give them inet access .. "Set your DNS to proxy requests to a real DNS" I don't seem to understand. So let's say on IIS they click a button "Agree" to login... is this firewall rule a trigger I have to code after the client presses the button? Or is it something I already set in the firewall? I understand the concept of blocking internet, redirecting all 80 ports to IIS, but after pressing the button to login to inet, I'm having trouble understanding that final part to grant this user access to WAN ~
I'm currently building a SPA and decided I really needed a better understanding of JavaScript. It's easy to overlook JavaScript's idiosyncrasies if you've been using it for years (which I have) but you're going to spend a lot of time in the client so I decided to ditch the templates and start from the ground up. I also decided against Angular which i've been using but have switched to Backbone because it's less opinionated and I can understand the code i'm writing a lot better. For me, templates are only useful as boilerplate for stuff you already know - they are for convenience not really for learning.
To be a rebel, I'm leaning away from spa. I more like the idea of progressively enhanced pages instead of going all in on something like angular. We very rarely need two way databinding. Tying our app to a JavaScript framework to gain....I'm not sure what seems like something my team will have me for in a few years
Can't you format your partition and re-install Windows and VS2010 from scratch?
That really is a last-resort option. Reinstalling an OS with all my current apps and configurations because one application refuses to uninstall properly is not something I'm keen on doing.
Reinstalling would be the most sensible option to be honest. Vs is a pig. If you want to try the surgery route you could use something like sysinternals procmon.exe to see exactly what the installer is looking at and then figure out how to remove it.
&gt;Am I understanding so far? No, local DNS should resolve all names(google.com etc) to whatever IP your IIS is at with a really tiny TTL(a few seconds). IIS site bound to *:80 will just have any connection to port 80 handled to the portal's site, if the IIS bound hostname not * iirc you'll get some server error or another(because of the "Host: google.com" on the http header). &gt;is this firewall rule a trigger I have to code after the client presses the button? Yes, you code whatever's needed to get your firewall to "allow" a mac address, and you code whatever's needed to get the local DNS to stop resolving to IIS' IP and instead do the resolving via internet DNS (become a DNS proxy)
After you installed VS2010 and SP1, all the next Windows updates should have installed many hotfixes and security updates for VS after you run a Windows update (You can see them by going to Control-Panel-&gt;Programs and Features-&gt;Installed Updates). Did you try uninstalling them?
You don't understand... That's the equivalent of asking me why I removed a DVD from a drive when I was done with it. Microsoft's installer is STUPID. I installed **SQL Management Studio 2014**, which installs an updated version of the Visual Studio Shell as part of the install procedure.. Then I uninstalled **SQL Management Studio 2014** and deleted it from my machine (note that this has nothing to do with VS2010). The problem is that VS2010's installer now associates VS shell with SQL Management Studio 2014, which it should not do! Worse still, it expects you to keep the software and install folders on your machine until you decide to uninstall VS2010. This is not an uncommon problem because many applications install some version of VS Shell as part of their installation. It gets worse than this. Some setup files extract into **temporary** folders on your machine during the installation folder. Obviously, those temporary folders will eventually get deleted. But Visual Studio 2010 just doesn't care. It expects those folders to remain around forever otherwise it will just refuse to uninstall correctly.
It is my experience that you don't uninstall anything of a significant size from windows. This includes anything from Microsoft, Adobe, Borland or Oracle. It is much simpler to start over from a clean install of Windows.
Respectfully, you are not reading correctly. &gt; Some time later I figured I didn't need Management Studio any more, so I **uninstalled** it and deleted the folder. In other words, I uninstalled the software **correctly**. Then I proceeded to delete folders created by extraction. This procedure has NOTHING to do with Visual Studio. Here's what happens: - You download a setup file from the web. - It extracts to your download folder by default. - It installs - You uninstall it and delete the extracted folder - Visual Studio now refuses to uninstall.
Again... Stop deleting folders. That's your problem. You are trying to outsmart a very smart uninstaller. There's a reason it keeps those folders - usually to account for the linkages with other programs that are now screwing you up. 
I have 2 versions of visual studio currently on this machine (2010 and 2012). I also have sql express 2008 and ssms 2008 and office 2010. Our IT department has us scheduled for the next version of windows after release but it will probably be 2016ish. About a month or two before that happens we will install VMs and update our codebase to build on whatever the latest version of VS is. 
&gt; You are trying to outsmart a very smart uninstaller. The uninstaller has NOTHING to do with the extracted folder. Please try to understand this. You can right click on the downloaded file, then choose the option to extract it somewhere. This is not part of the install process. All you're doing is extracting the contents of a compressed file. You can run the setup whenever and from wherever you want. The problem would have occurred (and does!) if you had run the installation from a CD. In other words, if I had burned the contents of the self-extracting EXE (or the contents of the ZIP file) on to a CD and then installed it, I would have had exactly the same problem. Visual Studio would have asked me to insert the disc for software I had installed YEARS afterwards before it will successfully uninstall. It does NOT have a very smart installer. Look, here's a very simple example of how stupid VS's installer is: http://i.imgur.com/0INlSTr.png How am I supposed to know what this is referring to? Again, try to understand this - the extracted files have nothing to do with the installer. 
Not sure why you think we only have former students as teachers, because we have a whole staff of senior developers that do the majority of the teaching, including myself. We do have other staff members that are TAs and helpers, but there is always a senior staff member available to help with issues. There are also instances where senior staff needs a break and TAs fill in, but those are rare.
I think we have had all the same issues. My conclusions have been: 1. don't install anything without careful testing in a vm clone of the desktop 2. don't uninstall anything
Have to say it's disappointing to hear that this is still the best solution in 2014.
You can find a more extensive [summary of some of this week's planned announcements regarding Microsoft and their movement towards a cross-platform and open-source world here.](http://blogs.msdn.com/b/somasegar/archive/2014/11/12/opening-up-visual-studio-and-net-to-every-developer-any-application-net-server-core-open-source-and-cross-platform-visual-studio-community-2013-and-preview-of-visual-studio-2015-and-net-2015.aspx) Additionally, they are [live-streaming the entire Connect() event here on Channel 9](http://channel9.msdn.com) if you are interested in following along. 
I wonder how this will affect Mono. &gt;The challenge is that the Windows implementation has one code base while Mono has a complete separate code base. The Mono community was essentially forced to re-implement .NET..." Hopefully they can now work on the important parts instead of re-inventing the wheel.
This is a natural progression. The only thing I have to say is "about time".
I personally would like to see a merging of the code base, with compile switches for platform-specific differences. I am open to API tweaks to facilitate a general solution to differences in the way things are done on different platforms, if necessary. However, I think it's unlikely that will be necessary. 
Would it be idea to start integrating TDD as I write new features, instead of trying to write tests for existing code?
If this means that we will one day be able to build Windows/Mac/Linux/iOS/Android applications all from .NET, I'm **beyond** excited! 
Does this mean we're finally going to stop getting shit on by all the Linux nerds?
No, Visual Studio is not coming to Linux/OSX. It's also very unlikely, as it is based on WPF. And Visual Studio is a lot bigger than **newly written frameworks**, so there's no way they can open source it.
Does anyone think Visual Studio will at some point be available on Linux? It might be wishful thinking but I was curious as to others' thoughts on it. 
This Editions comparison website needs an update: http://www.visualstudio.com/en-us/products/compare-visual-studio-products-vs.aspx
Heard that it works with Clang or something. 
It is restricted a bit... If you have more than 5 people on your team you need to purchase a license of Visual Studio. Still... Totally freaking awesome what MSFT did today. 
The .NET framework.
Yep, they're saying VS will come for both Mac and Linux! 
Full restrictions: http://www.visualstudio.com/products/visual-studio-community-vs
[Download page with iso option](http://www.visualstudio.com/en-us/downloads/download-visual-studio-vs#d-community). [Indirect iso download](http://go.microsoft.com/?linkid=9863609).
basically most of .Net remains proprietary. They will release the Core on which for example Mono can build to duplicate the main .Net. However, I'm not yet sure (and haven't put much time in it as of now) if you can use the core to build simple C# programs with async/await and GC for Linux or Mac.
&gt; if you can use the core to build simple C# programs with async/await and GC for Linux or Mac. You can. The ASP.NET vNext runtime can be used to create console applications. Here you can either use Mono or the new .NET Core framework.
Stay away from WebForms. It was shit when it was released and it's still shit nowadays. You will not learn anything of use by learning WebForms before moving to MVC.
If I was to be learning now I would learn the MVC conventions first. While I do believe that WebForms is still relevant for some situations (very quick prototypes for example) in most situations MVC will be easier to work with and scale better in terms of development practices. MVC is clearly where most of the focus is now. You would be best served starting here. You will probably find it fairly straight forwards to pickup WebForms later once you have mastered MVC if you need it (probably will for working with older systems).
I get where you're coming from. I did webforms at university and didn't really like it. But when i started my job they have some applications that are WebForm based. I've been following this book http://www.amazon.com/Professional-ASP-NET-MVC-Jon-Galloway/dp/1118794753/ref=pd_cp_b_0 . It seems ok but as im not that good at .net it doesn't really go in depth. Got any tips?
It does seem like MVC &gt; WebForms. I'm trying to get better at it by following this book http://www.amazon.com/Professional-ASP-NET-MVC-Jon-Galloway/dp/1118794753/ref=pd_cp_b_0 . But I feel like it assumes you know WebForms or previous MVC's to be able to follow it. Do you have any advice where I could start as a beginner approach? Thanks
It was a while ago since I really had to learn these things. But Microsofts Virtual Academy seems to have some good tutorials http://www.microsoftvirtualacademy.com/training-courses/developing-asp-net-mvc-4-web-applications-jump-start For me personally when I am learning new techniques I try and find a really good tutorial and work through that. Once I have the very basics down I will then work out a small project that I can undertake using the technology and using this I will be able to see how it actually works. That way I can look up new concepts as I get to them in the context of my own code.
vNext baby! 
Unless you work as a consultant that only does greenfield (new) applications, you will be fixing older code bases for a long time. You will also maintain code bases that can not be rewritten in newer technologies due to cost and complexity. So learning older stuff is unavoidable. 
100% like ratio. Lets keep it up!
This. I switched from Web Forms to MVC a few years ago and haven't looked back for new projects. But most programming jobs have you working on existing legacy applications.
I wouldn't start with WebForms unless there is an immediate opening that will pay you to work with WebForms. Learn MVC, and on the odd chance that you need to do WebForms later, you can fill in the missing bits much easier than you would be able to going the other direction. 
WebForms was designed for VB6 developers to move to the web (people like me in fact). It soon became apparent they weren't the best tool for scalable web solutions and are largely frowned upon. You can build things quickly and they have their use but if you don't know them and are a professional you shouldn't bother. Go straight to MVC.
vNext isn't Visual Studio - there are no plans I've heard of to get VS running on non Windows platforms.
Since WebAPI is part of MVC, it is open source: https://github.com/aspnet/Mvc
No its not Visual Studio, but thats the point. Being able to what you do in VS, with different tooling on multiple platforms. 
So true. In a perfect world I would say go straight to MVC and forget webforms ever existed. But that probably isn't reasonable. Webforms will find you...
&gt;I was thinking to start by working with WebForm tutorials and then move on to MVC. There is no reason to do this. MVC does not build on WebForms in any way. MVC is completely different and unambiguously superior. If you need to learn WebForms for a job, learn it then, but there is no need to spend a moment's thought on it until then.
Have a look at .Select(new { foo = m.foo, bar = m.bar}) 
I usually create simple database views for something like this (ie SomeModelView) and make to that. Generally views are very easy to work with in EF but SP not so much.
Wow, I remember that article! I think what you're looking for is advice about: * WCF, which will provide numerous a alternatives to the XML/hot folder approach. (But then, you might like the XML in a hot folder approach, which is just fine.) * Dependency injection. There are lots of ways to do this. I think that writing your own loader isn't a bad way to do it, and it's not a whole lot of, but there are certainly alternatives at this point.
They're planning to get it working on all platforms...
No one has said or claimed this in any release or post from MS. I really wish people would stop saying it.
@POST public Response createStudent(FormCollection myForm){ var name = myForm["Name"]; } 
Sure sounds like they're the same thing. *Eventually* they have to slap a number on it.
So what ? You can get Virtualbox for free and a cheap copy of windows for 30$ and you are able to use basically the best IDE on the market for cross plattform development.
*vNext* is a Code word for the next version. The last *Visual Studio vNext* is now called Visual Studio 2013.
Just to add an interesting observation, it appears Microsoft.com is web forms? http://www.microsoft.com/en-us/default.aspx Or is this clever MVC routing to maintain SEO? 
about time! 
Not these days. People need to do everything.
I'd forget the certs to be honest. We have 45 developers and we don't have enough certs to get partner status. We *all* do MVC stuff.
You're working for the wrong company. ಠ‿↼
You got me there. :)
I'm junior developer and I thought a certification might give me an edge, specially after I read that several corporate companies prefer a developer with a certification.
I'd avoid those companies as a rule. I've worked for a few (I was certified in the distant past) and you're up for a long shitty week and a low pay cheque if they're box tickers. Look for a smaller company and show them you have experience I.e do some private work and go from there. Experience really talks more than certs these days.
And why would you. Sure you CAN do .net dev in other platforms but look at how much nicer it is on our shiny flagship.
Really? I swear I saw it on the Roadmap somewhere but much later down the road. Guess I'm full of shit then. 
.Net, not necessarily VS.
I think this application really does two key things: dynamic loading of implementations and task scheduling. It sounds like you are mostly asking about dynamic loading, so I'll respond to that first. The primary way that this is accomplished is via MEF. I haven't really read this article, but it looks like a decent overview: part 1- https://code.msdn.microsoft.com/Creating-a-simple-plugin-b6174b62 part 2- https://code.msdn.microsoft.com/windowsdesktop/Creating-a-simple-plugin-b45f1d4e Regarding the task scheduling, you really don't have a lot of good options. The tried and true framework is Quartz.net. It's very enterprisey, has tons of complex functionality, and is not very nice to work with imho. That said, there isn't much that has the same level of functionality. We've been using hangfire, a more limited but very nice background task framework that has some limited recurring capabilities. Hope that is helpful. 
I heard from someone that was at a MS conf today that they are going to hook intellisense into Sublime text on macs, so my guess is that is the approach they are going to do for cross-platform dev at least in the near-term.
[omnisharp](http://www.omnisharp.net/)
How well does xcode work on windows?
What some are trying to do is bring IntelliSense everywhere with [OmniSharp](http://www.omnisharp.net/)
Second this recommendation. The worked example is very comprehensive, and followed by in-depth discussion of the various bits of MVC. Plus if you don't have dependency injection or unit testing experience, you get that as a bonus!
.NET has not been completely open sourced and it also won't. The new .NET Core framework has been open sources. This is a complete rewrite of parts of the .NET framework (and is still in progress) with focus on server systems (cloud hosted). Open Sourcing means that you can see the source of the .NET Core framework online. You can download it, you can compile it yourself. If you discover a bug you can fix it yourself and ship your application with the fixed version. You can send a pull request to Microsoft for your bugfix. This means: "Hey MS, I have fixed this bug with this code changes, please add it to your source". So you can participate in the development of the .NET Core framework yourself. Also the development of the .NET Core framework is done in public. You can follow the progress on GitHub.
From the docs I read it's actually just Pro. Only difference is that if you have more than 5 people in a business you need to pay for it. 
Oh I see, so it's perfect for a single dev :)
There's always been the [reference source](http://referencesource.microsoft.com/). But, I don't think Microsoft ever said that's the source that the binaries are compiled from. That will be the case for the stuff release the other day. 
That's exactly the point I think. They want to make it a no brainer for enterprise development and for independent projects. In they want market share and know what they are doing. :)
It's pro. I installed it yesterday and then I ran the installer a second time, it then said "Visual Studio Professional is already installed" 
More info from the .NET Framework blog: http://blogs.msdn.com/b/dotnet/archive/2014/11/12/net-core-is-open-source.aspx Highlights/context from ComputerWeekly: "Although the Mono community already allows developers to build and run for Linux and Mac OS X, the open-source .Net implementation aims to make cross-platform capabilities easier." http://www.computerweekly.com/news/2240234649/Microsoft-moves-Net-to-open-source-framework 
Yes, as far as I can know ASP.NET vNext became ASP.Net 5. During a ASP.Net 5 talk yesterday with Damien Edwards and David Fowler they mentioned a vNext Jabber room, or something to that affect, and said "Oh, I guess we need to rename that room to ASP.Net 5."
As a heads up it has already been stated by Miguel (head of the Mono team) that they will be merging their changes and plans with those of the OSS .NET 5.0 effort.
Hmm, so this means .net applications running on other platforms just got the official go ahead (and helping hand) from Microsoft.
Agreed. However, its probably easier to learn MVC first and then figure out Webforms when it becomes necessary. MVC will teach you how to do web programming. It doesn't abstract away things it shouldn't (e.g. no UpdatePanels, no SessionState black box post variable). If you learn MVC, you will actualyl learn how to write HTML and JavaScript
Its been that way for a few years now, MS has contributed to Mono and the Mono team has been contributing to .NET. This just makes the Mono team's involvement in the project fully integrated and official.
Oh man, thatll be awesome. Like VsVim awesome.
It should, since VS CE is basically VS Pro repackaged.
I applaud this. I applaud Microsoft. This basically means my PhD research on my Linux box will use .NET when appropriate. However, as a fan of Microsoft, anyone else concerned about the long term effects this will have on the Windows platform? Anyone at Microsoft who hangs out here willing to offer some perspective on this legitimate concern from developers? 
So what kind of private projects, in general, show the appropriate chops to anyone from a startup to serious corporation? 
If you are writing software for resale also consider [Bizspark](http://www.microsoft.com/bizspark/) which gets you an MSDN ultimate subscription, some production licenses for SQL etc, $150 a month Azure credit etc. Its free for two years.
Back in 2007 when they released the ref source they stated it was the production code, I don't see much of a reason why they would spend time modifying the ref source when its trivial to reverse the C# from the IL anyway.
Sure! Thank you!
It does have restrictions...but it is at least better than the earlier completely restricted version...
No, but it would not suprise me if jetbrains made an cross platform IDE for C#.
You can "watch" the repo and be notified by email when it comes up: https://github.com/Microsoft/dotnet
https://github.com/Microsoft/referencesource this is the real deal according to de Icaza's blog. MIT license and all.
Cool but ..... Why?
null conditional operators, so nice. 
I think this is meant more for using .NET code and objects in a JS application like node or whatever.
exactly what I thought... why? It could have been a crossplatform engine to run a single threaded (!) javascript app, but the macosx and windows API are not even unified.
Next up: We created after market motor mounts and a wiring loom for your 2010 or later Porsche 911; so you can finally replace it's engine with a donor engine from a second generation ford focus.
?.
That's a very good question, DEEP_ANUS. 
&gt; This is *basically* Pro. Yes, but there must be some difference--otherwise Pro wouldn't still be a thing.
I started applauding when he showed the new string interpolation.
Isn't Chocolatey going to be deprecated by the Windows 10 package manager? Maybe that has something to do with the reluctance to financially back Chocolatey. Edit: Also, Chocolatey is not a dependency manager for .NET development. That's Nuget. Chocolatey installs software to the operating system. 
Nope, C# versions get rolled with new VS versions. But remember there is the community edition of VS now.
Professionals can't use the community edition. 
At work we are still on VS2010 and want to upgrade soon to VS2013. I want to go to 14 too, just a small pain to upgrade and upgrade again 6 months. Still worth it.
The VS14 CTP1 and CTP2 could not be installed side-by-side with VS12. VS14 CTP3 and 4 could be installed side-by-side with VS12, but it was not recommended. The newly released VS14 Preview can be installed side-by-side with the VS12 Community edition, but it is still not recommended. But with me it works without problems.
Do you have an MSDN license?
Correct. Your MSDN should entitle you to the latest versions of almost all of their software. Obviously this depends a bit on your subscription. I think for us we get the latest OS and the latest version of VS/developer editions of many other applications.
What I read is that if you first install vs.net 2013 and then 2015 preview, C# files won't open in 2013, you have to do a repair install of 2013. Not sure whether that will affect loading files in 2015 or not. 
Totally agree. All of that combined with their new "open source" drive with Xamarin. It is a good time to be a .NET dev!
Or.. You just change the setting in Windows what application to use for opening this extension?
Per Rob on Herding Code Chocolatey will be a channel option for the new Windows Store. (I'm mobile so don't have link handy but the HC show notes broke it down) The more alternatives to the corporate owned channel the better IME. :)
Brian Lagunas (Infragistics/WPF) has (install it side-by-side with VS 2013) and has been blogging about it, http://brianlagunas.com/installing-visual-studio-2015-preview/ BTW, VS 2013 Community edition really is VS 2013 Professional with a license and name change. So if you see "Community" think "Professional"
I still fail to see what it has to do with .net development?
If you're on VS2010 SP1, the solutions are compatible across all of 2010SP1, 2012 and 2013 (once converted).
Are you familiar with the history of Chocolatey and NuGet. Or Nu/Nubular? They are all related and largely inter-dependent and created by the same people.
These too are by and for .NET developers. Most all the tools were created by (or ripped off from) *cough* "inspired by" by the creators of Chocolatey (Nu/Nubular).
Ah! No more null checks decorated everywhere.
No, I think you're confusing what Chocolatey is really for. It's more for systems admins and the like to deploy software - software that may well be .net but not necessarily. It would be useful for a developer in terms of spinning up a new developer machine quickly but it's not really for helping developers any more than say Ninite is. It's a great project, it's worthy of more funding and it has a great purpose, I just don't see what that purpose has to do with this sub. &gt; Most all the tools were created by (or ripped off from) cough "inspired by" by the creators of Chocolatey (Nu/Nubular). I think you mean NuGet? Which is already well established, has great support and does what I think you seem to think Chocolatey does?
It's all pretty much in the link you posted, under "Preparation resources"..
Yes.
Yeah, glad it made it. I think we have a different definition of "time to spare". ;) :) :D felt pretty down to the wire for me.
That's only if you're using a collection which returns null if the key can't be found. Most of them throw exceptions.
You can. The menu command for "toggle breakpoint" will insert the breakpoint at the cursor's location. I think the keyboard command is F9 but don't remember for sure
Thanks not sure how I missed that! Have you taken the test? It seems like those links don't go into enough detail to be able to pass.
Are you using a local mdf database? If you are you can check if it exists by clicking the button under Solution Explorer that says "Show All Files". Then under App_Data you should see a .mdf. What is the connection string you see in your Web.config?
Most of it - 75%+. I work on Unix platforms as well which accounts for the other 25%
To be honest, it sounds like you just want someone to teach you Azure. Perhaps you should consider going through some tutorials or cloning a few repos before doing the exams.
Yea , that's what I was thinking. That's the most interesting way of stating a file association lol
There is no VS2014, only VS2013 (version 12) and VS2015 (version 13)
I bet you are missing a connectionstring
OneGet is a package manager aggregator - it has a Chocolatey provider in addition to other providers (like msi provider, ruby gems, etc). There is a lot of misunderstanding there, so yeah, that's why we've tried to highlight that everywhere we can.
It's written in .NET? :) 
Makes sense. Developers use it quite a bit as well, so I think the relevance of Chocolatey is fine here. I could be lost though on what things should be discussed here. If tools for .NET, I think it is fine to talk about Chocolatey since you can set up your development environment and configuration with it. If libraries for .NET dev, Chocolatey.core is going to be a nuget package for folks to include in their applications. 
I think just3ws is referring to the original Nu/Nubular project, for which the team working on it merged with MS on NPack that was renamed to NuPack (to signify the merger), and was later renamed to NuGet. 
the definition which editor to open for which file isn't a windows setting but a definition of the editor vs.net extension (everything is an extension in vs.net) when it registers itself with vs.net, so it's not something to do with the file extension in windows ;) 
Note that while significant portions are open source, much of what was announced is not *yet* open source. They've promised to open the JIT+GC (and given recent developments, I'm inclined to believe that), but that's not happened yet. You can take a look at the repo's, the assuming the README's are accurate it's easy to see the current status of the OSS push: https://github.com/Microsoft/dotnet
This submission has been randomly featured in /r/serendipity, a bot-driven subreddit discovery engine. More here: http://www.reddit.com/r/Serendipity/comments/2mhhhu/want_to_install_dependencies_more_easily_when/
You are going to want to use JS and knockout.
It sounds like your trying to make a generic UI to avoid having to understand what the users actually need/want. This will just end up with the same pitfalls as every other generic UI. If you must go ahead though, I agree with /u/z962849 , js and knockout is the way to go.
&gt; However, as a fan of Microsoft, anyone else concerned about the long term effects this will have on the Windows platform? It should help if anything. It lowers the entry barrier ($$$) to anyway that wants to develop for MS platforms.
Try to talk out the steps from the user interaction, to the web server, to the database, back to the web server and finally back to the browser. * User clicks start survey. * Web server receives start survey message * Web server queries database for first question in the survey and all possible answers to that question * web server sends data to browser. * user answers survey question * web server receives answer and runs a business rule to decide what the next question is based on the given input. (This rule can live anywhere, including in a table. You would just store the question id, answer id and target question id in a three column table.) * web server gets next question Id from the rule and queries the database for the next question and answer. * web server sends response to user * rinse and repeat until the last question is asked in which case the rule will return a end of survey question id. You can slap knockout or angular on that process to get a better user experience.
Get familiar with Angular or Knockout
http://www.asp.net http://www.microsoftvirtualacademy.com/ 
Microsoft Virtual Academy is good starting point. It's free too. :)
Microsoft Virtual Academy has already been mentioned, its free, official and I've heard its good. Pluralsight is a personal favourite, but about £20 a month, that gets you unlimited access to hundreds of different .net areas &amp; best practises (they have an android tablet app which works well too). the sub includes a partner site (digital tutors) that covers creative applications too. Codeproject is pretty good for specific how-do-i articles, article/solution quality can vary. Also free. If I think of any more i'll update.
Take a look at this on how Microsoft did their questionaire workflow http://channel9.msdn.com/Shows/Workflow-TV/endpointtv-WF4-in-the-Real-World-Microsoft-Support-ASPNET-MVC-Wizard-Framework
Pluralsight has quite a bit of the microsoft development stack covered. If you do well with videos this is a good way to go.
[VS2015 is v14, for whatever reason](http://i.imgur.com/ZtQpShT.png).
Yeah, this sounds tedious and unnecessary given the current options available.
MSDN assumes you already know it and is laid out like a quick dictionary look up. I never use unless it's to remind myself of format string syntax/quick codes and stuff like that.
Thanks for the heads up! After some research, a lot of people mention KnockoutJS. I'll look into that.
Mhmm, that's an interesting process. At first I thought of having all my possible questions in my viewModel and only showing them if the conditions were met, but fetching the next question with a query to the web server is interesting. Thank you I'll look into that.
Yes, I'll read more about those js frameworks. Thank you for the suggestion!
Thanks for the resource, I'll watch it when I get home from work
Having used both I recommend angular as it has more features and there is far more tutorials and content online
You could also load the whole questionnaire and workflow into memory at app startup. Its a tradeoff between ease of updating and performance. 
I will study both possibilities. Thanks for the help!
&gt;This will install K and pull down Mono if you don’t have it installed. Huh, nothing I've read or watched said that anything in the cross-platform ASP stack depended on Mono.
C# is in fact the flagship .NET language.
It does on OSX and Linux. 
Does anyone know how Microsoft game dev will work ?
perhaps because 13 is a superstitious number?
Microsoft has agreements with Unity3D, which is cross-platform via mono.
Really? Knockout you can pick up in a day, master in a week. The only hard part is thinking in terms of MVVM.
Your creating a data driven UI, which is always a horrible user experience. Html is about as good an abstraction you can get without having severe limitations. It might work for you in tgis limited scenario, you know the requirements better than I do. But consider keeping the bulk of tge logic/work flow etc in Java script and only the answers in the database. Otherwise you risk creating a huge Frankenstein mess, as so many have done before. 
This. I picked one heck of a time to learn MVC and .NET. Seems like chaos learning it right now. :-)
There is not going to be a microsoft official but mono will absorb all the parts that were open. Microsoft is going to contribute to improve it.
It's not, actually it's a great time to learn .NET. A large part is already open source, great tooling with grunt and bower support. With anything new there is going to be some confusion, but trust me this stuff is awesome and will only get better
By default, there is no authorization/authentication baked in to WebApi, so if you implemented nothing yourself, all services you built would be fully accessibly by anyone. It is not too difficult to change that. The WebAPI documentation has a walk-through on [using authentication filters to implement Basic Authentication](http://www.asp.net/web-api/overview/security/authentication-filters) as well as [a more involved example using individual accounts and OAuth2](http://www.asp.net/web-api/overview/security/individual-accounts-in-web-api).
I can't say much for the actual GUI side of it but I imagine your going to need to store all the "components" or whatever you'll call them into a file. Perhaps XML would be a good way of doing that, you could have elements like "&lt;component id=1235 pos_x=30 pos_y=40&gt;(insert all the other necessary things here)&lt;/component&gt;". That would take care of storing the things you'll need to display. Unless of course you don't actually need to save any of it in which case ignore me, lol.
[avalondock](https://avalondock.codeplex.com) is a wpf solution for this kind of task. maybe a starting point for further investigation? :)
Yeah the storage is fine, it's already stored really, I just want to represent it a bit more visually.
Hmm, sort of. We already have something like that thanks to DevExpress, but I'm more looking for controls (or a control) that allow me to drag and drop individual....glyphs? Elements? Controls? Around. I suppose what I'm trying to create is basically a flow chart thingy, where you can drag the various boxes around, create loops, etc., except the flow chart will represent actual program flow (that bit I'll happily do myself).
What is 'it' in this context? .Net Core is written in .Net by MS. The compiler is written in .Net by MS. The ASP stack and server is written in .Net by MS. So is 'it' just the Mono VM?
Read it here: https://github.com/aspnet/home &gt;OS X/Linux &gt;Mono 3.4.1 or later (Note: On OS X use the Homebrew formula specified below to install **the required** version of Mono) &gt; bash or zsh and curl 
You do need a Mac .NET framework implementation. The .Net Framework provides both the runtime VM and a set of core libraries. Obviously, you need a separate VM that can run your managed code on a Mac, which Mono provides. You also need a separate implementation of the core library. Things like reading/writing a file, sending/receiving network traffic are different between Windows and a UNIX OS. You can't just take the mscorlib.dll from Windows and expect it to work on a UNIX system. Previously, Mono provided an entirely separate implementation of these core libraries. Now, it seems they are going to help port Microsoft's newly open-sourced core libraries.
He is not just binding to a simple form. He is going end up making a SPA due to fact that he is going to creating dialog that can handle different type of answer types.
Your question is a bit confusing. A web service is a web service. Nothing about consuming one is dependant on .Net. &gt;In other words, are restful .Net web services that use JSON locked down by default or are they public by default? That's entirely dependant on your authentication model. You can used AD for intranet apps, name/pass (forms auth) traditional access, or even token auth for a traditional API access scenario. 
Maybe I can offer some help here. I'm currently working on a piece of a project that requires the ability to create process files that can be used within our system. These files, or workflows as I call them, contain an ordered collection of phases and each phase contains a group of states that can be operated on. Im getting off base but the point is that each of the objects is represented by UI components that can be dragged onto a workspace which are then serialized to XML. My current implementation, that has been met with a lot of positive feedback, involved using Avalon Dock. This gives me a split window setup with one region being the workspace and the other region a toolbox. The toolbox is merely a stylized list box showing the various draggable components. After that, just implement your favorite drag/drop code to handle object creation at the start of the drag and placing the object inside the workflow on the drop. This would also give you a great deal of flexibility as far as drag adorners and animations. 
You can actually use the DesignerHost class which is what is used in VS itself (or used to be, not sure if it's still current). Takes a bit of work to get it fully functional (clipboard, undo, etc) but super easy for simple cases. 
If you already use DevExpress take a look at their LayoutControl element. It allows you to reorder the controls you use in it. It is really simple.
just because you have a realtime chart in your template doesn't mean you need to integrate it. talk with your boss as to what kind of dashboards and pages they need integrated. then use the template as a base to what they want. On the realtime chart question. you can do ajax calls every 1 second or use [SignalR](http://signalr.net/) but i verry much doubt that you can provide realtime data that can be usefull to the end user, and also this is very resource intensive if you get more than 10 users and don't implement proper caching. so you can avoid realtime dashboards/charts all together
You're saying SignalR would get resource intensive? What if he used a WCF duplex binding acting as a persistent connection to the client that pushed data as it changed? How would you go about taking metrics to compare?
Look into lucene.net
connection wise on a windows box you are bound to about 5000 connections. SignalR is smart and keeps the connection open via one of several options or makes constant ajax request as a fallback. so you don't need to worry about that. and sorry if you expressed my self badly, it's not that signalR is going to load the server, it's the constant DB queries (if you have any) when doing ajax polling adn you don't cache properly. Also you wouldn't submit all the data all the time. on first load you would send say ... the last 10 minutes of data and then just push the new ones to the clients. signalR has the ability to push data to all connected clients with one command and not wait the clients to request the data.
I just implemented a basic search for my site using full text search in SQL server. It's a breeze to set up and query and you can build your own thesaurus to do word replacement in your searches so that you can search for technology and find content about cloud computing for example.
This might sound like a stupid question, but are you sure that the value "Test12345" is actually in your database? 
I used this in the past. It was very easy to implement and very light weight. It may be suitable for what you are doing. [Searcharoo](http://searcharoo.codeplex.com/)
Sounds like overkill for a school project.
Not a stupid question at all since the answer to my issue might be something really obvious. But yes, the entry is there and it shows up fine if I search exactly for it.
Unfortunately i dont have it here at the moment. Tomorrow morning I will probably try to rebuild it from scratch and if I keep having the issue i will make sure to bring a copy of the code with me. But it's really weird :\ 
Regardless of whether you use authentication/authorization or not you should never need clients to have a DLL specific to your service. One of the main points of web services is that since they use standard media types (JSON, XML, etc.) and authentication schemes that are nearly universally supported by all modern languages, there's no need for the client to depend on any DLL specific to the service to consume it. Sometimes companies will distribute DLLs accompanying their APIs containing things like schemas, etc. to make client development go faster (if memory serves, PayPal is one that does this), but these are still not required and generally advised against since clients are supposed to evolve independently of the service in the first place. 
Why not use Full Text search built into SQL Server along with the FILESTREAM directory support?
To use this: http://www.reddit.com/r/dotnet/comments/2mno9k/how_to_add_search_functionality_in_aspnet_web/cm5ypmp It's one of the other 3 top level comments on the page, not hard to find!
Use linq to sql... var query = context.&lt;table&gt; .Where(x =&gt; x.&lt;field&gt;.Contains(searchVar))