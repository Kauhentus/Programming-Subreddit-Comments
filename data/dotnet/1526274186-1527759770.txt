Can you just ditch the navigation properties and use the shadow properties? Kinda sucks for your business layer but likely would work. Eventually add some real fk's and have triggers keep them in sync with them and only map those fields and not the original fk's?
Explains it much better than I would: [https://en.wikipedia.org/wiki/Sentinel\_value](https://en.wikipedia.org/wiki/Sentinel_value)
**Sentinel value** In computer programming, a sentinel value (also referred to as a flag value, trip value, rogue value, signal value, or dummy data) is a special value in the context of an algorithm which uses its presence as a condition of termination, typically in a loop or recursive algorithm. The sentinel value is a form of in-band data that makes it possible to detect the end of the data when no out-of-band data (such as an explicit size indication) is provided. The value should be selected in such a way that it is guaranteed to be distinct from all legal data values, since otherwise the presence of such values would prematurely signal the end of the data (the semipredicate problem). A sentinel value is sometimes known as an "Elephant in Cairo", due to a joke where this is used as a physical sentinel. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/dotnet/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
Awesome thanks!
If I understand you correctly you have a FK field that sometimes doesn’t point to a related record and thus would be null in other schemas but uses a value of 0 to mean that. It also sounds like there is no database relationship between the FK and the field it references so EF won’t have generated a navigation relationship based on that. In this case you could use two properties. One is the property that maps to the column you want and the other is annotated NotMapped (so EF ignores it) and simply wraps the first column to implement the “0 is null” behavior you’re looking for. I used this approach to serialize some properties to JSON. There have been some improvements to allow EF to use private members I think but I haven’t tried that out and could be wrong. At the minimum you can name the mapped property something that makes it clear it’s for internal use since in the early days it needed to be public for EF to work with it. You can use an annotation or fluent config to map to the correct column. I haven’t needed to use this on a field that would normally be part of a navigation but maybe the NotMapped property could be used that way but honestly I don’t have high hopes and I’m not in front of a machine to try it myself.
Who cares about XAML controls? The app needs APIs and those are tied to windows releases. You can screw everything in UWP as well, asking the user for permissions they don't understand and which are insufficiently granular anyway is a huge waste of everyone's time. UWP sandboxing offers you no meaningful protection, just a lot of pain.
JavaScript
&gt; but the JS you see based on the latest ECMAScript standards (in particular ES6+) isn't too bad. Still primitive type-less script language that reminds GW Basic DOS era. It lacks basic features like multi-threading support (with shared data, of course) etc.
I second this approach being the most reasonable, theoretically you could create a base class for all the DB objects to inherit from, and use it's instantiation to null out properties with FK attributes and a value of 0, although I could be slightly off there as we migrated away from EF due to the headaches our legacy DBs were giving us with it. The other option would be to use your data layer (if you have one) and by using either a base function or creating a fixed set of DB calls within it just use it to null out the non-existent FK items, or do the inverse and force lazy loading and process the joins after getting the base object, but I would be pissing blood over that performance loss. Without knowing how your underlying architecture works it's hard to give a solid call on the 'best' approach to deal with it.
Yes. API gateway can act as a proxy and do a lot more. We use kestral in production no problems, it's very fast. Our typical design is API gateway =&gt; ALB =&gt; ECS task (kestral) So effectively there are two reverse proxies in the chain.
I'm a bit late to the show but I just wanted to add that I really like Palu's take on starting small and then refactoring as you go \(or, like Palu also said, if you have a team, \[try to come up with some agreed upon standards ahead of time\]. I like to have shared models in a class library, but depending on the complexity of the app, I may give my Web API it's own set of DTOs for request/response, then map those to the "core" models.
Interesting. As I'm not familiar with ALB and ECS task, can you tell me what those get you instead of just calling an end point hosted on EC2? Our service will be .net core web api. As I'm only familiar with a Windows environment the plan was to keep it on a Windows instance type. Is that compatible with ALB -&gt; ECS task?
What about filtering by city, state?
Current Visual Basic development doesn't use the runtime, it's a .NET language just like C#, and it's pretty well supported.
Yep, will add soon, thanks
So I was thinking this am how closely this is actually related to a problem I'm currently facing. I can't attest to how well this would work yet \(as I haven't done anything more than identify the problem\) \- but I have been dealing with UTC/Local datetime issues and saving/materialization in sqlite and sqlserver myself and had found these links which might work for your situation \(to me this seems like a similar problem \- your persistence format doesn't match the ORM\). [https://github.com/aspnet/EntityFrameworkCore/issues/4711](https://github.com/aspnet/EntityFrameworkCore/issues/4711) Might help in the short/medium term as long as the internal implementation doesn't change too much between releases \(or until an official public api is available\) \- and at least might keep you from hacking a custom EF to make this work.
It's an easily google-able question and there are multiple methods you can use. https://msdn.microsoft.com/en-us/library/6c3yckfw.aspx
I’ve been doing Xamarin Forms for a few years now. I was already happy with WPF and MVVM when I started so it wasn’t too much of an uphill struggle to understand the architecture. However, this article highlights a load of reasons why Xamarin sucks. I still use it, I’ve not given up (because I’m paid not to), but the experience is utterly painful. The Nuget nightmare is still present (if you upgrade them it will just not work and you have to slowly roll them back till it does). The lack of a designer is bullshit. Yes, there’s the preview thing but it just crashes VS most of the time. Debugging is awful. You cannot skip over lines, you can’t go back. And you certainly can’t edit and continue (although I was already used to that from ASP.Net). “An exception was thrown” happens a lot. Half the time you have no idea why. And half the time it’s not, as the author says, XAML. I had to knock up a WPF app the other day and it was lol being reborn. It was a properly mature development experience. Xamarin has the potential to be great. But time is running out. Developers won’t wait forever. And don’t get me started on Apple and their provisioning profiles. They don’t sync with VS half the time. In fact, all Apple related development in Xamarin is like torture. But that’s not Msft’s fault. 
Usually that means there's some exception being thrown.
If you can't update the target framework to 4.6.1/2+ this sums it up best: https://stackoverflow.com/a/37842828 
If I understand your question correctly, you could create the project in a way that makes sense from a logical perspective, then edit routes.config as you learn the URLs that will be hitting your project. If you want to have the routes editable on the database side, maybe write some custom routing logic as described in this post: https://stackoverflow.com/questions/16026441/dynamic-routes-from-database-for-asp-net-mvc-cms 
oooh this looks promising! I'll have a look at it and let you know how it goes!
Any chance you'd post the source on GitHub? I'd love to see who this is done.
Very nice. One nitpick is that when you click the back button I would prefer it takes me to the prior page and not just the search result with the prior query string. This type of behavior always bothers me. 
Thanks! I'll take a look :)
Wow, I feel your pain... but I love C# and the way Xamarin.Forms approaches crossplatform development is great, By the way, why do does who (pay you) to use Xamarin.Forms decide to stick with it ? I think that reason is valuable enough for anyone to use the framework 
Obviously it isn't great that they introduced a bug into 4.7.2. But the solution proposed (using .Net Core and targeting a specific library version) seems to throw the baby out with the bathwater. Numerous security issues, limitations, performance bottlenecks, and other bugs have been resolved in the libraries, and older .Net applications have benefited greatly as a result. TLS and the crypto libraries spring to my mind immediately. This whole attitude reminds me of the "I had a bad Windows Update, so I just disabled Windows Update" group-think which is so popular. Or the "My kid got mildly sick from a vaccine so I stopped future vaccinating." That being said, I do appreciate bringing light to the bug and providing a good work-around until it is fixed. I just think people should weigh all the benefits of evergreen libraries with the rare new bug. 
In my view it's nothing like disable Windows updates. .NET Core is the future. The move to .NET Core has many more advantages besides the side-by-side installs. Microsoft has just announced for .NET Core 3.0 their desktop loads like WinForms and WPF. Eventually there'll be just Core. .NET Framework is huge, I understand it's hard to change that without causing issues (especially with in-place installations). It's worth noting that updating .NET Core on the machine (in case the app was not self contained) will roll forward minor versions. But you still have control of which runtime you use if you want to pin a specific version for example. Also, the BCL is not installed as a single huge package. Things are more modular with NuGet packages. Also during development, you can pin the SDK version with a drop a `globa.json` with the specific SDK version.
For your backend deployments you could give a look at [self contained deplyments.](https://docs.microsoft.com/en-us/dotnet/core/deploying/#self-contained-deployments-scd) Instead if you want to ship your server *and*client together maybe you should consider writing another type of application like a desktop application in WPF or UWP (but not with .NET Core and only on Windows).
 The patches \(new runtime installations which include security patches\) will still be picked up by the app on Core as they roll forward though. A servicing install is much smaller though and less likely to have regression. Considering that .NET Framework is a huge in\-place install vs .NET Core which is much smaller due to the CoreFX \(i.e: BCL kind of\) being delivered via NuGet. If there's a security issue on a package you can update via NuGet and redeploy your app too.
I didn't want to have to rewrite the frontend entirely which is why I wanted to use something similar to electron. Additionally, mac support is important to me so it has to be cross platform
And still doesn't happen. Why? Because the user are in control. :)
Looks cool, but Algolia seems kind of pricey compared to using something like ElasticSearch.
Oh wow, I guess the closed source part of the framework is not under any where near the same amount of scrutiny as the open source parts. The fact AzureSql connections need to have their retry count be fudged is bad enough, but having this live inside the .NET Framework inside SqlConnection is just despicable. Also, static analysis flags this invocation as a NRE and should have been flagged by the developer(s), or code analysis in the build pipeline, or a code review. This code seems *a bit rushed!* Also also, taking a look at ADP.IsAzureSqlServerEndpoint, it performs a naive string comparison, is sprinkled with comments, and lives inside a poorly named "AdapterUtil" class (which is 2500+ lines long). 
We were largely a windows shop (run a large SaaS web app on windows EC2 with autoscaling), but all our new work is .net core on ECS (aws docker service). So much faster and cheaper than windows, containers much more suited to smal microservice app deployment. (Deploy time in seconds instead on maybe 15s minutes to boot EC2 windows instance.)
This https://docs.microsoft.com/en-us/dotnet/framework/network-programming/tls
Framework update breaks code that shouldn't have worked in the first place, news at 11. Seriously, you set a connection string on the constructor and then change it again with the setter and you expect it to work? It was a miracle that this was allowed at all before.
Why not use Xamarin.iOS and Xamarin.Android then instead if you're just building for those platforms? The only added benefit Forms gives you is having one codebase for the UI instead of two.
UI isn't mobile friendly. (Yes, I'm on the toilet)
I had such a great time exploring Azure Blob Storage and Azure Functions with James! We also put together [this blog post on Blob Storage](https://blog.xamarin.com/xamarin-plus-azure-blob-cloud-storage/). If you have any questions, let me know how I can help! DMs are open 👍
You answered your own question there. Because you only have one UI. 
Why should it not work? For as long as it's not connected setting it to any other legal value is permissible. That includes the empty string which is the default.
What I'm saying is, is it really that important to have one UI? If the development experience is so horrible using Forms, then why not stick to the more mature approaches?
Considering using forms for a project and this is Good info to know thanks for sharing. Do you think avoiding xaml altogether and coding the UI using C# would make the dev process any smoother? 
Im new to .NET. How do I update an existing 2.0 app to 2.1?
You can host net core 2 on heroku with a custom build pack. Simplest way to go, IMO. 
Personally, no. The XAML bit is pretty straight forward. Also the MVVM with binding is really cool. I would definitely use XAML. 
You could write your .NET application as a rest endpoint and then write a Javascript client/frontend for use in electron.
I use a load balancer on AWS and have a route53 wildcard SSL cert attached to that with like 8 different domains slapped into it. Would installing Certify the Web stuff let me avoid having to do that? I'm confused how IIS certs for my sites on EC2 interact with the certs I use with my load balancers...
Seriously. I see this as they fixed a bug that allowes improperly designed code to function.
The SqlConnection method is not to be recycled. Best practices have always been to decare a new or use "using". This isn't C or C++, we aren't going to somehow be more efficient than the garbage collection here.
I create a special class called a "Tester" which setup the server and provide easy way to create the client. I expose the ServiceProvider as well so I can do some white box testing as well. Look tests using "ServerTester" here https://github.com/btcpayserver/btcpayserver/blob/master/BTCPayServer.Tests/UnitTest1.cs to see how it looks like. If the service has dependencies, as little as I can, I mock web services of external providers. The rest of dependencies are bundled inside a docker-compose that devs need to run before running tests. It does not provide clean environment at every test, but it met a nice ratio of Coverage / Line of test code. It is also easily debuggable, and straightforward to set up on every platform. 
Non-traditional career path developer -- it would be nice to have a filter on bachelor's degree required jobs. The most frustrating thing about searching for me is finding employers whom I will make it past the automated filter for.
&gt; Why should it not work? I think that it should work, but I also think it's massively sloppy to write data that is never read.
.NET Core is big, but there are no plans to sunset .NET Framework either. They will both exist dinner by side indefinitely. At least that's what the word was about a year ago.
You can use Let's Encrypt and it is free ssl. But, as I know it is not too good enough. For .net core hosting, my recommendation is asphostportal. 
They usually don't announce plants to sunset something in advance. It just lingers without significant development until everyone realizes it has been abandoned. Microsoft is the last one to (officially) come to the realization. 
Avalonia UI or Blazor may be interesting to you.
I understand. I suggest the move when possible.
For end to end testing we've had a really enjoyable testing experience with Cypress.io. It can create a video of the teat run, generates a screenshot when an error occurs, and has much better performance and reduced flakiness over selenium. For API only testing, you could still use Cypress, look into automated Postman tests, or others may have better recommendations.
So, will this allow for AOT compilation for WinForms?
&gt; Seriously, you set a connection string on the constructor and then change it again with the setter and you expect it to work? Yes I expect it to work. If it can't be modified then I don't expect a setter to exist at all.
&gt; This whole attitude reminds me of the "I had a bad Windows Update, so I just disabled Windows Update" group-think which is so popular. Or the "My kid got mildly sick from a vaccine so I stopped future vaccinating." Where have you been living? This attitude has always existed. In windows apps it's always been typical to bundle outdated dependencies with apps. With core this attitude moved into the framework itself. Lately we've had things like docker to make sure we can ignore security patches.
&gt; Cypress.io This looks really cool. I've been using the .NET Selenium WebDrivers but have found it incredibly tedious, this looks like it might be a bit easier to work with. Thanks :-)
Im going to get downvoted to hell for this but... If you dont have any business logic in your controllers, what are you testing?
The best resource is Julie Lerman course at pluralsight. It has a free trial to check out.
I have no plans to post the source code that does the backend work (i.e. the scraping, classification, etc) at this point in time. However, if you're interested to see how the front-end integration with Algolia is done, you can just view the source of the web page. It is all in HTML and JavaScript.
Interesting request. I will look into adding this. Thanks for the suggestion!
Yeah, the Algolia JavaScript libraries messes with the url. Will see what I can do with this.
Oh boy. Will fix this. Thanks for pointing it out.
.NET Core 2, EF Core, and Razor pages are the best \(´・ω・｀\) 
Try this ebook: https://www.syncfusion.com/ebooks/entity_frame_work_core_succinctly There is a lot of free books worth reading there.
Another thing that might interest you is google Flutter. We're considering re-writing our app at work in that (it's not big.) We started with Xamarin.Forms thinking it looked like the best route. I'm very familiar with C#, I know some WPF, it looked like the best and most mature route to take at the time. We were also very pressed for time. But the tooling just feels like it's seriously lacking, the features of XAML in Xamarin.Forms feels lacking compared to full-blown WPF, there's things I have to go out of my way to find packages for that frankly should just be built into the platform. Among the first three I can think of off the top of my head: No datagrid - had to find one, had constant problems with it. No cross-plat connection status, have to either make my own DI classes or use a third-party lib. Phone calls IIRC is in a similar boat. I'd love for Xamarin.Forms to start becoming popular, and Xamarin in general. But it needs some serious love. Also yes, the package hell is real. &gt; I had to knock up a WPF app the other day and it was like being reborn. It was a properly mature development experience. Also literally in the same boat here. I had to take a break from Xamarin.Forms and our app to making my first actual WPF desktop app and it was like &gt; Holy shit, this is what Xamarin.Forms is *supposed* to feel like
It’s like anything corporate or political. Keep denying the truth until you can’t. Like when they say they have no plans to eliminate your position when they obviously do.
You are looking for the \* in the route. So if you have an HttpGet\("{\*name}"\), it will match anything. I just had to use this for a 3rd party storage integration and it will even match "api/\[controller\]/Test/Keyword/Something" and your method would get "/Test/Keyword/Something" as the route parameter.
Are there any security considerations I should make with running a local http server for the user? Do you know if default macos user settings would allow it?
Oh, I hadn't considered running the server locally in a released manner. Can I ask, generically, what value is added by running this on the user's machine and not a remote (hosted) one?
The users I'm targeting are people who may not have access to the internet while using it. However, when they are back on the internet I want them to be able to sync local changes back onto a cloud service I'm writing. I suppose I could simply use localstorage on the frontend
Thanks. I’ll have a look at that. 
If your record has required foreign key references how do you need the data?
I'm happy to have stumbled upon this library yesterday. I'm using it on top of GraphQL and it's been a treat, though there probably is a more idiomatic way to use GraphQL for filter expressions.
I seed an initial admin user when I create the db. The tests login as this user and then go about doing their stuff. They aren't unit tests, they go through scenarios. 
I've found another bug running queries against an Azure SQL Database. I made a post here, before I read this article. [Post](https://www.reddit.com/r/dotnet/comments/8jmh1p/need_help_with_cryptic_error_at_a_loss/) This is ridiculous. Are there any other workarounds besides migrating to .NET Core? That's a pretty serious commitment.
Stick to the official Microsoft documentation. I've gone don't rabbit holes because EF core != EF, they are oh so slightly different. Especially with the tooling and scaffolding. Don't be like me...RTFD 
I've found the [Learn Entity Framework Core](https://www.learnentityframeworkcore.com/) to be very helpful. I was already familiar with Entity Framework, and this has been a helpful resource when trying to remember the differences. I also found the Apress book [Pro ASP.NET Core MVC 2](https://www.apress.com/us/book/9781484231494) to be a great resource, especially if you are picking up concepts beyond just Entity Framework Core.
Can you post a few more details like stack trace and technology stack? If Entity Frameork which version, if SQL Server which version, is this a stored procedure? Does the sproc have un-aliased fields? What data types are being returned from SQL Server? Any custom Sql types? Maybe code sample too? Ultimately stack trace probably most valuable.
it's just too young, it's experimental and not officially supported, and you can't even debug it so if there is any error, good luck solving it if you're not doing something easy
I wonder why they didn't use the null-coalescing operator.
&gt; I also found the Apress book Pro ASP.NET Core MVC 2 to be a great resource I can second this. Adam Freeman's books are great. 
Have you checked for an invalid encoding conversion? Is one side UTF8 and the other a multi byte encoding? 
Maybe you can give a try with Electron .NET for that
Idk, sorry I was more curious in helping to figure out the roots cause.
I think it was a typo of Ooui
No, that's definitely the goal! Here's the tech stack: OS: Windows 10, version 1803 SQL: Microsoft SQL Azure (RTM) - 12.0.2000.8 Entity Framework: Version 6.2.0 Exception Details: **Type** System.Data.SqlClient.SqlException **Message** The incoming tabular data stream (TDS) remote procedure call (RPC) protocol stream is incorrect. Parameter 2 (\"\"): Data type 0x00 is unknown. **Source** .Net SqlClient Data Provider **Stack Trace** at System.Data.SqlClient.SqlCommand.&lt;&gt;c.&lt;ExecuteDbDataReaderAsync&gt;b__180_0(Task`1 result) at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke() at System.Threading.Tasks.Task.Execute() --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) at System.Data.Entity.Core.EntityClient.Internal.EntityCommandDefinition. &lt;ExecuteStoreCommandsAsync&gt;d__c.MoveNext() **Target Site** System.Data.Common.DbDataReader &lt;ExecuteDbDataReaderAsync&gt;b__180_0(System.Threading.Tasks.Task`1[System.Data.SqlClient.SqlDataReader]) The above is the inner exception of a standard exception that refers to the inner exception. **The stack trace of the outer exception is:** at System.Data.Entity.Core.EntityClient.Internal.EntityCommandDefinition. &lt;ExecuteStoreCommandsAsync&gt;d__c.MoveNext() --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) at System.Data.Entity.Core.Objects.Internal.ObjectQueryExecutionPlan.&lt;ExecuteAsync&gt;d__0`1.MoveNext() --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) at System.Data.Entity.Utilities.TaskExtensions.CultureAwaiter`1.GetResult() at System.Data.Entity.Core.Objects.ObjectContext.&lt;ExecuteInTransactionAsync&gt;d__3d`1.MoveNext() --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) at System.Data.Entity.SqlServer.DefaultSqlExecutionStrategy.&lt;ExecuteAsyncImplementation&gt;d__9`1.MoveNext() --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) at System.Data.Entity.Utilities.TaskExtensions.CultureAwaiter`1.GetResult() at System.Data.Entity.Core.Objects.ObjectQuery`1.&lt;GetResultsAsync&gt;d__e.MoveNext() --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) at System.Data.Entity.Utilities.TaskExtensions.CultureAwaiter`1.GetResult() at System.Data.Entity.Internal.LazyAsyncEnumerator`1.&lt;FirstMoveNextAsync&gt;d__0.MoveNext() --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) at System.Data.Entity.Infrastructure.IDbAsyncEnumerableExtensions.&lt;FirstOrDefaultAsync&gt;d__25`1.MoveNext() --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult() at Acme.Patients.&lt;GetPatientRecordById&gt;d__6.MoveNext() in E:\AcmeFilePath\Patients.cs:line 54 **Source Code:** var patient = await context.Patients .AsNoTracking() .Include(x =&gt; x.Employer.Organization) .Include(x =&gt; x.Visits.Select(v =&gt; v.UserAssignedTo)) .Include(x =&gt; x.Visits.Select(v =&gt; v.UserAssignedBy)) .Include(x =&gt; x.Visits.Select(v =&gt; v.Region)) .Include(x =&gt; x.PatientAssessments) .Include(x =&gt; x.PatientDrugAllergies.Select(a =&gt; a.Drug)) .Include(x =&gt; x.Pharmacy) .Include(x =&gt; x.PatientInsurancePlans.Select(p =&gt; p.InsurancePlan)) .Include(x =&gt; x.PatientInsurancePlans.Select(p =&gt; p.RelationshipType)) .Include(x =&gt; x.User) .FirstOrDefaultAsync(x =&gt; x.Id == patientId); It's just a regular EF query on a DbSet, nothing special at all. Yes, a lot of data is coming over the wire due to the eager loading, but that has not been an issue in the past (nor presently on .NET Framework 4.7.1). Is there any more information you need? Thanks! 
Try [Electron.Net](https://github.com/ElectronNET/Electron.NET). You could also build a CEF wrapper and add your own scheme handlers to it to route processing to code internally. Either way, you're shipping an entire web browser with your app, so make sure to think about how you're going to handle deployment and updates. If you're planning on putting this in the Windows app store, I'd probably try a different way. UWP should have a better way of handling online/offline functionality.
It needs to be cross platform as a significant portion of users are liable to be mac users. 
What are CQRS AND ES?
If your current application is some sort of horrible winform app you need to separate the business logic from the ui into a separate dll, you can the use that in a relatively straight forwards manner as part of a MVC/Web form app
There's another post here on /r/dotnet pointing to this article https://blog.sentry.io/2018/05/14/windows-10-update-might-have-broken-your-dotnet-app Azure DB connectivity was updated with the new update, so that might be related to what you're experiencing. You can target other .NET Frameworks in the .csproj file or through visual studio, but downgrading might not be a good option when pushing your changes to production. The update seems important so it might be worth it to try and get it working in a fresh application just to see what could be getting in the way. I don't think they'd break connectivity to an Azure DB in all cases
Supposedly Electron.NET is cross-platform. You'll have to try building it, though. CEF is also cross-platform, though I'm not sure how the various .NET wrappers (Cefglue, Cefsharp, or combinations like Chromely) actually work on mac OS. Or how they work with .NET core. Many of them predate .NET Core. Honestly, you could also probably just use Electron and start your .net process from there. Then you could just treat it like any other server. Custom schemes can make it a bit easier to ignore the details of where the server is, but if you're not showing an address bar, it doesn't matter too much.
Interesting, playing devils advocate. * Routing seems trivial and not something I would test. * Validation I would really want in the business layer, even though it seems popular to use a global action filter in the API. * I can really see the point in testing Authentication, in fact I really need to somehow add that in a non fragile way... 
No offence, but this sounds like a great way to create fragile tests.
If your looking to do game development, you should look into the native iOS and Android platforms. This gives you more power and control. Xamarin is more for making cross platform apps that aren’t graphics heavy. Something like the Airbnb app ( I think this was developed with xamarin if I recall correctly). If you want to stick with c#, I understand unity does a pretty good with cross platform games. 
Thanks for the advise. Yes, official docs are extensive. Only I wouldn't be able to separate the marketing from the technical ;\-\) so I usually look for outside resources for concepts, independent views, comparisons etc. and for syntax etc, nothing like official docs. 
You could just use Route 53 and get a free SSL certificate from Amazon.
chile que rellenos señores y especial señoritas
Some points: * One argument against both is it doubles your work. Well triples as I am already catching the validation in the UI. * I wouldn't split the BLL between web calls and non web calls, that's just creating work. To be honest I am sitting on the fence on this one, I have a global api validation check ready to go but have held back adding validation to the controller's objects at this point. So far it seems to be working fine without them.
If you want to make games, you don't really need to know much about Xamarin -- you will just use the platform to bootstrap your own code which does all of the heavy lifting. There's not much overlap between the stuff that is used in, for example, Xamarin.Forms and the stuff you would use for games. Unity is also an option.
Simple example: So an Employee has the requirements of a name with the max length of 50 characters. In the UI I will assure the name is required and has a max-length of 50 characters. In the BLL Im going to do the same, should I also do it in the controller level as well?
You are going to have to refactor your code to even get started with what you want to do. Refactor the business logic out of your console app into a shared library. Add a web application that uses the shared lib. You now have a web and console app that use the same code base. You will find that the console app is eventually pointless because the web can do everything it can do plus more.
Bad advise ever. If you look video game, use Unity.
Unity is the only way to have cross mobile game. Native programming will take you 10x of your time.
CQRS - Command Query Responsibility Segregation ES - Event Sourcing I would highly recommend [this talk by Greg Young](https://www.youtube.com/watch?v=JHGkaShoyNs)
&gt; at first and then forever afterwards fixed that for you. not that I'm salty or opinionated at all.
MS has doubled down on Unity and it’s cross platform. 
Wtf is toast manager? I can't be that old yet. 
its similar to a ballon notification show , the term applies to modern UI or windows 10 system notifications 
Dang, never heard of it but i bet it's available somehow. 
I don't disagree, but I still take xamarin with all its quirks over writing the same thing twice.
Toast notifications have been around for years, possibly even the 90’s. The name comes from the fact they were square notification windows that popped up with a scroll up animation, like the Outlook 'new mail' notification: https://i.stack.imgur.com/d05BD.png
Any reason for Xamarin over native? I get that it’s easier to make apps cross platform but are there any other direct benefits over native? I was always a believer that native is best so I learnt Android. I’m not against cross platform by any means, I also develop in C# so I’d have a good start on Xamarin knowing both Android &amp; C#.
https://github.com/MonoGame/MonoGame
if you're an indie dev, there's no reason to learn native in my opinion
Please note that Akkatecture is currently violating the MIT license of EventFlow as large portions of the copied and the MIT license removed. https://github.com/eventflow/EventFlow
You'll probably need a separate process running under the local user account that gets information from the service via some kind of IPC.
I find the Learn EF Core site to be useful too. I had managed to create a small razor page site using scaffolding method on existing db with about 4 tables. It did work \(I could edit, insert, delete etc\) but couldn't make sense of the various files and html pages. But using this website, it is beginning to make sense.
Not really if you focus on Android at first you don’t have to worry about apple’s developer fees and market fees. Plus you can get a pretty cheap android phone a lot easier than a iPhone. Idk that’s me though and I don’t see the problem of developing for both native platforms. 
Windows services technically have a different session compared to the one you are logged into. Typically the user is logged into session 0. This is not the case on a Remote Desktop session though if you are using terminal services. There can also be multiple people logged in at the same time. Most apps work around this issue by having a named pipe or similar communication method and a small tray app that is run when a user logs into the pc that facilitates front end communication. The tray app then talks to the back end via this named pipe. You can try it though, some apis may work. I wouldn’t expect any WinRT apis to work though. Let us know how you fare. 
That's what [Electron.NET](https://Electron.NET) does...
Would you have an issue if someone used Akkatecture, but included the EventFlow license themself?
No, I meant that the clientside app would try to send requests and changes to the server first, meaning no backend is needed. However, if no connection can be made, then it will make local changes and then sync back up with the server when a connection can be established
If you’ve structured your code well, the part of your code that doesn’t need to be written twice in Xamarin is extremely easy to copy to a new platform if you don’t use Xamarin. The problem with two different platform codebases is more about maintenance of that portion of the code over time. 
It's currently a .exe that references a couple of .dlls, only 1 of which is used for the calculations. The excel sheet is basically just a list of records, so it'd only be doing the calculation on 1 chosen record at a time, with the record just being selected via a cascading drop down list. Could you point me in the direction of a tutorial/walkthrough on how to accomplish something like this? 
Thank you for your response. I'm fairly new to most of this, would you be able to a tutorial/walkthrough that goes through this? 
but when will we get avocado toast managers... (sounds like a job title too, no?)
I don't. :( Boy, this is so incredibly frustrating. I've found that if I remove my include statements and enable lazy-loading, the issue goes away. This isn't all that useful, however, since we have thousands of queries across our application and identifying which ones are affected by this just isn't feasible. Any tips for identifying what changed in .NET Framework 4.7.2 that may have introduced this? I know some of the framework is open source, but I wouldn't even know where to begin to look.
There is nothing special the shared library is just the dll used by more than 1 program basically. If the app and web both need to use the method put it in the dll and both can call it with the same process 
Well your frontend in the classic sense cannot reference a dll but code on the server ie your mvc app will reference the dll this gives you 1 place to maintain code that affects both the app and website 
&gt;but code on the server ie your mvc app will reference the dll Is this the controller for the frontend?
Yes you can say that. In layman’s terms Basically the website “controller” and browser just send formatted strings back and forth to each other. Browsers sends special string to say give me this page or store this data etc and server returns a string back with the page html/JavaScript or some other response. Your controller will have access to the code we are talking about above. When the browser sends a post with the form data (attachment in your case) you will just pass it to the dll the same as your app did as a stream or you could save it to disk and process etc 
Thank you! This has helped me understand what I need to do a lot!
Not when one is writte in Kotlin/Java and the other in Swift/ObjC. 
Twice the work with completely different codebase and required skill to maintain.
never heard about this one!
Im usin azure table storage(the old one) when cost is the highest priority. It gets the job done and I’ve not encountered any problems with it so far.
What makes C bad? Doesn’t Xamarin compile it in C for iOS? 
&gt; What makes C bad Well, it's a matter of opinion, but I would expect that most folks on this sub would agree that C# is just simply "better" in most ways that people care about (productivity, maintainability, portability, etc.). &gt; Doesn’t Xamarin compile it in C for iOS Well, mono itself is written with C -- yeah, but I think most of Xamarin (higher-level stuff) is written in C#.
I was referring to having to do twice the work initially. You don’t ignore one platform you work on one and resolve whatever sort logic needs to be figured out. In this case let’s say a unique game mechanic. Doing that on two separate platforms at once is definitely twice the work. If you focus on one (and arguably the simpler platform but to each their own)you have a base to work off of from there. 
Sure, but if you’ve worked on anything significant in xamarin you know that can come with its own problems. That at times can be harder to figure out. This is also why I mentioned unity. Again for me I don’t mind maintaining two different code bases. 
No one can really answer that question unless you have more details. What's your expected use? How big are your tables? Do your developers even know how to use cosmos db or how to use a NoSQL DB vs. a relational one? There a ton of more questions you need to ask yourself there. cost is going to vary depending on your expected throughput on which one is going to be cheaper. Cost is going to vary depending on which one you can implement better. As to your question about is it possible with cosmos db, that answer is yes.
Thanks, but I'm not dragging across apps. I'm dragging between two DataGridView objects in the same application.
Cosmos is very cheap if your not making a lot of database calls and not moving a lot of data in/out, and it can scale like crazy. Tables is nice and easy way to go as well, but lacks a lot of features that cosmos has
I found where my confusion was. Here's what I was doing, what I saw, and how I fixed it: I added a counter to my source grid's MouseMove event and included it in trace messages. Here's the output, with lots of repeated messages snipped out: Mouse move 71: Coil list move rectangle is empty. Current point: (17, 145) Mouse move 72: Coil list move rectangle is empty. Current point: (17, 145) Mouse move 73: Coil list move rectangle is empty. Current point: (17, 145) Coil list mouse down event; setting dragged coil to 12272 Mouse move 74: Coil list move rectangle is not empty. Rectangle: {X=15,Y=143,Width=4,Height=4}; current point: (18, 145) Mouse move 75: Coil list move rectangle is not empty. Rectangle: {X=15,Y=143,Width=4,Height=4}; current point: (20, 144) ********** Coil list box DragEnter event fired. ************ ********** Coil list box DragOver event fired. ************ ********** Coil list box DragOver event fired. ************ ********** Coil list box DragOver event fired. ************ ********** Coil list box DragLeave event fired. ************ ********** dgvStack1 DragEnter event fired. ************ Coil being dropped on top of coil 124920Z The coil was dropped on top of the stack. Mouse move 75: Coil 12272 being dragged; DragSource: FROM_INVENTORY Notice that mouse move 75's handler started, and then the DragEnter event fired, and after that no mouse move events until the object was dropped. And after the object was dropped, processing of mouse move event 75 resumed, and the DragSource variable, which I wanted to be set when the drag operation began, finally gets set, too late. (And yes, I know it's bad form to care where a dragged object came from, and my program does not care any more, but I still want to understand when events are being fired.) Here's my MouseMove handler: private void dgvCoils_MouseMove(object sender, MouseEventArgs e) { m_coilMouseMoveCount++; if (m_coilListMoveRectangle != Rectangle.Empty) { Trace.TraceInformation("Mouse move {3}: Coil list move rectangle is not empty. Rectangle: {0}; current point: ({1}, {2})", m_coilListMoveRectangle, e.X, e.Y, m_coilMouseMoveCount); } else { Trace.TraceInformation("Mouse move {3}: Coil list move rectangle is empty. Current point: ({1}, {2})", m_coilListMoveRectangle, e.X, e.Y, m_coilMouseMoveCount); } if ((e.Button &amp; MouseButtons.Left) == MouseButtons.Left &amp;&amp; !m_coilListMoveRectangle.Contains(e.X, e.Y)) { dgvCoils.DoDragDrop(m_draggedCoil, DragDropEffects.All); m_dragSource = DragSource.FROM_INVENTORY; Trace.TraceInformation("Mouse move {2}: Coil {0} being dragged; DragSource: {1}", m_draggedCoil.Coil_id, m_dragSource, m_coilMouseMoveCount); } Hmmm... I seem to have found my confusion. The DragEnter event is fired from inside DoDragDrop(). All I need to do is to set m_dragSource before calling that method.
&gt; C/C++ is bad Good thing IOS is using swift now...
That's funny. 
Isn't \``With` just like property initializers? 
What do you mean?
**Update to anyone who experiences this issue** This has been identified by the dev team as an issue and is being worked on: [https://github.com/Microsoft/dotnet/issues/749](https://github.com/Microsoft/dotnet/issues/749) Temporary workaround: Add the following to your connection string: MultipleActiveResultSets=False
Decent? That's debatable. My [template](https://github.com/pfthroaway/Extensions/blob/master/Extensions/Dictionaries/Grey/ComboBox.xaml) works for what I want it to do, though. Colors show up as I intend them to. All my themes are pretty basic, but I've gotten them to show the way I want them to.
 Thread newThread = new Thread(ConnectCheck.CheckOpen); //new thread //all threads up and running long foo = 0L; do //wait for all the threads to stop { Thread.Sleep(1000); Interlocked.CompareExchange(foo, 1, countRunning); } while (foo == 0L); see if these work for you. 
If I'm not mistaken, the developers of IdentityServer offer support by themselves. Have you looked into their support offers?
What are your major sticking points? We are using it in production along with asp.net identity.
I can't get the server to return an access and refresh token without using a cookie. That is my mine problem at the moment
It sounds like you are requiring an auth cookie on the routes identity server uses. Are you mixing content (html) with a rest api? How are you applying the [Authorize] attribute?
I've read through the entire docs + bunch of random websites. I have a working project for the most part I know the basics of IdentityServer4. I need help with JWT transferring to apps. I have it working with cookies but can't get it to work with JWT.
Authorize is on separate projects on controller actions. It's all just APIs getting data from a db. Not sure what you mean by content (html). I require a cookie? I was told to do it without cookies.
These things can be handled mostly by middleware so you shouldn't be rewriting code for your co trollers. 
Generally, requesting content uses a cookie but api calls use a token. Are you famillar with the concept of AuthenticationSchemes? 
When you log in your access token should be empty. You should have a log on page that issues your cookie and a route that issues your access token based on that cookie. There are several examples identity server provides that elaborate on this flow.
There are several good courses on pluralsight that cover identity server 4 and .net core. For example there is a recent one called Building business applications with Angular and asp.net core by Kevin Dockx. It covers securing an API with identity server 4. A year long membership will set you back a few hundred dollars and you can watch as much as you like. 
Remember, the browser does not automatically send the access token to the server like it does with a cookie. Your access token lifetime should be short, like 10 minutes. This is transparent to the user because the browser sends cookies. So when it expires, a new one is issued in the background. The user is totally unaware.
So I can only have an access token if I have cookies? I was told to keep cookies disabled 100%.
AFAIK that is impossible without constantly prompting the user with a log on page.
I have a pluralsight membership, and I've watched a lot of videos on IdentityServer4, mainly through udemy. I really need a more personal help. I've already spent 60+ hours staring at the same thing and watching/reading anything I can find on it and I'm just not getting it.
Caveat: if your app is 100% api then that is a different story.
So the cookie has to store the information? Else it has nowhere to be stored?
There are tokens that can be used to get new access tokens, refresh tokens. But I don't think that's usually used in a web app.
Yeah, I will be using refresh tokens with a Hybrid Flow.
So your sever issues access and refresh tokens. You do so based on either the right username/password or the existence of a an existing auth cookie.
Thanks for the clarification. I'm still having issues even with cookies enabled.
With this sort of flow, you really should build some irrevocation mechanism.
Again, the idsrv examples cover all this. There are hybrid flow examples on GitHub that you should look at.
Yes
Code sharing is the biggest advantage. Write once, run everywhere.
Windows service is a background process and possibly run on different service account \(not the login account\). Therefore, you will not able to code the pop up or display anything on UI. I advise you to code your service as an application that minimized to system tray plus running with a thread \(or background worker process\). Then you will be able to show messages on UI.
What do you mean by an access token based on a cookie? I have a login site that issues a cookie using the ASP.NET boilerplate, and another API that needs an access token. I couldn’t figure out how to derive a token from the cookie to forward to the API, so I put a [Authorize]GetToken() endpoint on the login site that generates a JWT token using the same issuer and audience that the API expects. This never felt correct to me, but it works and I haven’t figured out a better way. Kind of bugs me but it’s a hard question to google. 
Yes, having tried xamarin 3 years ago, I would not recommend it. I might have gone faster with native rather than hunting their bugs. But the question is about mobile games, not general app. Unity is amazing, it is not only a common language for building cross plateform games, but there is loads of resources on their asset store. Trying to buy assets and integrate them natively on all plateform and coding your game in two different logic will take you more than twice the time.
EventFlow founder sounds he would be an awesome guy at parties.
This looks really useful. Are you the dev? If so I have a few follow up questions: 1. How well does it handle pre\-release packages? It may be worth adding a flag for including prerelease versions when performing the version check 2. To expand on the above, how about major/minor versions? \- it may be desirable to lock this to a major version so it doesn't flag as outdated when you aren't able to update because of a breaking api change in the new major 3. More of a suggestion than a question, but it would be nice to have an "interactive update" mode as well, where it pauses on an outdated package and gives the option to update and possibly trigger an install/restore eg: &amp;#8203; Pacakge.Name 1.0.0 1.1.0 Update Package.Name to 1.1.0? y/n Installing... Package.Name 1.1.0 1.1.0 Cant wait to try this out once I get around to installing the new sdk
I'm surprised that no one mentions this is only for outgoing connections like Web API calls. Incoming connections are handled by IIS / http.sys and do not require any measures regarding .NET itself.
Yes, I am the developer. 1. At the moment it determines whether it should look for pre\-release packages based on whether the installed package itself is a pre\-release package. So if the version you have referenced is a pre\-release version, it will look for newer pre\-release versions. If not, it will look for stable versions. This is definitely on my to\-do list though to add an option so you can force it to use pre\-release packages \(or not\) 2. Yes, that is a great suggestion. Will add an issue for it 3. Another great suggestion. Not sure whether it can be done, but I add an issue for this on GH and investigate the feasability
I've added a little more info as an edit. AD is probably not the one I want... before there was the option of cosmos, the natural option would be sql server. With wanting to keep costs down, is the same possible with cosmos? is it preferred even? thanks
Honestly, I'd say trust your gut and go with Cosmos. It's fast and cheap. And all the cool kids are using NoSQL these days! 😉
`var myObject = new SomeType { Id = 5, Name = "Jonas" };` I know that `With` can be used at any time and not just when creating objects. But when programming OOP you typically mutate state by using methods. Right?
Re: #2 you might just want to allow ignoring specific packages entirely. I know I use a few that can't be upgraded to the next minor version because they break things. 
I use Visual Studion Team Services \(VSTS\) to build my own OSS NuGet packages. Besides source control and build, VSTS also has a very good Release Management. I use that to automatically publish my daily and CD \(but not CI\) builds to a private NuGet feed, and after a manual approval they're published to [NuGet.org](https://NuGet.org) and [SymbolSource.org](https://SymbolSource.org). Btw, Oren Novotny published a good blog about this just days ago: [https://oren.codes/2018/05/15/oss\-build\-and\-release\-with\-vsts/](https://oren.codes/2018/05/15/oss-build-and-release-with-vsts/) At work, we're unfortunately not this far. We have manual C/P of packages to NuGet servers \(ProGet in our case\) and that's so error prone that we mess up several times a week. And, because there's currently no relationship between source, builds and artifacts in our environment it's very hard to debug problems. We're in the process of evaluating VSTS and I hope \(based on my personal experiences\) to solve a lot of those problems. So, to answer your question: No, don't copy &amp; paste!
For 2 it'd be great if there was some way to identify if a major version is actually maintained too.
You can use any Nuget service, whether it's your own or a commercial one like MyGet. In order to work with any Build Server, you could use a simple bash script to publish a package - just use available dotnet pack and dotnet nuget push command (given that you're working with .NET Core). Please take a look at my sample script, that works with Travis CI: https://github.com/devmentors/DNC-DShop.Common/blob/master/scripts/pack.sh
`With` still lets you use encapsulation. It's basically just shorthand. If you reference a symbol that doesn't exist in scope, it tries to find it in the object you're `With`ing, but it won't let you access anything you couldn't normally.
marcia, try Zetpdf.com, useful and have nice user interface.
The simple answer is that I was unaware of the existence of NuKeeper. But from a quick look at their repo it does seem as though the two tools have the same goal.
ok, will check.
Do you by any chance have that working project anywhere we can take a look at to see whats wrong with it?
thanks a lot, kimblack.
thanks, already check the website, its really good.
ZetPDF.com, i will try this website.
I haven’t used identityServer4, but when you aren’t using cookies you typically send a user to an authentication page and set a redirect url. After the user successfully logs in, the redirect url contains an authorization code as one of its parameters (which your app should intercept). Then you use your authorization code to request an access token and a refresh token (via POST usually, but there are a few ways). Okta and Auth0 have some pretty good walkthroughs and okta has a postman env you can download that helped a lot (there are lots of postman env in their site, look for the one that is OpenidConnect)
visit the site and use it, its best
i will try, thanks.
Aw man, you beat me to it! I've been working on a similar tool ater seeing it requested on [this list](https://github.com/natemcmaster/dotnet-tools). Does your tool follow `ProjectReference`in csproj files? I was trying to make mine be able to detect project references and also check the packages for that project.
Thanks, but it looks like your template has a reference to PresentationFramework.Aero2. There is a very good chance this will not run under Windows 7.
Yes, I am currently using [https://github.com/daveaglick/Buildalyzer](https://github.com/daveaglick/Buildalyzer) to process the solution/project files and grab the `ProjectReference` nodes.
I’m so excited for Blazor. Can’t wait to use it in a real project
Xamarin's better than it was 3 years ago.
hard-coded... That makes me ANGERY Nah man great job. I've always wondered why dotnet cli didn't have this built in. The package manager in visual studio can do it just fine, so I'm not sure why dotnet cli lacks it.
If it's any consolation it makes me angry too :) Sometimes you do silly things just to get version 0.1.0 out the door and determine whether there is a use for the application. Seems that so far people like it, so now I can address all those silly little things like hard-coded nuget URLs ;)
Haha, I'm just teasing my man. We all know how development goes. I actually just used this on one of my larger projects and had a few things to update. Works great. 
Um, at what point do they actually talk about *how* they use .NET? Congratulations on having a viable product and the performance improvement. But the only thing I walked away with was "dhur, Core go fast".
Access API from backend? ASP.NET MVC: extract access token from cookie with `var token = (User as ClaimsPrincipal).FindFirst("access_token").Value;` and send it to API. The [sample](https://github.com/IdentityServer/IdentityServer3.Samples/blob/master/source/Clients/MVC%20OWIN%20Client/Controllers/HomeController.cs#L37) is for Identity Server 3 but it works fine with Identity Server 4. For ASP.NET Core, you'll be using `var token = await HttpContext.GetTokenAsync("access_token");` as shown in [this sample](https://github.com/IdentityServer/IdentityServer4.Samples/blob/release/Clients/src/MvcHybrid/Controllers/HomeController.cs#L33). 
Identity server has fully functioning samples. Maybe those will help?
Been staring at them for 3 days. Still can't figure out whats wrong with my code:\(
Wow two platform migrations. I wonder how well they mitigated defect reopens.
&gt;"An exception was thrown" happens a lot. Half the time you have no idea why. And half the time it’s not, as the author says, XAML. This was the shittiest part when I tried it. Random exceptions and you literally don't know why.
Yeah. You guys fucked it up. Xamarin.iOS + Xamarin.Android + MvvmCross is how you get reasonable cross-platform maturity, stability and productivity.
&gt; We're considering re-writing our app at work in that (it's not big.) Think twice (or even more times). You are replacing Xamarin with an even more immature technology. You will have to eat a lot of shit there too. The grass is always on the other side.
Same. The only thing I got out of that article: * Mono still has a long way to go. * Javascript-anything server-side is lazy and inefficient. * .Net, when running on a reasonably-well implemented runtime, runs pretty damn fast.
The thing with Microsoft is, when they see something good they "adapt" it. ReSharper has been around for a long time. When it was created, it filled a need. These days, most of what ReSharper did is now built into VS. There's really no need to use ReSharper anymore unless you're so used to it that you can't adapt to working without out.
IntelliCode has been good. I combined it with Roslynator, Roslynator Refactorings, and the ReSharper-like functionality native to VS2017 and you have almost everything ReSharper offered and more. The only thing I miss from ReSharper is being able to trivially search for build errors in cshtml/Razor files. While there is a working way to reconfigure the project to always build views, it is slow as shit in large solutions and you need to tweak it to correctly clean out the previously built views. The main reason I am dumping ReSharper isn't the cost ($ 77/year is actually very reasonable), it is the fucking terrible performance. It makes VS feel like a laggy piece of shit, and causes the UI to have these micro-stutters even on a SSD/i7 system. I'm thinking about using that money for OzCode (Debugging extension) or maybe the cheaper Entrian Inline Watch. Anyone tried either one and has an opinion? 
Especially with Rosylnator installed: https://github.com/JosefPihrt/Roslynator
Thank you. This really helped. 
You're welcome! I know what a pain identity server can be. It's great when it's working, but getting it there isn't the easiest thing to do, and when you get stuck it seems there aren't many great resources to help you figure it out.
Huge Resharper fanboy here. Dropped it like a stone once I got Imtellisense and Roslynator + a few others set up. I code so fast now!
Windows services can't interact with the desktop, so you'll need a frontend piece running under the user account. You can have UWP apps interact with a background service (or a service running elsewhere) and they can display their updates in the notification center or on Live Tile updates.
opposite for me. i also use rider
From what I've seen, nothing comes close to ReSharper's auto formatter. StyleCop is nowhere near good enough. Yes, there are alternative refactoring tools that are largely equivalent (outside of LINQ), but that only accounts for about 60% of ReSharper's functionality that I used on a regular basis.
Try Jetbrains C# IDE. Rider! https://www.jetbrains.com/rider/ Most of our team has made the switch. It's far from perfect but with large (100+ projects) solutions it's so so much better than VS. 
Not sure if Coypu is available for .NET Core yet, but it was a definite step up from using raw Selenium.
If you're making complex logic decisions in your controller... then you really need an object layer behind the controller. Those objects can have far less dependencies and are thus much easier to test. 
You can use Dotnetify for the backend (c#/dotnet core) and React for the frontend. There is an Electron example here: https://github.com/dsuryd/dotnetify-react-demo
They just need a Community Edition like VS has if they want it to really take off.
I still swear by R# navigation, but I must admit that VS is getting good and VS Code is very good, though I still prefer WebStorm for Angular dev.
Thanks, but my frontend is Angular so I was hoping not to have to rewrite too much of it
I've just started using Rider for dotnet core
&gt; Rider Why? What makes it better than VS?
Ugh, I should, I've been paying for it for far too long.
Even tough I have used PHPstorn for years, I just can't get into that IDE. VS just feels so much better (as does vscode and atom). 
It's only one if your many bullet points, but you can move lines up and down with Alt + Arrow key up or down. Been in VS at least since 2015.
Maybe this is too simple but have you used the app.UseHttpsRedirection() method in startup 
Apps will still run on newer security patches. But I think this can be controlled somewhat by the developer. However you would not want to limit yourself to a specific security patch because some users might not have it, and thus running your app immediately becomes a poor experience as the first thing they see is an error dialog.
Unfortunately I think with Elastic Load Balancers the request is always sent from the ELB on port 443 (HTTPS) to port 80 of the EC2 instance. You have to check for X-FORWARDED-PROTO to see if the request was in http or https. I just can't figure out why the http://domain doesn't redirect but www.domain does. Also, since /swagger redirects itself I am getting stuck in a loop.
This might help: https://stackoverflow.com/questions/95098/why-is-application-restart-not-reliable It's sometimes important to know what goes on behind the scenes. For example Application.Exit() (and I assume .Restart()) does NOT immediately close your app... instead, Application.Run() will stop executing and any code after that call will run through, presumably to your program's completion. So it's not like Environment.Exit(). If you want a way to restart that doesn't care about winforms, you can use Process.Start() to launch a new instance of your application (Application and Environment objects should have all the details you need for that) and use Application.Exit() to quit (if possible. Environment.Exit() will immediately shut down your app but again this won't let things exit cleanly like Application does).
&gt; Yeah, JS has traditionally been pretty shit, but the JS you see based on the latest ECMAScript standards (in particular ES6+) isn't too bad. In any case, there's always the option of using TypeScript (which is wonderful), in which case raw JS is only ever coming out the ass-end of your transpiler. Yeah, when coding for browsers, you're coding for the lowest common denominator (IE11, usually). But with Node or Electron, you don't need to worry about that and can use the latest standards. TypeScript still brings some very needed features such as compile-time error detection and strongly typed variables that just would never work in JS.
They had to do some unspecified tuning of their app. I'm guessing it more or less amounted to async everything and maybe some stinginess with newing up object instances.
Cross-platform, all the R# features with none of the performance loss, fast feature development and support from JetBrains. Lastly, for me personally I love IntelliJ so it's just more familiar. 
Sounds like you never really tried VS without resharper. All those features are there, with perhaps one of two exceptions
Thanks a lot. Btw I am able to push to the Custom Nuget feed but I am struggling for the deployment to the server where the application is hosted. 
I pretty much keep it for the fix namespaces and move classes to own files feature.
Should i install just roslynator or do i need/should i install the Roslynator.CSharp packages also? Im unclear if tehy are included or not in the standard package.
This. 1000 times this! Rider is nice an all, but it isn’t no VS! FFS jetbrains get your shit together 
Try codemaid
The "move class to own file" is already included in VS (I use VS2017, or maybe it's roslynator). You can also refactor namespaces to some extent, but I don't do that much so don't know how much VS can do about it.
Last commit 12 Sep 2017 :-(
Honestly, I have to wonder if they care that much about R#. They're really much more well known for IDEA in the other languages you can use with it; e.g. Scala, Go, etc. That said, I find myself turning more and more to VS Code these days. It's starting to feel like emacs back in its hayday. Yesterday I discovered PlantUML. Then I discovered the VS Code extension for it. Seriously, I was like a kid giggling through the ultra smooth choco then PlantUML and Graphviz install. I've never seen a Java program install so smoothly (other than IntelliJ ironically enough). Then actually using PlantUML. Ah.... Fuck Visio. At least until my corporate overlords demand everything in .vsd* format again. Sorry, for the OT post, but I had to share that little bit of "tools joy".
How is WebStorm better than VS Code for Angular? Just wondering what I'm missing. Also, do you mean Angular or AngularJS?
You can f12 into decompiler source now. Most of these can now be achieved with extensions. Like codemaid, roslynator etc. Which are free and open source.
There is fix namespace extension but since last update doesn't seem to work for me. But if they update it that's another one that can be done easily.
I second this. Great extension.
I'd be really uncomfortable knowing there's an API on my server that allows running code put in by a user. 
It used to only do the job, most of the times. The new revised test runner in VS is actually much b better than what it used to be. The best is that nowadays VS is continually improved in all areas. Keep an eye on the release notes 
Ah okay. My issue was that I made this layered architecture to avoid unnecessary dependencies but it seems like the MyWebApp.Web project will need a dependency on the service layer AND the MyWebApp.Data for the EF Core context classes. I don't remember see other people's code doing this but maybe theirs wasn't code-first, not sure. Will have to explore more.
Oh, I see what you mean. You can always create the migrations in your .Data project, and do the initialization there.
If you are not bound to .NET technologies, I would recommend Keycloak. It is a full featured identity and access management solution which is also available as docker image. It is super easy to install/configure and provides a comfortable management interface. https://www.keycloak.org/ https://store.docker.com/community/images/jboss/keycloak
Any idea what the influence of caching within the database is on these speeds?
A lot of developers tend to do this and it definitely seems like a controversial topic because of the exact point you made. I don't think it's necessarily needed as I was only following a pattern someone else did but I like the idea of putting all the EF classes into 1 project. Maybe I should just have 2 dependencies and put all my AddDbContext + initialising code into an extension method.
I use Sqlite which is in-process. I had to restart debugging for changing it to compiled query so I don't think there was any effect.
In case you do not want to spend so much effort: [https://www.reddit.com/r/dotnet/comments/8k5h1h/stuck\_at\_a\_problem\_with\_identityserver4\_token/dz6klrw/](https://www.reddit.com/r/dotnet/comments/8k5h1h/stuck_at_a_problem_with_identityserver4_token/dz6klrw/)
Reactive UI, its supposed to update as you work without interrupting flow by requiring the user to click a button to make the workflow happy on the technical side.
Use async calls triggered by onchange or onclick events on the controls in the browser. Someone here suggested using some MVVM framework but for what you are describing you could wire it up in 10 minutes using nothing but JQuery.
Bumperino. Does anyone else have any other resources that I can add to the list? I haven't really been able to find much else. Cheers! 
You can use it with Angular, check here: https://github.com/dsuryd/dotNetify/issues/87
Without showing profile/sql execution plans, this is a bit anecdotal. Cold/Warm, View Mapping, Caching, Query Compilation, NoMapping Queires, Lazy/Eager, Sever GC. Who's to know what is actually at play here in regards to perf benefits.
Can you explain in more detail what you actually need to do? What is the logic this view is doing that can't be done in the controller?
OH PlantUML looks amazing. Thanks for the tips.
First up, in step 3, why does the view do the logic, rather than the controller? Presumably the view uses some extra piece of data that is not available to the controller at that point... but it would almost always be more sensible to provide that to the controller first Where possible, keep everything other than presentation logic (how should this look) out of the View, to avoid security and consistency issues. If you're determined to do this, though, some variant of Javascript is your friend - JQuery likely being the quickest way to develop it, without going overboard with a javascript framework If you can describe more fully what you're trying to do, we may be better able to help
I agree that it's purely anecdotal. That's why I'm saying "try it" not "it's gonna be faster in every case". In other words measure if you see improvement. That said, - it's the same query running on the same database so I would expect sql execution plan to be the same, - you can see the cold/warm and view mapping a bit from first run vs subsequent runs (or do you mean something else?). I actually didn't believe the numbers so I went back to not using compiled queries and saw similar numbers. So it's not just first time run is slower. - caching - sure disk caching could affect the timing. it's not a first query in my app against the sqlite database (which is 300K) though so I would expect it would already sit in the cache - query compilation - yes that's what I'm trying to test here, so I would hope it plays a role. Or are you saying that the compiled query gets compiled differently? - nomapping queries - what do you mean? - lazy/eager - perhaps I misunderstood but it's the same query so that shouldn't have an effect? - Server GC. Can you expand on that? 
Based on the phrasing of your question, you seem a little confused, so I’d like to explain something. The MVC pattern exists in order to handle discrete web requests. The first time your user sees the View you are discussing here, he made a request that reached a controller, that populates a view that the user sees, right? Once that View is rendered, and the user receives it in his browser, as far as MVC is concerned, that specific view that the user got no longer exists. Until the user triggers some sort of explicit request to a new controller action, the user’s interaction with MVC is ceased, and everything is in the hands of what happens in the user’s browser. All that said, what you are looking for here is more than likely is some sort of Ajax functionality. Ajax means that your user’s browser is able to make a new web request _without_ losing everything the user is currently seeing on the page, in simplified form at least. Here is a common full application flow for something like this, starting from the beginning: * User requests your main view * Controller calls View, and user now sees html on screen. * At some point during the rendering of your View, you made sure to include in the View some JavaScript that is built to detect when your input has changed, and to fire off Ajax request to a brand new Controller action that either returns JSON, or just raw HTML for values to consume in your original HTML page. * Your JavaScript that fired the Ajax should know how to receive a response from your new Controller action and place it in the correct spot in your HTML. In other words, if you’re used to WebForms, that might seem like a lot of work, but it gives you complete control (and many many options) over how exactly your application is working, as opposed to relying on PostBack magic. Note that you can do all of this without Ajax as well. But Ajax sounds more like what you want. You could also have JavaScript on your page, for example, that listens for the user changing the input you’re listening for, but after it’s changed, instead of firing Ajax, you could trigger the form POST event (via JS), and your code would flow right back to an action on your controller that I’m assuming already exists. There you could check for (some condition), and if that condition is met, you could populate whatever data you need and recreate your View from scratch, while maintaining any values the user had already entered. That to me though seems way more messy. Tl;dr: you will need some custom JS attached to your View that fires an Ajax request, handles the response, and places the response back into your HTML. You will need a new, simple controller action specifically to handle that Ajax request and either return JSON (raw data), or HTML/View (less flexible, but already in the format you need to display) for your JavaScript to consume.
It's some JS libraries doing GIS-related things (clustering and convex hulls). Technically it could be done in controller, but it's far easier and simpler to use libraries with finished methods for all the processes in view, IMO. 
It's some JS libraries doing GIS-related things (clustering and convex hulls). Technically it could be done in controller, but it's far easier and simpler to use libraries with finished methods for all the processes in view, IMO. 
I still prefer NCrunch for a test runner. Tests that run automatically whenever you change code that affects the test. Plus the red/green/black dots next to the line numbers to indicate test coverage. Or being able to right-click and go to a test that covers a line of code.
450 ms is kind of insanely slow for almost any query against a 300KB database. Regarding Server GC, you can’t predict when .Net is going to stop your program to do GC, so if you happen to get one of those while you’re timing some code, it will mess up your numbers.
On a related note, I would consider `Include()` to be a bit of a code smell. Do you really need every property on all 6 tables (A through F)? For absolute performance you should be using projections on the `Select()` method, and picking only those values you need, e.g. ``` context.TableA.Select(a =&gt; new { a.Column, a.TableB.Column, etc... }) .SingleOrDefault(a =&gt; a.ID == id)); ``` If your objects are quite sizeable, check out AutoMapper and the AutoMapper.EF6 queryable extensions library to simply things a bit: ``` context.TableA.ProjectToSingleOrDefault&lt;MyModel&gt;(a =&gt; a.ID == id); ```
&gt; 450 ms is kind of insanely slow for almost any query against a 300KB database. Agreed, I blame EF for that. I have logging set up which claims that the query was executed in 1ms. So the rest of the time is whatever EF is doing with the result (+debugging overhead). How would you explain that it was so slow on the subsequent runs if the first one was hit by GC?
Do you people not unit test? The main reason to use R# is the test executor. Nobody's ever suggested a good alternative to Test Explorer.
Ncrunch
Thanks for the suggestion!
I love these minor frequent updates.
They really are the best no joke
To IS4? I guess the question is why? I think you may be missusing refresh tokens.
Ok so I did this at the end of my logic in generated View: if (Model != null){ ... $.ajax({ type: 'POST', url: '/&lt;ControllerName&gt;/&lt;ControllerAction&gt;', data: { "data": data }, success: function () { } }); } I checked in my controller: Controller indeed gets the data (array length is the same as the amount of datapoints I intended to send to controller). Is this correct way to do it? Basically if the user requests data: show data, apply algorithm on it in View and send it to controller for further processing, while waiting for new request from user (and showing the previously generated data).
For me it’s the opposite. I had never used any of their other IDE products (IntelliJ etc.), but Rider has been awesome the last few months. To me the UI is so much better and mor discoverable than VS. I have been using VS for 10 years. 
OMG enum generics! 😍
http://marketplace.visualstudio.com/items?itemName=josefpihrt.Roslynator2017 is all you need. Roslynator Refactorings 2017 and Analyzers are subsets if you don't want the full package. Check the root readme.md at https://github.com/JosefPihrt/Roslynator
Hm, it is hard to tell from that snippet if that’s “correct” or not. You left off the beginning of your JavaScript, but you want your JavaScript to be assigned to a UI event, right? Is that what you’re doing? When the user edits a certain field, _then_ you should trigger your Ajax, sending up the data from the field the user edited (assuming you need it). Again, I can’t tell if that’s what you’ve already done or not. I might not be much more help without more detail, but it sounds like you’re on the right track? Basically anything you want to do in the HTML beyond handling the click of like a “Submit” button on a form will need to be accounted for and handled using JavaScript, which will need to be included in the View(s) that need the JavaScript. If your JavaScript needs remote data, or to talk to your back end again, you will need to write any controller actions it might need and point your JS to that.
My snippet works immediately after the data is returned to View, and View does its logic. Stuff above is basically: getCluster(data); getConvex(data); generatePoints(data); Controller Post action is the same for getting data and handling of data generated by View logic, it just depends on what I pass to controller (all arguments are nullable).
I disabled Resharper because it was slowing everything way down and causing crashes. I don't miss most things but I present code a lot and the hotkey overlay in Resharper (shows what hotkey you used and what it did) is something I miss a lot.
Highly recommend checking out [Mermaid.js](https://mermaidjs.github.io/) as well. It does similar stuff to PlantUML, but it can also be embedded into some extended versions of markdown (including some vscode versions of markdown).
You could create your own generic type or method that where the type is of type Enum. You don't know or care what type of Enum it is when create the method as the code have to work on all Enums. Like IEnumerable&lt;T&gt; doesn't care if you put in a bunch of strings or ints or whatever. void DoSomething&lt;T&gt;() where T : Enum I can't give you a concrete example for a generic Enum method right now, I'm on mobile.
 //C# &lt;= 7.2 Version public static IEnumerable&lt;T&gt; SplitEnum&lt;T&gt;(Enum e) where T : IComparable, IConvertible, IFormattable { if (!typeof(T).IsEnum) { throw new NotSupportedException($"Type {typeof(T).Name} must be an Enum"); } foreach (Enum r in Enum.GetValues(typeof(T))) { if (e.HasFlag(r)) { yield return (T)Convert.ChangeType(r, typeof(T)); } } } //C# &gt;= 7.3 Version public static IEnumerable&lt;T&gt; SplitEnum&lt;T&gt;(T e) where T : Enum { foreach (T r in Enum.GetValues(typeof(T))) { if (e.HasFlag(r)) { yield return r; } } } Working with enums will be a lot easier if you do anything on them, without needing to validate if the type they are passing in is really a enum or not, it also lets you avoid a lot of casting.
Thanks!
Thanks for the example, looks handy.
7.2 was pretty huge with all the span goodness
I was immediately happy then immediately sad that you can't restrict it to a specific enum. I've been waiting for *that* feature for a library I've been working on for months. It's a very specific and weird use case, mind you, but still. It'd be the perfect solution to the problem with my design. Oh well: a man can dream
Redirect should work, but you may have to make a JavaScript to trigger it.
I feel like I'm missing something. Enums don't have inheritance, so what does that get you versus make the method without the generic?
[ASP.NET Page Life Cycle](https://msdn.microsoft.com/en-us/library/ms178472.aspx?f=255&amp;MSPPError=-2147217396)
Basically, I'm given an input that tells me the names/values of configuration file name/value pairs. My code generates an enum class for the config names. I then also have a class which takes a type argument of that generated enum as a type parameter. My goal is to restrict the type parameter to where the passed in type MUST be the type that I generated. I can't just make my parameter types that enum type because it's dynamically generated, thus I want to have the enum-strict restriction. Interestingly, this *is* technically behavior that can be enforced at the CLR level; just not at the C# level. So what I do is at project build time, I run a post-processing of the compiled IL code to modify it to enforce this restriction within the DLL. C#'s compiler will honor the restriction if it's enforced within the DLL, so my solution 'technically' works, but having this restriction built-in to C# would greatly simplify my build process.
You should never be sending an access token with the refresh token to the token endpoint. You authenticate against the token endpoint using either basic auth (using the client secret) or via PKCE (if the client isn't capable of protecting the secret). Also, I didn't think IS4 supported tokens in cookies - mainly because there's nothing in the OIDC spec that passes information back in that way. In fact, the OIDC spec does not support cookie based authentication.
If you are already a .NET developer w/ C#, look into [Monogame](http://www.monogame.net/)
Can you explain why do you even dynamically create enum in the first place? It seems to have no gains compared to e. g. putting the data into object since you have no static typing with dynamic enum. Am I missing something? Interesting workaround with weaving IL BTW!
Just configure the Ncrunch cache properly or one day you'll wonder why you've suddenly run out of disk space.
I'll admit the gains are somewhat limited. It was partially an experience in seeing if I could do it. I like the idea that once I've generated it, I know any value I'm passed in MUST be a valid config name since it's being selected from a compiler-enforced set of possible values. My goal was to make a completely type safe config loading system. Just a hobby project, really
What are scenarios where stuff like Span&lt;&gt; and stackalloc are useful? I never felt the need for it, am I missing something?
I just turn my config file / values into classes. Gives you the same strict typing.
Yeah that's what I'm trying to achieve somewhat, but in a dynamically generated way. Think project is for the unity game engine. The input comes from an editor UI where they specify what config name/value pairs they want, and I autogenerate the classes to support accessing them from the underlying storage mechanism (.ini, json, network request, custom classes they provide for retrieval, etc). 
Does Rosynlator and Intellicode provide code optimizations like the LINQ optimizations from Resharper?
Span allows you to safely get a slice of an array without copying 
Ok I can see how this can be handy.
You have the easiest bug in the world to find, since you can make it happen in test. Run the app in the debugger, wait for it to happen, and pause the debugger. See what threads are running and what they're doing. Bug found. I don't know why looking at the code wouldn't be the absolute first thing you do. If you're bent on not looking at the code, then use diagnostics tools to find out what it's doing. Process Explorer is pretty alright for that (open the process properties tab, click on threads, and hope you have pdbs in the output folder).
I usually run my queries in mssql studio and copy them when I am done
I do the same, but because the table names are in a different lnguage I usually alias each row with the model name in this manner: $@“ select Identidad as {nameof(Pacient.Id)}, Nombre as {nameof(Pacient.Name)} from Paciente ” That way, if I rename the Name property of the Pacient class, the queries remain valid.
&gt; Clearly I'm not an expert on the matter, I rarely touch application code. Could you point me in the right direction Hire a consultant to debug the code.
Just an idea. You can probably make an extension using Roslyn to generate the sql query when you hover the string.
You could already do that with ArraySegment, but Span is more powerful, can operate on strings, pointers to unmanaged memory, etc. And lots of BCL methods are/will be overloaded to take Spans for improved performance and flexibility.
Visual Studio has a like test runner that shows code coverage inline as well
I do the same thing -- can confirm, is effective.
"Some people, when presented with a problem, think 'I know! I'll use regex!' Now they have two problems." -- Unknown Internet Guru
This guy debugs.
Does this happen only with debugging? Or can you build and run the application too? 
Are you running VS as an administrator? 
In general, try to rule out possible causes. Is it your code? You can rule this out by seeing if you can debug a simple 'hello world' application. Is it the VS version? Download VS 2017 and find out. And so on. 
Can you try attaching your debugger after you start the app? 
We have a go ;) https://gaiasoul.com/2018/05/20/the-world-heavy-weight-programming-championship-contest-is-going-down/ _"FascinatedBox"_ has accepted, with the exact same terms as I put forth!
Thanks. The intent of those was the clear previous check boxes if the main menu selection changed, but it seems to work proper without them.
Set console app as startup and F5 doesn't work? I've had no issues. I've written a few just in the past few weeks, using both dotnet on command line and regular F5 to debug. 
Just so you know, you were clearing after change. So someone checks a boxs which calls that function which then cleared that box. 
No, as far as I know C# does not use an event loop. You have the ability to create an event loop in a few lines by telling a thread to listen for events, but a normal C# program such as a console app does not have an event loop. Applications like ASP.net servers and Windows Forms app do use event loops, similar to what I mentioned above, but it's chosen to be an event driven system by the code, whereas Node's event loop is built into the core runtime. Async/Await code is executed by either the main thread or a thread from the thread pool, whatever the scheduler finds more efficient. This may have parts of it wrong or explained incorrectly. I'm not a .Net internals expert. 
I’m oddly excited about this. Let me know when it’s happening! 
Another reason to use ones as pennies is that with decimals you can run into off-by-one penny rounding “errors” as a when calculating taxes or fees on small numbers. 
Hehe :D - Will do!
It depends if an SyncronizationContext is registered. If a async operation completes, the runtime will post the continuation (the code after "await") to the registered SyncronizationContext. If no sync context was registered, the runtime will just grab a thread from the threadpool and execute the continuation there. Depending on the project type, you will have a sync context, or not: - Console applications: No sync context, so threads will be used - Winforms: A sync context is registered which postes the continuation into an event loop (the windows message loop, i think) so the code will be executed in the main thread. - Wpf: same as winforms - ASP Classic: same as winforms - ASP Core: no sync context, so threads will be used. Of course, you can always register a sync context yourself. So you can add an event loop to a console application if you want. Important to note: Each thread has his own sync context. In a winforms application, only the main thread has an registered sync context (will use the event loop). If you start a background thread in an winforms application, and then use "await", the sync context will not be used and you will be on different thread (probably not the main or background thread)
No worries, thanks. I downloaded that paper and will read it
Can’t you just configure a cookie timeout? When it times out authN will reflow. Since you’re using Windows auth the user probably won’t notice it as long as you redirect them back to where they were intending to go.
ASP.NET "Classic" SyncronizationContext is considerably more complex than winforms version. It is sorta like a main thread except that there can be more than one and the thread that handles a callback is not necessarily the thread that initiated the async action. More info: https://msdn.microsoft.com/en-us/magazine/gg598924.aspx (every asp.net programmer considering ever doing async code should work on understanding this) 
You want to screen share? 
Send me a link to the course. 
its a udemy course by mosh hamedani. Im following it loosely kinda doing my own thing in order to put more thought into what I'm doing. What I have so far is really similar to what he has done so far, just some class name differences really.
Mosh is a good teacher. Grab a download of the code for the lesson and you’ll find the EF stuff you are missing. Normally the new project template will wire that stuff up for you. Did you try to do it from scratch?
Its the first video he has for entity framework. Literally opens the program and opens nuget console and types enable-migration into the package manager console and it works
I made a new project in the same way he started the project. So I'm not sure why I would be missing anything. Do you mean go to the github commits and find it there? Where would the missing stuff be located? 
The C# threadpool uses work-stealing queues. It runs a small number of worker threads, each with its own queue of work items, and threads with empty queues will try to steal work items from other threads.
About datatype for Money/Financial .NET document prefer to use Decimal. Double will lead to trouble when try to compare.
You can make an API for your SQL query, and use [this](https://github.com/alexanderar/Mvc.CascadeDropDown) to link the second DropDown
So this might not be the issue, but on my dotnet core project I’ll end up running it from the CLI using dotnet run. I’ll forget to stop it and when I’d try to run it in debug mode it’ll give a similar error. Just need to stop the other instance that’s running and then I was able to debug fine 
Maybe try Hangfire? It allows you to schedule different things or do fire and forget tasks.
Azure Functions are fun: https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-timer Alternatively, as mentioned, Hangfire works well.
Thanks, I’ll try looking into it some more. The part I wasn’t sure about was the persistent storage requirement for using hangfire. Do I have to create a new database for that? Does hangfire create it itself? 
Thanks. I’m gonna look into this as well. This seems to be pretty straight forward to use and setting up seems to be a breeze as well. Since this is just for sending out email notifications this might be more suited for what I’m trying to do. But I’m gonna compared hangfire and this approach to make sure. 
Let me know what happens.
+1 for IHostedService. It's so beautifully simple, yet so powerful.
Check out Azure Logic Apps if you're able to use that. Basically you can set it up to accept an HTTPRequest and then do an action to send an email. Doesn't even take any code to do it other than the code to make the request. You can do the same with the database/email solution too.
I prefer fewer moving parts so would suggest Quartz.NET as a robust scheduler in general for time-triggered tasks. I don’t see the point in DIY email automation though so check out mailchimp or sparkpost to avoid going down a distraction DIY route.
Are you hosting your app with Azure or AWS? For us we use AWS lambda with a CRON timer of 5 minutes that runs a .netcore app that can check for work to do and send out emails with AWS SES (their email sending service). Works relatively well for us. As others have mentioned, Azure has similar functionality.
There was actually a nice article on InfoQ today about working with models in c#, maybe take a look at that. [https://www.infoq.com/articles/CSharp\-Models](https://www.infoq.com/articles/CSharp-Models) In my opinion you most likely won't need an additional model "layer". In my applications my services usually take DTOs as parameters and return a DTO object, but internally I map them to their according EF Entity and work with that. The only thing my controllers do is handle the HTTP request and call the according service function \(and maybe a bit of validation, but currently I'm using a middleware for that\).
Does anyone know where you can find features like this? I just recently stumbled on IHostedService, looks like these things are hard to find.
Psst, in case you want to study one of the contestants (me) before the event - https://gaiasoul.com/2018/05/21/hyperlambda-a-scripting-language-for-net-and-c/ The admin of /r/shittyprogramming came back to me, and said it won't happen for another month, because he wanted to _"market the event properly"_. I was hoping for much sooner, but I'll guess I'll just have to _"grease myself"_ with some patience ... :)
Here's a sneak peek of /r/shittyprogramming using the [top posts](https://np.reddit.com/r/shittyprogramming/top/?sort=top&amp;t=year) of the year! \#1: [Empty Comment To No One Lost in an Unending Sea of Brackets. B&amp;W 2017.](https://i.redd.it/of9nbkgblztz.png) | [50 comments](https://np.reddit.com/r/shittyprogramming/comments/78o49t/empty_comment_to_no_one_lost_in_an_unending_sea/) \#2: [I'm not a web dev, but I think this is the wrong approach](https://i.redd.it/j45r77ydvwoz.png) | [57 comments](https://np.reddit.com/r/shittyprogramming/comments/73brtf/im_not_a_web_dev_but_i_think_this_is_the_wrong/) \#3: [What sorting algorithm is this?](https://i.imgur.com/NGcJNTV.gifv) | [44 comments](https://np.reddit.com/r/shittyprogramming/comments/6oy8e7/what_sorting_algorithm_is_this/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/7o7jnj/blacklist/)
I personally feel that you should have that extra layer of models to serialize just so your serialized json is less coupled to your service layer. Having those extra models will give you some flexibility in the future and it will help keep layers of your app more logically separate from one another.
A lot of cool things coming down the line. But the Nullable Reference Types...I don't quite understand the desire for this. Anyone have any good examples of how this would be a good thing?
 public string MiddleName {get; set;} var x = p.MiddleName.Length Will this throw an exception? * C# 7: Maybe, you need add a null check. * C# 8: No. It isn't marked as nullable, so it shouldn't contain a null. (Assuming everyone plays by the rules.) 
Sold! So basically instead of all of those .isNullOrEmpty (in the case of string) or just simply if (x == null), you can either know it can be or not. Ok. I love it now.
Ok, so now for the bad news. The compiler can't enforce nullable reference types 100%. You can, for example, use reflection to force a null into a non-nullable string. 
I think this depends on the project. If you find you have a lot of effort models that aren't in the format you want for your clients to handle or if they have information you'd like to hide, go ahead and make that view model layer. Otherwise, it might not be so necessary if you can do without. 
The link shown in the presentation is https://aka.ms/Build/CognitiveServices
Octopus deploy uses nuget packages to deploy applications. It’l should be able to tie into your feed
&gt;The compiler can't enforce nullable reference types 100%. You can, for example, use reflection to force a null into a non-nullable string. fwiw F# has the same problem. Having values be non-nullable by default is still worth it.
&gt; You can, for example, use reflection to force a null into a non-nullable string. You don't even have to go that far. If you write `p.MiddleName = null!;` (notice the exclamation mark), then `MiddleName` will be `null` and there won't be any errors or warnings. [See a full example compiled with prototype C# 8.0 compiler here.](https://sharplab.io/#v2:EYLgZgpghgLgrgJwgZwLQDk4BstWFiAJQkiQDsBjCAFQE8AHFAGhhADcIEBLMWgHwACAJgAEABU7IA9mQCwAKADeCkapECAzOoCMABhHooAWwgjFIgOYQYAbhHJrdgL4q1r1ZvGSZACgF6RMmMIAEoRAF4APgNgiMDgm3cRJIEAFhEAWR8QpOV5NQKYkziybCw7AHoKkQB3KAQyLjILEQALTggkgsNi8MCygEJK6rIpWvrG5raOpJd5JyA==)
The switch-case stuff seems like it’s just adding more syntax for very marginal benefits. 
I don't see it being too dissimilar to string Thing { get { return "hi"; } } string Thing { get =&gt; "hi"; } or even string Thing =&gt; "hi"; C# has long since established itself as a complex language, so I think it's okay to add additional ways to express intent more succinctly.
I'm not using cookies as this is an API.
It would help me a lot. I've got several projects (mostly personal) that use a lot of hard-coded switch statements that fit this pattern.
Fair enough. To be clear, I don’t think it’s a bad move or anything, but I would argue that if we want to clean up the language and add syntax to make the intent clearer, I wouldn’t start with switch expressions (since I rarely use them). I would love a cleanup of properties, for example; right now auto-implemented properties are great but if you need a backing field it’s a bit of a pain and the syntax is clunky. 
I don't know your entire setup, but using Windows Auth to protect APIs doesn't seem like a good architectural decision. I would look into OIDC/OAuth for that.
\&gt; right now auto\-implemented properties are great but if you need a backing field it’s a bit of a pain and the syntax is clunky. private string name; public string Name {get =\&gt; name; set =\&gt; name; }
&gt; case Student ( var fn, _, "Cambell", var (_, _, ln) ) p : return $"{fn} is enrolled in {ln}’s class"; This is wild. I'm not sure how I feel about it right now, but when it becomes a common pattern it looks very powerful. 
&gt; public string Name {get =&gt; name; set =&gt; name; } Are you sure that works? Shouldn't it be public string Name {get =&gt; name; set =&gt; name = value; } 
you are right ;\)
Too bad, ot would have been a nice short-hand.
The term "bang operator" takes on a new connotation.
I have. I feel like it would cause runtime bugs when you change a field name. 
I think this is the best answer. Do without the extra layer and refactor when it gets painful not having it.
Hard to say, but keep in mind that C# has optional stucts (e.g. `int?`) back in 2005.
Yes, I wondered that myself. The presentation wasn't clear, but I think we're supposed to read `^1` as `myString.Length-1`.
 Mads and Dustin gave a great talk. But one thing bothers me... They are proposing to use \^1 to index of the end of an array. Because array starts are indexed at '0' I really thing they should use \^0 to index the end of an array. 0\-indexing on both ends would help adoption with a consistent mnemonic pattern. If people want the length of an array they can still use array.Length. The origin of the \^1 pattern looks to be from the desire to replace array.Length\-1. The moment you introduce either \^0 or \^1 \^0 then people will adopt it for its clarity and brevity. In the case of \^1 very quickly people will overlook the Length\-1 origins and constantly and forever be asking you why you 0\-index from both ends for consistency. 
Surely someone familiar with Vue/React has seen the abomination of npm modules a decent size JS framework frontend contains? Because there is no standard library for JavaScript. Vue/React are frameworks and UI rendering, or better yet state management with a UI layer. They do NOT have standard libraries. This is exactly where C# or other languages can step in and blow JS out of the water.
This is why I really like Python's negative indexing. Want the last element? `arr[-1]` The extrapolation from `len(arr)-1` is pretty apparent. 
Well if you really want to be pendantic, a starting index of zero is just the default. Really your array could have any lower bound.
-1 means "not found" when returned by an IndexOf function. This is actually a minor issue, as you could have an array with a negative lower bound. But that never happens in real life.
-1 from search functions makes sense, but doesn't seem like a big enough issue to exclude it from actual indexing operations. 🤷‍♂️
Consider: myList,RemoveAt ( myList.IndexOf (x ) ) If `x` isn't found in `myList`, should that throw an exception or remove the last item from the list? 
Why not learn multi-threading basic for realises? Here's a challenge (how I taught myself to multi-thread): calculate all the prime numbers between zero and one trillion as fast as possible. PM me if you get stuck, I can give you a reference implementation (in standards-compliant browser JavaScript, no less). 
To do this as a standalone service, I'm waiting for Core 2.1 with the generic host builder and such. Can't wait for that release.
That's what unit tests and `Mapper.Configuration.AssertConfigurationIsValid();` are for. For larger projects the maintenance of AutoMapper profiles can get quite painful, but for smaller to medium projects most of the times it makes life easier.
In the end it really depends on your project, but I would say about 90%; of the time in my project using the same DTO on the request and response side was suitable. For example I send a list of EmployeeDTOs (GET api/employees) to display a simplified overview of all employees. When the user wants to edit one on them a request for an EmployeeDetailDTO (GET api/employees/42) is sent. Now he can edit the employee and when he's finished the EmployeeDetailDTO is sent back (PUT api/employees/42). If there are any properties I want to make sure the user can't change, I "ignored" them in my reverse mapping from DTO-&gt;Entity (you could write a middleware to automatically send back a 400 Bad Request, if it was changed). This is an example mapping for AutoMapper which I use for most projects, but you could do the same thing manually. ``` CreateMap&lt;Employee, EmployeeDetailDTO&gt;() .ForMember(eDTO =&gt; eDTO.IsActive, config =&gt; config.MapFrom(e =&gt; !e.IsDeleted)) .ReverseMap() .ForMember(e =&gt; e.IsDeleted, config =&gt; config.MapFrom(eDTO =&gt; !eDTO.IsActive)) // Ignore EmployeeNumber in reverse map so it can't be overridden in the entity .ForMember(e =&gt; e.EmployeeNumber, config =&gt; config.Ignore()); ```
[x-post from /r/vscode] This is my list of the best extensions for Visual Studio Code.
Hi. I'm having trouble understanding some various terms regarding pricing for devs getting starting with Cognitive Services. Can you explain the differences between these as found via the Azure CS site: * Free tier * Free trial * Non-production API usage
What is sent as the content-type by your AWS CloudFront/S3 backend? The issue is not with `Redirect`, that just returns a 301/300.
The index ^0 stands for array.Length (i.e. array.Length-0) and can be used in an array range where the last index is exclusive, e.g. array[5..^0] is the same as array[5..] (slice of elements at index 5 incl. up to length of the array excl.). Since variables can be used for an index in a range, this allows to assign the index type value that represents the array length (independent of the array it will be used on). If ^0 were to represent the highest inclusive item index, array.Length couldn’t be represented.
At the moment, I studied it with [https://docs.microsoft.com/en\-us/previous\-versions/msp\-n\-p/ff963553\(v=pandp.10\)](https://docs.microsoft.com/en-us/previous-versions/msp-n-p/ff963553(v=pandp.10)). It is based on .NET 4, and TPL, but I find it sets the foundations quite well.
It’s kind of low-key, but I love rainbowCSV
It'd be nice if they had some construct that represented a getter/setter combo. Like if an object implemented specific methods, Get and Set: `public interface IProperty&lt;T&gt;` `{` `T Get();` `void Set(T value);` `}` Then I could do: `public string Name = new SpecialProperty&lt;string&gt;();` And the client could just do [`object.Name`](https://object.Name) `= "Hello", or var value =` [`object.Name`](https://object.Name)`;` Then I wouldn't have to be creating backing fields and repeating logic across several classes.
Thank you for creating that list.
Sure thing. Feel free to suggest new extensions as comments! :D
I would check, if the response that contains the actual payload contains a content dispostion header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition If is specifies attachment, you will get a download prompt, even if the browser supports the content type natively.
I definitely love using font awesome in xamarin forms. I prefer to use https://github.com/jsmarcus/Iconize because there are no manual steps of downloading the fonts or adding device specific don't families to your labels. Install the nuget package and put an iconize label on and your are done. Supports material icons and others too.
It really depends on the size and complexity of the application itself. I try not to make technology choice based on hype 
Good point. I'll edit my post to add this as additional information. I am thinking about large and complex applications. Mainly enterprise apps.
If I am understanding you correctly I'm thinking \^0 should return the Index object and \^1 should be shifted 1 from the end. Correct me if I'm misunderstanding you please.
Just use array.Length for array length \- right?
You’ve got some really good ones in here I haven’t heard of. Thanks!!
Thanks! Appreciate the feedback.
That is if you want to work with the length of an explicit array. From my understanding, as ^0 could be implemented as a new type Index, so it won’t be related to any array or range; ^x would just mean “-x from the end”, and you could assign that to a variable and apply it to ranges and e.g. multiple arrays that have different lengths. 
That's all nice, but still two features I am looking for at the moment at most are F#\-like reverse pipeline operator and passing lambdas into attribute's parameters.
&gt; and your boss wants heavy unit testing around this area I'd hope the developer would want to test their code too.
Sure! Which service in particular are you interested in trying out?
Can Blazor access the DOM tree?
I have found [Concurrent Programming on Windows](https://www.amazon.com/Concurrent-Programming-Windows-Microsoft-Development-ebook/dp/B0015DYKI4/ref=mt_kindle?_encoding=UTF8&amp;me=) an excellent one, although a little bit dated.
Smile links: Link 1: https://smile.amazon.com/Concurrent-Programming-Windows-Microsoft-Development-ebook/dp/B0015DYKI4/ref=mt_kindle?_encoding=UTF8&amp;me=) Amazon Smile is a program that donates 0.5% of your Amazon purchase to a charity at no additional cost. I am NOT affiliated with the previous Amazon Smile bot, which swapped Smile links for its affiliate links. ^[Info](https://www.reddit.com/r/hkyq/wiki/index)
If you use Git- Gitlens is incredible.
Great list! I use many of these extensions when I am using VSCode instead of Visual Studio or JetBrains
I would definitely recommend Prettier over JSHint. Prettier is arguably the best JS code style tool out there. Other highly notables: Path Intellisense, Bracket Pair Colorizer, Import Cost (for front-end devs), and Settings Sync is a must-have for anyone who works on the same code-base on multiple machines.
Many Swift functionalities are wrappers around C++ libraries. C++ is everywhere behind the scenes.
Isn't Prettier and JSHint two different things? Prettier looks like formatting only. I didn't know about that extension, so will try it out for sure. The other extensions definitely looks great too. Is Settings Sync better than EditorConfig?
Prettier is more for formatting, but it integrates very well with eslint, which is probably a more popular linter than jsHint. The beauty of SettingsSync is it creates a github gist of all your settings, which you can download and install just by supplying the gist id. It's pretty much for devs wanting to duplicate their vscode settings across different machines. It's super easy to set up, and reset if you lose a token or id that's needed to upload/download your settings.
As with all questions like this, it depends. You did name the usual suspects in your post, and there are some upsides and downsides to all of them. Me, I am curmudgeon and don't use a big framework by default unless the app calls for it; jquery and handlebars gets me through most of my applications since I don't do anything crazy. Angular - Personally, the one I dislike the most. It is very invasive in applications in my experience. Though you could say this about just about any framework, but when you are in an Angular App you know it and there is no getting away from the angular side of things. I find it a bit heavy, but does somethings like data-binding really well. React - I like react since it is more modular, very performant, and ideal when you are going to have many reusable bits to your application. On top of that, it makes a good segue into react native if you want to go mobile ever. I usually think of react when there are the need for many bits, pages, sections that will look the same and I only want to maintain in one area. Vue - This would probably be my vote for the big 3. It's lighter, very readable, and doesn't take over my applications so I can keep things a little more separate if I take the time. Somethings it makes simple, some takes a little extra work, but overall I enjoyed it more than I thought I would. But try them all out and see what you like. If you sit down for an hour or 2 and go through the "getting started" for each one, you will come away with something that feels right; none of them would be "wrong" anyways.
Well, postman is showing a message that chrome apps are going away, I guess REST client will come in real handy. 
Chrome apps will be going away yes. But Postman offers a downloadable app, that is superior to REST client in most ways: https://www.getpostman.com/apps
Will check out Prettier for sure! SettingsSync sounds cool. Kind of another focus that EditorConfig, I see that now. A gist for syncing the settings between my desktop and laptop would be nice for sure.
That code runner seems really cool! Had no idea anything like it existed
Yeah. LINQPad is awesome as well, if you don't already know it.
The Bing Search API doesn't have a free tier. You can sign up for the $200 Azure Credit to get started. If you're an [MSDN subscriber](https://azure.microsoft.com/en-us/pricing/member-offers/credit-for-visual-studio-subscribers/?WT.mc_id=none-reddit-bramin), you'll also get $150. If you're a student, you can sign up for the [Azure Student program]( https://azure.microsoft.com/free/students/?WT.mc_id=none-reddit-bramin) which comes with a $100 credit.
Linqpad was the best ($40ish?) ever spent on programming stuff. Its so great for quick database stuff and testing. Now with Roslyn there are more choices, but linqpad is still my teams go to for quick stuff and scripts. Works great for quick fix type stuff or small tasks to automate.
If you tell me a little bit more about the whole user flow, and maybe share an image of what you have now or how you would like it to end up, I would be happy to share how I would approach it.
Kotlin has it first.
I've always used the standalone app too.
&gt; Should I change my structure Very likely. Not just the singleton and instantiation of the classes; loading everything in-memory isn't exactly great for your system load. &gt; is the casting error easy to fix? I've never seen that exact error, but I'm gonna go ahead and guess that it has to do with having the context open in multiple locations. [this](https://stackoverflow.com/questions/46138168/unable-to-cast-object-of-type-system-data-providerbase-dbconnectionclosedconnec) seems related to your problem. My question is, why aren't you using DI? this: &gt; My game object needed a reference to each Manager in order to call the update loop, and some managers need references to other managers. I got around this by not using DI at all. seems like it would actually easily be solved with DI.
The reason for pulling stuff into memory is that the API is also acting as the game server, and is continuously running logic and updating items/models. The alternative would be to GetAll from the database every minute or two for any items that need game logic run, run the logic and then save the results. My fear is that would be too big of select statements and would cause hangs in the DB. I did see that same thread regarding the DbContext issue and will tinker with it when I get home. Regarding the DI question, I did it the way I am because I was having a lot of issues finding a way to instantiate the Game object from the startup file and executing a continuous game loop that isn't blocking anything else. For example in my Startup file, I couldn't figure out how to instantiate the Game object and tell it to start running. The way I'm doing it now was the only way I could get it to work (by manually instantiating it and then manually instantiating everything down stream ie: managers and repos). I've been thinking today that the only way I could get around that is to treat the Game object as a manager with it's own interface, and add it as a singleton service in ConfigureServices, and then I would have to manually execute an HTTP call to a controller that would use that Game service to fire it up. Doing it that way, the managers would need to be singletons as well as they would need to update periodically.
For multithreading, my favorite starter (and sometimes reference!) is the free [Threading in C#](http://www.albahari.com/threading/) e-book by Joseph Albahari, the author of "C# in a Nutshell". It covers multithreading on about as low a level as you'll care about for most practical .NET work.
Multiprocessor-pipelined type work tends to be when I reach for Akka.NET. From a Push-Pull approach it's a bit of a hybrid; the scheduler does something akin to Time-slicing, where X messages will get processed by an Actor (worker, if you will) before the next one gets a turn on the thread. When processing, messages are pushed to the queue. As far as adaptive priority, the closest I've seen in that paradigm is to adjust the number of workers based on load, another is to utilize different dispatchers for different workers. Although, once you get to that point (Akka or a similar Distributed Framework) you can just decide whether to have whole extra processes/machines handling the really intensive stuff. 
Are you using IIS? You will also need to download the Database server.
The C# code running in WebAssembly cannot access the DOM directly. It has to go through JavaScript.
Is it aspnet core or aspnet 5.x?
I hope Microsoft really make it official!
It honestly changed my job. So much easier to see how larger projects are growing and changing underneath you.
I searched for Prettier about a dozen results. Also, it seems to be a code formatter rather than a linter, which is what JSHint seems to be.
It sounds like you are at about 10% of the learning curve. Here's a link to the architecture documentation. https://msdn.microsoft.com/en-us/library/yedba920(v=vs.71).aspx This is going to take you a while, but I recommend you keep digging into everything you don't understand about that architecture diagram until you get it. At that point, hosting problems will be intuitive and a non-issue.
Thanks, this is a great answer.
You probably have a connection string in your code somewhere. Most likely it's in your web.config. That is where you tell your code where and what to connect to. You should have the address to the database server, the database(catalog) you're connecting to, as well as your MSSql username and password. When you upload, you'll need to change the connection string so that it connects to the db on somee.com instead of your local instance. Your steps should be like this probably... 1. Figure out how to create a database on somee. Probably somewhere in the control panel. 2. Script your local database and run that script on your somee db so they're the same. 3. Add(ftp probably) a simple html file to your web space. Very simple. I'd say no scripts and definitely nothing with server-side code. This will tell you if your browser can hit it, and your space is active. 4. Upload a very simple web project and see what it does. There may be some configuration issues you need to deal with, so make a very simple landing(index) page that requires no DB access.
What is your specific question? Are you using .net core? Are you hosting on aws? Are you using SQL server in rds? Rds is just a database so you just set a connection string in the config file. 
&gt; Akka.NET Yup Actor based programming. :) Really makes things easier. https://stackoverflow.com/questions/39263257/what-is-the-difference-between-tpl-dataflow-and-akka-net 
You have to setup a sql database (that matches the type you programmed for). A company will have it available for you to use a connection string and credentials to access. Next you need to get a VPS or some other hosted computer you login and run. Azure automates all this if that's easier. It's not trivial to host a backend until you actually know what you're doing.
From EF's point of view, RDS just looks like a database server of whatever flavour you've setup. To maybe help yourself click, try connecting without EF first sitting in the middle hiding things?
Thanks a lot. It is good that you told it step by step. Now i do know what to look for to upload my project. And my connection string is automatically created thanks to visual studio. It's gonna be a bit challenging for me to configure it, but i believe i can manage.
So Sorry for this being worded so vaguely, but my issue lies in trying to not leak information about the database endpoint and overwriting the connectionString in web.config (In my case it's config.json) with the appropriate connectionString from Travis CLI environment variable.
I mean, the endpoint does work. What I am trying to do is feed an environment variable into web.config (config.json in my case) file and overwrite the connection endpoint in the middle of passing the fully set up application to aws ec2 in order to not leak the database endpoint to github.
Yeah, I see your point. The thing is, that this app is using docker as well, so I don't think that I can binge in the config.json into the EC2 instance. What I think I will try to do is before pushing everything to EC2 run a script that creates the file and gets assigned a value of Environment Variable from Travis CLI, which is a full connection string to the endpoint. So, I would .gitignore config.json and then create it again using a .sh script.
Skip the config file and read the your config from environment variables in production. .net core (well I think it's actually asp.net core) has a AddEnvironmentVariables for the config builder for example. ([See here](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/configuration/?view=aspnetcore-2.0&amp;tabs=basicconfiguration#configuration-by-environment)) There's ways to do this if you're not running asp.net core too.
If I have the config builder, will that allow me to overwrite the variable in case I pass it using Travis CI for Production? Also, I am working on a Mac from Visual Studio Code, so I don't have the tools that people have using Visual Studio 2017, so I am having difficulty running a certain profile for my builds. I am using (dotnet run --profile Development) and the env is still production. However, when I use (ASPNETCORE_ENVIRONMENT=Development dotnet run) my environment is Development.
These are the customer-reported issues addressed in 15.7.2: * With 15.7, users installing an extension on the command line with a nested extension may see an error installing. This has been addressed in the 15.7.2 servicing release. * Anaconda fails to uninstall during upgrade and issues warning (Error 87). * The SSDT 15.6.0 Installer configuration registry key could not be opened.. Editor performance Issues when editing JavaScript. * The Code Coverage functionality in Visual Studio 2017 ignores async methods. * Missing atls.lib in arm/arm64 after update. * Test Explorer no longer greys out the previously run unit tests. * Version 15.7.1 debugs .aspx App in a new Chrome instance even if JavaScript debugging is disabled. * 15.7 compiler fails with Folly. * ASP project keeps running after closing the web page. * Chrome Debugger not working and shows an error message, however, the debugger buttons stay active. * Rename Python from Rename on the Refactor menu no longer works. * Visual Studio Installer doesn't work correctly in low disk space conditions. * Debugger links to browser when previously not set. * Problems with template argument deduction for class templates. * C++ constexpr string_view == fails to compile. A regression in Type Providers which use native resources (e.g., FSharp.Data.TypeProviders) has been fixed. * You can now add files to F# ASP.NET Core projects from the UI. * Listening to Microsoft-Extensions-Logging causes VS diagnostic events window to disconnect with an error message has been fixed in Service Fabric Tools.
The documentation I linked you to above talks about being able to load config settings (specific settings) from different sources and what order to set things up so that priority can be given. By default in asp.net 2, I think Environment Variables take priority, if you use the default builder. But again, it's all in the documentation. For your builder profiles, the switch is [--launch-profile](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-run?tabs=netcore2x) and whatever profiles you have set up in your launchSettings.json will be what works. If you're wanting it to work that way. [This page](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/environments?view=aspnetcore-2.0) has more details on that.
Thank you so much for helping me out with this!! I will give it a test run tomorrow, hopefully the variables passed from Travis CI would be available as Environment Variables in the application itself. Again, thank you so much for all the information that you provided!
a new version everyday. they have to implement silent update feature because I'm tired of updating VS.
It's fine. I've visited heavier websites than VS minor updatse.
Imagine me then asking the IT division for permission to update software for every release lol
They're doing smaller, more frequent updates nowadays.
You just need to use FTP to upload your files. Please just download Filezilla or CoreFTP and then you can begin to upload your files.
They really should have improved their update process first
isnt it obvious? - unit testing - being able to use different implementations with a fall back if things go wrong in prod in niche cases (xml config variant can come in handy here)
Are you sure that's Resharper's doing? There is an option in VS - Text Editor -&gt; C# -&gt; Code Style -&gt; General. Try setting that to prefer this.
They have. Metric shit tons to be precise.
Well you'll need to host it somewhere. I think [Mircosoft Azure](https://azure.microsoft.com/en-us/free/) offers a free tier where you could host the app itself. You'd also need to host the database somewhere which I don't think you can do for free on Azure.
Thanks, all of the "Qualify field access with 'this'" options in the Code Style menu have "Severity" set to "None" but were on "Do not prefer 'this'". I didn't want to prefer or not prefer any method. I just wanted the warnings disabled altogether and thought because it was set to "None" then nothing would show up as a suggestion.
I did but no use. It was also set to "None" on severity in that menu. Still greys out the text slightly and shows a suggestion when I mouse over it.
Hey Brandon, your list needs a bit of formatting. 😂
People: they should improve the update process! Also people: why do I have to keep updating the installer!!
For me, the big change is installation location. You can now put everything on another disk. 
maybe we couldn't have the installer, maybe VS could update itself
Formatting suggestion: replace all your bullet point symbols with an `-` character, and Reddit will convert this into a nice bulleted list with line breaks and everything
I wouldn't say there _should_ be. But there could be! A good strategy is to start really simply and just let it evolve. If you reuse the same DTOs, do you find that you are needing to leave some properties out before they get to the response? If so, only THEN consider another set of objects to map to. For one of my teams projects, we do have a separate DTO set for the API since our business models are jam packed. There's [a handful more strategies here](https://purple.pizza/how-to-organize-your-projects/).
• With 15.7, users installing an extension on the command line with a nested extension may see an error installing. This has been addressed in the 15.7.2 servicing release. • Anaconda fails to uninstall during upgrade and issues warning \(Error 87\). • The SSDT 15.6.0 Installer configuration registry key could not be opened. • Editor performance Issues when editing JavaScript. • The Code Coverage functionality in Visual Studio 2017 ignores async methods. • Missing atls.lib in arm/arm64 after update. • Test Explorer no longer greys out the previously run unit tests. • Version 15.7.1 debugs .aspx App in a new Chrome instance even if JavaScript debugging is disabled. • 15.7 compiler fails with Folly. • ASP project keeps running after closing the web page. • Chrome Debugger not working and shows an error message, however, the debugger buttons stay active. • Rename Python from Rename on the Refactor menu no longer works. • Visual Studio Installer doesn't work correctly in low disk space conditions. • Debugger links to browser when previously not set. • Problems with template argument deduction for class templates. • C\+\+ constexpr string\_view == fails to compile. A regression in Type Providers which use native resources \(e.g., FSharp.Data.TypeProviders\) has been fixed. • You can now add files to F# ASP.NET Core projects from the UI. • Listening to Microsoft\-Extensions\-Logging causes VS diagnostic events window to disconnect with an error message has been fixed in Service Fabric Tools.
Yes: https://imgur.com/13aaZ4x
Anaconda issues is nice to see. Always get that error message.
Have you actually checked this? It's always been "setup allows you to select another drive to install to!" but then it still requires 8 GB on C: regardless
Can't watch right now. Can someone post a tl;dr;?
It opening a new chrome window for debugging ASP.Net apps even with JavaScript debugging disabled was so annoying. Glad it's fixed now.
Haven't tested it yet. It would require me to uninstall it and reinstall it. Can't do this yet. Maybe I can ask the devs about it.
2.1 almost rtm, kestrel is fast.
Is it worth watching or does that cover everything important?
They've slowly been moving more stuff to the install drive. It isn't everything yet though I don't believe. 
Is it possible to host the app+DB locally somehow? Uptime of the app is really small, it's a concept project, so getting it run "on demand" and having it "up" for a few hours every week is perfectly ok with me.
Is it possible to host the app+DB locally somehow? Uptime of the app is really small, it's a concept project, so getting it run "on demand" and having it "up" for a few hours every week is perfectly ok with me.
https://docs.microsoft.com/en-us/visualstudio/releasenotes/media/installlocations-2.png
The official docs already explain a lot of things https://docs.microsoft.com/en-us/aspnet/core/?view=aspnetcore-2.0 https://docs.microsoft.com/en-us/aspnet/core/tutorials/index?view=aspnetcore-2.0
Late to the party, but I tried out UWP for a bit. I love the interface, but under the hood I found it lacking compared to the stuff I can quickly do in WPF. If you want a quick standalone tool, stick with WinForms/WPF.
Scott Allen has a really good one on pluralsight https://www.pluralsight.com/courses/aspdotnet-core-fundamentals
Fair enough
That does look promising.
Most cloud services do not let you just temporarily run a database. They usually require you to delete the database when its not in use (aws might let you now for up to 7 days), so you would incur costs when not in use . If you make the scripts like I was suggesting then this wouldn't be an issue. You just create a new db anytime you need it. If you are looking to do this for free then just host sql on your pc. Google how to configure remote access to sql server. You'll need at least sql express or developer edition. All the other users would need to be on your same network to connect to your ip. You could share it over the internet if you setup port forwarding in your router.
https://www.reddit.com/r/dotnet/search?q=tutorial&amp;restrict_sr=on&amp;sort=relevance&amp;t=all
Techempower benchmarks are now saturating the 10gig ethernet, so they're uprgrading the network.
Not a tutorial but you will get far if you check these out https://github.com/dodyg/practical-aspnetcore
Is it just me, or does every Visual Studio update break Xamarin in some way? I have to do the "Build: fail, rebuild: fail, restart vs: fail, build: fail, rebuild: success" dance every time there's a VS update. This time around it was "CssG is not a valid target".
This kind of question can go deep and sorry if I'm answering completely wrong with some goes without saying concept. But it sounds like you are just getting started on MVC. Excuse me if I'm wrong. I believe you are talking about sharing some work with some friends for testing. If you are using ASP.NET CORE then you will have a Kestrel server. You could optionally run this on your work station and provided port 80 is open on your firewall or router you will be able to serve pages to the internet via your IP just searching what is my ip on google. Then your database will be accessed locally exactly the way you did in development.
I'm doing Shawn's +1
I liked it because I was fresh to .NET Core and was going to be working on a project that incorporated virtually everything his course included, but I found that I needed something more in-depth on EF Core which is why I picked up Julie's course as well.
Seems like you have a good start already with having a proper license, a good README file and site with usage docs. I wouldn't stress out too much about promoting the project, as I think people will find it on their own as they search in NuGet and GitHub. But if you want to try, you can try sending the project to some of the news aggregators like [Morning Dew](https://www.alvinashcraft.com/) and [The Morning Brew](http://themorningbrew.net/). That will get some eyeballs on your project.
More or less a tutorial but also a book: https://github.com/nbarbettini/little-aspnetcore-book. I'm helping translating it to pt-BR.. and I think it's quite good introduction and it leads to build a complete web app. Definitely check it out :)
Someone asks for a tutorial and you post the fucking msdn... You're actually on Reddit, you must have accidentally closed the stack overflow tab you were answering questions on.
I tried it in sql query with this: SELECT * FROM Tasit WHERE TasitNumarasi = 'AC123' it returns a row. Maybe i need to add something to code? I have a delete command works fine in the same page. So connections is working fine. Textbox names are also fine. Column names are fine. I am not sure if my code correct at all. I don't know how to use DropDownList to get data from table. This is also my first time using Reader.
Have you stepped through the code with a debugger? The best way to find out what your code is doing is to watch it run.
To be fair if the wind blows the wrong way Xamarin breaks. Usually fixes itself with a clean or a hard delete of bin and obj folders. 
That one seems to be a part at for thing. What about free?
Should've probably specified free, most of these links seem to charge
Structure them around lunch ....
Ohhh, i am so smart, i didn't enable AutoPostBack. And i was looking for a solution literally for hours. I am so sorry to bother you. I did debug it. And it literally showed nothing. Sorry guys.
I gave up trying to do this. Even if the main program is on another drive there's still a ton of stuff that ends up in c:\
For one of my OSS projects I searched for problems on StackOverflow that might project would help resolve and posted an answer linking to my project and explaining how to use it.
That’s a bit harsh. Fucking MSDN has both tutorials and dry API references. I do think the site could be even better structured for discoverability though.
DOH! Been there, done that. Multiple times. But the debug showing nothing was an important clue. It told you that the code that you wrote wasn't being executed. That's useful information :)
Also, what's wrong with MSDN links? It's very frequently updated with tons of examples and getting started guides. If OP is already familiar with similar stacks, the docs can be a great place to start!
I actually was using msdn... rough read sometimes and you'd think Microsoft could do a better job with them. Problem is, not much direction with msdn. So you could spend half the day reading up on something that isn't what you were looking for.
AWESOME! Thank you!
Looking into it now. Thanks!
Haha - It looked great on mobile, but not so much elsewhere!
Thanks /u/wllmsaccnt!
Jeff Fritz literally just did an 8+ hour Livestream workshop on ASP.NET CORE. Google it.
&gt;Jeff Fritz literally just did an 8\+ hour Livestream workshop on ASP.NET CORE for the lazy I assume this is it [https://www.youtube.com/watch?v=\-\-lYHxrsLsc&amp;feature=youtu.be&amp;t=1m](https://www.youtube.com/watch?v=--lYHxrsLsc&amp;feature=youtu.be&amp;t=1m)
I've always liked MVA for video learning. Try ASP.NET core [beginner](https://mva.microsoft.com/en-US/training-courses/aspnet-core-beginner-18153), [intermediate](https://mva.microsoft.com/en-US/training-courses/aspnet-core-intermediate-18154) and [advanced](https://mva.microsoft.com/en-US/training-courses/aspnet-core-advanced-18155). It shows razor pages though not MVC, but they aren't that different.
The MSDN for .net core has tutorials -- that's how I learned it!
No worries.
None that work 100%. Be ready to spend a lot of time resolving errors.
Best advice I can muster: try harder. I mean it's a simple question but there are number of ways you can do this. There is no universal best way. A simple Google search for something like this is going to yield thousands of perfectly valid results. Pick one and roll with it.
Either start your own live coding stream where you work on it, or get an existing stream to feature it once or twice.
Random tip: People love improving performance. Benchmark how your thing will make their things faster, put it in a graph, slap it on twitter/reddits/facechats/etc
You probably don't need NextResult at all (only if your query actually returns multiple result sets). Reader.Read will give you the next row, like: var reader = cmd.ExecuteReader(); while(reader.Read()) { // processRow }
Oh man, I don’t think anyone could stand watching me code. Thanks for the suggestion though, I have never heard of anyone doing that. Do you know any good ones (pref. C#, Python, or JS) I can check out?
Sign up for Visual Studio Dev Essentials and you get a bunch of free/limited resources, one of which is 3 months access to Pluralsight.
If anything, don't read the replies to that post. About the article, it's interesting, especially the closing paragraph where the VP says that MS hasn't heard properly what people want to do. I find that intriguing because apparently they do have learned we all want to use UWP. 
Yeah SqlReaders .Read method should do the trick. Just to make sure it's working you can add an if(reader.HasRows) check before the while loop.
I tend to discover new projects and libraries through blog posts that get picked up the [Morning Dew](https://www.alvinashcraft.com/) and [The Morning Brew](http://themorningbrew.net/). Pick a real world issue and create a blog post (or a series) explaining how you'd solve it with your project.
I think I don't understand what you want to achieve here. Can you please elaborate on what you actually need to implement ? 
VueJS :) ..if it's enterprise like application, I also add Vuex and Typescript.
In Windows, .NET Framework and .NET Core use I/O completion ports. In other platforms, .NET Core uses whatever is available: kevent, poll or select \(see [synchmanager.cpp](https://github.com/dotnet/coreclr/blob/master/src/pal/src/synchmgr/synchmanager.cpp)\). For non\-UI applications, you shouldn't care about event loops in .NET. In fact, JS only has the notion of an event loop because, historically, JS runs in a browser which has an event loop. You could perfectly have a non\-browser JS that doesn't have an event loop. With proper synchronization primitives, it could even be multithreaded. I suppose you can consider any generic asynchronous I/O based on blocking calls as an event loop, whether it's [GetQueuedCompletionStatus](https://msdn.microsoft.com/en-us/library/windows/desktop/aa364986(v=vs.85).aspx)/[GetQueuedCompletionStatusEx](https://msdn.microsoft.com/en-us/library/windows/desktop/aa364988(v=vs.85).aspx), any of the Win32 [wait functions](https://msdn.microsoft.com/en-us/library/windows/desktop/ms687069(v=vs.85).aspx), [kevent](https://www.freebsd.org/cgi/man.cgi?query=kevent), [epoll\_wait](http://man7.org/linux/man-pages/man7/epoll.7.html), [poll](http://pubs.opengroup.org/onlinepubs/9699919799/functions/poll.html) or [pselect/select](http://pubs.opengroup.org/onlinepubs/9699919799/functions/select.html). The .NET APIs should be agnostic regarding the OS and underlying libs. Relying on libraries, such as libuv, is a design choice on whether to depend on their evolution as well as their regression, especially regarding supported operating systems and compilers, so it might be a righteous case of the NIH \(not invented here\) syndrome. In the specific case of libuv, there's a lot of overlap with its [features](https://github.com/libuv/libuv#feature-highlights) and the .NET CLR (common language runtime) and BCL (base class library) features, so it would make more sense to either dive deep in it for more than just asynchronous I/O, or not at all since .NET has got it working for itself longer, at least in Windows.
My guess is that he wants to pass data from the attribute to the controller/action. I'm not sure but I think something like Request.Properties has to be used for this.
Yes, it would certainly be possible to host it locally on your home network, but you probably don't have the ability to unblock ports 80 (http) and 443 (https). If you serve it on a higher port such as 8080, then you can probably make it work if you have access to login to your router and do port forwarding. Your database will probably be running on the same machine as the app, so at least there won't be anything to worry about there as far as unblocking something. Generally you don't want to expose a database to the web directly.
unndunn is dead on with these responses. It may be that you are "putting the cart before the horse" so to speak, in the sense that you're having trouble making your code _work_ because of how focused you are on the architecture. Depending on how much time you have, I think it would be a good exercise to try doing what unndunn said earlier by putting the migration and initialization in the data project. You set out to limit dependencies, so keep it up! :) Another strategy is to implement features first and then do a session of refactoring, so rather than wonder where something new should go, you have something that already works and it's a lot simpler to think "well i can put it here and it will continue working". Just some thoughts I wanted to add. [This article](https://purple.pizza/how-to-organize-your-projects/) (which honestly may be the one you are referring to) has a handful more ideas in that area. 
unndunn is dead on with these responses. It may be that you are "putting the cart before the horse" so to speak, in the sense that you're having trouble making your code work because of how focused you are on the architecture. Depending on how much time you have, I think it would be a good exercise to try doing what unndunn said earlier by putting the migration and initialization in the data project. You set out to limit dependencies, so keep it up! :) Another strategy is to implement features first and then do a session of refactoring, so rather than wonder where something new should go, you have something that already works and it's a lot simpler to think "well i can put it here and it will continue working". Just some thoughts I wanted to add. [This article](https://purple.pizza/how-to-organize-your-projects/) (which honestly may be the one you are referring to) has a handful more ideas in that area. 
Thanks, Vue seems to be quite popular. 
Well, that was easy. I screwed around with nextresult for the entire day. I took it out and replaced it with rdr.read and it worked great. Thanks.
Sorry for the delay in getting back to you. Exaclty as /u/Senn-0- says. I assume there's a context somewhere holding this information. It used to be accessible from the places in the historical examples I posted, but I don't understand the current architecture. Basically I just want to know, while in a controller method (or more likely, the auth service which is registered to be invoked before that) how do I get at the attribute info. The examples actually just save stuff to a shared dictionary, so it would also help to understand the per request contexts that are available. Sorry it's not super clear, I don't have all the terms in place yet, so it's harder to talk about clearly.
From Microsoft, there was one, not sure on the state of it now: dotnet new --install Microsoft.AspNetCore.SpaTemplates::* I think it's dead now: https://github.com/aspnet/Announcements/issues/289 But there are plenty of templates out there. I've used this one before: dotnet new -i aspnetcore-vuejs dotnet new vuejs from https://github.com/MarkPieszak/aspnetcore-Vue-starter There are templates for vue and aspnet core that haven't been setup with the dotnet new command, but can just be downloaded from GitHub
Wow I thought you must have been exaggerating, it's a cesspit.
If you're dead set on keeping your existing membership database you have the option of writing the underlying `IUserStore` interface and using asp identity. That's about the best support you could get for this - you would have to create your own EF model of the membership database and implement all of the interfaces identity is dependent on to operate.
That sounds worse than just migrating! 
I've been looking at Vue too. Angular is just so freaking over\-engineered and Blazor looks to be years away. Please check back here after you play with it for a little while and let us know your thoughts after using it.
It probably is. I was in your position about a year ago. We decided migrating was impossible because we couldn't reverse user's passwords to insert into the new identity database. Wound up creating a small api service that would authenticate members against membership, and if successful return the user data so it could be imported into identity. It worked fairly well, the only downside was users don't show up until they login for the first time.
And ReactJs mixes HTML and JavaScript too much. Which is "fine" for NodeJs/server side, but for client side it is cleaner to keep HTML, CSS, and JS in their own silos as much as possible (even if the HTML contains template definitions, you'll still know where to look for simple site layout alterations). Vue.js definitely seems to be the sweet spot right now, I'm genuinely surprised it isn't more popular and its lack of popularity makes me a little reserved, like I've missed a core defect or similar. 
I use that second link as well. It works pretty well, but I think (as of my last use of it a few months ago) it requires an older version of webpack. 
Too many benefits to list on mobile right now. The time required to upgrade the MS starter projects has turned out to be counterproductive for me. They're still a good starting point if you're new to the JS world. 
I've been using it for a few years with .net. it's awesome
Exactly, and you can't just learn React, you have to learn React AND a bunch of supporting things to make a full SPA
I recommend using the vue cli either within you core project or in a folder separate from your core project. IMO having them separate is better, you really just need the generated js files for your core project so there's not a lot of benefit to having everything within your core project. Just set the webpack output location to the JS folder in your core project. I would use VSCode or WebStorm for writing the Vue code, with Visual Studio open at the same time for the MVC/API stuff. They are much better for client side code with good Vue plugins or built-in support.
[removed]
The wrong decision of locking the entire world to a single language that can run in the browser is now finally been fixed with WASM, no? So devs are now free to use whatever. Why wouldn't this apply for HTML/CSS, why lock everyone to something concrete. Give the tools to the people and let them build the great things of tomorrow.
Every time I read this statement on the FAQ I feel it's put there just to calm down the poor souls of JS only devs. C was not meant to replace Pascal and FORTRAN either.
I am forced to “make it work” a lot too but if possible I would have migrated all the accounts and assigned a temporary password to each user to be changed at next login. No need to increase complexity for x years to prevent x hours of manual hand holding now.
It's about time we start to tell the difference between webSITES and webAPPS. Slack does not need to be crawled by google bots. Font resizing can be done, help for disabled people can be done, CTRL+F do you have CTRL+F in skype? Does it highlight the Contacts menu when you are searching for "contacts"?
Blazor currently runs on Mono. Mono is a .NET runtime itself written in C. It has it's own GC (written in C). You can compile C to WASM. GC support in WASM will mean that GC can be stripped out from the runtime and left to the browser to handler with better performance + some other advantages like sharing "real" objects between JS (read the DOM) and WASM.
Angular is over engineered? How do you think that?
Nice. Is there any version of this for vscode?
Try making an Angular 6 SPA that connects to your Web API and displays some data. I bet you end up with at least 50 files.
How is file count indicative of over engineering? Most of the files are just setup and config (packages, launch patterns, etc) only the files in your app folder should matter, of which you'll have your app module and app component (if you just have your default), that's only two actual needed files
Regarding Blazor, it looks amazing, but I have some concerns about it that I don't quite know how to articulate. Basically, I feel like .NET developers have split into two camps: The first group has embraced JavaScript / TypeScript and become comfortable using frameworks like Angular and React. The second group (including some of my co-workers) has gone to great lengths to stay in VB.NET / WebForms and will maybe do MVC if forced to, but will avoid learning TypeScript at all costs. I'm worried that Blazor will give this second group a way to stay in their "bubble" and indeed block the adoption of JavaScript libraries at work, thus affecting not only their employment prospects but the employment prospects of the rest of us too. For example, it would be harder to move to a team that uses Java or Python as a front end developer if you don't know React because your team decided on a .NET only solution of Blazor. Does that make sense?
Nice try nsa
I wouldn't say it could get abandoned. Check out /r/vuejs. Some big sites use it too! Interesting read for how Gitlab uses Vue: https://about.gitlab.com/2017/11/09/gitlab-vue-one-year-later/
Dude, we gotta let these MySQL web clients die. I'd rather try it if you had it running in a regular windows native app.
Hahaha, I have been accused of being many things in my life, but a professional undercover agent I assume, working for the NSA, to spread usage of software, where I assume you're implying that I have consciously planted holes, such that NSA can see your MySQL data, is a new high. Thx bro, made me laugh out loud :D Not sure if I should take it as an insult or a compliment though ... ;)
Sadly no, if you need to keep the data from the membership database, I wrote an [article](https://docs.microsoft.com/en-us/aspnet/core/migration/proper-to-2x/membership-to-core-identity) on doing that :)
Yea with this it is super easy. 
What are your requirements or needs for the project? The cli has been my goto for spinning up projects though 
You can check out mine, https://www.twitch.tv/DevChatter and there's also https://www.twitch.tv/csharpfritz . Both stream a few times a week and have good followings and regular viewers.
Can I get a job 20+ years experience.
&gt; I assume you can see the benefits of accessing your database securely over for instance you phone, tablet, or any workstation in the world ...? I wouldn't want something like this public facing honestly. Even with an authentication/authorization layer I don't want that kind of access to by database out there in the public. I can already access my DBs remotely from anything with a shell if I *really* need to.
Check out local meetups. Digital is great but it’s so much easier to trust someone you’ve met in person. 
I live in Kansas City - I just always use a recruiter.
i would say 3 good ones out of 40 is a pretty good rate TBH
I’ve found that .net in general has a pretty weak turnout for local meet ups, at least in Nashville. I’ve always seen recruiters used as the primary source of talent. 
I used to be heavily involved in a .net dev group in the area but it died out. The other group is pretty active but full of php dev's. A recruiter might be my best bet. 
Of the 40 thirty or so are teaching assistants all over the U.S. The three are actually people I reached out to based on suggestion of linkedin. 
I'm a .net developer with 10+ yrs experience. I'm not cheap but I like to think I'm on most people's good candidate list. I just got a new job after lots of interviews and several offers. From the job seeking perspective the best jobs I found were via stack overflow and recruiters. In fact I gave up looking at any other sites. Ymmv of course.
Stackoverflow is the single and only place worth time. 
I like the guy who has endless complains... about MS-DOS.
I'm using .NET Core 2.0 now with Entity Framework Core, Identity Server, Razor Pages, and my oh my the resulting web application is a beauty to behold. Became a strong supporter of .NET Core and I think it is one of the best ways to go for rapid web development and showing beautiful web applications.
Did you do this @addTagHelper *, MyWebApp?
Yes I did. I took that off and the view component does not load nor render without it so I know the addTagHelper declaration is working as expected, but still the error in VS remains.
vue cli. It's easier to figure out the asp.net core side of things than dealing with webpacks. 
I'm using the ViewComponent built\-in tag helper to work with my custom ViewComponents. It renders fine but maybe I could avoid this by building my own tag helper and not use "\&lt;vc:" but that would be defeating the point of ASP.NET Core's helpful tag helper system. Maybe I need to include something but after looking online I cannot figure out what.
HAPPY CAKE DAY
Did you try the alternative syntax?
Can't speak for others but back when I started I just applied to the closest enterprise company, now i get moved around inside of it with a occasional outside job offer. Startups are kinda sketch as a job opportunity compared to big corps but one can learn a lot there. I think u and u/[scherlock79](https://www.reddit.com/user/scherlock79) could have a nice chat, he seems competent and used to that kind of issue. Referencing a old thread: [https://www.reddit.com/r/csharp/comments/8l0w1y/hiring\_programmer\_2\_at\_company\_advice/dzc277c](https://www.reddit.com/r/csharp/comments/8l0w1y/hiring_programmer_2_at_company_advice/dzc277c) 
yeah man, all those people investing serious time to make great content and they ask money for it! the horror! Seriously though: it's a large amount of work to create quality content, which means it takes serious time and thus money to make it. Charging a fee in return is therefore fair. Demanding free stuff is making sure the people who make quality content (but charge for it) won't continue with their work as they won't get enough subscribers. But enjoy your free lunch!
I only mention about it possibly being a bug because of [this article](https://stackoverflow.com/questions/37589250/the-type-or-namespace-name-could-not-be-found-in-asp-net-core-1-0-rc2) which mentions it was a bug in an older version of ASP.Net Core \(1.0\) but I will try out the old, alternative syntax later today when I get time. Thanks.
&gt; Why is it called Phosphorus Five when it has three primary components? Wow! Interesting question, that requires a _"deep"_ explanation :) First of all, I happen to be a somewhat of a _"hobby Buddhist"_ (focusing on the meditation parts, not its dogma), which operates with 5 as the _"perfect number"_. Among other things, 5 is the symbol of our hand (5 fingers), the 5 elements of creation (earth, wind, fire, water, and _"ether"_ according to (I think Aristotle)), 5 pillars of Islam, etc, etc, etc ... So in a mythological perspective it carries a lot of _weight_, which I tend to associate myself with. In addition, it's one of the lowest prime numbers around, and also symbolizing the _"star"_ (pentagram) - Which was actually one of its early logos. So from a numerological ancient philosophical perspective, it's the _"perfect number"_. Since the zero, and also algebra to some extent, was invented in the Islamic world, it's also trying to give respect to the history of math and logic, since Islam operates with 5 pillars, and I assume (many) people with some Islamic history knowledge would see the link to both ancient Buddhism, in addition to ancient Islam, and mysticism traditions from Greek philosophy. And since P5 is all about _"bridging"_, I figured I'd build that idea straight into its core, by showing respect to ancient philosophy, in something that's arguably extremely _"scientific"_ in nature. The _"Phosphorus"_ parts is a symbol of _"ignition"_, being a metal that burns with an intense white flame, extremely rapidly, and such, is a symbol of _"explosive productivity"_, further tying into the _"star symbolism"_. The idea is to _"shine a light in darkness"_, further embracing ancient mysticism traditions. There are other more personal reasons too, some of which I don't like speaking publicly about, because they tend to generate _"resistance"_ among my peers - However, all in all, I consider it a philosophical and mystical number, symbolizing _"Gnosis"_, and the attempt to become perfect - Which of course is a _"journey"_, and not something attainable for man, yet still something I think we should all strive for, even though we know for a fact we can never reach it ... But the main idea is to **pay respect** to our ancestors, who believed in this number as a _"holy and whole number"_, something you can see embedded into the very streets of Washington City, among other things ... Yup, even George Washington, Thomas Jefferson, and Benjamin Franklin perceived 5 as a _"perfect number"_ ... ;) Go check it out on Google Maps, and the history of Washington City, if you don't believe me :)
How much are you paying?
So the problem is I have following options: -use TextBOx instead of RichTextBox. Then I can read a file from stream in code - behind and bind the string to TextBox Text. But that's not a solution, really - I want to work with RichTextBox -Use a RichTextBox, but then there's no way to bind it in the DataTemplate. -Use a custom MyTabItem class that puts a RichTextBox in it's Content. That works, but feels like a cheat and offloads the task to code-behind, which I head i shouldn't do Also: I don't know how I should load the files. I want to be able to load and save them easily and quickly. Should I just load them up once into memory as a string and work on that, or should I have a FileStream object and work on that instead? Thank you guys for replies 
Nowhere. Jobs find you
.NET developers don't usually look for jobs, you might have more luck with a headhunter company
I'll second this. I'm part of the local .NET meetup and most sponsors are there with the main purpose of finding new developers, at least that's always been part of their shtick.
I was a lead at my last job that did the coding assessments during hiring for the .NET side \(we were a polyglot team\). Our footprint covers the eastern Midwest \(Michigan, Ohio, Pennsylvania\). I can tell you from experience, it is very difficult to find good .NET devs in this area when all you do is post jobs. I assume you're in the same boat. We went from "write a CRUD RESTful API in Web API 2" coding exercises to "please just show us that you know how to implement an interface" and we still couldn't find anyone. I was very much against dumbing down our exercises but management really wanted slots filled. We went from wishful thinking for good Sr devs to just looking for Jr devs who had opened Visual Studio. I recently left that job because I was so frustrated with that process along with others. The new job I got was through a local tech recruiting firm who works directly with that company. Coincidentally, they also sponsored the local .NET Meetup shortly after I was hired \(all that entailed was buying pizza for 20 people for one of the Meetups\). I think outsourcing this work to a tech recruiter might really help you and all it will cost you is a few thousand dollars. Good developers are actually a hot commodity right now and you should take any advantage you can to get them to come to your shop instead of someone else's. Passive posting on job boards might not be enough. I didn't even apply anywhere on my own. I used recruiters only and I let them come to me. I got my dream job out of doing that, so given that experience, why would I or anyone do any work next time to find my next gig?
*beep beep* Hi, I'm JobsHelperBot, your friendly neighborhood jobs helper bot! My job in life is to help you with your job search but I'm just 249.5 days old and I'm still learning, so please tell me if I screw up. *boop* It looks like you're asking about job search advice. But, I'm only ~25% sure of this. Let me know if I'm wrong! Have you checked out Forbes, LiveCareer, TalentWorks? They've got some great resources: * https://www.forbes.com/sites/karstenstrauss/2017/03/07/job-hunting-tips-for-2017/#794febea5c12 * https://www.livecareer.com/quintessential/15-job-hunting-tips * https://talent.works/automate-your-job-search
You are only reinforcing my point telling me that most requests you see are trying to hack phpmyadmin. Just because a lot off people do something doesn't mean it's right. Most of those phpmyadmin installs are noobs running WordPress. So yeah there are a lot of them out there. I also don't see the point in bringing up hyper-ide? I don't even understand your last sentence... 
I am not sure if this is exactly what you are looking for, but if you want to add elements in a data grid use the DataGrid.RowDetailsTemplate. &lt;DataGrid.RowDetailsTemplate&gt; &lt;DataTemplate&gt; &lt;!-- Put Elements here--&gt; &lt;RichTextBox&gt;&lt;/RichTextBox&gt; &lt;/DataTemplate&gt; &lt;/DataGrid.RowDetailsTemplate&gt;
Yes, no joke. Teaching assistants. 
&gt; I also don't see the point in bringing up hyper-ide? Because, I can only assume, that if you wouldn't install Hyper SQL, (I'm assuming again) due to security issues, the same arguments would apply for a web based IDE - Although maybe not when I think about it in fact, since it would probably be less dangerous having exposing source code through the web than data ... &gt; Just because a lot off people do something doesn't mean it's right. I couldn't agree more Sir ... ;) _"In the middle of the road there are no diamonds"_ comes to mind ...
Market is hot and .net is in demand. You want food people you may have to be very competitive salary wise. You are looking to poach people that often already have good playing work.
I am not sure why food people would be helpful. Lol. 
i asked my phone, it was not sure either!
Everything but the code you used to run powershell. What example did you copy?
My experience with recruiters is they mostly: 1. find job posted online 2. repost job 3. forward any candidate with matching keywords on resume to employer 4. demand 30% of the candidate's salary for what is effectively SEM arbitrage I do see the value in a recruiter pulling from their carefully-curated network of professionals to fill a position, but that's not been my experience. If anyone can recommend a good technical recruiter I would appreciate it. Seriously.
Are you hiring remote dev's? I'm in MO and potentially interested if the position is elligible for remote work. I don't really live near central MO
There are a LOT of recruiters out there and there are a LOT of really shitty recruiters out there. You just have to wade through all the shit to find the right ones to work with. That means going to lunch with them, talk with them - let them get to know you while you get to know them. The ones that are pushy and/or just try to get you into every single job are the ones you quit talking to. The ones that listen to you and learn about you and know what you want out of a company are the ones you want to keep networking with and continue having lunch with every 3-4 months - even if you're not looking. Because those are the ones that are going to know immediately which jobs to consider you for when you do start looking and they will have so much more to say to that potential employer about you.
In my experience the way that job offers are written makes a huge difference. You might unknowingly have put some buzzwords in your offering making it undesirable. A company I worked for had really, really bad adverts that were written by HR and our product manager. I would not have started working there, if the job had not been recommended by a friend. The applications we got were almost comically bad and the developers that were invited to interviews would not have been a great match for the team. We addressed the issue down the road by letting the teams write the job offerings and were quite happy with the results.
I'm so used to HR going megalomaniacal on recruiting \(and everything else\) and listing bad want ads that I apply to those anyways. You never know what's really on the other end until you talk to them. Candied ads actually tend to turn me off since the company probably fancies itself as a hot startup and wants 80 hours a week for sub\-market pay.
&gt; The linker will strip away the stuff you don't need. So it will be smaller and faster on startup. A do-nothing app is faster in .NET than in Core, last I measured.
Yes, Dapper's Query method takes generic parameters and can return an IEnumerable of dynamic objects. Dapper won't try to map your query results to a specific model/type unless you pass it as a generic parameter on your Query call. You should read over the documentation on what it can do on the [Dapper Github page](https://github.com/StackExchange/Dapper) as it has lots of other features as well.
Just my opinion bro. I don't think you should have to have 4 dozen files just to make a simple app. Reminder that you asked: &gt; How do you think that? 
Do a job posting on your local subreddit, that's how I found a dev for my company.
 That's what I'm saying though, you don't. It separates concerns, but you don't have to. [https://stackblitz.com/edit/angular\-ccwnwe](https://stackblitz.com/edit/angular-ccwnwe) You can run an entire angular app in 3 files, the only ones you actually need are angular.json, index.html, and your app.module. The rest of the files are literally configuration for things.
As a Midwest developer who feels pretty comfortable with most backend c# tasks this makes me feel like my next job search I should definitely ask for a lot of money. I'm a mid level and feel if senior dev applicants cant even set up an interface or basic inheritance I should be a hot commodity. Thanks for the confidence booster.
+1 We work with Dapper on lots of business projects. Can only recommend it.
True. I'm in the UK and I haven't applied for a single job. I've been employed for 5 years now, as soon as I got out of university. What's weird is, I'm not that good of a developer. Seriously, there is so much in c# I still don't know. 
Hack Midwest in Kansas City, MO is coming up in July. I imagine it would be worth checking participating in as an individual where you’ll be paired up in to teams with others who came as individuals. Could be worth it.
If you find a shop that values good developers you can make a good amount. I'm in the midwest and make $200k.
Try Stack Overflow Careers - https://stackoverflow.com/jobs/get-started
Wow that story is shocking. Recruiters must be shocked when they get someone who nails hard technical tests.
Just finished Shawns. Can't recommend it enough. There's also something really pleasing about the way he says Dutch Treat.
Pluralsight
TLDR: Learn how to use System.Security.Crypto &gt;The problem is that encryption is not easy. You're correct here, but it's the *Math* that's hard. Ultimately, you're not working with any of that math, just with the API around it, so you shouldn't be concerned with encryption being hard if you're letting a respected source (MS in this case) handle the math and properly implementing the algorithms. You still need to know how to properly use the API though. &gt;Sure, you can look up how to use the classes and methods in the System.Security.Cryptography namespace and crank our something in a few minutes that turns an array of bytes into gibberish, but, unless cryptography is one of your core competencies, what you write is probably not very secure at all. This is way off. If you are using the APIs in the .Net Framework correctly, then you should not worry about your encryption not being secure. Those APIs are there for a reason, and it's not to lead developers down some dark road with a false sense of security. Yes, you need to know the proper way to use those APIs, choose the right algorithm for your needs, and set up your keys correctly, but those requirements would be no different from any other security library. &gt;Ideally, there would exist some library out there that abstracts away all the complexity of encryption and allows me to just say, "Here, encrypt this byte array via this encryption method using this key". This way, I can benefit from encryption while putting my trust in the expertise of the developer who built it. This is exactly what Microsoft has done, however the APIs are about a step or two away from "encrypt this byte array". &gt;Is there anything on Nuget that would serve this purpose? The only library I can point you to (and I'm not explicitly recommending it, just mentioning it for full disclosure) is [Inferno.](http://securitydriven.net/inferno/) Before I go any further, AFAIK Inferno is a wrapper around System.Security.Cryptography, so the underlying math and implementation of the algorithm is still relying on the .Net framework. I [made a post about Inferno](https://www.reddit.com/r/csharp/comments/3ddmsn/inferno_net_crypto_done_right_xpost_rdotnet/) more than two years ago, and the consensus (which I agree with) was just to use the standard libraries. It potentially removed some of the pitfalls of using those standard libraries, but you're also trusting that the Inferno library made the correct calls around those pitfalls, which may or may not hold true for your use case. To wrap up, no security development should be taken lightly, but ideally you want to take as much control over that development as you reasonably can. No, it's not reasonable to ask a run of the mill developer to implement a crypto algorithm, that's where Microsoft's libraries come into play. However it is reasonable to ask a developer to understand how to use the available APIs and options available within a library to make the correct call for their specific application. The Microsoft Crypto libraries are robust and widely used. You should not be concerned about using them. What you should be concerned about is learning enough about how to use those libraries to do so in an effective manner. Any solution that simply takes your bytes and encrypts it without the developer making some decisions is an abdication of your responsibilities as a developer.
We fully expect to expand to a few remote developers in the future. Right now though I was hoping to get someone in office to help with architecture and be a part of every day conversation. 
Full\-time in person preferred. Here is the job description: Do you believe you are destined for greatness? Have you not found the perfect situation to be that greatness? Look no further, Noviqu is expanding and is hiring a Full\-Stack Software Developer. Be in on the ground floor of an amazing company in the middle of nowhere. Yes, we have internet and yes we are awesome. Below is the "dry" description of our posting but don't let that deter you. Job Duties: • Follow current development standards and procedures while also recommending changes and enhancements to further improve our processes • Design, develop, and enhance the existing core products of Noviqu • Develop Data interfaces using T\-SQL, Dapper, and our Data Access Layer \(DAL\) • Become familiar with all aspects of the Noviqu products • Facilitate in the growth of the development team as a whole through code\-reviews, and one\-on\-one interactions • Participate in daily standups and bi\-weekly sprint retrospectives and planning Preferred Qualifications: • 2\-5 Years of .Net Experience • Willingness and enthusiasm to learn new skills and techniques • Understanding of Manufacturing \(preferred background within manufacturing but not required\) • A good understanding of Bootstrap, CSS, and HTML • Ability to work independently on standalone projects or as part of a small team • SQL Server • Dapper • Experience with Front\-end JavaScript frameworks such as Progress Kendo UI and Vue JS or similar • Experience with Agile/Scrum methodologies Compensation: • Competitive Base Salary • Stock Option Plan Other: • No\-Telecommute • Full\-time • Health/Dental/Vision • The ability to join a Startup in Mid\-Missouri that can compete on a national and global level • Sometimes find the Ballmer peak • The opportunity to help grow and shape our company and culture. • Choose your own job title Missouri St Moberly, MO 65270
I'll definitely check that out. thanks!
Minnesota. I'm the CTO and lead dev in a smallish shop - 30 people total and 6 developers in addition to myself.
Hi, SignalR will do exactly what you want I think. I think your impression comes from the fact that the app used in most of the examples is a chat app where all users receive messages as they come in. In your case, it would be a case of mapping users to SignalR connections when they connect and, when a user triggers an action (e.g. via form submission or Web API call), sending the updates to the matching connection(s). Alternatively, you could even trigger the action by having the client invoke a server-side SignalR method, and then you would know to send progress messages to the calling connection. SignalR even has an IProgress&lt;T&gt; interface that you can include in the parameters for the methods that can be called by clients, that is specifically designed to make it easy for your server-side code to report progress on longer-running actions to the caller.
I think SignalR is what you're looking for. Yes, it can sync multiple users to the same content, but ultimately it's for pushing data from the server to the client. Considering you probably don't want to block the web call until your PS background process ends, you're going to want the push functionality that SignalR brings to the table. SignalR does this via web sockets, but it also has several fallbacks on the client side, including Long Polling. So I'd urge you to take a closer look at SignlR as it should achieve what you're looking for, but also in a much cleaner way than some of the other options.
Hey guys, thank you for all the feedback. I have updated my job posting to hopefully something a little more enticing. I have started reaching out to people myself and have drummed up a little interest. I also have joined several developer groups but won't attack them with openings just yet. I'd rather be involved before spamming them. 
Changing the target framework on csproj won't fix it. It just compiles the code against the API offered by that version. That ensures the code calls things that exist on that framrwork. With in-place installation, a new version overrides thr old assemblies. Essentially you will be using the 4.7.2 BCL bits even if tou compiled to 4.0. In case there's no work around, the only way to fix it is to go rollback that framework installation. Going back to 4.7.1.
Not bad. Sounds ideal for me 10 years out honestly (I'm in my 20s)
This is great work. Cool project!
When it comes to books IMHO there are two big ones: One is named as your posts title: C# In Depth by Jon Skeet. The other is called CLR via C# by Jeffrey Richter. 
nchar might be a good suspicion. An "empty" nchar string of length N is actually N spaces. String.IsNullOrEmpty(" ... N spaces ... ") is false. Though... I would only really expect this for data loaded from the database. 
And that’s my biggest WTF. I am using a clean and custom ViewModel to accept the data before it is validated. Only after validation is it stuffed through a mapper along with an empty Data Model to transfer the information over prior to the Data Model being dumped into the database. So the ViewModel doesn’t come anywhere near the Data Model until *after* validation, and via a mapper that moves the data over.
I think you answered your own question... They weren’t that cool to begin with...
Don't forget about mah boy PowerShell!
For the case of IronRuby and IronPython, they were both being developed initially by Microsoft which lost interest later in the project. Jimmy Schementi wrote in a [blog post regarding leaving microsoft written 6 Aug 2010](http://jimmy.schementi.com/2010/08/start-spreading-news-future-of-jimmy.html): &gt; ...However, a year ago the team shrunk by half and our agility was severely limited. I’m omitting the internal reasons for this, as they are the typical big-company middle-management issues every software developer has. In short, the team is now very limited to do anything new, which is why the Visual Studio support for IronPython took so long. IronRuby’s IDE support in Visual Studio hasn’t been released yet for the same reasons. While this is just one example, many other roadblocks have cropped up that made my job not enjoyable anymore. &gt; Overall, I see a serious lack of commitment to IronRuby, and dynamic language on .NET in general. At the time of my leaving Tomas and myself were the only Microsoft employees working on IronRuby. If this direction for dynamic languages on .NET is a path you do not want Microsoft to take, I strongly suggest you provide feedback to the team’s management directly. Also, Jason Zander runs the Visual Studio team, which IronRuby, IronPython, and the DLR happen to be a part of, and is a big proponent of these dynamic languages efforts, so provide him with your thoughts as well. Neither project had at that stage reached the stage where they were that useful for production systems ([IronRuby only hit 1.0 on the 12th April 2010](https://en.wikipedia.org/wiki/IronRuby#History)). In the end no one was supporting it, no one was really using it, so the project had very little chances of surviving.
But PowerShell does not compile to .NET :)
IronPython is still alive: https://github.com/IronLanguages. They're working on 3.X but recently came out with an update on the 2.X line.
Whatever happened to J#? It was essentially Java.Net, and it didn't even have properties. I always assumed it was to try to lure java devs to .net but people used Java because it wasn't microsoft, or so I thought.
If I had to look for employees for a startup, I would start with remote devs. After filtering by CV, I'd hire them for smallish, self\-contained projects to evaluate them, and make offers to the best ones. After your company becomes more established, then it will be easier to hire devs to work on location. But established devs tend to avoid startups because the work involves a lot of hours, and the future of the company is very uncertain. So your best bet initially is to concentrate on remote freelancers with potential.
J# was really only offered for the 5 or so remaining users of J\+\+ to get their code onto .NET. C# was always intended to be the "Java\-like" platform for .NET. J\+\+ was, well… Microsoft's attempt to fork the Java community because Microsoft in the 90s was just the absolute worst.
technically it does, JIT
I've never, ever had anybody ask me to do F# and after decades of VB &amp; VB.Net, that's dropping off a lot too. Really, C# is about the only .Net language that has a lot of steam behind it. Which is all really funny because they all compile doown to the same IL anyway. It's like having a selection of Porsche, Audi &amp; Ferrari hood ornaments to put on your U-Haul truck.
J# was supposed to entice Java devs, but turns out we could jump directly to C#. No one used it, so they killed it.
I always keep forgeting about Haxe which compiles to C# and eventually to MSIL. There is also RemObjects's Oxygen and Swift which is kinda strange, but they've built a whole company around it.
Do you mean C++/CLI, what used to be called Managed C++? It is not widely used. The real (natively compiled) C++ is of course all over the place, but it has nothing to do with .NET.
Because .NET culture is a monoculture. It's a bit better now that everything is open source.
I started programming VB.Net back in 2000. I learned C# to get more pay. It’s funny because they were basically the same but in 2004 C# paid more.
Yeah but try using it! It feels like a community add on, barely usable.
In other words, supply and demand. The weren't much demand for IronRuby. 
&gt; Neither project had at that stage reached the stage where they were that useful for production systems (IronRuby only hit 1.0 on the 12th April 2010 I fail to see how this is an excuse. Plenty of software never makes it to 1.0. World of Warships is only on version 0.7.1.1 and it's doing fine.
Isn’t peach pie alive and well? https://www.peachpie.io
I haven’t heard someone mention J++ in so long I almost thought it was a dream.
I wouldn't even put VB.NET in that list. Sure, it's still well supported but it's not an area of focus for Microsoft or the dev community.
You should at least link it up here. I’d say go and edit your post to begin with. The whole point about this and other social media platforms is exchange of ideas and information, so it’s on topic. You obviously don’t want to spam or end up promoting yourself instead of the project but sharing is good. Anyway, have a quick “getting started” guide inside your GitHub readme.md. Focus on why people should use it. Get a reader interested in the first 30 seconds to gain the next 5 minutes. Use that to familiarize them enough to try it out or sign up or bookmark/star it. IMHO, the best way is to have a sample app demo it too.
&gt; C++/CLI, what used to be called Managed C++? Not the same thing. Both work with .NET, but they went in a very different direction with the syntax.
There is no .NET Standard 2.1. Only .NET Core 2.1.
I loved VB. It felt a lot cleaner than C# and was widely used in the financial sector. But then my boss pissed me off and all of the available jobs without moving were with C#. 
Agreed, they are not the same language, just like J++ and J# were different animals. I guess I am putting them both into the bucket of "C++ like language with .NET bindings that were both failed experiments within Microsoft"
Microsoft wasn't trying to fork the Java community. They just wanted a version of Java that didn't suck balls. The two changes they made are still things that Java hasn't properly addressed: event handlers and COM.
Or a nightmare. Such an awesome IDE (the basis for VS) but stuck on an ancient version of Java. It was unusable in its time even for homework assignments. I actually had to write a plugin that would upload my Java to the Unix server and compile/run it there.
I'm pretty sure C++/CLI is still a viable product for people who need more advanced interopt than C#offers out of the box.
*Shudders in Java* Thankfully in the 90’s I was a hobbyist student programmer and not having to deal with this stuff on a regular basis! Visual C++ was where I spent most of my time (and it spoiled me on all other IDE’s).
COM programming was essential in 90's if you wanted to do anything interesting with Windows. Not having it would be like telling a Linux developer he couldn't use text streams between programs. As for event handlers, it can do things that you can't easily do in Java like having two event handlers listening to the same event. Java doesn't really have the concept of a multi-cast delegate and there isn't a safe and consistent way to add and remove additional event handlers.
VB.net is easier to read but slower code because it is so verbose. But I can be just as productive with either.
I guess JScript.NET is the only .NET based language that supports eval function out of the box.
Yeah, why is Iron-X when you can just install X?
It's used a lot in the financial/insurance industry. Jet.com is another big player that I know that uses it. You can seem some testimonials here: https://fsharp.org/testimonials/
MS java was a hell of alot better
Jet was a unicorn startup known for having F# as its language of choice: https://jet.com They did a good promotion for F# and proved that it can be used in heavily competitive startup environment. I had a chance to visit one of the F# workshops held by Jet developer Jorge Fioranelli: https://www.fsharpworkshop.com It was an awesome workshop but most of all Jorge explained the origin of Jet's choice to go for F# and the benefits of using it. 
&gt; and the benefits of using it. Don't keep us hanging.
I think the biggest problem is these languages were constrained because .NET was Windows only for years (at least officially if you exclude Mono). Once you work with open source Linux is king and Windows really doesn't get a look in. I honestly think it's as simple as that. It'd be great to see some of these projects resurrected now .NET is cross platform. I've thought for a long time .NET needs more variety (in fact I wrote a blog post on this in 2005 [here](https://coderscoffeehouse.com/tech/2015/10/13/dotnet-needs-more-languages.html). It's particularly lacks a solid dynamic language - here's hoping IronPython (which is still active) can fill this space.
Honestly VB.NET isn't *that* bad, it just gets really wordy especially with lambdas and such.
Hmm, it seems like F# has a considerable amount of steam behind it, enough so that even C# is getting new features because of it.
Core is a fully operational runtime. Standard is a set of type definitions. They are different things and it is natural that they would version independently. If the Runtime makes performance improvements and bug fixes in its implementation but the Standard specification does not change, why wouldn't their versions diverge?
Powershell is alive and well though, and it runs on other platforms even.
An implementation tracks a standard. Absolutely every reason they should track each other unless you want to confuse consumers.
Its a top 50 language, whereas C# is a top 5 language. It has steam behind it as a research area for new language features, but its support in project types and tooling has suffered because of its \(relatively\) poor adoption \(compared to C#\). Maybe give it time though, and we'll see.
Meh.
There are quite a few banking and insurance initiatives with F#. You will not find these programs on GitHub nor will you see articles. Many of the people in that area studied math or statistics, not CompSci.
It is alive and well, but it's also very fresh - it has yet to prove it's usability.
Look in Texas, especially around Dallas and Houston areas. Massive C#/.NET hubs that have as much talent as Seattle, especially if you're an enterprise level shop.
So, tldr Jorg is a moron and was sold the snake oil.
what's wrong with F#?
This Hacker News thread gives a lot of great tips on promoting an open source project: [https://news.ycombinator.com/item?id=7531170](https://news.ycombinator.com/item?id=7531170) And the others already posted plenty of good suggestions, thank you everyone! But I have a feeling that your issue is not in not having ideas on how to promote your project. Please correct me if I am wrong but the way I interpret these words of yours is that you have an intrinsic problem when it comes to marketing your project: &gt;I want to share it, but I don’t want to share it. \[...\] How can I ‘get the word out’ in the .NET community without being spammy or rude? Spammy or rude? On one side several people here, and I am joining them, asked you to share the link to your project. On the other side, you most likely find sharing the link to be spammy or rude. What makes you think that talking about your project or sharing a link to it would be spammy or rude? My feeling \(again, correct me if I am wrong\) is that you "suffer" from that "dichotomy of marketing OS projects" Julian Shapiro tackles in his post on open source marketing: [https://hacks.mozilla.org/2014/05/open\-source\-marketing\-with\-velocityjs/](https://hacks.mozilla.org/2014/05/open-source-marketing-with-velocityjs/) All the quotes are from that post, emphasis are mine. &gt;Unfortunately, however, **the peculiar reality of OSS growth hacking is that there’s a stigma attached to it**: The act of marketing invokes pitching, rubbing shoulders, begging, and bribing. It’s stereotypically personified as an overeager, two\-bit hustler wearing a cheap shirt and an even cheaper tie. **This clashes with our ideals of open source** — which itself is stereotypically personified as a headstrong and idealistic code warrior wearing a cheap shirt and an even cheaper haircut. &gt;I’ll quote GitHub’s Zach Holman to get to the root of the dichotomy, “We like to think that open source is pure; that it’s unadulterated. That marketing an open source project is silly. *That’s* just silly.” – [ZachHolman.com](https://ZachHolman.com) &gt;To put it bluntly, if you want your open source project to have an impact, you need to step out of your coder bubble. **After all, if you build something amazing — and you market it effectively — you’re doing everyone a favor.** Not just yourself. And a bit more: &gt;And don’t worry — **being seen publicly marketing your project doesn’t frame you as an egotistical developer. It frames you as someone who’s passionate.** If you take the time to appreciate the fact that more people benefiting from your hard work is a major motivation in your pursuit of open source, then you’ll realize that hustling on behalf of your project fits exactly within your pre\-existing ideals. I hope I didn't went too far in my guessing. And I hope to see that link to your OS project! :\-\) It sounds very interesting and worth taking a look at ;\-\)
Sweet
&gt; The standard should be established first before implementations chase after it. How would you know what to standardize before designing it, building a prototype, and getting real-world usage results?
The Nemerle team got recruited by Jetbrains and are some of the people behind Kotlin from what I recall.
There's a version of Clojure for .Net isn't there? No idea how much use it gets though
I would love to have generic attributes. That’s about the only place I consistently have to pass typeof for things like resources. 
Why would you want to encrypt data on the host if the unencrypted data is there too? That's like locking the door to your house when you have a giant broken window next to it.
How do you determine who is a good recruiter initially? I get tons of messages on LinkedIn from recruiters who look experienced, knowledgeable, and have good English. How do you pick one or two?
&gt;Node No.
I don't like the idea either, but pre-rendering is important if you are using Angular and want to support search engines.
I see it differently. I liken writing a solid encryption module to building a structure such an outdoor shed. The tools in System.Security.Cryptography are the equivalent of premade tools and supplies you can buy at the hardware store. Instead of fashioning your own tools and materials from scratch, you just use what others have manufactured for you. That's basically what you're saying and I agree to an extent. I could then take all those tools and supplies to my back yard and begin building my shed. I have a generally good idea of how to build a frame out of 2x4's and couldn't imagine how difficult it could possibly be to add sheathing to the outside. After I've finished the roof, I just climb up there and fasten the shingles. A few more bangs with a hammer in a few remaining places and I have myself a finished shed doesn't fall over when I lean up against it. But there is a problem, and that's my lack of understanding of the finer nuances of building structures, especially those of the outdoor variety. While I think my shed is solid now, it likely doesn't follow building code and wouldn't survive a strong windstorm. Even if it did, the roof would leak badly when it rains. Where encryption is concerned, this is all the equivalent of having to understand things like initialization vectors, blocks, padding, proper key disposal, etc. You can think you understand it all, but, if you really don't, you could end up writing an application that is vulnerable to attack. That's where a third-party library comes into play that serves as a wrapper around System.Security.Cryptography to abstract away the inner complexities of encryption so that the developer can focus on their application. It's kind of the same reason why a developer would use Bootstrap rather than attempt to write their own CSS from scratch. At any rate, I've checked out Inferno and I really like it. After checking out a few examples, I've implemented it in my application and, aside from having to set up a few streams which is to be expected, it was ready to go, so thanks for pointing me to that.
Per another reply I just left, I agree with leaving cryptography to the experts. I've checked out Inferno and have begun using it. Works very nice!
Where did I say I am also copying the unencrypted to the host? That only exists on my machine.
That may be a bit much for my needs. This is just a personal project of mine, so I've begun using Inferno which appears to be working very nicely. None of the data I need to encrypt would really be worth anyone's time to crack anyway, so a simply solution works fine.
True multi-threading for one.
Just trying to clarify, it loads _layout.cshtml if you browse to it, but you get a 404 when you go to /home/index? I don't think I'm understanding what you are experiencing exactly.
Take comfort in the fact that Delphi for .NET lives on in C#. After all, Anders Hejlsberg was the lead architect for both.
If I set the theme it loads the _layout.cshtml from the correct theme folder instead of /Pages/Shared, however the actual content view (index.cshtml or about.cshtml for example) are loaded from the default folder /Pages/ instead of /Themes/{theme_name}/ despite the theme being set
Less language, means more focus on those languages. You'll always have to deal with limited recourses, and you'll have to use those in the best extend possible. So again: less languages, better quality, less quantity.
THe layout loads correctly based on the given tenant, so if i load the index page (https://localhost:64320/) I see the correct layout (different css) but the actual content rendered by RenderBody() shows the content from Pages/Index.cshtml not from /Themes/Dark/Index.cshtml
just re-read this and my initial comment may have missed your potin, there is no /home/index in razor pages, only /Index. This will load correctly, I have no issue with 404, only the content which is displayed when loadiong a page. When I load the /Index it shows the correct theme layout (as identified by different css) but the actual page content loads from the default /Pages/ location, not the /Theme/Dark/ location
Call it “.NET Core”, not “DNC”
I use thema a lot, have 4 universal subscriptions and they are worth their money! 
um. Ok?
What do you mean by do the content dynamically via get? on the code behind inside OnGet() are you saying return a different view based on the tenant theme value from here?
Anyone with a gross income under 1M a year qualifies for a community edition license. https://www.syncfusion.com/products/communitylicense
I actually started learning F# because I had an interview with these guys. The interview (I thought) went well, but a week later they we're bought out by Walmart. I ended up not getting the job.
Nice that it includes small business too. We tried to use Google maps for our service but the baseline cost is something like $10k a year. That's more than our little startups whole annual income.
The standard is 2.0. .net core 2.1 still implements 2.0 standard. Full framework, .net core, etc. are all allowed to have extra stuff but need to support .net standard as a minimum. .net standard will be updated when all of the various versions of .net implementations agree that something can be made available everywhere, within reason.
Yes, then you can return a different view based on whichever data you're using. If I gather correctly, you are swapping layouts OK but just couldn't get it to show different info \(index vs dark/index\), in that case what i'm saying is don't use 2 index pages instead use 1 and then do the above. So maybe for one user u're showing some content, and for the others u show different content, all inside the same index.cshtml view, and not different directories like you're using.
Yes layouts swap fine, but content, that is correct. I still am unsure what you mean, are you suggesting that I use one index page and then return dynamic HTML built inside the code behind OnGet() method? That sounds very counter-intuitive, especially when the number of themes is N and could potentially be thousands (if each tenant requires a bespoke page for example). Or do you mean use one index page and then return a different razor page from somewhere else? It would be great if you could link me an example on how to do this, or even what method/line I need to call in the OnGet() to return a different view. Thanks
Pretty sure that is MVC, not RazorPages
Both actually. And theming is more advanced than what you could come up with as there are many contributors who worked on and used it for years. Also multitenancy is in by default, and you get lots of modules already available. All on dotnet core.
AIGs actuarial group in Houston uses it
Would be helpful \(:
&gt; Why would you want every single delegate type to be capable of being multicast? Because you can't predict which ones need to be async. &gt; And it means making truly async events (i.e. ones where each subscriber returns a Task) much harder to write. Oh no, that's easy. You just loop through each delegate in the multicast as usual, but await each one. 
 using System; using System.Linq; using System.Threading.Tasks; namespace ConsoleApp8 { public delegate Task AsyncEvent(object sender, EventArgs args); class Foo { AsyncEvent _MyAsyncEvent; public event AsyncEvent MyAsyncEvent { add { if (_MyAsyncEvent == null) _MyAsyncEvent = value; else _MyAsyncEvent = _MyAsyncEvent + value; } remove { if (_MyAsyncEvent != null) _MyAsyncEvent = _MyAsyncEvent - value; } } public async Task OnMyAsyncEvent() { if (_MyAsyncEvent != null) foreach (var task in _MyAsyncEvent.GetInvocationList().Cast&lt;AsyncEvent&gt;()) await task.Invoke(this, EventArgs.Empty); } } class Program { public static async Task Main(string[] args) { var x = new Foo(); x.MyAsyncEvent += PrintHello; x.MyAsyncEvent += PrintError; x.MyAsyncEvent += PrintGoodbye; x.MyAsyncEvent -= PrintError; await x.OnMyAsyncEvent(); x.MyAsyncEvent -= PrintGoodbye; x.MyAsyncEvent -= PrintHello; x.MyAsyncEvent -= PrintError; await x.OnMyAsyncEvent(); } static async Task PrintError(object sender, EventArgs args) { await Task.Delay(1000); Console.WriteLine("Error!!!"); } static async Task PrintGoodbye(object sender, EventArgs args) { await Task.Delay(1000); Console.WriteLine("Goodbye"); } static async Task PrintHello(object sender, EventArgs args) { await Task.Delay(1000); Console.WriteLine("Hello"); } } }
I would recommend reading about asp.net core on the official MS docs. I can't quite understand your question.
&gt; You just loop through each delegate in the multicast as usual, but await each one. Compared with normal (field-like) events, I would call that "much harder to write". Because with normal events, there is no (visible) loop, you just invoke the delegate.
I think about this difference because I built the MVC5 site and could not make 2 forms on the page (the form of the page, and another form that comes from the master page and is used for feedback) and if you say there is a lot of overlap between the two fields, this is probably why I could not identify the difference. This is also the question about net core. Will I be able to put 2 forms on the page? Or maybe I should understand that if today we use MVC5, which does not allow 2 forms (I could not even with js), is it because I have to put only one form?
I recently setup identityserver4 locally and found the tutorials on their site really helpful, I haven't yet got to the point of adding in local accounts but I plan on using aps.net identity for that. What is it your struggling with exactly, I might be on discord later, UK timezone.
As a SQL developer, I myself would avoid using triggers at all times. Also, why do you want to use views with your EF? You want to be sure the client doesn't touch the tables directly? Maybe you could use stored procedure for table access, and keep the views but delete the triggers. Good luck rewriting!
That's not devex though. That's something entirely different. 
I think you don't understand html forms properly and it has nothing to do with the server side framework. You can definitely have 2 forms in a page as long as you don't nest them inside one another. See more info here : https://stackoverflow.com/questions/12064557/multiple-form-tags-in-page-or-one-form-tag 
It's just boilerplate code. You can just paste that in wherever you need it.
I wanted a single model per device type for code-consistency with the rest of our backend, and to keep things simple for the others working on it. We have some helper methods that allow us to have CRUD operations for a given model, complete with change-tracking record auditing, with only a few lines of code. Since these views are read from dramatically more often than they're written to, I wasn't concerned with trigger performance.
&gt; I ~~myself~~ would avoid using triggers at all times. FTFY 
There is a built in Jwt token on .Net Core, and it is relatively easy to make it work with .Net Identity. Identity is not necessary, but if you not have a good reason to no use it, then it’s a great option. 
And in case I am not using core? Hah switch to core? :D 
I would give this a look: [Slice architecture](https://jimmybogard.com/vertical-slice-architecture/) I don't believe that these architectures are a good way of structuring good, since it makes you think in "weird" ways, and in my experience it creates more problems in the long run then it solves. Check out the Link to Jimmy Bogard and his talk. He actually have tried both architectures on projects that was almost the sameæ
These approaches don’t look different to me. They're both saying not to make and dispose a fresh `HttpClient` every time one is needed, due to socket exhaustion. The second is a refinement of the first, showing how not to be bitten by DNS changes. /u/josefffs is right, `HttpClientFactory` solves this problem by keeping a pool of clients around (essentially, not exactly) and giving them each a two-minute lifetime. If that's not available to you, the technique in the second article is fine. 
It’s not enough with knowing them, as they will be more interested in your experience with them. “Do you know x pattern? Can you describe it? Have you use it? Where?” So use them on some basic examples that you can describe easily on a interview. 
This. It’s more important for me as an interviewer that you can talk through how you applied a design pattern and what made you choose it. Knowing how to recite the definition of a pattern is good, but demonstrating that you understand when to apply it (or when not to) is more important to me.
I've been thinking about your problem some more. If I understand correctly, all your problems and workarounds are relating to inserts/updates. The standard way to get around this would be to have stored procedures for your updates rather than trick your model into treating your views as tables. Stored procedures will be shown in your model as simple functions. they have the added benefit that large inserts/updates can be much, much faster than regular EF. Let's say you want to insert 100 rows into table X. You create a user defined table type. Then create a stored procedure that accepts the user defined table type as an argument. Your stored procedure will contain a SQL MERGE command. Then in code you call the stored procedure once passing all 100 rows in the user defined table type. This way you get performance and don't need to mess around editing an edmx.
Thanks. this makes a lot of sense.
They offer similar controls, but it's not devexpress. That's syncfusion. Different companies, different level of support, different abilities, but both seek to serve the same market. They're competitors to DX. 
I blame the Americans. Reading reddit can be painful at times. Pleonasms abound. 
My trigger code does use MERGE commands and performs fine. The edmx hackery was my main concern. Now that I think about it, I can probably just move my trigger code into stored procedures, and have MyModel.AddRecord(foo) call that and our audit helper. That's a lot more sane than what I cooked up. :)
Sounds like a good solution. Also much more obvious what's going on.
"Websites" were an attempt to allow developers to write and deploy code without compiling it and properly deploying it. You should not use it, and just pretend it doesn't exist.
&gt;I'm self-taught and preparing for interviews. For your first professional gig? I was self taught, and my first interviews were more focused on language fundamentals than design patterns. &gt;What types of design pattern questions are typically asked? In one of my most recent interviews for a Senior level position, the only design pattern focused question I remember them asking me was to name a pattern other than the Factory or Repository pattern that you've used and describe how you'd use it. &gt;are interviewees expected to code and/or draw the UML diagrams? I was not. &gt;My approach right now is to focus on the ones that I can easily identify and/or have used. This boils down to the factory, singleton, decorator, mediator, iterator, observer, and a few others. That sounds pretty good to me. I would keep the focus to ones you've actually used and be sure understand how the pattern helped solve the problem you were working with. One concern is simply throwing patterns at problems just because you like to use patterns. Knowing how they're actually useful other than just what they're named is important IMHO. I think you sound like you've got a pretty good base for design patterns, but I'd add two small things to sharpen up on. First, I'd understand the pattern categories or groups (i.e. Creational, Structural, Behavioral) and know which patterns are in which groups. Second, you didn't mention the Adapter or Facade patterns, and I think those are two straight forward ones that I think it would be good to know considering the other ones you mention you've had experience with.
[ASP.NET Core server\-side prerendering](https://docs.microsoft.com/en-us/aspnet/core/client-side/spa-services?view=aspnetcore-2.0#server-prerendering)
Knowing when/why to use a pattern/data structure/algorithm is far more important than how to do it. Anyone can use Google. Citation: I've interviewed a lot of engineers for Amazon
I've been writing programs for a year or so now, some being a few thousand lines, and I don't know what the heck all of this is. I've heard of Singleton, and MVC. I'm not going for a programming job, but it has always enticed me. Seeing questions like this make me feel so far lost, knowing I'd get crushed on an interview. 
Darn. Sorry, I didn't mean to spread misinformation.
I was starting a new project a couple months ago and did an analysis of the current JS framework ecosystem. I'm still not a fan of the npm micropackage delivery system, but that's just the state of things these days. Angular really is over-engineered, and just plain heavy. React is confusing, impractical, and doesn't come with anything. Basically nothing works unless you add a whole lot of stuff. Want to use React? You'll want JSX. So you'll need Babel. So you'll need Webpack. And you'll need 300 other things. Then go shopping for a flux pattern store, land with the default Redux, which is also confusing and impractical, and then you'll find you need to add a handful of plugins to make it work right. Vue on the other hand was an easy choice. Include a single js file (vue.js), figure out the very simple Vue app structure and switch the HTML from Razor to Vue, which is simple. It's just as capable as Angular, with the speed of React, and very little confusion. Also, Vuex is more capable than Redux out of the box. And then, you can progressively up your game, add a Webpack config for .vue components, then push it into hot-module-replacement with 3 lines of C#. Vue really is a progressive framework that grows with you!
It probably depends on what type of programming you're doing and which languages you're using. Some of these patterns are even intrinsic to application frameworks and languages. You're most likely using some of these patterns without realizing it.
I don't know, this google trends search tells one story - https://trends.google.com/trends/explore?date=today%205-y&amp;geo=US&amp;q=vue.js,react.js,angular.js but this NPM trend shows a very different one - http://www.npmtrends.com/react-vs-vue though people can use Vue easily without using NPM, and just about nobody uses React without NPM.
Yes, first gig. Thanks for your input. I'll be sure to understand the categories/groups and add adapter/facade to my list.
CTO money, dang! I gotta get me some of that. Do you work a lot? Just curious...
I was in finance, which isn’t an attractive industry for computer nerds. The pay wasn’t really competitive. The caveat was that we were a company that hires entry level and took time to nurture devs, so it was a good place for self-taught people to cut their teeth. I would definitely not set the bar of Sr Dev at interfaces 😬
I would be interested in seeing a candidate discuss trade-offs over design pattern x versus y. Even more interesting if the candidate can discuss anti-patterns in code as well, or why using a particular pattern might be overkill for a problem.
if they ask about design patterns just say "sorry OOP is for retards, reddit told me so" and heely out of there. expect a call back in the next 24 hours.
I’ve been programming professionally for 40 years. I’ve changed jobs 5 or 6 times since design patterns became popular. I’ve never been asked about them in an interview.
Thanks for this. I'll make sure to give it a good read tonight :\) 
Seems kinda straightforward. Security error \- whatever user rights and elevations your powershell scripts needs your Wpf app must also run under. Open and run Visual Studio and your wpf project as admin.
Oh my god that's amazing to read "WPF is no longer frozen." I'm basically a beginner, around 2 years I've been teaching myself programming from scratch, and time and time again I've been lucky enough to have picked the right technologies.
That's rather interesting. I wonder if you can use the synchronous methods with asynchronous
Yes, you can.
Yeah I think Aero2 is from Windows 8. [You have to change the Aero2 reference to Aero and add the necessary xaml references.](https://stackoverflow.com/a/17494555)
It injects stuff and runs a special server and can have side effects, but until it does its great and lets you hit breakpoints in JS from VS
Ask them how much they bill the client per hour.
&gt;don’t make net core, net standard and net framework versioning more complex than it needs to be Its a bit late for that, .Core went a long way in their own direction before "Net Standard" was introduced. As others mentioned there are multiple runtimes, each of which may implement one or more versions of the "Net Standard". Dot Core's version numbers have been pretty similar to those of the standard which makes it a bit less obvious that they are 2 separate things. 
In other words (for other comments) - create a singleton. Always use that singleton (which internally has one instance of the HttpClient) for all Http requests in your app. If you have DI available, then you can inject a single instance (i.e. Singleton) of the HttpClient via your DI container.
Treat HttpClient as a running browser. Make many requests using one HttpClient, and the cookies etc. will be filled in, passed back etc. as you go along. You wouldn't close and re-open your browser for every request. About the threading - you don't even need one HttpClient per thread even - it's actually thread-safe for all the main calls (Get/Put/Post/Send) (see https://msdn.microsoft.com/en-us/library/system.net.http.httpclient(v=vs.110).aspx#Anchor_5). Only if you do funky things like change the default request settings or fiddle with the cookie container do you need to worry about threading. Sometimes you do want multiple HttpClients running at once (but nearly never one per request). For example, you might like an HttpClient to present a specific user-agent to some sites. Or to create a separate cookie-space for requests, so that you can easily have multiple 'users' logged into a server at once. 
You could also look into using Flurl [Flurl](https://github.com/tmenier/Flurl). It has built-in [client lifetime management](http://tmenier.github.io/Flurl/client-lifetime/) too.
[X#](https://www.xsharp.info/) is an open source development language for .NET, based on the xBase language. It comes in different flavours, such as Core, Visual Objects, Vulcan.NET, xBase++, Harbour, Foxpro and more. X# has been built on top of Roslyn, the open source architecture behind the current Microsoft C# and Microsoft Visual Basic compilers.
yes any links to docs or solutions posted appreciated. thanks
 Correct MIT license header has been added 
If you're already using node to compile or minify your assets, you could easily use browsersync to hot reload styles and even configure it in such a way that it refreshes when you manipulate a controller file, or a number of different options. If you're working in a collaborative environment, browser sync also lets you send a link to your external ip with an open port that people inside your network can access. This is great for testing on mobile devices, too. You can scroll on all of them at the same time through the synchronization feature it offers.
Browser Link was already mentioned but Gulp can do it if you've done Gulp before and so can this extension which includes a lot of different extensions. https://marketplace.visualstudio.com/items?itemName=MadsKristensen.WebExtensionPack2017 
Why did you decide to bind a command to a specific aggregate? I always perceived command handlers as orchestrators, just like old application services. I mean - orchestration of basic capabilities provided by aggregate into an actual use case the scope of which can (it doesn't have to) span beyond a single aggregate. Of course, in most of the cases it doesn't, but sometimes it does and it's fine.
There's still a lot of boilerplate code you would have to write to get everything hooked up. EventFlow isn't merely a thin wrapper around e.g. Autofac, but a complete library that eases the creation of CQRS\+ES services. You could just rewrite the basics that you would need, but in our case we rely a lot on micro and using a library a significantly easier than re\-writing everything for every service.
In our services we try to minimize the work done in command handlers and do the work in e.g. a domain service. Here the command handlers are basically glue between aggregates, commands and any services that you might need from the IoC container. There's an open issue for creating command handlers that aren't specifically for aggregates [https://github.com/eventflow/EventFlow/issues/460](https://github.com/eventflow/EventFlow/issues/460).
Does it work with Greg Young’s EventSource dB?
Huh. Looks like the ASP.NET package is that exact amount… and right up my alley. Goddamn I could use something like that… not that I could ever justify the expenditure, tho.
I think it would be better to create an `AuthenticationHandler&lt;&gt;` since that ultimately returns a `ClaimsPrincipal` to which you can add claims. You can then access those claims from the `User` property of the controller. Have a look at the source for the [JWT Authentication handler](https://github.com/aspnet/Security/tree/dev/src/Microsoft.AspNetCore.Authentication.JwtBearer) and base yours off of that.
Highly recommend: https://www.youtube.com/playlist?list=PLrhzvIcii6GNjpARdnO4ueTUAVR9eMBpc
Great effort. Always interested in seeing good CQRS/ES libs/frameworks for .NET. We used Lokad with some success but that's dead. Axon on Java seems very very good (my current benchmark to compare against) 1. On the event handling side, do you differentiate between projections (idempotent) vs eventhandlers (non-standard term -but think handlers that have side effects that you certainly don't want to run again when replaying events) 2. Are command handers synchronous (or can be made sync?) 
For the love of god use the vue-cli and have it configured all the nasty things so you can use single page component.
Thanks. 1\) command handlers are handled sync, then projections, then event subscribers. EventFlow doesn't use background workers or any calls to [Task.Run](https://Task.Run), but relies on async/await to minimize load. It makes it considerably easier to write initial web applications. If you don't want to wait, then don't await the publish command call 2\) as above, event handlers can be run sync or async \([http://docs.geteventflow.net/Subscribers.html#subscribers](http://docs.geteventflow.net/Subscribers.html#subscribers)\)
It does, there's a NuGet for that, I haven't tested personally in a production setup but I do think there are companies using it.
I use Keycloak as authentication server. There's no need to go through any tutorials as it is very easy to setup / configure. And on top it comes with an comfortable management web interface. * [https://www.keycloak.org/](https://www.keycloak.org/) * [https://store.docker.com/community/images/jboss/keycloak](https://store.docker.com/community/images/jboss/keycloak)
Yes, bad wording on my end, my intent was "`-x` from the length", as a shortcut for `a.Length - x` and with the benefit of being independent of `a` (or for use within ranges).
Hi, For authentication/authorization for SPA apps with .net core I definitely recommend Identity Server 4 [http://docs.identityserver.io/en/release/quickstarts/0\_overview.html](http://docs.identityserver.io/en/release/quickstarts/0_overview.html) It may seem too complicated as documentation is pretty big, but after you dig into it, you'll notice that's exactly what you need. I was once confused too. What I recommend is to read "The big picture" article from documentation, then do every single "Quickstart" tutorials \(I've linked to the first one\). You may be wondering why reading everything if you need only "Javascript client", but reading all of that is necessary to really understand how it works as all of quickstarts are connected with each other.
My team tried merging vue\-cli and Typescript with the SPA middleware in [ASP.NET](https://asp.net/) Core and it had too many issues when trying to update and we found the Typescript support shaky compared to Angular. I could see why this article would want to set things up explicitly.
&gt; Having multilingual support isn't a requirement. This exactly. Most of what I build is not targeted to world consumers.
I should have been clearer, I meant apps for commercial sale. My rough survey of apps online shows relatively few translated and those that are translated have only a few languages. 
Are you building outward\-facing apps?
I could be wrong, but I think you'll find that as far as percentages go, these days most .NET code is LOB apps and/or server-side of a web application. I wonder if you'll see different ratios for Xamarin-specific development. I know you'd see more i18n for client-side web applications.
I think its great to have the localization done though. Reaching a wider audience is always a good thing. I've never released a public-facing application before, but if I didn't release a project on my own, I think I'd be worried about the accuracy of the translations. I only speak English fluently and some minor Spanish that I learned in High School. Without a fluent speaker to validate the translations, I'd be worried that I'm making a fool of myself. :-) That may be a more accurate response to your original question; lack of confidence in other languages.
Yes, I understand that concern and it seems like that should be true. But my experience and of others I know localize a lot is that users are more than happy to have any translation and will submit corrections where necessary. I have gotten one \(1\) complaint over many, many downloads all translated into \~40 languages. 
That's good the hear. I'll have to give it a try if the question ever arises at work. Thanks for sharing.
Likewise, I have been wondering about this for a while and appreciate the feedback.
The last time I had to worry about localization was in 2012 while working on a Windows VPN client. I put strings in a .resx file that got shipped off to some third party translation company, which would then return several more .resx files. I forget the underlying mechanism that swapped out resource files based on OS language.
Do you mind sharing roughly how many translations you did and what the impact approximately was on sales/installs? 
About ten languages, and I never was privy to sales figures.
Ten is a pretty good number for manual translations. 
yeah, thats the way i feel right now. drowning in documentation on identity server. feels a little a bit overkill.. but maybe i'm wrong
I've been localizing for so long now that I don't see the pain anymore. What would make localizing a no\-brainer for you?
While the technical aspects of localization are reasonably simple in .NET, actually creating good translations is a lot of work (and money). As a native German speaker, I 100% prefer an untranslated English app over one that was localized with machine translation or one of those assembly line translation services that go down a context-free table and replace every English phrase with a literal translation. I do wish that more developers would at least pay attention to formatting/parsing stuff, though. So many apps that randomly break parsing their own config files just because of a missing `InvariantCulture` argument.
How do you feel about developers making it easy to provide feedback to improve their localization? 
Can confirm. I've foolishly tried to do it the 'hard' way by setting it up myself. Never got it to work, and ended up using vue-cli which worked in ~2 minutes.
Maybe the apps that had good translations are the ones that ask users for help?
The real reason for 90% of softwares is because product owners and managers don't want to spend money on this. Interestingly here in Quebec, where almost every developer is bilingual, I find that it's a lot easier to provide software in French and English because we don't have to wait for a translator to come back with text. Every software I worked on has been bilingual but it was almost always the devs/designers doing the "translation" themselves. If not, most teams that get big enough will eventually get a mix of both native French devs and native English devs that can send translations back and forth over slack. We had a #Translation slack channel at my last place where we'd shoot short messages when we were unsure or wanted someone native to double check. 
Yes, it is, but again, have you looked what those files are? They are configuration files so you can tune it how you want, but they aren't needed to actually run an app
It is fine to configure your own webpack if you just want to do a light vue.js and do things like multiple output. I do that with my projects. But if you want to do an SPA, go with vue-cli. Vue is excellent but JavaScript SPA is the dark side. Don't do it unassisted. 
I don't know why you would bother with ASP.NET Core SPA middleware.
Its fairly straightforward if you have some experience looking at webpack configs. You just need to remove the HMR plugin that vue-cli includes, and also add a small workaround to a long-standing bug in the HMR Middleware. We've had great success with this: https://pastebin.com/bMKiUP9w This is vue-cli 3, mind you.
ill add this: https://www.youtube.com/watch?v=yZt7mUVDijU&amp;list=PL8B19C3040F6381A2 Games and patterns combined!
You cant finger gun your way through life.
Depends on your area. 3/5 companies I applied for in my area asked for them.
Selling localization services, are we? Or software? Cool!
Is there an easier way to get [ASP.NET](https://ASP.NET) Core to understand and handle SPA routes properly and to ensure that the client application is served at the same time we start debugging the server side application?
The part that removes the HMR middleware that vue-cli puts there isn't a hack/bug workaround at all. We're simply overriding default behavior. ASP.NET Core's middleware not working with `publicPath: '/'` has been around for a long time, and the issue exists whether you're trying to use vue-cli or not. https://github.com/aspnet/JavaScriptServices/issues/1495#issuecomment-367689484 
Nice work! :) CQRS and DDD has caught my interest that's why I also have created a pretty lightweight set of libraries here: https://github.com/XerProjects/Xer.Cqrs
In our system, we sent all externally-generated commands to a Saga. The Saga would authorize the command, and then dispatch commands to Aggregates.
Unfortunately it seems that won't be the case as it will be Windows only :( https://twitter.com/runfaster2000/status/1001517863633473536?s=20
Localization is incredibly difficult if you don't plan for it from the beginning. Honestly, I don't know how to use .NET localization because every localization project I've been on was cancelled in the planning stages once they realized how much effort the retrofit was going to be. 
That's unfortunate. 
watch me nerd
You don't need the middleware, just make all requests go to the index file for the SPA. I was using the following code in an empty core web project before I started using `ng serve` You need/want to have your api in a separate web app then your SPA. public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory) { app.UseStatusCodePagesWithReExecute("/");//For SPA so all requests go to index app.UseDefaultFiles(); app.UseStaticFiles(); } 
\&gt; You need/want to have your api in a separate web app then your SPA. What do you mean when you are saying 'web app'? Do you mean folder, routing, or an actual separate web application \(like separate hosting assembly\)? 
Most software out there is either A) internal/backoffice/worker process or B) thin vertical specifically targeted to a particular audiance
I probably have a narrow perspective which is why I'm asking this question. We do mostly WPF and UWP development and the tooling with [MAT ](https://www.microsoft.com/en-us/translator/mat.aspx) is there to make our lives really easy. If there is a RESX or RESW file then MAT handles it. Part of this effort is to find out if there is any reason to share our process. Its not tricky but we did have to figure out the gotchas. 
Agreed, but that I'm wondering about outward\-facing applications. Should have put that in the title \- sorry.
Just asking a question to figure out if I can understand the barriers.
I'd recommend pulling down a [code sample](https://developer.microsoft.com/en-us/windows/samples) and running [MAT](https://www.microsoft.com/en-us/translator/mat.aspx) on it to see how you feel about the tool. We don't find human translations are absolutely required until an application gets traction. Yes, single words and short phrases are rough to nonsensical but we get user feedback and fix those.
Even if you set up localization/globalization, I have no idea whether you can get your app to speak muppet.
You do have Klingon though.
Are you an ad or spam? 
I mean like a completely separate website/project within your solution. So when you run your project then it essentially is running 2 web sites. The benefit of SPAs come from the separation of the static front-end and the API back-end. You put your SPA on static hosting like s3. This is super cheap and super scalable. Then you put your API on whatever type of server you want. There is a long list of benefits from this. One of my favorites is zero downtime on deployments if you let your SPA handle your API being offline. Routing is all handled by the SPA.
I was talking to another developer about [MAT](https://www.microsoft.com/en-us/translator/mat.aspx) and wondering why more developers don't use it since it gave us \(a small developer\) double the download for, what seemed to us, for free. I decided to stop guessing and just ask. 
In commercial facing software its often the business that does that. Waterfall or agile, development work tends to get microed by fools and they dont want to spend money on it at all. 
Thanks. I'll have a look at your libraries
Definitely understand the frustration. I remember in my first job offering to my supervisor to implement a $100K effort on a C64 \(it was a while ago\). They ignored me despite the fact I was the most qualified to judge the complexity of the code. The project tanked burning through all their cash. Very sorry to see that otherwise great team break up. 
Do you have an example of using sagas like that? Currently in EventFlow sagas are for coordination between aggregates. An easy to read article on sags, EventFlow sagas function very closely to this [https://docs.microsoft.com/en\-us/previous\-versions/msp\-n\-p/jj591569\(v&amp;#37;3dpandp.10\)](https://docs.microsoft.com/en-us/previous-versions/msp-n-p/jj591569(v%3dpandp.10))
For the type of application we are working on \(internal staff tools\) those benefits aren't realized for us. For better or worse, our application is also using Windows authentication, and we need the static files to be protected by auth as well. It is simpler for us to know all content goes through the [ASP.NET](https://ASP.NET) Core server side and we also don't have to worry about making sure both projects are started/restarted properly, and worry about CORS issues on our API side.
If i literally had to do nothing and the muppets could show off their highschool french in their own time. The only reason it drives me bonkers is because every single application ive worked on that had it didnt need it. So to be honest its not that its a lot of work, its that it is needless work.
Yeah, so our sagas were called workflows, and a workflow was usually spawned by an event, and would then dispatch commands to other aggregates. But we had `CommandWorkflow&lt;TCommand&gt;` which was spawned by an external command (meaning a command sent from a client as opposed to one dispatched from within the system). These would often dispatch only a single command to a single aggregate, but they could coordinate between multiple aggregates if need be. Just a simple example, creating a user could be a single external command, but requires updating the Tenant aggregate and creating a new User aggregate.
Yup. Vue-cli and a .net core api. Two separate projects people!
Because my SAAS only targets the US and that's enough work for a single dev. If some big company wants to buy me out, they can fuck with it then.
You'll need to know web development basics, HTML, CSS and JavaScript. By default the dotnet core boilerplate pulls in Bootstrap framework (CSS) and jQuery (JavaScript). Dependency injection comes from the clean code / SOLID principles design approach. Typically whatever service you add in to startup.cs in the config section you'll pull in as a dependency in the class that requires it. There are some videos on Microsoft Virtual Academy that explains .Net core in a little more detail, which may help you some what. 
Understandable; one person SaaS, you have your hands full.
I don't want to sound harsh, but no one really cares about non-English speaking clientele because the likelihood of making money from them is close to zero. 
Yes, I can see how that might seem reasonable. What we found is that having more users to debug and interact with was just more fun. I also suspect we'll learn enough about other cultures to find problems they will pay to solve. 
Dictionary&lt;string, Action&gt;?
Can you walk me through that. Let's say it is a user input interface "system clear disk space 10 gigs" how do I match a hit to "system clear disk space" and use the remaining part as an action in a switch situation?
Multiple clients and each deployment has their own hosting policy :\)
What about something like this (C#7): switch (input) { case string testString when testString.Contains("Value1ToMatch"): //Value1 was matched break; case string testString when testString.Contains("Value2ToMatch"): //Value2 was matched break; default: ... }
Well fuck me, that is amazing. Thank you!
In this example, you might be best served by regular expressions. 
this wont be the jump tables you allude to. you’re going to go down the line doing computations. it’s equivalent to a giant if/else. i like the hygiene of it, but there’s no magic here. how well is your the domain of strings that you’re searching for defined? depending on that you may be able to do something data structurey.
&lt;3 net standard
if you don’t implement iron-x exactly the same as x, you’re going to have a bad time. the gil in python comes to mind.
Yah, been reading about this method for the past 30 minutes. Neat but I am learning it is as you said not going to change my world much. The second of your comment about the structure of my parsing, well its crap. That is the thing I am trying to cheat around. Parse everything down with spaces and have a data key structure thing, so much work....
f# is a weird beast. one of its selling points is being able to interface with any .net stuff. but that is also a downside, as it is limited to what the clr can provide. since c# is the premier clr language, it gets the time of day, where maybe f# could be more useful with different runtime features. i sort of wish that f# was more hard core functional, more like a haskell.
.NET Core.
.NET Core, try it, its great.
&gt; Framework seemed to change so much from early versions I'm worried about the same happening with Core, where I might as well just wait until Microsoft decide where they want to take it before I make the switch. This fear is not totally unfounded, but IMHO this has already happened. Version 2.0 (soon to be 2.1) has already matured to an impressive degree.
I'd say .NET Core is a no brainer.
Just make something. Personally i made a cookbook site to hold all my recepies. Then there was a post about pagination, so i made my own example pagination in core. Then a service bus example. Random data generation in a nuget package. Multi site using angular example etc... I guess my point is stuff will come. Just start with something your interested in.
What a mess of an article. - Always refers to "LINQ to SQL", but is clearly using "LINQ-to-entities" (aka Entity Framework). - Uses Hungarian notation (who the fuck still does that in C# code?). - If you are using "`x = null`" in a where clause then it will not be converted to `x IS NULL`, it will be converted to a compilation error. You're assigning `null` to `x`, and the result is will be `x`. But the method must return a `bool` - so it will only work if `x` is of type `bool`, and then it won't have the expected result. 
The internet is for Core, The internet is for Core, Core Core Core Core ;)
Hi gotmunchies, We've all been where you are now at one point or another. Either .asp related or perhaps some other legacy tech. It sucks but also has the potential for progress and learning! Regarding your question, if I was in your shoes today, I would pick .net core 99% of the time. As others have said, it's the future. I personally think the cross-platform aspects of .net core are very important. This will compound your abilities and the number of ways you can apply them. You're right in the sense that Framework is more mature and "further along" but it will always keep you stuck on a single platform (Windows/IIS). Besides, .net core is making HUGE progress and it's getting worked on 27/4. Check out the github repo for more details on it's progress and general roadmap. Happy to answer any further questions :-).
.Net Core for sure. 
https://codereview.stackexchange.com/questions/184710/cqs-implementation-with-decorators/190988
They're probably waiting for the the SDK to be released before announcing anything.
Might want to look at threads.
And the build agents to be updated. 
Thank you very much, I am pretty sure you made my day here, possibly my week! I'm really been looking for a way to be more flexible on the commands \- Ie. "system clear disk space 10 gigs" vs "system clear disk space 20 gigs" I had this ability to define this before but because Switch/Case needs to be exact I would have to had a case for 1,2,3,4...20 etc. Thanks again enjoy gold \(:
I would say that changing to C# is more important than which runtime you target. 
Hi BenReadit, My first question would be: why would you need to use .net core for your portfolio project? Is it only for learning? If it's only for learning then there are plenty of other side project-ish things you can build to better understand .net core. Although .net is my "thing", I have built my own website using Jekyll because that's a much more appropriate tool for a simple, relatively static website. I got my hands dirty with .net core building a (simple) crypto trading bot. I'm not saying you should use Jekyll but what I am saying that this project might not be best for learning .net core and you should generally use "best" tool for the job. You could consider building your portfolio site with a better-suited tool like Wordpress, Jekyll, Hugo, or Wyam. The latter being a c#/.net tool. If you really want to build your portfolio site using .net core then I would just dive in and see how far you get. The inevitable roadblocks and barriers are the best teachers. Happy to answer any questions :-). Good luck!
I don't think that's more readable ...
This is so unreadable. Please don't make this a thing.
Stick to Razor Pages and you'll be fine for now.
wow! Pretty excited! Each Core release has been huge, and 2.1 is no different. I'm looking forward to Signalr, some EF improvements, and I think some of my friends are pretty excited for some other things too. I know if I used Razor pages, I'd be pretty thrilled with the Razor libraries. And if I hadn't read about them, I'd be super confused the next time I scaffold a project with auth in it! :-p
I slapped this together. It works. It could use some work, but you'll get the idea from it. https://github.com/mikeruhl/JwtBearerProvider
Glad you could use it, and the gold made *my* week, thank you!! I don't consider myself an opinionated developer, except I can't stand switch statements! They bug me syntactically for some reason. So I'm happy to see others trying to get rid of them :) In the past I've also used the visitor pattern except more often than not, it just obfuscates things. 
Thanks for the replies everyone, I wasn't expecting the answer to be such a clear one so that helps a lot with the decision!
No problem. I used both of those to start with MVC 5. www.teamtreehouse.com has a pretty good tutorial as well for MVC 5. Starts at beginner and goes up to advance. 
Thanks, I appreciate it! I guess it does make more sense to get in at the start of something new rather than something that might be getting phased out. Cross platform isn't something important to me at the moment but that doesn't mean it won't be further down the line and having options can never be a bad thing. 
I updated to the new 2.1 a while ago, but it seems to be a preview version, not sure
Yeah, you have an RC version. The GA version wasn't out before today.
Love the dependencies. Guess the package name lives up to expectations
This project is very interesting, it's a pitty that Harbour project is unactive.
Try OpenCV-Sharp. It supports .NET Standard: https://github.com/shimat/opencvsharp/
2.1.0 Early Access Downloads https://github.com/aspnet/Home/wiki/2.1.0-Early-Access-Downloads
/s ? I mean, that's... literally what it is. All of the things. fwiw: &gt; Applications that use the Microsoft.AspNetCore.All metapackage automatically take advantage of the .NET Core Runtime Store. The Runtime Store contains all the runtime assets needed to run ASP.NET Core 2.x applications. **When you use the Microsoft.AspNetCore.All metapackage, no assets from the referenced ASP.NET Core NuGet packages are deployed with the application** — the .NET Core Runtime Store contains these assets. The assets in the Runtime Store are precompiled to improve application startup time. 
During the .NET Build 2018 conference (that just happened like 2-3 weeks ago), it was explicitly stated that .NET Framework won't go away, but will not be looked at as getting any new features (just stable bug fixes for legacy apps to work). All new features will be added into .NET Core. So ya, sticking with .NET Framework will probably become outdated very quickly (as long as you aren't maintaining legacy apps or working for tech leads who are still building new projects with .NET Framework)
I had never heard of MAT before, and didn't have time to check out more localization options. We deliver WPF/C# software in English, but it would be a massive added value to have it in French and German too. Thing is, it is also a large cost, already to maintain the documentation in multi-languages takes a lot of time. I've never found a good guide to localization / globalization that tells you how to setup your WPF app so that things like toString, double.Parse and others work correctly. Would you blog a quick how to? I'll have to take a look at MAT. 
I updated mine last week, version 2.1.105 on Ubuntu 16.04
I can't tell if I love or hate this. I would at least put a blank line between them, those examples are pretty unreadable. 
Announcement: https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-entity-framework-core-2-1/
Awesome. Thanks for sharing this. 
https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/
.NET Core for sure. .NET Framework is dead. Altough I'm Microsoft MVP, it's just my opinion, I have NO inside information. Don't get me wrong, not dead like Silverlight. .NET Framework still supported and it will evolve, but it's a secondary product, like WPF.
I'm starting to get the same vibe with C# development over the past few years. While the syntactic sugar and other extra features allow us to be really expressive at times. I'm starting to see an impact on more junior developers who don't understand these features and therefore introduce bugs into the codebase. Now you might argue that this is their fault and nothing to do with C#. However, right now there already is a shortage of good, affordable C#, and stuff like this will definitely not help us. Also, currently we're struggling if and why we should upgrade to newer versions of the language. We see the added value of the newer stuff, but we already solved these problems in other ways. And are of course afraid for regressions and problems with backwards compatibility. 
When you say it is not readable, you meant the code in my post or actual syntax?
When you say it is not readable, you meant the code in my post or actual syntax?
The course you mention is a good course. But if you want to start more basic pluralsight has plenty more courses on asp.net. Frankly, they have the best .NET tesourses on the web in my opinion. Look up author Mosh Hamedani. Take his three courses. He is one of my favorite authors. He has more great .NET stuff on Udemy. Hope that helps. 
Wasn't that added in 2.1?
Man, the .NET Core team has been killing it so far. 👏
You might think about learning [ASP.NET](https://ASP.NET) Core instead or in addition to learning [ASP.NET](https://ASP.NET). It's newer, it's faster, and it's cross\-platform \(Windows, Mac, Linux\): [https://docs.microsoft.com/en\-us/aspnet/core/tutorials/?view=aspnetcore\-2.1](https://docs.microsoft.com/en-us/aspnet/core/tutorials/?view=aspnetcore-2.1)
Enjoy job security
It's perfectly readable and borrows from other languages I'm fine with this
The syntax, and as a consequence your code. But your examples were good.
Yes and released today. https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-entity-framework-core-2-1/ Might be able to use core on my next project.
At which version C# will finally become F#?
thats a really bad Idea... use protobuff or any otherer binary serializer...you will save much more then 21%
.NET Core Check out tons of samples here https://github.com/dodyg/practical-aspnetcore
The code samples don't display properly indented for me.
That sounds wrong. I'm using SQL Compare right this moment, and it shows both the server and instance names. But RedGate has a lot of different tools, so it's hard to say which one they're referring to.
May I see it ?
Nice post! Particularly interested to look into *Virtual authentication schemes* and the new *APIController Attribute*. Lots of potential there.
I didn't downvote, btw, i just figured i'd point it out so nobody gets a node-modulesey sort of impression... Can't have that !
Except the whole problem that [IL generation is broken for stuff using the new `in` parameters](https://github.com/dotnet/corefx/issues/29254), meaning you can't mock them with Moq, NSubstitute, etc. meaning, essentially, you can't use this stuff. Which is annoying as fuck.
Is it not sufficient to simply enable gzip?
Coming from the world of JavaScript/SPA frameworks I am learning [ASP.NET](https://ASP.NET) core with using the React/Redux starter project. Was pretty damn impressed when I created a new project and it spun up a working working React Node/Webpack server with scaffolded out endpoints and all I had to to get it running was click the green button :\). Also liking the feature where you can create Web API controllers based on your EF models. Have to admit have been very impressed with so far. 
Meanwhile the client side web app has to deal with an absolute dogs dinner of meaningless un\-semantic json being sent back to it. 
Yikes, good to know. 
https://github.com/JoelViney/ None of it's perfect, but its there!
EF seed data, finally.
Definitely learn ASP.NET Core.
I worked on a project that did this for an internally facing API. It was likewise a pain in the ass. 
**A number of reasons:** * **\(big\)** The library is written in it, and you will likely find it useful to occasionally peek the library code \(either on github or using an IL dissembler like dotpeek\) * **\(big\)** Language updates come more often and with more significance than for [VB.NET](https://VB.NET) * **\(big\)** First and third party tooling support and integration are better \(or more often existent\) than for [VB.NET](https://VB.NET) \(e.g. Unity, Xamarin, VS, VSCode, Rosyln, dotnet cli, etc...\) * **\(big\)** If you ever want others to work on a project with you \(regardless of employment status\) then you are more likely to find people interested in C#. * **\(moderate\)** Most .NET code samples are written in C# and community support \(stackoverflow, github issues, blogs and articles, etc...\) will be better for C# related issues. * **\(minor\)** The syntax is similar to many other languages \(e.g. Java, PHP, TypeScript, dart, C\+\+, etc...\) whereas [VB.NET](https://VB.NET) is only similar to other variants of VB like VB6, VBA, and VBS. * **\(minor\)** [VB.NET](https://VB.NET) has a stigma due to it's association with VB. Its not fair, and shouldn't exist, but it does. I went from [VB.NET](https://VB.NET) to C# myself, about ten years ago, and I've never been given one reason to regret that choice, but have had many benefits for having done so.
Something you might not have been aware of is the non technical backdrop supporting the move to .NET Core. This is a new Microsoft that is developing the platform in the open on Github with MIT licensed open sourced code. Many of the performance improvements and bug fixes going into the .NET Core platform are from community members and its not just being developed in the dark at Microsoft as it was before. This would be enough to motivate many developers to prefer it, but it also supports more platforms \(Linux, Mac and ARM processors\) and has better performance. Everything about it \(outside of legacy support\) is...better.
&gt;meaning you can't mock them with Moq, NSubstitute, etc. meaning, essentially, you can't use this stuff I thought you were referring to .NET Core and not the libraries. I think I misunderstood what you meant. Yeah, that would suck if you have a project that you wanted to port.
I'll check it. I've heard that it's the fast growing framework. But in my country, many job requirements and companies use [ASP.NET](https://ASP.NET) MVC . That's why I though of giving it a try. Anyway I'll look into [ASP.NET](https://ASP.NET) Core as well. Thank you,
 I'll check it. I've heard that it's the fast growing framework. But in my country, many job requirements and companies use [ASP.NET](https://asp.net/) MVC . That's why I though of giving it a try. Anyway I'll look into [ASP.NET](https://asp.net/) Core as well. Thank you, 
The article is bad. The examples are different and poorly formatted. The whole point of the change is slight stylistic change, as far as I can garner.
This is nice and all, but is there compatibility with EF Core 6 now? I tried starting a new project with .Net Core 2.0 and couldn’t do a migration for the life of me. Had to scrap it and go back to 1.1. 
After years of giving talks and workshops on new C# features I came to the same conclusion :\-\( C# evolves very quickly. Developers are not able to catch up with its development pace. It is hard to distinguish between genuinely useful features and syntactic sugar that can only cause headaches. And even if some feature is useful, it is not always clear in which cases not to go for it. It unfortunately turns out that even tools like ReSharper can cause more harm then help by providing suggestions without any real guidance. The quality of the documentation of language features also decreased in the past few years if you ask me. On one side I still believe that modern C# brings some great features and some that have great potential when applied selectively. On the other side I see the problem in the way those features are introduced at the moment \(often exactly through blog posts like this one\). To combat this and to make sure that my future talks and workshops will not be in vain I've started working on a Visual Studio Extension called Sharpen. Its noble aim is to "intelligently introduce new C# features into your existing code base". There is still a tremendous amount of work in order to fulfill its vision, but almost 8000 downloads on the VS Marketplace even in this early stage shows me that Sharpen has potential. Take a look and tell me what you think: [http://sharpen.rocks](http://sharpen.rocks) Could Sharpen's approach solve the issues we have mentioned here?
None.
Check this out. This seems to be what you're looking for. https://spikesapps.wordpress.com/2017/08/04/how-to-implement-windows-authentication-in-an-angular-4-3-1-application-with-a-stand-alone-web-api/ 
Migrations work fine, but I don't know that they have made much compatible with ef6. There are a number of subtle syntax differences. With 2 you had to add some tools libraries to use them, and 2.1 includes them with the CLI tool, so you no longer need the references.
Sweet! I love .Net Core
Wait what? I'm about to start a new project, should I not be using the latest yet?
Just do your research. I wasted a whole day trying to get it to work. If you’re using EF then proceed with caution but if not you should be fine. 
What helped me the most is Adam Freeman's Pro ASP.NET Core MVC 2 book. Also get a Pluralsight membership. Watch Scott Allens vids.
Anyone receiving an HTTP 502.5 error when deploying to Azure?
A user created an issue for this in [Platform.Invoke](https://github.com/GeirGrusom/PlatformInvoker). This isn't an issue with IL generation, it's a bug in whatever proxy library you use. Basically for whatever reason the C# compiler adds `modreq` to the `InAttribute` on `in` parameters. Why they *don't* on `out` I don't know, but that hardly matters. Anyway the runtime will not think two methods where one has a `modreq` or `modopt` (yes, optional as well) and the other doesn't, are the same methods so it will claim that the method could not be found. The solution is simply to pass the required and optional parameters in DefineMethod in the emit code. Castle proxies already does this so NSubstitute at least should work fine.
Azure is stupidly expense for a hobbyist. However it is the way to go for industry. I would code a blog from scratch using asp..net Core 2 rather than use a stack that may be well out of date. Lots of blogs around on coding blogs. 
Actually nevermind, you confused me. There is no Entity Framework Core 6, it's only EF Core or EF6.
We are using net core 2.0 + EF core in production. They both work great. No idea what issues the other guy had but for us it was really straight forward and easy.
I thought the dbsets were required for showing intention of tables to be created through migrations. Creating a dbset of type product will create a table to hold that data.
I think there's some confusion. I'm not talking about porting anything, I'm saying it's pretty much not possible right now to create new projects or update existing projects in C# to use the new `in` parameters they've come out with, not if you want to be able to unit test the code you write. The IL generation bug preventing this is present in both .NET Core and .NET Framework.
If your context is empty, there isn't much to add through your context. Actions on dbset also give you type safety, actions directly on the context will not.
same. upgraded a Core 2.0 webapp, builds and deploys fine, but encountering a 502.5 error on azure app services.
I was under the impression that this pr fixed that? (https://github.com/dotnet/coreclr/pull/17881)
it's a bummer because i suspect it will hinder the adoption of the usage of "in". the upshot is that "in" is new, and won't break existing stuff. not sure how this was punted though, seems like a pretty big deal.
Too bad it missed 2.1, but a fix was merged a couple weeks ago.
You can create join tables without dbsets and they still get created. 
They're still running 2.1 RC1, apparently they're updating within the next couple of days
Generic host is a huge boon to cross platform development. We now have a much easier way of dealing with writing long running Linux services, etc. that are NOT ASP.NET based.
If you're just looking for a list of tools to begin learning asp.net core I would say: 1. VSCode of Visual Studio (for Mac, if you're on Mac) 2. .Net core CLI 3. Asp.net core + MVC with Razor Views (I would skip Razor Pages for now) 4. Like mentioned before, the web development basics: html, css, javascript (in that order) 5. Deploying a asp.net core site. I'd say Azure is simplest to get something published relatively quicky. Don't focus too much on things like dependency injection, request pipeline, etc. Those things will pop-up as you progress but at this point is not what you should be focussing on. Press on!
Hi alexvineyard, Sounds like you're at a developer's crossroad we all been at one time or another. Sounds like your excited to get started. First, if you want to immerse yourself in the .net world, I would not use Ghost as a blogging platform as it's built on Node and not .net based. You're three options are roughly to roll your own, DNN, Umbraco or some other open source blogging system. Personally, I only have experience with Umbraco but was impressed with the ease and power of it. Note that at this time Umbraco does not run on .net core (I think), should this be an issue for you. If learning is your goal than rolling your own blog is probably best. Do be critical though of how you spend your time. Umbraco gets you up and running WAY faster. As for the hosting, Azure App Services is probably the simplest to get started but tends to get expensive quickly, as others have mentioned. The alternative is you run your own server or VM. This is way cheaper but also requires more time and skills. Also note that if you are running Umbraco, you will need an SqlServer instance. Regardless if you are using App Services or your own server, this adds to the costs. If you choose to roll your own blog you can opt out of SqlServer and use something like MySql, Postgres or even Sqlite instead. These are all free to use. Hope I have helped you along a bit. There are more nuances to this so I'm happy to answer any further questions :-).
Hi Mkelly4, All that api auth stuff can be a bit daunting in asp.net core. Personally, I have built an api with JWT auth and I worked excellently. This is a good primer: https://jonhilton.net/2017/10/11/secure-your-asp.net-core-2.0-api-part-1---issuing-a-jwt/ One caveat that I ran into with JWT is that since the idea behind JWT is that you don't need to touch your db on every request to validate the token, there is no straightforward method of invalidating tokens that have a longer lifespan. This is something I have not yet found an elegant solution for but I'm sure other people fixed this already. So be on the lookout for this. Good luck! Let us know if you need any additional info :-)
The GDPR feature was great for me, I was about to implement my own version of this, less work for me now!