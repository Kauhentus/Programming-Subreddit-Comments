lmao, youre pathetic. Do your homework you faggot
You're welcome! I think you are on the right track with the space, just looking in the wrong place. Since string locations are 0 based, you have to offset your variable names by one. With the code designed the way it is, I'd probably just add the space to the HideLine routine like below ..... You'll need to go through and add them all. Sub HideLine() If SpaceLocation = 0 Then Line1.Visible = False Bokstav1 = " " &lt;&lt;&lt;&lt; add the space to the word here .... ElseIf SpaceLocation = 1 Then Line2.Visible = False Bokstav2 = " " &lt;&lt;&lt;&lt; '''''' I think that the issue with showing all "As" is related to the way the TextBox_TextChanged event is wired. it's designed to stop looking once it finds a match. You could make the following change to have it find all of the letters on a match: The current design causes the search to exit once it finds a match... Using ElseIf means that the first "If" that is true will exit and the other ElseIfs are never checked You'll want to change this: If TextBox1.Text.ToUpper.Contains(Bokstav1) And Letter1.Text = "" And Bokstav1 &lt;&gt; "" Then Letter1.Text = Bokstav1 RiktigForsok += 1 CheckForWinning() ElseIf TextBox1.Text.ToUpper.Contains(Bokstav2) And Letter2.Text = "" And Bokstav2 &lt;&gt; "" Then Letter2.Text = Bokstav2 RiktigForsok += 1 CheckForWinning() ElseIf TextBox1.Text.ToUpper.Contains(Bokstav3) And Letter3.Text = "" And Bokstav3 &lt;&gt; "" Then Letter3.Text = Bokstav3 ''''''' To This: If TextBox1.Text.ToUpper.Contains(Bokstav1) And Letter1.Text = "" And Bokstav1 &lt;&gt; "" Then Letter1.Text = Bokstav1 RiktigForsok += 1 CheckForWinning() End If If TextBox1.Text.ToUpper.Contains(Bokstav2) And Letter2.Text = "" And Bokstav2 &lt;&gt; "" Then Letter2.Text = Bokstav2 RiktigForsok += 1 CheckForWinning() End If If TextBox1.Text.ToUpper.Contains(Bokstav3) And Letter3.Text = "" And Bokstav3 &lt;&gt; "" Then Letter3.Text = Bokstav3 '''''''' You'll have to go through the entire routine, and change it like above .... using a separate If / End If for each check ensures that every one of them will always get checked. 
Do you know any other insults? fuckin' douche
Sorry I didn't get back to you earlier. This really worked well, thanks a lot. Probably one of the nicest things someone has done for me in awhile. Only thing I don't understand is how Regex.split is splitting the file. I am learning regular expressions at the moment though, so it will probably become clearer. I am just trying to figure out how I would do a file like this that was delimited by spaces instead of the header (but still in these hard to deal with columns).
The Regex.Split isn't actually using a regex to split the file. The primary difference (as far as I'm concerned, and for uses like this) between Regex.Split and String.Split are what they will allow you to split on. *Well son of a bitch, I was taught wrong. I'll include my original reasoning right here, then we'll discuss reality.* String.Split (called from an instance of a string [sSection.Split(], since it's an instance method rather than a class method), takes as a delimiter parameter either a single char, or a char array (*as noted above, this isn't entirely accurate; more on that later*). Now, in the case of the file in question, the sections are divided by the lines containing underscores and spaces. So if we wanted to use String.Split, we'd have to convert that delimiting line to a char array, so we'd have to call it like `sSection.Split("____ _____ ____".ToCharArray)`. Behind the scenes, .Net would say, "hey, they want me to split on all these different characters, but there's only 2 unique ones... let's just get rid of this other crap and keep these 2". Then, it would split the string *on any occurence of either of those 2 characters*. As I'm sure you can imagine, [this is bad](http://i.imgur.com/ajDXOw8.png). Regex.Split will allow you to pass an entire string in as a delimiter, and it will split the other string *only on complete instances* of the delimiter string. This is why we could pass "____ ____ _..." to it and have it work -- it does not treat the string as an array of separate delimiters. Note that if there are any regex special characters in the delimiter string, weird shit is gonna happen. You can also, of course, pass a regular expression into Regex.Split, and it will use that as the basis of the split. I believe this can be extremely powerful in the right circumstances, but I've never needed to use it -- which is good, because regular expressions frighten and confuse me. *Alright, so what was I wrong about?* String.Split has another set of overloads, which accept *an array of strings rather than chars*. It will take each string in the array passed in, and split on entire instances of all strings in the array (basically, the same behavior as Regex.Split). [This works fine for this file](http://i.imgur.com/oUfT1N9.png) (you'll notice the curly braces {} around the "___ ___...", making it a single-element array). TL;DR: Wasn't using an actual regex to split the file, was just using Regex.Split because *I thought* it was the only way to use an entire string as a delimiter. Turns out String.Split will behave the same way if the delimiter string is passed in as a single-element string array.
What type of timer are you using? Is it a forms.timer that you dropped onto the service, or a system.timer that you created in code? 
I think you've probably hit the limitations of this particular design. Sometimes tutorials like this are helpful for demonstrating concepts, but once you start trying to expand them the poor design really starts to show. This one for example, will get harder and harder to make work as it gets more complicated. What happens when you add 3 or 4 word problems, or when the rules need to change (as you are doing)? To me, this is the real essence of software development. Coding is a portion of the work, but solving problems and designing solutions is the real work. To answer the questions above. .... To check for the match in CheckForWinning, you'd have to have a separate variable that kept track of the actual number of spaces in the sentence (it could be 0 or 4), and subtract them from OrdLength. Public Sub CheckForWinning() If RiktigForsok = (OrdLength - 1) Then MsgBox("You Won") resetGame() End If End Sub would become Public Sub CheckForWinning() If RiktigForsok = (OrdLength - Spaces) Then &lt;&lt;&lt; spaces would have to be created, and set when the word was selected. MsgBox("You Won") resetGame() End If End Sub For the Textbox1.TextChanged .... In each if statement, you'd have to add yet another variable to let you know that you found a match .... dim Found as boolean If TextBox1.Text.ToUpper.Contains(Bokstav2) And Letter2.Text = "" And Bokstav2 &lt;&gt; "" Then Letter2.Text = Bokstav2 RiktigForsok += 1 found = true CheckForWinning() End If and at the end, you'd add another if that evaluates that variable... Else FeilForsok += 1 StartDrawingWhenLosing(FeilForsok) WrongGuessesLabel.Text = WrongGuessesLabel.Text &amp; " " &amp; TextBox1.Text becomes If Found = false FeilForsok += 1 StartDrawingWhenLosing(FeilForsok) WrongGuessesLabel.Text = WrongGuessesLabel.Text &amp; " " &amp; TextBox1.Text end if 
Hi, Solution: A System.Timer is needed for services Dim MyTimer As New System.Timers.Timer() AddHandler MyTimer.Elapsed, AddressOf OnTimedEvent MyTimer.Interval = 10000 MyTimer.Enabled = True Now the Timer fires successfully. Thanks for all your help. Cheers, Liqui
Just for reference, You can also declare it WithEvents, and skip the add / remove handler issues. private withevents MyTimer As New System.Timers.Timer() Then you'll have the auto wired timer events in the VS dropdowns, just like the forms timer. 
If all you want is some form of automated calculation of pay, you're probably better off just using an automated Excel spreadsheet that does the calculations for you and spits out the results. If you must use VB, however, use the index number of the listbox's array to refer to each item. For instance, as per your example, the string "employee1" would be stored in listbox1.items(0), while the integer "10" (for hours) would be stored in listbox2.items(0) and so on.
You'll have to add a handler by hand for each button as you add it to the array. http://msdn.microsoft.com/en-us/library/6yyk8z93%28v=vs.90%29.aspx 
Thanks, I tried what you said and it came up saying that the first value in the array was NULL. I'm not really sure why the value would be null since in the first line I initialised all of the values in the array to different buttons. 
btnPlay11 is null. search your code for "btnPlay11 =" ... chances are that variable is never assigned a value.
This is probably a really stupid question but isn't thuis what the line below does: Dim btnPlay() As Button = {btnPlay11, btnPlay12, btnPlay13, btnPlay14, btnPlay15, btnPlay21, btnPlay22, btnPlay23, btnPlay24, btnPlay25} Doesn't this assign the array values to all of the button names that I listed. Since it clearly doesn't how would I be able to initialise all of these array values easily without taking up loads of space?
In addition to PostalElf's reply, Have you thought about using a listview in Details view mode instead of separate listboxes? Or even better, set up a DataGridView and allow the user to enter directly into the cells that you require information in and when those fields are changed, you can perform the calculations inside your result fields (keeping them locked so that the user cannot change their calculated values) Here's an example of using the DataGridView http://imgur.com/a/0H45H
yes, it assigns the array values to all the variables you listed. at least one of those variables is null, i.e. a variable that has been declared but not assigned. try setting btnPlay11 = New Button() anywhere before your For loop.
Just rotate the control 180Â°.
Yeah, I ended up doing something along the same lines as you suggested. Function sjekkbokstaver() As Boolean Dim erBokstav = False If TextBox1.Text.ToUpper.Contains(Bokstav1) And Letter1.Text = "" And Bokstav1 &lt;&gt; "" Then Letter1.Text = Bokstav1 RiktigForsok += 1 CheckForWinning() erBokstav = True ' ' ' ' ' ' ' End If Return erBokstav End Function For all letters (bokstav). And If sjekkbokstaver() = True Then Else FeilForsok += 1 StartDrawingWhenLosing(FeilForsok) WrongGuessesLabel.Text = WrongGuessesLabel.Text &amp; " " &amp; TextBox1.Text End If Everything seems to be working the way I want it now! I also increased the number of letters per word to 20 (quite a job in itself), so I think it's pretty complete now. I'm looking to turn it into an adventure hangman game, with several hangman tasks placed within a storyline. I'll post the finished result here if you're interested :p I might also post again if I run into more trouble ;)
[Dia](https://wiki.gnome.org/Apps/Dia)
Thanks works great! 
/r/shittyprogramming
In the loop, check a boolean variable, and when it's true use Exit for. In the Cancel button, flag the variable ... Private ExitLoop as boolean for .... '''' If ExitLoop = true then Exit For End If next ButtonCancel_Click(e ......) Handles .... ExitLoop = True End Sub 
my friend suggested something like that i believe, If Str &lt; 0 then exit End if Not the proper coding, but something like that?
Option Strict On Public Class Form1 Private Sub Form1_Load(sender As System.Object, e As System.EventArgs) Handles MyBase.Load Dim Strinput As String Dim intcounter As Integer = 0 End Sub Private Sub ExitToolStripMenuItem_Click(sender As System.Object, e As System.EventArgs) Handles ExitToolStripMenuItem.Click Close() End Sub Private Sub btncalc_Click(sender As System.Object, e As System.EventArgs) Handles btncalc.Click Dim strinput As String Dim intinput As Integer Dim strcancelclicked As String = "" strinput = InputBox("Enter a score.", "Score") If IsNumeric(strinput) Then For intinput = 0 To 1000000000 strinput = InputBox("Please enter a score", "score") lstbox.Items.Add(strinput) Next Do Until intinput = CDbl(strcancelclicked) Loop If CDbl(intinput) = 0 Then 'User clicked cancel Else 'User Clicked ok(even when the user enters a null string "") End If End If End Sub End Class 
Using the input box limits you, since there is no way to tell the difference between a Cancel and an OK if the Input Box is blank. You can work around this some by setting the input to a space, but if the user deletes it, it will still cancel. In a production app you'd almost never use the input box (you'd create a new custom dialog to handle the exact data that you are handling), but for this you should be able to use the following. ... Private Sub btncalc_Click(sender As System.Object, e As System.EventArgs) Handles btncalc.Click Dim strinput As String Do strinput = InputBox("Please enter a score", "score", " ") ' &lt;&lt;&lt; added space to help separate cancel from OK If String.IsNullOrEmpty(strinput) Then Exit Do End If If IsNumeric(strinput) Then lstbox.Items.Add(strinput) End If Loop End Sub 
That did work! But now i cannot figure out how to make it add everything in the list box after the user clicks cancel.
You could do it two ways: you could add as you go, so if you add an item to the listbox, also add it to a numeric variable if isnumeric( .... lstbox.Items.Add(strinput) TotalScore += cint(strinput) endif or you could loop through the listbox.items once you are done with the loop .... something like For each score as integer in lstbox.items TotalScore += score next 
You'd want to create a new variable (an integer if you don't need to support decimals) to hold the score as you add. Then you can add the score to a label, or use it in a message box at the end of the button click event. 
one last question i swear, i need to get rid of the negatives. If strscore&lt;0 then *what should go here?* end if? 
It really depends upon where you are using that, and how you want to eliminate them. Are you just dumping them completely? Showing a bit more code would probably help, since that variable isn't in the original post. 
Option Strict On Public Class Form1 Private Sub Label1_Click(sender As Object, e As EventArgs) Handles lbltitle.Click End Sub Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load End Sub Private Sub btnscore_Click(sender As Object, e As EventArgs) Handles btnscore.Click Dim strinput As String Dim intinput As Integer Dim strcancelclicked As String = "" Dim inttotalscore As Integer Do strinput = InputBox("Please enter a score", "score", " ") If String.IsNullOrEmpty(strinput) Then Exit Do End If If IsNumeric(strinput) Then lstscore.Items.Add(strinput) inttotalscore += CInt(strinput) End If Loop lblscorenumber.Text = CStr(inttotalscore) End Sub Private Sub ExitToolStripMenuItem_Click(sender As Object, e As EventArgs) Handles ExitToolStripMenuItem.Click Close() End Sub Private Sub ClearToolStripMenuItem_Click(sender As Object, e As EventArgs) Handles ClearToolStripMenuItem.Click lstscore.Items.Clear() lblscorenumber.Text = "" End Sub End Class 
If you just want to dump the negative scores, then I'd do it in the isnumeric check. If IsNumeric(strinput) Then if cint(strinput)&gt;0 then '&lt;&lt; don't add anything less than 1 lstscore.Items.Add(strinput) inttotalscore += CInt(strinput) end if End If
that broke it. no longer accepts the cancel button 0.o 
nevermind, i entered it wrong somehow... Thank you very much sir!
It looks like you're on the right track. ... Where are the variables declared at? If you are declaring "Sum" inside of the event where you calculate the number, then it won't remember any values between calls (it's a new blank variable each time you start). You'll need to declare Sum outside of that event so that it's always available (this is what's referred to as scope). For instance (this is all air code....): Public Class Form Public sub Button_click(sender ..., e ...) handles button.click dim Sum as integer &lt;&lt;&lt;&lt; sum will be a new variable every time you click on the button Sum +=1 'Sum will always be 1, since it's a brand new variable ........ end event End Class VS. Public Class Form private Sum as integer &lt;&lt;&lt;&lt; sum is created with the form, and will remember what happens between button clicks Public sub Button_click(sender ..., e ...) handles button.click Sum +=1 'Sum will change each time, since it's declared outside of the click ........ end event End Class
What type of audio file?
OMG you're a genius. Of course that was the problem. Thank you!
Truthfully, this is a perfect candidate for regular expressions (Regex). They can be a bit tough, but could give you a nice single line of code to do the work. http://www.regular-expressions.info/dotnet.html Might also look at this... http://www.dreamincode.net/forums/topic/75500-verfiying-input-data-contains-no-numbers/ 
 This is a handy site to build regular expressions and test them. http://rubular.com/ If this isn't part of a homework assignment and you just need help, I can give you an expression that does what you want. Otherwise you'll get a lot more out of it if you play with the expression builder and learn how they work. Imports System.Text.RegularExpressions Public Class Form1 Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click Dim RegexObj As Regex = New Regex("your_expression_goes_here") Dim wordtoguess As String = InputBox("Write a word. Max 7 Char") If RegexObj.IsMatch(wordtoguess) Then MsgBox("Word is ok") Else MsgBox("Word is invalid") End If End Sub End Class
In this situation, since "Sum" is required only within the Click event, I'd declare "Sum" within the procedure as Static.
A .wav file
http://imgur.com/xBDzB9B That... Make your best judgement on the message. The only thing is we've all downloaded exes at one time or another where their exes don't show this.
Thanks!
I work locally (per machine), and use version control to push/pull code from a remote server.
Not really sure what you're trying to do, one thing that I've noticed is that you put: Dim shortcutarray() as Picturebox = background() When you should use: Dim shortcutarray() as Picturebox = background The rule is, only put the () on the line of declaration or when referencing a position, if you're trying to look at the array as a whole then don't use (). As for formatting, simply put 4 spaces at the front of a line of code. Also make sure code and text is seperated above and below by 2 'new lines'/enters. If you want a better response I recommend that you repost a new post with all the code rather than just saying "Loop through." Another coding tip: don't call it like "ground1" call it, "ptbGround1" to say that it's a picturebox. It keeps thing neat. Button: btn. Textbox: txt. Label: lbl. etc.
Thanks for the reply, do you if there's a official ms answer? 
I don't think that you can rotate form controls, atleast not all 360 degrees... I'm not totally sure but try something on the lines of: create a panel and use thr following code: Dim g as graphics g = panel1.CreateGraphics() g.drawImage(IMAGE, panel1.ClientRectangle) This will draw it in the panel then (this is the bit I'm not sure about) look for something like: g.Rotate( Something here ) If you get it to rotate but it cuts off corners then try changing a earlier line to: g.drawImage(IMAGE, new rectangle(panel1.width/4, panel1.height/4, panel1.width*(3/4), panel1.height*(3/4)))
Some tips: 1. Where it says "If TextBox1.Text.Contains("ping") Then", you should add ".toLower" after ".text", so case does not matter. 2. Try checking the length. If the length of the item with the index 0 is 0, you know it's value is blank. Same for index 1. You're probably getting this error because when using just "ping", there is no index 1. The string cannot be split, because there are no spaces.
I'm back for more! I'm progressing nicely with my project, but I've run into another obstacle. As I mentioned before, I want to make a sort of adventure-mode for my hangman game. The basic is: Page of text -&gt; Round of hangman -&gt; If you win the hangman puzzle, you get another page of text -&gt; Round of hangman -&gt; If you win, new page etc etc etc. Now, at the start of the game you get to choose which category of words you recieve puzzles from, i.e. Star Wars, Lord of the Rings etc. How do I carry this through the game, and through the number of different forms? I've been playing with ChosenCategory = ListBox1.SelectedItem.ToString(ExportCategory) but I'm not sure how I can call upon the chosen category from another form. I read abit about public events on [this page](http://stackoverflow.com/questions/16446452/how-to-check-a-checkbox-of-form-1-from-another-form-in-vb-net) (scroll down a bit) but I am unable to tweak the code to my own needs. Could you please help me out once again? Kind regards Stjernegris
You'll need to look into Global Variables. Add a Module to your project, and then you can declare anything in there that you need to be able to see throughout the project, including in multiple forms. So ChosenCategory would be declared in the module, and it will be available to the entire project. Use Global Variables sparingly. It's easy to create problems if you make something global that you really don't intend to. 
First of all, "best way" is usually subjective. Ask 10 programmers about the best way to do something, and you'll get 10 different answers. Next, yes, everything looks fine there. The code should run fine. Is `System.IO` imported? Is this a single-form application, or is this an additional form in a project?
if I were just starting, i'd put pretty much that exact question into google. i suspect there's a dozen well written how to's out there. however, if you don't already know SQL, start with http://www.sqlcourse.com/ and at get least through #8 down.
I am wanting to develop an inventory system. I have about a month to do so. Hopefully this leads me in the right directions...thanks. 
You just create the second class as you would the first, and add it as a property of the main class: Class MainClass public property subClass as SubClass End Class Class SubClass public property SubClassProperty as ... End Class 
 Private Sub PasswordTextBox_TextChanged(sender As Object, e As EventArgs) Handles PasswordTextBox.TextChanged Dim strEncryptedText As String strEncryptedText = Encrypt(PasswordTextBox.Text) End Sub Private Sub OK_Click(sender As Object, e As EventArgs) Handles OK.Click If UsernameTextBox.Text = "XXX" Then If strEncryptedText = "XXX" Then MainMenu.Label4.Text = "XXX" My.Settings.Username = "XXX" Me.Hide() PasswordTextBox.Text = "" End If End If End Sub `strEncryptedText` is declared in the `PasswordTextBox_TextChanged` sub. Then you try to use it in the `OK_Click` sub, but that sub has no idea what it is, because it's declared in a different sub -- e.g. it's *scope* is local to the sub it's declared in. Once `PasswordTextBox_TextChanged` is finished executing, `strEncryptedText` goes out of *scope*. If you want to use it (and have it maintain its value) in multiple functions/subs, you need to scope it globally -- e.g. declare it outside of a sub/function (at the class level). Private strEncryptedText As String Private Sub PasswordTextBox_TextChanged(sender As Object, e As EventArgs) Handles PasswordTextBox.TextChanged strEncryptedText = Encrypt(PasswordTextBox.Text) End Sub Private Sub OK_Click(sender As Object, e As EventArgs) Handles OK.Click If UsernameTextBox.Text = "XXX" Then If strEncryptedText = "XXX" Then MainMenu.Label4.Text = "XXX" My.Settings.Username = "XXX" Me.Hide() PasswordTextBox.Text = "" End If End If End Sub Also, `'Public' is not valid on a local variable declaration.` Access modifiers aren't allowed on local (inside sub/function) declarations. Public/Private/Protected/Friend declarations are only allowed at the global (class, module, etc.) level.
does it not have windows drivers? to embed and talk directly to the hardware, you'll need to contact the printer's maker for an SDK.
Also, if you've not worked a lot with databases, take the time to look up normalizing your database. It will save you a lot of grief if you understand the relationships between multiple tables and how to link them together. 
Thank you, I am now testing the code. Edit: It worked, but can you suggest what to do for this warning? 'Public Overrides Function GetBytes(cb As Integer) As Byte()' is obsolete: 'Rfc2898DeriveBytes replaces PasswordDeriveBytes for deriving key material from a password and is preferred in new applications.'. It is talking about something that does not exist on that line? (Line 27)
It's talking about Dim keyBytes As Byte() = password.GetBytes(... Apparently the `GetBytes` function of the `PasswordDeriveBytes` class is depreciated/obsolete. Actually, upon further investigation, it looks like the entire `PasswordDeriveBytes` class is depreciated/obsolete. Luckily, the warning itself tells you what to do -- declare `password` as a `Rfc2898DeriveBytes` object rather than a `PasswordDeriveBytes` object. Dim password As New Rfc2898DeriveBytes(passPhrase, saltValueBytes, hashAlgorithm, passwordIterations)
Are you trying to save or load? Save can be done with "join" and load can be done with "split".
You're probably better off storing them in an XML file rather than a single string. Aside from making it more human readable for debugging purposes, it also allows you to store other data that I would imagine you would need to store in a game, eg. whether each square has stuff on it, what sort of stuff etc. You would want to do a loop through each picturebox. If you haven't already, make sure that all the pictureboxes are part of a List (Of Picturebox), then use a For-Each to go through every single picturebox in the list and retrieve the data. 
How would I save and load things from a separate XML than the default settings file? Edit: Hold on, I think I may have figured it out. I just woke up. :P
Try setting filename as app.path &amp; "Cars.DAT" App.path may not end in "\" so you may need to see include it.
Dude, SqlCommand SqlCommand.CommandText SqlCommand.Parameters.Add So you would do something like Dim cmd as New Sqlcommand cmd.CommandText = "select id from new_filename where name like @fname" cmd.Parameters.AddWithValue("@fname", filename) Then send this command to a sql data function, ie i have this one that returns a datatable so you could do Dim dt as New Datatable dt = GetData(cmd) Private Function GetData(ByVal cmd As SqlCommand) As DataTable Dim cnn As New SqlConnection(My.Settings.cnnString) Using cnn Dim da As New SqlDataAdapter da.SelectCommand = cmd da.SelectCommand.Connection = cnn Dim dt As New DataTable da.MissingSchemaAction = MissingSchemaAction.AddWithKey ' Make sure this line is there. da.Fill(dt) Return dt End Using End Function Using params helps against sql injection, and eliminates a lot of crap like escaping ', however the way you are doing it looks like it should work to me, I would make sure you command is being built properly
Well is there an easy way to update my library so that this kind of syntax still works, but is now injection-corrected? I have hundreds of lines of code like this: Dim db As New sqlite Dim d As New Dictionary(Of String, String)() d.Add("fieldname", value) db.insert("table", d) Here is the library I created: http://pastebin.com/HEx3ZzxX edit: I guess the .Parameters.AddWithValue approach can work...maybe I'll only just need to change the .Add to "@fieldname" and then update the library to use the parameter syntax instead of the String.Format syntax...thanks for your help :)
hm yeah I guess I can try that, I just thought that the String.Format did escape stuff, but apparently the .Parameters.AddWithValue is what I have to actually use to get it working. So I'm just trying to figure out the code to update my library to do that.
I took off for the afternoon, did you get this done ok? this is from System.Data.SqlClient. Your get/send functions are similar to what I use, except instead of the SQL command in a string, I use a command object which is a more efficient way to do things. I generally use stored procedures on the SQL server as well. I'm not familiar with SQLlite quite honestly, but if you can use stored procedures with it, then it may make things a little easier. after you declare your SqlCommand object(cmd) you can do something like cmd.CommandType = CommandType.StoredProcedure and then the cmd.CommandText = "&lt;Stored Procedure Name&gt;". Let me know if I can be of any more help with this. It's stuff that I have been taking in school for the past 2 years, I am not a pro but have a bit of experience with it. 
Step through the code and check the values that Block has in the CheckBlock sub. It appears you're looking for "1" but prior to calling the sub from the Load event, you are concatenating various strings that apparently aren't resulting in things like "1", "2", etc... Put a break point on the sub and when the program halts, mouse-over the various variables and look at what is being passed into the sub.
Outside of using parameterization, if you manually do it a single quote is escaped with another single quote.... Replace("'","''",file name)
Basically pad more spaced on each loop. There's a handy function for this - Space(x), where x is the number of spaces. You can also keep a "space variable" that happens a a space after each loop; spc=spc&amp;" " Also, byval doesn't allow the values to be passed backwards between teh sub and caller - remove this.
Thank you for the advice! Whatever number I put into the program, just one set of "****" appears. I removed the byval. Am I calling the sub correctly or is it the sub itself that's wrong? 
I would expect this from your code for an input of, say, 3: ****1****2****3
What is the value of "Loading"?
There's not a lot of information given here, but ... I am assuming Loading is a Form object. I haven't been able to recreate the exception myself, so can't say why it's triggering. Some questions: 1) What is happening in the Loading_Load() event? Also, I'd probably put the Timer1.Enabled statement into this Event Sub. 2) Have you tried using Loading.ShowDialog() instead of Loading.Show()? Did it make any difference? 
Yes, it is a form. 1) Nothing. 2) No difference.
Loading is a form.
Ok, will try. Edit: I may not be able to do that for awhile. Technical difficultys. :P
First thing I see is the requirement is that each sub have a single argument. It also appears from the flowchart that your initial variables are not declared in a wide enough scope and should be moved to the class level outside of any subs. In the button click you will use a While loop to call both subs, increment rowcount and increment spaces. When the while loop completes, you then set your label's .Text property = Stars In the drawSpace Sub you would pass it UserInput declare count (see flowchart) create a while loop (see flowchart for condition) append a " " to stars increment count In the drawStar sub you would pass it spaces (the integer) declare count (see flowchart) create a while loop (see flowchart for condition) append a "*" to stars increment count After the while loop ends. You will then want to append an Environment.NewLine to stars so that the next iteration starts on the next line
I'm fairly certain that you are correct and we need to see the form code. I'd guess some control or other object is the real source of the exception, but that the show sub on the form causes that exception to be thrown.
Thank you so much for the input! I spoke with my professor today and [this](http://imgur.com/JVpmECW) is what I came up with. Where I am having trouble now is appending the stars and spaces in each sub. Do the variables for stars and spaces need to be called into the sub to append them? Currently as I run the program the loops do not close.
I thought it was implied, but try ByRef where you had ByVal before
OK, after dealing with computers being stupid, here is the code that appears to be the problem. Private Const CP_NOCLOSE_BUTTON As Integer = &amp;H150 Protected Overrides ReadOnly Property CreateParams() As CreateParams Get Dim myCp As CreateParams = MyBase.CreateParams myCp.ClassStyle = myCp.ClassStyle Or CP_NOCLOSE_BUTTON Return myCp End Get End Property
You should not use more than one AND operators in a single line. Try this: if txtNote.Text &lt;&gt; "" And (txtNote.Text &gt;= 70 And txtNote.Text &lt;= 100) Then lblRÃ©ponse.Text = StrBon End If I'm not 100% sure that this will fix the problem, but I think it will. Let me know how it turns out.
Unfortunately sqlite doesn't support stored procedures, but it does seem like it supports the addparameters syntax. I'm working on the library now and then will post about it here and on codeproject.
Turn Option Strict On at the top of your code. This will explain the issue. You are trying to implicitly compare strings and doubles. Of course this can be implied by the compiler successfully as long as all strings and all numbers in the comparison can be valid numeric values. In this case "" can never be a valid numeric value so you will receive an error any time the textbox is left blank. I would rewrite the code to something similar to this: If txtNote.Text &lt;&gt; "" Then If txtNote.Text &gt;= 70 And txtNote.Text &lt;=100 Then 'Not blank and Numeric condition Met Else 'Numeric condition not met End If Else 'A blank entry was made End If Of course this is still implicitly working with Option Strict Off What you should probably do is use Integer.TryParse to store the entry to a variable of the same type and compare that variable. This way, a blank entry would not parse and would return a boolean result of False. Here's an example using TryParse Dim value As Integer 'declare a variable to use in the TryParse If Integer.TryParse(txtNote.Text, value) Then 'Tryparse returned True and stored the result in our 'variable (value) If value &gt;= 70 And value &lt;= 100 Then MsgBox("Condition Met") Else MsgBox("Condition Not Met") End If Else 'Tryparse returned False and stored 0 in our 'variable (value) MsgBox("Could not parse entry to an integer") End If The reason this is a better route is that you are allowing the user to enter something into the textbox but do not have any restrictions on the textbox. So even though you're checking to ensure something was entered, you are only then checking to see if it falls withing a numeric range. But what if the user entered "B" in the text box? With your old method, the program would crash, throwing an exception. With the .TryParse method, it cannot successfully be parsed and you can prompt the user to enter valid information without crashing the application. 
Look at your first While Loop. It's running While rowCount &lt;= UserInput right? But where do you ever increment rowCount to make the condition false and stop the loop?
You may also want to check that what is entered in the box is actually numeric before you test that it's between a certain value. Or it may throw you an error. You can do that like this: If txtNote.Text &lt;&gt; "" AND (IsNumeric(txtNote.text) = TRUE Then If txtNote.Text &gt;= 70 And txtNote.Text &lt;= 100 Then lblRÃ©ponse.Text = StrBon End If End If But I think PostalElf is correct, only one AND operator on a line, unless you group statements using brackets.
DateTime.Now.Hour? Is this what you're asking? Of course you also have .Minute and .Second you can use too. 
Small additional question: I need the user to be able to enter in a large number. I chose a text box, but I'm running into issues with the user typing in a space or symbol and the program crashing on the string to integer conversion. Is there a simple fix for that?
Yes, you can ignore them in the keypress event of the textbox. I have a few code snippets that, I wrote doing these types of things. Just put this into a module and you can call them as needed in the key events of the textbox 'The NumericOnly function was created to limit a textbox to only receiving 'the digits 0-9. Any other character is ignored. 'The LettersOnly function was created to limit a textbox to receiving only 'the letter A-Z regardless of case. 'The SingleDecimal function was created to allow the user to enter numeric 'digits only but also allows a single decimal point so the user could enter '123.00009 while inhibiting them from inserting a second decimal point. 'The Last function Currency was kind of written as a novel idea which was 'to allow the user to enter a dollar amount. It performs 3 different tests 'during text entry. 1, it ensures that if a $ is used, it has to be the 'first character entered into the textbox, otherwise, it is ignored. 2, it 'ensures that only numbers are allowed beyond the $ symbol with the exception 'of the decimal point with which it inhibits more than once. And 3, it stops 'entry of more than 2 decimal places once a decimal has been typed. So this 'allows the user to type $1.00 but not $1.001 and inhibits the user from 'messing up the value with something like 10$. 'Hopefully you find these helpful, and any comments or suggestions for 'improvements are appreciated. 'To use these methods they are placed in the keypress event of the textbox 'such as: 'Private Sub txtAmount_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtAmount.KeyPress ' 'You can use the appropriate functions using the following format ' e.Handled = LettersOnly(e.KeyChar) ' 'or ' e.Handled = NumericOnly(e.KeyChar) ' 'or ' e.Handled = SingleDecimal(sender, e.KeyChar) ' 'or ' e.Handled = Currency(sender, e.KeyChar) 'End Sub 'Called in the keypress event using: e.Handled = NumericOnly(e.KeyChar) 'This routine only allows numbers and the backspace key Public Function NumericOnly(ByVal eChar As Char) As Boolean Dim chkStr As String = "0123456789" If chkStr.IndexOf(eChar) &gt; -1 OrElse eChar = vbBack Then Return False Else Return True End If End Function 'Called in the keypress event using: e.Handled = LettersOnly(e.KeyChar) 'This routine only allows letters and the backspace key Public Function LettersOnly(ByVal eChar As Char) As Boolean Dim chkStr As String = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ" If chkStr.IndexOf(eChar) &gt; -1 OrElse eChar = vbBack Then Return False Else Return True End If End Function 'Called in the keypress event using: e.Handled = SingleDecimal(sender, e.KeyChar) 'This routine only allows 1 decimal in a string of numbers. Public Function SingleDecimal(ByVal sender As System.Object, ByVal eChar As Char) As Boolean Dim chkstr As String = "0123456789." If chkstr.IndexOf(eChar) &gt; -1 OrElse eChar = vbBack Then If eChar = "." Then If CType(sender, TextBox).Text.IndexOf(eChar) &gt; -1 Then Return True Else Return False End If End If Return False Else Return True End If End Function 'Called in the keypress event using: e.Handled = Currency(sender, e.KeyChar) 'This routine allow the $ only in position 1. If it is not the first character typed, it is ignored. 'It then performs a check to inhibit more than one decimal point and a maximum of 2 digits after the decimal point. Public Function Currency(ByVal sender As System.Object, ByVal eChar As Char) As Boolean Dim chkstr As String = "$0123456789." If chkstr.IndexOf(eChar) &gt; -1 OrElse eChar = vbBack Then If CType(sender, TextBox).Text.IndexOf(".") &gt; -1 Then If CType(sender, TextBox).TextLength - CType(sender, TextBox).Text.IndexOf(".") &gt; 2 And eChar &lt;&gt; vbBack Then Return True End If End If If eChar = "$" Then If CType(sender, TextBox).TextLength &gt; 0 Then Return True Else Return False End If End If If eChar = "." Then If CType(sender, TextBox).Text.IndexOf(eChar) &gt; -1 Then Return True Else Return False End If End If Return False Else Return True End If End Function You don't need all of these but I included them so that if you need something more specific, there should be enough code there to figure out how to handle the scenerio. So if you only wanted numbers to be allowed in TextBox1 you would put in the Keypress Event Private Sub TextBox1_KeyPress(sender As Object, e As System.Windows.Forms.KeyPressEventArgs) Handles TextBox1.KeyPress e.Handled = NumericOnly(e.KeyChar) End Sub
A number of fixes, actually. You can change the TextBox to a MaskedTextBox, and configure the mask so that they can only enter numbers. You can use the `Integer.TryParse()` function. If it returns False, then the conversion failed and you can prompt the user to enter numbers only. The String .Replace() function to replace instances of certain characters anywhere in a string. That would look something like Dim i As Integer = Integer.Parse(TextBox1.Text.Replace(":", "")) Note that you'll have to call .Replace for any character you want to replace. An alternative to this is the `System.Text.RegularExpressions.Regex.Replace()` method, which allows you to pass in a regex of all the characters you'd want to replace. Easier than calling String .Replace numerous times, but now you're dealing with regexes. There's also the String `.Trim()` function, which removes characters from the start and end of a string (there's also `.TrimStart()` and `.TrimEnd()`). This also suffers the drawbacks of `.Replace`, with the additional limitation of it only dealing with the "outsides" of a string. Dim i As Integer = Integer.Parse(TextBox1.Text.Trim(" ", ""))
I just posted some of my [snippets here](http://www.reddit.com/r/visualbasic/comments/1q1rao/can_someone_explain_to_me_how_to_grab_the_time/) that help in ensuring that the user cannot enter invalid information into a textbox. These may or may not help you but by not allowing "A" to be entered into a textbox that you are expecting a number from is a good start in ensuring that you are controlling a user-input control.
Many thanks
Thank you! That fixed it.
serial coms isn't hard in vb if you can connect it via usb. On the arduino side I like using [SerialCommand](https://github.com/kroimon/Arduino-SerialCommand), then from vb you just build up a delimited string and send it. 
If I am understanding you correctly a case statement would be perfect for you. Example: `Select Case Range("Variablecell").Value` ` Case SomeNumber to Someothernumber` Range("Something").Select ` Case SomeThirdNumber to Somefourthnumber` Range("Somethingelese").Select `End Select` [Edit: formatting]
There is not any good reason to use several if statements when a single block of select case is much easier to read and type out. Also, he is using VBA (Visual Basic for Applications) therefore the short-circuit 'andalso' evaluation will not work.
Serial is all up and running. Let me explain my goals: run my app on a computer close to the reef that I can also connect from a remote place, not through vnc. 
that leaves about a billion options, including http, a custom tcp/udp protocol, polling a web server, irc/chat/sms bot, bluetooth to a phone... 
i wish it were that easy, its more complicated im pretty sure but im incredibly new to this stuff so i may just be an idiot. Here is the code I currently have: GrowthRate = InputBox("Enter the Growth rate in Decimal form") ActiveCell.Value = NumberOfMonths &amp; " Month Sales Forecast with a Growth Rate of " &amp; GrowthRate Basically I'm trying to to populate that active cell with a % without changing the GrowthRate variable I already have defined 
Still not too clear, but here are the different ways I read that: Not changing the GrowsRate variable by using another variable: x=InputBox("Enter the Growth rate in Decimal form") ActiveCell.Value = NumberOfMonths &amp; " Month Sales Forecast with a Growth Rate of " &amp; x Not use a variable at all: ActiveCell.Value = NumberOfMonths &amp; " Month Sales Forecast with a Growth Rate of " &amp; InputBox("Enter the Growth rate in Decimal form") "set the active cell to a %" if the cell is already set as a % format (convert it to a decimal, divide by 100 because % formatting multiplies by 100 - it will error if a non-decimal value is entered) ActiveCell.Value=CDbl(InputBox("Enter the Growth rate in Decimal form"))/100
This should get you started: [XML in VB](http://msdn.microsoft.com/en-us/library/vstudio/bb384833.aspx) I'm new to working with XML in VB and I've only played around with XML APIs (which are really cool). I'm going to try and parse data from a local XML file and if I get that to work then I'll probably come back here with code that will point you in the right direction, faster. This is the sample file I used to work with: &lt;?xml version='1.0' encoding='UTF-8'?&gt; &lt;eveapi version="2"&gt; &lt;currentTime&gt;2013-11-09 04:03:46&lt;/currentTime&gt; &lt;result&gt; &lt;serverOpen&gt;True&lt;/serverOpen&gt; &lt;onlinePlayers&gt;27798&lt;/onlinePlayers&gt; &lt;/result&gt; &lt;cachedUntil&gt;2013-11-09 04:04:34&lt;/cachedUntil&gt; &lt;/eveapi&gt; And this is the code for the form I threw together: Option Explicit On Option Strict On Imports System.Xml 'Necessary to work with XML Public Class Form1 Private Sub Button1_Click(sender As Object, e As EventArgs) Handles Button1.Click 'When button is clicked, this code is executed Dim xmlDoc As XDocument = XDocument.Load("C:\ServerStatus.xml") 'Replace with your document path. Dim strNode1 As String = Nothing 'Data in individual nodes can be parsed as strings, and from there, whatever data type you want. 'This outputs the entire XML doc into a text box, minus the portion 'of the XML file in the &lt;?xml ... &gt; tag. RichTextBox1.Text = xmlDoc.ToString 'Node values can be output directly into textboxes or labels. 'You can skip through the hierarchy with '...' and start at a node 'that is unique to that particular tree. Quite handy. TextBox1.Text = xmlDoc...&lt;currentTime&gt;.Value 'Otherwise you can manually list the hierarchy and do whatever 'you want with the data. strNode1 = xmlDoc.&lt;eveapi&gt;.&lt;result&gt;.&lt;onlinePlayers&gt;.Value 'The string is then output into a textbox. TextBox2.Text = strNode1 End Sub Private Sub Button2_Click(sender As Object, e As EventArgs) Handles Button2.Click Me.Close() End Sub End Class
&gt; Turn &gt; &gt; &gt; &gt; Option Strict On &gt; &gt; &gt; &gt; at the top of your code. Even better, go into the project properties / compile options, and turn it on for the entire project, and then go into the VS settings and enable it by default for all future projects. There is almost never a reason to run with option strict off, and you should have to turn it off on the very rare occasion that you need it. 
Without knowing the error, it's hard to even guess, and VB6 is so old that I don't even have a copy loaded on this machine any more. That said, if you are just learning to program, do yourself a huge favor, and don't do any more with VB6. Go download a free copy of VB.NET, and learn .NET. VB6 is beyond dead for new development, and is very, very outdated. http://www.microsoft.com/visualstudio/eng/products/visual-studio-express-products The series below will give you a great starting point: http://channel9.msdn.com/Series/Visual-Basic-Development-for-Absolute-Beginners 
Can you tell where in setdate the error happens? I don't see an issue in the way the scroll bar calls it
I'm not sure if there's a good place to publish this, I was going to put it on Code Project but I'm too lazy to write up a whole article tutorial. The only thing that's really missing are transactions, but that wouldn't be too hard to add. Just I thought that the original person who wrote the article knew what they were doing and that the String.Format stuff actually was sufficient to fix SQL injection, but it wasn't.
You have to include the variable with each comparison. Else If item &gt;= 6 **And item** &lt;=19 Then .... 
Ahh thank you! Now the problem is the &lt;= shows the lowest number and the &gt;= &lt;= part shows the middle number and the last part &gt;= shows the highest part. Any ideas? Have to show how many items sold in that restrain (for example, 4 items sold past 20 dollars **ElseIf item &gt;= 20 Then highnum = item** this code shows the highest dollar value of the item sold).
This really helped me a lot to get me in the right direction. Thanks so much. Sorry for the late reply, I don't use reddit on the weekends, but I wanted you to know you really did help! Thanks man
I'm glad to have helped.
It's probably better for you to use If ... Else If, in this format: If Textbox1.text.contains(".") then .... Elseif convert.toint32(textbox1.text) &gt; 10 then .... Elseif etc .... End if The second thing you might notice is that I added convert.toint32 to your comparison of textbox1.text. This is because anything .text is, by default, a string, and you cannot compare strings as if they were numbers. Another and arguably better way of doing this is to first validate the input, and if it passes store that in an integer variable and use that integer for conversion instead. You may also wish to look into the use of a dictionary (key integer, value string) for the translation of numbers to Roman numerals. Have fun!
I do appreciate the help. However, it does the same error. After I enter a restricted value (negative, greater than ten of a decimal), it opens the error screen, then freezes the program and points specifically to the code giving the values of roman numerals. This is said code: Select Case True Case (TextBox1.Text = 1) TextBox2.Text = "I" Case (TextBox1.Text = 2) TextBox2.Text = "II" Case (TextBox1.Text = 3) TextBox2.Text = "III" Case (TextBox1.Text = 4) TextBox2.Text = "IV" Case (TextBox1.Text = 5) TextBox2.Text = "V" Case (TextBox1.Text = 6) TextBox2.Text = "VI" Case (TextBox1.Text = 7) TextBox2.Text = "VII" Case (TextBox1.Text = 8) TextBox2.Text = "VIII" Case (TextBox1.Text = 9) TextBox2.Text = "IX" Case (TextBox1.Text = 10) TextBox2.Text = "X" Case Else Like i said, it goes over one of the cases and gives me an error. Any luck? Once again i appreciate the help :)
Personally, I would look into {type}.TryParse. The reason is that is will return a boolean value if the string can be converted to that type. If unsuccessful its variable will hold 0 which is less than 1 and will appease the low side of the criteria. For example: Lets say textbox1.text contains the letter B. Of course this is not allowed because it cannot be converted to a Roman Numeral. Since Integer.TryParse will result in a false return and set the variable to 0, you would only then have to test the resulting variable against the upper limit. dim NumericEntry as Integer If Integer.TryParse(TextBox1.Text, NumericEntry) Then 'at this point, if the entry in TextBox1 can be converted successfully to an integer then store the converted number into NumericEntry... If NumericEntry &lt; 11 And NumericEntry &gt; 0 then 'The resulting entry in the textbox is between 0 and 11 (exclusive) 'Perform the conversion to Roman Numerals Else MsgBox("Invalid Entry, Please enter a number from 1 to 10") End If 
What if all images are the same dimensions? I'd hash the images and compare hashes. Way more exact.
Others have posted ways to compare the values, but it sounds like you are providing the pictures, and allowing the user to drag them from one PB to another. In this case, I'd monitor the mouseDown / mouseMove / mouseUp events for the controls in question, and use a variable to keep track of when they drag the correct picture from it's original location. 
While a stack sounds like a good solution, it's actually not since you can't remove items except with .Pop method. While you could manage this with a Stack, you'd have to manually remove all of the items, then add back the ones you wanted to keep. This will get very expensive. If it's something small like this, I'd probably just use a List(of t), and then just add the new item to the list. List.add (itemToUndo) when you want to undo, you just use the last item in the list: list(list.count-1) and then remove it via .remove (object), or RemoveAt(list.count-1) (the second option is probably safer). For controlling the size; when you add a new item just check the .count property. If it's greater than the max number you want, then just .removeAt(0) to remove the first item. If it's something you need to use extensively (doesn't sound like it), then I'd probably build a custom class based on a linked list or other generic collection. 
I assume that was supposed to be **aren't** the same dimensions. But either way, I agree that hashing would be a lot more exact. However, this will still return false as it breaks out of the loop after the first mis-match is found which is highly likely to happen fairly quickly in two separate not matching images. I just tested my code by comparing a 1024x768 image and a 227x403 image and then reversed the dimensions and both returned false with no errors.
You can store the contents of the graphics object to an image object. I have a routine that allows a used to overlay text, drawing, and images into new pictures. I start by creating a Bitmap in memory, and then doing all of the drawing on a Graphics object obtained from that image. Then the image can be saved / reloaded both in memory or to disk. So something like this: Dim bm as new bitmap(pb.width, pb.height) &lt;&lt; pb is a picture box that the image is created / displayed in using gr as graphics = graphics.fromImage(bm) '''' do all drawing on the gr object end using 'Now the bm object contains the image that you want to store. It can be stored to disk, or just in memory. I convert the bm to an Image object, and then save to disk as a jpeg, but you could just keep a single bitmap in memory, or keep a list of them. 
Thanks!
You didn't put convert.toint32 or do validation Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click Dim intNumdec As Integer Dim strRomain As String If IsNumeric(Textbox1.text) = True then intNumdec = Convert.ToInt32(TextBox1.Text) Else Msgbox("Voulez-vous coucher avec moi ce soir? Input is not a number.") Exit Sub End If Select Case intNumDec Case 1: strRomain = "I" Case 2 : strRomain = "II" Case 3 : strRomain = "III" ..... Case Else Msgbox("Je ne parle pas franÃ§ais. Number is more than 10.") strRomain = "Out of Bounds" End Select TextBox2.Text = strRomain End Sub
This post is a part by part rundown of what my above code does: Dim intNumdec As Integer Dim strRomain As String First thing is, you cannot declare Romain as an Integer because it's going to be holding values such as I, II, III, IV and so on. Even though they're Roman numbers, VB doesn't recognise them as numbers: only as letters. As such, you must declare Romain as a String. If IsNumeric(Textbox1.text) = True then intNumdec = Convert.ToInt32(TextBox1.Text) Else Msgbox("Voulez-vous coucher avec moi ce soir? Input is not a number.") Exit Sub End If This is where we do validation: meaning we check if the input in Textbox1.text is actually a number. If the user enters anything that isn't a number, such as "blah blah blah", IsNumeric will return False, which causes the code to throw an error message and exit the sub. However, if it is a number, it stores the value of Textbox1.Text into our integer intNumDec. Select Case intNumDec Case 1: strRomain = "I" Case 2 : strRomain = "II" Case 3 : strRomain = "III" ..... Case Else Msgbox("Je ne parle pas franÃ§ais. Number is more than 10.") strRomain = "Out of Bounds" End Select Now we use a Select-Case to convert intNumDec to a Roman number. We put "Select Case intNumDec" up on top because intNumDec is the value we are interested in comparing. The computer sees that, and goes, "OK, I'm going to pull the value of intNumDec and look for the line whose Case matches the value." So if, for example, intNumDec = 3, then it would go to the line where it says Case 3 and execute the code: which basically just stores the appropriate Roman number for 3 into strRomain. If, however, intNumDec does not equal to anything from 1 to 10, it would go to "Case Else", where I've programmed it to throw another error message. TextBox2.Text = strRomain Finally, we display whatever we've stored in strRomain in Textbox2. If you have any questions, ask away. I rather you understand everything instead of blindly copying away my code. Actually, if you blindly copied my code, you would probably get into trouble with your teacher because of the rude messages I put in there, but eh. ;)
Thanks alote mate, and I see the code loud an clear ;) Anyway, I put in the code, and tried to understand my mistake, when it seems the project will not convert the values inserted in textbox1 anymore. Any hope? Here is the code: Dim intNumdec As Integer Dim strRomain As String If IsNumeric(TextBox1.Text) = True Then intNumdec = Convert.ToInt32(TextBox1.Text) End If intNumdec = TextBox1.Text strRomain = TextBox2.Text Select Case intNumDec Case 1 : strRomain = "I" Case 2 : strRomain = "II" Case 3 : strRomain = "III" Case 4 : strRomain = "IV" Case 5 : strRomain = "V" Case 6 : strRomain = "VI" Case 7 : strRomain = "VII" Case 8 : strRomain = "VIII" Case 9 : strRomain = "IX" Case 10 : strRomain = "X" Case Else MsgBox("Valeur non valable pour le programme", vbCritical, "Erreur") End Select End Sub
Great Scott, it finally works. It seems to be in order so far. Thank you very much man, you saved my work. Here is your reward: http://www.youtube.com/watch?v=UewwWaNfYIU
pictuebox. set it's autoredraw to true to ensure screen redrawing/clipping doesn't erase it use the savepicture picturebox1,"filename.bmp" function picturebox1.clear and usepicturebox1= loadimage("filename.bmp")
Why not use the same database you're currently using? Just add an Orders table with fields of OrderNum, ItemID, Quantity where the ItemID is a foreign key to your Items table. Then a simple query of Select Distinct OrderNum from Orders Would give you a list of OrderNum's that exist in the table. From there you can get the selected text from the list of Orders (ListBox maybe) that the query produced and use that in your next query to get the items involved in the Order. SELECT Items.Item, Orders.Quantity FROM Items INNER JOIN Orders ON Items.ItemID = Orders.ItemID WHERE OrderNum = @OrderNum Then just assign your selected text's value to the parameter (@OrderNum) This should give you a 
##Set cursor/focus to specific control on startup You need to add `Me.Show()` and *control*`.Focus` to the form load sub: Private Sub Form1_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load Me.Show() TextBox1.Focus() ##Erase one textbox when another is changed Place the code to erase the second textbox's text inside the `TextChanged` event handler of the first textbox: Private Sub TextBox1_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles rtbReport.TextChanged TextBox2.Clear()
I'm very new to visual basic, could you perhaps give me a fuller explination, or an example please?
Thanks alote mate, great help
Are you opening the correct file? That's the simplest explanation I can think of: that you're accidentally opening a module or something instead of the default .vbproj file. If this problem persists, the best advice I can give you is to uninstall, restart and reinstall.
IMO a [Dictionary(of String, String)](http://msdn.microsoft.com/en-us/library/xfhwa508.aspx) would be your best option- provides the most straightforward code. It would look like the following, although personally I would define the dictionary as a private variable outside the button click sub. Assuming TextBox1 is the input box and TextBox2 is the output Private Sub Button1_Click(sender As Object, e As EventArgs) Handles Button1.Click Dim arabicToRoman as New Dictionary(of String, String) From {{"1", "I"}, {"2", "II"}, {"3", "III"}, {"4", "IV"}, {"5", "V"}, {"6", "VI"}, {"7", "VII"}, {"8", "VIII"}, {"9", "IX"}, {"10", "X"}} If arabicToRoman.ContainsKey(TextBox1.Text) Then TextBox2.Text = arabicToRoman(TextBox1.Text) Else TextBox2.Text = "Invalid input. Try again." End If End Sub The If statement can be [shorted](http://msdn.microsoft.com/en-us/library/vstudio/bb513985.aspx) to: TextBox2.Text = If(arabicToRoman.ContainsKey(TextBox1.Text), arabicToRoman.(TextBox1.Text), "Invalid input. Try again.") You're not doing any actual math with the number from TextBox1.Text, so there's no need to bother with converting it to an integer. Along that line, the ContainsKey method provides free validation* which saves you the hassle of having to deal with extra if statements, TryParse methods, and useless intermediate variables. I'm currently redoing a codebase that averages out to an if statement every other line, so basically fuck them in the ear forever. *^(except the highly unlikely event that TextBox1.Text is null) 
A novel approach would be to have your user draw on a [WPF InkCanvas](http://msdn.microsoft.com/en-us/library/system.windows.controls.inkcanvas%28v=vs.110%29.aspx) and then save/load the collection of [individual strokes](http://msdn.microsoft.com/en-us/library/system.windows.controls.inkcanvas.strokes%28v=vs.110%29.aspx)
This would also happen to me often. Either you aren't opening the correct file, or its corrupted. A good idea would be to save your code in a word document just I case this happens.
a loop takes something that increments each time and compresses it: Cells(1,1).value Cells(2,1).value Cells(3,1).value Cells(4,1).value can then become: For i = 1 to 4 Cells(i,1).value next i This is called "looping through the rows" of a spreadsheet (or matrix, if you're a math-ey type person). Looping though the columns would look like: For j= 1 to 10 Cells(3,j).value next j This code looks at the 3rd row and returns the value of each cell for the first 10 columns. But what if you need to loop through each row of *every* column? (AKA- do something to *every* cell of a spreadsheet or matrix) Unless you're going to define the range and use a for... each loop (which is what I recommend for safer coding-- no boundary errors), you need to use nested for loops. Using the above example: For i = 1 to 4 For j = 1 to 10 Cells(i,j).value next j next i This starts looking at *row i*, which starts at 1. When it gets to row 1, it then looks at column 1 and returns the value in the cell at row 1, column 1. Then it loops to the next column and returns the value in the cell at row 1, column 2. It continues to the next column and the next until all 10 columns in row. When that's completed, it then has finished doing what it needed to do when i = 1, so it loops to i = 2 and repeats the same process, only this time returning the cell value for each of the 10 columns at row 2. **TL-DR** - So for yours, instead of Cells(i, j), it sounds like you're using .Offset(t, x) or something (it could be .Offset(x, t)... you'll need to figure that out). You've got it looping over x, but you're missing the looping over t. Also I haven't seen you define x. Do you have Option Explicit turned on?
There certainly is, using the [Enumerable.Any extension](http://msdn.microsoft.com/en-us/library/bb534972(\v=vs.110\).aspx) with a lambda function and assuming your list of strings is truly a [List (Of String)](http://msdn.microsoft.com/en-us/library/6sh2ey19(\v=vs.110\).aspx) (or anything that inherits IEnumerable), what you're looking for is: If myListOfStrings.Any(Function(o) o.Contains("substring")) Then Foo() Behind the scenes, the Any() function is actually: Public Shared Function Any(Of TSource)(ByVal source As IEnumerable(Of TSource), ByVal predicate As Func(Of TSource, Boolean)) As Boolean If (source Is Nothing) Then Throw Error.ArgumentNull("source") End If If (predicate Is Nothing) Then Throw Error.ArgumentNull("predicate") End If Dim local As TSource For Each local In source If predicate.Invoke(local) Then Return True End If Next Return False End Function The difference in efficiency is that the foreach you posted will test every item in the list, while the foreach in the Any() method will end once it finds an item that contains the substring. 
You could use LINQ to accomplish this: If (From s As String In lList Where sText.Contains(s) Select s).ToArray.Length &gt; 0 Then But as far as I know, whether you're dealing with a hand-written loop, a LINQ query, or a .ForEach function (such as in the List class), they all essentially do the same thing behind the scenes -- loop through a collection and perform an action. Performance is going to be virtually identical. I just ran a tests using 3 different methods, searching a collection of over 129,000 strings, with the following results: 00:00:00.0468036 - 00:00:00.0156012 - 00:00:00.0156012 00:00:00.0156012 - 00:00:00.0312024 - 00:00:00.0156012 00:00:00.0156012 - 00:00:00.0156012 - 00:00:00.0312024 As you can see, there was a different "loser" each time, and the time differences aren't too significant. When I expand the collection size up to 8.26 million, some clear differences start popping up: 00:00:00.9516732 - 00:00:00.5616432 - 00:00:00.5928456 00:00:01.0452804 - 00:00:00.5928456 - 00:00:00.6240480 00:00:00.9360720 - 00:00:00.6240480 - 00:00:00.6396492 The first one is the LINQ method -- it's clearly slower than the loop or the .ForEach. The tradeoff is performance for conciseness and readability. Would you rather deal with and maintain a codebase that is 1200 lines and executes in 10 seconds, or a codebase that's 500 lines and executes in 12 seconds? That's why there's so much written about the downfalls of premature optimization -- it's very easy to sacrifice readability and maintainability for insignificant performance gains. The simplest rule is, write code that's easy to read and understand first; if it's not efficient enough after that, then you refactor.
thanks for that information
thanks, pretty much what I thought. And I can exit my For Each loop if I get a match.
thanks.
Oh god... I just realized I hadn't checked the Solution Explorer (I was looking in the Solution window). Thanks anyway.
Thanks for the advice. Also, something tells me you should have brought your lazy ass to school today.
Your ElseIf and End If errors are occuring because the formatting is incorrect (the newline after Then is required if using multiple If/ElseIf's or an If/Else in the same block): If rand.Next = 1 Then pbHeads.Show() ElseIf rand.Next = 0 Then pbTails.Show() End If And rand is warning it is being used before it has been assigned a value because you should initialize it before you use it: Dim rand as Random = New Random 
try putting the code after the Then's on the next line more info http://msdn.microsoft.com/en-us/library/vstudio/752y8abs.aspx if you have anything after the Then, you must have everything after the Then.
which line breaks?
I fixed that problem, see answer below
It got rid of the errors! put it still doesn't work :(. It is supposed to toss a coin, I have a picture of tails and heads and the goal was that if the random number was a zero it would be a picture that I set to visible = False would show up and if it was 1 then Heads would show. Any other advice, sorry I replied late. 
Hi, candyforlunch here (login is on another computer, no idea what the password is). Having to put a case for each possible number is way, way too much work. What if next part of the assignment is to make it work up to 100? 500? Fuck typing a bunch of case statements. Let's approach this a different way- we know that in roman numerals the digits 1-9 are always the same, and the 10s digits are always the same (X for 10, XX for 20, etc). Knowing that these are constant allows us to create [something](http://msdn.microsoft.com/en-us/library/xfhwa508.aspx) that would output "VI" when given the input 6, "III" when given 3, and so forth. Another one of those would have to output "X" when given 1, "XX" when given 2, etc. Figure out a way to get the 1s and 10s digits and you're golden. 
Rand.Next just generates a completely random number, with no bounds. You're looking for Rand.Next(0, 3) : this will generate a random integer between 0 and 3. That is to say, either the number 1 or 2.
you changed the type of variable of intEntrÃ©eNormale from string to integer, don't do that
Ya, you need to convert your textboxes from string to double because you declared your other variables as doubles: has = Convert.ToDouble(hastighed.Text) or has = CDbl(hastighed.Text) It is a good practice to check if it's numeric first with IsNumeric(hastighed.Text) That will protect from cast errors if you put something that isn't a number in the textbox. also, the error you got: The change from the string "" to the type 'Double' is not valid. Means there was nothing typed in the textbox, which will give you an error even if you convert first. Make sure you fill youir textboxes with numbers before hitting the calculate button, or else check for it like I said with IsNueric and pop up a messagebox saying that the value needs to be a number. 
Its works now, instead of putting hastighed.text = "" I put hastighed.text = "0" And i just put 0 for the variable i want to be calculated.
Thanks very much, I'll look into this!
You call resources by name. When you added the resource you gave it a name, so that's what you need to call it by: textbox.text =my.resources.resourceName 
Thanks I'll give it a try when I get home
Thanks for the suggestion but that didn't work, it still outputs the full Path and I had to modify your "("C:\" &amp; "test\")" to "(ComboBox1.SelectedItem.ToString &amp; "test\")" due to the combobox selecting the drive. If possible I just really want to know how to change the item strings so that instead of getting for example "C:\test\1\" or "E:\test\1\ I want "2" or "3" by removing the "(ComboBox1.SelectedItem.ToString &amp; "test\")" part from the items and then being able to do math functions on them. Thanks for the help
What happens when you click on this combo box. do you need the items location at that point? I would be looking to see if something else is setting the combobox. The Split method that i used gets rid of the \ altogether, so it would not show up in the combobox. if you start a new project, put a combobox on there and paste my code into the load event, then you would see the output is different [It looks like this](http://imgur.com/KEZtQ2C) so if you're getting something else, then the combobox must be getting initialized elsewhere.
That worked! The format doesn't transfer even if its a rtf resource in a rtf box
Ok thank you
GetDirectories returns an Array of DirectoryInfo. Why don't you just add the NAME property to the ComboBox instead of the Fullname? No need for all this string-splitting nonsense. 
A simple method would be a dataset object to hold the information and then set the datasource of the datagridview to the datasets table. Dim con as new SQLConnection ("Your connection string to your database") Dim ds as new dataset Dim sStmt as String = "SELECT * FROM yourtable WHERE somefield = @value" Dim DA As New SqlDataAdapter(sStmt, con) DA.SelectCommand.Parameters.AddWithValue("@value", yoursearchstring) DA.Fill(ds) DataGridView1.DataSource = ds.Tables(0) This is off the top of my head, as I haven't written any code for a while it may have a few errors. Either way, there should be enough information here to give you leads to search for specific areas. EDIT: Forgot that you will need to add: Imports System.Data.SqlClient at the top of your class 
Commenting to save
This is what I use at work for as-you-type searching. You'll need a textbox and a textchanged handler that calls the subroutine. "MyDataSet" is the original dataset you used to populate the datagridview, and "sSearchString" is the text in the textbox. Public Sub DG_Search(ByRef myDataGrid As DataGridView, ByVal myDataset As DataSet, ByVal sSearchString As String) Dim bKeep As Boolean Dim dsSearch As DataSet = myDataset.Copy() 'Parse the dataset and remove any records that don't match the search term For i As Integer = 0 To dsSearch.Tables(0).Rows.Count - 1 bKeep = False For x As Integer = 0 To dsSearch.Tables(0).Columns.Count - 1 'Code to process record If dsSearch.Tables(0).Rows(i).Item(x).ToString.Trim.ToUpper.Contains(sSearchString.Trim.ToUpper) Then bKeep = True End If Next If bKeep = False Then dsSearch.Tables(0).Rows(i).Delete() End If Next myDataGrid.DataSource = dsSearch.Tables(0) myDataGrid.Visible = True End Sub Here's an example of how to call it: Private Sub ToolStrip1_Searchbox_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) _ Handles DG1TextBox1.TextChanged Try DG_Search(Datagridview1, dsQuery, TextBox1.Text) Catch ex As Exception End Try End Sub
Thank you so much for your help and attention! I will mull through the code till I perfectly understand it then apply it and tell you how it turns out :) thanks again for the help.
Thank you :) I will look through it and apply it and let you know. 
Shoot, I just realized that when I tried to make it more readable, I screwed up the handler for the textbox. The last bit should be "Handles Textbox1.TextChanged" and not "Handles DG1TextBox1.TextChanged". Sorry about that!
I'm in the exact same situation as you, commenting to come back and read through this.
Great thanks.
Is the last little bit for calling the information on another page? Also this would eliminate the need for the search button since it appears to be looping the information typed into the query?
I typically stick a toolstrip right above the datagridview control, and put the textbox in the toolstrip. You don't need a button since it searches anytime you type in the textbox. You can call the search subroutine from any form and it will work. 
Why is dsQuery in the handler if it isn't definged in the toolstrip. Should it be dsSearch? what I ended up doing is defining it again in the handler and it worked... 
dsQuery was the dataset I used to populate the datagridview the first time. dsSearch is the copy made when searching. The search routine doesn't change the original dataset (dsQuery), just the copy (dsSearch), so it doesn't have to re-query the SQL server every time you change the textbox. It just keeps copying dsQuery into dsSearch each time. In the handler, you'd just want to change dsQuery to whatever your original dataset was when you did the SQL query.
dr is an object (SqlDataReader) that needs to be invoked in order for you to read the data in your SQL. You're not setting anything to dr, you're using dr to set information into Session(). Session("userName") = dr(1).ToString() This line means, convert whatever is stored inside dr(1) to a string, then store it inside Session("userName").
There is as ServiceController class that gives you access to services. Depending upon what OS you are on, you may need to enable UAC support for your application, or write a separate app that requests permission on launch. http://msdn.microsoft.com/en-us/library/system.serviceprocess.servicecontroller%28v=vs.110%29.aspx 
It's possible to do this in VB, but it requires going into the "thar be dragons" land of unmanaged code. You'd have to convert [this SO answer from C#:](http://stackoverflow.com/a/6485074)
It makes no difference.. either way you're going to have to work with code outside of .net
Not entirely- you can move the mouse very easily with VB/C#, but simulating the mouse click/drag once again requires using unmanaged code. It's going to be confusing and suck no matter what. I think your best option is to test out the example code from the SO answer on your own machine (the X, Y, Width, and Height variables are the only things you should be concerned with) until you get an idea on what they do, then adapt it to your own program.
If you are willing I have two other concerns. I have a textbook that I have been trying to use to make the program possible however the code they provide me to allow the user to edit the information does not work, it doesn't have any build errors but it simply does not update the users information in the DB when they hit submit. Second issue is I can allow the user to add donor profiles but those profiles will not be there next time I run the program. Any ideas? Third problem is using the same links above when I click the name of the person I use the primary key to transfer to the next link and then populate that information on the form. How do I use that key to populate the event data grid on the next page with the KEY as the search string? If you are willing to help I thank you very much. You have been very useful so far and regardless I am very thankful you helped me with the search issues :). I am now able to search thanks to you!
They have to be able to type the grade in themselves.
I have some of it started, he suggested putting the lstbox into a text file and then be able to read from that.
THere is an property for copying your database to the output directory which copies over a fresh copy of your database, set it to no copy
How would I go about doing that? Is it simply in the properties somewhere?
What kind of variable is intpercentage5? As a rule don't prefix your variable names with int, str, etc. It's a deprecated practice that decreases readability and can lead to confusion.
We were taught to do that, and what do you mean what kind of variable? its going to be a number.
Do you have samples of the code you're using for any of this?
This has what to do with vb?
As far as saving data from text boxes, I can share some more code I use. First, everyone will tell you to make sure you're guarding against SQL injection, so this code will help you with that by setting you up with an easy way to use parameters. I put all this in a module that can be shared between programs. Imports System.Data.SqlClient Module mPubDatabase ' Create a list to hold the parameter/value pairs Public Class Params Public sName As String Public sValue As String Public Sub New(myName As String, myValue As String) Me.sName = myName Me.sValue = myValue End Sub End Class Public ParamList As New List(Of Params) Public ParamQuery As New StringBuilder ' Generic string variable to hold query strings Function DB_Update(ByVal cnString As String) As Integer ' For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command. DB_Update = -1 Try Using Conn As SqlConnection = New SqlConnection(cnString) Conn.Open() Using cmd As SqlCommand = New SqlCommand(ParamQuery.ToString, Conn) For Each Param As Params In ParamList cmd.Parameters.Add(New SqlParameter(Param.sName, Param.sValue)) Next DB_Update = cmd.ExecuteNonQuery() End Using Conn.Close() End Using Catch ex As Exception MessageBox.Show("Cannot open connection!" &amp; vbCrLf &amp; ex.Message &amp; vbCrLf &amp; ParamQuery.ToString, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error, MessageBoxDefaultButton.Button1) End Try ' Reset the array for the next use ParamList.Clear() ParamQuery.Clear() End Function End Module To use it, you just pass the textbox values to the array and the function turns them into parameters that allow the SQL server to clean them up for you and reduce the risk of SQL injection attacks. To use the code above, you do something like ' Store the values into the parameter array ParamList.Add(New Params("@firstname", Textbox1.text)) ParamList.Add(New Params("@lastname", Textbox2.text)) ParamList.Add(New Params("@index", Textbox3.text)) ' Create the query ParamQuery.Append("update yourtable set fname = @firstname, lname = @lastname where uniquevalue = @index") ' Update the table DB_Update(myConnectionString) The db_update function does all the heavy lifting for the SQL stuff, and in your normal code you can just plug in the parameters and go. You can have as many or as few parameters as you need in the ParamList array. The DB_Update function can be used to insert and delete records as well, you just have to change the query in the ParamQuery.append line. If you need to know the key for the new record on an insert, you can use this function: Public Function DB_Insert(ByVal cnString As String) As Integer ' Requires ' ; Select Scope_Identity() ' added to the end to return an index DB_Insert = -1 ParamQuery.Append(" ; Select Scope_Identity()") Try Using Conn As SqlConnection = New SqlConnection(cnString) Conn.Open() Using cmd As SqlCommand = New SqlCommand(ParamQuery.ToString, Conn) For Each Param As Params In ParamList cmd.Parameters.Add(New SqlParameter(Param.sName, Param.sValue)) Next DB_Insert = Convert.ToInt32(cmd.ExecuteScalar()) End Using Conn.Close() End Using Catch ex As Exception MessageBox.Show("Cannot open connection!" &amp; vbCrLf &amp; ex.Message &amp; vbCrLf &amp; ParamQuery.ToString, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error, MessageBoxDefaultButton.Button1) End Try ' Reset the array for the next use ParamList.Clear() ParamQuery.Clear() End Function For that one you could use ' Store the values into the parameter array ParamList.Add(New Params("@firstname", Textbox1.text)) ParamList.Add(New Params("@lastname", Textbox2.text)) ' Create the query ParamQuery.Append("insert into yourtable (fname, lname) values (@firstname, @lastname)) ' Update the table Dim iNewIndex as Integer = DB_Insert(myConnectionString) That will add a new record, and iNewIndex contains the value of the key for the record you just added. I actually have a ton of different database and dataset functions that all use the same code base, it makes it a lot easier to code that way. I hate dealing with SQL in code, so I write functions once that do generic tasks, then use those instead.
what you're being taught is wrong. the real name for it is "Apps Hungarian" and its completely useless now that our development environments are smart enough to show you the variable type by hovering a cursor over it. Hell, compilers are smart enough now to figure out data types without you having to explicitly declare them. that and it makes code harder to understand are reasons to never ever use it. edit; was phoneposting in a hurry and came off angrier than I meant. apologies. In the .net world* there's something that completely ruins apps hungarian notation: [Anonymous Types](http://msdn.microsoft.com/en-us/library/vstudio/bb384767.aspx). They allow you to create objects that don't have a defined type (i.e. aren't int, string, etc), which makes it difficult to prefix the variable name. Here's a quick example: Module Program Sub Main() Dim thingsILike = New With {.Smell = "my own farts", .Number = Math.Pi, .OneDirection = True } Console.WriteLine("My favorite smell is " &amp; thingsILike.Smell) Console.WriteLine("My favorite number is " &amp; thingsILike.Number) Console.WriteLine("Do I like One Direction? " &amp; thingsILike.OneDirection) End Sub End Module Something new has been created that is a... well... it has some properties but it doesn't have a name. Can't prefix it with any sort of variable type. Granted you probably won't come across this immediately, but it's another reason to ditch apps hungarian notation *^(these came about in .net 3. .net 4 introduced dynamic types which also ruin apps hungarian and are only in c#)
I've written it in vb? It just happens to be vb interacting with html.
For adding the new information I was simply using: Private Sub BindingNavigatorAddNewItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles BindingNavigatorAddNewItem.Click Me.Validate() Me.DonorTableBindingSource.EndEdit() Me.TableAdapterManager.UpdateAll(Me.DonorDataSet) Me.DonorTableTableAdapter.Update(Me.DonorDataSet.DonorTable) End Sub However it wasn't doing what I needed. I am trying to read as many tutorials as possible. Though there has been a lot of controversy around the classes expectations that actually left us with meeting with the dean I really am striving to learn how to do this ang get the final results to a great cause. Your code has helped me learn so much. A lot of the commands you use I spend hours researching. It really has expanded my knowledge base for vb and for that a line I owe you so much more than karma. 
I mentioned I had a bunch of these functions, here is the whole module I use for database functions, minus most of the connection string variables at the beginning and a couple of image functions that aren't really generic. I can send you the dataset and datagrid functions as well if you want them. If nothing else they'll give you samples of someone else's code to play around with. Imports System.Data.SqlClient Imports System.Text Module mPubDatabase ' Click-Once vb.net databases Public cnString_EmpMgt As String = _ "Data Source=MA-SQL1;User ID=xxxxxxxx;Password=xxxxxxxx;Initial Catalog=EmpMgt;" Public cnString_Inventory As String = _ "Data Source=MA-SQL1;User ID=xxxxxxxx;Password=xxxxxxxx;Initial Catalog=Inventory;" ' I removed about 20 more of these rather than x out all the user ID's and passwords Public DB_Query_HasRows As Boolean = False ' Create a list to hold the parameter/value pairs Public Class Params Public sName As String Public sValue As String Public Sub New(myName As String, myValue As String) Me.sName = myName Me.sValue = myValue End Sub End Class Public ParamList As New List(Of Params) Public ParamQuery As New StringBuilder ' Generic string variable to hold query strings Function DB_CurrentTime(cnString As String) As DateTime ' Returns the current time from the specified SQL server Using Conn As SqlConnection = New SqlConnection(cnString) Conn.Open() Using cmd As SqlCommand = New SqlCommand("select getdate()", Conn) DB_CurrentTime = Convert.ToDateTime(cmd.ExecuteScalar()) End Using Conn.Close() End Using End Function Sub DB_SetTime(cnString As String) ' Adjusts system clock to match SQL server Dim DT As DateTime Using Conn As SqlConnection = New SqlConnection(cnString) Conn.Open() Using cmd As SqlCommand = New SqlCommand("select getdate()", Conn) DT = Convert.ToDateTime(cmd.ExecuteScalar()) End Using Conn.Close() End Using DateAndTime.TimeString = DT.TimeOfDay.ToString DateAndTime.DateString = DT.ToShortDateString End Sub Function DB_HasRows(ByVal cnString As String) As Boolean ' Returns true if the query specified in ParamQuery returns any rows Try Using Conn As SqlConnection = New SqlConnection(cnString) Conn.Open() Using cmd As SqlCommand = New SqlCommand(ParamQuery.ToString, Conn) For Each Param As Params In ParamList cmd.Parameters.Add(New SqlParameter(Param.sName, Param.sValue)) Next Using reader As SqlDataReader = cmd.ExecuteReader DB_HasRows = reader.HasRows End Using End Using Conn.Close() End Using Catch ex As Exception MessageBox.Show("SQL transaction error!" &amp; vbCrLf &amp; ex.Message &amp; vbCrLf &amp; ParamQuery.ToString, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error, MessageBoxDefaultButton.Button1) DB_HasRows = False End Try ' Reset the array for the next use ParamList.Clear() ParamQuery.Clear() End Function Public Function DB_Insert(ByVal cnString As String) As Integer ' Returns the index for the inserted row ' Requires ' ; Select Scope_Identity() ' added to the end to return an index DB_Insert = -1 ParamQuery.Append(" ; Select Scope_Identity()") Try Using Conn As SqlConnection = New SqlConnection(cnString) Conn.Open() Using cmd As SqlCommand = New SqlCommand(ParamQuery.ToString, Conn) For Each Param As Params In ParamList cmd.Parameters.Add(New SqlParameter(Param.sName, Param.sValue)) Next DB_Insert = Convert.ToInt32(cmd.ExecuteScalar()) End Using Conn.Close() End Using Catch ex As Exception MessageBox.Show("Cannot open connection!" &amp; vbCrLf &amp; ex.Message &amp; vbCrLf &amp; ParamQuery.ToString, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error, MessageBoxDefaultButton.Button1) End Try ' Reset the array for the next use ParamList.Clear() ParamQuery.Clear() End Function Function DB_Query(ByVal cnString As String, Optional EmptyValue As String = "") As String ' Executes the query, and returns the first column of the first row in the result set returned by the query. ' Additional columns or rows are ignored. Try Using Conn As SqlConnection = New SqlConnection(cnString) Conn.Open() Using cmd As SqlCommand = New SqlCommand(ParamQuery.ToString, Conn) For Each Param As Params In ParamList cmd.Parameters.Add(New SqlParameter(Param.sName, Param.sValue)) Next ' Get the result as an object so we can handle an empty result set Dim RetVal As Object = cmd.ExecuteScalar() If RetVal Is Nothing Then DB_Query = EmptyValue Else DB_Query = RetVal.ToString End If End Using Conn.Close() End Using Catch ex As Exception MessageBox.Show("SQL transaction error!" &amp; vbCrLf &amp; ex.Message &amp; vbCrLf &amp; ParamQuery.ToString, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error, MessageBoxDefaultButton.Button1) DB_Query = EmptyValue End Try ' Reset the array for the next use ParamList.Clear() ParamQuery.Clear() End Function Function DB_Update(ByVal cnString As String) As Integer ' For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command. DB_Update = -1 Try Using Conn As SqlConnection = New SqlConnection(cnString) Conn.Open() Using cmd As SqlCommand = New SqlCommand(ParamQuery.ToString, Conn) For Each Param As Params In ParamList cmd.Parameters.Add(New SqlParameter(Param.sName, Param.sValue)) Next DB_Update = cmd.ExecuteNonQuery() End Using Conn.Close() End Using Catch ex As Exception MessageBox.Show("Cannot open connection!" &amp; vbCrLf &amp; ex.Message &amp; vbCrLf &amp; ParamQuery.ToString, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error, MessageBoxDefaultButton.Button1) End Try ' Reset the array for the next use ParamList.Clear() ParamQuery.Clear() End Function End Module
Ah, figured that out =), do you perhaps know how I would take information from my list box and then turn it into an array? 
yeah sure, why not. PM me details as well.
It shouldn't be. Are you using VBA or just plain old Visual Basic?
I'm not sure, whatever came with Microsoft Office 2003. Is VBA downloadable? I have a MO 2007 install disk if that helps. 
So if I were to download Visual Basic would the code I've already written work?
not with modification. the vb you can just download is vb.net express, and VBA is more similar to vbscript and VB6 than vb.net. if you have VB6 it would be closer, but you still may have to redesign all the forms.
In notepad I wrote a program that converts integers to binary. I want to be able to change the color of the input and msg box of the program.
Install [Visual Studio 2012 Express For Windows Desktop](http://www.microsoft.com/en-us/download/details.aspx?id=34673) and you'll be good to go!
A multi-line textbox already contains an Array of lines For each l as string in YourTextBox.lines 'add l to your listbox Next For a single line textbox, you can split to an array with a delimiter (ie, space) ListBox1.Items.AddRange(TextBox1.Text.Split(" "c))
I need to take those things in the list box, and then be able to save them to a file, and then be able to load them back in the correct order
Dim arrayNumber As Integer = 0 Dim arrayName(arrayNumber) As String arrayName(arrayNumber) = txtBox.TEXT variable(0) = txtbox.text arrayNumber = arrayNumber + 1 
In that case, I would use a for each to iterate through the listbox and use a streamwriter to write to the file. Then a simple stream reader would put them back in the order they were saved using the readline method.
Is that like the objwriter? 
It's a public webpage but you are required to log in to get to the download page/button. It's free but would be a hassle for you to make an account. Could I give you the full source of the page, would that help? If not I can make you an account and tell you the password/account to log in and get to the page. From my understanding I don't have a URI nor can get one. I think I might have to request the URI from the server using some of my credentials but I have no idea how to do that.
So... What exactly did you need help with?
PM me as well, and if I am able to help I will.
Oh that's easy. Use LINQ Assuming your dictionary object is called MyDict Dim myKeys = MyDict.Keys.ToList()
Thanks Gino, I thought I needed a for each loop? is there a way of using a loop in this situation? To take the keys from the dictionary and add them to the list? Thanks anyway!
Yes, while I think /u/ginolard gave a better solution, you can use the keyvaluepair collection to populate them to a list using a For Each Loop For each itm as KeyValuePair(of &lt;T&gt;, &lt;T&gt;) In YourDictionary YourList.Add(itm.Key) Next 
Thanks Charlie, There are so many different ways to code something! It's going to take me awhile to figure out which way is best. 
You could try something like Dim XMLdoc As New XmlDocument XMLdoc.Load("Path and file to your xml file") Dim lst as XmlNodeList = XMLdoc.DocumentElement.ChildNodes Dim node as XmlNode = lst.item(0) 'First item in the document YourTextBox.Text = node.InnerText This requires Imports System.Xml Of course this is based solely on the xml block you provided and would have to be adjusted as needed
Sounds like a homework assignment to me. How about some code or specific errors you're encountering instead of asking us to do the work for you?
take a look at the Backgroundworker class. It does exactly what you want. There are countless examples of exactly this sort of thing out there if you search for them this one's in C# but you can run it through a converter http://www.codeproject.com/Tips/83317/BackgroundWorker-and-ProgressBar-demo
I have it saving properly, so I do know how it work, but we were never taught how to read it back into the text boxes. I've read the chapter a few times now and have found nothing 
Public Class Form1 Dim w As IO.StreamWriter Dim r As IO.StreamReader Dim strfirstname(4) As String Dim strlastname(4) As String Dim intpercentage(4) As String Dim strgrade(4) As String Private Sub btnsubmit1_Click(sender As Object, e As EventArgs) Handles btnsubmit1.Click strfirstname(0) = txtfirstname1.Text strlastname(0) = txtlastname1.Text intpercentage(0) = txtfinalpercentage1.Text If IsNumeric(intpercentage(0)) Then btnsubmit1.Enabled = False Else MsgBox("You entered a bad value") btnsubmit1.Enabled = True End If Try If intpercentage(0) &gt;= 90 Then strgrade(0) = "A" ElseIf intpercentage(0) &gt;= 80 Then strgrade(0) = "B" ElseIf intpercentage(0) &gt;= 70 Then strgrade(0) = "C" ElseIf intpercentage(0) &gt;= 60 Then strgrade(0) = "D" ElseIf intpercentage(0) &lt; 60 Then strgrade(0) = "F" End If Catch exception As SystemException MsgBox("ITS BROKE") End Try If IsNumeric(intpercentage(0)) Then lstbox.Items.Add(strlastname(0) &amp; "," &amp; strfirstname(0) &amp; "," &amp; intpercentage(0) &amp; "," &amp; strgrade(0)) btnsubmit1.Enabled = False Else MsgBox("You entered a bad value") btnsubmit1.Enabled = True End If End Sub Private Sub btnreset_Click(sender As Object, e As EventArgs) Handles btnreset.Click txtfinalpercentage1.Text = "" txtfinalpercentage2.Text = "" txtfinalpercentage3.Text = "" txtfinalpercentage4.Text = "" txtfinalpercentage5.Text = "" txtfirstname1.Text = "" txtfirstname2.Text = "" txtfirstname3.Text = "" txtfirstname4.Text = "" txtfirstname5.Text = "" txtlastname1.Text = "" txtlastname2.Text = "" txtlastname3.Text = "" txtlastname4.Text = "" txtlastname5.Text = "" lstbox.Items.Clear() btnsubmit1.Enabled = True btnsubmit2.Enabled = True btnsubmit3.Enabled = True btnsubmit4.Enabled = True btnsubmit5.Enabled = True End Sub Private Sub btnexit_Click(sender As Object, e As EventArgs) Handles btnexit.Click Close() End Sub Private Sub btnsubmit2_Click(sender As Object, e As EventArgs) Handles btnsubmit2.Click strfirstname(1) = txtfirstname2.Text strlastname(1) = txtlastname2.Text intpercentage(1) = txtfinalpercentage2.Text If IsNumeric(intpercentage(1)) Then btnsubmit2.Enabled = False Else MsgBox("You entered a bad value") btnsubmit2.Enabled = True End If Try If intpercentage(1) &gt;= 90 Then strgrade(1) = "A" ElseIf intpercentage(1) &gt;= 80 Then strgrade(1) = "B" ElseIf intpercentage(1) &gt;= 70 Then strgrade(1) = "C" ElseIf intpercentage(1) &gt;= 60 Then strgrade(1) = "D" ElseIf intpercentage(1) &lt; 60 Then strgrade(1) = "F" End If Catch exception As SystemException MsgBox("ITS BROKE") End Try If IsNumeric(intpercentage(1)) Then lstbox.Items.Add(strlastname(1) &amp; "," &amp; strfirstname(1) &amp; "," &amp; intpercentage(1) &amp; "," &amp; strgrade(1)) btnsubmit2.Enabled = False Else MsgBox("You entered a bad value") btnsubmit2.Enabled = True End If End Sub Private Sub btnsubmit3_Click(sender As Object, e As EventArgs) Handles btnsubmit3.Click strfirstname(2) = txtfirstname3.Text strlastname(2) = txtlastname3.Text intpercentage(2) = txtfinalpercentage3.Text If IsNumeric(intpercentage(2)) Then btnsubmit3.Enabled = False Else MsgBox("You entered a bad value") btnsubmit3.Enabled = True End If Try If intpercentage(2) &gt;= 90 Then strgrade(2) = "A" ElseIf intpercentage(2) &gt;= 80 Then strgrade(2) = "B" ElseIf intpercentage(2) &gt;= 70 Then strgrade(2) = "C" ElseIf intpercentage(2) &gt;= 60 Then strgrade(2) = "D" ElseIf intpercentage(2) &lt; 60 Then strgrade(2) = "F" End If Catch exception As SystemException MsgBox("ITS BROKE") End Try If IsNumeric(intpercentage(2)) Then lstbox.Items.Add(strlastname(2) &amp; "," &amp; strfirstname(2) &amp; "," &amp; intpercentage(2) &amp; "," &amp; strgrade(2)) btnsubmit3.Enabled = False Else MsgBox("You entered a bad value") btnsubmit3.Enabled = True End If End Sub Private Sub btnsubmit4_Click(sender As Object, e As EventArgs) Handles btnsubmit4.Click strfirstname(3) = txtfirstname4.Text strlastname(3) = txtlastname4.Text intpercentage(3) = txtfinalpercentage4.Text If IsNumeric(intpercentage(3)) Then btnsubmit4.Enabled = False Else MsgBox("You entered a bad value") btnsubmit5.Enabled = True End If Try If intpercentage(3) &gt;= 90 Then strgrade(3) = "A" ElseIf intpercentage(3) &gt;= 80 Then strgrade(3) = "B" ElseIf intpercentage(3) &gt;= 70 Then strgrade(3) = "C" ElseIf intpercentage(3) &gt;= 60 Then strgrade(3) = "D" ElseIf intpercentage(3) &lt; 60 Then strgrade(3) = "F" End If Catch exception As SystemException MsgBox("ITS BROKE") End Try If IsNumeric(intpercentage(3)) Then lstbox.Items.Add(strlastname(3) &amp; "," &amp; strfirstname(3) &amp; "," &amp; intpercentage(3) &amp; "," &amp; strgrade(3)) btnsubmit4.Enabled = False Else MsgBox("You entered a bad value") btnsubmit4.Enabled = True End If End Sub Private Sub btnsubmit5_Click(sender As Object, e As EventArgs) Handles btnsubmit5.Click strfirstname(4) = txtfirstname5.Text strlastname(4) = txtlastname5.Text intpercentage(4) = txtfinalpercentage5.Text If IsNumeric(intpercentage(0)) Then btnsubmit5.Enabled = False Else MsgBox("You entered a bad value") btnsubmit5.Enabled = True End If Try If intpercentage(4) &gt;= 90 Then strgrade(4) = "A" ElseIf intpercentage(4) &gt;= 80 Then strgrade(4) = "B" ElseIf intpercentage(4) &gt;= 70 Then strgrade(4) = "C" ElseIf intpercentage(4) &gt;= 60 Then strgrade(4) = "D" ElseIf intpercentage(4) &lt; 60 Then strgrade(4) = "F" End If Catch exception As SystemException MsgBox("ITS BROKE") End Try If IsNumeric(intpercentage(4)) Then lstbox.Items.Add(strlastname(4) &amp; "," &amp; strfirstname(4) &amp; "," &amp; intpercentage(4) &amp; "," &amp; strgrade(4)) btnsubmit5.Enabled = False Else MsgBox("You entered a bad value") btnsubmit5.Enabled = True End If End Sub Private Sub btnsave_Click(sender As Object, e As EventArgs) Handles btnsave.Click Dim objwriter As New IO.StreamWriter("C:\Users\goober\Desktop\test.txt") Dim intcount As Integer For intcount = 0 To (strfirstname.Length - 1) If IO.File.Exists("C:\Users\goober\Desktop\test.txt") Then objwriter.WriteLine(strfirstname(intcount)) objwriter.WriteLine(strlastname(intcount)) objwriter.WriteLine(intpercentage(intcount)) Else MsgBox("File is not available. Restart the program when its ready for use!") Close() End If Next objwriter.Close() End Sub Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load End Sub Private Sub btnsummarize_Click(sender As Object, e As EventArgs) Handles btnsummarize.Click Dim intthresthold As Integer If IsNumeric(intthresthold) Then lstbox.Items.Add("Pass -" &amp; "Fail - ") Else MsgBox("Enter a number") End If End Sub Private Sub btnload_Click(sender As Object, e As EventArgs) Handles btnload.Click Dim objReader As IO.StreamReader Dim strLocationAndNameOfFile As String = "C:\Users\goober\Desktop\test.txt" Dim intFill As Integer Dim intCount As Integer = 0 Dim strFileError As String = "The file is not available. Restart when the file is available." r = New IO.StreamReader("C:\Users\goober\Desktop\test.txt") While (r.Peek() &gt; -1) lstbox.Items.Add(r.ReadLine) End While If IO.File.Exists(strLocationAndNameOfFile) Then objReader = IO.File.OpenText(strLocationAndNameOfFile) Do While objReader.Peek &lt;&gt; -1 strfirstname(intCount) = objReader.ReadLine() strlastname(intCount) = objReader.ReadLine() intpercentage(intCount) = Convert.ToInt32(objReader.ReadLine()) intCount += 1 Loop objReader.Close() End If strfirstname(0) = txtfirstname1.Text strfirstname(1) = txtfirstname2.Text strfirstname(2) = txtfirstname3.Text strfirstname(3) = txtfirstname4.Text strfirstname(4) = txtfirstname5.Text End Sub End Class
if you want to simulate the rolling of the wheel in a slot machine, this won't be easy. I'm not even sure how I'd do it. if you just want to flash random images, that not too hard. I'd probably use 2 timers, one to change what image in all 3 boxes (and set some variables so you know what image is in each), and the 2nd to increase the interval value so that the image flashing appears to "slow down" until you reach some high threshold where you stop both timers and see what images are displayed and calculate the winnings. 
Thanks!
How would I go about making the timer change the images? I have a button to stop the pictures after I start the 'spinning'. And how would I make the images equal an integer to I could calculate the winnings?
how do you think? I'm not doing it for you since it's for an assignment. make a guess, I'll confirm or give another hint.
I don't have any clue as to how I would apply multiple images to one timer, that's my issue. I have scoured my book from cover to cover looking for a way but I have nothing. 
A Dictionary &lt; int, image&gt; or whatever equivalent image class is the best option to relate an image to random number 
http://www.freevbcode.com/ShowCode.asp?ID=158
Where you are adding those totals you should create and use another string.format like you did with the main group. Currently, you're just adding them to the list without any format. Have you thought about using a ListView with details view instead of formatting a listbox? This will allow you to add columns for each of your string-formatted columns. Then when you add the final totals, you would just put them in the far column.
the max side of random.Next is exclusive. Therefore you will never receive the number 51 in the shuffle [MSDN:Random.Next](http://msdn.microsoft.com/en-us/library/2dx6wyd4%28v=vs.110%29.aspx) 
Thank you so much! I am going to try this I don't believe my books go over image lists at all!
I would still need to split the transactions by invoice numbers.
Create a class (let's call it `Details`) which contains [properties](http://msdn.microsoft.com/en-us/library/vstudio/dd293589.aspx) for invoice date, description, etc. Then create an `Invoice` class which contains a `List(Of Details)`, a property that has the total of all of the net prices of items in the list, and a property for the invoice number. Finally, make a `List(Of Invoice)`. This will be the data structure for each customer. Use the power of [LINQ](http://msdn.microsoft.com/en-us/library/bb397926.aspx) to sort, group, and find sums as necessary. edit: if you need to save/load the data, take a look at the various serialization methods provided by the framework.
First thing first your [function](http://msdn.microsoft.com/en-us/library/sect4ck6.aspx) needs to look something like this: [[public](http://msdn.microsoft.com/en-us/library/9dc6we3z.aspx)|[private](http://msdn.microsoft.com/en-us/library/wx059ey1.aspx)] function functionName([[byref](http://msdn.microsoft.com/en-us/library/c84t73c2.aspx)|[byval](http://msdn.microsoft.com/en-us/library/h2b185t2.aspx)] paramName as [string|integer], [[byref](http://msdn.microsoft.com/en-us/library/c84t73c2.aspx)|[byval](http://msdn.microsoft.com/en-us/library/h2b185t2.aspx)] paraName as [string|integer]) as [string|integer] For more info on arrays please consult [this](http://msdn.microsoft.com/en-us/library/sect4ck6.aspx) .
This is a rough run, and the spreadsheet(i) is a placeholder for finding the cell value, as I have no clue how you would do that. Module Module1 Sub Main() End Sub Public Function ExcelFunct(ByVal start_cell As Integer, ByVal end_cell As Integer, ByVal mean As Integer, ByVal num_obs As Integer) Dim subtotal As Integer subtotal = 0 For i = start_cell To end_cell subtotal = subtotal + (spreadsheet(i) - mean) Next Return (subtotal / num_obs) End Function End Module
PM me if this is still happening.
Here is some quick code I whipped up that randomly places labels on the form. Add a Button to a Form and call this Sub. I made the size of the labels smaller so there was less chance of labels colliding and covering each other. Tailor it to suit your needs. You'll probably want to explicitly avoid having labels covering each other, and if you have other controls on the Form, you'll want to avoid placing labels where those controls will be affected. Also, as a side note: I would avoid naming Labels things like "Listbox1" which can become very confusing. Private Sub LabelMaker() ' Remove the current labels from the Form For i As Integer = Me.Controls.Count - 1 To 0 Step -1 If TypeOf Me.Controls(i) Is Label Then Me.Controls.RemoveAt(i) End If Next ' Put new labels on the Form Dim r As Random = New Random() For i As Integer = 0 To 9 Dim lbl As Label = New Label With lbl .Name = String.Format("IncorrectNumber{0}", i + 1) .Text = (CInt(Math.Floor((50 - -50 + 1) * Rnd())) + 1).ToString .Size = New System.Drawing.Size(25, 15) .Location = New Point(r.Next(0, (Me.Width - lbl.Width)), r.Next(0, (Me.Height - lbl.Height))) End With Me.Controls.Add(lbl) Next End Sub
This is perfect, thank you so much. 
Consider using a dialog to select the file, also, the file path is just wrong. You're doing this in a debug folder right? If you need the file path to be hard coded, check to make sure app.path is the directory you're looking for.
Is this a proper db back end? If so, use the data objects in vb to link to your db then, in the tableadapters write your outputs, or make stored procedures that return status text. If it's not, consider making classes for each master table. Be sure to make them serializable so you can export them
Yeah there's not really enough info here to assist you. You could always disable the save button when it's clicked and re-enable after the objwriter.close but that's kinda clunky. Also, consider using the Using/End Using block for the StreamWriter. It'll dispose it properly.
It was an IO.IOexception, and it says the file is still in use. So I'm assuming my objwriter.close() is not working properly 
If you're going to be working with VB6 (as in maintaining legacy applications), then it's worth looking into. It's been many years since I needed them, but this used to be a good list: http://allapi.mentalis.org/apilist/apilist.php If you are learning to program, or writing any new code from scratch, I'd dump VB6, and go to .NET, where the vast majority of this is now built into the framework (meaning that you can get to all of it from IntelliSense). If you are using .NET, then most of these have been replaced by functions available in the .NET framework (although there are probably some very old ones that aren't used much that weren't added). 
can you put one of your attempts on a pastebin? what exactly is the trouble? I might do it one of 100 different ways, seeing your attempts will let me know at point you're at in your education and allow me to give a hint instead of spoon-feeding an answer that your professor will probably see right through.
Yup. Also, the if statement doesn't need to inside the loop. You only need to check if the file exists once. This is better code Dim intcount As Integer Using objwriter As New IO.StreamWriter("test.txt") If IO.File.Exists("test.txt") Then Try For intcount = 0 To (strfirstname.Length - 1) objwriter.WriteLine(strfirstname(intcount)) objwriter.WriteLine(strlastname(intcount)) objwriter.WriteLine(intpercentage(intcount)) Next Catch exception As System.IO.IOException MsgBox("you clicked saved to much!") End Try Else MsgBox("File is not available. Restart the program when its ready for use!") Close() End If End Using
You need commas in the query string between parameters. Instead of DonorName=@DonorName DonorAddress=@DonorAddress you need to use a comma after the @xxx part each time except for the last one, so something like DonorName=@DonorName, DonorAddress=@DonorAddress I also noticed you don't have a "where" clause at the end of the query unless is just got cut off in the error message. As it stands, you'll update every record in DonorTable with the data instead of just the one for the specific donor. 
Still breaks, if i save the data, load it, and then try to save it again, maybe my reader is not closing?
[check the sample out here](http://www.dotnetperls.com/streamreader-vbnet) read the file in reformat it an write the file out
You don't have to open both streamreader and streamwriter at the same time. Open streamreader, load the necessary values into Lists(Of String/Integer), close streamreader, then open streamwriter and write it into the new file. Is there any reason why this has to be done in txt instead of XML though?
How would I change that? 
one way you could find out for sure is to step through each line and use something like process explorer to see exactly what happens with the file handle. also take a look at the documentation for the `using` command.. try to rewrite the code with `Try... Catch... Finally...` (the functional equivalent of `using`) to see if maybe the stream still somehow isn't being disposed of.
http://lmgtfy.com/?q=game+ideas
It sounds like your code may be in disarray.
i have an if statement to make it so if the information is correct(no letters in numbers only variable) then btnsubmit1-5(5 seperate if statements).enabled = false
Boolean is simply a type of variable that holds one of two values: True or False. It's as simple as declaring the variable with "Dim VariableName as Boolean". Let me get this clear. You're testing if the information is correct, and if it is, you disable the buttons?
If the btnsubmit1-5 are disabled, i want enable 2 other ones.
thats what i was looking for! I didnt know how to do that with the first part of the IF statement, i tried commas and other things, but not and, thank you sir!
When/where are you running this code? I think the problem with the code runs a little deeper than you may think, dude. There may be some structural flaws in your code. You're doing this for a class, yeah? Why don't you speak to your teacher about it?
Its for my final, he said we are not allowed to ask him for help. I have it running in the formload 
Then you need to isolate this code out as a Sub and run it everytime a button is clicked.
Thank you sir
Thanks i think i understand it now, Your bottom paragraph really explained it better then my book does.
I totally agree. However - and students, please correct me if I'm wrong - I suspect that a fair bit of the blame can be laid at the feet of the student. I was never professionally or formally trained in VB.NET. I started with GWBASIC, got a little into QBASIC, then gave it up until the latest incarnation of VB.NET, where I actually had to learn OOP all by myself. I did that by reading tutorials online, googling bits of stuff that I didn't understand (like how to use For-Each: back in my day, I only had For-Next with a variable to count how many times it was to loop for!) and basically hammering away at it with trial and error until I got it. That said, not being in a course also means that I have the luxury of time to mess around and experiment on my own. I didn't have to finish a finals project with some artificial constraints, but neither did I have the support of a classroom environment or someone actually teaching me stuff.
I am a student, we have started a programming module this year, we have exams in January for that module, we have covered for an while loops nd all that crap, might just be the odd student who has missed a lecture or is generall just confused, learning can be hard. Some lecturers may indeed suck aswell.
 Private Sub btnUPDATE_Click(sender As System.Object, e As System.EventArgs) Handles btnUPDATE.Click ParamList.Add(New Params("@DonorName", txtbxDonorName.Text)) ParamList.Add(New Params("@DonorAddress", txtbxDonorAddress.Text)) ParamList.Add(New Params("@DonorCity", txtbxDonorCity.Text)) ParamList.Add(New Params("@DonorEmail", txtbxDonorEmail.Text)) ParamList.Add(New Params("@DonorEmail", txtbxDonorPhone.Text)) ParamList.Add(New Params("@DonorEmail", txtbxDonorZip.Text)) ParamList.Add(New Params("@DonorEmail", txtbxDonorState.Text)) ParamQuery.Append("update DonorTable set DonorName = @DonorName, DonorAddress=@DonorAddress, DonorCity = @DonorCity, DonorEmail = @DonorEmail, DonorPhone = @DonorPhone, DonorZip = @DonorZip, DonorState = @DonorState") DB_Update(My.Settings.DonorConnectionString) End Sub
If you're talking about the image not changing when switching to english, then I would think that you will need to determine what language is selected and load a different image with the correct language on it. If this isn't the case, what exactly are you wanting a solution for?
&gt;I think the problem is exposure, before doing a course students usually have little-to-no exposure to programming and this can harm education. This is true. I think a good part of the difficulty lies in learning how to think like a programmer, where every single complex step can be broken down into smaller, simpler constituent steps. We understand that what is apparently super easy for the layman - say, sending a file to the printer, or even just saving the file - is actually made up of many many smaller steps. The beginning programmer doesn't, and thus gets frustrated and starts yelling a lot at the screen when even simple things become so complicated. That's where, I feel, philosophy and formal logic helps a lot. If you train yourself to break down arguments every day, you naturally start to think of things as being made up of many supporting statements with one grand conclusion. The skill of being able to logically break down anything to its basic tenets helps a lot when you need to answer questions like, "How can I send a file to the printer?"
This worked perfectly! Thanks.
I keep reading the title of this thread in this voice. http://indiana.laxallstars.com/files/2011/04/jerry_seinfeld_21798.jpg
and that's pretty much how i say it too ... i love the seinfeld!
At my university, VB.net is the alternative to a much harder programming course in Java, for students going the Information System route instead of Computer Science. A lot of the students that i've met in my Information Systems classes are really only in it because they heard it was a good degree program and it seemed interesting, without actually realizing that you do need a basic level understanding of programming and databases to even obtain a degree. The VB.net course I'm in right now has received SEVERAL emails telling students that book exercises and other homework is STRICTLY individual work.
Murach's Visual Basic is a pretty good book on Visual Basic, if you want a second reference.
Try something like this Dim ctlControls() as Control, tbxTextBox As Textbox For i As Integer = 1 to rowCount ctlControls = Me.Controls.Find("txtMonday" &amp; i.ToString.Trim) tbxTextbox = ctlControls(0) monTotal += CInt(tbxTextbox.Text) Next i
Use [JustDecompile](http://www.telerik.com/products/decompiler.aspx) from Telerik it will create visual studio projects for you and help you get around in the odd code you get back. Its free.
Valid Solution
I agree. I could give you a fish or teach you to fish, I took the harder option for your benefit.
I had no idea this book had a TOC and now I'm saved. I caught like a billion fish because of you. Again, thanks!
MSDN will help a lot more. Take a look at the System.IO.File namespace and you should find something that will do exactly what you're asking
Well, no it's not really. That code assumes that the user has actually entered an integer in the TextBox. It won't convert "XYXXY" to an integer will it? You'd either have to perform a check that the Text value is, in fact, an integer or use the KeyDown/KeyUp method of the textbox to prevent the user entering any non-numeric character. If you are certain that the user can only enter numeric values then just use a NumericUpDown control instead
You'll be needing a StreamWriter. It's an overloaded class and you can pass TRUE to it to ensure it appends to an already existing file. http://msdn.microsoft.com/en-us/library/36b035cb%28v=vs.110%29.aspx
Store the entries in a 3-dimensional array. Use NumericUpDown controls for the scores and textboxes for the names.
AH I should have definitely been more specific. One dimensional arrays only.
You will need a global index variable to keep track of your index for the arrays. You can achieve this by declaring your variable in the class instead of inside a subroutine and initializing it to 0. Declare your Name array and your Score array the same as you did your indexVariable (class scope). Upon clicking the button to save the values Name(indexVariable) = txtUserName.text Score(indexVariable) = nudFront9 + nudBack9 Increment your indexVariable and clear/reset the input controls to await entry of the next competitor.
LOL! Why do teachers set such stupid tests with no real-world application? As if anyone would use a 1d array for this sort of thing.
Your confusing a validation issue with the problem presented. Yes the interface should only allow valid data, and if you want to be a stickler then yes the function should only allow correct values. Having said that though this does solve the issue at hand. Up vote BTW for supporting completeness in code. for I agree with you over that :)
I wasn't a fan of the assignment either but I can see why she assigned it. Just wants to be familiar with the basics.
Thanks for the continued help! I changed that error and still receive the same errors. I think it has to do with the update DonorTable portion. Based on your coding what goes where update ____ is? I would have assumed it would be the table you are accessing. Would it be the source? the adapter? the table itself? The table rows?
It's the table name. Here's some example code that updates a record. "UID" is the unique value for the table. Dim result As DialogResult = MessageBox.Show("Update this record?", "Update", MessageBoxButtons.YesNo, MessageBoxIcon.Question) If result = Windows.Forms.DialogResult.Yes Then 'Update the record ParamList.Add(New Params("@eventdate", TextBox1.Text)) ParamList.Add(New Params("@bandname", TextBox2.Text)) ParamList.Add(New Params("@contact", TextBox3.Text)) ParamList.Add(New Params("@phone", TextBox4.Text)) ParamList.Add(New Params("@people", TextBox5.Text)) ParamList.Add(New Params("@comment", TextBox6.Text)) ParamList.Add(New Params("@uid", TextBox7.Text)) ParamQuery.Append(" update tbands set") ParamQuery.Append(" eventdate = @eventdate,") ParamQuery.Append(" bandname = @bandname,") ParamQuery.Append(" contact = @contact,") ParamQuery.Append(" phone = @phone,") ParamQuery.Append(" people = @people,") ParamQuery.Append(" comment = @comment") ParamQuery.Append(" where uid = @uid") DB_Update(cnString_Groups) End If Are you still getting the same error about the parameter declared more than once, or is it a different error now?
The only error I am getting is [this](http://imgur.com/LsdfIdx) the issue I am now having with it is even after searching the whole solution I cannot find anything with nvarchar in it to edit... 
Do you have a line with @DonorState declared as a parameter? The nvarchar thing is coming from the SQL server because the query isn't working correctly.
can you give me an example lol this makes no sense to me right now since i am used to coding in visual basic 2010 and my school makes me use vb6 because they are too cheap to even get 2010 even though it is free
As far as I'm aware it's the same thing although in VB6 you probably have to declare the datatype (e.g. Dim x as String ="VB6 is rubbish")
Think of a string variable as a place holder for text, it is a way of storing alphanumeric characters. So if i needed to store a phrase in a variable you could use Dim VariableName as String VariableName = 'This is a string and can hold text, numbers like 12345, Characters like !@#$^ and anythign else you can type on a keyboard.' or Dim VariableName as String = 'This is a string and can hold text, numbers like 12345, Characters like !@#$^ and anythign else you can type on a keyboard.' More good info on Strings here http://www.dotnetperls.com/string-vbnet 
This same guy posted a month ago on /r/compsci asking [how to do simple casting](http://www.reddit.com/r/compsci/comments/1qm22d/need_help_with_this_question/), insisting it wasn't homework help he was asking for and refusing to experiment to find out the answer himself. It's basically the end of the semester, I don't have high hopes for him.
I was wondering the same thing when I read the problem. I was taught to always use List Of T rather than arrays and take advantage of the framework.
Look up substring and indexof and it will help you. ie Dim msg As String = "Writing computer programs is easy" Dim toFind As String = "easy" Dim toReplace As String = "challenging" Dim strPos As Integer = msg.IndexOf(toFind) msg = msg.Substring(0, strPos) &amp; toReplace MessageBox.Show(msg) Note that the the tofind is case sensitive, to overcome that you can use ToUpper or ToLower
A lot of programming courses(mine included) do not have an algorithms class, so people aren't learning how to use the tools they know properly. I'm sure most courses go over loops, conditionals, etc but without the proper reinforcement people just glaze over them.
&gt; Dim msg As String = "Writing computer programs is easy" Dim toFind As String = "easy" Dim toReplace As String = "challenging" Huh? You don't need IndexOf or Substring at all. A simple Replace is just fine. Dim msg As String = "Doing my homework is easy" Dim toFind As String = "easy" Dim toReplace As String = "easier if I get other people to do it" MessageBox.Show(msg.Replace(toFind, toReplace)) Basic K.I.S.S (Keep It Simple Stupid) principle ;)
Good point, I had a similar exercise when I took strings and looked up my solution for it. Replace is really an easier way to do it.
That's it, i'm going home, and I'm taking my ball with me.
They're not visual...and they're not basic!
File..Save As...csv. Doesn't need a macro.
Record a macro (Developer Tab|Record Macro) of you saving a workbook as .csv Open vba (Alt-F11) go into modules and look at how the macro recorder wrote the macro for saving to csv. Worse case, it will give you some things to search on to get deeper information as to what it's doing.
This should work for you, pretty straight forward... Sub EasyPeasy() ActiveWorkbook.SaveAs Filename:="c:\FileName.csv", FileFormat:=xlCSV, CreateBackup:=False End Sub
Are you using a 2-dimensional array to store your buttons? If so, you can code something that isn't the most programmatically efficient, but it's easy to do and understand. First, randomly roll two numbers between the max width and height of the array, eg if you have 100 buttons on a 10x10 grid, roll two numbers between 1-10 (or 0-9 if your array starts from 0). Let's call these numbers x and y. &gt; Example: x = 4, y = 5. This means that it's the fourth square from the left and the fifth square from the top. Check if a mine already exists on it. If so, move the x and y by a small random number each, say +0-2, then check if a mine already exists there. Keep doing this (with a While statement) until it finds a square that's empty. Now mark this square as a mine, and repeat the entire process until all your mines are planted. &gt; Example: Square (4, 5) is already taken up by a mine. So the program rolls two random small increments - let's call them x_increase and y_increase - and gets x_increase = 1 and y_increase = 0. It applies it to the current x and y values to get square (5, 5). &gt; Now the program checks: is square (5, 5) taken up by a mine? If so, do it again. But let's pretend it's clear. So it marks the square as being a mine, and the sub is done. Repeat the sub as many times as necessary to populate the desired number of mines. Take note that when moving the x and y by a small number each, you need to write something that checks if the current x or y exceeds the max width/height. If it does, the code should then deduct the value by the max limit, in essence moving it back to the start. &gt; Example. Let's say x = 9 and y = 4, for square (9, 4). We roll and get x_increase = 2 and y_increase = 0, and when that is applied we get square (11, 4): a square that doesn't exist, because there are only 10 squares from left to right. To make sure this doesn't happen, after you apply x += x_increase, check to make sure that your new value of x does not exceed the max width. If it does, x -= max_width.
However you like! Are you familiar with the use of objects yet? If you are, then create it as a boolean property called isBomb and mark it either true or false. If you're not, then just store the value in the .tag property of your button.
I'm not exactly understanding. So, if x=3 and y=4 how would I make the button at the array location (3,4) set as a bomb. Could you show me an example to clarify? 
 arrayName(x, y).Tag = "bomb" That's pretty much it if you're using the tag method. May I suggest that you reconsider making a Minesweeper clone, especially if this is for school? It won't be as easy as you may think it is, and will probably make you want to kill someone before you're halfway done with it. This is even more true if you're new to programming and this is your first project. Make something even easier as your first project, like a fortune teller that would spit out a prediction when you enter your name, or a program that generates buttons in random locations when started, or whatever else that is easy and straightforward.
http://www.bakebooks.com/starting-out-with-visual-basic-2010-5th-edition-PDF-61376/
This is aircoded and may not be correct, but try something like this: Dim counter as Integer = 0 For Each entry in lstNumber.Items If entry = txtNumber.Text then counter += 1 Next lblOut.Text = counter This basically creates a variable named "counter" that keeps track of how many items match the search. It then goes through every single item in lstNumber, and if a particular item matches the search criteria (which I assume is in txtNumber.Text), it increases counter by 1. Finally, it then outputs the number of matches to lblOut.Text.
3 months a little late bro. My final was this morning.... thanks though.
it is that i have to use 1 textbox for the sentence and 2 more for the words i want to swap places
K.I.S.S. has been around forever
That was totally it! I had never seen the For Each loop before. Thank you very much for taking the time.
Make a simple game, like a video poker machine, slot machine, blackjack, minesweeper, or whatever else. This will really help reinforce the concepts that you've learnt, and teach you how they work in the real world where all the kid gloves are off. Plus, you'll have something to show for your work at the end of the day!
Thanks! I just started a slot machine program that i hope to have finished soon!
Actually, I figured out the problem...I just declared the array wrong, it was supposed to be (6,8) not 8,6) It fixed everything, thanks for the reply though
Ok firstly, starting external programs is easy. Take a look at the Process.Start method Secondly, how to store the data? The obvious answer is a database but I guess that's not an option here. You would have Notepad "generate" the data, your code would do that (via a StringBuilder) and then save it to a text via (with a StreamWriter). However, storing data in text files is just bad practice in my opinion. If the requirement is to display the data in a program everyone has I'd consider using a CSV and opening Excel to read it in or a HTML file and having their default browser open it. The problem with the latter is that you'd have to write the HTML code yourself (again with a StringBuilder). Is a database really not an option?
Do what /u/charliemay says. Most people don't manually code VBA in Excel. They record a macro and then tweak the generated code as required.
&gt;Is a database really not an option? It sounds like putting the data in a document is part of the existing process (maybe an agreement of some kind that is printed and signed). Using a database would be a big task, maybe that can be your next project as there would be many advantages (filtering your customers etc). Anyway, I would start by making a word template. A normal document with headers and tables that VS can open and fill out. Add the word library to your project and declare a new Word.Application, Word.Document and Word.Selection Dim WordApp As New Word.Application Dim doc As Word.Document Dim sel As Word.Selection WordApp = New Word.Application doc = WordApp.Documents.Open("C:\Template.docx") sel = WordApp.Selection WordApp.Visible = True fill the template out doc.Content.Tables.Item(1).Cell(1, 2).Select() 'Selects the correct table cell sel.TypeText("John Doe") 'Writes the text Trial and error
Two options * Just put the template in a central location accessible to all users * Include the template as a resource in your project
I generally roll out my programs via a batch file that copies over the required files to a directory in "program files", sets up shortcuts etc... I would put the template document in there. There's probably a more intelligent way to add it as a resource and have it distributed when installing, but I'm a bit of a cowboy when it comes to roll outs. Is there a location on the LAN everyone has access to? That's also a possibility.
I'm sure nobody cares, but this thread (plus the one where this guy was asking about Minesweeper questions) has inspired me to make my own Minesweeper clone! It took me about two hours, and it's ugly as hell, but it works exactly as it should, so I've got that going for me.
You're looking at the timer all wrong. **Every** 5000 milliseconds you will process the code in the tick event until the timer is stopped. Continue While will break out of the loop and start back at the beginning of the while statement. Thus, you have just created an endless loop in the form load event and until that event finishes, you will not see the form. You could look into System.Threading.Thread.Sleep but that will stop your program from responding until the sleep time is met. 
http://www.dreamincode.net/forums/topic/78802-martyr2s-mega-project-ideas-list/
Thanks for the reply. I am aware of the Sleep code, but I don't like the fact that it makes the program non-responsive while its going on. Could you recommend a better method using the timer that would effectively wait 5000 ms before executing the next command? Edit: I am stopping the timer / disabling it inside its own tick, so shouldn't it stop after the first round of 5000 ms? And the continue while only jumps back to check and see if the timer is enabled right? 1. Timer starts 2. While timer is going the program loops a while statement that does nothing 3. The timer autostops itself after the first interval 4. While loop notices timer.enabled=false now 5. Moves on I am trying to wait 5 secs for a page to load, because when I use document properties such as readystate complete they are checked too fast before the page has even had time to start loading, even though I call them after my Navigate command.
haha, Nice
Not the best solution, but did you try putting your loading code after the timer ticks? Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load Timer1.Start() End Sub Private Sub Timer1_Tick(sender As Object, e As EventArgs) Handles Timer1.Tick Timer1.Stop() ' Do the rest of my code here after the 5000 interval timer expires End Sub 
Use ( app.path ) &amp; "highscore.txt"
The issue is, I get no errors. Just, nothing comes up in the text box. The program doesn't crash, and when I encase it in a Try/Catch/End Try, nothing gets triggered.
I think what he means is use a [Breakpoint](http://www.homeandlearn.co.uk/NET/nets5p6.html) and then step through the code line by line [F8] and see what value each variable is being assigned.
Nevermind, thanks for the assistance. I sovled my issue I fiddled more and got it to keep saying "End of data", I needed to add &amp;= instead of just = to stop it overwriting the data every loop.
Perfect, thank you. I remembered the EndOfStream technique vaguely, but couldn't remember exactly how to incorporate it. Program works flawlessly now, I found a method of line counting the text file and then using that to set how many slots are in the array to make sure it's always got room. Thank you for the assistance
As far as your sort issue goes, you have declared your array as string. A string is sorted differently than a numerical value. A string will sort by it's Ascii value from left to right so 1 will come before 11 but 11 will come before 2. To fix this, you could just simply declare your scorearray as integer instead of string so that it will sort by numeric values.
There are numerous ways to handle data access in vb.net, could you perhaps show some code to let us see the method you're using? A dataset is a in-memory selection of data and can be filtered. Or you can define the .DefaultView of the datatable that resides in the dataset. It appears like you're trying to retrieve data to your dataset by setting an ID = &lt;userInput&gt; but I've never seen it done this way. Typically you would write a select statement to fill the dataset based on the criteria and then filter that as needed. 
Sweet man that worked thank you so much!
I understand how that would work now that I think about it. But I believe it would interfere with the way I'm storing my data. I'm storing the content of "10 Name Type" in a string variable, changing it to an integer would surely stop me being able to contain the rest of the data in that variable (The name and type)
This is quite possible. I wrote a system called autodoc that does this. I used OpenXML to read and modify a template document and then save it out. It uses a function that copies a document template (dotx) to a docx file, modifies the output file in place with the changes. You will need a copy of the MarkupSimplifer found in the openXML powertools http://powertools.codeplex.com/ The code is bit goofy at points becuase of specfic requirments. Ask questions :) Public Sub BuildDocumentOpenXML(ByVal PathToTemplate As String, ByVal OutputDocument As String) 'TODO: Use pdf writer com object to generate PDF. 'TODO: Email document to user. CleanDocx(PathToTemplate) ' Check to see if Document exists Dim Loopcount As Integer = 1 Do Until System.IO.File.Exists(OutputDocument) = False OutputDocument = OutputDocument &amp; "(" &amp; Loopcount &amp; ")" Loopcount = Loopcount + 1 Loop 'FileCopy File to new location System.IO.File.Copy(PathToTemplate, OutputDocument) 'Try Dim doc As WordprocessingDocument = WordprocessingDocument.Open(OutputDocument, True) SearchAndReplace(doc, _dTable) Dim InputDocument As String = OutputDocument OutputDocument = Path.ChangeExtension(InputDocument, "pdf") 'ConvertPDFCreator(InputDocument, OutputDocument) 'FileSystem.Kill(InputDocument) End Sub Private Sub SearchAndReplace(ByVal _Document As WordprocessingDocument, ByVal _Items As DataTable) Using (_Document) Dim docText As String = Nothing Dim sr As StreamReader = New StreamReader(_Document.MainDocumentPart.GetStream) Using (sr) docText = sr.ReadToEnd End Using For y = 1 To 3 Dim x As Integer = 0 For x = 0 To _Items.Rows.Count - 1 Dim regexText As Regex = New Regex(ConvertToken(_Items.Rows(x)("Token"))) Dim regexCRLF As Regex = New Regex("(\r\n|\r|\n)+") Dim regexSpace As Regex = New Regex("\*Space\*") Dim regexLineFeed As Regex = New Regex("\*LineBreak\*") Dim TempValue As String = regexCRLF.Replace(_Items.Rows(x)("Value"), "&lt;/w:t&gt;&lt;w:br/&gt;&lt;w:t&gt;") If TempValue = "*omit*" Then TempValue = "" docText = regexText.Replace(docText, ConvertToken(TempValue)) docText = regexSpace.Replace(docText, " ") docText = regexLineFeed.Replace(docText, "&lt;w:lastRenderedPageBreak /&gt;") 'docText = regexLineFeed.Replace(docText, "&lt;/w:t&gt;&lt;w:lastRenderedPageBreak /&gt;&lt;w:t&gt;") Next x Next y Dim sw As StreamWriter = New StreamWriter(_Document.MainDocumentPart.GetStream(FileMode.Create)) Using (sw) sw.Write(docText) End Using End Using End Sub Public Sub CleanDocx(ByVal Filepath As String) ' This chunk of code simplifies the WordML markup so that we can do the search and replace. ' Dim filename As String = "D:\projects\autodoc\Templates\test1.docx" Dim doc As WordprocessingDocument = WordprocessingDocument.Open(Filepath, True) Dim SimpArgs As New SimplifyMarkupSettings SimpArgs.RemoveBookmarks = True SimpArgs.RemoveComments = True SimpArgs.RemoveProof = True SimpArgs.RemoveEndAndFootNotes = True SimplifyMarkup(doc, SimpArgs) doc.Close() End Sub
I would use XML. The XML serializer is easy. Here is some code on writing/reading the xml file. Copy pasta this into a form with 3 buttons and a textbox. Public Class Form1 Public Function ReadXML(filePath As String) As String Dim outputString As String = "" Using reader As Xml.XmlReader = Xml.XmlReader.Create(filePath) While reader.Read() ' Check for start elements. 'If reader.IsStartElement() Then ' ' See what element it is ' Select Case LCase(reader.Name) ' Case "id" ' outputString = outputString &amp; ("id:" &amp; reader.Value.Trim()) ' Case "firstname" ' outputString = outputString &amp; ("First Name:" &amp; reader.Value.Trim()) ' Case "lastname" ' outputString = outputString &amp; ("Last Name:" &amp; reader.Value.Trim()) ' Case "salary" ' outputString = outputString &amp; ("Salary:" &amp; reader.Value.Trim()) ' End Select 'End If outputString = outputString &amp; reader.Value.Trim &amp; vbCrLf End While End Using Return outputString End Function Public Sub WriteXML(filePath As String) Dim employees(2) As Employee employees(0) = New Employee(1, "Prakash", "Rangan", 70000) employees(1) = New Employee(5, "Norah", "Miller", 21000) employees(2) = New Employee(17, "Cecil", "Walker", 60000) ' Create XmlWriterSettings. Dim settings As XmlWriterSettings = New XmlWriterSettings() settings.Indent = True ' Create XmlWriter. Using writer As XmlWriter = XmlWriter.Create(filePath, settings) ' Begin writing. writer.WriteStartDocument() writer.WriteStartElement("Employees") ' Root. ' Loop over employees in array. Dim employee As Employee For Each employee In employees writer.WriteStartElement("Employee") writer.WriteElementString("ID", employee._id.ToString) writer.WriteElementString("FirstName", employee._firstName) writer.WriteElementString("LastName", employee._lastName) writer.WriteElementString("Salary", employee._salary.ToString) writer.WriteEndElement() Next ' End document. writer.WriteEndElement() writer.WriteEndDocument() End Using TextBox1.Text = "Xml created" End Sub Private Sub Button1_Click(sender As System.Object, e As System.EventArgs) Handles Button1.Click ' Write XML WriteXML(Application.StartupPath &amp; "\employees.xml") End Sub Private Sub Button2_Click(sender As System.Object, e As System.EventArgs) Handles Button2.Click ' Read XML stuff it in the textbox TextBox1.Text = ReadXML(Application.StartupPath &amp; "\employees.xml") End Sub Private Sub Button3_Click(sender As System.Object, e As System.EventArgs) Handles Button3.Click End End Sub End Class Class Employee Public Sub New(ByVal id As Integer, ByVal firstName As String, _ ByVal lastName As String, ByVal salary As Integer) ' Set fields. Me._id = id Me._firstName = firstName Me._lastName = lastName Me._salary = salary End Sub 'Storage of employee data. Public _firstName As String Public _id As Integer Public _lastName As String Public _salary As Integer End Class 
You've got the right idea, but hand serializing the data is insane (no offense :)). use the xmlserializer to serialize each class entirely. you could be quick and dirty and store all the data classes in a `List&lt;T&gt;` then use LINQ to filter and sort as necessary. edit: a long while ago when I began programming I wrote generic xml serialize/deserialze classes. They probably could be better, but it seems like people have problems figuring out serialization. Also, I don't have an original of the VB code I wrote this in, so it's been converted back to c# from VB. No guarantees if it works. BTW I wouldn't recommend using these in an assignment unless you can explain every single line of code :) Public Shared Function Load(Of T)(path As string, classToLoad As T) As T Dim type = If(classToLoad Is Nothing, GetType(T), classToLoad.[GetType]()) Dim reader = New XmlSerialzer(type) Dim loadFile As StreamReader = Nothing Try loadFile = New StreamReader(path) classToLoad = DirectCast(reader.Deserialize(loadFile),T) Catch ex As Exception ' exception handling goes here Finally If loadFile IsNot Nothing Then loadFile.Dispose() End Try Return classToLoad End Function Public Shared Sub Save(Of T)(path as String, classToSave As T) Dim objWriter = New StreamWriter(path) Try Dim serializer = New XmlSerializer(classToSave.[GetType]()) serializer.Serialize(objWriter, classToSave) Catch ex As Exception ' exception handling goes here Finally objWriter.Dispose() End Try End Sub 
 I used your method of adding a z and then removing it and it works perfectly. Thank you very much for your assistance! Gives me a good insight into some techniques of resolving any future problems. Once more, thank you for your time.
Word Documents are XML based so you can do what you wish with Open XML. However, there is a bit of a learning curve to Open XML and Open XML will not support certain features native to Word (Your mileage may vary) The alternative is to use the Interop.Word Namespace (which will require the user to have word installed and is not as quick as dealing with XML): http://msdn.microsoft.com/en-us/library/microsoft.office.interop.word(v=office.11).ASPX I don't know how your document is setup, but you can create bookmarks in your file, and then write values into the lines designated with a bookmark. You can also bookmark inside table cells. You can access the bookmarks you have created like this: objWdDoc.Bookmarks.item("MondaysDate").Range.Text = "Test Bookmark" So now you can write into the file upon "export" click, show a save file dialog to let the user choose a save location, then based upon the dialog result, call the objWdDoc.SaveAs() method to save the export, and then objWd.quit() to close Word. http://msdn.microsoft.com/en-us/library/microsoft.office.tools.word.document.saveas.aspx http://msdn.microsoft.com/en-us/library/microsoft.office.interop.word._application.quit(v=office.11).ASPX
The only way you will generally access databases in VB.NET is by ADO.NET which is the underlying data access technology for .NET. You can add the Access DB as a Data Source (which you did). This is fine to do, as it lets the designer generate the connection strings and code to access the database objects. You then create methods within the .XSD that is generated. You call the methods like TableAdapterName.Method(Supply Parameters Where Neccesary). WalkthroughDataset.Walkthrough.ID() is the column name, which is not where your value needs to go. Your value would need to be input as a new row within the datatable, or update an existing row in the datatable. For Adding a Row, there is a datatable.rows.add method and then the dataset containing the datatable can be updated back to the database. Quick info on the add method: http://www.dotnetperls.com/datarow-vbnet However, let me ask this: do you require to pull data out in the first place and display it to the user, then update this data back to the database? Or do you only ever intend to insert data into the tables (such as a constant collection from the inputbox)? In the code sample below you are loading a filling a dataset on form load, which may be unnecessary unless you need to actually display that data. If all you need to do is constantly insert data, you can define a new method in your .XSD by right-clicking on the fill command of the TableAdapterManager table adapter located in the .XSD (notice that fill command is what your code in the load routine calls), choose query, select insert query, and use the query creator tool. Do not mess with the top fill query, as this defines what data your adapter pulls. You can use ? when creating queries to prompt for parameters. Your query would then look like this in your code: Me.TableAdapterManager.InsertQuery("InputBoxString1", "InputBoxString2") I could give you the SQL but I do not know your table/field names. Lastly, consider bypassing the use of input boxes. There is no reason you should be using them. If you ever need to extend their capability, or require future customization you will end up creating a form display anyways. Let me know if you have any questions and I will be glad to elaborate.
&gt; I am trying to wait 5 secs for a page to load, because when I use document properties such as readystate complete they are checked too fast before the page has even had time to start loading, even though I call them after my Navigate command. I have this problem all the time. There is little support for this type of thing in .NET. You are essentially busy-looping which is bad as it drives up the CPU. The programming is supposed to be procedural. I think the new version of the .NET framework has better support for this, however, I digress: Are you using the web browser control? You could maybe create a Timer with a 5000ms Tick. After the Document Complete event fires for the control, enable the timer, which at its tick event, runs your next piece of code after 5000ms and then at the end, it disables the timer. You could detect which URL your control is at and then use and IF-THEN in the timer event to choose a piece of code to run. 
Query the Win32_Share WMI Class Example query here http://msdn.microsoft.com/en-us/library/ms186146%28v=vs.80%29.aspx
Thanks :)
Visual Studio is the standard IDE. It's pretty awesome. Get ReSharper (its from the same people who make IntelliJ IDEA). I'm sorry I don't know of any good resources, but as far as the language itself it has nearly all the same features as java and some other stuff that java wishes it had. That being said, the syntax looks like it's designed for middle schoolers. Have fun!
Thank you. I'll have a look at them and get started tonight. Ah fair enough, well if it is like Java shouldn't be as daunting as first thought! 
the main thing is forget about curly braces. VB uses end instead. as in end sub, end function, end class etc. when declaring variables, the type goes after the name and you need a dim statement. dim s as string no semicolons. if you need to go to the next line you end the line with an underscore. and and or instead of &amp;&amp; and || for loops look like this. For x = 1 to 10 ... next if you want to count by 2s then for x = 1 to 11 step 2 if x = 4 then ... else ... end if select case x case 1 ... case 2 ... case else ... end select. it's really pretty easy over all. easier if it's vb.net instead of vb 6 or below. but that's just because vb.net is more object oriented than 6 is. but for the most part anything you can do in Java you can do in vb and you can google what you want to do and add in vb and it will show you how. as always Stack overflow is your friend. 
To add to what's already here: You need to figure out what flavor of VB it is first. If it's ASP then you'll need the VB6 IDE (circa Win 98, and about as ugly), and a large pay increase. If it's ASP.NET then you'll have to figure out what framework it's built against, and get an appropriate IDE. The 1.x frameworks were locked to a particular version of the IDE. From 2.0 forward the IDE is backward compatible so you can just use the latest (although you can't use newer language features in the older frameworks). 
Thanks for the help! Really new to this, so I appreciate it. 
Ah. Thank you, ill ask tomorrow and see what im dealing with. Win98 software does not sound appealing! 
VB, or ASP using VB flavour?
I'm wondering why [`Option Strict`](http://msdn.microsoft.com/en-us/library/zcd4xwzs.aspx) is set to `Off`. Has your instructor taught you anything about it? If not, you should never ever, in any circumstance, have it set to `On` because it results in lazy programming and avoidable bugs. The line `r = Console.Readline()` shouldn't even compile to begin with, since the ReadLine() method returns a String, not a Double. More importantly, exceptions are completely inappropriate for this assignment. Why? Because Microsoft has made a [function explicitly for this kind of problem](http://msdn.microsoft.com/en-us/library/system.double.tryparse%28v=vs.110%29.aspx). No need to bother with try/catches when you can get a boolean telling you if the conversion worked or not. Two other things: first, the `Finally` block always runs after the `Catch` block . Assuming that the exception was caught and handled , the `Finally` block will either display incorrect information (doubles equal zero if not instantiated with a given value), or possibly even throw another exception. Second, consider giving your variables meaningful names :) IMO the appropriate way to solve this problem would be to use a combination of Double.TryParse() with a while loop that will run until the radius is a valid double and greater than zero.
Anything you can do in word by hand, you can essentially do in .NET. You can study up on the Namespace which might help you a bit in understanding. To dynamically generate, you need to create the word application, then call the wordobject.documents.add method: http://msdn.microsoft.com/en-us/library/microsoft.office.interop.word.documents.add(v=office.11).aspx This will create a blank new document. If the image that you intend to use is not going to constantly be random, then you can put the image into the resources folder. You will need to somehow get the image path to the image, especially for deployed users, so check out this link with a bit of an explanation: http://stackoverflow.com/questions/2123257/what-is-the-file-path-as-a-string-of-a-file-in-the-applications-resources To add a picture into a word document, you will need the path to the image, and pass it into the following method: http://msdn.microsoft.com/en-us/library/microsoft.office.interop.word.inlineshapes.addpicture(v=office.14).aspx Check this link out for moving pictures added to a document: http://social.msdn.microsoft.com/Forums/en-US/edca4438-a12d-42c5-971f-cec3ab5fe0df/inserting-a-picture-into-word-and-changing-the-position As a small tip, the code you are writing is actually almost the same as VBA (minus requiring setting your object references), so if you get stuck, you can try to record a macro, do what you want in the file, then look at the code the macro used. 
here is an example of adding paragraphs, and doing different kinds of formatting: http://support.microsoft.com/kb/316383 specifically, for your problem, look at: '** \endofdoc is a predefined bookmark. oPara2 = oDoc.Content.Paragraphs.Add(oDoc.Bookmarks.Item("\endofdoc").Range) oPara2.Range.Text = "Heading 2" oPara2.Format.SpaceAfter = 6 oPara2.Range.InsertParagraphAfter() This should handle what you are trying to do.
You should also avoid catching generic exceptions. If you need to catch the exception(s) catch the type(s) that will be generated Still, as /u/hdsrob said you don't need a try/catch block for this
OK, looks pretty straightforward. I could have done this in multiple steps, but instead I used the .OfType(Of Control) to automate moving through each datagridview so that I could use the single writeline. Give it a shot and see what you think: Replace your btnSave_Click with this version: Private Sub btnSave_Click(sender As Object, e As EventArgs) Handles btnSave.Click Using openFile As New StreamWriter("SquatData.txt") For Each t As TabPage In Me.TabControl1.Controls.OfType(Of TabPage)() 'for each tab page in the tabcontrol For Each d As DataGridView In t.Controls.OfType(Of DataGridView)() 'for each datagridview in the tab page For Each row As DataGridViewRow In d.Rows 'for each row in the datagridview If Not row.IsNewRow Then 'If it's not the editrow of the datagrid view (the last row) 'Write each row using the ~ as a delimiter openFile.WriteLine(String.Format("{0}~{1}~{2}~{3}~{4}~{5}~{6}~{7}~{8}", row.Cells(0).Value, row.Cells(1).Value, row.Cells(2).Value, row.Cells(3).Value, row.Cells(4).Value, row.Cells(5).Value, row.Cells(6).Value, row.Cells(7).Value, row.Cells(8).Value)) End If Next Next Next End Using MsgBox("Done") End Sub Edit: Changed code as I forgot to convert to a USING statement and allow the application to handle disposing of the writer when it's finished.
Wasn't in a virtualbox, but I had a similar issue once on my laptop and did a repair install of VS which fixed it. Was VS already installed prior to installing these other frameworks? If so, you might give that a try. Also, check [this link](http://blogs.msdn.com/b/webdev/archive/2009/10/12/targeting-earlier-net-frameworks-2-0-3-0-3-5-using-visual-studio-2010-beta2.aspx)
Not sure about Visual Basic, but you should try codeacademy for learning other languages. For VB, you could learn on your own well. Come up with a cool idea, and work your way there. 
The best way to learn to code is to, well, code. Create little projects for yourself to code. The first program I created was absolutely terrible: non-OOP, used subs as a weak GOTO instead of a method, didn't even use functions (because I didn't understand arguments) and had a ton of If-Else statements that should have been better encapsulated in a Select-Case. My second program rolled along, and I started to learn the purpose of subs and functions, and googled the purpose of Select-Case. Third program... well, you get the idea. What type of programs you make will depend entirely on where your interests lie. Are you into video game design? Make a simple little game for yourself. Cards? Code a blackjack program. Business management? Write some personnel management software. Whatever your interests are, you are sure to find a project that will help you, one way or another.
This code is working for me, check it out: Dim oWord As New Word.Application 'instantiate with NEW instead of late binding Dim oDoc As Word.Document Dim oShape As Word.InlineShape, oPara2 As Word.Paragraph Dim oPara3 As Word.Paragraph Dim oTable As Word.Table 'Show Word oWord.Visible = True oDoc = oWord.Documents.Add 'Insert Logo at the beginning of the document. oShape = oDoc.Content.InlineShapes.AddPicture("C:\Users\JasonB\Desktop\drives.jpg") oShape.Range.ParagraphFormat.Alignment = Word.WdParagraphAlignment.wdAlignParagraphCenter oShape.Width = 100.8 oShape.Height = 100.8 oDoc.Content.Paragraphs.Add() 'insert paragraph oPara2 = oDoc.Content.Paragraphs.Add oPara2.Range.Text = "Hello " oPara2.Range.ParagraphFormat.Alignment = Word.WdParagraphAlignment.wdAlignParagraphLeft oPara2.Range.Font.Name = "Museo" oPara2.Format.SpaceAfter = 24 '24 pt spacing after paragraph. oPara2.Range.InsertParagraphAfter() oPara3 = oDoc.Content.Paragraphs.Add oPara3.Range.Text = " Text" oPara3.Range.Font.Name = "Museo" oPara3.Format.SpaceAfter = 24 '24 pt spacing after paragraph. oPara3.Range.InsertParagraphAfter() 'create table, note range is defined to the end of the document to insert the table oTable = oDoc.Content.Tables.Add(Range:=oDoc.Bookmarks.Item("\endofdoc").Range, NumRows:=1, NumColumns:=1, DefaultTableBehavior:=Word.WdDefaultTableBehavior.wdWord9TableBehavior, AutoFitBehavior:=Word.WdAutoFitBehavior.wdAutoFitFixed) oTable.Style = "Table Grid" oTable.Range.InsertParagraphAfter() Sorry for late response. I know that article uses "create object" to create the word application instance, but use the NEW keyword instead because you will use the NEW keyword a lot (such as Dim list as New List(Of String). CreateObject is like a throwback to the VB6 days. The shape was overwritten because you need to call oDoc.Content.Paragraphs.Add() to create the original paragraph. Also, use your variable names to help you identify what the purpose of your variables are. In your example, oPara1 = InlineShape. oPara1 is not a word paragraph, its an inline shape, thats why you cannot call the InsertParagraphAfter() method, and thats why it gives you an error. Although you have named your variable that way, its a pain when you expect items to behave a certain way, and then they don't, and then you need to backtrace them, etc. So call it something different like oShape or oInlineShape. The table overwrites everything because you declared oPara4 as the entire range of the document, not as a specific point in the document. Notice in my example, I reference the ending bookmark, which creates the table at the end of the document. Not sure entirely what you are doing, or deciding to do, but read up on the entire namespace, or certain pieces of it to gain a bit more familiarity in dealing with the objects.
Thanks for the hope! Haha
Thousands of different ways ...... You'll have to be far more specific, and specify what version of VB you are using. 
This has to be a troll... It's a troll right!
Sorry, didn't think the question correctly. Say, on database, I'd like to load an excel sheet for a user management system. Button1 would bring a GUI to create a user. Then Button2 would save it to the excel file on a new line. On LAN, I just wanted to know how to make a LAN chat program for my school. Security, just how crypto and things like that work. I sound like a noob but I do know a lot about VB, I just want some help with these. Thanks, &amp; happy cake day! Using Visual Studio 2013
It may be a VB6 project. I have 6 installed on a VM for maintaining old code, so I'd be glad to take a look at it. Also, you can open the .VB files with any text editor (NotePad++ is a great one)
Each time the timer ticks, you need to add to a variable, and once the variable has reached the desired amount, enable the button. 
In the button's click procedure: Static intTries as Integer = 0 intTries += 1 If intTries = 3 Then intTries = 0 Button.Enabled = False Timer.Enabled = True End If Then in the Timer procedure Button.Enabled = True I'm typing this free hand but it should at least set you down the right path.
[How to: Play Sounds in Visual Basic](http://msdn.microsoft.com/en-us/library/6y3efyhx\(v=vs.90\).aspx)
The big question here is "How up to date do the different tables need to be on each client". My first response is don't do it. I would suggest that you could install sql express 2012 and have a central database server setup in about an hour. Then set up web services that allows your client sto pull from the central database and update a local copy (Sql compact or sql express) Having said all that why don't you write this as a webapp, and end all your headaches? Is this existing code you are retrofitting? 
Brand new app. I'm planning a mobile and Web versions. My thought with the central database is the issue with hosting and perhaps band with costs. Thought about using the Google spreadsheet.
Thanks so much for this. I'm still trying to wrap my head around it though. I hope you don't mind these dumb questions: 1. Should that be tempValue.close(), or tempValue1.close()? 2. Do I need to put in the HKEY_CURRENT_USER, or does My.Computer.Registry.CurrentUser do all that for me? 3. When I've run this code (with tempValue.close), it doesn't seem to make any changes. Just wondering where I've gone wrong here. Again, thanks for your help!
Sorry did this deadpan last night let me answer your questions. 1. should be tempvalue not tempvalue1 2. the hkey current user is included in the call my.computer.registry.currentuser 3. you will need to run this code as administrator (windows 7 or better). Compile this right click on exe and "Run as Administrator" No worries we all start in the same place and I am glad to help. Remember there is no wrong code if it solves the problem, only better ways to solve the problem. 
Muito bom este filme! Visite este site! https://sites.google.com/site/pinckbook/home
 System.Environment.Exit(-1) (Haven't tried it - just googled a bit)
After further research and experimentation, I think the lapse is when I try to call out a specific sheet within the excel. ThisWorkbook.Sheets("Customer") produces a Run-time error '9' Any help is appreciated.
For easier access; [playlist with all 200 videos](http://www.youtube.com/playlist?list=PLC601DEA22187BBF1).
It's kind of risky open an excel spreadsheet from someone else. Can you post the code for the "Create New Month" button?
You are going to have to work with the CoreAudio API. Have a search for SetMasterVolume on MSDN. This will be unmanaged code (i.e. there's no direct .NET methods for it) so rather advanced stuff. There are some examples out there for it
Not what I wanted to hear, but thanks. I played with CoreAudio originally, but the examples for it were over-the-top advanced. The example I found pretty much is a remake of a volume mixer. I'll definitely toy with it again, as VB is very interesting and fun to play with. 
I believe what you're looking for is the .substring method. Something like this: Public Class Form1 Dim oldString As String Dim newString As String Private Sub ComboBox1_SelectedIndexChanged(sender As System.Object, e As System.EventArgs) Handles ComboBox1.SelectedIndexChanged oldString = ComboBox1.SelectedItem.ToString newString = oldString.Substring(8, 4) ComboBox2.Items.Add(newString) End Sub End Class Obviously, I didn't use your entire block of code because I'm lazy, but you should get the gist.
me.close
datacontrols is a generic thing, it supports all sorts of backends. check its properties for the datasource. it's also possible the datasource is being set by code.
You should look into the BackgroundWorker. It basically lets you call a routine in a background thread without having to handle all of the details of threading. So after adding a BackgroundWorker to your form ..... button_click() backgroundWorker.RunWorkerAsync end sub BackgroundWorker_DoWork() ... 'Play file here end sub You'd have to use a separate BGW for each file you wanted to play.
.NET 3.0 and 3.5 were built on 2.0. They can't exist without 2.0. 4.0 is totally separate and standalone of the other versions. If your framework versions somehow got screwed up, you can use the utility Aaron Stebner at MS wrote to handle this automatically. http://blogs.msdn.com/b/astebner/archive/2008/08/28/8904493.aspx Also, nothing about .NET is "firmware"
There is nearly an infinite amount of resources here: http://msdn.microsoft.com/en-us/vstudio/hh388573 documentation, code samples, videos, team blogs, etc...
This statement confuses me a little: "used subs as a weak GOTO instead of a method, didn't even use functions (because I didn't understand arguments) " A method is both a subroutine or a function. Either can have arguments passed to them, and the only difference between the two is that functions return a value and sub routines do not. So you can think of the word subroutine or function as the more specific type of method, but they are still both methods.
are you talking about switching your public IP that you get from your ISP?
What I meant is that, because I didn't understand how methods worked (in particular, how arguments work), I used a sub as a weak type of GOTO instead of a modular bit of programming. So instead of writing coherent bits of code that can be reused over and over again - the way a sub is meant to be used - I simply used a sub when I used to write GOTO instead. &gt; 010 If x &gt; 10 then GOTO 030 &gt; 020 Print "Hello" &gt; 030 Print "World!" vs &gt; If x &gt; 10 then callMySub() &gt; Print "Hello" &gt; Sub callMySub() &gt; Print "World!" &gt; End Sub
Good point. It's been so long that I forgot about that. I knew that VC++ had it's own IDE, but forgot about Visual Interdev. Hopefully the OP doesn't have to actually sort out any of this history. 
Hopefully the OP doesn't actually have to use any of those god awful development environments. For their day, they were the best thing out there, but I get shivers if I ever have to go into an old IDE like VB6 after years and years of .NET IDE development. Even just the syntax changes like inline variable declaration and value assignments, or using set keywords for object variable assignments... ugh..
What problems have you encountered?
Out of curiosity why not just save the file as a CSV?
Writing the code. I have no idea where to start. From what I've seen, it's usually done using loops. (For loop seems most popular although a While loop might also work?) My VB knowledge is *very* limited to very basic work with console applications and form applications.
If it is course work.... this is probably not the best place for you to get help. Also you can open a CSV file in notepad, as it is literally a text file with Comma Separated Values.
If your data range is a fixed location, I would use nested for loops for each column in data range for each row in column add cell contents to text file insert comma insert line break in text file 
I hadn't realised you could do that. Thanks
This is just something off the top of my head and may have mistakes in the code but this is what came to mind based on you problem. Good luck! Private function generateTable(byval NumberOfRows as integer) as data.DataTable Dim table1 as new data.datatable("MyTable") table1.columns.add("Value") Dim rand1 as new random(System.DateTime.Now.Ticks) for i as integer = 1 to NumberOfRows table1.rows.add(rand1.next(1,100)) 'The upper bound is exclusive so desired value + 1 = 100 Next return table1 End function
i have already tried uninstalling and re-installing it
Double click on the form1.vb on the right side.
What exactly do you mean by "table"? There are several different types of data types that work as a single dimension table. For the sake of simplicity I'd use a `List(Of Integer)` and make a function like: Private Function GetRandomList(rows as Integer) As List(Of Integer) Dim rand as New System.Random Return Enumerable.Range(0, rows).OrderBy(Function () rand.Next(1, 100)).ToList() End Function
Sorry haha, it's a fixed-size unidimensional array. The way I declared it was: Static intTableau(intTaille) As Integer intTaille represents what the size of the array is going to be, based on a number that the user enters. But what I'm trying to do is assign a random value to each element of the array.
Oh nice. In that case this would do it: Private Function GetRandomList(rows As Integer) As Integer() Dim rand As New Random Return Enumerable.Range(0, rows).OrderBy(Function () rand.Next(1, 100)).ToArray() End Function
Ok, thanks. So would that function also declare the array? Or do I need to to that beforehand (and if so, what do I replace in the function)? Sorry, I'm fairly new to VB.
You can accomplish this using regex or by validating individual portions of the string using Substring. 
It returns a new array... usage should be like Dim numbers As Integer() = GetRandomList(rows)
Try Math.Ceiling() 
I added Math.Ceiling(intTableau(intTaille)) but it didn't change anything, unfortunately
Can split it then using Split() 
VBA is an interpreted language that is always compiled on the fly. it's meant to be embedded into office apps or run via cscript or wscript. I believe this is true for 2010 as well, but feel free to provide a link educating me.
that's vb.NET express, not vba. i don't know what "6.5" you are referring to. VBA versions come with MS Office, and I'm not even sure how to tell what version I have. unless you mean the full visual basic? there was never a 6.5, it topped at VB6.
you should call them out on it. there is no Microsoft Visual Basic 6.5. there is a 6.0 service pack 5, but the latest service pack is SP6, and no service packs change how the code works, just fixes bugs. 
In the select case statement, you aren't checking for "rectangle" or "square", only "both". So if you type rectangle, it never creates the Operation object. change: Case "both" : Operation = CType(Math.Combine(New Math(AddressOf square), New Math(AddressOf rectangle)), Math) to: Case "both","rectangle","square" : Operation = CType(Math.Combine(New Math(AddressOf square), New Math(AddressOf rectangle)), Math)
Your saying to enter Square, Rectangle or Both but your select case is looking for the options of add, subtract or both. Since the user enters square, the select case doesn't find anything and therefore Operation is never set to anything other than Nothing. Fix your select case options. Also, instead of prompting for the second number if square is used, instead check to see if it's not square and if it's not, then ask for the second number. Otherwise, if the user doesn't follow your prompt, it will display an incorrect square result. In short, never depend on the user to follow directions. I would also add a case else statement that ensures that the user is prompted if they didn't enter the proper 3 options with something like a message stating that what the user entered wasn't valid. The error you're receiving is a perfect example, you had the wrong options in your case block, and had you had a case else, it would have prompted you to look deeper as to why rectangle and square were invalid.
you could use CInt() For example Dim p as Double = 2.81739543122 console.writeline(cint(p)) would result in 3 being displayed.
did you even read the question? split is for strings. there are no strings here.
Listboxes are one column. You'll need to figure out a way to make each text element of the listbox have both the value and the index.
No prob, I was a bit more agitated than necessary.
Alright I'll try that, thanks. So I've successfully added the values of the array to a listbox - by any chance, would you have any idea how I would go about adding the indexes to the listbox? Or would I have to make a whole new table?
Let's say all the elements of the listbox are strings. Structure a list box entry like `Dim myEntry As String = "Index: " &amp; index &amp; " Value: " &amp; value` then add it to the listbox items.
Not really sure why they push learning how to use a ListBox for things like this when a listview or datagridview are better suited for multiple columns. That being said, this could be achieved by appending the values into a string with a format Listbox1.Items.add(string.format("{0,3}{1, 15}", value0, value1)) read up on [string.format](http://msdn.microsoft.com/query/dev11.query?appId=Dev11IDEF1&amp;l=EN-US&amp;k=k%28System.String.Format%29;k%28TargetFrameworkMoniker-.NETFramework) which will show you how to position text in a format you specify. What I have shown is that you are inserting 2 values into a string and formatting the 1st value (placeholder 0) at 3 spaces and the 2nd value (placeholder1) at 15 spaces. 
there's not much you can't do, but it may require making lower level Win32API calls, and converting the C++ documentation to VB compatible is a bit of a challenge sometimes.
Thanks, can you help with my other question I have about charts: http://www.reddit.com/r/visualbasic/comments/1vb1xu/how_can_i_swap_these_with_textstring/ ?
Ok, show some code so that we can see how you're populating this chart. This way we can see how the chart is getting its current information. The Charts series has a points collection where you can specify with an index and set an axislabel. Or depending on how you are populating it, you could specify what to use in your data that you are supplying to populate the chart.
see my comment on that topic. I've already started.
So do you want Unbelievable breast? If so are you sure it's not webpageelements.innerText() That's what it is in XML, never done HTML with VB myself.
He's good, but he's a bit slow, if you want something a little faster then try this: http://www.youtube.com/playlist?list=PLqJXDdbv9bT-Eao-2ibYrZyPt_Qj6lf5b Fast, descriptive and to the point.
Ideally you should structure your program so that it gets to the end of the Main sub to exit.
Nope, this isn't working for some reason. :( For i = 0 To intTaille dblTableau(i) = Rnd() * 99 Console.WriteLine(CInt(dblTableau(i))) Next The first line after the for is to randomize the contents of dblTableau, and the second one is the one you gave me. But for some reason it's still returning like 10 decimal points for each value in the array. I also tried: For i = 0 To intTaille dblTableau(i) = Rnd() * 99 Math.Round(dblTableau(i)) Next but I didn't have much luck with that either. **EDIT:** Wow, I'm a huge dumbass. I just solved my entire problem by changing the array type from double to integer. &gt;.&gt;
Hi again. [Use more LINQ!](http://msdn.microsoft.com/en-us/library/system.linq.enumerable.range%28v=vs.110%29.aspx) Then use even more LINQ to convert it to an array. You might want to take some time to take a look at all the IEnumerable extensions methods. I keep bringing it up in this subreddit because C#/VB is the only non-functional programming language that natively supports LINQ, but more importantly that using it is damn near cheating because of its' ability to incredibly simplify what (for beginners especially) would otherwise be time-consuming and bug-ridden code.
 Dim Taille As Integer = 7 Dim INDEX As Integer() = New Integer(0 To Taille) {} 
so brave
http://channel9.msdn.com/Series/Visual-Basic-Development-for-Absolute-Beginners 
The entire form ... : Dim intTaille As Integer 'DÃ©clarer intTaille, la valeur qui dÃ©terminera la taille du tableau. Elle est saisie de txtTaille. Dim intTableau() As Integer 'DÃ©clarer le tableau. Il est de la taille de intTaille. Sub CrÃ©erTableau() If txtTaille.Text = "" Or intTaille &lt; 0 Then 'Si txtTaille est vide, ou intTaille est plus petit que 0... MessageBox.Show("Veuiller inscrire une valeur numÃ©rique supÃ©rieure Ã  0.", "Erreur") '...retourner une erreur. ElseIf intTaille = 0 Then 'Sinon, si intTaille est 0... 'Ne rien faire Else 'Si ces cas ne s'appliquent pas... Dim intIndice As Integer() = New Integer(0 To intTaille) {} 'MÃ©langer alÃ©atoirement toutes les valeurs de intTableau Dim zÃ©ro_Ã _intTaille As Integer 'DÃ©clarer zÃ©ro_Ã _intTaille. Il s'agit d'une valeur temporaire pour aider Ã  randomiser le tableau Ã  l'aide d'une boucle "For...Next". Randomize() For zÃ©ro_Ã _intTaille = 0 To intTaille intTableau(zÃ©ro_Ã _intTaille) = CInt(Rnd() * 99) Next End If End Sub Sub AfficherTableau() lstGÃ©nÃ©ration.Items.Clear() 'Vide lstGÃ©nÃ©ration, pour s'assurer de ne pas faire d'erreur avec les donnÃ©es. For taille As Integer = 0 To intTableau.Count - 1 lstGÃ©nÃ©ration.Items.Add(String.Format("{0,3}{1,30}", intTableau.Length, (intTableau(taille)))) Next End Sub Private Sub btnGÃ©nÃ©rer_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnGÃ©nÃ©rer.Click intTaille = CInt(Val(Me.txtTaille.Text)) ReDim intTableau(intTaille) CrÃ©erTableau() AfficherTableau() End Sub
This looks promising. Thanks for the link.
Thanks for the link. I'll check this out. 
http://www.visual-basic-tutorials.com/ Is pretty good.
This worked perfectly. Thanks very much for the help.
For some reason, it's just returning 0's... :( I'm looking to make it so this happens (assuming Taille in this case is 8): INDEX(0) = 0 INDEX(1) = 1 INDEX(2) = 2 INDEX(3) = 3 INDEX(4) = 4 INDEX(5) = 5 INDEX(6) = 6 INDEX(7) = 7 INDEX(8) = 8 Of course, if Taille was 72, it would go all the way up to 72. Here's the code I have currently for that section: Sub AfficherTableau() Dim INDEX As Integer() = New Integer(0 To Taille) {} lstGÃ©nÃ©ration.Items.Clear() 'Vide lstGÃ©nÃ©ration, pour s'assurer de ne pas faire d'erreur avec les donnÃ©es. For i As Integer = 0 To intTableau.Count - 1 lstGÃ©nÃ©ration.Items.Add(String.Format("{0,3}{1,20}", INDEX(i)), (intTableau(i)))) Next End Sub "Taille" is declared farther up, in a public class: Dim Taille As Integer Taille gets its value assigned in a different sub: Taille = CInt(Val(Me.txtTaille.Text))
There is no logical difference. It's just easier to read and write a select case statement when you are checking many conditions on one thing. 
They are similar in concept and, mostly interchangeable. They each have places where they will perform better, or provide a better way of dealing with something. In some cases the compiler may even compile a very short CASE statement into an IF when compiling to IL. IF works extremely well for two choices, but can also be used for using different objects or variables to make branching descisions. simple branching logic If someBooleanVariable = true then doTrueThing Else doFalseThing End If IF can also be used with "and" and "or" comparisons on multiple variables If option1 = True or option2= True then doSomething end if If firstName = "Jim" and lastName = "Smith" then messagebox.show "you found jim!" end if using "else if" can allow you to make multiple choices ... also notice we're comparing completely different objects and their properties. If someObject.someProperty = 1 then doThingOne else If anotherObject.Property = 1 then doSomethingDifferent else doAThirdThing end if CASE is more appropriate when you are checking a single variable for lots of different possible values, especially if you can use an enumeration. select case i (simple integer containing a number) case 1 .... case 2 .... case 3 .... case 4 .... case 5 .... case 6 .... end select Case can also be used to evaluate variables like "If" can Select case employee.totalHours case is &lt; 1.00 &lt;&lt; less than case 2.00, 3.00 &lt;&lt; multiple values , but without the "or" needed for IF statements case 4.00 - 500 &lt;&lt; between two values, a bit less verbose than IF would be (if employee.totalhours &gt; 4 and employee.totalhours &lt; 5 .....) case else &lt;&lt; all other values end select Select case is also particularly useful with enumerations. enum JobTypes Cook Janitor Dishwasher Manager end enum dim job as JobTypes = getJobType ( ... imaginary function that does something and returns a job....) select case job case Cook payRate = 10.50 case Janitor payRate = 9.68 case Dishwasher payRate = 8.75 case Manager payRate = 15.00 end select 
wow thank you! Thanks for the help
Very good post. Need to clarify it though- what you're talking about is an [Enumeration](http://msdn.microsoft.com/en-us/library/8h84wky1.aspx), not an [Enumerator](http://msdn.microsoft.com/en-us/library/78dfe2yb%28v=vs.110%29.aspx). They are two completely different things :)
An often overlooked use for Select Case is to check for when multiple conditions might be true For example, say you had a value (MyValue) that could fall between certain ranges and you had to perform different actions depending on the range Select Case True Case Myvalue = 47 'Do stuff Case Myvalue &gt; 57 and MyValue &lt; 95 'Do stuff Case Myvalue = 96 'Do stuff Case Myvalue &gt; 122 And Myvalue &lt;126 'Do stuff End Select 
One of the best posts I've seen in this sub. Thank you, sir.
well depending on what service you are using to send, your own mail server or google or even yahoo should not mark mail as spam. the trick is to enter a subject randomly. ie a few say "hello sir" a few other say "why" and so on.. all depending on the the filter is configured. but my spammer bypasses the spam filters. never been marked as spam so ive never had to implement any kind of code to bypass them. what you could try doing is setting "Sslenabled = true" &lt;-- that may work. 
 Dim Taille As Integer = 8 Dim INDEX As Integer() = (From oneNumber In Enumerable.Range(0, Taille + 1) Select oneNumber).ToArray() For i As Integer = 0 To Taille Console.WriteLine("INDEX({0}) is {1}", i, INDEX(i)) Next 
I found this: http://msdn.microsoft.com/en-us/library/aa719104%28v=vs.71%29.aspx#docum_topic4 But it's only able to change the volume of it's own session and not anything else. I need something that can work on Windows Vista onward.
Do it all at once, loop through the array and ... If the mod result = 0 then 'Place in even listbox else 'Place in odd listbox End if Use the add method of the items collection for adding to the listbox yourListbox.Items.Add(yourValue)
This gives great examples for refreshing my memory. Thanks for the link.
Alright, but how would I go about adding the even numbers to the listbox? As in, what would I put for the value?
Perfect, thanks. :)
Give me a sample code of what you've attempted. It appears you don't have an understanding of how arrays work with the sample line of text you showed. Let me ask this: How would you display the 2nd element of the array in a messagebox? Suppose you have an array called myIntegers() where the 2nd element is the number 5. What would you put in the parameters of the messagebox to display a messagebox showing the number 5? MessageBox.Show(what would you put here?) 
Just don't do all his homework for him, or he will never learn...
&gt;Let me ask this: How would you display the 2nd element of the array in a messagebox? MessageBox.Show(myIntegers(1)) What I'm asking is, if I've found which values (of the array) are even, using this: If intTableau(-1) Mod 2 = 0 Then how would I go about actually *putting* them into the listbox? You originally gave the example of yourListbox.Items.Add, but what would I put as the value?
first intTableau(-1) should be throwing you an error. But in answer to your question, you would add the value your modding with 2 to see if it = 0.
Alright, so what exactly should I put instead of the (-1)? I was under the impression that the index (-1) referenced all the elements of the array. Just to clarify, intTableau is an array, and its size is controlled by another variable called intTaille. Dim intTaille As Integer Dim intTableau() As Integer Private Sub btnGÃ©nÃ©rer_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnGÃ©nÃ©rer.Click intTaille = CInt(Val(Me.txtTaille.Text)) ReDim intTableau(intTaille) End Sub
If you want to display data in a grid format (like Excel), then I'd use a grid control. There's a very basic tutorial here that will help you get started. http://www.youtube.com/watch?v=u4kP8M4bN0Y You'll have to add a reference to the MSFlexgrid.ocx to the project first. 
how about Select Case? 
you don't need 2 dimensional arrays for this. you can do a series of if's, something like "if w&gt;=7 and w&lt;=13", but a select case or modulo would be a lot cleaner
typically you would use a loop to iterate through an array. a For Loop would be a good start as it allows you to define an iterator variable which you can use to specify the index of the array with each iteration. For x as Integer = 0 to yourArray.Count -1 'Now x will increment from 0 to the last element of the array If yourArray(x) mod 2 = 0 then 'store to the even listbox else 'store to the odd listbox end if Next as the loop progresses, the value of x changes so that you can check each element of the array with the current index value that the iterator supplies. 
Okay, thanks. That actually helped me understand for...next loops a lot, I used to find them really confusing. I just have one more question, though. The rest of this is clear, but there's one thing I still don't know: what to put where you typed "'store to the even listbox". I know it would be using List1.Items.Add(), but I don't know what I'd put in the brackets. I've tried List1.Items.Add(my_array(x)) and List1.Items.Add(my_array()) and List1.Items.Add(my_array(-1)) but none of them have worked. They don't even throw back an error (except that second one).
To be fair, they are being taught VB6 instead of .NET and VB11 ..... so nothing else about this surprises me. 
Lets see your code so far for this. The first one should work as long as this is happening inside the loop. Remember, the iterator (x) in the for loop is only useable inside the loop unless you declare it in a wider scope, but that is not necessary for this particular block of code. 
Well, unless I'm missing it. You have this code in a sub called NombresPairs but I never see anywhere where you are calling that sub. And another thing to note. Every time you reDim and array you lose everything you have stored in it unless you specify Preserve. Currently you're reDimming it in your button click and in your comparison sub (NombresPairs)
Your code does work as expected if you call the NombresPairs sub. It will work as you would like it to once you fix the ReDim issue you have with your code. 
Wow... my mistake, haha. Sorry for wasting your time with that, and thanks for the help :)
This may be more then you wanted, but I created a sample project that does what I think you are trying to do and expands on it. [You can download the source code here](https://dl.dropboxusercontent.com/u/65025116/ControlArray.zip) if you don't want to see it all I rewrote the load routine as '--------------------------------------------------------------------------------------- ' Procedure : CmdBuildTable_Click ' Author : Molson8Dry ' Date : 19/01/2014 ' Purpose : '--------------------------------------------------------------------------------------- ' Private Sub CmdBuildTable_Click() Dim Col As Long Dim Row As Long Dim orgTop As Long, ctlTop As Long Dim orgleft As Long, ctlLeft As Long Dim CurIdx As Long Dim orgWidth As Long, orgHeight As Long Dim ctl As TextBox, lbl As Label On Error GoTo CmdBuildTable_Click_Error NumberOfRows = CLng(Me.TxtNumberOfRows) NumberOfCols = CLng(Me.TxtNumberOfColumns) NumberOfCells = NumberOfRows * NumberOfCols If NumberOfCells &gt; 32000 Then MsgBox "Pick a smaller number of rows or columns! Your current selection will create " &amp; NumberOfCells &amp; " Controls", vbCritical Me.TxtNumberOfRows.SetFocus Exit Sub End If CmdBuildTable.Enabled = False Me.TxtNumberOfRows.Enabled = False Me.TxtNumberOfColumns.Enabled = False Me.txt(0) = "" Me.LblAddress.Visible = True orgTop = Me.txt(0).Top orgleft = Me.txt(0).Left orgWidth = Me.txt(0).Width orgHeight = Me.txt(0).Height CurIdx = 0 For Row = 0 To NumberOfRows - 1 For Col = 0 To NumberOfCols - 1 ctlTop = orgTop + (Row * orgHeight) ' Precalculate the coordinates ctlLeft = orgleft + (Col * orgWidth) SetRowLabel Row, Col, ctlTop ' display the row label SetColLabel Row, Col, ctlLeft ' display the col value If Row &lt;&gt; 0 Or Col &lt;&gt; 0 Then ' if we are on row 0 and col 0 we created this text box in ' design time no need to load it Load txt(CurIdx) ' create the text box End If Set ctl = txt(CurIdx) ' and keep a reference ' now set the position of the control ctl.Top = ctlTop ctl.Left = ctlLeft ctl = "" ctl.Visible = True CurIdx = CurIdx + 1 Next Col Next Row '---------------------------------------------- '-- enable the button to allow the table to be '-- recreated '---------------------------------------------- DrawBorder CmdReset.Enabled = True On Error GoTo 0 Exit Sub CmdBuildTable_Click_Error: MsgBox "Error " &amp; Err.Number &amp; " (" &amp; Err.Description &amp; ") in procedure CmdBuildTable_Click of Form FrmMain" End Sub I've added error handling and some niceties, the code is commented and should help you understand. If you have any other questions ask 
THANK YOU!
Have a form called StartForm or something like that and set that as your StartupForm. When they click the StartButton it opens your main game form and then closes itself (me.close)
Create a second form called (for example) Form_2 and add a public sub to it called Run: Public Sub Run() ShowDialog() End Sub Then in your start button on your first form, create an instance of your new form and call Run() Dim form As New Form_2 form.Run() There are other ways to do it but that's just one of the easiest. 
you can't solve this one with 2d arrays anyway. form controls can only be in normal 1D arrays.
or use the .locked property
You can do it a number of ways. I like to so it as a dialog box and use show Dialog1.show Do some stuff Dialog1.close 
well first thing first, always instantiate a form and perform property changes on the copy not the original. Thus if you want to have multiple copies of the form all with different shapes and sizes you can. Sub Main() Dim newForm as new form1 newform.width = 100 newform.height = 100 newform.show End sub you could replace he newform.width/height with your line of code if you want. If you want this to work you could do it this way as well in the form1_load do this me.size= new system.drawing.size(100,100) Your code is correct but you are referring to the form incorrectly with form1.size.... 
You can also specify a splash form in your project properties.
[Do this](http://i.imgur.com/cXgmkWI.png) then [this](http://i.imgur.com/HziAWk5.png).
best help ever! thanks
There are other ways to get your events going, and it's good to browse what events there are so you know for the future. Since I'm in a picture mood [here is what triggers the event](http://i.imgur.com/gWEvSI1.png) and this [is the event](http://i.imgur.com/OwGc640.png).
Are you the student or the teacher? Good luck to you regardless!
Your project tells you to use a control array... I hope we can save programming from the education system
I'm the teacher. I put a lot of work into the two courses (VB and C#) and hope you get a lot of learning out of them!
You can use your fill command directly on your datatable, there's no need to fill a dataset then turn it into a table. Have you guys taken SQL command objects? For the sqlAdapter you need a connection string and a command Object. Here is a function I use to get data from a sqladapter, and it take as a parameter a string sql query(SELECT name FROM names) and returns a datatable: Private Function getSQLData(ByVal sqlCmd As String) As DataTable Dim cmd As New SQL.SqlCommand() Dim cnn As New SQL.SqlConnection(connestionstring) ' Your connection string here Dim sqlDT As New DataTable With cmd .Connection = cnn .CommandText = sqlCmd .CommandType = CommandType.Text End With Dim da As New SQL.SqlDataAdapter() da.SelectCommand = cmd da.MissingSchemaAction = MissingSchemaAction.AddWithKey da.Fill(sqlDT) ' fill automatically opens/closes the connection Return sqlDT End Function Edit - by the way I imported sqlclient with Imports SQL = System.Data.SqlClient That's why you see the SQL. stuff, if you just did Imports System.Data.SqlClient you can remove the SQL.
thanks, your function seems to work. I think I understand it after looking up stuff on msdn; however I don't know what the MissingSchemaAction action stuff does.
It fills in some additional information you might need later on. [Here is an article](http://support.microsoft.com/kb/310128)
VB is not a bad programming language, its has the same underlying engine as MS C# and C++ and a couple of others (.NET) Learning to code is about thinking a little differently. If I could give any advice to a new programmer I would say "There is no wrong way to solve a problem, only better ways" I would follow this up with "If a problem is to big break it down into smaller steps and work one step." Would it be possible to see the original problem I would like to take a run at it with the correct technologies, more than willing to share, and teach how it would be done in the real world. 
This is the correct way.
Filedialog.showdialog is what you are looking for. Then you'll want to use the filedialog.fileNames property (not .filename which is only used when multiselect is false). ........ fileDialog.RestoreDirectory = True fileDialog.Multiselect = True fileDialog.ShowDialog() For Each fileName As String In fileDialog.FileNames 'do something with file name here Next Not sure what you are looking for with directory info, but: My.Computer.FileSystem.GetDirectoryInfo (path to directory) will return a DirectoryInfo object that you can use. 
This worked, thanks. I just have another question: how would I decrease the value if it isn't checked? Say, since the base value is 15 and the checkbox adds 2, it would be 17 on startup, but then if I uncheck it, I want it to go back down to 15. Any ideas?
 Private Sub chk_CheckedChanged(sender As System.Object, e As System.EventArgs) Handles chk.CheckedChanged If chk.Checked = True Then intTotal += 2 Else intTotal = 15 End If End Sub
http://msdn.microsoft.com/en-us/library/ms173099.aspx 
thank you!
Thank you for this. My ROV sends data in packets of 16 bits up through an umbilical cord. I then need to decode this serial data and then display it. Is there any specific code/tutorials that you know of for dealing with serial data in VB?
This is a great resource for starting out. It'll teach you the basics of forms, menus, loops and debugging. http://www.homeandlearn.co.uk/NET/vbNet.html You could probably whizz through that in less than a day! Especially if you've had coding experience before.
http://thenewboston.org/list.php?cat=39 FREE!
this really is a googlable set of questions
 ' they are using vb6 in a grade 11 CS course??? wtf? 
I started doing this and then I thought, lazy bastard go and google. 
If you are going to do this as a career then I would recommend learning .net and then move onto C#, for all of the Microsoft certifications now are C# based [Microsoft Cert Paths](http://download.microsoft.com/download/1/0/9/109AE5B6-BFB5-47DF-98AF-7361A1FDC51A/MTA_CertPaths.pdf) You can become an MTA buy doing 1 exam (I recommend 361 Software Development for it is the first one for all MCSD paths and it gets you your MTA) I love coding in VB really I do, to someone new I would suggest learning C#/JAva for there is more work available. TO be fair once you learn C# you will know enough in .NET to get buy in VB 
Don't troll the guy, if he deserves to fail then he will without your help. Hopefully he'll go to Google and look up these methods instead.
One thing to get into the habit of is to specify the columns and the values in an INSERT statement. There is too much room for error otherwise. So... Looking at your insert statement, I would try the following myDataAdapter.InsertCommand = New SqlCommand("insert into names ([name]) values (@name) ", objConn) ' this is the insert statement, here is my problem This uses a named parameter to house the variables you introduce and securely inject that value into your statement. Notice that I am specifying the field and defining it's value. This is done for each field and value you want to insert. It also makes it easier to follow what is happening in your statements. However, in order to do this you need to define a parameter. We can do this with the Parameters property that is part of the InsertCommand. After fixing your insert statement, place the following code directly after it. myDataAdapter.InsertCommand.Parameters.Add("@name", SqlDbType.VarChar, 50, "name") So we have assigned the parameter @name from our insert statement to our parameter collection and specified that it is a Varchar(50) field and the name of the column in the database is "name". Other than that, it would appear that your code would work. 
You could use a for each along with an OfType giving you a list of pictureboxes that exists on your form. Of course, you would probably need to set a unique .tag or something to figure out which one at random is a different color For each pb as PictureBox In me.Controls.OfType(Of PictureBox)() pb.BackColor = ... If pb.Tag = the random one chosen Then pb.BackColor = different color End If Next
thank you! 
You can use the ResourceManager's getobject method. Picturebox1.Image = My.Resources.ResourceManager.GetObject("1.jpg") So you would build a string based off your result Dim picToOpen = randomresult.ToString &amp; ".jpg" Picturebox1.Image = My.Resources.ResourceManager.GetObject(picToOpen) Keep in mind the name is case sensitive and needs to match exactly as it's specified in the resources.
So I used the following code and it didn't work. Any ideas why? (I dimmed the variables at the beginning of the code) Private Sub random() Randomize() number = 1 For Each pb As PictureBox In Me.Controls.OfType(Of PictureBox)() pb.Tag = number number += 1 Next special = Int(295 * Rnd() + 1) For Each pb As PictureBox In Me.Controls.OfType(Of PictureBox)() If pb.Tag = special Then If level = 1 Then pb.BackColor = Color.Red ElseIf level = 2 Then pb.BackColor = Color.Orange ElseIf level = 3 Then pb.BackColor = Color.Yellow ElseIf level = 4 Then pb.BackColor = Color.Green ElseIf level = 5 Then pb.BackColor = Color.Blue ElseIf level = 6 Then pb.BackColor = Color.Indigo ElseIf level = 7 Then pb.BackColor = Color.Violet End If Else number2 = Int(5 * Rnd() + 1) If level = 1 Then If number2 = 1 Then Me.BackColor = Color.Orange ElseIf number2 = 2 Then Me.BackColor = Color.Yellow ElseIf number2 = 3 Then Me.BackColor = Color.Green ElseIf number2 = 4 Then Me.BackColor = Color.Blue ElseIf number2 = 5 Then Me.BackColor = Color.Indigo ElseIf number2 = 6 Then Me.BackColor = Color.Violet End If ElseIf level = 2 Then If number2 = 1 Then Me.BackColor = Color.Red ElseIf number2 = 2 Then Me.BackColor = Color.Yellow ElseIf number2 = 3 Then Me.BackColor = Color.Green ElseIf number2 = 4 Then Me.BackColor = Color.Blue ElseIf number2 = 5 Then Me.BackColor = Color.Indigo ElseIf number2 = 6 Then Me.BackColor = Color.Violet End If ElseIf level = 3 Then If number2 = 1 Then Me.BackColor = Color.Orange ElseIf number2 = 2 Then Me.BackColor = Color.Red ElseIf number2 = 3 Then Me.BackColor = Color.Green ElseIf number2 = 4 Then Me.BackColor = Color.Blue ElseIf number2 = 5 Then Me.BackColor = Color.Indigo ElseIf number2 = 6 Then Me.BackColor = Color.Violet End If ElseIf level = 4 Then If number2 = 1 Then Me.BackColor = Color.Orange ElseIf number2 = 2 Then Me.BackColor = Color.Yellow ElseIf number2 = 3 Then Me.BackColor = Color.Red ElseIf number2 = 4 Then Me.BackColor = Color.Blue ElseIf number2 = 5 Then Me.BackColor = Color.Indigo ElseIf number2 = 6 Then Me.BackColor = Color.Violet End If ElseIf level = 5 Then If number2 = 1 Then Me.BackColor = Color.Orange ElseIf number2 = 2 Then Me.BackColor = Color.Yellow ElseIf number2 = 3 Then Me.BackColor = Color.Green ElseIf number2 = 4 Then Me.BackColor = Color.Red ElseIf number2 = 5 Then Me.BackColor = Color.Indigo ElseIf number2 = 6 Then Me.BackColor = Color.Violet End If ElseIf level = 6 Then If number2 = 1 Then Me.BackColor = Color.Orange ElseIf number2 = 2 Then Me.BackColor = Color.Yellow ElseIf number2 = 3 Then Me.BackColor = Color.Green ElseIf number2 = 4 Then Me.BackColor = Color.Blue ElseIf number2 = 5 Then Me.BackColor = Color.Red ElseIf number2 = 6 Then Me.BackColor = Color.Violet End If ElseIf level = 7 Then If number2 = 1 Then Me.BackColor = Color.Orange ElseIf number2 = 2 Then Me.BackColor = Color.Yellow ElseIf number2 = 3 Then Me.BackColor = Color.Green ElseIf number2 = 4 Then Me.BackColor = Color.Blue ElseIf number2 = 5 Then Me.BackColor = Color.Red ElseIf number2 = 6 Then Me.BackColor = Color.Indigo End If End If End If Next End Sub
Oh. I tries to change the color of the pb so I need to change it from "me.backcolor." Thanks! 
You got any code attempts at this? What you're describing is kind of confusing. Perhaps even a copy of the actual assignments directions would help us to help you.
The subroutine should title Column A as p and Column B as D, that is, the change in p from the previous iteration. Then beginning in Cells A2 and B2 and going down, output the successive terms of p. Stop the iteration after the first 200 terms, or if an additional term does not change the value of p by more than 10-10. 
I've seen this trouble is I want to incorporate it into a form I'm fairly new to VB, do you know how I would convert this code so that I could use it in a form. (I am trying to create a GUI). 
I was able to get it on my own. Thank you!
in that example, indata is a string variable that holds the data received from the com port. Instead of console.writeline (which produces output to the command console) you might instead use TextBox1.Text = indata That being said, you will not have a sub main. So the block of code that resides in the sub Main() routine might be placed in your Form_Load event or maybe even a button_click event. Just make sure you set your setting (baud, parity, etc...) correctly or you could get garbled text from your serial port. 
Thanks a lot mate I got it working :D
Not sure I was a lot of help, but glad to hear just the same. :)
Quick note. Look up info on "Select Case", good alternative to several If Else statements. Also, you can use += or -= when adding or subtracting a number. Eg. "ticks -= 1" will do the same as "ticks = ticks - 1" If nobody has responded or you haven't figured it out I'll look into it at work tomorrow.
it mans that your GenericSendmail object does issue the proper HELO or ELHO smtp command using the full domain^(1) of your client, or that your PC isn't configured with one but the server requires it. ^(1) such as, sending foo instead of foo.domain.local 
The only issue I have with this is it makes it harder to convert my code to c#
I would try "myForm.sendToBack()" when it opens, which might keep focus on the game. Other than that I dunno, I'm quite a newb to VB myself :P
I usually tie it to the state of the checkbox Private Sub ChkTitle_CheckedChanged(sender As Object, e As EventArgs) Handles ChkTitle.CheckedChanged LblTitle.Visible = ChkTitle.checked End Sub OR Private Sub ChkTitle_CheckedChanged(sender As Object, e As EventArgs) Handles ChkTitle.CheckedChanged if ChkTitle.Checked then LblTitle.Visible = True Else LblTitle.Visible = false End If End Sub Yell your teacher to stop using the old vb6 naming conventions it's now common to use names like; labelTitle or checkTitle Hell most of the time if there are only a few of a single type of control on page I will just call it "title" O hand CamelCase sucks in a production environment. Do yourself a favour and get yourself a copy of [JustCode](http://www.telerik.com/products/justcode.aspx) it deal with a pile of little things like helping with casing and code standards. Here is a copy pasta from Micro$oft about the standard. * Begin each separate word in a name with a capital letter, as in FindLastRecord and RedrawMyForm. * Begin function and method names with a verb, as in InitNameArray or CloseDialog. * Begin class, structure, module, and property names with a noun, as in EmployeeName or CarAccessory. * Begin interface names with the prefix "I", followed by a noun or a noun phrase, like IComponent, or with an adjective describing the interface's behavior, like IPersistable. Do not use the underscore, and use abbreviations sparingly, because abbreviations can cause confusion. * Begin event handler names with a noun describing the type of event followed by the "EventHandler" suffix, as in "MouseEventHandler". * In names of event argument classes, include the "EventArgs" suffix. * If an event has a concept of "before" or "after," use a suffix in present or past tense, as in "ControlAdd" or "ControlAdded". * For long or frequently used terms, use abbreviations to keep name lengths reasonable, for example, "HTML", instead of "Hypertext Markup Language". In general, variable names greater than 32 characters are difficult to read on a monitor set to a low resolution. Also, make sure your abbreviations are consistent throughout the entire application. Randomly switching in a project between "HTML" and "Hypertext Markup Language" can lead to confusion. * Avoid using names in an inner scope that are the same as names in an outer scope. Errors can result if the wrong variable is accessed. If a conflict occurs between a variable and the keyword of the same name, you must identify the keyword by preceding it with the appropriate type library. For example, if you have a variable called Date, you can use the intrinsic Date function only by calling DateTime.Date.
Thanks!
I don't know what your variable values like watts.value and lat.value are, but raising them to the power of 57.2957795 is going to probably yield some huge numbers. You could try using a System.Numerics.BigInteger instead.
When I put this problem into [Wolfram Alpha](http://www.wolframalpha.com/input/?i=1368+*+cos%28inv+cos%28sin%2845+degrees%29+*+sin%280+degrees%29+%2B+cos%2845+degrees%29+*+cos%280+degrees%29+cos%28%28%2812-12%29+*+15%29+degrees%29%29%29) it's pretty low. Only 367.3.
Can you provide the values of your variables?
lat's value is 45, dec's is 0, and watts's is 1368.
Thanks for your help, I got it!
1- When I click your link, WA gives 967.3 2- The Math. trig functions take radians, not degrees, and it looks like your conversion is wrong. This gives the correct answer: Dim M as Integer Dim conv as Double = Math.PI / 180 M = watts.Value * (Math.Cos((Math.Acos((Math.Sin(lat.Value * conv)) * (Math.Sin(dec.Value * conv)) + (Math.Cos(lat.Value * conv)) * (Math.Cos(dec.Value * conv)) * (Math.Cos(((12-12) * 15))))))) TextBox1.Text = M
It's actually not homework, i'm trying to make a small game, where you can buy and sell stuff. You should be given a specifik amount of money, like 4$ every 10th second or so, and then again, when you buy something it should minus from that **label** where the counter/value is. So fx. I have 125$ and i'm given 4$ every 10th seconds. After 1 minute (24$ later) i want to by, a DVD, and it costs 20$. So now i have to: 149-20, and it the loop should still count +4$ every 10th second.. AND i then sell a Bicycle to the price of 150$, 1 minute after i bhougt the DVD, so now its: 153+150. and stil it should work with a +4$ every 10th second. The problem is, i've been struggling to get the right loop to have the 4$ each 10th sec, to work in a label. And how to you code in a label, without it should be a: handles label.click? Code in the actual Form?
annnnnnd i forgot to paste the code: Private Sub CalculateButton_Click(ByVal sender As System.Object, e As System.EventArgs) Handles CalculateButton.Click 'Calculate the balance! Dim AccountBalance, DepositAmount, WithdrawalAmount As Decimal Try If DepositRadioButton.Checked Then DepositAmount = Decimal.Parse(TransactionAmountTextBox.Text) Else WithdrawalAmount = Decimal.Parse(TransactionAmountTextBox.Text) End If AccountBalance = DepositAmount - WithdrawalAmount BalanceTextBox.Text = AccountBalance.ToString("C") Catch TransactionException As FormatException MessageBox.Show("Entry must be numeric.", "Data Entry Error", MessageBoxButtons.OK, MessageBoxIcon.Exclamation) With TransactionAmountTextBox .Focus() .SelectAll() End With End Try End Sub
You're using = and overwriting the variables every time. Use += or -= to add or subtract... If DepositRadioButton.Checked Then DepositAmount += Decimal.Parse(TransactionAmountTextBox.Text) Else WithdrawalAmount -= Decimal.Parse(TransactionAmountTextBox.Text) &lt;&lt; assuming a positive number End If
Not what you are going to want to hear, but I'd seriously consider dumping VB6 this and start over in VB.NET. VB6 is way old and and very feature limited, especially in the graphics department. You can get VB11 for free (Visual Studio 2012 or VS 2013) and you'll find the graphics support to be far superior. 
Well if you are stuck with VB6 then you will need to use API calls for transparency. the [BitBlt](http://support.microsoft.com/kb/147810) structure is what you need. it allows the ability to copy and image from a source to a dc and set transparency to a specific colour on pallett. so make the background of your image RGB(0,255,255) and then use the bitblt function to copy from a memory instance to the destination. It has a few other features like pallett cycling. as for collision the best resource I found was an older one called [Basic Collision Detection](http://devmag.org.za/2009/04/13/basic-collision-detection-in-2d-part-1/) from Devmag Seriously though you would be better of using [Construct 2](https://www.scirra.com/construct2) and get your feet wet that way. Or getting into XNA in .net (Even though XNA is being depricated) There is also the [Light Weight Java Game LIbrary[http://www.lwjgl.org/] and since Java is free you can get either net beans or eclipse running in about 30 minutes. Hope that helps 
&gt; http GET/POST I don't have parse json or anything like that? I'm looking to make a windows form application
there's json libraries for .net
You are missing a ".text" on txtbTankGallons in your second integer.parse call. 
this reminds me of how i used to be confused about default properties. took me longer than it should have to realise why i couldnt' understand half of the code samples
you know, I get that is a help channel and all, but jesus h christ just a ask a question that can't be googled https://www.google.com/search?q=json+.net 
Thank you :D I was considering trying out Java again, since I know pretty much all of the basics. And the referrence for the collision detection definitely helped out. 
Haha, I know. People have been telling me that left and right. I think I was just drawn to VB6 because it was the first programming language I messed around with yeeeaarrss old. Nostalgia, I guess. Thanks for the recommendation though~
Have you tried changing the And to Or in the code to see what it prints? On second thought I think you're having a minor issue with interpretation (I don't blame you I think the question isn't worded too well) -- to make the output similar to the others, shouldn't you just have it print "You have selected Sprint or you have selected a plan with a data package." ?
Thanks for the reply. At first I thought the same thing so I did change the OR operator to an AND, and I also worded it something similar to what you suggested but then I discovered why it wants it to be two separate statements. For example, in the last ElseIf where it mentions Verzion it assumes that the user will input the right combination to display "You have selected Verizon and No Data Package" but if the user selected Verizon with a data package it needs to default to "or they have selected with a Data Package". Here is the entire code just in case I'm not explaining anything too well. Module Module1 Sub Main() 'local Variables Dim mobileProvider As Integer = 0 Dim dataOption As Integer = 0 Dim dataPackage As Boolean = True Call inputOptions(mobileProvider, dataOption, dataPackage) Call displayProvider(mobileProvider) Call displayChoices(mobileProvider, dataOption, dataPackage) 'pause Console.WriteLine("Press any key to continue...") Console.ReadLine() End Sub Sub inputOptions(ByRef mobileProvider As Integer, ByRef dataOption As Integer, ByRef dataPackage As Boolean) Console.WriteLine("Enter 1 for ATT, 2 for Sprint, and 3 for Verizon") mobileProvider = Console.ReadLine() Console.WriteLine("Enter 1 if you want a data package, or 2 if you do not") dataOption = Console.ReadLine() If dataOption = 1 Then dataPackage = True Else dataPackage = False End If End Sub Sub displayProvider(ByRef mobileProvider As Integer) Select Case mobileProvider Case 1 Console.WriteLine("You selected ATT") Case 2 Console.WriteLine("You selected Sprint") Case 3 Console.WriteLine("You selected Verizon") Case Else Console.WriteLine("You did not select a valid option") End Select End Sub Sub displayChoices(ByVal mobileProvider As Integer, ByVal dataOption As Integer, ByRef dataPackage As Boolean) If mobileProvider = 1 And dataPackage = True Then Console.WriteLine("You have selected ATT with a Data Package") ElseIf mobileProvider = 2 Or dataPackage = True Then Console.WriteLine("You have selected Sprint with a Data Package") ElseIf mobileProvider = 3 And dataPackage = False Then Console.WriteLine("You have selected Verizon and No Data Package") End If End Sub End Module 
 If mobileProvider = 1 And dataPackage = True Then Console.WriteLine("You have selected ATT with a Data Package") ElseIf mobileProvider = 2 Or dataPackage = True Then Console.WriteLine("You have selected Sprint with a Data Package") ElseIf mobileProvider = 3 And dataPackage = False Then Console.WriteLine("You have selected Verizon and No Data Package") End If 
The normal way of doing this is to create a new class (in my case ListBoxManager) with a sub the interacts with a ListBox control. This way you can pass it any listbox at all (name don't matter) and it will fill it. Public Class ListBoxManager Public Sub Fill(targetListbox As ListBox) ' Replace the chunk of code with your open file read functions Dim File(3) As String File(1) = "Dog" File(1) = "Cat" File(3) = "Mouse" 'loop through file and add each item For Each item In File targetListbox.Items.Add(item) Next End Sub End Class To call this you would use; Private Sub Form1_Load(sender As System.Object, e As System.EventArgs) Handles MyBase.Load Dim newListboxManager As New ListBoxManager newListboxManager.Fill(ListBox1) End Sub I would also extend this, to pass the parameter of the file you wish to parse. That way you could load different lists from different files to fill any listbox. p.s. there probably should be a check in the function to make sure the type of control is passed is a listbox that way it wont blow up if you pass it anything else, but meh. 
&gt;p.s. there probably should be a check in the function to make sure the type of control is passed is a listbox that way it wont blow up if you pass it anything else, but meh. Wouldn't this fail to compile since you are explicitly setting the argument As ListBox? Any other type should throw an error at design-time Value of type 'System.Windows.Forms.SomeControl' cannot be converted to 'System.Windows.Forms.ListBox' 
If mobilePrinter is 3 and dataPackage is True then why does it print that the customer has selected Sprint?
You're explaining it pretty well. Overall for an intro/beginner class your code looks good. Let's clean it up a bit... Sub Main() ' local variables Dim mobileProvider As Integer = 0 Dim dataOption as Integer = 0 ' etc These are going to be accessed by multiple methods throughout the program. Adding unnecessary parameters to methods gets kind of annoying after a while, so declare them private at the module level Call inputOptions(mobileProvider, dataOption, dataPackage) Call isn't necessary. It's kind of a leftover from VB6, although from looking at the MSDN page apparently it can be used with anonymous functions. Weird. Also, [method names should use pascal casing](http://msdn.microsoft.com/en-us/library/ms229043%28v=vs.110%29.aspx), so keep that in mind so your variable/etc names are consistent. It may be pedantic at first but if they're not kept in check then things get confusing fast. Console.WriteLine("Enter 1 for ATT, 2 for Sprint, and 3 for Verizon") mobileProvider = Console.ReadLine() I'm too lazy to devote a whole paragraph on why it's bad you're being taught to do this. Long story short do not EVER have [Option Strict](http://msdn.microsoft.com/en-us/library/zcd4xwzs.aspx) enabled and convert your input to text to integers by using [Integer.TryParse](http://msdn.microsoft.com/en-us/library/f02979c7%28v=vs.110%29.aspx). Since I'm a little short on time and your code so far is otherwise good so i'll just write out how I'd do it (minus input sanitization and enums) Module Module1 Private mobileProvider As Integer Private dataPackage As Boolean Sub Main() GetCustomerInput() DisplayChoicesAndProvider() Console.WriteLine("Press any key to exit...") Console.ReadKey() End Sub Sub GetCustomerInput() ' for the sake of time we're just going to use the existing code that otherwise ' does not work when option strict is on, as it should be :) Console.WriteLine("Enter 1 for AT&amp;T, 2 for Sprint, or 3 for Verizon") mobileProvider = Console.ReadKey() Console.WriteLine("Enter 1 if you want a data plan, 0 if you do not") dataPackage = Console.ReadLine() End Sub Sub DisplayChoicesAndProvider() Select Case mobileProvider Case 1 Console.Write("You selected ATT ") Case 2 Console.Write("You selected Sprint ") Case 3 Console.Write("You selected Verizon ") Case Else Console.WriteLine("You did not select a valid provider. ") Exit Sub End Select Console.WriteLine(If(dataPackage, "with ", "without ") &amp; "a data package.") End Sub End Module 
Thanks so much for the advice and new code. It is really much appreciated.
Also, I hope I'm being taught the right way. The whole code I wrote was based off of steps in the book, including the name of the variables and the Call function, etc.
Check out the system.io.streamwriter and streamreader. However, this would be a very good database application but that would take a little more learning. You could also look at writing the file in an XML format which would be a lot easier opening back up and inserting into the proper textfields to allow editing and such.(I'm assuming you are talking about VB.Net and not VB6).
You did not specify which VB so I am going to assume .NET Yes this is possible, you would use a Matrix Rotation to do this. Here is a link to an [article](http://www.informit.com/articles/article.aspx?p=29477&amp;seqNum=9) about GDI+ functions that will do this. You want to look at the RotateTransform function in specific. 
[Pastebin with syntax highlighting](http://pastebin.com/zy1CYzHY)
Do you still need help with this?
I have wondered about this. Is /r/visualbasic about VB6 or is it about vb.net? I have read lots of questions from both sides of the fence.
Looking at the sidebar: &gt;' For the best response, please prefix your posts with the version of Visual Basic you are using. Example: [VB2010], [VB6], etc. It seems like its for both versions.
Makes sense
No, I ended up taking a different approach to get it working. Rather than opening the application on a key press I created an invisible textbox that I send the keypresses to and put the logic in a text_changed event.
Sorry I am using VB 2010 so I'm afraid this won't work (I'm fairly new to VB so please correct me if I am wrong)
I won't tell you exactly how to do it but If I wanted to login to a website, I'd have to register first. So how would I see if the user name is already existing in my database? 
is the exe is on the flash drive? if so System.AppDomain.CurrentDomain.BaseDirectory() will give you the full path that the exe is in, parse as needed to get the drive letter out of it.
It adds the thing after it to the thing before it. In this case, it looks like it is adding the accrued interest (inter * bal) to bal.
Personally, I'd create a class that contains all of the form data as properties. Then you can use an XmlSerializer to read / write the data to and from a file. As a bonus, you can use Object Binding to bind the class properties directly to the data entry controls on the form. http://support.microsoft.com/kb/316730 &lt;&lt; should give you a pretty good idea of how to get started with this. 
adm7373 is dead on, but to clarify even more += takes a variable and adds the equation after to it So if X is 3: X += 2 would become 5 (X=X+2) 
Thats right, the exe is in the drive, and I want to open a hidden folder /Resource/Docs with the button. Thanks very much, I will give it a try and update you once I'm out of bed!
Thanks for the info. 
I think your 'previous' will break if the current is in January - it will give December of the current year, instead of last year? Dim current As New Date(Date.Now.Year, Date.Now.Month, 14) Dim previous as Date = current.AddMonths(-1) (This is off the top of my head - I haven't tested either code)
So that solution ended up not working for me. I managed to solve it by using GetPathRoot on click of the button, and using a hardcode for the rest of the folder structure. Thanks though! Private Sub Button_Click etc. etc. Dim driveLetter As String = IO.Path.GetPathRoot (My.Application.Info.DirectoryPath) Process.Start (driveLetter + "\Resource\Foldername") End Sub
Test it! Dim original As New Date(2014,1,13) Dim previous = original.AddMonths(-1) Console.WriteLine("original = " &amp; original.ToShortDateString()) Console.WriteLine("previous = " &amp; previous.ToShortDateString()) will output: original = 1/13/2014 previous = 12/13/2013 
Yeah, this is definitely the best way to go. You could even challenge yourself a bit and make serialize + deserialize methods that will work with any class. edit the wpf analog would be to use data binding and an inotifypropertychanged implementation so you can bind text boxes etc directly to the data.
I really am a beginner at VB, so is this the most basic way I could do it?
Not sure that it's the most basic. It's kind of a trade off: It will take less code to do a class, binding, and an XmlSerializer, but the concepts are a bit more complex to wrap your head around. Alternately you can take the more straight forward route (from a conceptual point of view), and write the contents of the form to a text file of some sort, making your own storage system up. So lets say I have a textBox, and a checkBox on a form, and I want to save / restore the contents to a simple delimited file: Private Sub Form1_FormClosing(sender As Object, e As FormClosingEventArgs) Handles Me.FormClosing 'when the form closes we build a string of the values, and write it to a file Dim contents As String = txtFirstName.Text &amp; "|" &amp; chkBooleanOption.Checked.ToString 'add more items here ' build a string out of the control properties. Each field has to be converted to a string if it's not a string value by default. IO.File.WriteAllText("Myfile.txt", contents) 'write to a file End Sub Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load 'when we load the form, we get the file from last time (if it exists), and repopulate our controls If IO.File.Exists("Myfile.txt") Then 'don't bother if the file doesn't exist Dim contents As String = IO.File.ReadAllText("Myfile.txt") 'read the entire file into a string Dim fields() As String = contents.Split("|"c) ' split the contents of the file into an array txtFirstName.Text = fields(0) 'repopulate the controls based on where they were saved in the original string chkBooleanOption.Checked = CBool(fields(1)) 'more items would be handled here ... End If End Sub This code would save the two properties to a text file, with a pipe (|) between them. As you can see this is a very simplistic example, and will get harder to manage as the number of controls on the form grow. It's also hard coded to a single form, with a single set of fields, so if you need more data, it will become unmanageable very quickly. 
If we do the opposite, minus the forms data binding because I know nothing about it (and it probably sucks compared to WPF), the process would go something like this... Let's say the form has information about a person, so we construct a `Person` class that has all the relevant fields: Public Class Person Public Property Name As String Public Property Address As String Public Property IsAlive As Boolean Public Property Age As Integer End Class A serialization sub would be [something like](http://msdn.microsoft.com/en-us/library/71s92ee1\(v=vs.110\).aspx): Sub Write(filePath As String, myself As Person) ' boom: Dim serializer As New XmlSerializer(GetType(Person)) Using writer As New StreamWriter(filePath) serializer.Serialize(writer, myself) End Using End Sub This outputs the following xml data, with example values filled in for the `Person`'s properties. &lt;?xml version="1.0" encoding="utf-8"?&gt; &lt;Person xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt; &lt;Name&gt;candyforlunch&lt;/Name&gt; &lt;Address&gt;outer space&lt;/Address&gt; &lt;IsAlive&gt;true&lt;/IsAlive&gt; &lt;Age&gt;177&lt;/Age&gt; &lt;/Person&gt; Loading the data is simple as making a [function like:](http://msdn.microsoft.com/en-us/library/dsh84875\(v=vs.110\).aspx) Function GetPerson(filePath As String) As Person Dim serializer as new XmlSerializer(GetType(Person)) Dim p as Person Using reader As New Filestream(filePath, FileMode.Open) p = CType(serializer.Deserializer(reader), Person) End Using Return p End Function Sure, like he said, the concepts are bit more to wrap your head around (casting, conversion, file streams, `using`), but the huge advantage is that you never ever have to change the load/save stuff as the `Person` grows more complex. 
Forms binding is incredibly awesome! Create a class, add it as a data source, and drag the entire class (or single properties) it onto a form. You can drag it as a grid, or as a single item for data entry. You don't even have to wire up iNotifyPropertyChanged (there are advantages of adding it, but it's not required for simple scenarios). Your version is far superior, and why I suggested it as well. It's also worth noting that once you have more than one person, the text file method I posted becomes useless, where the class method can be handled very easily by wrapping the items in a class that inherits iList (bindingList, list, etc), and serializing the outer class. Totally agree on the ease of maintenance. One of the reasons I continue to use XML for settings files is that you can add a new setting to the class (setting the default value) and never worry about any other code. 
Multiple things to bring up. 1. Yes, you will need a WHERE clause specifying the user and password information to determine if a row exists. 2. Never bring a password back from the database, you can check against it to see if a row is returned but I would not recommend loading a reader up with that information. 3. You should be using a parameterized statement instead of concatenating strings of information. Too susceptible to SQLInjection attacks. 4. You should never store a password in plain text. There are various cryptographic methods to crypt and compare with your data.
Ok thanks for the reply, few questions/answers in response to your points: 1. How exactly do I write the code that does this? From what I've looked at online it should be something along the lines of strQuery = "SELECT Password, Name, Balance " &amp; "FROM Account" &amp; "WHERE CardNumber ='" &amp; cboAccountNumbers.Text 2. If I don't bring the password back, how am I going to be able to compare it with the one the user has entered? 3. I'm new to using VB and MySQL together so I have absolutely no idea what this means. Sorry 4. I know this, but I was going to do it after I had done this first. If I can't get this to work, then there's no point in that.
CharlieMay has it right. As for your Query syntax, you have it close: Bad: strQuery = "SELECT Name, Balance " &amp; "FROM Account" &amp; "WHERE CardNumber " = Val(cboAccountNumbers.Text) Good: strQuery = "SELECT Name, Balance " &amp; "FROM Account WHERE CardNumber='" &amp; Val(cboAccountNumbers.Text) &amp; "' " You had no space between your FROM and WHERE giving you a runon that looked like "FROM AccountWHERE CardNumber". Also, you needed and = on the inside of your string after CardNumber. Store the username or cardnumber (or other identifying item) to a variable and some indicator that the user is authenticated and run all subsequent queries filtering by that identifier.
Ok so I changed the Query. Now it's giving me an error on m_strPass = Convert.ToString(DataReader("Password")) telling me that it "Could not find specified column in results: Password" If I comment out that line, the program will run, but will just keep saying incorrect password entered try again, since (I assume) it doesn't have anything to compare what the user entered against. EDIT: Sorted it! Thanks!
1. See my later reply 2. See my later reply 3. Parameterized statements are statements like "SELECT * FROM MyTable WHERE FName = ?fn AND LastName = ?ln" What this does is it takes user input and checks it to ensure that it is valid for the field and more importantly, that no SQL command has been injected into the statement which could wreak havoc. (ie, injecting a sqlcommand like "DROP Table myTable" or appeasing the WHERE clause by making the result True no matter what the real values are (ie, entering a userID and injecting a statement that ignores the rest of the query, skipping over the check for the password altogether. Here's a blog post I did on a site I frequent: [Sql Injection and why you should care](http://www.dreamincode.net/forums/blog/1510/entry-3159-sql-injection-and-why-you-should-care/) 4. OK, sounds good. 
Ok thanks so much for the detailed replies! I do have a question regarding your If DataReader.HasRows() bit. I've managed to get the program to run now. It runs how I intended it to run. I'll post my refined code below again so you can see it. Do I need to have this if statement in there? Will it make a difference overall? There's a lot more to the program I have to write, this was just the start, so I want to make sure I go about it the right way! Refined Code: Public Class Form1 Dim dbCon As MySqlConnection Dim strQuery As String = "" Dim SQLcmd As MySqlCommand Dim DataReader As MySqlDataReader Private m_strPass As String Private m_decBalance As Decimal Private m_strName As String Private m_strUserPass As String Private m_strCardNumber As String Private Sub Button2_Click(sender As Object, e As EventArgs) Handles btnLogin.Click 'Assign users guessed password to variable m_strUserPass = txtPass.Text 'Invoke RetrieveAccountInformation() ' determine if Password is correct or not If m_strUserPass = m_strPass Then lblWelcome.Text = "Hi" + " " + m_strName Else ' indicate that incorrect password was provided lblWelcome.Text = "Sorry, Password is incorrect." _ &amp; "Please retry ." ' clear user's previous PIN entry m_strUserPass = "" End If txtPass.Clear() ' clear TextBox End Sub ' load application Form Private Sub Form1_Load(sender As System.Object, e As System.EventArgs) Handles MyBase.Load 'Prepare connection and query Try dbCon = New MySqlConnection("Server=localhost;Database=test;Uid=root;Pwd=mysql") strQuery = "SELECT CardNumber " &amp; "FROM Account" SQLcmd = New MySqlCommand(strQuery, dbCon) 'Open the connection dbCon.Open() ' create database reader to read information from database DataReader = SQLcmd.ExecuteReader ' fill ComboBox with account numbers While DataReader.Read cboAccountNumbers.Items.Add(DataReader("CardNumber")) End While 'Close the connection DataReader.Close() dbCon.Close() Catch ex As Exception 'Output error message to user with explaination of error MsgBox("Failure to communicate" &amp; vbCrLf &amp; vbCrLf &amp; ex.Message) End Try End Sub ' invoke when user provides account number Private Sub RetrieveAccountInformation() ' specify account number of record from which data ' will be retrieved dbCon = New MySqlConnection("Server=localhost;Database=test;Uid=root;Pwd=mysql") strQuery = "SELECT Name, Balance, Password " &amp; "FROM Account WHERE CardNumber='" &amp; Val(cboAccountNumbers.Text) &amp; "' " SQLcmd = New MySqlCommand(strQuery, dbCon) dbCon.Open() ' open database connection ' create database reader to read information from database DataReader = SQLcmd.ExecuteReader DataReader.Read() ' open data reader connection ' retrieve PIN number, balance amount and first name ' information from database m_strPass = Convert.ToString(DataReader("Password")) m_decBalance = Convert.ToDecimal(DataReader("Balance")) m_strName = Convert.ToString(DataReader("Name")) DataReader.Close() ' close data reader connection dbCon.Close() ' close database connection End Sub ' RetrieveAccountInformation End Class
Maybe you can explain what you need done like I'm 5? It's difficult to read the extremely long variables, coupled with technical terms (? that's what they are, I'm assuming) like nud and saves, and try to figure out what each of them mean or are supposed to do. On a cursory glance, a possible problem with your original code is trying to count to (nudIncExch.Value / IncrementalPerDayExch). You can only count to integer values, so you may want to do it this way instead: Dim upperCap as Integer = Convert.ToInt32(nudIncExch.Value / IncrementalPerDayExch) For i as Integer = 1 to upperCap ... Next i
something like this: Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click lblCustom.Font = New Font("Verdana", 18, FontStyle.Bold Or FontStyle.Italic) End Sub
Thank you kind sir 
Probably need more info on exactly what the batch files do, and how they are written. Depending upon what the batch files do.... You could rewrite them as VB code, eliminating them completely (This would always be my first choice). You could include the text of the files as a resource of your project and create them from code (then process.start them). If it's just a path issue, you could always just ask where the file is (via a FileOpen dialog). 
Yeah, I guess the best way to put it is I wanted it in an .exe I'm pretty newbie at VB, is there a guide I can use to do this?
In your project in visual studio, make a folder, call it "batch" or something. Then right clickon it And do add existing item. Add your batch files. Select them and in the properties window set them to copy if newer. Now in your process start just change your path to the batch files accordingly, eg: "batch\mybat.bat"
That kinda works. It runs when I test it, but won't run the .bat when I publish it.
Its either because you havent set it to copy, or your process start path is pointing at the wrong place, or the batch file itself requires something missing off the target machine, its own dependencies. This works, ive done the same thing for many projects, starting vnc, running batch files, 7zip, you name it. 
I think I got it. I tried an .exe and it worked. Is there a plugin I can use to properly add batch files? It's not listed as a supported extension.
No, you do it this way. No extension needed. Can you post your process start code? You have to use cmd.com to launch the batch file iirc
I got it! I had to change "Build action" from "None" to "Content" and it works! Thanks!
Glad you got it working :)
Is this a new project, or something that you imported from somewhere else? In the early days of .NET (Visual Studio 2001 / 2003) the code and designer elements were mixed in the same file, so even when upgraded to the newer versions, some old projects will still retain that format for old forms until manually split. On projects started in 2005+ I've never seen that behavior. If you right click on a control, and use the View Code option, does it take you the designer, or the code window? Another thing you could try ... at the top of the solution explorer window, there are several icons. One should be View Code. Also... in the Solution explorer icons, there should be one to Show All Files ... clicking that should toggle between showing hidden files and not. Once they are shown, you should see an arrow next to the forms, that allows you to see the .Designer.vb, and the .resx file for each form. I'm wondering if you are actually seeing them. 
How are you using it? Showing a bit of code always helps us get a better overview of potential issues. 
 So the form itself is just a change calculator and I've only gotten to about the first step and gotten hung up because I can't get it to show dollars. I'm sure it's something stupid that I'm doing. Sorry if I didn't format this correctly for reddit: Option Strict On Private Sub btnCalculate_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCalculate.Click Dim decChange As Decimal Dim decDue As Decimal Dim decPaid As Decimal Dim strChangeDue As String decDue = Convert.ToDecimal(txtAmountDue.Text) decPaid = Convert.ToDecimal(txtAmountPaid.Text) decChange = (decPaid - decDue) strChangeDue = Convert.ToString(decChange) lblChangeDue.Text = strChangeDue FormatCurrency(lblChangeDue.Text, 2) EDIT: I've also tried using FormatCurrency on decChange. 
I've been told that I need to stick to using a file structure like records and arrays I think 
This is a pretty common mistake. FormatCurrency is a function, so it doesn't change what you pass in, but returns a new formatted string. The better way to handle formatting is to do it as you update the label: lblChangeDue.Text = FormatCurrency(strChangeDue,2) 
That worked perfectly! Makes a lot of sense, too. That wasn't made extremely clear by the information given in my notes. Thanks a lot for the help!
How to create an array *embarrassed face*
Template: &gt;dim [variable name]**()** as [type] Having the () makes it an array. Examples: * Example Dims &gt;dim scores**()** as integer &gt;dim names**()** as string &gt;~~dim names as string~~ The last one will not work due to it not having the **()** *Example Value Inputs &gt;**Example 1:** &gt;names(0) = "Joe" *This will make the zeroth value of the array name equal to 'Joe'* &gt;**Example 2:** &gt;for i = 0 to 10 &gt;scores(i) = i &gt;next *This will make a add values 0 to 10 to an array with the indexs of 0 to 10.*
Something like this? Dim LineIndex As Integer = 1 MsgBox(ListBox1.Items(LineIndex))
How would I setup the class can you prove example code
This took an hour and change. Would have been quicker if it was in c# and i was using visual studio + resharper instead of sharp develop... Dim thing = "aatc" Console.WriteLine("input: " &amp; thing) Dim result = thing.GroupBy(Function (o) o) _ .Select(Function (o) New With { .Count = o.Count(), .Character = o.Key}) _ .GroupBy(Function (o) o.Count, Function(o) o.Character) _ .OrderByDescending(Function (o) o.Key) Dim totalEntropy As Double = 0 Dim partialEntropy As Double Dim partialP As Double For Each item In result Console.Write(item.Key &amp; " of chars: ") For Each character In item Console.Write(character) Next partialP = item.Key / thing.Count Console.Write(". p of each " &amp; partialP &amp; ", total p = " &amp; item.Count * partialP) partialEntropy = partialP * Math.Log(partialP) * item.Count totalEntropy += partialEntropy Console.WriteLine() Next totalEntropy *= -1 Console.Write("entropy = " &amp; totalEntropy) Console.ReadKey(True) edit here is output. Also as compiled will possibly not work with `Option Strict On`, which is only `Off` when programming on saturday nights. input: aatc 2 of chars: a. p of each = 0.5, total p = 0.5 1 of chars: tc, p of each 0.25, total p = 0.5 entropy = 1.03972077083992
[I posted a nearly exact response a few days ago](http://www.reddit.com/r/visualbasic/comments/1wzviq/storing_data_entry_in_a_sort_of_file_structure/cf7uwt9)
I cannot thank you enough. Thank you so much for your time and help, I really appreciate it!! 
[Syntax Highlighted code](http://pastebin.com/i6mt2des)
I've done this before.. kind of. I created an InputBox and set SearchString to the user's input. Cells.Find looks for the first instance of the complete string (part of a word or not, so be careful) Dim SearchString as string Dim currentRow as long currentRow = Workbooks("yourWorkbook").Sheets("yourWorksheet").Cells.Find(SearchString).row That will get you the first instance of the search string and give you the row number. It might be easier to just dim currentRow as a range and then use cells.Find(SearchString).EntireRow From there, you can loop through all of the columns in the row. You can also use a loop to use Cells.Find, as there is an optional parameter to look "after" a specific cell. Set it to a variable that stores your last-found cell and you'll always continue your search. You can store your found rows / data in an array and then write an export / copy method to get it where you want after the search is complete and looped. Hope that helps. Side Note: you can also write your found row data into a combo box or other form element, if you don't want it in a separate sheet. 
You do God's work, son. OP: everything looks fine, except that you don't have a Try in the beginning but have a Catch and End Try?
Certainly possible, but why would you want to store the instructions as a string of characters? It might be easier to store them as objects in a queue and dequeue them whenever it comes time for the game to take a new instruction.
Thanks for the reply! It's because for the nature of the game, the instructions must be random, and non-deterministic... I was wondering, could the software be written in vb and the game in c sharp? Or is that not possible (for dim strings to carry across).
as long as it's just a string of characters it would be completely language independent.
The instructions can be random and still stored as objects! A simple Select-Case Random.Next(x), where X is your maximum, will allow you to determine which object is to be pushed into the queue next. The advantage of using an object over a character is manifold. Firstly, it makes more sense when it comes to mapping out your game: anyone reading your code immediately understands what the object "move" is referring to, what "move.direction.left" refers to, and why you're dequeuing a queue named "nextMove". And since that "anyone" could very well be you several months down the road, code readability is very important. Contrast this to a queue that's made up of Char() 0, 1, 2, A and so on. Secondly, objects allow you to store peripheral information that may become useful in the future. For instance, what if your move is paired with an attack or use of special ability? You'll need two or more queues in that case to store all of them, and there's a very real possibility that they'll get desyncronised for whatever reason when dequeuing. Storing all your instructions in a single object, and then dequeuing that single object, is by far the superior option. Thirdly, objects allow you to keep certain bits of code self-contained. If all your instructions are under the "move" object, it would make sense to also store the methods that interpret the instructions within that same object class. Keeps the code relatively clean, and easier to debug.
&gt; I was wondering, could the software be written in vb and the game in c sharp? Or is that not possible (for dim strings to carry across) Once compiled, it's all .NET... VB and C# libraries can be used interchangeably, and both languages can compile code from the other language. 
I'd probably use a [DateTime](http://msdn.microsoft.com/en-us/library/system.datetime.aspx) variable, since a single DateTime does the job of 6 separate strings. It's really a matter of personal preference though.
I feel a bit like a broken record, but it might be easier for you to write the students as an object? Each student has an ID, name and grade, yes? Class student Public Property ID as Integer Public Property name as String Public Property grade as Integer Public ReadOnly Property grade as String Get Select grade Case &lt;50: F Case 60 to 69: D ... End Select End Get End Class Once this is set up, you create the student objects and store them in a list: Dim students as new List(of student) Dim student1 as new student student1.ID = ... student1.Name = ... student1.grade = ... students.add(student1) Dim student2 as new student ... students.add(student2) And so on. Later, when you want to find the appropriate student, simply run through all the students you have in the list "students" using a For-Each loop. Once the appropriate object has been located, you can spit out everything without having to mess around with the form controls or indexes or stuff like that.
You're going to have to use a database via website; you cannot simply pull data out of the websites ass from an application, there's a certain method behind the madness, /u/Norblazer420. Here's a great tutorial you can set your guides by. http://www.youtube.com/watch?v=9EJXzWasTq4 **EDIT** If you do not want to use the feature in the video, you can use a 'WebBrowser' that has your website on it, therefor allowing it to login to your page. Do note, have your ErrorSupression script enabled, or else it will cause many, many, annoying popups. if you need further help, PM me.
If you still need code help: bal += inter * bal This will take the current value in 'bal' (100) and ADD ON inter to BAL, which will make it 101 (As an integer, 101.05 will round ^ (up), try using a single/double for pinpoint values) The next statement will do: bal = bal - withDr This means it will assign bal to itself and subtracts withDr. It's basically ( bal -= withDr ). This completely eradicate the previous bal value (the '+=' part) Your end answer will be (100 - 25); which ends at 75. ***75 is your answer.*** NOTE: /u/adm7373 was dead on. /u/pathfinderNJ helps as well (which backs up adm's comment)
Well, all I can currently help you with is targeting the user. In a webbrowser you can do something like, ' Enter the username to send (a label's text) Dim theUsername As String theUsername = Username.Text ' In a web-browser instance. ... Adress.Equals("http://www.reddit.com/message/compose/?to=" &amp; _ theUsername) I'll look in to the other segment of your question shortly. **EDIT (6:23 PM Pacific, 2/11/2014** *From another post in /r/visualbasic: http://www.reddit.com/r/visualbasic/comments/1wp5fg/accessing_reddit_api/* #Comment /u/chrwei "" it's just http GET/POST. any example of doing that should get you started. "" # ... Following info I've found: /u/chrwei says "there's json libraries for .net" so I think you should look into that in regards to the first comment he said. I found this url (**WHICH I HAVE NOT LOOKED INTO**) that should probably point you in the right direction: http://json.codeplex.com/ [This URL](http://www.json.org/) seems to be very open, it has many languages you can use (see bottom), from this I have found the following URLs to help you for VB/NET; [.VB JSON](http://www.ediy.co.nz/vbjson-json-parser-library-in-vb6-xidc55680.html) [.VB Implementation](http://www.pozzware.com/pozzware/Corsi/Programmazione/VB.NET/JSON%20Library.aspx) 
http://vbasicturkiye.com vbasicturkiye
The MSDN will generally provide some guidance on exceptions that a class or method will throw. http://msdn.microsoft.com/en-us/library/system.net.httpwebrequest%28v=vs.110%29.aspx I'd probably just start with: Catch ex As Exception That will catch any exception that gets thrown. Then you can point the URL at some bad destinations and see what error actually gets thrown to get a better handle on the exact errors that you are dealing with. 
 Try ... Code Catch ex As Exception MessageBox.Show(ex.Message) End Try For now, this will act as a error handler that catches thrown exceptions. You can define errors, but is an advanced method for those who do not know such area. [Link](http://support.microsoft.com/kb/308132) **Before you click the link above, note the following links:** [Somewhat helpful &amp; advanced tutorial via Stackoverflow](http://stackoverflow.com/questions/17971638/create-error-with-custom-text-that-prevents-compiling-in-vb-net-error-in-c) [A less lengthy and beginner-friendly error creation tutorial](http://www.access-programmers.co.uk/forums/showthread.php?t=160722) [A 'Built-In' error function, I recommend visiting this link first.](http://c2.com/cgi/wiki?VbErrRaise)
Thanks!
i want to make a program like that, but i dont understand what you just said. i have only just started programming
ex.message will pinpoint the error name. ex.stacktrace will give you an exact error trace with the line number, etc. If there's a big in your program make sure to do a step by step method (watch). Glad I can help! 
Thank goodness you changed the bg from salmon, that was just embarrassing. But really how about a design that doesn't look like its windows forms?
Would it be possible to differentiate the flairs with VB.Net versions. Since Visual Basic &lt;&gt; VB.Net. Also, maybe some flair for different aspects of programming (ie, Office Automation, Databases, to name a few) 
For brevity's sake, in the flair possibly change "Visual Basic" to "VB"? 
Only if the VB6 flair is something to the effect of `VB6 I Want To Die`
I don't know anything about VBA+Excel, but from [MSDN](http://msdn.microsoft.com/en-us/library/office/ff838238.aspx) I suspect this would work? Dim currentCell As String For x = 119 To 165 currentCell = "O" &amp; x ' ugh implicit casting If Range(currentCell).Value &lt; 1 Then Range(currentCell).Activate Selection.RowHeight = 0 End If Next
Couldn't agree more. For some reason when I see Visual Basic or VB without .Net attached, it makes me assume VB6. Plus there's still a lot of VB6 questions asked here so I thought being able to differentiate it with the flair would separate the two. 
I will get working on this now. Edit: I've added some specialities, am I missing any?
I will make sure he is notified about this suggestion. /u/AndyR207
Thanks candyforlunch, I'll try this and get back to you.
This worked perfectly. Thanks!
So for now keep it the way it is?
Another thing that would be a nice activity, would be a weekly or monthly challenge. You could do a beginner, intermediate and expert or just a difficulty level. People post their solutions allowing others to learn from them or possibly offer another alternative. I'm just not sure who would submit the challenges as that could become a daunting task to come up with something once a week or once a month. You could even incorporate the points system into this with some kind of voting.
Currently there are just specialist ranks relative to VB, not specific to 6 or .NET. Do you think this is a good way to keep it, or just to use the VB.NET/VB 6 Beginner/Intermediate/Master
I vote leave it. 
Alright, thanks.
Yep, this sounds like a good idea. I would have to start around the 23rd as I am on holiday for that week but yeah, I'd love to do that.
glad to help!
It is very simple. Create a new windows form application in Visual Studio. Go to the toolbox and add a new textbox. Any of the items you can add from the toolbox have a lot of events built into them. To find these events click on the events button (lighting bolt) where the properties of the object are shown once you select the object. If you double click on one of those events the correct code will be added to your form1.vb (or whatever you called your form) and you just put any code that you want to trigger on that event in there. Text_Changed happens to be the default event on a textbox so you can just double click on the textbox to accomplish the same thing. To make it invisible just make textbox1.visible = false, or just change it in the drop down menu in the properties section.
How is code normally posted for stuff like this? Are the projects zipped and uploaded someplace?
hem, but that only means using VB to solve specific problems. To be blunt there are lots of sites that do that already. I would rather share small applications that show people how to attach to a database using different methods and things that are more practical. I mean there is no way that I could post text that would show people how to use OpenXML to create or modify Word documents on the fly in a post.
Or you could link to a VB syntax highlighted pastebin post. How would you prefer to do it?
okay thanks (:
I have been teaching kids and adults to program for years, and I use [Small Basic](http://smallbasic.com/) it is a simplified version of VB with its own editor. You can [Download](http://www.microsoft.com/en-ca/download/details.aspx?id=22961) via the link. (Its on the download word Derp!)
Looks good, I'll make sure to try it out. Does it still build into VB well? Is there a book or list of exercises which you get the kids to do? Also what age/age group/school year are the children in (I'm learning VB at school and it's not that hard - Age 16)?
This is for younger kids 8 -12 (although my 6 year old does it). There is a book from Micro$oft that can be downloaded but I created my own. I would be willing to share if this gains any traction.
why wait? 
Try something like this: Dim myXML = &lt;api_response&gt; &lt;deals&gt; &lt;api_item&gt; &lt;title&gt;item 1&lt;/title&gt; &lt;/api_item&gt; &lt;api_item&gt; &lt;title&gt;item 2&lt;/title&gt; &lt;/api_item&gt; &lt;/deals&gt; &lt;/api_response&gt; 'Dim Doc As XDocument = XDocument.Load("URL REMOVED") Dim Doc As XDocument = XDocument.Parse(myXML.ToString) Dim Titles = Doc...&lt;title&gt; For i = 0 To Titles.Count - 1 Debug.WriteLine(Titles(i).Value) Next 'output 'item 1 'item 2 
Pretty cool so far. There's a few minor things I would change * [Auto Properties](http://msdn.microsoft.com/en-us/library/dd293589.aspx), solely because writing boilerplate code completely sucks, no matter if you're a beginner or advanced. That way the properties `Speed` (assuming for the time being there's no validation required) and `Colour` can become: ` Public Property Speed As Integer` ` Public Property Colour As String` * It's probably a bit early to introduce the `System.Componentmodel`, especially since A) it has all sorts of stuff that flies over the head of many, B) integers have a default value of 0 to begin with, and C) with auto-properties it's possible to include a default value - `Public Property Colour As String = "Red"`, `Public Property Speed As Integer = 5` etc * The `TurnKey()` method doesn't actually do anything! Probably should implement it like `Public Sub TurnKey()` ` _Running = Not _Running` `' Console.Writeline(If(Running, "You started the car", "You stopped the car"))` `End Sub` Keep it up. I like seeing content like this in the sub, it should help the newbies a lot :)
This is exactly what I required, thank you so much for your help. I just couldn't work out how to convert what I was doing with XMLdocument to Xdocument.
When you say why wait do you mean why wait until they are 8 before starting? Attention span mostly if thats what you getting at.
&gt; There is a book from Micro$oft that can be downloaded but I created my own. I would be willing to share if this gains any traction just that... why not just throw it out there? 
You have declared plrScoreDraw as an integer and then try to use plrScoreDraw.Location = ... plrScoreDraw is of type Integer and Integer does not have a Location property or method. 
Honestly, I wish I was fluent in something more portable and less vendor-locked-in than VB :\ The ability to draw your user interface in a GUI is such a time saver though.
I jumped to C#. Dont know why I didn't sooner.
My suggestion would be to read the xml into a dataset (dataset.ReadXML), then you can manipulate the dataset as your heart desires and when done, use the DataSet.WriteXML method to save the file back with the new data.
What are you trying to accomplish? From your code it appears that you are using the wrong control. A scroll bar is designed to scroll items around a portion of the screen, where a Trackbar, is designed for selecting a value with a drag-able selector. 
Thanks all of you! I appreciate the help, and I figured it out thanks to you guys :) 
Text adventures are an easy one to program. Beyond that, you've got randomness functions which you can use for a racing or exploring game . You could program minesweeper, battleships, connect four... all relatively easy and fun to program.
Do Minesweeper. I did it in about forty-five minutes, and it didn't have too many bugs on the first try. The rules are easy to translate to code, you don't have to worry about graphics, and it really allows you to show-off many aspects of object-orientated programming.
Hangman should be an easy one.
thanks for your tip. Is there any possibility of sending me your minesweeper code ? 
I don't believe coding is fun. I only chose that class cuz the only other class available was psychology . Can you link me some viable connect four game code ? thanks in advance.
Thanks for your tip but I believe that someone else in the class has done the same.
Thanks for your tip but I believe that someone else in the class has done the same.
I might be able to get you a small book for learning it, however I will have to confirm it first.
Really nice! Very informative, **+1 point**! I appreciate the effort which must have gone into making this. Find your self on the [Global Wiki Page](http://www.reddit.com/r/visualbasic/wiki/index) or your [Personal Contributions Page](http://www.reddit.com/r/visualbasic/wiki/contributors/PostalElf)
In a word? No. The long version is this: if you're doing this for a class, and I provide you with the code, you're learning nothing. You won't understand my logic behind storing each button as an object, nor the way in which my code - on each click - would do a search of the surrounding eight squares through iterations of (x+1, y+1), (x+1, y), (x+1, y-1), (x, y+1) etc. You won't know why I decided to limit the board to a 10x10 grid at its max, nor learn the tricks I used to populate the board in a presentable fashion. If I gave you the code, I would not only be helping you to cheat. I would also be cheating you out of an education. I would be depriving you of a teachable opportunity, of a chance to dive into logic and figure shit out for yourself rather than have it told to you by an authority figure.
Oooh, fancy! Thanks! :)
Really nice! Very informative, **+1 point**! I appreciate the effort which must have gone into making this. Find your self on the [Global Wiki Page](http://www.reddit.com/r/visualbasic/wiki/index) or your [Personal Contributions Page](http://www.reddit.com/r/visualbasic/wiki/contributors/CandyForLunch)
Certainly!
I was just wondering if the permissions worked. If they did you should be able to edit your Personal Contributions Page.
Thanks.
It's the problem solving element thats fun, being creative with your code and writing functions that are so generic you'll be using them in other projects in 4 years time. This community will probably not write your code for you, but if you do need help on anything specific we're happy to help. Also, psychology isn't all that bad. Admittedly it would be pretty useless to me but I do think I would find it fascinating.
perfect! books are better than videos, my opinion :P
Yea, I found them while I was already beyond most of it but I still ended up watching each one. Most people tend to shy away from them as he uses the console instead of the windows form. But most people don't realize that the underlying functions used have nothing to do with the interface they're being used in. Anyway, glad you are enjoying them.
Well, I was checking out the C# vids actually. I've got some experience in VB, but I'm looking to develop for WP8, and need some basics. USING is not a think I was familiar with.
Trackbar is the correct control to use for this. Here is [W3Computing](http://visualbasic.w3computing.com/vb2008/4/vb-scrollbar-trackbar-controls.php) page that has specifics of use for both.
What is the web server that is being used? If it is IIS you can create a folder APP_Data (it probably will exist if you use IIS, its created when create an app on IIS. This folder will have read write permissions for any local authorized account. If it is LINUX using SMB you will have to create a folder and link it to your Nginx or Apache webserver so it can be read write. Publishing is a pain in the posterior. For then you have a Task Scheduler/Chron job running. It will fail and then you have to troubleshoot it. I choose not do this unless It is the only way. Could you write this in server side ASP to generate a webpage? It would be easier than what you are attempting here. Then it generates on demand. -Bone 
100 is a lot for text boxs. I'd use a grid. for sql ce you might be able to bind the grid control and it'll save automatically, but i haven't used CE before..
I would break this up into multiple parts. Perhaps giving each of your tabs a save feature so that the user doesn't have to sit down and do the whole thing at once. Further I'd try to "storyboard" it, how does the end user, you? intend to input data into the program? Is there a certain order that might help logically. Logically, you'd want a "Budget" object that represented that "month"'s? expenses. Assuming that this budget is for one month. Then All of your budget items could be keyed to that budget, which would make it much easier to save your data in increments and even open an old budget to make adjustments. From how Bonejob recommends, I'd further say that it's possible to add controls to a generic list, each text box can have an ID corresponding to it's "name" in your sql table, and it's text can be your value. It would make mass processing the data easier. think: Dim controlList As New Generic.List(of TextBox) Dim jobText as New TextBox() jobText.ID = "Job1" panel.Controls.Add(jobText) 'or however you want to add it to the list controlList.Add(jobText) If done right I think you could do something like... For Each item as TextBox in controlList db.Open() Dim sqlCommand As New SqlCommand("INSERT INTO budget (" + item.ID + ") VALUES ('" + item.Text + "'), db) sqlCommand.executeNonQuery() db.Close() next I hope thats helpful, it's late and I'm sleepy. edit: never put code in reddit before. ick
mabe it wasnt clear but i wont store the data actually in the form but rather it will be displayed there. when you say table what does this mean in terms of coding, class? array?
You can either handle the problem (1) using VBA code or (2) link the form to a table so the data is saved once you click done. 1 - The done button should be linked to a click event in a module. You can then write the values in each of the text boxes to a table. This can be done through recordsets or SQL. 2 - This is probably the easier option seeing as you're not an advanced user. [Creating an Input Form](https://www.youtube.com/watch?v=m_H2H8dxKrY) is a quick YouTube video showing how to make a table and link it to your form... not mine, but its fairly easy to follow. Have a go and see how far you can get. 
~~I'm assuming that you are talking about VB.NET so I have stickied it accordingly.~~ My bad
nope, i need VBscripts for my computer
Stop using your powers for evil! Having said that the problem you are going to have is that there is no easy way to fire an event when they are watching Netflix. Even with windows messaging it would be tough. I suggest using a timer and launch the script when the browser is launched and set it up for a specific wait period, that way you can easily get rid of it as well. The timer function returns number of seconds (and milliseconds) since midnight, Snag the variable when your scripts starts. Create a loop that loops while current time is less than start time + 15 mins (or whatever) something like this; Dim StartTime StartTime = Timer + {whatever you want} Do 'do idle code or nothing Loop While Timer &lt; Startime This would be much easier in .NET for you could just wait for the internet browser to open and by grabbing the window title using windows messaging (The code provided uses the win32 windows message hook) close the browser and bring up a window to do what you want. Here is an [article](http://www.codeproject.com/Articles/19740/Send-strings-to-another-application-by-using-Windo) from CodeProject by [Tomzhu](http://www.codeproject.com/script/Membership/View.aspx?mid=3989291) that explains it fully. hemmmm, Maybe I should take a run at this it could be fun. -Bone
I'd be more than willing to help with the overall CSS. This light brown has got to go. I mod at /r/Random_Acts_Of_Pizza, /r/TexasRangers, and /r/Mavericks. Did the all the CSS for RAOP and Mavericks.
I think that you have to **Dim** it as something like ~~**Large Integer**~~ [See /u/candyforlunch's post for what I meant](http://www.reddit.com/r/visualbasic/comments/1yhix1/going_to_pull_out_my_hair_exponents_problem/cfksbdz), and that way it can handle larger numbers if that is what you are talking about.
Have you tried declaring as Decimal instead of Double? Check out this chart here: http://social.msdn.microsoft.com/Forums/vstudio/en-US/921a8ffc-9829-4145-bdc9-a96c1ec174a5/decimal-vs-double-difference?forum=csharpgeneral Decimal is accurate to 28 significant figures while Double is accurate only to 15 significant figures. It's also only 4 bytes larger than Double, so it's not that much of a problem on modern computers for the most part.
Its better than the salmon we had before, 
Try here: http://msdn.microsoft.com/en-us/library/cfttbw2x(v=vs.90).aspx **ULong** might be the data type you require.
I'm curious. Why aren't you using Decimal type for this? BTW, if you use two &lt;enter&gt; after each line or 2 spaces after it or 4 spaces before it, your code will be readable.
Your best bet is doing this in .Net, but it's going to be a complete pain in the ass no matter what.
any suggestions on where to start? whether .net or VBScript
Activeworkbook.fullpath
It looks like your question has been answered, so maybe you can answer mine. Are you using matrices at all? How? I can't find anything about using matrices in Visual Basic except for 2 by 2 matrices. I need nxm
Her is the chunk of code I have in our standard library. First function determines if a file is open and you can do something, like terminate the process, or close the file. The second function just returns if the file is locked. -**Bone** Private Sub IsFileOpen(ByVal file As FileInfo) Dim stream As FileStream = Nothing Try stream = file.Open(FileMode.Open, FileAccess.ReadWrite, FileShare.None) Catch ex As Exception If TypeOf ex Is IOException AndAlso IsFileLocked(ex) Then ' Your code goes here End If End Try End Sub Private Shared Function IsFileLocked(exception As Exception) As Boolean Dim errorCode As Integer = Marshal.GetHRForException(exception) And ((1 &lt;&lt; 16) - 1) Return errorCode = 32 OrElse errorCode = 33 End Function 
This is the correct answer, Bonus for the link! -Bone
Fair enough, To do what you want in a vbscript here is a chunck of code. Dim WSHShell, n, p, itemtype Set WSHShell = WScript.CreateObject("WScript.Shell") p = "HKCU\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\NoDesktop" itemtype = "REG_DWORD" n = WSHShell.RegRead (p) If n = 0 Then WshShell.RegWrite p, 1, itemtype End If If n = 1 Then WshShell.Regwrite p, 0, itemtype End If Set WshShell = Nothing For Each Process in GetObject("winmgmts:"). _ ExecQuery ("select * from Win32_Process where name='explorer.exe'") Process.terminate(0) Next The taskbar for windows is a little harder. IT depends on which version of windows you have. I would use the win32 library find the taskbar window by name, and send it a WM_Close message. you could also send keys to the taskbar and autohide it by sending the key combination alt+u to do this use; cSendKeyValue = "%u" ' Alt+u = Auto-hide the taskbar Set WshShell = Wscript.CreateObject("Wscript.shell") Set oShell = CreateObject("Shell.Application") oShell.TrayProperties Wscript.Sleep 500 WshShell.SendKeys cSendKeyValue Wscript.Sleep 250 WshShell.SendKeys "{ENTER}" ' Enter to Close Properties Set oShell = Nothing WScript.Quit 
&gt; edit: never put code in reddit before. ick Add 4 spaces in front of each line.
One of the best examples of BackgroundWorker I've seen. http://www.vbforums.com/showthread.php?680130-Correct-way-to-use-the-BackgroundWorker 
Cheers mate
Maybe you would know if you can run JavaScript processors as well. I would like to run a code colorizer if possible. BTW: I love your other CSS skins.
Via reddit you mean?...and thanks.
Every variable's name is nonsensical so I strongly strongly suggest changing them to names that are more descriptive and especially not already used by the language (Array). As for the solution, Bonejob is right on. edit: what happens if you put in a number less than 2?
thank you for this post.
Really nice! Very informative, **+1 point**! I appreciate the effort which must have gone into making this. Find your self on the [Global Wiki Page](http://www.reddit.com/r/visualbasic/wiki/index) or your [Personal Contributions Page](http://www.reddit.com/r/visualbasic/wiki/contributors/hdsrob)
I am want to use [ColorCode](http://colorcode.codeplex.com/), with the subreddit, and I dont know if Reddit allows for external javascript includes. so that we can run the colorizer.
Do people like this format or do you want specific problems answered? Like "How do i get a list of files in a folder?" or "How do I set the read only flag on a file?" Bone
I saw that before but didnt know if it directly applied to the Windows development. I didnt know if that was for phones or something. 
Well, I'm not familiar with the scrollviewer in Windows Forms. That example uses the WPF (Windows Presentation Foundation). In Windows Forms there is the FlowLayoutPanel that might be something like what you're looking for. It automatically spaces the controls that are added to it. For example, in the containers section of the toolbox, add a Flow Layout Panel to your form and size it to about 300,300. Set the AutoScroll property to True. Now add a button and put this in the button click event Dim pb As New PictureBox pb.Size = New Size(100, 100) pb.BorderStyle = BorderStyle.FixedSingle pb.BackColor = Color.Beige FlowLayoutPanel1.Controls.Add(pb) Run the program and keep pressing the button. Notice how the FlowLayoutPanel automatically places the picturebox for you without having to set a location. Then if you add more that the view of the panel, it will add scrollbars. There are properties where you can change the direction of the flow so that it adds horizontally or vertically. Thought I'd bring it up in case this is something like what you're wanting to do.
That just uses &lt;pre&gt; and &lt;code&gt; blocks right having the lines and that would be great if we cant do colour syntax. What about creating a few coloured CSS classes that I could pre-process the code with to add the colours?
HA! CandyForLunch is right you are not check for a lower bounds! I didnt even notice. Good catch Candy.
Best bet is mono develop it has collaboration and it has a visual basic plugin I have also done this with a goto meeting solution
Which vb are you doing this in? If it is classic I can dig up some code on BitBlt which will allow you to do what you want if it is .Net then you want to look at [System.Drawing](http://msdn.microsoft.com/en-us/library/system.drawing.aspx) class. If you are willing to use a brilliant library I recommend the [GDIGaming Framework](http://gdigaming.codeplex.com/) it encapsulates all major graphic functions needed. OnCollision OnDraw OnLoad OnInput OnMouseDown OnMouseUp OnUpdate check it out. **-Bone**
You can work on that yourself if you want to, as now you have joined the Moderator Team.
No I'm not using matrices, and from what I understand there is no native way to do matrix computations, you would have to either download the functions or write them yourself. 
Very nice project!
BASIC has taken many forms throughout the years: GWBASIC, QBASIC, VisualBasic, VisualBasic 6 and now, VB.NET. The syntax hasn't really changed much through these iterations, but the language's approach to programming has, from the linear programming style of GW and Q to today's VB6 and VB.NET's object-oriented programming style. So what I'm basically saying is, we're probably your best bet if you're looking for a subreddit dedicated to BASIC. ;)
Visual Basic is the natural progression of the Basic language to a windows/forms based programming method. So yes I wold think that Visual Basic is the modern basic language. -Bone
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**The Last One (software)**](http://en.wikipedia.org/wiki/The%20Last%20One%20%28software%29): [](#sfw) --- &gt; &gt;**The Last One** is a [computer program](http://en.wikipedia.org/wiki/Computer_program) released in 1981 by the British company D.J. "AI" Systems. Now obsolete, it took input from a user and generated an executable program in the [BASIC](http://en.wikipedia.org/wiki/BASIC) computer language. &gt;The software was a program generator, as distinct from an actual programming language, as programs were generated by the user selecting options from menus that would form the basis of the generated code. This was done in a logical sequence that would eventually cause a program to be generated in BASIC. At any time, the user could elect to view a flow chart showing the current progress of the program's design. &gt; --- ^Interesting: [^PlayStation ^3](http://en.wikipedia.org/wiki/PlayStation_3) ^| [^Amstrad ^PCW](http://en.wikipedia.org/wiki/Amstrad_PCW) ^| [^Commodore ^64](http://en.wikipedia.org/wiki/Commodore_64) ^Parent ^commenter ^can [^toggle ^NSFW](http://www.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+cfn99co) ^or[](#or) [^delete](http://www.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+cfn99co)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/) ^| [^flag ^a ^glitch](http://www.reddit.com/message/compose?to=/r/autowikibot&amp;subject=Glitched comment report&amp;message=What seems wrong: (optional description goes here\)%0A%0A---%0A%0AReply no. 68793:%0Ahttp://www.reddit.com/r/visualbasic/comments/1yqz03/visual_basic_learning_program/cfn997z)
Sorry I'm really not very good at VB I'm not sure how I'm meant to call this sub so that it checks if my file is open, am I supposed to replace file with "TestFile.xlsx"?
whenever i try the first one i get an invalid registry root in registry key error. i looked inside my registry and i have nothing pass policies, might the function have been moved in windows 8? the second one works, but i would prefer to use that other method you mentioned, the one that doesn't require the properties to open up 
copy the second sub into your form code class. to do this double click the form and paste right above the end class statement. in the function that is doing your work call this Dim Islocked as boolean = IsFileLocked("{complete file path and name goes here"}) is locked will return true or false, it it is true the file is locked and in use, thus you do not call the code that opens the file. 
Really nice! Very informative, **+1 point**! I appreciate the effort which must have gone into making this. Find your self on the [Global Wiki Page](http://www.reddit.com/r/visualbasic/wiki/index) or your [Personal Contributions Page](http://www.reddit.com/r/visualbasic/wiki/contributors/BoneJob)
No you would not need any external libraries. The [System.Net.HttpWebRequest](http://msdn.microsoft.com/en-us/library/system.net.httpwebrequest.aspx) function does most of what you need. The trick would be parsing the information and using regex to find all links and the using recursion to start the process over on the next page. Regex could also be used to grab the source on a given page and then the hard part, figuring out how to tag the page. 
Could do it something like this. Dim Ages(9) as Integer Note the 9 in the example above refers to the max index, not the number of items in the array. 9 gives you 10 values, 0-9. Set the values like so: Ages(0) = 18 Ages(1) = 25, etc. Hope this helps. 
You should look up the functions Push and Pop. It would make this task really simple for you. It's a way of adding a value or removing it from the ends of the array.
Optionally: Dim Ages As New List(Of Integer) Then you can do: Ages.Add(X), or Ages.Remove(X), etc a bit easier and don't have to worry about resizing arrays, etc. You could also do something like: Dim Data As New List(Of String(9)) Which will give you a Array() for each booking, ie: Data(0)(0) = Name Data(0)(1) = Date Data(0)(2) = Age etc. Or: Private Structure ClientInformation Public Name As String Public BookingDate As Date Public Age As Integer Public Sub New(ByVal ClientName As String,ByVal BookDate As Date,ByVal ClientAge As Integer) Name = ClientName BookingDate = BookDate Age = ClientAge End Sub End Structure ... Dim ClientInfo As New List(Of ClientInformation) ClientInfo.Add(New ClientInformation(X, Y, Z)) Textbox1.Text = ClientInfo(0).Age.ToString ...etc.
Alternatively (and assuming vb.net), you could use a List such as: Dim Ages As New List(Of Integer) Ages.Add(18) Ages.Add(25) The List has built in functions that might be useful to you like Average, Max, Min, Sort, etc. When you want to zero it out just call: Ages.Clear You can always loop through them with: For Each a in Ages .... Next or: For i = 0 to Ages.Count-1 .... Next i 
There's also a drawback (AFAIK) to auto-properties, you can't do: Public X As Integer Public Y As Single Public WriteOnly Property Stuff() As Integer Set(value As Integer) X = value Y = value * 3.14 End Set End Property
no I dont think that is what Im looking for
I am not as strong with WPF, probably because I am ignoring it :) but let me take a crack at it for you. &lt;Window x:Class="MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Title="MainWindow" Height="350" Width="525"&gt; &lt;ScrollViewer&gt; &lt;StackPanel Margin="8" Orientation="Horizontal"&gt; &lt;Label&gt;Pick an Image&lt;/Label&gt; &lt;Image Width="200"&gt; &lt;Image.Source&gt; &lt;!-- NOTE:To save significant application memory, set the DecodePixelWidth or DecodePixelHeight of the BitmapImage value of the image source to the desired height and width of the rendered image. If you don't do this, the application will cache the image as though it were rendered as its normal size rather then just the size that is displayed. --&gt; &lt;!-- Note: In order to preserve aspect ratio, only set either DecodePixelWidth or DecodePixelHeight but not both. --&gt; &lt;BitmapImage DecodePixelWidth="200" UriSource="C:\Documents and Settings\All Users\Documents\My Pictures\Sample Pictures\Water Lilies.jpg" /&gt; &lt;/Image.Source&gt; &lt;/Image&gt; &lt;!-- Repeat as needed --&gt; &lt;/StackPanel&gt; &lt;/ScrollViewer&gt; &lt;/Window&gt; By the way you should check out [WPFTutorial.Net](http://wpftutorial.net/Home.html) best source I have found for WPF learning. Even though I think WPF's days are numbered and we will be switching to HTML5/CSS3 for desktop applications soon. -Bone 
yea sure. 
thanks. I will give that a try
Thank you for the reply! The only data that gets input is the name of the party for the booking, number of people in the group, and the age of each group member. Both the U18's and 50+'s pay the same rate.
OK. You don't really need to store the age then, just a flag which says discount or not so it could be zero or -1. Or perhaps a simple count of those who do and who don't get a discount. So you could store the data as: &lt;Contact Name&gt; &lt;Contact Number&gt; &lt;Contact Email&gt; &lt;Nr Full Fee&gt; &lt;Nr Part Fee&gt; Example: "John Doe", "303 123 4567", "johndoe@gmail.com", 7, 3 Is that what you have in mind?
[MicrosoftÂ® Visual BasicÂ® 2008 Express Edition: Build a Program Now](http://www.amazon.com/Microsoft%C2%AE-Visual-Basic%C2%AE-2008-Express-ebook/dp/B004OR1XWY) There are 4 of these, one for VB, one for C#, one for web pages (Build a Web Site Now!) and one for something else (can't remember - J#??). You can buy each used for a penny plus shipping on Amazon so $4 delivered. Get the books, they're cheaper and better IMO than the Kindle versions. Once you go through the step by step exercises you'll have some first steps in getting started. There's plenty more to learn, but don't ignore your local library. They should have books in the 005 Dewey section. No book is perfect, but most help. This one: *Visual Basic.NET All-In-One Desk Reference For Dummies* by Richard Mansfield is also a penny used and is pretty good. After those, you'll have an idea what to buy. 
The text file contains a list of email addresses, one per line?
LINQ and classes to the rescue! This probably looks complex, but the end result is that you have a single contained object with everything necessary, and that finding booking information is super easy. Each booking is going to have multiple people, so for the sake of simplicity we're gonna make some classes. The first is a simple `Occupant` class: Public Class Occupant Public Property Name As String Public Property Age As Integer ' makes it easier when creating new occupants Public Sub New(a As Integer) Age = a End Sub End Class Next a `Booking` class: Public Class Booking Public Property Occupants As New List(Of Occupant) Public Property PartyName As String ' this is where the magic happens: Public Readonly Property DiscountedRate As Integer Get Return Occupants.Where(Function(o) o.Age &lt; 18 Or o.Age &gt;= 50).Count End Get End Property Public Readonly Property RegularRate As Integer Get Return Occupants.Where(Function(o) o.Age &gt;= 18 And o.Age &lt; 50).Count End Get End Property ' add more properties as necessary End Class We use [Lists](http://msdn.microsoft.com/en-us/library/6sh2ey19\(v=vs.110\).aspx) because most of the time arrays suck. Put in practice, such as... Sub Main() Dim bookings As New List(Of Booking) Dim a As New Booking a.PartyName = "Beyonce &amp; Friends" a.Occupants.Add(New Occupant(12)) a.Occupants.Add(New Occupant(30)) a.Occupants.Add(New Occupant(65)) a.Occupants.Add(New Occupant(70)) Dim c As New Booking c.PartyName = "The Stalins" c.Occupants.Add(New Occupant(36)) c.Occupants.Add(New Occupant(8)) c.Occupants.Add(New Occupant(34)) bookings.Add(a) bookings.Add(c) Dim totalOccupants = bookings.Sum(Function(o) o.Occupants.Count) Dim totalDiscount = bookings.Sum(Function(o) o.DiscountedRate) Dim totalRegular = bookings.Sum(Function(o) o.RegularRate) Console.WriteLine("There are " &amp; bookings.Count &amp; " bookings with a total of " _ &amp; totalOccupants &amp; " occupants.") Console.WriteLine(totalDiscount &amp; " are at a discounted rate, " _ &amp; totalRegular &amp; " are at a regular rate. ") Console.WriteLine() Console.WriteLine("Bookings: ") Console.WriteLine() For Each b In bookings Console.WriteLine(b.PartyName &amp; ": " &amp; b.DiscountedRate &amp; " discounted, " _ &amp; b.RegularRate &amp; " regular, " &amp; b.Occupants.Count &amp; " total. ") Next Console.ReadKey() End Sub will output: There are 2 bookings with a total of 7 occupants. 4 are at a discounted rate, 3 are at a regular rate. Bookings: Beyonce &amp; Friends: 3 discounted, 1 regular, 4 total. The Stalins: 1 discounted, 2 regular, 3 total. edit: fixed where/count 
you'll want some sort of image processing toolkit, doing the image processing from scratch is very hard, and probably very cumbersome to do in VB anyway. OpenCV seems to have some .NET support. I've only used it with python though, but that was easy enough.
Have a look at this. Its my teaching resource and is being rewritten up to classes at the moment. https://www.dropbox.com/s/fwfolp8i9b3e76z/Intro%20to%20VB%2027-2-14%20with%20Queue.pdf (any feedback gratefully received)
either through gmail, yahoo and hotmail. i have the gmail and yahoo sides both working will and hotmail later. if that makes sense, i can post the code if you would like it that helps any. 
Is your input the string "192.168.1.32" and your output the string "192.168.1.0"?
Here's a version in Small Basic: Source = "192.168.1.32" TextWindow.Clear() Count = 0 For Pos = 1 To Text.GetLength(Source) If Text.GetSubText(Source,Pos,1) = "." Then Count = Count + 1 EndIf If Count = 3 Then Result = Text.GetSubText(Source, 1, Pos) Result = Text.Append(Result, "0") TextWindow.WriteLine("Result = " + Result) Goto Exit EndIf EndFor Exit: 
Have you considered making it a google doc?
No, i never thought about it. What would be the benefits? I make pdfs for my students to use. 
the left function is working!! how do you append the zeros? with just the left function being used it works almost right but messes up the returned values sometimes
Open the .sln file. When you create your directory, you will have a folder and an .sln file under it. Don't worry about the folder. Just choose the .sln file. 
Make sure you're matching up variables to the correct types. That being said... Public Class Card Private value As Integer Private suit As String Public Sub New(v As Integer, s As String) value = v suit = s End Sub ' this is what you're looking for: Public Sub New(v As Integer) Me.New(v, "spades") End Sub End Class [Optional Parameters](http://msdn.microsoft.com/en-us/library/f25e2b6b.aspx) are a better option: ' replaces both constructors with Public Sub New(v As Integer, Optional s As String = "spades") value = v suit = s End Sub 
Thank you, I want the user to be able to create an card object and have a default card value of 10. Dim firstCard As Card = new Card() If the user wants to change the card value he enters in the argument Dim secondCard As Card = new Card(10) My code produces this result but in C# its cleaner to do it using Card() :This(6)&lt;--- default value. I was wondering if you were able to do this in VB. 
Never mind, it looks like the optional parameter will work great. Thank you. I just thought there might be a way to do it that is similar to C#. 
A bit subjective, but the `:this()` syntax in c# (and the equivalent `MyBase.New()` in VB ) is really only appropriate for accessing the base constructor when using an inherited class, not for chaining constructors or setting default values, which looks like what you're trying to do. No matter which language, IMO optional parameters are the best solution. To be thorough add [XML comments](http://msdn.microsoft.com/en-us/magazine/dd722812.aspx) to the constructor so Intellisense will pick up on it.
Check out my ebook! https://docs.google.com/file/d/0B1A6vu9c5C0NV3hYeGM3MkN5Y2c/edit
Thanks you and thank you for the suite catch. I am half asleep. The reason I wanted to go with this setup is because I wanted to practice creating a class and using it in another class. Any ideas on how I could get the deck class to work using the card class? Thanks! Thanks for the help
I understand what you're saying, but it doesn't make _structural_ sense to create a deck object to hold the card object. I mean, I guess you could have listOfCards be a property within the deck class, but I don't see what that would add unless you need deck to have other stuff as well, like built-in methods for manipulating listOfCards and so on. Here's an example of what I mean: Public Class deck Public Property listOfCards as List (of card) Public Function dealCard() as card Dim rng as new Random Dim i as integer = rng.next(listOfCards.Count) dealCard = listOfCards.Item(i) listOfCards.RemoveAt(i) End Sub End Class This would however be much better represented using a stack with its order already randomised: Dim deck as New Stack Thereafter, every time you want a card off the top of the deck: deck.Pop This gives you an instance of the card _and_ removes it from the deck at the same time.
Just cause there isn't any comments here. Public Function IsPalindrome(ByVal Input As String) As Boolean Return System.Text.RegularExpressions.Regex.Replace(Input.ToUpper, "[^A-Z]", "") = _ System.Text.RegularExpressions.Regex.Replace(String.Join("", Input.Split().Reverse).ToUpper, "[^A-Z]", "") End Function
Thanks man!
Thank you. I will test it out. Question for you, regrading byVal and byRef. I understand how byRef points to a memory location my question to you is how do you know where a certain memory location is. I understand its indirect referencing but how do I tell it to goto this specific memory location (or how do I understand what memory locations my objects are located). Thanks
Basically, Byval creates a copy of the variable while Byref points directly to the variable. If you pass a variable ByVal, it will never get changed, but if you pass a variable ByRef, you can change it. I've heard that class objects should always be passed ByRef even if you don't intend to change it, but I can't remember where I've heard that. Dim x as Integer = 5 AccessByVal(x) ' x still remains 5 AccessByRef(x) ' x is now 4 Private Sub AccessByVal(ByVal y as Integer) y -= 1 End Sub Private Sub AccessByRef(ByRef y as Integer) y -= 1 End Sub
The right side of the comparison would not create a reversal of the string, it would reverse the two words separated by the " " So for the String: "dont nod" it would return false as it is comparing dontnod with noddont You would just want = System.Text.RegularExpressions.RegEx.Replace(String.Join("", Input.Reverse).ToUpper, "[^A-Z]", "") 
thanks!
Would it be better to unroll the outer loop from this: For i = 1 to 4 For n = 1 to 13 Select i Case 1: makeCard(n, "Clubs") Case 2: makeCard(n, "Hearts") Case 3: makeCard(n, "Spades") Case 4: makeCard(n, "Diamonds") End Select Next n Next i to this: For n = 1 to 13 makeCard(n, "Clubs") makeCard(n, "Hearts") makeCard(n, "Spades") makeCard(n, "Diamonds") Next n Maybe better is not the word, more concise is what I would say. Your way would put them in order by suit, but I assume he will be shuffling them anyway.
Yep, and I have visual studio 2013 installed on windows 7. But my version of 2013 is not the free express version. I just checked the site and VS2013 express will install on Windows7 service pack 1, so I would make sure you have that installed prior to attempting to install 2013. 
my visual studio 2013 is Ultimate,, still though it doesnt work. it shows me this: http://i.imgur.com/6vsfmUq.png
So do you have Service Pack 1 installed for Windows 7? Again, ultimate specifically lists Windows 7 Service Pack 1 and not just Window 7. &gt;Supported Operating System &gt;Windows 7 Service Pack 1, Windows 8, Windows 8.1, Windows Server 2008 R2 SP1, Windows Server 2012, Windows Server 2012 R2 Hardware Requirements: 1.6 GHz or faster processor 1 GB of RAM (1.5 GB if running on a virtual machine) 10 GB of available hard disk space 5400 RPM hard disk drive DirectX 9-capable video card that runs at 1024 x 768 or higher display resolution 
I know 2010 (which is still available and free) runs on XP.
Actually, no, you're right, your method is better. I just wasn't thinking straight, I reckon. :)
That just seems very confusing. I'd just loop and store "01H" (Ace of hearts) through "13S" (King of Spades) in the array. Then I'd shuffle bye exchanging random pairs.
I think i need to ask a simpler question. I will post it. From my understanding when you create class you need to define the field and property's. Thats all I am trying to do 
If I am understanding your need correctly you wish to pass a parameter to a constructor. The terminology for this is called a *Parameterized Constructor*. To do this you use an *Overloaded Constructor*. Basically you create your class with an extra "Sub New" in it and when you call the create the object with the parameters it uses the overloaded sub. IF you call it without a parameter it creates an empty copy of the class. By the way you can overload Methods, and Properties as well, which can be very use full. Protected Class Course Public Sub New(ByVal courseID As Integer) ' Initialize with a specific course in mind End Sub Public Sub New() ' Initialize without a course End Sub End Class This is created like this Dim objCourse As New Course(intCourseID) **OR** Dim objCourse As Course objCourse = New Course(intCourseID) -Bone
You young Whippersnappers and your fancy Regex.... :P way to complicated for something this easy. Function check(ByVal s As String) As Boolean Dim len As Integer = s.Length For i As Integer = 0 To len / 2 If Not s(i) = s(len - 1 - i) Then Return False End If Next Return True End Function
CDKEY Generator; Dim g As Guid g = Guid.NewGuid() ' 0f8fad5b-d9cb-469f-a165-70867728950e Add g to database and do a web lookup on app launch. 
Hey Olonnzac. You wen from "Meh", to "Meh ok", to "O MY GOD THIS WILL TAKE YEARS" in one post, well done sir. :)
you can't do this. just use a method instead.
I have no service pack, It's 0 I guess. Though, thanks for helping! I'll install service pack 1 soon. :)
.Pencil() will return the array. You would have to access it like: Dim Pen As Integer = Markers.Pencils(3) If this isn't working, then did you remember to define Marks properly?... like in another Class/Form/etc: Private MyPens As New Markers() Otherwise, Markers, will contain 6 items all equal to "0". I don't know if this is part of a larger class you are working on, but considering what is here, most of this is unnecessary. Private Structure Pens Const Pen1 As Integer = 1 Const Pen2 As Integer = 2 Const Pen3 As Integer = 3 Const Pen4 As Integer = 4 Const Pen5 As Integer = 5 Const Pen6 As Integer = 6 End Structure To take that even further, this is all you seem to need. Private Enum Pens Pen1 = 1 Pen2 = 2 Pen3 = 3 Pen4 = 4 Pen5 = 5 Pen6 = 6 End Enum Which can be access like Pens.Pen1, or something like: For i As Pens = 1 to Pen6 '... something something i Next Private Sub Foo(ByVal Bar As Pens) MsgBox(Bar.ToString) End Sub
&gt; Dim g As Guid = Guid.NewGuid() Would that not work?
Yes it would. Nice catch.
True, it would be incorrect. The issue i see with your example is that the ordinal positions don't line up either. The problem being is that in a palindrome it may be "*interpreted*" does the Regex check this as well? don't nod don t'nod Here is another example that does not work "A man, a plan, a canal: Panama" I mean in theory you could remove spaces and special characters and see if it is close, and be more accurate. Hem what do you think? 
That's what the RegEx does, hence the *.ToUpper ... [^ A-Z] It's only the letters that matter, not any other punctuation. A man, a plan, a canal: Panama A + (manapla)^n + A(can) = Alpa Nama it's the same thing, so you can just remove non-word characters. You could make it more complex, and start testing for punctuation similarities, palindromatic numerals, etc but then it wouldn't be a boolean anymore. Enum Palindromes Exact = 1 Alphabetical = 2 Numerical = 4 Multiline = 8 ... End Enum Function Whatever(Input) As Palindromes ... bitwise, nonsense while testing Return Palindromes XOr etc... I suppose it still meets the criteria... but, it's not really just something you do cause you were bored and no one else had posted yet...lol
Thank you, i just created the class for a learning exercise. I appreciate the help 
Great, thanks. I'm still surprised he didn't get what I meant by theme. Seems like a pretty general idea. I guess some people are just in their own world. Of course I know what's going on and that these "themes" are actually just classes. It was odd that he didn't approve of my calling them "themes" since a lot of programming is presented a abstractions of real world problems. Anyways, I'll be looking for that "show all files" feature, and hopefully I can find the code where all these controls are defined and just change their class types. I'm new to visual basic so I don't even know if that makes sense haha.
Thank you I will give it a try
&gt; Anyways, I'll be looking for that "show all files" feature, and hopefully I can find the code where all these controls are defined and just change their class types. I'm new to visual basic so I don't even know if that makes sense haha. To help that make some sense for you .... The forms designer (the tool you use to place controls on the form) isn't doing any magic behind the scenes: it just writes VB code to create the form, and places that code in a .designer.vb file that VS hides from you by default since you generally shouldn't mess with it. When you drop a button on the form, the designer adds the code to create the button, set it's location, and any properties that you set, etc, just the same as you could do in code. 
Alternatively: Private newDeck As New List(Of Card)
Was phoneposting; this answer is better.
I'm not fluent with WPF but just messing around with the help on .Source You can load an image into a BitmapImage ( a valid ImageSource) Here is an example they showed: Dim bm as New BitMapImage bm.BeginInit() bm.UriSource = New uri("D:\MyImage.jpg") 'your path here bm.EndInit() MyImage.Source = bm 'set the Source to the BitMapImage By the way, you stated it was set initially, have you looked at the xaml to see how it was set? Again. WPF is not something I've worked with enough to be of any more help than this.
I get the following with that Error 1 'BeginInit' is not a member of 'Windows.UI.Xaml.Media.Imaging.BitmapImage'. 
To add on to my previous post: when do you use New? You have to use New whenever you're creating a new object of some kind. Anything that holds a collection, be it a list or an array, is an object; and obviously, class objects are objects as well. You can also use New when you're defining a new integer or string, although that's not required; but you can if you want to keep your internal model of understanding consistent. Here's an example: Function getCard(ByVal value as Integer, ByVal suit as String) as Card For Each card as card in deck If card.value = value andalso card.suit = suit then return card Next End Function In this example, we're not creating any new "card" objects: we're just searching for and returning one. On the other hand, when we're actually creating the cards themselves, that's when we have to use the New keyword to initialise it.
that didnt work but you pointed me to the right direction Rect001.Source = New BitmapImage(New Uri(Rect001.BaseUri, "Assets/Green.jpg")) 
1. Double-click the "Calculate" button. 2. In the sub that it loads to in the code editor, type: MsgBox(TextBox1.text &amp; vbCrLf &amp; TextBox2.Text) There you are... off to a good start.
Another hint you get the values from the textboxes using .text method so strName=tbName.text would put the value from the textbox (tbName) into a variable (strName)
Radio buttons should have a built-in change event that you can get to by double-clicking on them. When that event fires, call the textbox.clear method. Viola!
This.
How do you add to a string array though?
That depends on how the collection is stored. It doesn't really matter what the collection holds, it's more important what type of collection it is. If it's an array as you say, you will use arrayName(index) = string If it's a List you will use listName.Add(string) If it's a Queue you will use queueName.Enqueue(string) And so on and so forth.
I figured it was something simple like that. Thanks!
This worked perfectly. Thank you very much!
Well, thank YOU for the gold! :)
hey, thanks! I did this today and it worked great.
Phoneposting, conceptually I don't see why this wouldn't work Dim copied As New Queue(Of Whatever)(original) since a queue constructor overload takes an IEnumerable(Of T) and the queue class implements it there shouldn't be any problems 
That's currently what I'm doing, but I haven't written any tests to check if it works yet. I was just wondering if there was something obvious that I was somehow missing. Thanks!
Oh man this one is tricky if you can't use the built-in functions. Basically, you'll need to use the [Substring function](http://www.dotnetperls.com/substring-vbnet) to pull out strings from your original dateString. The easiest solution would be of course to substring the first two digits for the month, the fourth and fifth digits for the date, and the last four digits for the year... but this would only work as long as they enter it like this: 01/01/2014. If they entered this as 1/1/2014 or 1/1/14, you're screwed using this method. So what do you do? You'll need to use the [IndexOf method](http://www.dotnetperls.com/indexof-vbnet) to find the index of the forward slash character. The rest I'll leave to you to do as a thought experiment.
He said he's not allowed to use Date functions, but he should still be able to use *.split(). The first check you could do would be whether or not all 3 sections are digits, where at least 2 of them are greater than 1 (ie: only "Year" can be zero if 2 digit years are allowed), then you can check to see if more than 2 are greater than 12, if all 3 are greater than 12, one has to be less than 32. Then, if those pass which would rule out the more obvious flaws, check the formats... yyyy/MM/dd, and dd/MM/yy, etc... a bunch of if/else, or select/case depending on which of the 3 values is treated as year/month/day. Day can't be greater than 31, and can only be 31 in certain months... otherwise, it will be a Year (or invalid). Month can't be greater than 12, otherwise it's Day, otherwise it's Year. Once you have verified these... return True... or, if they actually want you to verify the date, you'd need to build a table of some kind, then look-up the date in the table and see if that year was a leap-year, what month it is, and how many days that month has, etc.
first thing I can think of is a minor race condition: the dataset is still propagating into the grid when you set the row, and then when propagation finishes it defaults to row 1 like normal.
You need to specify the rules. What's allowed, what's not. Are these OK? 2014-2-3, 2014/3/4, 3/4/2014 Does 3/4/2014 mean 3rd April or 4th March?
&gt; Basically, you'll need to use the Substring function to pull out strings from your original dateString. I'd examine each character from the string in turn, trying to build a valid date as you go. If you fail, reject the date string. BTW, for more pain, do this in Small Basic.
exactly this. you have to have rules, then you just parse it and validate the numbers... month = 1-12, day 1-28/29/30/31 depending on month, year makes sense for whatever the application is, etc.
This line here FileOpen(1, "Jobs.dat", filename, OpenMode.Random) ...looks a bit fishy.
such as... what's the value of filename? 
"Jobs.dat" would seem to be the filename. Why is there another filename right after it?
Note that you'll get a new queue but with the same objects. If you modify an object from the cloned queue, the object will also be modified in the original queue. 
that's a string literal., I mean the variable named filename. why's it there, what's its value... 
Oh nuts, that's not what I want. I want a deep clone, separate from the original. Is there any way to do that?
Can't you copy the key for the row, do the refresh, then select that key again?
Yes, but it depends on the nature of your object. If it is serializable, a common and fairly simple way is to serialize it to a memory stream and then de-serialize it to a new object. For very simple objects, you can look into the "MemberwiseClone" method, or add a "GetClone" method to your object that returns a copy of itself. Searching for "Deep Copy" on Google or StackOverflow will give you many ways of cloning more complex objects (those with internal collections and references to other objects, for example.) You can then iterate over the original queue, clone each object and add them to your new queue.
Gah, seems like a lot of work for something that I was hoping would be easy. Looks like it's back to using lists for me. Thanks though! Appreciate your help.
Normally you would use "Code Behind" to do the database work and insert the output into your ASP.NET interface using controls. Having said that the method you are using is more like what we had to do in Classic ASP (ASP3). TO do that correctly you would use something like this as the function behind and then in your html (asp) you would insert a &lt;%GetTableData%&gt; where you wanted the rows to go. Notice that the code is basically generating HTML. Public Function GetTableData() As String 'class variable DataTable, so you can edit it later too! Dim table As DataTable Dim da As SqlDataAdapter 'in some of your methods: Using sqlConn As New SqlConnection("connString") Dim sqlQuery As String = "SELECT * FROM MyTable" Using cmd As New SqlCommand(sqlQuery, sqlConn) Dim ds As New SqlDataAdapter(cmd) da.Fill(table) End Using End Using 'table is now filled from the data from dataBase!! 'you can loop through it: Dim tempString As String = "" For Each dr As DataRow In table.Rows 'for example 1st column is an int, 2nd is a string: Dim col1 As Integer = CInt(dr(0)) Dim col2 As String = DirectCast(dr(1), String) tempString = tempString &amp; col1 &amp; vbTab &amp; col2 &amp; "&lt;/br&gt;" Next Return tempString End Function A more modern approach is to use controls on an aspx page that gets it's dataset via Binding to a data control (sqlSataAdapter) or a function that returns a data set. The above function returning a dataset would look like; Public Function GetTableData() As DataSet 'class variable DataTable, so you can edit it later too! Dim table As DataTable Dim da As SqlDataAdapter 'in some of your methods: Using sqlConn As New SqlConnection("connString") Dim sqlQuery As String = "SELECT * FROM MyTable" Using cmd As New SqlCommand(sqlQuery, sqlConn) Dim ds As New SqlDataAdapter(cmd) da.Fill(table) End Using Return table End Using End Function Here is a Microsoft [article](http://support.microsoft.com/kb/307860) that might be easier to understand. 
JakDrako is correct, should be; FileOpen(1,"Jobs.dat",OpenMode.Random) or if the filename is a passed parameter FileOpen(1,filename,OpenMode.Random) 
 Public Class Form1 Private tRow As Integer = 0 Private Sub DataGridView1_RowEnter(sender As Object, e As System.Windows.Forms.DataGridViewCellEventArgs) Handles DataGridView1.RowEnter tRow = e.RowIndex End Sub Public Sub ResetSelectedRow() 'call this after your data rebind DataGridView1.Rows(tRow).Selected = True End Sub End Class I will sometimes just cheat and set the value in the datagrid tag property.
What have you tried so farÂ¿
I am utterly lost A.) For I as integer 
okay... have you looked at msdn documentation regarding the different kind of loops?
Is this h.s. or university? What level class is it?
Check out the mod method (modulo). This divides a number by x and returns the remainder from the division, eg 10 mod 3 = 1, 15 mod 5 = 0. 
 Dim counter As Integer For counter = 2 to 99 step 3 sum += counter; Next
This is a highschool introduction course 
Ok, I will keep that in mind for my future posts.
You've got the one of the more important parts done, creating a job when the done button is clicked. But you're simply overwriting the jobs data file with your new job. Even though there are better ways to do it (binding + observablecollections), I'd approach it this way: * When the program starts, open the jobs data file and serialize it to a `List(Of Job)` * Read the `List(Of Job)` into the listbox * Make it so the add new job form has is able to read the `List(Of Job)`, so when the done button is clicked the new job is added to the list. * Save the list to the jobs data file, overwriting it. * When the user comes back from job form, refresh the listbox so the new job is displayed edit: Structure Job Dim Nameofjob As String Dim Day As Short Dim Month As Short Dim Year As Short Dim Hour As Short Dim Minute As Short Dim Location As String Dim Description As String End Structure Eh... those `Short`s should all be `Integer`s. Doesn't matter though- classes are always preferable to structs unless you have a very specific reason to use a struct; this way is better: Public Class Job Public Property Name As String Public Property Date As DateTime Public Property Location As String Public Property Description As String End Class
[LINQ is always your friend. It never leaves you, it never lets you down.](http://msdn.microsoft.com/en-us/library/bb535181\(v=vs.110\).aspx)
All bow down before LINQ, the great and powerful tool of redemption. It can tell you anything about any dataset at any time... :P -Bone
This is what I use: Public Shared Function DeepCopy(Of T)(item As T) As T Dim formatter As New BinaryFormatter() Dim stream As New MemoryStream() formatter.Serialize(stream, item) stream.Seek(0, SeekOrigin.Begin) Dim result As T = DirectCast(formatter.Deserialize(stream), T) stream.Close() Return result End Function 
Man where you you 6 months ago when I needed this. Anyway, through my frustrations, I implemented binary serialization. Smaller, faster files, and no need to specify object type. Drawback is files cannot be edited in notepad like XML. It is also important to note that serialization is dependent on software build. If you change/update your program, you won't be able to load outdated serialized files. Creating and referencing a separate dll of serialization routines is the way to go. Binary serialization: Imports System.IO Imports System.Runtime.Serialization.Formatters.Binary Private Serializer As New BinaryFormatter Sub Save(ByVal FileName As String, ByVal ObjectToSave As Object) Dim fo As New FileStream(FileName, FileMode.Create) Serializer.Serialize(fo, ObjectToSave) fo.Close() End Sub Function Load(ByVal FileName As String) As Object Dim fo As New FileStream(FileName, FileMode.Open) Load = Serializer.Deserialize(fo) fo.Close() End Function 
This sounds really simple. Is the data coming from a table or just variable array in program? Either way loop through data and count For x loop Select case array(x) Case &lt; 3 increment poor Case &gt;4 and &lt; 6 increment good Case &gt; 6 increment excellent Next x Purposely not in correct syntax as I am guessing this is homework???
A little bit. Although your example code doesn't seem to make sense. You have "i As Integer" but then using i as the rating... then you have *.counter... which isn't used... So there's no real chance for user assigned ratings that I can see. Public Function GetRating(ByVal Rating As Integer) As String Select Case Rating Case 1 To 3 Return "Poor:" Case 4 To 6 Return "Good:" Case Is &gt; 6 Return "Excellent:" Case Else Return "No Rating" End Select End Function Public Sub LoadData(ByVal DataStuff As String()) For i As Integer = 0 To DataStuff.Length - 1 lstDisplay.Items.Add(GetRating(Integer.Parse(DataStuff(i)))) Next End Sub That's assuming you pass a string array holding ratings into LoadData(). Dim Data() As String = New String(){"1","2","3", etc} 'Read from a file, or whatever. LoadData(Data)
You tried reinstalling? Also try uninstalling all Visual Basic stuff that has been installed in the past like the distributables. 
I have tried reinstalling and didnt work. Ill try deleting everything and see if that works
I don't think it's possible, but there may be a plugin for Visual Studio that allows you to do that. 
Thank you
/r/visualstudio ***** ^This ^is ^an [^automated ^bot](http://github.com/WinneonSword/LFB)^. ^For ^reporting ^**problems**, ^contact ^/u/WinneonSword.
I thought maybe you could do it while creating a function or subroutine in VB. Thanks for the help!
Well, if you are looking for which key was pressed: Protected Overrides Sub OnKeyDown(e As KeyEventArgs) MyBase.OnKeyDown(e) Label1.Text = e.KeyCode &amp; "=" &amp; ChrW(e.KeyCode) End Sub e.KeyCode returns the [ASCII](http://en.wikipedia.org/wiki/ASCII) value, which is a digit, so to get "normal" text from it, you have to convert that back into a character using Chr() or ChrW() If you want to go the other direction, you can use AscW("X") ... which will give the digit representing the character. In most cases, you wouldn't be looking for alphabetical characters, a typical example would be: Private Sub Form_KeyUp(sender As Object, e As KeyEventArgs) Handles Me.KeyUp Select Case e.KeyCode Case Keys.Escape Me.Close() Case Keys.F1 ShowHelp() Case Keys.Enter Label1.Text = "User Pressed Enter" End Select End Sub
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**ASCII**](http://en.wikipedia.org/wiki/ASCII): [](#sfw) --- &gt; &gt;The __American Standard Code for Information Interchange__ (__ASCII__ /ËÃ¦ski/ *__ASS__-kee*) is a [character-encoding scheme](http://en.wikipedia.org/wiki/Character_encoding) originally based on the [English alphabet](http://en.wikipedia.org/wiki/English_alphabet) that encodes 128 specified [characters](http://en.wikipedia.org/wiki/Character_(computing\)) - the numbers 0-9, the letters a-z and A-Z, some basic [punctuation symbols](http://en.wikipedia.org/wiki/Punctuation_symbol), some [control codes](http://en.wikipedia.org/wiki/Control_code) that originated with [Teletype machines](http://en.wikipedia.org/wiki/Teletype_machine), and a [blank space](http://en.wikipedia.org/wiki/Space_(punctuation\)) - into the 7-bit binary integers. &gt;ASCII codes represent text in [computers](http://en.wikipedia.org/wiki/Computer), [communications equipment](http://en.wikipedia.org/wiki/Communications_equipment), and other devices that use text. Most modern character-encoding schemes are based on ASCII, though they support many additional characters. &gt;ASCII developed from [telegraphic codes](http://en.wikipedia.org/wiki/Telegraph_code). Its first commercial use was as a seven-[bit](http://en.wikipedia.org/wiki/Bit) [teleprinter](http://en.wikipedia.org/wiki/Teleprinter) code promoted by Bell data services. Work on the ASCII standard began on October 6, 1960, with the first meeting of the [American Standards Association](http://en.wikipedia.org/wiki/American_Standards_Association)'s (ASA) X3.2 subcommittee. The first edition of the standard was published during 1963, a major revision during 1967, and the most recent update during 1986. Compared to earlier telegraph codes, the proposed Bell code and ASCII were both ordered for more convenient sorting (i.e., alphabetization) of lists, and added features for devices other than teleprinters. &gt;==== &gt;[**Image**](http://i.imgur.com/jzOTeLJ.jpg) [^(i)](http://commons.wikimedia.org/wiki/File:ASCII_Code_Chart-Quick_ref_card.jpg) - *A chart of ASCII from a 1972 printer manual* --- ^Interesting: [^ASCII ^art](http://en.wikipedia.org/wiki/ASCII_art) ^| [^ASCII ^Corporation](http://en.wikipedia.org/wiki/ASCII_Corporation) ^| [^ASCII ^Media ^Works](http://en.wikipedia.org/wiki/ASCII_Media_Works) ^| [^PETSCII](http://en.wikipedia.org/wiki/PETSCII) ^Parent ^commenter ^can [^toggle ^NSFW](http://www.np.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+cfyrplh) ^or[](#or) [^delete](http://www.np.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+cfyrplh)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
What happens when you try to run the macro?
Personally I'd create a function in the form that returns the value you want. So in the form: Public Function DoSomething() as string me.showdialog return TextBox1.text end function and call it from the other project ... String _Result = String.Empty; MyVBProj.Myform _MainForm = new MyVBProj.Myform(); _Result = _MainForm.dosomething If you need to do something more complex, then you can always return a bool for closed or canceled, and pass the string into the function byref. 
Thank you so much! ~~Visual Studio is telling me that "_Result" is a field but is used as a type. Do you know what's going on?~~
Never mind. All done! I think it works because it's not giving me an error :D Any way to throw up the string on a dialog box to check if it's gone through?
You can always use a messageBox to show the string.
Well I ended up finding the answer myself by accidentally double-clicking on the form background and put the middle line in their and it worked! Haha thanks anyway :)
Thanks! Any idea how to copy forms? 
Actually, no ... Since this is VB6, not .NET, there is no "Handles" clause. The IDE names the events to match the control name. 
Couple of things: For setting the label properties (like bold), you can click on the label in the form, and then go to the properties window, and set the font properties from there. Bold is part of the font properties, so clicking the little box next to "font", will pop up a window that allows you to set the size, font name, bold, underline, etc. If the properties window isn't visible in VB6, there is an icon on the toolbar to display it (a form with a finger pointed at it). More importantly, why are you learning VB6, instead of .NET? VB6 is circa Windows 98, and is of almost no value as a programing language today, other than for maintaining legacy code. For someone just starting out you should be learning .NET. VB.NET replaced VB6 12 years ago, and the current version is VS 2013 / VB12. 
Copy the controls, or the entire form? You can save the form, then save as and give it a new name. Then you can add the old one back to the project by using the Project menu, and "Add File". You can also just create a new form, and then copy the controls, and paste them to the new form. You'll then have to copy the code, and past it as well. 
At least it's tagged as VB6. So many times people post and you have no idea what they are using. Could be 6, or VBA, or .NET, or VB Script ..... 
You really can't learn any development language in a day. Hell, I've been doing this 50+ hours a week for over 10 years, and you could fill several books with the stuff I don't know. The best thing you can probably do is to let us know what you need to accomplish, what you have gotten to work, and what doesn't work. Posting some code will probably help as well. 
What /u/hdsrob said. Show us the code that makes no sense and we can try to steer you in the right direction.
from a glance, that code looks basically complete, so what's the problem? the more specific your question, the better an answer can be.
I'd have to agree. It's getting values from a set of files, and using the Windows API to move the mouse pointer to locations, and click buttons. We won't really have any knowledge of what any of the values mean, the file formats, or what the intended outcome is without a lot more info.
This code automates a change in a single parameter during a build process in a 3D printer. I need to write more codes now to automate *all* of the parameters than can be changed during the build process, about 7 in total. The problem is the number pad, with which I change a parameter value, is always in a different location on the screen relative to which parameter you click on. In order to save me the trouble of mapping coordinates of every single digit on every number pad for every parameter, I want to write a code that will click on any digit using a set of values that are relative to the corner of the number pad (the corner of the number pad appears wherever the click was made on the button for a specific parameter. EDIT: for reference http://i.imgur.com/j9GBRhW.png
http://www.reddit.com/r/visualbasic/comments/205m59/noob_here_trying_to_understand_someone_elses_code/cg01y0j
I added a picture to my previous comment for reference. So I have all the offsets in x and y from the corner of the number pad, how would I go about writing the function that will execute the individual mouse clicks dependent on a numerical input?
currentX + offsetX it's just math. don't over-think it.
Does the maker of the printer have an API you could use? That's be simpler.
You should be doing this with a database like MSAccess or LibreOffice Base. That way you can make changes and have the software create forms and reports. Once the design is fixed, you can consider hard coding everything.
The way i would do it (in pseudo code): FPP = Friends per player EPP = Enemies per player P = Set of Players {A, B, C, ...} // FPP + EPP has to be &lt; P.Count for each p in P R = P without (p and p.Friends and p.Enemies) randomized while p.Friends.Count &lt; FPP pf = take (and remove) first from R p.Friends.Add(pf) pf.Friends.Add(p) while p.Enemies.Count &lt; EPP pe = take (and remove) first from R p.Enemies.Add(pe) pe.Enemies.Add(p)
Since a string is nothing more than an array of char, you could loop through from 0 to the length of the array -1 using the iterator to keep track of the index number of the char position in the string. This however would only work when both strings are the same size as a different size would create an out of bounds condition. You could however find the length of both and always create the loop for the shortest string. When the loop ends all other characters in the longer string are counted giving you your total result. This is one of many way of doing it. Example of what I'm talking about Dim s as String = "Hello World" MsgBox(s(4)) Would display o as o is the 4th index in the string (0 based) Keep in mind too that comparing H with h would result in a difference. If you indeed want case to come into play that is fine, if you don't want to be case sensitive you will want to check against the .ToLower or .ToUpper version of each character.
You could just run that code through one of the code converters if you don't understand it enough to convert by hand. http://converter.telerik.com/ should work ... That code is just using a simple TCP Client / TCP Listener setup for sending messages. Here's a couple of samples that should get you going ... http://code.msdn.microsoft.com/windowsdesktop/Simple-Multi-User-TCPIP-43cc3b44 http://www.nullskull.com/articles/20020323.asp http://www.codeproject.com/Articles/38914/A-TCP-IP-Chat-Program 
it's reading a comma delimited text file some number of times depending on the length of nel. (apparently an array of info) Every time it reads the file it breaks down the fields into an array and then compares the current iteration of the for loop with the first element read in from the .txt file and if thy're the same it stores the 2nd and 3rd element of temporary into numpadx(iteration value) and numpady(iteration value). Seems very convoluted to me. Also appears to be prone to problems depending on what the numpadx and numpady arrays are holding and what they're going to be used for later on.
maybe you could make/find a visual studio plugin that iterates all code windows and looks for lines that start with Dim. I used a macro plugin for vb6 that could do this, the macros were done in vbscript so it was pretty powerful. 
What exactly are you trying to do, and why are you doing it? The reason I'm asking is that the question seems kind of nonsensical with the given information. Do you need the variable names, or the values, or both? 
Do all games have 5 characters?
This assumes *Option Explicit*
At the least you need the winsock control. [Here's a sample](http://www.vb-helper.com/howto_winsock_chat.html)
No, it may range from 5 to maybe 12. Each character may also have 1-3 friends and enemies, but the number of friends and enemies is always equal. 
As a general rule, treat each possibility as a 'card' or as 'dice' and 'deal' them according to your rules. That should eliminate duplicates, so the same pair can't be friends and enemies.
I need to gather the names of all of the variables and describe their purpose and datatype.
no need for the explicit if/else check: listName.RemoveAll(Function(a) a.propertyName &lt;= 0)
It is Shared .... The Shared keyword simply means that you don't have to create an instance of the class to use the function. You could inline it with : listName.RemoveAll(function(byref a as objectName) a.propertyName &lt;= 0 ) 
Any lack of option explicit hurts my head
You have to use a [type parameter](http://msdn.microsoft.com/en-us/library/ms235246.aspx): Private Function getOnlyObject(Of T)(currentList As List(Of T)) As T
You're looking for [IEnumerable.FirstOrDefault](http://msdn.microsoft.com/en-us/library/bb340482\(v=vs.110\).aspx), which returns the first element in a list/whatever, or null if there's no elements.
There's two ways to do this- one is to use [XML commenting](http://msdn.microsoft.com/en-us/magazine/dd722812.aspx) to document every public variable and use some utility like sandcastle to make viewable documentation. The other way, assuming that you have classes with public properties, instead of variables scattered all over the place, is to use reflection to get the actual property names and values. [Here is a way to do it, from StackOverflow](http://stackoverflow.com/a/737159/899316). This is probably a bit unwieldy, but certainly possible. I recommend the XML comments instead.
Maybe I'm missing something but I don't understand the need for a loop. Wouldn't the distance just be hours traveled times miles per hour? 
It seems to be a poor assignment. You'd have to make up something for the loop to do. Maybe show the distance traveled at various intervals of time or something, which may be what you mean to do. This code has some problems. You never change the value of inthours or incount, so the loop is never going to run if the starting hours is greater than 0. Also you never do a calculation to work out the distance at all, all this does is add 1 to the speed and save it as miles, which doesn't really make any sense.
That may be the way that I am explaining it then. The whole assignment is supposed to use a loop along with a list box. See the input box asking for hours? If I did that correctly the amount of hours entered in will be the loop counter. And see the input box with the speed? If I did that correctly then the only calculation that needs to happen is the speed added onto itself for every loop, then displayed back into a list box. As I said though, I am having issues with it. And I know I declared a lot of integers that I haven't used or in the end may not even need to use. The reason I have adding 1 to speed was simply to see if when I had the calculation set up that way would it work. And it didn't. 
I have to alter the value inside the loop? Do you mean that I have to take the input box inside the loop itself? So basically as soon as the application starts, the loop begins? See I was taught that by declaring the miles or count as an integer, it would automatically be assumed to be zero. Or am I off base with that?
Trust me I'm fine with you being vague, I've been trying to get this right for over a week now, for me it's a matter of pride to get it down. Are you talking about a FOR...NEXT loop? The issue with that is because you have to declare the count, but my understanding is that this type of loop won't accept input as the integers to work? I wanted to use this loop but as I said it doesn't seem to me to fit a major part of this assignment, I have to use input boxes to get the loop counter as well as what is being calculated. From what I am looking at that can't be done in that type of loop. And yes I know my intspeed calculation is way off, but that is the way the assignment wants the calculations done I think. The assignment example states that for 2 hours of traveling at a speed of 30MPH total miles traveled is 60miles. Meaning two loop iterations, adding 30 on top of 30. I don't know in theory I have that correct maybe I'm just executing it wrong?
Thank you! Your reply and /u/postalelf just helped me with a crucial step. The calculation and loop is working and displaying correctly in the loop. I made the following changes: strinput = InputBox("What was the speed of the vehicle in MPH?") Integer.TryParse(strinput, intspeed) strinput = InputBox("How long (in hours) has the vehicle been traveling?") Integer.TryParse(strinput, inthours) For i = 1 To inthours lstmybox.Items.Add(intmiles) intmiles += intspeed Next i Thanks to this I finally have it working correctly. Now for the next part, I have to change the way I display all the results in the list box to actually show the count alongside the speed each time it increases. I have to convert everything into a string? Or will another lstmybox.items.add() work out correctly?
One thing I noticed, you'll want to flip the two lines inside your loop, or you'll get an extra line at the top with a zero, and your last one will be missing, since you're sending miles to the listbox before you calculated miles for the first time, and before you calculate it for the last time. You'll need to convert the output to a string. An easy way to make your intmiles into a string is to just add ".tostring" to the end, so it'll be intmiles.tostring. And since i is actually a variable you can use, you can also do i.tostring to get the counter. Then just tie them together with &amp;'s and spaces or text before you add them to the list box.
Pretty much this. The most useful aspect of a For-Next loop is the fact that you can access the counter directly as a variable and do whatever you want with it: display, format or even (not recommended) change it. That's pretty much the first loop most of us older programmers had to learn, before we had For-Each loops; the only way we could iterate through any sort of array (yes, we only had arrays back then; no lists!) was to use a For-Next and retrieve the element of the array using the counter.
Thank you! I switched the lines of code and that fixed a problem I didn't even realize was there. So I am attempting the string issue, and I think it will be a little more involved in that. The listbox is suppsed to read out like this: Vehicle speed: (speed here) Time Traveled: (loop count (hours here)) Hours_______Distance Traveled The above is basically two columns showing in order the count on the left and the subtotal for miles each line. Then total distance at the bottom. How do I even begin that?
You could do something like this: Add the first two lines to the listbox before you go into the loop. Then within the loop, do something like lstmybox.Items.Add(i.ToString &amp; Space(4) &amp; intmiles.ToString) After the loop exits, add the final grand total line.
Are those the only textboxes on the form?
There is one other text box in the form, however the text validation rules are different for it. Thanks
Use a Sub instead Private Sub validateText(byval text as string) If text = String.Empty Then lblMessage.Text = "Score 1 is blank." ElseIf (IsNumeric(text) = False) Then lblMessage.Text = "Score 1 is not a number" ElseIf (text &gt; 10) Or (text &lt; 1) Then lblMessage.Text = "Score 1 is not inbetween 1 and 10" Else : lblMessage.Text = "Score 1 is Valid" End If End Sub To call it: validateText(txtScore1.text) validateText(txtScore2.text) ... You'll need to tweak it so that it doesn't always say score 1, but how to do that I'll leave as a thought experiment for you. I'll run through how the sub works so that you'll both understand why I did the things I did and also how you can tweak the code for it to reflect the correct error message. Firstly, what's a sub? Think of subs as a chunk of code that you can constantly reuse over and over again. If you find yourself ever needing to copy and paste a piece of code, chances are you can rework it so that it uses a sub instead. Of course, subs must also be customisable to suit your current needs: which is where arguments come in. Currently our sub only uses one argument: a string named "text". When calling the sub, whatever you put in the () after validateText - as long as it's a string - will be known as "text" within the sub. Therefore, if you called the sub using validateText("hello world!"), within the sub, text will refer to the string "hello world!". Next, you'll see your code exactly as you provided it, except that I've removed references to the control and replaced it with text. This is because you're going to be providing the text to the sub to check via the argument! Everything will run exactly as you expect it to; the only thing else you'll need to do is find out how to display Score 2 when it's using txtScore2.text. (Hint: insert another argument)
Thanks heaps for the detailed explanation, really helpful when someone like myself is trying to learn vb. Cheers.
Hi. Thanks for your idea, unfortunetly I am limited to the specific details that I was provided with and hence I had to use text boxes. Cheers.
Well, then in the case, consider using Select Case True instead of multiple IF statements. It allows you to test for multiple different things and see if they are True or not Select Case True Case String.IsNullOrEmpty(txtScore1.Text) lblMessage.Text = "Score 1 is blank." Case (Not IsNumeric(txtScore1.Text)) lblMessage.Text = "Score 1 is not a number" Case (txtScore1.Text &gt; 10) Or (txtScore1.Text &lt; 1) lblMessage.Text = "Score 1 is not inbetween 1 and 10" Case Else lblMessage.Text = "Score 1 is Valid" End Select 
You could use a `System.IO.StringReader` to get a stream for the string
for loops would defeat the convenience of using the TextFieldParser. could just have x and y vars and increment as you described. there are also libraries out there that will do all this for you.
Thank you so much for all of your help!
Thank you!
Need more information on ranges of numbers needed. 001C01 ranges from 001 to ??? C 01 to ??
Ah ok sorry about that. The limit should also be something definable now that I think about it. I sometimes need to create up to 2000 of these at any one time. I work in electronics and these are serial ranges for circuit boards. Thanks
Say for instance I need 6 serials for a panel. 2AEE28000355F3417407K3417407001C01 2AEE28000355F3417407K3417407001C02 2AEE28000355F3417407K3417407001C03 2AEE28000355F3417407K3417407001C04 2AEE28000355F3417407K3417407001C05 2AEE28000355F3417407K3417407001C06 then as that panel is now complete the serial rolls to 2AEE28000355F3417407K3417407002C01 2AEE28000355F3417407K3417407002C02 2AEE28000355F3417407K3417407002C03 etc does that help at all?
**EDIT: See followup post below!** Function generatePanel(k as long, c as integer) as list(of string) Dim serialList as new list(of string) For counter = 1 to c dim kLiteral as string = k dim cLiteral as string = getLiteral(c) Dim str as string = "2AEE28000355F3417407" &amp; _ "K" &amp; kLiteral &amp; _ "C" &amp; cLiteral serialList.add(str) Next Return serialList End Function This snippet will generate a single panel's worth of serials for you. You call the function this way, making sure to supply k (eg. 3417407001) and c (the number of serials you'll need for the current panel). generatePanel(k, c) You'll also need this snippet thrown in somewhere: Function getLiteral(value as integer) if value &lt; 10 then return "0" &amp; value else return value End Function This basically transforms whatever the integer is and adds a zero if it's &lt; 10, or just returns the value as it is if it's &gt; 10. It'll also return the value as it is if it's in the hundreds or thousands, so there's that to note, but it seems that c never really goes above 99 so it shouldn't be a problem.
I really like John Skeet's answer to this stack overflow question: http://stackoverflow.com/questions/9802615/using-checkforillegalcrossthreadcalls-a-good-way-of-blocking-cross-threading-err I don't know exactly where you want to use delegates. There's plenty of places you could throw them in if you really want to use them, but I'm not sure how using a Delegate solves any problems beyond using a Delegate.
The reason you are getting the cross-thread exception is because you are trying to update a label on the main form from a thread other than the UI thread. When using 2 delegates to update 2 different labels on the form, you will get some other errors because you will be simultaneously calling the main thread from 2 different background threads. This will cause the form to lock up. A way around this is to use a mutex to allow for safe thread entry. Note: You notice I commented out another way of updating the labels that doesn't require delegates by invoking the label update sub directly. Here's the code: Imports System.Threading Public Class Form1 Dim i As Integer = 0 Dim i2 As Integer = 0 'declare two threads 'thread 1 Dim thread As System.Threading.Thread 'thread 2 Dim thread2 As System.Threading.Thread Delegate Sub delThread1(count1 As Integer) Delegate Sub delThread2(count2 As Integer) Dim mut As New Mutex() Private Sub Button1_Click(sender As System.Object, e As System.EventArgs) Handles Button1.Click 'replace countup() with, this will assign the countup method to thread 1 thread = New System.Threading.Thread(AddressOf countup) thread.Start() End Sub Private Sub Button2_Click(sender As System.Object, e As System.EventArgs) Handles Button2.Click ' countup2() thread2 = New System.Threading.Thread(AddressOf countup2) thread2.Start() End Sub Private Sub countup() Do Until i = 100000 i = i + 1 mut.WaitOne() 'Alternate way not requiring a delegate 'Invoke(Sub() Label1.Text = i) Me.Invoke(New delThread1(AddressOf UpdateLabel1), New Object() {i}) mut.ReleaseMutex() 'We wont be able to see the label unless we refresh the form Loop End Sub Private Sub countup2() Do Until i2 = 100000 i2 = i2 + 1 mut.WaitOne() 'Alternate way not requiring a delegate 'Invoke(Sub() Label2.Text = i2) Me.Invoke(New delThread2(AddressOf UpdateLabel2), New Object() {i2}) mut.ReleaseMutex() 'We wont be able to see the label unless we refresh the form Loop End Sub Public Sub UpdateLabel1(count1 As Integer) Label1.Text = count1 End Sub Public Sub UpdateLabel2(count2 As Integer) Label2.Text = count2 End Sub End Class 
Actually, I thought it would have been interesting for me to give a go at coding this, so here you go! https://anonfiles.com/file/fd273c39c3d6d23655a790bc9bf0c46f This will generate the serials into an output.txt in the same directory.
It shouldn't be too difficult to tweak it so that it spits out into a CSV-style file instead of a txt file. Just got to change the way it formats the information slightly, is all. Here's the source code for you to have a go at it. Hope it helps! https://anonfiles.com/file/020b07ad15c4efe49a721b358c9ad87d
While I'm here, I figure that I might as well share a bit on what gave me the most problem. The trickiest bit here was generating the correct number of "significant figures", or what I chose to call "sigDigits" in the source code. I wanted the method to, when given sigDigits = 4, spit out 0004 when fed the integer value of 7 and 0025 when fed the integer value of 25. I initially tried doing a reverse For-Next loop, with a step of -1 going through the character array of the string, but it soon proved too complicated for me to make sure that everything worked out. The reverse logic was tricky for me to wrap my head around. Then it struck me. Rather than use reverse logic, how about I simply just reverse the order of the string's character array? And that's pretty much what I did. I would first populate the string with additional zeroes, to make sure that I would have enough zeroes to trim from, and then reverse the string. Therefore, with a value of 13 to 4 sigDigits, it would first add 4 zeroes to the front of 13, making it 000013. Then I would reverse it, so that it would become 310000, and start collecting characters from it until I got to the correct sigDigits. Therefore, starting from the left, we would start collecting numbers: 3, 1, 0, 0, and then we'll stop because we're now at sigDigits = 4. We're left with a string that says 3100: and now the only thing that's left to do is to simply reverse it back again! And viola: the ultimate end value of 0013, as exemplified by the function getLiteral().
New Object() {i} is the array of parameters you want to pass to your the sub UpdateLabel1/UpdateLabel2. You don't have to have the New Object() {} declaration if there is only one parameter, so you could use Me.Invoke(New delThread1(AddressOf UpdateLabel1), i) If you were to be passing more than one parameter to the sub, you would need the array. For example Delegate Sub delThread1(count1, param2, param3) Me.Invoke(New delThread1(AddressOf UpdateLabel1), New Object() {i, param2, param3}) Public Sub UpdateLabel1(count1 As Integer, param2 as Integer, param3 as Integer) Label1.Text = count1 + param2 + param3 End Sub
I think my thinking was wrong. I thought I needed a delegate for my countup() and countup2() methods but I really need a delegate for my actual label controls. I guess I really dont understand how threading works. Lets say I push the button and my first counter starts. I am assuming I am currently in the label1 thread. If i push my second button (to start my second counter) I am attempting to start a second thread from the first thread and that gives me the error. Is my thinking correct? How do delegates come into play to allow my to access the second thread for the second counter? Not sure if that makes sense.
The threading concept is much more important in this scenario, don't get hung up too much on delegates. All a delegate is, is a type: http://msdn.microsoft.com/en-us/library/900fyy8e.aspx That's the C# reference, but they are exactly the same. You can create a delegate type for your countup() and countup() methods, you can create a delegate for other methods that just set the label controls, you can create a delegate for any function call you want to make. They in no way affect threading at all. They're only useful for passing function calls as parameters. For this exercise, let's imagine the threads are well-behaved children. You give each child a task to go into separate rooms and clean them. This includes picking up any dirty laundry and getting that washed. The problem is they are kids, and can't operate the washing machine, besides there's only one, and we want to avoid fights over the limited resource. So, instead of telling them to wash the clothes, you give them a way of letting you know clothes need to be washed instead by handing you their laundry baskets. In that metaphor, the delegate _could_ be the description of giving you the laundry baskets. If you went down that path you could have other methods that just update the label text and you could pass a delegate pointing to one of those methods to each thread using a parameterized thread start. The countup methods then would use Control.Invoke to call that delegate. 
Easiest way would be not to use one loop but two loops. Loop one: 8AM-1PM. This leaves you with how much caffeine is in the body at 1PM. Add 2.9 to this since you're ingesting more. Loop two: 1PM-8AM. This leaves you with how much caffeine is in your body the next day.
My professor suggested using one loop and possibly an if...then statement. how would that work? Either way, thank you for your reply!
 mg=initial Do Until hours &gt; 24 mg = mg - (mg * 0.13) hours += 1 If hours = 5 Then mg2 = initial mg2 = mg2 - (mg2 * 0.13) mg3 = (mg + mg2) End If Loop txtboxTwoServings.Text = CStr(mg3) That is what i have. Because i have to account for the total of both after 24 hours
Account for both of what? :) Also your loop is going to run too long. Besides, logically it makes more sense to be using a for loop instead.
Sadly I do need to use loops (its for a class project). It should be a very simply solution but my code just isn't adding up to the answer I need. 
I see. First thing to try is changing the loop to [a for loop](http://msdn.microsoft.com/en-us/library/5z06z1kb.aspx). Second thing is make sure you're only keeping track of what you need to, which is hours and caffiene amount. Hours is taken care of by the loop counter, so all you need to worry about is a single variable, the caffiene amount. Third, run the loop without the additional amount added in hour 5. What does your loop code end up looking like? After it runs okay, think about what needs to be done to the amount of caffeine remaining once you get to hour 5, and how that would be accomplished. 
It might not be linear if 13 percent is removed from each hourly total.
thank you
 Private Sub btnCalculate_Click(sender As Object, e As EventArgs) Handles btnCalculate.Click Dim Serving, initial, mg, mg2, mg3 As Double Dim hours As Double = 1 If rdbtnCoke.Checked Then 'if the coke button is checked these calculations will take place Serving = CDbl(txtboxServing.Text) initial = CDbl(Serving * 2.9) txtBoxInitial.Text = CStr(initial) txtBoxInitial.Text = FormatNumber(initial, 2) &amp; " mg." 'Gets the initial amount of caffeine in the body after 10 hours mg = initial Do Until hours &gt; 10 mg = mg - (mg * 0.13) hours += 1 Loop txtboxAmount10.Text = CStr(mg) txtboxAmount10.Text = FormatNumber(mg, 2) &amp; " mg." 'Amount of hours until less than 1mg caffeine left in body Do Until mg &lt; 1 mg = mg - (mg * 0.13) hours += 1 Loop txtboxTime.Text = CStr(hours - 1) txtboxTime.Text = FormatNumber((hours - 1), 0) &amp; " hours" 'The part I'm stuck on mg = initial Do Until hours &gt; 24 mg = mg - (mg * 0.13) hours += 1 If hours = 5 Then mg2 = initial mg2 = mg2 - (mg2 * 0.13) mg3 = (mg + mg2) End If Loop txtboxTwoServings.Text = CStr(mg3) That is the code for the specific button and the calculation. 
And I wanna do the for loop but I don't understand it that well. (I'm obviously a beginner) haha
 mg=initial Do Until hours &gt; 24 mg = mg - (mg * 0.13) hours += 1 If hours = 5 Then mg2 = initial mg2 = mg2 - (mg2 * 0.13) mg3 = (mg + mg2) End If Loop txtboxTwoServings.Text = CStr(mg3) *To format, add 4 spaces before each line or 2 spaces after each.*
Wow Thanks! The reason I am using 2D arrays is because the CSV file is being generated by an external application on another system - where 2150 records are created (0 to 49 for the 50 states) and (0 to 42 for the value for each job type). So the first 0 to 42 values would be for State code 0, then the next 43 values would be for State Code 1, next 43 for Stage Code 2 and so forth. These numbers will never change in size as in terms of the 2150 records being output by the other system. 
Ah, I see. If that's the case, it's even easier! Your object template can look something like this: Public Class job Public Property stateCode as Integer Public Property jobCode as Integer 'string if it's alphabetical Public Property value as String End Class The code is exactly the same as what I listed above. Using a List of objects, as opposed to a 2D array, is easier because of For-Each method. It really simplifies our lives a lot as programmers, because we no longer have to deal with nonsense like zero-based indexes that don't align with counts etc. All you have to do, if you want to manipulate the data, is search through the list using For-Each. I'll give you an example. Say you use my job object template. If I wanted a list of all the objects in stateCode 5, I can call the below function using: getByStateCode(5) Public Function getByStateCode(index as integer) as list(of job) Dim searchList as new list(of job) For each job in jobList if job.statecode = index then searchList.add(job) Next Return searchList End Function "But this is so much harder! I can just do this in a 2D array by calling jobArray(5, X)!" You're right, but only for this instance. Doing it this way will allow me to write functions that can search through job.values for jobs that contain a certain string, or jobCodes above a certain number, or whatever else that you can think of. For-Each is amazing, and the best thing since QBASIC did away with line numbers.
The largest issue you have is using bad variable types.. The very first thing to do is to go to "My Project" in the solution explorer, and to the "compile" tab, and set both "option explicit", and "option strict" to **on**. This will force you to declare your variable types, and save you from countless hours of troubleshooting mystery issues. The main issue I see is that you aren't converting the contents of the score textboxes to a number before adding them. This will unfortunately concatenate them, not perform math on them. So if I put 1, 2, and 3 into the three score textboxes, intsum will = 123, not 6. The easy fix is to convert them inline: intSum = Convert.ToInt32(Txtscore1.Text) + Convert.ToInt32(Txtscore2.Text) + Convert.ToInt32(txtScore3.Text) but this will cause an error if the value of the textBox isn't a number. Ideally you want to create 3 new integers (one for each score), and try to parse the textbox value into them: Dim Score1 As Integer Integer.TryParse(Txtscore1.Text, score1) Dim Score2 As Integer Integer.TryParse(Txtscore2.Text, score2) Dim Score3 As Integer Integer.TryParse(Txtscore3.Text, score3) intSum = score1 + score2 + score3 .... 
in form_load, prompt for password, if incorrect, unload form.
Forgot to post the code. 
It's easy enough. You have to change the original string input into an array of characters, then iterate through each character and alter it according to your rules. Recombine it to a new string. Once that's done, just call StrReverse() on the new string.
Trying to verify that the input is a number, but it's counting the incorrect input as part of the loop when I don't want it to. Thanks in advance!
i got all the parts except the vowels. I dont understand how to replace the vowels with different numbers given the order they appear in the orininal password.
Create an integer called vowelCount, initialise it to start at 1. Every time you replace a vowel, increase vowelCount by 1.
You could reduce that to: If Decimal.TryParse(strInputSales, decSales) Then decTotalSales += decSales 'Optional Else MessageBox.Show("Please enter a valid number") End if If the parse works, use it, if it's blank or anything other than a decimal, the tryparse would return false and decSales would be 0.
Do you mean like syntax highlighting? It's really dependent on the editor program. Normally you can change them in the settings. There's no standard that I know of for defining these colours.
Yes this is VS 12, I found the Fonts and Colors section, I'll look through it. Thanks!
Yes that's what I meant
The only thing I see in the code is the worthless i variable. There is nowhere where it's being used but it is being incremented with each iteration of the loop from the parser. [textfieldparser](http://msdn.microsoft.com/en-us/library/microsoft.visualbasic.fileio.textfieldparser%28v=vs.110%29.aspx)
You want to decompile a dll that was written in VB4 or less to get at the function code? The only reference I could find for vb4 was [DoDi's](http://vbdis4.angelfire.com/) [2nd link](http://www.woodmann.com/collaborative/tools/index.php/DoDi's_Visual_Basic_3/4_Decompiler). [vbreformer](http://www.decompiler-vb.net/vbreformer-professional.aspx) is one I have used to recover 32 bit code. Understand though your are not going to get VB code your going to get [P-Code](http://en.wikipedia.org/wiki/Microsoft_P-Code) [Moreinfo](http://www.woodmann.com/crackz/Tutorials/Vbpcode.htm) Microsofts intermediari language. My recommendation is that you load the DLL into a virtual machine and look for sub and function entry points. You can use object explorer to do this inside the app. Map the dll functions and determine what there purpose for each from the inputs and outputs. Then roll it from scratch. Attempting to do an update on a 16-bit vb3-4 app to .net is insane to say the least.
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Microsoft P-Code**](http://en.wikipedia.org/wiki/Microsoft%20P-Code): [](#sfw) --- &gt;__P-Code__, short for *packed code*, is a [Microsoft](http://en.wikipedia.org/wiki/Microsoft)'s proprietary [intermediate language](http://en.wikipedia.org/wiki/Intermediate_language) that provided an alternate binary format to [machine code](http://en.wikipedia.org/wiki/Machine_code) (called "native code" in relevant products) for any compiled binary (e.g. [DLLs](http://en.wikipedia.org/wiki/Dynamic-link_library), [ActiveX controls](http://en.wikipedia.org/wiki/ActiveX_control), or applications). Its primary goal was to produce smaller files. [*[citation needed](http://en.wikipedia.org/wiki/Wikipedia:Citation_needed)*] P-code output support was provided in 16-bit [Visual C++](http://en.wikipedia.org/wiki/Visual_C_Plus_Plus) compilers and all versions of [Visual Basic](http://en.wikipedia.org/wiki/Visual_Basic) up to VB 6. At runtime, P-code is executed by and inside the *Visual Basic virtual machine*, msvbvm*&lt;version&gt;*.dll, which also provides the runtime, implementing the VB standard library and handling special [metadata](http://en.wikipedia.org/wiki/Metadata) like forms present in such executables. Since the advent of [.NET framework](http://en.wikipedia.org/wiki/.NET_framework), P-code and the VM were abandoned in favor of [Common Language Runtime](http://en.wikipedia.org/wiki/Common_Language_Runtime) and [Microsoft Intermediate Language](http://en.wikipedia.org/wiki/Microsoft_Intermediate_Language). &gt; --- ^Interesting: [^P-code ^machine](http://en.wikipedia.org/wiki/P-code_machine) ^| [^Visual ^Basic](http://en.wikipedia.org/wiki/Visual_Basic) ^| [^SWEET16](http://en.wikipedia.org/wiki/SWEET16) ^Parent ^commenter ^can [^toggle ^NSFW](http://www.np.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+cg8smuj) ^or[](#or) [^delete](http://www.np.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+cg8smuj)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
&gt; My recommendation is that you load the DLL into a virtual machine and look for sub and function entry points. You can use object explorer to do this inside the app. Thanks for the reply, I really do appreciate it. I spent the morning reading up on p-code and the relative insanity of trying to update a 16 bit application. The problem is, this is an important app for my company and most US nuclear power plants. So, I'm going to give it a shot even though I haven't touched VB since VB6 and I was never that good at it in the first place... Anyway, can you provide more information on loading the DLL into a virtual machine and that line of thinking? I can run the application using "Windows XP Mode" on the Windows Virtual Machine, so I think I got that part. How do I look at the DLL for sub and function entry points? Simply opening the DLL produces unreadable output as far as I'm concerned (although its probably just hex numbers). Again, I really do appreciate the reply. Thank you.
In VB4 (you might want to try this in 5 and 6 but I don't know if it will work) create or load an application that uses the dll and press F2 this will load the object explorer from that you can find the dll on the left side and drill down into all the functions. This will allow you to create a function map of possible calls to the DLL. This map will give you a starting place. For functions that you are not certain what they do create a call to the function, modify the input parameters and see what changes in the output. This will give you more information about the function process. I will do some more digging and see what I can come up with I have source for a p-code compiler in an old source safe repository someplace. In what language are you going to be recreating this app in VB.Net? if so what version of .NET are you targeting? 
This may be an odd question but can you track down the original programmer? He probably will be able to give you more information on the dll and if your lucky he may know where to get source. 
I was just thinking do you have a copy of Microsoft Visual Basic 4.0? if not this is going to be more difficult. I am going over to the office to see if there is one in the old MSDN library. IF there is I will take a crack at the dll for you. 
This coding looks to have some problems. Main thing I'm seeing wrong is that variables hght and rep are each assigned new values before their old ones are ever used. What's the point of that? Also, variable i is being incremented throughout the While loop but I don't see its value being used anywhere. From [MS.com](http://support.microsoft.com/kb/315828/en-us): Dim objStreamWriter As StreamWriter 'Pass the file path and the file name to the StreamWriter constructor. objStreamWriter = New StreamWriter("C:\Testfile.txt") 'Write a line of text. objStreamWriter.WriteLine("Hello World") 'Write a second line of text. objStreamWriter.WriteLine("From the StreamWriter class") 'Close the file. objStreamWriter.Close() Make sure to import the System.IO library.