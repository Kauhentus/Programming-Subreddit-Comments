Remove the quotation marks from the strings before you parse them.
Split each line of the file on the field delimiter (a comma), strip the quotes from the data as well as a Trim().
you need to use [ .replace(""","") ] when you read in the variable example dim s as string s = "f0""" s = s.replace(""","") msgbox(s) This will remove the last quote on the end. 3 = 1 escaped quote, 4 ("""") = 2 escaped quotes ect. sorry for the poor explanation
use the [TextFieldParser](http://msdn.microsoft.com/en-us/library/microsoft.visualbasic.fileio.textfieldparser%28v=vs.110%29.aspx), it will quote any text and keep numbers numeric. 
This is probably going to become a very verbose explanation but I'll try to keep it short. The first InputBox drives most of the indexes for the arrays needed. Because we know that there are only 4 quarter sales per year, you can define most of your arrays after the first input box result. From that number you can also set up your loop ranges. Let's suppose the user enters 3 in your first inputbox (3 sales people) From this you can determine that: SalesPeople array needs 3 indexes (0 to 2) I would also suggest a 2 dimensional array to store not only the index of the sales person's name from the SalesPeople array but also each of their quarterly sales. (confusing, I know) So let's assume the inputbox was stored in the variable numSalesmen and remember 3 was entered You would then need to declare: Dim SalesPeople(numSalesmen -1) 'we minus one because array indexes start at 0 so 0, 1 &amp; 2 would be 3 elements We also know that there will only be 4 quarterly sales per year so we can go ahead and define a 2 dimensional array for this Dim QuarterlySales(numSalesmen -1 , 3) 'Again, this is now an array of 3,4 storage elements because of the 0 index. We also use that same original input for the loops we will need to prompt for each bit of information For x as integer = 0 to numSalesmen -1 Salesperson(x) = inputbox("Enter Name for Salesman " &amp; x +1) Next At this point you should be prompted the number of times that you entered for the number of salesmen where you can enter their names. Each one is being stored in the Salesmen array Again you can loop for each salesmen For x as Integer = 0 to numSalesmen-1 'and a 2nd loop for each of the quarterly sales For q as Integer = 0 to 3 QuarterlySales(x, q) = InputBox("enters sales for quarter " &amp; q+1 &amp; " for " &amp; SalesPerson(x) Next Next At this stage you would have been prompted 12 times to enter quarterly sales. Filling all your arrays. Note that in the QuarterlySales array, the first element holds the index to the SalesPerson which would retrieve the name. I know this doesn't display to labels as you stated, but it should show you what each element holds. For x as Integer = 0 to numSalesmen -1 For q as Integer = 0 to 3 MessageBox.Show(SalesPerson(x) &amp; ": Sales Quarter (" &amp; q+1 &amp; "): " &amp; QuarterlySales(x,q) Next Next I did this on the fly so hopefully I didn't miss something. If you don't get it to work or don't understand something, feel free to reply. EDIT: Fixed a couple of typo's Also note that there is no error handling as you would need to ensure that the input boxes contained the proper types. In other words, if a non-numeric value was entered in the first inputbox then the program would crash. 
Well I end up solving the problem, first I did what you said but nothing happend. But then I errased the objects that produced errors 1 by 1 in designer mode and in code, and then just create them again and it seems to be working fine now. Dont know if your tip helped or not, still thanks a lot :))
If you're trying to find out what the person's salary at age 65, this is just an exponent. Take the starting salary, multiply by 1.05 raised to the power of (65 - age). If you're trying to find out the total salary earned between inputage and age 65, this is a [geometric series](http://en.wikipedia.org/wiki/Geometric_series#Formula). You can plug in the following values: *a* = startingsalary, *r* = 1.05, and *n* = 65 - inputage. In either case you don't need a For loop to solve this.
this is so helpful thank you. I dont understand the second part of your response. how would i code that 
You're trying to solve for *s* - which is the sum of all of the yearly salaries. In VB, I guess that is something like totalsalary = startingsalary * ( (1 - raise ^ (retirement - inputage) ) / (1 - raise) ) All I did was change the formula into code.
thank you so much this is a life saver
its high school computer science 1
You can create a loop in VB6 like this: Dim counter as Long ' Declare a variable named "counter" For counter = 1 to 10 ' Do something with counter... ' The code will loop here 10 times, counter being incremented by 1 on each pass. Debug.Print(counter) ' see it happen in the "immediate" window (Ctrl-G to pop it up) Next You can also loop in increments of more than 1: For counter = 5 to 50 step 5 ' Using 5 for example, but "step" can be any number you want ' Here counter will be 5, 10, 15, 20... up to 50. Debug.Print(counter) Next All you need to do is to set up your loops, create a few more variables for your sums and you should be good to go. 
thank you so much omg
You said you need to load the data into labels. Does that assume then that each line has the same number of pieces of data, and that they always mean the same thing? So the first one is always the name, second one is always the same thing like address or something like that?
Correct. Each line in the text file has the same data in the same order.
Thanks for the reply. I'll give that a try and reply with my results
So I managed to add each line into the array now. I just still can't figure out how to split the values within each line (value1, value2, value3) further into their own array so I can output them to labels. Sorry if this is basic stuff, I'm fairly new to programming.
First I would use a class to represent the data Private Class TextData Public Property Name As String Public Property Data1 As String Public Property Data2 As String Public Property Data3 As String Public Overrides Function ToString() As String Return Name End Function End Class Then in your form, you can do this: Private Sub Form1_Load(sender As System.Object, e As System.EventArgs) Handles MyBase.Load LoadTextData() End Sub Private Sub LoadTextData() 'GET EACH LINE FROM THE TEXT FILE Dim myFileLines = IO.File.ReadAllLines(Application.StartupPath &amp; "\textfile1.txt") 'LOOP EACH LINE For Each line As String In myFileLines 'SPLIT BY , Dim myLineParts = line.Split(","c) 'CREATE INSTANCE OF OUR CLASS AND POPULATE WITH DATA Dim myTextData As New TextData With {.Name = myLineParts(0), .Data1 = myLineParts(1), .Data2 = myLineParts(2), .Data3 = myLineParts(3) } 'ADD OBJECT TO LISTBOX ListBox1.Items.Add(myTextData) Next End Sub 'WHEN LISTBOX CHANGES, GET OBJECT AND SET LABELS Private Sub ListBox1_SelectedIndexChanged(sender As System.Object, e As System.EventArgs) Handles ListBox1.SelectedIndexChanged If ListBox1.SelectedIndex &lt;&gt; -1 Then Dim myTextData = DirectCast(ListBox1.SelectedItem, TextData) Label1.Text = myTextData.Data1 Label2.Text = myTextData.Data2 Label3.Text = myTextData.Data3 Else Label1.Text = "" Label2.Text = "" Label3.Text = "" End If End Sub This is working with a textfile that has a name, and 3 pieces of data. Obviously change it to your needs, and I called the properties data1-data3, but you would name them more appropriate for what your data fields actually are.
"Welcome" is a string. A string is an array of characters. (ie, the letter l in welcome is at index 2 of the array. Dim myString as String = "Welcome" msgbox(myString(2)) A simple For...Next loop would allow you to move through the array using the iterator variable to rebuild every odd letter. The iterator variable defaults to incrementing by 1 but using the Step operator you can specify how much to increment with each loop. This can be converted using .ToUpper prior to appending it to your new string.
Hint: use FOR with STEP, MID, and UCASE
You can do this for the dropdown items themselves using owner drawing, but not for the combobox when it is closed up. It is essentially a 1 line textbox at that point. This is assuming you are using WinForms. If you were using WPF, then you would have more control over the visual layout.
Thanks for such a thorough reply! The code all looks fine but nothing is being added to my list box. Also, I get these errors in the last sub. http://i.imgur.com/y5L3KOc.png
thanks you guys!
THANK U SO MUCH!!!
Using VB 6.5-my code is as follows: Private Sub PopulateList(cbo As MSForms.ComboBox) With cbo .AddItem "0." .AddItem "1" .AddItem "2." .AddItem "3." .AddItem "4." .AddItem "5." .ListIndex = 0 End With End Sub Private Sub ComboBox2_Change() End Sub Private Sub Document_New() PopulateList ComboBox1 End Sub Private Sub Document_Open() PopulateList ComboBox1 End Sub The other problem I am having is how to add the code for multiple drop down lists. If I try to include it under the private sub combbox2 I keep getting an error message. 
did you even google that first?
Of course.. I am clearly looking for the wrong things as this is my first time attempting anything like this (I'm an apprentice)
Put this up top of your code: Imports System.ServiceProcess Then you can write code like this: 'QUERY SERVICES WITH STATUS = Running Dim myRunningServices = From SC As ServiceController In ServiceController.GetServices Where SC.Status = ServiceControllerStatus.Running Select SC 'DEBUG OUTPUT NAMES OF SERVICES For Each SC In myRunningServices Debug.WriteLine(SC.ServiceName &amp; " " &amp; SC.DisplayName) Next
I managed to get everything working using this code For index = 0 To countries.Length - 1 lstbxCountries.Items.Add(countries(index).Split(","c)(0)) 'this is adding the first value in the split array (country name) Next Now the other data values look like this countries(lstbxCountries.SelectedIndex).Split(","c)(1) countries(lstbxCountries.SelectedIndex).Split(","c)(2) countries(lstbxCountries.SelectedIndex).Split(","c)(3) Thanks a lot for your help! You definitely helped make it easier to understand.
like, "vb list services" ? kleinma's code should be a good start. 
There are many ways to do this. First way, layout a fixed number of controls on a form and have a save button. This would mean that you could never have more than x number of rows submitted (x being however many you setup). Then in your save button you write out to a file. Another way is to use the datagridview control. You would be able to add as many rows as you need to the control. When you are ready to save you can loop through the rows and write out the data. Writing the data, you could write out plain text and use the CSV format or you could get real fancy and use the Excel Interop to write out your data to a native .xlsx format. Many possibilities, really just depends on what requirements you are trying to meet.
Thank you! DataGridView is exactly what I'm looking for. I appreciate the help.
Thank you Calvin, I appreciate your offer and I will ask questions as they come up.
Sorry, found the solution.
My code does use LINQ to get the services. I don't quite know what you mean. If you mean your first block of code, that is the same LINQ and what I posted, with a call to ToList and a call to the ForEach extension method with a lambda function. Your additions to my code have nothing to do with linq, it just replaces a for each loop with a ForEach lambda.
I meant the different syntax you used the query syntax I just showed it in the method syntax Personally I find the query syntax confusing when it's in the middle of code. I prefer the method syntax its easier to read and extend.
Did you ever figure out the calculate total code? It's still giving me a pain, also your reset button code for the list should be lstCosts.Items.Clear()
Are you stuck on a certain part of the program?
i just dont know where to start and how to code it
*Edit Sorry I meant to reply below, but anyway I hope this helps. *Edit again, I used the wrong loop the first time Look here for help with loops. http://www.vb6.us/tutorials/understanding-do-and-while-loops If you're required to use a counter, then you could use a while loop and exit when Counter = 11. Use an inputbox to get a number from the user and compare it to your random number. * Tell the user if their number matches or if not, why (use your function to evaluate their guess) * If the number matched, exit the loop * If the number didn't match, add 1 to the counter Once you're out of the loop, ask them if they want to play again. For the function, you're going to give it some values, and it's going to return a value for you. Probably the easiest way to do it in this case would be to declare a function that accepts two values (the random number and the guess) and returns an integer. In the function, subtract the random number from the guess and use the function to return the answer. If the function returns a 0, then they guessed right. If it returns something less than zero, then what they guessed was too low and it if it's more than zero, they guessed too high.
Has anyone else noticed how often OP posts these homework assignments in this sub? We're doing OP's homework. That being said.... At the start of the program generate a random integer between 1 and 100 and assign it to a variable dim iRandomNumber as Integer = CInt(Math.Ceiling(Rnd() * 100)) Ask the user to guess a number using an input box and assign that to a variable as well. dim iGuess as Integer = InputBox("Please guess a random number between 1 and 100.") Once you have a value for iRandomNumber and iGuess you can start a loop. It looks like /u/Barnhardt1 has given you some information on that. If you're still stuck, let us know. I was reading through your post history on here and it looks like you're just trying to get people to write all the code for you. If I'm wrong then apologies... but it looks that way, mate. 
Damned if this one doesn't really make you think.
The error is very self explanatory. You are trying to pass IO.FileMode.Append (an enumeration of IO.FileMode, so an Integer), into a function that doesn't accept that property. You want to pass the boolean value for append (true or false). 
Yes. Very possible... Dim webAddress As String = "https://www.google.com/#q=" Dim namestr as string = Replace(textbox," ","+") Process.Start(webAddress+namestr)
[controlname].oldvalue
Hmm, yeah, I have no idea what Scalar is.
Not me. Though I may be young and has been using it for couple of years, I have done not much.
They don't document the code? That is nasty.
Check the MSDN articles on ByRef and ByVal respectively.
It's a query that returns one result.
got it, thanks
"Select *" is going to return every value from every column. The error says it's trying to convert "admin" to a Boolean. The scalar query should return a single Boolean (true/false) value for this to work. 
Scalar is another name for variable.
ByRef provides the function with the memory location. This means that the value can be changed in the function an
Messed around with it and sorted it. Thanks.
Most likely you are getting it on the line of code Label1.Text = Settings(5) You would get it if the line you read in, when you split it by "|splitt|", the result isn't 6 items, so when you get the 6th item using Settings(5), that element doesn't exist. Is split supposed to be "|splitt|" or "|split|"? Check your input file, that is where your probably probably is.
Yep, I figured this part out and facepalmed. Should have been Settings(4). And also yes it was supposed to be |splitt| I just did that for fun :P
Would that go in the fourm load? And also Thank you! And his "namestr" the variable of name? 
I would put it in either the on click event of a button or the after update event of the text box. Yes. Namestr would be the variable.
Rock solid Calvin. **B**
Thank you for the time and effort put into your reply. Honestly though, I have no idea how to interpret your work, and this kind of overwhelmed me. I didn't know 90% of these methods/tools before you exposed me to them, but I'm trying to learn them now. This is the code I've pieced together so far (using yours, from what I can understand). http://puu.sh/d3gk6/06395d2cef.png Could you explain to me why these are the results when I run it? http://puu.sh/d3glo/f13da9df03.png No row names are being added/overwritten. This is my first programming language and I'm new enough to have barely used methods before attempting this project. Is there any way you could help me piece together my project as simply as possible? It doesn't have to be uber efficient like yours, I'd just like to learn some of the basic concepts first before trying to consolidate the code (even if that means using the copy paste mess I had earlier). I can appreciate the complexity of your code though, and hope to one day be at that level. 
It looks like the rows aren't being added to the list of rows for the DataGridViewRowCollection. I might have had that code incorrect as I said I didn't test it on my machine. The documentation for the DataGridView.Rows property type is [here](http://msdn.microsoft.com/en-us/library/system.windows.forms.datagridviewrowcollection%28v=vs.110%29.aspx) so it should be correct How are the columns for the DataGridView Control setup? Are they set to be all strings? If so then putting an integer in there might not work. Also the code you have in your screenshot above (and please just use a github gist in the future not screenshots for code) doesn't do anything with the total miles you just calculate it and then do nothing with the variable. Alright so Methods your new to them, but they are a pretty simple and fundamental part of programming. You can just think of them as a way to duplicate code without having to copy and paste. So Subs don't return any value so having a sub called *foo* being called like this: Dim bar = foo() will result in nothing being saved in bar. a Function however has to have a return value and so calling the above code with foo being a function instead will have bar holding whatever is **Return**ed from foo. 
SQL has a TOP function SELECT TOP(n)... DELETE TOP(n)... However, I'm not sure this is a very elegant solution to your design. I would find it safer to add a bit field that marks the records that they have been pulled in just so you don't lose the data and then something like a power failure inhibits you from working through your array. In other words SELECT TOP(n) records WHERE canDelete = False UPDATE TOP(n) records WHERE canDelete = False SET canDelete = True Work through your array and then at some point you could create an actual DELETE function DELETE FROM yourTable WHERE canDelete = True By the way, does it have to be an array. Why not just pull the records into a dataset and work off that information? [SELECT TOP](http://www.w3schools.com/sql/sql_top.asp) [UPDATE Statement](http://msdn.microsoft.com/en-us/library/ms177523.aspx) [Dataset](http://msdn.microsoft.com/en-us/library/system.data.dataset%28v=vs.110%29.aspx) 
If Me.AccountTableAdapter.ScalarQueryLogin(username, password) Then This line is basically read as If True Then Can we see the ScalarQueryLogin method? What is it returning because I'm going to assume it's returning the username which cannot be converted to boolean. What you might want to do is inside the method if a row is returned (meaning that the query found that username in password in a single row) then return true. else return false. 
I designed my application in the [Design] tab. Some how I click or did something to make the designer.vb tab show up. After that I could not code by double clicking an item to make it appear in the .vb tab It would only appear in the designer.vb tab.
I'm in a beginner class for this. Sorry if I'm not speaking technically enough. :)
Ok so /u/CalvinR tried to help you and well he may have gone overboard there. I will try to keep this simple, like puppy eating chocolate = bad simple. (my jokes are horrible laugh and move on) I see a pattern with your datagrid add, increments of one, fairly simple to loop. Here we go! http://pastebin.com/ZUpn06xU If ya need help making sense of my ramblings tell me. 
Been a while since I've used this method but I think you have to use .AcceptChanges [MSDN](http://msdn.microsoft.com/en-us/library/system.data.dataset.acceptchanges%28v=vs.110%29.aspx) As far as the ID issue, the autonumber will generate the next available number without any intervention from the user. Don't worry about it. It is nothing more than a guaranteed unique value for the row. If you delete a record it will continue to skip that number to keep referential integrity for multiple tables. In other words in a related table let's assume you had a list of phone numbers that were related to ID 1000 if you deleted 1000 and did not delete those phone numbers in the second table and then re-created a new doctor with 1000 as the ID the old phone numbers would relate giving incorrect results for the new doctor. Of course in a perfect world you would use cascading deletes to ensure no orphan data exists in other tables. tl;dr I wouldn't worry to much about trying to control the value of an AutoNumber field.
No problem. Your other explanation makes sense. 
If you close the .designer.vb tab, and double click on a control, does it reopen the .designer.vb file? Does this happen on multiple forms, or just one? 
Ok then, the autonumber field is no longer a worry, as for the .AcceptChange, its not what I need. I mean what I have works, it works well enough. But once the program closes there is nothing written to the local database. Its very frustrating. 
&gt; w well actually since I posted this I got something pretty different. It looks Like this: Public Class Form1 Dim ArrayName(WeightListBox, ZoneListBox) As ' Look up values from list boxes ' Declare module-level variables Dim RateDecimal(,) As Decimal = _ {{1D, 1.5D, 1.65D, 1.85D}, _ {1.58D, 2D, 2.4D, 3.05D}, _ {1.71D, 2.52D, 3.1D, 4D}, _ {2.04D, 3.12D, 4D, 5.01D}, _ {2.52D, 3.75D, 5.1D, 7.25D}} Private Sub calculatebutton_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CalculateButton.Click ' Look up shipping rate Dim WeightIndexInteger As Integer Dim ZoneIndexInteger As Integer WeightIndexInteger = WeightListBox.SelectedIndex ZoneIndexInteger = ZoneListBox.SelectedIndex If WeightIndexInteger &lt;&gt; -1 And ZoneIndexInteger &lt;&gt; -1 Then TextBox1.Text = RateDecimal(WeightIndexInteger, ZoneIndexInteger).ToString("C") Else MessageBox.Show("Select the weight and zone.", "Information Missing", _ MessageBoxButtons.OK, MessageBoxIcon.Exclamation) End If End Sub Private Sub WeightListBox_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles WeightListBox.SelectedIndexChanged '.Text = WeightListBox.SelectedIndex 'using the selected index property of the list box to select the index End Sub End Class The only Error Im getting is the first Dim, I cant figure out what to Dim it as
Ahh, ok, I think what is happening is that you have brought in a local database. Does your database appear in your solution explorer? If so, click once on it to select it and then in the properties window set Copy To Output Directory to Never Copy or Copy if Newer. Here is what is probably happening. In your solution folder you have a database and each time the program is ran, a copy of that is being copied into your bin/debug folder. All changes update your bin/debug copy only so it gets over-written with your blank copy that is in the solution. This is designed so that when you install the package, a fresh database is included instead of the one you tested with.
Check this out [Forms Over Data Video Series](http://msdn.microsoft.com/en-US/vstudio/bb466226.aspx#formsoverdata) It's a great series of videos dealing with the type of dataaccess you're doing. I think the 10th video talks about this specific problem in better detail. EDIT: I just click on that link and it's not streaming the videos and I don't know why. But there is a .wmv and mp4 link to download them which I recommend. 
I don't know what you have in the listboxes but I'm pretty sure you don't need that first dim line. It appears you're trying to get the values of the listboxes but that's not how you would go about doing that. I'm assuming you filled the listboxes with 1, 3, 5, etc... and A B C D which should produce a result based on your selection. However, what if the user puts in 2.5 lbs? This has no category so you would want to ensure that it is 1 or above and isn't 3 to keep within the first range hence the If...Then blocks to determine what weight the entry falls into. From that result, you assign the weight index to the array. The zone listbox should be fine. 
The list boxes have Zone (A, B, C, D) and Weights (1, 3, 5, 10, &gt;10). I used list boxes so the user could not input another value, I'll try it without that line
Got it my man, you are awesome. If you can tell me how to edit an existing record I will marry you.
IT WORKS! Thank you very much.
Did you drag controls to the form from the dataset? If so, it should have created a binding navigator which has buttons to move through the records and save changes (updates, inserts, deletes). EDIT: Looking at the code you supplied, I would think this would do it. It should be executed after the changes are made. Either via button click, or some event that is triggered when you're done with a particular piece of data. 'Update the database Me.TableAdapterManager.UpdateAll(Me.RecordsDataSet)
Only working with one form. And yes when I x-ed out of the designer tab and double clicked on an item in the design tab it reopened the designer tab and put the subprocedure in that tab.
They did, but it was in house, and minimally so. just one guy made the whole thing. so.. you better know whats going on. and i cant get an MS SQL server to work. i just dont know enough about MS SQL to populate the files on my own. i really really wana make this mod, but i just dont know what im doing yet... i need help, and i have no idea how to get it started. i know VB, least, most of the base functions. and i can learn more if i have to. 
I think there is something similar to what you are doing, but the graphics are ANSI Text-Based. Trade Wars 2002
oh wow. i think i know where the BP Devs got their game idea from. this is ancient.
Very Ancient.
Very interesting, wow!
Can you post your code somewhere other than pastebin?
Here's the code from the paste bin that the OP has written Option strict on option explicit on 'Programmer: Enda Kelly R00123583 'Date: 18/11/2014 - ??/??/?? 'Program: Project Sales Data Imports System Imports system.IO Module SalesData sub main() Try Dim salesStreamReader as new StreamReader("H:\Programming Project\SalesData.txt") dim area(3) as string Dim year1(3), amount1(3), year2(3), amount2(3), year3(3), amount3(3), year4(3), amount4(3), year5(3), amount5(3) as double dim counter as integer = 0 Do while salesStreamReader.peek &lt;&gt; -1 ' check for end of file area(counter) = salesStreamReader.readline() year1(counter) = CInt(salesStreamReader.readline()) amount1(counter) = CInt(salesStreamReader.readline()) year2(counter) = CInt(salesStreamReader.readline()) amount2(counter) = CInt(salesStreamReader.readline()) year3(counter) = CInt(salesStreamReader.readline()) amount3(counter) = CInt(salesStreamReader.readline()) year4(counter)= CInt(salesStreamReader.readline()) amount4(counter) = CInt(salesStreamReader.readline()) year5(counter) = CInt(salesStreamReader.readline()) amount5(counter) = CInt(salesStreamReader.readline()) counter = counter+1 loop counter = 0 Do until area(counter) = "" Console.writeline("____________________________") console.writeline("value of counter variable: " &amp; counter) Console.Writeline("Wine name: " &amp; area(counter)) Console.writeline("Current year: " &amp; year1(counter)) console.writeline("Total Sales this year:" &amp; amount1(counter)) Console.writeline("Current year: " &amp; year2(counter)) console.writeline("Total Sales this year:" &amp; amount2(counter)) Console.writeline("Current year: " &amp; year3(counter)) console.writeline("Total Sales this year:" &amp; amount3(counter)) Console.writeline("Current year: " &amp; year4(counter)) console.writeline("Total Sales this year:" &amp; amount4(counter)) Console.writeline("Current year: " &amp; year5(counter)) console.writeline("Total Sales this year:" &amp; amount5(counter)) counter = counter+1 Loop console.writeline("____________________________") salesStreamReader.close() catch console.writeline("The data you requested is currently unavailable, please recheck and return at a later date") End try end sub End module Here's the text file that the OP is working from: Chianti 2009 321 2010 368 2011 317 2012 355 2013 402 Montepulciano 2009 184 2010 213 2011 243 2012 229 2013 241 Marsala 2009 216 2010 185 2011 212 2012 232 2013 224 
what version?
Can you post a gist of the work that you have? 
This is what I am using: Private Sub ComboBox2_DropButtonClick() ComboBox2.List = Array("", "0 Not established.", "A", "B", "C", "D", "G", "H", "K", "L", "M", "N", "P", "Q", "R", "S", "T", "U", "V", "Y", "Z") End sub It works fine as is, but I want to add a descriptive after each letter that may be a sentence or two-up to a short paragraph. I also need to make the text wrap instead of trailing off in a straight line. Any ideas?
Visual Basic 6.5
so VBA. VBA's combo box doens't support line wrapping. you either need to use a 3rd party activex combo box or use win32 APIs to modify its behavior (not actually sure that VBA can do this, VB6 can).
Sorry can't help you with VB6 
I guess you could define a second array holding the descriptions and when a selection is made, place its description in a label beside the combobox. 
Hello, i have this part done, however ive run into an issue with the program running. I know i must have one small thing missing but i cant find it i was hoping that maybe a fresh set of eyes could look at it? The current problem is that the program completely ignores all the code and only presents the catch at the end. "something went wrong, please try again later" http://pastebin.com/UJVjHx1n Option strict on option explicit on 'Programmer: Enda Kelly Rcountercounter123583 'Date: 18/11/2counter14 - ??/??/?? 'Program: Project Sales Data Imports System Imports system.IO Module SalesData sub main() Try Dim salesStreamReader as new StreamReader("H:\Programming Project\SalesData.txt") dim area(20) as string Dim year1(20), amount1(20), year2(20), amount2(20), year3(20), amount3(20), year4(20), amount4(20), year5(20), amount5(20), totalwine(20) as double Dim amounttotal as double dim maxNum as double dim minNum as double dim counter as integer = 0 counter = 0 Do while salesStreamReader.peek &lt;&gt; -1 ' check for end of file area(counter) = salesStreamReader.readline() year1(counter) = CInt(salesStreamReader.readline()) amount1(counter) = CInt(salesStreamReader.readline()) year2(counter) = CInt(salesStreamReader.readline()) amount2(counter) = CInt(salesStreamReader.readline()) year3(counter) = CInt(salesStreamReader.readline()) amount3(counter) = CInt(salesStreamReader.readline()) year4(counter)= CInt(salesStreamReader.readline()) amount4(counter) = CInt(salesStreamReader.readline()) year5(counter) = CInt(salesStreamReader.readline()) amount5(counter) = CInt(salesStreamReader.readline()) totalwine(counter) = CInt(amount1(counter) + amount2(counter) + amount3(counter) + amount4(counter) + amount5(counter)) counter = counter+1 loop counter = 0 Do until area(counter) = "" Console.writeline("____________________________") console.writeline("value of counter variable: " &amp; counter) Console.Writeline("Wine name: " &amp; area(counter)) Console.writeline("Current year: " &amp; year1(counter)) console.writeline("Total Sales this year:" &amp; amount1(counter)) Console.writeline("Current year: " &amp; year2(counter)) console.writeline("Total Sales this year:" &amp; amount2(counter)) Console.writeline("Current year: " &amp; year3(counter)) console.writeline("Total Sales this year:" &amp; amount3(counter)) Console.writeline("Current year: " &amp; year4(counter)) console.writeline("Total Sales this year:" &amp; amount4(counter)) Console.writeline("Current year: " &amp; year5(counter)) console.writeline("Total Sales this year:" &amp; amount5(counter)) 'display the highest sales figure per wine If amount1(counter) &gt; amount2(counter) and amount1(counter) &gt; amount3(counter) and amount1(counter) &gt; amount4(counter) and amount1(counter) &gt; amount5(counter) then maxNum = amount1(counter) Elseif amount2(counter) &gt; amount1(counter) and amount2(counter) &gt; amount3(counter) and amount2(counter) &gt; amount4(counter) and amount2(counter) &gt; amount5(counter) then maxNum = amount2(counter) Elseif amount3(counter) &gt; amount1(counter) and amount3(counter) &gt; amount2(counter) and amount3(counter) &gt; amount4(counter) and amount3(counter) &gt; amount5(counter) then maxNum = amount3(counter) Elseif amount4(counter) &gt; amount1(counter) and amount4(counter) &gt; amount2(counter) and amount4(counter) &gt; amount3(counter) and amount4(counter) &gt; amount5(counter) then maxNum = amount4(counter) Elseif amount5(counter) &gt; amount1(counter) and amount5(counter) &gt; amount2(counter) and amount5(counter) &gt; amount3(counter) and amount5(counter) &gt; amount4(counter) then maxNum = amount5(counter) End if 'display the lowest figure for sales per wine If amount1(counter) &lt; amount2(counter) and amount1(counter) &lt; amount3(counter) and amount1(counter) &lt; amount4(counter) and amount1(counter) &lt; amount5(counter) then minNum = amount1(counter) Elseif amount2(counter) &lt; amount1(counter) and amount2(counter) &lt; amount3(counter) and amount2(counter) &lt; amount4(counter) and amount2(counter) &lt; amount5(counter) then minNum = amount2(counter) Elseif amount3(counter) &lt; amount1(counter) and amount3(counter) &lt; amount2(counter) and amount3(counter) &lt; amount4(counter) and amount3(counter) &lt; amount5(counter) then minNum = amount3(counter) Elseif amount4(counter) &lt; amount1(counter) and amount4(counter) &lt; amount2(counter) and amount4(counter) &lt; amount3(counter) and amount4(counter) &lt; amount5(counter) then minNum = amount4(counter) Elseif amount5(counter) &lt; amount1(counter) and amount5(counter) &lt; amount2(counter) and amount5(counter) &lt; amount3(counter) and amount5(counter) &lt; amount4(counter) then minNum = amount5(counter) End if console.writeline("Total sales for the five years:" &amp; totalwine(counter)) console.writeline("Your average sales this year:" &amp; totalwine(counter) / 5) Console.writeline("The max sales for these years comes to: " &amp; maxNum) Console.writeline("Your minimum sales for these years come to:" &amp; minNum) counter = counter+1 Loop 'Display average yearly sales Console.writeline("your average yearly sales For year 1 comes to: " &amp; amount1(0) + amount1(1) + amount1(2)/3) Console.writeline("Your average yearly sales for year 2 comes to: " &amp; amount2(0) + amount2(1) + amount2(2)/3) Console.writeline("Your average yearly sales for year 3 comes to: " &amp; amount3(0) + amount3(1) + amount3(2)/3) Console.writeline("Your average yearly sales for year 4 comes to: " &amp; amount4(0) + amount4(1) + amount4(2)/3) Console.writeline("Your average yearly sales for year 5 comes to " &amp; amount5(0) + amount5(1) + amount5(2)/3) amounttotal = amount1(0) + amount1(1)+ amount1(2) + amount2(0) + amount2(1) + amount2(2) + amount3(0) + amount3(1) + amount3(2) + amount4(0) + amount4(1) + amount4(2) + amount5(0) + amount5(1) + amount5(2) console.writeline("------------------------------------------") console.writeline("Your total sales amount comes to: " &amp; amounttotal) salesStreamReader.close() catch console.writeline("You gone done messed up m8") End try end sub End module
You should capture the exception and see what is being thrown. Right now you are just ignoring it. Exceptions are useful they tell you what the problem is.
You can't really do that with this code because the value in SCORES will constantly be rewritten with each input. Instead, you'll want to store it into an array or list. Let's use a list because it's easier and you don't have to deal with indices. First thing you gotta do is capture the input. Dim scoreList as New List(of Integer) Do SCORES = InputBox("Enter scores. Enter ! to stop", "Scores") If SCORES &lt;&gt; FLAG AndAlso IsNumeric(SCORES) = True Then Dim number as Integer = CInt(SCORES) scoreList.Add(number) End If Loop until SCORES = FLAG Whatever the user enters gets stored in SCORES as a String. The code then checks to make sure that SCORES isn't your escape character ("!") and that SCORES is a valid number. Once both criteria are satisfied, it then converts the value in SCORES into an integer using the CInt function and adds it to the scoreList list. Now, at the end of the loop, you'll have a list of numbers. To get the highest or lowest, you'll have to write some more code. You could of course cheat and use a Sort before returning the first and last elements of the list, but that isn't very educational. Instead, here's the code for getting the lowest score in scoreList. I'll leave the highest score as an exercise for you. Dim lowestScore as Integer = Int32.MaxValue For Each currentScore in scoreList If currentScore &lt; lowestScore Then lowestScore = currentScore Next 
You could also sort your list and then get its first and last elements. scoreList.Sort() Dim lowestScore = scoreList.First() Dim highestScore = scoreList.Last()
I mentioned that in my post, but I was hoping that the exercise - of him writing his own sorting code - would prove educational...
Honestly, the easiest way is to... well, use two Dictionaries. However, since you have to use Arrays, you can create your own dictionary collection object: which is pretty much what you've done. Good job! My advice would be to create three arrays: english() that holds all the English words, french() that holds all the French words, and german() that holds all the German words. Make sure the translations are stored on the same index, eg. if english(0) = "YES", make sure french(0) = "OUI" and german(0) = "JA". So! You split your input English sentence into its component parts using the split function, not the substring function. You can [read more about split](http://www.dotnetperls.com/split-vbnet), but let's call the resulting string array _englishSplit_. Now you loop through each word in englishSplit and get its index by checking it against the results in english(). Let's also store the indices in an array of integers called _results_. If the word cannot be found in english(), the index will capture a value of -1, so we can use that for error checking later. For p = 0 to englishSplit.Count - 1 Dim word as String = englishSplit(p) Dim index as Integer = -1 For n = 0 to english.Count - 1 If english(n) = word Then index = n Next results(p) = index Next The hard part is pretty much over here. You now have an array containing the appropriate indices to english(), french() and german(). All you have to do is make them output the relevant words from their respective arrays. For m = 0 to results.Count - 1 Dim index as Integer = results(m) If index &lt;&gt; - 1 Then Textbox1.Text &amp;= french(index) Textbox2.Text &amp;= german(index) End If Next 
 Dim ElaspeTime As Integer = 0 Private Sub Form1_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load Timer1.Interval = 1000 End Sub Private Sub Timer1_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Timer1.Tick ElaspeTime += Val(TextBox1.Text + TextBox2.Text + TextBox3.Text + TextBox4.Text) Label11.Text = Format((ElaspeTime / 1000), "0 Sec") End Sub Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click Timer1.Enabled = True picRed1.Visible = True ElaspeTime = 0 End Sub End Class Thats what I have so far. 
There's a picturebox (maybe called imagebox) component you can drop on the form. Set the appropriate properties in the code when the user enters the number and when the timer ticks.
The Interval property of the timer is in milliseconds therefore 30 seconds would be approximately 30000 milliseconds. So what you need to do is multiply the user's input by 1000 Upon clicking the button, it would appear that you would immediately show the image then set the interval based off of the user input (as explained above) and start the timer. in the timer code you would clear the image and stop the timer.
To add onto this excellent post: yes, you can stack objects in objects! The easiest way to do this would be to simply declare a new custom class as a property of your class, like so: Public Class House Public Property colour As String Public Property location As xyCoordinates End Class Where xyCoordinates is a custom class that looks like this: Public Class xyCoordinates Public Property x as Integer Public Property y as Integer End Class 
[MSDN for text file writing.](http://msdn.microsoft.com/en-us/library/6ka1wd3w%28v=vs.110%29.aspx) [MSDN for datagridview.](http://msdn.microsoft.com/en-us/library/system.windows.forms.datagridview%28v=vs.110%29.aspx)
GIFFFFFSSSSSSSS
short answer is: you put the code where you want it to execute. but first, that code is for vb6, not 2010, it's not going to work as-is. next, you should probably start with something a bit simpler to understand how the click and change events work, at that point it'll be quite clear where you put example code snippets. I don't personally have a specific tutorial I recommend but there many "getting started" ones out there, pick one that seems to follow your learning style (short examples, long paragraphs, videos, comics, whatever...) 
look into the directX api and toolkit. 
thank u
Thanks a Bunch! my internet has been out since thursday night, so i havent been able to see or reply. im working on the info you gave me, and if everything goes alright, it should be done by the end of tonight, ill post the finished product here when i finish for you guys to review (i stil have a lot of bad techniques and design that id love to have reviewed)
I will agree that as long as the output is correct and the same for all inputs then it's not wrong, but there are absolutely wrong ways to program! any method that leaves a glaring security hole is a wrong way. 
Is there any reason to simply not do this? Public Property Breed as String = "Mutt" 
You still need an interview for this? As an Unschooler (like homeschooling but more free time) I have loads of time to help :P
It's the same as doing it in the New() Sub really. I do it that way too.
Hey, thanks for the response. I did actually look here before posting (I should have stated as much), but was unable to find specifics for calling values properly. Fortunately someone else from my class had the same issue and I have since learned that what I was looking for was the following code within a loop counter: **Me.DatGridList.item(0, counter) &amp; "," &amp; Me.DatGridList.item(1, counter) &amp; ","** Thanks again :)
Good catch man, i missed the easiest one. Fak I have been doing this too long. B
But that is not bad programming that is bad understanding of the problems. 
Since you are loading a generic type of "Form", you can only use functions, subs, variables, etc that are defined in the generic type. This is a perfect place for an interface. An interface will allow you to create stubs for procedures and properties, and then the dll implements the interface. Once this is done, the caller can call any of these defined procedures or properties. The basic changes would be: * create new interface in a new library or in the calling app. * add methods or properties to the interface (these will only be names, with no code). * add reference to the new library (or calling app) to the dll, and to the calling app (if in a new library) * implement the interface in the form: add implements iNewinterfacename at the top of the form, and implement the individual procedures or properties * change the runDLL sub to load an instance of the new interface. 
I think you're going to need a foxpro expert, not a VB one. though what little I know about foxpro, the answer is probably "restore from backup". I hate that system.
copy the file through open notepad ++ remove header save. Then through the low level read characters until it reach lengths of all fields, and put chr (13) create a new dbf make "append from .... type sdf" *But that's only if nothing works out But it only works if nothing of the above. please visit this forum. there are a lot of useful information http://www.filerepairforum.com/forum/microsoft/microsoft-aa/sql-server/593-foxpro-behavior-when-opening-dbf still advise you to try the program **DBF Recovery Kit** http://www.all-recovery-inc.com/#!/foxprorecovery 
I'm also a beginner, but I've done something like this. I ended up having to read each cell of the datagridview, since the row would only show the index value. For example, you'll need to loop through each row and cell so you'll need a loop counting the rows, and a loop counting the cells (columns) then put something like this to be output to the text file: DatGridList.Rows(rowcount).cells(columncount).Value.toString 
I have tried textbox.text = array(x,y) which just gave me a 9 I also tried for each value in array(x,y) textbox.text = " " &amp; value but that didn't work either. I have the array being generated in a function that returns the filled array. Also, each of the coordinates in the array (0,0 0,1 etc.) has a corresponding value
2n'd one is closer, you need to iterate the 2 dimensions separately. here's an example http://stackoverflow.com/questions/7769980/for-each-loop-on-a-2d-array-in-vb-net then you concatenate each element into the text box, like textbox.text = textbox.text &amp; " " &amp; value
I read through the link but I don't think it's what I'm looking for. My array looks like [**this**](http://i.imgur.com/6rEzL92.png) so the output needs to be kind of like a matrix; 0 1 5 3 7 0
so concatenate a newline in. 
Yeah they are all going to be custom. Do you have an example of adding an index property to an object? If not I'll probably just end up looking it up real fast.
You can use a counter that increments with each element. After you append each element and a space, then you could check if the counter mod 3 = 0 (meaning it's either 3, 6, or 9) and if it is, append an environment.NewLine to the string. Populate your array (Array(2,2)) create a counter variable as integer = 1 create a string variable to hold the lines you're building create a loop to loop from 0 to 2 for the left element create a nested loop from 0 to 2 for the right element append the result to the string variable + " " check to see if counter mod 3 = 0 and if so, append a newline to the string variable increment the counter by 1 end both loops display string variable to a multi-line textboxes .Text property
I'm confused. Are you asking for the algorithm to create a magic square ([because there are a half dozen methods to do that](http://en.wikipedia.org/wiki/Magic_square#Types_and_construction)), or are you asking how you can transform the algorithm that you already have into a VB program? I don't think we can help you with the first, but if you post up the formula you're using to generate a magic square, we can probably help you with the second.
This is the formula that i have to use http://en.wikipedia.org/wiki/Siamese_method
I'll assume that the odd number seed will determine the order of the square. You'll likely want to start by creating a custom class that contains both X and Y values so you can easily reference the grid. This class can then contain, as a property, the form object that you're going to be using so you can display it later. The class may look something like this: Public Class box Property x as integer Property y as integer Property value as integer End Class Create a number of boxes equal to the square of your seed and add them to a list: Dim grid as New List(of box) For x = 1 to seed For y = 1 to seed Dim box as New box box.x = x box.y = y box.value = 0 grid.add(box) Next Next So! Now you have to figure out which is the centre square, because that's the first step in the Siamese method. For a square with a seed of 5, the centre square will have x = 3 and y = 3. For a seed 7 square, the centre square is x = 5 and y = 5. You're probably noticing a pattern here: the x and y values for the centre square are always the same, and you can always get that value by doing INT(seed / 2) + 1. Therefore: Dim centreValue as Integer = int(seed / 2) + 1 Dim centreBox as box = findBox(centreValue, centreValue) What's this findBox thing? It's a function that we have to write ourselves. Public Function findBox(px as Integer, py as Integer) as Box For Each box in grid If box.x = px andalso box.y = py then return box Next Return Nothing End Function Now we populate the boxes. First box in the centre column gets a value of 1. findBox(centreValue, 1).value = 1 Then you keep moving up and right, looping around. I'll let you figure this part out, because this is the trickiest part of the problem. With this as a starting framework, and some serious consideration, I'm sure you'll be able to work it out.
Thank you very much. I will post back later with what I have managed to spew up Once again Thank you very much
That is great! I ended up doing the same thing by first looping into an array as a place holder for each line in the text file, and then I coppied the array as a row into each cell on the datagridview. I'm glad to know that I'm no not the only one who approached it this way :)
Your code seems... horribly complex. Try this on for size: http://pastebin.com/JDZi8bEH EDIT: part of your problem is that you're not declaring the size of the arrays when creating it. This is one of the reasons why nobody uses arrays anymore: instead, we use lists that can stretch and shrink as and when needed. But for school, since you got to use arrays, eh. Just declare the size of the dictionary arrays at the start.
Thanks :-)
Create a constructor for form 2 (sub new) that accepts a parameter from form 1 private _someValue as string Public Sub New(someValue as string) _someValue = someValue End Sub Dim myForm2 as new Form2("this is the value to pass from form1") myForm2.ShowDialog() 
You can actually still call methods and get properties from the form, however it requires reflection to do so, just like he is already using reflection to gain access to the type from within the DLL assembly. Now I don't know what the point would be of doing this, because it is essentially creating a tight coupling to the point where you should just reference the DLL directly, but I suppose there could be some need to do it like this. So for example, in the DLL assembly, in form1, we have a property like this: Public ReadOnly Property SomeValue As String Get Return "This is some value from DLL form" End Get End Property Then the RunDLL code can look like this: Public Sub RunDLL(ByVal DLLPath As String) 'Defines the type which the DLL will be Dim Type As System.Type 'This assembles the DLL Dim Assembly As System.Reflection.Assembly 'This sets the DLL as an object, in this case a Form Dim DLLObject As Form 'This loads the DLL into the assembly Assembly = Reflection.Assembly.LoadFrom(DLLPath) 'This get's the type of the DLL (Form) Type = Assembly.GetType("Form.Form1") 'The Form is created DLLObject = Activator.CreateInstance(Type) 'The form is shown DLLObject.ShowDialog() Dim myProperty As System.Reflection.PropertyInfo = Type.GetProperty("SomeValue") Dim myValue = myProperty.GetValue(DLLObject, Nothing) MessageBox.Show(myValue) 'will return "This is some value from DLL form" 'EXAMPLE OF CALLING THE DLL FORM1 METHOD OF "DoSomething" 'Dim method As System.Reflection.MethodInfo = Type.GetMethod("DoSomething") 'Dim generic As System.Reflection.MethodInfo = method.MakeGenericMethod(Type) 'generic.Invoke(Me, Nothing) End Sub
I see nothing wrong with the code. Is there any other code attached to this label somewhere? Is there any databinding setup on it?
I don't understand. You want a way to make a sub run when you press a key, and keep the main sub running UNTIL the key is pressed. Don't both parts of that sentence contradict each other? Maybe look at the Console.ReadKey() method.
thanks!
1. Is the text actually above 510? 2. Where is this code? Is it actually being executed? Have you put a breakpoint on the line and checked to see if this is actually executing and if so, hover over the .Text property to ensure that it is 511 or more. Keep in mind if there is any other text involved that is cannot be converted to a number, Val will default the conversion to 0
I found a temporary solution: i basically put in another button called button2 and moved them both in the same spot and dragged button1 IN FRONT OF button2 then i coded Button1.Hide() Button2.Visible = True Button2.Select() and wrote label2.text = "baby dont hurt me" under button2_click
That's strange. From what I can see, the backend code looks fine. It's likely a problem with the GUI code, can you post it up? Also, maybe paste your code into www.pastebin.com instead of taking a screenshot; it's easier to read, and we can copy/paste stuff from there if needed.
Windows form? Why does your form refresh? 
The easiest way would be to add a counter and another label to the form. Dim counter as Integer = 0 Private Sub button1(...) counter += 1 Select Case counter Case 1 label1.text = stuff Case 2 label2.text = stuff Case 3 label3.text = stuff End Select End Sub If the label text is set to "" it'll appear invisible Another option instead of label#.text = stuff is you could have the labels on the form already with the set text and you just set the label#.visible property to true.
Oh so simple, you rock!
Console.readkey stops and waits for an input. I have the main sub in a loop printing out from a text file. When the user presses a key, i want it execute another block of code to bring up an input box then continue through the loop
You can find a control by name on a form using the Find() function then use it by casting it as a textbox e.g Dim myTextbox As TextBox = DirectCast(Me.Controls.Find("textbox_name", True)(0), TextBox) Breaking that line down: ' Create a new TextBox object Dim myTextbox As TextBox ' Cast object as objectType DirectCast(object, objectType) ' Create an array of all controls that are children of Me (or in your case use main_form) that have the name "textbox_name" ' True means include all child controls meaning if your textboxes are inside a GroupBox for example then they will be added ' (0) takes the first element in the array Me.Controls.Find("textbox_name", True)(0) So if we do Dim myTextbox As TextBox = DirectCast(Me.Controls.Find("tb_MaxEV", True)(0), TextBox) myTextbox.Text = "Hello world" the tb_MaxEV textbox will contain "Hello world" For your specific example, you can do Dim myTextbox As TextBox = DirectCast(form_main.Controls.Find(tbName, True)(0), TextBox) myTextbox.Text = Right(line, Len(line) - eqPos)
Thanks! I came across some things similar to this, but couldn't get it to work. Using your code also gives the following error: &gt; An unhandled exception of type 'System.IndexOutOfRangeException' occurred in EV Trainer.exe &gt; &gt; Additional information: Index was outside the bounds of the array. After running the last line, `myTextbox = Nothing`
Brilliant! Ideally you should add error handling. I left it out to keep the example simple. You could even refactor it in to a method.
Preferably send an Email. I've tried copying this https://www.youtube.com/watch?v=nOac0zTgrbk But it wouldn't work for some reason.
You need to .Remove or .Replace the period from the strCurrentWord variable in the loop. Basically you end up with: my pencil is on the table. Since you are doing .Equals(xxx) you'll never get a mach: "TABLE." &lt;&gt; "TABLE" I'd probably write a function that strips any unwanted punctuation and returns a clean word. 
Maybe delete the label and re-add it to ensure that some property didn't get changed inadvertently. The code above should work and if it doesn't, and all conditions are followed then there has to be something wrong with the control. Or you have code elsewhere that is immediately setting it right back to ControlText that we don't see which would explain why backcolor works
It's probably the first tab stop position in the form so it will be checked by default. You should just be able to simply use the Form_Shown event to execute the code &lt;yourRadioButton&gt;.Checked = False
~~I've tried that, but unfortunately it's still checked. It seems like the logical solution, but apparently not. Thanks for the suggestion, though. Any other ideas?~~ Edit: That did the trick, actually.
You did it in the Form_Shown event and not the Form_Load event right? Form Load happens before the tab positions come in to play. Form_Shown happens after the form is shown and the cursor position has been set.
Oh wow, I'm an idiot. I didn't know the difference, thank you so much! That did it!
Probably going to want to add Randomize at the top of that function.
Is this VBScript? VB6? VB.NET?
you need to seed than random number generator. the documentation on Rnd() should explain how that works.
VB.NET
so. i fixed my code, repaired it and altered it. turns out you cant .toupper a non .txt data file. i cleaned it up a bit, not as good as yours, but it does work. i also made the size auto adjustable. thanks a bunch for the help , i really appreciate it. http://pastebin.com/8DKzkRJd 
[Here](https://github.com/Mierzen/EV-Trainer/blob/master/EV%20Trainer/EV%20Trainer/form_main.vb#L866-885) you go. I still have some unsynced commits, but that part of the code still does not update the labels' colors. The textboxes' colors work fine, though
Ah I see it. Your code is successfully changing it to red but then you are setting it back right after it because lb_TotalCurrent is not &gt; 510 If Val(lb_TotalPlanned.Text) &gt; 510 Then lb_TotalPlanned.ForeColor = Color.DarkRed Else lb_TotalPlanned.ForeColor = SystemColors.ControlText End If If Val(lb_TotalCurrent.Text) &gt; 510 Then lb_TotalPlanned.ForeColor = Color.DarkRed Else lb_TotalPlanned.ForeColor = SystemColors.ControlText End If I assume that second section should be setting the ForeColor of lb_TotalCurrent instead of lb_TotalPlanned?
I actually realised that just before posting the link, but did not click that that is the cause of it. Silly me
You should be able to use the Application.OpenForms collection to close them. For Each frm As Form In Application.OpenForms frm.Close() Next 
Have you tried to use Console.KeyAvailable already?
Okay I'll give it a stab, I'm not going to comment on the form since it's pretty simple other then that you shouldn't use From1 and Listbox1 as identifiers Here is my version of your class. Imports System.IO Imports System.Linq Public Class Importer Public Event UpdateInfo(info As String) Public Sub InsertCSVtoDB(fileName As String) Dim tempFile As IEnumerable(Of String) = GetFile(fileName) For Each item In tempFile 'No Reason to convert to List here Dim tSplit As IEnumerable(Of String) = Split(item, ",").Select(Function(str) TrimItem) InsertQuestion(tSplit) Next End Sub Private Function GetFile(fileName As String) As IEnumerable(Of String) Dim tList As New List(Of String) Try Using rFile As New StreamReader(fileName, FileMode.Open) While (rFile.Peek &lt;&gt; -1) Dim tLine As String = rFile.ReadLine If tLine &lt;&gt; String.Empty Then tList.Add(tLine) End If RaiseEvent UpdateInfo(tLine) End While End Using Catch e As Exception RaiseEvent UpdateInfo("The file could not be read:") RaiseEvent UpdateInfo(e.Message) End Try Return tList End Function Private Sub InsertQuestion(questionInfo As IEnumerable(Of String)) Using dbContext As New JVTCDataAccess.EntitiesModel 'This is a personal preference I really dislike the query sytnax I find it method syntax 'more straightforward, I'm pretty sure this is equivalent to your old code Dim oQuestion As JVTCDataAccess.QuizQuestion = dbContext.QuizQuestions _ .Where(c.QuizQuestions = questionInfo(0) ) _ .FirstOrDefault() If oQuestion Is Nothing Then InsertNewQuestion(questionInfo) 'Always better to exit early Exit Sub End if oQuestion = CreateQuestion(questionInfo) dbContext.SaveChanges() RaiseEvent UpdateInfo("Record " &amp; oQuestion.QuizQuestions &amp; " Updated.") End Using End Sub Private Function CreateQuestion(questionInfo as IEnumerable(Of String)) as JVTCDataAccess.QuizQuestion Dim newQuestion As New JVTCDataAccess.QuizQuestion newQuestion.QuizID = questionInfo(1) newQuestion.Question = questionInfo(2) newQuestion.Ans1 = CheckEmpty(questionInfo(3)) newQuestion.Ans2 = CheckEmpty(questionInfo(4)) newQuestion.Ans3 = CheckEmpty(questionInfo(5)) newQuestion.Ans4 = CheckEmpty(questionInfo(6)) newQuestion.Correct = CheckEmpty(questionInfo(7)) newQuestion.Type = 1 return newQuestion End Function Private Sub InsertNewQuestion(questionInfo As IEnumerable(Of String)) Using dbContext As New jvtcdataaccess.EntitiesModel() dbContext.Add(CreateQuestion(questionInfo)) dbContext.SaveChanges() RaiseEvent UpdateInfo("New Record Inserted. question = " &amp; newQuestion.Question) End Using End Sub Private Function CheckEmpty(tString As String) As String 'No need to call Trim first use IsNullOrWhiteSpace Return If(String.IsNullOrWhiteSpace(tString), "-", Trim(tString)) End Function Private Function TrimItem(str as string) as String return Trim(item).Replace("*",",") End Function End Class First off I changed all the generic lists in method names to IEnumerable I always prefer to code to interfaces as opposed to classes as it allows more flexibility in your code, I chose IEnumerable as opposed to IList as we are using Linq and it's extensions work off of IEnumerable. I converted some duplicated code to a method to reduce any chances of bugs. Instead of using an IF Else I opted to use a guard clause, exiting early from a method reduces the cyclomatic complexity of the method (number of paths throuhg the method) which means less code paths to test. I converted the linq query syntax to linq method syntax as a personal preference I always find the method syntax easier to understand. 
you need to create a public instance of the form Public newForm as new form2 newForm.show then you can just call newForm.close it is also wise if you have multiple copies of the same form to use a variable/list to keep track of them. Public newForms as new list(of form2) Dim myNewForm as new form2 dim myNewForm.Name = "Report1" ' other form properties are set here. newforms.add myNewForm You can then retrieve a reference to the form like this Dim formIWant as form2 = newForms.Find(function(c) c.name= "Report1") formiwant.activate() Of course hdsrob is the easiest if you are just closing your application. 
This is exactly what I was looking for; so interfaces over classes is your first suggestion, I am going to read more and think about base class implementation vs interface of class. This boils down to IEnumerable vs IList in this case. I agree with the duplicated code. I was taught that exiting a sub/function early is bad, of course I did this in C++ ages ago so... I understand your point about reducing code, and complexity. Linq Query VS Method is somthing I know very little about. I have learn LINQ through the tried and true method of "I need a solution NOW" :) is there a good resource you would recommend? Thanks agian this is fantastic. **To the rest of you ask questions for crap you dont understand I am sure Calvin wont mind and I certainly dont**
I recommend you read up on [S.O.L.I.D object oriented design ](http://en.wikipedia.org/wiki/SOLID_%28object-oriented_design%29) it will really help you improve your coding. &gt;so interfaces over classes is your first suggestion, I am going to read more and think about base class implementation vs interface of class. This boils down to IEnumerable vs IList in this case. Not only interfaces over classes but really as far up the inheritance chain as possible this allows you more opportunities to reuse the method. In this case List(Of T) Implements IList(Of T) which implements ICollection(Of T) which implements IEnumerable(Of T) you are only using methods from IEnumerable(Of T) so you only have to write to that. *Although now I just realized a bug in the code I gave you IEnumerable(Of T) doesn't implement Add so for the InsertNewQuestion method you'll probably want to have it be ICollection(Of T)* Also IEnumerable is a special beast when it comes to .Net. When you use IEnumerable you are telling the compiler how to generate a collection you aren't actually creating one. The compiler tends to generate the collections at the last possible minute. For example the following code Dim evens as IEnumerable(of Integer) = Enumerable.Range(Integer.MinValue, Integer.MaxValue) _ .Where(Function(i) i Mod 2 == 0) Is a list of all possible Even Integer values, however in this state it takes up no memory as it's not an actual list it's just the instructions on how to make the list. when you call Dim evensList as IList(of Integer) = evens.ToList() or Dim evensArray as Integer() = evens.ToArray() is when the list is created since that's the absolute last minute that you can create it. This means you have to be careful when using IEnumerable as you could be executing code multiple times that you meant to only execute once. &gt;I was taught that exiting a sub/function early is bad, of course I did this in C++ ages ago so... I understand your point about reducing code, and complexity. Like most things in programming this is a bit controversial it was introduced to get away from the old spaghetti code and to move to a more structured programming methodology, and it was taught to simplify code. However structured programming has been replaced with Object Oriented Programming and as such one exit is a bit archaic, however there are still alot of people that swear by it. My main issue is with what is known as [Cyclomatic Complexity](http://en.wikipedia.org/wiki/Cyclomatic_complexity) basically the number of paths through the code, every if statement in your code is another path and the more paths you have the more Tests you have to write to make sure you have 100% test coverage. In my opinion it also makes the code easier to read. &gt;Linq Query VS Method is somthing I know very little about. I have learn LINQ through the tried and true method of "I need a solution NOW" :) is there a good resource you would recommend? One of the main reasons that I didn't mention why I dislike Linq Query is that no one else uses it. [Python](http://www.python-course.eu/lambda.php), [Ruby](http://ruby-doc.org/core-2.1.5/Enumerable.html), [JavaScript](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce), and every other programming language I have seen uses methods. So it's much much easier for me to learn the method syntax and it makes it much easier to transfer my skills over to another language if I just ignore it completely. Now if you are only ever going to learn C#/VB and SQL then by all means learn Query Syntax I however will stay away from it. For more resources on it I suggest MSDN of course http://msdn.microsoft.com/en-us/library/bb397947.aspx http://msdn.microsoft.com/en-us/library/system.linq.enumerable.aspx http://msdn.microsoft.com/en-us/library/system.linq.queryable.aspx Also general reading Map Reduce what it is and why it's useful is good as well http://en.wikipedia.org/wiki/MapReduce Feel free to ask whatever questions you want. 
If you already know how to bind the data to the grid it may be easier to modify the query to pivot the data. 
Why hot use json.net to deserialize the json to an object it would make your life a lot easier.
This has been very helpful thank you. I will post a new post with further questions about specifics I think. Their is a lot in this post :) **Bone**
seems to make sense. there's several ways to code it, if you take a shot I'll give it a look over.
I am a little unsure of what you would like, but maybe this can help? Protected Sub Button1_Click(sender As Object, e As EventArgs) Handles btnaddtowishlist.Click Dim num1 As Integer Dim num2 As Integer num1 = Integer.Parse(txtquantity.Text) num2 = 10.0 lbltotalprice.Text = Val(lbltotalprice.Text) + num1 * num2 End Sub You then add the new value to the old one. When clicking the button to remove from wishlist, it would then work similar to this: lbltotalprice.Text = Val(lbltotalprice.Text) - num1 * num2 Just remember to check for and avoid negative item counts.
Maybe I'm missing something, but I don't see where you are adding the new value to the ComboBox? 
Agree completely: I never use the default instance of a Form that VB creates, instead always explicitly creating a form in the function / sub where I need it. The only exception to this is the main form that is loaded on app start. 
I am still pretty new at coding. Could you fix (put the strLetter where it needs to go) or explain how to do it? It would be much appreciated EDIT: I am not quite sure what you mean by your edit. I understand the Return, however, when I attempted to put it into my code, it did not change. What should I call in my "lstFinal.Items.Add(strLast1 &amp; ", " &amp; strFirst1 &amp; " - " &amp; decGrade)", in order for the letter to show up right after the number?
This could be accomplished with a few pictureboxes being moved by the arrow keys and using .IntersectsWith to determine when you move over the items. By determining when your circle intersects with the other circle the question can be posed if you accept the quest. Then everytime you interesect with a stick, increment a counter. When you intersect with the circle and you have accumulated 4 then the quest was a success. Otherwise, notify the player that there is still more sticks to aquire.
Since you seem to know enough on concatenating by what you've done is the 4th line, you should be able to incorporate strLetter into that. dim FirstName as string = "Charlie" dim LastName as string = "May" dim YOB as string = "1967" listbox1.items.add(FirstName &amp; " " &amp; LastName &amp; "(" &amp; YOB &amp; ")") this would add: Charlie May (1967) to a listbox. From this you should be able to determine how to do what you're wanting using your variables. 
The only part of this I do not comprehend is that I do not know the specific detail. Since I don't know the detail, how can I set "Dim FirstName as String" equal to something? I am working on taking the First , Last, and Final Percentage FIVE times. Each one has a different Submit button however so each one would be different. Although back to my question of how would I set those equal to something if I am giving the user the input option in the "First Name, Last Name, and Final Percentage" text boxes
Thanks for the short summary of what it would require, this is really helpful!
I figured it out! Thank you very much. I was missing something completely obvious. I do have one other question for you though. Can arrays be used in the "Clear or Reset" button? such as instead of Ie, txtFirst1.Clear() txtFirst2.Clear() txtFirst3.Clear() txtFirst4.Clear() txtFirst5.Clear() Or could I simply just do: txtFirst(5).Clear() Or something along those lines?
So you're saying instead of hardcoding it like: Dim objWriter As New IO.StreamWriter("C:/Users/Name/Desktop/Grades.txt") Just make it: Dim objWriter as New IO.StreamWriter() Is that what you mean? EDIT: Also, if I save it like that, how do I call the saved .txt file when the user is to click on the "load" button?
Make it like this: Const filePath as String = "/data/grades.txt" Dim objWriter As New IO.StreamWriter(filePath) I can't remember if I got the slash correct, if this doesn't work use \ instead. Using a generic file path like that will allow you to store your data files in the same folder as your compiled exe file. During testing and development, navigate to &gt;(wherever your VB project is located)\bin\debug\ to find your exe file.
Ahh! You didn't, I did! I never refreshed the list after adding the new item, so it was unable to select it.
One word of caution with this: Once you move to installed software, and you place the exe files in \Program Files you won't be able to actually write to this location. IMO, you are better off using a well defined system path. The path will change on different machines, but it won't matter as you are always able to read and write it, and Windows manages the path for you: Dim objWriter As New IO.StreamWriter(Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData) &amp; "\Grades.txt") That will get the Local App Data folder, but if you look at the call to GetFolderPath, you'll see that you can get MyDocuments, Pictures, and lots of other folders without having to know which user is logged in, and where there folders are located. 
You could iterate through the controls collection and save a few lines of code but I'm not sure for 5 textboxes if it would be worth it. For each txt as TextBox in Me.Controls.OfType(Of TextBox)() txt.clear() Next What this does is loops through the controls collection of the parent container (in this case, the form) and only pulls those that are of type TextBox. Then uses the variable txt to store the TextBox found in the current iteration of the loop. Once that is had, all properties of the Textbox are available so therefore you can txt.Clear() Of course, there are times when you may not want all textboxes so it could cause you problems where you will have to add code to exclude certain textboxes or move the group you want to clear into a separate container (ie, panel, groupbox) where you can ensure that it is the only collection you want to work with.
Sure, you could set up a global variable that increments with each question You really don't even need a loop, you could just set up a select case of If block dim counter as integer = 1 'declared at form scope so that it is available throughout the class then inside your button click select case counter case 1 'Ask question 1 case 2 'Ask question 2 ..... end case inside your check button you would check the counter to determine what question was asked perform code based on results then from this block you could programmatically click the question button for the next question btnQuestion.PerformClick() this is untested and is nothing more than how I would look into the problem using the rules you specified. EDIT: Forgot to mention, don't forget to increment your counter with each question 
no, you'd need the filename, just not the path. /u/hdsrob's example is more complete, use that. 
In your user table you could have UserID, Password, AccessLevel The AccessLevel could be as simple as a code that you can use to determine after a successful login what you display to the user Select your row based on userid and password, make sure you include AccessLevel in your select statement. Select Case AccessLevel Case "ADMIN" 'Ensure admin level information is displayed Case "USER" 'Ensure only user type information is displayed Case Else 'Default to a low level of information to keep 'out non admins in case neither condition happens End Case Of course ensuring this could be simply setting a boolean (isAdmin) to either true or false that is accessible throughout so that when it comes time to display information you would always have the ability to use something like: If isAdmin Then 'include admin information is what you are displaying else 'only include user level information End If This is just one of MANY ways of doing something like this. 
The user signed in to the pc is a universal login for HR TVs. Normally there isn't a keyboard attached, but I don't want just anyone trying to close the application. Also task manager is disabled for these machines. 
Do you even use a main form Rob? Can't you use a class with a constructor on startup ?
While I do find Resharper invaluable I think some free options for add on tools is more appropriate for the people that tend to access this sub, I don't forsee many students dropping ~300 on something to help them code. 
Well here is what I think is a solution using the LDAP lookup method http://stackoverflow.com/questions/4460558/how-to-get-all-the-ad-groups-for-a-particular-user search.PropertiesToLoad.Add("memberOf") Dim groupNames As New StringBuilder() 'stuff them in | delimited Dim result As SearchResult = search.FindOne() Dim propertyCount As Integer = result.Properties("memberOf").Count Dim dn As [String] Dim equalsIndex As Integer, commaIndex As Integer For propertyCounter As Integer = 0 To propertyCount - 1 dn = DirectCast(result.Properties("memberOf")(propertyCounter), [String]) equalsIndex = dn.IndexOf("=", 1) commaIndex = dn.IndexOf(",", 1) If -1 = equalsIndex Then Return Nothing End If groupNames.Append(dn.Substring((equalsIndex + 1), (commaIndex - equalsIndex) - 1)) groupNames.Append("|") Next Return groupNames.ToString() I just ran the code from this stack overflow question through the telerik C# to VB Code converter
The Telerik VB to C# code converter is a useful tool to help take examples from various websites in C# and convert it to VB http://converter.telerik.com/ I've also found the following Fiddles useful when working in .Net Regex Fiddle: http://refiddle.com/ .Net Fiddle: https://dotnetfiddle.net/ 
You can use the "Sub Main" object on startup in VB.NET, but you can't use that option if you use the "enable application framework" option. Without the app framework, you lose the Single Instance Application option, and I need that for the majority of the applications that I write so I stick with loading a startup form. 
Makes sense.
[ILSpy](http://ilspy.net/) Is a pretty handy. It lets you examine dlls and decompile into VB, C# or IL.
[Snippets.me](http://snippets.me/) Although not vb specific, it is a place to store your code snippets. I find it is a little buggy, but it is getting better.
ok, so you showed a picture of a couple of TrackBar's with a vertical orientation. Care to elaborate on exactly what you're wanting to do? 
He's wanting to control the master output volume of his speakers/headphones and control the volume of his microphone input.
Yes!
what vb version?
2010 express 
I haven't looked into it since I just make reports for things I need to print. last time I looked was VB6 and you just can't. a work around was to put the stuff you want to print in a PictureBox control and print that.
Any idea how you would go about doing this?
This [Link](http://superuser.com/questions/802479/how-can-i-trigger-an-excel-macro-by-hovering-a-mouse-over-a-cell) should help you.
If I'm following then I would think you could use the MouseHover event to perform what you need and then the MouseLeave event to return it back to normal. Of course, you may have to store certain things to some variables that would fall within the scope of these two events. This also assumes vb.net and not vb6
I have, it gives me the error 'Expression does not produce a value.' The arrays contain integers, but their contents can be strings if need be, as I can always convert to integers when it is necessary.
I edited my comment, but Array.Reverse(arrayToReverse) works. Note it is a method, not a function so you don't do x = Array.Reverse(arrayToReverse) The Reverse method takes your array and reverses the order. If you need to put it into another variable just reverse it twice: Array.Reverse(x) y=x Array.Reverse(x) x would be the original array and y the reversed one. There's many different ways to do it. You could make a for loop starting at the last element, going to 0 and inside the loop add the elements to the new array. You could also use lists instead.
Awesome. Thanks!
 Dim arraySize as Integer = 10 Dim originalArray(arraySize) as Integer Dim reverseArray(arraySize) as Integer For n = arraySize to 0 Step -1 reverseArray(arraySize - n) = originalArray(n) Next If it's important, note that reverseArray is populated from 0 to arraySize while the values of originalArray are retrieved from arraySize to 0.
On my tab so can't verify but pretty sure you can Array.Reverse(targetArray) to reverse it, if you need the original array just copy to a new variable.
Thanks for the help everyone! I have successfully reversed the daylights out of my array :)
I think this will work but i'm not sure because it's a little weird for me because i have two screens:) Sub CaptureScreenArea() Dim TheImage As New Bitmap(Me.Size.Width, Me.Size.Height) Dim G As Graphics G = Graphics.FromImage(TheImage) 'Start Point (This is what you wanna change!) Dim StartPoint As New Point(40, 40) 'Final destination Dim Dest As New Point(100, 100) 'The size of the final image Dim SizeOfImage As New Point(100, 100) 'Convert the point so it's relative to the form StartPoint = Me.PointToClient(StartPoint) Dest = Me.PointToClient(Dest) 'Take the screenshot G.CopyFromScreen(StartPoint, Dest, SizeOfImage) 'Show the image Me.BackgroundImage = TheImage End Sub
That's a pretty cut and dry error: Either that file does not exist, or your application doesn't have permission to access that directory. Is the file in that directory (trace the full path in the error message)? 
Is it case sensitive? 
no sir 
our school is actually using a mix of vb 2005s and 2010s
I made a program before, which is a tosscoin program using forms and it worked fine. Now I based it on the tosscoin program and just remove its if then structure and then this happened. here the code for the tosscoin: Imports System.IO Public Class Form1 Dim A As Random = New Random() Private Sub cmdToss_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdToss.Click TossCoin(lblCoin) End Sub Sub TossCoin(ByVal B As Label) Dim n As Integer = A.Next(1, 3) B.Image = Image.FromFile(Directory.GetCurrentDirectory &amp; "\images\coin" &amp; n &amp; ".png") If n = 1 Then lbl2.Text = "Head wins!" Else lbl2.Text = "Tails Wins!" End If End Sub End Class and here is the magicball: Imports System.IO Public Class Form1 Dim V As Random = New Random() Private Sub cmdshake_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdshake.Click ShakeBall(lblball) End Sub Sub ShakeBall(ByVal E As Label) E.Image = Image.FromFile(Directory.GetCurrentDirectory &amp; "\image\ball" &amp; ".png") End Sub End Class
Doesn't really answer the question: Does this folder and file exist??? C:\Users\Rejaz\Documents\Visual Studio 2010\Projects\Magic 8 Ball\Magic 8 Ball\bin\Debug\image\ball.png 
Easy fix, the problem is that the program is not copying the file from your code directory to your bin directory when it compiles. **here are the steps to fix it.** 1. so make sure that in your project folder you have the \image\ball.jpg file 2. Right click the project in solution explorer and add&gt;New Folder 3. make sure to name it images 4. right click the image folder you just created and add&gt;existing file 5. Choose the ball.jpg file 6. click on the file, in the properties window you should see something like "Copy to output folder" change that to always. sorry if this is vague I am publishing a large project and I cant actually test it &gt;.&lt; **Bone** 
Actually, I fixed it up myself. thanks!
figured that that was my problem and fixed it. thanks for the help anyways!
I am using Visual Basic 2012. 
This is a simple database application. If I were to do it, I would find a way to automate it, like having a camera in a car and have it automatically read and record license plates as you drive around. It could record all the information automatically and then sound an alarm when you drove by a car that has been parked in a spot for more than 3 hours. It might even be a cool project for a Microsoft Kinect. In any case, you could use sql express as your database. Try googling something like writing vb.net CRUD applications (CRUD is Create, Retrieve, Update, Delete, the four basic functions of a database). 
Etiquette man. What was the solution?
What information is in ListBox2? Show an example of a lineitem that is found in the listbox2. If it's something like Special Burger: 7.00 Then you could use string.split in a loop to split off the : into an array and accumulate the element 1 of the split result giving a grand total Without knowing how you're storing this information, it would be hard to give any definite advice. 
We have switched everything into Arrays. List box 2 has all the items that someone selects to buy. We assigned each food item a specific value, which will be their price. We figured once they get added to listbox2, we'll be able to add them up easier that way.
Ok, so assuming that you're going to take each item in the listbox and check against it to find it's cost, it shouldn't be anything more than taking a If statement or a Select Case statement to determine what it is, get it's value and store that variable into a accumulating variable. Example Create a TotalCost variable Begin looping through ListBox2 Select Case CurrentItem Case "Taco" 'This would be an item in your listbox Cost = 3.00 Case ... ' Cost ... 'do this for all items End Select TotalCost += cost 'Take totalCost's current value and add the current cost to it to accumulate End loop 'Display TotalCost Also, in case this is an issue, you can easily loop through a listbox using a For...Each loop 'this moves through the items collection and stores the current item to a String 'variable called itm For Each itm As String in &lt;yourListBox&gt;.Items Select Case itm 'set the select case as I described above End Select Next 
It'd be really nice if expression bodied members made its way over to VB it would really clean up a lot of the code that I have in my VB Projects. 
Could we see the relevant code you have in place?
There's not really a way to fill a list box all at the same time. I'm not sure why you would need to do that. It's pretty much instantaneous anyway.
You want the AddRange method ListBox1.Items.AddRange(studentMatrise)
The issue you have is that you loop runs from 0 to 0 You are storing into two arrays (5 elements each) and then you are incrementing nesteledige only 1 time so when the loop comes into play, it is looping from 0 to 1 - 1 or (0 to 0) so it only runs a single iteration You could use a for...each loop For each itm as string in studentMatrise ListBox1.Items.Add(itm) Next or as was pointed out use the addrange method. 
I think you might be getting the errors because of the build order of the projects. Rebuild first does a clean, which deletes all the dlls from all projects. With these dlls gone, the references are no longer valid so you get the "xxx isn't a member of yyy". You need to build project yyy and the error will go away. hanging the build order of the project should fix it.
Personally, I would ensure that the objects I'm working with are indeed the correct type For each chk As CheckBox in pnlWebsiteRequirements.Controls.OfType(Of Checkbox)() chk.checked = False chk.Enabled = False Next this will ensure that only a checkbox is included in the collection and will cast it to a checkbox so that it's properties are properly exposed. Repeat this for your NUD control. See if that corrects the issue. It appears that you are letting the compiler make assumptions that are not correctly being interpreted, giving you unpredictable results.
I think so... I've never seen directcast before but I'll try it when I get back.
Didn't work but that's because I think the problem is something else. There's another line in the Clear button lstStudentNames.SelectedIndex = -1 and I also have a SelectedIndexChanged event for the listbox that actually enables all of the checkboxes and numericupdowns lol, I feel stupid for not even looking at that. Thanks for the help though.
ah maybe .Refresh() is the way! Yea I just want them to be able to see a label update as it's doing stuff, is all. I'll mess with this -- cheers :)
For 1 to 100 DoingThings() UpdateLabel 'Wont update, just freezes until it's done Next
It's been years since I used Visual Basic but I use VBA often enough. In the VBA editor, Ctrl-Shift-F2 will give you "last position" and does what I think you're asking for.
You can click on the left side (before the line numbers or after, i not sure) to put a breakpoint. It will highlight the whole line and will also put a red circle. I still do the 'asdf' thing though.
ha glad it's not just me ;D gonna try that ctrl+shift+F2 thing said above. Yeaa breakpoint is not bad if code is small but getting to get big. cheers guys
There's a bookmark feature in every version of VB I've ever used (VB 5 to VS 2013). I believe the default is CTL + K, T to Toggle the bookmark, and CTL + K N to navigate to the next bookmark. (I remapped mine a long time ago, so could be wrong). This will place a bookmark icon in the left margin (in pre 2012 versions it's a blue bubble, post 2012 it's a black bookmark icon), and navigating will move between the various bookmarks. There are also shortcuts available to toggle all bookmarks, and finer grained navigation (forward / backward, current project or file only, etc). There's a bookmark menu in VS under Edit, that will give you some options (and may show you the shortcuts available). Depending upon your version of VS, there's either a Bookmarks Toolbar, or bookmark options are in the Text Editor Toolbar. Right click on the blank area of the toolbar to see additional ones available. 
There's also a Bookmarks Window that can be docked along the bottom in modern (non VB6) versions of VS. It's available from View &gt; Other Windows... 
First of all, use radio buttons instead of check boxes. Radio buttons only allow one to be checked at a time, and they uncheck the other automatically. It'll save you all that code at the top. Also, I'm pretty sure there's functions in the String class to convert from other types to a string and back again. Look at the documentation.
thanks for the reply, but I don't know how to use radio buttons because it is still not taught in our shcool 
yes, it does
okay thanks 
Where did you get it from? Do you know what it is supposed to do? As far as I know that code is a little wrong and doesn't accomplish anything useful Edit: plus, it has no output
there's tons of guides, including MS's own MSDN, but that's also a good way to get yourself in trouble by getting ahead of the curriculum. the guides may also assume you're already familiar with some concept that you haven't learned yet. some assignments just don't make sense in the real world with far better ways to do the same thing, but the assignments is just trying to highlight something. feel free to ask something specific though, we'll try to point you in the right direction without doing it for you.
sounds like you're expected to use the "focus" events. have you learned any other event handling yet?
gotta work through it logically. no one memorizes all this stuff. you know you need an event, so look at [the list of events](http://msdn.microsoft.com/en-us/library/system.windows.forms.control_events(v=vs.100\).aspx), and then look for ones related to focus, and work through the samples. Ideally, the book would mention this somewhere in the chapter, unless you got one of those professors that gets a new book and doesn't update the assignment list. (hate those guys, there should be some penalty for doing that) 
The xml he gives isn't proper, unless I am missing something. I think the last &lt;/Product&gt; is supposed to be &lt;/Products&gt;.
Yea, I saw that too. If you lay it out in a structured layout, it becomes apparent that there's issues.
As the other comment said, use radio buttons. They work like checkboxes, but you can only have one checked at a time. It would remove around 35 lines of your code. Check out [Integer.TryParse](http://msdn.microsoft.com/en-us/library/f02979c7%28v=vs.110%29.aspx). It takes an input, and converts it to an integer and returns true if it was valid and false if not: Dim theInt as Integer If Integer.TryParse(Textbox1.Text, theInt) ' the textbox was an int and its value is in the variable theInt Else ' The textbox is not an int End If
It's control KK to map it, control KN for next and control KP for previous, Control KL to clear bookmarks. There's a ton of Control - K shortcuts too: Control KF to format selected code Control KD to format all the code Control KC to comment current select Control KU to uncomment it Control KB for the snippet manager 
thanks
Instead of working directly with the xml you should deserialize it to something sane, it will clean up your code quite a bit. If you generate your client code using the Service Reference in Visual Studio it should handle generating all the proxy/client objects and deserialization. There is no need to have to play around with the NodeList
I would think that you would have an array that stores each of Simon's random choices. The first part would be to generate a random number from 1 to 4 Store that random number into the array Run through the array and based on each number show the corresponding color as lit (could be nothing more than changing from DarkRed to Red or something similar) I would use Buttons for each of Simons color pads. A control array would allow you to run back through the array with each button click to see if the button clicked is the next in line and matches simons pattern. I don't have VB6 to run what you have but that is where I would start.
Two other articles following the same content: http://www.theregister.co.uk/2014/12/10/hey_dont_forget_visual_basic_says_microsoft_open_source_and_new_features_coming/ http://visualstudiomagazine.com/articles/2014/12/16/visual-basic-14-preview.aspx 
Use 4 spaces before each line of code to format it like code...
That is the problem that I am having. I do not know exactly the correct format to code that
lol thanks i was wondering how to do that
I would love to help, but you need to explain what you want. [Here is how to create a folder](http://msdn.microsoft.com/en-us/library/54a0at6s%28v=vs.110%29.aspx) [Here is how to create a group](http://msdn.microsoft.com/en-us/library/ms180903%28v=vs.80%29.aspx)
what do you mean by "reproduce", exactly? they aren't going to copulate and have babies...
Thank you Sir. 
This doesn't show you how to make a webbrowser it shows you how to embed a web browser control in visual basic. It's also doing a bad job of it. If you follow these instructions you'll have a web browser control that renders everything in IE7 Compatibility mode and that pops up a msg box everytime you hit a site with a javascript error instead of handling sanely 
An alternative to the mediaplayer control would be using a browser control and the [&lt;video&gt;](http://www.w3schools.com/html/html5_video.asp) tag to play your video. Their is also the [MCI Player Control](http://www.codeproject.com/Articles/787440/Video-Wall-with-MCIPlayerControl#divTab2vbnet) I would suggest if you want full control use [Direct Show](http://www.codeproject.com/Articles/785008/Fun-with-Video#divTab0vbnet) **Bone** 
I can't recommend this enough http://channel9.msdn.com/Series/Visual-Basic-Fundamentals-for-Absolute-Beginners Great short videos that you can watch over and over, plus you can jump right to the video that discusses a specific topic.
Thank you! This is exactly what I was looking for! I'll try it in the morning and report back. :) Also, thanks for the correction, switching between programming languages all the time can be confusing. :P
You're close. I use a dropdown to select different operators(&lt; &gt; =). Iirc.. &lt;&gt; you can just set binding source filter that way(binding source.filter = (column (syntax) criteria). Lookup like '{0}*' - I think that's what you're looking for the ='s etc. I'm mobile so I can't view your project.
I do stuff like this all the time. In my project, I had objects moving toward each other. I used Two set of variables. One for the current position of the object, and one for their current speed. Every loop, I adjust the speed of the object by a certain amount. dx += 3 dy += -3 And then I adjust the position, based on the speed. px += dx py += dy And then I loop. If you want it to move toward the mouse, you need an if/then statement. if e.x &gt; px then dXFactor = 1 else dXFactor = -1 end if where e.x = the mouse x Position, and dXFactor = a factor used to reverse the sign of the object direction from negative to positive and vice versa. And then you change the speed variable using dXFactor and dYFactor. dx += 3 * dXFactor dY += 3 * dYFactor That way, the object will always be accelerating toward the mouse cursor. 
Is the vb.net? Did you mean Dataset? If so you should be able to retrieve them using a loop. For this, I prefer a For Each loop For each dt as DataTable in myDS.Tables Combobox1.Items.Add(dt.TableName) Next 
"ActiveX component can't create object" means you're missing a dependency. 
/u/chrwei is correct, you're missing a COM Component. Give us the line of code that's throwing the error, and we might be able to tell you what's missing. 
Thanks, will look into this!
Mucho apologies! You got me! Yes, that's right! I just didn't want to have to manually add them in every time I added a new table to the dataset. Work smart, not hard.
What software? Visual Basic? have your tried visual studio express 2013? 
your user name is awesome!
first tip, use a text paste site instead of an image seems like a good start, there will probably be some changes when you do a file store or database backend, but not much you really need to change until then
Ok thanks :) Also, would you happen to have a link to a good text paste site?
Basically just google paste code/text and you will find a ton. I use [pastebin](http://pastebin.com/) and [codepad](http://codepad.org/)
Cheers :)
I like the effort of putting together a text menu and everything.. but one of VB's best features is a very,very (very) simple GUI. Drag and drop, access by name, and there's all of your features. So.. do you want to stick with a text program?
This was for a college assignment so we had to stick to making it in the console. But I will definitely give that a try when I have the chance :)
Thank you!! I was surprised it wasn't taken when I got it.
yessssssssssssssss it worked!!!! Thaank you sooooo freaking much! I understood the jargon finally! Just had cut the string in between the form and button command! Thank you &lt;3 
No, what I mean is you have to define your strings under your general declarations... move **Dim G50S As String = ""** right under **Public Class Form1** and above **Private Sub Button1_Click**. This will define your strings for "everybody" to use, it's the **General Declarations** space
Public Class Form1 Dim G90S, G80S, G70S, G60S, G50S, GFS As String Public Sub Button1_Click(sender As System.Object, e As System.EventArgs) Handles Btn1.Click Dim FNGrades As String = InputBox("Enter The File Name", "HW2") Dim sr As IO.StreamReader = IO.File.OpenText(FNGrades) Do While sr.Peek &lt;&gt; -1 Dim Grade As String = sr.ReadLine If Grade &gt;= 90 And Grade &lt;= 100 Then G90S += "*" ElseIf Grade &gt;= 80 And Grade &lt;= 89 Then G80S = G80S + "*" ElseIf Grade &gt;= 70 And Grade &lt;= 79 Then G70S = G70S + "*" ElseIf Grade &gt;= 60 And Grade &lt;= 69 Then G60S = G60S + "*" ElseIf Grade &gt;= 50 And Grade &lt;= 59 Then G50S = G50S + "*" ElseIf Grade &lt; 50 Then GFS = GFS + "*" End If Loop Lst1.Items.Add("G90: " &amp; G90S) Lst1.Items.Add("G80: " &amp; G80S) Lst1.Items.Add("G70: " &amp; G70S) Lst1.Items.Add("G60: " &amp; G60S) Lst1.Items.Add("G50: " &amp; G50S) Lst1.Items.Add("GF: " &amp; GFS) End Sub End Class ----------- Apparently I didn't need half the &amp;^%$ I had up there! Thanks a lot &lt;3 
I think you are hitting the limits of the Windows file system by having so many files in one directory. If possible I would highly recommend placing the files into sub directories of about 1000 each. I use this technique on an imaging application I wrote and it handles millions of files easily and quickly. Would it be possible to only return a subset of the files by using a search pattern? I doubt it would help since Windows still needs to enumerate the list to match the pattern, but you might want to give it a try.
I'm glad it "clicked" :P Programming in general is fairly simple once you get the hang of the logic behind it. That's all it really is; logic and knowing the capabilities of functions etc... Having a better understanding, you should really go back and take a look at some explanations on hierorchies, private and public functions, events and classes. It might have been confusing at first, but once it starts to all mesh together, going back and re-reading old material will make more sense to you. If you're serious, that is.
I would say to take your time with it. Get a grasp on what you start with (vb.Net), read a few books once you get the basics down and start trying to emulate simple programs you come across in life as practice. Eventually you'll start looking at software and thinking "oh when I click this, the computer is doing this to create this outcome" ect... and that is what you want, an understanding of what programming actually is, how it works. With that kind of logic, I would say to take up C++ ,out of personal preference and because it's used more frequently. When you start up, the books will make so much more sense, since you already have another language under your belt.It just takes time, there's alot to learn and alot of ways to do one thing. EDIT: I should note I've been programming since the 90's, but I never went to school for it either, it's just been a hobby. I doubt I'd get a job somewhere without the training and experience, but I do have a portfolio on freelance websites of work that I've done to pick up small time odd jobs. Can't make a living doing that, but it makes gas money.
you need a sound library, unfortunately .NET is not great for multiple sound channels. The easiest way I found was with nBASS. http://www.codeproject.com/Articles/2848/nBASS-A-sound-libary-for-NET 
Your problems is limitation of the file system. That many files is going to require thinking about how you deal with the files. If you are not comparing the files to each other and are just parsing them. you should grab the first file parse it place it in an output file, move onto the next one. This will allow the garbage collector to clean up after you and you won't run into memory problems. First of all I would run something like this. dim rootFolder as string = "c:\Test\" ' put your root folder here for x = 65 to 90 if not directory.exists(asc(x)) then directory.CreateDirectory(asc(x)) End If file.move(rootFolder &amp; asc(x) &amp; "*.*",rootfolder &amp; asc(x) &amp; "\") Next This should given enough time sort your files into folders alphabetically. Yuu can use the same loop then to parse your files. **Bone**
you don't. you replace the image in the box with the rotated version.
You can try the RotateFlip method: PictureBox1.Image.RotateFlip(RotateFlipType.Rotate180FlipNone) Full list of RotateFlipTypes located here: http://msdn.microsoft.com/en-us/library/system.drawing.rotatefliptype(v=vs.80).aspx
&gt; but even then they are required to shove so many different things down your throat that when you leave uni you're going to be at a disadvantage if you've not been spending all your free time doing it. Exactly! You know I feel bad when I'm pressured to take 15-18 cred. hours (5-6 courses) per semester. It feels like we are pressured to rush rush rush without actually diving in the subjects. I feel bad because almost every course I take I feel the love for, but end up just rushing through it frantically. I keep wishing to take more time with it, and get a decent grasp on it, through application and problem solving etc. But I'm unable to. From subjects like calculus, to VB, to strategic management. Really beautiful subjects. And some really dense ones (like strat. mgmt.) that really need much more than one course, surfing theoretically through it without having it's brilliant mechanisms embedded into our thought processes. It is a shame indeed, but why don't you blame them for it? 
Thanks, I will get to it and all the things that I want to get into after uni. Hopefully through online courses, self-teaching and practice. You've been tagged as VBHELPER btw :P cheers
lol... not sure if ironic. But check your pic again!
Eek, was working earlier. It was basically what the requirements for a driving job if it was like IT. Being able to drive every vehicle in every country, have understanding of all the roads and have 5 years experience in a 2 year old technology.
it is giving me an error for shpblue for the select case simon (i) and it is saying that it is not a valid property. Also, how would i be able to add difficulty and add a random color for each level. like level 1 is one button, level two is two buttons, level three is three random colors, etc. Additionally, when you say etc... do you mean Case 1 shpblue.visible=true Case 2 shpred.visible=true when i try to use the fillcolor for the shape it is giving me an error 
&gt;it is giving me an error for shpblue for the select case simon (i) and it is saying that it is not a valid property Please post your code so I can see why it's complaining. To add a difficulty, you would need a drawGame function, and a couple of global variable for difficulty and maximum difficulty. Inside the drawGame function, use a couple of for loops. For i = 1 to gMaxGameColors shpGameColor(i).visible = false ' turn all game colors off to start Next i For i = 1 to gGameDifficulty shpGameColor(i).visible = true ' turn on only the ones you need Next i Of course, this requires converting all your shapes to a Control array, which you probably should have done to begin with. When I said etc... I meant the rest of the code you'd typed out in the original version. I was too lazy to write it all. Instead of fillcolor, use whatever property you used to set the colors in the first place. Hope this helps.
i coded exactly what you gave me. and it says it was an invalid property. I do not understand what the draw game function is supposed to do as well as the gGameDifficulty. How will that make it add one button for each level? And how would I declare (Dim) them as? A single? An integer? A string? I know i am being a nag but I really just want to learn to code this. 
Is this for a school assignment, or just for your own fun? We're talking about some basics of programming here. You should know this stuff. Also, VB 2010 is free. Why aren't you using that? Don't worry about sounding like a nag. I don't mind helping someone who's trying to learn something new. Check out this site: http://www.vbtutor.net/vb6/vbtutor.html
its an optional extra credit assignment, but I am just doing it for the sake of learning code and trying to understand it more. I know that this is the basics of programming, but I can't program what I was never taught, right?That is why it is an extra credit assignment.
If you really want 6.0, the only legal place I know is eBay. Professional is running around $300. You do know you can get VB.net for free right?
Another vote for "Don't Bother". There was never a free version, and it's extremely obsolete unless you are maintaining legacy code. If you are learning, you should be learning .NET. 
This is not accurate. While having the same context and core they are not the same.
I hereby gift one of my old copies to you. Feel free to legally download it via bittorrent, since you now own a copy. http://kickass.so/usearch/Visual%20Basic%206.0/
I have about 4 apps that can't be converted off vb6 without a complete rewrite (obviously). We haven't had to make a change in quite a while, so it's best left alone.
You're on the right track, but here's an easier syntax: If chkSalad.Checked = True Then strReceipt &amp;= vbNewLine &amp; "Salad 5.00 $" We traditionally use &amp; instead of + when joining strings together, and += (or &amp;= in my example) is the expression we use when we're trying to do something like variable = variable + something. Not a big difference, but I think this is about as optimal as you can get for a simple program. If you wanted to go deeper and automate more stuff, you can maybe think about creating a List of custom objects, attaching the checkbox to the custom object, using a For-Each to check the status of each checkbox and so on... but for 6 items? Ehhh. Just hardcode it. ;)
I have the discs for Visual Basic 6.0 Enterprise Edition. I have not used them in years, due to switching careers. I you want them they are yours.
Thanks a lot man! I really appreciate it.
Probably a manager application for Alzheimer sufferers to help memory and taking medication which included an admin panel for the staff to keep a check on the goings on with log entries and to make sure medication was being taken if they had any or needed to do anything. This was for a final graded unit.
Thanks to everyone about this. I am really wanting to learn C++ or Java but we must first past Visual Basic before going to C... 
I don't know if I am following you. Regions should automatically add the -/+. What version of VS are you using?
You can use [stringbuilder](http://msdn.microsoft.com/en-us/library/system.text.stringbuilder%28v=vs.110%29.aspx) as well. WIth your example you can use the AppendLine method, but to make it look better you can use the AppendFormat, which is similar to String.Format: Dim receipt as new StringBuilder if chkSalad.Checked receipt.AppendLine("Salad{0}{1}", vbTab &amp; vbTab, saladPrice) end if if chkFries.Checked receipt.AppendLine("Fries{0}{1}", vbTab &amp; vbTab, friesPrice) end if strReceipt = receipt.ToString() 
The first thing to clarify: Are you trying to write a program to do this in something like VB.NET/C# from Visual Studio or are you looking to use VBA which is baked into Microsoft Access? I think this subreddit is geared towards the former, but you may be looking to use the latter. If you have no VB experience, you will probably be looking to use VBA because its already a part of MS Access. That post you have referenced is how you can do what you have asked from inside Microsoft Access using VBA. Basically you set up an import spec in access and then you use VBA to loop through all the files, pass them through the import spec and append them in the database. This is easiest when all the files are the same and do not deviate from a specific layout (column orders, etc). You may have to do some preparation around your files to get them all in the same format to dump.
Collapse never goes away for me. I always see a [-] or a [+]
You can also just do &gt;If chkSalad.Checked Then strReceipt &amp;= vbNewLine &amp; "Salad 5.00 $" This will evaluate the boolean condition, faster to type.
Ok so the import spec in access is used for text files. Since you are using Excel spreadsheets there is no need to create a spec. All you have to do is create an array of your file names in VBA, and then loop through each file name and pass them into the [DoCmd.TransferSpreadsheet Method](http://msdn.microsoft.com/en-us/library/office/ff844793%28v=office.15%29.aspx) like so: &gt; DoCmd.TransferSpreadsheet acImport, acSpreadsheetTypeExcel12, "myTableName", "C:\Users\Jason\Documents\myfile.xlsx", True This code would automatically append the entire sheet into the table "myTableName". If the table doesn't exist then the table will be created. So in short, put the sheets all in one folder. Create an array of all the file paths, loop through the array of file paths, and pass the file path into the method. This looks like: Private Sub AppendExcelSheets() Dim objFSO As Object Dim objFolder As Object Dim objFile As Object 'create file system object and get all files in folder Set objFSO = CreateObject("Scripting.FileSystemObject") Set objFolder = objFSO.GetFolder("C:\Users\JasonB\Documents\AllMySheets\") 'the folder containing spreadsheets 'loop through each file and append into database For Each objFile In objFolder.files DoCmd.TransferSpreadsheet acImport, acSpreadsheetTypeExcel12, "myTableName", objFile.Path, True Next objFile End Sub you could do some fancy checking to make sure the file extension matches, but if you just need a quick and dirty way to append those sheets, this should do it for you.
2010 .. it's strange, because I thought so too.. every time I change something within the region, the +/- goes away! I have to highlight, CTRL+M, CTRL+H, and ONLY THEN will it return.. bug? or 2010?
so weird! Mine doesn't always show .. i wish it did. You usign 2010?
You're using 4 year old(almost 5) .net. An older guide is probably what you need.
there are new ways to do old things, kid
To continue my learning in coding I have to first past visual basic....
My point is that vb 6 is an old version of vb. The only reason to use it is if you need to support old software written in it. If you are learning programming and want to start with visual basic, download [Visual Studio Express](http://www.visualstudio.com/en-us/products/visual-studio-express-vs.aspx). You will have an option to use vb.net or c#. I suggest to get it for the desktop, and not the web version. Learning web programming will add so many more layers of complexity that you don't need starting out. There is really no reason to start with vb, except the syntax might be a little easier for a beginner. In any case have fun learning. Programming can be such a great outlet.
You are creating an array that contains 0 items. You either need to declare the array with a number of items: Dim Nums(99) as integer &lt;&lt; there are now 100 items in that array. Or you need to "Redim Preserve" the array to increase it's size before adding something to that position. 
 dim Num() dim x as integer x = 6 redim Num(1 to x) 
You can't do 1 to x in .NET, as the lower bound has to be a 0. Also keep in mind that Redim will erase the array. Redim Preserve will add more items to the array, and preserve the items that are already there. ReDim Preserve Nums(6) I understand this is homework so you probably need to use arrays, but in most real life programing, you would use a list(integer), and .add items. Dim Nums as list(of integer) nums.add(NewNumber) &lt;&lt; adds a new item to the next position. 
Okay i'm completely lost &amp;nbsp; Here's my assignment: http://gyazo.com/18c3e8056684479c2afa0c341f2c5430 &amp;nbsp; And here's what I've done so far: http://gyazo.com/b511636475052c92523b772d7102eff5
If you want an array with an undetermined number of items, you can probably use a List instead. Dim Nums as New List(of Integer) 
The error is due to the fact you've defined Nums to be a reference to an array which hasn't been created yet - this is what happens when you DIM an array variable without defining the size - it just makes a reference and hope you assign that reference to a matching array later. For variable size arrays, it's better to use Lists. You can resize arrays on the fly but it is expensive in processing time - especially for larger arrays. And this expense increases geometrically. 
Check your boolean variables, you have an issue when you're setting them to true/false. It looks like in the "Else" part you're looking for the .IndexOf for the letter they choose. If you're in this section the letter they choose isn't in the word. There is a specific value returned if the indexof doesn't find anything. Take a look at your case statement. I assume the hangman .jpg's are pictures of the little guy getting hung one step at a time, but it's not going to work the way you're doing it. You need to keep track of how many times they've guessed wrong, which has nothing to do with the index of the letter they clicked. If you still need help let us know, but I don't want to just tell you what to change if this is for a school project.
Tapping F8 has been a life saver on more than one occasion when hair pulling is happening.
I got rid of the intWrongGuess boolean and I did this: .Else ........intNeg = intNeg + 1 ................Select Case intNeg ....................(insert cases) .................End Select .........End If The only image that pops up of the hangman is his head but that's ONLY if I press the button "C" for some damn reason.
Something that I do is put like like MessageBox.Show("In event") in different places, and see where you are going wrong. And as other people have stated, put some code breaks in your code and step through it.
why does Professional run for $300 if VB.net is so much better? Perhaps because it's not. Oh I remember now. I couldn't use VB.net for a plugin I was making. I had to use VB 6.0.
I'm sorry, I was a little bored... So your code had a few base level flaws that I just removed and used alternatives. I don't like using .indexOf to achieve the functionality of .contains. You do not need two variables for the answer being right and wrong. You only need one variable which will be true or false. I didn't feel like making 26 buttons, I just made 3 buttons and 3 images so you will have to expand upon my code to handle the rest of your form inputs. I tried to keep as close as possible to your code and get a quick and dirty working sample. This is by no means a "best practices example" and should just get you back on the right track, Best of luck to you! Public Class Form1 Dim strMessageBoxWord As String = InputBox("Player 1: Enter a word within 3 letters", "New Game") Dim wrongCount As Integer = 0 Private Sub NewGame_Click(sender As Object, e As EventArgs) Handles BtnNewGame.Click strMessageBoxWord = InputBox("Enter a word", "New Game") wrongCount = 0 End Sub Private Sub Letter_Click(sender As Object, e As EventArgs) Handles BtnA.Click, BtnB.Click, BtnC.Click Dim LetterClicked As Button = sender Dim blnLetterFound As Boolean = False If strMessageBoxWord.ToLower.Contains(LetterClicked.Tag.tolower) Then blnLetterFound = True Else blnLetterFound = False End If 'If the user finds the correct letter then display the letter. If blnLetterFound Then Dim intPos As String = strMessageBoxWord.ToLower.IndexOf(LetterClicked.Tag.tolower) Select Case intPos Case 0 Me.Letter1.Text = LetterClicked.Text Case 1 Me.Letter2.Text = LetterClicked.Text Case 2 Me.Letter3.Text = LetterClicked.Text End Select Else 'If the user finds the wrong letter then update haangman. Select Case wrongCount Case 0 Me.PBHangMan.Image = Image.FromFile("hangman1.png") wrongCount += 1 Case 1 Me.PBHangMan.Image = Image.FromFile("hangman2.png") wrongCount += 1 Case 2 Me.PBHangMan.Image = Image.FromFile("hangman3.png") wrongCount += 1 End Select End If 'Update the form. Me.Refresh() 'You are going to have to write code in case the game is over due to having too many incorrect answers. 'You are going to have to write code in case the user wins! End Sub End Class 
I'm not sure which of these scenarios you mean by "Printing to a label". &amp;nbsp; If you mean a label on a sheet of paper in a physical printer, then you have two choices here. * Switch to a fixed width font so that spaces and characters are always the same width. Then you can use spaces to align everything. * Create a layout where each portion of the label is printed separately, based on location. This can be done with a number of reporting tools, or by controlling the layout as you print. &amp;nbsp; &amp;nbsp; If you mean that you are updating the data back to a label on the form, then you have two choices: * Use a fixed width font on that label (and use spaces to align everything). * Use multiple labels (right and left aligned as needed), or even better a grid, list box, etc that can handle multiple columns of data. You can even use the properties to hide the grid lines and make it look like a receipt that contains formatted data. 
Is this a label printer that is attached via serial/usb? If it is then you have to get creative for left and right align. I am guessing you want somthing like this; SUBTOTAL: $100.00 TAX: $5.00 TOTAL: $105.00 So to do this you need to create a padding function. Private Sub Button1_Click( sender As Object, e As EventArgs) Handles Button1.Click Dim tempstring as string = pad("SUBTOTAL:","$100.00",40) &amp; vbcrlf &amp; pad("TAX:","$5.00",40) &amp; vbcrlf &amp; pad("TOTAL:","$105.00",40) textbox1.text = tempstring End Sub public function Pad(leftString as string, rightString as string, length as integer)as string dim tString as string = "" dim padLength as integer = length - len(leftstring) - len(rightstring) tstring = leftstring &amp; space(padlength) &amp; rightstring return tstring End Function The output from this is SUBTOTAL: $100.00 TAX: $5.00 TOTAL: $105.00
Sorry for the confusion, I meant just putting it into a label on the form! I used your fixed width font trick and it worked like a charm though, so thanks a bunch!
Thanks for your help! but it's a bit too complicated for my semi-basic knowledge of VB, I just went with a fixed width font in the end.
Yea, I have been in classes like that. I didn't mean that you were, you asked for help and supplied code. A lot of people come to the C# / VB subreddits with no code and pretty much copy paste the question from their book. I hate helping those people.. On the other hand, I love helping people who are willing to put in a little bit of effort. You were almost there, you just had some twisted logic and were trying to use the wrong method. Not hard things to fix at all. With programming I believe anyone can learn. You just have to be willing to fight through the errors and put in some real tlc. A lot of people want something from nothing and refuse to fight through problems and just give up. Programming is super frustrating when things don't work the way they say they do but it is also super rewarding when you create something awesome. Keep at it, hit me up if you have any other questions. I don't have many people to discuss programming with so don't think of it like you are bugging/bothering me by asking a question or just saying hey.
Unfortunately you can't specify a control name in a string that way. For only 8 controls it's probably easier to just add them by hand. For more controls, you can use FindByName or iterate the controls. You could use any of the methods in the following link to set the labels: http://stackoverflow.com/questions/15339139/using-string-as-object-name 
Ok thank you very much for your help!
Glad you got it to work.
Haha, will do. However, this was actually my final project which was due before Christmas break and because I didn't have a program it caused me to fail the class... so I decided to finish the program anyways and send it back to my teacher just for hope. No email from her so far (although she hass been replying back over the break in order to help), so I think I'm going to have to plug my free hour with another class along with having to changing Computer Science II into another class since I failed the first one. And yes, as much as I would love to learn programming, it's very technical and aggravating. If I do somehow make it into CSII and I have any questions in regards to programming, I will contact you. But for right now I don't think I'll be programming until college (unless, of course, I do some on my free time). 
I highly recommend learning on your free time. That's how I learned to program, I went to school just to have a piece of paper to get through HR.
Ok, here is what I ended up doing: I wrote a separate script to write up all my labels and then copied and pasted them into my original script, like follows: Dim playerLabels As New List(Of Label) playerLabels.Add(lblP1Name) playerLabels.Add(lblP2Name) playerLabels.Add(lblP3Name) playerLabels.Add(lblP4Name) playerLabels.Add(lblP5Name) playerLabels.Add(lblP6Name) playerLabels.Add(lblP7Name) playerLabels.Add(lblP8Name) playerLabels.Add(lblP1Wealth) playerLabels.Add(lblP2Wealth) playerLabels.Add(lblP3Wealth) playerLabels.Add(lblP4Wealth) playerLabels.Add(lblP5Wealth) playerLabels.Add(lblP6Wealth) playerLabels.Add(lblP7Wealth) playerLabels.Add(lblP8Wealth) playerLabels.Add(lblP1HandsToComp) playerLabels.Add(lblP2HandsToComp) playerLabels.Add(lblP3HandsToComp) playerLabels.Add(lblP4HandsToComp) playerLabels.Add(lblP5HandsToComp) playerLabels.Add(lblP6HandsToComp) playerLabels.Add(lblP7HandsToComp) playerLabels.Add(lblP8HandsToComp) playerLabels.Add(lblP1TotalWon) playerLabels.Add(lblP2TotalWon) playerLabels.Add(lblP3TotalWon) playerLabels.Add(lblP4TotalWon) playerLabels.Add(lblP5TotalWon) playerLabels.Add(lblP6TotalWon) playerLabels.Add(lblP7TotalWon) playerLabels.Add(lblP8TotalWon) playerLabels.Add(lblP1TotalLost) playerLabels.Add(lblP2TotalLost) playerLabels.Add(lblP3TotalLost) playerLabels.Add(lblP4TotalLost) playerLabels.Add(lblP5TotalLost) playerLabels.Add(lblP6TotalLost) playerLabels.Add(lblP7TotalLost) playerLabels.Add(lblP8TotalLost) playerLabels.Add(lblP1HandsWon) playerLabels.Add(lblP2HandsWon) playerLabels.Add(lblP3HandsWon) playerLabels.Add(lblP4HandsWon) playerLabels.Add(lblP5HandsWon) playerLabels.Add(lblP6HandsWon) playerLabels.Add(lblP7HandsWon) playerLabels.Add(lblP8HandsWon) playerLabels.Add(lblP1Action) playerLabels.Add(lblP2Action) playerLabels.Add(lblP3Action) playerLabels.Add(lblP4Action) playerLabels.Add(lblP5Action) playerLabels.Add(lblP6Action) playerLabels.Add(lblP7Action) playerLabels.Add(lblP8Action) playerLabels.Add(lblP1ActionAmount) playerLabels.Add(lblP2ActionAmount) playerLabels.Add(lblP3ActionAmount) playerLabels.Add(lblP4ActionAmount) playerLabels.Add(lblP5ActionAmount) playerLabels.Add(lblP6ActionAmount) playerLabels.Add(lblP7ActionAmount) playerLabels.Add(lblP8ActionAmount) playerLabels.Add(lblP1Dealer) playerLabels.Add(lblP2Dealer) playerLabels.Add(lblP3Dealer) playerLabels.Add(lblP4Dealer) playerLabels.Add(lblP5Dealer) playerLabels.Add(lblP6Dealer) playerLabels.Add(lblP7Dealer) playerLabels.Add(lblP8Dealer) And then I also created some variables that correspond to the number of labels in each "group": Dim intName As Integer = 0 Dim intWealth As Integer = 7 Dim intHandsToCompletion As Integer = 15 Dim intTotalWon As Integer = 23 Dim intTotalLost As Integer = 31 Dim intHandsWon As Integer = 39 Dim intAction As Integer = 47 Dim intActionAmount As Integer = 55 Dim intDealer As Integer = 63 So now to reference the proper label I would do the following: playerLabels((player number) + (category)) For example, if I wanted to assign a Total Lost value of 10 to player 6, then it would be: playerLabels(6 + intTotalLost).text = 10 And it works just fine! It might not be exactly what you were suggesting, but it works for me. Thank you for all the help!
What issue/advantage does this program solve/provide?
Another quick question, I can't seem to declare the list as a modular variable, every lbl.add is underlined and it says "declaration expected". Any idea on that? 
For question 1: Create two integer variables: highestValue and lowestValue. Set highestValue to be equal to Int32.MinValue and lowestValue to be equal to Int32.MaxValue. Now, use a loop to accept input. Check if the input is = -1; if it is, exit the loop; if it is not, do the following: - Check if the input is higher than highestValue. If it is, make highestValue equal to the input. - Check if the input is lower than lowestValue. If it is, make lowestValue equal to the input. Once the loop exits, display highestValue and lowestValue. The reason why we set highestValue = Int32.MinValue is so that the first integer input into the system will always be assigned to highestValue, since by definition any integer - even a negative number - will be greater than the minimum value of an integer. The same theory applies for lowestValue = Int32.MaxValue.
http://mecode.vysilhq.com/2014/08/visual-basic-facebook-login-without-sdk.html Already got it up :-) 4 U
Yes, the first name is always one word and there is always a middle name initial.
So how did you do? When you experience difficulties with homework, your best bet is to go to someone in your class. People online don't generally like to help with homework, especially when help means to do it for them. You didn't even supply your attempt.
normally you'd use case like: Select Case SomeVariable Case 1 lblA.Text = "1" Case 2 lblA.Text = "2" Case 3 lblB.Text = "other" End Select so in what you posted I don't know what "Right" is that you are comparing. if you want to compare complex conditions like you have you can do "Select Case True" and have your Case lines be something that eval's true or false, but this is uncommon and might be frowned upon in your class. an if...elseif... series would be more typical.
Just realized I'm not actually using the declared Boolean at all. In my mind it's read for case where button Alabama and button mobile are checked, then the label that tells you if its right will say "RIGHT" the issue is that no matter what I check it always reads right, even for cases where I've said it should read wrong near the bottom 
This is the chapter for case selection.
&gt; Select Case Right yes you are using it. it's just false. somehow I didn't see that last night.
no? just replace Right with True. you don't need that variable at all.
this works best if you actually make an attempt yourself and post it on a pastebin and ask specific questions about what you're having trouble with. if the trouble is just getting started, break it down. you need to first implement a deck of cards and a way to randomize them, so do only that first. then split the random deck into 2 stacks. once that works, turn over the top card and remove it from the stack, then compare and score. 
 Dim intCout As Integer = 15 Dim strBeurre As String = "Saveur Beurre 2.00 $" Dim strFromage As String = "Saveur Fromage 2.00 $" Dim strLegere As String = "Saveur Legere 2.00 $" Dim strCaramel As String = "Saveur Caramel 3.00 $" Dim strFruite As String = "Saveur Fruite 3.00 $" Dim strChocolat As String = "Saveur Chocolat 3.00 $" Dim strFacture As String Dim i As Integer Private Sub btnFacture_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnFacture.Click AutoSize = True btnFacture.Enabled = False chkBeurre.Enabled = False chkCaramel.Enabled = False chkChocolat.Enabled = False chkFromage.Enabled = False chkFruite.Enabled = False chkLegere.Enabled = False radCourrier.Enabled = False radRammasser.Enabled = False If chkBeurre.Checked = False Then strBeurre = "Saveur Beurre 0.00 $" End If If chkFromage.Checked = False Then strFromage = "Saveur Fromage 0.00 $" End If If chkLegere.Checked = False Then strLegere = "Saveur Legere 0.00 $" End If If chkCaramel.Checked = False Then strCaramel = "Saveur Caramel 0.00 $" End If If chkFruite.Checked = False Then strFruite = "Saveur Fruite 0.00 $" End If If chkChocolat.Checked = False Then strChocolat = "Saveur Chocolat 0.00 $" End If i = 0 strFacture = "Facture" &amp; vbNewLine &amp; strBeurre &amp; vbNewLine &amp; strFromage &amp; vbNewLine &amp; strLegere &amp; vbNewLine &amp; strCaramel &amp; vbNewLine &amp; strFruite &amp; vbNewLine &amp; strChocolat tmrFacture.Enabled = True End Sub Private Sub tmrFacture_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrFacture.Tick i += 1 txtFacture.Text = strFacture.Substring(7, i) If i = strFacture.Length Then tmrFacture.Enabled = False End Sub
It is a desktop application (winforms). I'll look into that tho' Thanks
When you're saying strFacture.Substring(7, i), you're actually saying, start at vbNewline (right after word Facture), for a length of "i". For the sake of simplicity, assume your strFacture is: "Facture" &amp; vbNewLine &amp; "Saveur Fruite 0.00 $" &amp; vbNewLine &amp; "Saveur Chocolat 0.00 $" How long is this line? 53 characters long. You printing your invoice starting at 7. So the first time around in your timer, you're printing the vbNewline since i=1. Now, keep going like this, what happens when i=47? 
let me try this...
So are you saying I should start at 0? Thank you so much that worked. I love you!!!! (no homo if your a guy lol).
No, that's not what I'm saying. Starting at 7 means you're not printing the word "Facture". If that's what you intend, then that's fine. If that's the case, then think of the condition in your timer event. When do you want to stop printing? You want to stop when you're reaching the last character. So which position would that be? Hint: The word "Facture" is not part of what you're printing. So what should your condition look like? Edit: Also, I suggest you make use of the debugging function in VS. That'll help you greatly figure out why things happen the way they do.. :) 
The important part here is "when it reaches the end"... Using the example of my first reply above, when i is 46, it prints the last $ of your string. That's where you want it to stop. We've established that this string is 53 characters long. 46+7 = 53, right? Alright, I'll just spit it out for you, pre-chewed and partly digested.. :) Just change If i = strFacture.Length Then tmrFacture.Enabled = False to If i = strFacture.Length-7 Then tmrFacture.Enabled = False and you will be good to go. Alternatively, since the word "Facture" in your string doesn't get used or printed, you could just remove that word from your string, change txtFacture.Text = strFacture.Substring(7, i) to txtFacture.Text = strFacture.Substring(0, i) and leave your condition as-is. 
depends on how many images and other included files on the sites. could be 1000 times slower, especially since you can close the connection once you got the title.
Based on your code, you're saying, print from the 7th character. That's what substring does.
Ik but I put 7 because I thought that it would print 7 lines but thanks anyways I got it all figured it out. Thanks so much really!
If I do declare it as a string can I still extract a character from another string by variable.char(0)
Hey here's the full algorithm. I am trying to get a number from the current date by adding the result of adding Month, Day and Year. This sum is then split into the 4 numbers (I suppose because its still 2015) and adds them together. If you can see where's the problem, I'd be thankful. Dim d_input As Date Dim year_input As Integer Dim month_input As Integer Dim day_input As Integer Dim var_w_value As Integer Dim var_w_str_value As String Dim var_w_str_char1 As Char Dim var_w_str_char2 As Char Dim var_w_str_char3 As Char Dim var_w_str_char4 As Char Dim var_w_str_char5 As Char Dim var_w_str_length As Integer Dim var_w_str_char1_value As Integer = CInt(CStr(var_w_str_char1)) Dim var_w_str_char2_value As Integer = CInt(CStr(var_w_str_char2)) Dim var_w_str_char3_value As Integer = CInt(CStr(var_w_str_char3)) Dim var_w_str_char4_value As Integer = CInt(CStr(var_w_str_char4)) Dim var_w_str_char5_value As Integer = CInt(CStr(var_w_str_char5)) d_input = DateValue(Now) year_input = Year(d_input) month_input = Month(d_input) day_input = DateAndTime.Day(d_input) var_w_value = year_input + month_input + day_input var_w_str_value = Str(var_w_value) var_w_str_length = Len(var_w_str_value) If var_w_str_length = 1 Then var_w_str_char1 = GetChar(var_w_str_value, 1) var_w_value = var_w_str_char1_value + var_w_str_char2_value + var_w_str_char3_value + var_w_str_char4_value + var_w_str_char5_value ElseIf var_w_str_length = 2 Then var_w_str_char1 = GetChar(var_w_str_value, 1) var_w_str_char2 = GetChar(var_w_str_value, 2) var_w_value = var_w_str_char1_value + var_w_str_char2_value ElseIf var_w_str_length = 3 Then var_w_str_char1 = GetChar(var_w_str_value, 1) var_w_str_char2 = GetChar(var_w_str_value, 2) var_w_str_char3 = GetChar(var_w_str_value, 3) var_w_value = var_w_str_char1_value + var_w_str_char2_value + var_w_str_char3_value ElseIf var_w_str_length = 4 Then var_w_str_char1 = GetChar(var_w_str_value, 1) var_w_str_char2 = GetChar(var_w_str_value, 2) var_w_str_char3 = GetChar(var_w_str_value, 3) var_w_str_char4 = GetChar(var_w_str_value, 4) var_w_value = var_w_str_char1_value + var_w_str_char2_value + var_w_str_char3_value + var_w_str_char4_value ElseIf var_w_str_length = 5 Then var_w_str_char1 = GetChar(var_w_str_value, 1) var_w_str_char2 = GetChar(var_w_str_value, 2) var_w_str_char3 = GetChar(var_w_str_value, 3) var_w_str_char4 = GetChar(var_w_str_value, 4) var_w_str_char5 = GetChar(var_w_str_value, 5) var_w_value = var_w_str_char1_value + var_w_str_char2_value + var_w_str_char3_value + var_w_str_char4_value + var_w_str_char5_value End If MsgBox(var_w_value)
And you know what... It's okay to be unproductive. But why am i now a troll?
Can you give an example of what this does, by hand? If the input is 1/5/2015, what should the result be? It looks like what you're trying to do is sum the digits in the date string. Then in this case it would be 1+5+2+0+1+5. Is that correct? Looking at your code above, you definitely want to look into using a loop, rather than spelling out all the "get the ith character and sum it". Also, you can often use a CASE statement when you have one condition you are testing, rather than a bunch of if/elseif statements. In your case, you only want to check the length of the string and do different things. If so, you can get this with a simple for-loop, something like this (done in VBA): Sub Test() Dim d_input As Date Dim d_string As String Dim i As Integer Dim intSum As Integer Dim strPart As String d_input = Now() d_string = Format(d_input, "yyyymmdd") 'use the format function to get a string intSum = 0 For i = 1 To Len(d_string) 'loop through the formated date string strPart = Mid(d_string, i, 1) ' get the ith character Select Case strPart Case "0" To "9": 'is it a number? 'yes, so add it to the sum intSum = intSum + CInt(strPart) Case Else ' do nothing End Select Next MsgBox intSum End Sub Note that because I used "format" to only have numbers, the case statement isn't actually necessary because it will always only use the "0" to "9" case. However if your date string has "/" or "-", the case would filter those out. So then you could simplify to: Sub Test() Dim d_input As Date Dim d_string As String Dim i As Integer Dim intSum As Integer d_input = Now() d_string = Format(d_input, "yyyymmdd") 'use the format function to get a string intSum = 0 For i = 1 To Len(d_string) 'loop through the formated date string intSum = intSum + CInt(Mid(d_string, i, 1) Next MsgBox intSum End Sub Also note that VisualBasic and VBA are slightly different. You're using GetChar where I used Mid. The Format function might not be in VisualBasic or may have a different way to call it (e.g. It's "Text" in MS Access). Also, VBA doesn't have the char variable type, just strings. But no matter what variant, you want to simplify, and a loop is probably the easiest way to do that. It will eliminate a majority of your code (which is a good thing!)
&gt; Select Case Right where is "Right" defined? what is it's value? you are comparing the results of each of your Case conditions to this value.
I would grab the HTML string then parse it looking for the &lt;title&gt; tag. See here on how to grab the [page source](https://social.msdn.microsoft.com/Forums/vstudio/en-US/1ddb96ce-359a-4baf-9ffc-6a87eba4fe26/how-can-i-get-html-page-source-for-websites-in-vbnet?forum=vbgeneral).
[I Believe this is what you're looking for.](http://msdn.microsoft.com/en-us/library/system.threading.thread.sleep.aspx)
would this cause all background activity in the program to sleep as well? I just need to pause the execution of the try statement for a second or so
It will make the current thread sleep. I'd there are other threads executing in the background they will not halt. If everything is executing on a single thread, it will all halt.
try using a pastebin instead of an image. what there is of that code doesn't seem to be anything like what you said.
I want to say I tried using sleep and it wouldn't work because of the way the sub is called. I'll try it again later when i'm in front of visual studio and let you know if it solved my problem. Thanks for your suggestion, any other ideas on what I can try?
Ok, so for being tech-specific, I plan on making a completely 2d game, I need to make the character move, which I can do just fine, I need to make it so he can collide with the terrain but jumps up by certain coordinates and come back down. How do I make the picture and hitbox change when the down arrow key is pressed? I think I know how to reset the character when he dies, just make his coordinates go back to the start and do lives-1. I don't *think* It'll be too hard, but time will tell. I'm using vb2010 form code.
Mid takes a string, a start position and length and returns that portion of the string. http://msdn.microsoft.com/en-us/library/05e63829%28v=vs.90%29.aspx MID("Hello",1,1) = "H" MID("Hello",1,2) = "He" MID("Hello",3,1) = "l" MID("Hello",3,3) = "llo" 
This looks like the numerology way of decomposing a date into a single digit. You want to do some iterating and this will also require loops. You ideally would want a function that you can call multiple times to keep your code simpler. Starting here: d_input = DateValue(Now) year_input = Year(d_input) month_input = Month(d_input) day_input = DateAndTime.Day(d_input) var_w_value = year_input + month_input + day_input You know have an integer that has the number you want to start with (e.g. 2024). Now you want to iteratively decompose it using your algorithm (sum the digits). Let's start with the non-function way. Sub test() Dim d_input As Date Dim var_w_value As Integer Dim strTmp As String Dim i As Integer d_input = DateValue(Now) ' year_input = Year(d_input) ' month_input = Month(d_input) ' day_input = Day(d_input) var_w_value = Year(d_input) + Month(d_input) + Day(d_input) 'simplify While var_w_value &gt;= 10 'keep going until our final result is between 0 and 9 strTmp = CStr(var_w_value) 'a string to work through digit by digit var_w_value = 0 'start summing at 0 For i = 1 To Len(strTmp) 'loop through each digit var_w_value = var_w_value + CInt(Mid(strTmp, i, 1)) 'add to the sum Next Debug.Print strTmp, var_w_value Wend End Sub Note I had to use just "Day" to get the day portion out.
Sleep would work if it is called on another thread though, wouldn't it? have you tried using a [background worker?](http://msdn.microsoft.com/en-us/library/ywkkz4s1.aspx)
Can't see anything wrong with what is there, but there is a lot you haven't included. Does it work for the first question and not the rest? Or does it not work for all questions?
Something like this: nTicks = System.Environment.TickCount + 1000 '&lt;1 second Do While System.Environment.TickCount &lt; nTicks 'Delay to Reduce Lan Traffic 'Application.DoEvents() 'Refresh() Loop Since this is a loop, it will actually block while it's running. If you want the UI to update you can try the call to Refresh (you may need to call Invalidate first). If you need to allow the rest of the application to run, try the call to DoEvents. Be aware that calling DoEvents can have nasty side effects, but if you absolutely can't use a background worker, or a timer to do this, then it may be the only thing you have left (it's usually a sign that you should redesign something). 
There are event handlers for [MouseDown](http://msdn.microsoft.com/en-us/library/system.windows.forms.control.mousedown%28v=vs.110%29.aspx) and [MouseUp](http://msdn.microsoft.com/en-us/library/system.windows.forms.control.mouseup%28v=vs.110%29.aspx) events. 
If I could figure out what you are asking (I'm guessing ESL) maybe I could answer your question.. :(
Anyone?
I sorted it. A friend of mine helped me out. Thanks for all the support 
This is what XOR does: http://msdn.microsoft.com/en-us/library/csw1x2a6.aspx 
On creation of a new option to listbox 1 I mean, not on form start up
Imports System.IO Public Class Form1 Dim streamer As IO.StreamReader Dim txt As String = "C:\A1\shows.txt" Private Sub Form1_Load(sender As System.Object, e As System.EventArgs) Handles MyBase.Load Dim reader As StreamReader = New StreamReader(New FileStream(txt, FileMode.Open)) ' Keep reading a line until we hit the end of the file Do While Not reader.EndOfStream ' Read a line and add to listbox1 Shows.Items.Add(reader.ReadLine()) Loop reader.Close() Shows.Visible = False End Sub Private Sub ToolStripButton1_Click(sender As System.Object, e As System.EventArgs) Handles ToolStripButton1.Click Dim Stream As New System.IO.StreamWriter(txt) For i = 0 To Shows.Items.Count - 1 Stream.WriteLine(Shows.Items.Item(i)) Next Stream.Close() End Sub Private Sub Add_Click(sender As System.Object, e As System.EventArgs) Handles Add.Click Shows.Items.Add(NewShow.Text) Dim Stream As New System.IO.StreamWriter("C:\A1\Episodes\" + NewShow.Text + ".txt") For i = 0 To Episodes.Items.Count - 1 Stream.WriteLine(Episodes.Items.Item(i)) Next Stream.Close() End Sub Private Sub Delete_Click(sender As System.Object, e As System.EventArgs) Handles Delete.Click Shows.Items.Remove(Shows.SelectedItem) End Sub Private Sub AddEp_Click(sender As System.Object, e As System.EventArgs) Handles AddEp.Click Episodes.Items.Add(EpName.Text) Dim Stream As New System.IO.StreamWriter("C:\A1\Episodes\" + NewShow.Text + ".txt") For i = 0 To Episodes.Items.Count - 1 Stream.WriteLine(Episodes.Items.Item(i)) Next Stream.Close() End Sub Private Sub Shows_SelectedIndexChanged(sender As Object, e As System.EventArgs) Handles Shows.SelectedIndexChanged NewShow.Text = Shows.SelectedItem Dim read As StreamReader = New StreamReader(New FileStream("C:\A1\Episodes\" + NewShow.Text + ".txt", FileMode.Open)) ' Keep reading a line until we hit the end of the file Do While Not read.EndOfStream ' Read a line and add to Episodes Episodes.Items.Add(read.ReadLine()) Loop read.Close() End Sub End Class This is everything I have so far, I know that it's probably very sloppy and riddled with errors (For instance, whenever I click on a different option in listbox on it doubles the amount of options in listbox 2) but what I want this to do is add a list item in listbox1, and then create a textfile somewhere else to read from and write too which I figured out, but I want to be able to click on an option in listbox 1 and then be able to add my own options on top of that in listbox 2, kind of like; television shows here, and their episodes over there, thanks for the help, and sorry for the terrible coding.
I usually create my own custom error handler object (called debugger) and use try-catches to handle errors instead of letting the code throw an exception. Debugger's structure is very simple and consists of just one method: Add. There's also one shared property, errors as List(of String), which holds all the errors thrown so far. Debugger.Add("error string", errorObject) Whenever something is Added to debugger, the method creates a new Debugger instance and adds it to the errors list, and at the same time displays the object name and my own custom error message in the debug window using debug.print.
Why is this here?
Ah, thank you for the changes! Yeah I didn't really know how to add the difficulty without doing it the way I did xD But I remember doing it the way you did it with my friend like last month. I'll try to remember those points for the future ^_^ By any chance do you know how to stop it from answering the next question?
No problem. My best bet would be that it did that because you had 2 executions of nextquestion()
thank you for the reply ... can you direct me to example or tutorial I'm not that experience in vb 
I'd just reinitialize with the new server name. don't hard code that stuff, it'll drive you nuts later when you have to change it due to server migrations.
Thanks for the reply but I already coded the baldhippy suggestion. I used a regular combo and just parse the input before using it
Start by figuring out where the server name is set in your application. It's possible it is just hard coded into your [connection string](http://www.connectionstrings.com/). If it is, rewrite the connection string so that the server name is a variable. Now, you can attempt to connect to "ServerA". If it fails, you can change the name of the server stored in the variable to "ServerB" and attempt to connect again. I'd suggest making all of the components of the connection string into separate variables while you're at it. 
Yeah. Writing a keylogger. Page wasn't very helpful as that's written in C#. I'm looking for a way to re-write this in a more efficient way using VB. 
The language might have been C#, but they are both .net. It should be very easily translatable. You don't need all those if statements.
please format the code. either click "formmating help" below the box, or use a pastebin. also [XY problem](http://xyproblem.info/). state the use case, it's hard to tell what you're doing, but there's almost certainly a better way. 
it says i must start positioning from 1 not 0 and even after that it's still telling me conversion from string " " to type 'Integer' is not valid
Did you write any code yourself and stuck on a particular problem? If so - can you describe the problem in more detail? &gt; Posting any code you have will help others better understand what you are trying to do and what you have tried already, even if it doesn't work properly. It also shows that you already tried to solve your problem.
Have you already programmed what keys make it move where?
Yeah, arrow keys. That's what keys.right, left etc. Is.
Using timers to move it would be better, that way the movement is smoother
Yeah but there's no way to stop him from moving when the key is released like that, is there?
If you go the timer route there is a function called KeyUp and you can disable the timers there so it stops the pb
Oh wow, thanks! I feel dumb now, lol.
Yeah, programming in 11th grade, it's our final project.
Do you code at home?
Oh I see. I guess programming isn't for everyone. I love writing code but, yea, sometimes it gets frustrating when you can't figure something out but its damn rewarding once you do. Good luck on your project and let me know if you need any help.
Sorry for any inconvenience. I resolved it myself. Thank you anyway.
Well, the Legend of Zelda way was to make each screen its own map, and that moving to the edge of screen loaded the next one. Pokemon did it the way you described with the character staying in the middle of the screen, and the screen moving around them. Some other games allow the character to move about the center of the screen, and then scroll when they get near an edge... unless that edge isn't scrollable. 
First, what's broken: You are resetting the array in every loop. Dim dblLength(intCount) As Double This erases the entire array and recreates it, so it never contains the prior values. If you want to use an array like this, you have to create it outside of the loop, and then call Redim Preserve on the array: Dim dblLength(intCount) As Double '&lt;&lt; before the While loop while.... .... ReDim Preserve dblLength(intCount) .... end while Using "Preserve", tells the compiler that you want to preserve what's already in the array. Also: Checking the value once you have already entered it into the array is a bit backwards from what you want to do. Ideally you'd want to offload it into a temporary variable, and check the value before loading it into the array. You also don't want to increment the array if you don't add the value. dim valueToCheck as double = Val(readLine) If valueToCheck &lt; 1 Then MsgBox("Enter a value between 1 and 10 metres") ElseIf valueToCheck &gt; 10 Then MsgBox("Enter a value between 1 and 10 metres") Else dblLength(intCount) = valueToCheck ' &lt;&lt; only add to the array if they have entered a valid number intCount = intCount + 1 ' &lt;&lt; only increment the array counter if you added something End If That said: In real world .NET programing you'd rarely use an array that wasn't a fixed length. In this case, a List is going to be faster, and cleaner to use: Dim dblLength As New List(Of Double) While intCount &lt;&gt; intWalls Console.WriteLine("Enter a wall length") Dim valueToCheck As Double = Val(Console.ReadLine) If valueToCheck &lt; 1 Then MsgBox("Enter a value between 1 and 10 metres") ElseIf valueToCheck &gt; 10 Then MsgBox("Enter a value between 1 and 10 metres") Else dblLength.Add(valueToCheck) End If End While 
No problem, we all started somewhere! 
Most people that would know what to do with that code don't give a crap about VB6. And most people still writing new VB6 code wouldn't know what to do with the source code for VB6. 
Agree. I have some of that maintenance code, that will hopefully be fully retired by the end of the year. I'm actually running 6 in a Vista VM, and it runs OK. UI work is painful, but luckily all of the UI is now .NET user controls hosted in the VB6 app, so I don't have to mess with too much VB6 UI. The larger issue with Open Sourcing VB6 is that it's not just the IDE / compiler, but the controls and runtimes that may rely on code or components that are licensed from third parties. . 
Scrap the label boxes. Just draw squares right onto the form with the fillrectangle method. Create an array of pixels that are no good to walk on, and every time the player is about to move, check if the pixel he's gonna walk onto is no good. This guy's channel explains about drawing on the form and making grids, etc. Good luck. https://www.youtube.com/watch?v=XV2HFzbKOJI
Thanks for the reply. I was wondering if you could give me the coding.
Watch the video. He gives you the coding.
Ok thanks
Using the WinDings font means not have to worry about drawing sprites. Sprites are pretty easy in VB. I actually taught myself how to do it. But for a beginner, just printing a character to screen is as easy as falling in the mud.
It is amazing how much WinForms is still used even though it has been a dead technology for several years now. WPF is better in so many regards, but it just isn't as well baked as WinForms. I am guessing people will still develop in WinForms for another 10 years.
To add to this: I'd pick one of these, and format the file accordingly: If you want to use the first method, then the file should look like this: hello hola hi If you want to use the second method, the file should look like this: hello,hola,hi 
awesome.. I'll give it a look. Thx!
I would create a simple object to use, this way you wouldn't have to keep track of a redundant array or anything. Public Class Form1 Structure candy Public Overrides Function ToString() As String Return name End Function Dim name As String Dim cost As String End Structure Private Sub ComboBox1_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ComboBox1.SelectedIndexChanged Dim selectedcandy As candy = ComboBox1.SelectedItem label1.text = selectedcandy.cost End Sub Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click ComboBox1.Items.Add(New candy With {.name = TextBox1.Text, .cost = TextBox2.Text}) End Sub End Class 
Create a kinda ghost combobox to store the price like Dim cbxprice As ComboBox Private sub Button1_click(sender as Object, e as EventArgs) handles Button1.Click cbxprice.Items.Add(Textbox1.Text &amp; "//" &amp; Textbox2.Text) ComboBox1.Items.Add(Textbox1.Text) End Sub Private sub ComboBox1_selection(sender as Object, e as EventArgs) Handles ComboBox1.selectedValueChanged For Each Element in cbxprice Dim SplitArray() As String = Element.split("//") If SplitArray(0) = ComboBox1.Text Then Label1.Text = SplitArray(1) End If Next End Sub
i tried that but for some reason it just loads at 50% opacity and stays on top, no change when i bring focus back I don't feel so bad now cause that's basically the code i had before and i got the same behavior
How about you try it and let us know. I would imaging MS's flagship development package would be available for their newest OS.
I tested this with an empty form, and found that it worked. I then put a button on the form and found that the form was stuck at %50 opacity like you described. I believe the issue is because the button is receiving focus as soon as the form loads. I would suggest looking at the [control.setstyle](http://msdn.microsoft.com/en-us/library/system.windows.forms.control.setstyle.aspx) specifically with the [selectable](http://msdn.microsoft.com/en-us/library/system.windows.forms.controlstyles.aspx) option. This will allow you to loop through the controls on the form via the controls collection and set there style to not receive focus. 
found it Forms use activate/deactivate Private Sub Form_Deactivate(sender As Object, e As System.EventArgs) Handles Me.Deactivate Me.Opacity = 0.5 End Sub Private Sub Form_Activated(sender As Object, e As System.EventArgs) Handles Me.Activated Me.Opacity = 1 End Sub Private Sub Form_Load(sender As System.Object, e As System.EventArgs) Handles MyBase.Load Me.AllowTransparency = True Me.TopMost = True End Sub Another google search netted me this: http://www.vbforums.com/showthread.php?573431-RESOLVED-Form-Opacity-Form-Focus
Yes, I am using 2013 on it right now.
That is because your teacher wants you to think outside of the box. He probably gave you all you need to know. We don't mind looking at your attempt. There is a couple reasons why we don't want to do your work for you. 1. The obvious, its your work. 2. We have no idea what your teacher is trying to focus on. There are a lot of ways of doing things. Obviously your teacher wants you to apply whatever was in the lesson to make sure you understand it...
Use this line to set the score to it's lowest : ListBox1.SelectedIndex = ListBox1.Items.Count - 1 Then use this line each time a question is answered correctly : If ListBox1.SelectedIndex &gt; 0 Then ListBox1.SelectedIndex = ListBox1.SelectedIndex - 1 
Set the enabled property to false?
Oh, I didn't even notice that, that worked. Thanks!
Here's an example of code that can do what you need it to do: Sub Main() Console.Writeline("Enter a number from 1 to 10,000 to find out if it is Prime. Type END to exit.") Dim timeToEnd as Boolean = False While timeToEnd = False 'get the input and store it into inputRaw Dim inputRaw as String = Console.Readline() 'doing some basic input parsing to make sure it's all above board If inputRaw.ToUpper = "END" Then 'terminate command, exit the While loop timeToEnd = True Elseif IsNumeric(inputRaw) = False Then 'not a number, display error and prompt for new input Console.Writeline("ERROR: " &amp; inputRaw &amp; " is not a number!") Else 'everything checks out, it's a number and it's not "END" Dim input as Integer = CInt(inputRaw) Dim isPrime as Boolean = True For i = 2 to (input - 1) If input Mod i = 0 Then isPrime = False Exit For Next If isPrime = True Then Console.Writeline(input &amp; " is prime!") Else Console.Writeline(input &amp; " is NOT prime.") End If End If End While End Sub And with some formatting: http://pastebin.com/tZ7JC9TN
Op didn't deliver
I would change how you are storing your maze. Keep the array, but add to it. Map(0,0,0,0,0,0) gives you x/y coordinates followed by 4 Booleans determining what direction you can navigate from there. North, East, South, West. You could condense that to a single digit and use bit-masking to determine available directions. 1 = North, 2 = East, 4 = South, 8 = West. So a direction value of 3 has valid directions of north and east. This would also cut down on your "what direction" coding.
i'm sorry i'm fairly new to vb. how would i implement this? i don't quite follow the boolean part with 1,2,4,8
Go to the properties for that radio button and set the Tab Index to something other than 0. Tab Index of 0 means that the program automatically has that object selected when it boots up. Each time you hit Tab, it jumps to the next lowest Tab Index (0&gt;1&gt;2&gt;3&gt;etc) 
No problem brah. Good luck
I made a maze game. Similar to this, but pretty much the same idea. You can go N, S, E, W on any given turn, depending on the layout. The 1,2,4,8 idea is used to determine which walls are missing in any given location. And since there can be any combination of walls at any given place, you need to use boolean math to open or close them. N S E W 0 0 1 0 Here the East wall is open. You can go east. The other walls are closed. You can go that way. 0010 in boolean is 2, so the walls flag would be set to 2. N S E W 1 0 1 1 Here all walls are open except South. And in boolean, this room is 11. Get it? The tough part is figuring it out in reverse. How do you convert a decimal number back to a boolean so you can tell the user which exits are open for a given configuration. A select case is the brute force way of doing it. I created a function that returns true if a given exit is open for a particular square. Private Function CanGo(loc as integer, dir as interer) as Boolean So you send it the room location and the direction you're checking, and the function tells you whether you can go that way. If Not Cango(pLoc, n) then Console.WriteLine("Cannot go this way can't you read!") I would also just use a one dimensional array instead of 2 for locations. Instead of x and y, just have a single number 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 etc... 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 97 99 If the player goes North, pLoc -= Width (which is 10) If the player goes South, pLoc += Width (which is 10) If the player goes East, pLoc += 1 If the player goes West, pLoc -= 1 So if you're at square 94, and the player goes north, that's 94 - 10, which brings them to 84, one square north. Use a variable for grid width, in case you change it later. If you want to use diagonal movement, adjust the math accordingly. So your final room variables will be an array of strings for room locations, an array of intergers for exits, and an array of integers for objects in the game. For room exits the code would be: Console.Writeline("You are in " &amp; RoomName(pLoc) &amp; ".") Console.Writeline("You can go:") If Cango(pLoc,1) then Console.Writeline("North") If Cango(pLoc,2) then Console.Writeline("South") If Cango(pLoc,4) then Console.Writeline("East") If Cango(pLoc,8) then Console.Writeline("West") For Room inventory the code would be: For i = 0 to Ubound(GameObjectsLoc) If GameObjectsLoc(i) = pLoc then Console.Writeline("There is a " &amp; GameObjectName(i) &amp; " here!" Next i So it checks every object, and if the object is in the same room as the player, then it tells you there's one of them in the room. If UserInput = "Get Golden Key" then ItemIndex = 0 ' Golden Key If GameObjectLoc(itemIndex) = pLoc then GameObjectsLoc(itemIndex) = -1 ' put into player inventory Console.Writeline("Got it!") Else Console.Writeline("It's not here, stupid.") End if End if And if the player checks his/her inventory, you just do an inventory for room -1. For i = 0 to Ubound(GameObjectsLoc) If GameObjectsLoc(i) = -1 then Console.Writeline("You have a " &amp; GameObjectName(i) ) Next i To drop an item from your inventory: If UserInput = "Drop Golden Key" then ItemIndex = 0 ' Golden Key if GameObjectLoc(itemIndex) = -1 then GameObjectLoc(itemIndex) = pLoc ' drop into room Console.Writeline("You dropped the " &amp; gameObjectName(itemIndex) &amp; "!" Else Console.Writeline("You don't even have a " &amp; gameObjectName(itemIndex) &amp; ", stupid!" End if End if Use -2 as a room index for destroying objects from the game world. Instead of moving them to -1 (the player inventory), move them to -2. Hope this helps. 
&gt;Conversion from string " " to type 'Integer' is not valid you should be checking to make sure you have something numeric before casting it. IsNumeric() I think is the function, from memory. 
You should be able to use the Forms Collection to handle this For Each Form In Forms Unload Form Next Form 
thank you for the clearing up. many thanks for the help.
So that's all I type into the exit button? (Sorry I'm kind o new to VB)
This is how i have a batch file print which works fine. Now I am trying to print the pdfs by selecting them in vb and having them print. hope that helps: Set LACHfolder=\\alta-fileshare\ssrs$\SCA\DietLists\LACH\*.* set LACHsource=\\alta-fileshare\ssrs$\SCA\DietLists\LACH\*.pdf set LACHarchive=\\alta-fileshare\ssrs$\SCA\Archive\LACH set LACHprinter=\\ah1scmprintvs01\LACH-DIET-BR-P01 for %%f in ("%LACHsource%") do "C:\Program Files (x86)\SumatraPDF\SumatraPDF.exe" -print-to %LACHprinter% "%%f" MOVE /y %LACHfolder% %LACHarchive% 
so just concat the path and filename onto the command
&gt; concat the path care to help out? Thanks :P
"a string " &amp; somVar this should be one of the early operators you learn. seems you skipped something.
Im not sure how i get the .pdf into the string. Right now if i select a file it goes to textbox1.text and would show:\\alta-fileshare\Somefile.pdf so im not exactly sure how to use that as a file. I never took any classes or anything for that matter. So anything helps :P
i think I see the confusion now. you are simply building a command string to execute. that it's the name of a file is not relevant. 
but im not sure how to call it?
you're overthinking it. for practical purposes, TextBox1.Text is nothing more than a variable. just concat it. 
Is the variable *plc* set to something? &gt; Dim plc As PLC 
PLC is a private that is loaded when the form opens: &gt; Private plc As PLC Then, when i enter a IP adres and click on the connect button it will try to connect and fill a PLCname in in the cbPLCnaam.textbox. 
what vb version? I've only done Office integration with OLE in vbscript and vb6 and never had this problem. "synchronous callback" is likely just what you call the concept. to implement it the object either needs to support passing a callback function directly, or have an "after loaded" type event you can hook to.
Are you using VisualBasic .net, VBA, VB6? If you are using .Net what version of the framework are you working with since that really affects the Asynchronous tools that are available to you. For instance it's super easy to do in .Net 4.5 with the new async and await keywords https://msdn.microsoft.com/en-us/library/hh191443.aspx It gets progressively more complicated the more you go back in versions of .net Also the term isn't "A Synchronous Call back" it's Asynchronous, synchronous is what you are doing where the method blocks the application, asynchronous is where it doesn't. 
All you need to do is provide the Random object with a seed. the most common way to do this is to provide it with the current time, like so: Dim rng as new random(timer) 
Okay Thanks! One more question, When I'm trying to get a character from an integer after turning it into a string there's always an extra 'hidden' character. Example: 810 is a number. I turn it into a string "810". then I'm trying to do the math by having Mid() take every number then turn it into integer -&gt; 8 + 1 + 0 but Instead me using Mid(variable, 1, 1) to get "8" I have to use Mid(variable, 2, 1)! Can you help me why I am getting an anonymous initial?
When I start from zero it tells me to start from one :/ 
Take a look at monogame.
thank you!!
I think you can use Substring for this: Dim strNumber as string = "810" Dim first as string = strNumber.Substring(0,1) Dim second as string = strNumber.Substring(1,2) Dim third as string = strNumber.Substring(2,3) Messagebox.show(first &amp; " + " &amp; second &amp; " + " &amp; third) Hope this helps.
Np :) Hope you get better soon.
Thank you
what version? in vb6 you can't. you can create duplicates (control arrays) at runtime though. I think in newer .net versions you can though, if not all of them.
http://www.dotnetheaven.com/article/creating-a-dynamic-button-in-vb.net and in looking for that I also found a way for vb6... you think you know something well and there's always something else to learn!
If what you're trying to do is add 1+2+3+4+5 (your question wasn't very clear) something like this would work: Dim iSum As Integer = 0 Dim iStart As Integer = Convert.ToInt32(TextBox1.Text) Dim iEnd As Integer = Convert.ToInt32(TextBox2.Text) For i As Integer = iStart To iEnd iSum += i Next
Thanks! So that part I know, and I've done that, I was wondering though if I can limit my use on the form itself though, and just focus vb file that has code and if I can work on that instead without having to add any extra. if I have like (copy and pasted from internet) Private Sub txtGreen_Enter (ByVal sender as System. txtGreen.Backcolor = Color.Green txtYellow.Backcolor = Color.DarkGray txtRed.BackColor=Color.DarkGray End Sub Can I put that anywhere? That was an example from something else.
Yep. once you create the control, you can then wire the event handler of the control to an event. So, continuing my earlier sample, I add a button to the form, and then in the button click event create the textbox, and wire the event handler for the textchanged event: Private Sub btn_Click(sender As Object, e As EventArgs) Handles btn.Click Dim txtBox As New TextBox txtBox.Location = New System.Drawing.Point(409, 126) txtBox.Name = "txtBox" txtBox.Size = New System.Drawing.Size(100, 20) Me.Controls.Add(txtBox) AddHandler txtBox.TextChanged, AddressOf TextBox_TextChanged End Sub Private Sub TextBox_TextChanged(sender As Object, e As EventArgs) MessageBox.Show("hello") End Sub 
Can VB.net work on android ? With something called mono ??
I hear it can although I haven't done it. Check out xamarin, that should get you going.
I understand. I'm not terribly creative so ots hard for me to come up with things on my own. I try to find something I like and try to copy it, then make it better. You could start with something like a car milage tracker. You can learn about connecting to databases or even make it a web app. Good learning experience.
I'm sure there's a nice api for that, but it might be easier, and more universally beneficial, to spend that time implementing exception handling and download resume features.
You don't need to use a For Loop if you want to add numbers from a textbox. Private Sub AddNumbers() Dim intNumber1 as integer = integer.parse(Textbox1.Text) Dim intNumber2 as integer = integer.parse(Textbox2.Text) Dim intAnswer as integer = intNumber1 + intNumber2 Messagebox.show(intAnswer) End Sub It's just really that simpel. Hope this helped. 
Considering that VS is a pretty solid tool the chances are - it's your code that is causing problems and not the tool. It's impossible to tell what that might be without looking at the code, but I suspect an infinite loop or a mishandled exception. I'd start by putting a breakpoint on the event handler for that button and stepping through the code to see if you can find where it fails. Good luck!
I think I want to know what high school is still teaching vb6 in 2015. It's not like you can't get vb.net for free with a .edu address or anything.
Try &amp;= You are overwriting lblresults.text in each loop by setting it with = If you set it with &amp;=, you'll be adding new text to the end, instead of replacing it. 
What I am saying is that the barrier to entry is lower for .net than it is vb6. There is no way those are legit vb6 licenses unless they did a site license in the 90s.
I Absolutely agree with you. No reason at all to use VB6, even if they are all legit licenses.
worth mentioning that "&gt;" is the greater than operator.
Unfortunately I can't really fill in the shapes without importing a graphics library or something, and I was already straying a little far from what she had taught us, so wireframe it is!
I actually heard her talking about this with another tech teacher today - she basically said that she wanted to, but then she'd have to rewrite all the tests and presentations to work with a new language. Oh well, I make do, and we start python/java Monday!
Thanks!
Use a timer
As long as you didn't include additional references or resources, you should just need the .exe and .config. 
Didn't catch that! 
I think you need to use the CheckChanged event on the checkboxes. &amp;nbsp; Private Sub chkAnswer_CheckedChanged(sender As Object, e As EventArgs) Handles chkAnswer.CheckedChanged if chkAnswer.Checked = true then 'Show da answers else if chkAnswer.Checked = false 'Hide dem answers end if End Sub
You can fill the shapes with ,BF in the Line Method. Also useful, you could use either WIn32API and StretchBlt or you could use VB6's PaintPicture and paint an image onto each box. PaintPicture is a method on Forms and PictureBoxes not unlike Line or Circle, but it takes an image. You can slap an image into an invisible Image control and then use bgImage.Image in the PaintPicture, than provide the same coordinates you use to draw the box to draw the image.
You could also use a variable to store the contents of the text box and pass that to a function that handles the IF statement. Unfortunately, that would only work the same IF statement is needed for each box.
I would make the inputs "R" or "L" instead of the full words, easier to error catch. Also, you don't need to mess with bits. You can just add or subtract the number of spaces and either subtract or add 26 to get a valid number and use that as the ciphered letter. E.g. "C", shift left 3, would be 0+26= "Z". Also you would just need to add a prompt for the direction and the number of spaces. If the number of spaces is more than 26, just run a modulus operation "%" on it to get an easier number to work with.
Really great job. Do you have plans to get into programming after you are done school?
Select Case isn't an option?
[Have a look at this](http://www.codeproject.com/Articles/38699/A-Professional-Calendar-Agenda-View-That-You-Will)
VB6 doesn't work right on Win 8 (heck, it barely works on Win Vista). I have serious doubts about the ability of VB5 to run in Win8. Are you sure they're running VB5 and not VB6?
Yeah, it took me a while to get it up and running but it works fine. The only problem I have had so far is the screen cutting off my form. I was thinking about running it through a virtual machine but didn't know what OS it would work best with
Also the comparison of a String and an Integer, won't result in the results you expect. As the Integer will be implicitly cast to a String. So 122 would be less than 20
I'm guessing you are trying to add 10 to the timer. The timer being set by TimerTime.Caption Don't you just add TimerTime.Caption = TimerTime.Caption + 10 to the image click event? 
I think if I were going to tackle this, I would build the cypher string off my user's input. If L and 3 then the cypher would start with X If R and 3 then the cypher would start with D Using the ASCII values and some math plus a few rules to wrap around A and Z as needed, it would only then be a parallel array check to create the cyphered string. Example 65 is A in ASCII, 90 being Z and you have 25 characters. A loop that runs from 25 times while resetting back to 65 if over 90 or to 90 if under 65 should allow you to fill the cipher array. If I get time later, I might work something up so that I can explain better if you get stuck. 
Okay thankyou! Really appricate this!
Im just completely lost. Oh well thanks though
I highly recommend one. it's not something you can just jump into blind and understand, and this sort of calculating would be covered fairly early. I don't have one I recommend over any other though.
Yeah this is for a class but we got 13 inches of snow and my street never got plowed and I cant get my car out. But I think I almost have it figured out. Thank you
It's been a very long time since I used visual basic, but wouldn't it just be variable = textbox.text * price?
Ah, I see. You are correct, this would only work for entering the number entirely :( Anyway, I just discovered another problem, If the format includes commas, you have the same issue. So in my example, 104795.84 would format to $104,795.84 but you can't type 104,795.84 as it will be rejected too. Might be that you only allow numbers and a decimal entered and set your format to F2 instead of C2 this will still keep the 2 decimal format but would not include invalid characters.
I would have an event tied to when the check box is selected that adds the selected list element to a new list. You can either define the new arraylist as what populates the new listbox or just have the listbox.Items.Add add this to the arrylist behind to Items property. 
Did you ever get this working?
The checkedlistbox has a CheckedItems collection that you can always iterate through giving you only the checked items. I would use the mouse-up event because sometimes you don't trigger ItemCheck depending on where focus is at when clicking the checkbox. Inside that you could: Clear your listbox (Yes each time as you're going to refill it with the items in the checkeditems collection) use a For Each statement on the CheckedItems collection adding each of them to the listbox For each itm as String in yourCheckedListBox.CheckedItems yourPlainListBox.Items.Add(itm) Next Now every time you check or un-check an item, your other listbox is updated to match. Advanced: This can also be done without the loop using AddRange on the listbox
So do i close Form1 when Form2 opens?
no? I mean, you can, but there's no requirement to. you can also hide form1, then when you close form2 unhide it, or just make form2 application modal so the user can't interact with form1 until form2 is closed. there's lot of options, but sticking a form inside another form is not common or intuitive, if it's even possible.
The only way I think you can do this is to create the object in code, and then feed it to the list, but IMO that defeats the entire purpose of using binding (as you'd have to have your own entry box for that first field). I'd just create the default constructor, and let the BindingSource manage the list for you. You can always use the validation events from the grid cells to validate input as you go, or use the events from the BindingSource to check the object. 
You've stepped into a hornets nest. Save a copy of the project, convert it, and spend a butt load of time fixing crap to get it to compile, then you'll be ready to do bug fixes. 
How are the users selecting the numbers they're betting on?
Thanks for the response. I ended up just adding it manually, with a button that shows a dialog box asking for the new computer's name.
to be honest i don't even really know where to start i only started learning code recently
* How far along have you gotten since you started coding? * Do you understand what a variable, function, or class is? * How much time have you spent trying to figure out the problem so far?
i understand variables, while loops, arrays, if statements etc but im struggling to put them into practice . its a project at school, ive done all my planning etc but this is the part im stuck at if you cant help me do you have any tutorials or guides i could learn from 
From what I understand by your post, that's about all you would need. I'm assuming you're familiar with console commands like Read() and Write(). For getting the name, obviously you will need a variable to store it in, so you will need to use the Console.Read() command to get that information from the user. I'm assuming these math questions are just putting the math on the screen and letting the user enter an answer. I'd suggest looking on MSDN for help with random numbers. VB.NET has a LOT of very helpful documentation that can be found on MSDN, so the sooner you start taking advantage of that the better off you'll be. You will also need to use an array to store the users answers as well if you want to keep track of them and use the results for some final output. You say you already know how to use arrays, but if you get stuck, remember to check MSDN and search for arrays to find out what you need to do to get unstuck. I've given you an approach to use to build the program, now it's up to you to implement it correctly and since this is obviously a homework assignment, I will stop here. If I give you the answers you simply won't learn anything. For reference, here is the MSDN link to the Random class which you will need to make use of in your assignment: https://msdn.microsoft.com/en-us/library/system.random(v=vs.110).aspx?cs-save-lang=1&amp;cs-lang=vb#code-snippet-1
thanks for the help i appreciate it 
Yea, that won't work... In that case you can do two things: * Set the .MinDate as you are now, and then check the date as you pull it from the file to see if it's less that than the .MinDate. If it is, then change the .MinDate to be the same as the date from the file. * Don't set the .MinDate until after you've set the DTP to the date from the file, and then make it the lower of the two (today or dtp.value). Either way you are just double checking to make sure that the date from the file isn't less than today, and then setting MinDate to the older date. That of course doesn't prevent someone from entering a date in the past if the value in the file is less than today, so you'd have to manually validate that. There are a couple of ways to potentially handle it. * The easiest is to just use the .Validating event and verify that the .value isn't in the past. If it is set e.cancel to true, and display an error message. * You could also do something in the .DropDown and .CloseUp events to set the .MinDate to today, but you'd have to offload the selected date, set .MinDate, and then set it back if they don't actually select something. 
Thanks to both of you guys for the quick reply!
Thanks for that, i have done the e.cancel method, still not exactly how i like it but it will do.
I find that extremely clear. what specifically is the issue?
I don't know how to do it. She is clear, but she doesn't explain how to do it. I am a noob, as this is an intro class. 
How do I declare each? What's the difference between Private and public?
this should be covered by the tutorial or book you are following. and if you're not, I'd recommend doing so, since you're going to have WAY too many questions.
with a book I typically skim and mostly just look at the examples and titles and then read more when something doesn't just click with me.
Well each box needs to correspond with its number, +1 for 1 and +2 for 2 and so on through box 9. All of that adds up to 45. To declare a variable I would have to do the following?: Dim button1.click as Integer = 1 ? 
any classmates having similar issues? I'm having a hard to time believing you've been assigned this with no introduction to variables and event handlers.
sort them and compare the sorted version. 
Functions and subs are what we call **methods**. Generally speaking, you use a method whenever you have a bit of code that can be reused. If for example you were going to write a game, you may have a bit of code that calculates the amount of damage an attack does to a monster and apply that damage. Well, this can go into a method. The main difference between a sub and a function is that a sub does not return any values while a function does. What does this mean? If you need your code to process something and then throw a value back at you, that's a function. If you just need your code to process something and call it a day, that's a sub. This is a sub: Private Sub printShitToScreen(shit as String) Console.Writeline(shit) End Sub This is a function: Private Function calculateStuff(x as Integer, y as Integer) as Integer Return x + y End Function A **private method** can only be called from within the same module or object that you're working in. A **public method**, on the other hand, can be called from anywhere in your code. Public methods should be used cautiously, because if you're not careful they can really screw up your namespaces... but that's something for another time.
If I'm reading this right, there no need to increment *counter* manually. A For-Next loop will increment *counter* automatically on each iteration. The easiest way to reduce the handles clause is to use some type of grid control (GridView is what I usually use in .Net) to create your grid. Then pass some identifying information OnCommand and handle that event.
thanks!
what kind of information? database is great for large amounts of data of which you query for small parts of it at a time, and also is best when there's a server so the data can be shared. dat file is local only, hard to query, and would be best used for chunks of static data that you don't want to compile in for some reason. local settings you should put in the registry. 
found it: Dim W As IO.StreamWriter Dim i As Integer W = New IO.StreamWriter("C:\test\test.txt") For i = 0 To ListBox2.Items.Count - 1 W.WriteLine(ListBox2.Items.Item(i)) Next W.close() OR: Dim W As IO.StreamWriter Dim i As Integer W = New IO.StreamWriter((OpenFileName),true) For i = 0 To ListBoxLine.Items.Count - 1 W.WriteLine(ListBoxLine.Items.Item(i)) Next W.Close() End
decode the field and rebuild it. I'd assume there's docs on that somewhere. though here we push those things using GPO, some reason you can't do that?
keep track of the last byte position read and then seek to it when you open again.
With streamReader.BaseStream.Position?
it'd be like i download 10+ files a day from some source. i need these edits done for all of them. would like to click a magical button that basically runs my conversions on all files. thank you for taking a look at this noobishness
TextBox3.Text is a string which you will have to convert to an integer. Try: Score = Convert.toInt32(TextBox3.Text)
Thanks for helping! But what event do you mean?
&gt; making the changes and saving them back. Just make sure it doesn't repeat the operation on files that have already been processed. There should probably be some kind of mechanism to prevent that.
Also try /r/vba. 
yes we are in the process of improving our current ETL process. we have a custom tool that is 4 years old. we haven't automated our scripts yet. we don't have an in house dev so i'm really trying to figure out if it's possible to dynamically restructure different files and automatically inject them into our sql database as soon as they touch the ftp server. all without a proper dev so it would have to be consumer level products. thanks for all your help by the way any further advice would be awesome
you can get the decimal ascii code of a letter with the Asc() function, and you can get a string representation of the hexadecimal or binary (or nay base) version of a number with the Convert.ToString() method.
 Dim name As String Dim operation As String Console.WriteLine("what is you name") Console.ReadLine = name Dim questions(9) As String questions(0) = "question one" questions(1) = "question two" questions(2) = "question three" questions(3) = "question four" questions(4) = "question five" questions(5) = "question six" questions(6) = "question seven" questions(7) = "question eight" questions(8) = "question nine" questions(9) = "question ten" For i = 0 To questions.Length - 1 im kinda stuck i dont know what to do. i used msdn but im struggling understanding how to use it in code 
Are you populating via a dataset or manually adding points and values from the rows returned? Either way, you're probably going to have to iterate through the results of the datatable or reader and determine what is missing and add a default value. I could be wrong but I don't know how the chart would know that you're dealing with hours in a day and know that going from 20 to 22 would require it to add 21 with a 0 value. You are probably going to have to adjust your data prior to populating the graph. [I did find this that may help when dealing with a line chart but not sure if this applies](http://www.mssqltips.com/sqlservertip/2373/how-to-handle-empty-values-in-a-line-chart-in-ssrs/) 
Well, first off, Console.ReadLine() returns a value which is the value the user types in. You need to assign that value to 'name'. What you're currently trying to do is assign a value to a function, which is not going to work. You have that piece backwards. I'm assuming you've reached a stopping point because you have errors and are not sure what to do with them. Is there anything after the last line you put in or is that it? Every For loop needs to have 'Next' on a line beneath. The lines of code you need to run multiple times need to be between the top of the For loop and the Next keyword. Example: Dim x As Integer = 0 For i As Integer = 0 To 5 x += i Next That will take each vale of i and add it to x.
ToString with base 2 should give a string of 1s and 0s... 
* item 1 Damian
 For intCount = intStart To intEnd Step 1 For intCounter = 2 To intCount - 1 blnPrime = IsPrime(intCount, intCounter) Next If blnPrime = True Then lstResults.Items.Add(intCount) End If Next I think what is happening here is when the final increment calls IsPrime it is returning true everytime since a number is not going to be able to divide evenly by a number one less than itself. Try putting in a condition after you call IsPrime to check if blnPrime is false, if it is false break the loop. Something like this. For intCount = intStart To intEnd Step 1 For intCounter = 2 To intCount - 1 blnPrime = IsPrime(intCount, intCounter) If(!blnPrime) Then Break; EndIf Next If blnPrime = True Then lstResults.Items.Add(intCount) End If Next 
How would I go about creating the sidebar and topbar? Are there any tutorials out there? I've been looking around but cant find anything :(
Nvm, solved by manually removing the files from the Resources.resx file
Thanks for sharing the solution, i once had the exact same problem but i never got around to fixing it.
I'm sure someone will take you up on this but I wish they wouldn't. 
If you haven't had the time than why did you take the class??? You deserve to fail this class. 
You are correct. Thankyou. 
Just downloaded, I like it. It's quite addictive
this reminds me of that cookie game...
The function is used to calculate the discount which I then deduct from the bill later on in the sub main. I'm not calculating the discounted bill in the first go. Sorry for the late reply. 
Neat game so far. I'll suggest some kind of saving form (with encryption ideally), not forcing to use it on full-screen and some kind of explanation of what each thing does (it took a while to me to understand the game)
All valid points, saving is something I'll be doing last to make it easier but I think I will add some info to help new players. Thanks for the feedback
I'll try get one out within the next few hours, working on it now :) I'll release it on this thread
I am taking the same class. It doesn't look like you are following the book step by step. Are you using your own knowledge and pulling things out of the air? Trying this try that..etc Follow the book. The assignment is easy. Private Sub btnRed_Click(sender As Object, e As EventArgs) Handles btnRed.Click ' decision statement - if txtRed.text = rojo then change txtRed.text backcolor to red Dim strRed As String = txtRed.Text If strRed.ToUpper = "ROJO" Then txtRed.BackColor = Color.Red txtRed.ForeColor = Color.White Else MessageBox.Show("Rojo", "Spanish Colors", MessageBoxButtons.OK, MessageBoxIcon.Information) End If End Sub 
Have to say thanks to everyone for 400 downloads! Special thanks to u/misterchispa for some new ideas :) Source code here: http://www.mediafire.com/view/jc7n6p84u03bbvg/Form1.vb
New version uploaded here with source code: http://www.reddit.com/r/visualbasic/comments/2wcrkd/net_worth_new_version_source_code_in_comments/
Seriously, that's a thing?! Never looked into the anchor property, I was taught to manually set those positions, using .left and .top, I owe you!
Thank you for your help. I have now linked the button and the picture box to the ListBox. ListBox selection loads picture into PictureBox then clicking on button takes you to correct page depending on what you have selected. I am still using a text file for the ListBox though, as I haven't learnt how to link it to an online database as of yet. I am using (or trying to) implement wyupdate into it, so I can update said text file, but that it proving difficult as I have the text file as a resource at the moment. What I want it to do is on startup check if "C:\List\data.txt" exists, if not create it. Then running the updater would replace "data.txt" with a newer version with all the current data. As at the moment all the updater seems to do is corrupt it. Is this feasible?
It's essentially cookie clicker but with GBP instead of cookies. Form1.vb is the code for the actual game, there is another form for the splash screen but that only has about 3 buttons. 
I thank you very much! Reset most items to anchors, couldn't figure out how to keep stuff centered so two things are manually placed when you resize the form when it's not full screen. Only in the new version though, it'll be up in a few hours or tomorrow at the latest.
That's while I'm thinking too. I wrote it out in powershell (because I'm more familiar with Powershell), but I'm not sure how to do the same in VB.
is there nothing in the zip file name or download process that you can generate the folder name from and validate that it's not been done yet? what happens if a quarter gets missed, or the script gets run twice?
If you know the start parameters, it should be as simple as: Process.Start("fileName", "arguments")
thank you very much for your help. I now have a issue where it launches the game with mods enabled and it tries to join a server but gets stuck on waiting for host but if i launch by other means i can get in just fine has anyone got any idea what this could be ?
How are you writing to the file? If you're using a StreamWriter, [add a second parameter to the object set to True.](http://i.imgur.com/OFyHwdk.png) 
I guess we should back up a bit. You are asking a very vague question here: Is this a desktop application or a web site? 
Users are on different machines, different networks, I just want to know how I can send information (value of a variable, size of a form, etc..) from one windows form client to another windows form client. Sorry for any odd wording, a lot of this language is from my schools exam board which is definitely questionable in accuracy.
I'm curious about something &amp; please forgive me if my question gets away from the point of your tutorial: In the WorkerDrone, TransportMechanism is set by the type of Part that is picked up. Since the Parts are a List, multiple Parts could be picked up. What would happen in the event an Assembly is picked up and then a Weapon is picked up? Seems like the Assembly would be delivered to the Armoury. What would be the best way to go about preventing something like this? Setting the TransportMechanism in the constructor? Tuple the Part &amp; TransportMechanism?
Well, You'll need a server in the middle to act as a conduit for messages. You could just send info to a SQL DB of some sort (by exposing the DB to the web, and connecting directly), but that has a lot of ugly security implications. Ideally, you'd want to have some sort of service on the server (to keep from having to expose the DB). Either something like Web API, or an ASP.NET based service (these can be written in VB.NET). You could also write a Windows Service, and exchange information via sockets (messages based around XML or JSON). Then each client just pushes data to, or pulls data from the server / service. The service / web app would save the data in a DB. A messaging system like SignalR might be an option as well. 
How are you doing on this?
Great. Thanks for the respond. Looking forward to your next article.
managed to do it.
Have you tried stepping through your code with the debugger? If grpBurger.visible Then else if ... ... else if ... ... End if So if the groupbox is visible then the elseif is skipped. Perhaps you want to nest a second if statement If groupbox.visible then if optionBurger.Checked then ... elseif ... ... end if End if 
CharlieMay you are a lifesaver! Doing a flow chart would have helped me spot that. Also, not indenting in VB is a bad idea (one I just learned). Thanks for the help and the timely reply, I appreciate it.
Just leave it here so that others may learn from it. 
That would be perfect actually! the code doesn't have to be super fancy, all I need is for it to work. How would you recommend for me to start the code using the TextChanged event?
okay so this code works lblPrice.Text = Str$(Val(lblPrice.Text) + 0.01) its for each character 1 cent is added which i am fine about, but when i backspace to delete characters, it keeps adding on to the price, how do I reverse the code? simply changing the + to a - doesnt work
Ive just tested this If e.KeyCode = Keys.Back = True Then lblPrice.Text = (Val(lblPrice.Text) + -0.01) End If If e.KeyCode = Keys.Back = False Then lblPrice.Text = Str$(Val(lblPrice.Text) + 0.01) End If End Sub It does what it suppose to but, if you keep clicking backspace it goes into the negatives, how do i prevent that?
That's my point, you can't use this method to reduce the count when text is deleted. There are multiple ways to delete spaces, but only one way to add them (assuming user doesn't copy &amp; paste). The way I'm suggesting is basically doing a count of all the spaces, not just adding to/subtracting from the total.
That's going to be cool. Be sure to post your finial product for us to see! I have no idea how to create a game... but if I had to do it, I would use velocities in X and Y to control the motion of the ball. Y will be subject to 9.81m/s^2 with a deduction to account for the slope of the field (do some trig and make it variable). X could have a small damping effect applied. Make X variable so you can change the amount of dampening (maybe zero dampening can be an ice map etc). If the ball goes out of bounds just inverse the X velocity. The position and velocities can be calculated after each tick, but be sure to make all your calculations run off the tick rate. That way if you choose 500milsec or 200milsec your units will still be applicable.
I made a project like this with just a screen full of bouncing balls that you have to avoid. The Ball Object had certain properties Private Structure Bl xp as single ' x position yp as single ' y position xv as Single ' x velocity (the speed it will be displaced each round) yv as Single ' y velocity radius as single ' the radius of the ball color as color End Structure Note: It's probably better to create a Ball class, but for quick and dirty explanation, I used a structure. Dim Ball(20) as Bl Every tick of the game has to update the position and speed of the ball. So your main game loop should call a few functions. Do While IsRunning For i = 0 to ubound(Ball) ' Update velocity with the gravity of the pinball board Ball(i).yv += BoardGravity ' BoardGravity should be adjusted to whatever gravity works for your game ' It will always slow a negative yv to a positive every round and send the ball falling again. ' update positions based on velocity Ball(i).xp += Ball(i).xv Ball(i).yp += Ball(i).yv ' check for collisions (see below) ' draw balls (use the fillElipse function with the ball radius and xp, yp position) Next i Loop [This](https://www.youtube.com/watch?v=XV2HFzbKOJI) this guy has a good explanation of game loops, if you need more information. I had a function that used the Pythagorean theorem to compute the distance in pixels between two objects. Private Function GetDistance(d1 as Integer, d2 as Integer) as Single ' receives index of two balls and returns the distance in pixels between them GetDistance = math.sqrt(math.abs(Ball(d1).x - Ball(d2).x) + math.abs(Ball(d1).y - Ball(d2).y)) End function The code to test for collisions was something like this: For i = 0 to ubound(Ball) For j = 0 to ubound(Ball) if i&lt;&gt;J then If GetDistance(i,j) &lt;= (Ball(i).radius + Ball(j).radius) Then DoCollision(i,j) End if Next j Next i The actual collision function was easy. The math for a collision basically reverses velocities of each object that collides. You just swap the velocities out. Private Sub DoCollision(i as integer, j as integer) Dim xv, yv as single ' Temp velocity xv = Ball(i).xv yv = Ball(i).yv Ball(i).xv = Ball(j).xv Ball(i).yv = Ball(j).yv Ball(j).xv = vx Ball(j).yv = yv End Sub So if ball one is going xv = 5 and ball two is going xv = 0, now ball one is stopped, and ball two is going xv = 5. It works at any speed in any direction. Walls and pinball obstacles are always stationary, so you have to reverse the velocity of the object that strikes it depending which wall it struck. If the ball hits the top or bottom wall, yv = yv * -1. If it hits the left or right wall, xv = xv * -1. For real-life physics, the mass of each ball also effects the amount of velocity exchanged. Obviously a tiny ball isn't going to smack a large ball full speed. But for a pinball simulator, it should work. For Obstacles on the pinball board, you'll have to get into trigonometry and physics to compute angles of reflection and such. That's way over my head. But this is the basics. You should be able to adapt these concepts to your game. Ps. I typed all this code from memory. Sorry if there are any errors. You should be able to figure out what I mean.
Check to see if your lblPrice.text value is zero and "cap" it at that value.
Unless your users cannot receive HTML email for some reason, use the .HTMLBody property instead of TextBody...and replace your new lines with a break ("&lt;br/&gt;") mail.HtmlBody = "Name: " &amp; firstname &amp; lastname &amp; "&lt;br /&gt;" &amp; "Company:" " &amp; company &amp; "&lt;br /&gt; Zip: " &amp; zip &amp; "&lt;br /&gt; Category: " &amp; &gt;category &amp; "&lt;br /&gt; E-Mail: " &amp; email &amp; "&lt;br /&gt; Phone: " &amp; phone &amp; "&lt;br /&gt;"
I went into my temp folder and deleted everything, I could find any traces elsewhere. I might try add/remove programs but I can't think of anywhere else it could be. EDIT: I fixed the issue by finding it in the program list, however I still don't understand why it acts as if it wants to re install if the file is moved rather than launch from what is installed already. 
Is this all of the code? Because its missing a few things. The For loop doesn't have an end and the first two dimensions aren't declared as strings. EDIT: then again my vb is rusty.
The next is actually hanging off of the bottom of the post (below the scroll bars). OP, To fix this, add an additional line with 4 spaces below the last line of code. Implicit declarations were added in VB 9 / .NET 3.5: As long as you set the value of the variable at declaration, you don't need to declare the variable type. So: Dim s = "something" VS knows that s is a string because you are initializing it as a string. Under the hood the compiler is actually declaring the variable as a string. 
There are a couple of ways to do this: If the solution is as simple as "the file name contains zservice" then you could just check the fileName variable before deciding to use it: For Each fileName As String In fileNames If fileName.contains("zservice") = true then Dim info As IO.FileInfo = My.Computer.FileSystem.GetFileInfo(fileName) '&lt;&lt; gets file info object tempFileNames.Append(info.Name).Replace(".txt", "") '&lt;&lt; Info.Name still has extension, so replace it tempFileNames.Append("||") '&lt;&lt; add to the StringBuilder end if Next If it's more complex than that, then you may have to actually search each directory manually:. Do a scan of the first directory without scanning into sub directories Then scan through each sub directory looking for directory names that match your filter. 
legend, don't know why I didn't think of this.
If it is hanging regularly then something is not right
I would use a Select-Case too, but I didn't want to further confuse OP. Bit condescending of me, I know, but... eh.
That's understandable. I know I learned If-Else first even though my teacher mentioned preferring Select-Cases.
All you need is one tooltip actually. You assign this tooltip to however many controls you like in your code, like so: ToolTip1.SetToolTip(Button1, "Whatever the tooltip should say when moused over on button 1 goes here") ToolTip1.SetToolTip(Button2, "Whatever the tooltip should say when moused over on button 2 goes here") And so on and so forth. This code usually goes into form_load, but it can really go anywhere, as long as it is loaded and ran before the tooltips need to appear. For more information you can check out: https://msdn.microsoft.com/en-us/library/system.windows.forms.tooltip.settooltip%28v=vs.110%29.aspx
To change the text on the button Button1.text= "Try # " &amp; counter ' counter is your index/count
As I've said before no, it does not. But in a 20k+ line xml file there's enough chances for something to go wrong. And writing a readme file with "In case shit goes wrong, please open task manager and end the process named Winword. Make sure it's the correct one not to close your other instances of word" is not a good solution.
No, but here's a link to some very great videos that will help you get started. [Visual-Basic-Fundamentals-for-Absolute-Beginners](http://channel9.msdn.com/Series/Visual-Basic-Fundamentals-for-Absolute-Beginners)
we do not support piracy here.
You can set this at design time as well. When you add a tooltip control to a form, any control that can use it will have a new property in the properties window allowing you to set the tooltip text for that control.
Why thank you for the advice, I hope to be an active member here so I will probably see you around 
Suggestion: to cut down on return time, start out at the number 3 (we already know 1 is not prime and 2 is), then step the loop up by 2 each iteration until it reaches the upper limit. To optimize even further, in your isPrime function you can divide out the numbers that you already checked against. Personally, here is how I would complete the task you are looking to do: Private Sub btnCalculate_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCalculate.Click Dim intStart, intEnd, intCount As Integer intStart = CInt(txtStart.Text) intEnd = CInt(txtEnd.Text) If intStart Mod 2 = 0 Then intStart += 1 If intStart &lt;= 2 Then lstResults.Items.Add(2) For intCount = intStart To intEnd Step 2 If IsPrime(intCount) Then lstResults.Items.Add(intCount) End If Next End Sub Public Function IsPrime(inc As Integer) As Boolean If inc = 1 Then Return False End If If inc = 2 Then Return True End If Dim index As Integer Dim limit As Integer If inc Mod 2 = 0 Then Return False index = 3 limit = inc Do While index &lt; limit If inc Mod index = 0 Then Return False End If limit = inc \ index index += 2 Loop Return True End Function I moved the main iteration into the IsPrime function, that way you only need to feed it 1 number and it will work. Makes it more reusable if you ever want to use the function for other assignments.
here's how it works. Always copy will at every run of the program copy the database to the bin\debug folder. What you add to it stays there until the next run of the program which repeats the process of copying over your database with the blank version. You need to set it to either never copy or copy if newer so that the data is not overwritten each time. Here, this should explain the reason for this setting: http://visualstudiomagazine.com/blogs/tool-tracker/2012/05/dealing-with-local-databases-or-why-your-updates-dont-stick.aspx 
Okay now I have the data table and data set on copy if newer. Still now function correctly. Is it possible I am publishing it incorrectly? If I get the setup the .application and the Application Files folder. However it doesn't let me installed because its already installed on my cpu in the project directory. So I go into the app files and run the .exe in there, close it, open it again and the data I entered into the data table (which appear in the data grid view) are gone. Sorry this is a lot of text but I'm lost and don't know how to fix my problem.
Post some of your code.
Why is this in the VB SUB?
My mistake. I'll keep these posts to C# and Java only.
Not going to debug your code right now but in general, I would split your 1 line of code into 5 or more so that you can see what is happening at each step of the way. Use variables (ints) to hold the initial cints, etc. and then you can debug and inspect. That will be very enlightening and you can always combine it all later.
Give ToString() a shot. https://msdn.microsoft.com/en-us/library/0c899ak8(v=vs.110).aspx
thanks for the input
https://msdn.microsoft.com/en-us/library/dd789093.aspx Get the text and apply a string function to it
Well, I don't mess a lot with local data as my databases are part of an SQLServer. but if you go into your application settings and look at the connection string that was created you should see that your database is being stored in |DataDirectory|. I would suggest googling "where is my |DataDirectory| located" and see if that helps you determine where the database is stored upon installation of the application. Even when I'm messing with an access database for testing purposes, I change my connectionstring to a hard-coded path but this won't be a solution for you since you're wanting to install a local database with your application.
no. that's not how processes and programs work. the only way to get compiled code to run inside your processes is if it's a library.
Absolutely not!
If you have to use text because well you have to. :) you can alternately use CHR(13) in a string Concatenation. That is the Carriage Return Line Feed (CRLF) this is also a VB Constant within the Microsoft.VisualBasic.Constant.VBCRLF or just insert VBCRLF in your string.
I think I understand what you are looking for. To allow you to sort it you have to make the reference independent of the listbox order. To do this I would do the following. Create a custom Class to store your information and override the ToString property to return the text Public Class myItem Public Ref As integer Public Text As String Protected Overrides Function ToString() As String Return Me.Text End Function End Class since you override the tostring method the listbox displays the text field. Dim item As New myItem item.Ref = 0 item.Text = "Item 1" listbox1.items.add(item) To get the reference value Dim item As myItem = CType(listbox1.SelectedItem, myItem) Debug.Write(item.Ref) so when you add your items to the listbox initially loop through your list and add them with the reference value. when the order is now changed the original reference value is still valid. Now the hard part the numeric sort. We cheat by converting it to a integer value so that when you sort it, it is number correctly. Private Shared Sub SortIntegerListBox(ByVal listBox As ListBox) Dim TempList As New List(Of myItem) For Each LI In listBox.Items dim item as new myItem item.ref = li.ref item.text = li.text TempList.Add(Integer.parse(li.ToString())) Next TempList.Sort() listBox.DataSource = TempList End Sub All you have to do now is add the function to the end of your items add code SortIntegerListBox(Me.ListBox1) **Bone**
As much as I appreciate your help, I have absolutely no idea what you just said
No, I will keep these posts to C# and Java. Apologies for any confusion.
How do you think the program should go? What have you tried so far? Start by writing out the steps in pseudo code, then do some googling if you need to.
Maybe I'm overcomplicating everything lol. We haven't gone over catch blocks in class yet. I tried the "If" statement method and it only works WITHOUT the arithmetic commands active/commented out :/ like it's literally either/or. 
I would go about it with an If Then statement. If fguess = answer Then LableWinnings = $1000 Else if sguess = answer LableWinnings = $500 This is just some pseudo code to give you an idea of the mechanics.
I'm using XElement to open the data file but I don't make any changes to it, only read and process information, outputting the result in to word file using Microsoft.Office.Interop.Word. It's a documentation generator of sorts.
Ooooooh, Thank you so much! I think that's my issue. If I'm understanding this correctly, the start index also reduces the length by that number? Also this completely solved my problem :) Changed the code to: #Corrected Code# ChnID = ChnID.Remove(ChnID.IndexOf(""""), ChnID.Length - ChnID.IndexOf(""""))
You could just disallow numbers in the textbox. Here is a routine you can add to your textboxes keypress event that will only allow characters your specify Private Sub TextBox1_KeyPress(sender As Object, e As KeyPressEventArgs) Handles TextBox1.KeyPress 'create a list of valid characters Dim valid As String = "abcdefghijklmnopqrstuvwxyz" 'if what was typed was not found in valid string If valid.IndexOf(e.KeyChar.ToString.ToLower) = -1 Then 'state that you are handling the keypress and do 'not pass it on to the control e.Handled = True End If End Sub 
we're here to help with that. The first block of code is your "blueprint", if you will, to your new type It defines what that object contains. Every time you create a new instance, you give your values you want to store to the appropriate properties. Then in this case, you override the ToString function to give a more User-Friendly string to display in your containers That template as it's written would most likely work as is. That second group of code is an example of creating a new instance (aka instantiating) of the object and giving the properties values. Once you've filled in the properties, you add that item to your listbox. Now you listbox in this example would display **Item 1** but also contained in that item is the value 0 which is stored in the **Ref** property. The third group is showing how you get to those values. You do that by taking the "Object" that is stored and casting it to your type so that it exposes the properties it contains. The sort code (last block of code) is a method used for sorting numeric values properly in a listbox. Because the listbox holds text values, these are sorted differently than numeric values. This code ensures that a numeric sort is occurring. This is why if you were to put the numbers 1 3 2 10 8 7 9 4 5 6 and set sorted=true you would get an undesirable result 1 10 2 3 4 5 6 7 8 9 
I could be wrong, but I understood the issue to be trying to exclude strings that contain numbers (abc123), and exclude numbers only (123). If this is true, integer.tryparse will only return true if the string is purely numeric, and will return false if it is alpha numeric. Of course, as you pointed out it won't compile, so that's the first issue. 
Ah shit, yeah temporary moment of stupidity on my part, you are correct. A regex is the best answer here. 
Well, to be honest, we don't actually know what the OP is looking for (it could be that I'm wrong here), and I completely missed the fact that the code wouldn't even compile (scanning through the bad formatting). Just shows you how we each look at code differently (especially when the problem is "it don't work" with a code dump). 
I suggest you try one or both of the methods suggested by /u/Bonejob and /u/CharlieMay If you only want to use techniques covered on your course so far you could go for something simple if like: if textbox1.text="" then [show your error message] exit sub end if This will only work if the textbox is empty though, non-numbers will still cause a crash.
Ah, alright then. Now I understand what the code does. But....where does it go?
Without seeing any code I can only offer that the class can either be a New Class added to your project, or you could just add it after your Form Class Public Class Form1 'Your Code for Form1 End Class Public Class YourType 'design of YourType properties and methods End Class As far as instantiating and adding to the list, that is done wherever you're currently defining what to add and adding it to the list. Of course you would now be instantiating the object filling its values and then adding that object to the list.
Ah, I see. With the way you're sorting it it won't be as straight forward as I thought. I would suggest studying Bonejob's method instead. If you want to get fancy, look into 2-dimensional arrays. It's essentially an array filled with arrays. When you store your items it would look something like this: Full array [["Two", "00"], ["One", "01"], ["Ten", "02"]]
Post this on /r/codementors also
Not sure on the PIA, but for report generators I've been extremely happy with DevExpress reporting. https://www.devexpress.com/Subscriptions/Reporting/ I've also used Active Reports, but it's more expensive for the very same feature set. http://www.gcactivereports.com/ And Telerik has a reporting package, but it wasn't nearly as mature as the other two last time I looked (several years ago). http://www.telerik.com/products/reporting.aspx All three should be able to export any report to Word, Excel, PDF, etc, without any third party dependance. 
I got it by declaring the function and some googling to get the dtg to convert to a day. Now I just need an If Then Else to put an error message. I got that part down easy enough.
The highlighted text is pulled directly from the event logs. I do not want the extra data, just the first line. http://imgur.com/YTiseEg Also, All the trimmed text, I would like to place in another variable for use elsewhere in the application. Can provide current sample code if needed.
Why it it bad? I mean I used VB for this 'cause I did not want to spend weeks looking up ways to do everything I need on C++ or java, I just wanted an intuitive high level language. And editing docx as an XML looks more like... a BDSM of sorts.
is this vb6 or vb.net With vb.Net you can use the String.Split method to split on the CRLF giving you an array of text split at that point Here's an example using ~ as a delimiter instead of vbCrLf dim myStr as string = "The quick brown fox~jumps over the Lazy dog" dim Results() as string = myStr.Split("~"c) 'Results(0) holds the left side 'Results(1) holds the right side
You use VB to do this, this is not C++ or java, matter of fact there a is a great set of tools from microsoft which will make it easy for you. https://msdn.microsoft.com/en-us/library/office/bb448854.aspx 
Math.Floor() ? casting to int can also truncate in some versions
well I would use Math.Truncate(number) :)
I don't see anything preventing negative numbers
I cant enter the negative sign "-" because it is not considered a number If Not IsNumeric(txtBox.Text) so it removes the negative sign txtBox.Text = txtBox.Text.Substring(0, txtBox.TextLength - 1)
i am not familiar with those concepts can your please explain in more detail. 
I'm on mobile, but cdbl(textbox.text) will attempt to convert a string to a numeric value with decimals. Cint does the same thing with whole numbers. It should make the isnumeric function work. Not sure, but it's my first thought. 
how do i incorporate the negative symbol "-" into an if statement ?
You could always do something mental like this: Public Sub Truncate_Test() MsgBox DecimalTruncate(1.4) MsgBox DecimalTruncate(3) MsgBox DecimalTruncate(3.8) End Sub Public Function DecimalTruncate(b As Double) As Integer Dim a As Integer Dim s As String s = CStr(b) If InStr(1, s, ".") &gt; 0 Then s = Left(s, InStr(1, s, ".") - 1) a = CInt(s) Else a = b End If DecimalTruncate = a End Function Or a "rounddown" function. Excel has this; MsgBox Application.WorksheetFunction.RoundDown(1.4, 0) 
I'll take a look.
Sounds interesting to me I'll try it
So basically I will declare a variable as an object if I don't know what's the value of the variable will be in advance?
Declare it as an object if you don't know the type of variable, not the value. If the value can be 1 (an integer) or "ABC" (a string), and both are valid values, then declare the variable as an object. There are better ways to do this though.
you open the project file?
Thank you!! :D
This is the project. http://khmermega.blogspot.com/2012/11/project-hospital-management-system-v-10.html What softwares do i need to be able to run this
You're never going to get code back out of it with a decompiler. At most you'll get the machine code and any hardcoded strings, but for what your friend needs it really isn't going to help. 
sorry, not gonna happen. even the best non-free decompilers only produce something that's vb-like and really only shows the general logic flow and program structure. even with this, you'd still need to write all the VB code again. the original source cannot be re-generated, not even close.
Getting one of those programs that undeletes files would be more likely.
This is a visual Studio 2010 project. Visual Studio Express 2010 will open it. If you do not have that Visual Studio 2013 opens it fine after the conversion. **&lt;rant&gt;**This application is complete crap. It uses Microsoft Access for its database, does not have a single class object, and looks like it has been written by a stack of amateurs. I would not use this as a template for anything.**&lt;/rant&gt;**
Get more info here [other post](http://www.reddit.com/r/visualbasic/comments/2y1azz/how_to_run_a_downloaded_vb_projects/)
When you do a Writeall does it pickup CRLF from the textbox? 
Binding datatables to the MS report system is a pain in the ass. The best advice I can give is to check out this post over at the Stack http://stackoverflow.com/questions/21680733/bind-datatable-to-rdlc-and-reportviewer I abandoned the MS reporting system due to having to use to many work arounds.
Not showing the report is usually becuase it needs some parameters or data it cant find. It has this habbit of stopping the whole report if it can't get a single piece of data. I had this bookmark as well that might be useful http://www.gotreportviewer.com/ 
Did you mean to direct that question to me? If so, then I guess it would get it from the textbox if indeed one was there. If you just type in text and then click a button I wouldn't think there would be a newline character appended which in the second iteration would just put the two text strings together in the file.
Way too harsh. You're still learning in school.
in string comparisons it's taking one character at a time. "3" is greater than "1" so it stops there. you need to do numeric comparisons. put the text box value in an integer, or use a casting function, and then compare to a number constant instead of a string constant.
If you are taking a programming course in school, and you don't know that you need to not only not delete your source code, but not keep it on only one storage medium, then I don't know what you are doing in a programming course. Data backup is computers 101, stuff that should be known well before anyone writes one line of code.
I would think you could use automation to do this. [Here is a link](http://support.microsoft.com/kb/317113) that should help you get started. Just want to add: Have you thought about creating rdlc reports in your application? Then using the ReportViewer, you can preview them and print them directly from the data in the database.
This seems odd, why would you want to use the access reports and not the reporting engine in VB.Net? It seems to me that it would be easier to generate and fill a report in the application than try to automate the report through access.
Thanks for the idea! I didn't know that such a thing is possible, as I'm new to VB development. Could you point me to some resources on the topic?
Redim is used when you are trying to resize an array. In your case, I believe all you want to do is store a value in the array so you just need to assign the value. So instead of Redim strArray(0) = intRandomNum All you need is strArray(0) = intRandomNum 
Use an array or list&lt;&gt;? Is this more complicated than it sounds on the surface? You should be able to read the input and parse it to an array or list then foreach(var x in y) that list...
Cool here are some links https://www.youtube.com/watch?v=ivvrfk3UEb8 https://msdn.microsoft.com/en-us/library/bb882691.aspx
Lowercase would hold the lowercase version. I think you just have your assignment backward. It should be lblOutput.Text = Lowercase Also, the String has a .ToLower() method. 
Thanks!! Also could you help me out with another problem? I'm trying to convert the length of the lyrics into integer form but I have an error saying "Value of type 'integer' cannot be converted to 'System.Windows.Forms.Label.'" Any solution? Thanks! Private Sub btnLength_Click(sender As Object, e As EventArgs) Handles btnLength.Click Dim TestString As String = strHAPPY Dim TestLen As Integer = Len(TestString) lblOutput = TestLen End Sub End Class [Sorry about the format, hopefully you can interpret it!]
To format your code, insert a blank line before the code and ensure that the code is indented 4 spaces Private Sub btnLength_Click(sender As Object, e As EventArgs) Handles btnLength.Click Dim TestString As String = strHAPPY Dim TestLen As Integer = Len(TestString) lblOutput = TestLen End Sub End Class Your issue is that you are missing something very important on the lblOutput line. Cannot convert a label to an integer lblOutput is a label. It has various properties. One of those properties can be used to display the text of the label. Try putting the value of TestLen inside that property. Strings also have a Length property that returns an integer. 
Good catch Charlie, I forgot that the string type has a length property. string.length() will return an int with the length of the string.
Just throwing some hints out there for the OP. I don't know why these methods are still being the teaching point for vb.net. I guess it still carries over from VB6's functions. Since apparently strHAPPY is at a wide enough scope that the OP doesn't need to pass it, then both of these exercises could be done with a single line of code each. lblOutPut.Text = strHAPPY.ToLower() and lblOutPut.Text = strHAPPY.Length.ToString() 
Assuming you mean how many times it appears in your string then I guess the question to this would be: Do you know what you're supposed to do inside that loop? What has your instructor specified that you can use? There are many ways of doing this. One would be with .IndexOf() and keeping a counter. Another really simple way is using .Split() but this wouldn't require any loop at all.
Thanks again! I actually went ahead and found the same video. Made some kickass reports. :)
Not sure on working code, but this should get you started. https://developers.google.com/google-apps/spreadsheets/ Remember that if you find C# code, there are converters that can help you convert it to VB. 
Trim, StrReverse, LCase, etc are all functions. They return a new string, but don't change the string that is passed in. Trim(strPal) Should be strPal = trim(strPal) And so on. 
Ah, thank you good sirs. I'm also discovering the joys of functions! 
It won't remove the item from the list because you are calling Return before it. &gt; The Return statement simultaneously assigns the return value and exits the function... https://msdn.microsoft.com/en-us/library/sect4ck6.aspx
You mean animate the ball rolling around the roulette table, or simply randomly generating a number within the range of roulette numbers? The latter is very easy and can be accomplished with: Dim RNG as New Random Dim x as Integer = RNG.Next(38) This will give you a random number from 0 to 37. 
Hey, didn't spot that... Thanks for the help! 
Thank you. What would be the advantage of putting the randomizer in the player class? I originally had one in the form class but decided to have it just be a function of the deck to pick a random card from itself. 
Thanks for that help! Would you mind giving me a last little advice on the problem? I've gotten the ball to roll and set it equal to red if odd, black if even or zero if zero. If choice = 1 And color = "red" Then betOdds = 1 winner = True cash += bet * betOdds If color = "black" Then winner = False cash -= bet * betOdds End If End If The problem is whenever I get the ball as "black" it doesn't subtract from cash at all, but if the ball is "red" then the problem goes off without a hitch.
Yes, if you have the combobox bound to the bindingsource you can set its DisplayMember property to the column you want displayed. This should fill the combobox. After that is done, you can set the AutoCompleteSource to ListItems and set the AutocompleteMode to Suggest or SuggestAppend depending on your preference. Then when you type in the combobox, it will suggest anything that starts with what is being typed. Either way you fill the combobox, AutoCompleteSource set to ListItems will do this.
Only a little bit... By that I mean not really. I'm still at a beginners level.
Essentially, the problem is that you're telling the computer to only check "If color = black" code if the color = red to begin with. This is what we call a "nested If" condition, because you're nesting an If condition inside another If condition, like a Russian doll. To solve this problem, you just need to do this: If choice = 1 And color = "red" Then betOdds = 1 winner = True cash += bet * betOdds Elseif color = "black" Then winner = False cash -= bet * betOdds End If This way, the computer goes, "well OK let me check if the colour is red... OK, it's red, so I'll execute the code that runs if the colour is red" _or_ "well OK let me check if the colour is red... nope, it's not, I'm gonna skip that segment of code. What **else** am I supposed to check for... hmm, OK let me check if the colour is black this time.... it is? OK let me execute the code for that then."
Thank you so much! Such little code, i feel silly
You might start with [these videos](https://msdn.microsoft.com/en-us/vstudio/bb466226.aspx#formsoverdata). It appears that they aren't available to stream any longer, but you can still download them. Follow along with them at your pace. She does a great job of explaining this form a data access.
as /u/chrwei said - its more of a db design issue. Have you thought about making another table to hold older entries? I do this in a few of my CRM programs that keep track of user edits. Create a second table, same exact definition as the first (Except for remove any ID specification from the new table). In my case, I store the current row every time before I'm about to update it with the new data, this way I have a running table of transactions. You could decide at any point to do this where you wanted to store old results (like every time a torch hits the correct amount of hours to be rebuilt). Its a pretty simple command to write this item as well. If your origional table is Table1 and your new table is Table2 insert into Table2 select * from Table1 where *condition* You could also do this with a separate table that might not be an exact replica, you will just have to write an insert statement to capture the things you need when the required condition is met.
It's for a uni project. tl;dr I want to interact with a non-touchscreen without a mouse
There are keyboard and mouse equivalents for most of the features, they've kept in mind that the applications need to be able to be navigated using keyboard and mouse as well. For instance, you can use mouse scrolling to replicate the pinching (to zoom). These are documented in the Help and Support which is in the charm at the right side as well as when you press F1. I can't remember the category but it wasn't hard to reach; however, they're quite trivial.
I'll try that. I was thinking maybe I was gonna have to write a table for each torch and bind each one to each input on every form.
Try adding an Event to your control: Public Event valuesUpdated(sender As Object, e As EventArgs) Then change you theyClickedOnX to: Public Sub theyClickedOnX(sender As Object, e As EventArgs) Handles LabelX.Click MsgBox("X was clicked on " &amp; FeatureName) RaiseEvent valuesUpdated(sender, New EventArgs) End Sub Then on your form add an event handler to use the same sub and use the sender value to differentiate what control did what. Let me know if this makes sense.
Spot on man.
Let me know if it works.m or if you need more help. 
lol, I had Me in there before I edited my post, it just didn't look right so I changed it...
This line is going to throw a fit with option strict on lblFICA2.Text = "$" &amp; intAnnualIncome * _cdecFICAtax You could probably get by with lblFICA2.Text = "$" &amp; (intAnnualIncome * _cdecFICAtax).ToString This should perform the calculation, convert the result to a string and append it onto the $ for the text property. Also, on a lot of stuff like this, if you click the little red x that pops up on an option strict error, there is usually a suggestion on fixing the issue and most times, it's pretty accurate. I'm sure in this case it would suggest lblFICA2.Text = "$" &amp; CStr(intAnnualIncome * _cdecFICAtax)
Yes, VB.NET has the same requirements that C# does. Even "Classic" VB (VB6) has a runtime that has to be installed. 
I also thought about Ifs, there are going to be 99 levels so I was thinking that would be more work than I would need to do. I'll try a Select Case and see what I can get.
Thanks, I suspected this was the case.
Thanks! I don't know why this wasn't an easy answer to find. I'll give it a try.
Yea, unfortunately VB6 was the last version of it's generation (COM based, pre .NET). From VB7 (VS 2002) it's all .NET and they aren't compatible without conversion. Once you convert from 6 to .NET, then you can use 2013, but the last version that could convert was 2008. 
All .NET languages uses same .NET framework as base run-time. In fact, if you build your program in Visual C++ (native C/C++, not .NET/CLR) then it also needs it's own runtime, which is usually few MB. The advantage with Visual C++ (native) is that the run-time can be supplied either as DLL or statically linked into EXE. Thus eliminating the need to distribute C++ run-time other than EXE itself*. However, Visual C++/CLR also uses same .NET framework. Delphi has an advantage that it's EXE are also similar to Visual C++ statically linked with libraries. Therefore, Delphi EXE also doesn't need any run-time other than EXE*. \* = other than drivers or third-party components which are not included (linked) into final EXE However, I don't understand that why their IT department doesn't allow .NET framework. Their IT department can install .NET framework themselves, directly from Microsoft thus making sure that they get original files. While you only supply your program.
I assume you mean an HTTP or NTLM login? you need to check the HTTP header and/or status after download.
Maybe you can also help me with the backspacing issue. The only time backspace causes it to crash is after number has been entered then it gets backspaced until the text box is empty. Backspace doesn't crash it before anything is entered and it won't crash while it is deleting things. I am guessing it crashes when it runs out of things to delete because it tries to convert whatever that is into an Integer but cannot? 
Yeah, this is a supplement to a ticket system and some articles that people will be recording will be behind a login for internal knowledge bases.
How does the senior citizen check work if they're getting multiple tickets? The design seems a little weird. Do as much as you can by googling. You'll retain the information a lot better that way than being given code. If you have any specific questions send me a message
I'm hoping no one just gives you the code. It is currently March and you're enrolled or elected to be in a programming class. You can't join an elective that far into the year so I'm calling bullshit on this story. With that said, this is a very simple program to make, even with barely knowing VB. On submit, calculate the totals for each type of ticket. Subtract the discount and then add tax. Change the label text to the total amount and maybe throw a dollar sign in there. It took you longer to write up this excuse than it would take to actually create this. Don't procrastinate on projects or your schoolwork. Sacrifice some time with friends or video games so you succeed in life.
Can you take a look at another class and see how it ends? 
I think I'll change my table say every month? I'll let my current table stay named to TorchTable, then every decided interval, take that table and rename it TorchTable Mar 15., TorchTable Apr 15 etc and store then in the same place as my current TorchTable, add a navigation system in my program to be able to select a past months table and do querys or reports for whatever I need. Thanks for the help and insight, it really helps to get a fresh insight and new ideas.
Please display these Options above your module: * Option Infer On * Option Explicit On * Option Strict On If you don't already, these may help you out. 
I created the project to see how easy it would be for OP. Even though I used an If statement for the radio button check, I could have set the discount variable when it was checked instead (setting discount to 0 when "No" was selected). It was less than 20 lines.
You seem to be having problems posting your code. Could you try editing your post, selecting all the code and replacing what you have. Then ensure all the code you just pasted is selected and click on the &lt;&gt; button in the editor window. This will format your code for you. Just copying and pasting that last bit of code I find it appears to be missing an If statement. That or you have an extra else and end if but I see no errors about the class. And I don't see anything that would cause the Namespace error
Here is the file https://www.dropbox.com/s/cxvsmwzod6dlu9n/BankTransactions.zip?dl=0
Here is the file guys. I hope you will be able to download it: https://www.dropbox.com/s/cxvsmwzod6dlu9n/BankTransactions.zip?dl=0
Were you able to download the file? That did fix the errors! Thank you. The last and final problem is that my groupbox still shows up before the user logs in. It is supposed to only show the log in and log out sections at first and then show the bottom half once the user logs in. Probably an error in the beginning of my code when I set that 
Fortunately the Select Case will cover levels 1-99, but it was a pain to type it all out. I definitely want to try to slim it down into a better functioning program. I can definitely give your suggestion a try and see what I can do. Thanks for your input. :)
I already have. This is my load: http://textuploader.com/mqzf
no problem! good luck
Well the computer name is easy. Dim computerName As String computerName = Environ$("computername") I find that replacing a token (something like {ComputerName}) using the search and replace system is the easiest. This code replace all instances of the token &lt;ComputerName&gt; with the local computer name. With ActiveDocument.Range.Find .Text = "&lt;ComputerName&gt;" .Replacement.Text = Environ$("computername") .Replacement.ClearFormatting .Replacement.Font.Italic = False .Forward = True .Wrap = wdFindContinue .Format = False .MatchCase = False .MatchWholeWord = False .MatchWildcards = False .MatchSoundsLike = False .MatchAllWordForms = False .Execute Replace:=wdReplaceAll End With you could also just list everything :) function ListEnvironVariables() Dim strEnviron As String Dim i As Long Dim output as String For i = 1 To 255 strEnviron = Environ(i) If LenB(strEnviron) = 0&amp; Then Exit For output = output &amp; strEnviron &amp; chr(13) Next ListEnvironVariables = output End function Dont bother doing this with a click event do it in the Document.New so that when they open the document it autofills it. You can get all sorts of great stuff from the **Environ** function. Here check this out. http://codevba.com/office/environ.htm#.VQNNLY7F98E Edit: The $ after the Environ function is shorthand for string. You dont need it, it's an old habit.
OK I just looked at the link you provided and you need a bit more information first. First thing. Go to your options in word and click on customize ribbon from there in the right listbox make sure Developer is checked. Now once you have that click on the developer button in the ribbon and you will find Visual Basic button in the upper left. CLick it and then you will see "ThisDocument" double click that to get the code window. Select "Document" in the first dropdown in the code window, and in the second select new. Insert above code. :) Edit your template. 
Ah you're right! That is what the problem was. Thank you so much for your help man
I would create a class called ImageWithInfo Create an Image property and an Info Property Create a List(Of ImageWithInfo) to store a completed item into Loop through your data, each time instantiating a new ImageWithInfo item and fill those properties Add the image to the List (Of T) You now have a container holding all your objects Now Loop through that container Create New Picturebox Set its size Set its Location Set its Image (From the current ImageWithInfoObject) Set its Tag to the current index of the List(Of T) Add A Click Handler Add Control To Parent Container (ie, Form, Panel, FlowLayoutPanel, etc) In your Click Event you can get the .Tag value and pass it to the List(Of T) to get the .Info property which is the text. Set this to the Text Property of your Textbox. EDIT: After a few sips of coffee, nevermind the list, as you can just store the info itself into the tag property and then set the textbox to the .Tag of the picturebox. This way, each picturebox has your image and you text stored. 
Do you mean using something like this? For Each elem As HtmlElement In Elems Dim NameStr As String = elem.GetAttribute("Class") Next And btw this is the html code for the button: &lt;a class="FollowButton followButtonFollow Button bbBaseButton" role="button" href="javascript:;" data- reactid=".0.0.1.0.0:0:2.0.1.1.1.0.0"&gt;Follow&lt;/a&gt;
You could use a textbox but you would want to ensure that a number is entered, whereas a numericupdown control will ensure that you are getting number from the user. You can even set the max and min value that the user is allowed to input very easily. As far as your string of dots. You can append chars and/or strings together using the ampersand &amp; Dim firstName as string = "Charlie" Dim secondName as string = "May" Dim fullName as string = firstname &amp; lastName when you're using a loop and want to append you can either use a stringbuilder and append the value with each iteration or you can use &amp;=. declare a string variable to hold your dots create a loop from 1 to the user input append each dot to the string you created above display the string of dots. 
Kk, did a textbox. What I type Public Class Form1 Private Sub btnDisplay_Click(sender As Object, e As EventArgs) Handles btnDisplay.Click Dim NumberOfDots As Integer = 0 If Integer.TryParse(txtNumber.Text, NumberOfDots) Then Dim sb As New System.Text.StringBuilder For x As Integer = 0 To NumberOfDots sb.Append(Chr(149)) Next TextBox1.Text = sb.ToString End If End Sub End Class Doesn't work, any idea?
 You can use the GetItemsCheckedState to determine if it's checked or not inside a loop For x as integer = 0 to CheckedListBox1.Items.Count-1 If CheckedListBox1.GetItemsCheckedState(x) = CheckedState.Checked Then 'Write your checked pupils Else 'Write your unchecked pupils Next
Public Class Form1 Private Sub btnCalculate_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCalculate.Click Dim intGrade As Integer Dim intA, intB, intC, intD, intF As Integer intA = 93 to 100 intGrade = txtGrade.Text If intGrade = intA Then lblGrade.Text = "A" End If End Sub so I guess my problem is the the "93 to 100"
well that looks like JSON to me, I would deseralize that using the built in JSON parser https://msdn.microsoft.com/en-us/library/bb412179(v=vs.110).aspx this will allow you to get out the information into a useable objects.
 If not isnullorempty(textbox1.text) then 'Do Stuff here for the textbox has something in it. If IsNumeric(textbox1.text) Then 'Even better it's a number do something else here. End If Else msgbox("The textbox must contain something!") End 
your problem is that the process is not "Chrome" the process is "chrome.exe". It returns an array of process entries, one for each instance of the chrome.exe. You would be better of getting the process id via Process.GetProcesses dim tProcess() as process = Process.GetProcesses() for each item in tProcess if item.mainwindowtitle.contains("youtube") then ' close it kill it beat it with a stick.... end if next of course this will kill a notepad.exe that has a saved TXT file with "Youtube" as the filename but thats ok they must be a subversive anyways then :) If you are doing this to stop people using youtube this is not the way. Any site that will proxy through will defeat this method. Proxfree broke this methodology a long time ago. If you want to block youtube think about redirecting all yourtube queries via your local dns server to 127.0.0.1 
Yes, intA which is declare as an integer can only hold a single integer value Let's for testing purposes say 97 intA = 97 Then to determine the letter grade associated with that number you would use a range in your if statement If intA &gt;= 93 And intA &lt;= 100 Then 'if inA is between 93 and 100 then execute this block ElseIf intA &gt;= 85 and intA &lt; 93 Then 'if 85 to 92 then execute this block of code '... Repeat with the various ranges End if 
Yes, the string comes from the Items property and can be accessed in this loop by passing the iterator as the index If CheckedListBox1.GetItemsCheckedState(x) = CheckedState.Checked Then lstPresent.Items.Add(CheckedListBox1.Items(x).ToString) Else lstAbsent.Items.Add(CheckedListBox1.Items(x).ToString) End If Notice that the same thing is used in both cases. This is because as you loop through you're looking at the same item and only check to see if it is checked or not. The if ...else is deciding where to put the item once that determination is made. You could just as easily use your code for the checked since you're just reading the checkeditems collection but that would take a loop through the checkeditems and a loop through the list to find unchecked. This method goes through the listbox once and places the items based on the checkedstate to the proper listbox.
You could use a grid like this... &lt;Grid Id="BorderGrid"&gt; &lt;Grid.ColumnDefinition Width="20"/&gt; &lt;Grid.ColumnDefinition Width="20*"/&gt; &lt;Grid.ColumnDefinition Width="20"/&gt; &lt;Grid.RowDefinition Height="20"/&gt;&lt;Grid.RowDefinition Height="20*"/&gt;&lt;Grid.RowDefinition Height="20"/&gt; &lt;Image Stretch="Uniform" Id="CenteredImage"/&gt; &lt;/Grid&gt;
The easiest way I can see with the way you're doing this is to add a condition to check and see if anything is selected in the combobox. If so, then revise you query to use a WHERE clause If combobox1.SelectedIndex &gt; -1 Then 'an item is selected so: 'loadqry should have a WHERE Clause to limit rows based on the text of the combobox Else 'loadqry = "SELECT * FROM tblUser" End If
If the JSON parser suggested by /u/Bonejob doesn't work (because the formatting is not 100% JSON or whatever), you can write your own deserializer. It's a lot more work, of course, but it can be an instructive experience. After breaking it down into an array of single-line strings, you can use a combination of IndexOf and SubString to start manipulating your strings and making sense of the data. For instance, you can have code that does something like this: 'convert your array of single-line strings to a queue Dim lines as Queue(of String) While lines.Peek Is Not Nothing Dim currentLine as String = lines.Dequeue If currentLine.ToLower.Contains("year") = True Then buildAlbum(currentLine) End While And the supporting functions: Public Function buildAlbum(currentLine as string) as Year Dim album as new album album.year = Convert.ToInt32(getString("year", currentLine)) While lines.Peek is Not Nothing Dim currentLine as String = lines.Dequeue If currentLine.ToLower.Contains("album") then album.name = album.getString("album", currentLine) .... End If End While End Function Public Function getString(field as string, line as string) as String If line.Contains(field) = False Then Return Nothing Dim index as Integer = line.indexof(":") Dim parsedString as string = line.substring(index, line.length -1) 'parsedString will now hold everything after the : 'you'll need to insert code to remove the " " and ; and what not End Function
datos is defined as a structure so you do not need to instantiate it with New.
the code is there, they just didn't add the "ServiceController" part to the stop method. you should also remove the bit about setting it disabled, not sure why they do that there except to show that you can, it's not needed.
I want to create a appointment task in my system how to do that?
I work with VB6 and MS Access on a nearly daily basis. If you can provide some more information, I can probably point you in the right direction.
 Dim loadqry As String = "SELECT * FROM tblUser" If ComboBox1.SelectedIndex &gt; -1 Then loadqry = "SELECT * FROM tblUser WHERE Class = '" &amp; ComboBox1.Text &amp; "'" PupilsList.Items.Clear() Dim loadcmd As New SqlClient.SqlCommand(loadqry, connectionobject) If connectionobject.State = ConnectionState.Closed Then connectionobject.Open() Dim ListRead As SqlClient.SqlDataReader = loadcmd.ExecuteReader While ListRead.Read = True With PupilsList.Items.Add(ListRead("FirstName")) .subitems.add(ListRead("Surname")) .subitems.add(ListRead("Email")) .subitems.add(ListRead("ContactNumber")) .subitems.add(ListRead("Class")) End With End While ListRead.Close() connectionobject.Close() loadcmd.Dispose() Else loadqry = "SELECT * FROM tblUser" PupilsList.Items.Clear() Dim loadcmd As New SqlClient.SqlCommand(loadqry, connectionobject) If connectionobject.State = ConnectionState.Closed Then connectionobject.Open() Dim ListRead As SqlClient.SqlDataReader = loadcmd.ExecuteReader While ListRead.Read = True With PupilsList.Items.Add(ListRead("FirstName")) .subitems.add(ListRead("Surname")) .subitems.add(ListRead("Email")) .subitems.add(ListRead("ContactNumber")) .subitems.add(ListRead("Class")) End With End While ListRead.Close() connectionobject.Close() loadcmd.Dispose()
Sorry, not off the top of my head, but I'm sure there are plenty of hits on the subject if you googled it. Might even be able to do it from SSMS if you installed that. 
Definitely a listview detailed with 5 columns. Probably a bad choice now looking back at it. Isn't there an easier way just to permanently store my sql database table data to say a .MDF file? The data stores there temporarily as my program runs, but what I want is for the database to constantly update with more and more attributes throughout usage. (Storing school pupils, more and more constantly added)
.I'm using vb6.0 and ms access as my database. basically, i have a patient and billing system, it's completed but the client need an appointment scheduler. I'm doing this for a real clinic.
I'm not sure what the problem is. You already have the formula for each of the items, so all you need is to get the components and put the formula in. For instance, where are the labour hours located in your form? Find that, plug it into a variable, and then multiply it by the per hour rate. Dim labourCost as Integer = labourHours * labourRate Const GSTrate as Double = 1.07 'or whatever your GST rate is Dim partsGST as Integer = Convert.ToInt32(partsCost * GSTrate) Dim totalCost as Integer = labourCost + partsCost + partsGST 
Thank you heaps that really helped me. I know i had the formula but not sure why but i get really confused when it comes to coding these particular things, i think i over think but yeah. Thank you heaps again appreciate kind sir
The listbox control has a collection called Items which you can retrieve a String from. Also, instead of using control inside your function, instead, pass this information in so that you're not locked down to a specific control and control name ie, Public Function GetHtml(qtyRemoved as Integer) As String Then you could call it with myResult = GetHtml(ListBox1.Items.count) Inside that function you would change this line: "&lt;h6&gt;" &amp; My.User.Name.ToString &amp; " has removed " &amp; Form2.ListBox1.Items.Count &amp; " addresses.&lt;/h6&gt;" &amp; _ to this: "&lt;h6&gt;" &amp; My.User.Name.ToString &amp; " has removed " &amp; qtyRemoved.ToString &amp; " addresses.&lt;/h6&gt;" &amp; _
E.g. Dim ffromAs Double, ctoAs Double ffrom= 76.23 REM For example cto= ffrom-30 cto= cto* 9 cto= cto/ 5 REM Converted value
So really like this: For i As Integer = 0 To ListBox1.Items.Count - 1 Dim deladd = ListBox1.Items(i) Next 
Well, yea, kind of... I'm not sure what deladd is but if it's a string then it will only contain the last item in the listbox as it's being overwritten each time. Giving us a description of what you're trying to do exactly would help in giving more relevant help. 
Well, upon the click of a button, my application will remove data from one list to this separate listbox. After the button is clicked, the application sends out a notification email of what was removed from the primary listbox. The secondary listbox acts as an editor of sorts in case the end user accidentally sends the wrong item to be deleted. After the email is sent, the secondary list is purged. Basically in this email, I need the loop to pull all the items from the secondary list.
Right now, I'm trying to figure out where to place the loop. Either in the GetHTML function or the Button3_Click. Here's the button_click: Private Sub Button3_Click(sender As System.Object, e As System.EventArgs) Handles Button3.Click Dim myStr As String = Form2.ListBox1.Items.Count MsgBox("You have removed " &amp; myStr &amp; " item(s).") SendEmail(sendingfrom, sendingto, "MACList Removal Notification", GetHTML, True) Form2.ListBox1.Items.Clear() 'Form2.TextBox1.Text = "" Run("mtekweb") Button3.Enabled = False End Sub
OK, I've not done a lot with html so I will show you a method and we can work back from there. Under the assumption that: Listbox1 contains addresses that will be removed So first your GetHTML function needs two arguments qtyRemoved as integer, itemsRemoved as string You should also place As String for the functions return type Then in your function, where you have the listbox and textbox change the listbox.count section to qtyRemoved and the textbox1 section to itemsRemoved Now let's set up to pass this information into the function Dim itmCount as Integer = Form2.ListBox1.Items.Count Dim ItemsRemoved as String = "" For Each itm as String in Form2.ListBox1.Items ItemsRemoved &amp;= itm &amp; Environment.Newline Next SendEmail(sendingfrom, sendingto, "MACList Removal Notification", GetHTML(itmCount, ItemsRemoved), True) ... clear your list and do the remaining code as you have So here is what we did. We took out the dependencies to actual controls by setting up arguments to be used inside the function We set an Integer to the count of the listbox We then built a string of multiple listbox items each separated by a line break. We then changed up the SendEmail method by adding the variables into the GetHTML method. 
That worked amazingly!! Here's some gold for your excellent explanation as well! That clicked perfectly in my head!
Glad to help. Thanks for the gold, not necessary, but appreciated :)
http://lmgtfy.com/?q=visual+basic+do+loop I'm probably going to sound like an ass and i apologize in advance, but a loop is one of the basics of programming so the amount of information you'll find on the subject is astronomical. If you check the very first link on google it tells you exactly how to build a Do loop. It looks to me like you just told yourself ''the fuck is a do loop, let me ask reddit!'' and copy pasted your homework without doing some research first. Please correct me if im wrong. Like /u/alexfergy already said, i suggest trying something out after some research and if you're still having trouble, please respond here with what you've tried and we will be happy to help you.
So you want to build an interface that performs some work and then inserts it into an existing form in AS400 correct? 
Okay new question, so now i have it set up so if the decimal button is press all the number are saved in a new variable, how do i do variable1.variable2?
 dim i as integer do while i &lt; 6 i = i + 1 MsgBox(....) loop or dim i as integer = 0 do i = i + 1 msgbox(....) until i = 5 https://msdn.microsoft.com/en-us/library/eked04a7.aspx
If you remove the Application.Restart line altogether, won't it just return to the form?
You don't want to put that code in that click event, because it won't ask the user if they just click the X button to close it. Use the forms closing event. Private Sub Form1_FormClosing(sender As Object, e As FormClosingEventArgs) Handles Me.FormClosing e.Cancel = MessageBox.Show("Are you sure you want to close?", "", MessageBoxButtons.YesNo, MessageBoxIcon.Question) = Windows.Forms.DialogResult.No End Sub Then in the click event of the toolbutton, just call me.close()
You don't need the Else If statement. Just If msgbox = yes, exit. If they choose no the msgbox goes away and the application continues. 
Try this: 'GET DIRECTORY Dim fso: set fso = CreateObject("Scripting.FileSystemObject") Dim CurrentDirectory : CurrentDirectory = fso.GetAbsolutePathName(".") Dim filePath : filePath = fso.BuildPath(CurrentDirectory, "test.mp3") Set fso = nothing 'CREATE MEDIA PLAYER INSTANCE Dim soundPlayer Set soundPlayer = CreateObject("WMPlayer.OCX") 'PLAY AUDIO soundPlayer.URL = filePath soundPlayer.controls.play While soundPlayer.playState &lt;&gt; 1 WScript.Sleep 100 Wend 'CLOSE FILE AND PLAYER soundPlayer.close Set soundPlayer = nothing
Ok, so I've been having a problem with me.close. I have it coded for an exit button, but after I click exit and go to task manager, the program is still running.
What does your program do? That is usually a sign that you aren't closing or finishing something else properly.
It's essentially a database writer that I'm making for work. I took a semester of vb in college about 5 years ago and apparently I didn't retain much (took me 15 mins to remember how to get a button to open another form) I'm off work in about an hour and will make a new post with all my files as I'm having some errors with file paths.
Basically, I'm just attempting to have what's entered into a textbox injected into the AS400 command line
Ah I see, thanks! 
 If isNumeric(input) = False Then 'do error code Else 'input is all numbers End If
This is what I got for each question. I don't know whether any of them are right. 1. Write a Visual Basic Do clause that processes the loop instructions as long as the value in the intTotal variable is greater than the number 0. Use the While keyword. Now rewrite the Do clause using the Until keyword. Dim intTotal As Integer = 100 Do While intTotal &gt; 0 ‘ loop instructions intTotal = intTotal - 1 Loop Dim intTotal As Integer = 100 Do Until intTotal &lt; 0 ‘ loop instructions intTotal = intTotal - 1 Loop 2. Write a Visual Basic Do clause that stops the loop when the value in the intQuantity variable is less than or equal to the value in the intOrdered variable. Use the Until keyword. Now rewrite the Do clause using the While keyword. Do Until intQuantity &lt;= intOrdered ‘ loop instructions Loop Do While intQuantity &gt;= intOrdered ‘loop instructions Loop 3. Write a Visual Basic Loop clause that processes the loop instructions as long as the value in the strAnswer variable is either Y or y. Use the While keyword. Now rewrite the Loop clause using the Until keyword. Do While strAnswer = “Y” or strAnswer = “y” ‘loop instructions Loop Do until Not strAnswer = “Y” or Not strAnswer = “y” ‘loop instructions Loop 
http://www.vb6.us/tutorials/vb-string-array-functions-split-join-filter Split on the '=' sign and take the right side value. Split("http://google.com/accountID=121212", "=")(1) ' or 2 depending on your base...
Thank ya
 Public Function josephus(n as Integer, k as Integer) As Integer if (n == 1) return 1 return ((josephus(n - 1, k) + k - 1) mod n + 1) End Function
Thanks
Thank you, this helps me out alot. How else would you go about writing it without if then else statements?
What would a line in ProjectsList.txt look like? Is it only one name per line? If so, can you use that name to identify which project file to load? For example, if your ProjectList.txt looked like this John Mary Doe Then you could have folders set up in the similar way. /projectList.txt /John/project.txt /Mary/project.txt /Doe/project.txt Then something like this could work? Private Sub ListBox1_SelectedIndexChanged() Handles streamer = IO.File.OpenText("/" &amp; ListBox1.SelectedItem &amp; "/Project.txt") //This will open then project file in the sub folder of the selected item. //Though, doing it this way, it might be better to just scan the folders instead of ProjectList.txt End Sub
Count() takes a boolean predicate as well, so you could replace Where() with it and be fine.
Nice! I always forget about that.
 Dim iPos as Integer Dim iPos2 as Integer Dim iBIPErrors as Integer Dim sHtml as string sHTML = "&lt;fill with your html input&gt;" iPos = instr(sHTML, "BIP Errors") ' Find First Occurence iPos = instr(iPos+1,sHTML, "&gt;") ' Find Next &gt; iPos = instr(iPos+1,sHTML,"&gt;") ' Find Next Occurrence &gt; iPos2 = instr(iPos+1,sHTML,"&lt;") ' Find Closing Bracket &lt; iBIPErrors = mid(sHTML, iPos+1, iPos2 - Ipos - 1) Msgbox iBIPErrors 
got it solved nvm
I see you resolved it, but I will throw out my answer anyway since I was writing it as you replied. I used regular expressions because it is a whole lot less messy than using substring calls to trim based on indexes and what not. While regular expressions can be weird to figure out, they are very powerful. Dim myText = "asdasdasdsadasdsadsadsfsfdssgdfhfdh fdhfdhfdhfdhfdhfdhfdhfdhfdhfdhfd hfdhfdhhfdhfdhfdhfdhfdhfdhdfhfd !dsgdgdfgdfgfdgdfgfdgdfgfdgdfhh* gfdgfdgfdgdfgfdgdfgdfgfdgfdgfd gdfgfdgdfgfdgfdgfd !asverveeebgegerre* sadsadsadasdsad" Dim myPattern As String = "(?&lt;=\!)(.*?)(?=\*)" Dim myRegex As New System.Text.RegularExpressions.Regex(myPattern) For Each myMatch As System.Text.RegularExpressions.Match In myRegex.Matches(myText) Debug.WriteLine(myMatch.Value) 'OUTPUTS 'dsgdgdfgdfgfdgdfgfdgdfgfdgdfhh 'asverveeebgegerre Next
I tend to stay away from IsNumeric because it is not super strict, and will let certain strings pass that you would not specifically want to allow. For example, the string "1E2" would pass IsNumeric, because it is technically representing an exponent. Also a string like "$12.34" would pass. I would use Decimal.TryParse which will explicitly tell you if the string can be directly converted to a decimal value. If Decimal.TryParse("12.34", Nothing) Then 'Is Decimal End If Or if you care about then using the decimal value if it is valid, you can pass in a decimal typed variable to receive the conversion. Dim myDecimal = 0D If Decimal.TryParse("12.34", myDecimal) Then 'Is Decimal, myDecimal equals 12.34 End If
These are deep calls in the VB6 library (used by the compiler, not by a programmer), so there's little documentation on them. It looks like ThunRTMain is simply the main entry point of the application (like Start in a C app). I'm going to guess on rtcKillFiles, but it's probably the underlying library call for the Kill command, which is used to delete a file from disk (Kill "filename"). 
That's where I was going: getElementById
Thanks!
The original internal project name for Visual Basic was 'BASIC Thunder', which is why a lot of internal class names will have 'thundr' in them. [This article](http://resources.infosecinstitute.com/anatomy-of-a-vb-virus/) might help you with the issue.
 Dim msi : Set msi = CreateObject("WindowsInstaller.Installer") On Error Resume Next Dim version : version = msi.ProductInfo("{ProductCode}", "VersionString") Dim installed : installed = ( Err.Number = 0 ) Check if it's installed before you try to uninstall.
I'll do this first then, I had plan for both csv and xlsx IO. Thank you. On another note, is there any flexibility on formatting on a csv file? On the output side I mean. Also, I'll only be able to export a single table to a single .csv file right? it cannot handle multiple tables on one file right?
I used the following script and worked like a charm Option Explicit Wscript.Echo "start" Dim oShell Set oShell = CreateObject("WScript.Shell") Sub RemoveProduct(productId) Dim UnInstallCmdStr, intExitcode UnInstallCmdStr = "msiexec /x " &amp; chr(34) &amp; productId &amp; chr(34) &amp; " /qn" intExitcode = oShell.Run(UnInstallCmdStr, 1, TRUE) If intExitcode &lt;&gt; 0 Then Wscript.Echo "Error: " &amp; intExitcode &amp; ". Maybe product " &amp; productId &amp; " don't exits" End If End Sub call RemoveProduct("{93A3C49B-124E-4E84-ADE9-A6AF12DA3FAE}") 'SAP BusinessObjects Enterprise XI 3.1 Client Tools FP 5.2 Update call RemoveProduct("{EBA54F32-DE7B-479B-A88D-2958E8C8EF98}") 'SAP BusinessObjects Enterprise XI 3.1 Client Tools SP5 Update call RemoveProduct("{675E9569-0547-464F-A46F-74A9EC032FA8}") 'SAP BusinessO1jects Enterprise XI 3.1 Client Tools FP 3.1 call RemoveProduct("{B5A44CFD-AB30-48E9-A5C7-5CAA478BEB2C}") 'SAP BusinessObjects Enterprise XI 3.1 Client Tools SP3 Update call RemoveProduct("{DAEF4F05-C369-4910-87C8-819C5B3D43E2}") 'BusinessObjects Enterprise XI 3.1 Client Tools 'Wscript.Echo "end" Set oShell = Nothing
You can get a free copy of VS 2013 Community. It's basically the old Professional SKU. 
Office 2010 addins from VS2010 will work no problem in Office 2013. You can do this to fix your debugging problem: Close Visual Studio and open up the .vbproj file of your addin inside a text editor like notepad++ (or notepad, but if you don't have notepad++ go get it yesterday). Probably near the bottom of the vbproj xml you will find a &lt;ProjectExtensions&gt; node. In the &lt;ProjectProperties&gt; node of that, change 2 things. 1) Change OfficeVersion value to 15.0 2) Change DebugInfoExeName path to be 15 instead of 14 as well Reopen your sln in visual studio and hit debug and it should work.
That's awesome. Thank you very much.
VB6 runtime ships in the Windows 10 preview. As far as an integrated VB6 IDE, that will simply never happen, and I really can't blame Microsoft for that. Not only are the language features and options lacking versus what VB.NET offers, but the IDE that is Visual Studio is so much better than VB6 that even thinking about opening the VB6 IDE makes me cringe now. Don't get me wrong, at the time, it was the best thing out there as far as an IDE goes, but it is just so far behind now. They are giving away the .NET IDE for free, they have open sourced most of the .NET framework, the framework ships with Windows, so there are really no compelling reasons to continue VB6 development. I know there is a lot of code written in it, but most of that stuff can port easily to .NET.
Does it work correctly if your remove the IsNumeric(userInput) from your If logic?
So, I added: dim userInput as string = InputBox("enter max value","input box","") and Dim maxValue as integer to the load method. All other code elements stayed the same. This allowed me to either restart the program if a non-number was entered and access Form1 when a number was entered. 
I'm having trouble with the elseIf statement...it keeps saying it must be preceded by a matching elseif and endif. Do you know why?
elseif should be part of your original if code, the end if needs to be all the way at the end. if a &gt; b then msgbox("a wins") elseif a &lt; b then msgbox("b wins") else msgbox("no one wins") end if
Nvm I got it to work but how do I make it so when the user increments to the max value a message box shows. That part doesn't work anymore 
There is no need for application.restart, or any of that extra code. You can accomplish what you claimed you need with just a few lines: Dim userInput As String = "" Dim userIntegerValue = 0 Do userInput = InputBox("Enter max value", "Input Box", "") If Not Integer.TryParse(userInput, userIntegerValue) Then MessageBox.Show("Only numeric values") Else Exit Do End If Loop MessageBox.Show(userIntegerValue.ToString, "Max Value") Also don't use IsNumeric() it is a bad function that can give you unexpected results.
Well, each time you click Next you are reading the entire file. I'd verify that the data you are seeing is in fact the first line, and not the last line. Also, is the data one line per record? Or multiple lines?
Pretty much. I'm thinking I'm going to have to hard code paths, and I really don't like to do that.
You're describing a select...case statement. More info [here](http://www.vbtutor.net/vb6/lesson8.html).
Microsoft had failed to convince many people to switch from VB6 to .NET, that's why it's used to this day and it needs support. Also, we don't ask to make IDE to compete with .NET, we want it to be supported like runtime is. More explanation can be found [here](http://vbforums.com/showthread.php?p=4856949#post4856949). 
I would use an if here rather than a case.
Thanks man! that's exactly what I was looking for
You know how upgrade migration tool is inadequate, because VB.NET is so different from VB6 and it can't really do the job, so that only depends on your knowledge and patience and complexity of the project you have to migrate. Hat off to you if you really did the migration within two weeks and if that's truly complex project that you are talking about. Speaking about the language, the VS magazine said indirectly that real VB was killed, [here](http://visualstudiomagazine.com/articles/2014/12/16/visual-basic-14-preview.aspx): &gt; The last true version of Visual Basic was 6.0, released in 1998, with support for that version lasting until 2005. I think that their logical next step will be to merge VB.NET with C#, i.e. to make them to look more like each other, and eventually in the near future all will be completely replaced by C#.
I know Lucian Wischik (the VB.NET technical lead), so if you have any specific questions for him regarding the future of VB, let me know and I will get an answer for you, or if he has time he would probably be willing to answer some questions here himself. Please also be aware, Visual Studio magazine is not written or published by Microsoft. The VS team did not make any such statement that VB6 was the last real version of VB. The writer of that article is saying that, and I think more would disagree than agree with him. Certainly the guys on the dev team working on the next version of VB would disagree. The writer also laments: *The .NET portion was effectively dropped as the company started to rid its products of the confusing addendum in favor of cleaner naming of its products. Visual Basic .NET has since been known as Visual Basic 12.* Last time I was at Redmond, I heard about the new features in VB 14, but I didn't hear anything about casing changes as far as syntax. Can you elaborate on that or post a link talking about whatever that is? [This link](http://blogs.msdn.com/b/vbteam/archive/2014/12/09/new-language-features-in-visual-basic-14.aspx) is a list of what is being included in the next version of VB.
Case Is &lt; 0 is wrong, if you're looking for answers between 1 and 10. User could enter a 0 and it wouldn't reject it. I would have just went with If ug &gt;= 1 and ug &lt;=10 then If ug = cg then MessageBox.Show("Correct Guess") Else MessageBox.Show("Incorrect. Try again.") End If Else Messagebox.Show("Value is not between 1 - 10. Please Try again.") End If
I saw some discussion on that but can't find it right now, so I've edited my post above. Maybe it's a wrong statement because I have surely misinterpreted something, but the point is that they are focused more on the C# rather than the VB.NET because it's far more popular language. I hope that VB.NET will not suffer from the same destiny like VB6, because even beginners began to ignore it and choose C#. VB was always meant to be the language for easy learning, and I think that VB.NET has been lost it's purpose in complexity of the framework and the C# will always be more suitable option, so that's why it's chosen so often. If you can bring here Lucian Wischik, then why not. I have already expressed my opinion about this and I would like to hear the judgement of others, especially from the people that are involved in development of these languages. Too bad that Mr. Alan Cooper isn't in the team. P.S. I have also heard some speculations that VB.NET included in VS 2015 will be the last, so I want to know if that is true or not.
A simple Replace() function would also work.
 lstCosts.Items.Count - 2 Doesn't that make you read the second last one? Does it work with this? lstCosts.Items.Count - 1 That way, it should go to the very end. Unless you of course are trying to only read the second last one for any numbers of reasons.
I think it would be beneficial for you to watch a tutorial or read something about the IDE that is VS. If it was as easy to "learn to code" as asking reddit, we'd all be pros. Hopefully I haven't misinterpreted your question. 
Cool, thanks for the heads up, it's a kind of "come and take what you need" sort of space...
Kind of... Code Repositories / version control are designed as a way to share code between members of a team, and as a way to have backups of each version of a code file as it changes (for instance I generally check all of my code in daily, even when working by myself). You generally wouldn't manually go to the repository, but would use tools to check code in and out. From what I can tell, VSO has additional features that provide project metrics, etc. 
Should also add that the txt file has the name of the justice, president who nominated, year, state and zip code
come on, put a little effort into it. sometimes a quick google search is your bestest best friend. i dont usually do this, but i literally goggled "add days to datetime vb" and the first result was https://msdn.microsoft.com/en-us/library/system.datetime.adddays%28v=vs.110%29.aspx which gave me this Class Class1 Public Shared Sub Main() Dim today As System.DateTime Dim answer As System.DateTime today = System.DateTime.Now answer = today.AddDays(36) Console.WriteLine("Today: {0:dddd}", today) Console.WriteLine("36 days from today: {0:dddd}", answer) End Sub End Class ' The example displays output like the following: ' Today: Wednesday ' 36 days from today: Thursday 
File.Create("C:\my files\justices.txt").Dispose() Creates the file, then closes it. Then just use whatever method you use to write to the file.
My fu is weak as well. Thanks for this!
Or, to check if it exist first before writing: Dim filepath as String = ""C:\my files\justices.txt" If Not System.IO.File.Exists(filepath) Then System.IO.File.Create(filepath).Dispose() End If
I wrote a big, long entry on how to do this but decided when I got home to write a small program to show you. Below is the source for a class, Server form and Client form. It's a pretty simple way to do things, what it is is - you give each connecting client a special ID number that is randomly generated each time they connect to the server. When they connect, the server will store them into a Hashtable (database) and when they want to send something to a certain client, they can send it via their hashtable entry. In this example I used buttons for the actions (like server listen, client connect, etc.) but they can be called in form load or whatnot and done automatically. What this does is - the server has a multiline textbox (textbox1), a regular textbox (textbox2) and two buttons. One is to listen, the other is to open the client (form 2 is the client, but it's not needed if you build them separate, it was just for me to test easier). The client has a label(label1), a connect button (button1) and verify button (button2). They are self explanatory. When you connect to the server with the client, the server will generate a name for the client and store it. When the client dcs, it will delete the entry. When a client sends a message (for example to verify) it will be stored in textbox2 on the server (I just used that so I could see it worked) and the server will take the information in the textbox, use it as the clients name and send a message right back to them, either verifying the cdkey or not. It's not the most refined code and isn't just drag and drop format, but I hope that it helps you understand a way of handling TCP information a little better, I tried to explain it best I could. Remember, there are always more than one way to do things! [Class](http://pastebin.com/xRfCuR30) [Server](http://pastebin.com/4Vy1HxkF) [Client](http://pastebin.com/eNmqNxt0) -Verification, Hitman?
You just need a Case Else statement (and to change "&lt; 0" to "&lt; 1"). Select Case ug Case Is = cg UGReply = "Correct Guess!" MessageBox.Show(UGReply) Case Is &gt; 10 UGReply = "Value is not between 1 -­ 10. Pleast try again" MessageBox.Show(UGReply) Case Is &lt; 1 UGReply = "Value is not between 1 - 10. Please try again." MessageBox.Show(UGReply) Case Else UGReply = "Incorrect Guess." MessageBox.Show(UGReply) End Select
You can't check for equality like that because you are saying "If picBox equals imgUp". Well a picturebox is a picturebox, and imgUp is an image. They will never be equal. You want to check if the image displayed in the picturebox is equal to a given image. You should do If picBox.Image is imgUp then 'Change Pic elseif picBox.Image is imgRight then 'Change Pic 'etc...
I added an edit at the bottom.
Well first, remember that everything is processed in order from top to bottom. Say you have a button that fills a text box and then changes a label to what's in the text box : If you write it like this sub button1(click) textbox1.text = "What you want the label to be" label1 = textbox1.text end sub That will work! But sub button1(click) label1.text = textbox1.text textbox1.text = "the text you want as the label" end sub That will NOT work, because the label is changed before there is text in the textbox. So if the reply is accessed before the textbox is filled with the client name, the reply will use blank data and throw it off. I think that's what you mean for that. Also, I had an issue : I tried sending CON and CDK, two separate lines of data with one button from the client, and for some reason the server only read and processed the first one. Try making a timer with the separate data you want to send? I honestly threw the code together after being up way too long so I didn't work all the bugs out, just wanted to show you how I like to handle TCP connections, it leaves alot of room this way. I have a D&amp;D game starting now, though, but I will look into it more in a bit. (Won't be too long, our DM likes to kill me off for some reason)
Fixed everything, and all works now. Thanks a lot for the help and time, kind sir. Much appreciated. 
The binding you setup binds the control to the bindingsource you selected there, not directly to a dataset. You need to actually populate the binding source with data from your dataset so that it has something to put in the combobox.
Ah could this also be the problem why values inserted or deleted are not saving? I'll play around a bit and come back.
I am pretty sure AppActivate takes either the title of the main window or the process ID, but not the exe name as the required parameter. Title would probably be hard because Outlook usually changes the main window title depending on what you are doing.
It is random. Assigned when a given process starts. Each process has its own ID. If you were to open 2 instances of Outlook, each would have their own ID. You can see a process ID by looking in task manager. I know that doesn't solve your problem, but it at least tells you why your script doesn't work. I am a .NET developer, so I don't know what your options are in VBS, but if I think of anything I will let you know.
Thanks for the info! I'll find a workaround. Edit: Turns out I was calling the wrong process name! It works as intended now.
I have a few follow up questions. I have seen a few code snippets where the coder sets strComputer as "." but I never understood why this is done? Also, at the end of your script, why do you set wshShell and objWMIService to "nothing"? I've seen both of these before as well but I didn't understand why this is done. Granted, I'm not a scripter by trade, I'm just looking to automate some of my work in IT. 
Some code would help, but I'm guessing it's based on padding or margins of the controls. 
Yes I would expect it would.
I will assume you are taking a class and this is an assignment? Has your class covered break points and stepping through code? You should set a break point on the start of your btnCalculate_Click routine, and step through each line to see which line throws the exception that leads to your message box displaying. If your teacher didn't teach you this yet, then you should ask them why not, since it is probably more important than anything else they have already taught you. I see way too many people starting out that have no idea how to walk through their running code to see it working.
Here is a [real basic overview](http://www.homeandlearn.co.uk/NET/nets5p6.html) that should help give you an idea how it all works. Slightly older than 2012, but everything works the same in 2012. 
Is this for an application that you're installing remotely? I've not had many issues with ports I needed being blocked on machines, but I use an MSI to install these apps, and add an exception to Windows Firewall during installation. If you aren't running an installer, you could potentially open the firewall with your app, but you'll likely need to be running under admin to do it (so best done with and installer): https://msdn.microsoft.com/en-us/library/windows/desktop/aa364695%28v=vs.85%29.aspx 
I haven't done VBA in years, and don't have developer tools installed in Office, but there are to possibilities that jump out at me. Range("myRange")..... &lt; myRange is in quotes, so it's a String variable. You are also putting myRange in quotes in the second example, so it's not using the variable: dimMyRange as String myRange = inputbox .... Range(myRange).Entire...... &lt; no quotes Give those two changes a try, but I'd bet that they'll work. 
no need to help i fixed it &gt; For Each lvi As ListViewItem In ListView1.Items &gt; SendKeys.Send(lvi.SubItems.Item(1).Text) &gt; If lvi.SubItems.Item(2).Text = ("True") Then &gt; SendKeys.Send("{Enter}") &gt; End If &gt; If lvi.SubItems.Item(3).Text = ("F1") Then &gt; SendKeys.Send("{F1}") &gt; ElseIf lvi.SubItems.Item(3).Text = ("F2") Then &gt; SendKeys.Send("{F2}") &gt; ElseIf lvi.SubItems.Item(3).Text = ("F3") Then &gt; SendKeys.Send("{F3}") &gt; ElseIf lvi.SubItems.Item(3).Text = ("F4") Then &gt; SendKeys.Send("{F4}") &gt; ElseIf lvi.SubItems.Item(3).Text = ("F5") Then &gt; SendKeys.Send("{F5}") &gt; ElseIf lvi.SubItems.Item(3).Text = ("F6") Then &gt; SendKeys.Send("{F6}") &gt; ElseIf lvi.SubItems.Item(3).Text = ("F7") Then &gt; SendKeys.Send("{F7}") &gt; ElseIf lvi.SubItems.Item(3).Text = ("F8") Then &gt; SendKeys.Send("{F8}") &gt; ElseIf lvi.SubItems.Item(3).Text = ("F9") Then &gt; SendKeys.Send("{F9}") &gt; ElseIf lvi.SubItems.Item(3).Text = ("F10") Then &gt; SendKeys.Send("{F10}") &gt; ElseIf lvi.SubItems.Item(3).Text = ("F11") Then &gt; SendKeys.Send("{F11}") &gt; ElseIf lvi.SubItems.Item(3).Text = ("F12") Then &gt; SendKeys.Send("{F12}") &gt; End If &gt; System.Threading.Thread.Sleep(lvi.SubItems.Item(4).Text * 1000) &gt; Next
Method 'Range' of object '_Global' failed.. :( But I do appreciate the help! So if I understand correctly, I need to change the variable data type to String as you have, but remove the quotations?
If you create a variable (of any type), you use the variable name in place of the quoted string, so leave the quotes out. Let me see if I have VBA installed on another machine .... 
Ok, this should work: Dim myRange As Range Set myRange = Application.InputBox(prompt:="Enter a Range you want deleted", Type:=8) myRange.EntireColumn.Delete Since you are creating a variable of Range (Dim myRange As Range) you can just call the .EntireColumn.Delete function on the range directly. 
posted a solution above ... came straight from an Excel Macro. 
Definitely show us the code that creates the file handle, and reads the file. 
Assuming you are reading in a comma delineated file: ------- 'Declare variables for each column Dim a, b, c, d, e, f, g, h Open Filename For Input as #1 Do while not EOF (1) Input #1, a, b, c, d, e, f, g, h 'Do calculations on these variables, load into list box, etc Loop Close #1 -------- If any of the columns contain commas in their actual data, as opposed to just being a delineator between columns, then this won't work properly, and you'll want to look into doing a Line Input statement instead. Hope that helps. Post your code if you need any more help. Edit: Formatting
You are trying to assign a value to a function. Len takes a string, and spits out an integer, you are trying to feed it an integer.
I still don't understand how to solve it. I know that Len counts the number of characters in a string, but i don't know anything else than that.
You may have to come up with some more specific questions. These instructions seem pretty straight forward to me, so I'm not sure where we could improve.
I'm just not sure how I'm supposed to get the 0 or 1 value from IsPrime and use them. I'm honestly so lost I don't even know where to start.
You declared i as an integer, and letter as a string. In your For loop, you tried to assign i = letter which is, basically, trying to assign a string to an integer. That's why your compiler is telling you that it can't convert a string into an integer. Remember, the variable on the left is the one receiving the value: the variable on the right is the value. You also shouldn't mess with the value of the counting variable (in your case, i) in a For loop. I think what you're trying to do is this: letter = sentence(i)
Just use If letter = " " To check if it's a space. Also, in the future, put four spaces in front of your code to make it readable.
so you basically started a new solution and 'ran into a wall'?
The best way is to build an installer, and have the installer install the fonts for you. If that's not an option, then there are a couple of other options: Use the font directly from the resource by loading it in memory (this is very ugly IMO, and requires a huge amount of really ugly code): http://stackoverflow.com/questions/2928383/use-resource-font-directly-in-vb-net-c Install the font in Windows from your own code. You could check for the font on first run, and then install it, but you may need to be running as admin to do it. http://stackoverflow.com/questions/4725950/how-do-i-install-a-font-on-a-users-machine-in-vb-net-so-applications-like-word
It appears you have an error here. MessageBox.Show(start, finish, "The numbers with in range") Not sure what you're trying to do here but for that line to work, you need to at least format it with concatenation MessageBox.Show(start &amp; ", " &amp; finish, "The numbers with in range") This would display a messagebox with the min and max of the range separated by a comma with a title "The numbers with in range" If however you're looking to display the number from min to max, then a loop will be involved with the iterator being displayed. Putting this into a sub and passing the Step value would be beneficial on the second task where you would need to Step 2 to only get every other number. (but that is only based on if the user started with an odd number to begin with) To bypass this, you could perform a simple mod calculation to see if the number is evenly divisible by 2. If so, it's even otherwise it's odd 
Some more vb.net tutorials [here](http://www.youtube.com/user/VBToolbox).
 Private Sub btnSearch_Click(sender As Object, e As EventArgs) Handles btnSearch.Click Dim r As String txtEnterWord.Text = "" txtWTS.Text = "" r = txtEnterWord.Text.IndexOf(txtWTS.Text) If r &gt; 0 Then MsgBox("Found word, " &amp; r &amp; " characters into the search string.") Else MsgBox("Sorry, could not find the search text") End If There, that's easier to read. Why are you clearing the textboxes prior to using the IndexOf? You are trying to find the Index of an empty string. Also, IndexOf returns an Integer value but you are declaring r as String. This will work implicitly but you should get into the habit of declaring types for what they will hold. Setting Option Strict On would throw a couple of errors at you for this.
 I want to find the index of whatever the user types in but I'm confused on what to do. Should I use the like "[A-Z] [a-z]" or something like that
Have you tried removing the two lines where you clear the input from the user prior to trying to find the index? 
i tried matching a word and it says couldn't find word again. 
So what result are you now getting? If it's not working, post your updated code and also the test inputs you are supplying exactly as you are entering them. Remember "The" &lt;&gt; "the" so if case sensitivity is an issue, you will need to perform a couple more methods against the texts being compared.
 This worked and it got me a perfect score: Option Strict On Option Explicit On Public Class Form1 Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn1.Click Dim sentence As String Dim letter As String Dim withoutSpaces As String Dim reverse As String Dim isPalindrome As Boolean = False sentence = txtInput.Text.ToUpper For i As Integer = 0 To sentence.Length - 1 letter = sentence.Substring(i, 1) If Asc(letter) &gt; 64 And Asc(letter) &lt; 96 Then withoutSpaces &amp;= letter End If Next letter = "" For i As Integer = withoutSpaces.Length - 1 To 0 Step -1 letter = withoutSpaces.Substring(i, 1) reverse &amp;= letter Next Do While Not isPalindrome If withoutSpaces = reverse Then lstOutput.Items.Add("This sentence is a palindrome.") isPalindrome = True Else lstOutput.Items.Add("This sentence is not a palindrome.") End If Loop End Sub End Class 
OK, so the first position of a string is 0 right. Because indexes are 0 based. So therefore finding the word in the first position of the string would be 0 If indexOf cannot find an index, it returns -1 so it would be best to check for &gt; -1. You could just as easily use &gt;= 0 but the gist of it is, you're checking for an index of &gt; 0 when in this case the index is 0 If you were to type "now is the time" in your textbox and use "the" in your WTS textbox it would find a result at position 7 
Hello, Thank you so much appreciate it, i guess when i look at something for long enough it becomes easy to oversight things. I'm starting the other functions now, i think it should be okay
I think i somewhat understand, sorry if this was a stupid question
Add 4 spaces to beginning of each line to format as code For intcounter = 0 To EnterWords.Length - 1 WordToSearch = EnterWords.Substring(intcounter, 1) If EnterWords.Chars(intcounter) Like "[a-zA-Z0-9]" Then Exit For End If Next If intcounter &lt;&gt; EnterWords.Length Then MessageBox.Show("Every word should have at least one alpha or numeric character") End If
IntCounter will never be enterwords.length, since it's 0 based. It should be length -1 just like the for next...
My code still won't work for some reason? Any suggestions 
You are exiting as soon as you find a match, so not checking the entire string. You have to check every character, and not exit the For Loop. Since you only need to find one match, I'd change it like: Dim found As Boolean = False '&lt;&lt; set it to false by default For intcounter = 0 To EnterWords.Length - 1 WordToSearch = EnterWords.Substring(intcounter, 1) If EnterWords.Chars(intcounter) Like "[a-zA-Z0-9]" Then found = True '&lt;&lt; we found one Exit For '&lt;&lt; exit if you find a match, since there's no reason to keep searching End If Next If found = False Then MessageBox.Show("Every word should have at least one alpha or numeric character") End If 
feel free to borrow from my project, which collates data from content controls in varous documents and puts it into another word document. i used tag fields to identify the control. Sub CreateList() 'requires reference to microsoft scripting runtime 'this doc should sit in the current folder. this code loops through the folders representing &lt;things&gt; and lifts the text in fields (contentcontrols) from each Client record sheet word document, _ creating a table of summary information in this document. The word document should sit only _ one folder down from the current tribunals folder and it should be called "Client record Sheet.doc" _ or ".docx" 'declare MicrosoftScriptingRuntime object variables Dim fso As New FileSystemObject, fldrCurrent As Folder, fldr As Folder, fl As File 'declare Word object variables Dim appWord As Word.Application, docWord As Word.Document, col As Column, obcCC As ContentControl 'declare variables Dim x As Integer Set appWord = CreateObject("Word.Application") 'set reference to the folder in which this document sits Set fldrCurrent = fso.GetFolder(ThisDocument.Path) For Each fldr In fldrCurrent.SubFolders For Each fl In fldr.Files x = InStr(fl.Name, ".") If Left(fl.Name, x - 1) = "Client Record Sheet" Then Set docWord = appWord.Documents.Open(fldr.Path &amp; "\" &amp; fl.Name, , -1) 'add a row to the table With ThisDocument.Tables(1) .Rows.Add For Each obcCC In docWord.ContentControls Debug.Print obcCC.Tag If Not obcCC.Range Like "Click here to enter text." Then 'place the value of each contentcontrol field in the final row of the table _ and in the column which shares the name of the field's tag _ bearing in mind that Word adds two non-printing characters to each cell _ also, pull the DateLastModified from the Windows filesystem to give indication of how uptodate the info might be For Each col In .Columns Select Case Left(.Cell(1, col.Index).Range, Len(.Cell(1, col.Index).Range) - 2) Case obcCC.Tag .Cell((.Rows.Count), col.Index).Range = obcCC.Range Case "Updated" .Cell((.Rows.Count), col.Index).Range = Format(fl.DateLastModified, "dd/mm/yy") Case "Matter" .Cell((.Rows.Count), col.Index).Range = fldr.Name End Select Next 'col End If 'not default=empty value Next 'content control docWord.Close End With 'docWord End If 'correctly-named file Next fl 'file in subfolder representing a &lt;thing&gt; Next fldr 'folder representing a claim 'add a count With ThisDocument.Tables(1) .Rows.Add .Cell(.Rows.Count, 1).Range = .Rows.Count - 2 &amp; " files" End With 'clean up object variables Set fso = Nothing: Set fldrCurrent = Nothing: Set fldr = Nothing: Set fl = Nothing Set appWord = Nothing: Set docWord = Nothing: Set col = Nothing: Set obcCC = Nothing End Sub
You could avoid using the clipboard. If you had the Stocks method instead return a range object, you can specify a destination range and set the value property of the range to be the value property of the returned range object. http://stackoverflow.com/questions/20212582/copy-range-from-one-sheet-to-another-vba http://stackoverflow.com/questions/19909771/copying-ranges-from-one-sheet-to-another-using-variable-cell-references 
This is excellent, thanks a lot! I will look over this and draw from it along with some of the other example code I've found. I may be back in a few days with some questions if that's all right.
I myself find this refreshing and sort of exciting. The core API allows you to develop for the multiple windows platforms without the need to target them specifically. 
unless it's got some sort of API or can take files/params from the command line, you're left with using SendKeys, which then it needs to have good key shortcut support. 
How does the plasma cutter connect to the PC?
It's a Torchmate running on a Lincoln Electric controller.
What version of Visual Studio? Have you installed any service releases for it? What OS? What type of PC?
so an internal resource file, as in a multi language .RES? You might mean a given file on the drive to another directory. Need more info 
It's a .package file. As a resource file, I mean files like images or anything like that you put into your program's resources. [if that makes sense]
There are better ways to do this other than having 43 if statements.
I should've mentioned I'm using VB/VS 2013. Those were very informative, but I'm talking about actual files you put into your program, I've tried recalling it with 'My.Resources.[filename]'.copyto(Path_Here) but I get a 'Byte' error
Actually, yes - I did that method right before you posted it and it works! System.IO.File.WriteAllBytes(My.Computer.Registry.GetValue("HKEY_LOCAL_MACHINE\Blah\Blank", "Stuff", Nothing) &amp; "Data\Client\Whatever.Package", My.Resources.PackageHere) Thanks!
desktop gaming pc with 8gb ram, ssd, $200 recent gfx card
I did have 2013, but since they REQUIRE it being on ssd (well, my primary drive), on top of their 4gb+ service packs, i decided to only keep 1 at a time due to limited ssd space :( No plugins - it's pretty vanilla but with service packs
You could switch to 2013 entirely ... If you are using 2010 at work, and bringing work home, then you can just copy the project or solution file, and open the copy in 2013. I run 2010 in a client's VM, and 2013 on my desktop, and code in both all the time (and have done this going back to 2005 as new versions came out). You just keep two solution files, but the code files don't change. I actually have files in my primary work solution for '08, '10, and '13 (but only have 13 installed at this point). Obviously, you won't get features of the newer versions of .NET, but the IDE is still backwards compatible all the way to 2.0, and will continue to target the projects version of .NET. 
Glad you got it! B
I am no expert, so take my advice with a grain of salt. I would also handle the tender conversion from string to double in the same fashion. Again, I could be way off. If Double.TryParse(txtBoxPrice.Text, price) Then If (tender &gt; price) Then lblChange.Text = "Give change amount " &amp; change.ToString("c") Else MessageBox.Show("whatever error message") 
can't understand your question 
you'll want a sub or forum for whatever DB engine you're using. the method is different for all of them.
You shouldn't have a WHERE clause when you're inserting values. Besides that, if you're using SQL Server, you might be looking for the SCOPE_IDENTITY() function. INSERT INTO myTable (field1, field2) VALUES ('a', 'b'); SET @insertedId = SCOPE_IDENTITY(); It returns the identity of the most recently inserted record.
Derp, fixed .. I realized that since server.exe itself had admin privs, it could launch a cmd.exe process and netsh a firewall exception without further priv's required. :) Solved My only issue is that it keeps generating a new firewall exception instead of overriding if apply is clicked multiple times O__o Using netsh advfirewall firewall add rule name="blah" action=allow protocol=TCP dir=in localport=7833 EDIT: Solved myself: netsh advfirewall firewall delete rule name=blah
As a follow up I just tested my theory and it is all working as intended. Thank you very much for your contribution.
The record layouts for my [personal record (http://imgur.com/P181xSR) and my [Performance file](http://imgur.com/lEVM70P)
 Public Class Form1 Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load For Each btn In {Button1, Button2, Button3, Button4} AddHandler btn.Click, AddressOf AllButtons_Click Next End Sub Private Sub AllButtons_Click(sender As Object, e As EventArgs) Dim btn = CType(sender, Button) MsgBox("Hi, I'm " &amp; btn.Name) End Sub End Class 
For future projects, would there be a way to get all the objects in the form so I could do something like for each btn in Form1.getChildren
You can do: For Each ctl In Me.Controls If TypeOf ctl Is Button Then AddHandler CType(ctl, Button).Click, AddressOf AllButtons_Click End If Next But that only works correctly if all the buttons are directly on the form. If you have containers (panels, splitContainers, etc) on your forms and the buttons are inside those, you'll need something like this: Public Function GetAllControls(ByVal Controls As IList) As List(Of Control) Dim ctls As New List(Of Control) For Each ctl As Control In Controls ctls.Add(ctl) Dim children = GetAllControls(ctl.Controls) ctls.AddRange(children) Next Return ctls End Function You then replace the "for each" in the first snippet with For Each ctl In GetAllControls(Me.Controls)
You can also do the GetAllControls using an Iterator Function: Public Iterator Function GetAllControls(ByVal Controls As IList) As IEnumerable(Of Control) For Each ctl As Control In Controls Yield ctl For Each childCtl In GetAllControls(ctl.Controls) Yield childCtl Next Next End Function
I wouldn't use @@identity. It doesn't give you the ID of the record YOU inserted, it gives you the ID of the MOST RECENTLY INSERTED record, no matter who inserted it. 
This was what I needed, Thank you.
in this case the "string" is json, which there are tools to parse into native objects. you have to tell the engine what the datatype is. if you don't know, use string and hope implicit casing does what you want.
there is seriously no point to this. I spend valuable time fixing legacy VB6 programs when MS released updates that break them, and the fix is sometimes "rewrite it in not-vb6" because there's no work around. MS is committed to not avoiding to break VB6, there's no way in hell they'll offer any edition of it ever again. get over it. move on. 
You won't ever be able to access the form from a background worker (that's actually the point ... moving the heavy logic to another thread, while keeping the form usable). You'll have to pass everything to the function (through parameters), so that it doesn't need to access the form at all. 
I will be disabling a lot (I think almost all!) of the controls on the form, to prevent the user from changing values that the function uses. Moving to a backgroundworker is mostly to be able to cancel the loop and to prevent the program from not responding.
VB6 had it's time in the sun, and now it is dead, let it rest in peace. I still touch VB for my job, and while there is some archaic charm to it, like there is to playing a vinyl record or an old vacuum tube radio, the rest of the world has moved on, to a better place. VB.NET is great software.
The type is StringContent. You should just change the = to As https://msdn.microsoft.com/en-us/library/hh138198(v=vs.118).aspx
I thought there was, it just didn't create executables.
Resolved: I tried As StringContent and it didn't work, and didn't suggest any imports. That is when I got thrown off (was it a custom class? Was I doing something wrong?) Apparently it's an uncommon DLL and is not standard with visual studio 2010, so had to import the dll via property references. Then As StringContent worked. I always thought you can imports anything from microsoft as long as you're using visual studio, but I was wrong. 
I wonder how come I had to add the HTTP namespace dll to get this to work via imports?
You can use "Convert.To..." with ", 2)" as a parameter to convert to and from base 2 (binary): ' number to binary string Dim num = 129 Dim strBits = Convert.ToString(num, 2) ' 2 indicates binary Debug.Print(strBits) ' binary string to number Dim num2 = Convert.toInt32(strBits, 2) ' same here Debug.Print(num2) 
well yeah, if you want to parse the json string into a native object. that's the "tools" i mentioned.
Thank you so much!
Nice LINQ version man. 
Generally you should look at moving away from the Microsoft.VisualBasic dll as it tends to be there for compatiblity with VB6 and below. IsNumeric will cause errors here for instance if the number value is $100 IsNumeric will return true but Convert.ToInt32 will throw an exception Here is an example of it in the wild. https://dotnetfiddle.net/zdDG8o 
This won't work when Option Strict is On because ReadAllLines returns a string You should always have Option Strict On, and really there is no need to convert to an integer as you are just printing it to screen. https://msdn.microsoft.com/en-us/library/s2tte0y1(v=vs.110).aspx?cs-save-lang=1&amp;cs-lang=vb#code-snippet-1 Here is a version of your code that should work Sub Main File.ReadAllLines("Input.txt") _ .TakeWhile(Function(str) str &lt;&gt; ("42")) _ .ToList() _ .ForEach(Sub(str) Console.Writeline(str)) End Sub Here is a fiddle of in action minus the file reading https://dotnetfiddle.net/zdDG8o
I wrote the code in LINQPad and it works just fine.
Because option strict is not on in linqpad by default so vb does an implicit cast from string to integer. Its a really bad habit to get into and **will** cause you problems if you continue to write code like this. Typically most places where you would get paid to write vb code have it set to on for all its code. 
I get what you are saying now. I wrote it the long way to redcue complexity for new programmers.
For this semester in my Visual Basic class we were asked to make a program that was somehow travel related and used at least 2 APIs. What I created was an application that would take xml weather data from Wunderground.com and use that to pick restaurants that are either good for patio sitting or good for indoor sitting. I am curious about how my code logic, structure and layout compare to more professional VB.NET code. What can I do to make myself a better VB programmer? A better programmer in general? Are my object approprate? Any additional suggestions? note: the weatherbot class was mostly written by my project partner so I had little to no code in this but it is required to function.
What's a good .net replacement for that function then?
 A few things... 1st, this snippet: 'this stores the name as a string Private _name As String Public Property name As String Get Return _name End Get Set(value As String) _name = value End Set End Property 1) The comment not useful and simply adds visual noise, in my opinion. 2) Now that VB supports it, I much prefer to use this format for attributes: Public Property name As String ' does the same thing as all your code above. Typing that will declare a private string named "_name", and build the standard getter and setter. Using that style, your business class looks more like this: Public Property name As String Public Property location As String Public Property rating As ImageSource 'I would like to change this to be... Public Property bizImage As ImageSource 'I would also like to create a method... Public Sub New(name As String, location As String, rating As ImageSource, image As ImageSource) Me.name = name Me.location = location Me.rating = rating Me.bizImage = image End Sub Public Function convertImage(imgURL As String) As ImageSource Dim imageURL As New Uri(imgURL, UriKind.Absolute) Dim imgSource As ImageSource = New BitmapImage(imageURL) Return imgSource End Function There's a lot less code to look at; and if I see a "full-fledged" property, I know something's being done (like in your "Temperature" property in the Wunderbot.vb class. Which brings me to that exact property: Private _temperature As Integer Public Property temp As String Get Return String.Format("{0}º", _temperature.ToString) End Get Set(value As String) _temperature = CInt(value) End Set End Property I would write it as: Public Property Temperature As Integer ' or maybe Double ...and leave the formatting to the UI. That way, if I want to map the class to a database using an ORM, I don't have to do anything special to move the value (or worse, have my temperature field be a varchar with all those degree symbols "º" in them)... Also, I think that CInt is going to error on a value like "22º" 
Thanks for the feedback. That was really helpful. I was not aware that you could declare properties like that, my professor said that the method I used was the standard. This will make things a lot easier. I see what you mean about the string formatting. I am not sure what I was thinking when I did that. 
&gt; What can I do to make myself a better VB programmer? A better programmer in general? Read other people's code. Download someone's app, read the code see how it works. The more you code the more you'll learn. 
Fair enough, though personally I find the version without the Else statement to be less complex, but I'd also stay away from a one line if statement. They tend to be less maintainable as it's easier to introduce a bug so I'd write a full multi-line if statement
Here is my code, again I write this in the highest level code I can for the newer coders out their. Sub Main() For x = 0 To 100 If x &lt;&gt; 100 Then Console.Write(100 - x &amp; vbCrLf) End If Next Console.ReadKey() End Sub
Because I like list's :) Sub Main() Dim tNumb As Long = 65 Dim l As List(Of Long) = HailstoneSequence(tNumb) Console.WriteLine(tNumb &amp; " has {0} elements in sequence:", l.Count()) Dim tString As String = "" For x = 0 To l.Count - 2 tString = tString &amp; l(x) &amp; "," Next tString = tString &amp; "1" ' could have done this with an if then but why check the condition each loop? Console.WriteLine(tString) Console.ReadKey() End Sub Private Function HailstoneSequence(ByVal hs As Long) As List(Of Long) Dim tempList As New List(Of Long)() tempList.Add(hs) Do Until hs = 1 If hs Mod 2 = 0 Then hs = hs / 2 Else hs = (3 * hs) + 1 End If tempList.Add(hs) ' for the new coders out there check out the IIF function you could then do this one line replacing the whole if then ' hs = IIf(hs Mod 2 = 0, hs / 2, (3 * hs) + 1) Loop Return tempList End Function
This code looks great man and if you did that for me as part of my team I would be happy with it. The programming style is clean and easy to read, the function layout makes sense, and the program works. I could not ask for more. The reality is, in the programming world there are few rules; 1. does it work? 2. is it easy to maintain? 3. does it make sense? 2-3 mostly go together. Commenting helps but you also have to trust in the capacity of the developers coming after you. The rest just boils down to style. I have a my own take on the "rules" **"There's no wrong way to write a program as long as it works, only better ways"** 
Hard to improve on this... Maybe replace "Write(... &amp; vbCrLf)" with ".WriteLine(...)" ? x can never be above 100, so the test could be "x &lt; 100"... but that's just nitpicking.
Part 1: Private Iterator Function HailStoneSequence(n As Integer) As IEnumerable(Of Integer) If n &lt; 1 Then Throw New Exception("Positive integers only") Yield n Do While n &gt; 1 If n Mod 2 = 0 Then n = n \ 2 Else n = (3 * n) + 1 End If Yield n Loop End Function
wooo an iterator function nice.
You're not using your *weekday* and *weekend* variables when you sum the daily variables. weekday = mon + tue + wed + thur + fri weekend = sat + sun totalWeekdayLabel.Text = weekday.ToString totalWeekendLabel.Text = weekend.ToString
Great! Thanks for the update.
I liked the one Trello had for a while on their /jobs/developer page: [trello.com/jobs/developer](https://web.archive.org/web/20140929090611/https://trello.com/jobs/developer) on Archive.org 1318245405976014891
The easiest way to do this is to keep a reference to where you were in the file last time you read it. Private LastPosition As Long Private Sub ReadLogFile() Using Reader As System.IO.StreamReader = My.Computer.FileSystem.OpenTextFileReader("yourFileName", System.Text.Encoding.Default) 'get new text file reader Reader.BaseStream.Position = LastPosition ' set last position from variable ... this will be 0 if the file hasn't been read yet Do Until Reader.Peek = -1 Debug.Print(Reader.ReadLine) 'read line 'do whatever you do with line here Loop LastPosition = Reader.BaseStream.Position + 1 'set variable adding one so that you start at the beginning of the next line End Using End Sub This is a super simplified example, as you'd want to check the length of the file to ensure that it hasn't been deleted / shortened, and you'd want to ensure that the file is even there, but it should give you the basic idea. It also uses a TextReader (to read one line at a time), but you can use this concept with any stream based object in .NET for different file layouts. 
Read up on the [FileSystemWatcher Class](https://msdn.microsoft.com/en-us/library/system.io.filesystemwatcher(v=vs.110\).aspx) &gt;Use FileSystemWatcher to watch for changes in a specified directory. You can watch for changes in files and subdirectories of the specified directory. You can create a component to watch files on a local computer, a network drive, or a remote computer.
I know but i was trying to add this into a tool i already made instead of putting another app on my pc.
Without seeing any code all I would offer is, when the character's Y position + the character's height is the same as the value for the Top of the picturebox. stop moving the y position down as the character is "On" the picturebox.
It looks like there is no public api for doing this http://stackoverflow.com/questions/9838514/setting-playback-device-by-executing-a-batch-file-powershell-script Microsfot doesn't want applications changing the sound playback for it's users. 
Do you mean as in dynamically at run time? You create the picturebox like any object with &gt;dim name as new picturebox (It might just be as picturebox, I forget). Then add the attributes e.g image and size &gt;name.width=100. &gt;name.height=200. &gt;name.image=image. Fromfile(whatever. PNG) Finally, and most importantly, you need to add the control to the form with &gt;me.controls.add(name). If you need it to have events such as mouse down, first create the sub you want to execute, e.g. pictureboxmousedown() then add it as an event Handler *before* the me.controls.add bit with. &gt;addeventhandler name, addressof pictureboxmousedown(). Hope that is clear enough, I'm on mobile 
No I mean having it available through a .dll or some .Net object as a control for another application.
VB6 integers were actually the equivalent of a .NET Short (16 bits / 2 bytes). 
Agree completely. I released my very first VB6 production app in 2003 with almost no experience in real development (my company bought a nearly complete code base from a vendor that I finished for release). 3 hours later I got my first bug report, which consisted of "we were doing something, and it crashed". ... no error message, no idea exactly what they were doing, just some lost data. The hits kept on coming, and I quickly learned both defensive programing (one crash was due to the user entering a "$" in a textbox that was converting straight to currency) and error handling. Within a month, I had a functional logging system, and had wrapped every sub or function with an "On Error GoTo" routine, and had built an MZTools Template for easily inserting Error Handling into code. Today, it's all been converted to .NET (nearly 500K LOC), and the error handling system is at the core. It's now a Windows Service, and errors / trace data are passed to it from various services and apps in our suite (via a socket connection, using an XML message format). Logs are stored for 30 days on site, and logs from current versions are zipped and transferred back to our server at night so that we can go through them proactively. IMO a function or sub without a Try / Catch block is unfinished, and allowing the end user to see one of those "there was a problem with xyz.exe and it has to close" windows should be avoided at all cost. 
Well said. Now, if I can convince my developer who insists on msgbox() , I'll be all set.
I disagree 100% in your statement that a function without a try catch is incomplete. You should only catch errors when you expect to handle them. Also it makes no sense to have a try catch when no exceptions can occur. If all you plan on doing is logging your error you should let it bubble up to your global exception handler so you get the full stack trace for when the error happened. I agree with you in the importance of logging however, and of being proactive in looking at your logs.
fack I forgot about this, you have a much better memory than I do Rob. B
well this is well beyond what i know and can do. i tried tinkering with some api to see if i could manipulate the window. this is what i came up with and i am failing with it and honestly don't grasp it 100% so i will save this for one day when i have a better understanding. Const WM_KEYDOWN = &amp;H100 Const WM_KEYUP = &amp;H101 Const VK_UP = &amp;H26 Const VK_DOWN = &amp;H28 Dim hWnd As IntPtr Dim subhWnd As IntPtr Dim subhWnd2 As IntPtr hWnd = FindWindow("", "Sound") subhWnd = FindWindowEx(hWnd, vbNull, "SysTabControl32", "") subhWnd2 = FindWindowEx(hWnd, subhWnd, "SysListView32", "") SendMessage(subhWnd2, WM_KEYDOWN, VK_DOWN, 0) SendMessage(subhWnd2, WM_KEYUP, VK_DOWN, 0) this was supposed to move one selection down in the playback devices tab in the "SysListView32" but does nothing at all so that will be that 
I should have said, "non trivial" subs and functions, as we don't handle in those (where no error can occur). There are a few places where we need higher levels of stack trace (usually in dealing with third party tools), or can't reach the logging system without breaking encapsulation, and we intentionally don't handle these, but these really are the exception. Keep in mind, I'm not talking about throwing / rethrowing errors back up the stack, but logging the state of the app where we are, and in most cases, resetting state or returning statuses to ensure that the rest of the application can continue to run (so both logging, and while not handling the error directly, handling the result of the error). We never allow the app to shut down / need a restart due to an error if possible. 
if you're looking for pfsense, maybe there's a port you can connect to query for it? maybe http and look for pfsense in the document? even if it is pfsense, it might not be an internet gateway, but one to another private lan. there is no generic way to tell if something is a gateway. only way to know is to set it as your gateway and try to route through it. however, if it's configured to use UPNP, you might be able to discover it that way. I don't know if pfsense does by default.
I rolled my own for my current project. It was the first (okay, maybe second) bit of code I wrote. It writes to one of four different log files depending on what's being logged. Since this is a game, there is a Game log for each game with game specific logging, there is a Race log for each specific race, an Error log for errors and a General log for general non-game/race specific information. The application has a built-in log viewer with a "copy to clipboard" functionality. This allows people to send me a log without needing to dig up the file on the drive and send that to me.
The only reason it should be at the top is if you use the variable directly after. It's a bad habit to get into because it makes it more difficult to maintain the code. 
That's the problem it's a habit that's hard to break, it would be nice if there was a rule in the built in FXCop for visual studio to watch for that.
I would honestly bring the 2 or 3 that you find the most useful. They are probably more interested in how you use VBA to solve problems. 
it doesn't matter what it does as long as it's readable and you can explain what it does. 
Using a while loop will allow you to iterate through the reader's returned rows. While drtPlayers.Read() YourCombobox.Items.Add(drtPlayers("YourFieldYouWantAdded").ToString) End While Of course your SQL statement is limiting the number of rows which may be returned with the WHERE clause. In this case, if only one row matched that ID then only that row is returned. Removing the entire WHERE clause would pull all rows from the table. Dim cmd as New oledb.oledbcommand("SELECT * FROM Students", connection) 'select all rows in the table Dim rdr as oledb.OledbDataReader = cmd.executeReader While rdr.Read 'loop through all rows returned and add the firstname of each row to the comobox combobox1.items.add(rdr("FirstName").ToString) End While
If it's not giving any errors, then it's definitely opening the file. Otherwise this. Set wbk = xlApp.Workbooks.Open("C:\Users\schaefern\Desktop\MacroWorkbook.xlsx") would fail. Does solidworks let you do breakpoints?