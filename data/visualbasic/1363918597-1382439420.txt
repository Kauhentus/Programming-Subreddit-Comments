i dont really know how to explain it :/ we need to do a thing about recycling. The chapter is in using procedures and exception handling. if that helps at all
yeah, i didnt think itd be so hard as it is. like i thought itd be similar to what we did it class but its not
Most of us here would be delighted to help, but we need information. If you are actually looking for an answer then you need to ask a question. I'm sure your teacher / lecturer explained what you needed to do. I can give you some exceptional advice right away - shut down your computer and study the assignment. Don't touch any code until you completely understand the project. You need to fully, 100% understand what you're setting out to do and be able to explain it any number of different ways. Unless you understand what you need to do, you won't be able to do it. Simple as that. If you study the assignment and are still having trouble with it, come back here and ask, but please read a few other questions that have been posted to understand what you need to tell us. Best of luck with the project either way.
Thanks, RemoveAt worked beautifully. Posted the code for my second question. I just don't know what to call it, how to set a variable I can use out of the mouseDown, to let the listbox know it can be dropped, if that makes sense.
You can declare a boolean variable in the forms scope (maybe like DeniedDrop) If it can be dropped set DeniedDrop = False, run your code to put the item in the listbox. Else DeniedDrop = True then where you delete from ListBox1 enclose the removeat in a check agains DeniedDrop. If Not DeniedDrop Then 'your removeat line End If
I fiddled around and put this in: Private Sub listFloor_DragDrop(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DragEventArgs) Handles listFloor.DragDrop Dim trueText As String = e.Data.GetData(GetType(String)) If trueText = "Floor" Then listFloor.Items.Add(e.Data.GetData(DataFormats.Text).ToString) End If End Sub It works, anything I should know that I'm doing wrong? If not, thanks again. Hope the weather is better wherever you are than here.
The only thing I would question there, is If it doesn't = "Floor" does it still remove it from the first list? 
I'm thinking you could combine the handles of the "Drag to" textboxes and use the sender object. In the .Tag property of each listbox, place the type that it can hold. Like the one you just did was for Floor. You could put Floor in the .Tag property and check that .Tag = .GetData... before dropping it. I'm going to play around with the idea and make sure what I'm talking about is feasible. Give me a minute and I'll post what I'm talking about.
OK, that looks feasible. Have you worked much with combining the handle clauses for events? If you notice each event has a sender object that is passed to the sub when it's called. You can use this sender object to determine with control sent the event. So with that, you could do all 10 listboxes with the exact same code. In this example I have listbox1 listbox2 and listbox3 The listbox2 has a .Tag property of "Floor" and listbox3 has a .Tag property of Ceiling. Notice at the end of the subs there are now multiple handles (ie, handles, listbox2.dragdrop, listbox3.dragdrop. This will mean that if either of those trigger the dragdrop event, that same block of code is ran. But to determine what is affected, we need set a listbox to equal the sender (which of course is a listbox). that is easily accomplished by just doing a dim lb as ListBox = Sender. Now lb in that sub is the listbox that called the event. Here's my code sample: Public Class Form1 Dim isDenied As Boolean = True Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load ListBox1.Items.Add("Floor") ListBox1.Items.Add("Ceiling") ListBox1.Items.Add("Roof") End Sub Private Sub ListBox1_MouseMove(sender As Object, e As MouseEventArgs) Handles ListBox1.MouseMove Dim lb As ListBox lb = sender Dim p As Point = New Point(e.X, e.Y) Dim index As Integer = lb.IndexFromPoint(p) If e.Button = Windows.Forms.MouseButtons.Left Then lb.DoDragDrop(lb.Items(index), DragDropEffects.All) If Not isDenied Then lb.Items.RemoveAt(index) End If End If End Sub Private Sub ListBox2_DragDrop(sender As Object, e As DragEventArgs) Handles ListBox2.DragDrop, ListBox3.DragDrop Dim lb As ListBox = sender If e.Data.GetData(DataFormats.Text).ToString = lb.Tag.ToString Then isDenied = False lb.Items.Add(e.Data.GetData(DataFormats.Text).ToString) Else isDenied = True End If End Sub Private Sub ListBox2_DragOver(sender As Object, e As DragEventArgs) Handles ListBox2.DragOver, ListBox3.DragOver If e.KeyState = 1 Then e.Effect = DragDropEffects.Move End If End Sub End Class
This looks brilliant. I'm gonna go through it tomorrow cause I haven't combined handles myself yet, and I don't want to just copy/paste your code, I want to understand what I'm doing, but it's almost 1 here. Thanks again, I'll let you know how I get on with this tomorrow.
OK. Don't hesitate to ask if there's something you're not understanding. It's refreshing dealing with someone that isn't just looking for code to paste. After seeing what you had done, I didn't have a problem posting my example as I knew you had already researched and did the main part. 
So let me get this correct, the user will submit something like January 1st, 2013 and you are to convert it to something like 1/1/13?
Hey, if you're around today/tonight, I went through the code you suggested, it worked but it took me about half an hour to remember I had to sent "allow drop" to true...D'OH I understand the multiple handles, I hope. It was a bit difficult for me to figure out the variable 'dim lb as listbox= sender' cause I want to think of 'sender' as where you're getting data from, not where you might be putting data (I think that's how to explain how I understand it now, let me know if I'm wrong). Also I was wondering, in my first code I had `Dim p As New Point(e.X, e.Y)` But in your code you have an "=": `Dim p as Point = New Point(e.X, e.Y)` is there a difference? And finally, when I don't set "deniedDrop" to True in the Class, the items disappear if I don't drop them in one of the listboxes. My brain hurts too much after hunting down the "allow drop" problem to think this one through...
I hadn't noticed either of those bugs. The boolean I fixed by adding a "deniedDrop = true" after the if statement in mouseMove, seems alright. Hmm...the whitespace drag bug, I'd guess I have to set the index to recognize only certain X, Y coordinates, &lt;&gt; 0 or -1, something along those lines. I could also cheat and just make listAll smaller so there is no whitespace. 
I've only been programming for a few weeks and I love some tips on how I should be understanding these concepts, like "sender," and also best practice. So any advice/criticism you have on this bit of code I'd love to hear. Also, any forums or websites or books that would be good for someone my level would be great. Here's a game I was working on today, getting my students to type in the correct word to match the picture in the time limit. I'm not done with it, but it's the most complicated thing I've programmed and I was beaming when I figured out the "progressbar1.value -= 1" Remember those days? `Public Class Form1` Private trueText As String Private truePic As Integer Dim timercount As Integer = 10 Private lblOne As Integer = 0 Private Sub btnStart_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnStart.Click animalPicture() Timer1.Enabled = True ProgressBar1.Value = 10 Label1.Text = "Correct Answers:" End Sub Public Sub animalPicture() Dim generator As New Random Dim pic As Integer = generator.Next(1, 4) Select Case pic Case 1 animalPic.Image = My.Resources.cat truePic = 1 Case 2 animalPic.Image = My.Resources.dog truePic = 2 Case 3 animalPic.Image = My.Resources.frog truePic = 3 `End Select` `End Sub` Private Sub TextBox1_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles TextBox1.TextChanged Dim trueText = TextBox1.Text End Sub Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click Dim trueText As String = TextBox1.Text If trueText = "cat" And truePic = 1 Then MessageBox.Show("That is Correct!") animalPicture() TextBox1.Text = "" lblOne += 1 ElseIf trueText = "dog" And truePic = 2 Then MessageBox.Show("This is Correct!") animalPicture() TextBox1.Text = "" lblOne += 1 ElseIf trueText = "frog" And truePic = 3 Then MessageBox.Show("That is Correct!") animalPicture() TextBox1.Text = "" lblOne += 1 Else MessageBox.Show("Try Again!") TextBox1.Text = "" animalPicture() End If Label1.Text = lblOne End Sub Private Sub Timer1_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Timer1.Tick If timercount = 0 Then Timer1.Enabled = False timercount = 10 Else timercount -= 1 ProgressBar1.Value -= 1 End If End Sub `End Class`
Hi. This post is very old, but I was wondering if you were still interested in/willing to provide some help with understanding arrays in vb.net?
Ok thanks for the reply. The reason that I didn't make a constant going down is the system that I have give it an arc which looks more realistic, although it was hard to tell that. I agree with the key change and the crouch, I might also add a sprint and a energy bar to go with it, also the jump could make that go down a bit, or at least stop it from regenerating. As for the background I agree, although I wouldn't know how to make the screen follow the character, I guess move the terrain the other way? Finally, I agree you shouldn't be able to move in mid-air but if you were already moving before you jumped then keep going that way. It's going to be hard but I'll give it a try and post an update on reddit in a few days time.
Ok, good luck! I don't know ifI can help, but I know my way around file-writing so if you ever need a hand on save files for highscores or whatever, feel free to ask :3
Yeah I know that too, thanks anyway :)
Keep variable(s) to track if the message has already appeared per-user. if it hasn't, display a msgbox and set the tracking-variable as already-alerted Dim msgA as boolean ... if not msgA then msgbox "Wrong for user A" userA=true end if 
 If textbox.Text.ToUpper Is Not Chr(65) OR Chr(66) OR Chr(67) Or Chr(68) Then '* Display ERROR End IF
Thanks a lot man, I'm gonna check out dreamincode.net when I get a chance...looks like I've got a shitty week ahead of me though...stay up
Sorry, I'm at work so I can't test this for several hours, but wouldn't this potentially show up 10 times if 10 mistakes were made?
Set the maximum length of the textbox to 1 and check against a string of valid characters "ABCD" Private Sub TextBox1_KeyPress(sender As Object, e As KeyPressEventArgs) Handles TextBox1.KeyPress Dim chkStr As String = "ABCD" 'If it's not one of these, we'll ignore it. 'We take the input .ToUpper so that lower case versions are allowed 'and make sure the backspace key still functions. If chkStr.Contains(e.KeyChar.ToString.ToUpper) OrElse e.KeyChar = vbBack Then 'if it's valid or backspace, don't handle it. Let it go on. e.Handled = False Else 'if it's invalid, handle the event by not passing it on to the textbox. e.Handled = True End If End Sub What I actually did was create a function and pass the KeyCar to it and return true or false. This would allow you to put the checks into multiple textboxes without repeating the code. Then all I had to do in the keypress event was put e.handled = isValid(e.keychar). I'll leave that for you to do if you want.
One quick point that I noticed that would result in a wrong answer is that strings are case sensitive by the default comparison. Therefore "cat" &lt;&gt; "Cat" &lt;&gt; "CAT" etc... When asking for user input in these situations it is crucial that you know the result you are comparing against. One method of doing this is the String.ToUpper or String.ToLower methods. This will take the users input and convert it to Upper or Lower case so that you know the case coming in and compare it to the same case. Example: Dim UserInput as String = "DoG" If UserInput = "dog" then 'Would be false. because "dog" &lt;&gt; "DoG" If UserInput.ToLower() = "dog" then 'Would be true because "dog" = "dog" Just something to keep in mind when comparing strings against user inputs.
*Edit*: Please ignore the below, this only applies if r1 was to be a variable that indicated where the error was as part of a larger application. I haven't checked the other functionality but the string in messagebox.show should be: "Invalid entry in " &amp; r1 &amp; ", please fix" I would also add a period after fix to turn it into a sentence... but that is me... 
Also it needs to have a new button that creates the random generated number.
I'm not familiar with the book so it would be hard to give an example based on what you've learned thus far. I would guess a Select case against the WashListBox.SelectedItem would be a good start. At that point you could add your specifics to ExteriorListBox in each Case comparison. Does the book specify methods and objects you should be using to solve the requirement? That would help us get you going in the right direction. 
Okay, I tried this, I'm kinda confused, what is "userA" supposed to represent because its not part of my form?
I believe i figured out my problem, I was using the right code in the wrong list sub i was using: If (WashListBox.SelectedIndex = 0) Then ExteriorListBox.Items.Add("Hand Wash") Doing this i get Hand Wash to show up on the ExteriorListBox. However, if i click the item 0 multiple times i get Hand Wash multiple times as well. How can i stop this? 
Sorry I misread your question to track 1 failure per user. Instead you want to alert failure once if a value is not in a list. "userA" should have been "msgA" in my code - it would be declared (DIM'd) in your general/declarations (a global variable), so its value is remembered while the form is open. You would just need to modify my code a tiny bit to add your letter check: if not msgA and instr("ABCD",ucase(answerfield.text))&lt;1 then msgbox "Bad answer, must be A-D" msgA=true end if That would only alert once until the form/program is reloaded. also, you could do this for all checks: if instr("ABCD",ucase(answerfield1.text))&lt;1 _ or instr("ABCD",ucase(answerfield2.text))&lt;1_ or instr("ABCD",ucase(answerfield3.text))&lt;1 then msgbox "All answers must be A-D" end if To get even fancier, use a .setfocus to place the edit cursor into the (first) offending answerfieldX textbox. You need a if statement for each, not a compound one as I wrote. tip: use exit sub to prevent further checking once an issue has been found. I would also suggest adding code like the above to each box's _LostFocus procedure instead so corrections can be made asap.
Your logic is wrong. it will always be true. You need to compare each chr() to something, because a string (which a chr result is) with no comparator in effect becomes String$&lt;&gt;"" A chr will never be an empty string, so it will always be true when being if'd with alone.
I guess if what you're doing is using If statements and populating the listbox based on the selection from those if statements. Then you could check to make sure that ExteriorListBox.Items.Count = 0 before doing an add. If (WashListBox.SelectedIndex = 0) and ListBox1.Items.Count = 0 Then 'Add Handwash The other options would be prior to checking the selected index, clear the listbox. This way, if you first select listindex 0 and then select listindex 1 it will not duplicate Hand Wash since as you stated 0 is hand wash only and 1 might be hand wash and hand wax. If you don't clear the listbox prior, you would in this case have hand wash hand wash hand wax 
So you're asking us to do your homework for you? How far along have you gotten? Are you getting error? Are you stuck at a particular point? Having someone else do your homework for you gets you nowhere.
I used this, thanks man.
Ok, I'm getting trouble now, the message is showing up always, even if the credentials are met.
hmm? I'm not sure i understand what your saying. In my understanding the logic of my original statement should work. it checking the first character in the textbox's text to check and make sure it is a character with the ascii number that corresponds to the characters we want. unlesss you mean that it should read like this: if (r1.text Not Chr(65)) OR (r1,text not Chr(66)) OR (r1,text not Chr(67)) Or (r1,text not Chr(68)) In which case i believe you are right edit: okay when i did my mockup i can see what you might have been talking bout. were you refferring to an empty response causing the program to crash? if so then you are correct and i worked around the with anoter line before this if statement.
why should that be the string in the message box? r1 is the name of the textbox (in my understanding) so I don't understand why you'd want to put it like that. As for the period, ya your right :P
okay so people got me second guessing what i originally put in, so i did a mock up or your program (excluding a few buttons) and did the coding to see if i could get it to work, this is what i ended up with Public Class Form1 Dim numberCorrect, numberIncorrect As Integer Dim scorePercent, grade As Double Private Sub butScore_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles butScore.Click numberCorrect = 0 numberIncorrect = 0 If r1.Text = "" Then numberIncorrect += 1 ElseIf Not ((Asc(r1.Text.ToUpper) = 65) Or (Asc(r1.Text.ToUpper) = 66) Or (Asc(r1.Text.ToUpper) = 67) Or (Asc(r1.Text.ToUpper) = 68)) Then MessageBox.Show(r1.Text &amp; " Is an invalid entry to question 1, please fix.") Exit Sub ElseIf r1.Text.ToUpper = k1.Text.ToUpper Then numberCorrect += 1 Else numberIncorrect += 1 End If If r2.Text = "" Then numberIncorrect += 1 ElseIf Not ((Asc(r2.Text.ToUpper) = 65) Or (Asc(r2.Text.ToUpper) = 66) Or (Asc(r2.Text.ToUpper) = 67) Or (Asc(r2.Text.ToUpper) = 68)) Then MessageBox.Show(r2.Text &amp; "Invalid entry to question 2, please fix.") Exit Sub ElseIf r2.Text.ToUpper = k2.Text.ToUpper Then numberCorrect += 1 Else numberIncorrect += 1 End If If r3.Text = "" Then numberIncorrect += 1 ElseIf Not ((Asc(r3.Text.ToUpper) = 65) Or (Asc(r3.Text.ToUpper) = 66) Or (Asc(r3.Text.ToUpper) = 67) Or (Asc(r3.Text.ToUpper) = 68)) Then MessageBox.Show(r3.Text &amp; "Invalid entry to question 3, please fix.") Exit Sub ElseIf r3.Text.ToUpper = k3.Text.ToUpper Then numberCorrect += 1 Else numberIncorrect += 1 End If If r4.Text = "" Then numberIncorrect += 1 ElseIf Not ((Asc(r4.Text.ToUpper) = 65) Or (Asc(r4.Text.ToUpper) = 66) Or (Asc(r4.Text.ToUpper) = 67) Or (Asc(r4.Text.ToUpper) = 68)) Then MessageBox.Show(r4.Text &amp; " Is an invalid entry to question 4, please fix.") Exit Sub ElseIf r4.Text.ToUpper = k4.Text.ToUpper Then numberCorrect += 1 Else numberIncorrect += 1 End If If r5.Text = "" Then numberIncorrect += 1 ElseIf Not ((Asc(r5.Text.ToUpper) = 65) Or (Asc(r5.Text.ToUpper) = 66) Or (Asc(r5.Text.ToUpper) = 67) Or (Asc(r5.Text.ToUpper) = 68)) Then MessageBox.Show(r2.Text &amp; "Invalid entry to question 5, please fix.") Exit Sub ElseIf r5.Text.ToUpper = k5.Text.ToUpper Then numberCorrect += 1 Else numberIncorrect += 1 End If If r6.Text = "" Then numberIncorrect += 1 ElseIf Not ((Asc(r6.Text.ToUpper) = 65) Or (Asc(r6.Text.ToUpper) = 66) Or (Asc(r6.Text.ToUpper) = 67) Or (Asc(r6.Text.ToUpper) = 68)) Then MessageBox.Show(r6.Text &amp; "Invalid entry to question 6, please fix.") Exit Sub ElseIf r6.Text.ToUpper = k6.Text.ToUpper Then numberCorrect += 1 Else numberIncorrect += 1 End If If r7.Text = "" Then numberIncorrect += 1 ElseIf Not ((Asc(r7.Text.ToUpper) = 65) Or (Asc(r7.Text.ToUpper) = 66) Or (Asc(r7.Text.ToUpper) = 67) Or (Asc(r7.Text.ToUpper) = 68)) Then MessageBox.Show(r7.Text &amp; "Invalid entry to question 7, please fix.") Exit Sub ElseIf r7.Text.ToUpper = k7.Text.ToUpper Then numberCorrect += 1 Else numberIncorrect += 1 End If If r8.Text = "" Then numberIncorrect += 1 ElseIf Not ((Asc(r8.Text.ToUpper) = 65) Or (Asc(r8.Text.ToUpper) = 66) Or (Asc(r8.Text.ToUpper) = 67) Or (Asc(r8.Text.ToUpper) = 68)) Then MessageBox.Show(r8.Text &amp; "Invalid entry to question 8, please fix.") Exit Sub ElseIf r8.Text.ToUpper = k8.Text.ToUpper Then numberCorrect += 1 Else numberIncorrect += 1 End If If r9.Text = "" Then numberIncorrect += 1 ElseIf Not ((Asc(r9.Text.ToUpper) = 65) Or (Asc(r9.Text.ToUpper) = 66) Or (Asc(r9.Text.ToUpper) = 67) Or (Asc(r9.Text.ToUpper) = 68)) Then MessageBox.Show(r9.Text &amp; "Invalid entry to question 9, please fix.") Exit Sub ElseIf r9.Text.ToUpper = k9.Text.ToUpper Then numberCorrect += 1 Else numberIncorrect += 1 End If If r10.Text = "" Then numberIncorrect += 1 ElseIf Not ((Asc(r10.Text.ToUpper) = 65) Or (Asc(r10.Text.ToUpper) = 66) Or (Asc(r10.Text.ToUpper) = 67) Or (Asc(r10.Text.ToUpper) = 68)) Then MessageBox.Show(r10.Text &amp; "Invalid entry to question 10, please fix.") Exit Sub ElseIf r10.Text.ToUpper = k10.Text.ToUpper Then numberCorrect += 1 Else numberIncorrect += 1 End If txtCorrect.Text = numberCorrect txtWrong.Text = numberIncorrect txtAverage.Text = (numberCorrect / 10) * 100 If (txtAverage.Text &lt; 60) Then txtGrade.Text = "F" ElseIf (txtAverage.Text &gt;= 60 And txtAverage.Text &lt; 70) Then txtGrade.Text = "D" ElseIf (txtAverage.Text &gt;= 70 And txtAverage.Text &lt; 80) Then txtGrade.Text = "C" ElseIf (txtAverage.Text &gt;= 80 And txtAverage.Text &lt; 90) Then txtGrade.Text = "B" ElseIf (txtAverage.Text &gt;= 90) Then txtGrade.Text = "A" End If End Sub End Class This seems to work and give you an error message the first time it encounters any invalid entry. It will only give you that one error code until you correct it. It treats blank entries as incorrect. Like I originally said, the code is silly long and looks super messy, but it does work. I used k1-10 for the key textbox names and r1-10 for the response textbox names. Let me know if you have any questions. I can also give you screenshots of the program running so you can see my form as well. 
haha ya i dont like snippets a whole lot either, r1 isnt the best name either ;p it was the one provided though
Okay that works as well :) probably a lot cleaner than my code xD I just like using buttons lol
No, my code is very very messy, I am just starting a VB class at my uni, so I'll probably be frequenting this subreddit, also taking a VB exam in less than an hour.
FUNFUNFUN
instr returns the position, yes. assuming all text boxes are maxlength=1 it will only be looking for a single character within "ABCD". if its not found (ie its not A or B or C or D), instr returns 0.
more like if r1.text&lt;&gt;chr(65) or r1.text&lt;&gt;chr(66) or r1.text&lt;&gt;chr(67) etc then... but now you run into another logic issue. r1.txt can not be A and B and C all at once, so this will fail, if r1 is "A" then the check for r1="B" will be false, even though it was ok for "A" if r1.text&lt;&gt;chr(65) and r1.text&lt;&gt;chr(66) and r1.text&lt;&gt;chr(67) etc then... that checks to see it isnt any of them at all. closer to what you originally were going for, this will also work: if not (r1.text=chr(65) or r1.text=chr(66) or r1.text=chr(67) etc) then... Also, why Chr? IT's easier to read if you use the actual character if r1.text&lt;&gt;"A" and r1.text&lt;&gt;"B" and r1.text&lt;&gt;"C" etc then... Plus "a" is not the same as "A", so case-match the variable input to your constant if ucase(r1.text)&lt;&gt;"A" and ucase(r1.text)&lt;&gt;"B" and ucase(r1.text)&lt;&gt;"C" etc then... or if lcase(r1.text)&lt;&gt;"a" and lcase(r1.text)&lt;&gt;"b" and lcase(r1.text)&lt;&gt;"c" etc then... 
haha ya it would definitely read easier if i just used the character but i was thinking i might run into issue with case. although now that i think about it a simple toupper or tolower would solve that. Like I said, i'm still learning vb so I do make mistakes :) I seem to have issues just theorizing code and seem to be able to process it better after i actually code it. If you look further down in this post you can see the actual code i did settle on which does use quite a bit of the things you pointed out here with the error checking. Although i disagree with you using AND operators here as wouldn't that mean that it has to be A, B, C, D, at the same time? Since in order for an AND statement to be true they all have to be true?
Yep, there's actually a ton of ways you could do this. Probably the simplest way that doesn't require looping or reflection would be to write a sub procedure to handle all that repetitiveness for you. You'd pass it the relevant TextBox (I'm assuming r1, r2, r3 ... are all textboxes) objects, and a question number. Private Sub Check(ByVal rX as TextBox, ByVal kX as TextBox, ByVal iQuestion As Integer) If rX.Text = "" Then numberIncorrect += 1 ElseIf Not ((Asc(rX.Text.ToUpper) = 65) Or (Asc(rX.Text.ToUpper) = 66) Or (Asc(rX.Text.ToUpper) = 67) Or (Asc(rX.Text.ToUpper) = 68)) Then MessageBox.Show(rX.Text &amp; " Is an invalid entry to question " &amp; iQuestion.ToString &amp; ", please fix.") Exit Sub ElseIf rX.Text.ToUpper = kX.Text.ToUpper Then numberCorrect += 1 Else numberIncorrect += 1 End If End Sub Then your repetitiveness would be limited to: Check(r1, k1, 1) Check(r2, k2, 2) Check(r3, k3, 3) .... You could eliminate the need for passing a question number in by stripping the number from the TextBox name: Private Sub Check(ByVal rX as TextBox, ByVal kX as TextBox) If rX.Text = "" Then numberIncorrect += 1 ElseIf Not ((Asc(rX.Text.ToUpper) = 65) Or (Asc(rX.Text.ToUpper) = 66) Or (Asc(rX.Text.ToUpper) = 67) Or (Asc(rX.Text.ToUpper) = 68)) Then MessageBox.Show(rX.Text &amp; " Is an invalid entry to question " &amp; rX.Name.Substring(1) &amp; ", please fix.") Exit Sub ElseIf rX.Text.ToUpper = kX.Text.ToUpper Then numberCorrect += 1 Else numberIncorrect += 1 End If End Sub The key to eliminating repetitive code through the use of functions and subs is to look at the code and determine which parts change with each repetition. In the case of your code, the only changes are in the variables (the 2 textboxes) and in the question number output in the text of the messagebox. In a case like this, where you're not doing custom stuff (using different values, different comparisons, etc.) on each repetition and the only real hardcoded change is the question number, it's (as you see) quite easy to create a function to handle all the heavy lifting, and simply pass it the different bits of data necessary.
Okay this makes sense, let me see if I understand (haven't learned about loops or anything yet like that yet). the allowedCharacters variable is the string we will be using to verify the responses. is the "ctrl" a system command in vb? or is it something being declared in the statement. and that entire line is just saying "For every control on the form, do this" correct? the next line is narrowing down every control to just text boxes correct? after that we are creating a temporary/imaginary textbox and naming it txt? after that we are saying for every text box with the name that starts with "r" and is 2 characters long, check against allowedCharacters. Just want to make sure I at least somewhat comprehend what you tried to say. :)
You need to create objects to put in the array. You can do this by iterating through the array and adding new objects, but there are other ways as well. And checking if a certain index contains nothing (null in other languages) will look like: If myArray(4) is nothing Then . . .
Specifying Chr() doesn't make it ignore the letter case, usually Chr is only used if working with non-typeable characters or some dynamic result such as after an encoding/decoding... You have and/or backwards. Lets break this down piece by piece: r.text="Q" --- Using AND: If r.text&lt;&gt;"A" and r.text&lt;&gt;"B" and r.text&lt;&gt;"C" then msgbox "Error" r.text&lt;&gt;"A" (true) and r.text&lt;&gt;"B" (true) and r.text&lt;&gt;"C" (true) **if true and true and true then error** *'we want ALL these conditions to be true, not just some so i say AND* ---- Using OR: If r.text&lt;&gt;"A" or r.text&lt;&gt;"B" or r.text&lt;&gt;"C" then msgbox "Error" r.text&lt;&gt;"A" (true) or r.text&lt;&gt;"B" (true) or r.text&lt;&gt;"C" (true) **if true or true or true then error** *'So in this case it will work with an invalid input,* but lets see what happens with CORRECT input: r.text="B" --- Using AND: If r.text&lt;&gt;"A" and r.text&lt;&gt;"B" and r.text&lt;&gt;"C" then msgbox "Error" r.text&lt;&gt;"A" (true) and r.text&lt;&gt;"B" (false) and r.text&lt;&gt;"C" (true) **if true and false and true then error** *'remember we want all to be true, but "B"&lt;&gt;"B" is not true, so "error" doesn't happen here* ---- Using OR: If r.text&lt;&gt;"A" or r.text&lt;&gt;"B" or r.text&lt;&gt;"C" then msgbox "Error" r.text&lt;&gt;"A" (true) or r.text&lt;&gt;"B" (false) or r.text&lt;&gt;"C" (true) **if true or false or true then error** *'now this is checking for any of the conditions to be true* A&lt;&gt;B is true and C&lt;&gt;B is true even though B&lt;&gt;B is false, because we are OR'ing - checking any, it will error. ---- You can usually think of AND as "all" and OR as "any"
Pretend you are the program you're coding. Someone gives you a row from Computer.dbf How do you match it to a row from Location.dbf? What information in the computer.dbf row that you were given can you use to link it to a location.dbf row? The best way to plan out a program is to ask yourself how YOU would link the info / complete the task.
Okay cool, Thanks for clearing that up for me :) you have no idea how silly i feel now. I always end up using statements like i had because i would always get errors even when entering valid answers and now i know why. Thank you :)
Very close. LIKE in this case is saying any textbox with a name that begins with r. The * is a wildcard meaning "I don't care what comes after r" we declare ctrl as a Control (a generic object of the type "Control") like saying dim int as Integer, Now control is generic so we don't have access to specific properties. Since there may be other types of controls (labels, buttons, etc...) on the form, we need to check to see if the current control in the Controls Collection that we found in this iteration of the for each loop is of type Textbox and if it is, we assign it to a TextBox object that we named txt. txt is now of type textbox and we're ready to use it. Then we take the .Text property and see if what is in it can be found in the allowedCharacters string. (Contains). If it's not, we inform the user that it's invalid and stop the loop. This keeps from having multiple messages pop up for every occurrence. If you look at the original message where you posted this code. You will see another method where I don't allow anything entered into the textbox unless it's valid. Basically, setting the textbox to suppress anything that is not A, B, C, D, or F. That would eliminate these checks leaving you to only have to check to ensure that none of the textboxes are blank. 
Yep, exactly. rX, kX, and iQuestion can be thought of as placeholders for the values you pass in when you call the sub [check(r5, k5, 5)], and you could name those placeholders whatever you want -- poop, morePoop, and evenMorePoop if you so wished. Which reminds me (not the poop part), you probably need to change the declaration for the textbox variables from ByVal to ByRef, because you're really sending a reference to those objects to the sub procedure. The difference between ByVal and ByRef can be tricky to understand if you go too low-level -- at this point, suffice it to say that ByVal sends a copy of whatever value to the sub/function, whereas ByRef sends a reference to the original object (essentially, it sends the object itself). The simplest explanation in terms of what they actually do is that if you change the value of something declared ByVal in the sub, that change will go away once the sub finishes executing and the variable will retain whatever value it had when it was passed to the sub. ByRef will make any changes persist outside of the sub/function. Here's a quick little example: Dim iVal As Integer = 5 Dim iRef As Integer = 5 Private Sub Change(ByVal val As Integer, ByRef ref As Integer) val = val + 5 ref = ref + 5 End Sub Edit: Nevermind, you wouldn't have to change the declaration to ByRef on those textboxes -- I just noticed you weren't changing the values of the .Text property of them in the sub. So in this sub, we've added 5 to both variables. If you were to examine the values of both variables after calling Change(iVal, iRef), iVal would be 5, while iRef would be 10.
I understand whats happening but at the same time I have no idea xD I'd be hard pressed to try and explain this to someone and not sound like a moron but I do understand what is going on in the code.
well it looks for #2 within #1, instr("ABCD","B") will give me 2, instr("ABCD","BCD") will also give me 2. if the entirety of param2 exists within param1, return location. we just happen to only be looking for a 1-character length string
Very cool project! Looking through the code right now.
Thanks, but entirely not the question I asked. It's not a question of how the program should handle data, it's a question of what variables, data types and such that I should use to handle that data. I wound up figuring it out on my own, so I'll post the answer here. I've created a class called BlahObject with multiple subclasses (Employee, Computer, Device) and added properties to each (ID, Name, Location) so from &gt; Computer.dbf has ID, NAME, ..., DEVICEID, ..., LOCATIONID Device.dbf has ID, NAME, COM PORT, TYPE Location.dbf has ID, NAME, YOUGETTHEIDEA I have BlahObject.Computer.ID, BlahObject.Device.ComPort, etc. I then declare Public DvcList as List (of BlahObject.Device) and use a while loop to populate it. .... While DBFData.Read Dim newDvc As New BlahObject.Device With newDvc .ID = DBFData("IDNUMBER") .Name = DBFData("NAME").ToString .Term = DBFData("COMPUTER") .Port = DBFData("PORT") End With DvcList.Add(newPrt) End While ... and feel like my brain has grown three sizes this day.
Sorry, I misunderstood. Depending on how you are using this, inside a class you can declare a structure. I use it quite a lot. Private Structure Human Public EyeColour As String Public Name As String ... End Structure Dim Arr() As Human Arr(4).Name = "Joe" Sorry if formatting is off, I'm on phone. 
First, you're using intCount before you have even declared it for your arrays. Not sure if it actually matters in this case though. Your main problem is that you are not **redim**insioning your arrays with each loop. If you knew how many elements you would have, you could specify it when you Dim strName() but since you don't know, you need to increase its size with each iteration. Inside the loop, before you try to set your arrays(element) to a readline, you need ReDim Preserve strName(intCount). for each of the array variables. Then as the intCount increases, it will allow the next element of the array to be set to it's value. That will get it working A problem, when you instantiate the objReader you specify a File_Name but what if that file doesn't exist? You have no control at that point of If IO.File.Exists. I would move that down and replace your objReader = line with that line. and then move your objReader.Close up above the End If line.
you're close but you wouldn't use the first If statement. Instead you would assign sngMass * 9.8 to sngNewtons and then set your labels text property with it. Fixing that should bring you a result. Alternatively instead of the messagebox, I would think the exercise would want the label to read either too heavy, too light or the result of the calculation. This way, you're not displaying something that you've already stated is too heavy or too light depending on the result. Oh, and by the way, where are you setting sngMass to the user input? 
 Dim sngMass As Single '(this is 0 at initialization in this context) Dim sngNewtons As Single '(this is 0 also) 'this is unnecessary because it's saying 'if 0 = 0 * 9.8 Then 'and of course 0 = 0 If sngNewtons = sngMass * 9.8 Then 'then lblResults.Text = 0 lblResults.Text = sngNewtons End If 'Of course sngNewtown is 0 and is lower than 10. If sngNewtons &lt; 10 Then MessageBox.Show("Too light") End If If sngNewtons &gt; 1000 Then MessageBox.Show("Too heavy") End If OK. Typically, you would supply the user with a textbox to enter the number in to. When the button is clicked and you've ensured that what they entered is a number then you would store that into sngMass. sngMass = cSng(TextBox1.Text) next you would use sngMass in your calculation to set sngNewtons Then use the if statement you have for determining High or Low or Result. 
Thank you so much!
Thank you, I'm not sure my response was worth reddit gold, but I appreciate it non-the-less. 
I think they mean: "What value are you going to assign to sngMass? Is a user going to input that value (via a textbox, etc.)?"
Another option is that you could use the .Cast(of T) extension method to cast it to a generic collection of IEnumerable (Of T) and then use the .ToArray() extension method. ListBox1.Items.AddRange(ListBox2.SelectedItems.Cast(Of String).ToArray) 
At home I use it to learn more about programming. Areas where I'm not strong in, I tend to play around with code to strengthen my knowledge. Research on MSDN and other sites, watch tutorials and then write small applications that puts that code to use so that I can understand it better. I guess you could say I enjoy it enough that it's a hobby for me. I actually am not a programmer by trade. But I do take time to write applications for the shop to help with day to day bottlenecks.
You can format your post so that it resembles the source code just by starting a line with 4 spaces... Private Sub Form_KeyDown(KeyCode As Integer, Shift As Integer) Select Case KeyCode Case vbKeyUp Pup1.Enabled = True Pup2.Enabled = True Case vbKeyDown Pdown1.Enabled = True Pdown2.Enabled = True End Select End Sub Private Sub Form_Keyup(KeyCode As Integer, Shift As Integer) Select Case KeyCode Case vbKeyUp Pup1.Enabled = False Pup2.Enabled = False Case vbKeyDown Pdown1.Enabled = False Pdown2.Enabled = False End Select End Sub Private Sub Pup1_Timer() paddle1.Top = paddle1.Top + PSpeed End Sub Private Sub Pdown1_timer() paddle1.Top = paddle1.Top - PSpeed End Sub Private Sub pup2_timer() Paddle2.Top = Paddle2.Top + PSpeed End Sub Private Sub pdown2_timer() Paddle2.Top = Paddle2.Top - PSpeed End Sub Although I can't help you with your coding, I thought I'd offer some help with your post formatting. Formatting help can always be found by clicking on the "formatting help" link at the bottom of the text box you are typing your post into.
What is the value of PSpeed at the time it's being used in the timer? If it's 0 then the objects won't move.
thanks ill remember if i post anything else like this.
PSpeed = 500. I put that in the form_load sub
OK, where did you Dim your PSpeed variable? EDIT: actually can you show the code for the form? Or is it a lot?
i put it at the very top with "option explicit." Im at work right now so I can screen shot all the code later tonight.
One good thing about visual basic is you can use it to do almost anything. Sure you are restricted to Microsoft technology in a lot of ways, but any small projects can also be done using the language relatively quickly and effectively.
What is a 2-gram?
[n-gram](http://en.wikipedia.org/wiki/N-gram)
now would i put sngMass = cSng(txtMass.Text) in the txtMass property? or under the btnClick button click property? What confuses me is sometimes I don't know what to put where
In this case, I would put it in the click event. Here's why. The user is prompted with a textbox where they will enter the mass. Let's say they enter 9 Now they click the button to see the result. This is where you need to assign the number entered in the textbox to the sngMass variable that you use in the calculation. sngMass = txtMass.Text Now, sngMass = 9 Then you perform your calculation sngNewtons = sngMass * 9.8 Which is performing the value in sngMass * 9.8 so sngNewtons = 9 * 9.8 Meaning that sngNewtons = 88.2 Here is where you compare the values of sngNewtons to display the result. If sngNewtons &lt; 10 then lblResult.Text = "Too Light" ElseIf sngNewtons &gt; 1000 then lblResult.Text = "Too Heavy" Else lblResult.Text = sngNewtons End If In this example the label lblResult should display 88.2 since it is neither too light or too heavy. 
An image or object array might be a good start. Call the random function and set the picture box like so. Dim i as integer = Whatever your random function is picturebox1.Image = pokeArray(i)
Ok. but how do i do a guess and check like If txtinput.text = 'the right pokemon then win 
= ' the right pokemon......then win blah blah ***
 Dim i As Integer = CInt(Int((151 * Rnd()) + 1)) PictureBox1.Image = ImageList1.Images.Item(i) 1: Bulbasaur() 2: Ivysaur() 3: Venusaur() 4: Charmander() 5: Charmeleon() 6: Charizard() 7: Squirtle() 8: Wartortle() 9: Blastoise() 10: Caterpie() 11: Metapod() 12: Butterfree() 13: Weedle() 14: Kakuna() 15: Beedrill() 16: Pidgey() 17: Pidgeotto() 18: Pidgeot() 19: Rattata() 20: Raticate() 21: Spearow() 22: Fearow() 23: Ekans() 24: Arbok() 25: Pikachu() 26: Raichu() 27: Sandshrew() 28: Sandslash() and so on But how do i format (correct syntax) so it knows the number=the pokemon string? Thanks
I can see an easy way of doing this, but it might require some Googling on your part. If all of your images are in the project resources, or even in a folder, you can iterate through them and assign each image and its file name (minus the JPG) to a two dimensional array. The file name would have to be the Pokemon's name obviously. This way the code is small and the only thing you need to make sure of is that the images are spelled correctly. 
I did this : http://www.ehow.com/how_7453414_visual-set-image-array-picture.html 
I would rename them. It will make your program smaller and easier to read. Either way you are going to have to write the names out. Might as well make the code look nice, eh?
okay so what will the code look like when I do rename them?
Fuck renaming then. It'll take like 10 hours to rename 151 files. Can you answer my original question? Is there a way to do a rapid fire list like 1=bulbasaur 2=ivysaur etc?
Theres 14 minutes and 50 seconds of groaning after each one
To answer your original question, use a [select .. case statement](http://msdn.microsoft.com/en-gb/library/cy37t14y%28v=vs.80%29.aspx). Overall, you'd be best to move your logic into an XML file (or similar serialised data format). Create a maser node, then 1 node per Pokémon with a "Name" and "Image" node. Make a quick batch file/Program to auto generate the XML from the filenames that you already have. Then, serialise the XML into an object array at runtime and use code like: Dim PokemonArray As Pokemon() = ObtainPokemonFromXML() Dim ExpectedAnswer As String Dim CurrentImage As Image Dim nextPokemon As Pokemon While True nextPokemon = PokemonArray(New Random().Next(PokemonArray.Length - 1)) ExpectedAnswer = Pokemon.Name CurrentImage = Pokemon.Image 'Block + Wait for answer. 'Confirm Answer is correct. 'Show feedback. End While 
Just telling you the way I would do it. Either way you will need to make an array to look through. Good luck man.
Uh..i'm not this advanced yet xD
Make your 2-d array with File name and Image. By using a For Each loop and Directory info. Here is an example: http://stackoverflow.com/questions/2216101/vb-net-how-to-loop-through-a-directory-listing Then do this basically. Dim i As Integer = CInt(Int((151 * Rnd()) + 1)) Dim CorrectName as String = PokeArray(i,0) PictureBox1.Image = PokeArray(i,1)
The link you posted doesn't make sense to me. And where do I declare the pokearray?
Fair enough. If you want to learn further, feel free to leave a reply asking for more detail.
Assuming ASP.NET, via AJAX, or postback?
This really helped me understand it a lot. Thank you so much!
Yep, posting back with hidden field(s) (manipulated with jQuery) would be the way to go. 
is my best bet to just pass the info I want as a deliminated string and then split the string into what I want in the codebehind or can I pass a js array to the code behind directly? 
Personally, for simplicity, I'd use jQuery -&gt; JSON + [JavascriptSerialiser](http://msdn.microsoft.com/en-us/library/system.web.script.serialization.javascriptserializer.aspx).
I'd recommend AJAX and JSON over post backs with hidden fields. Dave Ward's [Encosia](http://encosia.com/using-jquery-to-directly-call-aspnet-ajax-page-methods/) has some really insightful posts on it. The comments are useful as well. 
Create a class called Pokemon. Read XML data of pokemon and initialize an instance of 'Pokemon' passing in a string name, string file path for the image, and Pokemon number. Then generate a random number and display the object that matches. Ill explain better tomorrow, I'm half asleep.
The for loop in this code seems to be reading a number from column 3 in the excel worksheet and using that number as a sipher. That number is used to pull a character from the array (value2) and put it in the same row in column 4. I haven't used excel macros in a while so I may have switched up the rows and columns. Anywho, best of luck.
This sounds right. Column 3 should be a list of numbers from 0-26. Take out the "ByVal Target As Range" and leave empty parentheses. See if that works.
what are you trying to do with this code? if you run it line by line you'll see that at the first iteration of the loop, the cell D1 isn't being populated because (at least on what you've pasted) the variant value2 (presumably intended to be an array) has been filled with data. also, why is value3 instantiated but not used? is this bad coding or part of the puzzle?
Dim PokeArray(150,1) As Object Like this just declare at the top.
I don't see why not, you're basic file explorer example should do, just with a static tree instead of a folder tree, and your content instead of file list box
Awesome. Glad to know this is possible.
Ok cool. nothing is underlined. Now what do i do? xD Dim PokeArray(150, 1) As Object Private Sub Form1_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load Dim i As Integer = CInt(Int((151 * Rnd()) + 1)) Dim CorrectName As String = PokeArray(i, 0) PictureBox1.Image = pokearray(i, 1) End Sub End Class
regardless... I know what the macro does and what Gentleman above has described is correct. It also can't be coincidence that the macro goes through 40 iterations of "counter" and there are exactly 40 rows of data every time I have delimited. What I will say is that gut instinct has me agreeing with you on the first word being "Date" because the other two words could easily be "of Birth." However your logic for deciphering "Date" does not follow with the other words. A few things I will add to help you manually decipher... the second word "15.6" follows perfectly with the a=1, b=2 (o=15, f=6). Furthermore, every "word" (that is every group of numbers connected by a period) follows the same pattern. Starting from the first number every number after gets larger until the middle number (which is the peak) and then lessens on the other side. For even numbers you can see a similar pattern except there can be no "middle" number.
so I'm going to ask a few questions that might put this entire thing in context... 1) where is this "challenge" from? Is it for a class? did you find it online? what is the context in which you received it. 2)How did you "come across a clue" exactly? Was it provided to you? Did you just find it in the middle of the road? These questions of origin and context may help shed light onto what this material may reveal.
You'll just need to hook into the NodeMouseClick event to detect which node is clicked, and that's just about all you'll need to do here to get the functionality you want. You'll get the node clicked in the parameters passed to the handler.
Well, I guess you could use the VBA included in Excel and set up either a database or some static statements that you could add to the spreadsheet. Take a sheet and set your cells up to create a form. This is easily done by merging and setting outlines to fields. Then Alt-F11 to get to the editor. Add a user form and set it up to insert text into the specific rows and columns. So you could read from a sheet of doctors to get the list of Dr. names for a combobox. Another sheet could have your "Canned" text. Then when you select a dr. his/her name gets put into the dr field of your Form. Then from another combobox, you select a treatment. That treatment is linked to a cell in your "Canned" text sheet. You would then get the "Canned" response and copy it to the form cell that holds it. If you're interested, pm me with an email address and I'll send you an example of what I'm talking about. 
In VB I would use WinAPI: LoadLibrary, GetProcAddress. I don't know if that still works in the language you posted.
Thanks for the Reddit Gold! 1) Every time I have delimited it ends somewhere on row 40. So not sure about that. 2)After I said "date of birth" I began looking at it more and using the straight a=1 system and saw that it would begin with "e" and end with "y" but stopped there. How did you get that "82" to a "t"? just curious on the process. 3)I have two theories on the macro. The first (which I don't believe very strongly) is that it was in fact just to point you to the fact that 1=a, 2=b, etc. The second is that the macro does work on a delimited set of this data BUT, as someone else pointed out somewhere, the value3 (as defined in the macro and is unused) might be necessary to complete. IE You might have to finish that line of code in order to get the entire thing to work. That's all I have for now. If you could link to it, i'd be incredibly interested in seeing the final deciphering of the form.
What you want done can absolutely be done in VB.Net by creating a small application. I do this kind of stuff for my job all of the time. These are a couple of references I got off google that use the same method that I use to write my programs that are similar to what you need. If you get stuck on something or have questions let me know I should be able to help you out if time allows! http://support.microsoft.com/kb/316383 http://www.daniweb.com/software-development/vbnet/threads/384621/microsoft-excel-api-in-vb.net 
What exactly are you supposed to be putting in the module? The entire application or making calls to functions you have written in the module?
The [MSDN](http://msdn.microsoft.com/en-us/library/system.diagnostics.process.start%28v=vs.71%29.aspx) page on process.start does a very good job, have you read through it? Basically process start will start the process of opening the applications that is associated with a given document. Process.Start("D:\SomeTextFile.txt") would open notepad with the contents of SomeTextFile.txt loaded into it. Process.Start("D:\Brocure.pdf") would open your pdf reader with the Brocure.pdf loaded into it. A url is not a document so you would need to specify the application used to parse and display it Process.Start("IExplore.exe", "www.reddit.com") This can be broken down by creating a new process and passing information into the Arguments method Dim startInfo As New ProcessStartInfo("IExplore.exe") startInfo.Arguments = "www.reddit.com" Process.Start(startInfo)
Using a full URL with Process.Start will open the address in the default browser. Protocol definition is required (eg http://, ftp://, etc.) 
Ok Thanks you all for the info i hope it will work this time.
&gt; &amp;%$@#!@&amp;?/+@141939106442911;!@$/3+#@/$% Is that Base64? http://www.base64decode.org/
Is one method better/more preferred than the other? Or are they both equal?
I guess I see it as both are used as they are needed. For example, you want to open an excel spreadsheet called Budget.xls You could simply use Process.Start("Budget.xls") Excel opens, and the spreadsheet is in view. Now you can print that spreadsheet by clicking the print button, etc... But if you wanted to print that spreadsheet without having to depend on the user to click the print button you would more likely want to add some various .StartInfo properties. Dim prtXls as new process prtXls.StartInfo.CreateNoWindow = True prtXls.StartInvo.Verb = "print" prtXls.StartInfo.FileName = "D:\Budget.xls" prtXls.Start() Now what you have is a StartInfo class populated by various methods and then started, resulting in the Budget.xls file being printed without any user intervention after the start of the process.
http://www.pastebin.com Even offers syntax highlighting for different languages.
The two fields are called **Username** and **Password**. Thing is, I've almost completed my entire system and I don't want to make any changes to my database as it will f up the rest of my coding. I'll try anyway, thanks
the super basic answer is "search the data for the word before trying to insert it". the details of how to do that depends on what database it is and how you are treating the dataset.
It is only a database (*.xsd) with 1 datatable (don't know whether this is what you want to know?). What do you mean by 'treat' the dataset? I have a datagridview where the user can put in values via 2 textboxes (one for german one for english) then click on button "add" and the word appears in the datagridview. Private Sub btnadd_Click(sender As Object, e As EventArgs) Handles btnadd.Click Dim newRow = CType(Me.VokabelDataset1.Vokabeln.NewRow(), VokabelDataset.VokabelnRow) newRow.German = txt1.Text newRow.English = txt2.Text Me.VokabelDataset1.Vokabeln.Rows.Add(newRow) txt1.Clear() txt2.Clear() 
xsd is a xml schema file, so it's an "xml database" (or, not actually a database at all, but an xml file that you can treat as a database). so, before you do your "Rows.Add()", and probably before you do "Dim newRow", you need to check through the dataset for the existing value. I don't use these objects myself, so you'll have to check the docs for an easy way to do that, besides looping over the whole dataset.
Didn't work, I'm afraid. Same error again. Thanks anyway.
How would that looping work? I couldn't figure out how to check whether one particular entry (in this case the one the user types into a textbox) already exists or not. Thanks for your help :)
How about setting `QuotePrefix` to `[` and `QuoteSuffix` to `]` on `EDITLOGINACCOUNT`?
thanks ill def. take a look and I might be messaging you with any further questions ha
I know this sounds complex, because you essentially have a story problem, but this is really quite simple. You'll need a loop that runs to 24 (representing the hours), and you'll need to subtract 10% of the tank's water. After the loop, check the value of the tank against 100. Some quick pseudocode would be: tank = 500, min = 100 for i = 1 to 24 tank = tank * .9 'or, to allow for adding water every hour, tank = (tank * .9) + 10 if tank &gt;= min MsgBox("Fish lived") Else MsgBox("Fish died")
this is adlib and probably not 100% correct if not getRowExists(txt1.text) and not getRowExists(txt2.text) then me.vokabelDataSet1.Vokabeln.Rows.add(newRow) txt1.clear() txt2.clear() Private function getRowExists(byval word as string) as boolean for each d as data.datarow in VokabelDataset.Vakabeln.rows if d("English") = word or d("German") = word then return true next return false end function
I believe this is happening because you don't have an actual Update statement assigned to your OleDbDataAdapter object (da2), so behind the scenes it's either trying to run an empty Update statement, or it's using the Select statement (sql) as part of the Update (not sure which, I don't know how they work behind the scenes). You'll need to assign an Update statement to the da2.UpdateCommand property to get it to work. Check out [these](http://msdn.microsoft.com/en-us/library/system.data.oledb.oledbdataadapter.updatecommand.aspx) [three](http://support.microsoft.com/kb/308055) [articles](http://msdn.microsoft.com/en-us/library/33y2221y%28v=vs.71%29.aspx) for examples and more information.
OP This is the solution to the problem. Thanks indytan 
This is what I do.. count the number of records that match the criteria, if the result is 0, then I'm good to go.. 
If you're lazy, you can get away with only adding 7 gallons per hour and the fish will still live. :)
You could do the animation part pretty easily if you make a class and add this to get a vertical progress bar. Make the maximum = 500 and the value equal to your current number of gallons. Imports System Imports System.Windows.Forms Public Class MTech010VerticalProgessBar Inherits ProgressBar Protected Overloads Overrides ReadOnly Property CreateParams() As CreateParams Get Dim cp As CreateParams = MyBase.CreateParams cp.Style = cp.Style Or &amp;H4 Return cp End Get End Property End Class
I don't use linq, usually ADO. Generally, it would be creating a connection to the DB, then create a recordset to hold the result, then execute a SELECT query. The SELECT statement would include COUNT(*) to return a number.
If you are launching putty GUI, sendkeys. If you have putty running in CLI mode, you need to launch process, define stdin to your own buffer (openprocess I think??) and send your commands there. This is also how you capture script outputs (STDOUT) for display in your GUI. Yes windows has stdio in native API
Well the script I've made will open a putty ssh session, in a command line window. The host username and password are sent in the initial string. So it does work to a degree, as you said, it's the capturing subsequent commands that's the problem. I'm not at my computer right now, so forgive my ignorance but what exactly is sendkeys? 
After the check, if you found that there was indeed an update. Then you would present the user with the notification something like: NotifyIcon1.Icon = SystemIcons.Information NotifyIcon1.BalloonTipTitle = "Update Found" NotifyIcon1.BalloonTipText = "There is an update available" NotifyIcon1.BalloonTipIcon = ToolTipIcon.Error NotifyIcon1.ShowBalloonTip(30000) 'approx. 30 seconds.
Thank you. I couldn't figure this out for the life of me. This helped me a lot.
Whenever you get stuck on how something like that works, you can google **Site: MSDN {control name, method or class name}** and there are usually good examples of how to use them. Sometimes you need to dig into the links for the different over-loaded methods to find code samples so keep that in mind.
Try looking up streamwriters abd readers. These create a file for you abd you could copy in from a bunch of other files depending in what you needed using .readtoend And .write Though I have no clue if it works for .doc files, it certainly works for .txt files
If you are using a go-to, DONT! they are really not great. Look up arrays and select cases. They are confusing but so worth learning and very efficient. The array is your friend.
what exactly isn't working like you want?
When doing anything with text files I use streamreaders and writers . You need to import system.text and system.io. these are really useful. I can elaborate if you need me to.
The list box is only showing one line listing the seasons as one more than I put in the text box and the listed goals, etc. is only the last of the input boxes. The label is showing the name but the seasons total aren't showing and the rookie age is showing as the rookie age &amp; seasons (seasons I enter 3, rookie age I enter as 21 and it's displaying 213) with the totals displaying only the last input again (like the list box). Thanks for your time, chrwei!
What degree are you working toward?
why are you using "Do While True" on the text validation? if the validation fails, you'll have an infinite loop. (not related to your issue now, but will be in the future Why in "lstSeasons.Items.Add(intCounter..." are you using intCounter outside of the loop? intCounter is going to be intSeasons+1 because that's how for loops work. is the list supposed to have one line for each season? you'd need to do the Add() inside the loop. you have "intAge.ToString("N0") &amp; intSeasons" so, yeah, rookie age &amp; seasons. there's a lot going on here, so I'm going to suggest going through it one line and loop at a time and make sure each part is what you want. I think a lot of it just isn't what you want.
Thank you very much!
Can you give a simple example of the problem in code? Have you traced down the problem via debugger + Watch Window to a single assigment?
I'll get to work on sample code, but I found that the problem was happening around when the first form was shown.
OK I think I have found your issue Sub getWorkerInfo() Dim workerReader As New IO.StreamReader("d:\Slush.txt") Dim nextchar As String Dim totalstring As String = "" Dim foundall As Boolean = False Dim userName As String = "" Dim infoCount As Integer 'Number the program has added to the array Dim infoArray(3, workerNum) Here you are re declaring an array called infoArray(3, worknum) and resetting anything you've already done. Try changing that to **ReDim PRESERVE infoArray(3, workerNum)** and see if that helps. Actually, I don't think you need preserve since this really hasn't been used yet. Just ReDim InfoArray(3, workerNum) What you did was you redclared InfoArray() to a scope only maintained inside the sub. Once that sub finished you lost InfoArray(). The reason you didn't notice it was lost is because right after this sub is called you redim the global infoArray() which is empty because you filled the new local infoArray that you declared in the sub.
This worked perfectly, thank you!
 Dim num1 As Integer Dim list As New List(Of Integer) Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click Randomize() num1 = Int((100 - 0 + 1) * Rnd() + 1) ListBox1.Items.Add(num1) For Each ListBoxitem In ListBox1.Items list.Add(ListBoxitem) Next End Sub Private Sub Button2_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button2.Click ListBox1.Items.Clear() list.Sort() For Each listitem In list ListBox1.Items.Add(listitem) Next End Sub Private Sub Button3_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button3.Click ListBox1.Items.Clear() list.Sort() For i = list.Count - 1 To 0 Step -1 ListBox1.Items.Add(list(i)) Next End Sub Private Sub Button4_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button4.Click ListBox1.Items.Clear() list.Clear() End Sub
So, I've been able to load the data into VB and display it in a MsgBox Next step, into an array 
The issue I was having was that the Office component needed to be added from the COM tab under Project &gt; Add References
Because you're adding the Full contents of the listbox into your List(Of Integer each time you click the button1. Perhaps you either want to clear the list before you do the for each in button1, or add to the listbox and add to the list(Of T). In other words. Button1 would contain ListBox1.Items.Add(num1) list.Add(num1) that's it. 
off the top of my head: oleDB, select into a datatable, datatable.toArray()
Can you give us a relevant, compilable sample of your code so far? EDIT: [Gist](https://gist.github.com/) is good for showcasing code.
https://gist.github.com/anonymous/5348116
In the comment above, I used better variable names, in the pasted code, its on line 37 
 Dim Obj as Object Should be Dim Obj As Excel.Range You also need to create your array with the appropriate bounds: ReDim ADdata(range.Rows.Count, range.Columns.Count) Note this has an off-by-one error (index 0 is not used currently), as is the same with your loop, feel free to fix this whenever. Note: This code will die if it does not find an integer. Use a Try...Catch Block or a TryCast to fix this.
While I can't vouch for any others, I would recommend using [this](http://www.homeandlearn.co.uk/net/vbnet.html) website to learn from. From my experience, it's a good place to get you started. Note: I haven't tried any other websites or courses yet, so take this with a grain of salt. There may in fact be better learning material out there, and I would also appreciate if anybody could recommend anything else.
I changed the type from integer to string, will that allow me to bypass the "missing integer" error?
This is a good [starter site](http://channel9.msdn.com/Series/Visual-Basic-Development-for-Absolute-Beginners). Very organized, and videos are short and very well laid out. I would also recommend getting visual studio (express is free and there's a link on the sidebar to the right). 
Maybe I don't know COM Interop too well, so my understanding of this may be a little off. It may not fully fix the problem, it may fail if there is a complex DataType in the cell, which can't be cast to a String (I don't know off the top of my head if this is possible). As mentioned in my previous answer, Try...Catch is the way to go to make sure you're getting a valid value. 
Looks great, thanks so much! 
thank you so much
I've only worked with I2C and I2S communication streams. I haven't been told which comms type this uses but I know the device is an A2D converter which needs the FPGA to decode the signals it outputs. I'm dying to know more about it but they cannot tell me this until I officially start the project with the new department.
I don't see this comment in the thread but i see it here?!?
Visual Basic, or Visual Basic.NET?
You're welcome. :)
http://social.msdn.microsoft.com/Forums/en-US/csharpgeneral/thread/5b82c0b5-ecaf-40f2-a68a-c7c17c85414f Even better: http://support.microsoft.com/kb/316383
I haven't delved too deep into object/collision detection before but this seems to be what you are looking for. http://www.codeproject.com/Articles/15573/2D-Polygon-Collision-Detection
I'm studying it at school, and I use vb express 2010, and this book http://www.amazon.co.uk/Computing-Projects-Visual-Basic-NET-Level/dp/1903112915/ref=sr_1_6?ie=UTF8&amp;qid=1365632312&amp;sr=8-6&amp;keywords=vb.net
Research System.Net.Webclient and HTML Agility Pack. You are looking for the tags: &lt;p class="ellipsis"&gt; and &lt;p class="price"&gt;.
If you only want the price and not the retailer, then forget the first HTML tag. If you want a link you want the URL in the &lt;a href="URL"&gt; tag following either of the above HTML tags.
Thank you very much for helping me out! I'll give it a try, and then report back to you whenever I'm working on the project again!
This is a good reference for working between Java and C#: http://www.harding.edu/fmccown/java_csharp_comparison.html And here for C# to VB.NET: http://www.harding.edu/fmccown/vbnet_csharp_comparison.html Maybe not the best help, but I hope it will help. EDIT: These are just for Syntax, maybe not what you were after
Use the [modulo operator](http://msdn.microsoft.com/en-GB/library/se0w9esz%28v=vs.80%29.aspx). This gives the remainder when one number is divided by the other.
There's multiple ways, but the way you have it set up really wouldn't require a function. The calculate event runs the loops and adds to the listbox if there is no remainder (evenly divided). if total items in the listbox &gt; 2 then it's not prime. if you have to use a function, it could be nothing more than passing in the iterator and the value. checking it for remainder and returning the iterator upon success or -1 then retValue = Function(value, iterator) if retValue &lt;&gt; -1 then add it to the list. When complete, are there more than two entries in the list? if so, it isn't prime. 
Use a for loop, use an iterator variable. Inside that for loop, check if your number divided by the iterator variable has a remainder, if it doesn't, store the iterator somewhere (because the current value of the iterator is a factor of the number). 
On an algorithm optimization note, you actually would only need to try dividing by each number from 1 to half of the input number (input number/2).
in your first form: Dim frm2 as new SecondFormClassName(me) frm2.showDialog() in your second form: dim mymainForm as MainFormClassName public sub new(byval mainFrm as MainFormClassName) mymainForm = mainFrm end sub public sub calculateThings_Click(byval sender as object,byval e as eventArgs) handles calculateThings.Click 'Now you have access to anything on your main form through the mymainForm object mymainForm.listbox1.items.count end sub
Not a bug, but rather a feature. I think it is called a banker's round. Even whole numbers are rounded down and odd whole numbers are rounded up (from .5). [Wiki link](http://en.wikipedia.org/wiki/Rounding#Round_half_to_even)
 Sub Main() Console.WriteLine(Math.Round(4.5)) Console.WriteLine(Math.Round(5.5)) Console.WriteLine(Math.Round(4.5, MidpointRounding.AwayFromZero)) Console.WriteLine(Math.Round(5.5, MidpointRounding.AwayFromZero)) Console.ReadLine() End Sub Results: 4 6 5 6 Midpoint values and rounding conventions Rounding involves converting a numeric value with a specified precision to the nearest value with less precision. For example, you can use the Round(Double) method to round a value of 3.4 to 3.0, and the Round(Double, Int32) method to round a value of 3.579 to 3.58. In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers. For example, 3.47500 is a midpoint value if it is to be rounded two decimal places, and 7.500 is a midpoint value if it is to be rounded to an integer. In these cases, the nearest value can't be easily identified without a rounding convention. The Round method supports two rounding conventions for handling midpoint values: Rounding away from zero Midpoint values are rounded to the next number away from zero. For example, 3.75 rounds to 3.8, 3.85 rounds to 3.9, -3.75 rounds to -3.8, and -3.85 rounds to -3.9. This form of rounding is represented by the MidpointRounding.AwayFromZero enumeration member. Rounding away from zero is the most widely known form of rounding. Rounding to nearest, or banker's rounding Midpoint values are rounded to the nearest even number. For example, both 3.75 and 3.85 round to 3.8, and both -3.75 and -3.85 round to -3.8. This form of rounding is represented by the MidpointRounding.ToEven enumeration member. Rounding to nearest is the standard form of rounding used in financial and statistical operations. It conforms to IEEE Standard 754, section 4. When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction. In some cases, this rounding error can be significant. 
Thanks that's helped a lot, much appreciated :)
I feel like such a nerd that i already knew that. Good post.
Thanks! It ended up being the Create tables scripts in SQL were wrong.
I've also took the time to write a long-ass description, just read the bit you want to learn about, if the video wasn't informative enough...
Three things: The list of fonts in listbox1 are just strings. They are not fonts. They are the names of fonts. The list of sizes in listbox2 are not enums they are strings representing the enumeration options. The program will crash if there is nothing selected in both listboxes. So knowing that, the first thing you need to do before setting the RichTextBox font is capture the current size and current fontname so that you can ensure that there is a default setting for each argument (font, size) Since the font is a string, you will want to set the font property to a new font and pass that name to it. Let's set this up. 'Declare two variables Dim size As Integer Dim fontname As String 'If nothing is selected in listbox2 default to the current fonts size If ListBox2.SelectedIndex = -1 Then size = RichTextBox1.Font.Size 'Otherwise, we have to turn the string into an ENUM by casting it. Else 'we do this by passing the enum string (example "XL") using 'enum.Parse and get the result of that enums string value. size = DirectCast([Enum].Parse(GetType(MyEnum), ListBox2.SelectedItem.ToString), MyEnum) End If 'If we don't select anything in listbox1, we set fontname to the 'name of the current font in the RichTextBox If ListBox1.SelectedIndex = -1 Then fontname = RichTextBox1.Font.Name Else 'Otherwise, we set it to the name selected in the listbox fontname = ListBox1.SelectedItem.ToString End If 'From here, you are ready to pass those variables into the font RichTextBox1.Font = New Font(fontname, size) 
Ok, I understand and it works. I kind of understand the directcast function, can you explain it just so I can be sure? I'm not quite sure on the [enum].parse(). It would be much appreciated. 
from MSDN: Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object In other words, an enum is an object. You took the string "XL" which is a valid string in the enum and parsed it back into an ENUM. since XL was valid the parse was successful. If you were allowing user input to determine the string you would want to use [enum].TryParse instead which would return a boolean to let you know if the parse to the enum object was successful. If you look at other types, the same parsing applies. For example if you were to ask a user to enter a number you would more than likely prompt them with a textbox. The textbox's .Text property is where that numer is placed for you to use. However, it is not a number, it is a string that looks like a number. Say the user entered 10 .Text holds "10". Now you want to perform a calculation based on that input. dim value as integer = textbox1.Text under strict coding would produce an error but can be inferred into the integer behind the scenes. Let's pretend that you are coding with Option Strict On and Option Infer Off. To use that input you would need to try and parse the string "10" into an Integer. This can be achieved with the *type*.TryParse method. TextBox1.Text = "10" Dim value as Integer = 0 If Integer.TryParse(TextBox1.Text, value) Then result = value * 2 else msgbox("Invalid Entry") End If Now if the string "10" can be turned into 10 then the 10 is stored in value and true is returned. So it performs the calculation If however you were to type "10a" into the textbox you would receive a message informing you of invalid entry and the application wouldn't crash trying to calculate "10a" * 2 because since the tryparse failed, it returned false, skipping the calculation portion of the if block. 
 Label999.text = Form2.RadioButton1.Text
You can work out the Average since you already have the sum. All you would need is the count of the items in the listbox. with the max and min, you could sort the listbox and take the first index value for min and the last index value for max
What about using a linq query?
This is what I have for the btnSum: Dim intNumbers(lstOperations.Items.Count - 1) As Integer Dim sum As Integer 'Copy everything in the array For counter = 0 To lstOperations.Items.Count - 1 intNumbers(counter) = lstOperations.Items(counter) Next For counter = 0 To lstOperations.Items.Count - 1 sum += intNumbers(counter) Next lblSum.Text = sum.ToString I know how to do it I am just not sure what to change.
That is the website that has been the most helpful to me as well. Explains exactly what's going on with each function. Edit: I'm also new to VB
i'm not clear on what the challenge is. is it access controls on other forms? or reading which box is checked in a group? or do you have no control of the names and need to "detect" one using some condition that's not a name? 
yes, in SQL you have to update one table at a time. with mssql, you have an option of making a View and then making an "instead of" trigger on the view that will update each table one at a time. then you use the view for your dataset instead of the tables.
Not what I need, but thank you.
Well, you don't need that first line since you're accumulating the values of each item in the listbox into sum. It appears in your first For ... Loop, you know how to get the count of the items in the listbox. Average = sum / count Are there any rules to what you can use to do this? I ask because a Generic List(Of T) can perform all those functions you require. It would just be a matter of filling the List(Of T) from the listbox and then using the .Sum, .Average, .Min and .Max extension method functions of the list. 
couple options for that here http://stackoverflow.com/questions/6466952/how-to-get-a-checked-radio-button-in-a-groupbox. the fancy one-liner gives you a radiobutton object, from which you can get the name. the "old fashioned" way is a series of if's or a "select case true" and test each option, which has the advantage that you can do it in a function and return a value that isn't a property of the radiobutton.
so what happens if there is not 49 items in the listbox. You need to perform this calculation dynamically. You can just explicitly divide by a number when the list can grow or shrink in real time. Look closely at your code. The answer to the divisor is there. 
Yup I got it! I made it as Double instead of integer. Now i just need to find the min and max of the numbers
I use a generic function to send data to SQL, and another to get data. Here is my send function: Imports SQL = System.Data.SqlClient Public Shared Function sendSQLData(ByVal sqlCmd As String) As Integer Dim cmd As New SQL.SqlCommand() Dim cnn As New SQL.SqlConnection(&lt;YOUR CONNECTION STRING&gt;) With cmd .Connection = cnn .CommandText = sqlCmd .CommandType = CommandType.Text End With Dim numRows As Integer = 0 Using cnn ' using will close the object if anything fails. cnn.Open() ' need to open the connection when not using Fill numRows = cmd.ExecuteNonQuery() cnn.Close() ' need to close the connection when not using fill End Using Return numRows End Function Then you just call it like so: sendSQLData("UPDATE table SET column=value WHERE expression=expression") Edit - it can also return the amount of rows edited with something like dim numRowsAffected as Integer = sendSQLData("UPDATE table SET column=value WHERE expression=expression") 
example of what
thanks! I'll try that. 
I don't think this is doing too much ... For counter = 0 To lstOperations.Items.Count - 1 average = intNumbers(counter) / 49 Next 
The settings form would have to be opened to get the value of the radio button. An easy way for you to save settings is under the "settings" tab of your application properties. You can create variables here that can be accessed in your application. It also saves these settings from one run of the application to the next. You just declare the variable in the dropdowns there and access it with My.Settings.&lt;variable name&gt; and you can set it with a CheckChanged or a click event on your preference form.
The Type is not the issue. The issue is you're specifying 49 instead of the total number of items the sum is based off of. And actually a for loop from 0 to 49 is 50 iterations so your listbox contains 50 items. But... again, you do not divide from 49 or even 50, you divide by how ever many numbers are involved in achieving the sum. 
you can use a proxy, assuming you don't mind suffering whatever the consequence of breaking your AUP is. 
This might help.. http://msdn.microsoft.com/en-us/vstudio/bb688088.aspx 
What version of VB are you using?
When you fill your datatables, you need to give them a name. myDataAdapter.Fill(myDataSet, "Table1") myDataAdapter.Fill(myDataSet, "Table2") To save the information myDataAdapter.Update(myDataSet, "Table1") myDataAdapter.Update(myDataSet, "Table2") You can name Table1 and Table2 the same name as your table or you could just leave them Table1 and Table2, they are nothing more than names of the table you have given in the dataset. INSERT, UPDATE &amp; DELETE statements are applied to a single table 
2010
I'm not sure how you will be graded on this, whether it is results oriented, or they will be looking at the process, but I just want to caution you against using the 2 random numbers for ns or ew and another for dirrection. The problem pretyt clearly reads to me as asking you to choose a random number between one and four and choose a dirrection based upon that. I have been in classes where the results are all that mattered, but I have also been in others where the process, and following instructions is what will make the difference. I think this problem (like many) will probably lend itself extremely well to being broken down, as it seems like everything was jammed in together to make what is being asked less clear. (typical of how requirements come out in the real world BTW...). I personally like to start with the target output, and think about what I want to get to, then think about what I will need to be able to provide that information. There is nothing worse than getting through to the end and realizing you need to use a different structure to be able to track an extra metric you didn't realize you needed. This is more of a general nature, but a lot of programming is not the actual logic of code, but interpreting and pulling out the actual requirements imho.
Sort of. I've made progress. Ish. I've gotten the code to not throw an exception, but It's not reading the file correctly. The File it reads from has 4 numbers, first one is the amount of numbers to input. The next (3 in this case) are the grades. In my code, it imports 3 to the listbox, the first grade, and the next two as 0. I'll edit my code to what I have now.
Ah... Alright Edit: Reading my teachers handout, the input comes from the file. Not any dialog boxes or anything. 
Sure. You declare an array like a normal variable. For example dim gdblTest(9) as double this will create 10 iterations of gdblTest Then, for the addition part, you could use a for loop For value As Integer = 0 To 9 gdblDisplay=gdblDisplay+gdblTest(Value) next For the displaying of values less than 5.00 For value As Integer = 0 To 9 if gdblTest(value) &lt;5 then gdblDisplay= gdblDisplay &amp; gdblTest(Value) end if next And lastly for the average part For value As Integer = 0 To 9 gdblDisplay=gdblDisplay+gdblTest(Value) next gdblDisplay=gdblDisplay/10
homework much?
Atleast you get to use vb2010. I'm forced to use vb6. Only reason why it seem cool is control array.
It’s not that difficult to accomplish, however if you give me an idea of what you are struggling with, I’ll offer advice/guidance but like CharlieMay said, not attempting it would make the course harder. Can you upload the code you have so far? 
haha! That's a pretty solid idea, especially if you have nothing better to do. ;p Make sure to leave a few comments so the teacher instantly know he's a fraud! :P 
okay so today we were initiated into arrays in my class and I have a question for you. When you declare your array above, gdblTest(9), is the (9) representing the number of index values or the number of elements in the array. My teacher told us that if we wanted an array to have 10 items in it, that it should be declared as gdblTest(10) but I was thinking that that might be wrong. I know index value starts at 0 so 10 items would have the index range of 0-9 and that the declaration would be gdblTest(9). Can you tell me if that's correct?
Okay ya I don't think I'll need to prove it to my teacher as shes not the kind of person to think that just cuz shes a teacher she can't be wrong but thank you for affirming this :). She normally uses java so I'm not sure if she was just confused or what but thanks for clearing it up 
Not 100% sure but I think in java arrays start at 1 so in that sense she would be correct based on her knowledge of arrays coming from java rules. 
Thank you!
and above: Dim Checkpoint1 As New Point 
How are you interfacing with the database? 
Basing on what you said, you could use the String.Split method using the : as the split delimiter. Remember, a string is nothing more than an array of characters itself. The following example would split a string based on a delimiter of : TextString= "able:baker" Dim SplitResults() = TextString.Split(":"c) MsgBox(SplitResult(0)) 'would display able. MsgBox(SplitResult(1)) 'would display baker As I sad before, a string is an Array of characters so you can also loop through the string and check each element of it. For x as integer = 0 to TextString.Length -1 if TextString(x) = ":" then 'React to finding a colon end if Next Or from the result of the split For x as integer = 0 to SplitResults(0).Length -1 'Checking each character of "able" Select Case SplitResults(0)(x) 'the 0 being the element of the array and x being the element of that string. Case "@"c 'react Case "#"c 'react 'Keep adding cases. 'You can also do Case "("c, ")"c, "&amp;"c, "^"c 'react Case Else MsgBox("Only Letters Found") End Select Next
See [this post](http://www.reddit.com/r/visualbasic/comments/1cazrp/help_with_updating_multiple_tables_in_a_database/) This is a duplicate post, the OP's initial post has more responses.
Median is the sum of each end of the list divided by two. Average is the sum of the list divided by the number of items in the list. I think you're confusing the two.
OH sorry. it was a tmr at interval=1. A friend helped me in class today. I had to move EVERYTHING on the form to meet the player.
 Private Function GetMedian(values() As Double) As Double ' assumes values are sorted from smallest to largest Dim halfIndex As Integer = values.Count \ 2 Dim result As Double If (values.Count Mod 2 = 0) Then result = (values.ElementAt(halfIndex) + values.ElementAt(halfIndex - 1)) / 2 Else result = values.ElementAt(halfIndex) End If Return result End Function
How are you sorting the listbox? Numbers in listboxes are handled as strings when sorted using Sorted = True. Therefore a list containing 1, 21, 20, 2, 31, 11, 3, 4 would sort to: 1, 11, 2, 20, 21, 3, 31, 4 
Good point. I didn't consider what his array might look like. I did it like this, although LINQ is probably not covered in his class yet: Dim enteredValues() As Double = Me.ListBox1.Items.Cast(Of String)() _ .Select(Function(x) Double.Parse(x)) _ .OrderBy(Function(x) x).ToArray() 
Actually, that was directed toward the OP, I figured you were basing your instructions on a properly ordered list ;)
How can I use this function? 
output box ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ A first chance exception of type 'System.InvalidCastException' occurred in Microsoft.VisualBasic.dll
thanks
Build an array of doubles from the values in your listbox, make sure they're sorted numerically, not alphabetically, from smallest to largest, and pass the array into the function. The return result is the median.
How about adding values.Sort to the first line of the function to make sure they are sorted.
Are you talking about an insertion sort?
The original array is modified, though, and that's a bad habit to get into. (Arrays are a reference type.) You should either pre-sort the array, or have the function sort a deep copy of the original array.
I really like this [site](http://channel9.msdn.com/Series/Visual-Basic-Development-for-Absolute-Beginners) Also, most of the site links in the right side panel have tutorials for specific topics. 
Help me out a little. If I pass the array ByVal, then it still can be modified because it is a reference type. In other words, the ByVal does not ByVal arrays. So in the function, I could deep copy it to a new array, then sort it. Both Array.Clone and Array.Copy do shallow copies. I would need to create a new array and loop through the elements setting them to the new array one at a time.
You could also use a generic DeepCopy method like the one Jon Skeet wrote here: http://stackoverflow.com/questions/2744750/generic-method-to-create-deep-copy-of-all-elements-in-a-collection 
Funny, that wasn't in the title...
I'm only speaking for myself but the title made it perfectly clear he is currently a VB developer and wanting a resource strictly for people migrating from classic VB over to .NET. This question gets asked all the time all over the Internet.
I remember being in this exact situation and looking for the exact same resources when I was moving from VB6 to .NET. I never ended up making the switch because I just didn't like .NET at all but that's just personal preference. I wish they could take the GUI designer and use it for a VB 7.0 without the .NET framework because the UI development/controls/etc. are great. Anyway, I never found an article strictly like "Everything you need to know when switching from VB6 to VB.NET" but I'm sure a couple are out there and there's probably even some books, have you checked Amazon.com? There are *so many* changes not just to the language but to the platform (the .NET framework) that such a tutorial would be so big you might as well just learn VB.NET from the ground-up... With all of that said and out of the way... these links might be useful: * [Moving from VB6 to VB.NET](http://pluralsight.com/training/Courses/TableOfContents/vb6-to-vbdotnet-fundamentals) [From a glance, this looks like the best by far because it looks like it's entirely focused on moving from VB6 to .NET] * [A thread with links discussing better automatic migration tools from VB6 code to VB.NET other than Visual Studio's built-in one](http://stackoverflow.com/a/684932) * [10 Things to Avoid When Moving From VB6 to VB.NET](http://vbnotebookfor.net/2007/08/07/10-things-to-avoid-when-moving-from-vb6-to-vbnet/) * [How To Prepare Yourself For Moving From VB6 To VB.NET](http://www.devx.com/vb2themax/Article/19874) * [VB.NET Tutorials](http://www.vb6.us/vb-net-tutorials) [Tutorials aimed towards people that are going from VB6 to .NET] * [Mini-Tutorial: VB6 -&gt; VB.NET introduction](http://www.vbforums.com/showthread.php?389341-Mini-Tutorial-VB6-gt-VB.NET-introduction) [This might not be worth reading especially with the other material] I only skimmed some of the links but I hope some of them are useful. If you need more help or also some specific help then let us know. :) This is a (**very** popular) question where a Google search will get you far. :)
Brilliant, thanks for the detail. my google-fu let me down, though i did last search a long time ago. 
Have you done any SQL stuff? In my intro to DB programming course I made a program that automatically schedules hockey tournaments - round robins, single and double elimination. You could do it without SQL, storing it into arrays, but you would need to save the tournaments to a file somehow. If you want to attempt SQL let me know and I can give you the functions I use to access SQL which makes it a lot easier. 
Or you can just type it in at the top of your class - Option Strict On
You can use File.ReadAllLines to load a file into an array: Dim array As String = System.IO.File.ReadAllLines("C:\textfile.txt") Then you'll just have to loop through the array and write the info to the textbox.
I agree, use the ReadAllLines method to populate the array Then set your textbox to MultiLine = true and you can then use TextBox1.Lines() = Array() 
Try using the File.WriteAllText method (in the System.IO namespace), see if that works any better than a streamwriter. File.WriteAllText(RichTextBox1.Text, "C:\Quotes.txt")
Unfortunately it doesn't seem to - errors with: An unhandled exception of type 'System.ArgumentException' occurred in mscorlib.dll Additional information: Illegal characters in path. ~~Edit: Having taken a look i had the syntax wrong on the call to writealltext. However, with it working it still only shows up as a "" in the written file. Thanks for trying though ~~ Edit 2: Actually it worked perfectly, i was just too dumb to notice xD Thank you so much :)
Well I don't know if it is the best idea in the world, you could take the contents of the text box as a string, use a .split on the vbcrlf character (or just the VBCR or VBLF characters, i dont remember what the exact char in a rich text box is) and then use a for each loop on the resulting array and use the file.writeline method to write a line for each element.
Try chr(10)
No problem, and thanks for the gold :) I personally can't stand streamwriters and readers and always advocate the use of the File class methods instead. The syntax is much cleaner, and all the memory and filesystem communication is handled behind the scenes, so there's no opening, closing, and flushing needed. 
Thanks
B, the names of the arguments and correct parameters must respond They don't have to be the same names, but they have to be the same number, order, and types.
what about vbNewLine?
Youtube search "VB encryption"
In an array, empty elements are not filled with 0, as that is a value. They are filled with nothing. How is your array being filled? Instead of this method, I'd use some sort of counter. Every time you fill an element increase your counter by 1, but if you don't fill an element don't increase your counter.
You're right - the counter works, but as you said, it shouldn't have 0 in the value. Thanks! 
dim result = (From item in YourArray Where item &gt; 0 Select item).count 
I use vb 2010 express
 Dim integerTest(9) As Integer Console.WriteLine(integerTest(0)) //Outputs 0.
**Also, if you want to help me with this one too, that'd be great:** Which of the following procedure declarations matches the call to the IsLetter procedure below? Dim strText as String = txtInput.Text Dim blnLEtter as Boolean = IsLetter(strText) A) Sub IsLetter(ByVal strInput as String) as Boolean B) Sub IsLetter(ByVal blnResult as Boolean) as String C) Function IsLetter(ByVal strInput as String) as Boolean D) Function IsLetter(ByVal blnResult as Boolean) as String
 Sub GetANumber(ByVal intNumber as Integer) This means you call it with a SINGLE input parameter. `C) GetANumber(intX + 3, intY)` has TWO input parameters. The second question accepts an string as an input (`IsLetter(txtInput.text)`) and outputs a boolean... String in, Boolean result out. Functions return something, sub doesn't so: C) Function IsLetter(ByVal strInput as String) as Boolean 
Ahhh, I see. So both answers are C?
Yes, both answers are C for the reasons wernercd gave.
that doesn't sound very hard at all :) ' Don't forget the Imports System.IO line ;-} ' ' Procedure: Dim Str As System.IO.Stream Dim srRead As System.IO.StreamReader Try ' make a Web request Dim req As System.Net.WebRequest = System.Net.WebRequest.Create("http://www.example.com/page.html") Dim resp As System.Net.WebResponse = req.GetResponse StR = resp.GetResponseStream srRead = New System.IO.StreamReader(Str) ' read all the text RichTextBox1.Text = srRead.ReadToEnd Catch ex As Exception RichTextBox1.Text = "Unable to download content" Finally ' Close Stream and StreamReader when done srRead.Close() Str.Close() End Try if you need to read the xml and use the data contained in it don't forget you can use the ReadXML method of the DataSet class. Dim ds as new Data.Dataset ds.ReadXML(fileLoc) You can then inspect the tables by dropping a break point on the ReadXML line and hovering over ds. 
I've tried that and I still get the same error for some reason
After you send the mail, make sure you clear all attachments on your instance of the mail object. That should do it.
your solution was better than the one I used. I had one count rather than 2, then just wrote more iterations for each column. I could not get both counters to work, because i did not want the first row included. I see no reason why it wouldn't.
maybe your smtp library isn't closing the file? maybe someone else has it open over the network? does fileDestination hold the path and filename or just the path? the manual implies that it should have the filename, based on the examples. try using http://technet.microsoft.com/en-us/sysinternals/bb896645 to see what's holding onto it. if it's on a file server, run this on the server too. if it's a samba server, use smbstatus from the server's command line/ssh. 
It sounds like something in the try is breaking and causing it to hit the catch then finally before srRead is being declared. You can remove everything from the try catch and see what errors then: Dim Str As System.IO.Stream Dim srRead As System.IO.StreamReader ' make a Web request Dim req As System.Net.WebRequest = System.Net.WebRequest.Create("http://www.example.com/page.html") Dim resp As System.Net.WebResponse = req.GetResponse StR = resp.GetResponseStream srRead = New System.IO.StreamReader(Str) ' read all the text RichTextBox1.Text = srRead.ReadToEnd ' Close Stream and StreamReader when done srRead.Close() Str.Close() You can also click the first line of this code in visual studio and hit f9 to create a breakpoint then step through the code and see where your error is happening. Something is happening before the error that you sent me and that's what we need to fix. 
Marshal the objects created by the SMTP class. The objects tend to keep the files open in memory till the application debugger is cleaned from memory. http://msdn.microsoft.com/en-us/library/system.runtime.interopservices.marshal.aspx Simple Example: Try using a Try-Catch-Finally block. In the Finally block, marshal the objects and once it exits that Try-Catch block, have yet another Try-Catch block that follows and do the file move operations in the scope of that block. finally { if (mail != null) Marshal.ReleaseComObject(mail); } Try that. It should help. 
If the image is in your project resources you should be able to use this code. pictureBox1.Image = Properties.Resources.[image file name] if not then you can use Dim appPath as string = System.AppDomain.CurrentDomain.BaseDirectory 
there are multiple ways to do it, I don't know how you are trying to do it. I would do Dim appPath as string = System.AppDomain.CurrentDomain.BaseDirectory me.backgroundImage = appPath &amp; "Resources\image.png" Small chance it has to be "\resources\image.png" instead but yea that should do it
Just in case you don't understand what this means here is an example dim AppleCount as integer = 500 dim OrangeCount as integer = 100 public sub new() 'In these two cases the name of the arguments being passed do not have to 'match the name of the parameters declared in the procedure. 'They have to be the same type because it is looking for an integer (number) if we passed it 'a Boolean (true/false) it might not be happy with that since that's not what it is looking for. 'The order of the arguments is important because if you had a function that subtracted one thing 'from the other you wouldn't want to swap which thing was getting subtracted from. OrangeCount = getCountMinusOne(OrangeCount) AppleCount = getCountMinusOne(AppleCount) end sub private Function getCountMinusOne(byval count as integer) as integer count = count - 1 return count End Function Not the greatest example but I figured maybe it would give you some perspective on why the answer is correct instead of just letting you know B is the correct answer to problem 23.
Sounds like you should just use Excel. 
I agree. You could use Excel to perform those actions. If you're still insistent, you could use the BULK INSERT action to get your CSV file imported. Here's an example: -- Delete/Truncate Table DELETE FROM CSVFile -- Insert fresh new data BULK INSERT CSVFile FROM 'C:\Temp\TextCSV.txt' WITH ( FIELDTERMINATOR = ',', ROWTERMINATOR = '\n' ) GO That should get the data into the SQL table. Once you're done with that, you could simply pull all the info from the SQL table into the DataGridView on your VB.NET form. You could execute the above SQL through VB.NET as well.. So you don't have to hop onto SQL Server Management Studio to run that code. Hope that makes sense?
Would probably be easiest with an array. Assign the values based on the position of the item in the control. Used the selectedindex to pull the value from the array. 
keep in mind that the 'C:\Temp\TextCSV.txt' path is from the sql server's perspective, so if your db is on a remote host you'll need to upload the file to it first, or use a shared UNC path if the sql server is running under an account that can access shares (it can't by default). If this isn't possible for whatever reason, you'll have to parse the cvs and generate SQL inserts. it's as tedious as it sounds. maybe you can bind a datagrid to your table and parse the cvs into the datagrid, might be easier.
What have you tried so far?
Awesome, thank you! 
 Since you mention averaging, I am going to guess that your process is something like this. You have a 2D array. That is an array (X,Y) where X and Y is the size of the room. Some spot in this 2D array is the hot fireplace, the walls are the outside edges of the array, and held at a fixed temperature. Now, make 2 arrays, one for the old values, O(X,Y) and one for the new values. NewTemp(X,Y) You start by setting the temperature values for the outside walls, and use that formula for the one south wall 'east and west for j = 0 to Y O(0,j)= initial value for the wall O(X,j) = initial value for the wall next 'north and south For i = 0 to X O(i,0)=initial value O(i,Y)= (here is where you plug in that formula) next You run a simulation until the values settle down. O() is the Old temperature array) do clear flag for i = 1 to X -1 : the -1 is to prevent array bounds errors for J = 1 to Y -1 newTemp(i,j) =( O(i,j) + O(i-1,j) + O(i+1,j) + O(i,j-1) +O(i,j+1)) /5 :rem we are averaging over 5 spaces (set a flag to true if the newtemp(i,j) is different than the O(i,j) if flag is true, then continue loop next next (copy newTemp() array to O() array.) loop when flag is true You may need to make sure that this will settle down to a state where the values don't change and the program can exit. your flag comparison may need to be not coded as newTemp(i,j) &lt;&gt; O(i,j) but that the difference is smaller than a set value abs( newTemp(i,j)-O(i,j)) &lt; .0001 or something like that. I am guessing that this is what your professor wants, but I don't know It might be cool if at each loop you updated a grid of points with a color corresponding to temperature. 
Just tell us what it is here. I don't have much to do today. I can probably knock it out before lunch
When you say simulation, do you mean you want to show an actual animation of items being sent from one dock to another? If not, then I can do this for you. But I'll need more information.
I'm trying my hand at it right now but again lol I am not generally even one to code so this is really out of my element. Thank you for taking the time to message me I do really appreciate it. 
Alright, that sounds good I can get on skype or something if you would like to talk if that makes things easier.
I'm going to assume this is a homework assignment and is probably out of the scope of creating an object and using the object to house the various properties of information. If it is, and I'm correct, you would probably want to set up a select case based on the text selected and setting the variables to the proper values. There is a [similar question](http://www.reddit.com/r/visualbasic/comments/1ancun/having_trouble_adding_multiple_items_from_one/) further down based on this same requirement. If however, this is something you're doing to learn techniques. Then I would suggest you create a class that has properties to hold the various information, override the .ToString method to show the product you want to add to the cart and then put the entire object into the listbox. Then from there, you would always have all the information on that selected object. When adding the object to the cart, you could either reference the listbox from the form (frm2.lstCart.Items.add(Product)) or pass the product to a collection property on the other form that the list populates itself from.
Oh and there a few things i have commented out, they aren't commented, so ya.
I'll be honest, I didn't read all of it. I'm tired as hell and I don't have a clue if this will work, but it's worth a shot, I guess. About the "being used by another process" thing, try making your program a standalone executable (or whatever the hell it's called), closing VB and ending any processes that are still running. Good luck.
I'm going to guess those over abundant uses of Public streamreader and streamwriter declarations are keeping the file open since the scope of the declaration is keeping it alive. First, only use the streamreader/writers when you need them. Get the information, put it somewhere and close it. A Using statement is ideal for these as they dispose of the reader/writer automatically when they're done. Using txtFile as new IO.StreamWriter("Endangered.txt") 'this will create a file 'save the items 'Only, instead of prompting see below for how I would do this. End Using Using txtFile2 as New IO.StreamReader("Endagered.txt") 'this will read a file. 'read the stream and store the info End Using You might want to ensure that the file exists prior to trying to read it. Also, it appears you're currently trying to close them based on a user clicking a menu, this is a bad practice as the user may not. Saving: You are putting the information into listboxes as I understand it. Why not let the user input the information. Store them to the listbox and then when the user is done and clicks save you can loop through the items in the listbox and store the .Item(index) to the file? 'Prompt User for Animal Name 'Prompt User for Scientific Name 'If both are entered 'Add to lstEndangered the Animal Name 'Add to lstScientificName the Scientific Name 'The indexes are the same for both listboxes so lstEndangered.Item(0) would be the name for lstScientificName.Item(0) 'After the user is done. They would click the Save button. 'In the Save button click event. Using sw as New io.StreamWriter("Endangered.txt") For i as Integer = 0 to lstEndangered.Items.Count -1 sw.WriteLine(lstEndangered.Items(i) &amp; ", " &amp; lstScientific.Items(i) Next End Using this would write a textfile with Name of animal, scientific name of animal ... Then when you read it. You would use .Split(",") to populate an array holding the name at element 0 and the scientific name at element 1 If Not IO.File.Exists("Endangered.txt") MsgBox("File Not Found") Else Using sr as new IO.StreamReader("Endangered.txt") While not sr.EndOfStream Dim currentLine() as string = sr.ReadLine.Split(","c) lstEndangered.items.add(currentline(0)) lstScientific.Items.Add(currentLine(1)) End While End Using End If 
So did you manage to get it to work? 
No problem. Let me know if it works.
[GIMP](http://www.gimp.org) can export to the Microsoft Icon format, in 5 different color depths, with or without compression. You can draw whatever you like as an icon at the higher resolutions, then down sample it to the lower resolutions. Refer to [this page from Microsoft](http://msdn.microsoft.com/en-us/library/a6k41w66%28v=vs.110%29.aspx) for more details on sizing. Once you've created your icons in at least the 32 &amp; 16 sizes (with 96, 64 &amp; 48 optional), you're ready to import them into your project.
 Public strFileReader As String Public sreStreamReader As IO.StreamReader Public swrStreamWriter As IO.StreamWriter Public strNames(9) As String Public strFacts(9) As String Public TxtFile As IO.StreamWriter = IO.File.CreateText("endangered.txt") Public TxtFile2 As String = My.Computer.FileSystem.ReadAllText("endangered.txt") 'Public Forlstbx As String() = TxtFile2.Split(vbNewLine) This blob that I can't really read needs some streamreader.close() / streamreader.dispose() method calls
Do this. Reddit formatting of code requires four spaces at the start of each line. Resubmit your code with the four spaces in front of each line so we can see what is really going on. there are several issues with the code above. Is this your actual code or is it retyped? Make sure to use Option Explicit, or Option Strict at the top of the module I don't see the code I suggested. Was my algorithm not even close? If so, please explain your algorithm. What is ActiveCell? and why do they take values of "i" and "j"? Where do you get your variables from? What is this? t(i, j) = (1 / 4) * (i - 1) + (j - 1) + (j + 1) + (i + 1) Do you see how this differs from what I suggested? How do you output? 
thanks so much
Awesome, thank you!
several of the dating sites have a "just friends" kind of feature....
I'm a .NET programmer myself and I've been looking for collaborative projects that I could work on to expand my skillset. This idea you talk about sounds promising (in terms of functionality) and if you're willing, I would love to work with you on this. Let me know your thoughts. Thanks!
VB3? Do you mean VB6?
Not a typo, I need Quickpak for VB3.
Wow. Well good luck as there's a slim-to-none chance of anyone actually having it. What are you maintaining that's still in VB3?
Each row in the DGV will be representing the exact row order in your table that you derived the data from (unless you change the ordering by using ORDER BY or something similar). So, you can use the row numbers as unique identifiers for each row in the table and when you hit the button, you can match each record against the database and see if anything has changed. If it has, then run an UPDATE statement to hit that record and update any changes. Hope this 10,000 feet view helps you understand? If not let me know, I can probably help you write the code. :)
You could also go down a simpler route.. Have you tried binding the data to the DGV instead? When you bind the control to the table, it basically IS the table itself. Here's a MSDN link that could help: http://msdn.microsoft.com/en-us/library/fbk67b6z.aspx?cs-save-lang=1&amp;cs-lang=vb#code-snippet-3 Have fun! :)
I like the data binding idea. However since it is new to me I may need help getting it to work. I have input the demo and changed the information that it told me to change to match what I need but it did not load the table at form load and both buttons return "Object reference not set to an instance of an object." I am not sure where to go from here.
You're going to get a bunch of people warning you about SQL injection with the example you provided. I use a generic subroutine at work that takes parameters you supply and fills a datagridview with the results. It uses a dataset as well because I always include a search function for the datagridview, and it uses the dataset. The generic code I use is: ' Create a list to hold the parameter/value pairs Public Class Params Public sName As String Public sText As String Public Sub New(sname As String, stext As String) Me.sName = sname Me.sText = stext End Sub End Class Public ParamList As New List(Of Params) Public ParamQuery As New StringBuilder ' Generic string variable to hold query strings Public Sub DataGrid_Fill(ByVal cnString As String, ByRef myDataGrid As DataGridView, ByRef myDataSet As DataSet) ' Loads SQL data into a dataset, then adds it to a datagridview ' Datagridview connection variables Dim Conn As SqlConnection Dim Command As SqlCommand Dim Adapter As New SqlDataAdapter Conn = New SqlConnection(cnString) myDataSet.Clear() myDataGrid.DataSource = Nothing myDataGrid.Columns.Clear() Try Conn.Open() Command = New SqlCommand(ParamQuery.ToString, Conn) For Each Param As Params In ParamList Command.Parameters.Add(New SqlParameter(Param.sName, Param.sText)) Next Adapter.SelectCommand = Command myDataSet.Clear() Adapter.Fill(myDataSet) Conn.Close() Adapter.Dispose() Command.Dispose() Catch ex As Exception MessageBox.Show("Cannot open connection!" &amp; vbCrLf &amp; ex.Message &amp; vbCrLf &amp; ParamQuery.ToString, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error, MessageBoxDefaultButton.Button1) End Try ' Clear any existing databinding on the datagridview control myDataGrid.DataSource = Nothing myDataGrid.Columns.Clear() myDataGrid.DataSource = myDataSet.Tables(0) myDataGrid.Visible = True ' Reset the array for the next use ParamList.Clear() ParamQuery.Clear() End Sub To use it in your program, you would do something like Dim dsSales As New DataSet ParamList.Add(New Params("@upc", lMia.ToString)) ParamQuery.Append("select location, sum(qty) as qty, price from tbl_regitems, tbl_regshifts where (tbl_regitems.shift = tbl_regshifts.guid) and (convert(datetime, tbl_regshifts.sdatetime,101) between '1/1/12' and '12/31/12') and upc = @upc group by location, price order by location, price") DataGrid_Fill(cnString_Inventory, DataGridView2, dsSales) ParamList.Add(New Params("@Item", txtDescription.text)) ParamList.Add(New Params("@Color", txtColor.text)) ParamList.Add(New Params("@Size", txtSize.text)) ParamQuery.Append("Select * From Stock where (Description like @Item ) and (Color like @Color) and (Size like @Size)") Dim dsData as New Dataset Datagrid.Fill(ConnectionString, Datagridview1, dsData) It's a bunch of code to load data into a datagrid, but it's reusable and generic so you can use it anywhere, and it uses parameters so you'll avoid SQL injection problems. To fill a datagridview on a different form, just pass the name of whatever grid it is (form2.datagridview1 or whatever). 
By the way, if you decide to use something like that, here's the search function I mentioned that would go along with the same code. It uses whatever dataset you created when you filled the datagrid (in the above example, it was dsData1). You could create a textbox, then use a textchanged event to make a real-time search by doing something like Datagrid_Search(Datagridview1, dsData1, textbox1.text) Here's the search subroutine: Public Sub DataGrid_Search(ByRef myDataGrid As DataGridView, ByVal myDataset As DataSet, ByVal sSearchString As String) Dim bKeep As Boolean Dim dsSearch As DataSet = myDataset.Copy() 'Parse the dataset and remove any records that don't match the search term If sSearchString.ToString = "Search" Then sSearchString = "" End If For i As Integer = 0 To dsSearch.Tables(0).Rows.Count - 1 bKeep = False For x As Integer = 0 To dsSearch.Tables(0).Columns.Count - 1 'Code to process record If dsSearch.Tables(0).Rows(i).Item(x).ToString.Trim.ToUpper.Contains(sSearchString.Trim.ToUpper) Then bKeep = True End If Next If bKeep = False Then dsSearch.Tables(0).Rows(i).Delete() End If Next myDataGrid.DataSource = dsSearch.Tables(0) myDataGrid.Visible = True End Sub 
Did you try going through the tutorial given on the MSDN website link I gave you earlier? They explain how it works. :) If you still feel lost, let me know..
You could also declare the DataAdapter and DataSet in a wider scope and use the commandbuilder to update. Dim cb as new ODBCCommandBuilder(DataAdapter) DataAdapter.Update(Dataset1) Now as long as all fields are valid field names in your database, this should save the the changes.
Can I just ask what the sName and sText would be? I can't seem to find them anywhere in the code you supplied
Sname is the name you want to give the parameter, and sText is the value for the parameter. If you add a parameter, for example: ParamList.Add(New Params("@Color", txtColor.text)) then sname = @Color and sText = txtColor.text
this might help some. Sub dosomething() Dim x x = Range("B65").Value Sheets("Act_I").Select For i = x To 65 Range("B67").Value = i Range("I67").Activate ActiveCell.Copy Cells(46 + i - x, 10).Select Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _ :=False, Transpose:=False Application.CutCopyMode = False Next i For i = x To 65 Range("B67").Value = i Range("I67").Activate ActiveCell.Copy Cells(46 + i - x, 8).Select Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _ :=False, Transpose:=False Application.CutCopyMode = False Next i Range("B67").Value = 50 For i = x To 50 Cells(46 + i - x, 8).Value = Range("I67").Value / (1.07 ^ (50 - i)) Next i Range("B67").Value = x End Sub it basically looks like it's copying a value from I67 and pasting it all over the place. and then at the end. it does come calculations. 
not being formatted, that's for sure
I edited my post. Am I not merciful?
well done. why not step through it line by line in a code window, watch what happens and understand it that way?
I don't remember how, but you can add each line from .txt as new string in array. After you import like that, you can do: for i as integer = 0 to len(stringArray) richtextbox1.text += stringArray(i) + Enviroment.NewLine end for
 Window.Items.AddRange(filereader.split(CChar(Environment.Newline))) See if that is what you're looking for.
That function would be `File.ReadAllLines()`
Omg schools are teaching vb?!? :-) 
haha not highschool but freshman college :) in highschool I did have a couple different entry lvl programming classes(python, scratch, and alice) but nothing to big :)
I was surprised colleges are. Nearly every college I've heard about is on the java/c++ learning track 
Mine teaches both, Like if you go into a computer sciences degree then your entry lvl programming is with java/c++ but for the Information tech. and information systems degree paths we focus more on basic. I'm not really sure why we do it that way but I like it :) I've been told the languages are somewhat simmilar(syntax wise) so i'm looking forward to learning the other 2
I guess I've noticed this too. If you got a cs degree with an it minor the it minor courses would usually be about building aplications in vb. The software engineering students never got exposed to vb. Personally, I've always found vb a bit wordy because of starting with the other two (but have since needed to pick up vb for certain projects). However, I also think a little variety is good and I don't really buy java being a "best" first language. I'm not sure why it is partitioned this way in universities. I wouldn't say c#, Java or vb is especially easier to learn than the other. Maybe it's just inertia in the field at this point. 
who knows :) either way its fun to learn :) and what do you mean that vb seems wordy i haven't really looked at the other languages but are they more condensed or something?
Hey, thanks, I tried this, but it doesn't seem to be working. When I output the individual node.InnerHTML I get the content but then when trying to read node.FirstChild nothing is being outputted.
could you show a bit more of the code in the backend so we can see what you're trying to do?
Nevermind, I got it to work. Thanks for your help!
Was taught vb at high school and college, finding apprenticeships is hard as all the ones I find want C#, might have been a few years wasted methinks.
This looks an awful lot like homework! So I'm not gonna tell you the answer. What I *will* tell you, however, is the difference between the two constructs. The construct Do Until Condition SomeCode() Loop will **evaluate the condition first**. If the condition is false, it will execute its code and then loop back to the condition ; if it is true, it exists the loop *without executing its code*. In the second construct, Do SomeCode() Loop Until Condition the **code gets executed first**. After its execution, the condition is checked. If it is false, the loop goes back to the beginning ; otherwise, it just exits. If something's still not clear, do not hesitate to post again.
I've never played a game that would have me press shift so much it triggered sticky keys. I think you need to re-think your design.
Just a minor correction: &gt;If the condition is ~~true~~ **false**, it will execute its code and then loop back to the condition ; if it is ~~false~~ **true**, it exists the loop without executing its code. I'm confident you knew that and just got things backwards. But for a visual example for OP: Do Until 1 = 1 SomeCode() Loop 1 = 1 obviously evaluates to true, therefore the break condition is met and the loop never executes. A simple way to break it down, OP, is that a Do loop is guaranteed to execute at least once (barring exceptions being encountered, but that's beyond the scope of this explanation), whereas a Do Until loop *may never execute at all if the break condition is true to begin with*.
WOW, talk about being a grade A idiot! You're right, of course, I'll edit my post so OP doesn't get confused.
Yeah, it was a question that I couldn't figure out. I eventually did, though! The answer was 'D' or 'The first loop will never execute while the second is an infinite loop'. Thanks for explaining it much better than the book did, though!
I'd assume he's probably using a Dataset. 
First, the food structure does not have name_str and abrv_str so you should be receiving errors there. I'm going to assume that's a typo. You have multiple options but I would recommend a for...each statement that will allow you to loop through the elements and search on each element by the structures fields that you've specified. For each itm as food in statearray If itm.food_name = .......... then 'do something keeping in mind 'itm is of type food so you also 'have access to the other fields in 'food. (ie, food_cost) End If Next Also I would like to point out that when comparing strings, case matters. "Salad" &lt;&gt; "salad". The .ToUpper or .ToLower methods should help you ensure that you're comparing the same thing on both sides of the comparison.
and if this ins't home work, and if you're using .Net, I would strongly advise you to look into dictionaries. 
When you look at your solution explorer, is there a copy of your database in that list? If so, you have created a Local database which when the program is ran in the IDE, will copy a template of your database to the \bin\debug file alongside your executable. This is by design for when you want to install to a new machine, a copy of the database will install alongside the executable. To disable this, click once on the database in the solution explorer, in your properties window, you should find CopyToOutputDirectory. Set this to CopyIfNewer or NeverCopy. and see if that resolves your problem. Just remember, if you change the database from inside the IDE, you will have to manually copy the database that resides in the solution folder to your bin\debug\ folder to see the changes.
Glad to help. Also, I noticed you said Selected. As in a listbox? If so, here's something that will help you tremendously. Override the toString method in the structure to display food_name Structure food Dim food_name As String Dim food_cost As Decimal Public Overrides Function ToString() As String Return food_name End Function End Structure Then in your form_load, you can fill your listbox with: For Each item as Food In StateArray ListBox1.Items.Add(item) 'add the actual structure to the listbox Next Now notice that Soup and Salad, and of course whatever else you had in the array are added to the listbox. But, invisible to the user you have also added food_cost because you actually just added that entire structure but told the structure to only display the name. So what can we do with that. Well, in the selectedindexchange of the listbox we can use the selectedItem and cast it back to its actual type (food) Double-click the listbox and in the SelectedIndexChanged event place the following code: MessageBox.Show(CType(ListBox1.SelectedItem, food).food_cost.ToString) Now when you click on an item in the list, it should pop up a messagebox displaying the cost of that item you selected. Of course, I just used a messagebox, you could display it in a textbox or some other gui element. How did that work? Well, the listbox can be filled with most any type. However, that type becomes an Item which doesn't really know what structure it contains. So we use CType or DirectCast to cast it to a type. In this case your type you created in your structure Type: Food We can use CType because we know we only filled the listbox with your structure called food So, Cast the selecteditem back to the food structure, which in turn now exposes the fields of the structure. If you type in the Ctype line, you will notice when you type the . after the closing paranthesis, you will see the food_name and food_type fields since the intellisense now knows what type you are dealing with. Just thought I would add that so that you can use that structure to its fullest potential. 
Convert the string to integer and do the math. NBD.
Thats what I would normally do, but the second button doesn't want to recognize the variables in the listbox. I'll fiddle with the integers some more, but since the second button is reliant on what the first button puts into the box I think I'm making a problem along that line.
It is appreciated though
Thank you, will look into it
C++ and Java are in no way similar to VB.NET. Java will be similar in terms of garbage collection being done for you but C++ will be ultimately more complex 
If you're experienced in VB, then learning C# will be extremely easy. 
ya i expected super difficulty on c++ but i heard that java was somewhat similar to vb, in syntax and command wording at least. is that not right?
Not really. Java has a C-style syntax, VB, not so much. Look up some examples of Java code and you'll be able to get an idea
"UPDATE * From Stock" is not valid SQL - what are you hoping to accomplish with that command?
No prob. Kinda sucks that part of the assignment (adding handlers to a subprocedure) was not something that was covered over the course. Meh.
I've been told it's supposed to save changes to the database from the dataset, from your reaction I'm guessing my sources are wrong.
Here's a sample someone posted http://bytes.com/topic/visual-basic-net/answers/475399-get-memory-usage-my-program
There may be another way, but I would just go to the directory you saved it in and make a copy of it there.
Glad I could help!
 FileDialog.InitialDirectory = "C:\" I hope that is what you are looking for.
 Windows.Forms.Cursor.Position = New Point (x, y) Would put the mouse pointer at the x coord specified by x and y coord specified by y. Your task would be to pass the x and y coordinates to the coordinates that specify the starting point of your maze(s) and just pass that to the New Point when you start the maze or restart it. That code example above is based on VB.Net For VB6 I think you can use something like: Public Declare Function SetCursorPos Lib "user32" (ByVal X As Integer, ByVal Y As Integer) As Integer Private Sub Button1_Click SetCursorPos(x, y) End Sub
See if this helps... http://support.microsoft.com/kb/245031
Hey everyone, I'm relatively new to programming, but here is something I worked up. It is a stopwatch that saves the time and loads it upon reopening the program. I have it pretty much perfect, except one thing. When the numbers are in the single digits, it doesn't show a 0 in front of the number. I understand why, but I want to change it. I had one idea. I converted all the numbers to strings, while maintaining the value as a separate integer. Then I said if the integer value &lt; 10 then the string = "0" + string. However, that didn't work. Here is my code, and display. Since I'm new, the coding is pretty sloppy. I'm sure there are more effective ways to do it. I'm open to constructive criticism, but please be gentle with me, I'm new(: 
 Dim h As Integer = 0 Dim m As Integer = 0 Dim s As Integer = 0 Label1.Text = String.Format("{0:d2}:{1:d2}:{2:d2}", h, m, s)
or you could do it right in line label1.text = hour.tostring("00") &amp; ":" &amp; minute.ToString("00")...... 
Here's how made my stopwatch for a program I'm developing: Public swStartTime As TimeSpan Public swElapsedTimeDisplay As TimeSpan Private Sub btnStart_Click(sender As System.Object, e As System.EventArgs) Handles btnStart.Click swStartTime = DateTime.Now.TimeOfDay Timer1.Start() End Sub Private Sub frmTimer_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Timer1.Tick swElapsedTimeDisplay = DateTime.Now.TimeOfDay - swStartTime txtTestTime.Text = Strings.Left(Strings.Right(swElapsedTimeDisplay.ToString, 16), 11) End Sub [Imgur](http://i.imgur.com/QrW69Kc) It should be noted that after mid night, funky things happen, but we only test during the day for a few hours so it works fine. One day I may add logic to handle it running past mid night.
Here's two screenshots of the report and the main form where the button is: http://imgur.com/y0soWXY 
 This is a comma delimited file? Is each record on it's own line?
Have you learned structures? 
was this in visual basic 2010? would i delete the Public Class Form1?
no i have not. im a noob
I'm using visual studio 2012. You should be able to just create a new sub in that Form1 class and paste in this code. Something like: Public Class Form1 Public Sub New() 'paste code here End Sub End Class
this is a great start. thanks for being helpful. partial payment is still allowed. (assuming the entire thing is not finished) &amp; when you say array data...what do you mean by that?
Each element in the text file is stored in the array named data. So by calling data(1,1) it would display "Samuel". data(1,4) would display "0" If you want to check, put a msgbox after the End While, something like: ...lots of code End Try End While MsgBox(data(1,1)) End Using I'm still working on the sorting right now. I doubt I'll be finished with the whole thing in 20 minutes.
I'm pretty noobish also, though I'm on my third 90 hour vb class. In any case here is some quick code I put together that will break it all up and show it in a messagebox, pretty elementary code. Just create a form with a button on it and paste this code in the class. I wasn't looking for he money, just getting some practice. Public Class Form1 Private Structure judges Public lastName As String Public firstName As String Public startYear As Integer Public endYear As Integer End Structure Private Sub Button1_Click(sender As System.Object, e As System.EventArgs) Handles Button1.Click Dim fileName As String = "C:\users\mine\documents\judges.txt" ' CHANGE TO YOUR FILE NAME Dim fileReader As String ' Add the file to a string fileReader = My.Computer.FileSystem.ReadAllText(fileName) ' Split the string into an array of lines Dim fileRow As String() = Split(fileReader, vbCrLf) Dim listedJudges As New List(Of judges) For i As Integer = 0 To fileRow.GetUpperBound(0) Dim separated() As String = Split(fileRow(i), ",") Dim currentJudge As judges currentJudge.firstName = separated(0) currentJudge.lastName = separated(1) currentJudge.startYear = separated(2) currentJudge.endYear = separated(3) listedJudges.Add(currentJudge) Next 'Simple bubble sort by start date For i As Integer = 0 To listedJudges.Count - 2 Dim swap As judges If listedJudges(i).startYear &gt; listedJudges(i + 1).startYear Then swap = listedJudges(i + 1) listedJudges(i + 1) = listedJudges(i) listedJudges(i) = swap End If Next For i As Integer = 0 To listedJudges.Count - 1 MessageBox.Show(String.Format("First name {0} {1} Last Name {2} {3} Start {4} {5} End {6}", listedJudges(i).firstName, vbNewLine, _ listedJudges(i).lastName, vbNewLine, listedJudges(i).startYear, vbNewLine, listedJudges(i).endYear)) Next End Sub End Class 
technically i have until 6:45 CST. but it has to be turned in at that time
I wouldn't put all your chips on me, but I'll see what I can do.
is it possible to use Streamwriter
Maybe? I haven't written Visual Basic in years. I know what needs to be done, but the syntax and all that I have been looking up on Google, haha.
Heh, yeah. This is much simpler than what I was trying to do.
No just the filename variable above it. This only breaks the file into it's parts, it does not do the second part, sorting by the year. Also it says about searching the judges, does the instructor mean that you should put them all in a combobox or and be able to chose one? Also, not trying to steal GentlemanGallimaufry's thunder at all, like I said I just like to practice coding. 
Your fine. I'm in the same boat as you: I like to practice coding.
the proff just wanted a message box to show the chronological order
Ok, I have that done, I will change my comment above in a second.. What about this: "Display the sitting justice's year appointed and year he/she left the court by searching the justice's first name and last name.|
thank you. anyway i can see what your design looks like
I would assume that it wants you to create a textbox that allows the user to input the first and last name and then display the years appointed.
is this supposed to show the output of the chronological order? or do i need to do some ToStringing
&amp; with this code, how do i connect the text boxes with the assigned variables? ie: lastname &gt; txtlastname 
I would be more inclined to do this. Drag a label and a combobox on to the form and use this code. What it does it puts all the judges into the combobox ordered by start year, then when you select one it puts their information into a label. Public Class Form1 Private Structure judges Public lastName As String Public firstName As String Public startYear As Integer Public endYear As Integer End Structure Private listedJudges As New List(Of judges) Private Sub Form1_Load(sender As Object, e As System.EventArgs) Handles Me.Load Label1.Text = String.Empty doJudges() For i As Integer = 0 To listedJudges.Count - 1 ComboBox1.Items.Add(String.Format("{0} {1}", listedJudges(i).firstName, listedJudges(i).lastName)) Next End Sub Private Sub doJudges() Dim fileName As String = "C:\users\mine\documents\judges.txt" Dim fileReader As String ' Add the file to a string fileReader = My.Computer.FileSystem.ReadAllText(fileName) ' Split the string into an array of lines Dim fileRow As String() = Split(fileReader, vbCrLf) For i As Integer = 0 To fileRow.GetUpperBound(0) Dim separated() As String = Split(fileRow(i), ",") Dim currentJudge As judges currentJudge.firstName = separated(0) currentJudge.lastName = separated(1) currentJudge.startYear = separated(2) currentJudge.endYear = separated(3) listedJudges.Add(currentJudge) Next For i As Integer = 0 To listedJudges.Count - 2 Dim swap As judges If listedJudges(i).startYear &gt; listedJudges(i + 1).startYear Then swap = listedJudges(i + 1) listedJudges(i + 1) = listedJudges(i) listedJudges(i) = swap End If Next End Sub Private Sub ComboBox1_SelectedIndexChanged(sender As Object, e As System.EventArgs) Handles ComboBox1.SelectedIndexChanged Dim i As Integer = ComboBox1.SelectedIndex Label1.Text = String.Format(" First name {0} {1} Last Name {2} {3} Start {4} {5} End {6}", listedJudges(i).firstName, vbNewLine, _ listedJudges(i).lastName, vbNewLine, listedJudges(i).startYear, vbNewLine, listedJudges(i).endYear) End Sub End Class 
http://i.imgur.com/flW5jSV.png this is what my design looks like currently..u think i can do it this way? 
I see your design now, give me a minute. You still have an hour, right? Also i assume that get data button there will search based on what you put in a textbox? You can search any field? Only one at a time, or if you fill multiple textboxes in does it search for all the criteria? 
unfortunately im in CST and its 6:49 now. i really do appreaciate your advice &amp; GentlemandGalli
Best of luck! and nice coding verfast!
Oh, too bad... Kind of a fun exercise, seems kind of advanced for a beginner VB course.
Basically what i have is a generic list. it has elements in it, from this text file there are 5, one for each judge, numbered 0-4. So you can access each individual element with this: listedJudges(elementNumber).firstName listedJudges(elementNumber).lastName listedJudges(elementNumber).startYear listedJudges(elementNumber).endYear That is the structure definition at the top. The issue you will run into is getting the actual element number, or the index, that you need. You can write a for loop to loop thru each one and search something like for i as integer = 0 to listedJudges.count -1 if listedJudged(i).firstName = textboxFirstName.Text then ' at this point you know i is the element you are looking for End if
um, no? if it only gets created at runtime, then, by definition, it can only be visible at runtime.
Easy! Pubic Sub ParseFile(Bivalve FILE_NAME As String, Biref JUSTICES As RecordSet) Let JUSTICES = ReadFileIntoRecordset(FILE_NAME) End Sub 
Looks like you gave us a picture of the code. Can you give us a picture or tell us what the error said?
The error I get says "Method or data member not found"
Chr(1)
Tried that as a write \ com1.Write(Chr(1) + Chr(48) + Chr(48) + Chr(49)) no worrkie. I see my com flash no return. tried to get it to show in a message box also no workie :(
This means whatever's after the "." Is wrong. If it's a label .caption should be correct...
You know most controls have a "default" or implied property if you just supply the name. e.g. a labal named Label1's .caption can be set by just: Labels="text" or a textbox named Text1 could do Text1 = "text" Try not supplying a property and see what happens? Perhaps your are using a variable and not a control name??
Since this is vb6, try this. lb1="my string" Most controls have a default property. myTextbox = "some text" sets the .text property, mycheckbox= true sets the .value property etc. Also, let intellisense do the work, retype the name and the period and see what options come up. If no options come up, Verify that you do have a lb1. If you misspelled the textbox, or it is out of scope (trying to reach a label on a subform from a mainform) then intellisense is telling you something. Make sure that lb1 isn't a variable defined elsewhere (as something other than a label) Always use Option Explicit at the top of every module.
a label would be caption. not sure what your using that might change that but if it's newer versions of the VB IDE past 6 they look similar but they are different. .NET VB is different even though it has some of the same syntax. You could try to convert it to a string value like this.. lbl1.Text = CStr(tal1) 
I agree with chrwei, but this still leaves me wanting to know why you would ask that question. If the control is dynamic enough that it needs to be created at run time, you would set its properties dynamically and add any necessary handlers. Otherwise, you would just drag the control to the form and set it up the way you want it and code the events you require. Can you elaborate on what you're trying to attempt to do?
Is the highlighted line the error line by chance? Maybe your non-ASCII button name is interfering
Correct it is the error. Will take a look asap
I'm surprised his comment is the farthest-down. It's *possible* it would be allowed but I'm pretty sure the IDE doesn't allow non-ASCII characters in control names. Also, Label.Text is incorrect since (as was said earlier on), VB6 uses a property named "Caption" for labels. Label.Caption is correct. .Text is for a TextBox other some control that can take user-input. If you were using VB.Net then the .Text property would have been correct, but not in VB6. Anyway, that isn't the line that is highlighted so I think the error *being shown in the image* is from the non-ASCII characters in the name. Once that's fixed, you will still get your "Method or data member not found" error until you change .Text to .Caption.
Looking at this, I see a couple of things. In your button1.click event you this code: msg = "Your balance is:" &amp; (amt - balance).ToString("n2") But you don't assign amt a value, so it initializes as 0. you are basically subtracting what is inside the textbox from zero. Maybe you need another textbox to grab this amount from? Also I'm assuming this is a withdraw amount so the formula should be balance - amt. At the form level you have Dim balance As Decimal it should be instead Private balance as Decimal 
on top of what verafast has described. You also need to reassign the new balance back to balance. balance = balance - amt 'This will take the calculation on the right and store it back into balance Otherwise balance will never change from it's original value. Then you can just use the messagebox msg = "Your balance is:" &amp; balance.tostring("N2") Also, giving your controls more useful names helps us to determine what you are doing with any given line of code. Perhaps radDeposit, radWithdraw, etc would be better suited, more readable names than radiobutton1, radiobutton2
Look at the [last two posts](http://social.msdn.microsoft.com/Forums/en-US/adodotnetdataproviders/thread/efb83302-386b-460f-9467-edce28d61016/) in this topic and see if it helps.
No real help here, just wondering if you are starting to program VB why you are using VB6, instead of the latest one.
Do you have management studio installed? For the server name, try (local)
Awesome, glad you got it working.
Highschoolers normally use VB6 to lean as later down the road they learn Java, and they look alike.
That's it! I was able to solve my problem. Thank you!
First of all, let's get this out of the way: &gt;[Optional parameters are frowned upon by the Framework Design Guidelines. The CLS does not require a language to support optional parameters, so if you design a library that uses them other languages may suffer usability problems.](http://www.xtremevbtalk.com/showthread.php?t=316075) That said, there's (at least) 2 easy ways of doing this -- You can set c to Nothing and define it within the method body: Sub DrawPoint(ByVal p As Point, Optional ByVal c As Color = Nothing) If c = Nothing Then c = Color.Blue Dim a As Point = GetAxisN(p) ... End Sub Or the more preferred option in compliance with the above statement, overload the sub: Sub DrawPoint(ByVal p As Point) DrawPoint(p, Color.Blue) End Sub Sub DrawPoint(ByVal p As Point, ByVal c As Color) Dim a As Point = GetAxisN(p) ... End Sub
Here's a start: http://pastebin.com/yZetenEf This reads all files in a folder, filters out the PNGs, stores them in an array and you can read the dimensions. I've had a go at saving, but no luck, it's something like shown there. And I have no idea how to change the image.
Apparently Color.Blue is a variable. Find out it's real value (&amp;HFF0000 ?) and use that instead
It's ok, I like to do random kind stuff every now and then :) Edit: Oh also, about 3 weeks I'll be releasing a full VB series on youtube(3 weeks as I have exams currently). If you want, I can link you to it when it on youtube? I've made a few videos so far, but they're not online yet. I'm planning to release them all at once, the videos are fairly fast pace(but thorough), and so you'll probably learn new things as early as episode 4. So tell me if you're interested and I'll make a note of you name and link it to you when it's finished. 
My friend is in an elementary programming class and that's what they teach as its so simple to learn (and they dont want to pay for new licenses). If I had it my way he'd learn Perl.
[VB.NET version](http://www.dreamincode.net/forums/topic/31908-vbnet-basics-quick-reference-cheat-sheet/) [A bunch of others](http://www.dreamincode.net/forums/topic/17947-programming-reference-sheets/)
Unless the teacher explicitely forbade it, I would just use VB6's date handling functions to calculate all you need for the calendar. (If you must re-implement everything from scratch, look up calendar in Wikipedia for the rules concerning leap years). As for VB6, DateSerial(YYYY, MM, 1) will give you the starting date for a month... WeekDay(&lt;somedate&gt;, vbSunday) will tell you what day of the week a given date was and WeekDayName(&lt;somedate&gt;) can give you the name of the day (so that foreign users can see the calendar in their local language) From there, all you need to do is figure out how to fill a grid with numbers on a form.
Not sure I understand your problem completely, but it doesn't seem right that you would display balancetotalint inside your textbox and then immediately after that set balancetotalint = 20. I think you want to switch those two lines in your Form_Load around so that you set balancetotalint to 20 then show it in the textbox I also would think after clicking the button, you would want to update that textbox once again to = balancetotalint so that you can see the change. 
Thanks! I got it to work.
What CharlieMay said and you should also put an *access level on your "global" (form level) variable, namely it should be Private balancetotalint, blncetotal As Integer instead of Dim. Might as well learn good programming practice from the get-go.
What does the "Private" do exactly?
Basically, you should only use dim within sub procedures and functions, anything outside should be declared with an access level.
Okay, thanks :D
1000 times what 0xFACEB00C said. It is the compilers way of telling you that it understands what you are implying but that under certain conditions could cause you application to fail. For example if your form had multiple controls that did not have a common property that you were using, it would fail in the execution. Along with the code 0x supplied, you should either limit the type or use something like: If TypeOf c is Textbox 'cast c to textbox and expose it's valid properties End If This ensures that you are not trying to set a property to a control that doesn't have that property. Learn to write with Option Strict On. You will not only get a better understanding of the objects, you will write more stable code. There are times when you need to turn if off but those are very rare.
What do you have so far, and what is it that you're having problems with specifically?
Right now I have a form with 6 checkboxes, 8 frames where 6 of those are for the numbers to be in and 1 for the player's desired name, and the last one with the name "Computer". I also have a commend button which says "Roll the dice", and when it is clicked it will generate a random number to every label. And here is my problem, when I check one of the checkboxes, the number in the label it is connected to, should remain unchanged if I roll the dice again. English is not my native language so I apologize for making this so hard to understand.
That is much closer to what I needed. I can tweak it from here, thanks! I have a lot to learn :)
I am also quite new to programming, so I'm sorry if this isn't the best way to do this. Any more experienced programmers - correct me if I'm wrong. What you can do is use: Private Sub CheckBox1_CheckedChanged(sender As Object, e As EventArgs) Handles CheckBox1.CheckedChanged If CheckBox1.Checked = True Then Label1.Enabled = True Else : Label1.Enabled = False End If End Sub This way, if the checkbox is not ticked, the text of the label will not change. If you still need help or don't understand, don't hesitate to ask. Good luck. 
Though it is tough to tell what exactly you want, I hope this will help. Private Sub btnRoll_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnRoll.Click If Not chk1Player.Checked Then lbl1Player.Text = CInt(Int((Rnd() * 9) + 1)) If Not chk2Player.Checked Then lbl2Player.Text = CInt(Int((Rnd() * 9) + 1)) If Not chk3Player.Checked Then lbl3Player.Text = CInt(Int((Rnd() * 9) + 1)) If Not chk1Computer.Checked Then lbl1Computer.Text = CInt(Int((Rnd() * 9) + 1)) If Not chk2Computer.Checked Then lbl2Computer.Text = CInt(Int((Rnd() * 9) + 1)) If Not chk3Computer.Checked Then lbl3Computer.Text = CInt(Int((Rnd() * 9) + 1)) If ((Not lbl1Player.Text = String.Empty) AndAlso lbl1Player.Text = lbl2Player.Text AndAlso lbl2Player.Text = lbl3Player.Text) AndAlso ((Not lbl1Computer.Text = String.Empty) AndAlso lbl1Computer.Text = lbl2Computer.Text AndAlso lbl2Computer.Text = lbl3Computer.Text) Then 'Both the Player and the Computer have won lblOutput.Text = "Both " &amp; txtPlayerName.Text &amp; " and " &amp; txtComputerName.Text &amp; " have won!" ElseIf ((Not lbl1Player.Text = String.Empty) AndAlso lbl1Player.Text = lbl2Player.Text AndAlso lbl2Player.Text = lbl3Player.Text) Then 'The Player has won lblOutput.Text = txtPlayerName.Text &amp; " has won!" ElseIf ((Not lbl1Computer.Text = String.Empty) AndAlso lbl1Computer.Text = lbl2Computer.Text AndAlso lbl2Computer.Text = lbl3Computer.Text) Then 'The Computer has won lblOutput.Text = txtComputerName.Text &amp; " has won!" End If End Sub * 6 CheckBoxes (To toggle which numbers should "lock/unlock" - 3 for the Player and 3 for the Computer) * 7 Labels (3 for Player Random Numbers, 3 for Computer Random Numbers, and 1 for the Winner Output Text) * 2 TextBoxes (1 for the Player's Name and 1 for the Computer's Name) * 1 Button (to Trigger the Number 'roll') Edit: This is written to so the numbers will change if the corresponding CheckBox is *NOT* checked. If you would like the opposite effect, take out the 'Not' keywords in the first 6 lines of code.
I like the use of the HiddenField to hold the jQuery information for the code-behind to use. Typically JavaScript fires before a post back, so I'm not sure why this idea would not work. Do you have a jQuery event that fires when the button is clicked or when the page loads? If it is the latter, try the former. This would cause the jQuery method to run before the post back function. Also, there's definitely a chance I didn't understand the problem.
I think I might have done the selectors wrong... Its for a side project and I got busy and haven't revisited the codebehind in a little bit... 
Thanks this is pretty much what I was asking for, it does not work for me though, it does not save the number, and I believe the reason for that is that there is nothing that tells it to stop randoming when the box is checked. How do I go around this? 
This way, when the checkbox was not ticked, the text in the label was gray, it it would still generate random numbers though. Gah this is getting on my nerves, haha.
Thanks, well that would be helpful. I apreciate it, thanks.
Here's a better example: If you put in 50 (Which is between 1-199), it will do 50 * 0.50 = 25. 0.50 is the price of the single item, and it depends on how many items you enter. 1-199 is 0.5, 200-399 is 0.55, ect. Currently, all it's doing is the 1-199 calculation of 0.5, but not the rest.
Ah ok, So if 50 &gt;=1 OR 50&lt;= 199 is confusing you. Here's why. Is 50 &gt; = 1? Yes, but so is 200 and 300 and 400. To ensure the range, you need to replace those OR's with AND's if 50 &gt;=1 AND its also &lt; = 199 will keep that range so 200 would be false and would not execute that line. 
Oh, makes sense. As I said it does not work for me unfortunately, I am getting syntax error missing ) on line 7, 10 and 13.
Okay thanks.
Those lines have very long lines of code that extend past the screen. Make sure you copy the whole line. You should see a scroll bar at the bottom of the post that will scroll to the right and show you what you're missing.
Now, I only have two checkboxes/labels, but the idea is the same for 6. I also have two buttons to control the timer - a start button and a stop button. The timer is set to have an interval of 100 milliseconds (the numbers will change every 100ms), but you can change that to whatever you like. Hopefully this will work for you. Public Class Form1 Private Sub CheckBox1_CheckedChanged(sender As Object, e As EventArgs) Handles CheckBox1.CheckedChanged If CheckBox1.Checked = True Then Label1.Enabled = True Else : Label1.Enabled = False End If End Sub Private Sub CheckBox2_CheckedChanged(sender As Object, e As EventArgs) Handles CheckBox2.CheckedChanged If CheckBox2.Checked = True Then Label2.Enabled = True Else : Label2.Enabled = False End If End Sub Private Sub Timer1_Tick(sender As Object, e As EventArgs) Handles Timer1.Tick Timer1.Interval = 100 If CheckBox1.Checked = Enabled Then Timer1.Start() Label1.Text = Val(Label1.Text) + 1 If Label1.Text = 10 Then Timer1.Stop() Label1.Text = 1 Timer1.Start() End If End If If CheckBox2.Checked = Enabled Then Timer1.Start() Label2.Text = Val(Label2.Text) + 1 If Label2.Text = 10 Then Timer1.Stop() Label2.Text = 1 Timer1.Start() End If End If End Sub Private Sub btnStart_Click(sender As Object, e As EventArgs) Handles btnStart.Click Timer1.Start() End Sub Private Sub btnStop_Click(sender As Object, e As EventArgs) Handles btnStop.Click Timer1.Stop() End Sub End Class
Also. You could really clean that code up using ElseIF The ElseIf statement will allow you to specify a condition on the line condensing your code to If (txtpcomp.Text) &gt;= 1 And (txtpcomp.Text) &lt;= 199 Then price = ((txtpcomp.Text) * (0.5)) ElseIf (txtpcomp.Text) &gt;= 200 And (txtpcomp.Text) &lt;= 399 Then price = ((txtpcomp.Text) * (0.55)) ElseIf (txtpcomp.Text) &gt;= 400 And (txtpcomp.Text) &lt;= 599 Then price = ((txtpcomp.Text) * (0.6)) ElseIf (txtpcomp.Text) &gt;= 600 Then price = ((txtpcomp.Text) * (0.65)) End If txtname.Text = CStr(price) What I prefer to do in these types of comparisons is to use a Select Case This does the same thing as your code: Select Case txtpcomp.Text Case 1 To 199 price = ((txtpcomp.Text) * (0.5)) Case 200 To 399 price = ((txtpcomp.Text) * (0.55)) Case 400 To 599 price = ((txtpcomp.Text) * (0.6)) Case Else price = ((txtpcomp.Text) * (0.65)) End Select Making it much cleaner and easier to follow. 
Is the border not changing? Or is it staying for both? Can you be a little more specific here?
If it's not working. Here's a suggestion Declare at form level: Private currentButton As New Button Create a sub: Private Sub BorderizeButton(btn as button) 'Reset the current button back to normal currentButton.FlatAppearance.BorderColor = Color.Black currentButton.FlatAppearance.BorderSize = 1 'Once complete, set currentButton to the current button currentButton = btn 'Now set the new buttons border settings currentButton.FlatAppearance.BorderColor = Color.White currentButton.FlatAppearance.BorderSize = 3 End Sub Now in your button clicks, call this sub and pass it the button Private Sub Button1_Click (sender as Object, e as EventArgs) Handles Button1.Click BorderizeButton(Button1) FindData() End Sub 
If C# is an option, i would go with that, if not, VB.net, C++ is a great language, but of the .NET framework languages, at least in my opinion, C# is a better option
Are you taking [this course?](https://www.coursera.org/course/ml)
Wait, VB.NET is a higher level language and C++ is a lower level language? I thought it was the other way around so I'm leaning VB.NET as my first language and will learn C++ later on...
Higher level meaning more like English and less like machine code, not easier vs. harder.
Oh okay, thanks for explaining.
Truth is its up to you to make that decision it's based on your project that if we understood, we'd had made it
So..... 1) when count = 1 data = 2 result = 0 2 &gt; 0 is true, so result will now be set to equal data, meaning result = 2 2) when count = 2 data = 25 result = 2 25 &gt; 0 is true, so result will be set to 25, result = 25 3) when count = 3 data = 10 result = 25 10 &gt; 25 is false, so result will still be equal to 25, result = 25 The loop has now been fully executed, so we are going to print out what result is equal to. So, the output will be 25. Answer: C If you ever have a question like this, it can be helpful to write out everything like I have done so above. That way you don't need to worry about remembering what result is equal to while you are trying to figure out what the code is doing.
I'll save this in a notepad in my folder. Thanks for the help :)
You're welcome!
I'm assuming you mean as an .exe file as opposed to compiling it from source code each time. This is from my memory, so it may be slightly incorrect: **In VB6:** File -&gt; Make &lt;Project&gt;.exe (I think only the professional/enterprise edition has it) **In 2010 (and similar):** Project -&gt; Publish, or just go to your Visual Studio folder (usually in My Documents) -&gt; Project -&gt; bin -&gt; Debug -&gt; find the .exe (though this is the executable with debug symbols and such, you'd want to make a "release" executable instead).
This fine person speaks good words. I couldn't get it to work that way though, inno setup compiler SOMEHOW worked though. 
Alright guys, best mock up i could do. [Here](http://i.imgur.com/4MaTjHn.png) My head is hurting... 
i don't even...
Have you tried VLookUp? =VLOOKUP(B1,Sheet2!$B$3:$J$11,9,FALSE)
I agree with malsonjo, VLOOKUP should do what you need. Of course I would suggest adding IF(B3 = "", "", VLOOKUP(B3, Sheet2!$B$3:$J$11,9,FALSE). Then you can just copy this down the rows and it will only display a value if there is an entry in the b column for that row. You will also probably want to check for #N/A to display "Not Found" or something similar when an entry is not found on sheet 2. 
Commenting to review later. Thanks for the post. 
The Method ISimpleAudioVolume in C# and VB.net can control master volume
How about VB 2010
I would stay away from Program Files as newer operating systems seem to use more strict protection. App data would be a good place. See the [SpecialFolders enum](http://msdn.microsoft.com/en-us/library/system.environment.specialfolder.aspx) 
AppData/ProgramFiles are both good choices to use. Imports System.IO Imports System.Reflection Module Module1 Sub Main() Const exeName As String = "Test.txt" Dim SpecialFolder As Environment.SpecialFolder 'Pick one of the two: 'SpecialFolder = Environment.SpecialFolder.LocalApplicationData 'SpecialFolder = Environment.SpecialFolder.ApplicationData Dim AppData As String = Environment.GetFolderPath(SpecialFolder) Dim CurrentAssemblyInformation As FileVersionInfo = FileVersionInfo.GetVersionInfo(Assembly.GetExecutingAssembly.Location) 'Note: If System.Windows.Forms is imported, then use Application.CompanyName and Application.ProductName. 'This Requires CompanyName/Product Name to be set in the application info. In real code, throw an error if these are not declared. Dim fullPath As String = Path.Combine(AppData, CurrentAssemblyInformation.CompanyName, CurrentAssemblyInformation.ProductName, exeName) If Not File.Exists(fullPath) Then Dim ErrorMessage As String = String.Format("Error: File: {0} does not exist", fullPath) Exit Sub 'TODO: Output error to user. End If Dim Lines() As String Try Lines = File.ReadAllLines(fullPath) Catch 'TODO: Default file error handling. End Try 'Check lines is valid, then do things with lines. End Sub End Module
I remember having problems with it, and while I can't remember the way I got around it, if you have another computer to install it on, you should be able to just copy/paste the installed files and run those on your Windows 7 computer. I don't think I experienced any problems with it that way.
Ignore the messages and just plow through them. If the install fails at the end reboot and run it again while also ignoring the errors. works like a charm the second time around. Also set vb6.exe to run as admin or you will get nothing but cannot access registry errors.
Agreed we still user it out here in win7. 
Bingo. I made http://www.reddit.com/r/vb6 awhile ago. It would be cool if all 5 of us code-dinosaurs still using it could exchange info here and there lol. Vb6 fo life! I know a little php, .net and c but I code way too fast and flawlessly in vb6 to ever give it up.
Just did this about a month ago to look as some old VB6 code I had. While it takes a little longer when you first start it, it runs pretty smoothly after that and I've not had a single problem with it. 
http://www.fortypoundhead.com/showcontent.asp?artid=20502
Maybe you need a better installer. I have the real cd I made an ISO of. I will upload it to you later. It installs just fine with no errors
Gonna need a little more insight on how you're accessing this database. Are these strongly typed data objects or are you writing sql statements and executing them? 
Your going to need to attach a sub to an event to trigger the update sub. Perhaps a save button, or when you move to the next row, etc. 
I'm doing the same. Anyone know if these episodes are any good?
Depending on how you are coding this could make a difference. Basically you would check against the ID and Password entered and once you know it is correct, create an UPDATE statement setting password = to the new entry WHERE ID = thisUsersID UPDATE Users SET [Password] = @NewPass WHERE ID = @CurrentID 
Thank you, sir!
If anyone is curious to the code, works fine for me. Probably better ways to do this but I am just happy it works. http://pastebin.com/50y4F3nS
I felt the same way a few years ago. Now I can barely believe I used to think it was any good. Hacks everywhere. Hacks to get XP/Vista/7 UX themes working. Hacks to fix Comctl32 controls. Hacks to add any form of concurrency. Hacks to subclass forms to fix functionality or add functionality added to Programs since 1998. hacks to implement interfaces with methods that happen to have names that are reserved words (IEnumVariant) hacks, hacks, hacks. So glad I don't work in it regularly anymore. Each time I do, I gain a newfound appreciation for C#/Java/Python and other languages I've started to use since, while at the same time regretting that I atrophied in the same outdated, underpowered toolset for several years.
Looks good. Of course there's other ways of doing it but there's nothing really wrong with the code you supplied. The use of parameters in your statements is nice to see. 
Thank you, I really appreciate the help you gave me I have been working on the project for the last few days for roughly 6 hours a day, it's slow work but its for a final project for school and I didn't want to let my workmates down. 
AxWindowsMediaPlayer is going to be a 32-bit control. Visual Studio's default build target architecture is "AnyCPU", which means it uses Just In-Time (JIT) compilation just before execution to complete the compilation, customizing it for the architecture (32-bit or 64-bit) of your environment. I'm guessing your friend was using 32-bit Windows and you have a 64-bit Windows machine. Assuming this is true, your friend's machine would attempt to run this in a 32-bit environment, and it would find the AxWindowsMediaPlayer in the WMP.dll. Your machine (assuming 64-bit) is going to JIT the code to a 64-bit environment, and during execution it will not find an appropriate 64-bit WMP.dll on the system. It then complains that it cannot be found. What you will need to try to do is to force your program to execute as a 32-bit application. 64-bit versions of Windows have a 32-bit execution environment available, but everything defaults to 64-bit as the OS is optimized for 64-bit execution. However, when you use older controls (like the WMP.dll feature), they were made pre-64-bit Windows, and were never rebuilt for 64-bit Windows. For your program to access these controls, you must instruct it to execute in the 32-bit environment. There are 4 ways to deal with this. 1 - Change the Target on the Compile tab of the project from "AnyCPU" to "x86". This is the preferred way, but it may not be available in Visual Studio Express versions. 2 - use CorFlags tool - http://msdn.microsoft.com/en-us/library/ms164699(v=vs.100).aspx This takes an existing .exe file and alters it to always run 32bit or whatever configuration you choose. 3 - There is a way to create a new build configuration by editing the .proj file or app.config file to force compilation for x86. I don't have a reference for this, but you may be able to google this and find it. 4 - use the command line compiler and use the compiler options to specify this possibly. You will have to google this as well. 3 and 4 are a bit more technical and you'll have to explore these options yourself if 1 or 2 don't work for you. Hope I've pointed you in the right direction! 
ok i'll look 
Could it be something like going to the reference and selecting "copy local" Worth a shot I guess. Good luck!
No but yes VS2010 can open vs2005 projects and convert them to VS2010 projects but once it does that there is no going back to VS2005. Also of note, VS2010 is capable of writing applications targeting the .NET 2.0 framework, so while you're updating your IDE you don't have to target a new framework to do that. 
So If I write a program in vb10, it won't work in 05? 
Thanks I'm new to this program. That is much clearer. How would I go about using visual studio 2010 to write applications for net 2.0 ? Is it another type of writing entirely, or just a setting that I can change?
When you go to create the project, there's a drop down menu in the top left of the new project dialog. By default it's on .NET Framework 4.0, but you can change that to .NET Framework 2.0.
Yes, making a new project is going to be how you have to do it. You won't be able to transfer your solution and project files between the two (these are the .vbproj and .sln files you can double-click on to open them up in VS). I think theoretically you could have two different .vbproj and .sln files side-by-side, one for VS2005 and one for VS2010. The only thing you wouldn't get for free doing that is adding/removing things like files or references from the projects. If you do it in one, you'd have to do it again in the other one. It can get complicated, but for school work, it should be workable, even if it is a slight headache.
I found a guide online that explains changing the NET Framework. [(link)](http://nakedalm.com/multi-targeting-in-visual-studio-2010/) When I look for the drop down menu to change it, I cannot find it. I'm not sure whether having Visual Studio 2010 Express has anything to do with it or not.
the whole "open a new project" layout looks different I think.
You are right, that drop down doesn't exist in the Express versions it seems. All is not lost though, you are still able to switch your target framework. Create the project just like you would normally. Then right-click on the project name in the solution explorer on the right hand side and click on "Properties". Select "Compile" from the tabs on the left hand side of the screen that comes up. Click on "Advanced Compile Options..." at the bottom of the screen. Towards the bottom of the popup you should see a drop down labelled "Target Framework". Switch that to .NET 2.0. It will close and re-open your project, and you should be good to go from there.
Wait, what? That's the same one as OP listed...
No, OP linked to the VB 6 version, whereas I linked to the VB.NET version.
ah okay, I saw the link was was to the same site and was confused by it. Forgive my noobishness. I need to go read up on the difference between vb and vb.net I think. 
VB.NET is just newer, and more object-oriented. Probably the only reason you'd ever need to know VB, or the differences, is if you ever end up supporting a legacy VB application.
Ok, im going to ask... why? Why would they switch to something old and out of date? Why not VB.NET or C# ?
I have no idea...
you should ask, and mention its now pretty obsolete. Still used, but on its death bed. Akin to saying "ok guys, we are going to upgrade all our computers to windows 2000 next week"
VB.NET is leaps and bounds ahead of VB6 in terms of features available. Although VB6 was Object Oriented, very little can be used to utilize that concept in that language. VB.NET has plenty of additional libraries that can help you code better and much more efficiently. The GUI (form controls) has improved functionality (more properties = more flexibility) and the most important part that I really appreciate VB.NET over VB6 is Exception Handling. Try-Catch is your friend. You don't want your applications freezing and not telling what went wrong now, do you? :) Hope this helps? Pranav
They were trying to ask me about ByVal and ByRef and how they work and why some things don't run. Hard to teach in English ho Chinese students
Okay that's awesome news! So using "activesheet" or others similar to that will not work when the conversion happens? I will code around those from now on for sure. You might say I am... feelingbetternow.
Because converting to the NET languages would require a complete rewrite as VB.NET is not visual basic compatible, much less C#
For the second issue, I would expect it to result in System.IO.FileNotFoundException.
It IS Obsolete. As in - no longer being worked on by MS. No further updates. At end of life. The end. It would be good practice, and a good opportunity, to now upgrade to a modern platform, and refactor your code base. Sure it will be pretty much a re-write, but as its an old system and being a VBA project - im guessing as with any other system like that (and ive worked with quite a few) - it NEEDS it by now. It could be redesigned, rewritten and tidied up and done in a much better way by moving to .Net. The switch to vb.net from VBA is not so dramatic at all, and VBA devs tend to get started, ask questions for a bit, before then realising how much more freedom and power they can leverage, as well as cutting down the amount of repeated code and clumsy ways of doing things that needs to be done in VBA. As for VB6 being better than .NET... which do you think is faster at searching through collections of office documents in a Folder? LINQ or VB6? Not only that, how much code do you need to write in VB6 to do it as well? 
A rewrite of an old VBA project is usually not a bad thing.
[Here](http://msdn.microsoft.com/en-us/library/afh37kh8%28v=vs.71%29.aspx) is the MSDN page for that method. All methods can be looked up in this manner and will be a necessary skill to becoming a developer. You mentioned that you were new so forgive me if this is redundant information for you. If you wanted to post your code, I'd be happy to look at it for you!
Yeah i don't really understand much on that page, but I am fairly sure I have typed everything correctly. I think it must just be a problem with finding the file or something like that. I'm on my phone now, so I don't have the code, but it shouldn't be too difficult. My code is a 'skeleton program' which my exam board gives out, then on the day of the exam we have to modify it and add things to it, I don't know what I will have to do yet, I'm just guessing, and practising coding with it. The program is called SecretMessages, and it just includes a Caesar Cipher, and Rail Fenceand it has a decrypt/encrpt option. So I added an option to brute force the key for it (try all the keys and output it, so I can read through them and find one that makes sense). I could get it to output to the console, but not into a text file? Is 'PrintLine' the code I'm supposed to be using? (Sorry its a bit long!) 
Okay, I think I sort of understand now. That is similar to what I have already, I just can't see why it isn't working... I have uploaded the whole code from the program to pastebin, [here](http://pastebin.com/AzmeGHVv). I haven't changed much (thought I had a clean copy when I started, but realised it had 'idiot' in it... our teacher made us do that during a lesson). I do also have more modified copys, but I just want to focus on changing one thing at a time. The code I can't work out is in 'Case "m"' in the Sub Main, I just don't understand why it doesn't work, I've changed it and played around with it so much! Sounds interesting, I think I'd like to get into security when I've finished sixth form!
I recommend heading over to ELance to find someone, more reliable than a random post here on Reddit. Just my .02.
does it need to be Access? you can get MS SQL Server Express for free
Yes that's right, can you not do that when writng to a text file? I found a work around though, I had to put it like this: PrintLine(2, "*******" &amp; brutekey &amp; "*******") Is that the only way to do it?
I'm completely out of my domain of knowledge (Drawing API), but since nobody else has responded, I'll give it a shot, I presume quite a bit of this advice could be improved upon. Suggestions on ways to improve this would be greatly appreciated. &gt; I was thinking to generate 100 controls (buttons or picturebox-es) an put them on a panel and that is my board. Sounds like a bad idea. ---- Make the presentation layer for your game, and your game state/data structures of the game state two separate concepts. My initial idea for data structures (feel free to change): * An array (10x10) for the board listing all points that have been hit. * A list of battleships (up to you how this is implemented, need coordinates on the board) * Game state (again, up to you). After you have your game state, and ways to update it, you want to draw a visual representation of this on the screen. There are a lot of ways to draw things onto the screen, handling the form's onPaint sub and drawing and updating a PictureBox are both valid methods (there's going to be a lot more that I don't know about). Personally, I'd go with the latter. I'd personally use the drawing API to load a background image of a board and ships from files. Load the background into memory, then find the locations where the ships should be using basic maths and blit the images onto the background. After all the ships have been drawn on the image, place it into the PictureBox. This looks like the routine to blit in .NET: [link](http://msdn.microsoft.com/en-us/library/b829w21x.aspx) I presume you can handle the pictureboxes click/double click to find out which square was clicked and perform the appropriate action on your data structures. After you have a state change, either redraw the image from scratch and display it, or apply an incremental change to the current bitmap, and redisplay that. Every time your game state changes (a player makes a move), either redraw the board from scratch, or incrementally change the graphics on the region that's changed.
Use a [BindingList(Of T)](http://msdn.microsoft.com/en-us/library/ms132679.aspx). 
A kid in my class did it...if that helps..knowing it's possible..lol.
In vb you can only mod divide with integers. I'd take the two original values and save them as variables, then create a second set of variables that you use for the int equivalent and round as necessary when giving them a value. Then mod divide the two int variables. 
You know, posting your problem code would be helpful.
Really? I never knew that (but then again I never really had a need for non-integer modulus in my code). Very interesting. I guess the language developers didn't intend for people to use VB for that type of mathematical calculations... To F# batman!
AT this point I might wonder which version of VB you are using. If you are getting a compiler error when using Decimal, I wonder if you are in VB6 or a version of VB before VB.Net. (in those versions, I would expect VB to do modulus arithmetic only to integer values) Alternatively, check that you have spelled decimal correctly, retype it without the capital D and see if VB 
I'm wondering the same thing. Any idea how I can check? I'm looking in my Installed Programs section and see that I have .NET Framework 4.5 edit: The VBA Editor I have says I have version Visual Basic 6.0 (6.4.8869) I am definitely typing in the declaration correctly though. Decimal doesn't even show up on the suggestions menu when I start to type it
I'm not sure, I took a class on Bb recently and the teacher said you could only do it with integers. 
Visual Basic 6 is not VB.NET. So, you don't have decimal, and the modulo operator follows the traditional BASIC definition which only applies to integers. (Every computer has .NET frameworks installed) Oh, and VBA is Visual Basic for Applications, an interpreted form of Visual Basic that is embedded in Microsoft Office and other applications. You can download at least two versions of Visual Studio 2013 (Visual BAsic.NET) for free. One version is for Web development, I think the other is for Winforms applications. 
Kind of late now, but you can use string.format() anytime you can use a string like this: PrintLine(2, String.Format("blah blah {0} blah {1} blah {2}", var1, var2, var 3))
Have a look at this ... I wrote it for my students but its not the final version http://xmb.stuffucanuse.com/xmb/viewthread.php?tid=8457 
You might check out the Channel 9 Intro course: http://channel9.msdn.com/Series/Visual-Basic-Development-for-Absolute-Beginners
Can the user see that share on their machine at all, or do they have to reboot into an admin account?
I've found 'impersonation', that looks like what I was looking for. I'll let you know how it goes. Thanks for the quick reply!
Maybe? You could certainly add an instance of whatever object you are trying to handle the event from, and pass a reference to the object into the class. It really depends upon what you are trying to accomplish. Maybe tell us what you are trying to do, and we can go from there. 
Is this a school project or something? Or do you want to use it yourself? I would suggest using Excel instead. You really don't need a .NET application do that for you.. Excel should do just fine (using formulas) If it's the former, I may be of help :)
Alright, what are the things specified for this project? Do you have a requirements document or anything from the teacher? Could you post it up here so we can see it? It shouldn't be too difficult. You could create a simple form with a input dialog box that accepts the student name and grade. Once you're done inputting (say 10 students) then you can display the results on a list box or something similar..
Nothing specified really I think, it's just to make the program like that. I'll try to find the book.
Really to just make it neater, I want to create a new type of button-ish using textboxes, I want a style like what chrome have so when your mouse goes over it highlights etc. I want this style of button created with textboxes and stuff throughout the program, and it's bad practice to copy and paste and as I'll be having multiple forms I would like to handle all these effects for these buttons all in one class redirected from multiple forms. This is for a project that I haven't started yet but it's going to be coursework so it's good that it is neat. (Not sure if they'll be happy with me making my own type of button with a picture box but I'll go with it anyway).
Sounds like you just need to create a new User Control, and code everything in that User Control. Once you compile the control will be added to your toolbox just like a button or textbox, and you can just drop them onto a form as needed. 
&gt;Then, if their sum is bigger than 3, the program changes A becomes TrueA, B becomes TrueB and C becomes TrueC. I'm very confused by this sentence then.
Here: An employee should recieve pay equal to time and a half for every hour worked over 40 hours Create a payroll application that prompts the user for the number of hours worked and the hourly rate of pay and then calculates the gross weekly wages (before taxes) When pay is clicked
Thank you, that makes perfect sense, I've never used one but it looks fairly straight forward. Thanks!
Yes you can. Just use boolean statements inside the loop until one of the values spits out a negative one. Do x while, or unti A or B or C = -1 From there. Add or subtract your values. easy.
Honestly, if this is for a programing class, and it's the final, and you can't do something this simple, you really don't deserve to pass. If you don't have the desire to actually try to write this you should consider doing something different. This is super simple stuff here. What have you tried, what doesn't work? 
Here is a really simple way of getting this done. Open up MS Visual Studio, create a new VB.NET project. On the new project, open up the default form that's supplied with the project. Add an input box to that form and a button. Change the name of the input box control to "txtHours" or something. Double click the button and add the following code: calculateWages(txtHours.text) Then add this following function in the code: Private Sub calculateWages(ByVal workHours As Integer) Dim grossWages As Double = 0.0 Dim ratePerHour As Double = 10.0 If workHours &gt; 40 Then 'Gross Wages paid for hours worked &gt; 40 grossWages = (workHours * (ratePerHour * 1.5)) Else 'Gross Wages paid for hours worked &lt;= 40 grossWages = workHours * ratePerHour End If MsgBox("Total Wages for Hours: " + workHours + " are : $" + grossWages, MsgBoxStyle.Information, "Wages") End Sub This should be good enough to calculate your wages :) 
It's not the final, it's a nice HW. Also the teacher DOES NOT tell us how to do it, we rely on the book, which for some reason doesn't have any info on how to do it. Most of us search it up online.
Assumed that since you said you would fail, that it was a final. I guess I'm still amazed that they haven't taken you through the basics of any of this. Have they done any work with a form, or writing a simple app. IMO by the time they give you a task like this, you should have been taught enough to put together something this simple. 
Sweet! But how can I enter new values for A B C after each loop? 
Whoops! You're right bud. Here's the change then: If workHours &gt; 40 Then 'Gross Wages paid for hours worked &gt; 40 grossWages = (workHours * ratePerHour) + ((workHours - 40) * (ratePerHour * 1.5)) Else 'Gross Wages paid for hours worked &lt;= 40 grossWages = workHours * ratePerHour End If
If A+B+C&gt;3 then TrueA = A and TrueB=B and TrueC = C else FalseA=A and FalseB=B and FalseC=C
Have A,B and C outside the scope of the loop?
yes
Have A,B and C outside the scope of the loop. *
&gt;PLeas Well that has motivated me to help. Also there is no context here. You're basically asking someone to do the program for you. On the information provided, I can't help. On laziness alone, I don't want to help.
Thank you for this. Even though I haven't use any of the above I still appreciate it. 
So a timer that is disabled then enabled again, should restart timers interval? Because thats my issue. I need the timer.interval to restart every time an enabled (flipped) card is clicked. So should having the timer enabled when a card is flipped and then disabled once clicked work? 
whatever you want your program to do, man!
Not sure if you are in .NET or VB6: In .NET you can use the Environment methods to get the Path from the environment variable. http://msdn.microsoft.com/en-us/library/yat6s6yb.aspx In Vb6 you can use the Environ$ variable. http://www.ehow.com/how_10015788_read-environment-variables-vb6.html 
I think the code listed there is a shortened sample for those that don't need the full code. There is a link at the very top to the full VB project at CodePlex. I'd suggest downloading the zip from CodePlex, extracting it to a folder, and then opening the project from the VB sample folder. 
Input box? Like a text box? There's nothing about input boxes in the book...?
You can use text box fields instead then. :)
How are you closing the form in your button click? What is BtCreate? You're trying to compare BtCreate (whatever it is) to the Sender (which is probably your form). If you never want the user to close the form from the X, then set the ControlBox property on the form to False (this will remove the buttons from the top). This is a property of the form. If you have a good reason to leave the control box, and still want to verify that your button was pressed, and not the close button, then you probably want to just create a new variable that tells you that the button was pressed, and check that in the FormClosing event. 
Whenever you come across a bug, assume it's you first.. but this one has my brain stumped.. it might be the later hour.. any thoughts?
Can you narrow it down? I'm not exactly sure what I'm looking at.
In order to elevate with a prompt, the application needs to start (or restart) in an elevated mode. What we do for our installer (that needs to elevate), is to use a second exe that contains the functions that need elevation, and start that process for those functions (using process.start ....). The easiest way to get this done is to add a UAC manifest to the second app. http://stackoverflow.com/questions/1431948/how-to-add-uac-manifest-file-to-vb-net 
Sadly, UAC isn't an option. Corporate environment w/ that crap removed. I was hoping to keep it entirely self contained in a single executable so we could delete it from users' computers after running the scripts.
You probably want to look into Impersonation then. The answer below has a couple of good links. http://stackoverflow.com/questions/125341/how-do-you-do-impersonation-in-net 
I don't think you can use reference variables like that ("PC" &amp; "1" =/= PC1) Your best bet would probably be to use an array: private PC(10) as string pc(1) = "\\pcname\folder\file.txt" .. pc(10) = "\\pcname10\path\file.txt" .. dim r as integer = 1 do until r = 11 ... 'msgbox("PC" &amp; r) Variable = My.Computer.FileSystem.ReadAllText(pc(r)) 'do things r = r + 1 loop 
test = 106.62 test2 = 102.62 they should equal the same thing. test3 = 102.62 which should also equal 106.62 For some reason because I've grouped it's removed 2 from the answer.
That would do the trick; however, in Vista and newer it requires admin privileges which defeats the purpose as my techs would have to use runas w/ the exe to start with and then the user would have to log in via the app. I've decided to just have my techs runas admin if they have to use something on tab of scripts that needs admin rights so we don't have to get the user to log in. Thanks for the help, though.
DataGridView1.Rows.Add(device, power, "1", "1", "1", "1", "1", "1", "2") i need the info where 2 is to be added to what ever is in all the rows combined 
&gt; stuff = row.Cells(8).Value Your problem lies right there. This line overwrites the previous value in stuff. You'll want to use the += operator there instead of the assignment (=) operator: Dim stuff As Double For Each row As DataGridViewRow In DataGridView1.Rows If Not row.IsNewRow Then stuff += row.Cells(8).Value MessageBox.Show(stuff.ToString) End If Next Also, this line: &gt;stuff = stuff.ToString You have stuff declared as a Double, why would you assign a String to it?
Thanks ill give it a shot 
VBA .. the error is Run-time error '-2147467259(80004005)'; A dialog box is open. cLose it and try again.
I have created the macro, I'd like to be able to click a button on the form and have it call the macro if a check box is ticked.
"A" is less than "B" this is how computers sort alphabetically. I've used this in Excel many times before I ever learned vb.
Check if it exists.
Not bad at all, but also not really much of a maze. No disrespect meant, just saying. All in all, a well done project. My one gripe is that the player avatar vanishes while holding down the movement key. This is probably more to do with the crappy GDI drawing surface VB uses rather than anything specific in your code. Nice work!
Basic HTML is easy. You can read in the code and use splits and trims to get the information you require. Going on from that I've seen web queries that appear to work well... this is a feature in Excel 2007 (get external data from web). You could use these references to help. Thats the extent of my experience though. I'm certain with a bit of research you could achieve exactly what you want.
Web Scraping is the term you are looking for. As /u/Wol377 pointed out, you have to get all of the HTML of the page into a string, and then search through it to find the part you want. http://stackoverflow.com/questions/3728944/load-a-webpage-into-a-string-fastest-way For the second part, you want to do an HTTP Post to a web page. Understanding how a web Post works would help a bunch with this, but you will need to know the names of the form variables used on the web page, and where that form Posts to. http://stackoverflow.com/questions/8222092/sending-http-post-with-system-net-webclient
Or create your own control that is derived from the messagebox with your own buttons
It's not the problem what system to use, it's how I make it save for each day. How I should first save it to ex. 06-06-13. If I get how to save it for that day I will be able to set it into a system. I just don't know how
there's a web browser control in VB that I've found very useful. it exposes the web pages DOM which I've always found easier to navigate through than simple text matching via string commands. it also has a few events so you can tell when a page has loaded and such, and you can also fire off events on the pages controls, such as submit and click and such. 
Just a question, as I have the option to select a date in the calender. How can I split it up so when ex. January is selected the numbers I set in will be set to January instead of the all year total? In other words, my question is as follows: How do I split up into months?
VB2005 had the ability to upgrade VB6 code to dotNet. It did a decent job, although you would have a lot of recoding to fix things that were removed, not directly convertible, or incompatible. If you can get hold of a copy, use that to upgrade and then manually fix the problems. 
I've read recently about a third party tool that works better than the visual studio project upgrader. Try googling vb6 upgrade or upsize tool which was free I think. Not sure if this ifs it, but here's an example. http://blogs.msdn.com/b/goto100/archive/2010/07/13/free-visual-basic-upgrade-companion-tool-for-vb6-to-net.aspx 
I think it was still available in 2008 as well. Definitely gone 2010 +
My honest opinion, having personally ported almost 100k LOC over the last 8 years: Seriously look at the code and decide if it's worth saving. If it is, it's probably faster to just copy and paste it in, and then clean it up from there. If not, just rethink what the code does, and rewrite it from the ground up. I used the converter quite a bit in 2005, and ended up never keeping any of the code it created. 
If you go the DB route, then all of the magic is in querying the DB for the things you want. So for example if you have one row per day, and you want to just get January, you would do a query against the DB that specified dates between Jan 1, and Jan 31. So the date becomes a filter for the returned rows. The basic rule for this is: if you might want to use it as a filter, get it in the DB. 
Assuming you are building the URL as a string, just do something like this: for i as integer = 1 to 20000 url = "imgur.com/" &amp; i.tostring next
I want to rewrite it but without learning vb6 first :/
You can do it using generics and reflection: Public Function StructAreEqual(Of T)(Struct1 As T, Struct2 As T) As Boolean Dim typ = Struct1.GetType Dim fields = typ.GetFields For Each f In fields Dim val1 = f.GetValue(Struct1) Dim val2 = f.GetValue(Struct2) If Not val1.Equals(val2) Then Return False Next Return True End Function 
Yep. You guessed correctly. Still slightly confused, but I guess I won't have to worry about it. Thanks!
Can someone explain why this useful article for VB newbies is being down voted? 
Can someone explain why this useful article for VB newbies is being down voted? 
Can someone explain why this useful article for VB newbies is being down voted? 
You could use a variable thats either 1 or 0, and use an 'if then else' to control the events, and the button to change the variable
Or a subroutine that gets passed a variable. Variable determines the function of the subroutine. Same concept. 
Got it! Thanks!
Awesome!
Google global hot keys. You'll end up using WndProc, IIRC.
Not sure. I went the other way once and what I did was start a new project with the Compact Framework and then pasted my full framework code into it. From there, I just started editing out all of the errors. Of course the interface code had to be completely redone.
That doesn't work. It just does the first username/password in the My.Settings.
Simple solution: Make two variables: string variable containing your text integer variable which will count Make Ticker object and give it delay you want Inside Ticker_Tick code add this: SendKeys.(textStringVariable(countIntVariable)) countIntVariable += 1 I don't remember exact codes, but It should be something like that
I've been trying todo that, and It seems pretty hard. But it should be possible since Google Calculator can do that. Only solution I can think of: Put each symbol/number in array as different members, so *123+456* would be ["123","+","456"]. After that you would have loop through array, checking next members(or if it is "(" searching there it ends). Pretty hard for various function, but for basic like add/substract/divide/multiple it should be easy. Edit: You also could try using eval, but I have no idea how would you do that.. I just know eval can handle 2*2
What kind of file are you using?
Put what code you are currently using, I've never used My.Settings, but I've done tons of looped listboxes.
Create a string array to contain each combo item's "unique text" recall/set it as stringarrayname[combo.listindex]
I started with VB5, so I'm not entirely sure how it was setup prior to that, but here's my thoughts. The one thing that separates VB from other old Basics is the introduction of Forms. Most Basic languages will use similar syntax, but VB1 is probably closest to VB6, especially when it comes to those forms. MS isn't the only company that ever produced a Basic language (there are a few others out there, even today), but they each have small variations. VB in particular (prior to .NET) closely linked the compiler to the IDE, and (in VB5 and 6 at least) used custom binary files for the forms layout, so third party IDEs don't exist. I'd think that you should be able to use NotePad++ or any other good text editor to open the source files for the code itself, but the forms may not be recoverable without the original IDE. 
VB1 used forms. ASCII-art forms.
I just ran this and gage is definitely NOT 8. Gage is a very very small number. I am showing 8.4993917780931822E-49 which would satisfy the first condition. I would suggest reworking the math in the top part.
Sure it's not 8.4993917780931822E-49, which is far less than 1. Put a break on the Next in your for loop, and watch the SinceNew variable as it decrements. 
I have used VB1. I remember the documentation being very helpful..I know you can find full copies of VB1 on the internet very easily. Is there anything specific you need help with?
Let me see if I can dig up the help files somehow.
I would use Select Case instead of ElseIf.
Thanks. I fixed it, gage is now accurate to within ten seconds.
unfortunately I cannot convert the documentation to any format readable by modern operating systems. However, if you google VB1 Dos you can find the installer and load it up on DOS Box (dosbox.com) and read it that way.
 When the application starts ( in main ) you should be able to parse the command line arguments like below: For Each command As String In My.Application.CommandLineArgs 'get the value of command here Next 
Thanks, so the first line declares the object to hold a specific amount of memory for it, the = new actually creates the object? Is my thinking correct?
That's right. You can think of it as saying you're going to buy a dog and call him scruffy. That's the same as Dim scruffy as Dog You still don't have a dog so you can't use things like Scruffy.TakeForWalk Once you say Scruffy = New Dog Then you can actually interact with the dog because it now exists. 
Brilliant!
The dollar sign actually goes *before* the amount, not after. (Note that some Frenchies in Canada do not follow the same convention as the rest of the world. If you are a French Canadian, please do not bother replying to this auto-generated message.)
That's because it's probably not looking for a username, rather a unique ID number.
how do i find that?
When you initiate the call is an ID number returned?
the skype tracer does, but its a different number every time and i cant find a command to pull that number into my code.
You could create a web interface to call the COM through .Net and call that interface through Java.
came here to help, but this isn't helpfully set out. nothing to copy and paste images go horizontally rather than vertically; disappears off-screen when i resize it bigger.
Listbox1.Items.Add(My.Settings.Username) Listbox1.Items.Add(My.Settings.Password)
If you have them entering seconds, why not put a numericupdown on the form, so they can't enter an invalid amount? As to the code posted, you might want to check for isnumeric before you do the conversion: Change: intTime1 = CInt(txtTime1.Text) intTime2 = CInt(txtTime2.Text) intTime3 = CInt(txtTime3.Text) strName1 = CStr(txtName1.Text) strName2 = CStr(txtName2.Text) strName3 = CStr(txtName3.Text) 'Define possible results 'Check for Numeric values If IsNumeric(intTime1) And IsNumeric(intTime2) And IsNumeric(intTime3) Then 'Check for postive values If intTime1 &lt; 0 And intTime2 &lt; 0 And intTime3 &lt; 0 Then To: strName1 = CStr(txtName1.Text) strName2 = CStr(txtName2.Text) strName3 = CStr(txtName3.Text) 'Define possible results 'Check for Numeric values If IsNumeric(intTime1) And IsNumeric(intTime2) And IsNumeric(intTime3) Then intTime1 = CInt(txtTime1.Text) intTime2 = CInt(txtTime2.Text) intTime3 = CInt(txtTime3.Text) 'Check for postive values If intTime1 &lt; 0 And intTime2 &lt; 0 And intTime3 &lt; 0 Then Hope that helps!
Since intTime is always going to be an number, this will pass the same error into the if statement. I think you meant to check the Textbox values with Isnumeric. If IsNumeric(txtTime1.Text) and .... 
My first thought is: are you using actual integer values. Integers don't have decimal places in them, so my thought is that runner times would be decimal numbers with large values after the decimal. If so, then change to a Double, or Decimal instead of an Integer It's also possible that the numbers are extremely large numbers representing elapsed seconds or MS, and are simply too large for an Integer, in which case you'd want to use an Int64 / Long. Posting the input would probably be helpful in this case. Another note: If IsNumeric(intTime1) And IsNumeric(intTime2) And IsNumeric(intTime3) Then will always be true. You're checking an integer (intTime1), to see if it's numeric, and since it's an integer, it always will be. You probably want to check the textBox.Text before casting, or cast with a different method, depending upon what you want for the final result: If IsNumeric(txtTime1.Text) then intTime1 = CInt(txtTime1.Text) End If Other possibilities: CInt will only convert a numeric value if it can be converted to an Integer (short, long, double, decimal) , or a string that's in a numeric format that can be converted to an integer ("1", "2.5"). If the value of the textBox.Text is blank (""), Nothing (null), a non numeric value ("a", "a1", etc), or a number that can't be an integer ("3000000000"), it will fail. CInt will also apply bankers rounding to the number so that may mess with your numbers as well. You can also use Val() which will return any number available in the textBox.Text, or a 0 if no numeric value can be found. Val() returns a Double, so you still have to convert down to an Integer, but your code would look like this: intTime1= Cint(Val(txtTime1.Text)) If TxtTime1 = "1a", "59", etc., then you'll get the numeric portion (I believe that "1a1" would only get you a 1), If it's "", Nothing, "dave", etc. then you'll get a 0. 
You should be able to set the following on the form (assuming .NET) Me.FormBorderStyle = Windows.Forms.FormBorderStyle.None Me.WindowState = FormWindowState.Maximized That will get you to full screen, but you'd have to do any extra work to hide menu bars, or task bars. 
You were right, I changed the cast order putting the Cint conversion under the the "IsNumeric if statement, I also changed it to a double like I'd planned to all along I just wanted to get the program working first. Thank you so much for your help. So it looks like this now: strName1 = CStr(txtName1.Text) strName2 = CStr(txtName2.Text) strName3 = CStr(txtName3.Text) 'Define possible results 'Check for Numeric values If IsNumeric(txtTime1.Text) = True And IsNumeric(txtTime2.Text) = True And IsNumeric(txtTime3.Text) = True Then dblTime1 = CDbl(txtTime1.Text) dblTime2 = CDbl(txtTime2.Text) dblTime3 = CDbl(txtTime3.Text) Here is an example of what I was trying to achieve: http://imgur.com/a/wjuHj#0 A no input in the runner fields would return an error box. A negative input in the times fields would return an error box and a text input in the times fields would return an error box. Again, thank you for your help.
You were right, I changed the cast order putting the Cint conversion under the the "IsNumeric if statement, I also changed it to a double like I'd planned to all along I just wanted to get the program working first. Thank you so much for your help. So it looks like this now: strName1 = CStr(txtName1.Text) strName2 = CStr(txtName2.Text) strName3 = CStr(txtName3.Text) 'Define possible results 'Check for Numeric values If IsNumeric(txtTime1.Text) = True And IsNumeric(txtTime2.Text) = True And IsNumeric(txtTime3.Text) = True Then dblTime1 = CDbl(txtTime1.Text) dblTime2 = CDbl(txtTime2.Text) dblTime3 = CDbl(txtTime3.Text) Thanks so much. Also, I'm not even familiar with "numericupdown" haha, that's way too above my head, currently.
Here's a recent article on game engines for Windows8: http://blogs.msdn.com/b/ukmsdn/archive/2013/07/22/using-middleware-to-reduce-development-time-or-cost.aspx 
Found this online at [stackoverflow.com](http://stackoverflow.com/questions/4649877/making-winforms-fullscreen), which make the app fullscreen when Maximized. You'd still have to catch an F11 keypress and Maximize the form: Public Class Form1 Private Const WM_SYSCOMMAND As Integer = &amp;H112 Private Const SC_MAXIMIZE As Integer = &amp;HF030 Protected Overrides Sub WndProc(ByRef m As Message) If m.Msg = WM_SYSCOMMAND AndAlso m.WParam.ToInt32() = SC_MAXIMIZE Then Me.FormBorderStyle = FormBorderStyle.None Me.WindowState = FormWindowState.Maximized Return End If MyBase.WndProc(m) End Sub Protected Overrides Function ProcessCmdKey(ByRef msg As Message, ByVal keyData As Keys) As Boolean '' Restore window when the user presses Escape If Me.WindowState = FormWindowState.Maximized AndAlso keyData = Keys.Escape Then Me.FormBorderStyle = Windows.Forms.FormBorderStyle.Sizable Me.WindowState = FormWindowState.Normal End If Return MyBase.ProcessCmdKey(msg, keyData) End Function End Class
This may shed some light on the subject: http://www.techrepublic.com/blog/software-engineer/avoid-the-symbol-in-oracle-passwords/ 
I saw that during my 2-3 hour long Google search on the subject. I can't find anything that's very recent, though. This article was posted in 2007, and is related to an older version of Oracle. I am also using double quotes, like the article recommends, and that doesn't seem to be working, either.
I'm a bit out of my normal area here (I do more .NET work than VB6/VBA), but IIRC the ADODB stuff (especially where Oracle is concerned) is all in maintenance mode, and hasn't been actively developed in a number of years. I'm guessing that the implementation in ODBC is probably not implemented in a way to handle the @ in a password. http://support.microsoft.com/kb/244661 http://msdn.microsoft.com/en-us/library/windows/desktop/ms713590%28v=vs.85%29.aspx 
Oh, that's interesting. How do you make an Oracle connection in .NET? I do a little bit of work in .NET, and I just use the same method that I use in VBA.
I haven't done Oracle in .NET, but I think ADO.NET is the recommended method for DB connections in most instances. Looks like they have an ADO.NET provider: http://www.oracle.com/technetwork/topics/dotnet/index-085163.html 
There's an openGL support if that helps called openTK. This guy has a good tut for setting it up: http://www.youtube.com/watch?v=idnyxboXNMI he also had another video about rotation and other stuff like that. http://www.opentk.com/
Perhaps escape it with a backslash? \
This works on my PC: Process.Start("iexplore", "c:\pic.gif") To be safer (or to use another browser than MSIE), you could replace "iexplore" with the full path to the browser.
Ah, thank you.
You don't need visual basic for this.. An If statement in a cell will do: 
basic pseudocode solution if A2 = 0 or A2 = 1 then C2 += 1 end if you would then implement this with a loop so that it goes through all the cells. 
You should have added the images after setting the size to 150x200. Delete them and add again.
Another vote for getting rid of the imagelist, and moving to resources.
If you add the image as a resource, you can name the image whatever you want. Give the image a name with a number and you can retrieve it that way. 
I just guessing, here, but on blank form, right click the Toolbox and select Reset Toolbox. Does that fix it? You can also right click on the Toolbox and select Choose Toolbox Items. Then press the Reset Button. I have not done this but the help says: "Reset button - Restores the Toolbox to the state it was in when Visual Studio was first launched. Removes any added Toolbox tabs or items, and restores all default tabs and items to their original positions. All additions, deletions, renaming, or reordering of tabs or items on tabs are undone." 
your console.writeline should be like this console.writeline("test") Console.writeline expects a string
Oh thanks!
I don't really understand how a loop would be needed here in an event driven by a button press.
Sounds like it. You'd need an if then else statement. That's it. Put the bottom two controls inside a panel control. Hide it by default. If the value in the text box matches, set the visible property to true. 
Somewhere in that rather long expression is a null reference. Evaluate the expression from left to right and find out what is nothing.
I've used same one in msgbox, and it showed it properly..
The btn_click would start the game, the loop would keep it going until the correct answer was given. I'd give example but I'm on my phone sorry. 
Panel.Paint? (Or is it OnPaint?)
Yup Paint works, Thanks!
Any code? Are you making a copy of the argument such as: Sub doSomething (ByRef myArg as Integer) copyArg = myArg End Sub This would render what you are trying to do void.
Any reason why you are using a Sub? A Function would return back a value that you can then use to change your value. Private Function returnValue (byref somevalue as string) as string returnValue =left(somevalue ,4) end function Code though would help though. Also read http://tom-shelton.net/index.php/2009/08/17/byval-vs-byref-what-is-the-difference/
in your designer, double click on the button. Doing so should create an event handler in the code for the form. you put code in that SUB to do what ever you want to do when the button is clicked. should look something like this when your done. Public Class Form1 Private Sub Button1_Click(sender As System.Object, e As System.EventArgs) Handles Button1.Click Me.TextBox1.Text = "hello" End Sub End Class 
Ok, I'm not that noobish, sorry. Here is a picture of how far I'm. [Codes](http://gyazo.com/f16387d58521135a583a845edfb2f616.png) 
Can you explain the purpose of what you are wanting to do in a little more detail? The Knap_Click sub will provide events that happen once you click the button. If you are wanting to do a check on if the button has been clicked at any time during the process, then you could declare a variable under the Button_Click sub and then check what it is later. I don't think this is what you're asking, but maybe this will get you going in the right direction. Public Class Form1 Dim buttonchecked as integer Private Sub Button1_Click(sender As System.Object, e As System.EventArgs) Handles Button1.Click buttonchecked = 1 End Sub Private Sub Checkbox_Checked(sender As System.Object, e As System.EventArgs) Handles Checkbox.Checked If button checked = 1 Then ... End if End Sub End Class 
It was just a small project not really meant for anything. I was asking, when I have filled out the textboxs, which code/line I could use to pull out the information from the textboxs. Dim content As String then after I would call it out: content = "Surname: " &amp; FTB &amp; vbNewLine &amp; "Lastname: " &amp; ETB &amp; vbNewLine &amp; "Age: " &amp; Alder1.Value &amp; vbNewLine &amp; "Gender: " &amp; Køn1 MsgBox(content) I was getting an error because I didn't put .text behind. So I ended up with: content = "Surname: " &amp; FTB.Text &amp; vbNewLine &amp; "Lastname: " &amp; ETB.Text &amp; vbNewLine &amp; "Age: " &amp; Alder1.Value &amp; vbNewLine &amp; "Gender: " &amp; Køn1.Text MsgBox(content) Which now works. **TLDR;** Needed to put .text behind the textbox names.
it gives me a Statement is not valid in namespace error
Put a shortcut to it in the startup menu. That's the easiest way.
can i do that with code? I want to send it to people and make it so that it also starts up there automatically 
Make sure you import Microsoft.Win32 put Imports Microsoft.Win32 at the top of your code then call it like StartUpInstall("test", "C:\windows\notepad.exe", False) This works for me in .net 2012. Installing to the machine and not local user likely requires admin rights.
it sounds like you may be putting the code in the wrong spot. Can you paste the full code to pastebin and give me a link?
Make an installer for you program and you can create the shortcut easily. Check out [Advanced Installer](http://www.advancedinstaller.com/).
http://pastebin.com/5EQyWKLk Its not very organized :/ PS: not all code is mine some I found online
I know all about unorganized code, its the only kind I know how to write. Try this http://pastebin.com/bYhj2J9J It looks like you were putting the function outside of the form class. 
easiest way, shortcut in Start&gt;Programs&gt;Startup 2nd method is via Registry, add a key w/ the path in HKLM or HKCU, Software\Microsoft\Windows\CurrentVersion\Run
Oh sorry, I didnt actually check all the code. I can't see where you are calling the startup function in that code at all, and I did not add it. Add StartUpInstall("MyAppName", "MyAppPath\MyApp.exe", False) to your form load, make sure to change the app path to your actual path.
You can also look at Application.ExecutablePath Maybe more useful stuff under just Application. (just type it, and see what it has) It has been awhile since I've used VB. I have mostly moved on to PHP.
Using QuickWatch on .rows it says it isn't declared :/
try myDataGridView.Rows
from your description of the problem, i'm not sure why the quickwatch expression is failing. okay, remember what I said about long expressions being confusing? let's break it down and make it less confusing. Dim firstSelectedRow = myDataGridView.SelectedRows(0) Dim indexOfFirstSelectedRow As Integer = firstSelectedRow.Index Dim firstSelectedRowAgain = myDataGridView.Rows(indexOfFirstSelectedRow) Dim firstCell = firstSelectedRowAgain.Cells(0) Dim valueOfFirstCell = firstCell.Value Dim stringValueOfFirstCell = valueOfFirstCell.ToString() when you step through code that looks like this, it should be easier for you to find the problem.
Using "New Collection" instead of "Collection" solved it - still thanks.
i foolishly assumed ListVariableOfString was not null. are you coming from a VB6 background?
Only used vb6 in school. Anyway thanks again for help, gonna lurk here more often, hope to see you sometime there too :D
You can do it via the installer projects that are already built into VS
Sorry bud, my days of making keyloggers and trojans are long behind me.
A trial version of what? Your university might be part of Microsoft's Dreamspark premium which means you can get a free Windows license. Then use boot camp or a VM to run Windows on your mac and install VS
no problem! thanks for the help anyway :D 
The closest thing to vb on a mac when I last looked 10 years ago was RealBASIC. It is not completely syntax compatible with actual VB
The only way you can do it would be to run Windows in a VM, they don't develop any sort of IDE or even compilers for an environment which couldn't run the program.
Check your Boxfield Textbox Properties and ensure that: RightToLeft = No and TextAlign = Right See if that fixes your issue. 
Ahh, I was not as specific as I should have been, the issue is that the +/- button should turn the number into an integer, as in -9 instead of 9. But the "-" sign is showing to the right, when it must show to the right, any Idea on how to get just that to move over?
OK, sorry, I am a little confused now. I assume you meant "the "-" sign is showing to the right, when it must show to the *LEFT*" And that the issue you are having is in the way the number is displaying in Boxfield? As in if you have "9" displayed and you press the "+/-" button it should display "-9", but instead it is displaying "9-" If this is the case, then my suggestion above should fix that issue. Did you try it? If that isn't the issue, then I am not sure exactly what you are trying to accomplish in the AddSub_Click Event.
Yes, that is what I am trying to accomplish. The above fix although, does not seem to fix it.
Strange, the first two times I changed the settings, the it had no effect, after restarting my computer, and thus VS2012 , the effect took hold, and thus working. Thanks for the help :) I honestly didnt think anyone would respond.
I haven't checked this in VB, but how about something like this in the For Loop: ListBox1.Add strPLNames(intx) ListBox1.Add System.String.New("*"c, dblArrayPlanetSizes(intx) \ 1000)
You're not adding a multidimensional array to the listbox; you are adding information from multiple arrays (There is a difference). I used slightly different code than you, and there might be a better way of doing it, but something like to following should do what you want: Private planetName() As String = {"Mercury", "Venus", "Earth", "Mars", "Jupiter", "Saturn", "Uranus", "Neptune", "Pluto"} Private planetSize() As Integer = {3031, 7521, 7926, 4223, 88846, 74898, 31763, 30800, 1430} Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click For i As Integer = 0 To planetName.Count - 1 ' main loop adds planet name and size info to listbox ListBox1.Items.Add(String.Format("{0}{1}{2}", planetName(i), vbTab, planetSize(i).ToString)) Dim s As String = String.Empty For j As Integer = 1 To CInt(Math.Floor(planetSize(i) / 1000)) ' internal loop adds an asterix for each 1000 miles of size s += "*" Next ListBox1.Items.Add(s) ' then adds it to the listbox Next End Sub
Or - just for fun :) - you could implement a planet class and simplify the loop. A little overkill, probably. Planet Class: Private Class Planet Private m_Name As String Private m_Size As Integer Private m_SizeRepresentation As String Public ReadOnly Property Name As String Get Return m_Name End Get End Property Public ReadOnly Property Size As Integer Get Return m_Size End Get End Property Public ReadOnly Property SizeRepresentation As String Get Return m_SizeRepresentation End Get End Property Public Sub New(ByVal name As String, ByVal size As Integer) m_Name = name m_Size = size Dim s As String = String.Empty For i As Integer = 1 To CInt(Math.Floor(size / 1000)) s += "*" Next m_SizeRepresentation = s End Sub End Class And the implementation: Private planets() As Planet = {New Planet("Mercury", 3031), New Planet("Venus", 7521), New Planet("Earth", 7926), New Planet("Mars", 4223), _ New Planet("Jupiter", 88846), New Planet("Saturn", 74898), New Planet("Uranus", 31763), _ New Planet("Neptune", 30800), New Planet("Pluto", 1430)} Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click For Each p In planets ListBox1.Items.Add(String.Format("{0}{1}{2}", p.Name, vbTab, p.Size)) ListBox1.Items.Add(p.SizeRepresentation) Next End Sub Sorry, I am a little bored this afternoon.
I ended up going with something similar to what you have here. Ended with this: Private Sub btnShow_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnShow.Click 'Number of planets before Pluto was "let go" Const intNUM_PLANETS As Integer = 9 'Planet names Dim strArrayPlanetNames() As String = {"Mercury", "Venus", "Earth", "Mars", "Jupiter", "Saturn", "Uranus", "Neptune", "Pluto"} 'diameter of each planet in miles Dim dblArrayPlanetSizes() As Double = {3031, 7521, 7926, 4223, 88846, 74898, 31763, 30800, 1430} For intX = 0 To intNUM_PLANETS - 1 'output name and size lstPlanets.Items.Add(strArrayPlanetNames(intX) &amp; ControlChars.Tab &amp; (dblArrayPlanetSizes(intX))) 'output bar chart on next line Stars(dblArrayPlanetSizes(intX)) Next End Sub Private Sub Stars(ByVal intSizes As Integer) 'define the variables for the stars Dim strStars As String = String.Empty Dim intStars As Integer 'convert it to an integer intStars = CInt(intSizes / 1000) For intX = 0 To intStars - 1 strStars &amp;= "*" Next 'output to listbox lstPlanets.Items.Add(strStars) End Sub
Hey man, I wish I was able enough to come up with different ways of doing the same process with code, just because I was bored. I respect you.
What have you come up with so far?
Excel for Mac 2011 supports VBA (and works with excel!)
The CSS to override the text is wrong. Also, I don't believe statements bullet points are syntax correct.
How do I open this project, i've tried using visual studio and it doesn't open the program which is shown in the image.
Starting looking at the VBA but decided to screw learning and just did tables and a vlookup on a hidden worksheet. Thanks if anyone read anyway.
Let me start by saying that I haven't worked in VBA in many, many years, so my suggestions may be a bit off: I see two pretty common problems here: One is that you are trying to do math on a string variable, which as you can see causes problems, and the second is that you are continuing to check the value of Label8 after you have found the right answer, and changed the label. Caption properties (Label.caption) are string variables. But you are trying to do math on them. The type mismatch error is telling you that you are trying to do math on a string that doesn't contain a number. Sometimes VB can convert the string to a number (as long as it only contains a number), but once you add a letter to the .caption, it breaks. Two fixes for this (preferably combined): Rather than loading the result of the RandBetween ... into Label8.caption, create a numeric variable (integer should work just fine), and load it into that variable. Then test the variable, and add change the label. So: Label8.Caption = Evaluate("RANDBETWEEN(1,75)") If Label8.caption &lt; = 15 then ... becomes Dim Number as integer Number = Evaluate("RANDBETWEEN(1,75)") If Number &lt;=15 then .... Label8.caption = "B" &amp; Number .... The second fix is to not continue to check the label once you've found the match, and updated it. If the first condition is true (label8.caption &lt;= 15) then you change the caption to B + the number (B5 for instance). Then you check to see if Label8.caption &gt;=16, except that the caption now equals "B5" so the mismatch error throws. You can fix this by doing using If, ElseIf, else. If Label8.Caption &lt;=15 then 'update label here Elseif label8.caption &gt;= 16 then 'update label Elseif .... Else 'last item to check Endif This method requires a bit more work, since you have to check both less than or greater than (to see if a number is between the range), but you should be able to work that out. Sometimes reordering the check from largest to smallest will work as well. Hope that helps! 
The closest thing to VB on Mac is [Xojo] (http://xojo.com), formerly RealStudio. It's quite good, and can compile to Mac, Windows and Linux. 
Not a book, but Macros can be very beneficial is learning how to go about doing certain tasks. Record a macro of doing something and then go in and look at the code it produced. Not always the best code (usually very verbose) but at least you can begin to see the pattern of how the objects use their properties to perform tasks. 
As a side-note, if you have a "group" of responses but you only want to allow one to be selected (for example, Gender) then you should use a Radio Button. This helps you accomplish two things: 1) Your logic is simplified, because you don't have to enforce the "select-only-once" requirement -- it's built into the Radio Button. 2) The Radio Button is the standard control for this type of scenario, so users are likely to be familiar with it, and you will reduce the number of attempted submissions with bad data.
[This book](http://www.amazon.com/Excel-Power-Programming-Spreadsheets-Bookshelf/dp/0470044012/ref=sr_sp-atf_title_1_1?ie=UTF8&amp;qid=1377785777&amp;sr=8-1&amp;keywords=excel+2007+power+programming+with+vba) has never let me down. There are versions for each version of excel you need. I would also say learn to use the object browser and help functions within VBA. They can be helpful in explaining what functions and objects do. I probably learned the most by typing in google: "How do I do _____ in access VBA?" 
I think the reason most(?) of us have learned best this way is the concreate example. To the OP I highly highly recommend what EinSpringFielder has suggested. Just record macro and look at the code. Next step once you sort of think you understand what is going on with a lot of basic things is to look into creating an project for yourself. If you have 0 ideas, sudoku is always a fun thing to program. You have a bit of math, spatial relationships, you can use arrays, there are a number of ways to solve problems you will encounter. Just keep googling as you go, and hitting F1 over key words, and exploring the libraries (disable the online help in office, the built in is much better imho, esp. with re: to vba!) Another way to go is to just search /r/excel or /r/visualbasic for requests. Even if someone else has sovled it, try to work it out for yourself. The bonus is, that if you get stuck, someone else will likely solve it for you, and you will get to see a solution. There is also the bonus, that you could help someone out. Even if you come up with a solution, people often suggest better/different solutions, which further helps you see different ways to go about the problem. I actually can't recommend any books. I think I have 2, that I never really touch. The MS help and google are the two best resources you are going to have. (and the macro recorder for the first little while... even having used vba since 98 version off office, I resort to recorder to get me started at times).
Instead of putting them all inside a nested If statement. put them all in their own. If Condition Then End If If Condition Then End if Instead of If Condition Then - Else If Condition then end if End if Do you understand?
Holy freaking nested statements. 
Use a select statement and save your brain from burnout.
I really recommend www.freevbcode.com - never would have survived if it wasn't for that site!
Atleast used End If.. Select Case would be best option..
I think that you need to use something like this instead Dim oListItem As ListItem For Each oListItem In collListItem ListBox2.Items(oListItem).value Next oListItem or Dim oListItem As ListItem Dim I as Integer For I = 0 To ListBox2.Items.Count-1 ListBox2.Items(I).value Next I Hope that helps, I could probably help you out if you could share a session with me or something I love VB .. PM me - would love to help.. I know I got bad karma score, I could care less.. I say some fucked up stuff on the internet. BFD.
I'm pretty sure that resources are read only, since they are compiled into the exe, so you can read from them, but won't be able to write to a file in the resource. You'll want to look into writing the file to disk. You should also be using native readers and writers (streams), not the legacy FileOpen / Input / Output stuff.
Mind explaining how to do this? I'm just a beginner at the minute and open to all information I would need to know :)
GL, I spent all fuckin week looking for it only to just finally buy the thing today. I could make a digital pdf of the book for you. Normally I'm all about free information and what not but since I just spent a weeks pay on it I can't justify doing it for free. Let me know if you're interested.
I had this problem too a while back. I think the solution is to put &amp; vbcrlf &amp; in between the two items. It should look something like this ...MyBase.Load MsgBox ( "Name:______" &amp; vbcrlf &amp; "Course:______") The code to make text appear on a separate line in VB is weird.
Why is this so complicated? C++ was so simple, just /endl. Thanks man, you've helped me out a ton.
It's because MsgBox() is a method that creates a message box object. This method takes the string you want displayed as the parameter. Adding a comma after that string tells the compiler that you're moving on to the next parameter -- which is an optional parameter describing the buttons and/or icon to display in the message box. FYI there's a third parameter (also optional) which sets the title for the message box window. And VB doesn't support inline escaped control characters such as \n (newline), so doing something like "Name: ___\nCourse:___" doesn't work like someone coming from a C-based language would expect. As /u/AFake_Opitic said above, you have to manually concatenate a newline into the string parameter of MsgBox(). Also, it should be noted that **[vbcrlf](http://msdn.microsoft.com/en-us/library/microsoft.visualbasic.constants.vbcrlf.aspx)** is a legacy constant, and as such *should* be avoided. Basically anything from the Microsoft.VisualBasic namespace is legacy and really is only included in .NET for compatibility purposes. Using it really isn't going to hurt anything, and it is supported in every version of .NET, but the newer .NET constant is [Environment.NewLine](http://msdn.microsoft.com/en-us/library/system.environment.newline.aspx).
because sharing the book isn't illegal enough, you should totally sell a copy.
Nothing wrong with storing it in a text file. Really the "best" way to do anything depends upon the environment, the tools available, and the scope / intention. As long as you don't need historical reporting, or anything else that requires that this data be recreated later, and there are no issues with the files being where they are, then dumping it to a temp file seems like a quick and clean solution. 
Is this VBA, or VB6? If VB6 then the answer below should shed some lite on it. http://stackoverflow.com/questions/2366097/what-does-putting-an-exclamation-point-in-front-of-an-object-reference-varia
I definitely dont need historical data with it. I just feel like its a rather inefficient way. Thank you!
It looks like rsTest is a recordset, so the exclamation is used to reference the fields in the recordset. I believe rsTest!rowguid can be replaced by rsTest.Fields("rowguid") 
Where do these customer names reside in the beginning. If they are in the database that the query is using couldn't you just get the names of customers where email &lt;&gt; ''? to get a list of customers without email addresses? Then by iterating through the rows that were returned, place the name in the report straight from the query result.
 MsgGox("Name: ____" + VbCrLf + "Course: ______") Should work.
Not sell... share the load. What should be illegal is new editions of information that doesn't change be required by teachers who authored the damn book in the first place.
In this case, Data is a collection of something. The For loop iterates over each individual instance of Data. I assume it goes something like this: For iIndex = 1 To oProduct.Data.Count - 1 'Do something with each instance oProduct.Data(iIndex) ... Next iIndex In .Net, collections start with index 0, not 1, and Count gives the total number of objects. If oProduct.Data has 10 objects, then oProduct.Data.Count = 10, and the individual objects will be referenced by oProduct.Data(0) through oProduct.Data(9) 
Is there a way to "count" objects like that in C#?
Unfortunately, I don't know much C#. I assume it would just be a .Count property. This will only be valid for a collection (ie. an array or a list).
VB 6 is outdate, I think by more than 10 years. VB .NET is what you should use if you want your programs to run in Win7 or Win8. Migrating from VB 6 to VB .NET is easy. Most of the programing syntax and is nearly same, with small changes for the better. The IDE is better, and there are a number of books available. I'd suggest you to migrate to VB .NET as quickly as possible.
100% agree. VB6 is at more than 10 years, and 7 or 8 versions old now. You won't be able to open and edit VB6 code in VB.NET, but you should be able to use the basics of what you have learned to move forward. You can open the VB6 files (.VB) with any text editor (Notepad, Notepad ++, etc, but NOT Wordpad), and copy the code out to use on other things. You can get a free express version of VB 2012 or 2010 from the MS web site. http://www.microsoft.com/visualstudio/eng/downloads 
Don't forget that MS is very good at supporting legacy code.
I have been able to successfully install vb 6 on windows 7 and windows 8. Google around for a bit and you will find the workaround. However, you really should learn vb.net instead of a 10+ year old language.
Exactly what I did
Why oh why do they still reach VB6? VB.net is far more practical. You can always make Android Apps using VB for Android. Its awesome for that. PS: Pink forum?
 The short answer is that Range is an object, not a simple variable, and you have to use Set in VB6 / VBA to push a value into an object. The longer answer is that VB6 / VBA supports default values for classes / objects, and in the case of "myRange = xxxx" the compiler doesn't know if you intend to set MyRange equal to the reference that you are passing in, or if you want to apply the value to the default value of the range class. Using Set lets the compiler know that you want to assign myrange to the reference you are passing in. 
Use the reddit api?
http://www.developerfusion.com/tools/convert/vb-to-csharp/ You tryed this?
I've been using that a lot, but obviously it's imperfect. It doesn't handle all the weak typing in VB or unnecessary syntax sugar like "with."
uh, you run windows in parallels then whatever windows app you want, and it doesn't know it's not a "normal windows machine"
Thank you!
This would be better posted in /r/csharp 
Thank you.
The difference is negligible w/ VBNET
When concatenating (joining) two strings together in vb you should use &amp; instead of +. While + does work, it's not the "correct" way of doing things. Just a funfact for the day. ;)
To add onto the above, if you're writing into a text file to store high scores for a game (as it appears you're doing), you may wish to look into a hash function to prevent people from manually tampering with your text file. While it won't deter someone determined to crack your code, it'll deter most casual users. I would recommend looking into MD5 or SHA1 for this purpose.
You can load the web page into a webbrowser object or into an http object. Then load the loaded content into the DOM or use SAX to parse. If the text you are looking for is surrounded by specific tags, that will help. Also look for id, name and class attributes to help you when searching the text with DOM or SAX.
Electrical tape does the best job of keeping keys pressed down. Packing tape as well, anything that works well with plastiques
Did you also expect to get downvoted too?
Look at using SendKeys for the keystroke - not sure how you'd get it to stay active for duration though. Which key, and why? Depending on what you're trying to do, there's probably a simpler way.
Trying to hold down the "D" or "A" key.
So. You wanna know loops. There are three types of loops. A for loop, a do/while loop. And a fruit loop. Fruit loops are a breakfast cereal and are outside the bounds of what you need to know. Loop: a loop is a mechanism that runs a section of code a certain amount of times until a condition is met. When to use what loop: For loop. You use a for loop only if you know the start, stop, and step of the loop. Ex. Make a loop that will add every whole number from 1 to 100. Start = 1 Stop = 100 Step = 1 Do/while loop. Use this type of loop when you do not know the start, stop, and step. Ex. Take a number from the user that is between 1 and 100. Do { }while &lt; condition &gt; A " do" loop will always run at least once. A "while" loop may or may not run because it checks the condition before running. I apologize for not writing the syntax of the loop but I have been working with Java and C recently so I forget how exactly to write it, but I know they are similar. 
 Public Class script Const filename As String = "script.txt" Dim index As Integer = 0 Dim lines As list(Of String) Dim hideJoe As Boolean = False Sub New() If lines Is Nothing Then lines = New list(Of String) End Sub Function loadFromFile() As list(Of String) Dim textlist As New List(Of String) If System.IO.File.Exists(filename) = False Then File.Create(filename).Dispose() Using txtr As StreamReader = New StreamReader(filename) While txtr.ReadLine &lt;&gt; Nothing textlist.Add(txtr.ReadLine) End While End Using Return textlist End Function Private Sub advanceLine() 'move index by 1 index += 1 'skips past all lines that begin with "Joe:" If hideJoe = True Then While left(lines(index), 4) = "Joe:" index += 1 End While End If 'display the line displayLine(lines(index)) End Sub Private Sub displayLine(ByVal str As String) textbox1.text = str End Sub End Class Have the button call advanceLine(), and the appropriate line will be displayed in textbox1.text (or wherever else). Re-reading your post makes me think that hideJoe should be more appropriately renamed hideTom, but I'm sure you can figure out the correct bits to change.
After writing a wall of text, I figured out a simpler solution. Skip to "**Working**" to see that. One (relatively) simple way to do this would be to load the lines into an array, and have it read the next line every time you press Next. This would require a global array and counter (I'm assuming you're using forms rather than the command prompt), the file would load into the array when the program starts, and Next would increment the counter and display the corresponding line. The .Split function of the String class can be used to not display the name (if desired). If you wanted to switch off the Joe character, you'd just increment the counter by 2 rather than one. Here's some quick, rough code: Private aLines As String() Private iCounter As Integer Public Sub Load(blah blah blah) aLines = File.ReadAllLines("C:\Script.txt") iCounter = 0 End Sub Public Sub btnNextClick(blah blah blah) Handles btnNext.Click '.Split will split the given line up into an array, using the parameter char passed in as the split point 'In this case, you'll end up with an array in which the first element is the name, 'and the second element is that person's lines. If this person's dialog contains a colon, 'you'll end up with 3 elements, making life drastically more difficult. TextBox1.Text = aLines(iCounter).Split(":"c)(1) 'If you don't want the names omitted, lose the .Split(":"c)(1) part iCounter += 1 End Sub Note that this will really only work if each person's dialog is on a single line in the text file; if their dialog has hard returns in it (as in the case of paragraphs), it's not gonna work so hot. And I just noticed you said that some "lines" are made up of a couple paragraphs of text, which complicates things. There's a few ways you could do this... One way would be to, when you first load the array as shown above, iterate through it and figure out if each element of the array is the start of a character's dialog or a continuation (e.g. new paragraph); if it's a continuation, move it to the end of the previous element. That would look something like this: aLines = File.ReadAllLines(blah blah) For i As Integer = 0 To aLines.Length - 1 If Not aLines(i).Contains(":") Then aLines(i - 1) &amp;= Environment.NewLinew &amp; aLines(i) Next Another route would be to use a Queue and the .Peek function to accomplish the same thing at the time of printing the line, but we won't go into that because... **Working** [Here's what my form looks like](http://i.imgur.com/YqZcI5e.png) Here's the full code: Public Class Form1 Dim bNoJoe As Boolean = False Dim ar(4) As String Dim i As Integer Private Sub btnNext_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnNext.Click TextBox1.Text = "" Do If bNoJoe AndAlso ar(i).StartsWith("Joe:") Then i += 1 btnNext_Click(sender, e) Else TextBox1.Text &amp;= ar(i) &amp; Environment.NewLine End If i += 1 Loop Until i = ar.Length OrElse ar(i).Contains(":") If i = ar.Length Then i = 0 End Sub Private Sub Form1_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load ar(0) = "Joe: blah blah blah balh balh blah bhal" ar(1) = "Tom: al;dksfjasodijfasdeolkdjfaolijkfsdao" ar(2) = "sldfkjwoepfriksajdfoplidjfskdjfwe" ar(3) = "Joe: lolwut?" ar(4) = "Tom: lskdfjsoijfsdlkfjsioefsdjeiwoespjwefsojoilksdoklx" i = 0 End Sub Private Sub chkJoe_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkJoe.CheckedChanged bNoJoe = chkJoe.Checked End Sub End Class The contents of the array are obviously placeholder dialog for proof of concept. You can see that element (2) is a second paragraph of Tom's line. Here's a quick breakdown of the code in case you (or anyone else reading) can't follow: First thing when pressing "Next" is we clear the textbox. If you want all the dialog to remain visible, lose this line. The Do ... Loop Until guarantees that the body of the loop will be executed at least once. (We're gonna jump ahead in the logic here -- Else statement:) If Joe's dialog is turned on (the checkbox isn't checked and thus bNoJoe is False), simply add the line and a line break to the textbox. (Now we'll go back in the logic, If statement:) If Joe's dialog is turned off (the checkbox is checked and thus bNoJoe is True) and the current line (element of the array corresponding to i) starts with Joe:, we'll simply increment i and recursively call the btnNext_Click event handler again. This prevents a button click followed by an empty textbox. Basically, if this code was removed and we simply did nothing on Joe's lines, you'd click Next and nothing would happen, then you'd click Next and Tom's line would appear, then you'd click Next and the textbox would go blank, then Next again and Tom's next line would appear. After the If block, we increment i, then reach the end of the loop where we check to see if i is equal to the number of elements in the array (if it was and we didn't perform this check, the next check (ar(i).Contains(":") would throw an OutOfBounds exception), if it is we exit the loop, then reset i to 0 so we can loop through the dialog again. If i is less than the array length, we then check to see if the next line contains a colon; if it does, we exit the loop. Note that this is all banking on the premise that someone's dialog doesn't contain a colon. If it does, I recommend manually changing all the Joe: and Tom: to a character that doesn't appear in the dialog, such as Joe~ and Tom~, then changing the applicable parts in the code. Clear as mud?
To expand on the other posts here: String.split is what you are after here. The best way to handle this is to use a character that's not used in normal sentences as your delimiter. Something like: |\^*}{ etc. This lets you have multiple lines of text for each question or answer, and preservers the line endings. So your text file ends up like: Tom: What is the first letter of the alphabet? And here's some more of the paragraph.| Joe: A| Tom: What is the second letter of the alphabet?| Joe: B| Then you can read the entire file into a string, and slit it into an array. (this is air code, so it might need some tweaking) Dim File as string = my.computer.filesystem.readalltext(Filename) dim Lines() as string = file.split("|"c) ' &lt;&lt;&lt; lines array now contains the entire conversation. to loop the entire array : for each line as string in lines line now contains the next line. ... dim Parts() as string = line.split(":"c) '&lt;&lt; split out the actor from the line Parts(0) contains the actor Parts(1) contains the line next Hope that makes some sense. 
For what purpose?
I want to walk from one side of my skybridge to another on the game "Terraria" as it's kind of a bore.
You're welcome, Just edited the formatting to make a little more sense. Didn't catch that when I posted. 
Ah, specific! Tricky to do, I'm afraid. Some discussion on this subject here - http://www.vbforums.com/showthread.php?705791-SendKeys-Hold-Down-a-Key
Thank you for the quick reply. But it is not just one page and not just one computer. I need to use just the executable (the webbrowser) to access the site, without individually modifying the registry on every computer it is used on. Furthermore the computers may or may not have IE 10 installed (mine does but still doesn't access the page). 
the program, or the program's installer, can modify the registry. there's a silverlight based plugin to add websockets to IE9, I have no idea if that can work in an embedded IE control. outside of that, no ie10, no websockets. 
maybe you can pass a screen shot into something like OpenCV?
Take the image of your screen and scan it for a certain color (say the color of the circle) then offset from the first top left pixel of the circle found to click it in the right place? Just an idea. Good luck!
Thanks for all you help I finally found this: Found this code that can be added to any visual basic project to add the registry entry automatically and remove it when it is done. very clean, very easy I added the code directly at the bottom of my form code. http://www.daniweb.com/software-development/vbnet/code/442963/make-the-webbrowser-control-give-you-the-installed-ie-version-rendering The code makes it so you are using the latest version of IE instead of the default IE7 compatability view. I was having difficulties modifying regedit by myself, so this code does it and cleans up after itself. Can be added to any Visual Basic Project to make sure the latest version works.
I know it's technically possible to stream the screen contents, but I don't know how. maybe opencv or a similar computer vision system has that built in. 
If you're looking to round the number up to the nearest whole number, define your variables as Decimal instead of Single and use Math.Ceiling() method, eg. Math.Ceiling(answer). You should also avoid writing code in the events themselves. Try breaking your code down into smaller logical chunks and calling them in the event instead, to avoid redundancy and to allow you to re-use code. Since what you're trying to do is to find the area of something, write a new function that does exactly that: Private Function findArea(byval number1 as decimal) as Integer dim answer as Decimal = number1 * number1 * math.pi return Math.Ceiling(answer) End Function Then call the function in the button click event instead. Private Sub Button1_Click(blahblahblah) Handles Button1.Click Dim answer as Integer = findArea(textbox1.text) Msgbox(answer) End Sub NB. if you're using anything that starts with Math, you need to include this line "Imports System.Math" in the top of your code.
I'm not going to do your work for you, but I'll tell you one way to do it. Have 2 For Each loops, one nested inside the other. Have the outer one go from 0 to the width - 1. Have the inner one go from 0 to height - 1. Use these values to access every slot in the array, and add each value together as you go.
in addition: ask a more specific question, and post your "best effort" code. also, protip: put a summary of the question in the topic. this is VB subreddit, of course it's a VB question. 
If you want the numbers to round, set them as integer.
 Private Sub PictureBox1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles PictureBox1.Click End Sub Is what I have when I double click my picture to get into the event handler. I need to write code that will display the text "One" when the picture I have imported is clicked if that helps..
In the onclick method
What exactly do you want happen? Where is the text "one" displayed when you click on the picture?
Process.Start("http://www." &amp; Me.TextBox1.Text &amp; ".com") 
Okay im on my phone so I can't do real code layouts and junk but I'm gunna try. I dont know the exact code either but here goes. Dim website as string Dim pingCom, pingNet, pingOrg as int Website = "WWW." &amp;amp; txtWebsite.text (Idk the wording on this part so you will have to change it) PingCom = ping (website &amp; ".com") PingOrg = ping(website &amp; " .org") If pingCom &amp;lt; 500 Then goto (website &amp; ".com") Else if pingOrg &lt; 500 Connect (website &amp; ".org") Elseif ping net &lt; 500 Connect (website &amp; ".net") The logic here is that an invalid website will have a ping super high or it wont have one at all. In that case the program moves on and tries other endings (.net, .com, .org, etc). If none work you could have an input box pop up saying that no default ending worked please enter full address. You could even use radial buttons or something and have the user select the ending. That way there is little chance for program error. If I misunderstood your question let me know and I'll revise my answer. 
Could you tell me why you used a me.textbox1.text rather than simply textbox1.text. does it have to do with the process.start command or no?
Just coding practice. It's how I always do it. Easier if you have code referencing controls on a different form. 
Oh I see. I havent learned coding across forms yet. Hell I haven't even learned saving to a text file xD. I'm a complete noob at this but I gave it my shot lol.
i might put your background on a timer
I _believe_ (read: don't take my word for it) that if XOR is used in this manner Dim a As Integer = 10 ' 1010 in binary Dim b As Integer = 8 ' 1000 in binary secondPattern = (a Xor b) '0010 in binary It actually runs a binary comparison between the values of a and b with this logic: if there is one and only one 1 in a column, then return 1; otherwise return 0. Therefore, looking at the example there: 1010 1000 ---- 0010 AKA an integer value of 2 once you translate it out of binary. The pattern seems to hold for the other examples in the page you gave me, so you may want to check them out. Generally, however, XOR is more useful as a logic check to check if only one value is true. OR returns true even if both values are true, thus serving the function of and/or, but XOR only returns true when only one is true.
You could have one long graphic that you loop through. So you start from the very left side of the graphic and then move the coordinate to the right until you hit the edge - repeat.
A truth table for XOR: ||| :--:|:---|:--- XOR|**0**|**1** **0**|0|1 **1**|1|0 (If both bits are the same, return 0, otherwise return 1) In a nibble (4 bits), the value of each bit looks like so: [8][4][2][1] - decimal digits [0--0--0--0] - bits So, in binary, 10 = 1010 (8+2) 8 = 1000 (8) Using the truth table (or just by looking) you can see that only the second bit from the right will be set to 1 as both numbers are the same in binary aside from that bit: 0010 = 2 (in decimal) 
Not sure, thinking back now I guess that would be silly being that the output only depends on the first two boxes. Giving the AreaCodeBox and the PrefixBox variables I'm having trouble with what your code gives back, it says under AreaCodeTextBox.Text, 'AreaCodeTextBox,Text is not yet declared. What am I missing? 
When you placed the TextBox controls on the form, what did you name them? It looks like you changed the name of one of them to AnswerBox. What did you name the first two? Those names are what you need to replace in the statements above. AreaCodeBox is an Integer, not a TextBox control; that's why 'Text' is not a member of 'Integer'. I think you are getting confused because you named the variables you need to work with with the suffix 'Box'. Try naming them like this: Dim AreaCode As Integer = Convert.ToInt32(AreaCodeTextBox.Text) Dim Prefix As Integer = Convert.ToInt32(PrefixTextBox.Text) If AreaCode = 847 and Prefix = 395 then AnswerBox.Text = "Local" and replace AreaCodeTextBox and PrefixTextBox with the control names.
Hmm, I'm not sure if registry access and process lists are the same thing -- or is that what I should be looking for? On StackOverFlow, It seems all of the links for Filemon are dead.
Yup! Got it. Thank you so much! Just was confused with the naming. :)
if you're watching for processes, that would be a process list.
Getting the Process List is pretty straight forward, the MSDN has a How to: http://msdn.microsoft.com/en-us/library/ms172711(v=vs.80).aspx But this is a manual check for a running process. I'm curious if there is a more "event trigger" driven approach. If my program is minimized to the system tray for an hour and then the user decides to open up Notepad, how could I detect that Notepad has been opened?
did you read the answer in post I linked? that's basically the gist of it. short answer is, you become a windows API god.
it's possible, it's very, very, very difficult, especially with VB.
Hm. I see.. I suppose I'll have to settle with using a separate thread with something like a 5 second interval to look at the process list.
Write something, anything, but write something. Pick a simple project, and just dig in. Even if the code isn't pretty, you'll lean more by just trying to do something than anything else that you can do. 
can you give me any sites?
Did you delete a resource or rename one? An image maybe?
You have some problems if: Dim AreaCode As Integer = Convert.ToInt32(AreaCodeTextBox.Text) is not a number. How about testing for it: Dim AreaCode As Integer = If(IsNumeric(AreaCodeTextBox.Text), Convert.ToInt32(AreaCodeTextBox.Text), -999) Now you can check for a -999 before proceeding.
It was Easy... All I had to do was remove the "Set" form the beginning of each... God I'm an idiot.
and for the newbs that don't understand, you use Set for objects (Workbook is an object datatype), don't use it for normal data variables. 
There are actually a few different ways to handle this, and a lot will depend upon how you want to treat negative numbers. Int() and fix() are two options: http://msdn.microsoft.com/en-us/library/xh29swte%28v=vs.90%29.aspx the Math class also has a bunch of tools (floor / ceiling / round with midpoint / truncate). Again, all of these have rules regarding negative numbers, so you'll have to do a bit of reading to determine the best to use. http://msdn.microsoft.com/en-us/library/system.math.aspx You could also convert it to a string, and remove the decimal portion for display. 
Int() worked perfectly, thank you!
The ticker must be enabled. Then the tick event of the ticker is triggered at every interval. Put your code in there and make the "number of cookies" a public variable. 1ms is too short, the user won't care about 1ms updates... Better off ticking once a second. 
Set it to 1000ms (1s), ensure the timer is enabled, and put it in the Tick event.
The first For loop counts from 8 to 22 by 3s, so 8, 11, 14, 17, 20, 23. Since 23 is greater than the loop break condition (i = 22), the body of the loop is executed 5 times. Each execution simply subtracts 1 from n, which starts out as 18. So n ends up being equal to 13. The next loop runs until i (which is currently 23 from the previous loop) is equal to (or less than) 10, so it's going to execute 13 times. Now, since the assignment in the second loop is "m = ", rather than "m += ", the value of m is going to be overwritten on each iteration. Also, since m is an integer, only whole numbers are going to be stored in it, so the .141592 portion of what is added to i is simply going to be discarded. And since m's value is being overwritten each iteration, the only iteration that is relevant here is the iteration where i = 11, since that will be the last execution of that loop. The end result is that 13, 14 will be printed.
Oh hat was exactly what i was thinking but i forgot about the .1415 part and the rounding i wish i had reddit gold to give you, thanks!
Sorry but why 14?
Aha! But if what breaks the loop is i&lt;=10 , shouldn't stop at i=10, hence being 13 not 14?
First, check to ensure that what's in Textbox.Text is actually a number. Look at the TryParse methods for ideas how to do this. After you have converted it into an actual number, then, see if it's a whole number (nothing after the decimal) Then put what you have above in.
You could use something along these lines... If Not IsNumeric(TextBox1.Text) Then MsgBox("NEITHER ODD OR EVEN") ElseIf CDec(TextBox1.Text) &gt; Math.Floor(CDec(TextBox1.Text)) Then MsgBox("NEITHER ODD OR EVEN") ElseIf CDec(TextBox1.Text) Mod 2 = 0 Then MsgBox("EVEN") Else MsgBox("ODD") End If
I'd use a Select Case for that. would be much neater and easier to add more levels later. I have no idea what you mean by the side note.
Select case is an alternative to if-then. Select Case x Case 1 ' do whatever if x = 1 Case 2 ' do whatever if x = 2 Case Else ' do whatever if it is anything else End Select You can write a function that returns a drawing colour based on a string. This way you can just write Rec1_1.BackgroundColor = getBackgroundColour(string) Where string is whatever string you're trying to parse. If you store the string within an object's property, then replace "string" with the object's property name (eg. Rec1_1.Tag). Then, within the function getBackgroundColour() Function getBackgroundColour(ByVal colourString as String) as Drawing.Color Select Case colourString Case "Blue" : Return Drawing.Color.Blue Case "DarkBlue" : Return Drawing.Color.DarkBlue Case Else : 'bugcatch End Select End Function
This is exactly what I wanted. Thank you.
I assume this is a thought-experiment as opposed to an attempt to optimise code? This is aircoded so you may have to tweak it, but I think the core idea is sound. Any reason why you're using Single instead of Integer, by the way? I kept it as it is but you may want to consider changing it to integer: I'm not sure what will happen if the user enters a decimal. On that note, you may also want to include code to check if the user has entered a valid data value. Sub Main() For i as Single = 1 To getNumber() displayX(i) Next End Sub Function getNumber() as Single Console.Write("Enter a number: ") getNumber = Console.ReadLine() End Function Sub displayX(ByVal i as Single) While i &lt; 0 Console.Write("x") i-- End While Console.WriteLine() End Sub
Thank you very much for replying. It's really just a very rough work I typed in a few minutes. I didn't care much about the details. It's an exercise set by one of my friends. 
Gotcha! This is a question I give my friends as competition You are likely to be a C++ user, as I told system637, There is no i-- in VB Only i-=1 And your code fails. You use two variables, 1 in main() and 1 in function which is not contributed to the topic The competition has not ended, so I cannot tell you the standard answer Maybe after 2 days? XD
Actually I primarily code in VB.NET. I don't know why I wrote i-- when I meant -= 1. Brainfart, I think, hahaha. I'm not quite sure I understand what you mean by "function which is not contributed to the topic"? As I understand from /u/system637, it's fine if you use other functions. Where's the second variable? Unless you're talking about the one in Sub displayX, which I agree is a bit of a cop-out. I'll think about it to see if I can come up with an alternative solution that doesn't use the copout of ByVal i.
I did some looking around and found that this won't work because Visual Basic 2008 and later can't use control arrays.
Sorry, I made a mistake. It's a bit more complicated than I had thought it would be. Ignore my previous post and see this instead. Don't create a control array, do something even better: create a list that holds your controls. Your squares (AKA Rec) are only created during runtime, upon which they are added to the form and the list: this means that the form starts out without any controls, and only adds the controls to the form when a button is pressed. Look at my sample code here: https://anonfiles.com/file/e9ae702396933ea02330e01de23ff3d7
Simple, sweet and elegant. Nice one, never thought to use String().
That looks awesome and I'd love to take a look at how it runs in debug, but it has 15 errors when I load it. * 'IContainer' is ambiguous in the namespace 'System.ComponentModel'. * 4x 'ISupportInitialize' is ambiguous in the namespace 'System.ComponentModel'. * 2x 'GeneratedCodeAttribute' is ambiguous in the namespace 'System.CodeDom.Compiler'. * 4x 'EditorBrowsableAttribute' is ambiguous in the namespace 'System.ComponentModel'. * 2x 'ApplicationSettingsBase' is ambiguous in the namespace 'System.Configuration'. * 'Save' is not a member of 'WindowsApplication1.My.MySettings'. * 'HelpKeywordAttribute' is ambiguous in the namespace 'System.ComponentModel.Design' I'm sure these are just differences between your setup and mine, but I've never even touched "Settings.designer", "Form1.designer", or "Resources.designer", so I have no idea what's going on there.
in this specific case, it would be something like select case dblcurrentelv case &lt; -4 'make dark blue case &lt; 0 'make blue case &gt;4 'make green case else 'make lime it'll match the only first condition that's true, so the order of your cases is important.
I think it's just VS 2008 Express throwing a hissy fit because the file was written in VS 2010. Can you at least open the .sln or form1.vb file to see the code? If so then run the .exe in /bin/debug/ and compare with the code to see how it works. In summary, I wrote a class called Rec which holds all the pertinent data for your squares. Right now all it has are two properties: x and y, which determines where it is positioned, but as you develop your program it'll start to hold other information such as the terrain height, the terrain type, buildings etc etc. In addition to holding all that information, Rec also has a property called square which is defined as a Button control. This is where the actual button control is going to be held when it is created, so that you will be able to link it to the information. When I create the button during runtime with Dim square as new button and define all of the square's properties (e.g. square.location = new point (x, y) ), I set the square property to be equal to the new button that I just created during runtime with Rec.square = square And add it to the form with Me.Controls.Add(square) Finally, I add the Rec object to a List called RecList which holds all the Rec objects so that I can iterate through all of them. Now everything is set up. You have a structure that looks something like this: RecList is a list that holds all the Rec objects; Rec holds x, y and square; and square is a reference to the Button on the form. When I want to find the correct Rec object through its x and y values, I access the function getRec in this manner: getRec(x, y). Therefore, if I wanted to access the text on the button (2,3) on the form, I would type getRec(2, 3).square.text. getRec in turn looks like: Function getRec(byval x as integer, byval y as integer) as Rec For each Rec in RecList If Rec.x = x andalso Rec.y = y then return Rec Next Return Nothing 'this is a bugcatch in case the x/y values are not valid End Function If I wanted to make everything blue? For Each Rec in RecList Rec.BackgroundColor = Drawing.Color.Blue Next Rec And so on.
Many thanks to you. I have the program up and running beautifully (save it crashing whenever I try to make an array bigger than 60x60, meaning detail isn't all that feasible). Now all I have to do is figure out how to make the randomly generated land look less random.
60x60 is way, way too big. In fact I would say anything above 50x50 is stretching it: that itself is already 250 controls on a single form! I would suggest that you generate it on a pixel by pixel basis instead if you want that sort of detail: have each pixel represent a particular type of terrain, paint it directly onto the form, and store only one type of information on that terrain based on the colour, eg. if pixel = blue then terrain = water. This project of mine may also be of interest to you: https://github.com/PostalElf/stellar-politics I no longer update it because of some problem with the .git but it should still be fairly stable. Look through the source code to see how I generate my own starmap and save it in an XML file. Instead of generating every small detail of the galaxy (that would take till the heatdeath of our universe for my computer to finish processing that!), I just generate the pertinent data and randomly scatter them across the page.
Haha I don't exactly teach a class, so there's no real instructions per se. My remarks are a little scant, but if you understand basic VB there's no reason why you will not be able to understand how I structure everything. If you have any questions feel free to PM me.
I meant more with the operation of the game. Instructions for how to play. If I understood the mechanics of the game, it would give me context for what's in the code.
Ah, I see. The game isn't completed yet so there's not really much you can do with it. Right now all it does is generate a random map full of stars and planets. Each planet demands certain resources and, in turn, supplies the galaxy with other resources. If you control a planet, it supplies all other planets you have an Import License with with that particular resource. In that particular git instance I think you're also able to move agents around as well, but that's about all you can do with it.
You can use StrDup function: Sub Main() Dim j As Integer Dim i As Integer Console.Write("Enter a number: ") i = Console.ReadLine() For j = 1 To i Console.Write(StrDup(j, "x"c)) Console.WriteLine() Next End Sub
Sorry but you have used j and i, two variables, not meeting the criteria of ONE variable only
Good code! But that is out of the knowledge-base of System637 at the moment. Of course not now, he learn it now. PS: really not expect system637 to ask others for codes directly -.-
Here it is: Sub Main() Dim j As Integer Dim i As Integer Console.Write("Enter a number: ") For j = 1 To Console.ReadLine() Console.Write(StrDup(j, "x"c)) Console.WriteLine() Next End Sub
Define the prices as constants since they're not going to change: Public Const Bagel as Double = 1.85 Then add all the values from each Textbox together Dim sumOfTextboxes as Double = (textbox1.text + textbox2.text + ...) * 1.055 And display!
For current clients (with windows PCs), what is distributed to the PC? Whatever is distributed to those PCs will have to be distributed to a Mac, and will have to run on a Mac. 
If the db and exe are run on a Windows server, would it be so terrible to let the Mac user RDP to a limited-permission account on the server and run it there? MS has a Mac-to-PC RDP client that they distribute with Mac Office (and so I'm sure is available other ways too). This is not the *best* answer, but if it works for your situation...
If all you need to do is run the exe that hits a network SQL server try running it with parallels.
Functions are functionally (ha. ha.) identical to subs except that they also return a value. It's up to you what you want to do with the value they return; in your particular instance, however, you will probably want a function that checks if the password is valid, then another function which that will return a password each time it is run. So! Your first function (maybe called isPasswordValid) will return a Boolean value - is password valid, true or false? - while the second function (maybe called generatePassword) will return the password itself in a String. You call the second function in this manner. For i = 1 to numberOfTimesLoopWillRun generatePassword(inputStringGoesHere) Next i Might be more helpful if you posted your entire source code somewhere so we can take a peek.
lets break this down. LCase(TextBox1.Text = Username1) this takes the result of "TextBox1.Text = Username1" and lower cases it. so, LCase(False) following me? 
Reading this made me think the subs logo had a B on chains If lcase(textbox1) = lcase(username1) ... Then
You should really store password as [hashes](http://support.microsoft.com/kb/301053).
always assign to the left. decTotal = (decItem2 * decDiscount) + decItem1
Like the other dude has mentioned already, the most important thing you have to ask yourself is: what are you learning VB _for_? Are you just trying to get into programming because you want to make a career out of it, and VB just happens to be on hand? Do you want to make games, database management software, cute desktop applications, computer viruses, or what? A programming language is too large for you to fully master in a sitting. The programming chops you need for coding a game are very different from that required for a database programmer, though there are of course overlapping areas. If you are completely new to programming, here are some things that are a must to learn. Think of them as your most basic "words" that you can form sentences with. Sure, there might be a better and more concise word out there, but with these words you can do maybe 80% of whatever you're trying to do. The rest, google will help you with. - Loops: For-Next, For-Each, Do While - Conditions: If-Then, Select Case - Variables: Private vs Public, variable types (integer, string, decimal etc), how to use a List - Interacting with a form: Textbox1.Text, Panel1.Visible - Methods: how to write a sub and function, how to use parameters, byval vs byref - (Advanced) Classes: how to write your own class, how to create an instance of your class, how to use the instance to do constructive stuff etc. 
Try this :-) I have been writing it this year. https://www.dropbox.com/s/zzz8yi1himvl8hf/Intro%20to%20VB%209-April%202013%20FINAL.pdf
I don't know why I am so helpless with VB.. I understand Java and RPG way better. I've been playing around with what you put, but none of it works, what am I doing wrong? http://prntscr.com/1v3z52
Constants should be declared in the form or class' namespace: i.e. the area between Public Class Form1 and your first sub/function. Secondly, you've defined SubTotalBox as String when you should be defining it as Double! :) String values added together just get tacked onto the ends of each other. Thirdly, there's no actual output code for subTotalBox. What are you going to do with the subtotal once it's been calculated? You have to display it somewhere, either in a popup (in which case you use msgbox() to display it) or in a label or textbox (in which case you change the label.text or textbox.text). Don't worry, take your time and don't rush it through. Familiarity only comes with time.
Okay, I understand that declaring now, but now I am getting this? http://prntscr.com/1v4929 Also, I'm pretty sure my code to display the totals are wrong. I would like the subtotals of them displayed in the subtotal box, then add 5.5% to the subtotal to display in the Total.
One of your .text values has a string value, e.g. anything not a number. If I were to guess, I'll say it's because you wrote BagelRLbl.text instead of BagelBox.text in that long line. When displaying the total, you don't need another variable. What's the point of creating SubTotalBox? All you need is TotalBox.text = SubTotalBoxTotal * 1.055 Because multiplying anything by 1.055 is the same as adding 5.5% to it. Much like multiplying 1.5 is the same as adding 50% to it. If you were to multiply it by 0.55 as what you're doing now, you're actually giving your customer a 45% discount instead of charging them 5.5% more. Another thing to note is that, right now, all you're getting is a total number of items, not a total value. If you want the monetary value of each item, you will want to do this instead: Dim SubTotalBoxTotal as Double = (BagelPBox.Text * Bagel) + (SconeBox.Text * Scone) + ... 
Where did you get the key from? Contacting Microsoft would probably be a good start, though I'm not sure how much support they still provide for 2008 Express.
I got the key after I clicked the "register product" button in the help menu. I sent an email, hopefully it goes well.
AVG didn't flag the executable for me. EDIT: In the .exe when you create a String or Double and click submit, it outputs it as an Integer. Problem with your code?
I'd begin by commenting out blocks of procedures and testing the compiled executable. Tedious but it will narrow down the problem.
I only have the following SPs available Windows 95 Windows 98 / Windows Me Windows NT 4.0 Service Pack 5 Windows 2000 Windows XP Service Pack 2 Windows XP Service Pack 3 Windows Server 2003 Service Pack 1 Windows Server 2008 Service Pack 1 Windows Vista Windows Vista Service Pack 1 Windows Vista Service Pack 2 
http://www.microsoft.com/en-us/download/details.aspx?id=5721 This is SP6 for VB6
This has been the way it is for me since leaving XP. Keep in mind that VB6 is basically Win 98 technology, and hasn't been officially supported since XP. 
wow, didn't realise it was that old, i suppose i'll have to upgrade to a newer version if i can't get it working.
Honestly, if you are learning programing, and thinking of making a career out of it, or a cool hobby, VB6 is nearly pointless. .NET would be far more valuable, and help you understand modern programing languages much better. There's a link on the sidebar to the free VB.NET express version. 
Do it, you won't regret it. I started from GWBASIC when I was 6, moved on to QBASIC when I was 9 and, for the longest time, stuck with QBASIC because that was what I was comfortable with. I only made the switch over to VB6 when I was 15, but by then I was so used to coding in the old fashion - with GOTOs instead of methods, and variables instead of classes - that it took me forever to make the switch. After I finally did, .NET came out in a year or so; and just like before, I resisted switching until I had no choice. But my god. Switching was the best thing that happened to me. I finally "got" OOP when I moved on to .NET, even though it was supported all the way back in VB6, because I had no choice but to stop relying on the legacy methods. I was forced to learn the "new" style of programming, and doing so did wonders for the way I thought, designed and programmed. TLDR: switch _now_.
VBA is a bit of it's own beast, but check if those objects have onclick and onchange events.
in my VBA projects I use frames or tab controls to handle this.
What difference is there between the free version and the paid version, all i'm really going to use it for is messing about and practicing harder programs for uni. 
What are the main differences between vb6 and the newest version?
There are a few differences, but the main ones that keeps me on the paid versions (as a professional developer), is the ability to load third party tools, and the ability to mix languages (VB.NET and C#) in a single solution. For what you are doing, you'll probably never notice the difference. 
Couldn't agree more. I was already programing professionally in VB6 when .NET came out, and I resisted the change for a few years. The only regret I have about moving to .NET is waiting as long as I did (although I did move in '05, so it's been a while now).
Thanks, also is there anything else I should make myself familiar with if i'm planning on doing computer science at university?
The IDE alone is incredibly better, and makes writing code so much faster: * Intellisense (the hints that come up as you start typing) is far, far better * Code formatting is automatic * Error checking (via background compilation) In VB6 you can natively make two types of things: * Libraries * Forms Apps In .NET you can make (some with a bit more learning, and some caveats, but the knowledge transfers): * Libraries * Forms Apps * Windows Services * ASP.NET web sites * Micro Framework based hardware (think .NET on Arduino) * Windows Phone Apps * Windows 8 Tile Apps * Zune and Xbox Games (this is kind of dying off, but it's still there) * Linux and Mac apps (with limitations, and Mono). * Silverlight apps * iOS and Android apps (with limitations, and third party tools) There's tons of other features like inheritance, overrides, inline constructors, and too much to even thing about or list .... . It's 15 years newer, 15 years more mature, and designed as a first class OO language. Most importantly to me, if you can follow and grasp the concepts of VB.NET, then you'll understand C#, which can lead to other languages. 
I think focusing on concepts, rather than any one language, is important. One thing I realized early on, was that languages (vb, c#, java), are just tools to solve problems. I'm not a "VB" guy, I'm a software developer, and VB is just one tool in my toolbox. It happens to be the one that my largest client pays me to write, so I write more of it than anything else, but I also write C#, and Java (Android), and PHP, and C, and ... depending upon what's needed. Once you understand things like scope, inheritance, objects, classes, and other core concepts, then you can simply swap the concepts around in a new language. 
did you move any project files or update your .net frame work since last opening this project ? 
I'm pretty sure I got this same error earlier today. It was fixed for me by going into the projects preferences, and unchecking one of the options about running the program with visual basic dependencies or something. Sorry it's not a great answer, I don't have access to my computer right now.
usually the apostrophe in a projects name can mess it up. Try renaming the project in the properties to something without an apostrophe
On each of the subforms, you would make the click event of the button add an item (the value of the listbox on the subform) to the listbox on the main form. It should be that simple. Musepig is correct, some code would help.
You are probably asking how to transfer data across forms, but we'll never know for sure without code. Post some, for the love of Jove. We promise we won't steal any.
Also, it isn't letting me access the main form from the subform. 
Its declared in the module. But when I assign the list item to it, then call that list item to my form1, nothing happens. 
http://imgur.com/ZE6UT9S
We're looking at two completely different things here. There's no reference whatsoever to your global variable of g_dblAudioBookPrice.
OK, it's still confusing as to what your problem is, but no matter. It's going to be much easier for you to simply refer to the controls instead of trying to store the value in a variable. I'm going to give you some examples so that you can understand how to refer to controls across forms. In Form1 where you're selecting (for example) the title of an Audiobook from a dropdown list (named Combobox1), when you click on the button, launch Form2 but keep Form1 open. Form2 has a textbox (named Textbox1) which you want it to be filled automatically with the title of the audiobook. In the Form2_Load event: Textbox1.Text = Form1.Combobox1.Text This automatically pulls the text data from Combobox1 in Form1 and puts it in Textbox1.
But I specifically have to have a listbox in form1 and audiobooks. The items have to be taken from the listbox in audiobooks and put into the lostbox in form1.
Dude, you have to do some of the extrapolation. What I gave you was meant to be an example, not a case fitted to use. If you have to have a listbox in Form1, that's fine: just use form1.listbox.selecteditem or some other way of accessing the selected data while you're in another form. You still do not need to use a global variable. If you want more help, post up the solution and I can take a look at it. Comment the part that you need help with, because right now I honestly have no idea where the problem is or even what the problem is.
Oh ok. Thank you. Sorry I was in a bit of a panic mode. I'm sure I can make this work.
Create a public method on the main form that adds stuff to the list box and accepts a string or object or whatever you are adding then call that method from the sub forms.
Lol. So it would seem.
Ok. So this is what I wrote. lstProductsSelected.Items (0) = AudioBooks.lstAudioBooks.SelectedItem Did not work
The syntax doesn't make sense. Assuming that lstProductsSelected is a listbox on your current form and you want to select the item, and both listboxes are populated with the same number of items in the same order: lstProductsSelected.SelectedIndex = AudioBooks.lstAudioBooks.SelectedIndex If they're not populated with the same collection, you'll need to use lstProductsSelected.Text to extract the text of the selected item, then run a search in AudioBooks.Items to find the corresponding entry, then select that particular entry. Google will be your best friend: http://www.tutorialspoint.com/vb.net/vb.net_listbox.htm
Got it to work finally!! Used this Form1.lstProductsSelected.Items.Add (lsrPrintBook.SelectedItem)
Now I have another problem, if you can believe it. I got the list boxes working fine now. But now I have to get the book prices, add them, and put them into the subtotal. The txtBox keeps showing 0 Nevermind. I just camt figure out how to add them both together, then make the txtbox show a currency value.
I think we'll need to see some code to get a better idea of what's going on. 
I can't post the actual code because it is an assesment but I will write something similar? Dim y, x, x1 as double Dim count as Integer count = 0 y = 0 while y &lt;&gt; 25 y = y + 1 count = count + 1 if count = 1 y = x ^ 2 end if if count = 2 y = x1 ^ 2 end if FileOpen(15, "filepath/text.txt", OpenMode.Output) WriteLine(15, "X = " &amp; x, x1) FileClose(15) End while as you can see every iteration of the loop x = something different. What I need is to record data entries for x, x1 , , , x25 In my actual program I will need something like 300 variables which is why I am looking for a shortcut. In my actual program I am using subroutines but I still have to declare 300 variables the way I am doing it.
This is where Arrays (or generics if in .NET) come into play. (By the way, is this VB6 or .NET? It seems to be .NET, but the use of FileOpen is old school VB6.) So you'd declare an array of double: dim x() as double and then add new elements to the array each time through the loop (google "redim preserve") or declare a fixed array of double dim x(300) as double and then reference the array by the loop index.... x(count) = value or x(y) = Value depending upon how you are actually indexing the loop. I know that this is sample code, but you don't seem to be setting the value of the x variables, ever, and you're also opening and closing the file in every loop. I'd either open the file before the loop, and close it at the end, or create a variable that holds the output for the file, and build it as you go. Also, if you know how many times you are going to loop, use a "for loop", instead of a while... I'd rewrite this a bit for you as a sample, but it doesn't actually produce anything (X is never set??) so I don't want to add more confusion. 
ah this should be enough, I should have set x :/ but its not used in my actual program so thats fine. Im using Microsoft Visual Basic 2010 Express with Visual Basic template to do this but I'm not sure which version of the language i'm writing in. &gt;and you're also opening and closing the file in every loop. I'd either open the file before the loop, and close it at the end good idea, I'll give it a try :P &gt;Also, if you know how many times you are going to loop, use a "for loop", instead of a while.. the assessment stipulates a While loop :/ thank you very much :P 
&gt;&gt;and you're also opening and closing the file in every loop. I'd either open the file before the loop, and close it at the end &gt; &gt; &gt; &gt; good idea, I'll give it a try :P You're still dealing with the fact that FileOpen and FileClose are legacy VB6 functions. In the modern .NET world, we have StreamWriters, and, alternatively, the functions in the File class. While ... File.AppendAllText("filepath/text.txt", "X = " &amp; x &amp; " " &amp; x1) End While However, file IO is resource expensive and time-consuming on the large scale, thus opening and closing the file on each iteration is a bad idea. And keeping a file handle open for extended periods of time, as suggested above... while I can't think of a good argument against it if you're sure nothing else is going to be trying to access that file, it's never seemed like a good idea to me. I prefer to store whatever information I'm going to be writing to the file off into a string or StringBuilder, then write it when everything is done. Dim sb As New StringBuilder() While ... sb.Append("X = " &amp; x &amp; " " &amp; x1) *alternatively* sb.AppendLine("X = " &amp; x &amp; " " &amp; x1) End While File.WriteAllText("filepath/text.txt", sb.ToString)
sb is a StringBuilder object, used for storing a string that is going to be changed frequently. StringBuilders, without going into too much low-level detail, are better in terms of memory management and performance speed than Strings for text that's going to be changing frequently. So, no, sb.AppendLine(...) doesn't write the info to the text file, it stores it in a variable for later. File.WriteAllText("filepath/text.txt", sb.ToString) is what writes the contents of sb to the text file.
I would recommend putting all the of the data into an array then writing the array to a txt file with something like accountOutput = myOutput &amp; rK &amp; ".csv" Open accountOutput For Output As #fn For Each c In sortedTransactions(k) For i = 0 To UBound(c) rC = Replace(c(i), Chr(34), "") Select Case i Case 0 PrintString = rC Case Else PrintString = PrintString &amp; ";" &amp; rC End Select Next i Print #fn, PrintString Next c Close #fn
Have you tried using ReadAllLines to store the file in a string before using Split() ? Alternatively can you store the data in the text file line by line and use ReadLine instead of ReadAllLines?
this seems a bit above my level to be honest :/ thanks for the help though, opening the file at the start of the loop instead of in the loop (and closing after the loop) seems to have fixed my problems. Thanks for all your help :P 
Sorry this was some of my earlier work and it's not real easy to read, especially out of context. I will try to translate what the above is doing in the event it might provide useful: * Set variable accountOutput = to unique filename with a CSV extension (where data will be written to). The entire above code was actually contained in another loop which iterated through different values of rK. * Open the newly created accountOutput filename for writing * sortedTransactions was a dictionary which contained collections, each collection stored an array. So first I am iterating through each collection (variable c) in the dictionary, k represented a unique account number. * From there I am iterating through the collection one more time to make some various changes to the data as needed. The changes are fairly simple. First I replace all double quotes (Chr(34)) with empty space thus removing them, I store the new array as rC. Then I essentially wanted to create my own CSV file format, so for the first item in the array was stored in PrintString and set to rC, and all others had a semi colon appended to PrintString followed by the next rC. * Once I had my new string created, I wrote it to #fn using Print #fn, PrintString. Really though the gist of it is: 1. Create file to write to 2. Open file 3. Create a string which will become your line(s) 4. Write string(s) to file by using a loop 5. Close file
If you're only a beginner, you may be in over your head. Start by using &amp; researching the WebBrowser control. Edit: *you're
I can't even tell you how correct that is
that being said, if you spend some time researching you'll probably come up with a simple solution to your problem. Might i suggest checking out Microsofts™ website? they have some pretty useful information under their visual basic area. [Microsofts VB section!](http://goo.gl/DObLCR)
Thank you for your contribution RCubed111! The code you provided does indeed split every line. However VB will consistently overwrite every split over the previous. Resulting in a single string array containing only "0" seeing as that is the last split part in the .txt file. This is probably caused by using the **ReadAllText** as it removes any existing lines and handles the entire .txt file as one big line of text. Thank you regardless. Any additional input would be much appreciated. If i find a solution i will post it here.
You could create a Sub that handles the click event of all the PictureBoxes, then cast the sender object and use that to change the Image property of whichever box was clicked. Something like this: Private Sub ClickedPictureBox(ByVal sender As System.Object, ByVal e As System.EventArgs) _ Handles PictureBox1.Click, PictureBox2.Click, PictureBox3.Click ' etc etc for all your pictureboxes Dim picSender As PictureBox = CType(sender, PictureBox) picSender.Image = My.Resources.Stone End Sub 
Still new to VB myself haven't done much in terms of Key Presses. However an idea I had is to maybe check if shift is pressed and then the corresponding key, for example 8 for *. Not sure if this is the way you want to do it, since all the others are on the numpad. 
Yeah, I want to cover both the NumberPad and main keyboard (as it should be), and I agree it may be that I have to check for Shift, but I shouldn't have to check Shift to use '/' or '=' which is causing me confusion. Also, that there are Keys.Multiply and Keys.Divide KeyEventArgs (which don't seem to trigger) is frustrating me as well.
don't have time at the moment to fire up VB and test, but you should be able to set a breakpoint on the event, and check what KeyCode is being sent in for the keys you are trying to catch. 
Actually, just tested, and I get .divide and .multiply for the numpad * and / 
Not sure if you're distributing it, or if it's just for your own use, but I'd also support .divide, etc, as different keyboards or drivers may send different keyCodes. 
yeah, it's mostly just for my own use, but plan to offer it free to co-workers and online. I always try to make my things as professional as possible and cover as many bases as i can think of. + i prefer a numberpad, i just don't have one on this laptop. thanks for the advice.
You can use an access driver in VB (or any other .net language) to treat the data like it comes from any other (albeit inefficient source) Are you trying to do everything in access (which is limited and I know next to nothing about) or are you trying to use Visual studio?
Off the top of my head, I would start with a stringreader object. This will allow you to read line by line. You could, at the point of finding a header, begin a new object that holds the fields you want. Add the newly created object into a generic list(of yourobject) Once complete, you could then generate your csv file by iterating through that list(of Object) placing the properties values into their respective fields. Maybe even going so far as to name the csv file by the persons lastname-firstname.csv Are formats the same for each person? In other words, are there always a total of 9 lines between the two headers?
A big part of my job is figuring out how to parse data out of proprietary-format flat files. The format you linked is actually quite easy to work with. Hopefully the following will help you out, or at least give you a starting point. You'll need 3 imports: Imports System.IO Imports System.Text Imports System.Text.RegularExpressions Here's the code to parse a file: Dim arSection As String() Dim sName, sDate1, sDate2, sAddress, sCitySt As String Dim lstCharges As New List(Of String) Dim sbData As New StringBuilder() Dim sFile As String = File.ReadAllText("C:\path\whatever.txt") Dim arFile As String() = Regex.Split(sFile, "___________________ _________ __________________ _________________") 'Now we have the file split into individual sections, start iterating through sections For Each sSection As String In arFile arSection = Regex.Split(sSection, Environment.NewLine) 'This will allow the program to skip the header section If arSection.Length &lt;= 1 Then Continue For 'Now the section is split into lines, if the name &amp; dates always appear on the first line, and the address 'always appears on the 4th line, and the city state always appears on the 5th line, this will work fine sName = arSection(0).Substring(0, 20) 'Replace 20 with however long the first column is sDate1 = arSection(0).Substring(20, 10) 'Adjust starting index and length accordingly sDate2 = arSection(0).Substring(30, 10) 'Again, adjust starting index and length accordingly sAddress = arSection(3).Substring(0, 20) 'Adjust length accordingly sCitySt = arSection(4).Substring(0, 20) 'Again, adjust length accordingly 'Now that we've grabbed all that, iterate through the lines to grab the charges For Each sLine As String In arSection 'check to make sure it's not a blank line If String.IsNullOrEmpty(sLine.Trim) Then Continue For 'Grab the last column, trim surrounding whitespaces 'We use a list for this to accomodate for an unknown number of values If sLine.Length &gt;= 41 Then lstCharges.Add(sLine.Substring(40).Trim) Next 'Now we have the data, format it and store it in the stringbuilder object to be output later sbData.AppendLine(sName &amp; "," &amp; sAddress &amp; "," &amp; sCitySt &amp; "," &amp; sDate1 &amp; "," &amp; sDate2 &amp; String.Join(",", lstCharges.ToArray)) lstCharges.Clear() Next 'Done with that file, write the output File.WriteAllText("C:\path\output.csv", sbData.ToString)
SOLVED (by testing if the Shift key is the Modifier, and acting on it accordingly): Private Sub Form1_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles Me.KeyDown ' capture number and operation keypresses If e.Modifiers = Keys.Shift Then Select Case e.KeyCode Case Keys.Oemplus : btnAdd.PerformClick() ' Shift + Case Keys.D5 : btnPercent.PerformClick() ' Shift % Case Keys.D6 : btnExponent.PerformClick() ' Shift ^ Case Keys.D8 : btnMultiply.PerformClick() ' Shift * Case Keys.Escape : btnClearAll.PerformClick() ' Shift ESC End Select Else Select Case e.KeyCode Case Keys.Escape : btnClearEntry.PerformClick() ' ESC Case Keys.D0, Keys.NumPad0 : btn0.PerformClick() ' 0 - 9, Numpad (0 - 9) Case Keys.D1, Keys.NumPad1 : btn1.PerformClick() Case Keys.D2, Keys.NumPad2 : btn2.PerformClick() Case Keys.D3, Keys.NumPad3 : btn3.PerformClick() Case Keys.D4, Keys.NumPad4 : btn4.PerformClick() Case Keys.D5, Keys.NumPad5 : btn5.PerformClick() Case Keys.D6, Keys.NumPad6 : btn6.PerformClick() Case Keys.D7, Keys.NumPad7 : btn7.PerformClick() Case Keys.D8, Keys.NumPad8 : btn8.PerformClick() Case Keys.D9, Keys.NumPad9 : btn9.PerformClick() Case Keys.OemPeriod, Keys.Decimal : btnDecimal.PerformClick() ' (.) and Numpad (.) Case Keys.Add : btnAdd.PerformClick() ' Numpad (+) Case Keys.Oemplus, Keys.Enter : btnEquals.PerformClick() ' (=) and ENTER Case Keys.OemMinus, Keys.Subtract : btnSubtract.PerformClick() ' (-) and Numpad (-) Case Keys.Oem2, Keys.Divide : btnDivide.PerformClick() ' (/) and Numpad (/) End Select End If End Sub
I'm using a stringbuilder because the number of records in a given file is unknown (to me), and if a large file with thousands of records is processed, that stringbuilder is going to perform much better than a string. As for the concatenation in the .AppendLine call... concatenation of that scale *probably* isn't going to affect the performance of the application, and if it does, I'm willingly trading performance for code readability.
Thanks for answering my honest question. When I reread it I was afraid it may have come out wrong.
Oh no, definitely didn't come out wrong. Thanks for asking, it made me stop to think and analyze what I was doing, and it's always good to have my coding practices questioned.
Make programs that do these things, it'll seem stupid, but it is great to drive skills into your memory: -have six countries flags on a form, when you click one, it tells you the name of the country -make a form where the user enters in price of gas, gallons purchased, misc items cost, then a subtotal, then with tax. Be sure to use try-catch to prevent errors, and use .tostring("c") to put it in currency mode. -make a form that shows the live time (that updates not just by loading a new form) date, etc. have buttons that display messages when you click them, it can be anything
FYI you replied to me but I am noit the one who gave you the solution.
Once you pick / create the word(s) to be used, you'll need to find the location of the space, and store it in a variable. Ord = "Barack Obama" Dim SpaceLocation As Integer = Ord.IndexOf(" ") ' if the word doesn't have a space in it, it will return an -1. This allows you to check every word and skip the ones that don't have spaces. I'd probably add another sub that hides one line after all the others have been shown (This would run after ShowLength). Sub HideLine() If SpaceLocation &gt; -1 then '-1 means no space was in the word Select case SpaceLocation Case 1 Line1.Visible = False Case 2 '''''' End Select End If End Sub 
I'm not sure I understand your code. I've tried for about an hour now, but I'm running out of options to try. The word is selected from a list when I press the "Play" button, so that's where I'm pasting the SpaceLocation variable. Dim number As Integer number = Int(Rnd() * ListBox1.Items.Count - 1) + 1 Ord = ListBox1.Items(number) Dim SpaceLocation As Integer = Ord.IndexOf(" ") Then I create the new HideLine() sub after PlayButton_Click (which is the sub where I have the afforementioned code). I've tried calling upon the sub on of different places in the ShowLength sub (inside the If-sentence or after the sub), but nothing really seems to happen. I'm not very good with VB yet, so adding your code into mine turned out more difficult than expected. Is there any way you could explain more in detail what exactly your code does, and where I should add it?
I think you'd have to make a plugin. I don't think you can do this in VBA
My code wasn't really complete, it was just a stub to give you an idea of how to code this. It looks like you've gotten the first part (setting the SpaceLocation variable) in a good place, since that's where you are getting the word(s) You should be able to check SpaceLocation after the final line in your sample above, and see that it has a number ( between -1, and the length of your word(s) ). Use F9 to set a breakpoint, and then you can hover your mouse over SpaceLocation and see the current value. I'd call HideLine from the PlayButton.click event, just after calling showlength so this: OrdLength = Ord.Length ShowLength(Ord.Length) clearLetters() becomes this: OrdLength = Ord.Length ShowLength(Ord.Length) HideLine clearLetters() Here's how everything works together. the line: Ord.IndexOf(" ") just calls .IndexOf(" ") on the string. IndexOf returns the location in the string that contains the character passed in. So we are passing in a space (" "), and asking for the location of the space in the string. If there in no space, .NET returns a -1. I used Select case in HideLine, but I'll switch it back to an if statement so that it makes more sense ...... Strings are 0 based (meaning that the first character is at location 0, not 1), so the following is hiding the line +1 from the location (location 0 = line1, location 1 = line2, etc) Sub HideLine() If SpaceLocation = 0 Then Line1.Visible = False ElseIf SpaceLocation = 1 Then Line2.Visible = False ElseIf SpaceLocation = 2 Then Line3.Visible = False ElseIf SpaceLocation = 3 Then Line4.Visible = False ElseIf SpaceLocation = 4 Then Line5.Visible = False ElseIf SpaceLocation = 5 Then Line6.Visible = False ElseIf SpaceLocation = 6 Then Line7.Visible = False ElseIf SpaceLocation = 7 Then Line8.Visible = False ElseIf SpaceLocation = 8 Then Line9.Visible = False ElseIf SpaceLocation = 9 Then Line10.Visible = False End If end sub
Thanks. Now I need to go find a plugins subreddit... :)
You can use substring where you can take a part of a string, specifying the length Example Resistance = "44000" FirstDigit = Resistance.Substring(0,1) 'first character, 1 character SecondDigit = Resistance.SubString(1,1) 'second character 1 character Multiplier = Resistance.Substring(2) 'third character, remainder of string By not specifying the length in the last one, it will take the remaining characters.
I'll look into this when I get home and get in front of my computer, about 2 hours from now.
Dude, I really appreciate it. This stands to save me literally hours of work.
update: offer expires at 9:20 PM CST. &amp;I've upped the offer to $20 USD . But it must be fully functional
So here http://www.java2s.com/Code/VBA-Excel-Access-Word/Application/CreateSubmenus.htm you'll see how to add the menu. Then the procedure should be to execute "google.com?q=" and then the selected text. I think that's all you need to do.
Lol how gay. I'm a contractor and I bill 40 hours@60 an hour. Why don't you learn something.
why don't you fuck off. Im trying to offer something to the people of this forum &amp; it's a lot more than what most people offer. 
Just creating a little commerce. if you can't help...your input isn't needed
Don't be a faggot. 20 bucks from a lazy student is pretty pathetic. Guess the down votes reflect the communities view on that 
considering that something this simple would take an experienced VB user only about 15 mins, i think my offer is in par with your rate of $60 / hour. you could have had a nice dinner on me for doing a simple assignment, but instead you want to be an unhelpful dick. 
Ugh, that data is significantly uglier than what you originally posted. Still workable though. Do you need to extract all the data, or just certain fields?
Just certain fields. But I couldn't get the original example I gave to work either, same error. I'm not understanding the mechanism it's using to split the string into columns, the msdn docs are ambiguous. Only other things I need to extract are the age and sex.
It's not actually splitting the string into columns. First it's splitting the file into sections (when we call the Regex.Split("______ ___...")), then it iterates through those and splits them into individual lines. Grabbing the info from the columns happens when we call the .Substring(x, y) function, which just tells it to grab y characters from the string, starting at x position. I believe the IndexOutOfRange exception was occurring because the code I wrote assumed that the header info was a single line, whereas it's actually 3 lines in the file you provided. So the If arSection.Length &lt;= 1 Then Continue For check is done on the header, and the header makes it through that check because it's actually 3 lines. Then further down we have a hard-coded reference to the 4th element of the array of lines (arSection(3)), and the exception is thrown because arSection only has 3 elements. More to come, I'm just kinda commenting as I'm working through this.
Thanks! This works a lot better indeed. I actually understand the code now, which is a major step in the right direction. The code does as it is supposed to, removing the Line if there is a space there. However, I still have to press the space button to complete the hangman puzzle (if there is a space in the puzzle). I want to not have to do this. I tried this: ElseIf SpaceLocation = 1 Then Line2.Visible = False And Bokstav2 = (" ") But it didn't work. I also tried making a new sub: Private Sub RemoveSpace() If Ord(Mid(1, 1)) = (" ") Then Bokstav1 = (" ") ' ' ' ' ' But this didn't work either. For some reason when I did this, I could never win the game. Letter 3 (Bokstav3) disappeared when there was a space on Line4. No letter would fit in Bokstav3, even though I knew which one was supposed to be there. I feel something is off about this sub, but I can't put my finger on it. I'm thinking if I can make this Sub work, I can add an And where I also check if an actual letter is typed into the puzzle, so that if the user attempts to write i.e. a number or a sign (#, &amp;, ¤ etc) he'll get an error instead of wasting an attempt. If you could point out to me what is wrong with the sub as it is now, I think I should be able to add this myself. I also ran into another problem. Let's use the Barack Obama example again. If I type A in this puzzle, I only get the first A in B**a**rack Obama. I have to type A three more times to get the remaining As. Any idea how I can reveal all four As when I press A the first time? Once again, thank you very much for your help. You seem very knowledgeable in regards to VB, and I'm very happy you're sharing it with me!