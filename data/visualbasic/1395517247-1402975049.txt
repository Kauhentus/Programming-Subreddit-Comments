No, I only have Visual Studio 2010
OK, I just got VB 4.0 16 bit and its running on a virtual machine
Try using the Text property of each control. The property holds and sets the text of the control.
I have Visual Studio 2010, so I guess I'll be using that (a look at the "About" information says it is Visual Basic 2010). Honestly, I think it would be ideal if I could just get the algorithms contained in the DLL and reprogram the whole mess in a language that I know (Java perhaps, or something scripted like JavaScript or PHP). I'm not a programmer by trade, I'm a chemist, so this makes the project fairly difficult for me in the first place without the mess of a DLL that is unreadable. With that said, I very much appreciate your willingness to help me out because I don't stand a chance of doing it alone. I'm going to try following your instructions about creating a project with the DLL and I'll let you know how that works out. Thank you.
 label1.text = textbox1.text You'd want to put that in a button click function or whatever, though.
 &lt;TextBox Name="txtMain" /&gt; &lt;Label Content="{Binding ElementName=txtMain, Path=Text, UpdateSourceTrigger=PropertyChanged}" /&gt; :D Do that for 3 textboxes and 3 labels and you're golden. No extra code! (I think I'm a rarity here who learned WPF instead of winforms)
 Label1.Text = TextBox1.Text Label2.Text = TextBox2.Text Label3.Text = TextBox3.Text
Which version of Visual Basic?
Try using httpwebrequest and httpwebresponse Dim request As System.Net.HttpWebRequest = System.Net.HttpWebRequest.Create("http://www.transfermarkt.com/en/lionel-messi/leistungsdaten/spieler_28003_2012.html") Dim response As System.Net.HttpWebResponse = request.GetResponse() Dim sr As System.IO.StreamReader = New System.IO.StreamReader(response.GetResponseStream()) Dim sourcecode As String = sr.ReadToEnd() This is a very basic run through, but should work.
If you are better at Java I would suggest you would be more comfortable with C# very similar syntax. They both use the Common Language runtime so you can swap back and forth with vb if needed. 
Instead of txtAWord.Clear in your clear button, set it to the txtAWord.Text to the default string you want. edited to be more clear 
Really? I thought I IDed it pretty accurately. Guess not. The file is at: http://www.datafilehost.com/d/5d67f6c9 
I've never tried C#, but I'd be willing to give it a whirl. I am comfortable with Java because I took it in college back in the day and I'm pretty confident that I could pick it up again quickly enough. 
Interesting solution. Never seen this done before. I'll have to try &amp; remember it.
Understood, and thank you. What is the help referring to in regards to "Default Value"?
EDIT: All the files zipped, like I should have done earlier: http://www.datafilehost.com/d/bdb85f95 ___ This is the sum total of the package I got for this program. I can read the other files easily, but there are references to functions that are not defined anywhere. I figured they would be in the one DLL file included, but I guess not. http://www.datafilehost.com/d/6587596a http://www.datafilehost.com/d/2245a69a http://www.datafilehost.com/d/f6d53d2e http://www.datafilehost.com/d/2643eaf7 http://www.datafilehost.com/d/23dd8a34 http://www.datafilehost.com/d/b98461bb http://www.datafilehost.com/d/172bcbfe http://www.datafilehost.com/d/a3f2ae53 http://www.datafilehost.com/d/0eba276c http://www.datafilehost.com/d/9ac80919 
I've never used it but in the remarks on the help it states: &gt;You typically use this method if you are either creating a designer for the Control or creating your own control incorporating the Control. 
If I understand the question, the easiest would probably be to use the *.Tag property. Textbox1.Text = "Default" Textbox1.Tag = "Default" ... various stuff happens with the textbox, then when you want to reset it: Textbox1.Text = Textbox1.Tag.ToString It's kind of lazy, but it works. That way you can iterate through your textboxes and apply the tag property to the text property without having to code specific select case for each textbox. If you want to get more creative, you can override the ResetText sub: Class MyTextBox Inherits TextBox Public Overrides Sub ResetText() Me.Text = "Default" 'You could also do the Text = Tag thing here too. End Sub End Class Then in your main form, add that custom control where you want a textbox... rebuilding the project should add it to your "Controls" panel so you can drag/drop like the rest.
Nah the code for this app is inside the .FRM and .BAS files. The VBX files are form controls. **Good News** The app is a 32bit vb5 app (although there is some vb2 form code which leads me to believe it started in an earlier version and was upgraded) As for external libraries there are only 2 required CMDIALOG.VBX - Common dialogue control for open and save as file dialogue box's GRAPH.VBX - Graphing tool for the plot graph. Both of these are built into Visual Basic 5 **Bad news** There are two modules missing CALC.BAS PWR-CHEM.BAS There are few calls which are in either of the BAS files I expect Call ppbToMolar Call MolarCond Call EqConst Call pHCalc Call CondCalc I expect the PH and Conductivity calculations are in CALC.BAS but PH calcs are easy pH = - log [H3O+] Just pass the moles into the formula, here is the PH of MHC1 as it would be used in a function. pH = - log (0.0025) = - ( - 2.60) = 2.60 I don't remember conductivity off the top of my head. :) At this point if you are rewriting this I would start from scratch. This is what I call "Bread and Butter Code" there is not much to this and all functions are apparent. You could make this in Excel easier. If you want to write it let me know and I will help where I can. Hell if you just want it done send me a pm, and we can work out a deal, and I will put it together for you. -Bone 
Well, dang. I'm going to see if I can find CALC.BAS and PWR-CHEM.BAS somewhere. If I can, I think I might be able to re-write it with some help. If not, I'll be sending you that PM. You have already helped me more than you might realize. Thank you very much. I'll look for those files at work (I may have them) tomorrow. Regardless, thank you so very much! 
No problems, I don't get to many challenges any more, a lot of monkey code these days.... Bone :)
/u/Vectronic's solution works, but personally I prefer to use a constant for situations like this. Declare a constant to be your default, like so... &gt;Const defaultText as String = "your default phrase here" Then instead of txtAWord.Clear, call &gt;txtAWord.Text = defaultText 
I've come across this issue before as well. I wasn't able to dig up anything online about it, but my best guess is some sites block the script because it isn't recognized as a web browser like Firefox or chrome.
This is probably breaking a rule, but I was bored. Private Sub Form1_Load(ByVal sender As Object, ByVal e As EventArgs) Handles MyBase.Load Dim temp() As String Dim increment, newReps, rep As Integer Dim hght, newHght As Double If My.Application.CommandLineArgs.Count &gt; 1 AndAlso File.Exists("C:\progs\log.txt") Then paramChange = My.Application.CommandLineArgs(0) ' Global? increment = Integer.Parse(My.Application.CommandLineArgs(1)) Using initReader As New FileIO.TextFieldParser("C:\progs\log.txt") initReader.TextFieldType = FileIO.FieldType.Delimited initReader.SetDelimiters({","}) While Not initReader.EndOfData temp = initReader.ReadFields() If temp.Length &gt; 1 Then hght = Double.Parse(temp(0)) rep = Integer.Parse(temp(1)) End If End While End Using newReps = rep + increment newHght = hght + 0.07 If newHght + newReps &gt; 0 Then If newReps &lt; 10 Then numReps(newReps) ElseIf newReps &lt; 100 Then numReps2(newReps) End If Try My.Computer.FileSystem.WriteAllText("C:\progs\log.txt", _ newHght.ToString &amp; "," &amp; newReps.ToString &amp; vbCrLf, True) Catch MsgBox("File Access Error") End Try End If End If End Sub
I figured it out! &lt;3 Dim WC As New WebClient WC.Headers.Add("User-Agent: Other") Dim ByteStr As Byte() = WC.DownloadData("http://www.transfermarkt.com/en/lionel-messi/leistungsdaten/spieler_28003_2012.html") Dim str As String = System.Text.UnicodeEncoding.UTF8.GetString(bytestr) MsgBox(str) That worked The trick is they won't serve the page up without a browser identifying it's self in an attempt to reduce non-user based traffic like this for example. That's my guess at least. Anyways, the important difference between mine and yours is the bit about WC.Headers.ADd("User-Agent: Other"), Your method will work if you can add a header with the same string to your request. I'm not sure if you can or can't without re-opening visual studio. Either way, good luck and if you have any more questions feel free to PM me. I love to help.
Nailed it, just add a user-agent header and you are golden :)
VB6 and .net are different. Even if conversion "worked" you would more than likely have to make several changes before the code can run. Also, pirate bay.
This is the error message I get when upgrading: http://imgur.com/wK1t50j
I work on a Citrix VDI, so I need our IT team to install software. They might frown at me if I give them a cracked illegal version from Pirate Bay. Haha, but I might look into this and install it at home if needed.
OK there are two separate issues here. The first is the MSINET.OCX control that is the microsoft internet transfer control that was used in vb6. You will need a copy of this registered on your local machine. The second is Crystal Reports 8 was used in the original application, and you do not have it installed on your workstation. -Bone 
This is just part of a much larger code, the i variable is used a lot actually.
Thanks Bone. I am passing this message along to our IT guys and seeing if they can get me those two pieces.
http://www.amazon.com/Microsoft-Visual-Basic-Professional-Version/dp/B00002S7HR
Can you post your attempt at this? A device to receive the user's input, a select case statement and a messagebox should be all you would need. 
Well I have been thinking of where to even begin, and im just really confused how to start. Im fairly new to Visual Basic too, so some the material can be a tad bit confusing for me
lookup select /case statements... This is the main part of a program to do this
Sorry this is really quite simple, as others have stated. To start decided if it is a Console app, or a forms app. 
just prompt a grade and use if tests
I think this may make it easier... I got the BAS files: http://s000.tinyupload.com/?file_id=14480592171398786933
NO worries man, would it be possible to get a series of data and its outputs so I can test my app. I don't know what to put in the boxes or what to expect out &gt;.&lt; 
I dare say that this is the ONLY part of the program, aside from the ones handling input and output. OP if you still can't figure the code out with this hint, then I'm sorry but you have to take your failing grade with insomuch dignity as you can muster.
the concept you are looking for is called a Socket server Olonzac. There is a client and a server the talk to each other on a specific port and pass TXT strings back and forth. Here is some code on how to do it in VB.net http://msdn.microsoft.com/en-us/library/bew39x2a(v=vs.110).aspx http://code.msdn.microsoft.com/windowsdesktop/Simple-Multi-User-TCPIP-43cc3b44 I have code around here of a telnet server I wrote back in the day if you want it. **-Bone** 
Thank you! It worked perfectly
Where are you storing each score? You could use an array or better yet, a list(of Integer) with the list(of T) you expose methods of Sum, Avg, etc but I'm thinking that the assignment is wanting you to accumulate so it might not suffice. You could also use a listbox and upon requiring this information you could loop through the listbox, accumulate each lines value which would give you the sum, then take the sum divided by listbox.items.count giving you the average. 
I updated the original post with the actual question and a screenshot of the required interface Storing the scores is what I was having trouble with
Have you searched google for any of those individual scripts?
Thank you! This helped quite a bit!! :-)
The random interval would be very easy... All you need is a timer and a random number generator. It would be nice to know how much vb you know
I had that little booger of an Inspiron! That thing always burned my legs.
Small Basic (Microsoft, free) is a good place to start with the basics. http://smallbasic.com/ Kodu Game Lab (Microsoft, free) will make game building easier. http://fuse.microsoft.com/page/kodu 
Post the code, **NOT** an exe.
This would be my advice too. This is going to be a bit different, but way more powerful than VBA. I'd start with the tutorials below as well. http://channel9.msdn.com/Series/Visual-Basic-Development-for-Absolute-Beginners
Sorry, very novice thing to do. Will post it later in a seperate post. Thanks. 
have you looked at the Random class? This is vb.net's equivalent to Rnd(). 
In vb.net Application.StartupPath is the path where the executable was started from. However, I'm not sure for C#, perhaps /r/csharp would be a better subreddit to ask this.
I learned a pretty neat way to get random numbers while i was in school. The idea is to fill an array of any size(say 1000) with numbers generated from Randomize, then fill another array with will random numbers with a max value of the size of the first array minus 1. The first array is the random values you will be grabbing and the second array is the random index you will use to determine which number to grab from the first array. This way there is two layers of randomization and you get duplicate values much less often.
The loop runs so fast that every time you randomize, you're using the same timer seed, which in turn gives you the same results. Try calling randomize outside of the loop. Alternatively, use the Random.Next method. I understand that you're rolling for a number between 0 and 8? If so, use: Dim rng as new random For index = 1 to 1000 num = rng.Next(0, 9) 'lower bound is inclusive, upper bound is exclusive input += num.toString Next
Thanks! I'll do that. 
That seems a bit hefty. It would be easier to do something like: Private ImSoRandom As New Random Private Function Rnd(Optional ByVal Min As Integer = 0, _ Optional ByVal Max As Integer = Integer.MaxValue) As Integer Return CInt(ImSoRandom.Next(Min, Max * Max) / Max)) End Function ^I'm ^not ^actually ^sure ^about ^ASP ^compatibility.
'this is the best way I have found. For index = 1 To 1000 Randomize() Number = Int(Rnd() * 9) input += num.ToString Next
Here, read my free ongoing e-book on object oriented programming! https://docs.google.com/file/d/0B1A6vu9c5C0NV3hYeGM3MkN5Y2c/edit
Simply to clarify for myself, this will give you random numbers (integers?) from 0 to 8(a range of 9), correct? (I know arraylists can start at 0 or 1 in VB, so i just want to make sure i have this in my head straight)
May I have a set of inputs that I can use? I ahve a version that works and compiles in VB6 I am just going to work on upgrading to .net. 
The answer is no. Unfortunately VBA is a embedded scripting language more than it is a compiler, meaning you could not make a stand alone application with it.
I use regex on the html for the scraper I wrote. XPATH makes more sense of you are getting back XML but using XPATH on HTML can be messy. 
Robs got this one bang on.
There a bunch of ways to approach this, to give you some direction I need to know what version of VB you are using is this classic VB (3-6) or a .Net variant? oh and do you want to do it right or dirty?
Yes, it'll give you integers from 0 to 8. So if you call rng.next(0, 10) it will give you integers from 0 to 9, while rng.next(5, 9) will give you integers from 5 to 8. Just remember that lower bound is inclusive, while upper bound is exclusive. Annoying, I know, but they did it this way so that you can use a collection's .Count easily.
I'm glad you clarified with that second example, because i did have it twisted a bit (i was thinking starting point and range, not beginning and end. Have i completely made that up? I feel like i've seen something that does that before. Probably Java or Python where i saw it (though it could have been C++...and now you know all 4 languages with which i am familiar lol)
MOO, but this seems odd. I'd persist the catalog of items in a CSV file, only instead of commas I'd use something else - maybe a TAB character. Each line would consist of the description, price and tax code. Read that in to your shopping website, then copy them to your list box or however you store the selections to form a shopping cart. In the real world I'd use a database.
&gt; Randomize Why are you calling Randomize in a loop?
Thanks for your reply! I wish I could use a database, but our professor insists on us not jumping ahead of our class in these assignments. I don't get to apply the little I know about databases until I take that class next semester.
you are right, It would be more efficient to call it outside the loop but as far as I can see that is about all it would do differently... There was one thing that I do need to fix... num = Int(Rnd() * 9) I have run this repeatedly and the longest string of repeating numbers is about 5
The visual basic program Jim-Jones mentioned seem to work for me, its about the same id say :)
Are you allowed to use a Structure? With the structure, you could load the variables from your array and add the structure to your listbox showing only the title. Then instead of your listbox containing a string it contains a structure of the current item where you have access to the price and anything else you put in it. Then a simple: Dim totalPrice as Decimal For each itm as &lt;yourStructure&gt; In &lt;yourListBox&gt; totalPrice += &lt;yourStructure&gt;.Price Next This way, if items are added or removed from the cart, you still have all the values you need in what remains in your shopping cart listbox. ... A Class could be used also, but you stated your professor doesn't want you working ahead and most times, Classes are later on.
Either a Win Forms app, or a Windows Service can handle this cleanly. * A service is the right option if there is no UI, you want it to run when Windows starts (before a user logs in), and all of the files are in public folders (not on the desktop, or in a folder under "Users"). * A Forms based app is the right option if you want it to run under the user account (and only start once a user logs in), it has a UI that you want to interact with, or it needs to process folders or shares of a particular user. With a Forms app you can use a NotifyIcon to send the app to the system tray and not have it on screen the entire time. With either version, you just use a timer and set the interval to 300000 (300 seconds / 5 minutes), or set it to a lower number and check the time on each pass to run it on a set minute.
I would make it a scheduled task. It is great to want to have a free-standing application, which calls itself on a timer, but that probably isn't a good use of your CPU resources. If the event that you did want to do that, /u/darkspy13 provided a link to the Timer.Tick event, which if implemented correctly could call a subroutine every 5 minutes. Reminder: ticks are represented in milliseconds: ' Sets interval to every 5 seconds, or 5000 milliseconds ' myTimer.Interval = 5000 
I'm assuming "Count" is set and maintained outside of this event? You are clearing the array on each loop by rediming it, and if I understand correctly, you want to show each item one at a time (on each click, not all at once in a loop). so depending upon the requirements, and the version of .NET you are using, the entire sub can be changed to...... requires .NET 4.0 Private Sub Button4_Click(sender As Object, e As EventArgs)Handles btnGetNextItem.Click 'show item 0, and remove it from the array txtArray.text = array1(0) array1.remove(0) end Sub or you can just keep track of the current item, and use it without removing items from the array. declare Current as an integer at the form level. Private Sub Button4_Click(sender As Object, e As EventArgs)Handles btnGetNextItem.Click 'show item at "current" &lt; index of the last click txtArray.text = array1(Current) Current += 1 'increment current for the next click end Sub If you have to use ReDim to handle the array (because the course requires it), then you'll need to manually move each item up the list, and "redim Preserve" the array to one item less. txtArray.text = array1(0) ' display first item in the array For i As Integer = 0 To array1.Count - 2 'shift each item up by one array1(i) = array1(i + 1) Next ReDim Preserve array1(array1.Count - 1) 'redim the array, preserving the contents, trimming off the last item To add to this, some general notes ...... There's no reason to use showArray.ToString it's already a string. It's also a bit cleaner to use "&amp;=" vs the longer methods to concatenate strings. showArray &amp;= array1(i) is the same as, and cleaner than... showArray = showArray &amp; array1(i) This also carries over to math ( "i += 1" vs. "i = i +1" ) 
also ... another note ..... This is class work designed to teach you to use arrays, but in the real world you wouldn't use them for this kind of work. A generic list is much better for lists that change in size once they are created. 
We haven't "learned" structures yet. But since we go through a chapter a day without any real hands on learning, our class pretty much is left to teach ourselves. I tried to use an array (I think?) In mine even though technically the next chapter's assignment is on arrays. Everyone in our class was unable to complete this assignment it seemed, so I turned in what I had since it was due this morning. If we can figure out how to make it work though, I'd really appreciate it since we have a practice exam Tuesday and I'm completely lost. I really appreciate everyone's help. :)
Well, if you're stuck using parallel arrays, you could loop through the books in your cart to pass to Array.IndexOf(array, value). This would give you the index to use against your parallel array for the price. You do have one issue in that you need a way to differentiate audio vs print so that you know which arrays to use. Here's an example: Dim Books() As String = {"Book1", "Book2", Book3"} Dim Prices() As Decimal = {29.95D, 12.50D, 11.95D} 'To find the price of book 2 you could use Dim FoundIndex as Decimal = Array.IndexOf(Books, "Book2") 'FoundIndex should now be 1 (index 1 is where it was found in Books) MsgBox(Prices(FoundIndex).ToString) 'would show 12.50 'Of course instead of a static "Book2" a variable could be used in its place. Again, you still need a way to denote whether the current item is a Print or and Audio to know which arrays you're searching. EDIT: Apparently, these allergies I'm feeling is making me batty. Code fixed as previous code would have resulted only in a WTF response. 
Sorry for the short answer last night... here's a better data set for you: (remember: 1 ppm = 1,000 ppb, so multiply ppm values x 1,000 for the inputs) Caclulated specific conductivity: 6.4 uS/cm Inputs: 1) Boron: 23 PPM 2) Lithium: 0.523 PPM 3) Ammonia (NH3): 56.7 PPB Caclulated specific conductivity: 19.1 uS/cm Inputs: 1) Boron: 465 PPM 2) Lithium: 1.74 PPM 3) Ammonia (NH3): 136 PPB Caclulated specific conductivity: 6.14 uS/cm Inputs: 1) Boron: 18 PPM 2) Lithium: 0.498 PPM 3) Ammonia (NH3): 56.7 PPB 
So you're wanting to enter a value and jump to the record that has that value instead of clicking next to find it? Is that right? If so, you should be able to do something like: Dim bs as new BindingSource bs.DataSource = &lt;yourdataset&gt;.Tables(&lt;the table&gt;) BindingContext(&lt;yourdataset, "&lt;table&gt;").Position = bs.Find("TheColumn", &lt;yourValue&gt;) 
This makes so much sense. Thank you for taking the time to explain!
Check it out, comparing vba7 and vb.net os kinda an apples an oranges thing. I hope you do use vb.net its much better than vba
Repeatedly calling it is known to cause bad things. In the old days, we called RANDOM(TIME) which seeded the generator randomly from the internal clock. &gt; the longest string of repeating numbers is about 5 Perfectly OK for a small range like this. It can happen playing craps for example.
Thanks! I looked at the MSDN link - I am trying to understand how to apply it to the console app - which is completely non-event driven (no user clicks needed), and has to run every 5 minutes. Would I remove this: &gt;If MessageBox.Show("Continue running?", "Count is: " &amp; alarmCounter, _ &gt; MessageBoxButtons.YesNo) = DialogResult.Yes &gt;Then since I need this to be completely automated without any user intervention? After looking at it for about 20 minutes to understand it, I am not quite sure where I would add my code in the example segment.
Thank you! Which would take up more CPU resources, the Timer.Tick event within VB or having Windows Task Scheduler run the executable?
Thank you! I agree, so far this is looking to be the most easiest method to go about this. It looks like it will take me a few extra steps to convert the console app into a Win Forms app - however is it possible to have a Win Forms app that does not require any user intervention when running (aside from starting it manually, or have it part of the startup sequence when the computer boots?)
Thank you. Is it possible to have a Win Forms app that is completely non-event driven (where it just runs a subroutine every time 5 minutes are up?) I will have to dig a little deeper and see how I can migrate the console app to a WinForms based app - perhaps even displaying some sort of log on the screen in a continuous loop on the status on what it has done so far, and a timer on the next execution of the subroutine.
It will still be event driven, but you can run it with no user interaction. Set the main form as the startup object (VS should do this for you when you create a new forms project). Drop a timer on the form, and set the timer interval high enough so that it only ticks every 5 minutes. Double click the timer to get to it's _tick event, and in that event, you call the sub or function that does your work. In the form_load event you can setup the timer properties (and enable it). The app will load, start the timer, and go about it's business without any user interaction. As you said, you can update a textbox with the status (textbox.appendtext to add to the bottom), or a label if you only want to show the current status. Once you get that worked out, you can add a NotifyIcon to send the app to the system tray, and add that logic to the startup routine so that it happens on load. You can do any cleanup work in the Form_formClosing event. From a performance standpoint, this will take 0 CPU to sit for 5 minutes and wait, and as long as your other code is clean, it should take very little memory. I would prefer a solution like this over the Windows Task scheduler. 
Another advantage of this type of solution over a console app, or launching from Task Scheduler, is that it never has to be on screen while it's doing the work. A scheduled console app will pop up on screen every 5 minutes blocking whatever you are doing.
You just need to declare the timer and handle it's tick event. If you can make it tick every 5 minutes awesome, if not just count the ticks addd time then use that to execute the code. Sorry playing a game or I could give a more useful explanation :( 
When I use loops, I use them to keep doing a task until a certain condition is met. So I make a variable as a boolean to keep the loop running. I write that the variable is true, then "do while variable=true". Immediately write variable = false inside the loop so it doesn't turn into an infinite loop. Then make the loop do something, such as pick a random number. If you want the loop to run again if a certain condition is met, then write an if then statement that will turn variable back equal to true again. Lemme know if you still need more help.
&gt; Function Getgrade(sub3) As String &gt; Dim Lettergrade() As String See the function is also a variable declaration drop lettergrade and use getgrade as your output variable Lettergrade = "F" becomes getgrade = "F" You could also use the return function Return lettergrade at the end of your getgrade function also instead of IF use a select case example Select Case sub3 Case is &lt; 60 Lettergrade = "F" Case is 60 to 69 Lettergrade = "D" end select 
I'll assume you're not a complete noob and use shorthand of what would work, but not necessarily what you would want to do: Private Total As Integer Sub OrderCompleteClick(...) Handles BtnOrderComplete.Click Total += Integer.Parse(TBoxAmountDue.Text) BtnSummary.Enabled = Total &gt; 0 End Sub Sub SummaryClick(...) Handles BtnSummary.Click MsgBox(Total) End Sub Other than that, a screenshot of the GUI doesn't really help, a code snippet/example would be better.
Jeejee answered your homework assignment, but maybe you're still confused. 001 DO 002 msgbox "Hello World" 003 Loop This code will just continuously display a message box with the words "Hello World" in it. The code starts at line 1, at line 2 displays the msgbox, and at line 3, the LOOP command sends the program back to line 1. 001 DO WHILE X&lt;5 002 X=X+1 003 MSGBOX X 004 LOOP In this example, the first line starts a Do...Loop only if the value of "X" is less than 5. If X is greater than 5, then the program will jump straight to Line 5. Line 2 adds 1 to the value of X, line 3 displays a message box with the value of x, and finally line 4, sends the program back to line 1. Of course, when the program gets back to line 1, it checks again the value of X, and if it's become greater than or equal to five, then it forwards the program to line 5. 001 DO 002 X=X+1 003 MSGBOX X 004 LOOP WHILE X&lt;5 This will do the same as the previous one, except that no matter what the value of X is, the code will run through at least once. Then when it gets to line 4, it will only go back to line 1 if X is less than 5, else it will go on to the next line.
Ah sweet! Do you know the most effective method to go about adding a used agent header to the request?
Well first off you're defining Lettergrade() as an array of strings and then trying to assign it a value without specifying the index. You need it to be just a string so take out the () and you should be good for that. Since it is a function, it is also expecting a return value so and the end of the function you should have "Return Lettergrade". After you fix that and the function returns a value you can put it into the while loop and add another list to your form ListBox4.Items.Add(Getgrade(sub3)) ------------------------------------------ Now that the syntax errors are solved and it outputs the right stuff I have a few recommendations that you should make but don't need to. I just think it might help future coding. If you have a known number of iterations you need to go through you should use a For...Next loop and since the Data.GetUpperBound(0) isn't going to change throughout the loop you should just use a for next to iterate through each index. Such as For count as integer = 0 to Data.GetUpperBound(0) All the code Next For the function: If you have a multitude of possible outcomes you want to check you should use a Select...Case statement such as [Vectronics Example](http://www.reddit.com/r/visualbasic/comments/21p4h9/help_with_a_vb_project/cgfgf2n) When passing variables to a function of sub procedure you want to define You should name your variables something recognizable. In this example you have sub1 sub2 sub3 sub4 which are very cryptic. You know that the first one is going to be Name so you should just name it that. Dim Name, Grade, Year as String So that way when looking at your code you can easily recognize what each variable contains. There's also multi-dimensional arrays which would have solved this whole thing in 9 lines flat but you're definitely not at that point yet. http://pastebin.com/bYLH08h5 
Go on, run it. What could go wrong?
Dim fs As New System.IO.FileStream("FinalReport.htm", IO.FileMode.Create, IO.FileAccess.Write) Dim w As New StreamWriter(fs) w.WriteLine("&lt;tr&gt;&lt;td&gt;" **&amp;** sname **&amp;** "&lt;/td&gt;&lt;td&gt;" **&amp;** getgrade **&amp;** "&lt;/td&gt;&lt;td&gt;" **&amp;** IsSatisfactory **&amp;** "&lt;/td&gt;&lt;td&gt;" **&amp;** nlevel **&amp;** "&lt;/td&gt;&lt;/tr&gt;") w.WriteLine("&lt;/Table&gt;&lt;/Body&gt;&lt;/HTML&gt;") w.Close() MsgBox("Task has been completed.") Me.Close()
The way I did it was: Dim WC As New WebClient WC.Headers.Add("User-Agent: Other") Dim ByteStr As Byte() = WC.DownloadData("http://www.transfermarkt.com/en/lionel-messi/leistungsdaten/spieler_28003_2012.html") Dim str As String = System.Text.UnicodeEncoding.UTF8.GetString(bytestr) MsgBox(str) don't know if this is the best way but it's the way I did it and it looks pretty decent imo. 
Thank you so much! We were stuck on that for a while. We are currently trying to call our functions so that they display a text file as an html page. It's supposed to display a table in html when we run another file while executing our VB project. Unfortunately, when we load the web page, it is completely blank. I'm pretty sure we have to call the functions outside of the functions, but when we try that, we are getting syntax errors. Our huge wall of code: Imports System Imports System.IO Public Class Form1 Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load Me.Hide() Dim sr As IO.StreamReader = IO.File.OpenText("finalgrades.txt") Dim strinput, sname, score, level As String Dim fs As New System.IO.FileStream("FinalReport.htm", IO.FileMode.Create, IO.FileAccess.Write) Dim w As New StreamWriter(fs) w.WriteLine("&lt;HTML&gt;&lt;Body&gt;") w.WriteLine("&lt;TITLE&gt;My title&lt;/TITLE&gt;") w.WriteLine("Baldwin Whitehall School District &lt;br&gt;") w.WriteLine("4653 Clairton Boulevard, Pittsburgh, PA 15236 &lt;br&gt;") w.WriteLine("412-346-7104") w.WriteLine("&lt;TABLE border=3") Do While sr.Peek &lt;&gt; -1 strinput = sr.ReadLine Dim myinput As String = sr.ReadLine Dim place As Integer = myinput.IndexOf(",") + 1 Dim sub1 As String sub1 = myinput.Substring(0, place - 1) 'sub1 is name' Dim sub2 As String 'sub2 is grade' sub2 = myinput.Substring(place, myinput.Length - place) Dim sub3, sub4 As String Dim place2 As Integer = sub2.IndexOf(",") + 1 sub3 = sub2.Substring(0, place2 - 1) sub4 = sub2.Substring(place2, sub2.Length - place2) Dim mylevel As String mylevel = nlevel(sub3, sub4) Sname = sub1 score = sub3 level = sub4 Loop End Sub Private Function nlevel(ByVal score As Double, ByVal level As String) As String If score &gt;= 70 Then If level = "Freshman" Then Return "Sophomore" ElseIf level = "Sophomore" Then Return "Junior" ElseIf level = "Junior" Then Return "Senior" Else Return "Degree Conferred" End If Else Return level End If Call nlevel(score, level) End Function Private Function getgrade(ByVal score As Double) As Double If score &gt;= 90 Then Return "A" ElseIf score &gt;= 86 Then Return "B+" ElseIf score &gt;= 80 Then Return "B" ElseIf score &gt;= 75 Then Return "C+" ElseIf score &gt;= 70 Then Return "C" ElseIf score &gt;= 60 Then Return "D" Else Return "F" End If Call getgrade(score) End Function Private Function IsSatisfactory(ByVal score As Double) As String If score &gt;= 70 Then Return "Satisfactory" Else Return "Unsatisfactory" End If Call IsSatisfactory(score) End Function Private Function theend(ByVal sname, getgrade, IsSatisfactory, nlevel) As String Dim fs As New System.IO.FileStream("FinalReport.htm", IO.FileMode.Create, IO.FileAccess.Write) Dim w As New StreamWriter(fs) w.WriteLine("&lt;tr&gt;&lt;td&gt;" &amp; sname &amp; "&lt;/td&gt;&lt;td&gt;" &amp; getgrade &amp; "&lt;/td&gt;&lt;td&gt;" &amp; IsSatisfactory &amp; "&lt;/td&gt;&lt;td&gt;" &amp; nlevel &amp; "&lt;/td&gt;&lt;/tr&gt;") w.WriteLine("&lt;/Table&gt;&lt;/Body&gt;&lt;/HTML&gt;") w.WriteLine("&lt;TABLE border=3") w.Close() MsgBox("Task has been completed.") Me.Close() Call theend(sname, getgrade, IsSatisfactory, nlevel) End Function End Class
You don't really have a question, just a "*fix this for me*". If this was mine, I'd skip most of what you are using. Private Function LoadData(ByVal FileName As String) As List(Of Job) Dim Data As String() = File.ReadAllLines(FileName) Dim Values As String() Dim CJob As Job Dim NewJobs As New List(Of Job) Dim i As Integer For i = 0 To Data.Length - 1 Values = Data(i).Split(",") ' or "|", etc CJob = New Job With CJob .Nameofjob = Values(0) .Day = Short.Parse(Values(1)) .Month = Short.Parse(Values(2)) ... etc End With NewJobs.Add(CJob) lstJobs.Items.Add(String.Format(myformat, Values)) Next Return NewJobs End Function Reading/Writing the Job Structure to a file is bound to cause problems, it also makes it hard to edit manually in case of file corruption, or you want to change the Structure, etc... so a CSV, line delimited format might be better. You're also using *Short*, which should just be an Integer, integers are faster to work with (both in performance, and just code handling), and far more common, so you can do stuff like: Dim i, Day, Month, Tick, SomeDigit As Integer Rather than Dim i, Tick, SomeDigit As Integer Dim Day, Month As Short You also don't have to worry about Day = CShort(SomeDigit) You can just do Day = SomeDigit I'm not sure about the validity of your "myformat", since the Structure has 8 members, but your format only has 5. Is "lstJobs" a ListBox, or a ListView (in "Details" mode), ListView would be better since it has columns, and will automatically format, align data... easier to view/compare days, locations, etc.
this is the input page http://m.imgur.com/gtuoBgQ and this is the page where i would like the files contents to be displayed http://imgur.com/EQqIMt1. 
getgrade(score) is supposed to read a 2digit number in a text file and should eventually output a letter grade. So we do not need to call our functions? We can't figure out how or where to call them without getting errors. We are double clicking FinalReport, and a web-page comes up. It's blank, though. We are not using webbrowser.navigate(finalreport.htm). we tried adding it to the form.load, but it said something along the lines of "requiring object reference"
You need to call the functions at some point, but rarely do you ever call them within the function itself, unless the input value is somehow changed within the function. Private Function FooBar(ByVal Input As String) As String If Input.Length = 1 then Return Input Elseif Input.Length &gt; 1 Return FooBar(Input.SubString(0, Input.Length - 2)) Else Return Nothing End If End Function Eventually that would return the first character in a string, or Nothing. Otherwise, you would do stuff like: Private Sub Something() Dim Data As String = GetData() MsgBox(Data) End Sub Private Function GetData() As String Return "This Is A String" End Function You'd need to add WebBrowser to the form. Generally in the GUI/Form designer, not code-wise, but. Private MyBrowser As WebBrowser Private Sub Form_Load(...) ... MyBrowser = New WebBrowser Me.Controls.Add(MyBrowser) MyBrowser.Location = New Point(0,0) ' Just to make sure it's visible MyBrowser.BringToFront() ' Also to make sure it's on top of other controls MyBrowser.Navigate("C:\FinalReport.htm") End Sub
Just added the my browser code, but we are getting syntax errors. It's odd you say that the code should output when we click finalreport.htm. It's pulling up firefox btw. At this point, i have no clue what to do. Do you have any idea why nothing is uploading to the webpage?
I think that having Windows Task Scheduler would be easiest on your resources.
Thanks for pointing me in that direction, as it's a feature that was unknown to me - I will dig around and see if I can find some sample code :)
Thanks! Just implemented the task scheduler - easy breezy. good advice!
I will give this a try just so I can learn how to do it. Thanks for the tip!
Assuming this is homework and not a real program, that's really the fastest way to accomplish it. If it was a real program, you wouldn't use the checkBoxes, because you'd have hundreds (or thousands) more options to chose from, all with different prices, so you'd have lists of items (Each item a class with part numbers, names, prices, vendors, etc). You'd add each item to an order, and then loop through the items to get the full price. 
Dang, alright, thanks anyway :)
I agree with /u/hdsrob on this. But I have to at least ask based on your current screenshot, why would you use checkboxes instead of radiobuttons? As it stands, the user could select all the video cards, all the cpu's and all the memory but that wouldn't be a feasible system. radiobuttons in groups are mutually exclusive so that only one item can be selected from each group. Another thing to note (if it is homework) is that you could put the price in the .Tag property of each so that you don't have to parse through the text to get the price.
Because I didn't know radio buttons worked like that ^^, I'll correct it shortly. Thank you for the advice, it's appreciated :)
For .Net they are "self-aware", as long as they are all direct children of the same parent control, they automatically act as a group. So any Panel, GroupBox, etc.
Two textboxes for user input and a button for submission. In the button click, compare the user and password and respond based on the criteria. Increment a counter variable and always check to see if it reaches the max number of attempts. This will allow you to determine if access denied should be displayed. Increment the counter variable only after an unsuccessful attempt is made, then check if it's 3. You haven't specified where the userid and password are coming from for the check routine so the only information I can give is that you compare the textbox entries against wherever you are getting the 2 pieces of information. (Keep in mind string comparisons are case-sensitive by default) "UserCaleb" &lt;&gt; "usercaleb" The textbox has two properties for password entry: UseSystemPasswordChar (little black dots) and PasswordChar where you can enter the character you want displayed (ie, *)
Thank you. So when it's wrong, I should create an ElseIf statement, looking like this: ElseIf Usernametxtbox.Text = "Flynn" And Not Passwordtxtbox.Text = "TRON" Then MessageBox.Show("Incorrect Password") counter + 1 correct?
Close, to increment the counter you need to add 1 + itself. This can be done with counter=counter + 1 or the shortened version: counter += 1
Thank you. You've been very helpful. Where did you learn this, if you don't mind my asking.
Just through years of enjoying working with computers. You might want to check out: http://channel9.msdn.com/Series/Visual-Basic-Development-for-Absolute-Beginners I think it's a great starter for basic fundamental concepts (variables, loops, conditions, etc...) They're fairly short videos, and things are explained very clearly. I recommend them to anyone starting out that is trying to do this on their own.
 Dim i, intSum As Integer For i = 2 To 50 Step 2 intSum += i Next lblForNextAnswer.Text = intSum.ToString Edit for copy/paste easiness.
Thanks man! Worked great!
Definitely! I only just discovered this (as an amateur) at the end of a big project where I manually produced a settings file.
https://www.facebook.com/MicrosoftVB
He will not learn if you give him the code.
Well, I'm sure you can put a lot of them on there, but the fact that you are asking leads me to believe there's a serious design problem here ;) What are you trying to accomplish?
If that's your complete code, I don't see you calling filtersales() anywhere but in the form_load. I would think you would want to call it after a NavigateRecords() once the txtCustomerID is populated from the navigate. Am I missing something?
Please prefix your posts with the version of Visual Basic you are using. Example: [VB2010], [VB6] .
the issue is in" If MaxValue = -999 Then Console.Writeline("Are you done? (Y/N)") Question = Console.ReadLine() ElseIf Question = "Y" End End If if MaxValue = -999 evaluates true, the elseif is never run. that's how if's work. you need to evaluate Question = "Y" inside that if block.
I'm not sure what you're saying? Should I even use an if statement, or would it be better to just use a loop? 
I'd recommend looking up info on For Next loops. 
This is rough, but a pointer: Dim intNoOfTimes as Integer 'Dim your integer Dim i as integer ' your counter for the loop textbox.text = "" ' clear your textbox intNoOfTimes = InputBox("Enter a number") ' get a number from the user if not isNumeric(nooftimes) then exit sub ' make sure it's numeric if intNoOfTimes &gt;= 1 and intNoOfTimes &lt;= 10 then ' make sure it's within your given range for i = 1 to intNoOfTimes ' start the loop at i=1, end it at i=intNoOfTimes textbox.text = textbox.text &amp; vbcrlf &amp; "Study!" 'increment the textbox next i ' increment the loop
you're evaluating the question wrong basically, you have to use an If within an If. If you had multiple possible values of "Question", you'd use a Select...Case... statement. If MaxValue = -999 Then Console.Writeline("Are you done? (Y/N)") Question = Console.ReadLine() If Question = "Y" then End End If
Oh! Ok I understand! Thank you! :)
This is basically an alternate to TheSleepSessions reply. Private Button1_Click(sender As Object, e As EventArgs) Handles Button1.Click Dim Msg As String = "Enter A Number Between 1 And 10" Dim Response As String = InputBox(Msg) Dim i,Result As Integer Label1.Text = "" If Integer.TryParse(Response, Result) AndAlso Result &gt; 0 AndAlso Result &lt;= 10 Then For i = 1 To Result Label1.Text &amp;= "Study!" &amp; vbCrLf Next Else MsgBox(Msg) End If End Sub
There's no practical limit, but there is a limit. Likely the Integer.MaxValue (2,147,483,647)... and obviously at some point you would run out of memory. Chances are if you are using lots of timers, you can reduce them. Timer1.Interval = 10 Private TimerTicks As Integer Sub Timer1_Tick(...) ... TimerTicks += 1 Select Case TimerTicks Case 1 Case 2 Case 3 End Select End Sub You can make this more complex as well by just changing your Select Case: Select Case TimerTicks Mod 10 Case 0 ' It's divisble by 10, ie: every 100ms Case 5 ' Every 5, 15, 25, etc End Select or Select Case True Case TimerTicks Mod 10 = 0 AndAlso TimerTicks &gt; 100 ' It's divisble by 10, and it's been running for 10 seconds or more Case TimerTicks = SomeVariable ' Tick count matches a variable defined somewhere Case TimerTicks &gt; 1000 TimerTicks = 0 ' Reset the ticks End Select
Thanks! Worked perfectly!
Please prefix your posts with the version of Visual Basic you are using. Example: [VB2010], [VB6] .
depends on how you're loading the picture. you'd likely need to manually read it in using byte buffers and just stop when you've got enough
It's possible, but it's really quite complex (depending on skill), you have to Open the file using a Stream, and read bytes, then convert those bytes to colors, and convert those to a bitmap. If you're looking for a faster way to load images, try this: Dim Img As New Image Using FStream As New FileStream(Info.FullName, FileMode.Open, ...Access, ...Share) Img = Image.FromStream(FStream, False, True) End Using That's basically the quickest way to load an image, *IF* you are also displaying the image inside an application. (without using direct Windows API, or some image loading library, *the fastest easy way*) If you are just manipulating the image data, you can set that second Boolean to "False" and it will load slightly quicker. That should load 10000x7500 pixel image in about 0.15 seconds, even faster if you run it off an SSD. If you are drawing images, use Bitmaps with 32bit PARGB Dim Img As New Bitmap(5000, 3000, PixelFormat.Format32bppPArgb) That will likely reduce your draw time by about 15% at least. If you are doing any per-pixel processing, use LockBits ' Using "Img" for the image Dim Rect As Rectangle = Your sample area of the image Dim BMPData As BitmapData BMPData = Img.LockBits(Rect, Imaging.ImageLockMode.ReadOnly, PixelFormat.Format32bppArgb) ' Just to format it here, split to new line... lol ' Format here depends on use/case... it will change the array size and information Dim Strd As Integer = BMPData.Stride Dim PLength As Integer = Strd * Img.Height ' Basically Width * Height, ' but wider because of bitdepth 1 = 4 in this case Dim Pixels(PLength) As Byte ' The array to fill with data Runtime.InteropServices.Marshal.Copy(BmpData.Scan0, Pixels, 0, PLength) Runtime.InteropServices.Marshal.Copy(Pixels, 0, BmpData.Scan0, PLength) Img.UnlockBits(BmpData) ' It's now safe to use this image elsewhere if need be. Then process your pixel data Dim iCol,IRow As Integer For x = 0 To Img.Width - 1 iCol = x * 4 ' Because ARGB For y = 0 To Img.Height - 1 iRow = y * Strd ' BMPData.Stride, because the image is flat string of pixels, ' You need to do this to actually "find" the row you are in. ' In this case: A = Pixels(iRow + iCol + 3) R = Pixels(iRow + iCol + 2) G = Pixels(iRow + iCol + 1) B = Pixels(iRow + iCol) ' or: Color.FromArgb(Pixels(iRow + iCol + 3), ... , ... , ...)
 Sub Math (ByVal asdf As Integer) 'Your code here End Sub
Thank you!!
Yeah well this is just for a CIS class... I'm trying but I hate coding! If I could make this in perl I'd be done in 30 minutes! I've been working on this for 2 days now....
You're welcome :) Edit: the question is, do you understand the basics of For looping and If statements now?
More than welcome :)
Now I'm getting the same problem with the line "Num = (Console.ReadLine)" Do I have it declared correctly? [Here](http://pastebin.com/YSkQbxtt)
"-999" is what we call a "magic value", meaning that it's not a real datapoint and has special (magic) meaning in the program logic. in this particular use case, you can treat it as a string, so put it in quotes.
Woohoo! That fixed like 4 errors! Thank you!! :)
Awesome :) &gt; Dim Img As New Image Using FStream As New FileStream(Info.FullName, FileMode.Open, ...Access, ...Share) Img = Image.FromStream(FStream, False, True) End Using I used this and I got it down to 1/8sec load time, setting the second option to false loads a black image unfortunately for some reason. Thanks, it's almost twice as fast now. I'm just opening and cutting out a section of each file, such as written input on a document. I first tried finding a way to cut without loading the image and then I came to the realization that I was trying to cut part of an image from something that wasn't even an image, but bytes.
My suggestion? Go to your application properties under the "Compile" tab, turn: Option Explicit: On Option Strict: On Option Compare: Binary Option Infer: Off Under the "Warning Configurations" make everything "Error". You'll likely be confused at first, and probably have to edit quite a few things about your application, but it's the easiest way to force a basic "best practice" scenario, as well as often speed up your code. That will tell you (assuming Visual Studio) while writing the code, when you are trying to convert strings to integer, and vice-versa.
Yeah, skipping the error check is problematic with most formats other than Bitmap and probably Gif. You can get significantly more speed out of reading the file stream directly, but like you said, you're reading bytes... so you also have to code up your own JPG (or whatever format) parser to convert that into usable data. A bit of a trade-off, more speed, but far more complexity in the user code. If you have a multi-core processor, don't forget about the possibility of threading, you could probably process 4 images at once instead of 1. Likewise, you can gain a bit of speed if you are loading thousands of files if you branch out your IO. Spawn a new thread that loads directories/files, then split the directories into their own Load() method. Pseudo-code: For Each Dir In Directories LoadFiles(Dir) Next Sub LoadFiles(Byval Root As String) SomeGlobalFiles.Add(Directory.GetFiles(Root)) End Sub That way the first directory will likely load within milliseconds (literally, like 2ms) and you can already begin "work" in images while the rest of the directories/files load. (which will probably only take about 1 second for every 30,000 files, but that's 1 second quicker lol).
Since when did these subs become a place for people to ask for their homework to be done for them? I'm seeing this constantly. Attempt the work and ask questions, don't ask people to do it for you. It's no wonder there are so many people who go for programming jobs who don't know the first thing about writing code.
Perhaps you could play around with [this](http://stackoverflow.com/questions/16943253/main-form-text-aligning-in-vb-net-form)
Thanks. I had run across that solution during my searching. I just figured with all the customization options in the VB Express IDE, there was an option for some property I am not aware of.
So what is it are you trying to do? Press a key on your keyboard and when you do that it'll select the radio button? And what do you mean select the shortcut?
Yes. Focus. Sorry I should of been more clear with that. But I don't want to have a separate function for it. I want it in the if statement. Is there a "KeyboardEvent" alternative like in flash?
I meant focus. Sorry. 
 Private Function Get53rd(ByVal Path As String) As String Dim Data As String() = File.ReadAllLines(Path) If Data.Length &gt; 51 Then Return Data(52) Else Return "" End If End Function
Thanks, but I solved the problem already. I loaded the contents of the file into an array and took the lines I needed.
Control.Focus() isn't *really* a separate function, it's a part of any control that takes input. Button.Focus() Me.Focus() ListView.Focus() It automatically sets focus to that control, nothing but *.Focus() required. Edit: Regarding keyevents: Me.RaiseKeyEvent(Me, New KeyEventArgs(Keys.A)) Or any other key you want.
Maybe I don't understand, but what are you trying to do with the keyboard? What event do you want to happen when what event happens? &gt; HERE IS WHERE I WANT TO HAVE CODE THAT WILL SELECT THE RADIO BUTTON FOR FRESHMAN WHEN IT IS PRESSED ON THE KEYBOARD. When what is pressed on the keyboard? It seems like the if statement that it's already inside of checks to see if the radio button is checked and if it is then you're changing it to false. So I guess my main question is what do you want to happen after you deselect it?
I think this is what I'm looking for. I'm going to update my code when i get home tomorrow and will check in tomorrow. Thanks!
if you select everything on the form and on the events area there will be one called "KeyDown" double click that and Select Case e.KeyCode Case Keys.F1 radioFreshman.checked = True Case Keys.F2 radioSophomore.checked = True Case Keys.F3 radioJunior.checked = True Case Keys.F4 radioSenior.checked = True End Select You need a sub with handles of keydown event and inside that you can handle all keys. Mine looks like this Private Sub KeyDown_Event(sender As System.Object, e As System.Windows.Forms.KeyEventArgs) Handles VScrollBar1.KeyDown, RadioButton1.KeyDown, ListBox1.KeyDown, Button5.KeyDown, Button4.KeyDown, Button3.KeyDown, Button2.KeyDown, Button1.KeyDown Select Case e.KeyCode Case Keys.F1 radioFreshman.checked = True Case Keys.F2 radioSophomore.checked = True Case Keys.F3 radioJunior.checked = True Case Keys.F4 radioSenior.checked = True End Select End Sub That way no matter what has focus, it'll trigger this event.
 Dim Index As Integer = Combobox1.SelectedIndex Dim ItemStr1 As String = Combobox1.SelectedItem.ToString Dim ItemStr2 As String = Combobox1.SelectedText Dim ItemStr3 As String = Combobox1.SelectedValue.ToString If you have a set of constants, that happen to be sequential integers, and/or useful as string. Private Enum MyConstants Var1 = 0 Var2 = 1 Var3 = 2 End Enum Sub Whatever() Dim MyVal As MyConstants = DirectCast(Combobox1.SelectedIndex, MyConstants) MsgBox(MyVal.ToString) ' Shows "Var1" etc MsgBox(MyVal) ' Shows 0, etc. End Sub Or you can do it manually: Select Case Combobox1.SelectedIndex Case 1 Case 2 End Select or Select Case Combobox1.SelectedItem.ToString Case "Foobar" Case "Raboof" End Select A code example, or more specifics of what your are trying to convert the values from/into would be helpful.
Option Strict On Option Explicit On Option Infer Off Public Class MainForm Private Sub MainForm_Load(sender As Object, e As EventArgs) Handles Me.Load vehicleTypeComboBox.Items.Add("Compact") vehicleTypeComboBox.Items.Add("Standard") vehicleTypeComboBox.Items.Add("Sport Utility") vehicleTypeComboBox.Items.Add("Convertible") vehicleTypeComboBox.SelectedIndex = 3 End Sub Private Sub exitButton_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles exitButton.Click 'Ends the application Me.Close() End Sub Private Sub clearButton_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles clearButton.Click 'Clears the name textbox nameTextBox.Clear() 'Clears the number of days textbox numDaysTextBox.Clear() 'COMPLETE THE FOLLOWING IN THE BLANK SPACE BELOW THE COMMENT: 'CLEAR THE SELECTION FROM THE VEHICLE TYPE COMBO BOX vehicleTypeComboBox.SelectedIndex = -1 'COMPLETE THE FOLLOWING IN THE BLANK SPACE BELOW THE COMMENT: 'CLEAR THE BILL SUMMARY LIST BOX billSummaryListBox.Items.Clear() 'Resets the focus to the name textbox nameTextBox.Focus() End Sub Private Sub calculateButton_Click(sender As Object, e As EventArgs) Handles calculateButton.Click Const refuel As Double = 50.0 Dim numberDay As Double Dim compact As Double = 29.99 Dim standard As Double = 36.99 Dim sportUtility As Double = 45.99 Dim convertible As Double = 54.99 Dim Total As Double Dim selectedCar As Double Total = (numberDay * selectedCar) + refuel 'Show me billSummaryListBox.Items.Add(Total.ToString("c0")) End Sub Private Sub numDaysTextBox_KeyPress(sender As Object, e As KeyPressEventArgs) Handles numDaysTextBox.KeyPress 'Accepts on #1-9 and backspace If (e.KeyChar &lt; "0" OrElse e.KeyChar &gt; "9") AndAlso e.KeyChar &lt;&gt; ControlChars.Back Then e.Handled = True
I still get a form load event if I double click a form in 2013. You can always get to events via the General and Declarations comboBoxes at the very top of the text editor (just below the tabs and toolbar). Select (FormX Events) from the left ComboBox, and then the right one will populate, and you can use it to select the load event. 
You could create an array of values associated with the index of the listbox. So index 0 is Full Sail so that would be 400, Appalcation is index 1 so that's 450 and then NC is index 2 so that's 500 Dim Prices() as integer = {400,450,500} And then you just multiply the value of the selected index with the value of the selected dropdown box item. Dim Cost as integer= Cint(ComboBox1.SelectedItem) * Prices(lisbox1.SelectedIndex) Label1.text = Cost.ToString At least that's how I'd do it. Or a dictionary of values with the school name being the key.
Find out what the end goal of whatever it is you are doing. Its not overly applicable when doing say assignments, but is absolutely necessary in the real world. Always ask "Why" and you will save yourself a lot of headaches. 
You could reduce that code tremendously using a few For...Each blocks ;) 
Nah.... loops are usually how it's done, unless you know the math behind it and can find a closed form solution.
It really depends upon size and complexity. If it's very complex then I'll start with a mind mapping tool (XMind) to think my way through the structure, events, etc. From there I move to flow charts on a whiteboard, or start with the whiteboard if it's less complex. For new tech that I've never used before, I'll generally use a throw away app for creating a proof of concept. I also keep a "scratch pad" app in my main solution just for testing concepts, or testing smaller bits of code. Beyond that, I tend to just write comments (pseudo code) to stub out the basics, and start filling in the gaps. Most of my development is just pseudo code, and then fill in the blanks, but then it's mostly expanding a very large existing code base that I've written for over 10 years. 
prefix your code lines with 4 spaces so that it's readable. though unless I'm misreading, I don't see you actually using the objRegEx object against the contents..
what have you tried?
Try/Catch with parsing don't know how to reset the the input box, I read something about using a type of input box, but that's for excel or an older version. The problem with searching for the issue is phrasing, I don't know the phrasing for what I'm looking for so, I though I'd ask here. 
integer.tryparse I think there is a .net validation provider as well.
yeah there's no such magic. things are only as they are defined, 
 objRegEx,Execute.... what howto/docs are you using?
 Dim n As Integer Do Loop Until Integer.TryParse(InputBox("Integer?"), n)
 ''establishes a variable to hold the output from our input box. ''Stores as string for ease of use Dim ourInteger As String ''sets up a loop that checks if the input is numeric or not, will rerun the loop if not numeric While (IsNumeric(ourInteger) = False) ''our input box ourInteger = InputBox("Enter an integer", "Integer", "1") ''loop will only exit if the string is numeric End While ''rounds the ourInteger variable up to a whole number ''could write a function that rounds up or down depending ourInteger = Math.Ceiling(CInt(ourInteger)) ''outputs to user showing them that the input is numeric and displaying the result MessageBox.Show("The character is an integer: " &amp; ourInteger) Is that what you need mate? Put it into a button to test it.
Can you link to some documentation on it? 
Google found these results: [How to use Imgur API (VB.net &amp; C#)](http://pc-tips.net/imgur-api-vb-net) [ImgurDotNet](https://github.com/JacoRuit/ImgurDotNet) [StackOverflow: Help with imgur API](http://stackoverflow.com/questions/2443172/help-with-imgur-api-and-vb-net-image-post)
read filenames from folder into an array, generate random number, pick that array element. 
xml is a generic data storage format that supports complex data schemas. xlsx is a specific complex storage schema that's xml based. cvs is a very basic data storage format and schema that excel supports. for any given xml format, you need some sort of data parser for that schema. it's even possible for a xml schema to be far too complex for excel to handle.
I'd go with: Read filenames into an array; [shuffle](http://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle) the array and then present the images in order starting with the first. If you reach the end of the array, you can restart from the beginning (showing the pictures in the same sequence) or reshuffle the array before restarting. Until you exhaust the array, you'll never show the same picture twice.
I agree with CharlieMay. It looks like you already have group boxes set so it would be super easy. For each chkbox as CheckBox in GBGfx If chkbox.checked then intTotalprice += chkbox.tag End if Next or if you have radio buttons, it would work the same way. just change CheckBox to RadioButton I wish I knew about for each loops when I made this a long time ago. http://i.imgur.com/vcSJasT.png It was a tower of if statements http://pastebin.com/3RBmxVkD
Try using a trackbar. http://msdn.microsoft.com/en-us/library/System.Windows.Forms.TrackBar(v=vs.110).aspx?cs-save-lang=1&amp;cs-lang=vb#code-snippet-2 You can set maximum and tick frequency, large change and small change.. Then use the scroll event to change the text value. 
Data tab - Get External Data section - click From Other Sources - From XML Data Import. That should at least get the data into excel into columns for you. Also, if the data is in a simple enough format in XML, Excel can open it directly (and correctly with columns).
Build an application that can create read update and delete records from a database.
Come up with something something that helps with an interest, and build it from top to bottom. * Do you like movies? You could build an app (or ASP.NET website) to track and rate movies you saw. * Collect something, build an app to catalog your collection. * Work out or go to the gym, write a workout log / tracker. * Etc. You could also work through reproducing smaller versions of other apps. Things like an email client, RSS reader, tabbed notepad, etc, or build small utilities to make jobs simpler. I think it's most important to pick something smaller (so that it's finish-able), create a doc of what you want to accomplish with it (split it up into v1, v2, v3 features to keep it smaller if you have to), and write the entire app, to the end. Often times it's the small details that really take a lot of time to get right, so it's worth really trying to get it complete. Act as if you are going to sell it, or give it away, and write it with that in mind (if it's hobby related, you might actually be able to give it away). 
I'm not saying this is the BEST idea, but if you go to freelancer.com, odesk.com, elance.com you can look for an application that you think you can complete and then try to do it with the requirements they give. It'll give you examples of some applications and complexity that people are actually looking for.
Are you sure you want a scrollbar? Dim NUD As New NumericUpDown With NUD .Minimum = 0 .Maximum = 1 .DecimalPlaces = 2 ' 0.00 .Increment = 0.01 'How much it changes each up/down End With This will allow the user to input a specific value, or to use the Up/Down buttons to change values. Other than TTGImp's suggestion, you can do it manually too: If X.Value &gt; 1 Then X.Value = 1 ElseIf X.Value &lt; 0 Then X.Value = 0 End If The problem here is that if you do it in X.ValueChanged, it will be called redundantly unless you have a, toggle. Private ChangingValue As Boolean Sub()... If Not ChangingValue Then Changingvalue = True ....the rest of it. End If ChangingValue = False End Sub
He's using .Net... but, everything older than 2002 is VB6. I wouldn't suggest using anything older than 2008, early .Net sucked.
Make a game. I made space invaders once, which sounds easy but isn't. Doing this will give you perfect practice with for loops, moving objects (like pictures) around the screen, sounds, writing to databases, as well as having to deal with lag that the program could cause if it is too inefficient. When I made space invaders it was so diverse that it single handedly got me a B+ in my first class of vb.net.
Likewise +1 for For Each, although there are several ways of grouping controls, or setting a variable when a checkbox is changed rather than getting it during BtnClick. I would highly suggest you enable Options: Explicity, Strict... and use Compare: Binary, and disable Infer (that's kind of optional). this: intTotalprice = optTitan.Tag Is kinda bad, it should be one of: intTotalprice = Integer.Parse(optTitan.Tag.ToString) intTotalprice = DirectCast(optTitan.Tag, Integer) And you only need one: Me.Label.Text = "" For Each ChkBox As CheckBox In *SomeContainer*.Controls If ChkBox.Checked Then intTotalprice = Integer.Parse(ChkBox.Tag.ToString) End If Next Me.lblTotalPriceShow.Text = intTotalprice.ToString You could also do it the other way, and reduce one conversion: For Each ChkBox As CheckBox In *SomeContainer*.Controls If ChkBox.Checked Then Me.lblTotalPriceShow.Text = ChkBox.Tag.ToString End If Next intTotalprice = Integer.Parse(Me.lblTotalPriceShow.Text) Since you are using ElseIf, it means only one from each group can be valid/checked, so I would also suggest: For Each ChkBox As CheckBox In *SomeContainer*.Controls If ChkBox.Checked Then Me.lblTotalPriceShow.Text = ChkBox.Tag.ToString intTotalprice = Integer.Parse(Me.lblTotalPriceShow.Text) Exit For ' Which will exit the loop, since nothing else needs to be validated. End If Next If You are using Explicit/Strict, etc... you'd probably have to use: For Each Ctrl As Control In *SomeContainer*.Controls If DirectCast(Ctrl, CheckBox).Checked Then End if Next Which means you'd likely want to define it outside of the loop. Dim ChkBox As CheckBox For Each Ctrl As Control In *SomeContainer*.Controls ChkBox = DirectCast(Ctrl, CheckBox) If CheckBox.Checked Then ' End if Next Since you'll be referring to it at least twice, that way you dont have to use DirectCast() twice or more, just once. Explicit/Strict makes you have to type a bit more, but it's far more obvious what is going on, and makes for faster code.
Thanks. I can do all this with the VB (developer tab) in powerpoint? So to get my head around the process. When the powerpoint opens I should read all the files into the array and then shuffle them. So that every day if new photos are added to the folder they are included and each day is a whole new random. How would I display the new list (once shuffled) from different slides? I know I can run something on each slide separately but your saying I should be able to call a variable or the next image from another script? Just trying to get my logic working. Looking into reading how to add my files to an array atm. Thanks 
Here's a nice list of categorized project ideas http://www.dreamincode.net/forums/topic/78802-martyr2s-mega-project-ideas-list/
I haven't worked with VBA in PowerPoint, but I do it a lot with Excel. You need to make sure the list is "global" to all the slides. Then create a function "Public Function GetNextFilename() As String" which will increment the array pointer and return the next name. All slides should call that same function; there should be only one array for the whole deck.
http://msdn.microsoft.com/en-us/library/cakac7e6.aspx This would probably be a very helpful link for you, assuming that TextFieldParser works for VBS. I don't know if it does however.
 Dim i, Total, Under As Integer Dim Avg As Double For i = 0 To ListBox.Items.Count - 1 Total += Integer.Parse(ListBox.Items(i).ToString) Next Avg = Total / ListBox.Items.Count For i = 0 To ListBox.Items.Count - 1 If Integer.Parse(ListBox.Items(i).ToString) &lt; Avg Then Under += 1 End If Next MsgBox(Under) ... Well, you didn't say the *best* way, but this is *a* way.
Cheers
Using LINQ Dim lst = ListBox1.Items.Cast(Of Integer).ToList Dim avg = lst.Average Dim cnt = lst.Where(Function(x) x &lt; avg).Count 
You can also reference System.Configuration and then import it and use something like the following: Dim testURL as String = ConfigurationManager.AppSettings.Get("testURL") This will make sure of the app.config file located in the project. Inside of your app.config file you would have: &lt;appSettings&gt; &lt;key name="testURL" value="http://google.com" /&gt; &lt;/appSettings&gt;
Perfection haha, thanks heaps that works well.
The problem is there are about 1200 accounts, and about 5 excel imports each day. Also the filed J columb for "--" and then delete the rest and output that file is only one of 4 filters I want done, I want three other filters applied. I've scrapped what I had there and decided to re-do it all using record macro.. so now when I open the excel file I search for the macro, run it, and it spits out everything I want. Is there a way I can take this macro and make it run in Access instead and have you select the excel file you want this macro to run on?
What would you suggest as the best way to get a .csv and an .xml to "talk" to each other? I'm sorry, I'm sure that's just the worse way to explain it! I have a .csv and an .xml and they both have the same data, well I hope they're the same and that's the goal--I need to get them in one place so I can compare them line by line with filters and true/false comparisons. 
Yeah, I think I'm hitting a wall with the program that I'm getting my .xml export from. It's still in beta so it won't magically open in excel every time until we get the bugs worked out. Regardless, I can get a test .xml but getting the two files in excel with columns next to each other so I can make sure the data in the .csv matches the data in the .xml is beyond me. Like this: csv DATE = xml DATE? T/F csv STARTTIME = xml STARTTIME? T/F And so on
You have to add the parameter to both the original declaration, and the call to it via AddressOf, but you can do it. ... Showing some code might help. 
How about a small "shoot the ball into the hoop" game? Similar to those simple basketball games on phones. A sideway 2D view... You should get to exercise every aspect of what you've seen. [Something like this.](http://www.learn4good.com/games/sports/basketball-shootinghoops.htm)
why not just write a test program that compares the data?
not sure about in Access, but maybe you can loop the forms collections and compare the names?
You can write excel 2007 files with EPPlus. It's fairly simple. 
This is for VB6, but Access should be similar (not sure about the Forms object...) Private Sub OpenFormByName(FormName As String) Dim frm As Form ' Check if form is already opened; if so, show it. For Each frm In Forms If UCase$(frm.Name) = UCase$(FormName) Then frm.Show Exit Sub End If Next ' Open form using passed name On Error Resume Next ' Next line errors if name is unknown Set frm = Forms.Add(FormName) If Err.Number &gt; 0 Then MsgBox ("No such form"): Exit Sub frm.Show End Sub 
 ...,picturebox as String) This needs to be "as PictureBox)" 
Oh. Will try.
Thank you so much! I did not know you could simply do that! That will improve a lot of my code. :)
Even with those options enabled (which they should always be really), you still get: "'Image' is not a member of 'String'." Also: Application.ExitThread() Likely isn't needed, instead just: Exit Sub Which also isn't needed since the Sub will 'End' anyways because that's the last check/code in the Sub. If you are doing multi-threading, you wouldn't want to load PictureBox.Image from another thread anyways, you'd load the image from the new thread, then use that image in the calling/parent thread to assign PictureBox.Image = Image.
 DirectCast(value,type) Is more efficient than CType(value, type) especially since you know what type it is already, it skips a bunch of unnecessary error checking (testing if it's an integer, string, control, etc), probably very little difference here, huge difference if you are doing it for several items, or in a loop.
It threw an error, but no the one you said. Huh... [](/derpflip "Computers are hard.")
In the IDE
Could you help me fix this error? [Link](http://i.imgur.com/adsURB6.png)
Here is all the related code. The second part is part of a bigger form. http://pastebin.com/2dYwgxck Edit: Ignore the comment. :P Edit 2: Fixed it by changing a lot of stuff around. If anyone wants me to post the fix let me know.
That error basically means that Setting(MOUSE1STOCK) isn't a numeric value, so can't have math done on it. Since I can't see My.Settings, I don't have much more to go on. Like I said, don't count on the settings to be of a particular type. When the program starts, you need to pull the values from settings, into a set of variables, and then pass those variables to the routine. If you want to save the changes to settings at the end of the program running, then you can push the changes into settings at that point. 
The problem I see is that you're getting a new input ID before you write the current input ID to the textbox so you need to put txtTotalSales.Text = txtTotalSales.Text &amp; strInputID &amp; " " &amp; decSalesPersonTotal before strInputID = InputBox(strIDPROMPT, strIDTITLE) Secondly. You will want to change the " " to vbTab so it puts a tab separator there instead of spaces, if someone has a longer name it'll mess up the formatting. You'll want to add start writing on a new line after each person so you'll need to add a new line character at the end of the line. You can use vbNewLine or vbCrLf it's up to you. Lastly you're going to need a totalSales variable to store the running total of sales in so you can display it at the end. You can format it in currency(displays dollar sign and adds digit grouping and 2 decimals) by adding ".ToString("C")" more on that [here](http://msdn.microsoft.com/en-us/library/dwhawy9k%28v=vs.110%29.aspx). You'll want to put that outside of all of the do loops since that's the last thing you want entered in the textbox.
I fixed it with some messing of the code. Thanks for the explanation, I just assumed it would not work and tried something else. Can post solution if that is wanted.
**Solution:** Updated method: Public Function buytick(setting As String, label As Label, moneytoadd As Integer) If setting &gt; 0 Then setting = setting - 1 My.Settings.Money = My.Settings.Money + moneytoadd label.Text = setting.ToString End If Return setting End Function Updated method usage: My.Settings.PC1STOCK = ticks.buytick(My.Settings.PC1STOCK, Label3, 475) My.Settings.PC2STOCK = ticks.buytick(My.Settings.PC2STOCK, Label12, 600) My.Settings.FANCYPC1STOCK = ticks.buytick(My.Settings.FANCYPC1STOCK, Label9, 950) My.Settings.FANCYPC2STOCK = ticks.buytick(My.Settings.FANCYPC2STOCK, Label10, 1300) My.Settings.LAPTOP1STOCK = ticks.buytick(My.Settings.LAPTOP1STOCK, Label11, 600) My.Settings.MOUSE1STOCK = ticks.buytick(My.Settings.MOUSE1STOCK, Label5, 10) My.Settings.MOUSE2STOCK = ticks.buytick(My.Settings.MOUSE2STOCK, Label6, 15) My.Settings.MOUSE3STOCK = ticks.buytick(My.Settings.MOUSE3STOCK, Label7, 20) My.Settings.ROUTER1STOCK = ticks.buytick(My.Settings.ROUTER1STOCK, Label8, 250)
Here: http://www.reddit.com/r/visualbasic/comments/22sq7g/help_with_loading_pictureboxes/cgqpl5v
I don't see anything wrong with the first example unless you somehow have foo defined in more than once place and it is an issue with scope. This works fine: Dim foo As New List(Of PictureBox) From {PictureBox1, PictureBox2, PictureBox3} Dim img = Image.FromFile(Application.StartupPath &amp; "\picture.jpg") foo(0).Image = img 
Thanks, it does work fine after all. The issue was having the constructor outside of Form_Load. It was trying to add the PictureBoxes before they were even created, which meant the values were Nothing instead.
Why are you saving the telephone number as an integer and not a string? Same with zip code. Unless you're going to be doing math with them there's no need for it to be an integer. At the end of your txtfile.writeline tower you need to add a txtfile.close so it ends the stream and write to the file. If you don't do that then it won't actually write anything to the file. Additionally if the file already exists the line: txtfile = File.CreateText("Records.txt") will overwrite the file that's already there and erase what's in there. You should check to make sure the file already exists before creating a new one.
I messed up and made my settings strings instead of integers. Oops. I will fix all that.
Nice that game sound easy enough for me to start it off and complex enough to force me to problem solve. May even give me a chance to flex my creative muscles.
Yeah good way to see what future clients may want, thanks.
I think making something to easily catalog my stuff will encourage my hording problem hahahahaha
I'll agree, and say it for the third time: Option strict on, option infer off, option explicit on. Why MS didn't make them this way by default is beyond me. These things will make your life 1000 times easier, as the IDE will flag mistakes like this, and offer suggestions for correcting them. They will also stop random bugs later when someone accidentally changes something. 
Yep, sounds easy enough, but will take a lifetime ;)
Great, it's a basic skill that will serve you well :-)
You just need to add .ToString to (StartTime - EndTime) or ElapsedTime (StartTime - EndTime).ToString OR ElapsedTime.ToString What you're trying to do is set a complex object to a text filed, you need to tell it what you want there. I suggest you reverse it though because EndTime will always be larger than StartTime so it will always be a negative number. You should change it to EndTime - StartTime or math.abs(StartTime - EndTime) so that it returns a positive time.
Thanks I will try this
Have you tried [this](http://social.msdn.microsoft.com/Forums/en-US/1d5c04c7-157f-4955-a14b-41d912d50a64/how-to-fix-error-the-microsoftaceoledb120-provider-is-not-registered-on-the-local-machine?forum=vstsdb)? ___ NOTE: i have found hundreds of threads on this error, yet they all seem to suggest using the 'Microsoft access database engine'. however for whatever reason (even though its made for 64-bit office) this did not work on my machine so i was forced to find an alternate method. this resolution works with: 64-bit Windows 7 64-bit MS Office Trying to connect to an Access database in visual studio but keep getting this error? try installing this first: http://www.microsoft.com/download/en/details.aspx?id=13255 However if, like me, that doesnt work for you, try the following method: NOTE: this DOES work for office 2010 even though it is for 2007 office, dont ask me why it just does :) 1. Download and install this: http://www.microsoft.com/download/en/confirmation.aspx?id=23734 2. In VS click add data source, follow the wizard and enjoy! :) P.S thanks to everyone that helped me at my original thread: http://social.msdn.microsoft.com/Forums/en-US/csharpgeneral/thread/ebb05600-055a-44c4-8cd3-d33a79878b23 I did give up and tried storing to text files, but oh my god was that a bad choice! So I came back to trying to resolve this and managed to after HOURS AND HOURS of searching. This thread is for all of those people being given a hard time connecting to Access databases!
I had not, thanks :)
1. Get Input box with name or tag = "MAC" 2. Set it's value to your mac address 3. Call the Button with name/tag of "submit_btn" onclick Event. Then 1. Get the Body 2. Get the first Table 3. Get the Rows 4. Get the 3rd Row 5. Get the 3 cells This could be done fairly trivially using a JS script, but having no idea what HTML Agility Pack does/can do... or why you are using VB... don't really know how to explain it in code.
I am using VB because I like VB, and using Javascript makes no sense given the context of a desktop application.
I forget how I got the cookie but this works Dim URL As String = "https://apps.nwtel.ca/cable_usage/?j_security_checkj_target_url=secured%2Findex.jsp&amp;MAC=a47aa4782daa&amp;j_username=A47AA4782DAA&amp;j_password=123456&amp;submit_btn=Submit" Dim Source As String Dim web As New WebClient() web.Headers.Add("Referer", "https://apps.nwtel.ca/cable_usage/login.jsp") web.Headers.Add("Cookie", "JSESSIONID=92C5204733D64C20EDC3E23E0A5CAFFA") Source = web.DownloadString(URL) Source will contain all the data on the page http://i.imgur.com/7ynT1Ie.png I can't for the life of me figure out how I got the cookie ID to work.
They store it in a COOKIE? WTF batman? thanks that was the part I was missing for the life of me I could not see where it was going. 
Unfortunately they don't store it in a cookie. That's just a session ID that you need in order to send a POST of the top URL. If you can figure out how to get and save a session cookie and put it there, then it'd work great. I got that cookie by taking it from my firefox cookies. Nothing I try in code works. I've even tried loading the login.jsp and using THAT cookie which I can get but it doesn't work and I don't know why.
You would THINK this would work... http://pastebin.com/CS6vyR4G It gets a session ID but for some reason it won't accept it. If I take the session ID from firefox and shove it in there as plain text it works just fine though... I don't get it. I thought this would be easy because I make web scrapers and use this all the time but...I have no idea.
So when you got to the main page and enter your mac they append it to the session id and it has to be valid before they will return results. This must have something to do with security for them. This also explains why I have to logout and log back in after waiting, not just refresh the page. So in theory if I can get the session from the httpwebrequest I can add it to the header. Is the referring page important as well?
I'm not familiar with database integration, but I don't think &gt;d1 = dtpCheckIn.Text or &gt; ds.Tables("qCustomerBooking").Rows(a).Item("Check_In") &gt;= d1 is correct. First of all, the variable d1 isn't declared with a Dim. Secondly, you should type d1 as a DateTime object instead of leaving it untyped. Leaving it untyped will cause it to revert into a string, and when you compare two strings with each other, you're basically just comparing their ASCII values: which is completely not what you're interested in. You'll need to figure out a way to convert both the input from dtpCheckIn and the output from your database into a DateTime format. The former shouldn't be too difficult with the DateTimePicker control, but the second may be tricky; I can't help you with that part because, like I said, I know nothing about databases. Good luck!
Which decompiler did you put it through? [This](http://stackoverflow.com/questions/179741/how-do-i-decompile-a-net-exe-into-readable-c-sharp-source-code) stackoverflow thread has a number of different decompilers. It's a C#-specific thread, but most of those should work for VB too. [This](http://social.msdn.microsoft.com/Forums/vstudio/en-US/4fbbe388-4418-42a2-b723-915b8ca4c458/vb-net-decompiler?forum=netfxbcl) MSDN thread also has some ideas.
Hey, I used Keys.* because whenever i use e.KeyCode.. It comes up with 'KeyCode' is not a member of 'System.Windows.Forms.KeysEventArgs' .. 
e.KeyCode is for Down/Up... KeyPress has e.KeyChar which is the text/char of the key event, not the key being pressed. Down/Up is based on 101+ Keyboards, and gets the key... KeyPress is based on languages/culture and gets stuff like ÙÞĄû which aren't accessible through the standard key-mapping.
I'm not sure exactly what you are looking for but here is my guess. I think what you are looking to use are session variables. On your main page you store your data in a Session variable then on the next page you retrieve that session variable and continue to use the same data you had on the previous page. http://www.w3schools.com/asp/asp_sessions.asp Sorry if I missed your question entirely :(
Try iLspy http://ilspy.net/
Ah okay, thanks for your help! I'll have to try and figure that out. Btw, I did declare the variables, just forgot to include it in the post: Imports System.Data.OleDb Public Class frmBooking Dim maxrows As Integer Dim incdec As Integer Dim con As New OleDbConnection Dim dt As New DataTable Dim dt2 As New DataTable Dim dt3 As New DataTable Dim ds As New DataSet Dim da As New OleDbDataAdapter Dim sql As String Dim d1, d2 As DateTime
I really appreciate that, thank you! I'll try that tonight.
you need to break it out into lines and add each line separately.
it would be better to keep an array of the data so that you don't have to attempt to parse out the listbox text. also, a grid might be more appropriate than a listbox.
 strMeatball = "Name: " &amp; txtN4me.Text &amp; " Total:" &amp; Sum.ToString ListBox1.Items.Add(strMeatball) ... For vSpag As Integer = 0 To ListBox1.Items.Count - 1 If lbListBox1.Items(vSpag) &lt; vBeast Then vBeast = lbListBox1.Items(vSpag) End If Next MessageBox.Show(vBeast) You can do it this way, it's messy, but it works... For i As Integer = 0 To ListBox1.Items.Count - 1 If Integer.Parse(ListBox1.Items(i).ToString.Split("Total:")(1)) &lt; vBeast Then vBeast = ... End if Next
what do you mean crashes? what's the error message?
Yes, would like to know the error. I don't see what would cause the error to occur unless you left the car price textbox empty. Also, don't see where you set carpricedecimal = to anything after initializing it. Did you confuse that with salesprice where you set it = to carpricetextbox.text? Not sure why you have a subtotal and a subtotaldecimal variable but you use subtotaldecimal throughout the code and then you use subtotal in totaldecimal which would still = 0 
I think I got confused with the salesprice.
.NET is a framework and supports several different languages. for the most part it's the same across the languages, aside from each language's intrinsic differences. VB is used, but C# is used more. you should take a few different language classes, even without .net, and once 3 or 4 are understood then learning a new language on your own will be more or less trivial. the real world will use logic and algorithms and workflows, and you'll have manuals and search engines. the language itself is less important.
look above, I posted the code that gives me trouble. also for some reason VB also throws this out. http://i.imgur.com/M03e6dc.png when I try to run the program.
Your BtnAdd... doesn't compute. End If? What If?... No End Sub? Private Sub btnAdd_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) _ Handles btnAdd.Click lbListBox1.Items.Add("Name: " &amp; txtName.Text &amp; " Total:" &amp; Sum().ToString) End Sub You need to parse stuff out: String = String ' Good Integer = Integer ' Good String = Integer 'Bad This won't work in your case, but you need to convert your numbers to strings, and vice-verse... such as: vStore = Double.Parse(lbListBox1.Items(vIndex)) Which is the best way, or: vStore = CDbl(lbListBox1.Items(vIndex)) If You're not entirely sure about what it is, but all you know is it's a number... or you can do: Double.TryParse(lbListBox1.Items(vIndex), vStore) Which if valid, will make *vStore* equal to the Double, if it fails, it will make *vStore* equal to 0 In your case, you need to split your string out like I said in your previous post. Dim TempVal As Double = Double.Parse(lbListBox1.Items(vIndex).ToString.Split("Total:")(1)) If TempVal &lt; vStore Then vStore = TempVal End If Using String.Split("Total:") Will give you an array with a length of 2 Dim Splt As String() = lbListBox1.Items(vIndex).ToString.Split("Total:") For i As Integer = 0 To Splt.Length - 1 MsgBox("'" &amp; Splt(i) &amp; "'") Next Which will show: [ 'Name: SomeName ' ] [ '0.0' ]
Let's say the room is free until the end of year. Someone books December 1st to 31st. Your method prevents anyone else from booking a month previous to December.
the 2nd error can occur if you've inadvertantly hit enter on something like TextBox1.Text = "hello" where hitting enter split the like to TextBox1 .Text = "hello" Just double-click on that error (leading '.'...) and it should take you to the line in question. Also, you apparently made the 1st error occur by getting rid salesprice variable and it's still trying to use it further in your code. Again, double click on the error and change salesprice to carpricedecimal that should fix those two. But most importantly of all: If you make changes to the original code and receive errors, please post the relevant code. As /u/chrwei was only looking at what you originally posted and could not determine where these errors could occur in your code. Remember, we're not sitting over your shoulder looking at what you're looking at, so the more information you can give us, the better we are at being able to help. 
 Select RoomID From tblBookings Where @CheckInDate &lt;= Check_Out And @CheckOutDate &gt;= Check_In ...will give you the rooms where existing bookings overlap with a new one.
Ah, yep, you are correct :( SELECT RoomID FROM tblBookings WHERE CheckIN BETWEEN @checkindate and @checkoutdate But I would still have to play around with this as default times may come into play and may not be inclusive EDIT: You would also have to check to ensure that Checkout doesn't fall within those two dates so that you don't book someone INTO another booking. :/ 
Sorry I'm not familiar with parse however I am familiar with tryparse. I lost you at the dim stages. I'll stare at it for 10 minutes hopefully I understand it :P Also I didn't know that this was required. Double.TryParse(lbListBox1.Items(vIndex), vStore) do you mind explaining why this is necessary? 
You have to check the CheckOutDate too. In our previous example, if someone wants to book 15 Nov to 15 Dec, you check will claim it's ok (since the CheckIn is not between 1st-31st Dec), but the check out overlaps the previous booking. EDIT: Didn't see you edit before replying... ignore this :)
It's not necessary, it's an option. Output = CDbl(Input) Output = Double.Parse(Input) Double.TryParse(Input,Output) 3 ways of doing the same thing, each with advantages. There's also: Output = CType(Input,Double) And Output = DirectCast(Input,Double)
Dim TempVal As Double = Double.Parse(lbListBox1.Items(vIndex).ToString.Split("Total:")(1)) If TempVal &lt; vStore Then vStore = TempVal End If Dim Splt As String() = lbListBox1.Items(vIndex).ToString.Split("Total:") For i As Integer = 0 To Splt.Length - 1 MsgBox("'" &amp; Splt(i) &amp; "'") are both of these required for it to be running is there any other ways?
Thank you for your response, clearly because I only understand a few things you said, I need more experience. Looks like I have a fun summer ahead of me trying to become familiar with this large list of scary ahead of me. Good bye videogame veg fest plans.
One problem I see is you have 8 parameters in String.Format but only 5 in myformat so you're not getting the last 3 at all. I put it together and with this With AJob .Nameofjob = "Name" .Day = 15 .Month = 4 .Year = 2014 .Hour = 3 .Minute = 49 .Location = "USA" .Description = "Long description of job" End With got this Name 15 4 2014 3 With AJob in the EnterNewJob you have Dim Location As Integer Dim Description As Integer Which need to be changed to strings, you can't have location of "USA" saved as an integer, same with description. I'll update this as I go along. Also, you could just create a Job class an add in set parameters and then you wouldn't need to duplicate that code.
You declared your array to be of size 5, 3. You have six rows and four columns.
please indent the code by 4 spaces when pasting in, or use a pastebin site. I can't tell what line 53 is.
VB.Net?... if so then as long as it's strictly VB, no imports, no databases, etc... I'll give it a shot for free, as long as it's not for school/class.
Here is my meager attempt at reformatting: Private Type Stock Discription As String * 30 Barcode As String * 12 Price As Currency QuantityRestriction As Integer AgeRestriction As Integer ReOrderThreshold As Integer OnHand As Integer Active As Boolean End Type Dim pointer_top As Integer Dim pointer_search As Integer Dim ChanNum As Integer Dim pointer_current As Integer Dim StockFile(1 To 100) As Stock Dim StockInfo As Stock Private Sub cmdAddNewItem_Click() Dim response As Boolean response = False ChanNum = FreeFile() Open "I:\Project\Supermarket Main Databse\Stock\Database.dat" For Random As ChanNum Len = Len(StockInfo) pointer_search = 1 Do If txtNewItemDescription = StockFile(pointer_search).Discription Then response = MsgBox("Item already exists, do you want to replace it? ", vbYesNo) If response = yes Then Call add_item_to_stock() pointer_search = pointer_top End If Else Call add_item_to_stock() End If Loop Until pointer_search = pointer_top Close(ChanNum) End Sub Private Sub add_item_to_stock() Print(pointer_current) ChanNum = FreeFile() Open "I:\Project\Supermarket Main Databse\Stock\Database.dat" 'Takes Data from text boxes and inputs it into the record For Random As ChanNum Len = Len(StockInfo) StockInfo.Discription = txtNewItemDescription StockInfo.Barcode = txtNewItemBarcode StockInfo.Price = txtNewItemPrice StockInfo.QuantityRestriction = txtNewItemQuantityRestriction StockInfo.AgeRestriction = txtNewItemAgeRestriction StockInfo.ReOrderThreshold = txtNewItemReorderThesh StockInfo.OnHand = txtNewItemOnHand If txtNewStockActice.Text = "Yes" Then StockInfo.Active = True ElseIf txtNewStockActice.Text = "No" Then StockInfo.Active = False End If Dim StockFile(1 To 100) As Stock Put #ChanNum, pointer_top, StockInfo StockFile(pointer_top) = StockInfo 'Blanks after the addition it is made txtNewItemBarcode = "" txtNewItemDescription = "" txtNewItemPrice = "" txtNewItemQuantRestriction = "" txtNewItemAgeRestriction = "" txtNewItemReorderThesh = "" txtNewItemOnHand = "" txtNewStockActice = "" pointer_top = pointer_top + 1 txtCurrentRecord = pointer_current 'Displaying most recenty input item DescDisp.Text = StockFile(pointer_current).Discription barcodeDisplay = StockFile(pointer_current).Barcode PriceDisplay = StockFile(pointer_current).Price QuantityRestrictionDisp.Text = StockFile(pointer_current).QuantityRestriction AgeRestrictionDisplay = StockFile(pointer_current).AgeRestriction ReOrderTheshView = StockFile(pointer_current).ReOrderThreshold OnHandDisplay = StockFile(pointer_current).OnHand If StockFile(pointer_current).Active = True Then ActiveDisplay = "Yes" ElseIf StockFile(pointer_current).Active = False Then ActiveDisplay = "No" End If pointer_current = pointer_current + 1 MsgBox("Item has been added to stock") Close(ChanNum) End Sub Private Sub cmdAdminBack_Click() frmAdminAddItem.Hide() AdminHome.Show() frmAdminAddItem.WindowState = 2 End Sub Private Sub Form_Load() pointer_top = 1 pointer_current = 1 End Sub Private Sub cmdNext_Click() pointer_current = pointer_current + 1 txtRecordNumber = pointer_current If pointer_current = pointer_top Then MsgBox("You've gone too far!") Else DescDisp = Trim(StockFile(pointer_current).Discription) barcodeDisplay = Trim(StockFile(pointer_current).Barcode) QuantityRestrictionDisp = Trim(StockFile(pointer_current).QuantityRestriction) AgeRestrictionDisplay = Trim(StockFile(pointer_current).AgeRestriction) ReOrderTheshView = Trim(StockFile(pointer_current).ReOrderThreshold) OnHandDisplay = Trim(StockFile(pointer_current).OnHand) End If End Sub #--- From what I can figure out, the problem is likely that **Currency** isn't a valid type (it's been almost 2 decades since I used VB5/6)... hence the type mis-match. ie: Line 4 Price As Currency Edit: &gt; Currency &gt; Currency is a 64-bit integer divided by 10000. It is only available in VB6/VBA. In VB.NET one can replace it with Decimal, which provides more capability. Maybe you have to convert it more directly? from String to *Currency* StockInfo.Price = CCur(txtNewItemPrice) Since Double/Single/Float/Currency is different from Integer/Short/Byte/etc Likewise, if: txtNewItemPrice = "$100.00" Then that might cause problems too, strip out non-numeric values first.
You should change For r = 0 To n ary = data(r).Split(","c) For c = 0 To n x(r, c) = (ary(c)) Next Next to For r = 0 To data.GetUpperBound(0) ary = data(r).Split(","c) For c = 0 To data.GetUpperBound(1) x(r, c) = (ary(c)) Next Next It keeps going out of bounds because you're trying to access 0,4 and the array only goes to x,3 so when you go to 4 it goes out of bounds. 
Its the last part that's causing the problem. n = the length of the file the second For loop should use **ary**'s UpperBound not **n** Considering this is .Net you shouldn't be using UpperBound anyways really. use .Count (lists) or .Length (arrays) For r = 0 To data.Length - 1 ary = data(r).Split(CChar(",")) For c = 0 To ary.Length - 1 x(r, c) = ary(c) Next Next You should also be testing to make sure data.length is &lt;= to your x() size... otherwise you might get overruns there too.
http://www.red-gate.com/dynamic/products/dotnet-development/reflector/download This is reflector being run on an project I made. http://i.imgur.com/M7KeI70.png ___ This is the source code http://i.imgur.com/an2nzNK.png I imported the needed items and copied the main functions and added appropriate handles to them and the program worked as intended, the code looks like shit and can be cleaned up fairly easily, but it works. ___ **UPDATE** I created a new project, copy and pasted the whole shit from my project and the program works flawlessly. I just created a class with the same form name and it worked. The only problem I have right now is that I can't actually see my form because it's created from the code. I'm sure if I were to delete the form creation code I could create my own as long as I use the same names. http://i.imgur.com/iZvjeKW.png If you want to see. You can create a new solution and delete the main form, create a new empty class with the name Form1 and replace ALL of the code with this http://pastebin.com/bbTqH2XA ___ It'll run but you can't edit the form. It'll take some work but you can remake the form and copy out the functions one by one and clean them up.
Have a look at the [HTMLDocument](http://msdn.microsoft.com/en-us/library/system.windows.forms.htmldocument.aspx) class. It will make generating your HTML page much easier.
Try specifying the path to ErrorLog.txt fully. It might be writing to a file located somewhere else than the one you are looking at. (Changing from debug/release, for example, will place your .exe in different folders). 
is this VB.Net?
I would do this but he wants us to do a writeline for each html line. It's quite annoying but it's his way or the highway.
I have this so far: Do While addMovie.Count &gt; 0 sw.WriteLine("&lt;ul&gt;&lt;li&gt;addMovie.pop&lt;/li&gt;&lt;/ul&gt;") loop This isn't working but I feel I am getting close. I know that I can't pop it in the middle of the write line statement (it's in quotes so doesn't recognize it as vb code) but I am not sure where else to put it in order for it to pop the whole stack as a bulleted list. EDIT: addMovie is my Stack, and sw is my variable for the stream writer.
Split it... sw.WriteLine("&lt;ul&gt;&lt;li&gt;" &amp; addMovie.pop &amp; "&lt;/li&gt;&lt;/ul&gt;") or depending on what type it is: sw.WriteLine("&lt;ul&gt;&lt;li&gt;" &amp; addMovie.pop().ToString &amp; "&lt;/li&gt;&lt;/ul&gt;") 
Brain farts happen to the best of us...lol
Solution: You just need to close the stream. At the end of the function you need to add AppLogStreamWriter.Close() With streamwriter though you need to make sure the file doesn't already exist or it'll overwrite it. An easier solution might be presented below where you don't need to check if it already exists or not, it handles that for you. Specifying only "ErrorLog.txt" with no path will write it to the application default startup path if that's of any concern. ___ Or you could use My.Computer.Filesystem.WriteAllText(logfilename,Format(Now, "MM/dd/yyyy h:mm:ss tt") &amp; vbTab &amp; Exception.Source.ToString &amp; vbTab &amp; Exception.TargetSite.ToString &amp; Exception.Message.ToString &amp; vbCrLf,True) I'm not sure if that method is frowned upon but that's how I've always written and read from a file on my computer. I never use streamwriters, it always just seems like unnecessary code.
Good catch. I usually do this: Using sw As New IO.StreamWriter(FileName, False) sw.Write(str) End Using ...which closes the stream at "End Using". 
What's the false part of the steam writer syntax? Does that end the using block of the file isn't found?
Absolutely - you just have to ensure that no forms get displayed! I have an app which has a 'user mode' - user interacts and clicks buttons on couple of forms to perform a particular workflow. I have a non-interactive mode where I fire it up every five minutes and it does the same thing. 
Change: Dim Prices(2) as integer = {x,x,x} to: dim Prices() as integer = {x,x,x} You can't declare it as three elements, and initialize them, you have to do one or the other. So using the "= {x,x,x}" portion will create as many elements as you put in the braces.
Alternatively you could leave the declaration and assign each element manually, if you really wanted to. dim Prices() as integer Prices(0) = x Prices(1)= x Prices(2)= x 
The "false" is for the "append" parameter. By default, the streamwriter will append to an existing file; with false, it writes the file from the start. "Using...End Using" is not affected by any parameters. It simply ensures that the .Dispose method is called when whatever you're using goes out of scope. In this case here, it will call .Dispose on the streamwriter, which will close it.
Wouldn't that throw a null reference exception since the array was not declared with a size?
Thanks JakDrako, I've tried that but I'm not using the Where statement correctly, any idea how I should be writing this? Private Sub Checkdates() con.ConnectionString = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=..\Bed and Breakfast.mdb;" con.Open() Dim da2 As New OleDbDataAdapter("select * from qCustomerBooking", con) da2.Fill(dt2) Dim da3 As New OleDbDataAdapter("select * from qCustomerBooking", con) da3.Fill(ds, "qCustomerBooking") con.Close() Dim a As Integer Dim duplicate As Boolean maxrows = ds.Tables("qCustomerBooking").Rows.Count incdec = -1 Dim CheckInDate, CheckOutDate As DateTime CheckInDate = dtpCheckIn.Text CheckOutDate = dtpCheckOut.Text For Each objcontrol As Control In Me.Controls If objcontrol.GetType().Name = "RadioButton" Then 'If the object is a button then it is checked through this process Dim objRadioButton As RadioButton objRadioButton = objcontrol End If Select Case ds.Tables("qCustomerBooking").Rows(a).Item("Room_ID") Where ds.Tables("qCustomerBooking").Rows(a).Item("Check_In") And ds.Tables("qCustomerBooking").Rows(a).Item("Check_Out") &gt;= CheckInDate Case objRadioButton.Enabled = False End Select Next End Sub
Or an out of bounds exception, but yes. However, it's a typo, as the poster was trying to show a sample of leaving the length declaration intact.
look into form.cursor It allows you to change the cursor for the form. form.Cursor = new Cursor(path) will load it from a path, but you should probably embed it in a resource (there are some overloads in there for doing it differently). 
is that a .net feature vb6 sure doesn't have that problem.
If it's homework I'll do it by using techniques you won't be able to explain to your instructor
The command he gave is SQL code, you must run that in your adapter command string. Using Where in VB.net code allows you to write a lambda expression. Dim da3 as new OleDbDataAdapter("select * from qCustomerBooking Where @CheckInDate &lt;= Check_Out And @CheckOutDate &gt;= Check_In", con) Then add the parameters... da3.Parameters.Add("@CheckInDate", OleDbType.DateTime).Value = ADateTime da3.Parameters.Add("@CheckOutDate", OleDbType.DateTime).Value = ADateTime I haven't had a chance to test run this but it should hopefully work. 
A huge thank you to you, that makes a lot more sense haha. So I've added in what you said and adjusted the code again which gives me: Private Sub Checkdates() Dim CheckInDate, CheckOutDate As DateTime CheckInDate = dtpCheckIn.Text CheckOutDate = dtpCheckOut.Text con.ConnectionString = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=..\North Star Lodge.mdb;" con.Open() Dim da2 As New OleDbDataAdapter("select * from qCustomerBooking", con) da2.Fill(dt2) Dim da3 As New OleDbDataAdapter("select * from qCustomerBooking Where @CheckInDate &lt;= Check_Out And @CheckOutDate &gt;= Check_In", con) da3.Parameters.Add("@CheckInDate", OleDbType.DateTime).Value = DateTime da3.Parameters.Add("@CheckOutDate", OleDbType.DateTime).Value = DateTime da3.Fill(ds, "Checkingdates") con.Close() Dim a As Integer Dim duplicate As Boolean maxrows = ds.Tables("Checkingdates").Rows.Count incdec = -1 For Each objcontrol As Control In Me.Controls If objcontrol.GetType().Name = "RadioButton" Then 'If the object is a button then it is checked through this process Dim objRadioButton As RadioButton objRadioButton = objcontrol For a = 0 To maxrows - 1 If ds.Tables("Checkingdates").Rows(a).Item("Room_ID") = objRadioButton.Text Then objRadioButton.Enabled = False Else : duplicate = False End If Next End If Next End Sub However the: da3.Parameters.Add("@CheckInDate", OleDbType.DateTime).Value = DateTime da3.Parameters.Add("@CheckOutDate", OleDbType.DateTime).Value = DateTime is giving me the following errors: [Imgur](http://i.imgur.com/NsDpX2g.png)
Thanks exaem, I found that the correct OleDBType is .Date, however I have an issue with the Dim adapter as new OleDbDataAdapter (cmd, con) line: Error 1 Overload resolution failed because no accessible 'New' can be called with these arguments: 'Public Sub New(selectCommandText As String, selectConnection As System.Data.OleDb.OleDbConnection)': Value of type 'System.Data.OleDb.OleDbCommand' cannot be converted to 'String'. 'Public Sub New(selectCommandText As String, selectConnectionString As String)': Value of type 'System.Data.OleDb.OleDbCommand' cannot be converted to 'String'. 'Public Sub New(selectCommandText As String, selectConnectionString As String)': Value of type 'System.Data.OleDb.OleDbConnection' cannot be converted to 'String'. Not really sure what its trying to tell me? Is it saying that the Date cannot be converted into a String? How could I resolve this? 
what about: Sub InitializesList(byVal Prices as List) for each i as Integer in Prices prices(i) = GetInitializeVal() Next val Sub Function GetInitializeVal() ' Get initial values from some data source End Function
I tried your suggestion but I keep getting "value of type string cannot be converted to "1-dimensional array of string"" for the students(i) part. Any suggestions for that? Thanks for your reply anyhow :)
Where would I put that 'With' statement in my code?
Nowhere, I was just adding values to the job so I wouldn't have to build a form. I think it looks nicer but it does the same thing. If you wanted to put it in there you could replace this Private Sub btnDone_Click(sender As Object, e As EventArgs) Handles btnDone.Click Dim AJob As Job AJob.Nameofjob = txtNameofjob.Text AJob.Day = cmbDay.Text AJob.Month = cmbMonth.Text AJob.Year = cmbYear.Text AJob.Hour = cmbHour.Text AJob.Minute = cmbMinute.Text AJob.Location = txtLocation.Text AJob.Description = txtDescription.Text FilePut(1, AJob) FileClose(1) txtNameofjob.Text = "" cmbDay.Text = "" cmbMonth.Text = "" cmbYear.Text = "" cmbHour.Text = "" cmbMinute.Text = "" txtLocation.Text = "" txtDescription.Text = "" End Sub With : Private Sub btnDone_Click(sender As Object, e As EventArgs) Handles btnDone.Click Dim AJob As Job With AJob .Nameofjob = txtNameofjob.Text .Day = cmbDay.Text .Month = cmbMonth.Text .Year = cmbYear.Text .Hour = cmbHour.Text .Minute = cmbMinute.Text .Location = txtLocation.Text .Description = txtDescription.Text End With FilePut(1, AJob) FileClose(1) txtNameofjob.Text = "" cmbDay.Text = "" cmbMonth.Text = "" cmbYear.Text = "" cmbHour.Text = "" cmbMinute.Text = "" txtLocation.Text = "" txtDescription.Text = "" End Sub I would also recommend you put the text="" in a function so you don't duplicate the code and everywhere where you wanted to clear textboxes, I see 2 places you'd only need to put the function there. Private Sub ClearText() txtNameofjob.Text = "" cmbDay.Text = "" cmbMonth.Text = "" cmbYear.Text = "" cmbHour.Text = "" cmbMinute.Text = "" txtLocation.Text = "" txtDescription.Text = "" End Sub Private Sub btnDone_Click(sender As Object, e As EventArgs) Handles btnDone.Click Dim AJob As Job With AJob .Nameofjob = txtNameofjob.Text .Day = cmbDay.Text .Month = cmbMonth.Text .Year = cmbYear.Text .Hour = cmbHour.Text .Minute = cmbMinute.Text .Location = txtLocation.Text .Description = txtDescription.Text End With FilePut(1, AJob) FileClose(1) ClearText() End Sub Not being picky but I agree with Vectronic that FileGet/Open looks ugly. I use My.Computer.FileSystem.WriteAllText(Location, File, Overwrite) Just one line and doesn't need open or close sets. The way you'd read the file is you load it into a varriable and then read from there. Or into an array if you have multiple jobs and each index would be a job which you could then also put into an array and display if you're doing that.
The code you pasted seems to do what you're asking. (A few things: If you declare your arrays in the btnRPD_Click handler, they aren't "class level" like the comment claims, but local variables. 2nd, the bottom comment refers to computing the sum of all the ages...? Remnants of a cut'n'paste maybe?) Anyway, when you reach the end of the big for-next loop, your arrays are all filled with the names and scores; you only need to calculate your weights... You mention not knowing how to tie the names with the scores; in this case, it's by array index. The zero index of names() will give you the 1st name; the same zero index in midterm() will give you the midterm score associated with that name. The broken down 1st line can be found in name(0), midterm(0), FinalExam(0) and Project(0). The 2nd line will be found in all the (1) arrays; and so on.
After seeing the way most instructors seem to teach VB, it's probably not very hard to do it in a way the instructor won't understand either.
You have to remove the .Split() in Input.Split().Reverse; as is, the function is testing after reversing the words, not the letters. 
Unfortunately, he hasn't. This scares me. I hope all the stuff I have learned wasn't the wrong way to do it. I mean, it works, but I don't want to learn bad conventions.
There's really nothing to go on... It's valid and should work, my only skepticism about it is the use of *Call*, which is valid just redundant. Is there any other controls on the form that might be stealing focus? (even *.Visible = False controls can steal focus).
 lstboxData.Items.Add("Student Name") lstboxData.Items.Add("------------------") ... For j As Integer = 0 To n - 1 lstboxData.Items.Add(names(j)) Next #... lstboxData.Items.Add("Averages") lstboxData.Items.Add("------------------") For k As Integer = 0 To 5 ... lstboxData.Items.Add(Math.Round(sum, 2)) ... lstboxData.Items.Add(Math.Round(CourseGrade, 1)) ... Next #... You started a trend with the first part... broke it in the second. Though really, it's poor design to "group" items because of the automatic layout of ListBoxes. If the size of the form/listboxes changes... or the number of items changes... there goes the layout. Ideally, you'd want to use a ListView in Details mode... but I assume "ListBox" is part of the instructions. It wouldn't be particularly pretty (and annoying to get the layout right) but you could do something like: #... Dim ccT As String = ControlChars.Tab lstboxData.Items.Add("Student Name" &amp; ccT &amp; "|" &amp; cct &amp; "Averages" &amp; ccT &amp; "|" &amp; ccT &amp; "Grade" lstboxData.Items.Add("------------------------------------------------------") Dim tStr As String For i As Integer = 0 To n - 1 tStr = names(i) &amp; ccT &amp; ccT &amp; ccT ' Do your sum = ? stuff here tStr &amp;= Math.Round(sum, 2) &amp; ccT &amp; ccT tStr &amp;= Math.Round(AvgToCG(sum), 1) ' tStr will look like: ' Name 0.0 0.0 lstboxData.Items.Add(tStr) Next Which will look something like: Student Name | Averages | Grade -------------------------------------------- Carlisle 0.0 0.0
In addition to this, is keyPreview set to true on the form. 
I actually did get the student name, averages and grade arranged and formatted correctly. But in doing so my grades are now showing up incorrectly as shown here: http://imgur.com/B3FY6QD I dont understand why it keeps taking the sum of only the last person in the list (Rudnick)
&gt; For k As Integer = 0 To 5 Does that loop still look the same as it does above? If not what does it look like now? There's quite a few problems with the whole *AvgToCG* part (you might have changed this already, looks like you were slowly merging that function into the Sub itself) Public Function AvgToCG(s As Double) As Double Return (((((s) - 50.0) / 15.0) + 1.0)) ' ^- already left the function. If AvgToCG &gt;= 4.0 Then AvgToCG = 4.0 If AvgToCG &lt;= 1.0 Then AvgToCG = 0.0 End Function Neither of those If's will ever be reached because the function always returns before them, you also shouldnt use: AvgToCG = ? It should be *Return* Public Function AvgToCG(s As Double) As Double Dim d As Double = (((s) - 50.0) / 15.0) + 1.0 If d &gt; 4 Then d = 4 ElseIf d &lt; 1 Then d = 0 End If Return d End Function Likewise the If's at the end of your For/Loop are checking the CourseGrade for the next item, not the one it's currently doing... which then gets overwritten when the loop starts the next iteration.
 Dim sum As Double Dim CourseGrade As Double For j As Integer = 0 To n - 1 Array.Sort(names) lstboxData.Items.Add((names(j))) Next lstboxData.Items.Add("Averages") lstboxData.Items.Add("-------------") For k As Integer = 0 To 5 sum = CDbl((midterm(k) / 100 * 0.3)) sum = sum + CDbl((FinalExam(k) / 100) * 0.45) sum = sum + CDbl((Project(k) / 100 * 0.25)) sum = sum * 100 lstboxData.Items.Add(Math.Round(sum, 2)) Next lstboxData.Items.Add("Grades") lstboxData.Items.Add("------") For l As Integer = 0 To 5 CourseGrade = AvgToCG(sum) lstboxData.Items.Add(Math.Round(CourseGrade, 1)) If (CourseGrade) &lt;= 1.0 Then CourseGrade = CInt((0.0)) If (CourseGrade) &gt;= 4.0 Then CourseGrade = CInt((4.0)) Next End Sub Public Function AvgToCG(s As Double) As Double Dim d As Double = (((s) - 50.0) / 15.0) + 1.0 If d &gt; 4 Then d = 4 ElseIf d &lt; 1 Then d = 0 End If Return d End Function End Class That includes the changes I made. But now all I'm getting for the course grade part is 2.2 6 times, i don't understand how to include the correct course grades that it should be giving me. I'm pretty sure its a problem with the sum part.
 For l As Integer = 0 To 5 CourseGrade = AvgToCG(sum) lstboxData.Items.Add(Math.Round(CourseGrade, 1)) If (CourseGrade) &lt;= 1.0 Then CourseGrade = CInt((0.0)) If (CourseGrade) &gt;= 4.0 Then CourseGrade = CInt((4.0)) Next You're not doing anything with 'l'... that loop does the same thing 6 times. You need to get the sum for each, but it can only use the sum for the last Student. The easiest option might be to put the sum's back into the array (since you already have them, may as well use them: For k As Integer = 0 To 5 sum = CDbl((midterm(k) / 100 * 0.3)) sum = sum + CDbl((FinalExam(k) / 100) * 0.45) sum = sum + CDbl((Project(k) / 100 * 0.25)) sum = sum * 100 ' names(k) = sum.ToString ' &lt;-- you won't use this array again until the button is pressed ' so you can use it for anything you want really as long as you convert it to a string ' it's messy, so you might want to create another array outside of this loop: ' Dim sums(5) As Double ' then in here use: ' sums(k) = sum lstboxData.Items.Add(Math.Round(sum, 2)) Next For l As Integer = 0 To 5 ' Depending on what you do in the previous loop you can either do: CourseGrade = AvgToCG(Double.Parse(names(l))) ' or if you created a new array, then: CourseGrade = AvgToCG(sums(l)) If (CourseGrade) &lt;= 1.0 Then CourseGrade = 0 If (CourseGrade) &gt;= 4.0 Then CourseGrade = 4 ' Put the If check before the lstbox.Add() lstboxData.Items.Add(Math.Round(CourseGrade, 1)) Next
Thanks a lot for your reply! Any place you would know of that would help me learn those parts? Our textbook doesn't even cover half of the things I've commonly seen in visual basic games. My professor also believes our class should know everything and it should be easy because it is for him. Either way, thanks for your reply :]
https://www.youtube.com/watch?v=49-8fZ_iWoU like mostly other good vb.net tuts are on youtube.
Thank you, I had KeyPreview set to false.
The difference is that the body of the Do Loop While will always be executed at least once, while the body of the Do While Loop may not be executed at all, depending on the conditional statement. I can't think of any situation where I'd always use one over the other.. it's all a matter of what you're trying to accomplish with your code.
when you say that fileopen/get doesn't work; why is this? I am currently trying to gather ideas on what to do from a text book called 'Computing projects in Visual Basic .Net' by D.Christopher. this shows fileopen etc but I am not confident on what it is really doing.
I totally wish I could do a simpler game. Since it is a group project, I got overruled and the group voted for this harder game. It's due on may 1, and we barely met yesterday to try and at least figure out what we had to do to accomplish getting this done. 
Oh, it seem like you want to add the whole job to one line. I was getting ahead of myself thinking you wanted a text file database where you could change individual records and entries. Dim FileJobs() as String = My.Computer.FileSystem.ReadAllText(Location).Split(vbNewLine) That would set FileJobs to have each line in the text file be in a separate index so job 1 would be in index 0, job 2 would be in 1 if they're on separate lines. Then from there you would just have to do a for next loop to go through the array and display it in the list box. After re-reading it, it also depends on how you write to the file, if everything is on one line and delimited or if each part is on a separate line. name day year month hour minute loc desc or delimited name day,month,year,hour,minute,loc,desc 
That sounds pretty good. :) The game is mainly going to be where the character will have to jump over the blocks moving towards it, the more blocks it successfully jumps over, the higher the score. We were thinking about using a random number generator (since we have to incorporate that and a timer) to determine how tall those blocks have to be. We decided there will be blocks that are just one block tall, and one that is two of the singles stacked on top of each other. I just have no clue how to get that part done at all. My job for this project is to get the timer to work and use that to keep score, I just can't seem to grasp how to get it done very well.
That sounds good. You can use the timer to move the block towards the player. I'd probably start by doing the blocks all the same size (use the random number generator to have them appear at random intervals). Once you've got the game working in a basic state, you can improve on it by adding higher blocks or allowing double jumps. Anyway, that's how I'd approach it.
FileOpen/Get *works* however it's VB6 left-overs, for .Net you should be using it's functions: File.ReadAllText(filename) File.ReadAllLines(filename) My.Computer.FileSystem. * (there's lots in that group) All 3 of which (among others) provide better performance, far more options, and better compatibility (ASCII/Unicode, Languages, Formatting by Culture, etc, better at network files, etc)
Session Variables could be the way to go, as I can then retrieve the name I clicked on, link it to the ID and get the record to display Only problem is ending the session and having unended sessions :(. On a selection of a record (say a company), I want a way to display the record's information on another page for editing. Sorta like a way to do a SQL SELECT statement where Company_name = selected name
Perfect way of putting it. 
If you are worried about clearing the session and only want to carry the ID over you could use a querystring. You can store a datatable/datarow in the session, it doesn't have to be just an ID.
Currently my code is: Private Sub Checkdates() Dim CheckInDate, CheckOutDate As DateTime CheckInDate = dtpCheckIn.Text CheckOutDate = dtpCheckOut.Text con.ConnectionString = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=..\Bed and Breakfast.mdb;" con.Open() Dim da2 As New OleDbDataAdapter("select * from qCustomerBooking", con) da2.Fill(dt2) Dim cmd As New OleDbCommand("select * from qCustomerBooking Where @CheckInDate &lt;= Check_Out And @CheckOutDate &gt;= Check_In", con) cmd.Parameters.Add("@CheckInDate", OleDbType.Date).Value = d1 cmd.Parameters.Add("@CheckOutDate", OleDbType.Date).Value = d2 Dim adapter As New OleDbDataAdapter(cmd, con) adapter.Fill(ds) con.Close() Dim a As Integer Dim duplicate As Boolean maxrows = ds.Tables("Checkingdates").Rows.Count incdec = -1 For Each objcontrol As Control In Me.Controls If objcontrol.GetType().Name = "RadioButton" Then 'If the object is a button then it is checked through this process Dim objRadioButton As RadioButton objRadioButton = objcontrol For a = 0 To maxrows - 1 If ds.Tables("Checkingdates").Rows(a).Item("Room_ID") = objRadioButton.Text Then objRadioButton.Enabled = False Else : duplicate = False End If Next End If Next End Sub But this causes a whole load of errors.
 SELECT * FROM qCustomerBooking WHERE CheckIn &gt;= d1 AND CheckIn &lt;= d2 Then you can disable the buttons based on which rooms are in the table.
Hi Kid_Robo, huge thank you for the help! So I've created this instead, using what you're saying: EDIT: Resolved this issue, updated the code, But I'm getting this error: OleDbException was unhandled. No value given for one or more required parameters.
So I've updated my code and fixed my previous issue. The code is currently: Private Sub Checkrooms() 'd1 = dtpCheckIn.Value 'd2 = dtpCheckOut.Value Dim d1 As String = dtpCheckIn.Value.ToString("dd-MM-yyyy") Dim d2 As String = dtpCheckOut.Value.ToString("dd-MM-yyyy") con.ConnectionString = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=..\Bed and Breakfast.mdb;" con.Open() Dim cmd As OleDbCommand = con.CreateCommand() cmd.CommandText = "SELECT * FROM qCustomerBooking WHERE Check_in &gt;= " &amp; d1 &amp; "AND Check_in &lt;= " &amp; d2 &amp; "" Dim da2 = New OleDb.OleDbDataAdapter(cmd) da2.Fill(dt2) For Each objcontrol As Control In Me.Controls If objcontrol.GetType().Name = "RadioButton" Then 'If the object is a button then it is checked through this process Dim objRadioButton As RadioButton objRadioButton = objcontrol For Each DataRow In dt2.Rows If objRadioButton.Text = DataRow.Item(5) Then 'If the button shows up in the Disabled seats datatable then it's colour is changed to orange objRadioButton.Enabled = False Else End If Next End If Next con.Close() End Sub EDIT: No more errors, however it's not disabling the rooms
Can you step through a debugger to see what is going on when you find the controls?
Sure, would that be an external debugger or the one in visual basic? Sorry I'm quite new to this.
If I understand your problem correctly, this should work: Private Sub Button1_Click(sender As Object, e As EventArgs) Handles Button1.Click Label1.Text = "" For Each listItem In ListBox1.Items() Label1.Text += listItem &amp; vbCrLf Next End Sub This will take all of the items contained in ListBox1 and print them out to Label1 - with each entry on a new line.
Sorry I meant physically print to paper!
You could try getting someone to teach you what you need to know for 30$ rather than just getting the ode and learning nothing.
Thank you!
I think your SQL statement is bad/wrong, though I use SQL Server more than Access... SELECT * FROM qCustomerBooking WHERE #01/01/2014# BETWEEN Check_in AND Check_out OR #01/04/2014# BETWEEN Check_in AND Check_out I put in a dates, just for readability. Analyzing this, you are saying select all records from qCustomerBooking where the date of Jan 1, 2014 is between Check_in and Check_out, or Jan 4, 2014 is between Check_in and Check_out. Have you run this in Access itself to see if it works? You might also separate the two sides of the OR clause with parenthesis. SELECT * FROM qCustomerBooking WHERE (#" &amp; d1 &amp; "# BETWEEN Check_in AND Check_out) OR (#" &amp; d2 &amp; "# BETWEEN Check_in AND Check_out) Like so.
I don't see a reason to check the checkout date for room availability. If there is a checkin date within the requested timespan that means the room is not available.
Icehawke, I love you! This fixed it (as far as I'm aware lol)
It's something to do with when the check in date is before any check in dates of any records, but the check out date is within the range of dates in a record. Not sure if I've worded that correctly though haha
Spaced on that part.
I've always found that when you group with parentheses things work a lot better. And you might see an error that you would otherwise miss.
I cannot get the dots to disappear after they fill the screen..I'm not sure what the code is to do that. Any help would be great
The dots will also fill the picture boxes for some reason
"Disappear": Invalidate your form, use: Me.Invalidate() in one or more of your timers (you really only need one timer here, but I'll keep code-analysis to a minimum) This will give you more control over when the paint event happens. "Clear" the form with: e.Graphics.Clear(Colors.Gray) ' Or whatever color you like. This should be at the beginning of your Paint() event before any other drawing. "Drawing on PictureBox"... this shouldn't happen, *unless* the background color is set to transparent, in which case it should be evident why you can see dots on blank areas of your PictureBoxs since it will show what was draw to the form underneath.
THe program will do the dots randomly till the page is filled up then it will keep the dots there..then the picture will show up for a split second then have the picture box fill in with dots separately from the background if that makes sense
WHen really I want it to flash the pictures over and over again like the really annoying spam ads from like windows xp
Yeah... but if the PictureBox contains an image, it shouldn't do that. For instance this should more or less be want: Public Class Form1 Private RandomGenerator As Random = New Random(DateTime.Now.Millisecond) Private NewBoolean As Boolean Private Sub Form1_Paint(ByVal sender As Object, ByVal e As System.Windows.Forms.PaintEventArgs) Handles MyBase.Paint Dim W As Integer = Me.Width Dim YInteger As Integer = Convert.ToInt32(Me.Width / 2) Dim XInteger As Integer = Convert.ToInt32(Me.Width / 2) Dim IndexInteger As Integer Dim Pen As New Pen(Color.Black, 1) Dim Pen2 As New Pen(Color.Red, 1) 'Dim Brush As New SolidBrush(Color.Green) 'Dim Font As New Font("Comic Sans", 20, FontStyle.Bold) 'Dim Point As New PointF(100.0F, 5.0F) If NewBoolean = False Then '? With e.Graphics .Clear(Color.Gray) For IndexInteger = 1 To 40000 XInteger = RandomGenerator.Next(1, W) YInteger = RandomGenerator.Next(1, W) .DrawLine(Pen, XInteger, YInteger, XInteger + 1, YInteger + 1) XInteger = RandomGenerator.Next(1, W) YInteger = RandomGenerator.Next(1, W) .DrawLine(Pen2, XInteger, YInteger, XInteger + 1, YInteger + 1) Next End With End If End Sub Private Tick As Integer Private Sub Timer1_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Timer1.Tick Tick += 1 Select Case Tick Case 1 PictureBox1.Visible = False PictureBox4.Visible = True PictureBox2.Image = My.Resources.VisualBasic_2 Case 2 PictureBox3.Visible = False PictureBox2.Visible = True PictureBox2.Image = My.Resources.Computer1 Case 3 PictureBox2.Visible = False PictureBox3.Visible = True PictureBox3.Image = My.Resources.Programmer Case 4 PictureBox4.Visible = False PictureBox1.Visible = True PictureBox1.Image = My.Resources.Club Tick = 0 End Select Me.Invalidate() End Sub Private Sub Form1_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load Timer1.Enabled = True End Sub End Class #.... If you have transparent areas on the PictureBox, you'd have to draw the background first, then change your images ie: Just put the *Me.Invalidate()* before the Select Case in Timer1.Tick.
The background will change each time... if you want the background to remain the same the whole time you'd need to draw your dots to an Image/Bitmap once, and then just set that as your Form background, or paint it each time after that.
well the dots are just supposed to go away after it fills up the form then the pictures show up flashing at different intervals like picture1 shows every .5 seconds and picture 2 shows up every second...etc..but the dots are only supposed to be there when you run it for the first time and then go away once they fill up the screen 
Set your boolean then... NewBoolean = PictureBox1.Image Is Nothing AndAlso PictureBox2.Image Is Nothing AndAlso PictureBox3.Image Is Nothing AndAlso PictureBox4.Image Is Nothing That will make *NewBoolean = True* if no images have been loaded yet, otherwise it's false (at least one image has loaded) Then draw or don't draw dots in Paint() depending on the boolean.
vb6? or .net?
Form_Unload or Form_Terminate... right?
 Public Sub yourSubHere() Handles Form1.Closing 'your code here End Sub This will work for .NET, assuming your form is called Form1.
 Public Class MainForm Public Sub ActivateAStringOfCode() ... End Sub End Class Public Class SmallerForm Private Sub SmallerForm_Closing(sender,e...) Handles Me.FormClosing ' ' If you are using the root class/forms directly: MainForm.ActivateAStringOfCode() ' ' or if using a variable like: MyMainForm = Me... in the constructor/app load: MyMainFormVariable.ActivateAStringOfCode() ' ' or in either case this should work assuming MainForm was the first form created: DirectCast(Application.OpenForms(0), MainForm).ActivateAStringOfCode() ' ' or for MDI DirectCast(Me.ParentForm, MainForm).ActivateAStringOfCode() End Sub End Class For MDI stuff, you can actually have an event fired when a child form is closed as well, bit more complicated and doesn't sound necessary. You can *also* fire an event when any form closes and then test to see which form/type it was, and call an appropriate method.
I'd personally add a "None", "Not Selected", or "Select a Vendor" item, instead of a blank. Beyond that, there's nothing inherently wrong with doing it in the event handlers. The only other way I could see to do this is with data binding. If you have objects / lists of objects created, why not try to bind to them. 
Because I didn't know you could or how to do it. Care to elaborate? I'm all about easier and more robust methods of doing something. I just had the misfortune of getting a teacher who talks instead of teaching and i've spent the semester trying to figure out ways to do things with the limited knowledge i have.
I would: * Read all lines of code into a string array (which you've already done) * Convert it to an array of integers (bonus points if there's error checking) * Use the [LINQ Count method + lambda expressions](http://msdn.microsoft.com/en-us/library/vstudio/bb338038\(v=vs.100\).aspx) to find the frequency of each desired range * Put the count of each range into the array of 5 ranges. IMO this is completely the wrong way to have an assignment using arrays and listboxes, but whatever. The resulting code should be maybe 10 lines when completed.
Thank you for some direction. I would like to share with you what I have and would like to hear feedback. So the program runs and gives me the info I am asking for. I took your advice and researched using LINQ with arrays. The lambda expressions did not click for me as of yet so I did not include those. The code seems rather redundant. Can a sub procedure be made and called upon in this situation? Or would I have to have a sub procedure for each freqQuery I used? I hope that makes sense...Anyways keep in mind I am very new at this and still have lots to learn. Here is my finished code... Public Class frmAnalyze Private Sub btnDisplay_Click(sender As Object, e As EventArgs) Handles btnDisplay.Click Dim freq(4) As Integer Dim scores() As String = IO.File.ReadAllLines("Scores.txt") Dim freqQuery0 = From score In scores Where score &lt; 10 Select score For Each score As String In freqQuery0 freq(0) += 1 Next Dim freqQuery1 = From score In scores Where score &lt; 20 And score &gt;= 10 Select score For Each score As String In freqQuery1 freq(1) += 1 Next Dim freqQuery2 = From score In scores Where score &lt; 30 And score &gt;= 20 Select score For Each score As String In freqQuery2 freq(2) += 1 Next Dim freqQuery3 = From score In scores Where score &lt; 40 And score &gt;= 30 Select score For Each score As String In freqQuery3 freq(3) += 1 Next Dim freqQuery4 = From score In scores Where score &lt; 50 And score &gt;= 40 Select score For Each score As String In freqQuery4 freq(4) += 1 Next lstResults.Items.Add("Interval Frequency") lstResults.Items.Add("_______________________") lstResults.Items.Add("0 to 9 " &amp; freq(0)) lstResults.Items.Add("10 to 19 " &amp; freq(1)) lstResults.Items.Add("20 to 29 " &amp; freq(2)) lstResults.Items.Add("30 to 39 " &amp; freq(3)) lstResults.Items.Add("40 to 49 " &amp; freq(4)) End Sub End Class Also is there a way to go about it the way I was trying in the original post? Although I found this way easier to understand my teacher has not covered using LINQ and prefers us to use concepts he has covered to make sure we understand them. Any feedback is appreciated. THanks
I'm working in visual studio 2013, I don't have the code up, but I'm using the pop up type input box, not a regular text box.
I don't think you can. it's just simple box. 
I seem to have deleted the previous text here when I edited it the first time. The easiest(maybe only) way to do this would be to create a new form and use the keypress event in a textbox on the form. Private Sub txtInput_KeyDown(sender As System.Object, e As System.Windows.Forms.KeyEventArgs) Handles txtInput.KeyDown If Not ((e.KeyCode &gt;= Keys.A And e.KeyCode &lt;= Keys.Z) Or (e.KeyCode &gt;= Keys.D1 And e.KeyCode &lt;= Keys.D9) Or (e.KeyCode &gt;= Keys.NumPad0 And e.KeyCode &lt;= Keys.NumPad9) Or e.KeyCode = Keys.Decimal Or e.KeyCode = Keys.Back Or e.KeyCode = Keys.Delete) Then ' A-Z 0-9 Numpad 0-9 Decimal Backspace Delete e.SuppressKeyPress = True End If End Sub
Sure use the the keydown event and process the e.keycode Private Sub TextBox1_KeyDown(sender As Object, e As System.Windows.Forms.KeyEventArgs) Handles TextBox1.KeyDown If e.KeyCode &lt; 48 Or e.KeyCode &gt; 57 Then e.SuppressKeyPress = True End If End Sub I did the numbers now all you have to do is check the keycode for the "." and the keys.back values
you cant easily override the behaviour of that box, you will need to make a new one to replace it. I mean you could process the output from an input box and then make them do it again until they have it right, would that work?
This should be a very simple exercise. since you didn't mention the range of the hex value we'll just assume a max range of FF (255) Create a random number from 1 to 255 and display that result as Hex(yourRandomNumber) This is what you show the user Then you compare what the user types with clng("&amp;H" &amp; userinput) if they are a match then add 16 to the total score. Whether it's a match or not, increment your rounds counter so that you can check to see if all 16 rounds have been played. I would even go so far as to kiss a little ass at the end of the game and display the HEX equivalent of the score.
 lblHex.Text = Hex(New Random().Next(0, 16)) If Hex(txtDec.Text) = lblHex.Text Then
 Public Sub countFreq() Dim freq(4) as Integer Dim temp() As String = IO.File.ReadAllLines("Scores.txt") 'instantiate each freq; probably unnecessary but eh For n = 0 to 4 freq(n) = 0 Next 'loop through each item For Each str in temp() Dim currentNumber as Integer = Convert.ToInt32(str) Select Case currentNumber Case 1 to 10 : freq(0) += 1 Case 11 to 20 : freq(1) += 1 Case 21 to 30 : freq(2) += 1 Case 31 to 40 : freq(3) += 1 Case 41 to 50 : freq(4) += 1 Case Else 'error! out of bounds Next This code should correctly populate your freq(4) array. Now it's up to you to figure out how to display it. Good luck! :)
Thanks, I appreciate the help. It's nice to see how others work through a problem. Helps me understand all the possible options and gets me thinking on a different path. 
i'm talking about when you use a comma with a print command
ah, likely not. 
I'd go with "*likely not*" as well, but it's been ages since I VB6'd. However, [manually](http://msdn.microsoft.com/en-us/library/aa227486\(v=vs.60\).aspx) works, and it would be fairly easy to make your own Sub PrintText() that will align it how you like from there after.
 Dim sb As New StringBuilder For i As Integer = 0 To listdisplay.Items.Count - 1 sb.AppendLine(listdisplay.Items(i).ToString) Next File.WriteAllText(FileName, sb.ToString) I put this into my code for the click event of the delete button but nothing appears to happen when I do click it?
did you change "FileName" to something useful?
In Form1 you can do Form2.ListBox1.Items.Add("123")
yes i have. when I select a string in the listbox and then press the delete button nothing happens?
Well leave your original code there for removing the item... this is just for writing it to the file. ie: listdisplay.Items.Remove(listdisplay.SelectedItem) Although using *.RemoveAt(Index) is usually better. listdisplay.Items.RemoveAt(listdisplay.Items.IndexOf(listdisplay.SelectedItem))
Absolutely fantastic thanks a lot mate.
Getting data is easier. If your original form is Form1, the ListBox name is ListBox1, and your new (currently active) form is Form2: Form1.ListBox1 Will refer to the Listbox, from which you can do whatever you like, including add, remove, clear, get all the items etc.
In the *Solution Properties - Settings* create two "System.Collections.Specialized.StringCollection" Save: My.Settings.ArrayOne = YourWorkingArrayOne Load: YourWorkingArrayOne = My.Settings.ArrayOne If the arrays aren't very excessive in size/access... you can use them directly just like a List(Of String) Dim Something As String = My.Settings.ArrayOne(0) My.Settings.ArrayOne(0) = "Foobar" For i As Integer = 0 To My.Settings.ArrayOne.Count - 1 etc. If you want dynamically sized collections of arrays you can actually do this but it's difficult... so it's easier to just create an array of strings that get split into arrays... Dim Arrays As String() = My.Settings.Arrays Dim ArrayOne As String() = Arrays(0).Split(CChar(",")) Dim ArrayTwo As String() = Arrays(1).Split(CChar(",")) My.Settings.Arrays.Add(String.Join(",", ArrayOne)) You could also read/write to a file and do all your own parsing. File.WriteAllLines(FileName, Array) Dim Foobar As String() = File.ReadAllLines(FileName) They're both easy options really.
Thanks for the response, a few follow up questions though: Will this work with two-dimensional arrays? Is there a way to add a new Setting within the code? 
Not without flattening the second/third/etc dimension. Flatten each 2nd array into it's parent. Dim ArrayOut(Arrays.Length - 1) For i As Integer = 0 To Arrays.Length - 1 ArrayOut(i) = String.Join(",", Arrays(i)) Next My.Settings.ArraySave = ArrayOut The Dim Arrays As String(My.Settings.ArraySave.Count - 1)() For i as Integer = 0 To My.Settings.ArraySave.Count - 1 Arrays(i) = My.Settings.ArraySave(i).Split(CChar(",")) Next And you have your 2D array back. (obviously this can be done in many different ways) Regarding dynamic settings, I think it's possible but you have to sub-class/namespace the My.Settings stuff, which is likely more of a headache than it would be to just read/write to your own format. You can still make use of the XMLSerializer too if you prefer that over plain-text... but coding in your own groups, and handling multi-dimensional arrays is very similar. &lt;(item,item,item)(item,item,item)&gt; *Could* be an example of a 2D array... each line in the file is an array of arrays... so split that by brackets, then split those by commas, etc... and you have your 2D array back. or name them: &lt;foobar:item,item|item,item&gt; Create an array with type "foobar", split by "|" then split each of those by ","...etc, use whatever delimiters you want. Use Integer.Parse(""), or CType(Foo, Bar) etc to convert them to another type other than string.
Why do it like that? VB.NET has native support for FTP. Check out FtpWebRequest class
Shouldn't the "/bin" line be "cd /bin"?
Thanks for pointing that out, but the change makes no difference in this instance.
Is there any difference if you do it inline? Using P As Process = Process.Start(New ProcessStartInfo("C:\Windows\System32\ftp.exe", String.Format("-s:{0} {1}", textfile, url))) P.WaitForExit() End Using What about putting quotes around the textfile: "-s:" &amp; AscW(34) &amp; "{0}" &amp; Asc(34) &amp; " {1}" Have you checked the formatting?... MsgBox(String.Format("-s:{0} {1}", textfile, url)) To see if it comes out right? Are you in an administrator account?... maybe trying setting privileges/etc on the process start.
 Option Strict On Option Explicit On Option Infer Off Public Class frmChange Dim IntQuarters, IntDimes, IntNickels, IntPennies As Integer Otherwise, you're assigning/using values that are either immediately overwritten, or were 0. Maybe grab a handful of various change...
No idea, but some possibilities: xmlDoc.Open "GET","http://localhost:8080/requests/status.xml", false, "*", "test" Maybe "?"... or skip the username/password and use them directly: xmlDoc.Open "GET","http://:password@localhost:8080/requests/status.xml", false or xmlDoc.Open "GET","http://*:password@localhost:8080/requests/status.xml", false What happens if you literally skip the username? xmlDoc.Open "GET","http://localhost:8080/requests/status.xml", false, ,"test"
Msxml2 is a vb script component, and is a really bad way to deal with this sort of thing in .NET. .NET has a much better XML parser, and much better tools for web services. That said, the following should get you started (This works on my machine with VLC, but I didn't set a password): Dim myReq As HttpWebRequest myReq = CType(WebRequest.Create("http://localhost:8080/requests/status.xml"), HttpWebRequest) myReq.ContentType = "application/x-www-form-urlencoded" myReq.Method = "GET" Dim myRes As WebResponse = myReq.GetResponse() Dim respStream As System.IO.Stream = myRes.GetResponseStream() Dim reader As System.IO.StreamReader = New System.IO.StreamReader(respStream, System.Text.Encoding.ASCII) Dim strResponse As String = reader.ReadToEnd myRes.Close() That will get the response from VLC into the strResonse variable. From there you could pass it into an XML doc, or just parse it manually, depending upon what you want to do. 
Hmmm, this looks familiar ;)
Thank you very much. And yeah, I seen it was a pretty bad way. I got that part to work, turns out vlc doesn't check the username. But now that I got that, I can't seem to do the selectSingleNode line in the script i linked. it's saying something about an object required, and i've been trying since i posted this to figure out how to get that to work. and honestly after working on trying to get this bloody thing to work, I'm just going to rewrite it in python. Visual Basic .NET is the programming language of the damned. I will have to sell my soul to Satan before I can get what I want done in it.
VB is great, VBA/VBScript is shit...lol
&gt; selectSingleNode line in the script i linked. it's saying something about an object required If your query: "root/information/category/info[@name = 'now_playing']" Doesn't exist, then there's no object for *.text to return. Probably step through it till you get it working. Without ever doing it myself, it also seems it should be: xmlDoc.responseXML.selectSingleNode("root/information/category/[@name = 'meta']/info[@name = 'now_playing']") (assuming any of this works) Or, step through one by one, get the root node, then loop through to find information, loop through to find category, etc. Also, VB.Net is basically C# with different syntax... you might be better off using VB.Net not VBA/S, you'll pick it up much quicker.
I just tried starting in a new folder and using the example in http://msdn.microsoft.com/en-us/library/ms757846%28VS.85%29.aspx for reference, and I'm still having issues. i've got passed the login part, and I'm pretty sure the xml is there, response.write doesn't work on my end so i can't write out any variable like some examples have shown. . dim xmlDoc : set xmlDoc = CreateObject("Msxml2.XMLHTTP.6.0") dim currNode 'xmlDoc.async = false xmlDoc.Open "GET","http://localhost:8080/requests/status.xml", false, "noname", "waffle" xmlDoc.send() 'xmlDoc.setProperty "SelectionLanguage", "XPath" set currNode = xmlDoc.responseXML.selectSingleNode("//fullscreen") WScript.Echo(currNode.text) . Line 8 Char 1 Error: Object required. Code: 800A01A8 source: Microsoft VBScript runtime error . Here's also the xml file as it appears right now, i uploaded a image preview, the file itself, and the html source code incase you have a preference. the image doesn't show all of the xml, but it does show down to the now_playing part (3rd line from the botom) http://imgur.com/eCZ5Py5 https://www.mediafire.com/?xx629qpfx04w92m http://pastebin.com/4CEjcurj I really hate overly asking for help but i've looked all over google for the past 2 hours trying to figure out what i can do to get it to work and I'm really really getting frustrated. especially now that python is failing me at the moment too (trying to install modules on windows is a pain). you took your time to look in the script file so at the very least you show some interest in helping me out (thank you, by the way, i do appreciate it), do you have any idea what might work?
I took a breath and calmed down and reread your comment.. you're right on that line, (I'm aware of the / mistake you made, don't worry), identifying the category would help. Thank you. you say step through the root node, would there be any way of using WScript.Echo to show that it's there? there's no text in the root, just the other tags
Have you tried waiting?... there should be almost no delay if this is done locally, but: While IsNull(currNode) currNode = xmlDoc.responseXML.selectSingleNode("//fullscreen").Text Loop WScript.Echo(currNode) Also, currNode.text probably doesn't exist since it wasn't told what kind of object it is. ie: "text" isn't a member of string, object, etc. (I could be wrong, not sure if VBScript does "Infer").
That's a good idea, though unfortunately I tried that and my cpu shot up to 100% and it even froze my music haha.
Quotes around the text file was the culprit. Facepalm. Thanks.
This is how I would do it, I am mainly familiar with VB6 though, so it might be slightly different in .Net As stated previously you want to first reference the form: If you have 2 forms, form 1 and form 2 then you first want to say: Form1. Then reference the control on that form, in your case a listbox(the list box name will be whatever you have called it) form1.listbox then the methods/properties you want to use, in your case you want to use the data that is within the listbox so: form1.listbox.list(0) this would be the first item within that list box so now you can do whatever you want with it so for an easy example putting the first item in a message box on the click event of a button Private Sub cmd1_Click() MsgBox (Form1.List1.List(0)) End sub 
Most people don't speak German so I google translate his post: &gt; I have a program created for hangman to do. I just want to make sure that the word is guessed to be sent via the Internet on your mobile phone and so is recorded in VB.
You can't write Visual Basic applications directly for android or iPhone by default AFAIK. But you can code it in Visual Basic then use a 3rd party service to translate it to C# which I Believe can be used on phones.
got it working now, thanks!
It's Dutch actually. But barely.
If your program does not contain any 3rd party controls/libraries and the machine in question has the proper Framework version installed, then the executable should run. Otherwise, you would end up having to create an installer and install your application on the machine prior to using it.
VB can use win32 api calls and do pretty much anything and everything. you can run system commands to start other programs. you can also use registry functions to check for certain know issues there as well.
I learned them so long ago i don't know, and .net would likely be very different, and probably a lot easier
? Your function doesn't return anything, so yeah... you could just simply not call the function, and you'd get the same result. What is it you're trying to do?
Yeah, it wouldnt be that hard to make either.
 dim dateString as string = "20050802" dim myDate as DateTime = DateTime.ParseExact(dateString, "yyyyMMdd", System.Globalization.CultureInfo.InvariantCulture)
.net or vb6
vb.net I'm afraid I might even be too new to possibly understand the difference...
Yeah, I haven't really dealt much with string. A tip on how to build each row in the select statement into string?
1. Install VisualStudio 2. Create a new Windows Forms project 3. Double-click the form it shows 4. Write stuff 5. Hit 'F5' Depending on result, go back to #4, or go back to #3 and add a different control, double-click that. etc. No really... I'm not kidding.
http://msdn.microsoft.com/en-us/library/te2585xw.aspx
I figured it out! Protected Sub BTNShowTruckerInfo_Click(sender As Object, e As EventArgs) Handles BTNShowTruckerInfo.Click If TruckerInfoCal1.SelectedDate = Nothing Or TruckerInfoCal2.SelectedDate = Nothing Then Exit Sub Dim decDeliveryNum, decDeliveryWet, decTruckPay As Decimal Dim daDeliveryNumber As New SqlCommand("SELECT COUNT(DeliveryNumber) FROM Deliveries WHERE DeliveryDate BETWEEN @p1 AND @p2 AND TruckerID = @p3", Con) Dim daDeliveryWeight As New SqlCommand("SELECT SUM(DeliveryWeight) FROM Deliveries WHERE DeliveryDate BETWEEN @p1 AND @p2 AND TruckerID = @p3", Con) Dim daTruckPay As New SqlCommand("SELECT SUM(TruckerPayout) FROM Deliveries WHERE DeliveryDate BETWEEN @p1 AND @p2 AND TruckerID = @p3", Con) With daDeliveryNumber.Parameters .AddWithValue("@p1", TruckerInfoCal1.SelectedDate) .AddWithValue("@p2", TruckerInfoCal2.SelectedDate) .AddWithValue("@p3", DropDownTruckerInfo.SelectedValue) End With With daDeliveryWeight.Parameters .AddWithValue("@p1", TruckerInfoCal1.SelectedDate) .AddWithValue("@p2", TruckerInfoCal2.SelectedDate) .AddWithValue("@p3", DropDownTruckerInfo.SelectedValue) End With With daTruckPay.Parameters .AddWithValue("@p1", TruckerInfoCal1.SelectedDate) .AddWithValue("@p2", TruckerInfoCal2.SelectedDate) .AddWithValue("@p3", DropDownTruckerInfo.SelectedValue) End With Try If Con.State = ConnectionState.Closed Then Con.Open() End If decDeliveryNum = CDec(daDeliveryNumber.ExecuteScalar()) decDeliveryWet = CDec(daDeliveryWeight.ExecuteScalar()) decTruckPay = CDec(daTruckPay.ExecuteScalar()) Catch ex As Exception Response.Write(ex.Message) Finally Con.Close() End Try TxtTruckerInfo.Text = "There have been " &amp; decDeliveryNum.ToString &amp; " deliveries by that trucker in the selected date range" &amp; vbNewLine &amp; vbNewLine &amp; "His total delivery weight in that time is " &amp; decDeliveryWet.ToString &amp; " pounds." &amp; vbNewLine &amp; vbNewLine &amp; "His total pay is " &amp; decTruckPay.ToString("C0")
1. create a function: showReasons(){ label1.text = "put the text here" } 2. double click the button to create a click event and call the function by putting the "showReasons()" inside the sub. 
Alright, thank you so much for your help :)
To expand on BambooVase's explanation. The main (only?) difference between a Sub and a Function, is that a Function returns something to the caller. Private Sub showReasons() ' Code End Sub Whereas a Function() could be used like this: Private Sub showReasons() Dim reasons As String = getReasons() Label1.Text = reasons End Sub Private Function getReasons() As String Return "For any reason you like" End Function Or Private Sub showReasons() Dim reasons As String ' Collect a bunch of reasons, then If testReasons(reasons) Then Label1.Text = reasons End If End Sub Private Function testReasons(ByBal input As String) As Boolean Return input.length &gt; 0 End Function Which would return 'True' if the 'reason' string contains some amount of text.
This is a good series to get you familiar with VS: http://channel9.msdn.com/Series/Visual-Basic-Development-for-Absolute-Beginners
Beter yet, copy paste VBA code into visual studio. Visual studio will convert some stuff. Then F5 and hack away until it works.
Make sure it's visual studio 6 or less, otherwise you're going to need to learn completely new syntax (.NET)
But VB6 has been dead for years. You cn't buy it, it isn't supported, any jobs that want it will be hellish. It really doesn't take that long to migrate from VB6, or VBA, for all that, to VB 2013. .NET of course is a whole new ball game, but once you get it, you're away. Source: Excel VBA guy who drank the VB6 Koolaid in 2005 and .NET a couple of years later. 
Well... Public Class Form1 'Get the text from textbox1 and display it in textbox2 'Declare the string as variable Private str As String ' Use Private/Public/Const/etc... not 'Dim' in the root of a Class. Private arrayListInfo As New List(Of String) ' Quicker to type and more concise Private objItem As Object ' What's this? Private Sub Button1_Click(sender As Object, e As EventArgs) Handles tweetbutton.Click arrayListInfo.Add(str) ' Add the current tweet to your list TextBox2.Text = String.Join(vbCrLf, arrayListInfo.ToArray.Reverse) ' Convert the array of tweets to a lines of text, starting from last to first ' (newest to oldest), Then add them to TextBox2 all together... ' something like a ListBox/ListView would be better for this. TextBox1.Text = "" ' Clear TextBox1, which will also reset 'str' and also ' disable tweetbutton again till a new tweet. End Sub Private Sub TextBox1_TextChanged(sender As Object, e As EventArgs) Handles TextBox1.TextChanged str = TextBox1.Text.Replace("a", "A") ' Do all the conversion/variable setting here tweetbutton.Enabled = str.Length &gt; 0 ' Disable the tweetButton if no tweet End Sub End Class Edit: comments.
A signed integer: Holds 32-bit (4-byte) integers that range in value from -2,147,483,648 through 2,147,483,647
'Integer'... UShort is... too short (almost it's so close) 65,535... but really 'Integer' is always the best Integer to use unless you need a Long. It will perform the best, even though it's much larger than you need, since it's the 'native' number... Shorts, Bytes, Longs, etc... require additional behind-the-scene conversions, and excluding 64bit CPU's (where Long is used), will be converted to Integer. [MSDN](http://msdn.microsoft.com/en-us/library/47zceaw7.aspx)
If you're not going to be doing any maths with it, why not String?
They could be doing (very simple) math: Select Case Zip Case # To # ' Area X Case # To # ' Area Y ' etc. End Select Though I imagine it will be stored as String. As a Canadian it would have to be string anyways, ours is: A#A #A#, instead of 5 digits.
Because string is 1 byte per character. Wasteful.
Assuming we're handling 5 digit zip codes, that's just 5 bytes compared to 8 from long. http://msdn.microsoft.com/en-us/library/47zceaw7.aspx
thats a 64bit long. traditional longs are 4 bytes. http://msdn.microsoft.com/en-us/library/7f5ztkz3(v=vs.90).aspx and http://www.w3schools.com/sql/sql_datatypes.asp
In the era of cheap terabyte hard drives, are we really quibbling over 1 bit? I would store it as a string, simply because sooner or later some one will decide to let some Canadian address into the mix. Or at some point in the future, some genius in congress or the post office will decide to throw some letters into it. I'd also call it PostalCode instead of Zip. 
Store them as a string because you'll never use them for math. If anything, this will help you avoid accidentally adding two zip codes if you concatenate them. Also, what if a future requirement is to start storing the 4 digit suffix as well? You'll want the dash. finally, what if you need to start storing Canadian postal codes? They use numbers and letters.
 Private PlayerPosition As New PlayerPositionInfo(0, 0) Public Structure PlayerPositionInfo Public Current As Point Public Previous As Point Sub New(ByVal x As Integer, ByVal y As Integer) Current = New Point(x, y) Previous = New Point(x, y) End Sub Public Function SetPosition(Optional ByVal x As Integer = -1, _ Optional ByVal y As Integer = -1) As Point Previous = Current Current.X = Math.Max(x, Current.X) Current.Y = Math.Max(y, Current.Y) Return Current End Function End Structure ... Player1.Top -= 5 PlayerPosition.SetPosition(, Player1.Top) formSurface.DrawLine(Pens.Black, PlayerPosition.Previous, PlayerPosition.Current) Although your current way works as well, I would just suggest using *Point* instead of holding X/Y in separate variables. Edit: wrong place for *.Top.
I'll grant you the portability of post codes, however your mindset of "well, petabytes are cheap" is terrible and what leads to bloatware and the future need to expand ones systems to be able to run said influx of bloatware. Always design for efficiency. 
and this wasn't covered in class? and what exact part of the database and datagridview documentation do you need help deciphering?
sorry, but that all seems extremely clear. what exactly are you having a problem with?
*4. For i As Integer = 1 To 5 ListBox1.Items.Add(InputBox("Enter Fact","WWII Facts)) Next *5. SomeMenuItemClick() If ListBox1.SelectedItems.Count &gt; 0 Then ListBox1.Items.Remove(ListBox1.SelectedItem) Else MsgBox("Idiot") End If End Sub *6. ListBox.Items.Clear() *7. Me.Close()
A For-Next loop basically runs a number of times. For instance: For n = 1 to 5 Console.Writeline("Hello!") Next This will display the word "Hello!" five times in your console. As you may imagine, loops are very useful for doing tedious repetitive work and can save you a lot of copy and pasting. However, they're even more powerful than just that alone! The counting variable - in this case, I've named it "n" - can also be referenced. Therefore: For n = 1 to 5 Console.Writeline(n) Next This will display the numbers 1 to 5 in your console.
What the hell is with all of you students using "Dim" in the root of a class. Public Class Form1 Private temp As String() = IO.File.ReadAllLines("textfile1.txt") Private numbers1(temp.Length - 1) As Double ' Not Integer, since it will hold Doubles. Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load Dim numbers2(temp.Length - 1), numbers3(temp.Length - 1) As Double For i As Integer = 0 To temp.Length - 1 numbers1(i) = Double.Parse(temp(i)) Next numbers1.CopyTo(numbers2, 0) numbers2.CopyTo(numbers3, 0) ' Cause your teacher sucks numbers2.Sort() numbers3.Sort() numbers3.Reverse() ' Add stuff to mystery ListView End Sub Private Sub Total() Dim SomeSortOfTotal As Double = numbers1.Sum() End Sub Private Sub BtnTotalStuff(...) ... Total() End Sub Private Sub MinMax() Dim Min, Max As Double Min = Double.MaxValue For Each D As Double In numbers2 If D &lt; Min Then Min = D End If If D &gt; Max Then Max = D End If Next End Sub Private Sub BtnMinMaxStuff(...) ... MinMax() End Sub Private Sub Average() Dim Avg As Double = numbers1.Average() End Sub Private Sub BtnAverageStuff(...) ... Average() End Sub End Class #Just so you know, none of these Subs actually do anything... they should be functions, then used. Private Function Total() As Double Return numbers1.Sum() End Function Private Sub BtnTotalStuff(...) ... MsgBox(Total()) End Sub #Obviously most of this isn't really *functional* code... but... should be well on your way.
I agree completely, they should provide us with their current code and we give tips and guidance based on that.
Agree too, and I won't even look at them if they only post the classwork with no code. 
Definitely agree. There should be an attempt made to at least show they're trying to do the assignment. While I do believe that there are a lot of students that don't get a lot of help from their instructors, there are many ways to find enough information to come up with an attempt. 
What does it matter if they use Dim? It is exactly the same as private, and actually less typing save for intellisense.
what about your zip codes like 07070 which would get stored as 7070, and then every single time you want to work with zip codes, you will need to use a tostring.padleft on the value to make sure you are working with 5 digits.
If recalling it, it internally gets converted to string. So negligible added overhead
You'll need to have some sort of loop to go through the contents of the file.
Dim allocates the memory, Private specifies the scope. By using Private, Friend, Protected, etc. Dim becomes optional. And yes Dim is equivalent to Private, but some habits (such as using scope for form level/class level variables) are hard to break.
 for (int Num = 0; Num &lt; Run;) Have to explicitly state how the loop increments. Take a look at MSDN for loop syntax. 
I was going to put the counter in the loop of if the user enters A or B then it adds 1 if not it doesn't. I just need help with data validation. Basically if Letter = a or b then counter++ else display incorrect data. I just can't figure out how to write that.
You can read the file to a string like this: Dim str as String = "" Using sw As New IO.StreamReader(FileName) str = sw.ReadToEnd() End Using And then search the string like this: Dim found as Boolean = str.Contains("what you're looking for")
I'm not quite sure what you're exactly trying to do with this assignment, but wouldn't it make more sense to independently keep track of the number of times a and b were entered, and use a different kind of loop that runs until the user wants to stop?
Sounds good to me!
Honestly I don't see the point in the assignment either. That's why I'm having trouble making it.... I've got it figured out... if (Letter == "a" || Letter == "b") That is was I was looking for. Now I need to figure out the same thing as that but I can't use || with integers... Do you know how to do that?
 Private Sub Something() Dim FileData As String() = File.ReadAllLines("C:\...Jobs.dat") For i As Integer = 0 To FileData.Length - 1 If FileData(i).IndexOf(TextBox1.Text) &gt; -1 Then MsgBox(FileData(i)) Exit For End If Next End Sub That's probably the most simple way. However this makes a lot of assumptions: 1. That file always exists 2. The TextBox has text in it 3. We don't care about telling them if it's not found, where it's found, or using the found item. 4. The file isn't very big. 5. The file isn't empty. A better way might be something like: Private Filename As String = "C:\Users\John\Desktop\Jobs.dat" Private Sub TextBox1_TextChanged(...) ... ButtonSearch.Enabled = TextBox1.Text.Length &gt; 0 End Sub Private Sub ButtonSearch_Click(...) ... Dim ResultText As String Dim ResultLine As Integer Dim ResultIndx As Integer = -1 Dim Query As String = TextBox1.Text If IO.File.Exists(Filename) Then Using FS As New StreamReader(Filename) Do Until FS.EndOfStream ResultText = FS.ReadLine() ResultIndx = ResultText.IndexOf(Query) If ResultIndx &gt; -1 Then Exit Do End If ResultLine += 1 Loop End Using If ResultIndx &gt; -1 Then ListBox1.Items.Add("Line:" &amp; ResultLine &amp; vbTab &amp; "Col:" &amp; ResultIndx &amp; vbTab &amp; " - " &amp; ResultText) Else MsgBox("Query: '" &amp; Query &amp; "' Not Found In File:" &amp; vbCrLf &amp; Filename) End If Else MsgBox("File Does Not Exists:" &amp; vbCrLf &amp; Filename) End If End Sub
Nothing is supposed to print out except "Invalid" or "Valid" which it does in a for loop. So I have the first part done which is the 'a' or 'b' now I just need '0' or '1' [Here is the updated code](http://pastebin.com/sbJ6zxsr)
c# Console.WriteLine("Enter '0' or '1': "); Numbers = Convert.ToInt32(Console.ReadLine()); if () { Count++; Console.Clear(); Console.WriteLine(Count + " Out of " + Run); } else { Console.Clear(); Console.WriteLine("Invalid Data"); I'm having trouble with the "if ()" I basically need "if Numbers = 1 or 0 then....."
not sure what you mean by internally gets converted to a string. If the datatype is long in the database, and the datatype is long in your code, then the only time it is converted to a string is when you call .ToString() on the variable. The point I was trying to make is that leading zeros are removed from a zip code like 07070 if you store it in a numeric type Dim myLong = clng("07070") messagebox.show(myLong.ToString) 'output is 7070
I will agree that for the sake of descriptive scope when reading code, private is more explicit than Dim, but only to those who don't know that Dim and Private are functionally identical. If you declare a variable Dim myVar as Integer = 0 and then mouse over it, intellisense will list it as Private myVar as Integer = 0 So I don't see using Dim for variable declaration at the module level as a "bad" habit by any means. 
I didn't mean to intimate that it was a bad habit. My bad ;) Our corporate guidelines (from reading code, not a document) seem to be if it is declared in a function/sub, it gets a Dim. If it's outside that scope, it gets the Private/Public/etc.
Where is a C# subreddit?
/r/csharp ... /r/learnprogramming
I don't do .NET, but in VB any time you display a numeric type it's converted to string behind the scenes. Wrapping a Format() around it moves the conversion to your code and specifying the format string "00000" add negligible overhead.
Well inside a sub/function, variables are limited to private scope of the sub/function, so you can ONLY use Dim in that situation. access modifiers like private or public will give you syntax errors ;)
negligible overhead isn't really the issue. The issue is by not just storing the zip code as a string, you create something that everyone has to remember to do when they are going to work with that zip code data, which is to format the string to display as 5 digits. Not just in display situations either. User does a search by zip code in the database and types in 07070, and now the developer needs to either convert that input to a numeric to strip the zero to find the match, or convert every field in the database records to include the leading 0 for purposes of finding valid results in the query. It just creates extra work for no reason, and extra work usually leads to overlooked bugs. Of course in programming there are always multiple ways to solve the same problem, but often times, the ways that are less error prone make the most sense.
Actually, most SQL engines would essentially do something like a CINT() around your query and the match would be found. e.g. column ("zip") type is int, 7070 is the value. this query will return the result(s): SELECT * FROM address WHERE zip='07070' internally it matches numeric 7070 against stored numeric 7070. I'm not debating using string for storing postcodes, however. us zip codes should have no problem as 32-bit ints
You are adding +1 to all the counters, every game. You are just displaying one of them but internallly you are adding 1 to all of them. You should just add 1 to the "You" counter when you win, only add 1 to the "PC" counter when the PC wins, only add 1 to the draw counter when it's a draw.
Oh man, where do I begin... OK firstly, using a GOTO is taboo, especially when you're in a function. Secondly, your function doesn't return anything, which makes it a sub. Do not ignore the warnings that appear in your IDE! That said, however, none of these are the problem. The problem is the logic you're using to generate the cards. Consider: if this was real life, how would such a game be designed? Well, first you'll have a deck of cards. These cards would then be shuffled before being dealt out. So you'll need something that can represent the deck, and some way to randomly select cards from that deck. The easiest way to represent a deck of cards is to use a List. In this case, we want a List(of Integer). So let's populate our deck of cards. Private Function populateDeck() as List(of Integer) Dim deck as New List(of Integer) For n = 1 to 9 deck.Add(n) Next Return deck End Function The above code creates a deck with cards value 1 to 9. Adjust it to suit your needs. However, right now the deck is completely unshuffled. So how do we shuffle it? Actually, rather than shuffle it, it's much easier to just pull cards out from it at random, using its index as a reference point. So let's say we have a function that pulls a card out: Private Function drawCard(ByRef deck as List(of Integer)) as Integer Dim random as New Random 'This gives us a random number from 0 to the size of the deck Dim roll as Integer = random.Next(deck.count) 'This sets the return value to be equal to the randomly rolled index 'We're not using Return because we want to remove the card as well drawCard = deck.Items(roll) deck.RemoveAt(roll) End Function OK! We're done! So how do we use these functions? 'Create the deck Dim deck as List(of Integer) = populateDeck 'Draw through the entire deck While deck.Count &gt; 0 Dim card as Integer = drawCard(deck) 'do whatever you need with the card like display pic etc End While There you go! A fully functional algorithm to generate the cards, draw through them and do whatever you need to with them.
now see that's the thing, the current method I'm using does NOT work for some reason. Any ideas on why that could be? The variables are changing as they should but the line is not drawing. Any ideas?
you'd do better to not use word. use one of the various reporting add-ons for vb.net. these are much much easier to manipulate object locations.
you toggle the Enabled property? there's probably a dozen ways, and most would be "correct". take a shot at it, then ask a more specific question.
There's not enough code to be able to diagnose it.
I think something like Me.acceptButton=Iif(button.enabled= true, true button, false button) Might work
Is this a VBA question?
Yes I beleive so, I am trying to build a macro in VB to do the job... If not then please point me in the correct direction.
you could insert a table and then insert the images into the table, then adjust the table accordingly...
since this sounds like schoolwork, I'll start with: how do you think you would do it? 
Well I need to open the file and then using the inputbox need to search for the 'key field' on each record- which is the name. If a match is found then the whole record needs to be displayed back to the user. I just cant figure out how I can tell the program to 'look in that file for the name the user typed in'
well, how do you load it into a list box? 
 Dim datatodisplay As String FileOpen(1, filename, OpenMode.Input) 'Open the file' listdisplay.Items.Clear() 'if there is anyhting in the listbox this will be cleared Do While Not EOF(1) ' if its not the end of the file then... datatodisplay = LineInput(1) 'the data to display is what was input listdisplay.Items.Add(datatodisplay) 'add the previously defined datatodisplay to the listbox Loop FileClose(1) 'close the file
how can i code 'if input-box-result = a word in one of the file entries'?
don't over complicate it. they are just strings.
sorry I'm just really new to VB and I just cant understand how to do this.
I know how to use if statements and i 'know' what i want to write its just as a said earlier how to do i write in code 'if input-box-result = a word in one of the file entries'?
do you have a code example to further illustrate this ^^^^^^^pleaseeeee
Watch out your phrasing. People in this subreddit usually think about Visual Basic (probably its .NET version), which is a full programming language used to create mainly desktop applications but also Office Add-Ins (in which case it might be called VSTO). Excel Macros are written in "Visual Basic for Applications", or VBA, which is kind of a watered-down version of VB. The syntax is basically the same, but capability-wise it is much more restricted. If you are talking about macros that you can do with your current Office installation, it's VBA. If so, you might want to go to /r/vba. If you want to write more powerful VB .NET, you need to install Visual Studio. Also, while we are on the topic, Java and Javascript are not the same.
And Zelda is the princess.
http://msdn.microsoft.com/en-us/library/752y8abs.aspx
Good on you for helping him without giving him the answer
I'm still unsure of how to write that little snippet of code. I must be missing something incredibly simple here. I know how im going to use my IF statement but I can't grasp how to code 'look for this word stored in the file' in the statement!!
I see. I'm afraid I'm doing this for a school project and don't have access to the code right now. I can get it for you tomorrow though. I only bring this up cause I do need an answer pretty soon. Just be patient with me.
well an if statement compares 2 values. In your case strings. You know how to to use a loop. loop through the values in the list box and do a compare something like this if listbox.text = "My Value" then msgbox("I found my value!") end if This is simplified a bit. but do you get the syntax? 
ok, but what does 'look for this word stored in the file' mean? how would you tell a 1st grade to do it? are you looking for some super simple to use shortcut? there isn't one. read the file lines into a string, compare the values. that's it.
yep i get that bit. How would I therefore assign the "My Value" bit to a string in my file?
And Frankenstein refers to the doctor, not the monster.
Hey, your input has been very helpful. A few more questions: If I want to create a new csv file, how do I do that? After some googling I find things that say to use stuff like "Open FileName For Output As #1" or "WriteAllLines()" but I cant seem to get any of them to work. If I want to append to an already existing csv file is there an easy way to do that or do I have to load the existing file into an array and re save that array?
Go with WriteAllLines. You probably can't get it to work because by default it requires the full namespace path. IO.File.WriteAllLines(Path, Data()) If you add System.IO as a Reference/NameSpace it'll make a lot of things easier such as: File.Exists(Path) File.ReadAllLines(Path) Rather than IO.File.*...() You can append data, but not with File.WriteAllLines() ... to use that, you would have to do as you described... load the existing file, append data to that, then writealllines... for small files the overhead would be next to zero, but for large files you'll have to use: Using SW As New StreamWriter(Path, True) SW.WriteLine(Data) End Using Path: is a variable/string True: means append to file Data: is any number of types you can input String(), "String", Booleans, etc, etc There's other options too, FileStream, etc... but not necessary for a CSV file. You can use: File.AppendAllLines(Path, Data()) as well, but... it only accepts IEnumerable... and Streams are more efficient/faster.
And Metroid, the bounty hunter, kills aliens, not mutants.
Okay so I tried using writealllines and I am getting an error This is my code: Private Sub SaveDeck_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles SaveDeck.Click Dim Data() As String Data(0) = "zero,zero,zero" Data(1) = "one,one,one" Data(2) = "two,two,two" IO.File.WriteAllLines("C:\Users\Jacob\Documents\test1.csv", Data()) End Sub And this is my error: Error 1 Number of indices is less than the number of dimensions of the indexed array. What am I doing wrong?
I started from scratch again using. Group boxes buttons and some other type of button. I made every question on each from and I made a button to click next and close Window. And it works now 
You didn't specify a size/length Dim Data(**2**) As String Sorry for the delay on such a simple answer... I was VB-ing myself.
No problem on the delay, you are such a big help. I dimensioned the array and I am still getting the same error, but it is highlighting the "Data()" in the WriteAllLines function. I tried specifying a index in that line, making it: IO.File.WriteAllLines("C:\Users\Jacob\Documents\test1.csv", Data(2)) even though this doesn't make sense because I would only be writing the third string in the array. It got rid of that error, but adds a warning: Warning 1 Runtime errors might occur when converting 'String' to 'System.Collections.Generic.IEnumerable(Of String)'. Since it is only a warning, I was still able to run the program and when I hit the button I got this error: Unable to cast object of type 'System.String' to type 'System.Collections.Generic.IEnumerable`1[System.String]'. I am not familiar enough with the VB language to know what this means. Obviously it wants to convert the string to a IEnumerable, but I don't know what that is or why it doesnt accept a string. Thanks again for all your help.
Right ok, makes sense - like I said I'm new to VB and reddit so just trying to find my way around ;) thanks for your suggestion and help /u/mecartistronico.
ok need some reference, is this a database application or are you going to store values in a text file or just hard code them into your program? 
For WriteAllLines() you don't need to specify the length. Dim Data(2) As String Data(0) = "0" Data(1) = "1" Data(2) = "2" IO.File.WriteAllLines("C:\...csv", Data) No index, and no () on Data. IEnumerable means an indexed Array, which is what Data(2) is, or just Data when referencing it. Data() is an empty array, the same as saying String()... it's a type more than a value. Data(0) is a String... which can't be converted into an array, inless you do it yourself like Data(0).ToCharArray which would ("A", "B", "C")...etc... not words. Or Specify it like: IO.File.WriteAllLines("C:\...csv", New String() {Data(0)}) Which would be a string array with one item equal to Data(0). I know I used Data() in my examples, but I intended that to show the value type, rather than actual code. To write just a string, you'd have to use: IO.File.WriteAllText("C:\...csv", Data(0)).
Tell me exactly how you're trying to pass the string. It should be as simple as call FunctionName(stringName) public sub FunctionName(ByVal sName as string)
Thanks for your response. Basically I have a sub (ShowStats) which is used to create the basis for the output, gathering data from a series of functions. According to the task I then need to pass the string to a sub (DisplayOutput) which is called through a button event. What I thought I could do was in the button code write Call DisplayOutput(ShowStats()) Then in display output the code would be Private Sub DisplayOutput(ByVal vOutput as String) lblOutput.Text = vOutput However this returns the error "Expression does not produce a value" Thanks.
No, that wouldn't really work as far as I'm aware. Even if it knew how to interpret that function call you don't have a definition for DisplayOutput that matches the function call. You're actually over-complicating the idea. All you have to do is get rid of your argument/parameters for DisplayOutput and instead of lblOutput.Text=vOutput you could have lblOutput.Text=ShowStats() There *may* be a way to do it the way you're trying to, but it's probably more trouble than it's worth if you're just trying to get it to work. Neat idea for some research, though!
I wish I could do that haha. The task that we were given told us that we need to make a parameter to pass the string which is incredibly annoying. Thanks for your help anyway.
The following should work just fine: Private SUb DisplayOutput(OutPut as string) lblOutput.text = output End Sub Otherwise, I'd post your exact code for us. 
There's no reason why displayOutput(showStats) wouldn't work as long as showStats() returns a string. Maybe pastebin your code so we can see what went wrong?
Your Sub ShowStats needs to be a function. Function ShowStats(...parameters here if needed...) as String '...calculate your stats here Return strResults End That way, ShowStats "produces a value" and you can then use it exactly like you thought you could.
It does... the commands take nanoseconds to complete, however they basically pump a list full of file copy commands into an array and the OS iterates through that. You'd have to do it manually if you want control over sequence, MSDN has a decent [example](http://msdn.microsoft.com/en-us/library/bb762914\(v=vs.110\).aspx) But by default it will be very similar to the method you used, the command "copy" fires instantly and goes on to the next regardless of completion until it hits an OS limit on number of concurrent copies. So you might have to do something like (basing it on their example): For Each file In files Dim temppath As String = Path.Combine(destDirName, file.Name) Dim tFile As FileInfo = file.CopyTo(temppath, True) Dim tSize As Long = file.Length While tFile.Length &lt; tSize Application.DoEvents() ' This can be heavy, only use if needed ' Or Threading.Thread.Sleep(33) ' 33 milliseconds, 30FPS, just give it a breath. ' Then tFile.Refresh() ' To update current file size/length Loop Next Basically wait until the new file's size is equal to the source file size. Error catch at your own discretion.
 Public Class Company Public Employees As New List(Of Employee) Public Class Employees Public phone As String End Class End Class Public Class MainApp Private Companies As New List(Of Company) End Class Excluding stuff like how to create (Sub New, etc) companies, and employees, and the rest of the code. you can access it as you like: Companies(5).Employees(7).phone Companies.Add(New Company(...)) Companies(5).Employees.Add(New Employee(...)) If this will be dealing with many companies/employees, a Dictionary might be better. Public Companies As New Dictionary(Of String, Company) Then you can access things by Key... Companies("Company Name").Employees...etc ^Edit: ^removed ^a ^redundant ^"of"
first a technicality: they arne't using the same ID, they are using the same form field name. neither have an ID, so GetElementById really should fail, or do something different in different browsers. in the HTML DOM, you'd refer to the 2nd one using the forms array, something like: document.forms[1].username (probably not the right syntax, exactly) 
 Dim WForms As HtmlElementCollection = Browser.Document.GetElementsByTagName("form") WForms(0).GetElementsByName("username").? = ? ' First TextBox WForms(1).GetElementsByName("username").? = ? ' Second TextBox If you look at this, you should be able to simplify it more: Dim TBoxUNs As HtmlElementCollection = Browser.Document.GetElementsByName("username") TBoxUNs(0).? = ? ' First TBoxUNs(1).? = ? ' Second
Thanks for your response. I only just got up so ill post the code now. Private Sub btnStatistics_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnStatistics.Click Call DisplayOutput(ShowStats()) End Sub Private Sub DisplayOutput(ByVal vOutput As String) lblOutput.Text = vOutput End Sub Private Sub ShowStats() Dim vOutput as String vOutput = "Statistics" &amp; vbNewLine &amp; "Count Scores: " &amp; CountScores() &amp; vbNewLine &amp; "Sum Scores: " &amp; SumScores() &amp; vbNewLine &amp; "Average Score is: " &amp; AvgScores() End Sub
Thanks for your response. Ill post the code below: Private Sub btnStatistics_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnStatistics.Click Call DisplayOutput(ShowStats()) End Sub Private Sub DisplayOutput(ByVal vOutput As String) lblOutput.Text = vOutput End Sub Private Sub ShowStats() vOutput = "Statistics" &amp; vbNewLine &amp; "Count Scores: " &amp; CountScores() &amp; vbNewLine &amp; "Sum Scores: " &amp; SumScores() &amp; vbNewLine &amp; "Average Score is: " &amp; AvgScores() End Sub
Yeah... you're trying to use two different Subs for the same thing: Public Sub moveTank(ByVal p1 As GamePiece, ByVal p2 As GamePiece) Vs. Private Sub moveTank(sender As Object, e As EventArgs) Handles moveTimer.Tick You can't merge them, because the first one has 2 game objects, the second has an object and event args. Each time moveTimer.Ticks... it's trying to convert itself into a GamePiece, and then it's trying to convert EventArgs into a GamePiece... both failing. Split them. Public Sub moveTank(ByVal p1 As GamePiece, ByVal p2 As GamePiece) ' Code End Sub Private Sub moveTimer_Tick(sender As Object, e As EventArgs) Handles moveTimer.Tick moveTank(Player1, Player2) ' or whatever objects you are passing. End Sub Edit: by the way, from what you describe you were doing: Public Class GameObject Public Player1 As BlueTank End Class Public Class BlueTank Inherits GameObject End Class Basically this is an infinite loop/recursion (depending on how you are get/setting) that's why it doesn't work... Because BlueTank inherits/implements GameObject, but GameObject includes a BlueTank... repeat.
Ah, I see the problem. You're misunderstanding the syntax! ShowStats needs to be declared a function, not a sub, and has to return a string. Like so: Private Function ShowStats() as String Dim vOutput as String vOutput = "Statistics" &amp; vbNewLine &amp; "Count Scores: " &amp; CountScores() &amp; vbNewLine &amp; "Sum Scores: " &amp; SumScores() &amp; vbNewLine &amp; "Average Score is: " &amp; AvgScores() Return vOutput End Sub 
I think the task sheet is just wrong in the situation in telling me to use a sub procedure. As like you said, I see no way of doing this without using a function and when I do use a function it works perfectly. Thanks.
i just did? it's not that complex, "forms" is an array of the forms on the page, that's it.
[documentation](http://msdn.microsoft.com/en-us/library/system.windows.forms.htmldocument.forms\(v=vs.110\).aspx)
Thank you so much!
Thanks but I ran into an error. Error 1 'GetElementsByName' is not a member of 'System.Windows.Forms.HtmlDocument'. 
Fixed it! Anyone with the same issue, just make sure your connection has this: " &amp; Application.StartupPath &amp; "\Database.mdb;" And then put your database into the release and debug folders, build the application, and create an installation file using InnoSetup with the Release folder.
You can also create and AppData folder, and include the database in your project itself. You just have to make sure that is included when you publish.
&gt;Is this just a bug in visual basic? Nope, you've got something wrong. Of course we can't help without knowing more about your setup (ie, what database, are you using typed objects?, connectionstrings, etc...) Code usually helps too.
This is my choice, since Application.StartupPath could be inside the Program Files folder, newer OS restrictions might require permissions to be able to Write to the database inside that folder.
A pretty poor teacher if s/he isn't going to tell you what you have done wrong and how to fix it. #1 You are looping while the sum = -1 I assume you want to loop until the user enters -1. Instead of Sum = -1 use Sum &lt;&gt; -1 This appears to be the same on the 2nd question you are saying do this while this equals instead of when it doesn't equal. Here is what I would recommend on assignments like this. Actually write them in the development environment and run them and make sure they work as you expect. You can also use the debugger to understand why they aren't working like you expect. Hope this helps.
&gt; Write a Do While loop that will loop until the user enters -1 I don't see you prompting the user for input... so how will "sum" ever get -1? what's "statement"? what you're doing wrong is not fulfilling the requirements of the assignment. if it says you need user input, you have to get user input somehow.
As much as I don't support giving code, I think that you could learn from this and if your teacher is not willing to teach you then someone has to. Visual Studio 2012, VB.net code: Module Module1 Sub Main() 'Write a Do While loop that will loop until the user enters -1. Console.WriteLine("-1 Loop") Dim input1 As String Do While input1 &lt;&gt; "-1" Console.Write("I am looping!" &amp; vbCrLf &amp; "Please input a value: ") input1 = Console.ReadLine Loop 'Write a Do...Loop While that will loop until the user enters “Stop”. Console.WriteLine("Stop Loop") Dim input2 As String Do While input2 &lt;&gt; "Stop" Console.Write("I am looping!" &amp; vbCrLf &amp; "Please input a value: ") input2 = Console.ReadLine Loop 'Write a Do While loop that will loop until the intNum is 10 when intNum starts at 1. Console.WriteLine("intNum Loop") Dim intNum1 As Integer = 1 Do While intNum1 &lt;= 10 Console.WriteLine("intNum is equal to: " &amp; intNum1) intNum1 += 1 Loop Console.ReadLine() 'Write a Do. Loop While loop that will loop until the intNum is 10 when intNum starts at 1. Console.WriteLine("intNum Loop") Dim intNum2 As Integer = 1 Do Console.WriteLine("intNum is equal to: " &amp; intNum2) intNum2 += 1 Loop While intNum2 &lt;= 10 Console.ReadLine() End Sub End Module 
What does your imports look like: I'm sure it's something like Imports Word = Microsoft.Office.Interop.Word So here is what I think is happening even though the compiler should have been able to figure this out. It's better to not use the same name for each. Word in this case is the NameSpace but then you also define word as an Application. Try changing to Dim wordApp as New Word.Application Office = Word.Documents.Open(FilePicker.FileName) I'm betting you'll see a difference. EDIT: Actually, after looking at this, it appears you need to set WordApp.Visible = True Also, don't forget to use WordApp.Quit. I'm assuming you have that handled somewhere else in the code.
I was looking for a method of printing a document programmatically, the code I'm using: Private Sub Print_Click(sender As Object, e As EventArgs) Handles Print.Click Log.AppendText(FilePicker.FileName) Dim office As New Word.Document Dim wordApp As New Word.Application wordApp.Visible = True office = wordApp.Documents.Open(FilePicker.FileName) office.PrintOut() End Sub My code there opens it in Microsoft word then attempts to print it, is there no easy way to print without opening it?
for audio, you need to either a system sound call, or some audio player object what's "sync" means? use a timer... this one is harder. if you just want to restart, simply Shell() it right before ending. this assumes you've done nothing to prevent multiple copies from running. if you want to update the exe or something, have the app write out a batch files that waits, then copies the exe, then runs it., and hell that right before end.
as opposed to using buttons, using arrow keys
that's really not any more clear. you can use keypress events to detect arrow keys... 
I think I got it working, thanks!
Alright well then you might want to edit your post just saying: &gt; Edit: I fixed the problem. This is the solution: &gt; soultion here Note: the solution would be to help people in the future who have the same problems.
To add on to /u/JakDrako: - remember to put all your radio buttons in a single panel or they won't work as you may expect - remember to convert the numbers that are being displayed to integer, otherwise they may not work as you expect. 
1. There's no easy way, look into the WMP COM controls, or API. If you can use WAV files, then just use: Dim Player As Media.SoundPlayer("Path.wav") 2. Sub PictureBox_KeyUp(...) ... Select Case e.KeyCode Case Keys.Left PictureBox.Left -= 10 Case Keys.Right PictureBox.Left += 10 Case Keys.Up Case Keys.Down End Select End Sub 3. Private Sub StopTimer() Timer.Enabled = False MsgBox("Stopped") End Sub 4. Application.Restart() ... or: Shell() this depends on a few things whether or not it will work like Chrwei mentioned. Optionally, if you disable Application Framework, and make your start-up Sub Main()... you can handle the Parent form yourself... when your parent form closes, it returns processing to Sub Main() where you can either let the application close, or... create a new Parent form, and display it. This is somewhat involved but not that complicated.
That kind of depends on you... you *might* want to keep the buttons (at least optionally) if other people are going to be using it, since some people will prefer using just the mouse over the keyboard. Otherwise, you have 2 options for where to put the code: Private Sub PictureBox1_KeyUp(sender As Object, e As KeyEventArgs) Handles PictureBox1.KeyUp However, this will only happen when the PictureBox has focus, which requires the user to click on it. Or In the Form properties, enable: Form.KeyPreview = True ... then: Private Sub Form_KeyUp(sender As Object, e As KeyEventArgs) Handles Me.KeyUp Which will fire/run whenever a key is pressed as long as the form has focus, regardless of the active control. There's other options too, but these are the most obvious/easy.
Interesting! Okay, so making the active control it's own variable I can pinpoint what I want to change? I have some mid-terms this week but I'm going to mess around with it after Mothers Day. Thank you so much for taking the time to respond. Let me see what I can come up with using your idea and i'll post how it went. 
I second this. Also, go to google and type MSDN Dim or MSDN TryParse The documentation is there with an explanation of what each does and most times some samples.
Well, if you *know* what you want to change, you don't need to piss around with what control is active. Public Module Modulosity Public FrmChild As FormMySpecialForm End Module Public Class FormMySpecialForm Public MyVariable As String = "Hello" Public Sub New() FrmChild = Me End Sub ' Add controls, like: TextBoxFoobar etc. End Class Public Class FormMain Public Sub DoSomethingWithChild() FrmChild.TextBoxFoobar.Text = FrmChild.MyVariable End Sub End Class That way all controls, properties, variables, subs, functions, etc of "FrmChild" which is of type "FormMySpecialForm"... is accessible from "FormMain" at any given moment. Like I mentioned you can do it on a per-case basis too: Dim FrmChild As FormMySpecialForm = DirectCast(Me.ActiveMdiChild, FormMySpecialForm) FrmChild.TextBoxFoobar = FrmChild.MyVariable This can cause problems if you have multiple MDI Children that are of differing Form types though, in which case you need to do testing... If TypeOf Me.ActiveMdiChild Is FormMySpecialForm Then DirectCast(Me.ActiveMdiChild, FormMySpecialForm).TextBoxFoobar.Text = "What's Up?" ElseIf TypeOf Me.ActiveMdiChild Is FormSomeOtherForm Then 'Do something with that form. End If
 Sub Send_As_Mail_Attachment() ' Send the document as an attachment ' in an Outlook Email message Dim bStarted As Boolean Dim oOutlookApp As Object Dim oItem As Object On Error Resume Next 'Prompt the user to save the document ActiveDocument.Save 'Get Outlook if it's running Set oOutlookApp = GetObject(, "Outlook.Application") 'Outlook wasn't running, start it from code If Err &lt;&gt; 0 Then Set oOutlookApp = CreateObject("Outlook.Application") bStarted = True End If 'Create a new mailitem Set oItem = oOutlookApp.CreateItem(0) With oItem .to = "" .Subject = "Computer Access Request for " .Attachments.Add ActiveDocument.FullName .Display 'Optionally change to .Send End With 'Clean up Set oItem = Nothing Set oOutlookApp = Nothing End Sub &lt;Reformatted for easy reading&gt; I think all you really need to do is append the Fullname to the subject string .Subject = "Computer Access Request for " &amp; ActiveDocument.FullName 
This appears to be .NET (my answers would change slightly for VB6, but not much): As an owner (that writes code every day), the first two issues represent a lack of understanding of basic software development, and would not be allowed in my shop (and I'm an old VB6 guy, so I understand where they came from, and why they were used back in the day). On Error should be gone, completely, and should be replaced with a Try Catch. This should be a company wide rule, and should have penalties for ignoring it. Even in VB6 On Error should have gone into a proper error handler / logging mechanism not just a Resume Next (I don't have anything against resume, if it's thought out and handled properly). GoTo should be gone, and the sub should rewritten with proper logical branching or by breaking the sub apart. This is a much more serious issue as it dramatically impacts code readability, along with the obvious bugs that it will create at some point (if not here then somewhere else). Exit Sub is a bit less serious IMO, but coupled with the GoTo it creates more readability / logic flow issues. It also does nothing in this particular bit of code leading me to believe that the author doesn't understand it's purpose (there are actually a couple of variables here that seem to be pointless, so maybe there is some code missing). Outside of that, I'm not as hung op on the rest. I personally dislike the Hungarian Notation, but naming conventions should conform to the coding standards that are established by the company, and are more about readability that anything else. IMO, this really seems to be a red flag for two much more serious issues: No written standards, and no one following up to ensure that the standards are being followed (via code reviews, etc). You shouldn't need to shame him into conforming (which will probably create more problems), there should be a written set of guidelines that allow developers to use their own unique style to solve problems, while maintaining well defined standards, and there should be penalties for consistently not following those standards. 
1. On Error... Should be Try, although neither seems necessary. 2. *.xyz And .xyz* should be *AndAlso*, but that's basically just performance reasons. 3. GoTo 4. Confusing as shit to read. #... Private Sub xyz_Step2_CheckPackageDeductions() Select Case xyz_CheckPackageDeductions() ' check if service has enough remaining units Case cDeductions_True, cDeductions_False ' does not have enough units ' seems to happen either way? xyz_Step3_CheckPackageSurcharges(gGlobalVariables.xyz_NeedPrice AndAlso xyz_CheckifPackageHasaNeedPrice()) Case cDeductions_Borrow ' has borrow available Room_ShowRoomOptions(fSelectedRoom, cScreens.xyz_Borrow) Case Else '? End Select End Sub Or if there are only those 3 options for CheckDeductions() then: Private Sub xyz_Step2_CheckPackageDeductions() If xyz_CheckPackageDeductions() = cDeductions_Borrow Then Room_ShowRoomOptions(fSelectedRoom, cScreens.xyz_Borrow) Else xyz_Step3_CheckPackageSurcharges(gGlobalVariables.xyz_NeedPrice AndAlso xyz_CheckifPackageHasaNeedPrice()) End If End Sub
Can it access PicArray? If your For/Loop is somewhere outside of the Sub/Func that PicArray() was created in, it might not 'exist' so it's treating it as just an empty array. if PicArray() doesn't have 107144 items... then it will find empty items in that loop, which is an "*Object Reference Not Set To An Instance Of An Object*" error, depending on your VB settings, it might not be displaying that error though. Otherwise, I don't get any (IDE) errors for similar code (obviously this could would fail at runtime). Private Sub Foo() Dim PicArray(107143) As System.Windows.Forms.PictureBox If Me.Bounds.IntersectsWith(PicArray(0).Bounds) Then End If End Sub
use a timer?
I tried.
This is my code: Public Class Startup Private Sub Timer1_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Timer1.Tick End Sub Private Sub Startup_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load Dim t As Timer = New Timer() t.Interval = 10000 AddHandler t.Tick, AddressOf HandleTimerTick t.Start() End Sub Private Sub HandleTimerTick() Me.Visible = False Form1.Visible = True End Sub End Class The Result is that every 10 seconds Form 1 opens again. How can I make the timer stop when this is done?
.Net?... Use a Splash Screen (Application properties), it will create one for you. it's actually just a normal form with a few settings changed for you, but... ? ^Edit: ^missing ^'p'
you need to stop the timer in your HandleTimerTick() or it'll just keep ticking. also, I'd unload form1 instead of just hiding it, no need to keep it around in ram if you're not going to display it again
How do you stop the timer? That's the code I don't know. Also how do you unload a form?
 Friend WithEvents Tmr As New Timer() Private Sub Startup_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load Tmr.Interval = 10000 Tmr.Start() End Sub Private Sub HandleTimerTick() Handles Tmr.Tick Me.Visible = False Form1.Visible = True Tmr.Enabled = False End Sub **Or**: Private Delegate Sub Swapper Private Sub Startup_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load Dim Thd As New Threading.Thread(AddressOf Swap) Thd.Start() End Sub Private Sub Swap() If Me.InvokeRequired Then Me.Invoke(New Swapper(AddressOf Swap)) Else Threading.Thread.Sleep(10000) Me.Visible = False Form1.Visible = True End If End Sub **Or** Just Private Sub Startup_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load Application.DoEvents() ' To draw the form, etc Threading.Thread.Sleep(10000) Me.Visible = False Form1.Visible = True End Sub
first you'd need it to be defined form level, then t.stop. Me.close. this might kill the timer too, but maybe not.
Thanks! Got it working. EDIT: Just realised I actually need 2 splash screens and there's no option for that. There's also not a setting to change how long it's there for.
What do you mean defined form level? Like dim t as timer?
This code in your ApplicationEvents will let you modify the amount of time the splash screen is visible. Partial Friend Class MyApplication Protected Overrides Function OnInitialize(ByVal commandLineArgs As System.Collections.ObjectModel.ReadOnlyCollection(Of String)) As Boolean Me.MinimumSplashScreenDisplayTime = 5000 Return MyBase.OnInitialize(commandLineArgs) End Function End Class
Is it possible to add another splashscreen? One after this?
In your SplashScreen code, set it to load the second splash screen, using a timer, have it close the 2nd splash screen and show your main form.
It's kind of an ugly way to do it to start with, but: Me.Show() Application.DoEvents() The best way to do all this would likely be in Sub Main(), which requires you to disable Application Framework (among learning a bunch of other stuff) Excluding doing that, you could do: In your main form, the "Game" form: Private Sub MainForm_Load(...) ... Dim Splash As New FormSplash Splash.Show() ' Setup anything else you might need to before the main form shows. ' Depending on what else is on the form, you might have to use: Me.Hide() While Splash IsNot Nothing ' This will loop till Splash closes Application.DoEvents() End While ' if you used Me.Hide(), then put Me.Show() here. End Sub ... Class FormSplash Private WithEvents CloseTimer As New Timer() Sub FormSplash_Load(...) ... ' Setup any stuff here, like background image, position, "fade" the form in, etc. CloseTimer.Interval = 10000 CloseTimer.Start() End Sub Private Sub CloseTimer_Tick(...) Handles CloseTimer.Tick CloseTimer.Stop() ' Just to make sure Me.Close() End Sub End Class Edit: you can also do: Splash.ShowDialog(Me) Which will stop processing on your Main form till Splash closes, so you don't need to use the While/Loop
You have to do that yourself... timer, Thread.Sleep(), etc... then Me.Close()
Is that up to date code, or is that just... *bad*? My rewrite: Private Sub xyz_Step2_CheckPackageDeductions() Dim mDeductionStep As Integer Dim mNeedPriceFlag As Boolean = False Try mDeductionStep = xyz_CheckPackageDeductions() If mDeductionStep IsNot Nothing Then Select Case mDeductions Case cDeductions_False If gGlobalVariables.xyz_NeedPrice AndAlso xyz_CheckifPackageHasaNeedPrice() Then mNeedPriceFlag = True xyz_Step3_CheckPackageSurcharges(mNeedPriceFlag) End If Case cDeductions_Borrow Room_ShowRoomOptions(fSelectedRoom, cScreens.xyz_Borrow) Case cDeductions_True xyz_Step3_CheckPackageSurcharges(mNeedPriceFlag) End Select End If Catch ex as Exception msgbox "yer codes' busted" End Try End Sub Alternatively,, Private Sub xyz_Step2_CheckPackageDeductions() Dim mDeductionStep As Integer Dim mNeedPriceFlag As Boolean = False Try mDeductionStep = xyz_CheckPackageDeductions() If mDeductions=cDeductions_False AndAlso _ gGlobalVariables.xyz_NeedPrice AndAlso _ xyz_CheckifPackageHasaNeedPrice() OrElse _ ( mDeductions=cDeductions_True) Then xyz_Step3_CheckPackageSurcharges(mNeedPriceFlag) End If If gGlobalVariables.xyz_NeedPrice And xyz_CheckifPackageHasaNeedPrice() Then mNeedPriceFlag = True End If If mDeductions=cDeductions_True Then Room_ShowRoomOptions(fSelectedRoom, cScreens.xyz_Borrow) End If Catch ex as Exception msgbox "yer codes' busted" End Try End Sub
Been a while since I looked at the filestream object, but the fileshare.readwrite might be a clue. Is there another option there that isn't readwrite? Write = lock.
Alright, I did some research and remembered something. I think Excel / Word both complain if they can't lock the file for read/write, and that may be what's happening here. You might also try calling stream.dispose(). I would also rename the object, stream as stream is pretty clear but something like Mystream as stream would be better. Then you can be sure that you're calling something based on your object and not it's object type.
The *Using* statement automatically calls *.Dispose() Using X As Y() End Using '&lt;-- calls *.Dispose() If you put *X.Dispose()* before *End Using* there's a (very small) chance you'll get Object Reference error if GC happens to run in that nanosecond. I'm unable to replicate OP's error, but I also use it differently (which *shouldn't* matter?) Using SR As New StreamReader(New FileStream("", .Open, .Read, .ReadWrite, ###)) End Using Which disposes both the file stream, and the reader stream. OP might be able to do it more directly: Using FS As New FileStream(...) ' use FS then FS.Unlock(x,y) ' or FS.SafeFileHandle.SetHandleAsInvalid() End Using
PicArray(x).Bounds is what I have. Still isn't working for some reason.
what i did was opened up the page waited for it to load then jump to a spot, wait, then display the browser
I'm not entirely sure, but if you print out the objMO("Caption") value that should give you an idea
 open "scorefile.txt" for input as #1 line input #1,Score$ close #1 msgbox "High score is " &amp; Score$ &amp; "!" if you need to make it a number that you can do maths on, simply wrap CInt(), CLng(), CDbl(), etc around it!
 Search on msdn for basic file input output. It's very simple truth be told. It's more effort to post here than Google it.
You need to restructure the whole thing. At the moment double-letters don't work because as soon as it finds the first one, it's valid... it has no way of knowing if a letter has been valid before. HELLO "L" becomes valid: ElseIf TextBox1.Text = letter3 Then If they guess "L" again, then it again is "valid" for the third position, it never gets to checking the fourth position/second L. There's numerous solutions to this, but you need to keep track of previous guessed/validated characters. Private WordChars As Char() Private ValidChars As New List(Of Boolean) Sub ChangeCurrentWord(ByVal NewWord As String) WordChars = NewWord.ToCharArray ValidChars.Clear() For i As Integer = 0 To WordChars.Length - 1 ValidChars.Add(False) Next End Sub Sub TextChanged() For i As Integer = 0 To WordChars.Length - 1 If WordChars(i) = TextBox1.Text AndAlso Not ValidChars(i) Then ValidChars(i) = True Rightguesses += 1 Exit For End If Next Label4.Text = Rightguesses.ToString End Sub You could simplify this even more, but... that's *one* way.
If you're only keeping one high score, you don't need to write more than 1 score to the document. You can simply read the current highscore and just overwrite it if the new score is higher. If you're keeping a list of scores, then reading them to a list and sorting the list will give your the highest score at one of the ends (depending on whether you sort by ascending order or descending...) To accomplish that, you need to read the file (check out "streamreader") get it into a list (check out "split" and ".tolist") then sort it. A list has a ".sort" method... Another way would be to assign a temporary "maxscore" variable, and then read the scores one by one, updating "maxscore" if you read a score that higher than the current value. Once you're done, "maxscore" is your current high score. 
i know where the string is i just dont know what is contains
Do you want to look at say the tenth through twentieth characters in the string? Try Substring. http://msdn.microsoft.com/en-us/library/system.string.substring(v=vs.110).aspx
By "simplify" I actually meant more complex, but a smaller amount of code. It's not quite as easy as just replacing variables. However, if you chose to replicate my example, "letter1" through "letter20" would be replaced with "WordChars". Private WordChars As Char() = NewWord.ToCharArray That's the same as your 20 variables. WordChars(0) ... is the same as letter1 WordChars(1) ... is the same as letter2 etc. it's going through each character of the current word, and comparing it to the value in TextBox1.
Can you update with more detail of your problem, and some code so we can see what you are thinking?
Yeah NewWord is the same as Word For i As Integer = 0 To WordChars.Length - 1 Means... it counts from the beginning to the end of the length of the word, in chars... HELLO 01234 WordChars(0) = H WordChars(1) = E Its the same as letter1, letter2, etc... except they are all held in an array. *.Length - 1 Because it's a zero-based index.
You'd have to show more code before I would be able to answer that. For what it's worth though, when doing any major structural changes, never delete until it's been fully tested, just comment out the old code.
 Dim SearchWithinThis As String = "ABCDEFGHIJKLMNOP" Dim SearchForThis As String = "DEF" Dim FirstCharacter As Integer = SearchWithinThis.IndexOf(SearchForThis) Returns -1 if not there, else returns first character position in the string.
It holds an array of booleans, which represents whether or not that character has been guessed before and if it was valid. HELLO 01234 FFFFF &lt;- ValidChars default... False, False, False, False, False If I guess "L", then ValidChars ends up looking like: FFTFF If I guess "L" again, then when it goes through the word char by char, it knows that the first "L" has been guessed, and has already been matched before, so it skips it and ValidChars becomes: FFTTF Once all values of ValidChar are: TTTTT Then they "win".
Sounds cool, if you are looking for a unique ID then this could be useful. [Previous Comment](http://www.reddit.com/r/visualbasic/comments/1z1zdl/weekly_discussion_28_02_14/cfrhs1d) After my exams, around a months time I would be interested in helping with this.
 Dim request As System.Net.HttpWebRequest = System.Net.HttpWebRequest.Create("http://www.sportsbookreview.com/betting-odds/") Dim response As System.Net.HttpWebResponse = request.GetResponse Dim sr As System.IO.StreamReader = New System.IO.StreamReader(response.GetResponseStream()) Dim inputtext As String = sr.ReadToEnd TextBox1.Text = inputtext 
Unless you show the code you have, I don't know what's going on.
Ok, so what text is it that you want to "pick out"? 
Wow thanks. Good luck with your exams btw. :)
 Date.Parse("Text") The problem is it has to be a "[known](http://msdn.microsoft.com/en-us/library/8kb3ddd4\(v=vs.110\).aspx)" format: mm/dd/yyyy yyyy/mm/dd likewise for time: hh:mm:ss tt Dim NewData As Date = Date.Parse(TextBoxDate.Text &amp; " " &amp; TextBoxTime.Text) Or you could skip it and use the DateTimePicker control, but it's ugly as ~~f**k~~.
Yeah, I'm familiar with using statements, but his situation was strange enough that maybe something wasn't getting handled. Great suggestions though. I always reply fully expecting someone else to know a much better way of doing things.
Have a look at the DateTimeOffset structure: (sorry for the wonky formatting, LINQPad does not autoformat VB...) Sub Main dim dat as datetimeoffset = date.now ' current time console.write(dat) console.write(dat.offset) dat = dat.ToOffset(new timespan(-2,-15,0)) ' make the offset -2h15 instead of -4h00 console.write(dat) console.write(dat.offset) End Sub This prints out: 2014-05-12 13:56:15 -04:00 -04:00:00 2014-05-12 15:41:15 -02:15 -02:15:00 As you can see, while my local time is normally at UTC -4:00, once I set the offset to UTC -2:15, the DateTimeOffset structure gives me the "altered" time. Just make sure your code uses DateTimeOffset instead of the normal DateTime and you should be set. (Or "offset" haha). 
string concatenation. "foo " &amp; bar 
nothing in particular
http://msdn.microsoft.com/en-us/library/wfx50zyk.aspx
 h=h+1 a=inputbox("insert value for thing number " &amp; h) 
But ValidChars doesn't?... 
My interpretation (without changing too much): Private Tick As Integer Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click If Integer.TryParse(TextBox1.Text, Tick) Then TextBox1.ReadOnly = True Timer1.Start() End If End Sub Private Sub Timer1_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Timer1.Tick Tick -= 1 TextBox1.Text = Tick.ToString If Tick &lt;= 0 Then Me.Hide() Try Dim screensize As Size = My.Computer.Screen.Bounds.Size Dim screengrab As New Bitmap(screensize.Width, screensize.Height) Dim g As System.Drawing.Graphics = System.Drawing.Graphics.FromImage(screengrab) g.CopyFromScreen(New Point(0, 0), New Point(0, 0), screensize) screengrab.Save("snap.jpg", Imaging.ImageFormat.Jpeg) Process.Start("snap.jpg") Me.Close() Catch ex As Exception TextBox1.ReadOnly = False Timer1.Stop() Me.Show() End Try End If End Sub Provides adequate error handling for the purpose, doesn't use unecessary variables and conversions, and saves the image as a JPG, rather than a PNG with a JPG extension.
Don't worry. Most developers have trouble with dates. They rarely get any
Ayooo :)
Have you recompiled ? I know that the objects won't appear as an option until they have been compiled. 
is that really a 1 as in FirstFacts abbreviated to 1stFacts? I don't think names can start with numbers. Are you sure you didn't misread the name lstFacts (as in ListboxFacts as one would typically do to denote it is a listbox object)?
There's [this](https://code.google.com/p/firefox-cache-forensics/wiki/FfCacheRead#Firefox_Cache_General_Description) and also [this](https://code.google.com/p/firefox-cache-forensics/wiki/FfFormat) so it appears doable but I've never messed with it.
[Hmm](https://www.google.com/search?q=firefox+parse+_CACHE_001_) found a bunch of header/format stuff, a few pre-made tools, etc... a couple of those pages have "Resource" links in them too with even more stuff. Besides... just download the source, after a bit of hunting you should be able to find what you need.
Wow reminders of when I fell victim to list box naming... can't remember what I was doing, but can confirm having mistaken the two haha.
Wow, I noticed that this was actually my mistake that I have made. I changed them all to lstFact - but Visual Basic still says that lstFact is not declard ...
Click on the listbox on your form and look at the Name property. Does it show lstFact? If not, change the name to lstFact.
Works like a charm thank you so much! 
Y = Y * 10 ?... you're going to have to be a bit more specific, what "Chart", is this VB, or MS Office/VBA?... is it PowerPoint, Excel... is it ASP, or WinForms, etc. Whats the control you are using, what does the data coming in look like, etc.
I'm using the VB2010 Chart class and the Chart control. The data coming in is a string. Let me know what else I may be leaving out; I cannot seem to get my head around how these objects work.
&gt; www.icode4u.net uses an invalid security certificate. The certificate is only valid for the following names: &gt; *.secure-secure.co.uk, secure-secure.co.uk (Error code: ssl_error_bad_cert_domain)
The relevant code would the exclusive/unique code, if all the buttons Subs look the same except for: If X = "Q" If X = "R" If X = "S" etc... Then that doesn't matter, but how the current word is picked, how it's created, split up into letters, etc would be relevant. But may as well send the whole thing, either zip it and upload, or use PasteBin or a similar site. 
 Private Sub StartGame() Number = Int(Rnd() * ListBox1.Items.Count + 1) - 1 word = ListBox1.Items(Number) Label25.Text = word End Sub You're picking from a listbox of words, however you never actually setup "wordchars" to be anything: Private Sub StartGame() Number = Int(Rnd() * ListBox1.Items.Count + 1) - 1 word = ListBox1.Items(Number) ' --- wordchars = word.ToCharArray() ' Or wordchars = word.Split() ' --- Label25.Text = word End Sub It depends on how you want to store the Chars. For instance currently you are using: Dim wordchars() As Char Which means each character, will be a Char... but you can also do: Dim wordchars As String() It largely depends on your VB settings which one would be better to use. If "X" = wordchars(0) Then "X" is a String with a single character. To do it correctly for both (ie: pick one): Dim wordchars As Char() ... If CChar("X") = wordchars(0) Then Or... Dim wordchars As String() ... If "X" = wordchars(0) Then The way you are currently comparing it... If "X" = word(0) Then Is comparing a String ("X") to a Char (word(0)) which is probably why it's not working. Since you are doing it that way, you can skip the wordchars() array...
Just another FYI on simplifying: Take an example of a button event: Private Sub M_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles M.Click M.Visible = False Label1.Text = wrongguesses For T As Integer = 0 To word.Length - 1 If "M" = word(T) Then Rightguesses = Rightguesses + 1 Foundone = True Label17.Text = Rightguesses CheckForWinning() Else wrongguesses = wrongguesses + 1 'This adds one to the number of wrong guesses' If wrongguesses &gt; 6 Then MessageBox.Show("Like Jon Snow, you know nothing.") Foundone = False End If End If Next End Sub You could actually use this same Sub for ALL button clicks by changing it to: Private Sub M_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) --&gt; Handles A.Click, B.Click, C.Click, D.Click, E.Click, F.Click, ...etc, etc, etc... --&gt; Dim Btn As Button = DirectCast(sender, Button) --&gt; Btn.Visible = False Label1.Text = wrongguesses For T As Integer = 0 To word.Length - 1 --&gt; If CChar(Btn.Name) = word(T) Then Rightguesses = Rightguesses + 1 Foundone = True Label17.Text = Rightguesses CheckForWinning() Else wrongguesses = wrongguesses + 1 'This adds one to the number of wrong guesses' If wrongguesses &gt; 6 Then MessageBox.Show("Like Jon Snow, you know nothing.") Foundone = False End If End If Next End Sub
Just for curiosity sake, you could also change this: If (Male AndAlso CurrentCustomer(3) = "M") OrElse (Not Male AndAlso CurrentCustomer(3) = "F") Then into this: If Male = CurrentCustomer(3) = "M" Then Since it's a boolean M/F... it's just a bit ambiguous as to what the line is looking for, however it would actually be faster. If you want to go the LINQ way... skip some error checking, you could change it into: Private Function GetAllTheSex(ByVal Male As Boolean, ByVal FileName As String) As String() Return IO.File.ReadAllLines(FileName).Where(Function(v) (v.Split(CChar(","))(3) = "M") = Male) End Function
Hmm, I'll look into that, the reason is so that the user can essentially add a blank timed filed in there to represent a voice over type thing. I'm gearing the program toward being used in radio stations or at least being used to plan radio program's, so the blank file is essentially a place holder for when the announcer would have voice overs. 
So does the file actually need to exist or is it just a time window that needs to exist. If they are going to record and add the announcement later, could you just leave a space for the time it is setup for and make a note of it? Give it an ID and a length and allow the user to add a name etc, customer code if you want. Then you could print out a list of adds needing to be recorded for a given period. If you want to actually create the empty space here is a program that would allow you to do it in a background thread OR you could actually record the MP3 ;) Here is the source. http://voicerecorder.codeplex.com/ 
Cheers, that really helped a lot.
You could encase the whole code within a If ActiveSheet.Name = "thenameofthesheet" Then ... End If though more information would help to give you a better answer.
The parallel/global renaming will certainly be handy. I'm curious how powerful the custom diagnostics stuff will be, it would be awesome to have auto-generated code-snippets based on previous code. Stuff like: Select Case Something ... End Select Where you might use it in more than one place, the "Fix" being to insert the list of cases... or you might forget that you already have it, real-time code-clone comparisons. I'd imagine the database of peoples "fixes" will grow rapidly and quickly surpass ReSharper etc, which is kind of sad, but... native is always nice.
Instead of using a Sub and the call operator, I would suggest using a function. A difference between a sub and a function is simple. A function returns a value. Function foo(num as integer) as integer ' This function takes a given value multiplies it by 10 and returns it. Dim RetVal as integer RetVal = num * 10 Return RetVal End Function So your code would look something like this. Private Sub btnGen_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnGen.Click Dim display As String Dim Randomgenerator As New Random intNum = Randomgenerator.Next(1, 6) lblInsult.Text = showInsult(intNum, display) End Sub Private Function showInsult(ByVal intNum As Integer, ByRef display As String) as string Dim str1, str2, str3, str4, str5 As String 'create 5 strings for the insults 'List of insults str1 = "Lets meet as little as we can." str2 = "I think he be transformed into a beast; for I can nowehere find him like a man." str3 = "I desire that we be better than strangers." str4 = "This is the silliest stuff that I have ever heard of!" str5 = "Boys,apes,braggarts,jacks,milksops!" If intNum = 1 Then display = str1 ElseIf intNum = 2 Then display = str2 ElseIf intNum = 3 Then display = str3 ElseIf intNum - 4 Then display = str4 ElseIf intNum = 5 Then display = str5 End If Return display End Sub Here is how I would have done the whole thing, note the way I stored the values to shortcut the need to do if statements. O and the way you are doing Random numbers is odd to me. so I did it the way I have for 20 years :) Private Sub BtnGen_Click(sender As System.Object, e As System.EventArgs) Handles btnGen.Click Randomize() ' This is required to get a truly random number! Dim intNum As Integer = CInt(Int((5 * Rnd()) + 1)) ' give me an integer between 1 and 5 TextBox1.Text = ShowInsult(intNum) End Sub Private Function ShowInsult(ByVal intNum As Integer) As String Dim message(5) As String ' creates 5 empty strings names Message(1) to message(5) 'List of insults ' loads strings into variables message(1) = "Lets meet as little as we can." message(2) = "I think he be transformed into a beast; for I can nowehere find him like a man." message(3) = "I desire that we be better than strangers." message(4) = "This is the silliest stuff that I have ever heard of!" message(5) = "Boys,apes,braggarts,jacks,milksops!" Return message(intNum) ' returns the variable to main sub End Function
CSV opens directly in excel as a worksheet. Do you mean you want to do something specific, like a function or calculation?
as a programmer of 20 years I would like to give you some of my hard earned wisdom. "There is no wrong solutions when programming, only different solutions" OR "If it works then its right, there are only better and easier ways to do things" It is obvious your company does not have a coding standards guideline or you could just say that this is not to company standards. The reality is you are just going to piss him off for no reason at all. The function works its not broke, now its your job to educate him how to make it better. By the way if you did this to me I would be right pissed. Now with that out of the way Get rid of "on Error Resume Next" replace with a try catch. Get rid of the GOTO and rework the if statements to flow better. Lastly why is this a sub and not a function that returns to a core function and why the hell does your app use global variables?
Thanks for the attention. Yes, I would like to process the information inside the csv file and output it as xls file.
In addition to what Bonejob said, the reason your intNum variable is inaccessible from your btnGen_click handler is because of scope. Subroutines/functions can't access local variables defined in other subroutines. You need to declare it in both of your subroutines. Edit: I'm not sure why I was downvoted. intNum is clearly not declared in his event handler. The only place it is declared is in the parameters to showInsult(), which means it is only accessible by showInsult().
 Private Insults As String() = New String() {"Lets meet...", _ "I Think...", _ "I Desire...", _ "This is...", _ "Boys, Apes..."} Private Sub BtnGen_Click(sender As System.Object, e As System.EventArgs) Handles btnGen.Click TextBox1.Text = Insults(New Random().Next(0, 5)) End Sub I know, best coding practices and whatnot... but, there's no need to complicate it. For that matter, you could just do: Private Sub BtnGen_Click(sender As System.Object, e As System.EventArgs) Handles btnGen.Click TextBox1.Text = {"Lets meet...", _ "I Think...", _ "I Desire...", _ "This is...", _ "Boys, Apes..."}(New Random().Next(0, 5)) End Sub
Thank you very much! OpenXML ia a new format, isn't it? So it would create a .xlsx, right? I think I will need to creat .xls files, so I will take a look at the OLE Automation you mentioned.
The only problem with your original code that I see is that it will fail about 2/6th of the time. This is because you're setting a random number between 1 and 6, but you only setup if statements for 5 numbers (and the 4th has an error "intNum **-** 4" is not correct ;-). Thanks for posting this! It was cool to not be able to see what was wrong at first. When using If, and ElseIf, you might want to consider always ending with an Else clause, so that you know no matter what input comes, at least one output will happen. *Also, to troubleshoot problems like this, I think it's always best to Step-through your program... that's one of the best features of an interpreted language. Unless they changed it, start your subroutine by pressing F8, and press F8 to run through your code one line at a time. Depending on your IDE, you can mouse over variables to see their values at any given time, and follow the path of your program to check for errors. 
This might be useful. Set objExcel = CreateObject("Excel.Application") Set NewBook = objExcel.Workbooks.Add With NewBook .Title = "My Title" .SaveAs "MyFile.xls" End With
If you can guarantee that excel will be on the machine that you wish to generate the for on then the easiest way is to use excel itself to create the file. You can open it invisibly behind the scenes and write lines and save with only a handful of lines of code. /r/Shodanx gave an example of how to get started. We do a lot of excel output in this way. It's not to difficult, and you can do petty much anything that excel can do.
Since 5 and 10 don't share any bits, xor'ing them would add them at first 10=8+2. 5=4+1. So 10 XOR 5 would get 15 into int1. Xor'ing it again with 10 should subtract it again as you are re toggling the 10's bits out so int2 should now be 5. Xor'ing again int1 with 5 should now put 0 int int1. Everything is wrong with what you expect 
The freebasic user manual says that xor'ing two unequal terms will return a 1, and two equal terms will return a 0, and in the case of a 0, the variable being xor'd will get the former value and in the case of a 1, the variable being xor'd will get the latter value
I just re-read it. I think I get what I got wrong so instead of some sort of boolean statement returning 0 or 1 based on a logical statement, it's a bitwise operator that goes through each bit of the value being evaluated and compares the terms bit by bit?
Yes, that's what an XOR does; bit by bit 0x0=0,1x0 or 0x1=1, 1x1=0
So why does it add the terms together?
Because your two values (5, 10) do not share any of the same 1 bits, thus acting as if being added
1. New Project 2. Add a Button to the form (not necessary but makes sense) 3. Double-Click the button 4. In the area it creates in code-view (Private Sub Button1_Click(...) ...): # For i As Integer = 0 To 10 Step 2 MsgBox(i) Next Optionally skip the button... right-click the Form in Solution Explorer: 1. "View Code" (F7) (or double-click the form and skip to #4) 2. In the left drop-down select "Form1 Events" 3. In the right drop-down, scroll to "Load" and click 4. Add the loop there.
Yes you can, use whatever you want, hell just to be sure: Console.WriteLine(i) Me.Text = i.ToString Button1.Text = i.ToString MsgBox(i) InputBox("","",i.ToString)
Sounds like you want a console application then, in which case do the above but substitute Msgbox(i) with 'console.writeline(i)'. No buttons or forms necessary.
There isn't really enough code to give a functional example, but: Dim ValChange As Integer Dim Premium As Boolean = PremiumToppings.Contains(e.ToString) If e.NewValue = CheckState.Checked Then lstToppingsSelected.Items.Add(e.ToString) If Premium Then lblPremiumToppings.Text = (Integer.Parse(lblPremiumToppings.Text) + 1).ToString ValChange = PREMIUM_COST Else lblRegularToppings.Text = (Integer.Parse(lblRegularToppings.Text) + 1).ToString ValChange = REGULAR_COST End If Else lstToppingsSelected.Items.RemoveAt(e.Index) ' Remove it, even if it wasn't selected. If Premium Then lblPremiumToppings.Text = (Integer.Parse(lblPremiumToppings.Text) - 1).ToString ValChange = -PREMIUM_COST ' Negative value Else lblRegularToppings.Text = (Integer.Parse(lblRegularToppings.Text) - 1).ToString ValChange = -REGULAR_COST ' Negative value End If End If lblTotal.Text = (Integer.Parse(lblTotal.Text) + ValChange).ToString It seems the best would be to re-evaluate how it's structured, depends on if it's a "real" application, or just school, etc.
It's fairly straightforward. First, extract the data from one file and save them as objects. Then do the same for the other file. Now that you have both as data objects, run a loop that iterates through all objects from file #1. For each object, search and compare with all objects from file #2. If a match is found, delete the object from #2. Then, regardless of whether a match is found or not, copy the object in #1 to a new list that we will call #3. Once that's complete, copy all objects from #2 into #3, because all objects in #2 are now guaranteed to be unique. I'll post some pseudo code later if you need any more help. 
Thank you. I'm not sure how to "save them as objects" or in what way to iterate over them(but I could probably find out really quick with some testing). I will be testing tomorrow, as it is kind of late where I am, and I am getting tired.
Until I get to a PC, try searching for "vb.net XMLreader" and "vb.net XMLwriter". That would get you on the right track as far as getting the data out of the XML file is concerned. As for objects, you will need to create a class like this: Public Class groceryItem Public Property name as String Public Property qty as Integer ... End Class Classes are basically object templates, so every object you create from the groceryItem class will always have properties like name, quantity etc. So say you get the data from the XML file and store them in variables named XMLname and XMLqty. You will then create an object and set its properties like so: Dim item as New groceryItem item.name = XMLname item.qty = XMLqty 
To add to this.... if you use the "Item id" as part of the groceryItem class, then you can build a List(of groceryItem), and add each item to it as you get them out of the file . dim groceries as new list(of groceryItem) dim item as new groceryItem item.name = XMLname item.qty = XMLqty groceries.add item From that point it's just a matter of checking the list first to see if the Item id already exists, and deciding to merge / skip / replace the existing item. 
Sorry, but I can't figure out how to use the XMLreader to get those and go over the nodes or the XMLwriter at all, I have figured out how to get the first attribute of the next "item" node, but I can't figure out the rest, everything I find I either don't understand, or it doesn't work :( Thank you for your help and patience so far.
what's your code?
{0}.{1.0}.{2} At least that what I get from the comments in the Splash Screen code. If you've added an actual Splash Screen form to your project. The line right above the version text line is remarked out, it shows the Build and Revision, you just need un-remark that line and remark the second one and add the corresponding format index to your textbox. 
 8 4 2 1 1 0 1 0 = 10 0 1 0 1 = 5 ---------- 1 1 1 1 = 15 So if they shared bits 8 4 2 1 1 0 1 0 = 10 1 0 0 1 = 9 ---------- 0 0 1 1 = 3
I still can't figure it out, I found some things to do in C# using XmlDocument and/or XDocument but it doesn't work in VB.net. What if I replace the name with string "qwerty45-rr" and then run over it and remove any that have that name (with their children nodes), which I also have no clue how to do? 
Are you building from the command line? If so are you using VBC, or MSBuild? Does it build from within Visual Studio? 
VBC within my Programfiles86x&gt;MsBuild folder. Yes, it works fine within the Visual Studio IDE.
I've never found a good reason to build from the command line so I don't have much experience with it.... That said, it sounds like you might need to set some references... Make sure you are using the Visual Studio Command Prompt, not the regular Windows one, and check the following for basic setup: http://msdn.microsoft.com/en-us/library/25fz1td5.aspx
Use ("the word was" &amp; cVariableName)
You need to concatenate the word with this message to show in the message box. 
The c is a naming convention called Hungarian Notation. It makes it easier to understand what type of variable it is. Below is a link to explain more about Hungarian Notation. http://en.m.wikipedia.org/wiki/Hungarian_notation
Is it greyed out? Do you have Exclude from project? 
You can also right click on the Project at the top of the Solution Explorer, and use Add &gt; existing file to pull it back in. 
I don't have the express version, so maybe that's it. ... Try my other suggestion ... Use Add, Existing File ...
You may have to add all three files this way,... the .vb, .resx, and the .designer.vb
The way I do this that may be a little more simple for you: &gt;Dim xv as String = My.Application.Info.Version.ToString &gt;textbox.text = "MyApp ver: " &amp; xv This puts the whold version including build: v1.0.0.0 
Don't use an arraylist, use a list for list 1, 2 and 3. Follow my original model: both list 1 and 2 needs to be of the same object type. It doesn't make sense to compare groceyItems with rocketparts, lol. Anyway, your comparison code should be very straightforward: For each item1 in list1 For each item2 in list2 If item1.id = item2.id orelse item1.name = item2.name orelse... then 'clone check here 'Clone found; add item2 to removal list removelist.add(item2) End if Next 'We have run through all of list2 now 'Time to purge list2 and add item1 to list3 List2.removerange (removelist) List3.add(item1) Next 
&gt;both list 1 and 2 needs to be of the same object type They are, I meant to change both but messed I up in the pastebin, that's why I said to pretend that they were the same. Thank you, I am testing this now and will get back to you when I get it to work, or I give up :) 
Reminds me of this: http://norvig.com/sudoku.html Although it's in Python, I think it's a much better approach than trying to replicate a bunch of human methods of solving a sudoku. 
Okay, I got this working, but how do I make it back into xml? And do I need to specify every attribute for all of the children nodes too, or is there an easy way to copy them? Maybe write new XML file that is both two combined, then check the lists for the item, and if it isn't in list3 remove the node and all it's children? Also, anyone else reading this is welcome to help if you can, I think that one person shouldn't have to walk me through every step when nobody is even paying them anything. I appreciate everything you have done so far to help me understand Visual Basic better, and your patience and time that it has taken to do so. Thank you.
Not exactly sure why you have the intoptions array and are adding it to the listbox. Your code doesn't do anything with it so it just adds the values it contains. Since arrays start at 0 you need to -1 from your input so that you roll the proper amount. The way you currently have your code it will roll 1 more than you specify because of the 0 Ie, if the user enters 4 you roll from 0 to 4 (or 5 rolls) You should loop from 0 to userinput -1 Also, you need to use the New keyword in your random declaration. You are also setting an array of 10 elements but you ask the user how many rolls which may not be 10 and since you store the rolls in this array an out of bounds exception can occur. You would be better off just running the loop the number of times the user specifies. add the result to the listbox and then if you deem that you need to create an array of these values, just dimension the array to the count of the listbox and iterate through it to fill the array.
If you've followed my code so far, everything in list3 is now unique (ie no clones). As such, all you have to do is use XMLWriter to output the file based on the objects in list3. Again, if you need code you'll have to wait till I get a PC. :)
Frankly, almost none of this code makes any sense. For i = 0 To 10 ... ok, you're iterating through 11 items, I don't know why... but pretending there's a reason... you are doing it *twice*... when you could merge those two loops into one: For i = 0 To 10 lstOutput.Items.Add(X) lstOutput.Items.Add(Y) Next I have no idea what intAddRoll() is for... Major indexing problems like CharlieMay mentioned. If all you are doing is randomly rolling two dice, then: Dim intNumRolls As Integer Dim rnd As New Random() Integer.TryParse(txtInput.Text, intNumRolls) ' Just in case the user enters "twice" etc, a non-digit. If intNumRolls &gt; 0 Then ' If user entry was valid, greater than 0, proceed. For i As Integer = 0 To intNumRolls - 1 ' temporarily Dim 'i' and use it for the loop. ' add the two dice rolls to your lstOutput, convert to string directly for clarity/efficiency. lstOutput.Items.Add((rnd.Next(1, 7) + rnd.Next(1, 7)).ToString) Next End If For clarity on output, you might also want to do: lstOutput.Items.Add("D1: " &amp; rnd.Next(1, 7) &amp; ", D2: " &amp; rnd.Next(1, 7)) D1: #, D2: #
I have, I just want to be able to use it with many more child nodes which might all have unique attributes, and that means that they would all need their own attribute variable in the object, but some don't have all those attributes, so it won't be the same, and either way will require a lot more detailed stuff I would like to avoid, which is why I was thinking maybe we could make an XML thing containing the same xml as both of the listXML combined, and then run over it with the list3 and when find one that matches, leave it in XML but remove it from list so that when it goes over it again, it will not see in list, so it will remove that XML node and it's children, I was hoping you (or someone else that would respond) knew of a way to do that. TL,DR: I want it to work with a variable number of child nodes, with variable attributes. 
Ah OK I see what you mean now. What you'll have to do therefore is to put a Select-Case in XMLRead(), at the level of "If reader.NodeType = XmlNodeType.Element", to differentiate between the different types of XmlNodes.
I have and it still hasn't fixed the problem. Writing this from my phone because my computer wont open back up ^^^^/s
in your add and subtract subs, you are declaring counter which is private to that sub once that sub completes, counter is disposed of. Look at how you handled Tuition, you declared it as class level so it can be used throughout the class. 
ok no problem men if you need any more advice pm me 
[This](http://i.imgur.com/D6WZMF7.png) is where the file gets loaded into an array, [This](http://i.imgur.com/mwXBIPI.png) is the class the array is stored in and even trying to display it in a message box it doesn't work.
Put a breakpoint at the top of your file loading sub and manually step through the code. Report back which line it is closing on.
It doesn't crash at the file loading, it crashes when you try to get a value from the array but I've fixed it now. Thanks anyway :P I have functions in the class which get the value and I wasn't getting it from the function.
well, true random allows for repeats. what you want is unique random, so you have to either remove the word from the list (.RemoveItem(Number), I think) once it's selected, or keep another list with used words and if one is picked a 2nd time, get another.
Oh ok, thanks.
If you're using the listbox only to hold the words (and not show them on some UI), you'd probably be better off just using a list. ' put your words in a list Dim lst = New List(Of String) From {"ZYMOGENESIS", "YARDMASTERS", "XERODERMATIC", "WOLLASTONITE", _ "VISCEROPTOSIS", "TOPAZOLITES", "PYLORECTOMY", "QUODLIBETIC"} ' Shuffle that list and put it in a queue ' - we order the list by GUIDs to shuffle it. ' - you could also use Rnd, but using Guids requires no "Randomize" or other setup... Dim words = New Queue(Of String)(lst.OrderBy(Function(w) Guid.NewGuid())) ' Get next word from our queue. Dim word = words.Dequeue ' You can check the .Count property to make sure the list is not empty... You could wrap the whole thing in a function that automatically re-shuffles the list and resets the queue once the queue empties itself. 
 Timer.Enabled = Ball.Bottom &lt; Platform.Top Assuming multiple platforms, then loop it. For i As Integer = 0 To Platforms.Count - 1 If Ball.Bottom &gt;= Platforms(i).Top Then Timer.Enabled = False Exit For End If Next Probably have to check For X/Left/Right as well, otherwise the ball will stop at that level, even if it's not on top of a platform.
I'm using rectangleshapes for the platforms and if I write "...0 To Platform.count..." What should I insert for "Platform"? I tried everything with rectangleshape but it always shows me the error "Name 'X' is not declared" or "'count' is not a member of Microsoft.Visual.Basic.PowerPacks.RectangleShape". Also, where do I have to write this code? 
You'll need to create a new instance of SecureString, then use AppendCharacter to add the character sequence to the string. As a side note, you should never store passwords, encrypted or not. http://nakedsecurity.sophos.com/2013/11/20/serious-security-how-to-store-your-users-passwords-safely/ http://security.stackexchange.com/questions/17421/how-to-store-salt 
Thank you will read up on this.
SecureString is based on Chars. You can add them all at once like my example, or one by one, but it's chars all the way down. "HELLO".ToCharArray() = 'H','E','L','L','O' Or X = New SecureString(New Char() {CChar("H"), "CChar("E"), etc...) Or For i As Integer = 0 To SomeString.Length - 1 SecureString.AppendChar(SomeString(i)) Next
You can't declare a variable as another type (as I far am aware). However, you can declare the variable as an object, then assign a new object of a given type to it: Dim number1 Dim number2 'Choose Dimension for numbers If ComboBox2.SelectedItem = "Single" Then number1 = single.parse(input1.text) number1 = single.parse(input2.text) MessageBox.Show("Input numbers and answer are now Single-Precision Numbers") ElseIf ComboBox2.SelectedItem = "Double" Then number1 = double.parse(input1.text) number1 = double.parse(input2.text) MessageBox.Show("Input numbers and answer are now Double-Precision Numbers") ElseIf ComboBox2.SelectedItem = "Long" Then number1 = long.parse(input1.text) number1 = long.parse(input2.text) MessageBox.Show("Input numbers and answer are now Long Numbers. Maximum is 2,147,483,657") ElseIf ComboBox2.SelectedItem = "Integer" Then number1 = integer.parse(input1.text) number1 = integer.parse(input2.text) MessageBox.Show("Input numbers and answer are now Integers however decimal values will be chopped off. If you want to use floating point numbers, choose single, double, or decimal") End If Dim ans = number1 + number2 Just be careful, errors will be thrown if the string doesn't match the datatype perfectly (ie, unexpected decimals). You will need to check with these before hand, or convert to a more accepting datatype, and extract the relevant part from that.
Yes but not explicitly. Either not dim at all or Dim X as variant, whatever you assign to it inherits the type
While this is technically possible by using Object, it's a very bad idea, as it will lead to problems (since you can stuff anything you want into an Object variable, and you have no idea what's in there). It's far better to just use a couple of extra variables declared as the actual type needed, or split the math work up into 3 separate functions.
The task says to have the words in a listbox. Can I use GUIDs with a listbox? 
That looked really hopeful but when I tried it, I keep getting Variable number1 is used before it has been assigned a value and it won't let me indent the IF statement part after Dim number1 and number2
Haha I just learned about Select and Case. I agree, it does look more readable. I have more of an excel background with the nested If statements but it's definitely nice having alternatives. Thanks so much for taking the time to rewrite this, it's really nice of you! By the way, I've mainly been using tutorials on this website: http://www.homeandlearn.co.uk/NET/vbNet.html With a lot of modifications on the projects to make them slightly more difficult and to try out new things. Do you think it's a good way to learn if I'm pretty much a beginner with programming? So far, I've been getting the projects down pretty well so it isn't too advanced. I'm also trying to find good sample codes to see more advanced applications of the things I'm learning.
Not as easily. Can you dump the listbox to a list, shuffle it and dump it back to the listbox? Dim lst = New List(Of String)(listbox1.Items.Cast(Of String)) ' Extract the listbox items to a list Dim lst2 = lst.OrderBy(Function(x) Guid.NewGuid()) ' shuffle them using GUIDs. listbox1.Items.Clear() ' clear the listbox listbox1.Items.AddRange(lst2.ToArray) ' fill it back up with the shuffled words. It's not as nice, since you have to ".Cast" and ".ToArray" to get everything to play well together. If it's a class (and from the assigned "task", it looks like it), it would be nice if teachers stopped using user interface controls (like the listbox) as data holders for the program. But I digress. From there you can probably use the listbox a bit like a queue, taking the first item as the next word and then removing it: Dim word as string = listbox1.Items(0) listbox1.Items.RemoveAt(0) Then again, if you *have* to use the listbox, you're probably better to also use whatever else the task says you have to use to shuffle the words. Rnd and Randomize or Random.Next() (probably). You can still use the code above, but instead of the Guid.NewGuid part, do: Randomize() ' You only need to call this once; if you don't you'll always get the same shuffle... put it in the Form_Load event. Dim lst2 = lst.OrderBy(Function(x) Rnd()) ' this replaces the Guid part. 
There are many ways in which you can proceed. You can pass an argument to Form2 when you create it. Normally you don't see it, but each Form has a hidden "Sub New()" method. You can replace it with one of your own: private _lstOfImages as List(Of String) ' define a private variable in Form2 to hold your list Sub New(ListOfImages as List(Of String)) ' Define a new "constructor" to replace the hidden one. InitializeComponent ' This is required by the form... the compiler will let you know if you forget to include it. _lstOfImages = ListOfImages ' Assign the passed parameter to the private var. End Sub Then, in Form2 you can access the _lstOfImages to display the images in the correct order. In my example, I used a list of strings (assuming you're passing picture filenames), but you could also have a "List(Of Picture)" or "List(Of Image)", or whatever you're using in Form1. Another way would be to have Form2 "raise events" to indicate to Form1 that it needs something (it could define a "NeedNextPicture" event, for example) and then Form1 would declare "Private WithEvents frm2 as Form2" and respond to the events by manipulating Form2's controls and properties... from your description, this is probably more complicated than it needs to be and simply passing the list as described above will do the trick. Note that if the 4 second delay is also determined in form1, you can pass more than one parameter in the "Sub New(...)" you define. 
I see how it's a _Char Array_ now, since it's a _list_ of _characters_.
10+ years of professional experience here (and several years as a hobby before that): To be perfectly honest; I rarely search for VB specific solutions, preferring C# answers on Stack Overflow when I do need something, and I've abandoned almost all of the old mailing lists that used to be very high quality, but are now saturated with very low quality posts most of the time. There are several reasons for this: * The sheer number of extremely poor VB examples out there; it's really staggering how much bad code and advice there is, even in this sub. * VB 6 examples (many of which will run in .NET, but will run poorly). * The lack of really solid answers / variety of answers (many of the really great VB programers from 10 years ago are using C# now). * The amount of really old posts (I generally assume anything more than 3 or 4 years old in .NET is outdated, but especially in VB). My personal suggestion is to learn C#. Every conference, code camp, INETA meeting that you go, every blog post from someone prevalent in the greater .NET community, everything is going to be C#. All the really cool new stuff from MS, all in C# first (or only ever in C#). Even if you don't write C#, you should learn how to read it, and think your way through converting it to VB.NET (use one of the many converters out there to start with). If you are just starting out, and have no reason to use VB, learn C# instead (this from a guy that prefers VB). 
After reading a little more into it your answer it seems more of an agreement to the problem I posed here, and your solution is basically give up on vb and do C# :( I was semi worried that would be the case. I can read C# fine and I already know of a few converters I've used in the past, I just prefer to write in vb. I have also read several articles that state visual basic is still a prevalent source code and lots of people are using it. So I figured if lots of people are using it there has to be a competent community out there somewhere. But perhaps competence is now all about the ability to us both.
&gt; But perhaps competence is now all about the ability to us both. I think this is the real answer .... Like any language, being a good VB developer requires understanding the underlying framework and features, and all of the really good examples and tools for learning are in C#. I think there is a competent VB community, but it's vastly smaller than the C# community, and probably not as vocal. I like VB: I like the language, syntax, and the IDE (although the C# IDE has mostly caught up to VB now), but there's always going to be a stigma associated with it, and C# will always be the dominate language on the stack. A good example; I've attended INETA meetings and Code Camps for 6 or 7 years now. Between those two, I've been in dozens upon dozens of sessions, and can't think of one time where the presenter used VB. 
Where as I understand what HDSROB is saying, I disagree with his main tenant. "There is no good ecosystem therefor choosing VB over C# is not the best path". I agree with the statement that the there are a lot of extremely poor VB samples out there. I would extend that by stating that until recently (vNext is leveling the playfield between VB and C# a bit) VB.NET has been getting the short stick from the community and Microsoft. Now having said that if you are looking at doing this as a career I would learn the syntax of both, then choose the language you wish to shape your ideas in. I am famous for inserting a C# class into a VB program that is an elegant solution to a problem. I think more objectively (no pun intended) when I am using vb.net for whatever reason probably becuase I get into the C++ mindest when I use sharp. Dont let the winds of the current ecosystem drive your direction. I think if you want to go down the path this community is better than most for getting straight answers (sometimes to much for the kids in school. &lt;Soapbox&gt; Stop giving all the answers to the people learning. Give them Guidance!&lt;/Soupbox&gt;) I am more than willing to help and I am sure HDSROB would as well. HDSROB send me a message I would love to swap stories and chat, I would be interested in getting somthing together that address teh problems with VB.NET and the community. **Bone**
Agreed! We should change that!
In the example of multiple platforms the "platforms" variable is a list(of platform) and in a list the ".count" of does exist and represents how many objects it contains.
Hey. Going to bed now, but I'll check in the morning and see if I can help
I always found XmlReader to be kind of awkward. Mind using XElement instead? Dim file1 = XElement.Load(file1Name); Dim file2 = XElement.Load(file2Name); Dim combinedAsLookup = file1.Elements.Concat(file2.Elements).ToLookup(Function(el) el.Attribute("id").Value) This loads the xml from each file, concatenates the children of the root GroceryList elements into the same sequence, and then groups them by their id attribute. Ok, so now combinedAsLookup is an ILookup(of String, XElement), which is kind of like a Dictionary(of String, List(of XElement)). Each key in the ILookup is a distinct string (which we get from the id attributes); each key indexes a collection of XElements (those XElements which had an id matching this key). Where you go from here depends on what the meaning of a duplicate element is. Are duplicate elements actually copies of exactly the same underlying information, so we just want one such reference to the underlying information? Or are they elements that happen to have the same id, so they should be merged somehow (i.e. we want our grocery list to have 10 potatoes)? If you want to dedupe without merging, you could do Dim combinedAsXml = &lt;GroceryList&gt;&lt;%= From grp in combinedAsLookup select grp.First() %&gt; &lt;/GroceryList&gt; If you want to merge duplicates, then you'll probably be constructing new XElement objects out of the information you've gleaned from the XElements that have been grouped under a particular key. VB lets you poke into XElements with special [axis operators](http://msdn.microsoft.com/en-us/library/bb384974.aspx) to get what you want from the existing XElements. As shown above with the initialization of combinedAsXml, you can use [interpolation](http://msdn.microsoft.com/en-us/library/bb384964.aspx) to embed expressions in your xml.
The reason why it doesn't work is because username was declared at form level and, therefore, only exists on the first form. The moment the form dies, so too does the string and all other variables that exist on the form. To get around this, you'll need to declare the variable at a module level (so that anyone and everyone can access it; not a good thing, but easy and fast to do) or - and this is the better way - take an object-oriented programming approach. What does the OOP approach mean? Well, this means that, instead of storing the username as a string, you pass the username as an argument to the main form that needs it when the user enters it. Therefore, when you call Form3.Load, call a method in Form3 and pass the username, along with all other relevant information, to it at the same time.
It's not so much a multi-user problem as it is a problem with good coding practices. Well, no matter. I expect you'll get the hang of that later on in your programming career. ;) The easy (and, again, I must say this: the lazy and _awful, disgusting and downright vile_) way to solve this is to add a module to your program's project. In project explorer, on the right hand side of your screen, right click on the project name and select Add - Module. Name the module whatever you want to name it. A new mini window will open up with the module there. Between Public and End, put this: Dim username as String Remove all other instances of "Dim username as String" from your project, and that's it.
When I create a module there is no Public and End already there and Public goes red when I put it in. Not sure what to do :P Do I do this? Public Sub Module1() Dim username As String End Sub edit: and when I put Label1.Caption = "username" it just says username not namebox.Text 
Sorry, forgot the syntax for modules. Just put "Dim username as String" between "Module XXXXXX" and "End Module". **Remember to delete all other instances of "Dim username as String".**
when I put Label1.Caption = "username" it just says username not namebox.Text and end module is red Thanks for the help though really appreciate it
The value you put into the () after Randomize is the seed. If you start with the same seed, you will always get the same sequence of random numbers afterwards. By default, the computer will use the current system time as the seed, but if you want a certain predictability you can choose what seed to use.
I don't know the syntax for VB6 modules, but as long as you're declaring the variable at a module level it should work. Just stick the Dim statement between whatever code they spit out by default.
I suggest you start by simply iterating through list1, check the current item against the list of elements in list 2. If it doesn't exist in list 2 add it to list 3. Then add the nodes from list 2 to list 3. Done! foreach (var currentElement in list1.Elements) { if (!list2.Elements.Any(e =&gt; e.Id == currentElement.id)) list3.Elements.Add(currentElement); } } list3.Elements.AddRange(list2.Elements); 
List1 and List2 only contain the first four attributes of the parent node (item), for them to contain all child nodes and extra attributes I need something else. If there is some way to store all children and their attributes in a single thing, then I could do that, but I haven't found a way. Thanks anyway.
When you refer to an element (XElement), all of its children (both elements and attributes) are included. That's the magic of Linq to XML! foreach (XElement currentElement in list1.Elements) { IEnumerable&lt;XAttribute&gt; attributes = currentElement.Attributes; IEnumerable&lt;XElement&gt; childElements = currentElement.Elements; // etc. } Have a look at the links below for Linq-to-Xml. It is easier than you might think. http://msdn.microsoft.com/en-us/library/bb943906.aspx http://msdn.microsoft.com/en-us/library/bb387038.aspx http://msdn.microsoft.com/en-us/library/bb387053.aspx Here is a page full of good tutorials: http://www.dotnetcurry.com/showarticle.aspx?ID=564 
Thank you, but I already said that list1 and list2 are currently gotten through XMLReader, I don't know how to get the same thing through XElement, so MY CURRENT list1 and list2 only have the first four attributes. I could change it, but I will have to do research (which is okay, I am just tired of it for now, that is why I put a post up, I have spent days already, just searching wrong probably).
The first example in that last link shows you how. Dim xelement As XElement = XElement.Load("..\..\Employees.xml");
create new BAS module then add Public Username As String In form1 Private Sub continue_Click() username = namebox.Text MsgBox ("Name set as " &amp; username) Form3.Show Unload Me End Sub in your other form Private Sub Form_Load() lable1.caption = username End Sub
Oh, so the "lists" are just the XElement objects? No need to do anything extra? Cool.
Okay, I tested it (converted it to VB.net because it's in C(Sharp?)), modified it, and when I try to save it, it just writes the stuff that was in list1 :( Also, I didn't know where you got the "`e`" variable, so I did [this](http://pastebin.com/qqkrG3uN) which might mess it up (okay, *probably* does mess it up). 
OH MY GOD!!! IT WORKED! THANK YOU SO MUCH!!! PLEASE PARDON MY YELLING, I HAVE BEEN TRYING TO FIGURE THIS OUT FOR DAYS! Then you come along and it just works! Also, for anyone reading, if your "GroceryList" has an "xmlns" then you should change that last line to `&lt;GroceryList xmlns="whateverXmlns.Is"&gt;&lt;%= From grp in combinedAsLookup select grp.First() %&gt; &lt;/GroceryList&gt;` Edit: Also, I thought I should "rephrase" my "thank you": Dim TYLabel As Label = New Label() For I = 0 To 2 TYLabel.Text = TYLabel.Text &amp; " THANK YOU!" Next 
Okay, I got it with [another answer](http://www.reddit.com/r/visualbasic/comments/26k013/vbnet_20132014_i_need_help_removing_duplicate_xml/chs2324) which does exaclty what I need. Thank you for your time :)
Okay, I got it with [another answer](http://www.reddit.com/r/visualbasic/comments/26k013/vbnet_20132014_i_need_help_removing_duplicate_xml/chs2324) which does exaclty what I need, and ***doesn't*** require that I "give my groceryItem all of the possible child nodes". Thank you for your time :)
[snes9x.exe romfilename.smc](http://lmgtfy.com/?q=snes9x+command+line&amp;l=1)
this is the correct answer.
you mean like a windows explorer shortcut file? that can only point to a single file. you'd need to make a 3rd bat file that calls the other 2 bat files and then point the shortcut to that.
You'd have to show us the code creating the tiles. 
Ok so you need two batch files to run simultaneously, but independent of each other? Depends on the process, for instance you could do: Process.Start("TheExecutable.exe", "argument1 argument2") If you need to escape/quote, then: Process.Start("TheExecutable.exe", Chr(34) &amp; argument1 &amp; Chr(34) &amp; " " &amp; Chr(34) &amp; argument2 &amp; Chr(34)) But, the easiest is probably to run them sequentially, since Process.Start fires and then returns right away, you'd have maybe 1ms of delay. For i As Integer = 0 To Arguments.Length - 1 Process.Start("TheExecutable.exe", Arguments(i)) Next
Like hdsrob said, need the code to really be sure. However, if you are setting/changing the Window size at runtime, and putting it in a variable, you can get size mis-matches. For instance: Sub Form_Load(...) ... Me.Size = New Size(400,300) End Sub Sub Form_SizeChanged(...) ... MySize = Me.Size End Sub Sub Form_Paint(...) ... 'Draw tiles with MySize as reference End Sub MySize won't necessarily be 400x300, it's probably still 300x300 or whatever the default size is I forget. This especially happens if you are changing window-states... Normal to Max, or Max to Full Screen, vice-versa, etc in your Form_Load, or Sub New(). A possible fix in this case would be to do something like: Me.Size = New Size(400, 300) Me.OnSizeChanged(New System.EventArgs) or directly with: Form_SizeChanged(Me, New System.EventArgs) or just set MySize in Form_Load as well.
I get the feeling this might just remain empty. I wonder if it might be better from the other direction: *Post your most efficient/universal way to %SomeSimpleTask%* Or maybe a "Tips and Tricks", or lesser known but better methods to do X. For instance I re-discovered *Dictionary* which is insanely more efficient (performance-wise) than other lists if a bit more cumbersome to deal with. It might also be worth pointing out certain things like the Async stuff which is largely under-utilized (including myself), or just basic multi-threading, or MDI without MDI, etc. Dim Data As String() = IO.File.ReadAllLines("Filename") For i As Integer = 0 To Data.Length - 1 ' Do something with Data(i) Next That's probably one of the most common things asked for, and it's mirror: IO.File.WriteAllLines("Filename", Data) The use of *My.Settings.*\* also seems missing from a lot of apps/code. ^I ^suck ^when ^not ^given ^boundaries ^to ^work ^in.
Have you tried using the form property "BackgroundImage" and setting "BackgroundImageLayout" to tile?
Alright so the only item I don't think I understand what is needed is the "Falling/shrinking object". The rest seem pretty standard and you can definitely make something. Maybe you want to create a program that handles data entry of some sort? You could easily incorporate all the requirements with something like that. 
Yeah, I'm having trouble on the input box, the scroll bar, and the falling shrinking thing. 
OK worry about a falling/shrinking thing later. As far as the input and scroll, where are you stuck?
I can put it in the form, but what's the code to bind it to the text box? 
Well what do you mean? When you add a text box to the form you can access it via code. There's no default events that happen when it's added, you have to make it do something. You would need to ask yourself what the event should be and what should cause it to happen. We can go from there.
Ok so you want to add a multiline text box (which is a property of a regular text box) and just set the scroll bar property on it. You'll only actually be able to scroll if there is text in the box that exceeds the height or width of it.
A and B are dupes if A.Name == B.Name or A.ID == B.ID ^sigh Thank you, I guess I will start reading... 
Note, the complication comes from the following: A.Name = "Harriet Tubman" A.Id = "UndergroundRailroad" B.Name = "TubMaster Flash" B.Id = "UndergroundRailroad" C.Name = "TubMaster Flash" C.Id = "Tubba Tub Tubby" A and C are duplicates even though they do not share a name or ID because they are both dupes of B. I am assuming for sanity's sake that you want "is a duplicate of" to be a transitive relation. If this situation never occurs, you may have a simpler solution, not sure. But if it could, you've got to use union-find.
To use this class, do something like Dim allElements = file1.Elements().Concat(file2.Elements()).ToList() Dim groupsOfElements = new UnionFind(Of XElement)(allElements) For index1 = 0 to allElements.Count - 1 For index2 = 0 to index1 Dim element1 = allElements(index1) Dim element2 = allElements(index2) If (index1 &lt;&gt; index2 AndAlso miscellaneous criteria) Then groupsOfElements.Associate(element1, element2) End If End For End For Dim combinedAsXml = &lt;GroceryList&gt;&lt;%= From grp in groupsOfElements.Sets() select grp.First() %&gt; &lt;/GroceryList&gt; I just translated this from C# to VB by hand, because for whatever reason [the automatic translator I tried](http://www.developerfusion.com/tools/convert/csharp-to-vb) choked on it. I may have made a mistake in that process. I haven't checked this in Visual Studio to see if it compiles or anything, so you may have to try to understand and fix it if it's broken. **Spoiler alert!** Public Class UnionFind(Of T) Private Class Node Public Sub New() Parent = Me End Sub Public Property Parent As Node Public Property Value as T Public Function Representative() as Node If Not ReferenceEquals(Parent, Me) Parent = Parent.Representative() End If Return Parent End Function End Class Public Sub New(toGroup As IEnumerable(Of T)) Elements = toGroup.ToDictionary(Function(t) t, Function(t) new Node With {.Value = t }) End Sub Private Property Elements as Dictionary(Of T, Node) Public Sub Associate(T element, T other) Dim node1 = Elements[element].Representative() Dim node2 = Elements[other].Representative() node1.Parent = node2 End Sub Public Function Sets() as HashSet(Of HashSet(Of T)) Dim values = Elements.Keys Dim valuesByRepresentative = Elements.Values.ToLookup(Function(n) n.Representative(), Function(n) n.Value) Dim results = new HashSet(Of HashSet(Of T))() For Each representative in valuesByRepresentative results.Add(new HashSet(Of T)(representative)) End For Return results End Function Public Function SetContaining(element As T) as HashSet(Of T) Dim node = Elements(element).Representative() Return new HashSet(Of T)(From kv in Elements Where kv.Value.Representative() = node Select kv.Key); End Function End Class 
Oops, in C# you say MyClass&lt;T&gt; to specify a [type parameter](http://msdn.microsoft.com/en-us/library/w256ka79.aspx), whereas in VB you say MyClass(Of T). So, e.g. HashSet&lt;HashSet&lt;T&gt;&gt; would be HashSet(Of HashSet(Of T)).
If Not ReferenceEquals(Parent, Me) Then
Where are the corresponding names to the grades kept? If they're held in another array, you will need to do the equivalent of A(C) = A(C+1) and so on for the name array whenever you sort your grades. 
Mind pasting the code as it appears now?
Just for the fun of it, here's how the same thing could be done using "modern" VB idioms (ie, using lists, tuples and LINQ instead of arrays and bubble sorting using for/next loops like we used to do with VB3 in 1995). ' We will hold our student/grade pairs in tuples. ' Let's create a list to hold those tuples: dim results = new list(of tuple(of string, integer)) ' name, grade ' Lets add a few students: results.add(tuple.create("Bob", 78)) results.add(tuple.create("John", 81)) results.add(tuple.create("Rick", 95)) results.add(tuple.create("Dale", 53)) results.add(tuple.create("Dawn", 74)) results.add(tuple.create("Suzy", 61)) results.add(tuple.create("Sally", 94)) ' Sort the list on the grade: (compare b with a to sort descending...) ' With tuples, we refer to our content using .item1 and .item2 results.sort(function(a, b) b.item2.compareTo(a.item2)) ' this is the whole sort. 1 line. ' Print the list: results.foreach(sub(x) debug.print(x.item1 &amp; ": " &amp; x.item2)) This prints out: Rick: 95 Sally: 94 John: 81 Bob: 78 Dawn: 74 Suzy: 61 Dale: 53 
No I don't mind, I will in just a minute, my PC is being wacky right now and won't load the project, going to reboot.
Okay... never mind! I can't! it is all gone! My PC always crashes, this time it RUINED my project! I was going to release tomorrow! Sorry, I am getting carried away, I was just about to back it up too... so frigging pissed! Has all of your code ever disappeared? Any clue if it's possible to get it back? probably not :( Well, it should only be a day of typing to get it all back, the only trouble is that I had a loading screen that actually worked, and so that it didn't lag it was on a different thread, I wasn't sure how I got it to actually work, so I will have a hell of a time getting working again! Thank you for your help, I will reply again when I get it back even if you don't reply to this. 
Okay, my code might not be gone, but the editor for it is, or so VS seems to think, it says "There is no editor available for 'C:\LongPathHere\Myproject\MainForm.vb", but the one selected is the right one, if I select a wrong one it just won't open, except one where all the code appears to be gone, so I guess I have a lot more googling :'( Edit: Well ****! I just read that .vb files are only text, if that is true then all of my code really is gone =(
You could just compile your program into an executable and then assign a keyboard shortcut to run it. Just right click the program go into properties and assign the shortcut. 
The form has KeyDown, KeyUp and KeyPress events where you can place code that reacts the event you place it in. For example in the keypress event if you were to put If e.KeyChar = "t" then MessageBox.Show("The letter t was pressed") End if A message box would pop up when you pressed the t key. Of course, to make this work you would also need to set the KeyPreview property of the form to True
Additional FYI: KeyDown, KeyUp work differently than KeyPress. For KeyDown/Up use: If e.KeyCode = Keys.T Then This is far easier, because the expected key you are pressing on the keyboard is the one that corresponds to the key used in your code, whereas with KeyPress: If e.KeyChar = "t" Then Or better: If e.KeyChar = CChar("t") Then Isn't always what you expect it to be, for A-Z, 0-9 it generally is, but not when you get into ,\/.']) etc. KeyDown/Up is better for keyboard events, but KeyPress is better when you need very specific values caused by a keypress, such as the difference between "t", "T", "ŧ", "Ŧ"
is this an assignment? I don't understand why you'd use 3 form for this. I also don't understand what the actual issue is. can you be more specific about what part you're having trouble doing?
I think there's something wrong with the code's syntax. When you dim x(2 to 3, 1 to 2) as integer, x becomes a 2 dimensional array of integers, but the lower bound of an array must always be 0. So let's change this to say dim x(0 to 3, 0 to 2) but only use 2-3 for the first dimension and 1 to 2 for the second dimension. OK! With that done, and after adding a Dim N as integer = 0 command, at least the code will compile now. Let's see what it does. The first For command starts off "a" at a value of 2 and will run until a = 3. The next For command starts off "b" at a value of 1 and will run until b = 2. This means that the very first time the X(a, b) command runs, a = 2 and b = 1. Therefore, at array position X(2, 1), the integer value of 2 - 1 = 1 will be stored. This runs again, and the inner For loop increases b to 2. Now a = 2 and b = 2. Therefore, at array position X(2, 2), the integer value of 2 - 2 = 0 will be stored. Now the inner For loop is done, because b = 2, so it exits. However, we're still within the outer For loop, which now increases a to 3. Now we enter the inner For loop again with the values of a = 3 and b = 1. At array position X(3, 1), the integer value of 3 - 1 = 2 is stored. And finally, for the last time, at array position X(3, 2), the integer value of 3 - 2 = 1 is stored. The end result will be an array with these values: X(2, 1) = 2 X(2, 2) = 0 X(3, 1) = 2 X(3, 2) = 1 I'm ignoring the N = n + 1 line because lowercase N has not been dimmed, and there's nowhere that I can see uppercase N being used.
The code is incorrect in it's assignments (invalid) Dim X(2 To 3, 1 To 2) As Integer Is the equivalent to (valid): Dim X(1, 1) As Integer or Dim X(0 To 1, 0 To 1) A two dimensional array of integers, where the dimensions are two wide/long. X(0, 0) = 0 X(0, 1) = 0 X(1, 0) = 0 X(1, 1) = 0 So four integers total. N = 0 Reset the value of N to zero. For a = 2 To 3 ^for ^sake ^of ^explanation ^I'm ^using ^the ^invalid ^indexes Repeat the following/enclosed loop starting from 2, and iterating (by 1) till 3, so twice, using the variable 'a' to hold the value of the current iteration For b = 1 To 2 Same thing, starting from 1 up to 2. X(a, b) = a - b The first loop will assign the value of 'a - b' to the position (a, b) in the array of integers: X(2, 1) = 2 - 1 So X(2, 1) now equals '1'... the value of 'n' is the current value of 'n' + 1... since 'n' was set to '0' before all of this, 'n' will now equal '1'...the next loop will be: X(2, 2) = 2 - 2 'a' hasn't changed value because it's still in the 'b' loop... 'n' becomes 'n + 1'... 'n' now equals 2...the 'b' loop has now completed, so now the 'a' loop will step by 1, and it will repeat: X(3, 1) = 3 - 1 n = n + 1 etc... The value of 'n' is counting how many times the loops have ran, each time a value is assigned to the array of integers, n is increased by 1. After both loops have completed (4 loops total) the value of 'n' is added to the current text in the RichTextBox... so assuming the TextBox has no next in it: 4 The next time all of this runs again, assuming the TextBox hasn't been cleared: 44 Then 444 etc...
Smells like homework. You need a way for Form2 to "know" which file was selected in Form1. You can read Form1's textbox directly; or you could stick the name in a global variable and read it from Form2. Form2 needs to read the file (check out the Noob Megathread, /u/Vectronic shows the code to do so easily). For your continue button, you can either read from Form2 or re-read the file and pick a random entry. Look up Rnd() and Randomize() for how to do so.
The first loop will loop two times (once for 2 and once for 3), the inner loop will also loop two times (for 1 and 2) and inside both loops, N is incremented by 1. So 2 x 2 = 4, N will be set to 4 when the loop exits. By the way, Dim x(2 to 3, 1 to 2) was valid with VB6 and previous, but is not supported in VB.Net...
Yes that's basically it. Except it will return any type you wish. For example you could pass in an SQL statement and return a dataset or your own custom type that you have created. It just give you a method to do work and return a result. A sub does not return a value but returns to the next line from the line where it was called from. A function is called, processed and a value is returned. For example Function Add2Values (value1 as double, value2 as double) as double This takes 2 values from the program and returns a double back to the calling routine Function Add2Values(value1 as double, value2 as double) as double return value1 + value2 End Function Calling this you could use something like: Dim a = 1 Dim b = 2 Dim c = 3 Dim Total as Double = Add2Numbers(a,b) + c Total would now hold the value 6 We called the Function which returned 3 then we added c to it which is 3 so essentially we just added 3 + 3 because the Function added 1 and 2 together and returned 3 back to us. 
Pretty much. You can return simple types (like strings, integers, etc) but also objects, structures, lists, etc.
Yeah it an assignment that needs to be able to show a list of text files, be able to edit the contents of those text files from within the program, and then generate a random name from the contents of the selected text file
Here's a very simple example: My Form3 has a BackgroundWorker control named "bw"; Form4 (not shown here) animates a ProgressBar using a Timer. Public Class Form3 ' Clicking the button will start the whole thing... Private Sub btn_Click(sender As Object, e As EventArgs) Handles btn.Click bw.RunWorkerAsync() ' This is my BackgroundWorker control Form4.ShowDialog() ' Show my animation form End Sub ' Here you would do your actual takes-a-long-time processing. Private Sub bw_DoWork(sender As Object, e As System.ComponentModel.DoWorkEventArgs) Handles bw.DoWork Dim done = Now.AddSeconds(10) ' will pretend to work for 10 seconds. Dim cnt = 0 Do cnt += 1 Debug.Print("Pretending to work... " &amp; cnt) Loop Until Now &gt; done End Sub Private Sub bw_RunWorkerCompleted(sender As Object, e As System.ComponentModel.RunWorkerCompletedEventArgs) Handles bw.RunWorkerCompleted Form4.Hide() ' This gets called when the DoWork sub completes End Sub End Class
I don't have to, but this was first thing that came to mind when designing it
Looks good, thank you... but I don't want to do the work on another thread, I just want animation to be on another thread, I don't want to pass the BW the info it needs to do what it needs to do, and it does need info from the main form, so I was just going to have main form do processing, while animation runs on BW so that user doesn't think program froze if it takes a while.
Ok then, how about like this: Imports System.Threading Public Class Form3 Private Sub btn_Click(sender As Object, e As EventArgs) Handles btn.Click Dim t As Thread = New Thread(AddressOf ShowFormAnim) t.IsBackground = True t.Start() DoWork() t.Abort() ' this kills the animation form End Sub Private Sub ShowFormAnim() Application.Run(New Form4) ' create a message loop on the 2nd thread End Sub Private Sub DoWork() Dim done = Now.AddSeconds(3) Dim cnt = 0 Do cnt += 1 Debug.Print("Pretending to work... " &amp; cnt) Loop Until Now &gt; done End Sub End Class By default, there is only one UI thread in your WinForm app and it's generally seen as "bad practices" to create more than one. It complicates things if you need to communicate between forms in different threads. I still think you should modify your design to have the background worker do the work on a 2nd thread and keep the UI single threaded. Note that you'll get a ThreadAbortedExeception on the "t.Abort" line up there. You can ignore it. You could setup a way to communicate with Form2 to tell it to close if you prefer.
Generally we try to separate the "business logic" of our applications from the UI. That you insist on having your Form1 do the work indicates that your app is deeply linked to it's UI. If you had to redo it as a web app, for example, you'd probably have to refactor a lot of your app to extract the processing from the UI (or redo all your processing logic in Javascript so that it could run in the client's browser). You'll also add a lot of complexity to your app if you try to get different forms on different threads to talk to each other and exchange information. Having multiple threads means that you'll need to manage concurrent memory access using locks, mutexes or semaphores... you might ship an application that seems perfectly fine but experiences deadlocks or race conditions in rare situtations. Those bugs are a pain in the ass to debug. Even if you manage to get everything to work perfectly, you still end up with (IMHO) unnecessary complexity. You could have an app doing the same thing without "weird" parts (how many times have you seen "Application.Run(...)" in the middle of a form?). All the work that your Form1 does could be separated to it's own class (Form1 is a class itself, after all). Form1 could bind it's various controls to the properties of an instance of that class to deal with the input/output. You could then pass that class object to your background worker to do the processing and have "the classic way" of doing background work while your UI remains its "standard" one-thread self. Bonus: If you need to do the processing in some other application at some point, your class will be a lot easier to re-use because it doesn't depend in having a WinForms form attached.
Ah, okay, I think I understand now. Thank you.
This is a good project to start learning VB with, however you need to be a little more specific about the problems that you need help with. Do you have a functioning (or at least half-functioning) prototype of what you're trying to build? Additionally - I'm unclear of what you're trying to save to the text file. Will that be the answers? Or questions themselves? And if so - you need to be more specific on the format that you want to store that structure in (XML, JSON, CSV, etc). Also wondering why you chose the text file as a format in which to store the data. I would suggest using the database, as it is a more natural fit for what you're attempting to do. 
Thanks for responding! I just updated what I have so far. I'm trying to use a list to account for all the inputted questions and answers, however I've only used really basic arrays before, like: val(1) = "test" val(2) = "this" val(3) = "string" Or the kind where you use a For x to z loop. Based on some stackoverflow posts I've gotten to the point where the code works in that (I think?) the list is updated and the combobox for questions and answers reflect what is on the list. However, I can't connect the two so that I can select things in the comboboxes and check if they are correct. In terms of saving as a text file. I figured it would be simpler. Basically, have it output sort of like "question goes here" ; "answer goes here" "next question goes here" ; "answer goes here" and so on. Then I can use the semicolon as reference in the code when importing. I've never done it before, but it's generally what I do for Microsoft Access or Excel text imports so I figured it was possible. 
It is certainly possible! However, I would recommend that you store your questions and answers in a list of objects, so that they wouldn't get separated from each other. A simple object class would look like this: Public Class qna Public Property question as String Public Property answer as String End Class Thereafter, you can create an instance of the class (what we call an object) simply by using the Dim command, except that instead of Dimming a string we Dim a "qna" instead, like so: Dim instance as New qna instance.question = "How high does the sycamore grow?" instance.answer = "If you cut it down, you will never know" 
Yeah, maybe I should do it as a side project. I would have made the side scroller for my culminating but I don't want to risk not finishing. Maybe I'll make hangman or something. As you said, I will probably end up hating myself especially since I only have about 15-20 hours to work on this project, if I did it for school? That said, do you have any suggestions for a game that could be doable in that period of time that could be unique but also not overwhelmingly difficult?
I always recommend Minesweeper as a starting game! It's reasonably easy, gives you a chance to show off OOP knowledge (if any), and can be themed and reskinned however you like once the basic engine is in place. I made Minesweeper in about 3 hours from scratch, so it's definitely doable in 15-20 hours, even if you're completely new to programming. The first step would be figuring out the underlying data structure beneath Minesweeper, then sorting out the logic for the numbers to show up. After that it's just a matter of theming, presentation and so on, but that can all be done after the engine is functional. Hangman is fine as well, though, but it's slightly harder in my opinion, and doesn't give you as many opportunities to show off your programming knowledge. In Minesweeper, you can store and present each square as an object. In Hangman, you'll never need to use OOP: only string manipulation and so on. Boring, if you ask me!
Okay, so two questions: What would an example list of objects look like, compared to my previous basic idea of what an array looks like. Also, would a dictionary be preferable to a list? I was considering that because maybe it will be easier to reference to the combobox? i.e. after I input all the questions and answers, I'm not sure how the items in the combobox will be referencing the specific area in the list so that each question will be paired up with the correct question regardless of if the sort order in the comboboxes are randomized. (Never used dictionaries before) edit- The way I picture it in excel is, all the entered questions and paired up answers will be in a separate table. When I press a button, a question will appear in a cell and using the match and index formulas, the expected correct answer. See example: http://i.imgur.com/9dwxIVK.png?1
Dictionaries need to have a unique key, so if you're sure that you will never repeat a question or answer, that's fine. I similarly considered a Dictionary when I read of your request, but discarded it because it doesn't really fit your requirements. A dictionary is great for things that need to be "translated", eg. if the number "1337" always translates into "elite" in a program, but less so for other purposes. A List of objects would look very much like an array! Except that, unlike arrays, List dimensions are not defined and will grow or shrink automatically. The best part of using a List, however, is the ability to use For-Each. Say I have a List of qna objects that I call qnaList. Here's how I create the list and add stuff to it. Public Sub populateQnaList() Dim qnaList as New List(of qna) qnaList.Add(newQna("Question 1", "What is your name?")) qnaList.Add(newQna("Question 2", "What is your age?")) qnaList.Add(newQna("Question 3", "What is the air-speed velocity of an unladen swallow?")) End Sub Public Function newQna(question as String, answer as String) as qna Dim instance as New qna instance.question = question instance.answer = answer Return instance End Function So the function newQna takes in two arguments - one question, one answer - and generates a new qna object from those two arguments. It then spits the object back out to whatever requested for the function in the first place. You add stuff to a list by using the list.Add() sub. Therefore, I add a new qna object to the qnaList by using qnaList.Add(nameOfObjectHere)... except that I don't need to give this object a unique name. Instead, the object is plucked from newQna and immediately slotted into the List without you needing to give much more of a crap about it.
Now that qnaList is populated, let me show you the power of For-Each. For Each qna in qnaList Console.Writeline(qna.question) Console.Writeline(qna.answer) Console.Writeline() Next qna That code is enough to give me this output in console: &gt;Question 1 &gt;What is your name? &gt;Question 2 &gt;What is your age? &gt;Question 3 &gt;What is the air-speed velocity of an unladen swallow? Magic! What it does is that it runs through each qna object in the list and, for each one, does something to it. In this example code, all it does is display the question and answer to console, but you can of course do a lot more with it, from writing a search function to altering data or whatever.
&gt; Yeah, maybe I should do it as a side project One bit of advice. I realize that you are learning VB6 in class, but it's really ancient (I still don't understand why they teach VB6). Once you get done with class, and start doing side work, get VB.NET, and learn it. All of the basics you have learned will move forward to it, and it's far more powerful. 
I believe it is still taught(at least in my school) to give an understanding of what programming is. Once you learn the general logic behind basic programming the only thing needed to learn another language is learning the new syntax for doing what you learned to do
My suggestion would be to simplify your game. I would make something that doesn't scroll. I can't think of what it would be called but I'm thinking something with a pacman style stage that doesn't change. You walk around on the stage and kill all of the enemies that spawned, you popup something saying the level is cleared, you start the new level and enemies spawn in new places. You don't change the level between rounds, you don't have to keep up with offscreen enemies, you don't have to deal with partial tiles or anything of that nature. Other game ideas: Snake, minsweeper, pinball, checkers, chess, tictactoe, frogger I made a side scrolling mario~ game for fun in my free time using directx but for my class project I made a simple text based rpg. You have to scale it around your available time. I highly recommend doing a project you think is going to be super easy and adding to it rather than tackling something hard/unknown when it's for a grade. If you liked my advice but need something slightly different or want more examples just reply to this or message me would be glad to help :) I can also help with any programming questions. Best of luck!
I get that, but why VB6, instead of VB.NET. IMO, it's just as easy to learn the simple stuff they teach in these classes, and students can go home and get the current version for free (I have no idea how they are using VB6 since there was never an express / free version). 
Numerous ways you can do this, but here is one: Private Alphabet As String() = New String() {"A", "B", "C", "D", ... "Z"} Private Function ConvertString(ByVal Input As String) As String Dim Output As New List(Of String) Dim Split As String() Dim Num As Integer Dim Delimited As Boolean If Input.IndexOf(",") &gt; -1 Then ' Is the string comma delimited already? Split = Input.Split(CChar(",")) ' Split into an array by comma. Else ' Split by each char. Split = Input.Split() Delimited = True ' Output needs to be comma delimited, otherwise "10" is "1" and "0" End If For i As Integer = 0 To Split.Length - 1 ' For each character in the string If Integer.TryParse(Split(i), Num) Then ' See if it's an integer, if so Output.Add(Alphabet(Num)) ' Add the corresponding Letter to Output Else ' it's a Letter so convert it to an integer from 0 to 25 Output.Add(Alphabet.IndexOf(Split(i).ToUpper).ToString) End If Next If Delimited Then Return String.Join(",", Output) ' Convert to a delimited flat string; "A,B,C" or "0,1,2" Else Return String.Join("", Output) ' Convert to non-delimited flat string; "ABC" or "012" End if End Function So, "HELLO" would become: "7,4,11,11,14"... "7,4,11,11,14" becomes "HELLO" Same would apply if you want it to be case-sensitive... just expand your Alphabet... "A","a","B","b"...etc... You can also do it by using the ASCII/Unicode values, Asc(Split(i))... converts "A" to "41" (I think? somewhere around there)... then you can do the reverse with Chr(Integer.Parse(Split(i))) to convert "41" back into "A"... then you don't need an alphabet/index, and you can also do things like [Rot13](http://en.wikipedia.org/wiki/ROT13) You could make my example code *much* cleaner, but not sure what level you might be at.
I'm pretty new. I don't know what "delimited" means, and the return string.join is very confusing... I don't know what much of this code means. I have a final project due Friday for my class, and this is what I chose, I thought it would be easier than it actually is. Thanks for your help, though. 
Are you using [simple substitution cipher](http://en.wikipedia.org/wiki/Substitution_cipher)? In this case the solution should be simple. I would suggest using dictionary to encode/decode the values and treating your string as an array. Dim dictValues As New Dictionary(Of Char, Char) 'Bind the values in the dictionary dictValues.Add("a", "1") dictValues.Add("b", "2") 'Original String Dim strPlain As String = "TestString" Dim strEncoded As String = String.Empty 'Iterate through every char in the string to encode the value For Each c As Char In strPlain.ToArray() Dim encodedChar As Char 'Attempt to retrieve the encoded value of the char If Not dictValues.TryGetValue(c, encodedChar) Then strEncoded &amp;= encodedChar End If Next Console.WriteLine("Encoded String: " &amp; strEncoded)
CSV... "Hello,My,Name,Is,Watermelon"... verses "HelloMyNameIsWatermelon" If you convert a string like "Hello" to just integers without them being separated somehow... you end up with "7411114"... and no way to tell if you should convert the "7" or the "74" into a character. String.Join() just converts an array, back into a string. String.Join(",", {"A","B","C"}) The output of that would be "A,B,C"... String.Join("", {"A","B","C"}) The output of that would be "ABC" no commas...
Thanks for your reply. Would you add a dictionary value for every letter? Also, what does the For Next loop where you iterate through every char do? Do I just need to enter what substitution I'm doing?
Yes, you would have to add the dictionary value for every letter. I'm not really sure what substitutions you're doing and how you plan to represent each of the letters so I've only used 2 values for demonstration purposes. The "For Each" loop is easy to understand if you read it backwards. Your input string (*strPlain*, which I set to "TestString" in my example) is converted to array of chars using "ToArray()" function. This function will produce the following array: {"T", "e", "s", "t", "S", "t", "r", "i", "n", "g"}. After the conversion you will iterate through each of the elements of this array, encoding each char, by retrieving it's value from the dictionary. Hope this helps 
It helps a lot! Thank you. Simple and straight to the point. 
I don't recommend you try plugging the code snippets I have up there into your own code. Instead, write a little console application where you mess around with the concepts that I've showed you. Once you understand it fully, then you can try to incorporate it into your main project.
The easiest way is to store them in the registry through the use of My.Settings, but since you have a lot of data, the most appropriate way is to store them in a text file using TextWriter and, later, load them using TextReader.
I have another question... What does the "c" mean in the For Each loop? Thanks. edit I am also getting an error that says, "An item with the same key has already been added." any suggestions?
i need help calling an ASP.net web based app from VB can anyone help me with what commands to use?
If you have your information in a class structure, you can serialize (ie, "save") them to .xml files using .Net's serializer. Example: &lt;Serializable&gt; Public Class Master Public Text As String Public Details As New List(Of Detail) End Class &lt;Serializable&gt; Public Class Detail Public Property Text As String End Class ' Create some data Dim mst = New Master With {.Text = "Master record"} Dim det1 = New Detail With {.Text = "Detail A"} Dim det2 = New Detail With {.Text = "Detail B"} Dim det3 = New Detail With {.Text = "Detail C"} mst.Details.AddRange({det1, det2, det3}) ' Save to file Dim xml = New XmlSerializer(GetType(Master)) Using sw = New StreamWriter("Data.xml", False) xml.Serialize(sw, mst) End Using ' to reload that data structure Dim mst As Master Dim xml = New XmlSerializer(GetType(Master)) Using sr As New StreamReader("Data.xml") mst = xml.Deserialize(sr) End Using Using the serializer saves you from having to manually parse and set all the text to your variables.
"My.Settings" do not save to the registry. They save to either the app's .config file or to the user's \LocalSettings\ApplicationData\..., depending on the scope you choose. [More info on MSDN](http://msdn.microsoft.com/en-us/library/ms379611%28v=vs.80%29.aspx)
You probably don't, as you'd remember creating a class (or classes) to put it in. :) If your data is held in the Form's controls, you can still create a class to hold the various values and save that class. Create a class similar to this: Public Class UserData Public Username As String Public DateOfBirth as String Public GenderIsMale as Boolean '...and so on... End Class Then, in your form when you click "Save" you can: Dim ud = New UserData ud.Username = TextBox1.Text ud.DateOfBirth = DateTimePicker1.Value ud.GenderIsMale = RadioButton1.Checked *Then* you can serialize "ud" to some file using the code shown previously. To reload, you do the opposite. It's still a bit of an improvement vs. using an ordinary textfile, since it saves you having to format, parse and validate the file (that will be done automatically by the serializer.)
With VB.Net, you can't. Well, you *might* be able to just give the .exe to someone and have it work, but if that person is missing an assembly or doesn't have the correct version of the .Net framework, it won't work. If you target .Net 2.0 and don't use any class libraries (whether 3rd party or your own), the .exe will run on most versions of Windows from Windows XP SP3 and up. Just make sure that any resources (icons, images, music, text, etc) you're using are embedded in the .exe Microsoft have announced a ".Net Native" compiler which will allow for the creation of standalone executables, but there will be some restrictions as to what you can use in the libraries. It's coming very shortly (and might already be available in the most recent Visual Studio update... I'm not sure)
Ah, I stand corrected. 
Go into your programming files, look for bin/debug. There will be an exe file there, along with whatever other files you created in runtime without specifying a path. 
The only ones that's pretty much guaranteed to be used: System.IO System.Text.RegularExpressions System.Threading It makes, File.\*, Regex.\*, and Thread.\* easier to type. Although System.Math is always used, I don't bother, because using Math.*() is easier to read, I know it's using a built in function, as apposed to one of my own. Unless I have a class/module that does nothing but math functions, then I'll import it for that. Other than that, like JakDrako said... whichever ones need to be, or make it easier/faster. 
System.Data.SQLClient, System.Data.Oledb My own Namespace for things I written to save time.
Like (sort of mentioned)... use My.Settings.* Once you have them setup, using the settings designer, it's pretty trivial. With My.Settings .SomeSetting = TextBox1.Text .SomeOtherSetting = ComboBox1.SelectedIndex .SomeOtherOtherSetting = DateTimePicker.Date End With For loading: With My.Settings TextBox1.Text = .SomeSetting ComboBox1.SelectedIndex = .SomeOtherSetting DateTimePicker.Date = .SomeOtherOtherSetting End With You can actually tie them all together so it's done automatically, excluding things that need to be parsed/interpreted.... ApplicationSettings/PropertyBinding... in the properties for the control. Or do it manually, etc. Remember that SpecializedStringCollection exists... which is a List(Of String) but for settings. My.Settings.SomeSetting.Add("Foo") Dim Foo As String = My.Settings.SomeSetting(30) So you can have pretty complicated settings all held in an array.
 System.Linq because linq should be used all day every day :D
Why do you need a value?... I mean, ANY number will be less than infinity, so just assume it's existence. Within reason, though: Double.MaxValue 1/0 will just cause an error. You could also think of it the opposite way... If SomeNumber &gt; -1 Then ' It's less than infinity Also look into Math.Max(#, #) and Math.Min(#, #)
Huh, never knew the existence of Double.MaxValue. I think that should do the trick, thanks! I basically just want something that, when compared against, will always return as bigger than the comparison object: e.g. X &lt; infinity will always return true.
Ugh, Regular Expressions. My favourite quote about Regex is "When someone has a problem they think, 'I know! I'll use Regular Expressions!'. Now they have two problems"
There are constants for infinities: Dim posInf = Double.PositiveInfinity Dim negInf = Double.NegativeInfinity Any operation that results in a number greater than MaxValue or smaller than MinValue will give you one of those. You can use .IsPositiveInfinity, .IsNegativeInfinity and .IsInfinity to compare those values. A bit [more info](http://msdn.microsoft.com/en-us/library/system.double.positiveinfinity.aspx)
I used to agree. Then I saw this: dim sn = "1234567890" dim lastSixDigits = sn.reverse.take(6).reverse.aggregate(string.empty, function(s, c) string.concat(s, c)) :)
Cheers, exactly what I was looking for!
c is a variable to which the item is assigned during the loop. As you iterate through the list the c is set to "T", than "e", than "s" and so forth in the context of your loop until it reaches the end and exists. The other way to represent this for loop is: For i = 0 To strPlain.ToArray.Length - 1 Dim currentChar As Char = strPlain(i) Dim encodedChar As Char 'Attempt to retrieve the encoded value of the char If Not dictValues.TryGetValue(currentChar, encodedChar) Then strEncoded &amp;= encodedChar End If Next As for the error message - the error message is pretty straightforward. The dictionary is just that - a collection from which you can retrieve using a key. Keys should be unique, so if you're adding elements with the same key - you will get this error message. dictValues.Add("a", "1") dictValues.Add("a", "2") ' This will throw the exception
Thanks! You will need a secondary dictionary to store the values for decoding. I suggest creating a routine that fills them both. And yes, post what you have so far and I'll take a look. Alternatively you can share your project on github.
I already made a post, but wouldn't mind asking here. I got this really amazing job, and they decided to teach me how to code! They work in dotnet and told me I should start researching visual basic right away! I get tasks here and there, but I would like to remain focused, and was wondering where a great source of ebooks for this particular matter would be? Anything that would help a beginner walk to intermediate and hobble to pro in any real amount of time, doesn't matter. We have 2008 and 2010 here, I don't know which I'll be using ultimately because I cannot find anyone in the dang office to ask that question... so I'll just say both or either. Thanks for any help in advance and wish me luck on this endeavor.
I use 2012 sorry.
that's fine......that doesn't eliminate that possibility of you knowing where resources would be located though, does it?
Nice. Thanks.
I can't really recommend any current books (I stopped buying them years ago), but this video series should get you going: http://channel9.msdn.com/Series/Visual-Basic-Development-for-Absolute-Beginners Beyond that, If you are doing web then go through ASP.NET and all of the content there, and either way dig deeper into the videos on Channel 9. The only book recommendation I have would be to see if you can find something by Rod Stephens. I do have some older versions of his books and they were quite thorough. 
Also keep in mind that the core hasn't really changed. The IDE is close enough that you'll probably do fine with newer references (and you can download 2012 Express to learn with as well). 
I appreciate this. thanks.
Public Class Form1 Dim strString As String Dim intLoop As Integer Dim chrChar As Char Dim dictValues As New Dictionary(Of Char, Char) Private Sub btnChange_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnChange.Click strString = Me.txtString.Text strString = strString.Replace(" ", String.Empty) Dim strEncoded As String = String.Empty For Each c As Char In strString.ToArray() Dim encodedChar As Char MessageBox.Show(c) 'Attempt to retrieve the encoded value of the char If Not dictValues.TryGetValue(c, encodedChar) Then strEncoded &amp;= encodedChar End If Next Me.lblEncryption.Text = "Encoded String: " &amp; strEncoded End Sub sorry if the code looks really bad, i don't know how to format it.
http://i.imgur.com/xCJLaxf.png here is a picture. also, what does the "if not then" code do? sorry if I'm asking too many questions. 
This most likely will not work, since you're not using the Simple Substitution Cipher. Your idea of cipher is still valid, but you will need a different approach, simply due to the fact that you'll be unable to decipher it using the approach you chose. For instance the value of A in your example is "1" and the value of K is "11". Encoding "aa" will produce the same result and it will be impossible to determine the original value. Substituting one character with two will not work. You need to either stick to using the mixed alphabet, where a = b, b = c, c = d etc, or you'll need to choose a different approach which produces a comma separated values, that you can split upon when you decipher. 
Thanks for your help. 
Okay. I changed the values to different symbols and it STILL doesn't work. Any ideas?
This is a link to the code: https://www.dropbox.com/s/7c411ulppdsok30/code.txt Sorry if I'm smothering you with questions. This program for one of my classes is due soon, and I feel like I almost have it done, but I'm missing some essential parts. Thanks so much.
I'm on my phone and can't do much right now. Can you elaborate on what you mean when you say "it doesn't work"? Are you able to step through the code to see what it is doing?
Sorry I did not elaborate. By "it doesn't work," I mean that no ciphered text is showing in the label. I tried stepping through the code and I do not know what is going on. Sorry. 
I got it to work! The problem was that in the dictionary reference if/then statement, there was a "not" in there. I deleted it for curiosity's sake, and it works! Thanks so much for your help. 
No problem! Glad it worked out. I didn't have a visual studio with me and kinda typed it up in a rush in a notepad. Totally oversaw the "Not"! Good luck with your exam!
Thank you!
Cool! I recently created a program for school that used dictionaries to cipher/decipher different pieces of text. 
http://pastebin.com/A4gz1XWp
Nah, I'm just some guy with an interest in computers that got really lucky, and now I cram for the rest of my life, I do believe. thanks
I enjoy this article for the collection in a collection.
Okay... I have my code back except this union find (?) stuff...
 For i As Integer = 0 To strsongs.Length - 1 lstsongs.Items.Add(strsongs(i)) Next Alternatively, you could do all of it at once: For i As Integer = 0 To 4 strsongs(i) = InputBox(...) lstsongs.Items.Add(strsongs(i)) Next Which will ask 5 times, for a song, each time adding it to your array, then adding that item to your ListBox.
THANK YOU SO MUCH!! :D
You can also add them all at once as well using AddRange() For i As Integer = 0 To 4 strsongs(i) = InputBox(...) Next lstsongs.Items.AddRange(strsongs) There's no difference really, AddRange() is more efficient especially with larger sets... but not necessary as clear what is happening, and gives you less control over how items are added (like reformatting them, etc).
 For i As Integer = 0 To reel FirstNum.Text = generator.Next(0, 9) SecondNum.Text = generator.Next(0, 9) ThirdNum.Text = generator.Next(0, 9) Application.DoEvents() ' Allows the Textboxes to update/change text. Threading.Thread.Sleep(100) ' 100ms Next This is the most simple/quickest way, but not really the best way. Another option... use a Timer with say 100ms interval, that calls the sub... when you want it to 'spin' enable/start the timer, after say 10 iterations, stop the timer. Private Tick As Integer Private Sub TimerX_Tick(...) Handles TimerX.Tick Tick += 1 CallSomeSub() If Tick &gt;= 10 Then TimerX.Enabled = False Tick = 0 End If End Sub Edit: Apparently no [*.Sleep()](http://stackoverflow.com/questions/12641223/thread-sleep-replacement-in-net-for-windows-store)... Task.Delay() instead.
DoEvents and Thread.Sleep both don't exist (apparently) for XAML apps. I'll try a timer. I tried task.delay, but it didn't seem to do anything.
To get a patterned interval with Task.Delay() you'd probably have to do something like: Private Tick As Integer Sub DoStuff() Tick += 1 If Tick &lt; 10 Then ' Do something await Task.Delay(100) DoStuff() Else Tick = 0 End if End Sub Which is basically the same as using a Timer... you call "DoStuff()" once... and it will loop itself with a 100ms delay 10 times, and then just leave the sub and stop.
To have the user save and load his document files, you can use VB's OpenFileDialog and SaveFileDialog (you can put those "controls" on your forms, but I prefer to use them like this: Dim sfd = New SaveFileDialog If sfd.ShowDialog = Windows.Forms.DialogResult.OK Then MsgBox("Save file to " &amp; sfd.FileName) End If And Dim ofd = New OpenFileDialog If ofd.ShowDialog = Windows.Forms.DialogResult.OK Then MsgBox("Open file " &amp; ofd.FileName) End If You can set various properties on the controls before calling .ShowDialog. To reload your UserData object, it should look a bit like this: Dim ud As UserData Dim xml = New XmlSerializer(GetType(UserData)) Using sr As New StreamReader("Data.xml") ' put the file name you got from the dialog here... ud = xml.Deserialize(sr) End Using At this point "ud" should contain your previously saved data. You can then put it back in your controls by doing the reverse of what you did to save: TextBox1.Text = ud.Username DateTimePicker1.Value = ud.DateOfBirth RadioButton1.Checked = ud.GenderIsMale ' and so on... As for using "ud" in the load part, you need to create a new variable (Dim ud as UserData). The class UserData should be available to both the save and the load parts. If it isn't, you need to move the class definition to somewhere where it'll be "public" to both routines. The simplest way is to add a class to your project (named UserData), make sure it starts with "Public Class UserData" and put the definition there.
&gt;don't tell me to try to make a different game because this is due tomorrow and i don't have time Make another game. If it was due tomorrow, maybe you should have looked at the code and realised that there was a problem earlier. Homework is _your_ responsibility, and your terrible, demanding and entitled attitude isn't helping either.
I'm sorry if I seem terrible demanding and entitled. I don't have time so I put things as directly as possible. And also I know homework is my responsibility but I only have 3 hours until this is due and I was out of ideas on how to solve this problem, and this project is worth my entire grade for this quarter. And how the hell am I supposed to realize there was a problem earlier? I try to do things correctly to the best of my effort but I can't always see errors coming before they happen. Also I solved the problem by making it a full screen game
I'm not sure if you understand what Await, and Async actually does. Await... means well Await. Async means that it's called and then returns. Sub One() End Sub Sub Two() End Sub Sub DoStuff() One() Two() End Sub One() will run, then return, and then Two() will run (typical/as expected)... however if One() and Two() are Async, One() is called/initiated... and immediately returns before whatever One() does... and then calls Two()... so unless they are very small Subs, they can run at the same time. When you call Spin() in your Button.Click... it's immediately returning to your Button.Click... so all of the code after Spin() is called, runs... since that's such a small amount of code, it all runs in nanoseconds... however... the code in Spin() is still running... it's waiting 200ms, then another 200ms, etc... The code in Button.Click is all happening, but... it's being over-written by the code in Spin() which is actually happening *after*. To make Spin() run before the rest of the code, you would have to call it like: Await spin() Which means Button.Click needs to be an Async Sub too, and so on and so forth. I'm rather new to the whole Async stuff as well, since I normally just go "screw it" and use Threads instead, but I *think* this should work, if you replace your *'spin()'* call with: Do While Not Tasks.Task.Run(New System.Action(AddressOf spin)).IsCompleted ' Some mundane task. Loop You could also use: Tasks.Task.Run(New System.Action(AddressOf spin)).Wait() Which is basically the same as Task.Delay()... and can also take a millisecond value. However, it seem to me that you could do the opposite of what you tried when merging Subs... merge everything after your *'spin()'* call, into the end of your spin() Sub. Edit: also, you can Dim tasks... Dim SpinTask As New Tasks.Task(New System.Action(AddressOf spin)) SpinTask.Start() Do While Not SpinTask.IsCompleted Loop Etc... maybe even try that using: SpinTask.RunSyncronously() But I don't think that forces the Task.Delays to run Syncronously, so... it probably won't help... unless you make another Sub that only does what's being done in your For/reel/Loop... then call that syncronously...etc All in all, Timers seem to be looking for pleasing... if you can't use Threads.
Yeah, I definitely don't know what Async or Await do. Thanks for the info. My programming knowledge is pretty much limited to Java and VBA I learned in school, and that never really got into things that were useful for writing *real* programs.
I get that, I just don't know the programming terms or the finer points of how they work :P
the line xml.Deserialize(sr) should be ud = xml.Deserialize(sr) 
No problem. When you need to compare to pieces of code, I suggest using [WinMerge](http://winmerge.org/) WinMerge highlists differences between similar lines [(screenshot)](http://imgur.com/Zf3ZJeD). You can easily see "ud =" is missing from the code on the right. The longer the similar code is, the more time you'll save... 
Hey, give the man (girl?) a break. It's possible he (she) had more than one homework, and unfortunately chose to do them in the wrong order. Without looking at your code, the symptoms imply you are using screen coordinates instead of form coordinates. It seems /u/vectronic has some more details 
Pressing F5 and running it to see what happens, and if you need to fix any bugs. This is called "debugging". For my final project, I used 100,000 words of code, wrote 15000 words of documentation and it worked like a charm, even 3 hours before it was due.
A few things jump out: Any number "mod 1" will give 0. When you test for "nothing", you must use "... Is Nothing", not "="; you probably want to test for String.Empty here (or "") The error could also happen if plr_name(0) has not been instanced (ie, "is Nothing"); when you try to assign then result of the InputBox function, you'll get that error. 
I actually have no idea why I put Mod, I meant step. Im trying to make it so that if nothing is entered, then the user is prompted repeatedly until they enter something. Any suggestions? Thanks for the help so far 
It's hard to tell without seeing what your types are. What is a *player*? Is that a collection? Or an integer? And what about *plr_name*? How either of these are constructed? NullReferenceException is just that - Null Reference. My bet would be that your collection your I is set to a number which is not represented in your array.
&gt; Player is a value from a combo box Dim player As Integer = Integer.Parse(ComboBox1.SelectedItem) &gt; the error is with the first line in the loop Do you have something like: Dim plr_name(ComboBox.Items.Count - 1) As String Otherwise, if you only have: Dim plr_name As String() That's your Null when you try to access plr_name(0), the array has no *length*. &gt; prompted repeatedly until they enter something. For i as Integer = 0 to player - 1 Do While plr_name(i) Is Nothing plr_name(i) = InputBox(...) Loop Next
Sorry for delays in getting back to you; my wife just had our baby this week. I've edited the union-find code so it should be closer to correct, though since I'm at home I haven't had time to actually check it in an IDE. All of the parts you need should be there. Working through the rest and trying to understand what's going on should be a good exercise for you. Good luck!
Congratulations! And no problem, I actually took the rest of the day off after I sent that reply to you. Okay, probably will be a good exercise thank you :) Edit: Also, I am about to Google this but, is there a way to make VS 2014 express version show the line numbers in the editor? Edit again: NVM I found it with Google :) And for future reference (I didn't take long to find it), in VB.net 2014 a `For` loop is ended with `Next` not `End For`
The class has no errors left but: &gt; `If (index1 &lt;&gt; index2 AndAlso miscellaneous criteria) Then`... this gives me errors like "miscellaneous is not defined" and "expected ")"" so it thinks it should be ended, which might just be because it doesn't know what miscellaneous is
the current "step 1" was initially "mod 1". It was edited by OP.
Thank you very much!
Yes, as mentioned i edited it, it was mod before
Ah, makes sense now.
 Dim Files As String() = IO.Directory.GetFiles("YourDirectoryPath", "*.ext", SearchOption.TopDirectoryOnly) Where *YourDirectoryPath* is C:\Something, etc... and the "ext" on \**.ext* is the extension you want... you can also use: SearchOption.AllDirectories To get the files from sub-folders too... then to delete: For i As Integer = 0 To Files.Length - 1 IO.File.Delete(Files(i)) Next Or: For i As Integer = 0 To Files.Length - 1 My.Computer.FileSystem.DeleteFile(Files(i), FileIO.UIOption.OnlyErrorDialogs, FileIO.RecycleOption.SendToRecycleBin) Next Which also has "AllDialogs", and "DeletePermanently" options.
Yes, "miscellaneous criteria" isn't executable code; it's a note to you to replace it with whatever dictates when a match is found. So something like: If (index1 &lt;&gt; index2 AndAlso (element1.Attribute("id") = element2.Attribute("id") OrElse element1.Attribute("name") = element2.Attribute("name"))
I made something just for this: [Download link](https://dl.dropboxusercontent.com/u/52602726/File%20Deleter.zip) for the project, using my program along with /u/vectronic 's code then you should get some good knowledge. 
Oh, okay, sorry I didn't get that hint :p. Thank you
Hey Narf Squared. I just started teaching myself visual basic as well. Try this out. Please share anything that you have found to be good as well. I would really appreciate it! Thanks! http://www.tutorialspoint.com/vb.net/
Okay... I did that because it is exactly what I want to do, and it says that "the '=' operator is not defined for type System.XML.Linq.XAttribute and System.XML.Linq.XAttribute", so I am looking for an alternative to the equals "=" operator that *will* work, I don't get why it doesn't, I would think that whether or not it is "defined" shouldn't matter, it should just see if they have the same value *AT LEAST* if they are the same type! Edit: I think I fixed it by adding ".ToString" to the end of each element.Attribute("Whatever") 
https://www.youtube.com/watch?v=eiog7Kf33MI&amp;list=PL53J49tcNQyT5xdkgHBcgoRLpPpc5P9j6 Thanks! There ya go. I don't know if you're already beyond this or not, but this is excellent for starting! OMG... I'm learning more than one thing and wasn't paying attention to my titles and context... that is sql stuff. HAHAHA... sorry. I have nothing but books at the moment.
Yes! This works with a very simple modification, I just added ".ToString" to the end of each element.attribute("attributeName")! Thank you very much!
That's alright haha. I already know SQL, so not super useful to me :/
 If Bullet Hits Aliens(#) And Aliens(#).Visible Then Aliens(#).Visible = False You probably don't want to actually remove the PictureBoxes, re-using them will be more efficient. Just test if the "hit" PictureBox is visible or not. This way you can just set PictureBoxes back to Visible rather than re-creating them... and for "Next Level" simply add more to the existing array. ^Edit: ^Other ^code ^isn't ^VB6 ^valid, ^but ^this ^pseudo-code ^still ^works...
I think you could do this with ascii. I haven't coded for a minute but you should be able to find the ascii code for the letter and subtract 25 (I think) and set that as output. So the code would get the ascii value of the input, subtract "x" from the ascii value, then output it. And you could set that as. Function to get rid of redundancy 
Is that really the easiest way? It seems so complicated there has to be a simpler way
It's the way that I personally would do it. You could manually assign the values also but that would be really long coding I'm on mobile so I can't do the best formatting, but this is how I would do it upperText1 = Text1.toupper AscText1 = asc(upperText1) NumberOutput = ascText1- 64 Again I don't know the actual coding as it's been a while, but that is how I personally would do it. 
If text = a then 1 Elseif text = b...
This exactly. You could do nested if blocks like this or just individual ones. Nested if blocks would be cleaner And have less chance to throw errors.
 Dim alphaDict as New Dictionary(of Char, Int) alphaDict.Add("A", 1) alphaDict.Add("B", 2) ... alphaDict.Add("J", 10) To use: Dim input as Char = "H" Dim stuff as Integer = alphaDict.Item(input) 'stuff will be equals to 8 Just make sure that it's always in the uppercase format. You can ensure this by calling input.ToUpper when you pass input into the dictionary.
That is what I was trying to say. OP was asking about the obfuscated way to do it though :p 
I've ran with breakpoints and it stops exactly on the 'next'.
You mean it runs through the loop once and then ends at Next? or does it go to Next immediately?
What's contained in your txt file? It ends at 12 because you asked it to run till newCount using "For temp = 0 to newCount"; so if newCount = 12, it would run a total of 13 times and then stop. I'll need to know if the code is actually reading the file you open correctly and storing it as you intend it to, but honestly, it might be easier to just read the file using [TextReader](http://msdn.microsoft.com/en-us/library/system.io.textreader.aspx).
http://pastebin.com/MHUKrdfq Is contained in it. The assignment requirements expect 15 as the max number of products as the teacher uses a different product file.
I seemed to have got it working and boy was it a simple thing. Just had to -1 off newCount. Damn I over complicate things. Thanks for the help :P
Another way would be to build a string of your letters Dim Letters as String = "-ABCDEFGHIJ" YourNumber = Letters.IndexOf(yourLetter.ToUpper) Since the index starts at 0, the - is used to move A to the 1 position of the string. But I personally would use xanex18's method myself. 
Without some code we don't really have much to go on ...
Thanks I didn't think of that! I have added it (although I rushed it and missed the arraylist sort but I posted it below). Thanks for the advice 
I've only ever IO'd using streamreader/writers
That's the debug version though, when compiling switch to the release version and use the .exe from that folder instead?
happy cake day, I like the simple elegance of that idea. 
Fair enough. before this last summer I used to debug for everything, plus that's what my teacher had me do. Since I've just been developing on my own for little projects that no one sees. Are there decent jobs in the world using vb.net?
Definitely. In fact, I don't think it's far to say that VB.NET - along with VBA - is the most popular language in the world when it comes to developing business applications. They're usually not considered to be "real programming" jobs: as in, you rarely get a job where your only task is to write applications in VB. However, there's a good chance that you'll get a job as a general IT guy and need to write VB applications as part of your job scope.
Have you tried: Dim Size as Size = new Size(500, 500) Me.Size = Size That seems to always work for me. Though I'd assume it works the same way as Me.Size = New Size(500, 500) But it was worth a shot :P
Turns out that if you call another sub or function prior to setting the size it doesn't work. So you have to have the sizing in the beginning of the load sub. Has that always been that way? I guess prior to this project I've always set the form size before doing any other work. I'm not sure why that would matter but apparently it does. 
It's been like that since I've used VB.Net.
I honestly have no clue, not too far into VB atm :P Also does your function not end to continue the code and resize the form? As I've had that problem recently of a For Loop just ending at the 'Next' and exiting the sub completely rather than continuing the code.
I call a sub that populates a datagridview which I call on form load. It returns to finish the rest of my statements but can't resize the form then. That's so weird. But at least it's working now. 
Have you tried to add break points and step through them to see if it exits it properly?
I am guessing, that the sub or function called has an unhandled error, which causes a far exit in my code sometimes. I still can't work out, why sometimes I get an exception thrown sometimes, and other times the code is just not executed and the form is shown. 
I'll look because that's always a possibility. 
If it is possible, could you copy and paste your code on here, I'm on mobile and couldn't download the file to review it. 
THis is a great place. let me look at it I will post later. Odd just tried to download it but it comes back with a malware warning from chrome. File is fine for those who are wondering. 
Record a macro of you doing a few manually. Then edit the macro to make it work with your checkbox. Be aware that using checkboxes, textboxes, buttons etc is not as much fun as it sounds.
&gt; Not sure why this was downvoted Reddit is infested with 14 yr olds with fragile psyches - and non functional brains.
Thanks :p 
Returning numbers which are the same does not mean that they're not being returned as random. But if I understand correctly - you do not want to return same numbers consecutively. The only way is to retain that previous number between the calls (either through a public variable, or a store method of some sort (session, cache, etc). With that number saved or passed in as an argument you can recursively call the random function until the unique number is returned. 
It's not elegant but why not store the random number to a variable and on the next pass compare the two numbers and if they are the same, just generate another number until it's different? Alternatively, use System.Random to generate a byte array of as many random numbers as you want, and iterate through them, discarding element n if it equals n-1. Read the VS help for System.Random - it's all there. In other news, if you use the Rnd() function, the following produces random integers in a given range randomValue = CInt(Math.Floor((upperbound - lowerbound + 1) * Rnd())) + lowerbound And I just copied that out of the Visual Studio help ...
 Private Rands As HashSet(Of Integer) Public Function Random() As Integer Dim R As Integer = Int(4 * Rnd) + 1 ' Your current Rnd method If Rands.Count = 4 Then ' Reached maximum, 1,2,3,4...2,3,4,1... 4,1,3,2...etc Rands.Clear() Else Do Until Not Rands.Contains(R) R = Int(4 * Rnd) + 1 ' Keep trying for new integers from 1 to 4 that haven't been used in this set. Loop End If Rands.Add(R) ' Add it Return R End Function HashSet for performance, but List(Of Integer) or Integer() would work too.
Keep the last generated number, if its the same as a new one generate again, rinse repeat.....
The best way is to use a For-Next loop to generate a list of sequential numbers, and then shuffle using something like the Fisher-Yates or Knuth algro. The code may look something like this (aircoded, so you may have to fix it): Dim rndList as New Stack(of Integer) Dim rng as New Random 'populate list sequentially For n = 1 to 4 rndList.Push(n) Next 'Knuth shuffle For i = rndList.Count - 1 to 1 Step -1 Dim j as Integer = rng.Next(0, rndList.Count + 1) Dim temp as Integer = rndList.Item(i) rndList.Item(i) = rndList.Item(j) rndList.Item(j) = temp Next Every time you want to generate a random number thereafter: rndList.Pop 
Thanks all!
If you want values from a discrete domain in a random order you can pick from a list: Private values As IList(Of Integer) = {1, 2, 3, 4} Private Function NextRandom() As Integer Dim index = Int(Rnd() * values.Count) Dim picked = values(index) values.RemoveAt(index) Return picked End Function
Not a problem, but just a simplification (does the same thing as both User/Pass Subs): Private Sub txtPassword_TextChanged(sender As Object, e As EventArgs) Handles txtUsername.TextChanged, txtPassword.TextChanged btnLogin.Enabled = txtPassword.Text &lt;&gt; String.Empty AndAlso txtUsername.Text &lt;&gt; String.Empty End Sub Likewise, add both Handles to: Private Sub rbCash_CheckedChanged(sender As Object, e As EventArgs) Handles rbCash.CheckedChanged, rbCredit.CheckedChanged Reduces code redundancy/copy/pasting/etc when editing. Stuff like this: Dim buttonSize As Size = New Size(75, 177) Dim buttonLocation As Point = New Point(412, 98) btnCheckout.Location = buttonLocation btnCheckout.Size = buttonSize Can be: btnCheckout.Location = New Point(412, 98) btnCheckout.Size = New Size(75, 177) You could also flip some of your If/Else... for instance: If X And Mode = False Then Elseif Y And Mode = False Then End If To: If Mode = False Then If X Then ElseIf Y Then End If End If There's quite a few places where you are redundantly testing "Mode" multiple times when you can usually (if not always) get away with one check. Stuff like this: Private Sub btn50d_Click(...) ... Could all be reduced to a select case: Private Sub btn_Click(...) Handles btn10.Click, btn20.Click, btn30.Click, etc... rbCash.Enabled = Not Mode rbCredit.Enabled = Not Mode Select Case DirectCast(sender, Button).Name Case "btn10" amountPaid += 10 amountOwed -= 10 Case "btn20" amountPaid += 20 amountOwed -= 20 Case ... End Select refreshPrices() End Sub You could even do something like: amountPaid += Integer.Parse(DirectCast(sender, Button).Name.Substring(3, 2)) Which takes the last 2 digits from the name, converts it to an Integer, and adds it to *amountPaid* of any button who's Click event triggers that sub. You could merge all of them down to a single Sub(): Private Sub btn_Click(...) Handles btn10.Click, btn20.Click, btn30.Click, etc... rbCash.Enabled = Not Mode rbCredit.Enabled = Not Mode amountPaid += Integer.Parse(DirectCast(sender, Button).Name.Substring(3, 2)) amountOwed -= Integer.Parse(DirectCast(sender, Button).Name.Substring(3, 2)) refreshPrices() End Sub Way easier to maintain. Also, you *should* be using *AndAlso* and *OrElse* instead of *And* and *Or*, they perform way better since they exit out of testing as soon as one condition makes any of the following invalid/false/etc. For instance: If e.KeyCode = Keys.Back And txtBarcode.Text.Length &lt;&gt; 0 And Mode = True Then That only evaluates to "True" after testing each of the 3 conditions, but: If e.KeyCode = Keys.Back AndAlso txtBarcode.Text.Length &lt;&gt; 0 AndAlso Mode = True Then Will fail if e.KeyCode is something other than 'Back'... which makes the following two conditions invalid, so no need to test them. In this case it's not necessary, but can be *very* useful for something like: If SomeFunction(X) AndAlso SomeOtherFunc(Y) AndAlso SomeFuncer(Z) Then Each of those might be very complex, so if the first one fails, you're not running pointless code that will fail anyways.
Thanks, I'll be sure to keep these in mind.
if you check frmMainMenu2.vb and frmMainMenu2.Designer.vb, do they both say "inherits Form" on the line after "public class frmMainMenu2" ?
Without code, this is something you'll have to debug yourself. Walk through anything that deals with client numbers, looking for stuff like: ClientNumber &gt; 9 AndAlso ClientNumber &lt; 100 ClientNumber.Length = 2 ClientNumber.Substring(0, 2) etc, etc... and replace accordingly to accommodate 4+ digit numbers. You should probably be using minimums rather than fixed upper bounds on ID #'s... and likewise parsing to allow for any digit length greater than the minimum. That way it can handle old 2D and the new 4+D numbers.
Not really enough code, but going by what's there, this: ListBox1.List(ListBox1.ListCount - 1, 1) = str Should be: PropertyLimits.ListBox1.Items(PropertyLimits.ListBox1.Items.Count - 1) = str ie: PropertyLimits. + ListBox... And: *.Items() Not: *.List() And only: Items.Count Not (X, Y). Also: k = \*.ListBox.**Items**.Count ... not just ListBox.Count
I can not thank you enough! This has fixed it! Thank you so so much
Thank you! I was missing the word List, took me forever to find it. fixed everything.
Could you provide an example? The course I am making this project for is introductory so I don't really understand what you mean with the ByVal stuff. Also would the Code for checking if something has been hit be something like: (My collision is under public function collision) if imgalien(i).visible=false then Public Function Collision = false End if Sorry, about not understanding you well, I'm still trying to learn. Thank you for the help.
I messed up when typing out the code, under If cnt = 5 then The picture box visible property was set to true which yielded no results. The timeris enabled from the properties window. I will try adding it to form activate. I did not have a code to reset the counter to zero. I will try this. All that is supposed to happen is two picture boxes will move from the top of the form to the bottom of the form. This needs to happen every 5 or so seconds. Also what is DoEvents and what does it do? How do I add, is it just something like Private Sub DoEvents() It's not in the list of events so is it something you have to add manually? 
DoEvents is a command which basically lets the program know that it can stop and check the events queue for events, and handle them. It's a relic from VB6 and prior. It came up because I thought your code may be running too fast, and not letting the repaint event (triggered by moving the pic boxes) get handled. Anyway, I would go back to basics and debug.print(picbox1.top) to verify that the values are changing. Perhaps slow the timer down to 1000 (1 sec) to see if things are working. 
Just change the line of &gt; If IsRectEmpty(r3) Then into this: &gt; IF IsRectEmpty(r3) OR imgAlien(i).Visible = False Then Not the most efficient, but will fix your immediate problem. *oops fixed it in edit.
Since this is a website your problem is not an upload problem it is an interaction problem. I have been working with web scrappers via the HTTPRequest Object. This object allows you to interact with a webpage as if you were automating a browser Using this you can easily perform an upload by mimicing the post event. I have done this with the Imgur api, so I see no reason for you to not be able to do it with pomf.se. [Microsoft Documentation] (http://msdn.microsoft.com/en-us/library/debx8sh9.aspx) [Youtube Video Explanation](http://msdn.microsoft.com/en-us/library/debx8sh9.aspx) you can also google "vb.net http post example" **Bone** 
Thank you very much. You are a life saver. Looking at this, I realized just how much I tricked myself into thinking that the solution would be difficult.
A module is simply a chunk of code that is treated as if it were part of all your forms. Therefore, any functions or subs you write in a module attached to your project can be accessed from any form, and the same goes for any variables you declare at module level. Your assignment is to write two functions in a module. Have you tried writing out the code for the functions yet? Remember that functions can take in arguments and use those arguments when returning values. 
I have the IPO and the variables listed, I also got the code for the functions in VB, I just need help writing the psuedocode. Not in the post, but on my worksheet
I'm confused. If you have the code for the function up, why do you need help with the worksheet pseudocode? Wouldn't it follow the exact same logic? Or are you unsure about another aspect of the program? If so, where?
I'll show you what I mean when I get home. I'm currently at work. May I just pm you? Thanks for taking the time to help me.
Isn't that what a professor is for?
I tried man, Shes pretty bad. Im not taking her next time thats for sure.
Thats what im trying to figure out right now, I know its going to be an nested if
For the nested if, Thats for the tax calculation. Would i just have to write it out? or is there a math equation to it.
That's right! You can either use a nested If-Else or, better yet, a [Select-Case](http://www.homeandlearn.co.uk/NET/nets1p21.html). Why don't you try writing something and we'll tell you if you're on the right track? It's no good for us to just give you the code outright: you won't learn anything that way.
The only mathematical equation you'll have to use is the one calculating the tax. For instance, if the state is FL, tax rate is 6% or, when expressed as a decimal, 0.06 in the generic equation of tax = unitPrice * taxRate 
She doesn't want us to use a select case. This professor doe. dhftgjcdbxghfcudf If state = NJ then taxRate = 0.07 elseIF state = NY then taxrate = 0.04 ELSE taxRate = 0.06 END IF 
yeah i got that. Just sent you the if statement
yeah i dont know why it did that. but i know how to write it out
I would make that last If an ElseIf for Florida , and a last else to catch if they don't enter an appropriate state. Just my $0.02. 
Don't worry about the functions for now, I'll walk you through that later. For now, just think about how you can calculate the tax amount and, later, the final sale price. Write out the code that does all of that, and then we'll look at how we can pluck those bits out and put them into functions.