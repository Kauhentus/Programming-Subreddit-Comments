If it's vb.net that you're learning, you could try going on the freenode.net IRC server, then joining the #vb.net room. I've gotten help from there before. Just make sure you read the topic (contains the rules).
If it's vb.net that you're learning, you could try going on the freenode.net IRC server and joining the #vb.net room. I've gotten help from there before. Just make sure you read the topic (contains the rules).
Thanks! I will definitely give this a try.
There's vbforums.com(more popular) and xtremevbtalk.com (seems to have more skilled programmers). It's not real time, but you can easily get numerous responses within a day.
dictionary's are pretty nice. they are basically a list of key value pairs. you can look up the value by knowing the key, which could be a number. beyond that, you can actually make virtual tables within VB, even with keys and other such database structures. see http://www.dotnetperls.com/datatable-vbnet 
Sweet sounds great, it's gonna be a few hours before I can try it, work sucks
is Sep the delimiter? look into something call the Microsoft scripting runtime. you can add it by going into your references. It makes dealing with files much easier. what you want to google from there is the filesystemobject and the text stream. here's one site. http://vbadud.blogspot.com/2007/06/vba-read-text-files-with-leading.html I think the text stream has a readall method that will load the entire file into a cell. let me know if you need more help and I'll see if I can whip something up for you. 
I think rules should be created as needed. I mean if no one is posting here, then we don't have to worry about rules being broken. 
so, uh, how'd it go? 
If you do post any rules, start it off with "Option Explicit" 
my first professional VB program was over 5000 lines of code. I taught myself so the fact that it worked made me pretty happy, then my boss told me to put that at the top. it took me like 4 hours to make it work again. :( 
Very true, and probably how it'll happen. I was just wondering if there was anything off the top of anyone's head that should be considered a "rule".
if you ask for help, you should come back and tell us how things turned out. 
It went well at first. I stayed up working on it for almost 15 hours until about 8 am and finally finished. Then I went to save it and something weird happened to where I lost everything. I ended up just turning in about 10 minutes worth of work so I failed that. That was not my favorite day.
Sorry to hear that. Learning about auto save is a hard lesson most programmers have to learn. I lost an entire user interface that I had been working on for a week one time. I tried to copy it from one directory to another, then I realized that the directory I copied it to was the wrong one so I deleted it, It was at this point I then realized that I had moved it and not copied it, so it wasn't in the original directory anymore either. I hadn't had a cigarette for 3 years when I did that. I smoked one that day. Sorry I didn't see the post in time or I would have tried to help. I was working in the mines most of that day. 
 If LinesOfCode &gt;= 5000 And AfterOptionExplicit And HoursToFix &lt; 8 Then Bad = Not Bad End If 
&gt; Sorry I didn't see the post in time or I would have tried to help. It was also trapped in the spam filter for the first 3 or 4 days for some reason.. :/
Added to the sidebar.
Ah man sorry. That's seriously unfortunate, an entire week of work. I think the thing that makes stuff like that the worst tho is the way you lose it. It's not like there was some crazy error you couldn't help, you just deleted all your own work without much though. Two clicks and everything you've been working on can be gone. It's all good, lesson learned. I got 1/100 on the project, but still passed the class. Good enough for me I suppose. 
Some of the most valuable lessons learned in college aren't always taught in class. At least you don't have to take the class again. Good luck. 
True, thanks for the words.
Remember, when you graduate, your diploma will look just like the diploma of the guy who got 100/100 on that project. As long as you passed, it's all good!
Thanks. That's actually a very helpful thought. : )
Instead of msg.subject="whatever", you can use if msg.subject.instr("blah")&gt;-1 then do your stuff here end if the .instr function returns the first instance where "blah" is found in your string. This way if it returns anything larger than -1, that means it's found and you can process your script to save the attachment.
can it be used with I already have, such as: If (Msg.SenderName = "Trent Johnson") And _ (Msg.Subject.InStr("test") &gt; -1) And _ (Msg.Attachments.Count &gt;= 1) Then
Absolutely. This would trigger if the sender was trent, the subject contained the word test somewhere in the subject, and it had at least one attachment.
I am now getting a compile error: Invalid Qualifier The line that is highlighted in the debugger is: Private Sub Items_ItemAdd(ByVal item As Object) http://imgur.com/Bo8HP
it's possible that it doesn't like msg.subject.instr. You might need to do msg.subject.tostring.instr instead. Try that.
Same thing when switching to msg.subject.tostring.instr
I guess .instr doesn't exist in vba that way. Ok, this should work: instr("test", msg.subject) &gt; -1 I don't recall off the top of my head but you might have to switch "test" and msg.subject in the function call. That should work fine in vba.
That worked! Thanks a ton for the help!
Glad to be of service!
Have you tried using an asterisk? dialog2.Filter = "Icon files|*.ico" I believe if the filter is invalid, it'll just display all files. Specify other filemasks as so: dialog2.Filter = "Icon files (*.ico)|*.ico|All files (*.*)|*.*" And to display the image: PictureBox1.ImageLocation = OpenFileDialog1.FileName.ToString() edit: added stuff. 
&gt; Now when i change OpenFileDialog1 to OpenFileDialog ... That might be because you declared your *OpenFileDialog* as *dialog* (or *dialog2*) and FineHamAbounds used *OpenFileDialog1*, so try: PictureBox1.ImageLocation = dialog.FileName.ToString() or PictureBox1.ImageLocation = dialog2.FileName.ToString()
First off, I'll answer your question regarding the "If (Microsoft Vista/XP/7) Then" code. ---- From the webpage you linked, we can see the OS version numbers. If you do Debug.Print(System.Environment.OSVersion.ToString) it will print something similar to the follow to the immediate window: Microsoft Windows NT 6.1.7601 Service Pack 1 In this case, the **6.1** part is listed on the [table](http://msdn.microsoft.com/en-us/library/ms724832(v=VS.85\).aspx) as Windows 7 or Windows Server 2008 R2 (they're based off of the same kernel). From this, we can use the kernel/build number to determine the user's OS using something similar to: Dim os As OperatingSystem = System.Environment.OSVersion If os.ToString.Contains("6.1") Then MessageBox.Show("Windows 7") ElseIf os.ToString.Contains("6.0") Then MessageBox.Show("Windows Vista") ElseIf os.ToString.Contains("5.1") Then MessageBox.Show("Windows XP") Else MessageBox.Show("Unknown OS: " &amp; os.ToString) End If If you wanted to include Windows Server 2003 or XP 64-Bit, you'd probably want to either make another ElseIf or use ElseIf os.ToString.Contains("5.1") Or os.ToString.Contains("5.2") Then But if you were to use ElseIf os.ToString.StartsWith("5.") Then You would include Windows 2000 in with your XP category. ---- Now to answer your other question regarding the framework your program will use. VB2010 uses .NET Framework 4, as you said. To make your program compile with a different version, follow these steps: 1. Click Project in the menu bar 2. Click &lt;ProjectName&gt; Properties 3. Click 'Compile' (left side) 4. Click Advanced Compiler Options (button at the bottom) 5. Click the Target Framework drop-down menu at the bottom 6. Select the version of the Framework you want to compile with That should do it. If you need screenshots of this, there are a couple of them [here](http://www.vbdotnetforums.com/ide/43140-change-net-framework-2-a.html#post123066). 
Without doing the work for you, I can tell you that you'd want to look at the filesystemobject as that will allow you to get a list of directories and files. Now, when you retrieve those listings, it will be in order by string so not necessarily the expected numerical order.
Awesome. Thanks for your help!
You're welcome. Hopefully I gave you enough to do some googlefu and find out some good answers. If you need more help just ask but I think this should give you a good start.
To get it working while the program is running, you should setup a timer and have it called every few seconds to check the processes. Why it doesn't work on firefox or chrome is beyond me. You can check that by looping through the processes and outputting to debug what the p.MainWindowTitle is. Then you can check to see what's going on.
You asked something similar before. Post your code.
Euclid: a will eventually reach 0, "b = b Mod a" will throw a Division By Zero error. Exit out before that. I don't find any errors in the GCD ones and they seem to be returning correct values unless I'm mistaken. 
Yes, they use different protocols
Double click the form1.vb in the solution explorer to open the form. You should use the .sln to open the project (at least, I do that...). Any other questions i'd be happy to answer.
Thank you for your response.
This is perfect! Thank you very much!
Something you need to do to learn to code is practice coding. As you said, you familiarize yourself by reading, but it sinks in by doing. Just think of a program you want to create, start off with something simple, and create it. When you get stuck, google it. You will probably be googling something quite often at first, and spending more time reading than coding, but keep at it and you will learn it. 
The one question I'm always left with after reading all the programming books is why? They do a decent job of explaining different aspects of object oriented design and other such things, but they never explain why you would want to do such things. 
That looks like a great resource! I'll link it in the sidebar for future reference.
nevermind i just figured it out :X
Thanks for the quick reply. I realized that the only transparency is false transparency and you must use the background image. Summary of my code: character walks right if character is 25 from right side and walking right scroll background so it still looks like char is walking this worked however I had no transparency, now it has transparency but I can't scroll the form's background image. I'm screwed. Please help I need this or the whole concept of my game does not work.
sorry about weird formatting. damn reddit reformats for me.&amp;#3232;\_&amp;#3232; 
Okay I've had about a year of java and have actually been done with the almost all of the years work since about halfway through. I'm using Visual Basic Express 2010 (I'm beginning to question I'm in the right subreddit). Anyways, I made a picture box with a transparent png and set the background to transparent. I can definitely manually code the picture box if needed but for now the transparency doesn't work. Image below. http://i.imgur.com/D0B9L.jpg
From what you are saying, it sounds like you are using Java. If this is true, I'm afraid I won't be much help there. I am only familiar with visual basic/ VB.net. If the sprite itself is it's own picturebox, you could try something similar to: PictureBox1.BackgroundImage = Nothing 
Yes but I think your talking about images. I wrote some code that would make the background scroll if I got to the edge of the screen, but transparency only works with the form's background image, not an image you put to the back. So having this said, that code would be awesome but I simply can't use it because I need transparency in my main character.
yes it is probably security because your doing stuff with system32... maybe disable windows firewall or any anti-virus software you might have? I'm not really not sure though.
Off the top of my head you could do something along the line of: MsgBox("1." &amp; vArray(1) &amp; "2." &amp; vArray(2)) etc. etc. Where vArray is you array.
No need for x.ToString you can simple use totalsString &amp;= (x &amp; ": " &amp; invoiceArray(x)) That should be enough to do it
This works now, though the output of it is a little funky. I changed it a little bit so instead of displaying 1: 0 2: 0 3: 0 4: 0 5: 0 6: 0 7: 61.34 8: 23.12 9: 64.90 10: 73.80 it removes the zeros in the array so it becomes 7: 61.34 8: 23.12 9: 64.90 10: 73.80 However I can't seem to get the numbers to start right as you can tell. It's almost like it's storing the numbers backwards in the array. Any ideas? Here's the updated code. Dim totalsString As String = Nothing Array.Sort(invoiceArray) For x As Integer = 0 To UBound(invoiceArray) If invoiceArray(x) &gt; 0 Then totalsString &amp;= (x &amp; ": " &amp; invoiceArray(x) &amp; vbCrLf) End If Next MessageBox.Show("TheNumbers: " &amp; vbCrLf &amp; totalsString &amp; vbCrLf, "Array")
Excellent! Glad to have helped.
Hey! Self-taught Visual Basic here. I took classes for C++ years ago.
Lots of self taught folks here! I'm starting to get that bug as well. 
I use a RadioButton, and set it's property 'Appearance' to 'Button'.
WOW that just made my life SO MUCH SIMPLER. The only thing that I'm struggling with now is that I can't paste the formula in a way that is consistent with where I want vlookup to look. So if I have =VLOOKUP(A{i}, Typings!A2:Y1001, {j}, FALSE) how can I copy-and-paste this formula into the rest of the sheet in such a way that the second argument remains unchanged throughout the whole sheet, but {i} increases relative to the rows, and {j} increases relative to the columns?
You will have to pick something to use. Consider the "/" or perhaps the "." depending on what kind of output you're looking for... samplestr = "Http://www.google.com/someextrastuff.html" sampleoutput() = split(samplestr, "/",,vbTextCompare) sampleoutput2() = split(samplestr,".",,vbTextCompare) How would that work for you? You could always add them back into the outputed array sampleoutput(i) = sampleoutput(i) &amp; "/" 
It sounds like your data is going horizontally? Try HLOOKUP, it's just like VLOOKUP except it's meant to go horizontally.
If you want "Typings!A2:Y1001" to remain completely static, change it to "Typings!$A$2:$Y$1001". The dollar sign keeps a column or row number static when drag-filling or copy-pasting. 
This doesn't work? middleName = fullName.Substring(n + 1, m - n).ToString.Trim
The thing about trim is that it only removes leading and trailing spaces, and does nothing about the spaces in the middle of a string. So, unless the extra spaces are at the beginning or the end of the string, trim won't really work. As far as I know, and I'm by no means a professional (so take what I say with a grain of salt), the easiest way to drop the extra space characters is to iterate through the string, and remove anything more than one space in a row. Here's how I solved pulling the middle name out of the string: Dim name As String = "John Thomas Doe" 'variable to hold the replacement string Dim name2 As String = "" Dim spaceCount As Integer = 0 For Each letter As Char In name 'if this letter is a space than add one to the count, 'otherwise, assume it's a letter, and reset the count. If letter = " " Then spaceCount += 1 Else spaceCount = 0 End If 'if the space count is less than 2, then add the character to the 'new string. If spaceCount &lt; 2 Then name2 += letter Next 'after the extra spaces are cleaned out of the original string, split 'the string where the remaining spaces are, and assign them to an 'array. Each name should be one item in the array. '*EDIT:Trim would be useful here to remove any leading space, which would mess up the array. name2 = Strings.Trim(name2) Dim nameArray() As String = Strings.Split(name2) 'the middle name will be the second item in the 0 based array. Dim middleName As String = nameArray(1) 
You didn't say what version of vb, I'm guessing you mean vb6, see: http://www.a1vbcode.com/vbtip-123.asp I would do something similar in .net, or loop through the array.
While it would work, its a slow way to go about it, and will use more code than is needed. An even faster way would be something like I linked to earlier in this thread, or to use regex. I'm on my phone so giving code examples is kinda hard...
Linq would make this quite simple to write. One line will do pretty much all of the dirty work. Function nameToArray(ByVal str As String) As String() Dim rtn As IEnumerable(Of String) = From thing As String In Strings.Split(str, " ") Where thing &lt;&gt; vbNullString Select thing Return rtn.ToArray End Function and then put the middle name in the textbox with: dim name() as string = nameToArray(fullName) txtMiddle.Text = name(1) 
Yes but it's common to all web addresses.... and easy to work with... was just taking a stab at it in case they didn't realize them as an option.
thankyouthankyouthankyouthankyou
* Which version of Visual Basic are you using? The first link shows VB.NET code, the 2nd, VB6. If you're using anything beyond Visual Studio 6.0, then it's .NET. * Generally, your game will run in its own Window. You will use this Window to detect keystrokes. If you want to detect system-wide keystrokes (keystrokes that happen 'outside' of your game/when your game is minimized/doesn't have focus, etc.) then that is different. I'm guessing it's the former, as it should be. I'm going to post some VB6 code since that's what I know. If you're using VB.NET, its upgrade wizard should (by now especially) be able to convert the code without much, if any, problem. [View keystrokes being pressed](http://pastebin.com/PqkYgpwt) [Handle keystrokes](http://pastebin.com/NvyMH8XX) [Handle and log keystrokes](http://pastebin.com/FX987Umh) Finally, if you *are* using VB.net, then here is the form file that you can open with it and it should be converted to .NET automatically. Just save it as **MyGame.frm** and open it with VB.NET. [Here it is](http://pastebin.com/w9fXVz8t).
I need to clarify. I am working in Access 2007 using forms and vba. Is there an event where I can put some code that will select a control on the parent form of a subform in a specific control. For example, I am in the last control on a subform and I tab out. On Loss of Focus I want to override the event and set the focus to the next control on the parent form. What is the syntax to do this? Please let me know if I need to move this question to a different forum. Thanks Tom
He has to keep track of what index everythings at then if he wants to further manipulate them later, look at hash table. Or just... dim pb as new picturebox With pb .location (0,10) .dock = dockstyle.fill .backcolor = color.blue .visible = true .bringtofront() End with Frmname.controls.add(pb) Not tested, typed on my phone, but you get the idea. That's how to basically do it. There's then doing things like creating list(of pb) and such, and adding the controls using a loop to and such. Depends what you are doing obviously.
It sounds like it didn't install properly. Have you tried reinstalling or running the repair option?
Multiple times and i get the same error everytime.
If reinstalling does the same thing, maybe try right-clicking the install file and run as administrator. Also when you click start, type in visual in the search bar at the bottom and visual basic should pop up. If so, right-click and run as administrator.
I am repairing it now as administrator. I have a good feeling about this time but i'm not sure why. I just restarted my computer as part of the installation process so i'll keep you posted on how it goes. EDIT: Still getting the same error. This is very frustrating.
I search 'visual basic' i believe and nothing showed up. I have tried to run 'devenv.exe' as admin but to no avail. I am in the library right now so i will edit this post once i get back to my laptop to test out anything else. EDIT: Still haven't figured it out but i'm not gonna give up just yet.
I am the admin
I did something very similar, however I used datagridview to show the data. I have a numeric up/down that represents the number of rows, when it goes up it's as simple as datagridview.rows.add and to remove is datagridview.rows.removeAt(row)
That's exactly what I need! Thank you very much.
He could also use vbc from commandline for something that small. However, I smell home work so ill leave op to do the legwork.
thanks guys upvotes for you :)
What happens when you run it? Is it erroring or just not doing anything? If it errors, where does it error and what does the error say?
I dont have VS on this machine so i cant test your code but for starters - drop the TSQL right away if you plan on adding much more of it to your app. Its SLOOOOOwwwwwww It bogs your app down like treakle and is a huge, huge nightmare to manage as your app grows - Use a class or library with your functions for getting, setting, counting data etc in. Then you can re-use those everywhere so you are always accessing data the same way, and use Stored Procedures - it will be much, much faster. You could also thread your data access off (you said form, im guessing winForms but you could mean web form), and since its all done from one place it makes adding threading to your app much easier too. *-EDIT:-* oh wait, instead everyone downvote me for pointing out inline TSQL is slow. Carry on doing it that way instead. Sheeesh...
You posted this a month ago, so you've probably already found a solution. And while I've never tried this, my curiosity got the better of me and I began a search. What you're trying to do is known as: drawing a control in the "non-client area" of a windows form. I recommend doing some VB.NET related searches. But here are some links to C# code that you may be able to port for your needs. A good explanation of the non-client area and some C# code: http://www.codeproject.com/Articles/32623/Vista-Aero-ToolStrip-on-Non-Client-Area Something I read suggested using an API call to GetDesktopWindow() to obtain a handle to the desktop and using SetParent() to set your control's parent to the desktop: http://www.hightechtalks.com/dotnet-framework-winforms/how-create-control-non-client-205028.html Good Luck! 
I actually figured this out! Put "txtReport.Text = txtReport.Text &amp; "Total bonus paid: " &amp; decTotalBonus.ToString("C2") &amp; ControlChars.NewLine" in and it solved the problem.
Here's a few tips: Private Sub btnCalc_Click(sender As Object, e As System.EventArgs) Handles btnCalc.Click 'Dim intSales() As Integer = {"2400", "1500", "1600", "2790", ' "1000", "6300", "1300", "2700"} 'These are Integers, so don't use String constants Dim intSales() As Integer = {2400, 1500, 1600, 2790, 1000, 6300, 1300, 2700} Dim decRate As Decimal = 0 Dim decBonus As Decimal = 0 Dim decTotalBonus As Decimal = 0 Dim intSubscript As Integer = 0 txtReport.Text = " " &amp; "Bonus" &amp; ControlChars.NewLine If Not Decimal.TryParse(txtRate.Text, decRate) Then MsgBox("Can't parse the bonus rate... Please re enter.") Exit Sub End If For intSubscript = 0 To intSales.GetUpperBound(0) ' calculate the bonus decBonus = Math.Round(CDec(intSales(intSubscript) * decRate), 2) ' display the salesperson's number, bonus and total txtReport.Text &amp;= (intSubscript + 1).ToString &amp; " " &amp; Format(decBonus, "#,##0.00") &amp; ControlChars.NewLine 'accumulate the bonus paid decTotalBonus = decTotalBonus + decBonus Next txtReport.Text &amp;= "Total bonus paid:" &amp; Format(decTotalBonus, "#,##0.00") End Sub 
Actually brilliant you are on :P For the last column I have date however is there a command for vb to save a date into that database. I have saved that column as Date/time?
Oh well you have to declare date1 as a variable (string in this case). I was just making up a variable name.
Ah ok, well it is mostly working now. Literally thank you so much for your help!!!
If I want to have 5 values to put into columns where do I add the extra ""
VALUES(""" &amp; value 1 &amp; """, """ &amp; value2 &amp; """, """ &amp; value3 &amp; """, """ &amp; value4 &amp; """, """ &amp; value5 &amp; """)"
Thank you. Now because the primary key is has got to always be different. I made the first column an autonumber in my database and that can't be changed. How can I create a autonumber function(if that is what it is) so that the same number don't turn up?
You could do it so it just finds the highest number and then +1's, or make your own random algorithm based on what the time is.
This is what I have at the minute: Dim CurrentDate As System.DateTime = System.DateTime.Now Dim CurrentTime As System.DateTime = System.DateTime.Now Dim maxrowsresults As Integer maxrowsresults = ds.Tables("QuestionData").Rows.Count + 1 CurrentDate = CurrentDate.Date CurrentTime = CurrentTime. I know the .date will save the current date into the database, however I don't know which one will save the time. Because "System.DateTime.Now" saves everything into one column, I just want them to be seperate. 
Ah right ok, thats incredible thanks. This autonumber thing is annoying though. I used it before but because now it has to have something in the column it makes things that little bit more difficult aha.
This is VB6 but should be pretty interchangable and give you an idea of how to set it up using your constants at the very least. You'll have to figure out how to handle the 0 (error) value, or output something different. One other thing, your dblCase3 Const should = 0.02, not 0.2. If dblWeight &lt; dblMinimumWeight Or dblWeight &gt; dblMaximumWeight _ Or dblDistance &lt; dblMinimumDistance Or dblDistance &gt; dblMaximumDistance Then decTotal = "0" Else If dblWeight &lt;= 2 Then decRate = dblCase1 ElseIf dblWeight &gt; 2 And dblWeight &lt;= 6 Then decRate = dblCase2 ElseIf dblWeight &gt; 6 And dblWeight &lt;= 10 Then decRate = dblCase3 Else decRate = dblCase4 End If decTotal = decRate * dblDistance End If 
So if I am understanding correctly you want; On the tick of the timer if the checkbox on the form is checked, check for a key press, and on the specific key combination feed a string out as a macro. I would suggest that you would be better off with a keyboard hook that is implemented on the checkbox click. This keyboard hook can then fire an event when a specific combination is entered. Here is a chunck of code that implements a keyboard hook; Imports System.Runtime.InteropServices Public Class KeyboardHook &lt;DllImport("User32.dll", CharSet:=CharSet.Auto, CallingConvention:=CallingConvention.StdCall)&gt; _ Private Overloads Shared Function SetWindowsHookEx(ByVal idHook As Integer, ByVal HookProc As KBDLLHookProc, ByVal hInstance As IntPtr, ByVal wParam As Integer) As Integer End Function &lt;DllImport("User32.dll", CharSet:=CharSet.Auto, CallingConvention:=CallingConvention.StdCall)&gt; _ Private Overloads Shared Function CallNextHookEx(ByVal idHook As Integer, ByVal nCode As Integer, ByVal wParam As IntPtr, ByVal lParam As IntPtr) As Integer End Function &lt;DllImport("User32.dll", CharSet:=CharSet.Auto, CallingConvention:=CallingConvention.StdCall)&gt; _ Private Overloads Shared Function UnhookWindowsHookEx(ByVal idHook As Integer) As Boolean End Function &lt;StructLayout(LayoutKind.Sequential)&gt; _ Private Structure KBDLLHOOKSTRUCT Public vkCode As UInt32 Public scanCode As UInt32 Public flags As KBDLLHOOKSTRUCTFlags Public time As UInt32 Public dwExtraInfo As UIntPtr End Structure &lt;Flags()&gt; _ Private Enum KBDLLHOOKSTRUCTFlags As UInt32 LLKHF_EXTENDED = &amp;H1 LLKHF_INJECTED = &amp;H10 LLKHF_ALTDOWN = &amp;H20 LLKHF_UP = &amp;H80 End Enum Public Shared Event KeyDown(ByVal Key As Keys) Public Shared Event KeyUp(ByVal Key As Keys) Private Const WH_KEYBOARD_LL As Integer = 13 Private Const HC_ACTION As Integer = 0 Private Const WM_KEYDOWN = &amp;H100 Private Const WM_KEYUP = &amp;H101 Private Const WM_SYSKEYDOWN = &amp;H104 Private Const WM_SYSKEYUP = &amp;H105 Private Delegate Function KBDLLHookProc(ByVal nCode As Integer, ByVal wParam As IntPtr, ByVal lParam As IntPtr) As Integer Private KBDLLHookProcDelegate As KBDLLHookProc = New KBDLLHookProc(AddressOf KeyboardProc) Private HHookID As IntPtr = IntPtr.Zero Private Function KeyboardProc(ByVal nCode As Integer, ByVal wParam As IntPtr, ByVal lParam As IntPtr) As Integer If (nCode = HC_ACTION) Then Dim struct As KBDLLHOOKSTRUCT Select Case wParam Case WM_KEYDOWN, WM_SYSKEYDOWN RaiseEvent KeyDown(CType(CType(Marshal.PtrToStructure(lParam, struct.GetType()), KBDLLHOOKSTRUCT).vkCode, Keys)) Case WM_KEYUP, WM_SYSKEYUP RaiseEvent KeyUp(CType(CType(Marshal.PtrToStructure(lParam, struct.GetType()), KBDLLHOOKSTRUCT).vkCode, Keys)) End Select End If Return CallNextHookEx(IntPtr.Zero, nCode, wParam, lParam) End Function Public Sub New() HHookID = SetWindowsHookEx(WH_KEYBOARD_LL, KBDLLHookProcDelegate, System.Runtime.InteropServices.Marshal.GetHINSTANCE(System.Reflection.Assembly.GetExecutingAssembly.GetModules()(0)).ToInt32, 0) If HHookID = IntPtr.Zero Then Throw New Exception("Could not set keyboard hook") End If End Sub Protected Overrides Sub Finalize() If Not HHookID = IntPtr.Zero Then UnhookWindowsHookEx(HHookID) End If MyBase.Finalize() End Sub End Class I also cheat and use InputManager Library a lot http://www.codeproject.com/Articles/117657/InputManager-library-Track-user-input-and-simulate 
VBCodeMonkey, I love you. I'm going to tinker around with this, but just looking at it I can already see what I have to do to make this work for me. Sucks that it's so much code for something so small, but I think I'll get over it. Again, thanks!
What is it you ate trying to do exactly? Run nslookup or something using the ip? If so there's no need for all that code no.
Could you be more specific where you actually get stuck? [This is a great code sample](http://www.java2s.com/Code/VB/Class/ClassPropertyGetandSet.htm) that demonstrates assigning values to properties in a class. It looks like you've done good work to this point. Next you need to use the contents of lines() to build an array of Book objects (think for loop). If you had a specific question I'd be more than happy to answer.
Well, I need to get the values out of the string and into the properties of a book class. I could do it with just one book, but I'm not sure how to make it work for an indefinite number of books, because the code has to work if there were more books added. I'm going to check out the example though to see if that helps, thanks for responding! 
Ok, if this doesn't belong than I don't know when it will. Some people, when confronted with a problem, think “I know, I'll use regular expressions.” Now they have two problems. I had to get that out of my system. Now, I think regular expressions will work but it may be easier to split the string on the "*" and then take each section and get the stuff between the []. You didn't specify VB6 or .NET but it's similar in either. In .NET it would be something like: 'inputstring = "[Value 1]*[Value 2]" dim splitparts = inputstring.replace("[","").replace("]","").split("*") debug.print splitparts(0) depug.print splitparts(1) WARNING: Code is not tested but it should be close. EDIT: Formatting improvements. Still getting used to reddit.
I just want to say I agree 100%. Every time I've used regex for something, inevitably I have to come back to it and add just a little bit more, until the regex is an unreadable mess. Now the only time I'd use it is on a throw away program or if there really is no other good solution. 
This would be a little easier if we understood what the application was trying to do, or even if there was a screenshot of what this window looks like. I'm guessing it's some sort of pricing application and the price is a function of the rental duration and the rental equipment (i.e. what you're renting and for how long you're renting it). It also looks like you have a standard set of rental equipment and a standard set of rental durations (i.e. you can't rent something for any amount of time you requires, you have to be renting it for 1 week, 2 weeks, or 3 weeks at a time for example). In that case what it's doing is iterating over the list box that represents the rental equipment and getting the name of the rental equipment. You have an Enum type named "EquipmentType" in the "RentalPrice" class that is named the same thing as what's displayed on the screen, except without the spaced. For instance if you're renting a lawn mower, you have "Lawn Mower" displayed on the screen, and a "LawnMower" value in your EquipmentType Enum. There's also a combo box that allows you to select the duration I'm assuming. I'm guessing that from the "cmbDuration" name ([hungarian notation](http://ootips.org/hungarian-notation.html)). There is a DurationType Enum just like the EquipmentType enum and works the same way. Inside the loop you are pulling the equipment name displayed on the screen and the duration type displayed on the screen. You then remove all the spaces from the strings, effectively squishing the words together. Then these squished strings match the textual representation of the Enum values in the DurationType and EquipmentType Enums. The line &gt; [Enum].Parse(GetType(RentalPrice.DurationType), xx, True) takes the squished string representation of the Enum and gives you the actual Enum value. You do the same thing for EquipmentType. These two values are passed to the Price.GetRentalPrice function and added to a running subtotal. At the end of the loop, the Subtotal variable will hold the sum of all the prices of the individual equipment rentals when rented for the selected duration.
Xx and s are strings, as dimentioned just before. What he is doing is a replace, removing all spaces in the string. Like so: Dim mystr as string = Replace("I like /r/visualbasic on toast", " ", "") Console.writeline(mystr) 'Will print the string with spaces removed (If any spaces exist) to the output window or console. Basically its replace(yourstring, whattoreplace, whattoreplacewith) Replace("192.168.1.0", ".", "_") Would give you "192_168_1_0" No need for the picture carpediemvive, you described it pretty spot on I think.
Hopefully this helps! http://www.zan1011.com/paper.htm
If you can imagine it, you can do it. I've been teaching myself VB for the past couple of years and I'm still amazed by how much I discover is possible to do.
Sorry, ignore the labels I popped in for debugging. The code should look like: Private Sub PictureBox_Paint(ByVal sender As Object, ByVal e As System.Windows.Forms.PaintEventArgs) Handles PictureBox.Paint 'Set the width of the image Dim imgWidth As Integer = Target_Distance_TrackBar.Value * 3 Dim igHeight As Integer = Target_Distance_TrackBar.Value * 3 'Figure out how much larger or smaller the image is than the picture box Dim imgLeft As Integer = PictureBox.Width - imgWidth Dim imgTop As Integer = PictureBox.Height - igHeight 'Set the top and left points to half the distance (to center it) If imgLeft &lt;&gt; 0 Then imgLeft = imgLeft / 2 End If If imgTop &lt;&gt; 0 Then imgTop = imgTop / 2 End If e.Graphics.DrawImage(TheImageOpened, imgLeft, imgTop, imgWidth, igHeight) End Sub Just let me know if you have any other questions. -james
Outsourced. I'm more than happy to share my stuff with coworkers.
Personally, I wouldn't of shared it with her unless that meant a possible contact for a future job. Depending on how it was written or how it was saved (I'm assuming a macro in Excel) it is easy for a shady character to remove the password protection.
Qualifier, I'm not an attorney. That having been said, bad idea. First, it won't accomplish anything more than pi**ing her off. She will back it up or if you sent it to her via email, still have the original after your deletion code runs. Any mildly clever programmer can set the clock back, remove the offending code and be all good. Now the even worse part. Suppose the consultant is relying on that code to work and is entitled to it (you did give it to her after all). She relies on it for other work. Bamm, after May 1st it goes away. Now she's lost work, potentially a client besides you, a potential client, etc. And who will she possibly be able to sue...yeap, look in the mirror. I know this may sound worst case but as someone who's spent way too much time in court and on lawyers (but always winning), assume you will be sued for these type of actions and act, or don't act, accordingly. I'd send her an updated version under the guise of "better version" or "bug fix" which is in fact accurate. TL;DR Bad idea. You gain nothing and have potentially lots to lose.
Thanks a bunch.
You can protect just the VBA code. In the VBA editor, right click the code file and go to properties. There is a tab called "Protection" where he can set a password. If he distributes a .xls file that protection is easily broken. [StackOverflow on how to crack VBA password](http://stackoverflow.com/questions/1026483/is-there-a-way-to-crack-the-password-on-an-excel-vba-project) If he distributes the newer file format, .xlsx, it is much more secure.
Thanks for the advice
Hello James Thanks for helping me before, I was wondering if you could help me further on the same project. How would I make the trakbar that now makes the image larger the higher the value do the opposite and make the image smaller the higher the value? I have attached the project but it has not changed much at all from the last time you helped me with it. http://dl.dropbox.com/u/55477873/VBT6.rar Many thanks in advance Zac 
Well first of all you never exit the Do Loop. You need an Exit Do in there somewhere. I can't even see why you need a Loop at all but I don't have the energy tonight to debug the code.
Update 1 (along with suggestions in a cross post I made to learnprogramming) here is what I have... But it still isn't working 100% When I try and use this code and hit the compute button I get a message box that will not go away. If I delete the message box then nothing computes and all the labels stay empty. Do you have any idea why this might be? Everything works perfectly if I keep the message box in there, expect for the fact that it will not go away. :/ Private Sub btnCompute_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCompute.Click Dim intText As Integer Dim intTextA As Integer Dim intTextE As Integer Dim intTextI As Integer Dim intTextO As Integer Dim intTextU As Integer Dim intTextST As Integer Dim word As String Dim sChar As String Dim i As Integer word = Me.txtScan.Text Dim words() As String = Split(word, " ") Dim NumberOfWords As Integer = words.Count If cbxWord.Checked = True Then intText = txtScan.TextLength lblWords.Text = intText.ToString("n0") End If Do While Boolean.TrueString For i = 1 To Len(word) - 1 sChar = LCase(Mid(word, i, 1)) If cbxA.Checked = True And sChar = "a" Then intTextA = intTextA + 1 lblAs.Text = intTextA.ToString("n0") End If Next i For i = 1 To Len(word) - 1 sChar = LCase(Mid(word, i, 1)) If cbxE.Checked = True And sChar = "e" Then intTextE = intTextE + 1 lblEs.Text = intTextE.ToString("n0") End If Next i For i = 1 To Len(word) - 1 sChar = LCase(Mid(word, i, 1)) If cbxI.Checked = True And sChar = "i" Then intTextI = intTextI + 1 lblIs.Text = intTextI.ToString("n0") End If Next i For i = 1 To Len(word) - 1 sChar = LCase(Mid(word, i, 1)) If cbxO.Checked = True And sChar = "o" Then intTextO = intTextO + 1 lblOs.Text = intTextO.ToString("n0") End If Next i For i = 1 To Len(word) - 1 sChar = LCase(Mid(word, i, 1)) If cbxU.Checked = True And sChar = "u" Then intTextU = intTextU + 1 lblUs.Text = intTextU.ToString("n0") End If Next i For i = 1 To Len(word) - 1 sChar = LCase(Mid(word, i, 2)) If cbxST.Checked = True And sChar = "st" Then intTextST = intTextST + 1 lblSts.Text = intTextST.ToString("n0") End If Next i MessageBox.Show("None Found" &amp; intText) If Boolean.FalseString Then Exit Do End If Loop End Sub
Ok, just get rid of the Do While loop completely -- it's not necessary. The message box actually does go away, it's just that the Do While loop (henceforth referred to as DWL) causes it to be displayed again immediately. The DWL is causing an endless loop, and that's why nothing is happening when you get rid of the message box -- because it's actually happening *constantly, endlessly*. So, lose these lines: Do While Boolean.TrueString If Boolean.FalseString Then Exit Do End If Loop And then see what it does. On a side note, is this pre-.NET VB, or VB.NET?
I know this is solved but I wanted to point out an easier way to do this using LINQ. Dim sq = From p In TextBox1.Text Where Char.ToString(p) = "A" Select p Debug.Print(sq.Count) LINQ will search the string for you and if you output the count of the results (sq) you will have your answer. If you want a one-liner you could do something like this: Debug.Print((From p In TextBox1.Text Where Char.ToString(p) = "A" Select p).Count)
Old thread, but I've tried [this](http://www.theofficeexperts.com/VBASamples/Excel02.htm) a number of times with success. It won't return the actual password but one that'll still pass. Usually looks like AAAABBBBAAAA or similar. Might be a bit easier for some than hex editing. Sub PasswordBreaker() 'Author unknown but submitted by brettdj of www.experts-exchange.com Dim i As Integer, j As Integer, k As Integer Dim l As Integer, m As Integer, n As Integer Dim i1 As Integer, i2 As Integer, i3 As Integer Dim i4 As Integer, i5 As Integer, i6 As Integer On Error Resume Next For i = 65 To 66: For j = 65 To 66: For k = 65 To 66 For l = 65 To 66: For m = 65 To 66: For i1 = 65 To 66 For i2 = 65 To 66: For i3 = 65 To 66: For i4 = 65 To 66 For i5 = 65 To 66: For i6 = 65 To 66: For n = 32 To 126 ActiveSheet.Unprotect Chr(i) &amp; Chr(j) &amp; Chr(k) &amp; _ Chr(l) &amp; Chr(m) &amp; Chr(i1) &amp; Chr(i2) &amp; Chr(i3) &amp; _ Chr(i4) &amp; Chr(i5) &amp; Chr(i6) &amp; Chr(n) If ActiveSheet.ProtectContents = False Then MsgBox "One usable password is " &amp; Chr(i) &amp; Chr(j) &amp; _ Chr(k) &amp; Chr(l) &amp; Chr(m) &amp; Chr(i1) &amp; Chr(i2) &amp; _ Chr(i3) &amp; Chr(i4) &amp; Chr(i5) &amp; Chr(i6) &amp; Chr(n) ActiveWorkbook.Sheets(1).Select Range("a1").FormulaR1C1 = Chr(i) &amp; Chr(j) &amp; _ Chr(k) &amp; Chr(l) &amp; Chr(m) &amp; Chr(i1) &amp; Chr(i2) &amp; _ Chr(i3) &amp; Chr(i4) &amp; Chr(i5) &amp; Chr(i6) &amp; Chr(n) Exit Sub End If Next: Next: Next: Next: Next: Next Next: Next: Next: Next: Next: Next End Sub 
Odd. Okay, need a little more info, are you doing this in a thread? and could you run it this way and tell me if it works: Debug.Print(theKey.tostring) theList.Add(theKey, "INS*" &amp; theField &amp; "~") Is theKey being passed in to your routine, if so is it by value or reference? -james EDIT: could you post the dim for theList as well?
Are you sure theKey doesn't exist as a key in the list prior to adding it?
Ah .. I didn't explain well enough ... BOTH entries end up in the flat file I create from this list.
I'm going to assume your "list" is actually a dictionary. A dictionary can only contain one element with any given key, so Add is going to throw an exception if the dictionary already contains that key. By putting the condition around the Add call, you're ensuring that the dictionary doesn't already contain a key with that element, meaning that it's safe to add one. As an aside, this might be easier to read: If Not theList.ContainsKey(theKey) Then
There's a digital version of the book on the CD that the book comes with, if you still have that. *Just realized that I have a different textbook. I sent you my pdf (let me know if you didn't get it); maybe it will help answer your questions. It's a rather hefty tome, so I imagine they'll cover everything in your book.
Unfortunately, this book isn't available online or in electronic format, so I can't even offer to help buy it online tonight. I feel your pain. Are you a full time student? 98 bucks (Amazon) is pretty steep if only need it for the rest of your semester. You can rent the book at [Barnes and Noble](http://search.barnesandnoble.com/Starting-Out-with-Visual-Basic-2010/Tony-Gaddis/e/2580136113402?itm=1&amp;usri=Starting+out+with+Visual+Basic+2010) for 26.68 for a month or about 37 for two. 
Thanks Xheis. I tried many different approaches. I set a panel to the width of piece of paper and never could get the chart I was drawing to fit on the panel when working in pixels. It was very frustrating. So, I moved over to a PrintPreviewControl. This where I probably should have been to begin with. With this control, I can show my user their log exactly the way it will be displayed on a printout. All I had to do was work in 1/100 of an inch.
iValue = Worksheets("Sheet1").Range("A1").Value ?
I just came up with this out of my head. It should work though. dim mylist as new list(of string) for each i as string in listbox1.items if i.contains(",") then dim p as string() = i.split(",") if p.length &gt; 0 then mylist.items.add(p(1).trim &amp; ", " &amp; p(0).trim) end if end if next me.lstbox.clear() for each s as string in mylist.items me.lstbox.items.add(s) next 
awesome, cleaned it up a bit and changed it to go Firstname Lastname -&gt; Lastname, Firstname because apparently the guy that was asking didn't know what he wanted (changed comma and space): Private Sub Button8_Click(sender As System.Object, e As System.EventArgs) Handles Button8.Click Dim mylist As New List(Of String) For Each i As String In ListBox1.Items If i.Contains(" ") Then Dim p As String() = i.Split(" ") If p.Length &gt; 0 Then mylist.Add(p(1).Trim &amp; ", " &amp; p(0).Trim) End If Next Me.ListBox1.Items.Clear() For Each s As String In mylist Me.ListBox1.Items.Add(s) Next End Sub Follow up to that though; this presents a new fun problem... if I have "Bobby Fred Jr" and it goes to "Fred, Bobby Jr", any thoughts on how to only interact with the first space? and leave the remaining string untouched, or even stored and adding a "&amp;p(2).trim" at the end of the add line?
if i.contains(" ") then dim p as String() = i.Split(" ") if p.Length &gt; 1 then dim firstName as string = p(1).Trim dim lastName as string = String.Empty for i as integer = 0 to p.length - 1 'This keeps it from including the firstname if i &lt;&gt; 1 then lastname = lastname &amp; p(i) mylist.add(firstname &amp; ", " &amp; lastname) next end if end if
comboBox.items.add("") Check out creating a DataSet and mapping it to your database. 
Check out using the DirectX API with VB.Net :) It will make your Rendering / Input / Audio life a whole lot easier :)
Replace If Days &gt; 0 Then ReDim Temperatures(Days - 1) with If Days &gt; 0 Then ReDim Temperatures(Days - 1) ReDim weekday(Days - 1) End If You forgot to redim the weekday array
strangely enough, I just learned this from my wife, who was emailing me for help with one of her macros. 
Thanks for your helpful advice and constructive criticism.
Foreveralone.jpg ?
..not because he's unable to create a relationship then? 
Thanks man, decided to change some things around now. But thanks again! 
My suggestion is: Read everything in from the excel (maybe to a data.datatable) close the excel do what you have to do listbox wise save your changes to the datatable output the data.datatable to the excel file If you need any help with anything just let me know :) I also have a function written for exporting a datatable to excel if you need
Very cool. No splitting? I'm not sure how you would go about that since it would be 2 games at once.
From what i understand, make it so a text box fills the entire form even when resized. Put 2 buttons somewhere in that form, one that lets the user save everything typed, into a new text file. And then another that lets them open a text file (using the dialog box that you get when you press "Computer" on http://imgur.com/ for example). Hope that helps. 
I would have used Docking myself, but the instructions state Anchor.
Maybe your teacher doesn't answer your questions because you don't make them very clear... Make your question a little bit more understandable and ask for more specific information. 
Okay... What environment are you working in? 2008, 2010... Also, I'm assuming your making a Windows Form Application, right? If so, once you double click on a label to bring up the code, the default event that it should create for you IS a Label_Click. Is that what you're having problems with? 
Same thing. It doesn't make any sense. 
Visual basic has an odd way of saving/opening things. Make sure that when you save use "save all" rather than just save as. When you're in your directory for your project look for the vb icon with a 10 just below it but on the same icon. Hope that helps! edit: Also go into the bin folder and find debug, load the application and test if it stills runs correctly, if it does the code will still be there it's just a case of finding it.
can you explain it better to me or point me to where that might be exemplified?
yes! thank you so much, upvotes to you sir :)
I would definitely do it in the SQL since the database is probably much faster at getting distinct values and it's also much more ideal. Otherwise, you can use VB's Collection type and simple error handling. I think it might be faster than checking against an array of already added values (or searching the combo box). ie: Private Sub Command1_Click() Dim colTest As Collection Set colTest = New Collection On Error GoTo ErrorHandler Do While Not adoQM.Recordset.EOF ' add to collection first ' "k" is used in case data is numeric or starts with number ' (i don't know what data you're working with) colTest.Add "blah", "k" &amp; adoQM.Recordset.Fields(4) ' if code has made it this far, item is unique ' if it isn't unique, code will go to ErrorHandler cmb4Opt.AddItem (adoQM.Recordset.Fields(4)) adoQM.Recordset.MoveNext Loop adoQM.Recordset.MoveFirst set colTest = Nothing Exit Sub ErrorHandler: ' key already exists in collection (item is not unique/distinct) If Err.Number = 457 Then Resume Next ' go to next item in loop Else ' some other error Debug.Print "Error (#" &amp; Err.Number &amp; "): " &amp; Err.Description ' clean up before exiting (objects need to be set to nothing) Set colTest = Nothing Exit Sub End If End Sub 
Just open up the 'Solution Explorer' on the right hand side of the screen. This will show you your form, simply right click and select 'Design View'.
What does the 'View' menu look like? There should be an option under there...
What file should I open? I saved all my assignments like this: Ok say my project was Form1 I would open a new file with all default settings and work on it and click "Save form1.vb As..." and then I would click a folder and it would save as these three files: -form1.vb -form1.Designer.vb -form1.resx And the .vb is my code view, the Designer.vb is my design view in code and the .resx is just a notepad file with some code. So I think I messed up my saving process because I now know I'm supposed to save it as a .sln file. But I guess my new question is is there any way to recover my programs for use those three files to lighten my work load? 
Don't save the single form in the future - just save the entire project. Try starting a new project and adding the form1.vb file to it - you should be able to see design view them.
Hey man thanks for spending the time with me, I have one last question and then I'll get off your back haha. How do i add a .vb file to a project?
Never mind I think I did it and it's still only code with no design view, looks like im rebuilding everything (at least I have my code). Thanks again man
I don't think we've ever gone over LINQ in class and therefore using it would probably get me docked some ridiculous amount of points. Thanks for the suggestion though!
Glad to help!
I've been studying this piece of code so i can alter it... I didn't know vb could do so much. i thought the line was drawn in memory management...
I, like FineHamabounds, am generally not a fan of the _ for statements on multiple lines. There are a FEW exceptions, but you need to ask if it really makes things more readable. Once you have the code you want you can have it on one line. If you find you need to modify it often, then it is a sign you probably need to rework how you are doing things (constants/paramaters/etc...).
another thing you could do is just import your records into column A, and have a template of parsing functions on B -&gt; ??. =MID($A1,1,20) I like the in excel solution because when auditors come a knocking you can show them the original file, and the template logic is usually self evident. It also works wonders if you ever need to manually manipulate a source file. You can toss it in to visually check. If you are doing any sorting afterwards you can cut and paste as values prior to manipulation, but all that stuff could be done in nice clean macros. The alertnative that I have used in the past is to have a "config" sheet where you set all the positions and number of chars to be taken that feeds into the excel macros. It never fails that when I hard code something, it is going to change, or there will be a reason why I will regret not making my application extendable. Don't get too hung up on the whole VBA VBscript VB issue. It is fine to call it a script or setment or part of a module. In terms of the other stuff you are trying to do, I almost always start with the macro recorder. Things like the UsedRegion and CurrentRegion properties and End(xlup) etc will all help you make your code versatile and take it to the next level. Again the biggest piece of advice I can give you is to make sure that you try to make your macros useful to people who don't know macros. That thinking has saved me lots of headaches when I invaribly reuse code, and helps people understand what it is I am doing (so I get recognition for the work I am doing!).
How do they select the discounts; list box, radio buttons, inputbox, userform or ... ?
check boxes
Sorry. I gave you bad code. The code in my follow up works though.
VB 2008 Express. I just installed it from Microsofts site. If there is a new version I would be glad to install that.
Really the best thing you can do is have a project and look up how to do random specific things. There are Mr. Excel videos out there (I know it is included with the safari subscription my previous employer provided), but some of the "techniques are either basic, or there are "better ways" depending on what you are trying to do. Given the nature of the data you will be recieving in excel (higgly piggly would be on the more organized side of the expectation spectrum), learning while doing is extra important, esp. when it comes to input handling. The few tips I will give you based on my experience using VBA since early 2000s: 1. Always start with the Macro recorder. It does the nice date stamp and if you can find a prebuilt excel function you can leverage by calling and modyfing it will be MUCH faster than doing things the custom way. (sub totals, filters etc) 2. Goes along with number one, but really learn excel well. I am still discovering new things from the older 2003 randomly. (and there are many new tricks with 2010) 3. Make things modular, use consistant/appropriate variable names (if you are going to use iCounter for for loops, use it consistently etc), and assume you / someone else will want to modify your code at some point. 4. When you get a bit deeper into the whole process, you may want to provide a "config" page where your code can pull "constants" that way people who don't know coding can at least modfy it and make it work in the interim. 5. Learn how to use usedrange/currentregion/end(xlup/down/left/right), and learn your libraries in general. 6. Learn to use the cells(x,y) format. Range("A1") can be fine too, but it depends what you want to do. Some people say cells in all cases, but I admit I "grew up" on Range("A" &amp; iCounter), so I find it to be more readable. 7. Learn to use the help, watch windows, and learn to use the immediate window. I avoided using this gem until about ten years in, and my god... you eliminate all the simple "test" sub procedures with which to test certain properties etc... (also great for checking syntax of certain statments). 8. Offer to help others with simple problems that might not need VBA. Almost all of my knowledge has come from helping people with a problem, or running into the problem myself. I took a 1 and a half day course, probably similar to the one you took, and VBA has served me well and made my life so much easier for a long time now. If you have no ideas as to a project, I suggest a sudoku solver. I made one previously, and there are a lot of neat things you run into with regard to the automation. It is a bit easier if you solve it via "brute force" (aka test to see if one number works), but it can be a bit more of a challange if you examine how people solve Sudokus and try to emulate that logic. Good luck with VBA!
Worked it out! If anyone else runs into this issue, I had to use "Using". e.g. &gt;Using sr_QuoteNumber = New StreamReader(sFileName, True) iQuoteEnd = sr_QuoteNumber.ReadLine End Using Same for my writer.
Wait I just realized that the code in my last comment may be a different version that what you were commenting on. Let me try that first.
I don't like it when things don't work as expected. However, I'm thinking this has to do with lazy Garbage collection. I wonder if you would just explicitly dispose of sw_QuoteNumber in the closing statement if the problem would go away? Would you mind trying: sw_QuoteNo.Close() sw_QuoteNo.Dispose() End Sub And put the loaded code back the way you had it? This should force .Net to dispose of the the writer and release the file handle before exiting the Closing Sub. Looking forward to your reply. -james
Yep! And I'll definitely keep it in mind. Chances are I'll run into this again. Thank you very much for the assistance. 
yep, absolutely need to see your code and where you are stuck. Not a picture from your class book.
VB6 or .Net? VB6, maybe use a .INI class. Let me know if you want it and I'll post it. As for the entire line thing, in VB6, something like the following. Change vbCrLf to vbCr or vbLf depending on what format the files are stored in. Add a (Project) Reference to Microsoft Scripting Runtime. General Declarations: Dim oFSO As New FileSystemObject Function FindString(inputstring As String, inputfile As String) As String Dim sFile As String sFile = OpenFile(inputfile) aFile = Split(sFile,vbCrLf) For x = 0 To UBound(aFile) If Instr(1,aFile(x),inputstring) &gt; 0 Then FindString = aFile(x) Exit For End If Next x FindString = "String not found." End Function Function OpenFile(FileName As String) As String On Error GoTo ErrorHandler Dim oFile, sFile Set oFile = oFSO.OpenTextFile(FileName, 1) sFile = oFile.ReadAll oFile.Close OpenFile = sFile Set oFile = Nothing Exit Function ErrorHandler: Select Case Err.Number Case 53 'File not found UpdateStatus "OpenFile Error: File not found: " &amp; FileName Exit Function Case 62 'File empty UpdateStatus "Data file empty: " &amp; FileName Case Else UpdateStatus "OpenFile Error " &amp; Err.Number &amp; ": " &amp; Err.Description &amp; ": " &amp; FileName End Select End Function 
Sure, I just did not think it would be useful, it seemed like my next step is bit unrelated to the previous code. Here are my classes, the one i used to create costumers is public class Customer { private title _title; private string _firstName; private string _surname; private DateTime _doB; public title title { get { return _title; } set { _title = value; } } public string firstName { get { return _firstName; } set { _firstName = value; } } public string surname { get { return _surname; } set { _surname = value; } } public DateTime doB { get { return _doB; } set { _doB = value; } } public override string ToString() { return _title +" "+ _firstName +" "+ _surname +" "+ _doB; } } } got an class for account class I'll be using later public class Account { private Customer _Customer; private double _Balance = 0; private string _accountNum; public double Balance { get { return _Balance; } set { _Balance = value; } } public string accountNum { get { return _accountNum; } set { _accountNum = value; } } public void makeDeposit(double amount) { _Balance += amount; } public void makeWithdrawal(double amount) { _Balance -= amount; } public override string ToString() { return _accountNum + " " + _Balance.ToString("C"); } } } A title class { public enum title { Mr, Miss, } } And here is my Xaml public MainWindow() { InitializeComponent(); comboBox1.Items.Add(title.Miss.ToString()); comboBox1.Items.Add(title.Mr.ToString()); } private void btnAdd_Click(object sender, RoutedEventArgs e) { Customer newCustomer = new Customer(); newCustomer.title = (title)Enum.Parse(typeof(title), comboBox1.SelectedValue.ToString()); newCustomer.firstName = txtName.Text; newCustomer.surname = txtSurname.Text; lstUsers.Items.Add(newCustomer); } private void btnAddAccount_Click(object sender, RoutedEventArgs e) { // SELECTING FROM LISTBOX A - MOVING TO LIST BOX B } } } 
I have no idea if you can do this in VBA through excel... but basically If I had to do this, I would load all the data into a dataset somehow then then run a .select on the table to get the array of datarows sorted by the datetime column. You can then loop through the sorted datarows and do whatever you want (just check to see if the date changes in each loop iteration)
Here are two files. [This one](https://docs.google.com/open?id=0B1AHjfK3a-wfLVg5cllsdU5CaXM) mimics your "raw data" source file. [This one](https://docs.google.com/open?id=0B1AHjfK3a-wfbVRkRkU4a3k2RTQ) is the macro that does the work. Save both to a specific drive. Open the macro. Click the button. Follow the prompt. It will build daily files based on the source file's info and put them into the folder where you originally saved the source. If I'm understanding your pictures correctly, you should be able to use it on your actual source file too. Caution: it will build and save a file for every day in the source file. I think this is what your after though, yeah?
Obligatory "have you tried restarting VS? Have you tried rebooting?"
Have restarted VS, I'll try a full reboot at the end of the work day LOL. Thanks again.
Thank you for the response. It's much appreciated
The "multiplication table" part is confusing. If there are two integers, then their product is a single value.
I think you mean choose 2 integers from a listbox then display the multiplication table, yeah? Not display the table in a listbox, right?
Using a listbox is rather stupid as opposed to using a grid, but... Add 2 comboboxs (clear them out first and populate with numbers), and a listbox. Sub Calculate() If Trim$(Combo1) = "" Or Trim$(Combo2) = "" Then Exit Sub List1.Clear sTemp = "" &amp; vbTab For x = Combo1 To Combo2 sTemp = sTemp &amp; x &amp; vbTab Next x List1.AddItem sTemp For x = Combo1 To Combo2 sTemp = x &amp; vbTab For y = Combo1 To Combo2 sTemp = sTemp &amp; (x * y) &amp; vbTab Next y List1.AddItem sTemp Next x End Sub 
It's been awhile since I've worked with VB, but I think you could have the multiplication table pre-generated in a two-dimensional array and use the array.clear (i think this is the right command) to clear off rows/columns as needed (based on user input). Here is an example pulled from [MSDN.](http://msdn.microsoft.com/en-us/library/system.array.clear.aspx) Console.WriteLine(vbLf &amp; "Two dimensions (Rank=2):") Dim numbers2(,) As Integer = {{ 1, 2, 3 }, { 4, 5, 6 }, { 7, 8, 9 }} For i As Integer = 0 To 2 For j As Integer = 0 To 2 Console.Write("{0} ", numbers2(i, j)) Next j Console.WriteLine() Next i Console.WriteLine(vbLf &amp; "Array.Clear(numbers2, 2, 5)") Array.Clear(numbers2, 2, 5) For i As Integer = 0 To 2 For j As Integer = 0 To 2 Console.Write("{0} ", numbers2(i, j)) Next j Console.WriteLine() Next i
Mathematical convention, i is the row and j is the column. Also, k would be the 3rd dimension. Similarly, m, n, and l are often used. Also, x, y, and z.
I don't mean to offend, but I think you might be making the program unnecessarily complicated by using arrays.
Yes. myArray(,) would be for a 2D. myArray(,,) for 3D and so forth.
Since you asked how would I write it. I would use a data grid, linked to a data table, with validation limiting the input on column A &amp; B and an expression for the multiplication in column C. then add the value of column C to the list box if you had to use it.
 todaystime = Hour(Now()) &amp; ":" &amp; Minute(Now())
both worked.....Man you guys ROCK ;O)
If there's any whitespace in the boxes, your If statements will evaluate to false. Try calling .Trim on the textbox.text -- this will remove any whitespace that may be hiding in the textbox. No guarantees that this will fix it, but it's the first thing I see. If txt_USERID.Text.Trim = "" Then ...
You could default the error flags to true. Then include a do while loop that stops only once all flags are tripped to false when the user enters something everywhere.
That will evaluate to false if someone enters whitespace in a box. I'm thinking you'd want to show the error message if someone entered some spaces for the user id.
I thought about a Do Loop only I don't know how to execute it...Like do what? Do "this" while label_userid_error.Visible = false or maybe I am thinking about wrong?....Could I do it like this? While label_userid_error.Visible = false do "this" But again I don't know what the this is? 
Let me get back to you tonight after work.
You are so awesome for helping me with this... I will try to work with the code you posted. Thank you
what I have been trying is something like this, and I think I'm on the right track but just don't know how to go about it? Private Sub b_process_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles b_process.Click GetData() End Sub
I also apologize if this is asking too much...I'm honestly not trying to make anyone write this for me... I have just been reading and reading information about functions and sub procedures and working with the code and I just don't get it....Please help me turn the lights on...
Had the same problem and wind up reusing this one often. This function does the same as a Ctrl+DownArrow in a column. This returns the row number before a blank is found, so you can just add 1 to it. The "inReturn" parameter uses the column letter as a string. Function GetLastRow(ByVal SheetName As String, Optional inColumn As String, Optional workbookname As String) As Long On Error GoTo ErrorHandler Dim oExcel As New Excel.Application Dim oData As Excel.Workbook Dim Rng As Range Dim sColumn As String If Trim$(inColumn) = "" Then sColumn = "A" Else sColumn = inColumn End If If workbookname &lt;&gt; "" Then Set oData = oExcel.Workbooks.Add(workbookname) Set Rng = oData.Sheets(SheetName).Range(sColumn &amp; "1").End(xlDown).Offset(1, 0) Else If Trim$(Sheets(SheetName).Range(sColumn &amp; "2")) = "" Then Set Rng = Sheets(SheetName).Range(sColumn &amp; "2") Else Set Rng = Sheets(SheetName).Range(sColumn &amp; "1").End(xlDown).Offset(1, 0) End If End If GetLastRow = Rng.Row - 1 If Not (oData Is Nothing) Then oData.Close SaveChanges:=False End If oExcel.Quit Set oData = Nothing Set oExcel = Nothing Exit Function ErrorHandler: If Err.Number = 9 Then MsgBox "GetLastRow error: " &amp; SheetName &amp; " does not exist." Else Debug.Print "GetLastRow Error " &amp; Err.Number &amp; ": " &amp; Err.Description End If End Function 
I think I am on the right track....I created a sub routine that will output the data but if any fields are blank nothing happens? Public Class Form1 Private Sub SetForm() 'set labels to true label_userid_error.Visible = True label_userid_error.Text = "MISSING USERID" label_location_error.Visible = True label_location_error.Text = "MISSING LOCATION" label_item_error.Visible = True label_item_error.Text = "MISSING ITEM" label_quantity_error.Visible = True label_quantity_error.Text = "MISSING QUANITY" Call GetData() End Sub Private Sub GetData() Dim IsFormReady As Boolean Dim User_ID As String Dim User_Location As String Dim User_Item As String Dim User_Quantity As String User_ID = txt_USERID.Text User_Location = txt_LOCATION.Text User_Item = txt_ITEM.Text User_Quantity = txt_QUANTITY.Text Do 'ask user to enter data 'assign values variables based on user input 'check whether form is complete IsFormReady = IsInfoComplete(User_ID, User_Location, User_Item, User_Quantity) Loop While Not IsFormReady 'call whatever comes after you have the data senddata(User_ID, User_Location, User_Item, User_Quantity) End Sub Private Function IsInfoComplete(ByVal User_ID As String, ByVal User_Location As String, _ ByVal User_Item As String, ByVal User_Quantity As String) As Boolean If Trim(User_ID) &lt;&gt; "" Then label_userid_error.Visible = False Else label_userid_error.Visible = True End If If Trim(User_Location) &lt;&gt; "" Then label_location_error.Visible = False Else label_location_error.Visible = True End If If Trim(User_Item) &lt;&gt; "" Then label_item_error.Visible = False Else label_item_error.Visible = True End If If Trim(User_Quantity) &lt;&gt; "" Then label_quantity_error.Visible = False Else label_quantity_error.Visible = True End If If (label_userid_error.Visible Or label_location_error.Visible _ Or label_item_error.Visible Or label_quantity_error.Visible) Then IsInfoComplete = False Else IsInfoComplete = True End If End Function Private Sub senddata(ByVal User_ID As String, ByVal User_Location As String, _ ByVal User_Item As String, ByVal User_Quantity As String) Dim user As String Dim location As String Dim item As String Dim quantity As String user = User_ID location = User_Location item = User_Item quantity = User_Quantity Dim uppercase_userid As String Dim uppercase_location As String Dim todaysdate As Date Dim todaystime As String = Date.Now.ToString("hh:mm") 'Const BEGINNING_CHAR As String = "C" 'Makes UPPERCASE uppercase_userid = UCase(user) uppercase_location = UCase(location) 'Format date to output date as month/day/year todaysdate = Format(Now, "MM/dd/yyyy") 'Format time to output time as hour:minutes todaystime = Format(Now, "hh:mm") MsgBox(uppercase_userid &amp; uppercase_location &amp; User_Item &amp; User_Quantity) End Sub Private Sub b_process_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles b_process.Click SetForm() End Sub End Class 
This looks like it would work (at least I can still read code appropriately). Do I change "SheetName" to the sheet I'm looking to go to? Also, I'm assuming I should be changing column "A" to the column I want to search (in this case, B and C)?
Yes, and you shouldn't have to change anything in the function itself, you can just pass "B" or "C" as the inColumn parameter. 
Thanks for all of your help. Not to sound ungrateful, but I gave up on this technique because I figured there had to be a shorter way to do this. I tried recording a macro and found a much simpler (and shorter - coding-wise) way to do it. The only problem is that now when I try to run the macro more than once, it overwrites the values above as well as entering values in the new cells (e.g. Macro runs and posts "2" in cell B4. Macro runs again and posts "3" in cell B4 and in cell B5. Macro runs a third time and posts "4" in B4, B5, and B6.) Sorry to pull a 180 on this, but any chance you could help? Sub AttackUpdate_Click() Dim stuff As String Dim level As Integer stuff = Sheets("Skills").Range("$C$5").Value 'Stuff becomes the default value extracted from the corresponding skill If InStr(stuff, ".") Then MsgBox ("Your skill level must be a whole number.") Exit Sub End If 'Checks to ensure that "Stuff" is a whole number and not a decimal level = val(stuff) 'Converts "Stuff" to a number for coding ("Level") If level &lt; 1 Or level &gt; 120 Then MsgBox ("Your skill level must be a number between 1 and 120.") Exit Sub End If 'Checks to ensure that "Level" is a number between 1 and 120 (minimum and maximum skill levels) Dim todayDate As String Sheets("Attack").Select todayDate = Range("I1").Value Range("B2500").Select Selection.End(xlUp).Select ActiveCell.Offset(1, 0).Select ActiveCell.Value = "=Skills!$C$5" ActiveCell.Offset(0, 1).Select ActiveCell.Value = todayDate ActiveCell.Offset(0, 1).Select Range("A1").Select Sheets("Skills").Select End Sub 
That actually makes things much easier. HTML formatting will probably be best for me to use anyway. Thanks! :)
Change ActiveCell.Value = "=Skills!$C$5" to ActiveCell.Value = Sheets("Skills").Range("$C$5").Value The way it's doing it through recording the macro, it's using the formula so anytime Skills!C5 changes, your Attack sheet values will also. 
Aha! Works like a charm! Thank you so much for your help! I really appreciate your patience too!
First, I would make your playing field grid a control array, this will make referencing then sooo much easier. (Just create one cmd, give it an index of 0 and copy/paste the button as many times as you need) Now you can programmatically reference them by, say, cmdGrid(0), cmdGrid(1), etc instead of cmdOne, cmdTwo etc. This will allow you to use variables to reference them much easier algorythmically.
Thanks so much; this will make things a lot easier! I'd never really messed with control arrays before. 
One way would be to add a WHERE to the SQL statement. You'll have to have a way to pass the recipients name or email or something though... I'm not sure how to do that with excel/word, but I've done it with access/word.. I'm sure you could call a basic dialog from vba, and get it to prompt for this when opened. 
Here's a quick Excel VBA macro (with comments) which might help get you started. You'll need to add a reference to Microsoft Scripting Runtime (under Tools -&gt; References... in the Microsoft Visual Basic for Applications window). Also add any number of text files into c:\data\. You can name them anything, but this is what I had: c:\data\file1.txt: 01/01/2012,Alpha,1 01/02/2012,Bravo,2 01/03/2012,Charlie,3 c:\data\file2.txt: 01/05/2012,Echo,7 01/06/2012,Foxtrot,12 01/07/2012,Golf,34 c:\data\file3.txt: 01/10/2012,India,19 02/15/2012,Juliet,66 03/24/2012,Kilo,47 Important thing is that you have at least 3 things on a line, separated by 2 commas (date,word,value) or else you'll probably get errors running this. Sub Main() Dim x As Integer 'line counter for inside files Dim lRow As Long 'line counter for output (excel) file Dim oFSO As New FileSystemObject 'object containing file operations Dim oTS As TextStream 'object that reads the text file Dim oFile As File 'object for the files themselves Dim sFile As String 'will hold the text from the file Dim aFile As Variant 'array will contain the text from the file, line-by-line Dim aLine As Variant 'array contains parts of a line from the textfile lRow = 2 'start with 2 to skip a row we might use for a header Sheets("Sheet1").Select 'make sure we're on Sheet1 Sheets("Sheet1").Range("A1:J500").Value = "" 'clears the sheet 'for every file that's in c:\data... For Each oFile In oFSO.GetFolder("c:\data").Files Set oTS = oFile.OpenAsTextStream(ForReading) 'open the file for reading sFile = oTS.ReadAll 'put all the text from the file into sFile oTS.Close 'close the textstream since we're done with it aFile = Split(sFile, vbCrLf) 'create an array by splitting sFile by carriage-returns 'go through our aFile array line-by-line... For x = 0 To UBound(aFile) If InStr(1, aFile(x), ",") &gt; 0 Then 'if line aFile(x) has a comma in it... aLine = Split(aFile(x), ",") 'create an array by splitting the line up by commas If Trim$(aLine(0)) &lt;&gt; "" Then 'if the first array element isn't empty Sheets("Sheet1").Range("A" &amp; lRow).Value = aLine(0) 'assign aLine(0) to cell A + lRow (the date) Sheets("Sheet1").Range("B" &amp; lRow).Value = aLine(1) 'assign aLine(1) to cell B + lRow (the word) Sheets("Sheet1").Range("C" &amp; lRow).Value = aLine(2) 'assign aLine(2) to cell C + lRow (the word) lRow = lRow + 1 'since we put out a row, increment to the next row number End If End If Next x Next 'garbage collection: cleanup to make sure we don't leave objects in memory Set oTS = Nothing Set oFSO = Nothing End Sub You should hopefully be able to poke around Excel and figure out how to get this into a macro and up-and-running, but reply back if you have problems getting that far. 
Same code without comments and everything unnecessary taken out, probably looks a little less menacing: Sub Main2() Dim oFSO As New FileSystemObject lRow = 2 Sheets("Sheet1").Select Sheets("Sheet1").Range("A1:J500").Value = "" For Each oFile In oFSO.GetFolder("c:\data").Files Set oTS = oFile.OpenAsTextStream(ForReading) sFile = oTS.ReadAll oTS.Close aFile = Split(sFile, vbCrLf) For x = 0 To UBound(aFile) If InStr(1, aFile(x), ",") &gt; 0 Then aLine = Split(aFile(x), ",") If Trim$(aLine(0)) &lt;&gt; "" Then Sheets("Sheet1").Range("A" &amp; lRow).Value = aLine(0) Sheets("Sheet1").Range("B" &amp; lRow).Value = aLine(1) Sheets("Sheet1").Range("C" &amp; lRow).Value = aLine(2) lRow = lRow + 1 End If End If Next x Next End Sub 
True but I am sending 2 variables to it to make them Uppercase....that and everything I've been reading says that if you have duplicate code it's poor programming.... So that might also have something to do with it
But all you're doing is wrapping a built in function. You could change your code to this and get rid of the MakeUpperCase() function: UppercaseUser = UCase(UserInput) UppercaseLocation = UCase(LocationInput) You could even simplify it some more by writing it like this: ProcessData(UCase(UserInput), UCase(LocationInput)) or change it to this and you won't need to declare any variables: ProcessData(UCase(textbox_User.Text), UCase(textbox_Location.Text))
I came here to say what kaizr just wrote. But also, your UDF (User Defined Function) isn't written correctly either. Let's assume, for arguement sake, you do need it (you don't as described above), it should look like this ... Private Function MakeUpperCase(ByVal MakeUpperValue As String) As String MakeUpperUpperCase = UCase(MakeUpperValue) End Function Edit: Your UDF is correct as it will work. It isn't as concise as it could be though.
Thank you I removed the UpperCase function and went with: UppercaseUser = UCase(UserInput) UppercaseLocation = UCase(LocationInput) Thank you....
It doesn't look like you can in your code, only in your output. This is from the VB2010 helpfile: "You must specify the date value in the format M/d/yyyy, for example #5/31/1993#. This requirement is independent of your locale and your computer's date and time format settings. The reason for this restriction is that the meaning of your code should never change depending on the locale in which your application is running. Suppose you hard-code a Date literal of #3/4/1998# and intend it to mean March 4, 1998. In a locale that uses mm/dd/yyyy, 3/4/1998 compiles as you intend. But suppose you deploy your application in many countries. In a locale that uses dd/mm/yyyy, your hard-coded literal would compile to April 3, 1998. In a locale that uses yyyy/mm/dd, the literal would be invalid (April 1998, 0003) and cause a compiler error. Workarounds To convert a Date literal to the format of your locale, or to a custom format, supply the literal to the Format function, specifying either a predefined or user-defined date format."
I don't understand why you are using the RightToLeft option. RightToLeft reads data from Right to Left (i.e. if your input order is - then 1 it will display as "1-"). The option is there for Right to Left languages such as Arabic. If you are simply wanting to align the text in the Textbox1 to the right side of the box, use the TextAlign option.
Thanks for the help,my teachers at school taught us the basics but nothing about this properties so I used the first one I found.(sorry if there are grammatical errors).
What are the build errors? You can't publish until the build is ok..
It's weird. I can choose the build option and it will complete successfully, but on publish, it gives me an error stating the build failed. I've tried reinstalling. It's not just with this one project, either.
Visual Basic, more commonly known as VB.NET is a powerful application development language. It's designed more towards business development, with databases and such. But it can work great for regular desktop applications. It's not the best gaming language. If you're looking for gaming, a great place to start is Flash and ActionScript. ASP.NET allows for web application development using .NET languages (vb.net and C#) Although I've never built any web applications with vb.net I know that it does have the capability for it.
A crude workaround would to include spaces around the word you are searching such as: string.IndexOf(" PGA "). Otherwise, you should look at the many different [String Methods.](http://msdn.microsoft.com/en-us/library/7wtc81z6) 
actually had a similar recommendation, but the list that it is checking as well as the items it is looking for are both taken from an SQL table, so I ended up adding a length layer. i.e. has to match text PGA and be 3 letters long
Use a fixed-width/monospaced font like Courier or [others](http://www.cfcl.com/vlb/h/fontmono.html). This way all strings that are the same character length are the same physical length.
Another option for situations like this is the String.Format method with padding. [This](http://www.dotnetperls.com/string-format-vbnet) article has a little section about it, scroll down to "Padding Example"
What are the errors? output the exception/inner exception/stack trace. 
How about this off the top of my head: For Each item In VerifierList.Items
Nope. Rio Salado community college. The book is advanced visual basic by Tony Giddis and Kip Irvine. Shitty book, btw. 
My teacher even admits the book sucks. If you need help debugging, PM me. I'm not exceptional at VB, but I'll know the course.
Figured a workaround I just made a new string with all of the strings i wanted joined and concatenated with string &amp; vbtab &amp; string
"Wrong protocol or connection state" would hint to a closed/unconnected socket. getdata is probably being passed a wrong variable type
That's what I don't get. I'm taking the text from a text box and putting it into a string. I then send this string using senddata. You know what, I'll upload the code when I get the chance tomorrow.
assuming you're using vb6, put GetData in Winsock1_DataArrival like this Winsock1.GetData datString, vbString 'and datString is your feedback data! and then make sure to close the connection with Winsock1.Close but seriously, copy and paste the source brah. we'll help ya.
Aye, and do this instead: Winsock1.GetData Data MsgBox Data your bytestotal (unless defined elsewhere) set the limit to read, and if unset would be 0- never read anything. String is implied. Len(Data) will get the # bytes read. 
Thanks, that seems to have fixed it :D
Did you just copy and email the .proj file or the whole directory? You should have zipped the directory and emailed it.
What he said. Make sure you choose the "save all" option and not "save as" or it will only save the code and not the form.
Or something like if textbox1.text.trim = "" then MsgBox("ENTER SOMETHING", vbOK) return return keeps executing it until something is entered.
Heres a link to the sourceforge page. It's a WebKit library, so it's just as powerful as chrome. [WebKit.NET](http://sourceforge.net/projects/webkitdotnet/)
and this? webbrowser1.navigate("http://www.reddit.com/r/" &amp; toolstriptextbox1.text)
It's probably just a matter of adding a different SHDocVw control/or chrome activex control if avilable
Sender is an object. Sender.tostring will not give you a valid value. You have to cast sender to the type that it is and then you can get the text you want. Since I think sender would be a menuitem, you would do something like Directcast(sender, menuitem).text or something like that.
uuuummmmmmmm, should i send you the project or post the code or something? i cant understand, it still wont work.
OK so here's what's going on. When you have a sub that's handling an event on your form, the sub receives sender as a parameter which is of type "object". Sender is what's actually causing the sub to be called so in your case, ToolStripMenuItem1_Click should be handling ToolStripMenuItem1.Click. The sub has no clue what the actual type of the sender object is because you can have subs that handle multiple events. For example, you could have this sub handle the click of a menu, a button, a link, etc. If you had the following sub declaration: Private Sub ToolStripMenuItem1_Click(ByVal sender as CommandButton, ByVal e as System.EventArgs) You would only ever be able to use this sub to handle events from a CommandButton. Now that I've explained that, let's move on to figuring out how to handle your situation. So Sender is an unknown type so the first thing you need to do is figure out what sender actually is. Since you're using this for a single event handler, you know it already but if you didn't, you could do this: Private Sub ToolStripMenuItem1_Click(ByVal sender As Object, ByVal e As System.EventArgs) Msgbox(Sender.GetType.ToString()) End Sub When you click on the menu item you'll now get this: [example](http://i.imgur.com/QAnrx.png) So now we know that the sender is of type ToolStripMenuItem. This is great because since we have this information, we can cast Sender to type ToolStripMenuItem then access all of the properties. Since you want the web browser to navigate to the text of your menu item (i.e. in your form, the menu item might say http://www.reddit.com), you can do something like this: Private Sub ToolStripMenuItem1_Click(ByVal sender As Object, ByVal e As System.EventArgs) WebBrowser1.Navigate(DirectCast(sender, ToolStripMenuItem).Text) End Sub In the above code, DirectCast(sender, ToolStripMenuItem) is causing sender to be cast to type ToolStripMenuItem so now VB will no longer recognize sender as generic object type but as specifically a ToolStripMenuItem. Now I did this in a one-line fashion but you could create an instance of a ToolStripMenuItem, cast sender and assign it to that: Private Sub ToolStripMenuItem1_Click(ByVal sender As Object, ByVal e As System.EventArgs) Dim menuitem as ToolStripMenuItem = DirectCast(sender, ToolStripMenuItem) MsgBox("You clicked on this menu: " &amp; menuitem.text) WebBrowser1.Navigate(menuitem.Text) End Sub The above would alert the user as to what they clicked and then the webbrowser1 object would navigate to it. I'm hoping I explained it well enough for you and gave you a good amount of knowledge to work from. I'm happy to answer any other questions
This should work just fine in 2010. With your original code, what happens when you click the menu item? What specific error do you get?
i dont get an error. it does NOTHING! Edit: It still does nothing. even after trying to fix the code. I messed something up to, but i fixed that.
Try to get the math to work in excel first. This looks like an arithmetic error..
Your Post: pr(1-(1+r)-n) Your Code: p * r / (1 - (1 + r) ^ (-n)) 
Edited to reflect the correction. It wasn't taking the caret symbol without spacing it all out for some reason.
What I mean is " r / " should be "(r / 12)"
Read data from text file. Create an array to hold split data. Split the data. Loop through the data Create new file with full name and state. We don't do your homework. Write some code and if you are having issues with the code, then ask for help solving your problems.
^ r = CDbl(TextBox2.Text) Should be: r = CDbl(TextBox2.Text / 12)
Sorry for not being specific. This is what I have so far. The text file generated only contains the last element it should have and not all of them. Private Sub btnCreate_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCreate.Click Dim justices() As String = IO.File.ReadAllLines("Justices.txt") Dim query = From line In justices Let data = line.Split(","c) Let firstName = data(0) Let lastName = data(1) Let abbv = data(3) Select firstName, lastName, abbv Dim splitJustices(justices.Count - 1) As String For Each state In query Dim i As Integer = 0 splitJustices(i) = (state.firstName &amp; " " &amp; state.lastName &amp; ", " &amp; state.abbv) i = (i + 1) Next IO.File.WriteAllLines("splitJustices.txt", splitJustices) 
yup noticed that right after I submitted the comment haha. 
Actually, I was wrong.
You can only really write text files at the end of the document, so I would read the whole text file into an array then find the count() of the array. I would then check that line to see if they are clocked in or out. With the data lines formatted as: 07/23/2012, John Doe, IN
Formatting kinda messes this up but, you are looping thru your whole file in the (do while reader.peek-1) line down to the loop, but not appending it. You are always grabbing and storing the very last line in the file. I'm not sure if it is one file per employee or one file day, etc... I am assuming 1 file for everyone. If so then you are only checking the last line even though you loop thru the whole thing. Move the (if textline as string) and down to its end if up into the loop. This way it checks on each line for the current employee and date/time. Do While reader.Peek &lt;&gt; -1 textLine = reader.ReadLine &amp; vbNewLine lblStatus.Text = textLine If textLine &lt;&gt; Nothing Then If textLine.Contains(Date.Today) AndAlso textLine.Contains(employeeName) AndAlso textLine.Contains("OUT") Then ClockIn() ElseIf textLine.Contains(Date.Today) AndAlso textLine.Contains(employeeName) AndAlso textLine.Contains("IN") Then ClockOut() Else ClockIn() End If ElseIf textLine = Nothing Then reader.Close() ClockIn() End If Loop 
so left frame and front frame buttons dont do anything. how is this a game tho?
like for your codebehind.. is it just doing something like imgFrontFrame.visible = true or are you actually rendering stuff?
not sure if helps Dim randomSelection As Random = New Random Dim myCount as integer = 0 dim tempRandom as integer dim thisarray as array Do while 15 &gt; myCount tempRandom = randomSelection.Next(1, 100)) listbox.items.add(temprandom.tostring, value) thisarray.add(tempRandom) myCount = myCount + 1 loop then iterate through the array and make a basic high/low sorting if/then 
/read the post man, im still working on it. theres a new build out ;P next build will be front frame. :P
Added a bit of info about the game.
I would recommend re downloading the game if you haven't already, so you get the launcher files also.
Just came here to say unless you're still working on it, that it doesn't save your achievements if you close and reload the game.
Aha dictionary(key)(collection index)(array index)
Just use a streamwriter to write your variables per achievement in a format such as : "achievement;number;...;...". Then you use a streamreader to collect this information line per line and you use a split on a line to get the data seperatly.
allright, goto find out how the heck i use stremwriters and readers.
You know, posting code would help us greatly in trying to figure out what you even did in the first place.
Try making a menu system that will display text depending on what menu number you choose. For example: 1. Your Name 2. Hello World 3. VB is great! Use if-else-then structure to determine if the input is 1, 2 or 3 then display the right text accordingly!
Wouldn't you have to declare Dim VerifierList As New List(Of Customer) ? Also, the Session.Item("customers") is different from Session.Item("Customers") is it not? (VB is only partially case insensitive right?)
once you have that re-write it using case statements :) (if you need any help with anything school or personal project wise [or just theory questions ect] message me! I got your back) actually, just message me your skype id and we can message or screen share there if interested
I said after &lt;3
Yeah, I was meaning to go back and add error handling (probably just a ton of try/catch blocks), but haven't gotten around to it yet. The progress bar and some kind of statistics window at completion would also be a great idea. Thanks for the response!
No, thank you though. 
Yeah, that's what I thought too. I ran as administrator to no avail. I'll try compatibility mode now.
Simplest way would be something like this in the Click event for the picturebox: formMain.hide() formTileEditing.show() Obviously you'd want to replace the formMain and formTileEditing with whatever you've named your forms. Then in the onClosing or onClosed event for the newly opened form, you would do: formTileEditing.hide() formMain.show() Good luck!
True however I don't want 100 click events (one for each box).
Yeah I get it. could I but the tiles into a collection? Just to make the code look cleaner. 
Downgrade to 7. 
Ah OK. I wasn't sure what you meant by the 100 click events in your original post. The easiest solution would be to select all of the picture boxes in designer view, open up your properties tab, look for the lightning bolt (Events) button, and double click the Click event. This will create a skeleton for a subroutine that handles the Click event for ALL of the pictureboxes.
Try stepping away from the shell command and try using IO.Directory.Delete("Directory here") maybe that might fix something :/
That would delete the directory, yes? I just need to delete the contents of the directory. I'll look that up later though, perhaps I can do something similar to that.
Formally taught isn't going to be free but there are cheap alternatives. local continuing education departments at the local community colleges should have some classes available for usually about 100.00=150.00 a class. Online, Penn Foster offers a programming class that runs around 400.00 with low monthly payments (about 40.00 a month), the class covers Access, Java, C#, and VB.Net. link: http://www.pennfoster.edu/programming-cert/ 
Sweet. Found out that actually the folder is named the same thing 64bit and 32bit windows. Silly me. However, that will be useful for some other applications I've made.
You have to write the replaced text back to the file: Dim updatedContents As String = fileContents.Replace(toDelete, "") File.WriteAllText("C:\text.txt", updatedContents) 
I don't know if you can do this in VBA but you can certainly do it in VB.Net (provided you have access to an SMTP server) Step 1 Read in your data from excel (google Excel interop functions, its fairly easy) and put in a dataset Step 2. loop through the dataset For each MyRow as datarow in MyDataset Dim MYemail As New System.Net.Mail.MailMessage Dim addrFrom As New System.Net.Mail.MailAddress(&lt;FROMEMAILHERE&gt;) Dim addrTo As New System.Net.Mail.MailAddress(&lt;recipient Email HERE&gt;) MYemail.From = addrFrom MYemail.To.Add(addrTo) MYemail.Body = &lt;body of message (Link &amp; Stuff &gt; Dim mysmtpclient As New SmtpClient mysmtpclient.Port = 25 mysmtpclient.Host = &lt;IP Address of SMTP MAIL SERVER Here&gt; mysmtpclient.Send(MYemail) next
Thank you! I didn't realize arrays could do that on their own. Works perfectly now. Edit: In addition I used this way to simplify my math from: tstResult = (tstAverages(0) + tstAverages(1) + tstAverages(2) + tstAverages(3) + tstAverages(4)) / 5 to tstResult = tstAverages.Average
I could be wrong, but I'd imagine since it is a system directory it'll be protected. I did get the script to work. Perhaps I should've edited the post! I'll post the working code on Monday if I can remember.
I had this problem - or at least very similar Was inputting data to an Access database. Was doing the testing towards the end of August. Which was fine, as the interpreter was inputting dates like 20/08/2012 correctly. Fired it up 1st of September - 01/09/2012 is then interpreted as 9th January 2012. Did a bit of debugging, using break points, tracked it all the way to access. Turns out you can't force Access to use UK dates (system locale is all set to UK - just would not have it). The summary of the distinct problem I had was (in short): 'insert date into timetable 'delete rows from database where date is before 120 days ago Then under a different class 'select ID of last date inserted 'insert into table date where ID = ID from previous query Except the select ID failed as it was deleting EVERYTHING previously... Solution: Try Date.Now.ToLongDateString Turned out access supports long date - eg: 01 September 2012. Inputted that and it worked fine - access converted it to 01/09/2012 instead of 09/01/2012
Couldn't this be simplified? You're declaring a variable for later comparison, but I don't see why... If Session.Item("Customers") IsNot Nothing Then VeriferList = etc etc End If The next problem you have, if Session.Item("Customers") IS nothing, you WILL exception here regardless... You need to move that End If to under the Next Eg: If Session.Item("Customers") IsNot Nothing Then VeriferList = Ctype( etc etc For Each item In VerifierList lstAccounts.Items.Add(item.ToString()) Next End If Then if the session variable is empty, you aren't trying to reference data out of it...
For the button, it looks like you can move it around and place it with some relation to the text, but not stretch it. In that case you would be better off with a picture box and reacting to the Click event.
yes i ended up going with the pic box which required no special coding at all.... visual basic sure has changed since 2004.... but thank you for your help!
In VS 2008 I know the properties window for the image box has SizeMode. One of the selections in it is StretchImage. The previous versions did have something similar. I only have 2008 and 2010 installed right now.
Ya. I totally understand what you mean . I know it doesn't look very professional because of the unorganization of the text and elements. I'll work on it!
Then maybe its not a CrLf in the page, just a LF? Try doing a Replace( data ,Chr(10),vbCrLF)
Hey just to let you know. I was checking those screenshots and I realized that they are really old. I have tweaked the graphics a little so it looks better now. I might upload the new snapshots later.
Ya. I added a login screen with multiple users and different permissions because my brother was misusing it! As for unblocking you currently have to do it manually the app will open the hosts file Added settings to change login info and some more things. I've recently stopped working on it because of the low popularity (as you can see lol)
Yeah login might be a little over the top but since I'm only using it personally and I want the login, I like it! If I do release it publicly I think I would still keep the login. If you ever shared a computer with someone else, you would understand!
Sure, that'd be awesome!
How do you block websites with VB.NET?
There is a MaxDropDownItems property that I think does what you need.
Hmmm.. I don't fully understand what you mean. Maybe you could explain in code? Maybe you mean this?: Dim playername As String("") If textbox1.text &gt; 0 Then textbox1.text.replace(playername, textbox1.text) I'm not really sure about the above. I'm currently at work and cannot test code. I wanted to get an idea what do do before I get home.
Example (I just typed this out so you can get a general idea of what it should/could look like): public class form1 Dim playerName as string = "" Public Sub button1_onclick(byval sender as object,byval e as eventargs) handles button1.click playerName = me.textField1.text End Sub End Class
Well, my problem is more like how to write a code that will do that.
If you are using VB.net, I don't know PHP, but it looks like a Dictionary is pretty close. dim Carlot as Systems.Collection.Generic.Dictionary(of String, Integer) carlot.add("Cars",25) carlot.add("Boats",12) ...etc (I think you can also use a curly brace syntactical sugar to load it in one statement) ' Loop over entries. Dim KVpair As KeyValuePair(Of String, Integer) For Each KVpair In CarLot ' Display Key and Value. Console.WriteLine("{0}, {1}", KVpair.Key, KVpair.Value) Next Your example would require a Dictionary(of string, Dictionary (of string, Integer)) In other words, nested Dictionaries. 
I used to use arrays for everything, turns out ArrayLists are way better. create an object that stores everything that you need, then slap the objects into the array list, which can be referenced like an array or a list.
k, well... as long as I'm not doing your homework or something.. strDate = FORMAT(NOW(), "MMDDYYYY") strDate will return 10042012 today... 
No, it's not a homework. I asure you that. It is just a side project that I took interest in.
No, it's not a homework. I asure you that. It is just a side project that I took interest in. Thank you for your help.
This looks like it could be useful. One of the uses I use Arrays for is holding array of arrays, but I noticed a strange thing about it. I don't know if this is normal but if I do something like this: Dim dict As New Dictionary(Of String, Dictionary(Of String, Integer)) Dim tempdict As New Dictionary(Of String, Integer) tempdict.Add("cars", 5) dict.Add("one", tempdict) dict.Add("two", tempdict) dict("one")("cars") = 25 For Each kvp As KeyValuePair(Of String, Dictionary(Of String, Integer)) In dict MsgBox(kvp.Key) For Each kvp2 As KeyValuePair(Of String, Integer) In kvp.Value MsgBox(kvp2.Value.ToString) Next Next It shows a msgbox "one", then 25 as expected, but then it shows "two" and then 25 as well, as if it were just changing a reference when I changed it. Is there a way to do this so everything is it's own object in there without creating a variable for every object?
There are ways to clone an object. Hashtables and other structures have the .clone method but it looks like Dictionary doesn't have that implemented (quick Object Browser search) ( But, a function could return a new dictionary of the proper type each time function MakeDic() as Dictionary(of string, integer) dim d as new dictionary(of string,integer) 'then you could preload with common catagories d.add("cars",0) d.add("trucks",0) end function And used this way MyMetaDictionary.add("Joes Car Lot", MakeDic) This could save some typing.
Ok, good to hear! :P So the filename in your code will be: ocurrent = "Report_" &amp; FORMAT(NOW(), "MMDDYYYY") 
Check out http://support.microsoft.com/kb/186431 could help.
And what version are you? There are lots of versions..
keep your data in SQL Server.. and have it automatically refresh upon open. Excel doesn't have proper validation tools for data entry.
Use a Timer to reload the listbox at set intervals. That seems to be the best way.
&gt;ElseIf BasicTotalHours &lt; 10 Then I think this line is where some of your problems are. BasicTotalHours is initialized to 10, and then doesn't change, so it will never be anything but 10, so the second part of your if statement wont run, because the value of BasicTotalHours will never be less than 10. Which brings up another 2 issues. I'd think you want use *intTotalHours* not BasicTotalHours in that Elseif statement. You also want add the overage charge if the intTotalHours is *greater* (&gt;) than 10, not less than (&lt;). Also, I don't think decTotalCost will calculate to what you expect it to, because you're not watching your order of operations. The way it is now, its just going to be subtracting 29.95 from intTotalHours. 
I do have a book, but this stuff goes way over my head. Programming isn't my major but it's a class I have to take to get my degree. I'm not even sure which variables to declare or how to go about the sub-procedure of "findBadge()" for the main look. It's an intro class and it's the most complicated assignment I've had thrown at me yet.
Just even a little snippet of how to write this would help me get going into the correct direction.
For starters, it helps to map a program out ahead of time. Since this is fairly basic, I can give you a bit of a quick rundown. Are you using VB6 or VB.Net? I can help you out with some small code snippets if it's .Net, but its been at least 10 years since I even looked at VB6 
It's VB6 though I usually find it easier to write the code before I do the flowchart since I'll already know what I am working with 
Technically, I can write it in any language but I'm trying to stick to VB6 but VB.net will work too 
Seem to be very close. 1) nameArray is an array of... names. Not ints Dim nameArray(totalCandidates) As String 2) Explicitly define the start-stop array values (otherwise, there will be a 0 element, which will affect things that use the array like SizeOf) Dim nameArray(1 to totalCandidates) As String Dim voteCount(1 To totalCandidates) As Integer 3) Add candidates to the array based on the Candidate nameArray(candidateNum) = Console.ReadLine() voteCount(candidateNum) = CInt(Console.ReadLine())
Alright, thanks a lot.
Why access? What language are you programming in? Try SQL Lite 3? Or a full blown SQL server database? http://stackoverflow.com/questions/5106771/how-to-create-database-and-add-2-table-in-sqlite
Thank you two very much! 
Looks like this is already answered but I would just like to add that you can read the last modified or created dates off files, and that would probably be the preferred method, you wouldn't have to deal with strings and the like. I used to use this a while back... http://pastie.org/5026757
Dim player as string Private Sub TextBox1_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles TextBox1.TextChanged player = textbox1.text End Sub
You could say where; if FolderFile.name &lt;&gt; "the file name you don't want to check" then do stuff end if Not sure how to print to pdf, I usually use ssrs to do reports... 
I'm no expert but from what I know it's just good practice. And if you use Option Explicit you'll receive an error if you don't have the variable.
My bad. Well I did a [quick search](http://stackoverflow.com/questions/11325298/excel-vba-for-loop-error): &gt; While specifying the loop variable in a Next statement may improve performance, any gain is infinitesimal. In general, unless you have many nested loops I'd recommend against the practice I guess I usually add the variable just to make the code look cleaner, and if I am ever expanding upon a for loop and adding other loops within it, it makes it a bit easier to read. Other than that it would seem adding the variable could potentially throw an error if the variable isn't correct.
^ This. You may not be nesting the first for loop yet, but you never know when you are going to copy and paste that code somewhere, then you are already done. I suppose an agument against that, is if you are doing something on an instance of a collection, and you want to change, there is less to remember to change, but then you are probably better off rewrting the whole loop from scratch given you likely wouldn't handle a different collection the same way.
sorry for the short description.. I want to take this algorithm and move most of the logic into VB.net instead of SQL Server. I absolutely love the parsing that this is doing, but I want to do it in VB (and export results to text files and then bulk insert). I just don't believe in writing to SQL row-by-row, so I want to copy this and change it to a set-based approach. I've written a dozen VB.net console apps. but I'm kindof new on the .NET side. I've definitely done some VB.net SQLCLR, that might be an interesting option.. but I'd have to do something involving remoting to get the load off of the database server.
I'm in high school and taking a class on visual basic. Here's a link to my e-book. The password is "15ijejnj" http://montreal.emcp.com/ebooks/login.php It's pretty useful.
Check out the new Boston on YouTube some nice tutorials there too
Your problem is scope. First, outside of the Sub, you declare Array() as a boolean array. Then you redelcare it inside the Sub, and *inside* the If block. So the Array(Int) declaration is only scoped inside the If block, therefore when the execution exits the If block, that Array will be disposed and cease to exist. Basically, inside that If block, you have 2 Array()s that exist, because the second declaration creates a 2nd one (it does not initialize the first one). So when execution gets to the 2nd loop, it begins working with the Array that was declared outside of the Sub (because the Array that you were assigning values to no longer exists). There's a number of ways to fix this, and they depend on whether or not Array really needs to be global. If it doesn't, get rid of the declaration outside the Sub, and move the declaration inside the sub to be above the If block -- that'll make it scoped for the entire Sub, rather than just the If block. If it does need to be global, change the declaration in the if block to be an initialization: ~~Dim Array(Int) as Boolean~~ *Note: either of these will work* Array = New Boolean(Int) {} ReDim Array(Int) Also, note that when specifying a size for an array in VB, the number in the parenthesis will be the ***last index*** of the array, not the size -- and arrays in VB are 0-based. Therefore, if you declare an array as Array(100), it will actually have 101 elements - Array(0) being the first, and Array(100) being the last. If you really want the array to have only 100 elements, it needs to be declared as Array(99), or in this case, Array(Int - 1).
Setup the variable in a class or module and make sure they are public. Does this not work?
Is this .Net? If so just use keyword public instead of 'DIM' and then reference them as formname.variablename or in the case that you have to instantiate the form manually, InstanceName.VariableName
Hey, thank's for answering! If it works I'm willing to try it, I'm very new to VB, how do I use that Friend Identifier to get words or numbers in the target textbox? Lol 
I think you might need a port name in that IP address; Using connObj As New SqlClient.SqlConnection= ("Data Source=1.2.3.4,1433;Initial Catalog=dbname;User ID=myuid;Password=password;") See that 'comma' 1433, I think you might be missing that, not sure what port you're going to need to use though.
If you are using ASP.net there is a SQL object in the toolbox that you can use called sqldatasource. Its a useful wizard to use database connections in ASP.net. I kinda miss that it is not present in forms applications, and you have to create all the SQL objects manually.
I use ado classic with Vb.net all the time... Ado is simple and it just works 
Why not use a keypress event on the form? Private Sub Form1_KeyPress(sender As Object, e As System.Windows.Forms.KeyPressEventArgs) Handles Me.KeyPress If Convert.ToInt32(e.KeyChar) = Keys.A Then picMain.Left -= 2 End If If Convert.ToInt32(e.KeyChar) = Keys.D Then picMain.Left += 2 End If End Sub
When i try this it highlights vbKeyLeft and vbKeyRight
make sure you are inputting a capital A and D in my example... 
What's the error?
It's for my first real project I'm making in VB for people to download.
When I mouse over it says "Event 'PrintPage' cannot be found" As far as I can tell there aren't any resources included in this project that aren't included in the other project. The two are very similar.
http://msdn.microsoft.com/en-us/library/system.drawing.printing.printdocument.printpage.aspx#Y787 Notice the imports Import system.drawing Import system.drawing.printing Does your old project have that include anywhere? Otherwise you need to focus on the differences in the two projects.
If you mean debugging in the IDE, press ctrl+break To drop into code, edit it, and press f5 to resume. This cannot be done with a compiled exe. 
&gt;System.AppDomain.CurrentDomain.BaseDirectory returns a string with the current directory of the application. Works for Console, WinForms, and WPF applications.
Try [this](http://htmlagilitypack.codeplex.com/wikipage?title=Examples)
There isn't any good documentation for this, is there?
You can search by tag with code similar to this: Dim Something As HtmlElement = Me.WebBrowser1.Document.GetElementsByTagName("table")(1) Where table is the tag, and 1 is the index (like if you have multiple table tags, it'd extract from the first one. If it's static, and you know what results you're going to get you can do something like: Dim ListItemOne As HtmlElement = Me.WebBrowser1.Document.GetElementsByTagName("td")(1) Dim ListItemTwo As HtmlElement = Me.WebBrowser1.Document.GetElementsByTagName("td")(2) Listbox1.Items.Add(ListItemOne) Listbox1.Items.Add(ListItemTwo) 
Hey, thanks for that. The only problem is it's not static but more dynamic, and I'd have multiple &lt;td&gt;s in one &lt;tr&gt; for the readin. Should I loop it?
The number of rows is not static, but the number of columns is.
Not sure if it was your intent, but the division in your Dim statements is integer division (backslash) instead of regular division (/). According to the help file: "Before performing the division, Visual Basic attempts to convert any floating-point numeric expression to Long. If Option Strict is On, a compiler error occurs. If Option Strict is Off, an OverflowException is possible if the value is outside the range of the Long Data Type (Visual Basic)." That's it. VB will recognize the 100, 25, 10, and 5 as an integer, because there is no decimal point. I usually write them as 100I, 25I, 10I, and 5I to make sure they are integers. In that light, farther below in your code you have numbers with decimals. I write them with an R after them to force them to a double.
I'm assuming you're using Outlook, otherwise disregard. You're just going to call the sendemail function from your button and pass the value from your form. http://pastie.org/5106021 shit you're using VBA aren't you....ugghhh...it's the same thing basically but you'll have to make some changes probably. 
Thank you! Very much appreciated. :}
Your question is a bit confusing, but this may help you. If you want to do math to that dynamic string you can convert it to an integer, perform the math, then convert it back to a string. To convert a string to an integer use: "Dim YourInteger as Integer = Convert.ToInt32(Val)" val is the string. And to convert it back use: "Dim YourString as String = YourInteger.ToString"
Then why not create a class with a "Item Name", "Remaining", and "Price" properties in it and just create a new list of it?
What error are you getting?
The asp.net site tutorials section has some great projects you can build yourself and follow along ([http://www.asp.net/web-forms/tutorials](http://www.asp.net/web-forms/tutorials))
Could you try explain exactly what you want a little more specifically?
Tanks : } have all my upvote!
I'm trying to create something (presumably a Windows Form) where searching for a username (ie ee\lstev) produces the current computer they are logged into. Googling this found me this function, but I don't know how to implement it into a form, or how to declare 'output' as a field to display something. Essentially... I have no idea with VB
How about this: Private Sub WriteSettings(filename As String) Dim sw As IO.StreamWriter = New IO.StreamWriter(filename) For Each ws In Websites sw.WriteLine("{0},{1}", ws.Name, ws.URL) Next sw.Close() sw.Dispose() End Sub Private Sub ReadSettings(filename As String) Dim sr As IO.StreamReader = New IO.StreamReader(filename) Do While sr.Peek() &gt;= 0I Dim work() As String = sr.ReadLine.Split(","c) Dim ws As New WebSite ws.Name = work(0) ws.URL = work(1) Websites.Add(ws) Loop sr.Close() sr.Dispose() End Sub 
DoCmd.SendObject acForm, "MailForm", "PDFFormat(*.pdf)", "", Form_FormName!ControlName.Value , "", "New Work Order!", "Check with ABC if you need more information.", True, ""
Heres some code for you: Imports System.Net Imports System.IO Public Class Form1 Private Const CP_NOCLOSE_BUTTON As Integer = &amp;H200 Protected Overloads Overrides ReadOnly Property CreateParams() As CreateParams Get Dim myCp As CreateParams = MyBase.CreateParams myCp.ClassStyle = myCp.ClassStyle Or CP_NOCLOSE_BUTTON Return myCp End Get End Property Private Sub Form1_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load If Not Directory.Exists("C:\Kylesco OS 2.1 Alpha") Then Directory.CreateDirectory("C:\Kylesco OS 2.1 Alpha") End If Dim client As WebClient = New WebClient AddHandler client.DownloadProgressChanged, AddressOf client_ProgressChanged AddHandler client.DownloadFileCompleted, AddressOf client_DownloadCompleted client.DownloadFileAsync(New Uri("http://kos2.kylesco.com/KylescoOS2.1.exe"), "C:\Kylesco OS 2.1 Alpha\KylescoOS2.1.exe") End Sub Private Sub client_ProgressChanged(ByVal sender As Object, ByVal e As DownloadProgressChangedEventArgs) Dim bytesIn As Double = Double.Parse(e.BytesReceived.ToString()) Dim totalBytes As Double = Double.Parse(e.TotalBytesToReceive.ToString()) Dim percentage As Double = bytesIn / totalBytes * 100 ProgressBar1.Value = Int32.Parse(Math.Truncate(percentage).ToString()) End Sub Private Sub client_DownloadCompleted(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs) System.Diagnostics.Process.Start("C:\Kylesco OS 2.1 Alpha\KylescoOS2.1.exe") Application.Exit() End Sub Private Sub Timer1_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Timer1.Tick Me.CenterToScreen() End Sub End Class 
Dude the best way to learn to program is to program! Practice practice practice. I am in a similar situation, I programmed a lot as a kid, in the Atari 8-bit (or Commodore 64) days but haven't touch it hardly at all since. I am attending college and Visual Basic is one of the subjects. They have us coding 3-6 different "apps" a week and a lot of the students are complaining that it is too much work. I did dabble in VB for the past year, but nothing too serious. I have found that my skills have improved significantly since starting college because of all the extra work. 
plz :(
You use the programs My.Settings. Double click on the My Poject line in Solution Explorer. This will open up the project properties. Move down to the Settings tab. You will see a grid. Enter a variable called FormSize and set it as a system.drawing.size, and enter a FormLocation and set it as a system.drawing.point. In the right column, enter your default form size and form location. These will be two integer values per line (like 1024,768 and 100,100). These values are available to be read and written to. So in the form load you will have: Private Sub TheFormNameHere_Load(sender As System.Object, e As System.EventArgs) Handles Me.Load Me.Size = My.Settings.FormSize Me.Location = My.Settings.FormLocation End Sub And in the form closing you can save any adjustment the user made to the form size: Private Sub TheFormNameHere_FormClosing(sender As Object, e As System.Windows.Forms.FormClosingEventArgs) Handles Me.FormClosing With My.Settings .FormSize = Me.Size .FormLocation = Me.Location .Save() End With End Sub That should do it. What you have now is a set of default settings on the location and size of the form for the first time user opens your app. Then if they make any size and location adjustments to the form, you have a way to store that for the next time the programmed is opened. This is exact code except for the form name that I put in all my projects. I do a lot of things the same every time to make my life easier on the next project. 
Sounds like a matter of simple file IO. I'm going from the assumption that the file only contains the 2 ints that need to be used; if the file contains other information, you're probably going to need to employ some more extensive string manipulation. StreamReaders &amp; StreamWriters are a common way of performing file IO ... I don't bother with that shit anymore. File.ReadAllText and File.WriteAllText are my workhorses for file IO now. 1 line, boom, done. So there's essentially 2 crucial pieces of information you need here to approach this problem: the name &amp; location of the file you're going to be reading &amp; writing, and how you're going to differentiate the 2 numbers in the file. One common, simple route is to have the file be a csv (comma-separated values) file; you can actually use whatever separator character you want -- I usually use semicolons for no real reason. Once you have all this figured out, the coding is relatively simple. 'Set up a variable to hold the path to the file - this one is for a file stored in the program directory Dim sFile As String = Path.Combine(My.Application.Info.DirectoryPath, "nums.txt") 'Read the file into a string Dim sNumbers As String = File.ReadAllText(sFile) 'Parse the numbers into integer variables Dim iNum1 As Integer = Integer.Parse(sNumbers.Split(";"c)(0)) Dim iNum2 As Integer = Integer.Parse(sNumbers.Split(";"c)(1)) 'blah blah blah program logic here 'Write the new numbers to the file File.WriteAllText(iNum1.ToString &amp; ";" &amp; iNum2.ToString, sFile)
Thankyou for the help, will this create a file on it's own? or do i need to make the file for it to edit? Edit: ok i got everything working, but it's not editing the text file i created, instead it is making new files with the data as a name, is this normal?
Yeah, whoops, my bad ... I got the parameter order mixed up. It should be File.WriteAllText(sFile, iNum1.ToString &amp; ";" &amp; iNum2.ToString) And yes, it will create the file if it doesn't exist, and overwrite it if it does exist.
thanks, also out of curiosity, i noticed you just use i for integer and s for string instead of int and str, is naming convention not as important is they make it out to be? i swear 50% of this class i'm in has been about making sure you name shit right.
I think they pound naming convention into you so hard so that you're familiar with it. In the professional world, naming convention is determined by the company or department you work for. Some places have very strict conventions (be it 3-letter prefixes, 1-letter prefixes, m_ prefix for member variables, etc.), and some places don't care as long as the code works. I work in one of those laid-back places that doesn't have any specific conventions; the guy who works on the same systems I do, who's basically my mentor, uses 3-letter prefixes. The 2 guys who work on the other systems use 1-letter prefixes; they also have a specific format for comments, whereas me &amp; the other guy just do what we want with comments. I prefer the 1-letter prefix, as I think it makes the code look cleaner, and it's less typing. However, I only use 1-letter for some things -- controls still get 3 or 2 (btn-button, lbl-label, dgv-DataGridView, lv-ListView, etc.), decimals &amp; doubles get 3 (dec &amp; dbl), collections get whatever makes sense (lst-list, dic-dictionary, ht-hashtable, hs-hashset, sl-sortedlist, al-arraylist, dt-datatable, dr-datarow, ds-dataset, q-queue, etc.). I also have a tendency to prefix arrays with a, regardless of their datatype (also, it's rare that I work with more than 1 or 2 arrays at a time, so they're easy enough to keep track of). Basically, in the professional world, you may be held to a convention like you are in school, or you may be fortunate enough to develop your own convention that works for you. Some people will argue that naming conventions are pointless and you should just give the variables meaningful names; having had to debug code written by others with no naming convention, I personally disagree with this. I believe that the most important part of coding is making sure it works, followed closely by making sure it's maintainable and readable by others.
I'm on my phone so I can't really break it all down, but it equals 25 because of what I said. You have two for loops, and the second is contingent on the value of the first. The very first pass is intTotal=0+(1x1), then intInner increases by one and the second pass is intTotal=1+(1x2). intInner increases by 1 again (because the loop of intInner=For intOuter to 3) and the third pass is intTotal=3+(1x3). Now intTotal=6 and intOuter=2. Now the second for loop has intInner beginning at 2 so the fourth pass would be intTotal=6+(2x2) and so forth.
I gave you a response, yesterday; but it has disappeared so here we go again. Double click My Projects in solution explorer. This opens the main properties form for the project. Go down the left side to the settings tab. You will see a grid for project settings. Make two settings: FormSize as a system.drawing.size and FormLocation as a system.drawing.Point. Enter your default values such as 1024,768 for the size and 100,100 for the location. You can retrieve and write to these settings, like: Private Sub FormName_Load(sender As System.Object, e As System.EventArgs) Handles Me.Load Me.Size = My.Settings.FormSize Me.Location = My.Settings.FormLocation End Sub Private Sub FormName_FormClosing(sender As Object, e As System.Windows.Forms.FormClosingEventArgs) Handles Me.FormClosing With My.Settings .FormSize = Me.Size .FormLocation = Me.Location .Save() End With End Sub So in your case, set your first form to the size you want using the Settings. When the user resizes the form, change My.Settings.FormSize and My.Settings.FormLocation and do a My.Settings.Save(). When their next form opens use the two variables in your form load.
This seemed fun, it's probably not exactly what you wanted but it should get you an idea. Dim myTime As Double = 150023 'this is where your textbox seconds input would go Dim myDays As Double = Fix(myTime / 86400) If myDays &gt;= 1 Then myTime = myTime - (86400 * myDays) End If Dim myHours As Double = Fix(myTime / 3600) If myHours &gt;= 1 Then myTime = myTime - (3600 * myHours) End If Dim myMinutes As Double = (myTime / 60), _ mySeconds As Integer = Replace(Format((myMinutes Mod 1), ".00"), ".", "") If myMinutes &gt;= 1 Then myTime = myTime - (60 * myMinutes) End If Console.WriteLine(myDays &amp; " Days " &amp; myHours &amp; " Hours " &amp; Math.Round(myMinutes) &amp; " Minutes " &amp; mySeconds &amp; " Seconds ") Console.ReadLine() http://pastie.org/5378247
I use visual basic express 2010 on my windows 8 machines still. Seems to work fine sans any of the new vs12 ide enhancements. Haven't looked into it enough since I won't even consider spending that kind of money for a small hobby.
I'll give that a shot. Thx.
Have you built the GUI for it? I would think that you would need two inputs for the pipe lengths. Use a textbox and a label to identify the input and then have a button and probably another label to use as output. Once you have that all setup double click on the button you created on the GUI. This will bring up a button click event. Create variables to hold the inputted user data, multiply them together and output this on the output label.
Thank you! Very helpful :)
Just a hint : make sure to keep all tour data in inches. Don't keep inches AND feet at the same time. You'll need to seperate them only when displaying the result. This will save you a lot of conversion code when adding lengths. So : * Create a small class for lengths and override its ToString method. This method will be responsible for taking an amount of inches and converting it in **x' y"** format. * That same class should have methods for conversion - feet + inches (your input format) to inches and vice versa. If you need more advice, just ask.
Public Function WeldTwoPipes(Pipe1Length as Integer, Pipe2Length as Integer) WeldTwoPipes = Pipe1Length + Pipe2Length + 1 End Function
 Private pause as Boolean = true For I as integer = 1 to 100 Do until pause = false Thread.sleep(100) Loop 'other code' Next 
I understood that part, it was just the first exercise that tripped me. I think it was just understanding where i = startNumber To endNumber came from. Am I correct in saying that i always equals the starting number and the ending number of the loop? 
i could equal any number from the starting number to the ending number. In this case i could be 1, 2, 3, or 4 depending on which iteration it is on. It is also possible to do varying increments or decreasing increments. For example: For i = 100 To 10 Step -10 '* do something *' Next Here i starts at 100 and decreases each iteration by -10. So i (in order) equals 100, 90, 80, 70, 60, 50, 40, 30, 20, and 10. A positive step would do positive increments of that number: For i = 2 To 10 Step 2 i would be 2, 4, 6, 8, and 10. 
Negro this does return a value. Grow a pair.
The path name is the following: ProgramName\bin\Debug\ Inside this folder, after compiling, should be a .exe, which you can take anywhere. Keep in mind, you will also need any other files associated with your program, like if you have any pictures in this folder as well.
Ah okay, I understand. Thanks for explaining it to me!
You know, you have pretty much nailed it on the head for me. I have worked with unmanaged code for a while and just hated it. I always enjoyed the tools that come with the cli like the garbage collector, etc. Visual basic in my opinion is just a language that is straight to the point, example' Int lol = int(n) Or Public lol as integer = 0 Just a direct language!
If you are trying to display the interest rate, then you would need to output it to the form, which by looking at your code doesn't do it. You would usually do it like you did with the variables, but in reverse order. For example, take this line: &gt;InterestRate = lblInterestRate.Text This line sets the variable InterestRate to the contents of the label lblInterestRate. If you wanted lblInterestRate to display the contents of InterestRate, you would need to output it like so: &gt;lblInterestRate.Text = InterestRate Note, this is only used AFTER InterestRate has been given a value.
I would have to say this method is better than mine. OP should use this as your example of how code should be written. Parsing is much more forgiving than a direct cast.
That error, I believe, comes from if you put &gt;lblInterestRaate.Text = InterestRate Before the Select Case. You have to put it sometime after the variable has been assigned a value.
This is great! Thank you so much. I'll study this a little more since this has a lot more info than R3700L3R's, but both are great
[This Microsoft page](http://www.microsoft.com/visualstudio/eng/downloads) lists VS2012 Express versions for both Windows Store and Desktop applications. The desktop version has C#, VB, and C++.
The 2012 express versions don't let you do development for the desktop, they only let you develop the modern UI store apps.
Id be more the willing to help you tackle this project! If you want message me some details, set up some sort of remote desktop situation or possible a teamserver and get some stuff done!
Yes a database would work much better.
I see that now, and I find that pretty interesting because I'm pretty sure that wasn't available when I downloaded the VS Express for Windows 8. Question is, why have 2 different products? Why not make one product with Modern UI and desktop development? Seems like a lot of extra and unnecessary work.
I don't have an answer to your question, but I do have a suggestion... If you add 4 spaces before your code example, it will be formatted properly like so... ActiveWindow.SelectedSheets.PrintOut Copies:=1, ActivePrinter:= _ "Adobe PDF on Ne07:", Collate:=True No need to use any kind of &lt;code&gt; &lt;/code&gt; tags 
http://msdn.microsoft.com/en-us/library/dd492171%28v=vs.100%29.aspx
So you follow up the fake word with a real one? You're not making sense. 
Oh you actually think rhetorical is a fake word, or is my sarcasm filter broken?
What is the first language I would compare it to C# public int lol; Also integer defaults to 0 so you don't really need to set it to 0. You don't find it overly verbose compared to other languages. For example lambdas c# (x) =&gt; x * x or vb.net Function (x) x * x
Now you're just fucking with me.
your code is right, your controls are not. Start with one label, set its name to "Label" and the "index" property to 0 and then copy/paste it however many times you need it, the index property should auto-increment after each paste and you can now reference them as an array of Label(x)
Are you changing the label to the same thing for each one or will they all be different?
Pastebin please.
A) create a series of numbers with an arithmetic function you know (say each advancing number is the sum of the two previous numbers.). Show them in a label and then have a text box for input. When the user clicks a button check and see if that number in the text box = the number you know is correct. If it = that number display a message box or something saying good job ELSE display a message box giving feedback. 
Can you post your code? Does it give you an error? Not giving us much to work with.
I figured it out.... thanks though
Can you post how you figured it out?
I can but it was a really dumb bug where I had my text file in the wrong place. If you really want it I can throw it up but prolly not worth it 
What book(ebook if possible) would you recommend to learn this language? I m stuyding it at the moment but the proffesor did not recommend any books and i m pretty lost ( haven an exam on it tomorrow) I would really appreciate a good reply :) Thanks
seeing the code would be helpful. Try using the new keyword when you instantiate the object its erroring on. like: Dim obj as new Object instead of Dim obj as Object
quite possibly my favorite thing on the internet. 'I'M GOING TO DIE IF I DON'T GET HELP'...People come to your rescue...OP doesn't respond.
Been a few years since I have done it
Was busing home from school wasn't on reddit plus I didn't ask for help just a place I could read up on it
Sorry about that. http://pastebin.com/cj43rnDG 
Has this been looked at by somebody yet? If not, reply and I’ll take a look for you. 
Look inside your self be the last meat in the pot Dream is in your heart 
Are they are in an array? arrGrades.Max would give you the highest grade.
Look into the string.format method.
you can also use a mask on the textbox so the user knows what you are looking for instead of getting an error message :)
Awesome. Knew it'd be simple, I just don't know programming that well. Kinda learning as I go
Got it. So far I've always been taught to be as explicit as possible, but redundancy is redundant. 
More pointless shit to read = harder to read clutter. My coworkers hate me doing: tbMytext.text = if(boolean, "on", "off") Ex 2:- Button.image = if(thisistrue(), my.resources.image, getimagefunc()) They prefer a long ass winded if else end if. The above can cut out huge amounts of code and nested if statements. Also, I like doing short if statements on one line: If condition then "condition met" No need for the end if and multiple lines.
it's already been answered but you can also set a variable dblHighest and loop through all the values. check if the current value is higher than dblHighest and if it is change dblHighest to that value.
Just realized, I could have done it without any else statements at the end. Since I needed to set something as the string, I could have set the string as "Nothing Selected" to start and then if all 3 if/thens were false the string wouldn't change. 
Thank you, both of you. I really appriciate the help :)
Make sure you are using .Net, VB6, while 'easier' is not a properly structured programming language. If you learn VB.net off the bat you will have a much easier time understanding more complex languages down the road. The easiest thing you can do is pick something you want to accomplish (something simple) and build it. As a student I would recommend building something to keep track of your or your households finances. 
I'm not sure if my division code is right, but multiplication works. I'm using Visual Basic 2010 Express. 
Sure! Give me a few minutes! Edit: http://www.mediafire.com/?4cb7g2c68b9cjmj
So basic arrays hold a multiple number of similar data types. For example, an array of 5 integers is one variable that holds 5 integers. You can pick certain slots out of the array by calling them by their order value, one thing to remember is the first slot in an array is 0. Say the name of our array is array. If you wanted to select the first slot of the array you would call it like this: array(0) This tells the code to use the first slot of array. Defining an array differs in languages but in vb you do simply by dimensioning like so: Dim array(0 to 4) as integer If you have any questions let me know.
That's right regarding modulus, it's very useful for parsing through numbers. For instance if I wanted to take the number 123456789 and return the last 4 digits using math, I would just do 123456789 mod 10000 to return 6789. Excel is very useful for testing this stuff, you can do **=MOD(123456789,10000)** to see this. So I'm sorry I don't have time to go through all of your code, but I'm just going to guess that using the above logic (starting with mod 10, mod 100, mod 1000 etc...) you can parse through the numbers and perform the basic operations, then add it all up at the end.
Hey! It's you again, do you want to zip your entire project and send it over to me? I'll take a look at what your trying to do. 
 For Each strItem in ListBox1.Items if (strItem.substr(0,1) &lt;&gt; Combobox1.Text) then '* do something end if Next Off the top of my head.
Thanks for the response, pal! I'm currently at work, but when I get home in about 5 hours I will zip it up and send it over. Can you recommend a reliable file host? Much appreciated once more. 
Thank you, I will give this a try.
You may or may not have to .ToString the strItems before comparison.
Incredible! This is perfect. Thank you so much. I had such a headache over this! Lost my shit at the "Fo Drizzle" writeline. May have to keep that there for extra credit. Really appreciate this, pal. Couldn't have done it without you!
Wait, you said exclude in your post. The code is only including those names that start with the letter selected. I'm confused.
From what I remember of Visual Studio and games, C# was always the lesser of two evils as it was easier to design and code with. However my coding background is extremely limited when it comes to games, and the only games I’ve worked on were packet based - And packet based was also more suited to C#. 
VB would work fine for a pinball game.
It depends what you are comfortable with. From what I understand c# is completely worth learning, but it certainly wouldnt be impossible to program pinball in VB. Heck you could do it in x86 asm, although I think I would rather stab my hand with toothpicks... 
[XNA](http://en.wikipedia.org/wiki/Microsoft_XNA)
I have considered it, but I would rather stick to an interface that I'm familiar with
If you mean VB, XNA is simply a framework for VB. Loads of resources on it also.
Things have changed. VB is a very robust language. Not sure why it gets all the hate it does.
I’m not hating on Visual Basic, I love it. But there are always better languages out there for different jobs. 
It would be very hard to list many things that VB.NET or C# can't do. The question really is speed that you require from the code. You could do it. You ~could~ program a full on 3D FPS if you wished to but there are some technical reasons you have to take into consideration that make games like that run laggy or slow which you have to work around of course.
This. I first learned VBA which is I suppose a stripped down VB6, eventually I started dabbling in VB.net. While at first its a bit more terse, and you must be exact, its structured way better and, imo, its easier to use in the end.
How to you make your project with the .exe extension so you can share it? I have seen files where you click one and it opens VB so you can work on/edit. then there is the .exe version that goes straight to the program build, how do you make that? 
you could find the excutable by doing going through these dircetorys: \Documents\Visual Studio VERSION\Projects\APP NAME HERE\APP NAME HERE\bin\Debug Edit: This is only for applications that would need one file.
Your welcome!
You want to create a menu strip. It's not called a filebar.
The following would be one solution to it: &gt; Dim intArray(10) As Integer &gt; &gt; Dim dblHighest As Double = intArray(0) &gt; &gt; For i As Integer = 0 To intArray.Length &gt; &gt; If intArray(i) &lt; intArray(i + 1) Then &gt; &gt; dblHighest = intArray(i + 1) &gt; &gt; End If &gt; &gt; Next
What is the parent control of your textbox? If it is a form, you may not be able to scroll. You can dock a panel in your form and set the panel's autoscroll property to true, then when the user clicks outside the textbox, you can set focus to the panel and the scroll will work.
I don't know what you've plugged into Google for searches, but "vb.net create xlsx file" turned up some results. I don't know of any tutorials off the top of my head though. Whenever I need to create an Excel file, I usually cheat and shove my data into a CSV file, then I have a little class that turns a CSV into an XLS/XLSX. Here it is: Imports System.IO Imports System.Data.OleDb ''' &lt;summary&gt; ''' This Class creates an Excel spreadsheet out of multiple CSV files, one CSV per tab/worksheet. ''' &lt;/summary&gt; Public Class XLSMaker ''' &lt;summary&gt; ''' Creates an Excel spreadsheet from one or many CSV files ''' &lt;/summary&gt; ''' &lt;param name="aCsvPaths"&gt;String array containing the paths to the CSV files; for 1 CSV, a single-element array is necessary&lt;/param&gt; ''' &lt;param name="sXLSPath"&gt;The path (and filename) to write the output Excel file to&lt;/param&gt; ''' &lt;param name="ver"&gt;Excel version, either "2003" or "2007" .. I believe "2007" will work for 2010 as well&lt;/param&gt; Friend Sub MakeXLS(ByVal aCsvPaths As String(), ByVal sXLSPath As String, ByVal ver As String) Try Dim ExcelConnection As OleDbConnection = Nothing If ver = "2003" Then 'connection string for a pre-Office 2007 Excel spreadsheet. NOTE: extension must be .xls ExcelConnection = New OleDbConnection("Provider=Microsoft.Jet.OLEDB.4.0;" &amp; _ "Data Source=" &amp; sXLSPath &amp; ";Extended Properties=""Excel 8.0;HDR=YES;""") ElseIf ver = "2007" Then 'connection string for Office 2007+ Excel Spreadsheet. Extension may be .xlsx ExcelConnection = New System.Data.OleDb.OleDbConnection("Provider=Microsoft.ACE.OLEDB.12.0;" &amp; _ "Data Source=" &amp; sXLSPath &amp; ";Extended Properties=""Excel 12.0 Xml;HDR=YES;""") End If Using ExcelConnection ExcelConnection.Open() 'Open the connection For Each s As String In aCsvPaths 'Set up the SQL command to create the xls from the csv Dim ImportCommand As New System.Data.OleDb.OleDbCommand("SELECT * INTO [" &amp; Path.GetFileNameWithoutExtension(s) &amp; "] FROM [Text;DATABASE=" _ &amp; Path.GetDirectoryName(s) &amp; "].[" &amp; Path.GetFileName(s) &amp; "]") ImportCommand.Connection = ExcelConnection 'Assign the connection to the command ImportCommand.ExecuteNonQuery() 'Execute the command Next End Using Catch ex As Exception 'Exception handling removed for example post End Try End Sub End Class
If you want to do more than create a CSV file readable by excel, look up information on the MSDN about the Microsoft.Office.Interop.Excel library, it has all the functions you need to do anything to an excel document that needs to be done.
Just did this, thanks!
when the user gets 6 incorrect guesses I want the program to end/close. I know I have it in there but it doesnt work
It doesn't work because it's not there. Where does it tell the program to close?
Alright boy, I'll tell you later over Skype. 
that's not in the spirit of reddit!
I have also tried Students.Images.Add(My.Computer.FileSystem.GetFiles(studentPic) As System.Drawing.Icon) and Students.Images.Add(studentPic As System.Drawing.Icon) but with the same error.
I am not entirely familiar with this control... but it sounds like you just have a casting issue try something like Students.Images.Add(new system.drawing.image(studentPic)) sorry the syntax may be off, but basically I think you have to add an image object, which you can construct from the file name, otherwise you are just trying to add a string to a collection that wants image objects.
Assuming you mean vb.net it is used for making applications that run on Windows machines, as well as ASP for websites. Actually Visual Studio, the IDE which its written in can make a ton of different types of programs. Want an app for windows 8, or a website with a DB backend, or any sort of program that runs on your windows machine then Visual studio is the program to use. You can even create an android app (vb for android) using an older version of the language http://www.basic4ppc.com/index.html 
I will probably be using purely calculated values.
Thanks for reply, I was able to get it working using index.toString(), but this will be useful for future applications.
The best way would be to check if the ball comes into contact with the left, right, top, or bottom properties when the ball is moved.
So basically a form is what you have called a window. In your solution explorer you should see it called Form1. Add another form(google how depending on your version of vs). You could have this initial form be the login screen, then if the login information is correct open the email form using the form.show and me.close methods. Hope this helps!
Thanks :D
http://vb.net-informations.com/excel-2007/vb.net_excel_2007_create_file.htm
If you still haven't figured it out, posting some code would help us so we know how you're trying to solve your problem.
I have ElseIf intIncorrect = 6 Then picSpongebob.Image = My.Resources.Hangman6 picSpongebob.Visible = True End If If StrComp(strGuess, strSecretWord, vbTextCompare) = 0 Then 'If you win it does everything in the if then picPic.Visible = False picSpongebob.Image = My.Resources.SpongeBob MsgBox("You win! It took you " &amp; intNumberofGuesses &amp; " guesses. Spongebob is now safe!") Else MsgBox("You lose. Press OK to display secret word.") End If but I don't know what to put in the elseif intincorrect=6 then to make it say you lose. Do you know what I'm trying to say?
Can't you just put: MsgBox("You lose. Press OK to display secret word.") 
then do you know what I can put?
ok I will try it later. Thanks for your help!
Copied the code to a new project and everything worked fine. 
Not sure I got what you want to do right, but I'll try. I wrote this on notepad, not checking anything in Excel/VBA. But basically you're going to loop through each column in the row and check it against whatever column you want. If you find your value or whatever check you want to make, it will move to the next row until all the rows are checked. You shouldn't need to sort this. Sub Looper() Dim iRowR As Integer: iRow = Range("R65536").End(xlUp).Row For x = 1 To iRowR 'last row in column R For y = 1 To 10 ' you can change 10 to the number of columns you want to loop through, its going from A-J right now If Cells(x, 12) &lt; Cells(x, y) Then 'this is saying if row(x), column(12) &lt; row(x), column(y) then youve found your value 'do something MsgBox ("yes") Exit For Else 'do nothing and keep looping End If Next Next End Sub 
I would make two loops. The outer loop iterates through the rows and an inner loop that finds the column that contains the largest value then compares that to the R column. Let me know if you need help with specifics.
yes. look at picturebox.location picturebox.left picturebox.right picturebox.top picturebox.bottom methods.
yes, load form event. Double click the title bar of your form to auto-populate it. (or select form events and load)
of course you should check out a graphics library such as DirectX. But I'm assuming you have a reason for wanting to do this in pure .net and would recommend at a minimum using GDI+ (built in .net graphics library) off the top of my head it would look something like this dim g as graphics = graphics.fromHwnd(me.handle) g.drawRectangle(x,y,width,height) just handle the on_paint method and toss that in. You can then change the values of x / y / width / height in code elsewhere (say in a on_keydown method) Sorry I gave a really rough outline for my suggestion but it's a better route to go. Mainly due to the picture box having really poor performance / flickering ect. The picturebox has a lot of un-needed overhead due to it inheriting from control. It's not just an image on screen, think of it more like a button or a textbox. It has a lot of other functionality that you really don't need if you just want to draw a ball to the screen. also, if you go my route or the picturebox one you will still run into a flickering issue, my advice is googling something along the lines of "flicker free drawing in vb.net" and find a couple of commands that go in the on_load sub such as "all drawing in wm_paint" and a couple others I can't remember that really help with drawing performance. Once you get all of that sorted you will be well on your way to drawing some cool stuff and making really simple games. Just message me if you have any questions. :)
wut... how? code example? I'm damn impressed.
I'm not very good at coding i just do it at college(not uni) for an A level I just used 4 timers among some other things one of them just gives me the position of the player one of them moves the "enemy" towards the player depending on its posistion I use another timer to tell me if i need my enemy to keep moving in a certain direction to get closer to the player and the last timer i use to tell me if the player position is the same as the enemys it's very simplistic but thankyou :)!
Very nice!
Thankyou! :D Something to waste an hour on eh? :)
(off the top of my head so you will have to find the correct objects, shouldn't be hard with intellisense. Dim minValueName as string = "" dim minValue as integer = integer.max for each r as datagridviewrow in mygridview.rows if r.cells(2).value &lt; minValue then minValueName = r.cells(1).value minValue = r.cells(2).value end if next me.textbox1.text = minValueName If you can't figure it out with this just send me a message and i'll toss together a test project to get the objects right. There is a chance you need "gridview.getrowcellvalue(rowindex,colindex) instead of r.cells(colindex). I spend a lot of time using devexpress gridviews instead of basic gridviews so I don't remember the exact method to access rowcell values. Good luck!
I'm not a programmer, however, I found this on youtube. Hope it helps!! http://www.youtube.com/watch?v=jZsTLlFoNuo
I dont believe its possible to do this. I do this for a living, as in when a user logs into our company website, i run over to another computer, lookup their credentials, then run back to the mainframe and type "ACCESS GRANTED"
And believe you me, theres a lot of expensive cables running every which way, and blinking lights for days
Genius! Why didn't we think of that! OP, why not just use sql express, as comes with visual studio, Or sql lite. Using Mysql is still easy enough, iirc just add it as a data source with odbc driver. But why, when you already have sql?
The only one I know is "Beep". It calls the computer's internal speaker to beep. 
Wow these are a blast from the past. I would imagine this is very hard to find info about since it's basically a dead language, but I would associate my searches with QBASIC which was one of the programs people used back then to run/compile code like this. Declare sub XXXX() Procedure like most programing languages have. In VB would be equiv of Sub XXX() PAINT(50,50),1 draw on the screen at X,Y and the 1 was color (0 to 15). Need to use screen command before hand if I remember right. LOCATE 9, 41 moves the input cursor to location col 9 and row 41 or H, V COLOR Simply changed the current text color (0 to 15) BEEP just caused the system speaker to make noise I recall you could add number to it to to change the pitch and tone of it. CLS Clear screen SHELL used to launch external OS commands/programs etc. for example SHELL "C:\WINDOWS\NOTEPAD.EXE" should run notepad. SCREEN Sets a graphics mode. for instance you had to set a screen type which set how many colors you could use what not. Like 0 was text 12 was 16 colors that sort of thing. Then you could use paint, circle and all the graphic commands. I would see what the program is supposed to do and just rewrite it from scratch in a modern language. It would be much easier then fooling with BASIC. Directly converting the program likely won't work well considering how languages have progressed over the years you can probably do anything it does but better in VB.NET
A panel will work. You should be able to adjust the height and location of the controls being covered. Either drag them until they snap under the menu or adjust the controls height and location.Y -/+ 27 respectively, ( 25px menu + 2px padding) which is the default when you snap it.
try some padding and margins.
Languages were so easy back then. 
Hope this helps. This isn't code for a Web form but I've converted similar code from a vb.net to an aspx before with little difficulty. http://stackoverflow.com/questions/9234753/inserting-data-into-a-mysql-table-using-vb-net
Ah, the good ol' days.
True, but you'd be surprised what people did with it. I've seen some crazy BASIC programs.
I would go download QBASIC and load the code in there, any command you're unsure of, simply put the cursor on it and press F1. it's help file is amazing. 
Hmm this sounds like a great idea. Thanks for the info.
When do you need it by, and how much is your budget? 
Two weeks max. 300 bucks? 
Hit me up when you start I have some subs/functions you can use for free. They will take care of the connection, and SQL statement execution and supply record sets for any statement 
For the second try this: Dim writer as new system. Io. Streamwrier ("path") Try For each item in list box. Items Writer. Writeline(item) Next Catch ex as excpetion End try Writer. Close That should work. Replace path with that file path ("C:\test\test. Txt) And list box with listbox1 or whatever your listbox1 name is. Good luck! 
So with the code you have, you could set a static boolean there and when the keypress is a decimal, you could set it to TRUE. Doing this would have to also check if the decimal was deleted so that it would set the boolean back to FALSE. Edit - also you could do check on the keypress, like if textbox.text.contains(".") e.handled = true 
There may be a more elegant way, but this works on my quick mockup If Char.IsNumber(e.KeyChar) Then ' do nothing ElseIf e.KeyChar = "." Then If TextBox1.Text.Contains(".") Then e.KeyChar = "" ElseIf Char.IsControl(e.KeyChar) Then 'do nothing Else e.KeyChar = "" End If EDIT: Or a little cleaner: If Char.IsDigit(e.KeyChar) Or (e.KeyChar = "." And Not TextBox1.Text.Contains(".")) Or Char.IsControl(e.KeyChar) Then ' do nothing Else e.KeyChar = vbNullChar End If
You could also do a check to see if the string in the text box already contains a decimal like so If Not Char.IsDigit(e.KeyChar) And Not Char.IsControl(e.KeyChar) And Not (e.KeyChar = "." and txtbox.text.tostring.contains(".")) This way you don't have to worry about managing the flag
Ya, see my edit :-)
Microsoft access, kid
You need to write the conditions there for all the ORs, like If Subject4.Text = "Chinese Continuers" And (GradeValue4 = 11 Or GradeValue4 = 12 Or GradeValue4 = 13) then AdelaideSubjectValue1 = 2 edit - I would put brackets around the OR statements like I showed above, for clarity. 
cheers!
No ones going to help you if you dont even try to explain. What kind of program. Whats not working. Etc
We'd love to, but can you be any more vague?
Ah, this problem. It's actually very easily fixed. Assuming your panel is set to be Fill docked, you need to set the order in the Document Outline. Go to the View menu, go to "Other Windows" and select "Document Outline". (The keyboard shortcut is Ctrl+W followed by U, if you're a keyboard warrior.) This window shows how the controls are grouped and ordered. To get your menu bar to look the way you want it, drag its control to the *bottom* of the list below your Panel. So, you can see the difference, before: http://i.imgur.com/Oia4EW2.png And, after: http://i.imgur.com/b4oSxm7.png Hope that helps!
Give shell(&lt;path&gt;) or Process.Start(&lt;path&gt;) A try. 
For the longest time Microsoft used the Multiple Document Interface (MDI) forms, which has been available since vb5 or 6, not really sure. Whichever iteration of VB you're using, see what the MSDN files have to say.
I use relaunch logic to handle a self updater routine, but the concept here is very similar. If you want an entire new instance of your application, ecnepsnai has the right of it, but here's the command to its fullest: Process.Start(Application.ExecutablePath, "YourParameters") The first parameter fills in the exact name and path of the program itself, the second is any parameters. So you could add something like "/load C:\Temp\Filename.ext" if you wanted to to load up something at start, and My.Application.CommandLineArgs has a collection of your command line parameters. (If you want to launch without anything in the command line, just skip the second parameter.) If you're going to go the MDI route, where windows spawn inside your application, create a form that will contain your windows, set the form's IsMdiContainer property to True, then when you spawn a form, set its MdiParent property to a reference to that form. (If the form itself launches, do mySubForm.MdiParent = Me) Hope that helps.
If oits a rich text box you could try RichTextBox1.Text = ""
Are you trying to in the same program? Or do you want to launch a new instance of your program? If it is all in the same program, you can just redim the form and call it again. Something like Dim newform as new Form1 newform.textbox1.text="New text" newform.show
http://www.homeandlearn.co.uk/net/vbnet.html
DialogResult.Cancel is an [enumeration](http://www.dotnetperls.com/enum-vbnet). not a boolean... that website doesn't do a good job of explaining stuff. 
To expand on this: Since it is an enumerated object converting it to a integer gives the corresponding index for the object if you put a cint(dialogresult.cancel).tostring and a cint(dialogresult.OK).tostring in a msgbox or in some displayed location. It will output 2 and 1 respectively. which seems to match the msdn page also you can compress your code to: If openfd.showdialog() = DialogResult.Cancel Then MsgBox("Cancel Button Clicked") Else strFileName = openFD.FileName MsgBox(strFileName) End If assuming that strFileName is defined elsewhere, of course. Sources: http://msdn.microsoft.com/en-ca/library/system.windows.forms.dialogresult.aspx edit: formatting
What i think is a good example for DialogBox and the Enum: [Message Box Show VB.net](http://www.dotnetperls.com/messagebox-show-vbnet). Rather than using "integer", you should be using "DiaglogResult". Dim Result as Dialogresult = OpenFD.ShowDialog() If Result = DialogResult.Cancel Then MsgBox("Cancel Button Clicked") Else strFileName = openFD.FileName MsgBox(strFileName) End If
I couldn't understand the websites that you guys linked me, but [this](http://www.vbforums.com/showthread.php?532858-Classic-VB-What-is-an-Enum-and-how-can-I-use-it) one seemed to help me a great deal. It took a while (roughly 4 hours), but I understood it in the end - I greatly appreciate both /u/anocweb and your help, thank you.
hey I'd put it into a database and use a UNION operator
You both forgot one minor detail: using the Finally keyword correctly. :) I'll shrink the above code down a bit for clarify and show you a good use of it (in that convenient gap BCprogramming left after the Catch block): Try ' ALL the code! Catch exx As Exception Console.WriteLine("Invalid Input-" + exx.getType().Name) Finally Console.WriteLine("Press any key to exit!") Console.Read() End Try The Finally block executes regardless of whether an Exception was thrown, so it's good for cleaning up objects (particularly ones that don't support the Using keyword) or logging information about the end of a process.
you are also a wonderful person. Thank you so much!
I only wish VB was much more popular and supported more by Microsoft. My biggest gripe with C based languages is their lack of readability.
I think you would have to end that debugging session to continue. What happened is you hit an exception that would end your program, and you were still in debug mode. 
Good catch, I missed that in the original requirements. I left the gap just for you! :P
Would need to see code... I assume your adding something to a list without cleaning the list, or something similar. Without code... it's a big ole game of whack-a-mole guessing.
I'm assuming you're using a DataAdapter and a DataSet. Are you reusing the same DataSet each time? If so, that's why. It still has the results of the previous query in it, so either reinitialize the DataSet or call DataSet.Clear() first. (Like wernercd, I can only make an educated guess without seeing the code, but I have a feeling this is the problem you're running into.)
This was exactly it, thanks a lot :)
Wow, looks really neat and well done. My only tip would be to comment your code. :) Good luck and happy coding! 
Look into the [XNA framework](http://msdn.microsoft.com/en-CA/library/hh477142.aspx)...
you need to use the mysql NETConnector. Download and install from mysql.com make reference to dll find your connection string ??? Profit!!! Every application i write that involves any kind of need for a large database for hundreds of thousands to millions of records is done in mysql because its what i know. edit: link to mysql .net-&gt; http://www.mysql.com/downloads/connector/net/
no, because then the menu strip will then be covered and will not be seen.
So, I've made a little progress debugging this and found that in main part of the algorithm (the x,y loops) I had declared y outside the x loop and it wasn't being reinstantiated to 1 with each iteration of x. It should read (and I am making this change in the original post as well): ' Main part of Sieve of Atkin Dim x As Integer = 1 While x &lt;= root Dim y As Integer = 1 While y &lt;= root Dim n As Integer = (4 * (x * x)) + (y * y) If (n &lt;= limit And (n Mod 12 = 1 Or n Mod 12 = 5)) Then sieve(n) ^= True n = (3 * (x * x)) + (y * y) If (n &lt;= limit And (n Mod 12 = 7)) Then sieve(n) ^= True n = (3 * (x * x)) - (y * y) If (x &gt; y And n &lt;= limit And n Mod 12 = 11) Then sieve(n) ^= True y += 1 End While x += 1 End While I thought I had fixed it and it seemed to return all the primes when I re-ran it, but it actually returns too many numbers as prime. Output calculating primes to 100: 2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 65 67 71 73 79 83 85 89 91 97 65, 85 and 91 shouldn't be marked as prime. Still looking for fresh eyes on this. Thanks. 
Just to answer which one you are supposed to use. You should use which ever type matches the data you plan to store. If you are storing a floating point number use a double, etc. If your not sure what your options are, or what each type can handle or be used for, msdn has some great info on it. Visual Basic data types: http://msdn.microsoft.com/en-us/library/47zceaw7(v=vs.80).aspx
Yup, you're going to have to store that yourself somewhere. I'm not aware of any system counters accessible that you can get that from.
This works: Protected Function invoiceNumber(ByVal code As String) As String Dim order As String = ddlBudgetCode.SelectedValue Dim dt = CType(Session("dt"), DataTable) Dim i As Integer = 0 Dim c As Integer = 0 'c for count For i = 0 To Gridview1.Rows.Count - 1 Dim row = Left(Gridview1.Rows(i).Cells(4).Text, 3) If ddlBudgetCode.SelectedValue = row Then c = c + 1 Else Label1.Text = "not taco" End If Next If c &lt; 10 Then invoiceNumber = order + "-0" + c.ToString 'adds a leading zero if less than 10 Else invoiceNumber = order + "-" + c.ToString End If End Function
**Question 1:** Absolutely there is. I'm guessing you meant checkbox, but accidentally switched to textbox halfway through the post. Anyway, when working with a forms app, every form has a collection of controls, which can be referenced with Me.Controls. This is simply a collection of objects of type Control, which is the base type that all controls inherit from. So it'll have labels, textboxes, buttons, DataGridViews -- any control that's on your form -- in it. So you can iterate through it and set the .Text property of the controls, but you have to determine the type of each control so you only operate on the type you want (Checkboxes in this case). There's numerous ways to do this, the TypeOf operator being one. So, you could write a loop like this in your form load function: Dim iWeek As Integer = 1 For Each c As Control In Me.Controls If TypeOf c Is CheckBox Then c.Text = "Week #" &amp; iWeek.ToString iWeek += 1 End If Next This works. However, I'm a BIG fuckin fan of Linq, so naturally I wrote up a solution using it, which reduces it by a couple lines, and removes one level of indentation: Dim iWeek as Integer = 0 Dim aChkBxs As Control() = (From c As Control In Me.Controls Where TypeOf c Is CheckBox Select c).ToArray For Each c as Control In aChkBxs c.Text = "Week #" &amp; iWeek.ToString Next **Question 2** Absolutely, with even less code (actually, technically, it's more code depending on how many boxes you have, but you make VS do the repetitive stuff here). The trick to this is to create a single Sub to act as the event handler (Handles) for the CheckedChanged event for every checkbox. In this Sub, you'll cast the 'sender' object parameter to a CheckBox and set its .Enabled property to the Not (opposite) of its .Checked property. The code is actually really simple: DirectCast(sender, CheckBox).Enabled = Not DirectCast(sender, CheckBox).Checked Ok, so, knowing the above, you just doubleclick on one of the textboxes to have VS auto-generate the Sub declaration for you, and paste that line in. Now you go back to your form and click &amp; drag a selection box (you know, left-click some empty part of the form, drag to select whatever controls end up in the box you drag out) and select every CheckBox on the form. Now you go over to your Properties window, click the Events button (the lightning bolt), and click in the box next to CheckedChanged. A dropdown button will appear ... click that and select the *_CheckedChanged Sub that you just made. This will apply that Sub as the event handler for that event for every selected control. The code ends up looking like this: Private Sub CheckBox3_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox3.CheckedChanged, CheckBox1.CheckedChanged, CheckBox2.CheckedChanged, CheckBox5.CheckedChanged, CheckBox4.CheckedChanged DirectCast(sender, CheckBox).Enabled = Not DirectCast(sender, CheckBox).Checked End Sub
Wow I had no idea thanks so much! Although when I added this code: Dim iWeek As Integer = 1 For Each c As Control In Me.Controls If TypeOf c Is CheckBox Then c.Text = "Week #" &amp; iWeek.ToString iWeek += 1 End If Next It worked like it should, but the corresponding numbers and checkboxes were backwards (checkbox52 was labeled "Week 1") So I changed it so it went the other way Dim iWeek As Integer = 52 For Each c As Control In Me.Controls If TypeOf c Is CheckBox Then c.Text = "Week #" &amp; iWeek.ToString iWeek -= 1 End If Next Thanks again!
This is what I love about programming, the fact that no matter the experience or skill level of 2 people, they can still learn from each other. I never would have thought of decrementing the counter, I would have reordered the checkboxes on the form. Your way is much simpler. Beware of habits and ruts ...
can you not just do something simple like use a counter and add 1 to it everytime you "push a button" ? and then use something like a msgbox ? or you could write that data to a file and retrieve it on formload?
By "This Session" are you meaning everytime the button is clicked during the current run of the program? If so, you could either increment a global variable that has scope throughout the class so as not to reset with each start of the routine or you could increment a Static variable that you increment at each start of the routine. 
I have access to Microsoft Windows Phone SDK 8.0. Does that work?
I did a lot more research on this... turns out embedded windows is still not supported by 2012 and will not be until later this year when a newer version of .Net CF (3.9) and a new embedded OS comes out. looks like I am stuck using VS 2005 until then.
Oh, well that sucks.
What version of embedded windows do you have?
by session, i mean the time the program is opened to the time the program is closed
Mainly used for? Hard to say, you can do just about anything in it. It originally was business applications. I still use it because a major accounting package is built on it. They are shifting towards .NET, however.
I thought .NET was the first generation of visual basic. Or are they pushing out a new .NET form of VB? 
Ohhh, no.... nononono. .NET is Microsoft's bastardization of Java, when ordered to cease using the term "Java", they renamed it "J#" then altered it a bit to "C#" and a further syntax tweak leaning towards basic and labelled VB.NET. All the pseudo languages under the .NET umbrella can be decompiled into other languages no problem.
&gt; .NET is Microsoft's bastardization of Java False, .NET is a [software framework](http://en.wikipedia.org/wiki/Software_framework) developed by Microsoft to replace the aging COM system. &gt;when ordered to cease using the term "Java", they renamed it "J#" then altered it a bit to "C#" It's true that Sun had licensed Java to MS, and then filed a lawsuit against them when they felt MS was bastardizing it. I don't recall for certain whether MS morphed their Java implementation into C#, or if C# was a separate project designed to modernize C++, so I won't refute anything else with this part. &gt;and a further syntax tweak leaning towards basic and labelled VB.NET Patently false. VB.NET is the evolution of the VB language, which was first released in 1991. It is not a syntactic tweak from C#, though once the major syntactic differences are overlooked the 2 languages are quite similar to write in. &gt;All the pseudo languages under the .NET umbrella can be decompiled into other languages no problem. I'm not even sure what you mean by that -- languages don't decompile, assemblies decompile. What I do know is that all the .NET languages compile to the same CIL ([Common Intermediate Language](http://en.wikipedia.org/wiki/Common_Intermediate_Language)). 
My first though would be, "Did I manually make any changes inside the InitializeComponent method?" and then whether I did or not (purposely) I would open up some of my source files in another editor and look for any obvious syntax errors and if I could revert the changed code back to it's original state. Failing that I would possibly open a new project and import in all my old source files and try to rebuild from that. That's what just comes to the top of my head. Someone else may have a better solution.
Go to your solution explorer and double click your project to bring up the properties window, then go to the settings tab. In there you can create variables. So if you want to create a variable to see how many times the program was run do this: in settings create variable named numRuns, type integer, scope user, value 1. The scope has to be user because application scope is read only. Add this to your form.load event: My.Settings.numRuns += 1 My.Settings.Save() MessageBox.Show(String.Format("This program ran {0} times", My.Settings.numRuns.ToString)) edit --- My bad, I think I misunderstood what you wanted. If you want to pass around the number of clicks, you should make a function with a static variable in it to keep track, something like this: Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click addClick() End Sub Private Function addClick() Static clicks As Integer clicks += 1 Return clicks End Function Private Sub Form1_FormClosing(ByVal sender As Object, ByVal e As System.Windows.Forms.FormClosingEventArgs) Handles Me.FormClosing MessageBox.Show(String.Format("The button was clicked {0} times", (addClick() - 1).ToString)) End Sub
Please post the relevant code and I will try to help you.
Just to add to what was already said. Variables are fundamental building blocks of coding. You will need to understand them fully.
As long as you mean VB.net, and not the old VB, then its used everywhere that you have a windows platform. From desktop applications to web design backends. Its a very good intro language before learning C# and you can use the older version for making Android programs. (VB for Android). All in all a very good feature rich language. 
I can also list as many variables as I want, yes? When I was working in visual basic I needed to do "x &lt; 50" for example. But when I put x, intellisense kept putting XAttribute. If I just put x it would be underlined. But I read somewhere that I cannot put "Dim x As Integer" because x is too vague or something. So how would I work around that?
Actually it was right-click send to back.
instr only works for strings. you're trying to use it to search an array. you could write your hard coded array as a string and it would work. dim arrayString as string. arrayString = (KCH1, KCH2, KCH3, MM01, MM02, ZM30, ZM80, ZMIM, ZMIMRP, ZMMR, ZMPF, _ ZMTC, ZQIT, MM03, MM04, ZMR_MAG, MM12, MM13, MM06, MM16, ZMRO, ZS22, MASS, MM17, _ OMW1, ZM29, ZM32, ZM34, ZM35, ZM36, ZM37, ZM44, ZM46, ZM47, ZM48, ZMAVCT, ZMOPEN, _ ZMTS, ZMUN, CG03, ZM88)" you can also look here http://www.mrexcel.com/forum/excel-questions/63296-visual-basic-applications-function-search-array.html they have a fairly clean way of looking for an item in an array. If InStr(1, arrayString, tCodeArray(tCode)) Then
That makes sense, can't use a string search to find something in an array ... anways solution time! Dim tCodesMIM as String tCodesMIM = "KCH1, KCH2, KCH3, MM01, MM02, ZM30, ZM80, ZMIM, ZMIMRP, ZMMR, ZMPF, ZMTC, ZQIT, " &amp; _ "MM03, MM04, ZMR_MAG, MM12, MM13, MM06, MM16, ZMRO, ZS22, MASS, MM17, OMW1, ZM29, ZM32, " &amp; _ "ZM34, ZM35, ZM36, ZM37, ZM44, ZM46, ZM47, ZM48, ZMAVCT, ZMOPEN, ZMTS, ZMUN, CG03, ZM88" . . . Select Case Row Case 0 For tCode = 0 To UBound(tCodeArray) If InStr(1, tCodesMIM, tCodeArray(tCode)) Then Worksheets("WRKSHEET").Cells(2, 2) = "MIM tCode, refer to Roles in ZMIM tab" Worksheets("WRKSHEET").Cells(2, 1).Interior.ColorIndex = 27 Worksheets("WRKSHEET").Cells(2, 2).Interior.ColorIndex = 27 Worksheets("WRKSHEET").Cells(2, 3).Interior.ColorIndex = 27 Else Worksheets("Role Tcodes").Range("A:C").SpecialCells(xlCellTypeVisible).Copy _ Worksheets("WRKSHEET").Range("A:C") End If Next tCode Case 1 Had to make one minor adjustment to the definition and make sure I didn't look beyond my array size, but it is now working. Thanks a lot!
You could always trap the error with OnError Resume Next. You'll want to make sure there isn't actually an issue though.
I saw this same error produced with the filename with two periods in it like form1.backup.vb, renaming the file fixed it. 
Not sure why that's happening, but you might be better off using a timer control and manually checking the up/down state of each key.
You'd set a timer to go off every millisecond, and in its Tick event, you test each key individually. Take a look at [the GetAsyncKeyState API call](http://pinvoke.net/default.aspx/user32.GetAsyncKeyState), it'll return -32767 if your selected key is down. You can get a list of the key constants [here](http://tinyurl.com/b7hbyws). The benefit of this method is that your program will be able to process keypresses even if your program does not have the focus.
does anything go between the parentheses in addClick()? 
Nope, this function doesn't require parameters.
Thank you :)
thanks a lot man, that really helped
I like to come to this page about every couple of months. Each time I find something new to implement.
[Visual studio express](http://www.microsoft.com/visualstudio/eng/downloads#d-express-windows-desktop) is free.
[Visual Studio Express](http://www.microsoft.com/visualstudio/eng/products/visual-studio-express-products) is free from MS. VSE 2012 Desktop includes C# and VB. VSE 2010 has separate downloads for each language.
if you have any trouble with ANYTHING I will help you out via pm / skype just PM me if you want any help with VB, setting up VS or anything. I'm a programmer and would love to help new people out :)
Not exactly social services, but I wrote a library catalogue/checkout system for the church i grew up in when i was about 13 using VB3 and its access DB funtions
Don't forget sql express too. And TFS is free for upto 5 users (it's cloud based, works fine).
Automatically detect? Not to my knowledge. You'll probably have to use an If statement on whatever property of the dialog box that gives you the filename. The Path.Extension (or GetExtension, can't remember for sure right now) will tell you the file extension. I'll be able to give a better answer in about 11 hours. 
OK. I meant automatically like when they push OK on the dialog.
you can restrict the file format options available in the dialog
Yeah, no, not as far as I know -- I've never tried to so that though, so I do reserve the right to be completely wrong :)
kyle7273, Here's an example from one of my programs that I am working on. The mnuFileOpen sub set the Filename of the dialog from a form-wide variable called Filename. I then sets the text Filter for the dialog and set the 5th item (All Supported) as the FilterIndex to use. I then set the default extension, which is not really needed in the opendialog. The InitialDirectory of the dialog is set from a global variable called SysOpenPath. I store this in the the My.Settings so the users default open directory is saved. However, this SysOpenPath string may be empty, so I check it on the next line. If it is empty then use the MyDocuments folder. You could point to any of the special directories, here. The If statement displays the OpenDialog and only goes to reading the data file if the result is OK. I separate the reading the data file to a separate sub so that I can call it from the command line during an application startup. The ReadDataFile sub checks to see if the extension is valid. You can do the same thing for a SaveDialog. In that case the extension will be added if the user does not input one. The DefaultExtension does not use the period in front of it, but the GetExtension function returns it. Obviously, I have not done all of the exception checking at this stage, and I need to come back to this. But, it stubs in what you need. Hope this helps. T. Public Sub mnuFileOpen_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mnuFileOpen.Click Try With OpenFileDialog1 .FileName = Filename .Filter = "Rose files (*.ros)|*.ros|Excel files (*.xls?)|*.xls?|Comma separated (*.csv)|*.csv|ASCII text (*.txt)|*.txt|All supported|*.ros;*.xls?;*.csv;*.txt|All file(*.*)|*.*" .FilterIndex = 5 .DefaultExt = "ros" .InitialDirectory = SysOpenPath If String.IsNullOrEmpty(.InitialDirectory) Then .InitialDirectory = My.Computer.FileSystem.SpecialDirectories.MyDocuments If .ShowDialog = Windows.Forms.DialogResult.OK Then Call ReadDataFile(.FileName) SysOpenPath = Path.GetDirectoryName(.FileName) End If End With Catch ex As Exception MessageBox.Show(ex.Message.ToString) Finally End Try End Sub Public Sub ReadDataFile(fil As String) Select Case Path.GetExtension(fil).ToUpper Case ".ROS", ".TXT" FpSpread1.ActiveSheet.LoadTextFile(fil, FarPoint.Win.Spread.TextFileFlags.Unformatted) Case ".XLS", ".XLSX" FpSpread1.OpenExcel(fil) Case ".CSV" FpSpread1.ActiveSheet.LoadTextFile(fil, FarPoint.Win.Spread.TextFileFlags.Unformatted, FarPoint.Win.Spread.Model.IncludeHeaders.None, Chr(10), ",", "") Case Else MessageBox.Show("You have selected a file format that is not supported by Rose. Please select a Rose, Excel, Comm-separated, or ASCII test file.", "File Open Error - Unsupported File Format", MessageBoxButtons.OK, MessageBoxIcon.Error) Exit Sub End Select Call SetSpreadsheet() Me.Filename = fil Me.Text = fil End Sub 
honestly then the easiest way to deal with it then is to do this dim FileParts() as string=OpenFileDialog.Filename.Split(".") dim Extension as string=Fileparts(FileParts.length-1) this will return txt, or rtf as a string and you can deal with it however you want.
Not sure if I follow you, but have you clicked on Window, windows... and see if it is there? What happens when you run it?
How are you inputting the values, and are you clicking on a button to do the calculation? Got any code to show?
When I run it it works perfectly fine. I found it's not code view. I'm new to this and mistook the views, though I don't know which this is. Screenshot [here](http://i.imgur.com/IcNWbUj.png) Clicking window -&gt; windows shows the only window I have up, which is the one shown above. I can't change it to code or design view.
So over in solution explorer,above where it says carrepaircalc, click the 2nd button from the left, when you hover it says show all files... does that help?
so 1 textbox for two values? When you declare your integers with DIM, you could try the STATIC keyword instead of DIM. Static keeps the previous value...
Without seeing your code, I'm forced to make a few assumptions about your program, based on the most frequent causes of this sort of thing. The most common cause of this is that you have your total variables scoped locally to the method in which the calculations occur, thus once the calculations complete and program execution exits that method, the total variables go out of scope and are lost. I'm going to guess your code looks something like this: Private Sub btnCalculate_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCalculate.Click Dim greenTotal, redTotal, allTotal As Integer greenTotal += Integer.Parse(txtGreen.Text) redTotal += Integer.Parse(txtRed.Text) allTotal = greenTotal + redTotal 'Whatever else you need to do -- display totals, etc. End Sub If this is the case, there are 2 ways to fix this. One, as /u/verafast pointed out, would be to declare the variables as Static. Static greenTotal, redTotal As Integer The other is to declare the totals as global variables at the class level. Private greenTotal, redTotal As Integer Private Sub btnCalculate_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCalculate.Click Dim allTotal As Integer greenTotal += Integer.Parse(txtGreen.Text) redTotal += Integer.Parse(txtRed.Text) allTotal = greenTotal + redTotal 'Whatever else you need to do -- display totals, etc. End Sub Both of these fixes allow the values of those variables to persist for the entire duration of the program's execution.
thanks for the advice. Ill have to wait until tomorrow to try the new code to see if it works. I believe it will because i dont think i have the variable declared as a global one. 
This is vb2010 by the way, I forgot to add that. 
The last event to fire when a form is created is "FormShown". Have you tried calling your Runcode from there? ref: [Order of Form events](http://msdn.microsoft.com/en-us/library/86faxx0d.aspx)
Thanks. I looked at this after my Reddit posts. Shall post the results on Monday when I'm back focussing on that project:)
Something like this (I found the main part of this through google, but fixed it to move a rectangle around): Protected Overrides Function ProcessCmdKey(ByRef msg As Message, ByVal keyData As Keys) As Boolean Dim bHandled As Boolean Select Case keyData Case Keys.Up RectangleShape1.Top -= 5 bHandled = True Case Keys.Down RectangleShape1.Top += 5 bHandled = True Case Keys.Right RectangleShape1.Left += 5 bHandled = True Case Keys.Left RectangleShape1.Left -= 5 bHandled = True End Select Return bHandled End Function
Could you provide a link to where you found the info? I kind of understand it but some of it I don't. What is the "protected overrides" in front of the function do? Also what does the bHandled Boolean value do? And lastly what is the +=5? Is it a shortened version of moving its location value on an x or y axis?
I googled "vb2010 arrow key keycodes" and found [this page](http://social.msdn.microsoft.com/Forums/en/winforms/thread/ffeeea42-f6ba-420f-827e-74879fd29b26); the relevant post is the 2nd response. I believe it is overriding the built-in .NET method [Control.ProcessCmdKey](http://msdn.microsoft.com/en-us/library/system.windows.forms.control.processcmdkey.aspx). += 5 and -= 5 is just incrementing and decrementing the position of the rectangle by 5 (shorthand for x = x + 5 or x = x - 5).
Your idea didn't work on its own. I used a modified method to solve it... Add a timer control to the form. Set enabled = true and interval = 1 Private Sub formshown (ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Shown If Me.Visible = true then 'code here to update form controls End If Timer1.Start() End Sub Private Sub ontimertick (ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Timer1.Tick Runcode() End Sub Private Sub Runcode() Timer1.Stop() 'Connect to db 'Do stuff 'Disconnect Me.visible = false Main_form.visible = true End Sub Solved my problem anyway. Don and mf_sina suggest this here: http://bytes.com/topic/visual-basic-net/answers/387177-form-load-show-form-then-do-stuff Using timers: http://social.msdn.microsoft.com/forums/en-US/vbgeneral/thread/be43b08b-9ab9-4873-bb99-804092ffee83
Have you tried using a Typed Dataset? Just create a new dataset file in your solution explorer and create the foreign key relationships between your tables and set the datasource of your gridview to a new instance of the typed dataset which you have filled with data. Just another route that might be cleaner or useless to you but I figured it was worth stating. 
The average function should omit nulls, so you do a conditional/function on the value to return null when you don't want it evaluated Edit: eg Avg(If([earned]&gt;35000,[earned],null))
EDIT: Sorry, I assumed your data was all in the datagridview already (I misread it the first time). Anyway, what's below would help you grab the data in a selected row and use it on a form. If the data isn't in the datagridview already you'd have to at least have the primary key in the datagridview then load that like below and use it to do a SQL query to get the rest. Dim myrow As DataGridViewRow = DataGridView1.SelectedRows(0) TextBox1.Text = myrow.Cells("Name").Value TextBox2.Text = myrow.Cells("Address").Value Textbox3.Text = myrow.Cells("Phone").Value . . . etc You can use the same idea to handle multiple rows in the selection For Each myRow as DataGridViewRow in Datagridview1.SelectedRows ... Do whatever with the myRow.cells("ColumnName").Value data here Next 
What's going in the panels?
and I have tried finding this information in my textbook to now avail. google search has also failed me. ALSO: [VB2010] 
I don't have any idea what you're asking. First, constants only have a single value, not a range. Also, how does 1 to 199 equate to .5? It's late but we really need more info from you. Are you possibly referring to an array?
 Select Case myInt Case 1 To 199 Const ConstName As Double = .5 Case 200 To 399 Const ConstName As Double = .55 End Select If that isn't it, I have no idea what you are talking about.
what are you trying to do or can you give us the problem word for word? I bet I can help you but I have no idea what you are looking for and googling constants with ranges in vb.net turned up the same result as my brain did
okay, i have to program an application that calculates the workers wage. their wage is based on how many pieces they make. if they make an amount between 1-199 they get paid .50 per piece. from 200-399 they get paid .55 per piece. from 400-599 they get paid .60 per piece. and any number of pieces above 600 get .65 per piece.... i am using the case structure right now to do it, and it worked... but once i put in the "try" to catch exceptions, it all fucked up and now won't calculate.
[this is my programming for the calculate button so far] Private Sub CalculateButton_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CalculateButton.Click 'Calculate and display the current amounts and add to totals. Dim PieceInteger As Integer Dim TotalDecimal, StepDecimal As Decimal 'Find the price. Select Case StepDecimal Case 1 To 199 Const Fifty_Decimal As Double = 0.5 Case 200 To 399 Const FIFTYFIVE_DECIMAL As Double = 0.55 Case 400 To 599 Const SIXTY_DECIMAL As Double = 0.6 Case Is &gt;= 600 Const SIXTYFIVE_DECIMAL As Double = 0.65 End Select 'Calculate price for total. Try PieceInteger = Integer.Parse(NumberofPieceTextBox.Text) NumberofPieceTextBox.Text = PieceInteger.ToString("N") TotalDecimal = PieceInteger * StepDecimal TotalPayTextBox.Text = TotalDecimal.ToString("C") Catch QuantityException As FormatException MessageBox.Show("Quantity must be numeric.", "Data Entry Error", MessageBoxButtons.OK, MessageBoxIcon.Information) With NumberofPieceTextBox .Focus() .SelectAll() End With End Try 'Allow clear after an order has begun. ClearButton.Enabled = True ClearAllButton.Enabled = True End Sub
i posted my code and problem. check it out.
what about using integer.tryparse instead of integer.parse and handling the error checking that way and working it slightly different if the try catch is the issue and you strapped for time. Also try doing catch ex as exception instead of specifying the exception, maybe you are trying to catch the wrong exception. AAAAAAAAAAND just for fun after you get everything working and have free time try this out as a class level variable dim _DecimalVal as double private property DecimalVal as double Get select case _DecimalVal Case 1 To 199 return 0.5 Case 200 To 399 return 0.55 Case 400 To 599 return 0.6 Case Is &gt;= 600 return 0.65 End Select End Get Set(byval value as double) _DecimalVal = value End Set End Property
You can open up the solution file in a text editor and change the paths there. You could also make it worse so be careful.
Thanks for the reply. Is it possible to make the file path relative instead of absolute?
AFAIK the case statement can only check one conditional, and you need to check the property .checked on the radio button, not the button object itself.
Splendid... thanks friend! It's strange to me that Visual Studio does not support changing the file path of reference files...
Like Private_Sub said, Select Case can only test one conditional at a time. Normally if you're wanting to test more than one conditional, I'd use an If/Else If/Else construct. However, I think what you also need in this case is a For Each loop. To make this easier, set the Tag property of your Size RadioButtons to "Size" and the Tag of the Color RadioButtons to "Color", then try the following code: Dim ColorFound As Boolean = False Dim SizeFound As Boolean = False For Each cntl As Control In GroupBoxSize.Controls If TypeOf cntl Is RadioButton Then Dim rdoButton As RadioButton = CType(cntl, RadioButton) If rdoButton.Checked Then If CStr(rdoButton.Tag) = "Color" Then ColorFound = True If CStr(rdoButton.Tag) = "Size" Then SizeFound = True End If End If Next If ColorFound And SizeFound Then ' Both selected. ElseIf ColorFound Then ' Only Color selected. ElseIf SizeFound Then ' Only Size selected. Else ' Neither selected. End If Does that make sense for you? I can go into more detail if I knew more about your project, but I *think* that answers your question.
Because I'm trying to be clever and lazy, I guess. I'd have to check If any of the 4 radio buttons in the first group box was checked AND if any of the 5 radio buttons in the second group box was checked. I think that means 20 if statements. I just *feel* like there has to be a way to just check the radio elements of a group box and see if anyone of them are checked.
That seems to be the case, unfortunately. Switching the case statements to ifs isn't an issue though, as long as I can check if one of the radio buttons is checked per group box.
First panel would be buttons. Second would just be a bunch of texts. 
What do you mean?
Ok so I created a UniqueConstraint relationship between the tables in the dataset, but the code to read the child table still loops too many times. This is what I have now: ds = New DataSet ds.ReadXml(pathToXML) dt2.Columns.Add("line_Text") Dim custOrderRel As DataRelation = ds.Relations.Add("lineItems", _ ds.Tables(0).Columns("test_Id"), _ ds.Tables(2).Columns("lines_Id")) Dim testDR As DataRow Dim lineDR As DataRow For Each testDR In ds.Tables(0).Rows 'Label1.Text += testDR(0) + "&lt;br /&gt;" For Each lineDR In testDR.GetChildRows("lineItems") 'If lineDR.Item(1) = testDR.Item(2) Then Label1.Text += lineDR(0) + "&lt;br /&gt;" dt2.ImportRow(lineDR) 'End If Next Next And the rest of the code is all [here](https://github.com/mahbam42/invoiceApp/blob/dataTableKeys/TEST_dataTable-key/) on github. Thank you for all of your help! 
You have the correct idea so far. What CType does is it recasts one object as another object. This is used in cases where you get something your object as, well, an Object and you need to repackage it as the correct type. What you're actually doing, though, is casting a less specific class to a more specific class. This is going to take some explaining, so let me get a bit verbose and wordy here. In the example I gave you, you're going through a collection of Control objects. (GroupBoxSize.Controls) All of your controls on a form inherit from the Control class, but we're taking them out of this collection as the Control type, so we only have the Control properties and methods. We don't have the specific properties and methods of a RadioButton while the object is a Control, so we can't get to the Checked property. It's kind of like looking at something through a filter. With the Control filter, we can look at our RadioButton at it matches up... but the filter hides the properties it doesn't know about. They're still there, but we need to change the filter we look at the object through. To fix this, we declare a new variable, rdoButton, of type RadioButton and then we use CType to Change the Type (hence, CType) of the cntl variable into a RadioButton. Because RadioButton inherits from the Control class, we can do this conversion successfully. Continuing my analogy from the last paragraph, we switched our filter from the Control filter to the RadioButton filter, and now we can see all those properties that weren't visible while we looked through the Control filter. Okay, now that that's out of the way, if you have two group boxes, one for Color and one for Size, then this gets easier. We can skip the Tag property stuff because we know that RadioButtons in GroupBoxColor are colors and the ones in GroupBoxSize are sizes. You're correct, you'll be doing two loops now: For Each cntl As Control In GroupBoxSize.Controls If TypeOf cntl Is RadioButton Then Dim rdoButton As RadioButton = CType(cntl, RadioButton) If rdoButton.Checked Then SizeFound = True End If Next For Each cntl As Control In GroupBoxColor.Controls If TypeOf cntl Is RadioButton Then Dim rdoButton As RadioButton = CType(cntl, RadioButton) If rdoButton.Checked Then ColorFound = True End If Next And thus you edge closer to your answer. :)
Both shown at the same time. I want each of them to have their own scroll bars. The first panel is a list of buttons, while the second one is just a bunch of text.
Wow, thanks again. That was a very clear way of explaining things. I've been programming in Java for 5 years, and using that knowledge plus what you said has really made things clear and has given me some new tools to use later. I see. I was halfway through implementing a nested For Each. I think I had gotten it working too, only I just now realized (right before I saw your message) that I had my code at the bottom messed up. If Not SizeFound And Not ColorFound Then MessageBox.Show("Neither is selected") ElseIf Not ColorFound Then MessageBox.Show("Color is not Selected") ElseIf Not SizeFound Then MessageBox.Show("Size is not Selected") Else MessageBox.Show("Both are selected") End If I had it originally as If Not SizeFound And Not *SizeFound* Then. I think I solved the issue a little while ago haha. But thanks, I think thi8s is what I needed. Real quick, I asked around to other places and I got this answer that works completely in a lot less lines. Dim rb1 As RadioButton = GroupBoxColor.Controls.OfType(Of RadioButton).FirstOrDefault(Function(rb) rb.Checked) Dim rb2 As RadioButton = GroupBoxSize.Controls.OfType(Of RadioButton).FirstOrDefault(Function(rb) rb.Checked) MsgBox(String.Format("{0} + {1} are selected", If(rb1 IsNot Nothing, rb1.Name, "none"), If(rb2 IsNot Nothing, rb2.Name, "none"))) What are your thoughts on this?
I go through sweetwater, but you really shouldn't need one, any computer with a soundcard has one built in. 
I'm sorry but now I'm quite confused. I thought I needed a part of code translating the series of numbers into signals which then can be fed to the speakers :s
Ah! I hadn't looked closely at that. Very nice, that's newer functions that came through in .NET 3.5 for VB that I should pay a LOT more attention to. However, having looked them up, I see what's going on. Lemme break it down for you. GroupBoxColor.Controls.OfType(Of RadioButton): Go through the controls inside of GroupBoxColor and return an Enumerator (an object that steps through a collection one at a time) that only has objects Of Type "RadioButton". So, in other words, "go into GroupBoxColor and get me all of the controls, but only the ones that are RadioButton controls." .FirstOrDefault(Function(rb) rb.Checked): This is a little trickier to explain but is real awesome. FirstOrDefault says "go through the collection and find me the first object in the collection, and if you don't return the Default value of that type." (For reference, the default value of RadioButton, or any class, is Nothing. Hence, the test for "rb1 IsNot Nothing" to see if they got a value back.) We have the overload where we pass in what's called an Anonymous Function, in this case "Function (rb) rb.Checked". This changes the description to "go through the collection and find me the first object in the collection *that returns True when run through the Function*, and if you don't return the Default value of that type." Next step, to make this easier for you, the Anonymous Function "Function (rb) rb.Checked" translates to the following: Function AnonymousFunction(rb As RadioButton) As Boolean Return rb.Checked End Function So, the end result is that we go through all of the Controls inside of GroupBoxColor (and then GroupBoxSize), find all of the Controls that at RadioButtons, then go through every one of the RadioButtons and find out if any of them have Checked = True. Set the value of rb1 (and then rb2) to equal the first RadioButton we find that's checked, or set it to Nothing if none are checked. It's really interesting how much code we compressed cleanly into a single line there, huh? :)
When I need to pass files in, I simply go to the project folder and pass in ALL the files and folders there. Never a problem.
Your sound card is the DAC, so you need to send your (digital) waveforms to the sound card. This is handled by windows' HAL -- WinAPI, or possibly various ActiveX controls
I'm assuming you've created this as a query in access? I forget exactly off hand, but add MDAC or DAO to your project references - google dao and vb You can execute the query and loop through the resulting rowset(s) something like DASRECordset res rs.Open(stuff) while not rs.EOF do somethign with rs.Field("filedname") wend 
You need a piece of code that sends a signal to the sound card that the sound card can convert to an analogue signal. The DAC in the sound card will do most of the work. A digital-to-analog converter is hardware.
http://net.tutsplus.com/tutorials/php/understanding-hash-functions-and-keeping-passwords-safe/ 
Prop doesn't give get and set, nor private variables. But I found that you can type get and then return after it to get it
Are you just trying to mask the password on the form? If so, set AdminPassword.PasswordChar = "*" to replace the characters typed in with *. http://msdn.microsoft.com/en-us/library/system.windows.forms.textbox.passwordchar.aspx
Image: http://i.imgur.com/40tv9ST.png I typed prop and pressed Tab twice...
Darn thats what I have been expecting as well. its just not there on my machine. it only shows a short version of "property Name() as string" for example. What are you using? I am on VS 2012 with resharper. 
This is hugely helpful and much easier than creating and reading registry keys. Thanks! Are there any downsides to using application settings over custom registry entries?
Visual Basic .NET allows building forms using either the old standard forms (winforms) or a new system called Windows Presentation Foundation (WPF). I am guessing you might be using VB6. if you are using VBA (say in Access) there is a control called a subform which allows one form to be displayed inside another (with scrollbars as needed) 
VS 2012 Ultimate (Unpirated). Maybe you disabled a setting. It's worth checking out.
Give this a go buddy, I think this does what you were looking for: https://dl.dropbox.com/u/21140406/WebApplication1.zip
Dude that is awesome and totally works! Thank you!! 
Thanks I also have have VS 2012 ultimate, and on both my machines win 8 I get the same issue. maybe Resharper is playing up with it?
Write a simple function to move ascii values over a few positions, or other custom obfuscations like function e(x,d) for i = 1 to len(x) o=o &amp; chr((Asc(mid(x,i,1))+d) and 255) next e=o end function so you'd just find the encoded text by e("password",123), then use that result like: If AdminPassword.Text = e("resultfromabove",-123) Then
Perfect! Exactly what I wanted, I think. Cheers! 
Welcome. I hope you can understand/follow what that simple bit of code is doing though...
Sweet, I got it! Sub Main() Dim dblSeries() As Double = {1, 2, 3, 4, 5, 6, 7, 8, 9} Call SquareThem(dblSeries) For intCount = 8 To 0 Step -1 Console.Write(dblSeries(intCount) &amp; ", ") Next Console.ReadLine() End Sub Sub SquareThem(ByRef dblSquared() As Double) For intCount = 8 To 0 Step -1 dblSquared(intCount) = (dblSquared(intCount) ^ 2) Next End Sub [Console](http://i.imgur.com/pUHYaUc.png) Now I feel dumb for not being able to figure this out. Anyways, thanks a bunch!
I don't understand why you would not use a Function for this. The purpose of a Function is to return a value, object, etc.
Good enough for me.
Try using the "on change" event on the drop down to query the db for the other text box values where the part num equals the curent value in the drop down. I'd probably try to do on the server side so u don't have a bunch of in-line sql in you application code
I use vb at work. I'm a controls engineer for an automation company and program PLCs. We use it to export csv files out of rslogix, and to simulate I/O in a computer generated environment before we take programs out on the floor. It's a very handy language to know, and can sometimes make your job a lot easier.
Thank you. Would love to see more of these posts in this subreddit instead of just students looking for homework help.
not saving your work...this is the real lesson from this module. 
Well there's a couple of ways to do it. The most antiquated way, but most likely familiar to you is using ADO.NET. http://msdn.microsoft.com/en-us/library/dw70f090.aspx Look at the section titled "SqlClient". Substitute the "SELECT" statement out for a similar "INSERT" statement, and add parameters the same way they are doing it, and instead of "ExecuteReader", I think you would use "ExecuteNonQuery" or "ExecuteQuery" -- you will need to look into the differences there. The more advanced ways use LINQ and the EntityFramework, things that are beyond the scope of what you need at this moment. They are the "modern" ways of doing things, but what I referenced above will make you the most productive the soonest.
I have a dozen or more vb sites bookmarked, but they post very little. Visual Studio Magazine started as a basic magazine a decade ago. Most of their recent content is C#. Maybe we should start our own content by weekly picking a topic to post about.
I've found that ADO.NET seems like it might have "extra" stuff but it's not. In pseudo code it would be something like using conn as new sqlconnection(&lt;connectionstringhere&gt;) conn.open using comm as new sqlcommand("INSERT INTO table values ('blah')",conn) comm.executenonquery() end using end using Don't forget that for this you'll need to add a reference to System.Data and then do an Imports System.Data.SQLClient I did "using" because then .net manually disposes the connection and command objects. This is just about as easy as it gets and similar to the old ADO in the legacy. Worst case (AND I HIGHLY ADVISE AGAINST IT) is that you could add a reference to ActiveX Data Objects version &lt;whatever you need&gt; in order to use old ADO in your project. 
Thanks! It looks very clean.
I personally find [Visual Basic Fundamentals: Development for Absolute Beginners](http://channel9.msdn.com/Series/Visual-Basic-Development-for-Absolute-Beginners) on Channel9 to be a great starting point for beginners.
You can also use the .AddDays method DateToday = DateTime.Now.Date DateinaWeek = DateToday.AddDays(7) Using -7 would move backwards
The '&amp;' should be 'And'
I see, well I don't really need to go through all the records. My goal was to just choose an item from the drop down box and when it is chosen it would populate all the other items in the other textboxes. 
Lots of problems here. Besides what tthomps and rCubed111 described you are formatting your if blocks incorrectly. if (numSelection = 1 And daySelection= "H") then lstPrice.Items.Add("1. Rug Cleaner $16.00) ElseIf... Then 'repeat for all conditions Else 'No conditions are met End If 
Maybe this will help? lstTest.DataSource = DT lstTest.DisplayMember = "FullName" lstTest.ValueMember = "AdminID" lstTest.DataBindings.Add("SelectedValue", dt, "AdminID") No need for the databind at the end with this,AFAIK.
Getting 'DisplayMember' is not a member of 'system.web.ui.webcontrols.listbox'. ValueMember is also not recognised. I'm working with VB.Net btw, as as well as ADO.Net. Not sure if those are important, i'm quite new to the programming world.
John is greater? Or am I missing something?
Sorry, I thought you wanted to do it to a combobox. In any case you are using a webcontrol there, is that intentional? it should be system.windows.forms.listbox if not and you just need to bind it like this: lstTest.DataSource = dt lstTest.DisplayMember = "FullName" I am not sure how to do it with the webcontrols, however, I don't have a lot of experience with vb for the net yet.
That's what i thought too?!?
The two teams that were in the Super Bowl this year, the Baltimore Ravens and the San Francisco 49ers, were coached by two brothers, John and Jim Harbaugh, respectively. There was quite a bit of media coverage on the brothers and their family, much of which insinuated that the winning team's coach would be the better coach, favorite child of their parents, brother with the bragging rights, etc. John's team, the Ravens, won the game, presumably because his first name evaluates as greater than his brothers in String form.
Easy... which comes first: Aaron or Zackery? Look in a phone book (If you have one available). Why does Aaron appear first? Because it comes before Z in the Alphabet. Open up Windows Explorer (or any folder explorer) and click the "Sort" arrow (if it's not automatically sorted). Why is Programs above Users? Even more relevant, is the fact that everything in computers is numeric at some point. 1's and 0's. Which is where you can get stuff sorted like: 1 10 2 20 21 Why? because alphabetically, ab comes before b. So 10 would come before 2.
I think its John is greater because of the string value
&lt;script type="text/vbscript"&gt; Option Explicit DIM Tax,TotalTax,Subtotal,GrandTotal,TotalDiscount,Over1000Discount,OrderLocation,OrderAmount,OnlineOrderDiscount,Discount,OnlineLargeDiscount,OnlineDiscount,OfflineDiscount,OfflineLargeDiscount,OfflineOrderDiscount Tax = .08 OnlineLargeDiscount = .10 OfflineLargeDiscount = .05 OnlineDiscount = .05 OfflineDiscount = 0 OrderLocation =Inputbox("Is order being purchased Online or Offline?") OrderAmount = inputbox("How much is order amount?") if OrderLocation = "Online" then if OrderAmount =&gt;1000 then Discount = OnlineDiscount + OnlineLargeDiscount else Discount = OnlineDiscount End If else if OrderAmount =&gt;1000 then Discount = OfflineLargeDiscount else Discount = OfflineDiscount end if End If OnlineOrderDiscount = OrderAmount * Discount Over1000Discount = OrderAmount * Discount TotalDiscount = OnlineOrderDiscount + Over1000Discount Subtotal = OrderAmount - TotalDiscount TotalTax = OrderAmount*Tax GrandTotal = Subtotal + TotalTax document.write "&lt;br&gt;The Order Amount of $" &amp;OrderAmount document.write " was placed " &amp;OrderLocation document.write "&lt;br&gt;The Online Order Discount: $" &amp;OnlineOrderDiscount document.write "&lt;br&gt;Over 1000 Discount: $" &amp;Over1000Discount document.write "&lt;br&gt;Total Discount: $" &amp;TotalDiscount document.write "&lt;br&gt;Subtotal: $" &amp;Subtotal document.write "&lt;br&gt;Tax: $" &amp;TotalTax document.write "&lt;br&gt;Grand Total: $" &amp;GrandTotal &lt;/script&gt; 
We did something like this except it was for home loans. We displayed it in a multi line text box with a scroll bar. Do you think you could use a different variable for each step in the process? like declare something like Dim onlineover1000 as boolean, online as boolean Dim offlineover1000 as boolean, offline as boolean Dim total as currency Dim order as currency Private sub cmdfind_click() order = Val(txtOrder) If online = true and onlineover1000 = true then total = (order * .85) lbltotal = (total * .108) Elseif online = true and online over1000 = false then total = (order * .95) lbltotal = (total * .108) And so on for offline. You can on Form_Load have a message box appear asking about the order being online or not, then have another if test for if the order is &gt; 1000 to be more user friendly
We aren't even onto booleans yet. This is some simple shit, and I can't hardly figure it out. haha. He has a pretty strict way he wants it. I appreciate the help, but I will just have to email him! Thank you.
John is greater, I had to plug it in to VS to make sure though. I thought comparing strings didn't work, apparently I was taught wrong.
Dude, format that shit. Hit return twice after every line and insert 4 spaces before each line to turn it into "code" view.
thank you so much
DataGridView columns are sortable by the user when they click the heading of the column.
Instead of using a boolean you could do this. Dim onlineover1000 as integer Then in your code do this If online and order &gt; 1000 then Onlineover1000 = 1 Now test for the value being 1 where i had it testing a boolean. PS a boolean is just a true false statement. I still haven't learned them, i just found them when googling code, that's sadly how ive done my work in school. My teacher isnt very good at teaching beginners... Sorry if the format is bad im using my phone ;p
What the shit? That is taught?
Not sure if you mean the OpenFileDialog but if so you can set it with the .Filter property. Dim ofd as New OpenFileDialog ofd.Filter = "UPK files (*.upk)|*.upk|PCC files (*.pcc)|*.pcc" basically you give a description of the extension and then *.extension separating with the | character. The above example shows the two you specified.
Not exactly what i meant but i could use this as a backup thanks for that information The explorer form that i mentioned is in Visual Studio 2012 and its under: Project&gt;Add Windows Form &gt; Windows Form &gt; Explorer Form Any ideas on that? 
I actually just did something like this today. I'll try to explain it so that it's easy to follow but it wouldn't take a lot of code. My dgv has 4 columns and I want to print the first 10 rows. Drag a PrintDocument to your form and place this code in the PrintPage event. Private Sub PrintDocument1_PrintPage(sender As Object, e As Printing.PrintPageEventArgs) Handles PrintDocument1.PrintPage Dim myFont As New Font("Arial", 10) 'Set a font to be used Dim x() As Integer = {5, 275, 550, 770} 'Set up an array of column starting points Dim y As Integer = 20 'Starting point for rows 'Loop through the rows For itr As Integer = 0 To 9 'Rows to print (10 total) 'for each row, loop through the 4 columns For xItr As Integer = 0 To 3 'column index and element index of x value 'notice itr is the row index counter and xitr is the Cell index and used to get the value for the x array e.Graphics.DrawString(dgvComponents.Rows(itr).Cells(xItr).Value.ToString, myFont, Brushes.Black, x(xItr), y) Next 'increase the y location for the next line y += 12 Next End Sub To test this add a button and place the following inside the button's click event. This will save paper ;) Dim pv as New PrintPreviewDialog pv.Document = PrintDocument1 pv.ShowDialog Note you can set this to print the entire grid but you will have to handle each page with the e.HasMorePages property of the eventargs. 
probably as an assignment to understand sorting algorithms better.
invalid code?
I was streaming yesterday, I will start streaming again tomorrow morning. 10:00 AM MST.
use streamwriter/ streamreader ts way easier 1. Import system.IO (at the top) If File.Exists(fp) = False Then Dim Mywriter As New StreamWriter(fp) Mywriter.WriteLine(linestoputinthefile) Mywriter.Close() End If 
Well It's been a long time since I've coded in vb6 but here's roughly how I'd do it in vb.net. **Edit:** (Specifically VB2010) *Create an object to carry the data you need, in this case I'd made a structure with an integer for the score and a string for the player name or initials. *Add a public Sub to the form you want to display high scores in that takes a list of those high scores as a parameter. Do whatever you need to store/display those scores in that sub, and then call showdialog at the end of the sub. *In the code for the button/menu option to bring up the highscores Dim a new instances of the high scores form and call the Sub you just created in it. Structure: Public Structure Score Public Player As String Public Score As Integer End Structure The Sub in the ScoresForm: Public Sub ShowScores(ByVal HighScores As List(Of Score)) ''''Some code to display the scores ShowDialog End Sub Code that brings up the Form: Dim ScoresList As List(Of Score) = SomeFunctionToGetHighScores() Dim MyScoresForm As New ScoresForm MyScoresForm.ShowScores(ScoresList) I'm assuming you could do something similar in vb6 without a whole lot of changes.
thanks
I don't know, but can you answer me this... Why does everyone want and use VB6?
[Here you go](http://www.ag0.net/downloads/form.zip) I made you a quick and simple example that does exactly what I think you want it to do. Let me know if you need any more help :-)
Not sure of licensing issues but you can find CDs on eBay. 
Just get [visual studio express](http://www.microsoft.com/visualstudio/eng/downloads) and be done with it.
It doesn't look like you really accomplish something there. You need to be getting the input from your input textboxes and putting the result in your output textbox. You do this using the text property from the textboxes. It will look something like this. Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click Dim InchesWidth As Single = width1.Text * 12 Dim InchesLength As Single = length1.Text * 12 Dim LinesofW As Single = InchesWidth / spacing.Text Dim LinesofL As Single = InchesLength / spacing.Text Dim LinearWidth = InchesWidth * LinesofL Dim LinearLength = InchesLength * LinesofW totallinear.Text = (LinearWidth) + (LinearLength) End Sub Edit: I assume you knew this, but accidentally used the "_" character instead of "."
I will try this out when I can. A few minutes off of the computer and I remembered another way with less math.
Is there a particular reason you need to be using VB6 and not a more current version of VB? Quick edit: I'm just curious.
No, VB.NET is not visual basic despite its initialing. It is a completely different language than true (v1-v6) VB
Could you provide an example of these?
Um, yes it is. It's the progression of the language. VB.NET is the evolution of old school VB into a modern OO language. With your logic I could answer that Visual Basic isn't BASIC 
[Here is an example of Process.Start in VB.net](http://www.dotnetperls.com/process-start-vbnet). Scroll down to the Word example for arguments. [Here is example of Shell](http://msdn.microsoft.com/en-us/library/xe736fyk.aspx). 
I wouldn't wish VB6 on my worst enemies.
Agreed. Without knowing what the OP is actually trying to do, I figured it best to just address the question about "layering" at runtime.
You're quite welcome. &gt;I ask, why this line removed from your suggestion? &gt;Is it because later on, those are "Dim"ed as "Single", making that statement redundant? Partially because they are redundant because we don't need to declare variables to use those properties. It's also because unless you use "Option Strict" in visual basic, you can directly convert most variables between types. In this case you are taking a string from the text property of the textboxes and converting them to singles. 
I have one more question, if I may. I added a Listbox that, when a checkbox is checked, stores completed calculations of rebar lengths. If CheckBox1.Checked = True Then ListBox1.Items.Add((totallinear.Text).ToString) End If The Listbox is multi-select and I would like to be able to, once a button is clicked, add the numbers that have been selected, resulting in "totallength". Then I would like to divide that number by a variable called "rebarlength", then finally direct that output to a textbox ("sticksneeded"). Here is what I have so far, which results in "NaN" in the "sticksneeded" textbox. Private Sub Button2_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button2.Click Dim totallength As Single = ListBox1.SelectedValue Dim rebarlength As Single sticksneeded.Text = totallength / rebarlength End Sub **How can I mathematically add the *selected items* in the listbox, and assign that value to "totallength"?**
The reasons? Millions upon millions of legacy VB6 code. For many organisations, it's cheaper to just bite the bullet and maintain VB6 installs, as well as train developpers to use VB6, than to translate it to VB .NET or some other language. Now, as to why they would teach it in a class in 2013, the only possible reason I can think of is a lazy teacher, unwilling to learn new material.
No. .net is a new flavor, a replacement, of basic. They hold little resemblance to each other. A progression would hold a fair amount of language/syntax compatability. 
Hey thanks for all the help, I finally figured it out. 
I would make the interface and tell it what a button do, but it would write the code for me.
Well the problem here is that you haven't given rebarlength a value so you are getting a null value as a result. You need to assign it a value either by getting it from a textbox like you do in the other button or by assigning it directly. I would also suggest using a "For Each" loop inside of the button click sub to add the selected values. Here is an example of a for each loop adding a bunch of values from a listbox. Private Sub Button2_Click( ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button2.Click Dim total As Single = 0 Dim rebarlegnth As Single = 5 For Each Item As Single In ListBox1.SelectedItems total = total + Item Next sticksneeded.Text = total / rebarlegnth End Sub **Edit:** I used a arbitrary number instead of a textbox for the rebarlength. I really have no idea what the typical value would be there.
Again you are incorrect. The major difference between .net and 6 is the fact that .net works with the .net framework. The advancement to an OOP methodology is what brought it forward to the modern world and made it more viable in the professional coding world. Now, I can't think of anything more similar than: Dim strTemp as String This works in both 6 and .Net. .Net obviously has a lot of things that 6 doesn't but that's just the way language advancement works. Qualifications: I'm a coder for 15 years+
Exactly what I was looking for thank you very much!
Great! I fiddled a bit with your code and got this: Dim total As Single = 0 Dim rlength As Single = rebarlength.Text For Each Item As Single In ListBox1.SelectedItems total = total + Item Next sticksneeded.Text = total / rlength All is working as it should. Thanks again!
what you're thinking of is visual basic. it's like the ms paint of programming, and i suggest you learn it.
Different framework, and different syntax. Half the code comment starter wrote will not work in VB6 Source: Programmer for 20 years, VB1-6 for 15 (an application I support for work &amp; customize is still a VB6 core)
Of course the framework is different. It's a realignment of microsoft's strategy of programming languages and offering extensibility to coders of many different languages. VB.NET is not VB6 but your statement in saying that VB.NET isn't Visual Basic is way far off the mark. 
I doubt teachers exactly get to pick and choose what they teach, I suspect they have some control but about the same as when your at work working on a project that's been handed to you. I'd guess the school district chooses what classes are taught. But at least it's better then when I was in school my HS "programming class" consisted of teaching us Microsoft Works for half the semester and then the other half was learning intro BASIC in QBasic. The text books were from 1984 and this was in 1998. 
Thank you kind sir.
Or schools not wanting to buy an assortment of new textbooks
Yes, we were taught it in my class. I it goes by the ASCII value of each letter
I'm not 100% sure what you mean, but you can do something like this, right from SQL: SELECT firstName +", " + lastName AS FullName FROM CUSTOMERS ORDER BY FullName You could then assign the FullName to the checkbox text.
You did it again! That is exactly what happened, and I didn't even notice that the event handlers went missing (due to ignorance and my small screen). What a great way to end the day. Thank you!
Two ways, concatenate from SQL as verafast has shown, or in VB like Checkbox.Caption = r.Fields("FirstName") &amp; " " &amp; r.Fields("LastName")
Without looking closely at your code. I played around with a hangman game and added buttons to the game that could be clicked and upon clicking, disabled the buttons so that the same letter couldn't be presented twice in a game. Also, look into the String.Contains and String.IndexOf methods of determining if the letter is in the word. Remember a string is just an array of chars so you could do something like theLetter = "S" If theWordString.ToUpper.Contains(theLetter) Then 'S is in the string For Each c as Char in theWordString If c.ToUpper = theLetter Then MsgBox("Found The Letter @ Position: " &amp; c.index) end if next End if Of course you wouldn't display a messagebox but instead would use that index position to put the letter S in the Guessed Letter Found of the string. I've not ran the code above it was off the top of my head.
in non.NET VB you would use Int(Rnd() * 10) Perhaps wrap Str() around that if it cannot figure out the conversion itself
Once I wake up a bit and get to my office I'll help you out
So I did this, here is my solution. You have to iterate through each character in the string to find X. Then you store that location to a list. With this information in a list, you can then take a random X and replace it with a random number: Dim lstCount As new List(Of Integer) ' This can be an array also, but lists are more .netish Dim pos As Integer = 0 For Each c As Char In strPassword If c = "X" Then lstCount.Add(pos) ' found an X, store its location into a list End If pos += 1 Next Dim rand As New Random Mid(strPassword, lstCount(rand.Next(0, lstCount.Count)) + 1, 1) = rand.Next(0, 9).ToString ' you have to add 1 because MID locations start at 1 instead of 0, which I find strange ' Your variable strPassword is now padded with X's as the vowels and one randomX converted to a random 0-9 ' One thing, if you enter an X as your password, it will include this in the search.
Where would i insert this? Would i put "Dim lstCount As new List(Of Integer) ' This can be an array also, but lists are more .netish", this with the other Dim statements? Basically is what i am asking is where do i put each part?
How should i give you credit, "The great and powerful verefast? ;) . Yes it worked perfectly, thank you for your help, and everybody else who posted!
Be sure that you understand the code since you're learning, google anything you don't understand or ask. It's pretty basic stuff, so it's pretty easy to understand.
Ya i understand it all, we had been through all that stuff, I just didn't know the best way to do it. And what i was kinda iffy on you explained.
Click new, project then select what options you'd like
Index out of bounds. Change &gt;For i = 1 To numberOfRows - 1 to &gt; For i = 1 To numberOfRows - 2 because you're using If B(i) &lt; B(i + 1), going to numberOfRows - 1 isn't enough because the B(i + 1) is hitting B(numberOfRows) which is out of bounds (effectively B(21))
hmm this is only my third or so actual program with basic so could you explain what the tryparse command is actually trying to do? from the snippet of code you listed it seems as if its a test line per se to see if one value can be assigned to the variable (in this case the .text to averagegrade). This does make sense as i have experimented with adding a message box to tell the user to fix the input, but it always crashed before the box appeared. I will try your method and get back to you with the results.
The reason it crashed is the first two lines where you assign the textboxes to the variables. They don't have a chance to be tested there and "" cannot be converted to a double. If you were to start right off with the example, and remove those two lines, it is essentially doing the same thing with checks and balances. So basically "1.5" is not a number. It is a string that looks like a number so it is capable of being parsed to (in this case) a double. That is really what TryParse is doing. It's taking a string (that may or may not be able to be converted to a numeric type) and testing it. If it's successful, it stores it in a variable of that type that you supplied and returns true. If not, it returns false and stores 0 if memory serves. This is why you should use a boolean check against it to ensure that you are not calculating against 0 upon failure. 
see I knew it was crashing because of the method i was assigning a value to the variables. It just so happens that the method i used was the only way i know how to do it. I just finished the chapter in my book that taught about if statements and such so to say im basically a total newb to this might be an understatement. The method above was successful though and i believe i should be able to explain to my group what exactly the tryparse command is doing. I really appreciate the help :) are there any other ways that this same goal might be accomplished other than tryparse?
One way could be by using [`substring`](http://www.homeandlearn.co.uk/net/nets7p5.html).
Fastest way I know is banana = banana.Substring(0, banana.Length - 5) 
.NET dim NewBanana=Left(Banana,5) VB6 Dim NewBanana as string NewBanana=Left(Banana,5) You did say you wanted the length minus five, so you could do this. NewBanana=Left(Banana, Len(Banana)-5) DeusInnomen's substring methods work too. (But they are .NET only I think) Left(), Mid(), Right() and Len() are traditional Basic, like the kind your grandfather used
Use Val man, she is a life saver. Val gets the number and stops at the first symbol that is not a number. And if there is no number it returns 0 ( or -1 can't remember, pretty sure its 0 though) So dblAverage = Val(txtAverage.text) If the box has "80" it should return 80. If it has "89ahd" it will return 89. And if it is blank it should give you 0 ( or -1, again not at my computer and I can't remember) That way you could do.. if dblAverage = 0 then Messagebox.show("please fill in blah blah")
i actually presented the program today and explained my process in a similar method. She actually wasn't expecting anyone to do error checking as we hadn't learned about it and she personally had never heard of the tryparse command (shes new to basic as well). It is definitely an interesting situation and this is the first real headway i'd ever made into error checking so I do appreciate all the help :). When i presented I let everyone know that i got the help from a "Forum" and that I did not originally come up with this particular solution so in a sense i feel i gave credit to you guys :). all the help and answers here are lifesavers :D
Hey, I am at a college level still using Val. It is, in my opinion, the best tool for the job.
It definitely sounds useful
In your sub procedure your argument is being referred to as a string "d". That doesn't make sense. You should be referring to it as d by itself without the quotation marks.
Also you can't call strings.
Third, why are you using strings on a calculator?
ExecuteNonQuery is for Everything But Queries, SELECT statements are Queries. Therefore You need to instantiate a OleDbDataReader and ExecuteReader One last thing. Never concatenate your SQL statements with strings. You need to learn the use of adding Parameters to your statements and giving them values. With the code you have, after you get it working. I can easily enter a valid username and anything I want for a password and get in. (SQL Injection) EDIT: Also, I would change my SELECT statement to SELECT UserName From Users Where [Password] = @pw This way, you're not bringing the password in to the result. You'll still know it was successful because you will return the UserName ONLY upon success. 
Select case statement are a glorified If statement. They are usually quicker and easier to read. A simple select case Assume operator is one of *, /, +, - SELECT Operator Case "*" 'Perform multiplication Case "/" 'Perform division Case "+" 'Perform addition Case "-" 'Perform subtraction Case Else 'Inform User that input was invalid 'Else come in if none of the case conditions are met End Select This same code could be written with IF blocks If Operator = "*" Then 'Perform Multiplication ElseIf Operator = "/" then 'Perform division ElseIf Operator = "+" then 'Perform addition ElseIf Operator = "-" then 'Perform Subtraction Else 'Inform user of invalid input End If 
Yeah, I go that. lol It took me so long to figure it out. I felt so fucking stupid. Thank you very much though. :) I'm still a beginner. 
Why not? It works fine except for the quotes. I thought it should be integer or something else, but my professor gave us that little code. 
Idk, but it works out. It's just part of the procedure. 
Also, you have this backwards: txtUsername.Text = UName txtPassword.Text = PWord It should be UName = txtUsername.Text PWord = txtPassword.Text
An underlining problem with your SELECT statement is that passwords are not unique and could return multiple users.
You're right. That should have read SELECT UserName From Users WHERE UserName = @un AND [Password] = @pw I was meaning, there is no reason to bring the password into the result. Of course encryption would be good too, but that may be something he can work on next. Not to mention, you could just sit and guess passwords all day without knowing a user to get in. The chance of putting in a common password and getting in would be increased tremendously. Thanks for catching that.
I couldn't help giggling at "Where would I insert this"...
It only works because the way they set up VB, the've made it so you can add SOME strings together for God knows why. But its one of the worst ways to go about approaching a calculator like this. Never do it again! Always use integer values to add numbers, never strings.
So there is no good reason to use string for this? I know string is usually saved for regular characters that aren't numbers, but I feel like he has a reason.
Cheers for that.
Okie dokie.. So I would change it to.. Dim cmd As OleDb.OleDbDataReader sql = "SELECT UserName From Users Where [Password] = " &amp; PWord cmd = New OleDb.OleDbDataReader(sql, dbconn) i = cmd.ExecuteReader ?
Not exactly, you need to create a DataReader object to hold the results Dim cmd as Oledb.OleDbCommand sql = "SELECT UserName FROM Users WHERE [Password] = '" &amp; PWord &amp; "' AND UserName = '" &amp; UName &amp; "'" cmd = New Oledb.OledbCommand(sql, dbconn) Dim myReader as Oledb.OledbDataReader = cmd.ExecuteReader Now you have just populated the reader with any results found Alternatively, you could use cmd.ExecuteScalar since you are only retrieving a single field of data but we'll skip that for now. OK, so to get the information you use the .Read() method of the reader In this query, doing a: MessageBox.Show(myReader.Read("UserName").ToString) should display to you the field you found. 
I have this exact assignment due on Sunday by midnight!!! Have you made any progress because I am very confused still and have been working on in for four days now 
i've made some progress, but i can't get the number of players and cards allowed to run correctly, and i can't get the program to pick a winner 
Hi yes I built a card game last year for a class. When you initiate a new game create an array (actually a list) of integers 1-52. Randomize the order. This is you deck. Whenever you deal a card from the deck take the "card" at position 0 and remove that card from the list. Give that to a card in the players hand, which you can also store as an array. You're basically going I need a function to relate that integer to a card value. Say the number 11 means a jack of spades, but you also want a jack to count as 10 points in your game. Two functions: one running a case check on a integer and returning to the user the card is a jack of spades and one returning a value of 10 for game logic. Idk your game so I can't build the logic but this should be a good start for you. Good luck! 
Thank you very much for your reply! That does help me! The game itself is to have the user enter the number of players and the number of cards per player (must validate this so that the user can't request more cards than are there). Then shuffle the deck. Deal the cards. And display the hands as well as who won the game. The cards have black hack point values (ace =1,...,king= 13). Also we are to include both jokers; red joker is a times three score multiplier and black joker is time two score multiplier.. I am confused also how to code for the jokers as score multipliers . Also my form has two labels and two text boxes for the user input, a listbox for the results of the game, and three buttons (shuffle, deal, and quit game). How did your game work from last semester?
It was built off of the card game golf. You can YouTube it. Consider adding a splash screen, main menu, even high scores list is pretty simple using a database. Don't know if this is out of the scope but definitely get the logic behind the game figured out first.
I wrote a program in VB about 7 years ago that monitors an inbox on an exchange profile. when emails come in, it reads them, parses the data, does a little bit of logic, and then creates records in a database, and moves the email into a folder. The main problem I ran into was the security that microsoft installed in exchange, to prevent programs from doing things like this. (or in reality to fight viruses that create spam) to get around that, I found something called redemption, which is a wrapper for microsoft's c++ mapi libraries. http://www.dimastr.com/redemption/home.htm I wrote this in Visual studio 2003 I think. and I ported it up through 2008. it's been running nearly non stop and uninterrupted since then. I just have to log in and restart it when the server gets restarted. It's filled up two pst files which I think were about 2gb each. For the most part, VB is a big boy language and is capable of doing anything that any other .Net language can do. That being said, since you're looking to learn anyway, and I assume starting more or less from scratch, you should probably consider doing it in C# instead. Your learning curve is going to be similar, but once you get the hang of it, C# is a bit less wordy. 
Thank you very much for the informative reply! I've done some C++, Java, and VB many years ago. Will look into C#!
txtOutput.Text = FormatPercent(**l**.05, 3) txtOutput.Text = FormatCurrency(**l**0.225) txtOutput.Text = FormatNumber(**l**2 / 3) Dim amount As Double amount = 10 lstOutput.Items.Add(amount **l** 4) 15 **l** 3(2 + 34) where a = 2, b = 3, and c = 4 b^ (c **l** a) These are just practice problems from the book, I don't need the answers, I just need to know what that symbol means!! 
Hrm... I've never seen that. They almost looks like typos, to me. Hopefully someone else here will recognize it. 
I don't want to do your homework for you, but maybe these can get you started on the next two: 'Question 1 Dim InputAge As Integer 'get value from textbox Dim CanVote As Boolean = InputAge &gt;= 18 'Question 2 Dim InputWeight As Single 'get value from textbox Dim InputHeight As Single 'get value from textbox Dim CanRide As Boolean = InputWeight &gt;= 40.0F AndAlso InputHeight &gt; 135.0F
I thought dim was declare in memory, but then again im self taught
My first thought is you can just go ahead and try to make the call, and then trap the error. if you want something more definitive then you can look here. http://weblogs.asp.net/johnbilliris/archive/2009/10/13/how-to-determine-if-a-sql-job-is-running.aspx it's a query that you could turn into a stored proc, then you just need to call the stored proc from your code, and act accordingly. 
I get the feeling you're a teacher Mr May. So I chucked that code in and it makes sense other than the myReader.Read which has a " 'Public Overrides Function Read() As Boolean' has no parameters and its return type cannot be indexed. " error. I took out the ("UserName") from the Messagebox line and it worked. I wasn't planning on a messagebox so changed to to set my boolean. i = myReader.Read.ToString If (i = True) Then Me.Close() frmSearch.Show() Else MsgBox("Username And Password Combination Not Found") '' login fails End If cmd = Nothing dbconn.Close() Vulpe-y did good?
Encryption hadn't even crossed my mind. I might look into it but it's not a requirement at the moment.
the reader has a boolean result from .HasRows it doesn't know the count but knows if row results were returned If myReader.HasRows Then 'a row was returned so the Username and password was correct Me.Close() frmSearch.Show Else MsgBox("Username and password combination Not Found") End If 'don't forget to close the reader since you're not using a Using block MyReader.Close cmd = Nothing dbconn.Close() Definitely not a teacher, just like offering help when I can. Did you end up using Parametrized queries? If not, PM me, I want to show you an issue you have in concatenating strings to build SQL statements. 
I'm not sure I understand your problem. Your project involves you writing your **own** Active Directory implementation or does it want you to be able to query an Active Directory for data using VB.NET and Powershell?
Ah OK. So you're writing an interface in VB.Net and that interface has to query AD using powershell. A quick google search gave me this and it should help you out a lot [Calling a Powershell script from your .NET Code](http://blogs.msdn.com/b/zainnab/archive/2008/07/26/calling-a-powershell-script-from-your-net-code.aspx)
hmm yes, that's for executing, I'll try that, thank you. what about editing powershell in the code, I tried the pipeline stuff there (I never did anything similar, I'm a very very newbie coder) but it didn't work..
What if you save the powershell code to a text file and you can open and edit that in your UI (fairly simple feature to implement). Then when you want to execute, your UI calls powershell and executes the contents of your text file?
Hey, thanks so much for taking the time to help me! As I said, I'm a very basic coder and I don't think I could do such a thing.. Also, I might try just running pre-written scripts but that just opens them in notepad.. Thanks again!?
Not a problem. I'm always glad to help since google doesn't always give a good explanation on how something works (which is sometimes needed over a straight answer). Anyway having VB.NET open a text file and populate the contents of a textbox is very simple in terms of coding so I'm sure it's something you could do given the proper resources. However, given you just want to execute some pre-written static code, I think the link I provided earlier will help. Since it reads from a text file all you need is a textbox on your form that you would enter the location of your script file and that way you can have many scripts that you could execute.
Hmm I tried it with a newer version of visual studio, I'll try again with vb6 or something, I'll report back later! Thank you
Well that link is for .Net, not VB6. I wouldn't go backwards.
Don't know if it's just a copy-paste error or if you actually have Public Class Form1 Public Class Form1 in your code. Anyway, where are you at in the tutorial? Did you add the 16 icons to the tablelayoutpanel? When is this error occurring? On a click or on initial run? 
I see, I'm trying to write to a text file as of now, seems like a much more efficient and easier solution :) thanks
Ahh yeah, scratch was fun... simple.
I've got 16 icons in the tablelayoutpanel1. When I try to debug it, it gives me a "build error: continue from last build?" If I click yes, it says the .exe is missing and tells me: &gt; Please build the project and retry, or set the OutputPath and AssemblyName properties appropriately to point at the correct loaciton for the target assembly. I'm on step 3 in the tutorial, the line ` ' iconLabel.ForeColor = iconLabel.BackColor` should still be commented out actually... 
aha, I had two `Public Class` Thanks...it debugs now
What errors are listed in your Error List? Usually if that pops up, it can't compile due to an error but your error window should inform you of what error you have. Then you can double-click that to go to the line of the error. If you are in a code window and don't see an error list, click on the View menu and select error list to open it.
Put them in an array or a list and then use the sort method. Here is a sample using a list: Label1.Text = String.Empty ' empty the label ' Pick three random numbers Dim d1 As Integer = Rnd() * 5 + 1 Dim d2 As Integer = Rnd() * 5 + 1 Dim d3 As Integer = Rnd() * 5 + 1 ' declare the new list Dim sortedNum As New List(Of Integer) ' add the numbers to the list sortedNum.Add(d1) sortedNum.Add(d2) sortedNum.Add(d3) ' Sort the list sortedNum.Sort() For Each num As Integer In sortedNum ' go through the list and write the numbers in a label Label1.Text = Label1.Text &amp; num &amp; " " Next
If you know there will ALWAYS only be 3 inputs (and continuing with your code): min = math.min(d1, d2) min = math.min(min, d3) Dim middle as Integer middle = (d1 + d2 + d3) - (max + min) 
this is perfect, exactly what i was looking for. Thanks!
Not relevant.
What is it that you need the help with? The math or the coding?
The coding. Evey one tells me its easy but I have no clue what to do.
Since now I have 2010 instead of 2012 here is the code I tried to work on before:: Public Class Form1 Private Sub BindingSource1_CurrentChanged(sender As Object, e As EventArgs) End Sub Private Sub Label1_Click(sender As Object, e As EventArgs) Handles Label1.Click End Sub Private Sub Label5_Click(sender As Object, e As EventArgs) Handles Label5.Click End Sub Private Sub Button1_Click(sender As Object, e As EventArgs) Handles Button1.Click TextBox7.Text = (Val(TextBox1.Text) + Val(TextBox2.Text) + Val(TextBox3.Text) + Val(TextBox4.Text) + Val(TextBox5.Text) + Val(TextBox6.Text)) / 6 TextBox8.Text = (((Val(TextBox1.Text) - Val(TextBox7.Text)) ^ 2) + ((Val(TextBox2.Text) - Val(TextBox7.Text)) ^ 2) + ((Val(TextBox3.Text) - Val(TextBox7.Text)) ^ 2) + ((Val(TextBox4.Text) - Val(TextBox7.Text)) ^ 2) + ((Val(TextBox5.Text) - Val(TextBox7.Text)) ^ 2) + ((Val(TextBox6.Text) - Val(TextBox7.Text)) ^ 2)) / 5 TextBox9.Text = Math.Sqrt(Val(TextBox8.Text)) End Sub Private Sub TextBox1_TextChanged(sender As Object, e As EventArgs) Handles TextBox1.TextChanged End Sub Private Sub TextBox7_TextChanged(sender As Object, e As EventArgs) End Sub Private Sub Button2_Click(sender As Object, e As EventArgs) Handles Button2.Click End End Sub End Class
Alright. First you need to decide how the user should enter the data. The easiest way is probably a single long textbox where the user enters the data points separated by commas such as: 100,83,78,91,89,96 Then you would: Dim dataPoints() As String = txtData.Text.Split(",", c) That would fill an array with the 6 data points. Next you would need to convert the array from String to Double Or Integer. You would need to create a loop and a new array (double) and assign the values of the string array to the new double array" Dim doubleArray() As Double Dim intCount As Integer Do While intCount &lt;= UBound(dataPoints) doubleArray(intCount) = CDbl(dataPoints(intCount)) Loop For the average (mean): Dim count As Integer = doubleArray.Count Dim sum As Double Dim mean As Double sum = 0 For i As Integer = 0 To count - 1 sum += doubleArray(i) Next mean = sum / count Variance: Dim Variance As Double = 0 For i As Integer = 0 To count - 1 Variance += ((i - Mean) ^ 2) / Values.Length Next Std. Deviation: Dim stdDev As Double stdDev = Variance ^ (1/2) 
Disclaimer: This is not a drop in solution (at least not completely).
Too much text makes my head hurt. Use loops!
I'm new at this I have now idea what I'm doing.
I'm gonna work on this right now. 
Dim dataPoints() As String = txtData.Text.Split(",", c) How do I modify this to my textbox?
Change the name (txtData is the name).
[Heres what I figured out that might help](http://i.imgur.com/7ONuib3.png)
What does the c at the end mean/do?
Oops. it should be: (","c) I added an extra ,. The c just makes the "," into a single character string. It isn't need but functions the same as: txtData.Text.Split(Convert.ToChar(","))
textbox.Text.Trim()
didnt work :( spaces are still there
VB 6 or .NET?
I've seen this. It sounds like when you read the text from the database it's filling up with extra spaces. As far as I know, it's to do with datatypes in the database. If you're reading from the database and entering the text into a textbox, you would use the following: textbox1.Text = Trim(code to read value from database)
Is the database field char(500) or varchar(500)? If it's the former, that's why you have spaces.
.NET (Visual Studio 2008 Professional)
THANK YOU SO MUCH, THIS WORKED PERFECT!!
Textbox.Text.Replace(" ", "")
It does work as long as you remember that strings are immutable, you can't change them, but you can recreate them back into themselves. Had you used TextBox.Text = TextBox.Text.Trim() it would have removed the spaces.
Guess what? It's the split method :-) Here is the first google result that has a few examples. Your delimiter will be the comma (,) http://www.dotnetperls.com/split-vbnet
You can't use the Insert method unless there is already an item at that index. Insert is used to put an item where you want it in the collection and move all the others down to accommodate it. You'll have to use the Add method, but that will just put the items in sequentially. You could use a Dictionary(Of Integer, String) if you want text keyed on random numbers.
Post the source?
Since you didn't show your query, I'm going to assume that you are either using = or a variation of LIKE in your criteria. LIKE will allow you to do what you're asking by enclosing it with % on each side of the string. For example, you have a table with the following names * Billy Joe * Billy Jack * Jack Sprat * Willy Makeit SELECT * FROM yourTable WHERE Name LIKE '%illy%' would produce the result B**illy** Joe B**illy** Jack and W**illy** Makeit Think of the % on both sides as a Contains.
yes, ive been using "LIKE @myquery, can you please explain the "SELECT * FROM yourTable WHERE Name LIKE '%illy%'" more please.. like wherre do i put that?
I think you are way over thinking this. Just call the sub from your main class. The one line of code in your sub is just assigning the text property of your label to be equal to the passed number divided by 2. A sub does not return a value, so there is no need to assign it to any variable.
I’m sure I am over thinking it...I have a tendency to do that. :( So, i'm still stuck on how to accomplish all the tasks that the question calls for, using just the one Sub Procedure/one line? The question says: * Write the code for a Sub that receives an Integer passed to it * The sub should divide the integer by 2 then display the result * Write the statement to invoke the procedure, passing it the number 120 So…how can I do this with just one line of code? Private Sub DivideByTwo(ByVal num As Integer) numLabel.text = num/2 End Sub …but then I still need to call it, and somehow pass the integer 120 to it. How do I do that? Call DivideByTwo(120) ??? First, am I allowed to just send a number, or do I have to use a variable? And second, even if i used his HalveNumber procedure...i'd still need at least the numLabel.text part AND the Call statement, right? Thank you very much for responding, btw. I really appreciate the help! 
You did do it with only one line of code. &gt;only ONE line of code should be written **between** the Sub Procedure/Sub End lines This is a working sub that you have written to take an integer and divide it by 2. I really don't think he was talking about the call to the sub, just the sub itself having 1 line to perform the calculation and assign it to a label. In both of your examples of calling the sub neither is unacceptable. One allows you to set a variable to hold what is passed it and the other is specified in the call to the sub. As far as renaming the sub name, it doesn't matter what you call it and I'm sure it was just something he came up with based on what it is doing.
I feel...pretty stupid. I kept getting so hung up on the whole "one line" part, and him using a different procedure name, that I was SURE I was missing some magical procedure that not only preforms a task but somehow calls itself to do so. Thank you very much, I really appreciate the explanation. 
i didnt have to code the query, i used query builder in the designer.
OK, so how did you pass Billy or Joe into the query? Somewhere I'm thinking you have a line in your code that reads something like: YourTableAdapter.**FillBy**(yourdatatable, searchTextBox.Text) or something similar. You might even be specifying it in the Fill method of your TableAdapter, either way, somewhere there is some underlying code that puts your search criteria into the tableadapter. I need to see that code so I can be as helpful as possible.
In Access? In the Query Designer, *'s are wildcards. So Like "billy*" will return any field that starts with "billy", regardless of what comes after it. But Like "*billy*" will return any field that contains "billy", regardless of what comes after OR before it. 
VB is much-much simpler than C++/Java. To learn VB basics, I recommend to just read MSDN. I know it might be a little boring, but MSDN covers all and every aspect of VB.
[This is a good starting point!](http://www.thescarms.com/VBasic/EnumWindows.aspx)
Thank you kindly! 
Are you stuck because you don't understand something or because you don't have time?
I will have about 8 hours after work to get it hammered out... afraid I won't have time but I won't know until I jump into it. 
What format does the date have to be in? 03-18-13, 3/18/13, (something else?) Or can the user put any format?
"##/##/##"
That isn't too bad, the only part that I'm not sure of is the leap year ( I hate when teachers include that ) but I shall look into it and let you know. I am at work so it might be a few hours. 
It doesn't seem too difficult. I really appreciate your help. I am trying to download VisBas2010 Express at the office to work on it but I do tech support at a software co so I'm super busy all day.. I had a problem with text validation on my last project using the KeyPress event because my teacher was able to crash the app when entering multiple "." symbols. This teacher is 100% hands off and expects you to teach yourself from the book without a student discussion board so I never have any input on my progress :/ 
Apparently my teacher for this project does not want us to use the keypress events so it will be interesting to see how this one plays out. Will be home in 1 hour to work on it.
That is amazing! I just got home and was going to get started... I forsee reddit gold in your future my friend! Keep me posted 
I have it 99% finished. Though I put in a much better error message than Bad date or good date. It actually tells you what is wrong with it. (It's so cool!)
I didn't check the example, but i wrote up a little blurb to get you on your way. It assumes only dates in the format ##/##/## will be accepted: Private Sub btnCheckDate_Click(sender As System.Object, e As System.EventArgs) Handles btnCheckDate.Click ' the button on the form Dim strInput As String = txtInput.Text ' textbox on the form If strInput.Length &lt;&gt; 8 Then notADate() Exit Sub End If If strInput.Substring(2, 1) &lt;&gt; "/" And strInput.Substring(4, 1) &lt;&gt; "/" Then notADate() Exit Sub End If Dim dMY() As String = strInput.Split("/") For Each s In dMY If Not IsNumeric(s) Then notADate() Exit Sub End If Next ' so if it made it this far, there are 3 pairs of numbers stored in dMY(0), dMY(1), dMY(2) MessageBox.Show(String.Format("Made it - {0} {1} {2}", dMY(0), dMY(1), dMY(2))) ' here convert the array elements to integers and do the date checks... End Sub Private Sub notADate() MessageBox.Show("That is not a valid date!") txtInput.SelectAll() txtInput.Focus() End Sub
Sweet, can't wait to see it! Unfortunately this teacher looks down on going above and beyond what is expected most likely because it creates more work for him to grade.. I really dislike this teacher as he seems somewhat lazy and disorganized..
hrm ya, it will let you put in numeric values, like . and - and others? I think at that point you could interger.tryparse to get them broken down a bit more. Looks like headhuntern1 has it pretty much done anyway. 
That is annoying, but it wouldn't take much to change it to the minimum. 
https://www.dropbox.com/s/jek940nqpnj75mr/DateValidation.zip Not sure if I did this right, but if you can open it see if you can break it. (break it as in see if you can put something invalid and make it valid or the other way around) 
Only problems I see so far are that if you enter 01 and hit validate nothing happens. Vera clued me in as to how important this part is as well: txtInput.SelectAll() txtInput.Focus() If it is incorrect it should delete text and highlight Also my teacher was able to validate the text using the keypress event of the text box I believe by only allowing keypad values. I'm pretty sure he accomplishes this using some code related to ASCII.
Do you mean class-scoped variables? Just set them to 0 or string.empty, or whatever default value they should have? If not, can you give abit more info on your program and what it does?
Right, I see what you're doing there now. You have 1 student but multiple scores for the student. I would offload the average stuff into a function and set up a parameter there to clear the static variables, but you could get your program working if you take out the static declarations from your enterscore.click sub. since you have them declared as global there, you can remove these lines: Static decSumScore As Decimal Static intCount As Integer then when you click the clear button, just set those both to 0 
That works great! I think if we add the following code to the KeyPress event of the text box it would work great: If Asc(e.KeyChar) &lt;&gt; 47 Then If Asc(e.KeyChar) &lt;&gt; 8 Then If Asc(e.KeyChar) &lt; 48 Or Asc(e.KeyChar) &gt; 57 Then e.Handled = True End If End If End If
Oh, I read it as you couldn't use the keypress event. That changes a lot :-0
I will take your word for it though and add it
The above code forces you to enter 0-9 or "/" meaning no letters, punctuation etc can be used. My teacher does not want us to use the Keypress event for anything except validating the text entry. Edit: Clarifying that you can ONLY use the keypress event for validating what is typed into the text box, not for the button click algorithm though ;)
Want to send me a link to your project files so I can go over the code? I think it works really well! You're a life saver!
It is someone in one of the other comments, I hope it helps!
That is strange...let me try to fix it
Okay thank you. Everything seems to be in the right place. Might have something to do with your save method. Its strange I can see the code if I double click FMain.vb located in DateValidation\DateValidation. Maybe if you save it while you have design and code open in tabs.
https://www.dropbox.com/sh/h31k4q89nzw55h6/XKnQofjtPp Try this? You might have to save the zip file on your computer somewhere, it is strange the other link wouldn't work for me either. 99% sure you have to actually save it or some error will happen 
I am definitely saving it. Now that has the correct suo file however it still won't work. I use File &gt; Save All while I have the form and design windows open and it saves like this: https://www.dropbox.com/s/3lrozsivpsffnyx/TravelExpenseProject.zip
Yeah I have the form and the code open and I save all. This is how I usually send programs, I don't know what is wrong...
So did it let you see the form or the code? 
hmm I wonder if you can use the date class and something like tryparse to do some of the final checks
I was able to open the code separately and then copy/paste it and make it work with my form.. really strange that it wouldn't work as is though...
Yeah, nothing is ever easy is it.... well the code the important part anyways. I am glad you got it to work, and you pretty much saw the form when you tested it so no big deal. If you ever need anymore help let me know. Or even if you wanna let me know what kind of work you are doing, it was good practice.
It didn't open right.. did the same thing that mine did. but I managed to open the code and get the working form ( like the example your teacher sent out) what values are giving you bad dates? it seems to me working for me
I just got your download to work, so maybe you can get mine to work.. also looking back at my code I messed something up. give me a couple minutes to debug I think I see the problem
Yea I got yours to work but it only outputs "Bad Date". One problem that may be a pain in the ass because of my teacher is that he typically requires that we use Option "Strict" Turning this on obviously throws 40+ errors lol I would not mind one bit turning it in without this at this point I'll take anything. 
This needs to be changes from this... 'Divide the string into three parts strMonth = Val(strDateInput.Substring(0, intBackslashIndex)) strDay = Val(strDateInput.Substring(intBackslashIndex + 1, intSecondBackSlash)) strYear = Val(strDateInput.Substring(intSecondBackslashIndex + 1)) To this.. 'Divide the string into three parts strMonth = (strDateInput.Substring(0, intBackslashIndex)) strDay = (strDateInput.Substring(intBackslashIndex + 1, 2)) strYear = (strDateInput.Substring(intSecondBackslashIndex + 1)) 
Also it currently allows you to enter something like: 02/45/12
yup, that was just me going too far with it I guess. So every ' ' you can delete the comments after them. Also option strict really hurts your code more than it helps it. 
&amp;#3232;\_&amp;#3232; Mine doesn't ha, can you just put your code in a comment here and I'll look at it
This is after I tried to clean it up :) Public Class Form1 ' ---------------------------------------------------------------------- ' Name: btnValidate_Click ' Abstract: btnValidate click event ' ---------------------------------------------------------------------- Private Sub btnValidate_Click(sender As System.Object, e As System.EventArgs) Handles btnValidate.Click Dim strDateInput As String = "" Dim blnIsValid As Boolean = False strDateInput = txtDateInput.Text blnIsValid = CheckForValidDate(strDateInput) If blnIsValid = False Then MessageBox.Show("Bad Date") txtDateInput.SelectAll() txtDateInput.Clear() txtDateInput.Focus() Else MessageBox.Show("Valid Date") txtDateInput.SelectAll() txtDateInput.Clear() txtDateInput.Focus() End If End Sub ' ---------------------------------------------------------------------- ' Name: CheckForValidDate ' Abstract: Checks date to see if date is valid ( ##/##/## ) ' ---------------------------------------------------------------------- Public Function CheckForValidDate(ByVal strDateInput As String) Dim blnIsValid As Boolean = True Dim intDateLength As Integer = 0 Dim intCheckMonthLength As Integer = 0 Dim intCheckDayLength As Integer = 0 Dim intCheckYearLength As Integer = 0 Dim intBackslashIndex As Integer = 0 Dim intSecondBackslashIndex As Integer = 0 Dim blnIsNumeric As Boolean = False Dim blnLeapYear As Boolean = False Dim strMonth As String = "" Dim strDay As String = "" Dim strYear As String = "" 'Trim the textbox of extra spaces strDateInput = strDateInput.Trim 'Get the length of the user input intDateLength = strDateInput.Length If strDateInput = "" Then blnIsValid = False ElseIf intDateLength &lt;&gt; 8 Then Return blnIsValid = False Exit Function End If 'Get the index of the / to check for validation intBackslashIndex = strDateInput.IndexOf("/") intSecondBackslashIndex = strDateInput.LastIndexOf("/") 'Check to make sure there are two "/" If intBackslashIndex = -1 Or intSecondBackslashIndex = -1 Then blnIsValid = False End If 'Divide the string into three parts strMonth = (strDateInput.Substring(0, intBackslashIndex)) strDay = (strDateInput.Substring(intBackslashIndex + 1, 2)) strYear = (strDateInput.Substring(intSecondBackslashIndex + 1)) 'Make sure they put the proper format ex. 01 not 1 intCheckMonthLength = strMonth.Length intCheckDayLength = strDay.Length intCheckYearLength = strYear.Length If intCheckMonthLength &lt; 2 Or intCheckMonthLength &gt;= 3 Then blnIsValid = False ElseIf intCheckDayLength &lt; 2 Or intCheckDayLength &gt;= 3 Then blnIsValid = False ElseIf intCheckYearLength &lt; 2 Or intCheckYearLength &gt;= 3 Then blnIsValid = False End If 'Make sure only numbers are used blnIsNumeric = IsNumeric(strMonth) blnIsNumeric = IsNumeric(strDay) blnIsNumeric = IsNumeric(strYear) If blnIsNumeric = False Then blnIsValid = False End If 'Validate range for month If strMonth &lt; 1 Or strMonth &gt; 12 Then blnIsValid = False End If 'Validate range for years assuming 00 is 2000 If strYear &lt; 0 Or strYear &gt; 99 Then If strMonth &lt; 1 &amp; strMonth &gt; 12 Then blnIsValid = False End If End If 'Check if leap year If strYear Mod 4 Then blnLeapYear = False Else blnLeapYear = True End If 'Is it a leap year? If blnLeapYear = False Then 'Check to see if the month chosen has the correct number of days Select Case strMonth Case 1, 3, 5, 7, 8, 10, 12 If Val(strDay) &lt; 1 Or strDay &gt; 31 Then blnIsValid = False End If Case 4, 6, 9, 11 If Val(strDay) &lt; 1 Or strDay &gt; 30 Then blnIsValid = False End If Case 2 If Val(strDay) &lt; 1 Or strDay &gt; 28 Then blnIsValid = False End If End Select Else 'Yes it is a leap year 'Check to see if the month chosen has the correct number of days Select Case strMonth Case 1, 3, 5, 7, 8, 10, 12 If Val(strDay) &lt; 1 Or strDay &gt; 31 Then blnIsValid = False End If Case 4, 6, 9, 11 If Val(strDay) &lt; 1 Or strDay &gt; 30 Then blnIsValid = False End If Case 2 If Val(strDay) &lt; 1 Or strDay &gt; 29 Then blnIsValid = False End If End Select End If Return blnIsValid End Function Private Sub txtInput_KeyPress(sender As System.Object, e As System.Windows.Forms.KeyPressEventArgs) Handles txtDateInput.KeyPress 'Validate numeric only' If Asc(e.KeyChar) &lt;&gt; 47 Then If Asc(e.KeyChar) &lt;&gt; 8 Then If Asc(e.KeyChar) &lt; 48 Or Asc(e.KeyChar) &gt; 57 Then e.Handled = True End If End If End If End Sub End Class
No i am sorry you are absolutely right... hold on more debugging
That did the trick.. I think we have made it captain lol
I think we have done it!
If your teacher doesn't like it can you go ahead and just smack him for me lol
Truly amazing! Reddit Gold for you my good friend!
You are truly a gentleman and a scholar! It was a pleasure working with you and should you ever need assistance again please do not hesitate to ask!
I'll slap the shit outta him! hahaha you rock man now to analyze code and make sure I understand it all. Next target... Mid-Term ಠ_ಠ Enjoy the Gold and keep in touch!
God speed my friend, thank you again for the gold, best of luck on your midterm, any questions about the code just ask
I think you mean control arrays and not object arrays. Object arrays most definitely exist: dim objarray(5) as object A quick google brought this: [visualbasic.about.com](http://visualbasic.about.com/od/usingvbnet/l/bldykctrlarraya.htm)
Ahh! Thank you very much Mitzman. I do believe you have cleared up the confusion. Maybe I was looking in the wrong direction. Nice link too. You've been very helpful. I'll look into it. :)
&gt; Private AppInfo As New ArrayList 'initialize arraylist ... &gt; Dim objLoadApplication() As String = ReadInfo.Split(" ") AppInfo.Add(objLoadApplication) 'Add new info to the array txtApplication.Items.Add(txtApplication.Text) 'Add to combobox listInfo.Items.Add(objLoadApplication.ToString()) First, I'm assuming you're intending AppInfo to be an arraylist of ApplicationInfo objects. Since an ArrayList is not type-able (you don't assign it an object type at declaration), it's going to let you shove whatever you want in there (booleans, ints, strings, arrays, textboxes, whatever) and not give you any warnings. There's one problem right there -- not saying ArrayList is a bad idea, it just give you no feedback about what you're doing. One option is to change it to a list: Private AppInfo as new List(Of ApplicationInfo) Then it will give you a warning when you try to put anything that isn't an ApplicationInfo object in it. The other option is to just leave it as an ArrayList and *watch what you're doing*. Now, at this point you're wondering why the hell this matters. Well, the second line I quoted up there, you're splitting the currently read line into a string array. On the 3rd line, you're inserting that *string array* into the ArrayList intended for *ApplicationInfo objects*. Using a *List(Of ApplicationInfo)* would have given you an error and pointed out that you're adding an array to a collection intended for ApplicationInfo objects. This then brings us to the 5th line, where you try to add the info to listInfo. Given that you're calling .ToString on the objLoadApplication, and that you've overridden .ToString in the ApplicationInfo structure, *and* that you've already mistakenly treated objLoadApplication as an ApplicationInfo object once, I assume that you're still treating it as an ApplicationInfo object. ***objLoadApplication is not an ApplicationInfo object, it is a String array!*** And when you call .ToString on an array, you get "mumbo-jumbo". So how do we fix this? We create an ApplicationInfo holding object, and add the contents of the array to it, then use that object to add to the ArrayLIst and listInfo. Dim objLoadApplication() As String = ReadInfo.Split(" "c) 'The c after the quotes is only necessary when Option Strict is on, which I highly recommend. Dim aiTemp As ApplicationInfo aiTemp.Application = objLoadApplication(0) aiTemp.Username = objLoadApplication(1) aiTemp.Password = objLoadApplication(2) 'Alternatively, you can do all this loading in one line using a With initalizer: Dim aiTemp As New ApplicationInfo With {.Application = objLoadApplication(0), .Username = objLoadApplication(1), .Password = objLoadApplication(2)} AppInfo.Add(aiTemp) txtApplication.Items.Add(txtApplication.Text) listInfo.Items.Add(aiTemp.ToString()) This should be enough to get this part working. Now, the 4th line quoted at the top, txtApplication.Items.Add(txtApplication.Text) ... what the hell is this supposed to be doing? You're making the object reference itself. This line also exists in the AddApplicationInfo sub.
Also, as a separate item, you suggested using a list instead of an arraylist, and I definitely agree that it would be beneficial to me, especially because i really dont know what im doing, and it can catch some errors for me. Is changing &gt;Private AppInfo as new List(Of ApplicationInfo) The only editing i need to do? Or is there other items that would need to be changed as well?
Ahh, ok, I don't know that I've ever used a combobox, and if I have it's been a couple years, so I'm terribly unfamiliar with them. The missing first line problem is caused by this: Dim ReadInfo As String = oRead.ReadLine() 'You're reading the first line here Do Until ReadInfo Is Nothing ReadInfo = oRead.ReadLine() 'And now you're discarding the first line and reading the second line So drop that first .ReadLine. Dim ReadInfo As String Do Until ReadInfo Is Nothing ReadInfo = oRead.ReadLine() **FYI (*this will have no bearing on your program's performance*):** I don't know why so many educational resources focus on StreamReaders (and StreamWriters), and don't focus on the functions for file IO built into the System.IO.File class. They make for much simpler code, and you don't have to manually manage the opening, reading, and closing of the filestream. File.ReadAllText will open a file and give you a string of all the text in that file, while [File.ReadAllLines](http://msdn.microsoft.com/en-us/library/s2tte0y1.aspx) will open a file and give you a string array of all the lines in that file (using one of the 3 standard [end-of-line](http://en.wikipedia.org/wiki/Newline) markers as splitting points). So, if you *wanted* to, you could do something like this: Dim aiTemp As ApplicationInfo For Each ReadInfo As String In System.IO.File.ReadAllLines(filePath) Dim objLoadApplication() As String = ReadInfo.Split(" ") aiTemp.Application = objLoadApplication(0) aiTemp.Username = objLoadApplication(1) aiTemp.Password = objLoadApplication(2) AppInfo.Add(aiTemp) 'Add new info to the array txtApplication.Items.Add(aiTemp.Application) 'Add to combobox listInfo.Items.Add(aiTemp.ToString()) 'add to listbox (TESTING ONLY) Next
I trust you've seen my other reply by now. I wanted to reply to the comment where the question was asked.
Interesting. Obviously I don't use StreamReaders much either :) Well in that case, moving the ReadInfo = oRead.ReadLine() line at the beginning of the Do loop to the end of the loop should work. For writing to a file using the File class, you'd use File.WriteAllText or File.WriteAllLines. These functions take 2 parameters, the filepath &amp; the text (string or string array) to write. File.WriteAllText(filePath, strTextToWrite)
Huh, so in my case it would be File.WriteAllText(filePath, objNewApplication) ?? and then put it into a for&gt;next loop and write out each line? I'll give that a try in a bit to see if i can get it to work
Edited the main post to reflect progression changes, and add new questions &gt;.&lt; didn't change coding yet tho. I continue to thank you all for your help, you guys are fantastic!
I believe you are looking for input validation and dealing with that if it's wrong. Baseball scores are all integers (i think). Make the input a string. This ensures that the input is an integer and us within a range of values. It is valid if the boolean = true. &gt; dim input as string &gt;dim valid as boolean = true 'it is valid if true. &gt;if not input is numeric then &gt; valid = false &gt;end if &gt; if valid = true then &gt; if convert.toint32(input) mod 1 &lt;&gt; 0 then &gt; valid = false &gt; end if &gt; end if &gt;If valid = true then &gt;If (lowrange) &gt; input or (highrange) &lt; input then &gt; valid = false &gt; end if &gt; end if
Man, where to begin... OK I would rethink this and prepare for a rewrite of what you posted. Create a subroutine called AddToCart that accepts an argument. This routine will be used for all items. Private Sub AddToCart (byVal cost as decimal) decSubTotal = decSubTotal + cost MainForm.lblSubTotalCost.Text = decSubTotal.ToString("c") MainForm.lstProductsSelected.Items.add(lstPrintBooks.SelectedItem) End Sub Now you have a method created that will take in the cost you set for the selected item and use it to accumulate the decSubTotal Your select case statement could then be something like: Dim selectionCost as decimal = 0 Select Case lstPrintBooks.SelectedIndex Case 0 'the first item in the list selectionCost = decIDidItYourWay Case 1 selectionCost = decTheHistoryOfScotland ' Finish out for the remaining cases changing the variable that holds the cost for each one. End Select AddToCart(selectionCost) so what I basically did here is show how you can use the same method to perform the add by passing different information to the sub. Again, this is still a bad practice because you are writing code based on a number of indexes. But for the sake of the exercise I think this will help you in understanding the task a little better. 
Ah thank you so much. I'll give this a try update: almost got it. I have no trouble adding more than one item now but the problem is when selecting the last two, i get values for the first item.
Post your new code
got it to work finally...heres what i did. 'This procedure determines user-selected product's cost and name Dim DecCost As Decimal Dim strproduct As String = "" Dim intItemCount As Integer Dim dectotal As Decimal Dim decShipping As Decimal Select Case lstPrintBooks.SelectedIndex Case 0 DecCost = decIDidItYourWay strproduct = strIDidItYourWay Case 1 DecCost = decScotland strproduct = strScotlandPrnt Case 2 DecCost = decLearnCalculus strproduct = strCalculusPrnt Case 3 DecCost = decFeelTheStress strproduct = strFeelTheStress Case Else MessageBox.Show("Please select a book") End Select If MainForm.lstProductsSelected.Items.Count &lt;= 10 Then decSubtotal = decSubtotal + DecCost MainForm.lblSubTotalCost.Text = decSubtotal.ToString("c") MainForm.lstProductsSelected.Items.Add(strproduct) For Each strproduct In MainForm.lstProductsSelected.Items intItemCount = intItemCount + 1 Next decSalesTax = decSubtotal * decTaxRate MainForm.lblTaxCost.Text = decSalesTax.ToString("c") decShipping = intItemCount * decShippingCharge MainForm.lblShippingCost.Text = decShipping.ToString("c") dectotal = decSubtotal + decShipping + decSalesTax MainForm.lblTotalCost.Text = dectotal.ToString("c") Else MessageBox.Show("You have reach the shopping cart limit!") End If End Sub End Class now to figure out how to remove items on the main form :P
roddy, thanks for the response, and I admit I am gong to have to put in some sort of validation (might even steal some of your code :) ), however I do need some sort of quick undo option since sometimes the umpire changes a call or I may even read a call wrong (ball instead of a strike for example). After thinking about it, I think I have a way to do it. Basicly I'll treat every action on the field as an event and give its a unique eventid. However before every event I will capture a snapshot of the field and who is in all 14 positions (9 defense players and a max of 4 offensive players), as well as the count, score, ect. When I need to undo something I simply have to roll back to that snapshot. As for the stats(players bating avarage, strikes, that sort of thing), if I tag every stat with the eventid I can come back and simply delete all the stats with that eventid, theirby undoing the stats as well. I think this will work, though it might be kind of kludgy :p
Your code is vulnerable to SQL Injection. [Read these](http://bobby-tables.com/dotnet.html) ---- You can use the code: SELECT TOP 1 with ORDER BY ASC|DESC to get one row based on your auto-generated ID (Or DateTime Entered). Alternately, keep the query, check to see if the Data returned has 1 row, 0 rows, or more than 1 row and then make a GUI to select the correct row if more than 1.
sql = "SELECT TOP 1 * FROM Transactions WHERE BookISBN = '" &amp; CheckInBookISBN.Text &amp; "' AND StudentID = '" &amp; CheckInStudentID.Text &amp; "' order by &lt;key&gt; desc" the order by is kind of up to you, the desc after it makes it order backwards. though as 0xFACEB00C it's not a good idea to code it this way. you might want to look into LINQ and entity framework. 
Thanks for that helpful article on SQL Injection, didn't actually know about that! I'm using Masked TextBoxes and other validation on the fields, so only numbers can be entered, so I think I'm alright on that... and thanks for the code, I shall try it out first thing tomorrow morning! 
You're nowhere near alright. Do it properly.
It appears to work, although it's not checking for negatives. What kind of error are you getting?
I'm not getting any errors...that's just it. I'm supposed to be getting errors when attempting to input a negative. The only time I get the error message, is when I input a letter or special character.
I would would think you would need a way of checking evey second so a timer woukd do this. You could use this inside a do while statement or just loop the timer endlessly and have the check at the end.
hmm, still new to vb, but would there be a way to slip in a math.abs somewhere in there? that way even if a negative is entered it would still flow through. Or do you need the error to show if a negative is entered as a type of user data verification
Also for this chunk: Else ' Error message for invalid markup percentage. MessageBox.Show("Enter a numeric markup percentage.") End If Else ' Error message for invalid wholesale price. MessageBox.Show("Enter a numeric wholesale price.") End If which in my understanding is the error messaging. wouldn't you need to add in a exit sub so that the program doesn't run with the wrong/improper information? Else ' Error message for invalid markup percentage. MessageBox.Show("Enter a numeric markup percentage.") exit sub End If Else ' Error message for invalid wholesale price. MessageBox.Show("Enter a numeric wholesale price.") exit sub End If like that? Like i said i'm still new so not sure if that's actually necessary.
Yes! That was exactly what I needed, thank you so much. If I could give you more upvotes I would.
my first guess Timer1.start() ?
Oh ok. I see the problem a little more clearly now. I would create 2 structures, one which has just been updates and another that is one play behind it. If something changes hit a button and set the latest structure equal to the olderm one, thus removing the latest stuff. Roddy
What I don't understand is why people are told about this and don't care. Not only does the solution protect you from SQL Injection, it makes your statements easier to read, less prone to coding errors (like missing apostrophes) less prone to input errors (like putting an apostrophe in a textfield and later trying to retrieve it with a concatenated SELECT statement). I can guarantee, in a large statement, there is more effort and thought put in to making sure you got the syntax right with concatenation than there ever will be by filling parameters with variables or creating a stored procedure. And that's not even touching on someone injecting and gaining access to your database, leaving any personal information vulnerable.
The sub handing Form1.Load sets Timer1.Enabled to true, which is essentially the same thing as calling Timer1.Start.
Here's a VBScript function I've used in Classic ASP to download files from the web. Not the prettiest code but should be a decent start and relatively simple to mod. If not, google WinHttpRequest and you should find more examples up your alley or post some code here for us. [This](http://www.vbaexpress.com/forum/showthread.php?t=39282) is an alternate and possibly more pertinent example for you using the XMLHttpRequest object. Function DownloadFile(filepath) If Trim(filepath) = "" Then Exit Function Response.Write "Download File: " &amp; filepath &amp; "&lt;br&gt;" Response.Flush Set oWinHTTP = CreateObject("WinHttp.WinHttpRequest.5.1") dlfile = filepath locfile = Mid(dlfile,InstrRev(dlfile,"/")) tmpstr = Replace(dlfile,locfile,"") locfile = Mid(locfile,2) oWinHTTP.Open "GET", dlfile, False oWinHTTP.Send If oWinHTTP.Status = 200 Then Response.Flush Set oStream = CreateObject("ADODB.Stream") oStream.Open oStream.Type = 1 oStream.Write oWinHTTP.responseBody currentfile = "c:\dl\" &amp; locfile oStream.SaveToFile currentfile oStream.Close Response.Write "File saved as " &amp; locfile &amp; ".&lt;br&gt;&lt;br&gt;" Response.Flush Else Response.Write "File Status: " &amp; oWinHTTP.Status &amp; "&amp;nbsp;-&amp;nbsp;" &amp; dlfile &amp; "&lt;br&gt;&lt;br&gt;" End If Set oStream = Nothing Set oWinHTTP = Nothing End Function 
Thank you a lot that worked!!
Hey, ill take a look tomorrow and see if I can think of anything (im pretty Interested in your code). From here, customisation always wins hearts and minds ;)
These are just playing with inputs, outputs abd simple arithmetic. Any book or class your taking should cover this clearly.
Ok thanks!
Download 2010 instead. Anything you start with 2012 will be incompatible with 2010 so you can't program abd debug in school.
Perhaps if you gave more information on your assignment