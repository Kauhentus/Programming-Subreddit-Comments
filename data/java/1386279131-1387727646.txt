With the new unboxing, I'm not sure if Boolean b = true; if (b = null){...} is caught by the compiler. **Edit:** it isn't: (NullPointerException) http://ideone.com/skcwBh
For the lazy: /r/programminghelp --- I provide direct links to lesser known subs mentioned in the title if one isn't already provided. Let me know if I need to try harder: /r/LazyLinkerBot
Related code smells that drive me nuts: The "Why didn't you just return the result of the conditional?" boolean isnull(Object o) { if (o == null) return true; else return false; } The "Unnecessary ternary operator." boolean b = "true".equals(str) ? true : false; It's cousin "Unnecessary and confusing ternary operator." boolean b = !"true".equals(str) ? false : true; 
Short-circuiting is a good thing to know.
we seem to have shamed the commenter into deleting their post :(
http://c2.com/cgi/wiki?SingletonsAreEvil
As someone who recently started using Java, maven is a fantastic tool. It's well worth the small amount of effort it takes to learn.
Ha, well, it's a rare enough case that I'm willing to accept it, and to be fair it's not the assignment that's the problem its the unboxing of a null value. That will always result in a NPE at runtime. Oh how I wish we never had to deal with boxed types to begin with.
Yeah. It's just a corner case to be aware of. I like how C# has int just be an alias for Integer32, char for Character, etc.. It removes a lot of the bullshit "That's not an object so you can't use it!" code issues. It's a lot better if everything is an object. Of course, they do this because they have the struct (stack-allocated) vs ref (heap-allocated) distinction which also causes confusion, but still.
For single letter variables, sometimes I think that `== true` can clarify the meaning of the code. Of course, `codeIsEnabled` is way better than either of those. `if (codeIsEnabled) {...}` is almost English! 
A project I've inherited manages to mash up two of these into this gem: if (foo == true) { return true; } else if (foo == false) { return false; } return false; My desk has a head-shaped dent in it after I read that.
As opposed to HTML output. GWT is mostly JavaScript
Exactly, we used HTML/JavaScript Java components in the past (JSF, Struts, Wicket, etc). Why should we completely abandon them using Java script to do that for modern HTML5/&lt;javascript library-X&gt;
Another point. It can come down do "dynamic programming approaches" or "static compile time java type approaches". If your approach is all javascript on the client side, that is all dynamic. You make a change in javascript, it is normally immediately available to the user. With the java static checks, you compile to a jar or a war, deploy to a server and then eventually your code gets processed to the user. For large shops, I like the second approach. Why? Because you can address problems at compile time. Also, once you compile and deploy, you have a pretty good understanding how your code will work. With GWT/Wicket as an example, you compile code, deploy WHICH GENERATES THE CLIENT-SIDE application code. You trust your framework and hope it does what you want it to. And I am OK with that. Back to my original post, unfortunately a lot of the Java frameworks are still in a HTML4 world.
You've either won the prize for "Most Idiotic Java Question on Reddit" or "Most Ignorant Java Developer in the Industry". Which one would you like?
At the bottome of this page https://github.com/spring-projects/spring-framework/wiki/Downloading-Spring-artifacts it links to http://repo.spring.io/webapp/browserepo.html?8 which allows you do download the jars.
http://en.wikipedia.org/wiki/Shortest_path_problem
Right, but writing in pure GWT is like writing in pure JS or JQuery - there is no HTML (except for any innerhtml content managed at runtime of course). GWT *is* its own 'standard JavaScript framework', and can use as much or as little HTML5 as you elect to use. 
Maybe I'm misunerstanding HTML generation. Templating is definitely still relevant so long as someone is crafting those templates.
Nice, will install.
I can't figure out how to apply this because it would find the path with the shortest time in the air, but that's useless if one of the flights leaves before the previous one arrives.
Fair enough. My point, there is more JavaScript output from GWT than typically generated from old Struts. 
If your coding java you should be using one of those two systems.
It's a good starting point. Typically if I am going to create a builder, the builder will have a bit of validation logic erc_, but this could save time
Its been a while since I've used A* but I remember you were able to put all sorts of information into the object you store on the queue. Things like total time spent, arrival time, current time etc. All this information you can use when adding the next set of nodes to the queue. eg: select the next available depart time after the arrival time and add the difference to the total time spent. I too suck at conveying ideas on a forum but hopefully some of that makes sense/helps :)
What are you trying to draw? 
Sprites.
Use a game library that has already solved the problem, unless you want to roll your own engine, at which point I'd recommend learning openGL. 
Are you doing Android programming? 
Your score should just include the time on the ground as well (conditional on it not being the destination) The edge from A to B should be the time of departure from A to time of departure for flight B including layover 
Interesting. Thanks.
/r/androiddev might help you better.
I think the future is in being able to write both your client-side and server-side code in the same language. We see that in Node.js (bringing Javascript to the server) and many of the new languages are now able to compile to Javascript (Clojure, Ceylon, Kotlin to name a few). Ironically, Java via GWT has had that capability for quite some time. Unfortunately, I don't think the APIs built into GWT are very good. Too much abstraction, and actually, too backend agnostic which means you aren't as able to easily take advantage of your existing backend code. There are some very interesting projects though. The most interesting to me is Errai which is built on top of GWT. It brings CDI to the browser, can very easily talk to REST endpoints (exposed via JAX-RS) and has a nice light-weight data-binding to HTML5. I don't think it's quite the nirvana we're all looking for just yet but it has some promise. I think the ideal situation would be to bring browser-like APIs to the server-side (eg. dom-like api, and templating) that can be rendered either in the browser or on the server without changing your code.
I routinely interview candidates from intern to senior engineer and can tell you that for an intern position they won't be looking for much. Most likely it will be the simple stuff. You will not be expected to know much but a good attitude, and a basic understanding of Java and OOP will go a long ways. * Difference between stack and queue * Difference between set and list * OOP concepts (polymorphism, abstraction, encapsulation, inheritance) * Difference between final, finalize, finally * Difference between public, private, protected * How does a hash map work * Define generics and how they are used * If you override the .equals() method what other method must you override and why * Difference between == and .equals() Those are just the basic questions off the top of my head that I would ask. I would not expect a intern candidate to know all of these answers. What I look for is a candidate who try's to answer these questions and when they don't know an answer they ask for it. If you ever fail to answer a question in an interview ask for the correct answer. Show the interviewer that even though you don't know the answer you are willing to learn. I have hired many junior programmers that failed to wow me with their technical knowledge but their energy and willingness to learn convinced me to hire them because it showed me that even though they didn't have the knowledge now, they would make damn sure to get it. Programming is a tradecraft and we were all apprentices once. Its our job as senior programmers to teach and its your job as junior programmers to learn. ** edit because I didn't see the job posting. I would also read up quick on junit for unit testing. Maybe know the different levels of testing (unit, integration, regression). 
May be this article need some additional informations 
The tooling for Grade is just not there yet. In Eclipse, I can click "Add" and search for a dependency, and I cannot get that simplicity with Gradle yet.
Please post this on /r/IntellijIDEA and /r/androidstudio!
[Dropwizard](http://dropwizard.codahale.com)
Agreed, but it's none too difficult to add a maven dependency to a gradle project by editing your build script either. 
Common give some suggestions which can be added to above article 
You can use the `hasNextDouble()` method of your scanner to check if the user input can be interpreted as a floating point number instead of catching an exception when it can’t. For interactive usage, you still have to use `next()` (or better, `nextLine()`) to advance past invalid input, though. I don’t see why you would need an extra "valid" flag for that.
I couldn’t even start reading it: by the second line we already encountered three different spellings of “Java,” and apparently a wrong one keeps being used throughout the article. My recommendation: you shouldn’t write about something if you can’t even spell it.
Please ask in /r/javahelp.
An immutable class with enough constructor arguments to warrant a builder should be a rarity. Don't write monolithic classes that require this and you won't need the builder to begin with. There are also much less verbose ways to make classes immutable. Using builders in this fashion where you are duplicating a very significant portion of your code base in a way that is very tedious and error-prone to maintain is just silly. 
I suspect we would disagree on what constitutes "enough constructor arguments", with me picking a number like 3 or 4 and you picking a higher number. &gt; There are also much less verbose ways to make classes immutable. Are there? Off the top of my head, I can only think of these: 1. Constructor that takes in all the field values as parameters. 2. Constructor that takes in a single "config" object, which is a Builder in disguise. 3. Copy modifiers that clone an existing object except for the one field being modified. 4. Builders. &gt; Using builders in this fashion where you are duplicating a very significant portion of your code base in a way that is very tedious and error-prone to maintain is just silly. Well, we obviously disagree about the value of Builders, but we'd probably agree that language changes would help. I don't like the boilerplate either. Named method parameters with default values would eliminate most of my own use cases for Builders.
Spring may be wary of giving you the jars since it will then painfully reveal how big Spring is. Spring jumped very early on the Maven bandwagon to somehow give you the illusion that it's not really there, or that the libs are already installed somewhere (like in Java EE). This caused a lot of developers to think their app ran on a 6MB Tomcat "and nothing else", so it was lighter than Java EE which required a 100MB or more server (of course Spring users were led to believe Java EE servers were at least 1GB, further adding to the myth of lightweight Spring and heavyweight Java EE). In reality all the jars downloaded by Maven and stuffed in the .war could easily exceed the 100MB and Java EE can be implemented in as little as 28MB (TomEE), which busts the myth.
&gt; 3 or 4 Nope, we agree. You're right on the money with that number. Anything more than 5 makes me pretty uncomfortable. And really, a builder is a workaround to skirt this issue which we both agree is a sign of inherently bad design. Preferring atomic objects over monolithic objects makes for better organization, easier immutability, and less code duplication. 
&gt; it creates a new "YourTypicalBean" instance at each "set" step does it? the setter just returns the object instantiated by the 'new', not a new object.
He meant that would be the case if YourTypicalBean were immutable.
Neither of us have seen the implementation of YourTypicalBean, so how can you be so sure? ;) mr_jim_lahey was talking about a pattern for modifiers on mutable objects like this: public YourTypicalBean setFoo(String newFoo) { this.foo = newFoo; return this; } I was talking about a pattern for modifiers on immutable objects like this: public YourTypicalBean setFoo(String newFoo) { return new YourTypicalBean(newFoo, this.bar); } Aside: "with" is more common than "set" in those method names in that pattern, e.g. http://www.joda.org/joda-time/apidocs/org/joda/time/LocalDateTime.html#withYear(int) The point I made was, if your object is immutable, using that second pattern means one additional instance is created per modifier. Meanwhile, using the Builder pattern means you only ever create one Builder and one result object, no matter how many modifiers you end up using.
Well, the thing is, even semantic information is just text (or rather a bunch of bytes) until interpreted. What you want to do is have the logger use a certain vocabulary, so certain tools can interpret it right away. I am not aware of logging frameworks that produce RDF out-of-the-box. But most of them allow you to have your own logging handlers. You can easily write a log event handler that produces the RDF you desire. 
Then I can just stay within Maven. I mean, saying "you can still use the tool you're used to from this new tool which does exactly the same things, but requires you to learn a new syntax" is not a great argument.
Also the myriad of plugins for Maven. That's the killer feature for me. Just recently I created a build script that runs a WAR in Jetty and then executes a soapUI test suite. No scripting, just two Maven plugins.
Not sure whether this is a joke or a real project ;)
I've just pushed some fixes, so make sure you upgrade to version 1.0.5. Cheers!
So much buzzwords... must... resist... sarcastic urge... there *sight-of-relief* Actually it makes some sense. I don't like Maven for frontend development, but don't mind it for serverside java/jee projects, where it is quite convenient and very mature.
Grammar is terrible. I had to stop reading.
I'm the author of the project. It indeed started as a joke, but it ended up being a real project. Can't believe it myself.
Yes, the buzzword part is the original "spirit" of the project. But in the end, we have indeed a nice result, with a grunt/bower/angularjs front-end working nicely with a maven/spring/jpa backend. It works surprisingly well, and we now have enough users to be sure it fills a gap, for people who want a robust/proven backend and also want a funky UI on top of it.
now I understood it.
Do you think this would be a good idea for a library like Lombok? Annotate the class as @InnerBuilder and the compiler would generate the code.
If you work with Maven, why didn't you create an archetype instead of using npm? Do you plan to make the generator configurable (I tend to avoid JPA)? Do you plan to support Gradle baked projects, too? The project name is a funny catch. People using AngularJS are indeed Hipsters ;) 
Does it confirm to the spec, if you use the HTML5/jQuery stuff
Yes, I use Yeoman as a generator, instead of a Maven generator. This is mostly because it's more powerful, and it's a lot easier for me to code. It is already configurable, it's just that I didn't provide an option to remove JPA :-) No plan for Gradle at the moment: I have many people asking for it, but it doubles the work (you have to maintain both build systems) so I'm not really keen on doing it.
Thanks to those who offered helpful suggestions. I am surprised that some people seem angry that I have not been using Maven. I have worked for many different projects and clients and none of them used Maven. Maven is fine but it is really annoying to have a framework try to force it on you. It really gives a me a bad impression of Spring. I have used Spring in the past but was never responsible for getting the Jars and updating it.
My NOD32 detects trojan on that page. http://www.javatalk.org/2013/11/JAVA-BRIEF-HISTORY-VERSION-HISTORY.html JS/Kryptik.ALB trojan http://www.javatalk.org/2013/11/JAVA-BRIEF-HISTORY-VERSION-HISTORY.html » GZ » file.htm JS/Kryptik.ALB trojan 
&gt; Spring may be wary of giving you the jars since it will then painfully &gt; reveal how big Spring is No. I'm sure the Spring folks don't want to maintain a "distribution" of Spring, which is only sensible. You used to be able to download all of Spring, but then you'd end up with a bunch of JARs you didn't need. I remember those "bad old days" when you had to deal with JAR hell. The "Hibernate-all" JAR contained several different combinations of cache managers and connection pools. You'd either have to pollute your classpath or or fiddle with JARs until you stopped getting ClassNotFound exceptions. At least Maven does a lot to ensure that the correct versions of only those JARs you actually need are in the classpath rather than leaving it all on the developer's lap. &gt; In reality all the jars downloaded by Maven and stuffed in the .war &gt; could easily exceed the 100MB I just looked at the WAR file for a Spring Web MVC project I'm working on, and the Spring and Hibernate JARs account for less than 15 MB. By far, the largest JAR is Hibernate Core. There are legitimate points of debate between Spring and Java EE. Please don't make things up.
I wish we had this a few months ago because we're building a project on nearly this exact stack and have a mess of antrun taks for grunt and it's super brittle. How is your experience with Spring Loaded vs JRebel?
:-) I have a bad experience with both, unfortunately... Spring Loaded crashes quite easily, but I know what doesn't crash, and so it removes 50-70% of my reloads, which is already quite good. And it's free. I haven't used JRebel since a couple of years: their support confirmed me that they didn't support Spring JavaConfig, which made it useless for me. I hope it's improved now. I used to work with it when I was using the Spring XML configuration, but then it restarted the whole Spring context everytime, which is like 80% of my reload time, so it didn't help that much.
The stack seems very well thought-out! A question: since you're using Sass, have you considered replacing Bootstrap with [Foundation](http://foundation.zurb.com/)? Related: how difficult would it be for a user of JHipster to replace Bootstrap with Foundation in a generated project?
Thanks! Sass is an option, and to be honest I'm not using it personnally (but I heard it works well!). Migrating to Foundation means you have to migrate the CSS classes used in the views (which should be easy), and you will need a new menu (the menu system is done with Bootstrap, but you don't *need* to use it. Just delete it if it doesn't suit you).
I think any sort of reloading or hot deploying will eventually crash your server. So long at eliminates most restarts, it's helping. I'm using JRebel with annotation based Spring and it works pretty great.
Does it restart the whole Spring application context each time you touch one of the Spring Beans? That was my main issue.
Looks like you lumped in the 8 * into the power method. 8 * Math.pow((3 * java.lang.Math.sqrt(x)) / 2), 3) 
Your issue is you're applying the cube exponent to the constant 8 in the function. It may help if you break up the different parts into their own variables, such as double frac = (Math.sqrt(x) * 3) / 2; double pow = Math.pow(frac, 3); double ans = 8 * pow; The above can be combined into one line a la 8 * Math.pow(((Math.sqrt(x) * 3) / 2), 3); 
Nope. It's much more tightly integrated now. I can change a request mapping on a controller and see it reflected immediately.
There is no way to combat that way of thinking.
Working on the same project? If they're different projects, using different IDE's is probably easier than if it were the same project/codebase. If you're working on the same project/codebase, it's probably better to use the same IDE, as the environment has all these variables/settings that are sometimes specific to the project's compilation and build. Just an idea. If I were working on the same project with another developer and we were set on using an IDE I'd probably feel more comfortable using the same one.
Other people have gotten to the meat of your response, but remember that java.lang is available without import.
Yes but my class name is Math so there is a contradiction there :).
As someone with plenty of experience with both, I encourage him to learn Maven. If you start with gradle, you'll start with this "i can do anything" mentality and end up with a shitty build where you might as well have written bash scripts. 
Google, and most others, have support for these sites now. They have fully running javascript engines (running JS without a browser was a big part of why V8 was developed, and phantomJS does a good job at playing the role of a headless webkit). Let google catch up to you, don't try to force google to like you. 
Exactly - I want a library that abstracts away the fact that the log events are ever stored as text, that is able to both write and read structured data so that I don't have to rely on fuzzy text analysis to find all instances of a particular event. It seems that most people get by just fine without that, though - I guess simple text analysis must work well enough in practice. Thanks for your response!
If you use git, just put the IDE-specific files on the ignore list.
Fair enough. 
So for example: Java would be the language for apps and C++ for heavy software work and games??
Why not both? Honestly if you're faced with having to know one or the other, you're probably better off learning java. It's easier to use and more widely used. C++ is harder to use, by far more powerful - mostly in a language sense but also in a performance sense.
I think the main problem for such a library is that every user would want their own model. I think creating your own log event handler or even logger will be the only way to really give you what you want. 
As are IDEs, Compilers, Runtime libraries. I heard "real programmers" use magnetized needles to flip bits. A professional programmer in contrast uses the tools he has available to get his job done correctly. The user wont care if the GUI was written in handwoven assembly or thrown together with drag and drop as long as it works.
Do you want to write games, operating systems, or low latency code (e.g. for wallstreet)? Yes? C++. No? Java.
You *can* use different IDEs without too much trouble. You may find that you have difficulty getting your build paths and configurations to match exactly, which can generate a frustrating situation where it works on my machine, but not yours. You will also not be able to help each other in configuring your IDE, configuring your project representation, or finding helpful/appropriate plugins.
Is this serious? Google Time Management
Unfortunately yes, I have been working on this and another programming assignment all day and just don't have the head to Finnish it off :/ 
Are you using CSS?
(or any other version control)
Is there anything Java can do that C++ cant?
Well, maybe I emphasized it too much :) But how much do we have to wait before having a grid-based, general purpose layout like MiG? Having one layout to do all the work is way simpler than having many.
Interesting, thanks for that info. You don't really have the option of letting GOOG catch up with you if use traffic metrics as a KPI for your performance. You kinda gotta use what'll get you max traffic. 
CSS? Isn't css used for styling components? Would it change things between a layout or another? 
If you are using something like Maven or Gradle to manage the project, then using different IDEs shouldn't be too much of a problem. Eclipse will use the Maven POM and so will NetBeans or IntelliJ
You could use two **for** loops, one for each of the two arrays to copy the values into the third array and then call Arrays.sort(&lt;array&gt;) on the third - resulting array. Or, once you have all the values in the third array, you could use your own sorting algorithm. **BTW:** You're possibly better off in the future asking such questions on /r/javahelp. /r/java is more about the language itself. /r/javahelp is dedicated to java programming problems.
I am self taught and am now happily employed as a software engineer. My degree is in Horticulture.
This is a classic one. The answer is to iterate over both arrays at the same time. Because they are both already sorted, you don't really need the Arrays.sort(&lt;array&gt;) method. You should have two counters, one for array a, and the other for array b. Then compare as you build your new array. For example: a = 1, 3, 4, 5, 7, 8 b = 0, 6, 9, 10 Both your counters would be 0 at this point, then when you compare those positions you would find that b's is less. So c[0] = b[0], then you would increment b's counter. Hopefully that makes a bit of sense. Didn't want to just code up the answer for ya.
Looking at the comment history of the poster and some of the people giving quite peculiar answers in this thread, it's quite possible that this isn't so much about developing as marketing.
 a = new int[10]; a[10]= 11; Slight issue here. You only allocated 10 elements in your array. By calling a[10], you tried to access a non-existent 11th element. Ya did the same thing with the array you named "b"
The tips and explanations on the site are quite ok, even if sometimes not complete (or sometimes code bits are missing). But the usage (and grammar) of the English language hurts my eyes.
Garbage collection. Not always ideal though.
You can dynamically generate new classes and modify the bytecode of existing classes at runtime (see: Javassist). I don't think C++ has anything really analogous. True reflection isn't something C++ supports either. I think there are pre-processors that can generate metadata for your code, but that means it won't work on pre-compiled libs. 
It is definitely possible to get hired without being formally trained or certified by an institution. Is it common? I would say its not rare but I would not say it is the majority. 
I wonder how much better or worse it would be to target LLVM.
Sorry about that, thanks very much for the response.
Doesn't Java count [10] as an array containing 11 elements because 0 is the initial element?
Thanks everyone for your input. I have just started learning Java and although I use vim for my other coding work it seemed approprite to use some IDE for java. As most beginners, I'm starting with Eclipse and have no opinion one way or the other. What I was concerned about, if when setting up a project using a particular IDE if that IDE's setup or configuration when starting a project would prohibit the use of another IDE.
No, it has the exact number of elements you provide in the brackets. So when declaring count[10] you will have 10 count elements indexed 0 to 9.
No need to be sorry, I was just trying to point you to the right sub. /r/javahelp is exactly made for these problems.
Yes it does. A JSF component library can use any technology it want without violating the spec.
many people use java for low latency wallstreet...so not sure I'd always say c++ for that one 
It's possible, but you'll need to do a lot of open source work to build up a resume before getting anything.
I had an interview with Google recently and this was a problem they wanted me to solve. The question was there are N sorted lists all have different lengths. How do you sort them into one list? The solution that mrtyejae gave is similar to what I did, just scaled for N lists. EDIT: merge, not sort
yes
Would this be a sufficient for loop to iterate over both? for (int ia=0, ib=0; ia &lt; a.length &amp;&amp; ib &lt; b.length; ib++,ia++) { if (a[ia] &lt; b[ib]) { //shift b[] one to the right } else { //shift a[] one to the right } }
Go download Android Studio. It's an IDE for Android by Google (based on the open source Intellij IDEA IDE). I used to have the R.java problem all of the time with Eclipse, but I haven't once with Android Studio. Also, as a bonus, you get Gradle dependency management. It's really wonderful. 
I must correct you. It is not uncommon to have video game server side written in Java. Or .Net. Or Erlang. And as games become more and more connected that could happen that some game would have the same number of C and Java developers in the team.
Always remember: PEMDAS, for order of operations. Please Excuse My Dreadful Anal Seepage.
Please ask in /r/javahelp or /r/csELI5. Those are better subreddits for getting answers to questions.
Sorry. Thanks. 
Then rename your class, it's generally not a good idea to name your classes like anything in the standard API. 
Team BEDMAS reporting.
e
It would be awesome to have something like this. A simple fluent API to add key value pairs. Suddenly you can have an appender that spits out Apache Avro and simultaneously direct to logstack.
A class can implement many interfaces, but can only inherit from one class. interface Playable { public void play(); } class Guitar extends MusicalInstrument implements Playable {...} class Monopoly extends BoardGame implements Playable {...} /* Now I can make a data structure of things that implement * Playable, and can call play() on them even though they do * completely different things. */ List&lt;Playable&gt; playableThings = new ArrayList&lt;Playable&gt;(); playableThings.add(new Guitar()); playableThings.add(new Monopoly()); for(Playable thing : playablethings) { //for each playable thing in the list playableThings thing.play(); } /* Just to be clear, MusicalInstrument and BoardGame may implement Playable, * but Guitar could just as easily inherit from WoodenStructure and Monopoly from * ThingsInMyCloset. The basic idea is that they're different things that share * some method(s), and that method can be implemented one way for Guitar and * another way for Monopoly */ Basically, it's used to make sure that everything in your data structure (in this case, a List) can be expected to implement some method(s), even if the meaning of such method is drastically different, or the types are completely different. You can play a guitar, and you can play Monopoly, but they're vastly different objects and "playing" either is a completely different action. More abstractly, an interface defines something's behavior, but says nothing about its implementation. Above I used a List data structure. List is just an interface (with methods like add(), etc.), but Java provides an implementation of the ArrayList type. If you look at the ArrayList class you'll see it's actually ArrayList&lt;T&gt; implements List {...} //It may be different, I'm just going off memory here Which means that when you make an ArrayList, it "wants" to have a "type", &lt;T&gt;. By &lt;T&gt;, I could mean an actual class, or just an interface. Either way if I have: class Pillow {...} //does not implement playable Pillow myPillow = new Pillow(); //the following would cause compiler errors playableThings.add(myPillow); myPillow.play(); These would cause compiler errors rather than runtime errors, which are preferred. 
The command design pattern is essentially encapsulating a "function" into an object so you can pass it around as an object. For example, imagine you had to implement a macro system for say a complex text editor. You could record the keystrokes, and then encapsulate the behaviour of that keystroke into a new instance of Runnable (an example of the command pattern in the Jdk.) Then you could store those "commands" in sequence (I.e an array list) and play them back. The observer pattern allows one object to observe another and respond to changes made to it. For example, you could observe a UI by registering as an observer to the panel. The panel will then notify its observers when something like a control has been added to it, when the mouse moves etc.. Adding an action listener to a button is an example of using the observer pattern.
I didn't see anyone being angry, just people stating that understanding Maven is a skill you 100% will need as a professional Java developer. I've been once since 2002 and Maven is simply a must in any large project. And since Spring is typically used in larger enterprise application it makes perfect sence to push people towards using Maven. Unfortunately there are a lot of developers who are dead set against learning new stuff unless they're forced to and they think they can solve the "jar hell" problem better than a battle-tested framework like Maven.
Most logging frameworks have appenders for databases, so it may be worth investigating. For instance, [logback's DBAppender](http://logback.qos.ch/manual/appenders.html) is able to associate key/values with a logging event. Look for "SLF4J Mapped Diagnostic Context". Otherwise, something like an event reactor or even a message bus might do it. This way you can use plain Java objects instead of raw text, and do whatever you want with it instead of just logging. See [Reactor](http://spring.io/blog/2013/05/13/reactor-a-foundation-for-asynchronous-applications-on-the-jvm), [Guava's EventBus](http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/eventbus/package-summary.html) or even [Apache Camel](http://camel.apache.org) (should be overkill for your needs). If you want to stick to raw text logging, you also may want to look at DevOps tools like [logstash](http://logstash.net). 
p() and r() are both member methods of your Math class. You should access them they same way as you accessing every other member method, via myMath variable. 
Ah , thank you. This fixed it. 
Ah, so that's why! I'm sorry, I am not an English, I didn't know... well, TIL unacceptable is in general a better choice than inadmissible
When you develop using an IDE like Eclipse you can do an exploded and incremental deployment. This means you can make a change in a single Java class file (within a method) and the IDE will deploy only that class. You can then refresh your page and see the change immediately. No need to rebuild the entire far. Compilation in Java is so fast that you don't notice it. It's as fast a saving the file.
http://stackoverflow.com/questions/1932254/in-memory-java-db 
sorry for your antivirus http://www.avgthreatlabs.com/website-safety-reports/domain/javatalk.org/domain-search-widget/www.avg.com.au/
Actually, I have been programming for years, Cobal, Assembler, Topspeed, Python, Ruby, SQL, etc. Have always used a text editor (Vim). I purchased a Samsung Galaxy 7 note and would really like to start developing for that platform. So I've started learning Java. Although, I'm sure I could just do it in Vim I think learning to use an IDE for Java coding makes more sense if planning to tackle larger project and trying to fit into that ecosystem and possibly find a job. Actually, as with most older programmers my difficulty is wrapping my brain around OOP but I'm taking the approach of just do it and understanding and comprehension will come with time. Generally I have found what every you code in the early stages is crap anyway and understanding and comprehension come with reflection on why your earlier programs are crap.
I see, I was not going to recommend this if you were new to programming, but since you are a seasoned developer you won't have trouble wrapping your head around it. If you use maven or gradle for dependency management you will have absolutely 0 problems with you and your partner using different IDEs. All of the major IDEs have really good integration with those and you can set up your project effortlessly. 
This doesn't really mention persistence or data recovery - seems like that would be pretty important 
Team Learning the Mnemonic is Actually Harder than Just Learning the Order by Itself.
You really only need one iteration over the total amount of elements in both arrays. So for example: int aIndex = 0, bIndex = 0; for (int i = 0; i &lt; a.length + b.length; i++) { // Your comparison stuff goes here, and increment your indexes }
"ACID transactions" - on the main page
I believe Lombok already has what you're describing: http://projectlombok.org/features/experimental/Builder.html
You could also copy the original array for each sort function to be performed on a new individual copy. This is how you would handle this when using immutable data sets in other languages. 
Thanks!
You need to post the .java source files, we can't (more, we don't want to) see the code.
Example of use: .......... if (defaultVideoPlayerFile == null &amp;&amp; defaultVideoPlayer2File == null) { throw new InitCheckException(new MessageHeaders().addClassAndMethod( errorLoadingSystemDataMessage + lineSeparator + "No valid video player application ('" + defaultVideoPlayerName + "' or '" + defaultVideoPlayer2Name + "') found.")); } 
Be advised that according to [Thread.getStackTrace()](http://docs.oracle.com/javase/7/docs/api/java/lang/Thread.html#getStackTrace%28%29) is it allowed for the JVM to return empty stack traces: &gt; Some virtual machines may, under some circumstances, omit one or more stack frames from the stack trace. In the extreme case, a virtual machine that has no stack trace information concerning this thread is permitted to return a zero-length array from this method.
While it's fun to learn how to do these things, you would be wise to learn the joys of using a decent logging framework. I'd recommend using slf4j with either log4j or logback as the backing implementation. Slf4j's variable interpolation alone is worth it.
We get so much blogspam on here
See what actual version it's using by going into CMD (Assuming you're on Windows, or Terminal if on Mac/Linux) and then run java -version This should tell you what Java you're on currently; to see if the update actually worked or not.
Out of curiosity, what are you planning to do with your degree?
educational software development
If someone takes his money, you should also submit to http://www.turnitin.com/en_us/features/originalitycheck/content so he gets burned.
The recent ones have started buying votes or creating sockpuppets.
I don't think its possible to compile and run desktop programs on your phone. But there is an app called aide if you have android and you can compile and build android apks.
Aw darn. Well thanks! Yeah I tried that one but I'm not familiar with android coding yet.
If you know some java why not check out some android development tutorials. The apps are written in java so there really isn't much of a learning curve. 
oh, nice, I haven't used Lombok in a long time.
This is what you are looking for: [AIDE](https://play.google.com/store/apps/details?id=com.aide.ui) EDIT: Just got an email from the developers of AIDE that they will add support for non-Android Java projects.
How about using an online IDE? + [IdeOne](http://ideone.com/) + ~~[Compilr](https://compilr.com/)~~ not free! + [CompileOnline](http://compileonline.com/)
Happened here too. Spent many hours trying to figure out which part of my code eats the exception as the only thing I was seeing was "caused by NullPointerException" and that's it. Too bad I don't remember what caused that, but I remember it was some optimization made by JIT.
Sooo.... Applets?
I'd much rather see a project to port chrome (or firefox) to Java. It seems like a fully-capable modern browser is the only library still missing in Java.
7 million dollars!?! So all 7 people who think this is a good idea will have to give 1 million each...
Their base goal is only 500K. I think they are being conservative, which seems like the right thing to do...
What a massive waste of effort that would be!
Why waste? Don't you want something that can manipulate a proper/live DOM of an actual web page on the JVM?
What about that Geocities page editor? It spawned a whole window of its own.
I would avoid extending Observable and Observer since you _must_ create an IS-A relationship - which in most cases either isn't possible or doesn't make any sense. The observer pattern is very easy to implement on your own.
JFreeChart does Gantts.
This seems like a terrible idea....
It looks like they've already published a browser. And most of the code to do it is already in the gwt project in the form of NPAPI plugins for devmode. I wonder how they came up with $7M. They must be overestimating.
Thanks, but `mvn test -Dorg.apache.sshd=ERROR` doesn't change the behavior on my machine.
I know, but this is not exactly like charts. http://www.netronic.com/products/varchart-jgantt/overview.html Looks good. Unfortunately it is not publicly available.
It's already done. Just look for the webview class in android. 
It seems like a better idea to me than asm.js, which is essentially an effort to create a new bytecode language in a subset of javascript. 
D3js, but you'll have to do some work.
Why are you not using an IDE? Eclipse has full android capabilities if you want something free. I'm not sure if the free version of IntelliJ does, but I know the full version of intelliJ ($99 for students) includes full android integration. You can actually write code on the computer, and when you hit run, it runs it directly on the USB-attached device. Cool shit for debugging.
I use edit plus and eclipse on my laptop, I was looking for something to use to do the same on my android. 
Yeah, that's probably what I'm going to do. Thanks! 
JEEZ!!! I'm sorry I misunderstood! Why not Ubuntu for Android? Then use gEdit or something of that nature for markup. Then you can compile and run with scripts in the console? Sorry, I don't know of an IDE that will run on Arm linux.
Does anyone actually use this? I have converged on SQLite for almost all my embedded database needs, but I'm always open to new things. I occasionally look at Derby and H2, but they've never offered anything that made me think "yeah, *this* is what I need".
So... Java... Script? ^^Damn ^^you ^^JS ^^why ^^did ^^you ^^have ^^to ^^fuck ^^it ^^up? ^^:/
Struts 1 or Struts 2? These are very different, pretty much entirely different.
The applet could be the entire page, but you couldn't use Java on a page authored with HTML like you can use JavaScript. So it's always a rectangle, but the rectangle can be as big as the entire page or as small as a pixel.
http://www.amazon.com/dp/B0055271RS
This project description is a terrible, terrible mess. * First goal: &gt; A highly capable computing hardware device running our software optimised for high performance wireless networking with open source drivers. Featuring a full featured Linux distribution, it is being designed to for various programming language commmunities to write non GPS, indoor proximity-based distributed web apps, for end user consumption by QR code, short url, or via the Uplink Browser. This is useful because the majority of computers out there ship with a wireless chipset that lack open source drivers, and hence are not fully featured enough to support our kernel based routing software. All software on the router will be released as open source, this is important because as recent disclosures about security breaches in the news media suggest, you probably want to be able to fully trust the software that runs on your home or office router. I have no idea what that is supposed to mean. Is it a computer? A localization device? A development platform? A router? I'm already running open-source software on my home router. I don't get the point. * Their second goal is apparently to re-purpose IPV6 and invent a new routing protocol, without explaining why they feel the current one is n. Also tying an IP address to exact GPS coordinates seem like a terrible idea, in particular for anyone having "net liberty" as a goal. * Third goal. OK, it is a political project now? I'm sure free speech will flourish on a platform where anyone can now where you live by looking up your IP address. &gt; We think the way to fix this is to to publish an implementation of open cryptographic protocols There is already a very good one. It is not an easy task, in fact a very hard one to achieve the required level of quality, even $5 million may be too low. &gt; We have some ideas that while they may fall short of full homomorphic encryption, would still be practically useful. "Some ideas", eh? Or maybe that's just techno-name-dropping bullshit. * Last goal, JVM in the browser is interesting, although I'm not convinced personally that it is a good idea to run a general purpose language in a browser, why not. But $7M? Ill pass. They're trying to do everything, and that's why this won't work.
This is pretty fundamental, not just for java. Keep in mind, though, that the two algorithms aren't the same (ie, they wont return the same result for same inputs). This is because the Comparable interface's zero return value doesn't correlate with equals method's 'true' return value. e.g. BigDecimal a = new BigDecimal("100.00"); BigDecimal b = new BigDecimal("100"); a.equals(b); //returns false a.compareTo(b); //returns 0
If you have the freedom to have time as a vertical axis, the [Primefaces Schedule component](http://www.primefaces.org/showcase/ui/schedule.jsf) (in day view) may work - however I think you'd be fighting the framework to get things to line up each item in its own column.
Fire up a debugger, set a breakpoint at the deletion line, and see if the file's actually deleted when the call is made - this will allow you to determine if some other call elsewhere in your code recreating the file.
please stop spamming your website.
http://hexapixel.com/software/ganttwidget This SWT Extension Library does what you want I've used it in an entreprise heavy client software, it works very well and is pretty fast
You should be able to achieve it with reflection through the constructors. Keep working on it, and you will get it to do what you want.
The official documentation lists all of the functions that a Java Object has: http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html You're missing hashCode(), which you should override if you're overriding equals() If you're dealing with an object of type Object, those are the only functions you can call on it. &gt; invariant condition Invariant conditions are just things that are true about any member of the class. For instance, List (of which ArrayList is an example) contains an ordered list of elements. Whenever you add an element, the `size()` of the List is increased. In fact, *it is always true* that `size()` returns the number of elements in a List. Another invariant would be in [SortedSet](http://docs.oracle.com/javase/7/docs/api/java/util/SortedSet.html), that "The set's iterator will traverse the set in ascending element order." This is an invariant about the set that is always true - the elements of this set are ordered (alphabetically, numerically, whatever). Invariants are the documented, immutable truths about objects of your class. ArrayLists contain things. Sets contain unique things. SortedSets contain ordered, unique things. It's up to your code to maintain those conditions. For instance, SortedSet has to keep its elements in order whenever it inserts a new element, otherwise the "sorted" invariant gets broken.
Pretty sure the return value of false indicates that the file's been deleted there and then, although I suppose the exact implementation may vary from JVM implementation to implementation - are you thinking of [deleteOnExit](http://docs.oracle.com/javase/6/docs/api/java/io/File.html#deleteOnExit\(\)) instead?
Thanks, I'll keep trying! Just need to know that it's actually achievable when the only constructor is private
Can someone explain to me why I should switch back to this when I've been using Guava for a couple of years?
Understanding that you are a self described "n00b" can you elaborate on how much you know of HTTP protocol, J2EE and Java in general so we can best structure the answer. 
Use one API in one commons JAR, 4 other commons JARS want to tag along.
Well at a quick glance the method in your html form is set to post so I'm not sure how you have the form to trigger the "get" method in your servlet. I would suggest attempting to either switching the form method to get or moving the code from doGet to doPost. 
Ah, sorry about that. I've been messing with a bunch of stuff trying to troubleshoot and thought I'd just try to change that to 'post' out of desperation. Now I see why you were asking how much I knew about HTTP protocol... Sorry about that, it's was a careless mistake. 
Nice
I agree, it is chickenshit to implement on your own. However, the OP asked about the Observer and Observable class and interface in Java, and I answered. Also, the constant paranoia about extending from base classes is overhyped. There are reasons to favor extension over composition in certain cases. And there's nothing that says you can't insert an observable as a member object in something to be observed, if extension is too restricting in a particular case. The pattern and the java.util.Observable/Observer implementations are still valid and still useful, and since it is built into the language, why not save yourself the trouble and reuse what Java gave ya?
Go for Spring HTTP invokers
There are ways of doing this in Junit safely, I think using the @Rule stuff: https://github.com/junit-team/junit/wiki/Rules @Rule public TemporaryFolder testFolder = new TemporaryFolder(); @Before public void setup() throws IOException { File testFile = testFolder.newFile(); //something... } 
Good question. Only thing that jumps out at me is the Trie stuff which I don't believe Guava has.
See links in my last comment in this thread.
Not true for commons-collections. There it's 560kB against Guava's 2MB.
That looks nice, thanks! I will have a look at it!
Thank you :) I think I will go with one of the other proposals though.
I'm glad I learned it before EJB 2.xx
I was on a conference once where Eclipse dev had a presentation about productivity improvements for using Eclipse. The first 10 minutes he was saying "Use Ctrl+Space to auto complete and Ctrl+1 to open the quick fix menu". I thought that's a nice start covering the basics anticipating deeper mechanics and 10 turned to 30 minutes where he demonstrated everything Eclipse can do via quick fix. 30 minutes later he closed with "check out the key binding options" and was done and leaving me a little disappointed. TL;DR: use Ctrl+Space and Ctrl+1 and look up the keybindings. There really isn't so much more I regularly use except type search and outline.
I'd personally argue that newer technologies like REST / SOAP have dominated the field more than RMI now due to their simplicity as well as interopability across multiple languages. Going Java to Java, RMI is a viable option, but I'd say... First consider SOAP / REST Secondly consider sockets Finally consider RMI 
You can set IntelliJ to hot deploy changes http://stackoverflow.com/questions/5558562/hot-deploy-jsp-after-modification-with-intellij-10-x-and-tomcat-6-x
On the Eclipse website, there is the "Users" section where you can find a lot of information including tutorials, documentation etc. [Eclipse users section](http://www.eclipse.org/users/)
I tried this but I wasn't satisfied. I mostly use Sublime Text for editing the static files and only really use IntelliJ for inspecting som java code and editing some pom's. I don't do much coding in IntelliJ, right now my work flow cosists of editing files in ST &gt; ctrl+f10 in IntelliJ &gt; reload browser. I want to reduce this to editing files in ST &gt; automatically reload tomcat and inject new code into the browser with livereload.
With the amount of time it took them to support Java 5 (Generics and other improvements) you will be able to continue writing Java 5 style code when the rest of the world already moved to Java 12. 
Even Hibernate will support generics no later than 2084. Maybe Spring 2085.
There's no reason. This is for people from 2005. I think they're attempting development-by-time-travel. The idea is probably to send this back to 2005 where it would still make sense and be reasonably on time.
&gt; I don't do much coding in IntelliJ But maybe you should ;) It's like people who want to drive 200 km/h, yet refuse to drive in a sports car and insist driving a soviet era trabant.
Just google for eclipse shortcuts/ eclipse tutorial, etc. If you are a vim user, try the vrapper plugin, it gives vim functionality in eclipse, it is very neat. Some of the shortcuts I use: Ctrl+Space -code completion Ctrl+1 - quick fix Ctrl+Shift+R - open resource Ctrl+PageUp/PageDown - move between opened files Ctrl+E; Ctrl+T - open Type hierarchy etc...
Try java.nio.file.Files.delete(tempFile.toPath()). It should throw a more informative exception in case of error...
Look into jrebel , or spring loaded, im pretty sure they both hotswap
Well, I'm using Java because I don't want to deal with the mess that is native code (actual compilers and linkers and flags and platforms and what not) myself.
In addition, just because it's not a Unit test, doesn't mean that it doesn't belong in a testing suite. I have many true Unit tests in my suite and a hand full of technically non Unit Tests in there. All of the tests are testing something important and should be run.
Isn't that Windows-only?
good catch.
I like [this tutorial](http://eclipsetutorial.sourceforge.net/totalbeginner.html) for its content, although the process of downloading it all is worse than it should be.
&gt; The error I keep seeing is 'constructor is not visible'. Did you call setAccessible(true) on the constructor object and did you provide the right arguments to the constructor?
I'm forced to use Java 6. The glacial pace Apache Commons moves in mirrors the technology adaptation pace of our customers. But why am I complaining. Friends are forced to use Java 1.4.
Yes, I did both of those things. Here is where it's going wrong and giving a NotSerializableException: constructor.setAccessible(true); User obj = constructor.newInstance(u.getName(), u.getUrl()); System.out.println(obj); out.writeObject(obj); The out.println works fine, but the out.writeObject brings up that exception. 
After `mvn test` returns to the shell prompt, the files still exist. There's a separate method just for that, `deleteOnExit()`, but even that doesn't change the behavior.
Use NetBeans, test in chrome with the [NetBeans connector](https://chrome.google.com/webstore/detail/netbeans-connector/hafdlehgocfcodbgjnpecfajgkeejnaa?hl=en) plugin. No need to redeploy, just reload and you'll be able to see your changes right away,
The important question is when their holiday sales are starting so I can upgrade my home copy.
This. I love supporting them, but for home use my budget is pretty tight
If I understood correctly, and you're primarily concerned about getting the changes you make to the template files picked up, your system probably has some sort of a debug mode which should accomplish this. Another way would be to run the backend in one server, and develop the AngularJS app in your normal development environment with a local web server. If you just set up the backend web server and the frontend web server on different ports, shouldn't that accomplish your goal?
**ArrayLists** work by using methods to access and modify elements. Arrays use brackets to access elements and methods to modify them (usually). Let's assume that you've changed **a** to an **ArrayList** instead of an array. In your if statement, you'd use *a.get(int index)* to retrieve an element. You can use that with *compareTo()*. Check out the [ArrayList API](http://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html) for more methods. There is a specific one in there that will allow you to replace an element with another one without having to shift elements around. I also assume that your class implements the interface **Comparable**.
The main argument against RMI is technology lock-in. You can't really "talk" against RMI with anything other than RMI, whereas webservices can be consumed pretty much by anything. Heck, a proper RESTful webservice can even be considered human readable. 
no? it is included in the standard JRE
[lol](http://www.reddit.com/r/reportthespammers/comments/1skbcv/overview_for_csfundamental/)
Funny that you would choose this topic to evangelize. The question surfaces the biggest gap between eclipse and Idea. Idea lacks the community support and the extensibility through extensions that eclipse has.
Mocking out the filesystem means your test won't catch errors due to differences in different platforms. Your module/class is likely to make some implicit assumptions about how the filesystem behaves beyond the contract in the Java API, and those assumptions may hold on one system but not another, and it would be great if your test suite would catch that instead of noticing it in production. This is something that I've been bitten by in a real system. Windows and *nix systems have differences in filesystem operations that seem to leak through the Java API. In particular, Windows tends to be much more fuzzy about letting you delete files with open references (like open Input/OutputStream), while *nix systems tend to be more liberal in that regard.
Sooo....is this basically saying that if you buy a license you get to upgrade if a new version is available within a year? And after that you have a year to renew your subscription but when you do it comes to effect the day that the last one expires? If so, sounds like a nice change.
&gt; In case you don’t renew your subscription for longer than a year after, it expires and the special “past-due renewal” cost applies. I really don't like the sound of this... it should start a new one year after I pay for an upgrade not have some magic fee for the lapsed time.
I'm trying to read more than I ought to into the following comment: &gt; Unfortunately we usually don’t publish information about sales in advance. Stay tuned to our blog and twitter ;-) Here's hoping that smiley at the end means there's something on the way.
Nope. Go watch Misko.
&gt; Is there any other better way to find overlap between two time range? Yep, read the JodaTime API; create [Intervals](http://joda-time.sourceforge.net/apidocs/org/joda/time/Interval.html), then simply use [Interval's overlap method](http://joda-time.sourceforge.net/apidocs/org/joda/time/Interval.html#overlap%28org.joda.time.ReadableInterval%29) and check if the result is non-null. Still, always interesting to see another way of going about things, and [BitSet](http://docs.oracle.com/javase/7/docs/api/java/util/BitSet.html)'s not a standard library class I've seen used before.
[You're still doing it wrong.](http://cukes.info/)
You can still mock the file system itself. And if doing so will result in a test that is unlikely to ever fail, then you shouldn't bother writing the test to begin with.
I watched a bit of the links you provided (thanks), and while he seems a bright guy with interesting ideas, I don't really find the videos worth my time to watch fully at the moment. Could you point to the part where he talks about the case I posted explicitly? Also, I'm not really interested in religiously following one guy's ideas of purity. I build my software (and tests) based on pragmatism.
Hah, that's funny. As if Hibernate would ever evolve.
It is worded strangely, but you need to renew your subscribtion before the old one expires, so that you have one continuous subscription.
Ahh. Some clarification: &gt;Andrey Cheptsov says: December 6, 2013 at 6:37 pm Renewal means buying one more year of subscription (starting from it’s expiration date). The cost for “renewal” is 50% of “a new license” price, just as regular upgrade (e.g. $99). &gt;Example: if you purchase a new license or upgrade on December 6, 2014 (/u/clavalle note --- I think he meant 2013 here) you’ll get one year of subscription. The subscription will expire on December 6, 2014. So if you renew it (you can do it whenever you want before it’s expired) you’ll get one more year (until December 6, 2015). &gt;Past-due renewal means “restarting: your subscription from a new date. The cost for “past-due renewal” is 75% of “a new license” price (e.g. $149 instead of $199). &gt;Example: if you purchased a new license or upgraded on December 6, 2014; then didn’t renew your subscription and it’s expired on December 6, 2014. In December, 2015 you decided to upgrade, that when “past-due renewal” applies, so you should pay $149 instead of $99. &gt;But once again, it is important to note that your license never expires, i.e. you can continue using the product. This seems to say that you can go past your renewal date and still use IDEA. If you renew afterward you have a choice...pay the $99 and get the renewal from your original renewal date or pay $150 and start from the date of renewal. So, if you are at the day before your year after your renewal ends, you can pay $150 to re-up on that date rather than getting a $99 renewal that is only good for one day.
~~I rarely answer questions because I'm afraid of being wrong, but it looks like the output would be 1 2 2. After the for loop is done, Java will NOT go back to the list2=list1. The program should just terminate.~~ Edit: I'm wrong.
list2 = list1 will permanently set to memory reference of list2 to be the same as list1, so the answer is 0 1 2.
Oh, my bad. It seems it does [now](http://en.wikipedia.org/wiki/JavaFX#JavaFX_2.2).
* Line 5 creates an array in memory and stores the location of that array in **list1**. * Line 6 creates an array in memory and stores the location of that array in **list2**. * Line 7 takes the location stored in **list1** and saves a copy (of the location to the array, not the array itself) to **list2**. * After line 7 the array that was created on line 6 has been *lost* because it's location isn't stored in any variable. Since **list1** and **list2** both contain the same location (sometimes called reference or pointer) they both will access the same array when they are used. In other words **list1** and **list2** are interchangeable after line 7.
Though you can't get reimbursed for it, it's worth noting that: assuming you a) are in the US, b) work in the IT industry, and c) itemize your deductions, I *think* you can deduct the cost of a personal license come tax time. Page A-11, Line 21: http://www.irs.gov/pub/irs-pdf/i1040sca.pdf (I'd consider it under the head of small tools or supplies needed for your job.) (Don't take my word for it, consult your tax advisor, blah blah blah)
In this case the truth is not horrible.
&gt; for the Really Impatient \*clicks link\* &gt; In my French class Nope. TL;DR.
&gt; I rarely answer questions because I'm afraid of being wrong [...] &gt; Edit: I'm wrong. Better luck next time. &lt;3 
You're right on Windows, but it's a different story on Linux. Visit /r/unixporn for some glorious terminals!
Very sexy designs for sure. Most of them remind me of how "hackers" are perceived in movies. Screens full of code and ASCII art and breaching the mainframe while routing the network through the nearest satellite node. Don't forget to flush the terminal and disrupt the connection!
A lot of people set the backgrounds of their IDE's to a dark color so as to reduce eyestrain. If you're talking console console, then maybe vim? I don't know many who use it for Java but that could be it.
It's much easier on the eyes to code on a black background, at least for me. I'm one of those old school guys who loves using vi, but I do use sublime text and eclipse sometimes (sublime has a black bg also). 
Similar for me. I'm sort a cross between developer and sysadmin, so I use vim (combined with byobu/tmux) a lot, especially when bouncing between systems. But for any serious development work, I usually prefer the IDE integrations. I know about eclim of course, but I hate Eclipse and much prefer IntelliJ.
I know it's not quite what you asked, but have you considered using IntelliJ instead? I find it *much* easier to work with than Eclipse these days. 
Vi/Vim If Ron Swanson were a programmer, this is what he would use. You can get it in the Linux terminal or the Windows command line.
They were saying that the program doesn't loop back through to the statement list2 = list1. Instead both list2 and list1 point to the same memory location, so they are the same array basically.
Gwt has gantt widget: http://code.google.com/p/gwtgantt/
Whoops. We seem to have missed the gist of that gist you were looking for.
I always recommend Head First Java. Really well done book. It's not a "reference" though...it just teaches you Java in a really painless way.
Yes it's pretty popular.
For me the way that I have learned has been through looking around for a problem which I want a piece of software to solve. Then I figure out how to do it. For example: Our test department at a company I used to work for needed a way to generate unique government ID's for test examples for several countries. I made a piece of software to do what they needed.
Fascinating! Maybe I can startup with a few project ideas and start implementing them. That's tells me to think about internship.
You're making the mistake that every young developer does. You hop in thinking that you'll be away making rich applications with cool user interfaces inside of a couple days, but you are discouraged by seeing nothing but console output for days and days. Stick with it. The GUI stuff comes in time. It's better to have a firm grasp on OO concepts and different approaches to solving a problem before you start learning GUI stuff.
The general advice I always get is: If interoperability is not an issue and the traffic is big, then use remote EJB3 calls, because they are much faster. If interoperability IS an issue, then use JAX-WS if you can choose the underlying protocol (because we can automate server code generation, client code generation and tests) and JAX-RS if you have to work with those damn hipsters.
For me at any rate, I learn best by actually doing something which has an impact on things around me, rather than some abstract project which has nothing to do with real life.
It says what it does on the MAIN web page, the link provided in here points to the release description.
Developing GUIs in Swing is a bit more of an advanced topic because you have to learn the layout managers and using interfaces for event management. Personally, I like this because after using [GridBagLayout](http://docs.oracle.com/javase/tutorial/uiswing/layout/gridbag.html) for so long, I can think in [GridBagConstraint](http://docs.oracle.com/javase/7/docs/api/java/awt/GridBagConstraints.html)s! You will have to understand the Java library and certain OOP techniques before you can write UIs in Java *by hand*. You can make it easier by using a UI builder tool like Matisse (Netbeans IDE) which will let you drag and drop Swing components. JavaFX is the UI that is supposed to replace Swing, and it comes with a [Scene Builder](http://docs.oracle.com/javafx/scenebuilder/1/get_started/jsbpub-get_started.htm) which you can play with. This will let you get started with Swing or JavaFX for just playing around. You will eventually have to learn the libraries to do more advanced things, however.
One month? Ehh, it ~~might~~ will probably be enough to get you caught up to most, if not all of your class. TheNewBoston on youtube has some pretty good visual tutorials. Also, /r/learnprogramming and /r/learnjava would be pretty useful for your questions, and the generic starting-up. Myself, and I'm sure the rest of /r/java would be available to help you out with any specific questions you have, but the question of 'how to start' is always really dependent on how you learn best.
Thank you guys, downloading eclipse now. Im actually at work and I have time to sit around and learn this... 
i recommend watching udemy beginner java course by john purcell, not only will you learn useful eclipse shortcuts that I never knew about, but he teaches very clearly and good examples. Prob a good substitute for your class if its just from a local community or something very intro.
I always recommend any of the Head First books. Also https://learnjavathehardway.org/ is a great buy. Very cheap. I would recommend doing the learn java the hard way then head first. 
IntellijIDEA!!
My advise for when starting out is to avoid an IDE at the very beginning. Just use your favourite text editor and the command line. I think it's best to get used to using javac and learning to read and understand the error messages it provides. An ide will give you red lines and such on erroneous code and provide solutions to many problems at a click. Providing you with the opportunity not to have to think about the problem at all. Learning to debug from a compiler warning is an invaluable skill and will end up saving you time in the medium term. I have been a teaching assistant to an Intro to Java class this semester and the amount of students who ask me for help with a simple issue that is precisely detailed in a helpful error message is very surprising considering they've been coding in Java since September. Going with this method will also force you to become familiar with a command line environment at the same time too \o/ This is a brilliant, hands-on kind of tutorial from first principles that I would suggest looking at from time to time http://programmingbydoing.com/ Edit - If you must use an IDE try to find out which environment your class will be using and get a head start on it's functionality.
Do it
Thank you for quick answer! I tried your suggestion and it won't stop spitting errors in my face... Might it be that i have worked on the files on both windows and mac caused any problems?
Did you get them started off the bat with swing? That's a pretty difficult library without any prior programming experience.
My source is generally /r/java. Otherwise I just search for random projects and questions on Google, StackOverflow and programmers.stackexchange.com
This was going to be my answer. Add /r/programming and you will probably be covered with the necessary news.
Why? What's wrong with reddit? If you hang out here long enough you'll get links to plenty of other sites like DZone and DrJobbs and stuff
I have several years of experience as a programmer and few months as a reddit user. And I found programming related channels here to be the most convenient aggregator of technology related info on the internet. 
Where's the part where he profiles the performance of the original versus his changed settings? Without that step this article really isn't much more than handwaving (and advertising).
Follow this up with Head First Design Patterns and you're set. 
You can do that? Java accepts \0 instead of space or tab?
Obviously not, although I have no idea how OP got them in the source in the first place.
Reddit will link you to the interesting content on the non-reddit sites.
As much as I like IntelliJ, I would never recommend to a beginner.
Same error
I wonder how I got them into the code to... Can it be syncing between mac and win using github?
Oh, shit--your null chars are at the *end* of the line, not the beginning--no wonder reformatting didn't work. You'll probably just have to go in and remove all whitespace from the end of the offending lines.
A place to check out is the Devoxx conference videos. They happen every year and you can find them online. This year was particularly good with the talks on Java 8 EDIT: [Here's the 2013 UK Conference](http://www.parleys.com/channel/516409c9e4b082c6506c9e3b/presentations?sort=date&amp;state=public)
&lt;2cents&gt; Okay so as a fellow newbie/rookie in the field, I want to say this: **You will NEVER know and be able to keep up with everything there is and you will NEVER be able to the best at everything.** That being said, keeping up to date and having a general knowledge of what's trending is awesome, but don't burn yourself out or spread yourself too thin by trying to master everything, being really, really good/knowledgeable at a few things is much better than having an amateur's knowledge about everything. My own opinion aside, I'm really suprised no one has mentioned github yet. You can do some really cool searches based on languages, stars, forks, and follows. Here's a quick link for reference: https://github.com/trending?l=java As well, anything related to No Fluff Just Stuff (NFJS) is also pretty awesome. http://nofluffjuststuff.com/home/magazine_subscribe The year subscription is WELL worth $50.00, I highly recommend it. They have indepth articles that in general go far beyond a "Hello World". EDIT: On the NFJS link, scroll down for a preview of articles to get an idea of what they cover. &lt;/2cents&gt;
Couldn't find any trailing whitspaces after opening in textwrangler and Textedit.. Can it be the encoding? I use utf-16.
I solved it! :D Turned out that the javadoc command does not like UTF-16 encoding... Converting all files to UTF-8 solved all errors :D Thanks for your help!
Go to bookstore purchase java begginer book, read book away from computer to avoid distractions, hand write all code examples(had to have write code in many classes, always bitched about it but looking back I think it helped) when you feel comfortable with basic things and understand them on paper, move to computer. You can use a text editor or download an ide, you could honestly just download the jdk + netbeans package and work from there. Everyone will have their preferred tool but I say learn to program first and find the ide or editor that fills your needs
I usually visit the FF. r/programming r/java java.dzone.com javacodegeeks.com 
I wouldn't really recommend Eclipse to a beginner either. For some reason though, I see it as "less features in your face" than IntelliJ though. And Netbeans seems to have the fewest features "in your face" than Eclipse, IMO.
Seven years ago the answer would have been Eric Thauvin's linkblog. My current solution is throwing rss feeds into http://getprismatic.com/ It's not terrible.
&gt; What's wrong with reddit? The problem specifically in this case is that every single Java post in r/programming swiftly descends into "lol Java sucks ballz" followed by "C# has this already" and the obligatory link to ["lol Java is verbose guyz, dae patterns lol?"](http://docs.spring.io/spring/docs/2.5.x/api/org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.html)
Its not quite as good as it once was, but the [blogs on java.net](https://www.java.net//blogfront) can be very excelent. 
Learn a good Java IDE like IntelliJ or Eclipse. They make it easy to refactor your code and can even give you tips on how to improve your code (you mught need plugins like findBugs and checkStyle in Eclipse). Use meaningful variable names and don't declare them until they are needed. You have a lot of duplicated code. You can refactor that out into reusable methods. For example you might have a method called getGrade() private static short getGrade(Scanner scan) { short grade; grade = scan.nextShort(); if (grade &lt; 0) { System.out.println("Grade may not be lower than 0"); grade = 0; } if (grade &gt; 120) { System.out.println("Grade may not be higher than 120"); grade = 120; } return grade; } Another called getAverageGrades() private static double getAverageGrades(short numGrades, Scanner scan) { double average; short count = 1, sum = 0; do { System.out.println("Enter grade " + count); short grade = getGrade(scan); count++; sum += grade; } while (count &lt;= numGrades); average = (sum) / count; return average; } You can prompt for your test grades first then call getAverageGrades, then prompt for your daily grades and call getAverageGrades again. This is just a start. With a few refactorings you can reduce the amount of code you have by half.
Hahaha, well that's why I stick to /r/java. Every time I mention I develop in Java I get suggested a new language.
`implements` means "provides the implementation of". That will be done by the Type which is used at runtime. The `extends` refers to the generic itself. `G` is just requiring these things of the later identified class, so we use the same syntax as when one interface extends another.
For AccuWeather, you can find more information [here](http://api.accuweather.com/developers/) &gt; The AccuWeather API provides subscribers access to location based weather data via a simple RESTful web interface Most APIs (that I know of) use this method, if you don't know what it means, you should look it up - basically you access an URL and get some data as response, usually as JSON or XML. I've been recommended the [worldweatheronline API](http://developer.worldweatheronline.com/io-docs) and it seems fairly easy to use. As you need an API Key, you can signup [here](http://developer.worldweatheronline.com/) for a free account. You can find the different available methods in the [documentation](http://developer.worldweatheronline.com/documentation) and see howto build your URL, for instance : ----- URL : http://api.worldweatheronline.com/free/v1/weather.ashx q (query) : London,United+Kingdom num_of_days : 2 key : &lt;your API Key&gt; ----- Would result in the following URL : http://api.worldweatheronline.com/free/v1/weather.ashx?q=London,United+Kingdom&amp;num_of_days=2&amp;key=&lt;your API Key&gt; First parameter concatenated with ?, additional ones with &amp;, use + instead of space within parameters There are also example outputs in the documentation so you can use those to see how your Java Objects should look like. If you want to keep it simple, you could just turn each XML element that has children into a class and if it doesn't have children turn it into an attribute of its parent.. As for sending the actual request in java : http://stackoverflow.com/questions/1359689/how-to-send-http-request-in-java You can probably find some library to turn the response into an instance of your java class without having to parse the whole thing, if you want to use JSON you could use [Google GSON](https://code.google.com/p/google-gson/) for instance ------ It would help if you had any specific question in mind, the above is how I'd start on this but there might very well be better alternatives
Videos from Devoxx, InfoQ, Parsleys, StrangeLoop and NDC. Java.net and OpenJDK postings Whatever might come up here or in HN.
Oh yay! I enjoyed last years, glad to see it come back. Didn't realize it was half over already!
This is the sub for Java, JavaScript is a very different language. Go try /r/javascript instead :)
I think it's mostly for verbosity. There's no real technical reason for having two different keywords on regular classes to begin with. The compiler could easily understand: class MyClass extends AbstractClass, SomeInterface, SomeOtherInterface {... and ensure only one of them is a class. The two different keyword are all for user sake, so that he can easily read what's happening. Probably this slight advantage isn't worth the decreased readability in generic bounds. Class definitions would start to grow very long, just imagine cases with multiple generics (or generics of generics): Map&lt;ID extends Number implements Comparable&lt;ID&gt;, Student extends Person implements Iterable&lt; etc etc etc
Stanford has a brilliant online video course for java http://see.stanford.edu/see/lecturelist.aspx?coll=824a47e1-135f-4508-a5aa-866adcae1111
Have a look at the [Oracle Java tutorials](http://docs.oracle.com/javase/tutorial/) to get you started. They are free and IMHO very good. Another option is [Learn Java the Hard Way](https://learnjavathehardway.org/) - not entirely free, but the first chapters are free and should get you started. Also: The discussion whether to use an IDE, or not depends. I think that one should know the absolute basics on how to write and compile java code, but for anything in extent to this, I'd strongly vote for an IDE - the context help is so convenient. Possibly have a look at [DrJava](http://drjava.org/) or [JGrasp](http://www.jgrasp.org/) for beginning. (I have started with eclipse and still am very happy with it. The learning curve is not too bad and it's not overpacked with functions from the start.)
The performance profiling will come in the 2nd post (he mentions that in his summary), it took plenty of time for him just to clear out the red herrings!
Thanks for mentioning this, we're looking into the blog's performance, oh the irony of being a bunch of performance tuning folks... :-)
I love Cucumber, but for this project, I'm using bare bones JUnit wherever I can. Feel free to post a link to a good Cucumber-JUnit or Cucumber-Maven integration framework, might use it on other projects. How much do I love Cucumber? Even my [Hello World](https://github.com/mcandre/mcandre/tree/master/ruby/hello) is BDD'd.
Why not move to using quartz scheduler instead of crontab?
Wait for tomorrow, when there's a special treaty about things that will go wrong on this year's Friday, Dec 13th (in case you're superstitious)
we're running everything from crontab right now I believe. Trying to put things in a convenient place.
I've taken a brief look at quartz scheduler, thing is that I think everything else runs in crontab. So I think having two different schedulers might cause some conflicts? I'm not sure.
Wow... How did I miss that, is there a way to know which user is running the jar?
System.getenv("USER")
We did the switch from crontab to quartz, never looked back. I get it, some things need to be on there, but it has any interaction with your system/framework, then move it to a scheduler.
If it is going into the catch, do this: e.printStackTrace(); This will give you a hint as to what is going wrong.
I'm not actually sure about this, but you should probably make sure the file exists first. File f= new File("pleasework.txt"); if(f.exists() || f.createNewFile()) { BufferedWriter bw = new BufferedWriter(new FileWriter(f)); for(&lt;&lt;YOURTYPE&gt;&gt; result : myArray) { bw.write(result); } // bw.flush(); no need to flush an output stream before closing, it does it automatically bw.close(); this.lblAnswer.setText("Written"); } else { //it didn't get created for some reason. }
Try printing and reading the stacktrace, they're usually quite helpful. (I think you can use `e.printStackTrace()`.) Also do not bake your file writing code into your GUI code. At the least, put your file ouput (and **ONLY** your file output, **NO GUI CODE**) in a separate (possibly static) method. Ideally, put it in a separate class.
From the Java Doc of the FileWriter constructor. Throws: IOException - if the file exists but is a directory rather than a regular file, does not exist but cannot be created, or cannot be opened for any other reason
Thank you, where do you recommend I tell it to do so? I apologize I'm a beginner in Java and am most comfortable with C++.
Put it in the catch statement.
quartz can read/parse the crontab format if you need. But I would recommend using quartz also over crontab 
&gt; it appears to do it's job just fine, as far as I can tell. It's not a matter of whether or not it's "doing it's job," it's a matter of code clarity and organization. In software engineering, [separation of concerns](http://en.wikipedia.org/wiki/Separation_of_concerns) is a very important practice to follow to keep your program sane and stop it from turning into a [big ball of mud](http://en.wikipedia.org/wiki/Big_ball_of_mud). Not to sound condescending but most newbies tend to disregard stuff like this. In spite of that I'll say it to everyone, simply because it's critical in any project. Mentioning you're more familiar with C++ implies (to me) that maybe you've been programming for a little while now and should really start caring about stuff like that. And for the record, separating your GUI code from your logic code is good practice in **any language**, including C++. It's not "a Java thing," it's "a programming thing." And another reason I make this point is because your `IOException` is completely independent of what your GUI is doing. Your `IOException` is coming from file code. The fact that you're writing a Swing form is completely irrelevant (the Swing GUI is "a separate concern"). Being able to make this distinction will * make it easier for you to realize where you need help * make it easier to formulate questions when you know what specific part of your program you're asking questions about Again, this applies to all programming and is not Java specific. As for your problem, the stacktrace itself will probably give you a good idea of what's wrong. If you give us the stacktrace it will make it easier to help you. I don't want to know *that* you're printing a stacktrace, I actually want to know what the stacktrace is.
You don't need to know the file location, just enter the system command 'crontab -l' to get the current user's list. If there's nothing there then it'll output "no crontab for [username]". Before running the command simply check if crontab is installed, it should be for most distributions.
Hey, thank you very much. I didn't take your comment as condescending, I actually really appreciate that. You hit the nail on the head in guessing that I've been coding in C++ for a little while now and I'm glad that you're recommending I start getting into the heavier stuff (kind of opened my eyes a bit more as to how far I've come) I still look at myself as a complete noob most of the time. The IOException thing is completely alien to me because I don't recall ever coming across anything like that in C++. I'm also going to sound like an idiot here, I'm not sure where to print the stacktrace, I tried doing it to the text of my label just so I could see what's going on when I ran it, but it wouldn't work. Where would you recommend I implant a print statement for that so that I can see what's going on?
I'm really surprised this hasn't been mentioned, but you might want to consider restructuring your try-catch statement to a try-catch-finally, like this: try { BufferedWriter bw = new BufferedWriter(new FileWriter("pleasework.txt")); for (int i=0;i&lt;myArray.length;i++){ result = myArray[i]; bw.write(result); } this.lblAnswer.setText("Written"); } catch (IOException e) { this.lblAnswer.setText("Not written"); } finally { bw.flush(); bw.close(); } The finally block will run no matter what, whether there is an error or not. This means your buffered writer will always be closed, which is what you want. 
Close, but that won't quite build actually -- your bw variable is within scope of the try {} block and not visible to the finally {} block; you'd just have to define the BufferedWriter (and generally assign to null) before the try, then in the finally check for null and close. The flush could also be redundant as it is a lot with the writers on calling close. But yes, definitely would want to handle your resources properly.
Always use books.
You can also cut down on, though probably not eliminate, the loading delay while scrolling by preloading the surrounding images. Might have to play with how far out you load the images based on how quickly people normally move through the scrollpane.
You can move them over to quartz over time. It won't cause any conflicts. One of the appliances my company makes uses both quartz and crontab. Most appliances are running off of just quartz now though, and we're going through all the appliances and upgrading them now. No more crontab.
Any particular reason you are not using one of the pre-existing byte code obfuscators like yGuard? Do they lack features you desire? 
In the event that you're still in doubt about this method, this is the way Google Maps does it.
yes. reverse the question. First have a look at the frenquency of launch in the crontab. change it if needed. add some. You can launch it with different parameter if needed. 
Was going to argue w/ toString, but I can't think of a counter-example. Why are statics bad? For public final utility classes, they are essential; and even for OO classes, sometimes a widely used private static function is helpful.
Have you tried running this code? Step through it using the debugger and you'll get your answer. It might also help to think through it equationally: starString(0) = "*" starString(1) = s + s = starString(0) + starString(0) = "*" + "*" = "**" starString(2) = s + s = starString(1) + starString(1) = "**" + "**" = "****" starString(3) = s + s = starString(2) + starString(2) = "****" + "****" = "********" etc...
Specifically, [this comment](http://www.reddit.com/r/java/comments/1srmor/having_a_hard_time_with_recursion/ce0k9vv).
&gt; I got most of the program working Does your code compile?
The book Programming Game AI By Example I hear is good, haven't looked at it though, so I may be wrong. I have no Idea who write it though, so just look up the title
I have been using Spring 4 for a few months now, along with Java 8 it's looking pretty awesome!
Issue resolved. Thanks!
Yes, because those videos are from conference talks. You get to learn a lot from what people do in real life projects. What problems were faced and how they got solved. History from computing as well. Very important to learn from past techniques and approaches to software development since the dawn of the industry. Software development is only 20% coding. Design, architecture, team working takes the remaining 80%. 
Based on the table of contents for your textbook, you're doing files and string processing. Try creating a ceasar cipher program, like the one described here: http://inventwithpython.com/chapter14.html Also, /r/learnprogramming is a better place for these types of questions.
In my opinion, this is a difficult example to introduce someone to recursion. It basically works because of the following property: 2^n = 2^(n-1) + 2^(n-1) Recursion is **always** about breaking down a big problem into one (or more) smaller problems. But the smaller problems have to be solved in the same way as the big problem. In the above problem, in order to solve 2^n , you first solve 2^(n-1). 2^(n-1) is in turn solved by solving 2^(n-2) , and so on. You keep doing this until you get to your base case, which has a hard-coded solution. In this example, the base case would be 2^0 = 1. ============= I think an easier example would be printing out a string of 'x's with size n. For example, xString(5) = 'xxxxx'. Hopefully you can see that xString(5) = 'x' + xString(4). And the base case is xString(0) = ''. (empty string... e.g. zero 'x's) So, here would be my algorithm: public String xString(int n) { if (n == 0) { return ""; } else { return "x" + xString(n-1); } } ====== ^Please ^note: ^This ^is ^a ^stupid ^usage ^of ^recursion ^in ^the ^real ^world. ^You ^would ^never ^implement ^it ^like ^this. ^And ^if ^you ^do, ^I ^will ^find ^you ^and ^make ^you ^rewrite ^it. ^But ^hopefully ^the ^example ^is ^of ^some ^theoretical ^help.
&gt; Why wouldn't this just produce only one star every time? Perhaps it would be educational for you to explain why you think it *would* produce only one star every time. Try stepping through the code in your head, starting with the simplest case, starString(0). If you call starString(0) then it obviously just returns "*" due to the "if (n == 0)" case. So let's try the next number up. If you call starString(1) then it runs this code: String s = starString(n - 1); return s + s; which first call starString(n-1) - now n is 1, so n-1 is 0, so we'll be calling starString(0), and we've already determined that starString(0) returns "\*", so s here will be set to "\*". So what does "return s+s" return? That's right, it's \"*" + "\*", which is "\*\*". Now let's try the next case, starString(2). Again, n isn't 0, so it will go to this code again: String s = starString(n - 1); return s + s; n is 2, so n-1 is 1, therefore we're now going to call starString(1), which we've just shown returns "\*\*". Then the next line returns "\*\*" + "\*\*", i.e "\*\*\*\*". Then if you try starString(3), it will first call starString(2), setting s to "\*\*\*\*", then it returns s + s, or "\*\*\*\*" + "\*\*\*\*", i.e. "\*\*\*\*\*\*\*\*". So if you look closely you'll see that each time, by returning s+s, it's returning a string twice as long as the invocation with n-1. Does that help, or are you now more confused? 
If your calculation results depend on how often does the app run, I'd probably record the last time your app was executed somewhere on a file or on database and calculate the difference between that and current time on startup. Other way is to make it explicitly configurable in command line and tell your app explicitly how often is it being executed. Much easier to test it this way as well. If it runs often, say every 5 minutes or less, I'd seriously look into Quartz or similar framework for job scheduling. In this case JVM startup costs will be significant, and it's better to schedule a job inside Java than to startup/shotdown entire JVM every minute. How long does your Java app take to startup? How long to execute? --Coder
Do people still use Spring? What's the need of Spring today when everything is already in Java EE? I mean, why add a layer on top of Java EE just to do things differently, but not in any way better?
Funny thing is that typically it's an other language everytime too!
You could check the [user.name](http://docs.oracle.com/javase/tutorial/essential/environment/sysprop.html) property.
Why on Earth would you implement that recursively? Just do `pow(2, n)` and make a string with that many stars.
He meant the half-assed annotation layer on top of Enterprise beans I think.
Great idea, terrible execution on presentation.
Why don't you read the article? Everything that Spring does and everything that Java EE does are not at all the same. Spring and Java EE are complementary technologies. I think you misunderstand what Spring is. It is an integration layer that works with Java EE but also just as easily with non-Java EE. Comparing Spring to Java EE is apples to oranges.
Spring 4, websockets, java8. It's a great time to be a java programmer.
Why not create your own?
Yeah this is a pretty awful example, more intuitive examples like Fibonacci (or any other intrinsically recursive mathematical function) are much more effective at seeing how recursion works.
Spring 4 is out! Time for more battles in the Spring vs Java EE holy war!
Please don't teach another generation of would-be programmers to roll their own connection pools, JDBC utilities and singleton database connection classes.
This is just for the basic *how to connect to databases using JDBC* kind of thing. Everything should start from the basics. Later on, I'll be teaching them on Hibernate/JPA and some NoSQL as well. These guys have no experience with databases whatsoever so I think this is a good start.
JMS v2 as well. Both Spring and JavaEE are quite good. Big benefit of JavaEE is that you push something into a server, and have most of things like transactions (including XA), security, lifecycle, etc taken care for you. With Spring, you have to pick and choose various frameworks and set them up in your context. More flexibility at the cost of more work. And you end up with less standard approach. But you don't always want to run an entire JavaEE server for a small app. I guess both have their uses... Although I HATE to deal with Spring xml configuration hell- 10 subprojects with stupid dependencies including each others contexts each with hundreds if not thousands of lines... And I've seen this in last 3 places I worked for. --Coder
MVC is done bij JSF, Injection is done by CDI (which does it much better), AOP in a constrained but much more comprehensible way by CDI and the Interceptor spec among others. Authentication is done by JASPIC, Authorization is done by JACC.
You can do it with 90% less xml for probably 5 years now and can get it near 0 as of the last 2 years or so. Any framework or language looks bad when it's poorly implemented. Using STS for eclipse or intellij can discover your wiring and link it visually which makes a huge difference. 
&gt;But you don't always want to run an entire JavaEE server for a small app. Most Java EE servers only start the services that are actually being used, there is no harm in deploying to a full fledged Java EE server. Most Spring projects I worked on, where everything and the kitchen sink is placed in to the WAR file, result in a WAR file that is several megabytes in size, 100MB + is not uncommon, and deploying this WAR file takes a long time since there is a bunch of initialization that needs to be done every time. Java EE projects tend to result in WAR files that are lest than 1 MB in size, and deploy very quickly. I never got the whole argument of being able to deploy to a servlet container as an advantage, you have to put everything in your WAR file, so your app is bloated.
Yes, I know I can use JavaEE annotations and Spring annotations for injection and configuration and metadata. I'm complaining more about poor implementations I ran into than about Spring limitations...
If you're doing enterprise integration, Java EE is great. If you can use modern app servers, use Java EE. The standard is good, if you are writing standard applications. People have figured out the configuration for you, so why waste effort? If you're stuck on older app servers (Weblogic 10.3) or are using non-Java EE technologies (Hadoop, Akka, Apache MINA, NoSQL), or prefer lighter weight app servers (Jetty), Spring provides excellent tools to integrate technologies. You can leverage both Java EE and everything else. Spring configuration has been getting much better with each new release. Just like Java EE. Both communities are aware of the pain points, and both are responsive to developer needs. Spring has always been on the leading edge, unencumbered by the JCP and legacy, at the forefront of adopting new technologies into Java applications. Java EE is slower to adopt new technologies due to the standardization process, but the result is a solid foundation and more standard ways of doing things. This is what is great about Java. There is plenty of (mostly healthy) competition.
&gt; Most Spring projects I worked on, where everything and the kitchen sink &gt; is placed in to the WAR file, result in a WAR file that is several megabytes &gt; in size, 100MB + is not uncommon I'm curious what kind of projects you've worked on. In our WAR, less than 15MB is Spring and Hibernate JARs. The vast majority of our WAR is made of application JARs and other third-party JARs that represent application dependencies that have nothing to do with Java EE. This has been the case for most of the projects that I've worked on. Spring has very many, very tiny JARs for precisely this reason, so you don't bloat your WAR with unnecessary code. In the bad old days before Maven, I do remember kitchen sink approach because every dependency had to ship their own distribution of JARs.
&gt;Oracle, though, has been campaigning to get Spring developers to move over to Java EE, contending there are no longer any advantages to Spring. I think the only reason EJBs got better was due to competition from Spring and other open source frameworks. 
&gt; new development New development for pure Java EE apps. If you are integrating non-Java EE technologies or are not developing Java EE applications at all (Hadoop, Akka, MINA, NoSql), all of the new integration with these technologies added by Spring 4 is worth a look.
Keeping huge code bases from 10 years ago relevant today
Back then indeed, but nowadays Java EE is about much more than just EJB.
Agreed. Correct if I am wrong but Java EE is basically a set of standard libraries and APIs. Spring uses them, it is from Oracle, so I don't understand what, aside from EJB there is about "being much more". I'm not being snarky, I'm interested in your opinion. As with so many things in IT, EJB is late to the table as far as being an appealing option goes, so it might have missed its window.
There's CDI, Bean Validation, Interceptors, JAX-RS, JSF, Batch, Concurrency Utils, JPA etc EJB is important but maybe 10% of the platform. The services that EJB offers are also being migrated to CDI interceptors / extensions. This started in EE 7 and will continue for EE 8. 
But aren't Hadoop's APIs still too much in flux to benefit from the Spring template wrapping? Also, there's much hype about Hadoop and NoSql, but I think I read that only a very small number of people are actually using it. Spring would then be handy for only a small amount of people. The majority would be better off with Java EE, wouldn't they?
I never understood this debate. If you know one, you know the other enough to get work done. 
hmmm sounds like a bitter unemployed Ruby programmer
&gt; But aren't Hadoop's APIs still too much in flux to benefit from the Spring &gt; template wrapping? There's a [successful project](http://projects.spring.io/spring-hadoop/) implementing the wrapping. &gt; there's much hype about Hadoop and NoSql, but I think I read that &gt; only a very small number of people are actually using it There's enough people using it to justify creating Spring projects around it. &gt; The majority would be better off with Java EE, wouldn't they? Perhaps so. Although, today's majority might be the ones who use these technologies in the future when and if Java EE standardizes around them. It's good that projects like Spring carry the torch forward. 
My biggest gripe with EJB's is the testing is nowhere close to spring. I am aware that JBoss brought out Arquillian, but I've had mixed experiences(maven artifacts missing etc). Testing with spring has always been solid. 
Blerrghh! Again: It's not Spring against EJB! It's Spring against Java EE, and Java EE is MUCH more than just EJB. Thinking Java EE is only about EJB is very old school (J2ee 1.4) thinking. Spring zealots by large have greatly missed that "their old enemy" has radically changed. That's why they just can't understand the renewed popularity and can't provide an answer, since they think it's still all about EJB 2 from 2004.
yup, I am just narrowing the scope :)
Please read the article. Despite the EJB 3 in the title, the article does not limit its discussion of Java EE to EJB. There is an entire paragraph listing many different features of Java EE, and discusses in particular the features of Spring used by Broadleaf which they find lacking in Java EE which influenced their choice. Please reserve the knee jerk reaction until you have read the argument. On a further note, must these pointless threads pollute the front page of /r/java? Once I saw the first post for Spring 4, I knew there was a shitstorm brewing.
If you are for Spring, you must be against Java EE! If you are for Java EE, you must be against Spring! There is no room for your heresy here!
Spring MVC is different than JSF MVC. Spring MVC is a request-oriented framework and JSF is a component framework. Both are MVC, but Spring puts the C first, while JSF puts the V first. I prefer Spring MVC over JSF, which is why I use the Spring Framework for new projects. Now, if JAX-RS MVC ever becomes a thing, I would rethink the need to use the Spring Framework. I have no emotional attachment either way, except for what I wish to accomplish and the approach I wish to take.
I'd say it doesn't matter. If you have a solid foundation in programming and the Java language it should be very easy to get up to speed with framework specifics. Usually you don't get to pick, especially if you are integrating with other stuff that the client already has. So, picking one or the other is not really a good strategy.
As someone who used spring to complement JEE for years, I struggle to see the divide ...
Why not learn both?
It's more important that you understand each of the pieces and corresponding concept rather than either framework as a whole. The common ground will be the pieces that are used. For example, learn JMS and how different types of queues are used for enterprise integration. Or, JPA and how ORM based persistence works. JTA and distributed transactions. Learn enterprise integration patterns. Learn design skills like SOLID. Frameworks come and go in the grand scheme of things, but the fundamentals are forever. That is what will you "employable" over the long haul. PS: I would hope that curiosity would inspire you to at least play with both. That's another skill which is more important than frameworks.
Spring doesn't depend on Java EE either. It works just fine in non-Java EE environments as well.
It may depend on what type of projects you want to work on. Java EE is used in more corporate/enterprise types of jobs (like banks). Spring on the other hand seems to be more used in smaller companies and smaller projects. Of course, this is no rule, just a trend I can see here - e.g. I work on large Spring application in corporate. 
Spring is Java EE on steroids, removing all of the boilerplate code that you will end up writing yourself anyway in a much worse way.
&gt; only go with tomee and it's web profile rather then Glassfish Why? And why go for TomEE over something like WAS liberty, or JBoss/Wildfly?
Any examples of the boilerplate you're referring to? A generic DAO's about the only thing I can think of, provided Omnifaces is allowed (JSF can lead to a lot of boilerplate).
As to why see the link I provided. As for TomEE I just really prefer open source and a very open community. TomEE is really great with a great community. http://henk53.wordpress.com/2013/01/09/the-curious-case-of-jboss-as-7-1-2-and-7-1-3/ I really like MyFaces over Mojarra as well and much prefer OWB over Weld (Should mention I am a OWB committer and thus biased). I'm not loving openjpa over hibernate (they are equal to me) but TomEE allows for it to be switched out, you can also switch out JSF impl. I'm not using any EJB features because I got so used to not having EJB since it was unusable up until Java EE 6. I like and use most of the other Java EE specs and I really like EJB 3.1 lite but I don't have it in production. Edit: I also use a regular Tomcat for more then 50% of my apps and it's a good thing for me that TomEE is still Tomcat.
If you're doing relative time (x minutes ago, etc, which is what's going on in the article), then the client's locale (and therefore timezone) is irrelevant; store the UTC time that the item was added, use the current UTC time to calculate the delta. At no point in this calculation does it matter where the user is; it's not like if someone adds something in India then it should appear as being posted -13 hours ago to someone in the US (or whatever the time difference is).
Yes I agree, the pool of elephant vomit that is JSF should be avoided at all times. It's just that junior devs don't realize the long-term cost of it when they start their project with it. About the boilerplate, well it's right there just about in anything you use: - transaction management - aop , static or dynamic + compiletime or loadtime weaving - jms (not the template, but you try and make a decent alternative to DefaultMessageListenerContainer - jdbc (but not so fancy) - configuration management (PropertyPlaceHolderConfigurer and the much more modern configuration framework) - Dependency injection - a million other things where you don't realize what effort has been made in the background to give devs the power of portable, cross app server code in 2-3 lines We've recently modernized a codebase initially written for Spring 2.0.x that was still working fine in 3.2.5 - that's 7 solid years of not breaking design contracts. In your face JEE !
&gt; Eh? How have you extracted than from my comment? JSF does a more than acceptable job at what it's there for these days, and to be honest if you can't see that I hope it's because you're not up to date with it; the 2.x version is significantly better than the hideous mess that was 1.x. JSF still requires you to write html tags and css code. JSF also still carries more artifacts to produce a page. Its lifecycle is just obnoxious http://docs.oracle.com/javaee/5/tutorial/doc/bnaqq.html . JSF 2 is probably what EJB 2 was, a lot better than one but still miles away from being really productive. Since we moved all our stuff to Vaadin a couple of years ago we have not touched on either html or css. Granted all our apps look the same, but for intranet administrative applications that is actually a bonus.
I work with the author and know that he is a big proponent of Java EE and the Spring framework as good development architectures. John, your "2004" comment does ring true to me. Although I would go back further and say CMP and EJB 1.2 memories still give a lot of us nightmares. It's like getting a bad meal at a restaurant, no matter how much things are improved you still have that initial impression. Although I really love Spring and what the team does on a consistent basis, I also appreciate that we have two really good choices for building enterprise solutions that will push each other to keep getting better.
This is what annoyed me about my studies at university - lecturers who didn't put any effort into relevant content. I could have searched for information on-line - it takes a good lecturer to make that information fun and useful.
What about tree traversal? That's pretty much the classic problem that needs recursion to solve.
I should note that my experience is as such: In university, everything I did was without an IDE or engine. I created basic interactive apps solely in Notepad++ After realising that they didn't want to bother teaching me more java, I began creating [bukkit](http://bukkit.org/) plugins to learn how to use an API This seems the next logical step to me. Learn basics &gt; Discover API's &gt; Learn cross-platform development
I'm too sick of Oracle screwing the community over to use their products.
If you are looking to learn a cool new framework I would suggest DropWizard. It does a great job of integrating the most used Enterprise libraries. Something I really like is how it incorporates Guava with jaxrs, so you can have Optional&lt;&gt; Query Params and Multimap Json Objects. http://dropwizard.codahale.com/
Both
It is supposed to be generated as part of the build process, and it is supposed to be found the main folder of the app. http://developer.android.com/guide/topics/manifest/manifest-intro.html
If you write code like this, I'll beat you over the head with the Clean Code book. Terrible formatting, terrible variable names. Rage.
Playing nice with Java EE doesn't mean depending on Java EE (the point of contention)
/r/androiddev 
Thank you for your help I will take a look at the cipher program and ask /r/learnprogramming.
First result in google for ***android development tutorial*** brought me to http://developer.android.com/training/index.html It's a lot of reading, but there is also a lot to learn. I found this [book](http://www.dummies.com/store/product/Android-Application-Development-For-Dummies.productCd-047077018X.html) somewhat helpful when I got started, you can of course find it on the piratebay as an ebook if you search for **android for dummies**.
If you're looking for something request-oriented rather than component-based like JSF then JAX-RS would be something to look at. It's pretty easy to hook in templating on top of JAX-RS (see http://www.jalg.net/2012/10/jax-rs-2-0-mvc/ for example).
Both. Anyone who hires for experience for only one or the other is a company you don't want to work for anyways.
&gt; It's pretty easy to hook in templating on top of JAX-RS For some definitions of easy... The most reasonable approach to MVC I've seen with JAX-RS is [Jersey's MVC implementation](https://jersey.java.net/documentation/latest/mvc.html). Unfortunately, this is a non-standard extension to JAX-RS. 
I learned a good set of basics about Android SDK by going to http://developer.android.com/training/index.html and following the tutorials. There's more stuff there than when I first started out, but it's all good stuff. It might not be the best, but it's pretty good, and it comes from the horse's mouth. Read it and follow along. I had a very good understanding of Java and JDK before I even started. Don't underestimate the value of understanding the language and JDK before trying to learn Android SDK. Good luck.
anyone working in enterprise app development should know both
I thought the "fewer files" argument was laughable. I can use a lot fewer files in java too, you use more files to make it more modular (basically)
I think it's better to search the relevant information and create the presentations yourself. You may learn/strengthen your knowledge during that process, rather than using pre-made ones.
So what exactly do you want to do with Tomcat? Deploy a Spring MVC app?
I would need to see more of your code, but if you are making a new mouseListener, removeMouseListener(ml) is not removing the old one, it's trying to remove the new one you just created. You now have 2 mouse listeners. This post seems pretty similar to your problem : http://stackoverflow.com/questions/2627946/how-to-remove-mouselistener-actionlistener-on-a-jtextfield Anyways, if that is the problem, don't do new MouseInputMenu() at the top, have it as a class variable and initialize it in your constructor or statically.
There are more Spring/Hibernate apps in existence today than there are CDI/JPA apps. I'm not saying there won't be more CDI/JPA apps in the future. I'm just stating a fact. My recommendation? Learn Spring/Hibernate, and then learn what is different between that and CDI/JPA. Once you learn one, the other will be a piece of cake.
CDI is just a DI framework, you can't compare that to the entire Spring ecosystem. Comparing JPA to Hibernate is possibly even sillier since Hibernate is a JPA provider.
Java EE and Spring are both popular technologies, neither of the versions you've asked about have large adoption. Spring 4 might see some quicker uptake initially since companies that like standards tend to like standards in-part because they are fixed so they aren't always rapid adopters. Personally I'd favor Java EE over the long haul but you say you work in enterprise app development...which are you using now??? Neither one is horrible enough that you must change, just update your skills unless you want a change. Honestly in the non-startup enterprise world the enterprise companies make the choice so you need to choose the tech that your employer uses or look at the job postings for the companies you want to work at. 
So.... you're disagreeing with me? Because I didn't see anything in your comment that supported a different conclusion. At all.
To be fair, they aren't really there to reach you Java. Any good degree program will be general enough for the techniques and theory you learn to be applied anywhere, no matter the language. Good on you for taking an interest outside of the curriculum though! 
Whatever pros and cons of each solution, nobody can tell you based on facts what will be the most prominent in the future. Four years ago, Flex had it all and look where it stands now. Now, your question is good, but your defense poor: "I don't have time for both". You have time, plenty of it. Then, you choose what to do with it. If you looking for a career choice, you're not passionate nor have any quality I'm looking for when I hire. You might be wrong in having chosen computer programming... Maybe it's the time to think about that?
JavaScript is a terrible language that only barely suffices for scripting web pages. Using it for anything else (as in Node) is the very height of insanity.
Well it would have been nice to learn to use an IDE, at least. I had to do that one on my own. Everyone on my course now thinks that java is a "bad" language because our experience with c++ was so much simpler, because we had used an engine.
If you're worried about having one or the other on your resume - it doesn't matter. If you know the patterns, they are fairly interchangeable and shouldn't stop you from getting a job somewhere. If a Spring shop turns you down because you don't have JEE or vice-versa, then they have no clue how to hire tech workers and are probably hiring idiots anyway. 
Setup: Install Eclipse, install java, install the android development kit, install the android plug ins from the eclipse marketplace, use the development kit manager to download the files related to android versions you want to build for. Connect phone/tablet to pc. Enjoy great difficulty in being able to communicate with your phone after struggling with drivers. Project: Open eclipse, create a new project, select android project, use default settings typically. press run, hope that after it compiles it uploads to your phone and the app opens on the phone. Enjoy great sense of relief that it displayed 'hello world'. Realise that that just took 5 hours. Choose not to care. sleep. 
It looks better than COBOL.
Ah thanks, this was exactly what I needed! I had apparently forgot to install the eclipse plugin.. D'oh!
Well I think that goes without saying! :P Hello World complete, flashlight inbound!
I highly recommend this free online course: https://www.coursera.org/course/androidapps101 It will run you through all of the peculiarities of setting up an android project, including the manifest file. 
I would highly recommend Headfirst Java. The Headfirst books a great way for beginners to learn and are written in a format that is entertaining and easy to understand. This is what I used to learn Java. Here is a link: http://www.amazon.com/gp/aw/d/0596009208
I learned from sam's teach yourself java. It organizes everything into 24 chapters for 24 hours, eases you into it, and teaches you all the basics. On mobile right now, so I can't link. I'll edit when I get back. EDIT: back on the PC and remembered to post links. Here ya go: http://www.amazon.com/Teach-Yourself-Covering-Android-Edition/dp/0672335751/ref=sr_1_2?ie=UTF8&amp;qid=1387070674&amp;sr=8-2&amp;keywords=sam%27s+teach+yourself+java
cheers man!
But they teach us c++ solely in visual studio, we never do any programming outside of any IDE's, except when they taught us the extreme basics in java
My first 2 years I'm college were exactly like that. C++ and visual studio. Then we learned Java with Eclipse, then Ruby, then Haskell, then C. Those may be the tools they use to teach you the basics, but there's so much more to computer science than just that. It kind of sounds like you just haven't reached the point in your degree program where you can really go beyond that. I'd love to see a flowchart or something describing the classes in your degree program, if you don't mind too much. 
Line noise looks better than COBOL.
I started in a "year 0" - in my english GCSE's, I scored 98 marks. A C grade was 99 marks. Because of this, I had to take a test just to qualify for the foundation year and do that entire extra year (friggin harsh, I only marginally failed the creative writing and "speaking" tests) even though I had more than enough UCAS points with my other modules at the time. In this year, I did the following that I already knew: * Learned Excel * Learned how to build a computer * Learned (very basic) maths (as in, we once spent 20 minutes learning what "&lt;" meant) The new stuff included: * Visual Basic * Binary * Software Engineering (more about time management and such rather than any actual "engineering") On the first year we did Java, physics and early c++. We used Java to learn most super basic functions such as ifs, elses, arrays etc. In physics we did light, sound and motion. This was taught by a physicist and he sure loved to give us a 30 minute lecture every day about the same thing "physics is important to programming yada yada" - we know already, just teach us physics D: We also used an engine provided by the university for creating 2D games in c++. I made a version of Space Invaders and a platformer (with extra marks for AI :D) We also spent way too much time on a photoshop module I'm currently in the second year and have been begining to learn OpenGL, XNA and irrlicht. I also opted to do the module on flash actionscript rather than the after effects module (had to choose)
I found the tutorials at Vogella very good (has other topics as well, all valuable for Java beginners). [Vogella eclipse tutorials](http://www.vogella.com/eclipseide.html)
So it sounds like you haven't done much more than introductory and general courses. What classes do you need in order to graduate, does your school have a listing? I will say, the boolean algebra is part of its own course called discrete math, and goes into much more depth. 
Don't forget the [Java tutorials!](http://docs.oracle.com/javase/tutorial/)
This. The course has started recently, it's been only three weeks. It seems pretty basic, but covers most of Android's specific stuff 
They don't have a course listing for your degree? That seems odd. To be honest, everything you previously mentioned was covered in 3 classes in my degree program (one of which was for Excel, and covered general engineering). 
Look up thenewboston on YouTube, he's pretty easy to understand and covers a lot of Java edit: not quite sure why i'm being downvoted
I learned Java in school, but I also found an online course called Codecademy, that was quite good. They give (free!) courses on Java, HTML, C#, and more. The give you exercises with every little thing they explained, and really, that's the way to go. Practice, practice, practice. 
if you mean IDE I believe it does, makes my work a lot faster with the features (such as auto complete and what not). but well at the end it does somewhat depend on the project
Now, yes; JSF was adopted into Java EE at version 1.2 in Java EE 5 ([source](http://en.wikipedia.org/wiki/JavaServer_Faces#JSF_versions)), and although it was significantly better than v1.1, it was still hideous to use. I know people that are still scarred from JSF v1.x and have refused to use v2.x based purely on that, and I think that may be what /u/gthank is referring to.
Honestly trying to find java tutorials is annoying... Well last time I checked was around 4 years ago and I know there are a lot of tutorials but there wasn't one that satisfied me at all. But I had previous programming experience from other languages and so just picked up java mostly by using examples of code and documentation.But well I guess I can't recommend you learn another language just for java there's bound to be great tutorials out there (and it has been 4 years...)
I've got a good grasp on the java syntax, what's a good way to pick up the java library?
What boilerplate code? You are probably comparing a 10 year old Java EE version to the latest Spring. Modern Java EE is very lean, and the same things now often require more code in Spring than in Java EE.
As-if VMWare is so holy... And your hero Rod Johnson got very rich when selling out to über corporate VMWare. 
You can just as well come to work in a team where there are strict policies on updating *any* dependency in the project's pom.xml. If the company or the team doesn't want to upgrade it's as difficult with Java EE as it is with Spring.
thanks!
thanks a lot!
cool thanks, will do!
I've done every course on codecademy ;) they do Javascript and Jquery but not JAVA nor C# :)
I've got a fair understanding of Jquery and Javascript, but i've been told that javascript is nothing like Java haha :D
Just remember that computer science is much more than just the language and tools. 
I really recommend the SCJP book. You don't have to take the exam, but it's a good way to expose yourself to a lot of the different aspects of the language and have some of the trickier parts explained (polymorphism). 
Yes and no. I agree that there is probably more Spring DI usage than CDI simply because Spring has been around longer and CDI is the recent standardization of all the different DI frameworks. Spring is more than DI though just like CDI is only a small subset of Java EE, it makes more sense to compare the entire Java EE stack to Spring. After all I wouldn't compare Spring MVC to Java EE. JPA is a specification and not usable software by itself. Hibernate is one JPA implementation (EclipseLink being the reference impl). You don't choose between JPA and Hibernate really. You *might* choose between using Hibernate extensions on top of the parts that are standardized by JPA and restricting yourself to only the parts of Hibernate that are covered by JPA. It is most definitely not a Hibernate vs JPA scenario. It'd recommend learning JPA with Hibernate simply so both can be listed on a resume.
&gt; That's like saying a Honda Civic and Boeing 747 are exactly the same because they both have engines Except that the difference between Spring MVC and JSF is by far not as big as the difference between a Honda Civic and a Boeing 747. &gt;Spring MVC and its like merely copy request parameters into beans and apply validation, passing the result to a controller [...] "merely" huh? So tell me, why does Spring MVC allocate so many objects when "merely" doing that? JSF (MyFaces) which you seem to imply is very heavyweight, uses far less. &gt;wherein the user returns a forward to a template, redirects or returns literal content. And *forward to a template*, and THEN a whole bunch of work starts in ADDITION to the work that is already done. You can't pass this off as something that comes free out of the air. It's a real and very needed part of the request processing that's practically always coupled with Spring MVC. If you use the popular Thymeleaf templating, then you'll be using MORE memory per request than JSF needs when combined with Facelets. Yes, Spring MVC can be combined with JSP and then it uses less, but no sane person does that these days and, JSF can be combined with JSP just as well (and again, no sane person does that). &gt;JSF and its like do a lot more, processing an HTTP request into components and events in distinct life This is FAR cheaper then you make it sound to be. There's a template from which a component tree has been created. JSF walks the tree and each component is given the chance to pick out the request parameter in which it is interested. In HTML a tree is created just as well (the well known DOM) and there are events there just as well. You again make it sound like this is some over the top expensive thing, but implementation wise in JSF it's just a linked list typically to which an entry is added. 
Don't forget the `/etc/cron.{daily,weekly,monthly}` directories too. Trying to directly read the file is just asking to make the app non-portable and fragile. OP should avoid the crontab and just record run times in the app if possible or use `crontab -e` and `crontab -l` if they really need the crontab contents.
up until last year I studied applied economics and management information systems and I had a course called system devise, where we handled the topic op polymorphism :) I had to drop out and just do applied economics instead because of my math professor.
nice man, thanks!
Sorry, this doesn't answer the main question, but I just wanted to clarify a few things about the pitfalls you mentioned: &gt; Java is mainly controlled by Oracle Still, open specification. Also, hotspot, the leading JVM, is open source (GPL.) But yeah, Oracle still has a lot of power. &gt; Uses a lot of memory It's actually one of the most efficient VM's there is for memory. &gt; Has slow start up This, also isn't true. Though may appear so based on application. If you're experiencing slow startups you may be using the server mode of the VM which does a lot more JIT work on startup. EDIT: Also, the pros and cons as opposed to?
Read any introduction book, it really doesn't matter. Then read effective java second edition to learn the best practices.
Ah, what would I do without Scanner or ArrayLists?
As someone who started to learn JS, got bored, and is now learning Java, can confirm; Java is more challenging, but much more satisfying, and actually pretty fun.
This series of tutorials has been amazing for me. After every few, I stop and create a simple program to practice what I've learned so far. Also, totally free. https://www.udemy.com/java-tutorial/ 
I have little/no experience right now (am currently learning) but what I'm doing is reading the "Java for Dummies" book (sounds dumb, but it's really helpful) and supplementing it by writing code myself. The book is *really* easy and goes over stuff I already know from writing code, but it helps with fundamental concepts and helps fill any gaps I might have in my knowledge. If you have extensive experience w/ another language (I don't) you might want to skip the books and just read through the API since a lot of fundamental concepts probably stay the same between different languages. 
So far I've been watching Derek Banas Java tutorials found [here](http://www.newthinktank.com/videos/java-video-tutorial/). 
thanks for the link man!
cheers man, i've thought about this :)
alright thanks!
Have a look at guava-library's Multimap class.
I don't see anything wrong with your syntax except that its HashMap not Hashmap. As a side note its good practice to declare using the interface type instead of the concrete type. Which would look like Map&lt;String, List&lt;List&lt;Integer&gt;&gt;&gt; bla = new HashMap&lt;String, List&lt;List&lt;Integer&gt;&gt;&gt;();
Yes, "Hashmap" was a typo. I guess I'm a bit confused as to whether I have to declare two new ArrayList objects before I use map.put(K, V).
so much bucky!
https://code.google.com/p/guava-libraries/wiki/NewCollectionTypesExplained#Multimap
I would like to say that as far as package managing goes, since you don't like maven, gradle is a good alternative. It also supports all the JVM languages you mentioned plus Groovy
Like this? map.put("bob", new List&lt;List&lt;Integer&gt;&gt;());
Lucky. I had to learn it the hard way at my new job. "Here's a project. Here's our code base. Let me know if you have any questions." Didn't have a lot of experience with java, but granted I did have experience with some other languages and technologies. 2 years later, I'd say I'm getting pretty good with the language but it seems there's always things to learn and get better at. 
I would say that the advantages, especially for a server application, do vastly outweigh the pitfalls. The main problem with Java in 2013 is its long history, coupled with a (in my opinion completely correct) strategy of maintaining backwards compatibility means that some old design decisions (to pick a random example, parameters are not final by default) and old frameworks never go away. But that is all a part of the success story that Java has been. The startup time and memory use is only an issue if you are making a command-line tool or a very lightweight application. Having said that I have mostly used it for interactive tools and server processes, not for background processes on desktops. 
Shit, I expected get() to take a parameter of type K. Didn't know it took an Object.
The Map contract only specifies that the key satisfies `equals` equality, which takes Object. The HashMap contract also specifies that the key satisfies `hashCode` equality which is defined for Object. Because the `get` method doesn't change the collection, we don't have to restrict by type K to preserve type safety. But the `put` method? The arguments for that method are definitely types K and V. Got to make sure only the right kind of values enter the collection!
Super close. You can't create a new List (because its an interface), try creating a new ArrayList instead
I think you might get some more ideas from posting this same question on /r/dotnet. They might not all be good answers, but I know the .NET devs I've talked to are very opinionated about why Java (and the JVM) sucks. ^^[BTW, ^^I ^^don't ^^think ^^it ^^sucks. ^^I'm ^^a ^^Java ^^dev!]
Without knowing any actual information the original article is pointless. I could write a crappy C application and a reasonable Ruby application and declare Ruby king hog of performance (when it's pretty dog slow of course).
Alright, now if I use: map.put("bob", new ArrayList&lt;ArrayList&lt;Integer&gt;&gt;()); How do I add values to the each list in the map? I tried using this map.get("bob").get(0).add(1); map.get("bob").get(0).add(2); map.get("bob").get(0).add(3); map.get("bob").get(0).add(4); map.get("bob").get(1).add(5); map.get("bob").get(1).add(6); map.get("bob").get(1).add(7); map.get("bob").get(1).add(8); But it gives me an IndexOutOfBounds error.
Appears to be working. Thanks for your help!
Yes I was actually not too sure where to post this, I thought this might be a good place, but obviously lots of bias because people who read this might be mostly Java fans. If you think that would be a good place to get some criticism then it would be worth a shot. If you have any other good ideas/places to post this please let me know. What I like about the JVM is that languages like Scala, Groovy, and Clojure don't need to be compiled (Scala can be embedded into a Shell script). They can run like Python or other scripting languages. Not sure what dotnet languages run like that but modifying this post would get some responses that would let me know. Another note, as I mentioned I was thinking about writing a project with Clojure, if I avoid Java libraries and keep it Clojure, then most of what I make should be easily ported to dotnet. Thanks for the idea!!
Thanks, I think I managed to figure it out and it fits this explanation. I ended up using hashCode() on the key and modded that to the table size of possible key values. I then iterated through the LinkedList of Entries that the key mapped to in order to find the desired value.
I guess you're right, java has been pretty stagnant. Who knows, one day we might get generics or concurrency support
This. Effective Java is excellent.
Jokes aside, I think the problem lies more with Oracle.
Just googled it and found a copy being hosted by the vietnam university as the fourth result if you are still trying to find one.
and you are/want to be a programmer? Where do think your income would come from?
Hell, I'm a chemist. I just design programs to make my life easier, and because it is fun. Open-source all the way.
So chemistry is your livelihood. If I want to make developing software, or writing digital educational books mine, do I not deserve that? If one's hard work (tangible or in the form of bits on a hard drive) is appreciated/enjoyed by others, that person should be able to make it their livelihood. 
Are you implying that everything should be free then? Because that's simply not how nature operates. Nature is utterly unforgiving. Every living thing has to struggle in some fashion to survive; we all do. This concept has been greatly abstracted in humanity to goods and services, accompanied by morality and ethics and all that good stuff, but the same rules apply. Or, are you implying that only the products of skills that you deem dispensable, unlike your indispensable ones, should be free? Do you use a computer? Or any OS that's not Linux? Is any aspect of your life dependent on a good or service that requires massive amounts of resources/man hours (and reimbursement) to exist? 
Your mom is a dolt 
For the lazy: /r/learnjava --- I provide direct links to lesser known subs mentioned in the title if one isn't already provided. Let me know if I need to try harder: /r/LazyLinkerBot
Www.udacity.com has an online Java class you can take. I'm learning python now, and that one is next for me.
I learnt Java by teaching myself. It really only takes a few key things. 1. A Good Book (hard-copy or pdf) See if you can pay for one, remember people who are paid to make a 600 page book on Java will generally be better than an 2 page articles off the internet which have been made in someones free time. 2. Time Java programming is something you are not going to learn overnight. It takes can years to master (especially if this is your first exposure to any kind of programming language). Once you learn one you will find that it doesn't take very long to learn a similar language. 3. Persistence and Practice Programming is a frustrating task. You need to stay persistent and keep trying. As little as it may seem like you are doing (aka "Hello World" in a DOS style window) you must be proud of what you make and use it as an incentive to continue.
Most people who I hear talk about their dislike for the JVM versus other languages are people who are actually comparing software written with an ahead of time compiler versus software running on the JVM. So some of that dislike in my experience is not completely valid as it's not a balanced comparison, unless not using something like a JVM is a possibility, then the JVM itself could be a downside...
Reddit.com/r/dailyprogrammer http://projecteuler.net/ http://rosalind.info/problems/locations/ And anything that interests you ;) just come up with things you want to do
And there are JVMs that are more lightweight, such as Avian: http://oss.readytalk.com/avian/ But in general, who cares that the JVM is slow because it is JITing during the first calls to a method, if a server process is going to run weeks or even months. For command-line utilities, there is always AOT compilation (RoboVM, Excelsior jet), non-server JVM, or Avian. If we are talking disadvantages, a blessing and a curse is the maximum heap size setting. It allows you to make an application well-behaved (it can never use more), but sometimes it is hard to determine beforehand what a good heap size actually is, and you'd rather have a program try to allocate more memory rather than throwing OOM exceptions. Another serious problem is the overhead of JNI calls. Finally, it's a shame that the JVM and Java bytecode do not support arbitrary structs/classes as value types.
&gt; But you don't always want to run an entire JavaEE server for a small app. Then don't run an EE server. You can use Tomcat and just include the Jar files for the parts of Java EE if you want to do it that way. 
To expand a little on the backwards compatibility theme, the reason I think it is the right decision to maintain backwards compatibility is mainly for two reasons: * Obviously, as far as possible, you want your older apps to be able to run on a newer JVM. * Slightly less obviously, you want to maintain compatibility with the very rich ecosystem of open and closed-source APIs, servers, plugins and so on. 
And water is wet...
If you havent encountered the boilerplate issue then you need to get involved with some more complex integration projects , until you get there i suggest you stick to jee.
Wasn't there just recently a thread about a redesign of String that would change the substring behaviour to create a new chararray on method invocation? I don't think this can be called stable (on mobile, can't access history)
Were any of the public methods deprecated while making that change ? **No** Whether substring returns a string which is backed by a new char array is an implementation detail. I think the author of the change gives some solid reasons why they did it - http://www.reddit.com/comments/1qw73v
Thanks!
&gt; In other words, what if the state of the objects threads are accessing, doesn’t change? There is no more need for synchronization! Unless of course your threads need to always be working on the latest version of an object. You won't see a banking current account system using immutable objects for example. 
&gt; avoid memory leakage caused by retained substrings holding the entire character array. This was a longstanding problem with many apps and was quite a significant in many cases. Over the years many libraries and parsers have specifically avoided returning substring results to avoid creating leaked Strings. I've been bitten by this before with sax parsers. It would hold the entire XML string in memory so long as you had a single attribute value stored somewhere. 
Plenty of banking and financial software use immutable in memory and persisted objects, it's a way of never losing any revisions. Transcational systems can be built with immutable data.
Yes, i know that there are good and valid reasons for this change, as well as against it. I would agree that this change doesn't count as change since the API didn't change for minor components, but not for a central data structure. It was already easy to work around the leak, and i would welcome an additional substr method (or an added flag to the current one) with this new behaviour, but i think it would be important to preserve the original behaviour, because there are potentially libraries that now have a major memory leak due to the changed behaviour of a major builtin class.
&gt; They wouldn't for example expose an immutable Account object that had methods against it to change the balance. It would be a throwaway dto that would never be passed back into the api. Actually, this is exactly what they (should) do. The financials industry is distributed and thus asynchronous (due to the laws of physics). You **cannot** know how much money is in a given account "right now", because the concept of "now" does not exist; transactions occur at the nanosecond rate. All you can do is have a snapshot of how much money was in your account at a given moment in time. An immutable `Account` object is the perfect way to model these snapshots
Very interesting, thank you!
As a DTO, yes, but I don't think the Account object would contain any logic, it would simply be a snapshot view of the account. Copy-on-write is a very common pattern in many data-driven apps, most of the "big" projects I've worked on have used it as keeping historical records is usually a requirement. I'd bet even reddit does it, all comment edits will be kept in a history so that a user who breaks the site rules cannot just delete/edit their posts to cover their tracks. In banking there would still be a message queue to process any transactions against the account and it's in there where there needs to be data transactional safety if the queue is being processed by multiple threads. If anything it's "massively asynchronous" as a lot of banks still use nightly batch jobs to finalise all transactions, a branch transaction might not be cleared until the following day. A few banks are now offering "real time banking" where things are actioned on the account pretty quickly. Fortunately I don't' work in banking despite them maybe being responsible for the majority of the java jobs in my area. It's just not my bag, it's more of a soap opera that I get glimpses of when I meet up for former colleagues! So many drama. Wow. :-) tl;dr: I just think that calling them "immutable objects", while technically true, is a little different from most other usages of immutability e.g. in String or some of the newer date APIs. "Versioned data" is a more accurate name for them. 
&gt; "Versioned data" is a more accurate name for them. This is not different than immutability and is pretty close to Clojure's [model of state](http://clojure.org/state). All values are immutable, and an account is merely an identity relating a sequence of immutable values. A function over time. That is: account(t) = balance
It is noteworthy that most compilers will ignore the following code if (locale == null) { throw new NullPointerException(); } and simply throw the NPE when the variable locale is accessed and found to be null, rolling back any side effects, if the whole process is possible. What the author describes as "Execute minimal of code whenever it's possible" is actually a gigantic waste of time.
Seems to me like this is just following the 'fail fast' mantra. Similar to using preconditions in Google guava
You work for IntelliJ or something? I'm all for competition....
Sorry to not directly answer your question, but why are you not using Octave or some other matrix solving environment?
thanks! i'll check those out!
Follow this url. This is what we used in our class. Maybe it could be of some help http://www.cse.sc.edu/~huhns/csce145/installJava.html
listFiles returns null instead of an empty array.
According to the javadoc, listfiles &gt; Returns null if this abstract pathname does not denote a directory, or if an I/O error occurs. Since it is a directory (unless you're running this on windows), My guess is it's a permission issue; try it with a user-owned directory and see if you get the same error. 
Dang I thought that first one would work. I changed jre7 to jdk1.7.0_45. I'm still getting the same error. It didn't like the quotes at all.
What exactly happened with the quotes? What was the exact command you used? Because it certainly won't like spaces.
I put: -vm "C:\Program Files (x86)\Java\jre7\bin\javaw.exe" I also added a more detailed error message in the OP.
Show me the last 10 or so rows of the ini. I think you defined the runtime after the instructions that need it.
I think you already got the right answer so I'll add some off topic comments. You shouldn't import the whole java.io.*, instead import only the stuff you need (correct me if I'm wrong). You might also want to look at the new java.nio.Files.* stuff added in v7. It's quite an improvement over the old File. File will be just fine for what you are doing now though.
Probably yes. I indeed remember that around JSF 1.1/1.2 there was a kind of myth that tooling was coming that would allow drag 'n drop of components like with the VB editors. Somehow some people picked that up and twisted it a little, and eventually people started to believe you could only reasonably write JSF with the help of these tools. But these tools never came. Yes, there's one in every "Facelet editor", but they make absolutely no sense and I don't think anyone ever uses them nor is there any active development (afaik) into them. In practice the simplest and best method of development is just using XML. I guess that the GP (gthank) isn't really aware of this.
He cites one of the oldest classes in Java + only the public change log since it went open source. All changes prior to that are ignored. Also String is a final class so there are very few changes that could break code outside of someone using reflection. As long as Deprecated means "do not use" instead of "will be removed" almost all of the java standard library can be considered stable. 
Make sure both JDK and Eclipse are 32bit (or 64bit) versions. If you have the 32bit JDK as in your case use 32bit Eclipse or download 64bit JDK if your os is 64bit. 
It's a Hibernate world, we all just live in it.
Is it JPA? Because JPA is the standard ORM framework. We use EclipseLink at work but a lot of people use Hibernate. Nonetheless, almost exactly the same code.
This might make someone else laugh beside for me http://cayenne.195.n3.nabble.com/Upgrading-3-0-to-3-1-td2479879.html I have been trying to upgrade Cayenne from v3.0 to v3.1. I have read the changes in Upgrade.txt bundled with the modeler download. I have used DataContext pretty extensively. In fact, I have a singleton for creating DataContext. Now, with new changes, it seems to me that DataContext has been eliminated and advised to use ObjectContext using ServerRuntime.getContext(...) instead. So, now I have thousands of places where I have done MySingleton.getDataContext().commitChanges() needed to be changed. (which I will do) I wanted to confirm that going forward, I will need to replace DataContext.createDataContext() with ServerRuntime cayenneRuntime = new ServerRuntime("cayenne-edushare.xml"); cayenneRuntime.getContext() Or, am I missing something? edit: formatting 
Check the adt bundle, it can save you some time: https://developer.android.com/sdk/index.html 
I think you chose a very poor example. In my mind, banking systems should absolutely love immutable objects.
If you are just starting our http://codingbat.com/java helped me get started.
Thank you for contacting Reddit Technical Support. At the present time, all Redditors are busy helping other clients. If you would like, you may leave a message. Or you can try contacting our [backup support technician group](http://support.ant.com). Thank you and have a nice day.
Do you mean Spring MVC only works nice with a Servlet container (eg Tomcat), but can also be deployed on its own (like Play apps can)?
[Spring in Action](http://www.amazon.com/Spring-Action-Craig-Walls/dp/1935182358).
Maybe I haven't gotten deep enough into Java EE, but is there some creed I've missed out on which requires the Java EE convert to proselytize to all the unwashed masses the glory of Java EE?
Here's the entire thing. http://pastebin.com/zzF6cKWw
would x86 and x64 be incompatible?
IBM's RAD does have drag and drop functionality for facelets - but in my opinion it's awful to use, and as you say editing the XML directly is much quicker and easier to do.
I think you have 64 bit Eclipse and you're using 32 bit java. You need 64 bit java.
http://i.imgur.com/Ch2upaS.jpg
I'm not sure if I should up vote or down vote. The joke is funny, but this subreddit isn't really meant for this kind of stuff :X So I won't vote. Thanks for the humor though.
 public int getGallonsOfMilk() { return getEggs().size() &gt; 0 ? 12 : 1; }
Oh good god. I rolled my eyes, laughed, then wrote that out in Notepad++. Quite entertaining. 
There is /r/ProgrammerHumor, not sure if they accept text posts though.
OK, thx =)
The Manning site page for Spring in Action, 4th Edition says that it's "updated for Spring 3.2", do you have any confirmation that it'll be updated for Spring 4 before publication? Also, it's worth mentioning that all of Manning's e-books (including several on Spring) are on sale for half-off today, if you're of the e-book persuasion. Edit: The only Spring MVC book that I know of off the top of my head is [Pro Spring MVC](http://www.apress.com/9781430241553) from Apress, but I haven't read it myself and therefore can't attest to its quality. Double edit: To whoever has downvoted every single helpful comment in this thread, I'm glad that your chosen tech stack is so productive that you have the time to harass and disrupt people while they discuss a different framework. However, all you're accomplishing here is showing how childish people on the internet can be over silly things.
If you're doing it all from the command line, you can try [these instructions](http://www.skylit.com/javamethods/faqs/createjar.html). This creates an "executable JAR" which can be run from the command line or double-clicking on the JAR file in Windows Explorer.
**undefined Symbol getEggs().size() use** *Shop.hasEggs() instead?* 
Eclipse should have the menu item File -&gt; Export
Just downloaded 64bit java, it's still not working.
In Windows, and indeed most operating systems, in order to run a program from the command line you need to add it to your PATH system variable. This is a series of directories the system (separated by semicolons) will look inside to try to find your command. So if you want to run java, javac, etc. from the command line, you need to add the folder containing them to your PATH system variable. The exact process is slightly different depending on which version of Windows you have, but the basic idea is that you will add a ';' followed by the path to your JDK bin directory to the existing PATH variable. When done correctly, you should be able to run your program by typing 'java &lt;Your Class Name Here&gt;' in the folder where your compiled java program lives.
did you create a frame for the GUI to display?
I'm writing an Agent-based model using Repast, and it is written in Java.
You appear to have a large linear system. Honestly, I would use a matrix solving environment like Octave. However, here is some general advice: You seem up to speed on the theory of logistic regression. In your position, when I was doing this sort of thing, I created Java classes to represent the mathematical entities of interest. I would take the Java Vector class, and extend it, call it a "MaverickVector." Then I would create a "MaverickMatrix" class that is a collection of "MaverickVectors." I would define a "multiply()" methods so that I can perform inner products between MaverickVectors, and overload multiply() for MaverickMatrix so you can do Matrix-vector and matrix-matrix multiplication. You will also want a "transpose()" for MaverickMatrix. You also need add() for MaverickVectors and MaverickMatrix. I would consult Numerical Recipes, and implement a matrix solver. Then I would say screw it to agents, read the data from the file, pump it through the relevant equations, and be done with it. Which is why I suggested a matrix solving environment at first. You /can/ do it in Java... oh wait, I just remembered... Here's a library written in Java that does what I was talking about... http://acs.lbl.gov/software/colt/ Use this to encode the standard matrix equations you would use in your regression.
This is fastest and easiest way since he is already using eclipse.
I am using Mac at the moment. I will try my user folder instead.
&gt; "executable JAR" which can be run from the command line or double-clicking on the JAR Other installers can steal the .jar association and one day your app will open with a Zip archiver or in [Nokia tool](http://thepanz.netsons.org/post/windows7-jar-file-association-broken-with-nokia-ovi) ;)
Maybe you are looking for something like [JSmooth](http://jsmooth.sourceforge.net/)? There are a number of similar wrappers, that's just one of the first ones I ran across.
This will help http://docs.oracle.com/javase/tutorial/essential/exceptions/
Exe4j will wrap a jar in an .exe file
Check out my article *[Convert Java to EXE: Why, When, When Not and How](http://www.excelsior-usa.com/articles/java-to-exe.html)*
Jwrapper is probably the best solution I've found.
So i know there is some hackery to get the console method of compiling and running your program to work and i'm quite frankly to lazy to look up how you do it for windows 95 to winodws 7. Anyways the best solution is to click on file in eclipse and then click export. Then you want to export the program to a jar file. What this is, is a Zip file containing all your class files and resources which will run if the user has the JVM... in theory. This is not a EXE file but a JAR but it acts the same way assuming someone has java.
In [v8](http://download.java.net/jdk8/docs/api/java/nio/file/Files.html) it's even better :) Recursive directory listing: import java.nio.file.*; import java.util.stream.Stream; public class Test { public static void main(String[] args) throws Exception { try (Stream&lt;Path&gt; stream = Files.walk(Paths.get(args[0]))) { stream .filter(Files::isDirectory) .forEach(System.out::println); } } } 
I find more files better. When you have a GUI of 10,000 lines of code, it gets to the point where you just make it modular and split everything up into sections. Of course on the slip end of things, if you make a class for every method then you're likely going to be remaking code and it defeats the reason why you make different classes.
Like others have said, Spring in Action is pretty good. I'd recommend [Spring in Practice](http://manning.com/wheeler/).
Spring at least often starts up slower. The more different modules you use (put in your pom.xml if you use Maven) the slower it becomes. It has to work through all of those verbose configuration files, which is just not fast. Modern Java EE servers tend to be much faster when starting up. E.g. JBoss EAP 6.x starts up in less than a second, TomEE in about a second, GlassFish between 2 and 3 seconds. Even IBM's Liberty for crying out loud starts in about a second. Compare that to Spring, where it's 6 or more seconds with a fairly minimal configuration, which rapidly goes up to 20 seconds or more.
 you're making some small mistakes, but you seem to be doing very well. Lets go over some of the things i see; do keep in mind i'm going to be nitpicking at things. I'm new to the formatting so i might need time to edit my post; sorry. Also i'm trying to show why we do things so you can see how useful they are in practice , not just telling you to do some things one way. 1. short sum1 = 0, sum2 = 0, value1, value2, count1 = 0, count2 = 0, min1 = 0, min2 = 0; double average1, average2, average; I'd generally keep your variables going linearly downwards, however if things are related, i would do this. I have to look at your code more in depth to see if i'd do this in this situation. This does seem like arrays would be better though. 2. Okay you seem to repeat code a lot. If your repeating code, you should make a new method so your code is easier to read and maintain. My rule pf thumb is repeating code 3 times, then you need a method for it. Think about. if you have 3 lines of code that are nearly identical, followed by there being a problem, then you have to literally fix each line; however if you use the method approach and you have the same problem along with using this method 100 times; then all you have to do is fix that method and suddenly you've done a third of the work but got 33 times the amount of code to work then you would have done. Check the below code for a example of repeating code. System.out.println("How many test grades did you have? (Must be 3 or higher)"); min1 = scan.nextShort(); if (min1 &lt; 3) { System.out.println("A value of less than 3 was entered. 3 will be used."); min1 = 3; } System.out.println("How many daily grades did you have? (Must be 5 or higher)"); min2 = scan.nextShort(); if (min2 &lt; 5) { System.out.println("A value of less than 5 was entered. 5 will be used."); min2 = 5; } System.out.println ("Enter " + min1 + " more test grades"); value1 = scan.nextShort(); if (value1 &lt; 0) { System.out.println("Grade may not be lower than 0"); value1 = 0; } if (value1 &gt; 120) { System.out.println("Grade may not be higher than 120"); value1 = 120; } this seems like it has a lot of redundancy; you should be using other methods to do this, not only to cut down on the size but to cut down on the work and mistakes that can happen if you make changes to the underlining logic. A simplify example would be this. I want to create a method that rolls 5 dice with 6 sides and returns the overall value. However it will only roll a dice if "have5Dice" is equal or greater than the dice your rolling. public class diceRoll{ int have5Dice = 5; public int roll5(){ int dice1 = 0; int dice2 = 0; int dice3 = 0; int dice4 = 0; int dice5 = 0; if(have5Dice=1){ dice1 = new Random().nextInt(6); } if(have5Dice=2){ dice2 = new Random().nextInt(6); } if(have5Dice=3){ dice3 = new Random().nextInt(6); } if(have5Dice=4){ dice4 = new Random().nextInt(6); } if(have5Dice=5){ dice5 = new Random().nextInt(6); } return (dice1 +dice2 + dice3 + dice4 + dice5); } } Notice here how i literally have the same code copy 5 times? It's the same exact logic. Now i have a bug; the way i get my random value returns a number between 0, and 5. I could edit each of the "new Random().nextInt(6);" and change it to "new Random().nextInt(6) +1; but it's much easier just to create a new method. So right now my code is 30 lines long, when counting blank lines. The new code is public class diceRoll{ int have5Dice = 5; public int roll5(){ int dice1 = 0; int dice2 = 0; int dice3 = 0; int dice4 = 0; int dice5 = 0; if(have5Dice=1){ dice1 = rollDie(6); } if(have5Dice=2){ dice2 = rollDie(6); } if(have5Dice=3){ dice3 = rollDie(6); } if(have5Dice=4){ dice4 = rollDie(6); } if(have5Dice=5){ dice5 = rollDie(6); } return (dice1 +dice2 + dice3 + dice4 + dice5); } private int rollDie(int i){ return new Randon().nextInt(i) +1; } } Now again i had to rewrite 5 lines of code for this fix so still could be better. So our goal is to find the total amount from the rolls with a max of 5 and a min of 0. we know that have5Dice is the number of rolls we can do. The best way we could do this if we were to store the 5 dice is by using an array the size of have5Dice and then just fill it by way of for loop to get rid of those ugly if statements. We could do that but since we're not doing any thing with the stored number except adding them together, we can make this code much cleaner by only making 1 int variable. public class diceRoll{ int have5Dice = 5; public int roll5(){ int totalDiceValue = 0; for(int i = 0; i &lt; have5Dice; i++){//note, that if a forloop starts with i = 0, and checks if i is less than nth number; then the loop will run n number of times. totalDiceValue += rollDie(6); } return totalDiceValue; } private int rollDie(int i){ return new Randon().nextInt(i) +1; } } Much cleaner and it doesn't repeat code, and it's much smaller. If you wanted to write another method that rolled a 20 sided dice, you can easily do that with rollDie and just plug in 20. 3. Keep with a formatting style in your code. For instances you'll do if(blah){ } but then you also do while(blah) { } which is quite annoying to my OCD. I personally like doing brackets right after the conditional but the latter is also valid. However in a class you really should be following 1 pattern or another. Even if you didn't create the class, you should be following the pattern already in use. Also i noticed that some of the statements were not indent correctly. You can select all text in eclipse and press i believe CTRL + I and it will auto indent your code for you. 4. if (average &lt; 70) System.out.println("Your grade is an F"); else if (average &gt;= 70 &amp;&amp; average&lt;=79) System.out.println("Your grade is a C"); else if (average &gt;= 80 &amp;&amp; average&lt;=89) System.out.println("Your grade is a B"); else if (average &gt;= 90 &amp;&amp; average&lt;=99) System.out.println("Your grade is an A"); else if (average &gt;= 100) System.out.println("Your grades are perfect!"); ... Pain; Suffering; and Darkness.... okay lets go over this. Wow.... So syntax wise, this is correct; however it's indent wrong. So your code block is 14 lines long and very hard to read; however if you do this: if (average &lt; 70) System.out.println("Your grade is an F"); else if(average &gt;= 70 &amp;&amp; average&lt;=79) System.out.println("Your grade is a C"); else if(average &gt;= 80 &amp;&amp; average&lt;=89) System.out.println("Your grade is a B"); else if(average &gt;= 90 &amp;&amp; average&lt;=99) System.out.println("Your grade is an A"); else if(average &gt;= 100) System.out.println("Your grades are perfect!"); your code is 10 lines long and you don't have all those nested if else statements format The next thing, is i always suggest doing brackets since you don't have to trust java to understand what you want, and you don't need worry about putting them in later if you need to do 2 statements at a later date. I also personally like to put the if statement and the state on the same line like the following: if (average &lt; 70){ System.out.println("Your grade is an F");} else if(average &gt;= 70 &amp;&amp; average&lt;=79){System.out.println("Your grade is a C");} else if(average &gt;= 80 &amp;&amp; average&lt;=89){System.out.println("Your grade is a B");} else if(average &gt;= 90 &amp;&amp; average&lt;=99){System.out.println("Your grade is an A");} else if(average &gt;= 100){System.out.println("Your grades are perfect!");} however i will only do this if the if block contains only one statement. This is not required and if your unconformable doing this, then by all means don't. 
To make sure: did you point your eclipse to the 64bit executable after you installed it?
Wasn't the file walker added in v7? Or is the Stream with filters some new fancyness?
If you do go this route, make sure to also release the jar file too for people on other operating systems, and for people on Windows who want to customize java's launch parameters.
Yeah, RAD is aweful, the JBoss Tools version in Eclipse is aweful, the MyEclipse version is beyond aweful, the NetBeans version is terrible. The point is that it just doesn't work. The visual layout is a complete and utter mess and has no resemblance to the rendered page, not even close. I think JSF components simply don't carry enough information on them to be useable with a visual editor. From the looks of it, all those visual editors are left overs of the early enthusiastic attempts. I don't know any person working with JSF (programmer, designer, prototyper or otherwise) who has *ever* used a visual editor. I've been working with lots of teams, lots of companies and projects and over ~7 years I haven't seen a single soul using such editor. IMHO; the tool vendors should just give up (assuming they're still pouring even an ounce of effort into them) and remove those visual crap editors from their products.
Spring was created as a layer on top of the then crappy J2EE 1.3/1.4. It grew out of a set of utility code published along side an anti-EJB book. Its purpose was to replace EJB and provide ease of use abstractions over crappy j2ee interfaces and be open source and free. Good stuff back then! But then Java EE ditched their own crappy interfaces and provided simple and sane ones. But Spring out of habit just kept wrapping, since wrapping is what Spring does. This caused a huge falling out between Hibernate and Spring; Hibernate (by name of Gavin King) co-authored the JPA APIs, which were a really clean design. And what did Spring do? You can probably guess it; wrap it again with their own (less clean) APIs. This angered the Hibernate team and users alike. With Java EE now being overwhelmingly open source (TomEE, GlassFish, JBoss, Geronimo, ...) and Java EE having sane and powerful APIs, there's simply no point to Spring anymore, at least not for a full Spring stack. CDI provides the better beans, and things like Bean Validation, JPA, Expression Language, JAX-RS, Interceptors, JMS and lots more are perfectly useable by themselves. They don't need crappy Spring XYZTemplates or Spring alternatives. There are a few exceptions. Spring Batch is excellent and Spring security is rather nice as well. Spring Batch works really well with Java EE. Spring Security works well with Java EE, but introduces its own Filter based model and thus doesn't extend, wrap or augment the existing system in Java EE. 
I understand, but every developer should be able to voice their opinion. At the very least you could tell them that you've heard Spring is not the silver bullet anymore that it once was. If no coding has started yet, there's still time to reconsider. At least study the other things out there, even if Spring is chosen at the end it will be a wiser decision and you'll hopefully have less regret later on.
&gt; Do you have any metrics? For Spring MVC, check this: http://www.jsfcentral.com/articles/understanding_jsf_performance_3.html Spring tends to allocate a lot of objects, maybe caused by all of its AOP and wrapper crazyness. Now Java EE and pretty much every (Java) framework does a lot of that stuff (read up on the stacktrace from hell), but Spring really goes overboard with it. There is a lot of information here as well: http://blogs.oracle.com/arungupta/entry/why_java_ee_6_is The table summarizes some metrics. For the example Java EE uses 20 files, Spring uses 53. A cold deploy is 5 seconds in Java EE, 12 seconds in Spring. A second deploy is half a second in Java EE and 6(!) seconds in Spring. Java EE uses 73MB of memory for that example, Spring uses 101MB. If you dig a little deeper or simply do your own tests you'll find similar numbers. At the whole, Java EE is getting slimmer and more optimized with every generation, while Spring is getting fatter and slower over the years. But don't take my word for it, just do your own benchmarking with the code that matters for you. Spring is not slower in all situations, but it is in many.
Eclipse depends on some native libraries and that is why there are separate x86 and x64 versions. 
Model wise Grails is yet again something else; a Rails clone and another Java like language. Performance wise Grails doesn't score many points as its arguably one of the slower web frameworks (see existing benchmarks).
There's an earlier bug [GLASSFISH-20814](https://java.net/jira/browse/GLASSFISH-20814) on the same issue. The root cause seems to be assumptions about the implementation and internal data structures of HashMap by Glassfish's custom serialization code. The problem will need to be fixed in Glassfish.
JavaFX has a WebView component(based on webkit). Just load a specific url with such a component and then somehow do an offscreen rendering. You can probably also pull the html directly from the component too. Seems like this could help you =&gt; http://stackoverflow.com/questions/7796558/javafx-2-0-webview-webengine-render-web-page-to-an-image
Sure. Try Selenium WebDriver. https://code.google.com/p/selenium/, http://www.seleniumhq.org/projects/webdriver/ WebDriver driver = new FirefoxDriver(); driver.get("http://google.com"); // FirefoxDriver will pass this condition, but just to make sure. For example, you can't take a screenshot with HTMLUnit. if (driver instanceof TakesScreenshot) { File tempFile = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE); // and now copy the file some place you want it to have } And yes, this will actually open the browser window. It can also navigate other browsers and some headless ones (those don't open a browser window, but cannot usually take a screenshot, because they don't render the webpage). There is one headless browser that can take a screenshot I know about - the PhantomJSDriver. Google it up and import it into your Selenium.
You probably know it and it doesn't help much, but you can use ActiveX. Also [html2canvas](http://html2canvas.hertzen.com/), though again it has some restrictions.
correct, I didn't notice the previous one, that's why I went for the new bug. Still I'm affraid no fix for 3.1.x will come, just for 4.x. As I guess they don't plan any further releases for the 3.1.x open source version.
Thank you!
Thank you!
Thank you!
Thank you!
Yes, it is probably unlikely. It would certainly be possible to backport the 4.X fix to 3.1.X and use your own Glassfish build. This may or may not be practical.
It's not java-based but wkhtmltopdf will do it https://code.google.com/p/wkhtmltopdf/ 
http://www.gebish.org/
For a more readable version try [geb](http://www.gebish.org/)
Hey thanks for the article. I'm currently taking java in uni and tomorrow we have a workshop on the raspberry pi, so this was a perfect little warmup for tomorrow.
Files.walk/list/lines are new in v8 - it's a lambda-friendly version of Files.walkFileTree/newDirectoryStream/readAllLines. Stream is also new (don't confuse with InputStream or DirectoryStream ;)
[MindArray IPM](http://www.mindarraysystems.com/tomcat-monitoring-tools.php)'s Tool is the best performance monitoring tools for Tomcat.
Assuming you actually want the unicode bishop to be your representation for an console chess game or something similar, you would have something like public class Bishop { private boolean isWhite; public Bishop(boolean pIsWhite) { this.isWhite = pIsWhite; } ... public char getSymbol() { if (this.isWhite) { return '\u2657'; } else { return '\u265D'; } } ... } The \uWXYZ specifies the unicode value, found on [wikipedia](http://en.wikipedia.org/wiki/Chess_symbols_in_Unicode). I've avoided the fact that the value should be static final and that you'd want an interface/superclass specifying the methods common to all chess pieces. [edit] As always, /r/javahelp is your best bet for these types of questions. [edit 2] Also to consider is that there are two colors (and thus two unicode values), so you may want a field to control this (reflected above).
there are wrappers for atomic types, such as Integer and Float(first letter capitalized) , you can use them with your input along with NumberFormatException. http://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html http://docs.oracle.com/javase/7/docs/api/java/lang/NumberFormatException.html
Just try the conversion, and if it's not valid, you get an exception. int number; try { number = Integer.parseInt (string); } catch (NumberFormatException nfe) { // do something since the string wasn't a parseable integer } 
Very easy: http://pastebin.com/qAQ8j6MT Edit* Though in the future you should probably post these types of questions in /r/javahelp.
Oh that's cool. I didn't know that statement existed since I'm fairly new to Java. Thanks very much. :)
yea because those 5 lines of code are so difficult to write
This is interesting, but, I think there's one thing missing from their methodology. It appears that their tests focused on throughput, which is not irrelevant by any stretch. However, as a server-side guy, I am more interested in latency. I don't really care how fast the logger writes as long as it doesn't delay the operation being logged. An interesting aspect of logback is that it allows asynchronous operation. I've never used it myself, though I have lots of experience with log4j and slf4j. I'd be curious to see what the results of a test designed to measure latency would be.
please remember to always catch that NumberFormatException in some way. It's a runtime exception and some developers will forget to catch it.
I'll make a note of it. Thank you. :)
This would probably get some attention in /r/gamedev
There is also a convenient explorer for the file type: https://github.com/entrusc/xdata-explorer
That's right: generics in java are implemented via type erasure, meaning that the type is lost at runtime and every generic variable is of type Object. So you can just cast it down to V to make the compiler happy :)
I'd shy away from using exceptions for ordinary control flow - they should be reserved for exceptional cases. I'd recommend reading Effective Java - item 57 refers to this point. The approach I'd take is to use a regex - something like input.matches("-?\\\d+"). You could compile the pattern instead of calling on the String object if performance is a concern. There is also NumberUtils in Apache Commons if you have that on your classpath. 
:) good. Developers who forget that in our pre-hire coding test are auto thrown-out 99% of the time. 
&gt;I'd shy away from using exceptions for ordinary control flow - they should be reserved for exceptional cases. I'd agree for a case where both numbers and non-numbers are valid inputs, but that seems like a very strange design (and I can't think of a situation where that would happen). In OP's case, the only valid values are integers, so throwing an exception makes sense (i.e. you want to report the illegal argument back to the console and abort execution of the command).
Really it's up to what you want to do. From an annoying standpoint it's nice to be able to ignore anything that is generated at runtime. I just keeps tracked files easier to manage when you don't have to worry about accidentally committing a bunch of junk files. Branching is nice for me when I'm working on large features or stuff that won't be deployed for a while. It allows me to maintain the code in a remote repo without affecting production code and the like. Githooks are simple bits of shell scripting that get run on certain events. So for instance before a commit I have a formatted run to have my code match my teams style to keep the code consistent. If you're thinking about using githooks for something like continuous deployment I'd argue against it. They are nice but it's better to let a CD system pull code from got to be built then to have bit push code to your CD system for building.
&gt; InternalFrameInternalFrameTitlePaneInternalFrameTitlePaneMaximizeButtonWindowNotFocusedState I don't see what the big deal is. It's the Not Focused State of a MaximizeButtonWindow inside of a TitlePane which is inside of an InternalFrame which is inside of a TitlePane which is inside of an InternalFrame which is inside of an InternalFrame. Not that hard to understand, really.
It's also generated code. A computer thought that was a good name, not a human.
I know. I was being sarcastic.
I quite like this branching strategy http://nvie.com/posts/a-successful-git-branching-model/
I haven't had to, just came in to say I'm sorry you have to do this. weblogic is not fun
Yes i had this working back in the days, even on my powerbook g4. Cannot remember the details though, i remember getting most of the how-to from a blog somewhere. 
How does something like this get generated? Or would a better question be, why?
I agree somewhat - exceptions are meant to be rare in your system, so keeping all the logs in memory is not really a good idea. However, if an exception or error occurs, it can be too late to start logging at debug or trace - you want to see what happened up to that point, not afterwards. We have a similar logger where I work, but instead of a trie, we use a cyclic buffer. So instead of saving all the logs, we save the last 100, say. When an error is logged, we then log the contents of the buffer too.
http://stackoverflow.com/a/891589
Older link but may have clues: http://www.citytechinc.com/us/en/blog/2008/12/howto_running_weblo.html
It builds it programatically, a few GUI frameworks do that for you based on some form of binding file format. It is good because it tells you what it is without needing to look up it's javadoc. A consistent naming format is very useful when working in an IDE as you can search for classes with wild cards if you don't know the name e.g. InternalFrame\*State will list all of the states. Most IDEs are aware of camel case so you could also search for IFNotFocusedS to get an exact match. 
At first glance it reminds me a lot of the Java Content Repository standard. Aside from that, how would this compare to plain Java serialization or using something like StAX to serialize an object graph to XML? 
Another option is [Apache String Utils](http://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/StringUtils.html#isNumeric%28java.lang.CharSequence%29). Though it may be overkill for such a small project.
This is the superior option, in my opinion 
Basically the library is designed specifically to store data in an application independent way: in essence separating data and schema. With normal java serialization for example you get a very tightly coupled serialization that is very unhandy when it comes to different versions of a software handling the same data. In xdata you can specify what to do when a value is missing and handle it appropriatly. For this reason a marshaller object takes care of marshalling and unmarshalling of all non primitiv objects. In turn objects that have no declared marshaller are not stored at all (and throw an exception if added to the data at some point) I also tested some XML serializer but most of them were also tight coupled to the implementation (e.g. using the fully qualified class name as tag names) and required (of course) a lot more space for the resulting files then binary formats. The xdata format in comparison works with key-value pairs (like NoSQL) and is compressed using the standardized gzip algorithm. To be honest I nevery tested Java Content Repository so I can't tell you how it compares to that.
Personally, I think that it may hinder a beginner, JavaScript-as the name implies-is a scripting language, and is typically used for widgets and web applets. Plain java is a compiled language, meaning you write applications in it. If you think you can keep them straight-they're rather different as far as syntax goes-be my guest, but since you're a beginner, I'd wait to do the codecademy. Hope this helps!
I mean I somewhat do know the java language, but I was just wondering if learning JavaScript will help me out when I actually learn java, or will I be confused?
If you want to take an online course, do it! It doesn't matter what language you're learning, going to learn, or might not learn. Learning anything should be commended. Become a polyglot developer. Are javascript and java the same? Hell no! They are as different as a koala and a lion. But they're still both just programming languages. Just go into it knowing that some things will be different and others the same. As you learn more and tinker with different languages, you will begin to find commonalities, those things are the core of programming and the only way to find them is to do it. TL; DR if you've got the initiative, go for it :)
Some of the biggest advances in web technology in this past decade have been based in/on javascript. Javascript is an extraordinarily powerful and flexible language. If you require proof of this look no further than node.js.
&gt; They are as different as a koala and a lion. Maybe more like a lion and a sea lion ;-)
I'll pray for you 
There's nothing wrong with learning different programming languages. That's something you will need to know how to do throughout your career and doing it more will help you (especially if the class is more about using the language to solve basic problems rather than develop for a UI). And it won't help you learn Java, but it shouldn't hurt. However, if you really want to learn Java, buy a good book and use your own computer to do the exercises.
I did a while ago. **Make sure you follow every single bit of the installation instructions.** The generic install (which I believe you should be using for a Mac) isn't terribly complicated as long as you allow the install scripts to setup the environment.
Meh, it's still just IFIFTPIFTPMBWNFS and then 'tab' in IntelliJ...
JavaScript is not used for web applets
Doesn't mean you should write it off either
You're welcome. I like to drive around and think about all of the cool things I could do with Pi. Exciting stuff.
&gt; If you require proof of this look no further than node.js. Just for clarification, what do you define as "biggest advance". 
No, but I am probably going to learn Python in the near future.
JavaScript and Java are completely different languages. If you've never done any programming before, JavaScript is definitely easier to start with than Java is. Just remember that there is a relatively big difference between the two. The reason I say it is probably better for you to start off with JavaScript, is because JavaScript won't push complex concepts on to you right out of the gate (i.e. objects), which tends to make it easier to comprehend for people who are just starting. As you mature in JS you can dip your feet into OOP, but unlike in Java, it isn't forced on you.
Rhabarberbarbarabarbarenbartbabier.
The language itself is not particularly powerful compared with any other duck-typed interpreted language. In fact, it suffers from an unusual number of strange quirks compared to just about any other in the same class. JavaScript got lucky in being adopted as the lingua franca of the browser but it's by no means a great language in and of itself.
The most important thing when moving to GIT (or Mercurial) as a developer coming from VCS's like SVN is that branching / merging is actually easy and it works very very well. We adopted something close to the git-flow (http://nvie.com/posts/a-successful-git-branching-model/, we're going to move towards a full git-flow workflow in the coming months) where we have a "master" branch that's more or less left alone, a "development" branch where all the changes go into, and feature branches for all the features being built. Get used to branching early and often and merging those branches back into a 'development' branch. For the actual merging we use winmerge (which is called from our tool), that works very well too, but 90% of the conflicts get resolved by Mercurial itself.
What sucks about Weblogic? I may or may not have to work with it in near future - what's bad about it? I've heard many people saying it sucks, but I've never heard of a reason why.
why would you catch an error in setting the post form, and then just continue to do the post??
I know learning how to ride a bike hurt my chances with getting a driver's licence. The answer is no. They are not even the same. And you should learn Java from books too. The college course will be about not teaching it right, and then asking irrelevant questions. 
Why are you using a linked list of a string instead of a string array? A hashmap is for a unique relationship between the key and value, with the key being distinct. Having two of the same key will mean the value for the old key is written over. 
Bad programming on my part - was going to increment the value of the hashmap each time i added a current account, would you be able to send me in the right direction for the EnterTransaction and CreateCurrentAccount Methods? 
WebLogic 9 was still on the "make things as complicated as possible and make the install as big as possible"-bandwagon WebLogic 12c is infinitely better, but you still have to run a weird install script even when the archive you download says it's an unzip installer. See http://henk53.wordpress.com/2012/05/01/is-weblogic-12c-a-heavy-weight-enterprise-solution 
"It doesn't work" is not a valid error description - What should it do - What does it do - What errors does it print Also, if you write 4 spaces in front of your code it shows up as such : public static void main(String[] args) { System.out.println("Hello World"); }
http://www.reddit.com/r/java/comments/1t8kx4/banking_system_using_hashmap_and_linked_list/ would be nice if there's someone to help me with this
You don't have any OR operators in that code. The first one which "worked" is executing the code if NOT(k==i AND l==j). So the only time it does not execute is when both conditions are true. The second bit which "didn't work" is executing when NOT(k==i) AND NOT(l==j). This is not the same as the first condition you have. tl;dr Your first condition is NAND and the second condition is NOR. Your code might have been "not working" because of these differences.
http://www.reddit.com/r/java/comments/1t8kx4/banking_system_using_hashmap_and_linked_list/ thanks bud
I guess that you got [DeMorgan's laws](http://en.wikipedia.org/wiki/De_Morgan's_laws) a little wrong: if you have a &amp;&amp; b and use DeMorgan on it it would be !(!a || !b) - so, in your second (not working) if you should probably change the &amp;&amp; to || and it should work.
WOW! First thanks a lot for your answers... So... Here is a better Code Snippet to understand what i wanted to do: for(int i = 1; i &lt;= this.spielFeld.length; i++){ for(int j = 1; j &lt;= this.spielFeld.length; j++){ counterForAwake = 0; for(int k = (i-1); k &lt; (i+2); k++){ for(int l = (j-1); l &lt; (j+2); l++){ if(k == i &amp;&amp; l == j){ }else{ if(helpArray[k][l] == 1){ counterForAwake += 1; } } } } Only this Snippet worked so far...
No, that's not a better way of telling us what you want to do. Use words! Nice descriptive words, ideally formed into sentences. You keep saying things like "it worked" or "it didn't work", but you're giving us no idea why it didn't work. Please read [this post](http://www.reddit.com/r/java/comments/1t8ne6/and_and_or_operators_in_java/ce5gef0). I could write public static void main(String[] args) { System.out.println("Hello World"); } and say it "didn't work", but until I tell you that what I *really* wanted to do was print all the integers from 1 to 10 (but instead all I'm getting is "Hello World") you've got no way of telling me *why* it "didn't work".
Okay... So i have to Programm a "game". e.g. there is a two dimensional int array with a length of 3 and the array is only filled with 0 and 1 (yes it has to be an int array not boolean) every field has 8 neighbors ... (upper left, up, upper right, right, down right etc...).If the field is a corner or an edge the neighbors are the opposite fields. if exactly 3 of the neighbors are "alive" (1) then the field i am going through become alive too. Here is a little example : 1 0 1 0 1 0 0 0 0 imaginary: 0 0 0 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 0 0 1 1 0 1 1 becomes 1 1 1 1 1 1 1 1 1
 for(int i = 1; i &lt;= this.spielFeld.length; i++){ for(int j = 1; j &lt;= this.spielFeld.length; j++){ // Look at all the nearest neighbors and count the number of alive spaces counterForAwake = 0; for(int k = (i-1); k &lt; (i+2); k++){ for(int l = (j-1); l &lt; (j+2); l++){ // Remember we need to ignore the square we are on - check k and l accordingly. if ( !(i == k &amp;&amp; j == l) &amp;&amp; helpArray[k][l] == 1 ) counterForAwake++; } } But having 4 nested for loops is probably not the best way to do this anyway. It'd probably be better too if you used more descriptive indexing. It's rather easy to mix up which indices i, j, k and l are keeping track of.
"Better"?
We use tinylog for our performance sensitive applications, because it's much faster (and more importantly it doesn't slows down with multiple threads logging parallel) and easy to extend. &lt;http://www.tinylog.org/&gt;
NAND != AND
My concern now is after building a netbeans project (and generating all necessary files to do so) how do we ignore the NB specific files. I basically need them to hang out on the file system without any attention from git. There is the .git/info/exclude file seems to be build for such a concern, but after trying this out I found the project meta data is lost and the project no longer knows its own structure. So the question is, what to do with editor specific files in a project?
You may want to look at how JS is used today, e.g. Node, Grunt....
Im going with: Speed improvements, language improvements, growth in use, growth in supporting libraries.
We should write it off as soon as a half decent language is out there and is production ready. That's just my opinion, of course.
We don't include editor-specific files. Everyone just sets up the project whatever way they want.
If this is news to you, you have been living under a rock.
&gt; not teaching it right, and then asking irrelevant questions. So true. Holy crap.
On a side-note, don't buy any of the prerequisite books. First time post-secondary students always waste a _ton_ of money on books. If it is a beginner java course, any beginner java book will do. There are tons in your school's library, check one out.
Thanks for the tip, DryWenis...
As far as the project files created by your IDE, I recommend adding them to .gitignore and then committing .gitignore. This way everyone who checks out the project will have the same files ignored and you won't get discrepancies if someone forgets to exclude a file on their dev box.
I agree with you fully. What I said is always to late for that particular error. It's usefulness is rather that the next time you will get more information. This covers almost all scenarios but indeed sometimes it won't help at all. I like your solution and also the one in the blog if you can indeed limit in a good way. I will probably implement this myself. 
You can effectively disable it with something like this: -Dsun.rmi.dgc.client.gcInterval=3600000 -Dsun.rmi.dgc.server.gcInterval=3600000 You can also do this system-wide with: -XX:+DisableExplicitGC 
Don't get me wrong, JavaScript is fantastic in the way that it's enabled web browsers to become de facto universal application platforms. It has literally revolutionized the world. But, it's widely acknowledged that it has a pretty expansive set of flaws and inconsistencies that are an artifact of the original ECMAScript spec being written by a single person in just 10 days (couldn't find an explicit source for that bit - but trust me on that). I would argue it's a bad language on the basis that it's pretty unusable without jQuery or similar (at least, in the browser). There's also the arcane wackiness of prototype, functions as objects, etc. You should watch [this](https://www.destroyallsoftware.com/talks/wat) and read [this site](http://wtfjs.com/) if you haven't already. As for execution speed, that's really more of a result of resources being dedicated to JS over other languages, not some inherent property of the language itself (for reference: http://stackoverflow.com/questions/5168718/what-blocks-ruby-python-to-get-javascript-v8-speed)
What would be better would be changing the garbage collector to one that better meets the requirements for the project. If responsiveness matters then they shouldn't be using such a basic GC with a massive "stop the world" phase. 
Pretty sad cargo culting going on in that thread, considering you can very easily download the source code and read it.
Do your own homework. Hate to say this, but paying someone to do your homework is horribly academically dishonest, and could get you expelled from your school. I'd be willing to walk you through the homework so you understand it, for free, but you have to be the one to do the homework. But I absolutely refuse to do someone else's homework for money.
are you serious? Why are you even in a Java course if you aren't committed enough to do a simple assignment? Not to be mean, but don't post shit like this. Education is a privilege that you are lucky enough to have; treat is as such. 
Why don't you use a Linux VM using VirtualBox or VirtualBox+Vagrant?
What does your Book class look like? Have you tried running the program through the debugger? Or at least trying putting System.out.println() statements in the loop to print what you received using `file.nextLine()`;
I think he made the title and author variables in the Book class static. That's all I can think of (I tested the program and recreated the Book class and it worked just fine...)
Book class: public class Book { static String title; static String author; Book(String titleinp, String authorinp){ title = titleinp; author = authorinp; } public static String getTitle(){ return title; } public static String getAuthor(){ return author; } } I tried putting the print statements below right after the two nextLine statements, and can confirm that the Scanner is reading it correctly. The two file.nextLine(); statements are getting what they should. titleinp = file.nextLine(); authorinp = file.nextLine(); System.out.println(titleinp); System.out.println(authorinp);
I did, how should I change it so they will work without being static? EDIT: Nevermind got it! Thanks guys!
Not really questioning anything or saying anything bad about java but are you sure java's the best language to learn for what he needs? Oh and I personally don't really like books and prefer using online tutorials and what not, but that's just me.
I assume it's escaped all the up-voters attention that both Nitsan Wikart and Martin Thompson have commented on this article to say that the guys implementations are buggy in a fairly large variety of different ways.
I was potentially thinking Python but I feel like this would be a language he would really enjoy since he likes heavy structure. 
Hmm, before learning a language I'm thinking he should probably look around a bit, maybe research a few differences between the many languages out there and then choose. I mean in all honesty I'm pretty much a hopper, when I was a kid I just went from language to language. I got bored of one moved to the next, and now I pretty much have experience all around(then again you can also say I haven't mastered either of them). What I'm trying to say is every language has it's pros and it's cons and before just jumping to java maybe you should look around you might find something better or what not. Then again jumping right in is fine too, if you learn java learning other languages (specially based on c) will become a lot easier. Sorry about all that rambling...
That would be nice, I was hoping Scala would add this.
A DirectX implementation....oooo....I so went there.
The latest open source version is called wildfly. Take a look at this github.com/wildfly/quickstart. It has a great collection of sample programs. There is a hello world JMS as well. Let me know if u need any help. I have also just now started to work on jboss.
Haha mac users would rage so hard. "But we can't use that library! Why is Oracle favoring PCs?". It would be great except for the fact that you would have to put the import in a try/catch or something so it doesn't screw up people without DirectX. But that would be pretty great to have.
Why don't you do it the fun way: create a network client to get the HTML from the site, use javax.xml to implement an HTML parser, use the Java 8 snapshot &amp; use the JavaScript engine in it, render it to the screen for a single frame, and then take a screenshot? Haha, just kidding, but this would be hell-a fun to do.
Aren't Scala's [implicit classes](http://docs.scala-lang.org/sips/pending/implicit-classes.html) fairly close to Extension Methods? It's been years and years since I've written C#, but it seems like that would do the trick. Yes, you are defining a new class but the conversion is automatic/implicit so I'm not sure if the difference matters? 
I'm probably going to do it the easy way first, then do it the funsies way second. Solving for a business problem and teaching myself java at the same time!
You didn't think there were many standard library changes in Java 8? Are you talking about the same Java 8 we're talking about?
HornetQ in particular. Although I'm not really sure what the difference is between them.
I never really understood what JBoss is or why I would want to use it.
Close, but if I understand correctly c# allows for this, without a lot of effort, at runtime.
http://commons.apache.org/
Head First Java
I would highly recommend looking into Thinking in Java, by Bruce Eckel. Also, as a secondary thought, I don't particularly recommend Head First Java, though I know a lot of people like it. You may want to decide based on your father's tastes.
A sane serialization/cloneable.
Native json support maybe? A better library for converting html/CSS to PDF maybe... I was using flying saucer... 
commons-lang [per definition](http://commons.apache.org/proper/commons-lang/proposal.html) provides those classes which are not in the Java API. Is is not uncommon that features which commons-lang provides appear in the Java API and are then removed from commons-lang. I have used a couple of other packages and while commons-lang is probably part of 90% of all projects, the others are just way to specialized to be a part of the Java API. It's important for Java developers to know which features are easily accessible through the commons, but I think the line has been drawn pretty well. Another thing, and I have no idea if this is normal in the commons, but commons-math keep changing their interfaces and packages. They can't seem to settle down. Once something is in the Java API, it's bolted to the ground and will stay that way for a *long* time.
JSON seems like such a silly thing to have to get a library for, especially since it's a [proper format](https://tools.ietf.org/html/rfc4627) and its big brother XML is [supported by the Java API](http://docs.oracle.com/javase/tutorial/jaxp/dom/readingXML).
New stuff isn't needed as much as the permanent retirement of certain parts of the JDK. e.g. Applets.
[Guava](http://code.google.com/p/guava-libraries/wiki/GuavaExplained)
I have used JBoss at work for almost 2 years now. We use it with Hibernate (Mapping objects to tables ORM http://hibernate.org/) and we use DROOLS (http://www.jboss.org/drools/). I personally think both are worth experimenting with, Hibernate you can run HQL (Hibernate SQL to get specific objects you want using dot notation (i.e Cat.owner = "desiguy_88"). But I don't read about many people on here using DROOLS. These are rules that run on a type of object during update/insert/delete/etc. So rather than implement common code across your whole application every time you manipulate an object these can be run via drools (i.e. Every time you receive a package it can be made to increment the total stock of another object). There is even a whole game tutorial using drools just to show you how powerful it can be. You can also use it for validation if you have many developers on the same application and you want to strictly control object states (not very sustainable though).
Getter and setter shorthand syntax like c#. While I never delved far into c# I knew when I first saw it, java definitely needed a similar implementation.
Although I agree, I think OP wanted us to discuss the library, not language features.
I sent you a PM. Make sure to include the price.
well, that's kind of like responding to (pretending for a moment that it didn't have them) "Scala needs generic types" with "You can do it with an annotation parser".
You could also reduce boilerplate code by not writing boilerplate code. Proliferation of getters and setters means you're Doing It Wrong. Stop asking your objects for data and instead start asking them to perform operations and giving them the data they need.
What's wrong with the current ones ? Lacking flowers and a smiley ?
A good HTTP client library. CacheBuilder from Guava. JSON support. 
IKR? Serialization is so simple in every other language and just makes sense. But when I came to Java it took me a few weeks to completely understand the whole serialization thing.
That would be nice. I think that if they don't make that they may as well make inline methods for getters and setters.
OSGi and Maven.
A standard way to launch across operating systems, rather than homebrewed shell scripts and custom installer-launchers. java -jar almost did this, but screwed up in that you still have to manually make the mega-manifest to list the whole classpath, and you have no control over essential parameters such as maximum heap memory.
One could go ahead and reuse some of the OpenGL source code to adapt it to DirectX (At least the natives stuff). OpenGL really just calls upon the operating system to connect to the GPU, which isn't that hard to do in C. Also, I kinda want to make this for you now. I mean, I know C++, so if I learn all about DirectX implementations, I can actually make a JNI library to use DirectX (similar to how LWJGL and JOGL work). Tell me if that's something you would be interested in.
Thankfully, I do not.
Thank you that was helpful. Could you provide sample code of a constructor being used?
public class Person{ String name; public Person(String n){ this.name=n; } } Now in main you can say Person p=new Person("Steve"); this will now make a person object with the name Steve. You could overload the constructor and make more that take different arguments. So for example //one with no name given public Person(){ this.name="No Name"; } 
They're just different competing implementations that conform to the JMS spec. The biggest decision factor is typically what tools you're already using. https://access.redhat.com/site/discussions/445923 If you're already using JBoss EAP, then go with HornetQ. If you just need a messaging broker and want separate clustering, go with ActiveMQ.
(Full disclosure, a bunch of my consulting work is on the ServiceMix stack, so I'm probably WAY biased.)
TIL; very few reditors on /r/java get the difference between library and language features.
I'm guessing nagios
I'd say to check out the documentation, but it's outdated and much of the information is difficult to follow or it outright wrong. I gave up using it. It keeps saying "go to JBOSS_HOME/server". HEY JBOSS, BUT THAT FOLDER DOESN'T FUCKING EXIST.
Put four spaces before a line to put it in code formatting, or wrap each line with the ` character.
You say this until you have an actual application for using one. Java has been fucking my company for the last year with constant changes to Applet/Webstart we're about to drop Java support on Windows. It might actually be easier if Java just stoppped supporting it as of X version to force us to do this for all platforms. That said, Applets -- in the right context -- are VERY handy. 
Headfirst Java explained it pretty well for me. Say, for example, you create a class Dog. The dog isn't actually created until you call it from main with a constructor. // in main Dog Fido = new Dog(); Class Dog alone is just a blueprint for creating a dog. A constructor "constructs" your objects (dogs) in main, or brings them to life. You can create multiple dogs with the single Dog class. Dog Spike = new Dog(); Dog Max = new Dog(); The parentheses can be used to pass in arguments, or variables unique to that certain dog/object. For example, its age, breed, weight, etc. // passing in age, weight, and breed into class Dog Dog Spike = new Dog(2, 30, "black lab"); Dog Max = new Dog(5, 80, "mastiff"); Of course when the class Dog is written it will need to expect to receive these parameters. Another thing helpful to me from the book was understanding how to use the object once you've created it. For example, if class Fido had a method called "bark()" that played a sound when called, then to make Fido bark you would type: Fido.bark(); // in main Think of this as a remote control. Fido is the name of the remote control (the name of your dog), the dot is you pressing a button on the remote to make him bark. Hope that helps! Edit: I used main as an example, but a constructor can be used in a lot of places
Seconded. It's fairly easy to set up and use JPA. What version of JBoss do you use?
You're making a network call on the UI thread, this won't work.
Except the scripts that are used to put all the necessary libraries in place aren't completely compatible with OS X out of the box (as far as I can remember).
Me? I'm not on JBoss at the moment, I switched jobs since last time I used it. Now I'm working on maintaining and improving a big "modern-legacy" system that runs on Spring/JdbcTemplate mostly. The system is extremely badly designed but I'm trying to improve it bit by bit... I kinda miss JBoss and having a proper database, not some weird OLAP beast.
If he is a physicist he may prefer the rigor of Java. Plus there are a ton of libraries that he can use to do the heavy lifting. Python is great for messing around and getting things done quickly, but if he already knows Pascal, he will appreciate Java more than Python because it is so strongly typed.
Hello! I can fully understand that you want interaction with others trying to learn. However it will be more productive to just google concepts like these, I bet it's well explained and all over the place. Then when you "kinda get it" but still have questions, then I recommend you coming here. For example if your code won't run and you can't understand why. Good luck!
You should *always* wrap the body of conditionals with braces; in this case, you are expecting 'count = i; break;' to only happen when str.charAt(i) == 'x'. In fact, because there are no braces after the if on line 8, only the count = i line will be executed on line 9. This means that the first time through the loop, you are hitting 'break' and exiting the loop. Change lines 8 - 10 to read: if (str.charAt(i) == 'x') { count = i; break; } You should then get a different result. 
Hello! Skipping brackets in statements is commonly considered bad practice. Don't do that and you are golden ;) Answer here: http://pastebin.com/Q7YYYeap if you want more help
&lt;headdesk&gt; THANK YOU. perfectly obvious, now that you've mentioned it.
Missing brackets around the if block inside the for loop... Ie the code hits the 'break' statement every time through the for loop Edit typo
Call me gold-plated, then. ;) Thanks!
My professor made us repeat this like a mantra: "The constructor initializes the instance variables". Any instance of a class has its own set of instance variables. The constructor is where the object, and thus its instance variables, are set to their initial state.
Remember: everything static is linked to the class (and can only be called by referencing that class). Everything non-static is linked to the object (and can only be referenced through an instance of that object). Example: public class Dog{ private name; private static exampleName = "Fido"; public Dog(String name){ this.name = name; } public String getExampleName(){ return exampleName; } public static String staticGetExampleName(){ return exampleName; } public void setName(String newName){ name = newName; } } public class makeDog{ public static void main(String args[]){ Dog d = new Dog("Fido"); //Create the dog d.setName(d.getExampleName()); //Notice that we are calling the method from the object (d) d.setName(Dog.staticGetExampleName()); //Notice that we are calling the method from the class (Dog) } }
Currently that's what I'm doing, except I'm running a VMWare windows client. If I able to get a weblogic 9.2 server on my mac I can test locally without having to use my Windows VM and use the IDE of my choice.
Others have already mentioned the braces, so I won't bother, but there's something else you need to consider. It looks like your method will return true on the string "axxbb", but what about "axbbaxx" ?
As you've already been instructed by others to use braces to denote blocks, I'll just point out that your still doesn't function correctly for all inputs. Try with e.g. "axaxx" and see if you can come up with a reason why it doesn't work.
Yes Really. Of course there are alternatives but if you are an Architect you should really be familiar with the standard and most common practices used by most web applications. You should also know that using Getters and Setters can be used in POJOs and EJB is not required.
Look at what Kapuzimo wrote and tell me.. without the constructor (which is this: Person(String name) {...} ) What value would the private instance variable 'name' have if you didn't have a constructor? Certainly not the one you want it to have. If you want to really water it down think of the constructor as a sort of method that is called when a class is instanstiated. It gets everything 'setup' so the object can be used. For example when you buy an alarm clock you don't just plug it in and go. You set the time, and perhaps set an alarm, maybe if you're lucky you can program radio station presets.. these are all things that the constructor would do for you in programming. Edit: the best way to learn programming is by practicing. It's sort of like math in that way, you need to do basic problems over and over so you recognize patterns and can recognize types of problems. What are you using to learn? What examples do they have? 
When you write a class with data members, functions, etc., and you call it, the constructor initializes each of those data members. You couldn't use any of the functions without initialized data members. 
The constructor is just a method that gets called when you make a new instance.
Besides just the bracket issue, this will not work on strings that have a single X and then two x's later (axbxx, ect). I also believe that it'll throw an error if x is the last character in the string but has no X before it (you would call charAt(i+1) when i was already the length of the string) 
I did find an index issue when the matching condition came at the end of the string. 'Tis now fixed. Thanks!
To be honest, is there much point? Once you've gone for DirectX you're pretty much on Microsoft territory anyway so you may as well use the numerous C# wrappers.
Your problem has been solved, so while I'm here, I may as well say that there's a better way to do it. for(int i=0; i&lt;str.length() - 1; i++) { if(str.charAt(i) == 'x' &amp;&amp; str.charAt(i+1) == 'x') { return true; } } return false;
yeah, I knew this wouldn't work for strings longer than my "magic number." And I do like the idea of setting count = -1 at the start.
You know, I actually didn't state the problem clearly enough at the start -- it was to test if the *first* instance of an 'x' was followed by another 'x'. So it's supposed to return false in the case of "axbxx". That's why I tossed in the "break" since I didn't care about interviewing the rest of the string past the first instance. ...shoot, now I'm gonna try and write the case for the whole string, because I'm curious.
Learn to use a debugger. With a debugger you would have found the problem in a minute.
Nice. Got a similarly short-n-sweet version that includes the condition that it has to be the *first* instance of "xx"?
Honestly, I can fully appreciate how this feature could easily be abused.
I'm about to fancy your pantsies. return str.contains("xx"); 
Also, you should use the standard java code layout where if statements have a level of indentation. Your IDE will have an auto-format option. This is one of the greatest things ever, learn the keyboard shortcut for it and press it ALL THE TIME. :-) Any mistakes like this will leap out at you because it would change your code to: if (str.charAt(i) == 'x') count = i; break; Intelij is: ctrl-alt-l (that's a lower case L) I think Eclipse is ctrl-shift-f but it's been a while and that may be wrong
And also the "isEmpty()" method.
I use ctrl-I in eclipse, but that might just be segment by segment 
Did you test with a string that contains a single x before double xx? Like axaxx.
Use indexOf(). You can fit it in one line following a return. You might need more than one indexOf(). return ?
How's that?
Serialization is a marker interface that relies on special JVM support to do its job (instead of being done in the language), and cloneable... well, As you probably know, every `Object` has a `protected clone()` method, even if it doesn't implement `Cloneable`. If an object is not `Cloneable` and you try to `clone()` it, it throws an exception. Like `Serializable`, `Cloneable` is a marker interface that does not specify any actions or behaviors. If you implement `Cloneable`, your code will compile and run without any further modification... *until* you actually do the cloning. Then it will crash. If you want it not to do that, you have to override `clone()` from `Object` in your `Cloneable` class. So, you can try to clone objects without `Cloneable` and fail, you can try to clone objects *with* `Cloneable` and fail, you can try to clone objects with `Cloneable` and succeed, and you can even try to clone objects *without* `Cloneable` and succeed, because you can override `clone()` without inheriting from `Cloneable`. In other words, `Cloneable` makes absolutely *no* useful guarantees or promises about the clonability of an object, which is the *only purpose of an interface*.
Shortest I could think of right away that is only true if the first x is followed by an x without relying on logic provided by the String-class: for(int i = 0; i &lt; str.length()-1; i++){ if(str.charAt(i) == 'x') return str.charAt(i+1)=='x'; } return false; Edit: One liner using more "advanced" methods on the String-class: return str.contains("x")&amp;&amp;str.indexOf("x")==str.indexOf("xx"); Edit2: And just for the hell of it, the regexp version: return str.matches("[^x]*xx.*");
came here to say the same thing. This is the best advice for a beginner. Teaching someone how to fish and all that....
Everything. From security problems creeping in since the Oracle takeover to verbosity and the paucity of the standard library. Android took a huge risk on Java for mobile with Dalvik. What did they get in return? A lawsuit. 
Why are we taught not to use multiple returns? I think I remember being taught this in my initial Java courses, but when I got to C multiple return statements was the best choice I ever made. I remember writing connect four logic in Java and using multiple returns made my code much more efficient.
But if it's axbxx then it will return the wrong value based on his criterion. 
It seems like it's been solved, but I'd like to suggest a more efficient way int i = 0; while(str.charAt(i) != 'x' &amp;&amp; i &lt; str.length() - 1) i++; return str.indexOf("xx") == i;
It is used by Grails 2 to hot redeploy during development phase. If you want some kind of live deployment during production phase, try OSGI.
Ah, interesting. I did notice that Grails used something from spring for this, didn't realize it was this project 
Oh puhleeze return str.matches("^[^x]*xx.*"); 
[robertwilliams writes](http://www.reddit.com/r/java/comments/1tc4ez/new_to_java_working_through_short_exercises_could/ce6t17j): &gt; return str.matches("\^[\^x]\*xx.\*");
Google for Swing Tutorials, e.g. http://docs.oracle.com/javase/tutorial/uiswing/
&gt; try OSGI. Waiting with bated breath to see modular Java... hopefully it'll only be another year. Trying to port large existing codebases (w/ large dep graphs) with OSGi proved a painful experience for me, not that I expect Jigsaw will make it any easier necessarily. I havent tried for a few years, maybe the maven plugins for osgi and the containers/spec have improved significantly since then.
Awesome dude thank you!
Thanks. I might take you uo on that. Ill probably start by setting it uo on my computer amd see how that goes. Over the year ive gotten pretty well versed on J2SE, this will be my first project using J2EE so its going to be a learning curve 
Nagios, Zabbix, and Zenoss
or hell just throwing println's every where to find where the code does work as expected, mind you this took me far to long to figure out.
I love those sort of tools but there is one thing they all fuck up: they want me to "reduce" my self-documented code into an unreadable mess using things like the () ? : construct. None of them like this: if(hasFeature()) { return testFeature(); } return false; And they all want to see it become: return hasFeature() &amp;&amp; testFeature(); or return hasFeature() ? false : testFeature() both of which suck for readability imho.
No, I meant Swing. I think Swing is easier for a beginner to learn, and every concept you learn in Swing, you can re-use in JavaFX when you're ready. 
JBoss AS is ok but basically you should design your app to be as container-agnostic as possible, then you can switch your container any time you want. find the one that works best for you. The core of your app should run with maven's embeddable jetty (or something with that level of automation) - that way you can reduce the development cycle and write proper integration tests. that said, why jboss? do you really want to learn jboss for a specific reason? it's not bad, Jboss as7+ (I guess it's called wildfly now?) is a completely new product with a lot of good features. but i use embedded jetty for all my java EE apps until i deploy to production, which is usually out of my control at that point. many apps use tomcat in production.... i don't recommend that as a development container for JMS you should check out ActiveMQ. you can embed a broker in your vm (and externalize it later) if you configure it to use url "vm://localhost"
what version are you using
learn to differentiate between the spec and the container implementations, the spec itself has all you need to code against. my apps are usually a hybrid of JEE (formerly J2EE) specs and spring. 
I evaluated HornetQ but stayed with ActiveMQ, but I didn't have any high load apps... ActiveMQ was much more mature and robust
(in a normal application), the code that talks to hornetq should mostly use JMS classes. hornetq just uses that code at runtime.
It's an app server. You'd use it to leverage pre-existing functionality which is dictated by the JEE specifications, and focus on writing your business logic. Then you can deploy it to that platform.
What does "app server" mean exactly? What kind of app? What protocol does it speak? I have no idea what kind of functionality is dictated by the JEE spec, so telling me that doesn't help much. As for as I can tell, phrases like "leverage pre-existing functionality which is dictated by the JEE specifications, and focus on writing your business logic" doesn't actually say anything. It just sounds like buzz word bingo to me.
So, is it just a web server? If so, why not just call it a web server? Is it more than a web server? Then what all is it?
if you mean "app server", it refers to an application server, which typically includes a web server. but that's only part of what this server provides, it can provide an EJB container, it can provide a JMS implementation, it almost certainly provides a servlet container along with the HTTP (web) server. "container", "server", "app server", these are generic terms that refer to an application platform of some sort that you run and that you deploy your custom software into. the software you write runs in this environment. here's a more detailed and correct explanation: http://en.wikipedia.org/wiki/Application_server (actually I take that back. most of that article isn't good)
elaborate good sir/maam.
The best way to practice skills is to use them doing something real. One fun idea is to try the programming challenges here: /r/dailyprogrammer There's the classic: http://projecteuler.net/ Here's a big list of project ideas to tackle, from simple to ridiculous: https://github.com/karan/Projects
Nagios is alerting. This seems to be reporting, Zabbix and Zenoss combine both. Another option is Hyperic
Thanks for the links. Been slacking on my skills. Although I prefer web based apps etc. I am looking forward to digging back in. Again thank you
Check the course description here:https://www.udacity.com/course/cs046 , and see if you covered all of the material. If not then make sure you have mastered it all. After that if you are purely wanting to master Java, start working on some of the projects at the links that sh0rug0ru provided. Once you feel ready to learn something new, Udacity, Stanford, and other sites also have other free basic through expert level courses that will teach you other technologies and concepts that can help, once you feel comfortable pushing your boundaries a bit. There are even classes focused on mobile or web development, databases, or just about any other thing you could want to learn. It's really up to you, and what you are interested in. If you ever want to get into java game development, a good starting point is libgdx, and looking at all the sample projects(though this should be after you learn about data structures, etc). I wish you the best of luck! https://class.stanford.edu/courses/ https://www.udacity.com/courses http://libgdx.badlogicgames.com/
I do, it's just a bad habit to push people into if it's the default setting. Everyone goes through a phase of "check this cool syntax" until they need to revisit something five years later when they realise what a pain it is to read!
Libgdx seems awesome! Definitely keeping that in mind for the near future. Nice tip. 
If your Java's pretty decent, and you're interested in 2D game development, [this tutorial series](http://zetcode.com/tutorials/javagamestutorial/) is a great intro to making simple games. 
What I'd want most from Guava in the JDK is, in this order: * Immutable collections * More collection views (such as [Lists.transform](http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Lists.html#transform(java.util.List, com.google.common.base.Function))) * Multisets * Multimaps (My placement of multisets above multimaps might be a lie. It's just that I imagine multisets have a better chance of actually appearing in the standard libraries.) Usually I have this opinion: if it's in Guava already, why bother putting it in the JDK? Java 8's default methods on interfaces changed my mind. Many of the concrete classes in the JDK got better implementations of those methods than the defaults, e.g. ArrayList.forEach. Third party libraries were left behind. I mean, they don't break, and they get the new default methods for free, but they don't get the optimizations they would have if they'd lived in java.util. Now going off-topic for this Guava-focused thread... The other thing I'd really like to see is primitive collections. But that might be classified as a language feature rather than a library change. I definitely wouldn't want to see the gargantuan, machine-generated Trove codebase in the standard libraries, despite how awesome Trove is.
Well I didn't ask anything about `Cloneable`, but since you seem to have some strong opinions on that, I'll write down some thoughts as well. &gt; If you implement Cloneable, your code will compile and run without any further modification... until you actually do the cloning. Then it will crash. I don't know how you clone your objects, but when I do it, it works just fine: public class MyObject implements Cloneable { public static void main(String[] args) throws CloneNotSupportedException { new MyObject().getCopy(); } public MyObject getCopy() throws CloneNotSupportedException { return (MyObject) clone(); } } Yes, `Cloneable` should not be an interface since it doesn't declare any methods and the method that it enables is protected, so it doesn't make sense to use `Cloneable` as a generic type. It should probably be an annotation. However, those were not around in [Java 1.0](http://www.tns.lcs.mit.edu/manuals/java-api-1.0.2/javab4.htm) and once you put something in the Java API, it's hard to get rid of. Also CloneNotSupportedException seems like the epitome of unchecked exceptions, but that might just be me. I think that people get confused because they assume that `clone()` should be a public method, which was not intended. The javadoc above says nothing about a public method. In version 1.2, the javadoc of `Object.clone()` says (sorry I only found a download for this, so no link): &gt; The clone method is implemented by the class Object as *a convenient, general utility for subclasses* that implement the interface Cloneable, possibly also overriding the clone method, in which case the overriding definition can refer to this utility definition by the call: &gt; &gt; super.clone() This right here is the intention of the method and interface. Now suddenly in version 1.4 the following pops up in the javadoc of `Cloneable`: &gt; By convention, classes that implement this interface should override Object.clone (which is protected) with a public method. This unfortunately does not make any sense. To use the protected `Object.clone()` method, you show *not* override it since it will not be accessible from subclasses down the line and nobody specifies the behavior of any *public* `clone()` method. `Object.clone()` would have had to be made *final* in order to make its functionality available to any subclass down the line. In fact, all the problems and bugs of cloning arise from subclassing. But subclassing immediately renders cloning pointless, because a class is not in a position to decide that its superclass' field can just be copied by reference and vice-versa. I think that general cloning is a bad concept. To get a an instance of an object that is *identical* to another instance is something that will vary from case to case. While I rarely encounter a situation where I have to do this, I believe that you should handle it case by case instead of trying to generalize it. In order to obtain a copy of an object, you have to ask yourself "where is this object from and what is its relation to other objects" and almost always this can only be answered by a collaboration of the object and the instance who is holding the object. The `Cloneable` interface provides *a convenient, general utility for subclasses*. It promises to do that, does that and only that. The idea of a public `clone()` method in combination with the `Cloneable` method is pretty damn flawed and confusing everybody, but that's not the language's fault. I am guessing the `Serializable` interface is pretty much there to make you think for a second about what's going to happen to your class when it's going to be serialized or deserialized. It pretty much says "I thought about it and the JVM will not catch on fire when someone tries to serialize this". Since Java 1.5 the `Serializable` interface makes the compiler give you a little warning when the class doesn't have the `serialVersionUID` field. This could have been accomplished by an annotation (introduced in the same version of Java). Unfortunately, in contrast to the `Cloneable` interface, which *does* guarantee the `Object.clone()` method to work, the `Serializable` interface does not make any guarantees since any field of an implementing class can still prevent it from being serializable. So basically the `Serializable` interface is just a nice label to slap on anything that is serializable in the developer's opinion. Now what's really strange is that [ObjectOutputStream.writeObject(Object)](http://www.tns.lcs.mit.edu/manuals/java-1.1.1/api/java.io.ObjectOutputStream.html#writeObject(java.lang.Object\)) was not introduced as ObjectOutputStream.writeObject(Serializable), which gives the whole thing a very strange taste. So yeah, I agree that this interface was utterly useless until the `serialVersionUID` field was introduced, but at that point annotations were available. On the other hand, the actual serialization is really easy to use, duplicates flawlessly and is reasonably fast, so I am glad to have it. Both cloning and serialization are a tough topic when inheritance is involved and I think that it should always be thought about intensively and handled case-by-case. Java provides mechanisms to copy an object field-by-field and to serialize arbitrarily complex objects and while the interfaces around these are questionable and even confusing to some, everything works out quite decently. (edit: it's -&gt; its)
An annotation starting with A LOWER CASE LETTER? **KILL THE TRAITOR!**
What do you mean code? I thought we were organizing a trip to [Java](https://en.wikipedia.org/wiki/Java) :(
Where is this intended to be used? I got that it integrates with SWT and seems to be for web applications. Could someone give a quick overview of this?
Any links?
No fluff just stuff used to be pretty good a few years ago. I haven't attended in a few years so I don't know if the quality has kept up. http://nofluffjuststuff.com/
Which GUI options are available will depend on what you are looking to create - i.e. something graphically demanding which would need to run on the client, or something simpler which could run through a web page? For a client app (and this may not be a popular comment) I'd say Android - I find it the easiest way to get something onscreen quickly, and provided you've got a decent enough PC testing through the emulator is sufficient. For a non-Android client, JavaFX is meant to be much better these days, I believe since version 2. JavaFX is a replacement for Swing - I've not used JavaFX since the early days (when it wasn't great), but Swing never appealed to me, the code always seemed far too clunky. For web stuff, my personal preference is JSF with Primefaces - others will say to use Spring MVC. No point kicking off that particular argument without knowing if this is a route you're looking to go down though! Main thing to do is think of a project that appeals to you (for me it was a Sudoku solver, a basic photo editor, something for organising photos of my child, that kind of thing), as without a project that you're interested in you my find it a chore to put the necessary effort in.
The 12c ones are for sure.
I'm really new to Java and to programming in general but could you tell me how having two functions with the same name of "Dog" doesn't end in error? So far I've been taught that multiple functions with the same name is a no-no. Thank you for the example and any possible help :)
&gt; JavaFX is a scene graph The scenegraph, along with FXML, CSS, etc., are reasons I recommend beginners start with Swing rather than JavaFX. &gt; the ugly threading work you need to grok very early on with Swing. You actually don't need to grok the threading work very early at all. There are lots of Java applications there that initialize the UI on the wrong thread, and yet they seem to work fine every time they're run (i.e. the race conditions we get warned about don't seem to happen within 10'000 runs). Doing any Desktop UI work is unfortunately complicated in Java. Swing is less complicated than JavaFX, and thus is the route that will lead to the quickest learning curve, IMHO. &gt; Spend a few hours tinkering with JavaFX (especially 8 now with 3D!) and you won't be recommending Swing after that. I don't recommend beginners look at 3D at all when they're learning how to write GUIs for the first time. I think the problem here is you're trying to recommend a framework to use for actually writing GUI applications. That's not the question being asked here. The question is a recommendation for a framework to use to *learn* GUI programming, not to produce an actual, usable GUI program that will ever be used by anyone after the program is written. It's like telling someone "Don't bother writing a link list, the Java Standard Library already provides an implementation for this." Good advice for real world programming, but if the person is trying to learn, they should do the "wrong thing" and re-implement from scratch things that have already been written by others.
Thanks! Nice resource 
You can have several functions named the same if they have different arguments
It's a bit useless to call it Java EE/EJB when you realise that EJB these days is only a tiny part of Java EE.
www.codingbat.com
I like your attempt to explain the concept "application server". There was a discussion about this here some while ago. I think the consensus at the end was that the term just isn't really well defined anywhere. The problem comes up when you take an alternative for everything that a Java EE AS offers. E.g. instead of JSF pick Struts, instead of the CDI container you pick the Spring beans container, instead of JPA you use bare Hibernate (I know, the difference is small), etc. Now you combine all these services and install them in the /lib directory of Jetty. Is the result an AS? Some argue it's not, saying only Java EE is an AS (and thus evil, which is something I fail to understand). What about all libs that make up Java EE and put them in /lib of Tomcat? Is it an AS? Now it becomes difficult. It's nearly the same thing as with the alternatives. If you so, then what about TomEE? It's an AS and does exactly this. Now put all those libs in WEB-INF of a war. Is the result an AS? Many say no, yet ultimately the JVM is running the exact same classes compared to the /lib situation (with possibly a different class loader).
It's actually Java EE or just EE, but never jee ;)
Sure thing. It's called function overloading. Basically, when you have two or more methods with the same name but different amounts of parameters, the program looks at what you're calling to determine the one to use. This is very useful for library projects or if you're working on a program with someone else. If you have a method that does something useful, but you can have a a varying amount of parameters, you can keep them all the same name instead of giving whoever uses your program a buch of different methods. So for example if I was building my class and had a method that allowed someone to add numbers(up to three parameters), I could tell someone to call the add function with a maximum of three parameters. It would look like this: public int add(int num1, int num2){ return(num1 + num2); } public int add(int num1, int num2, int num3){ return(num1 + num2 + num3); } This way they only call add() instead of add2num() and add3num(). 
I throw myself at the mercy of the Java redditors. :) You are correct.
[Java links](http://www.reddit.com/r/java/comments/1kih0k/learning_java_book_or_online_tutorial/cbphltg).
Yeah, but since they go hand in hand, it makes sense to talk about both. For example I think the C# designers have made great progress by adding features to the language in parallel to the compiler (for example Extension Methods, Anonymous Methods/Classes)
I may have mistakenly took my anger out at jboss when it should be directed at jboss portal / gatein. Regardless, it should be jboss 7.1/7.2 with either the newest jboss portal or gatein 3.6. Neither has a folder structure that lines up with the documentation. In some cases it is nonsensically wrong. In others, there is no actual documentation or the documentation is so far incomplete that it's useless to follow. and now that I look at it, the jboss / wildfly documentation is much more well maintained than the portal side of things over there.
Is there any way to skip the file if it does not have sufficient privileges?
Not to step in on /u/firsthour's comments but after intro classes comes data structures in most schools so the logical next step is to learn those. There are several books on advanced data structures in java but the easiest way is write your own structures and test it against the built in ones.
I agree with /u/geecko. Get an Android book and learn to program Android apps. Android's syntax is based on Java so you can solidify your Java skills, but also expand your skill set.
* [Project Euler](http://projecteuler.net/problems) (Math problems and such), * [Martyr2’s Mega Project List](http://www.dreamincode.net/forums/topic/78802-martyr2s-mega-project-ideas-list/) (various project ideas). You can start with these two resources. If you provide a more specific area you want to do (gaming?), we'll be able to help you a bit better :)
It doesn't help you learn faster. It helps you learn the wrong way. It's faster because it's wrong. It doesn't have to be like that but it generally is. 
&gt; It doesn't help you learn faster. It helps you learn the wrong way. It's faster because it's wrong. Your claim seems self-contradictory. In the first sentence you say it's not faster, but in the third sentence, you say it is faster.
Just said j2ee for so many years, but drop the "2" reflexively ...
We are using JBoss-HornetQ as a messaging service only. A way to get data in and out of a legacy application. The decision to use JBoss and HornetQ was made before I inherited this project so Its not really a choice although with my limited knowledge I simply don't know enough about it at this point to know the difference between the various products that are out there and why using one is better then another. 
To say that only a complete Java EE stack is an application server is bit pedantic IMO. If you want to say "Java EE Application Server" requires a full Java EE stack, that's a bit more reasonable.
Great thread, I just started as a CS major and I was wondering the same myself.
Depends on what interests you and how advanced you are. For instance, if you happen to like League of Legends, Riot released an official API recently so it might be fun to play around with that and learn howto use APIs. Personally, I really enjoy creating webapps with Spring and JSF.
Is that relevant though in this case? The test being performed is if the string's length is less than 2, i.e. a string of length 1 would pass the isEmpty check, and so would need to be checked for. Mind you any check other than not-null on the String is irrelevant for the algorithm being used.
You can catch the Exception and move on, or you can use canRead() method I believe.
yep. i customize the rules for readability over terseness. this includes forcing braces for any control statement and adding spaces all over the place :)
I think I'm at the point with Java where I need to learn GUI. For the last 6 months, I've done nothing but logic (I took two java programming and problem solving classes), and on my own, I'm starting to learn swing and javafx. Swing seems outdated and javafx seems a bit complicated. Would learning android development benefit me? Can you elaborate?
Learn how to make a web server and write HTML/CSS. This is significantly more valuable than and java specific UI. You will be able to write UIs for all of your java projects that work in web browsers (phones also). Unless you specifically want to get into app developing or just use it as a hobby I would not suggest it. Knowing how http works and being able to build a full stack product would probably be more valuable.
Correct. Until WL 10, there wasn't a Mac-specific install script.
I agree, but for some reason not everybody does (and I don't agree with them thus)
Would you say I'd enjoy myself as an intermediate level developer with minimal enterprise experience? 
If you're wanting to go past the basics into some graphics stuff, I'd recommend watching the video series (here)[http://www.youtube.com/playlist?list=PL513808FE7D9A5D68]. It is extremely well-paced and easy to understand and will start the basics of 2D graphics in a game, and he goes into 3D graphics in another series of his. He explains it very well, and makes sure that you will understand it. It uses LWJGL/OpenGL, which is a really good Java graphics solution that everyone should start with. Check it out.
Do you want to do an Android app?
&gt;&gt; If you implement Cloneable, your code will compile and run without any further modification... until you actually do the cloning. Then it will crash. &gt; I don't know how you clone your objects, but when I do it, it works just fine: I stand corrected. I haven't used clone in a very long time for the reasons we discussed.
Is there? It looks like the return is in the catch block.
I don't understand how you know it's "exiting immediately"... Is there something inside the for-loop reporting activity, because I'm not seeing it. Best guess: You have a race condition on GUI.clientSockets.size() where it's 0 when the for-loop encounters it. Otherwise you should get the for-loop body executed, or a stack trace, either from the catch{} or the thread's uncaught exception handler.
It's because I'm assuming that "learn" implies "learn it right". If you want to learn how to do it wrong then yes it's faster. 
After my data structures class last Spring I was in the same boat and wanted to bring my last project to life through a GUI so I turned to my book and Oracle's web docs and taught myself some basic swing. It was relatively intuitive and javafx seemed a little complicated for my first attempt at GUI so I jumped into it. Overall I'd say it was a good learning experience, though, I'm not going to lie, it was some of the most painful and buggy coding I've worked with to date. I'm not sure if I would work with it again if I had a larger more complex project design in mind. Since I have no other perspective I'm going to go ahead and say it's probably well worth it for learning the basics but beyond a certain level of complexity it may not be worth the hair pulling (or even get you what you want). I'll definitely take a look at fx next time around (although I have heard great things about qt for cross platform GUIs if you're willing to learn how that works). Here's the project that I've been fiddling around on and off with since around May for reference and maybe some guidance. https://github.com/ErikThorsson/Virtual-Card-Organizer
Agreed. Euler kind of gamifies coding in a fun way.
is this "GUI" class thread-safe? That's probably your problem.
Use your IDE's debugger and place some break points in your code. You'll know exactly what's happening then.
Sophomore here. Come up with your own little projects that you have fun toying around with and which ideally make your day to day life easier. If you can't, there are plenty of ideas scattered around reddit and the net that will probably inspire you and/or keep you busy. Supplementing school with this will make everything so much easier trust me. Like I'm sure has already been pounded into your skull, the only way I've ever really learned anything noteworthy was by just getting in there and coding. Once you get started, the project will naturally increase in complexity and you'll learn more about random APIs, coding, problem solving, etc than you could have imagined. If you're working with something you find interesting, this will keep your motivation up to solve your way to your goal problem by problem. In this fashion you won't burn yourself out by learning what you don't really need or enjoy, and with this practical application you can stay in a sort of flow. Work put in and satisfaction from application will balance out. I started with a web bot trying to replicate the wiki race game and ended up learning about an API called selenium which automates a web browser. Next, I wanted to keep track of my Magic cards and decks and share them easily so I learned how to build a GUI and over a few months made my first simple app. I used my knowledge of selenium to create a web crawling bot that would get me relevant data for the 14000+ cards I needed for my database. Everything just gradually builds upon itself and it can be really rewarding. Good luck. And remember if you're not having fun you're doing it wrong.
Thanks for your answer, but the problem is that I cannot modify the appliance classes !
I know that. You'd be writing an adapter that implements your Appliance interface and then calls the relevant method on a private instance of the unmodifiable class.
This looks like a task for a programming course where you are supposed to learn about the SOLID design principles; more specifically: about dependency inversion. There is no elegant way to solve this problem. What you already implemented is, in a way, an adapter pattern approach: [Wikipedia](http://en.wikipedia.org/wiki/Adapter_pattern) Maybe I can provide better help if you provide some background information.
that's just it, there's no exceptions and it runs fine when it's at 0. And I know it's exiting immediately because when I type something into the gui and hit enter, it sends a message to the client which would trigger it to shut down. Thus, when I call br.readLine(), it will set s to null. The program works when the println statement is in there, but otherwise, it doesn't work.
that's ok, most people don't know what they're talking about anyway 
okmkz is correct. This is how I would implement the solution as well. Create an Appliance interface and change your plug/unplug to accept this contract. Each implementation would be an adapter for the vendor supplied appliances. Your on/off method would be able to iterate through the list without requiring the ugly Class specific "if" statements.
The return is in the catch block. I misread it the same way initially due to the incorrect indentation.
Probably... I felt that the conference was scoped for the middle-advanced developer, in most cases. I really enjoyed it and am looking forward/hoping to go back this year. 
No, it isn't. You're using a List and accessing it by index, which is inherently non-threadsafe unless you synchronize so that while the list is iterating nothing can be added or removed\*. Not seeing any synchronisation there, so unless you synchronize on the list while calling the method you pasted (and the list is a SynchronizedList/equivalent) then it won't work. &amp;nbsp; &amp;nbsp;^(Actually you can do slightly better than that, but generally if you're thinking of optimising to allow adding after the currently iterated index for example you'd just move to a different collection instead of doing something overly complicated which has negligible/no performance benefit.)
Technically it's not thread safe, but stuff is only added in one place, stuff is only removed in one place, and adding/removing won't cause any undesired results based on how I have it set up.
If you haven't synchronised there's no guarantee that the loop will ever see that something has been added to the list, as the size will be in cache (as 0) likely resulting in the thread doing a loop forever of absolutely nothing as it thinks it's still empty. This would give the appearance of the thread having stopped.
I fixed it.
[Here's an example of someone else with almost the exact same problem](http://stackoverflow.com/questions/13299504/weird-thread-occurence-with-chatclient/13299514#13299514) They were checking a field's value, not the size of a list, so making the field volatile was a solution in that case, but other than that it's just a simplified version of what's happening for you.
Are you sure your first catch{} is not active? It might be getting an Exception... I'm thinking you might be getting a NullPointerException from the stream constructors...
the first catch is supposed to be there. I use that so that for removing the object from a list in the event that the client is closed and the server is not aware of it.
stackoverflow.com
Thank you! that fixed it. This will be useful for the future.
Looking at your code more, the design is actually a bit broken - even with the synchronisation done right, if you have two clients connected it could be waiting for the first one to send something at the `.readLine()` and never reach the second client which has sent something. The traditional way of handling sockets in java is to start a Thread for each client. If you don't want to do it that way, maybe look at the Netty library? http://netty.io/ Need to sleep now, someone else will have to respond if you have more questions or I screwed something up in one of my answers :p
This is the only other answer.
this is how the [adapter pattern](http://en.wikipedia.org/wiki/Adapter_pattern) can be used to wrap each of the concrete appliance classes, where each wrapper implements a common interface operated on by the power switch.
Try looking at it this way: Objects have properties (ie. a person has a name, age, height, etc.) and constructors allow you to provide either default values for those properties, or properties given certain parameters. For instance: public class Person{ public String firstName, lastName; public int age; //constructor if you don't provide any info public Person(){ firstName = "blah"; lastName = "blah"; age = 1; } public Person(String name1, String name2, int a){ firstName = name1; lastName = name2; age = a; } } Constructors help initialize a class's properties (maybe private variables). You can provide multiple constructors for setting up objects in multiple ways. Maybe the client code knows the names but not age, or maybe they don't know anything and you need to provide default values every time. 
Are you sure you're seeing STDERR? You *have* to be getting an exception in the second catch{}. Put in a log statement with System.err.println()
For future reference, if statements and for statements in which the body only contains 1 line of code do not need braces. But every other time they do.
You could actually make a wrapper for each (make it extend appliance and store an actual appliance, with each overriding the methods turnOn() and turnoff(). You just wrap each one to the wrapped version of the appliance and then put it into an list. Afterwards you can just call those methods).
Maybe I'm coming at this from the wrong direction, but I think taking a semester off to focus on coding is a horrible idea. 1.) You're just going to postpone your graduation date by _at least_ a semester. Depending on your school, there's a chance you'll get out of step with some course load and some requisite will only be offered in the fall and the follow up requisite will only be offered in the spring. This potentially puts you graduating a year later. Bluh. Gross, Get it over and done with. 2.) You're not as likely to develop your coding skills any better now than you have in the past five years. I know that we all think that with a little bit of time, we can go build some great app or something, but the truth of the matter is that 95% of us lack some component to get it done, be it experience, knowledge, a proper support network, finances, etc. The other 5% of us, figure out that we're better off hiring someone better than us to focus on the nitty-gritty pieces so we can focus on the high level vision. 3.) You're taking yourself out of the most collaborative and energizing environment available for programming. Jobs in the real world typically blow when it comes to building cool things. When you get a job, they're not keeping you on retainer because you have the potential to build the next cool application. They've given you a job and thrown bags of money (complete with green dollar signs painted on them) to do the crappy bits of work that other people don't have the time or patience to do themselves. Here's my advice: Take some interesting classes and meet some interesting people. Spend the semester travelling abroad. Get involved with a club or organization at your school that does something other than the stuff you're interested in. Volunteer. Go experience life and what the world today is like for someone your age, because trust me (TRUST ME!), you'll have the rest of your life to sit in front of a computer and get better at coding.
No, they are just missing one thing: HUGE ASCII PENISES! That way you know if you get an error immediately.
I haven't used WebLogic before and I'm a long time GlassFish user with a little Tomcat experience. Why do you think Tomcat is worse then WebLogic? Because of the configurations? Administration interface? Resource consumption?
the issue i see is they've really run with "gamification", to the point that if you don't play the stackoverflow game, you can't really actively utilize/contribute to the site. it's a good reference, but to have it be an active source really requires more effort than i'm willing to put in.
I don't see how you could wrap these Oven/Blender/Toaster classes in any sort of Appliance/Appliance&lt;T&gt; interface without some sort of switch. Either some sort of factory method, or something else has to generate an OvenAppliance or ToasterAppliance instance that matches the passed in class. Is there something I'm missing? 
If you just google your question, however, you're bound to find one of the 3-4 most recent times that question has been asked and answered on Stackoverflow.
Project idea: Java Homework Generator(tm) - a .java code generator for lazy student at /r/javahelp
 System.out.println("human readability is redundant"); System.out.println("you will be optimized"); System.out.println("accept machine reduction"); System.out.println("submit to our logic, pathetic hyooman"); System.exit(0); 
I think most subscribers to /r/java will help with questions and if you post your code for help. Try to keep your question to the root of the solution that you're looking for. TL;DR : post your code for help. Don't post... I can't do this... Please do it for me... 
I already sorry for my poor English please read the post and suggest modifications ...
/r/javahelp is an even better place to post code questions.
Something else to steal from C#: ?? If the left side is null, default to the right side, i.e.: String a; if ( "Example".equals(a ?? "null") ) //Do stuff
To be fair, I think they like closing questions that are either very vague, sounds like homework, or are something that can be solved through 5 minutes on google. Not to say all are, but a majority of closed or on-it-way-to-closing tickets are either in the above category. 
The classes that have to be encapsulated are known, so there's no need to do anything complicated. public class PowerPoint [ private List&lt;Appliance&gt; appliances = newArrayList(); public void addAppliance(Blender blender) { appliances.add(new BlenderAppliance(blender)); } public void addAppliance(Toaster toaster) { appliances.add(new ToasterAppliance(toaster)); } public void turnAllApplianceOn() { for (Appliance appliance : appliances) { appliance.turnOn(); } } private interface Appliance { void turnOn(); } private class BlenderAppliance implements Appliance { private final Blender blender; BlenderAppliance(Blender blender) { this.blender = blender; } void turnOn() { blender.swizzle(); } } ... }
I'm guessing because all beginner questions have already been answered, in detail, countless times. Source: The search function
Unfortunately, the way you are trying will not work. If you want to have multiple questions, and access any of these questions, you should use an Array of Strings: String[] sQ = new String[4]; String sQ[0] = "This is Question 1"; String sQ[1] = "This is Question 2"; String sQ[2] = "This is Question 3"; String sQ[3] = "This is Question 4"; int iQuestion = 0; Random roll = new Random(); iQuestion = (roll.nextInt(4)); tvQuestion.setText(sQ[iQuestion]);
sQ1 to sQ4 are variable names. setText() wants a reference. You could create an array of strings which contained references to each question, and use roll to pick one reference out of the array. String[] sQs = new String[] { sQ1, sQ2, sQ3, sQ4 }; tvQuestion.setText(sQs[roll.nextInt(sQs.length)]); Or you could get silly and make the questions into member variables and use reflection to get references from the variable names. Did I mention that would be a silly solution?
Are the arrays too big to take a copy of before performing the calculation? Or, how about updating the arrays by swapping the array reference to one containing the new values, and having the calculations hold a reference to the array they are calculating from? The first makes sense if only a few values in the array change at a time. The second would if many did.
You don't need all these strings. String base = "This is Question %s"; // %s will be replaced by a number Random roll = new Random(); tvQuestion.setText(String.format(base, 1 + roll.nextInt(4))); // replacement
http://www.alexecollins.com/content/mocking-test-dependencies-with-spring/
Hi, Thanks for your suggestions. Orion is not exactly a java ide, its a web development tool. Im sure is promising in the future for other languages. 
Get a proofreader before you post. This just turns away people from reading it. 
What if there were 1000 questions? This solution doesn't scale.
I have yet to ask a single question on Stackoverflow despite using it a lot. Most of the answers I'm after are common enough to have been asked already.
The poster asked: &gt; What would the syntax be to tell the program that I don't want the output on line 10 to be "sQ4", but instead to be pointing at the String named sQ4 and outputting "This is Question 4"? Your solution scales to 1000 questions that differ in a single field containing an int, but misses the point that the OP wants to learn.
/r/learnprogramming is pretty nice too
I suggest you should master your english skills first before trying to write lengthy articles. Try to read some proper articles and watch lots of movies in english.
True, *lol*
I second that. Only keep in mind, that you should, before you post, have spent some effort in trying to solve the problem/assignment on your own. Before posting there, prepare a headline, a specific question, error description, error logs, some code (preferably on pastebin or gist.github). Be prepared that nobody there will want to completely do the work for you because that is not the point of the subreddit. If you need help and show that you tried, you will most likely get help. Also: before posting, read the [posting guidelines](http://www.reddit.com/r/javahelp/comments/1ohr0r/metasince_its_getting_out_of_hands_a_message_to/) of /r/javahelp The better your question, the more help you will receive.
If the array's are not too heavy, then as din-9 says, make a copy of the array using the **java.utils.Arrays** methods prior to using it in the score calculation. Something like performCalculation(Arrays.copyOf(sourceArray)); You mention that you have *two double arrays* so that might put you in a position where you have to make multiple calls to **copyOf** and between those you might get a data change. If that's the case, you might need to think about restructuring the data to keep the copy calls as atomic as possible.
We know the 3rd party appliances at compile time so I would create the adapter classes up front. PowerPoint would know nothing about a Blender, only a BlenderAdapter and its inherited Appliance.turnOn() method
I find [freenode](http://freenode.net/)'s [##java](http://www.evanchooly.com/logs/%2523%2523java/today) channel a really good place to learn.
I'm wondering if this wouldn't be easier to do using JVMTI. Then you can tag the tainted objects (any object not just Strings). You'd then use breakpoints to propagate the taint tags to any derived data (again any data not just Strings), and intercept it whenever it's used.
That was me when hunting down help in Operating Systems. Pintos really doesn't have many sources on why to do something, just the how in very inscrutable ways....
Current project is planning an upgrade to Jboss 6 next year. I'm not kidding. 
We recently upgraded from jboss 4 to 7, hopefully the transition to 8 will be smoother, it was a hell of a ride.
These options are good, but remember the best teacher will be reading and writing code. (Coming from a professional programmer since the dot com boom/bubble.) Just be sure to have fun! Create tiny victories/tasks if the overall one is too large. It is a big world, but coding bit by bit you'll eventually realize you've acquired a ton of skill... You'll never stop learning, which is awesome :D
Since you're asking about an online solution that doesn't use the cloud, I'm going to assume you control the remote server. Is there any reason you can't develop locally and then sync your changes to the remote server? Can you mount the remote servers file system locally with either network drives or something like sshfs?
I did if(f.canRead() == true) and got the same exception. My class is set to throw a FileNotFoundException. What else can I do? Edit: Could it be because I am trying to get the MD5 of a folder? Edit2: Yes, I think it is. I get this exact error: C:\Users\Kyle\.VirtualBoxException in thread "main" java.io.FileNotFoundException: C:\Users\Kyle\.VirtualBox (Access is denied) at java.io.FileInputStream.open(Native Method) at java.io.FileInputStream.&lt;init&gt;(Unknown Source) at main.test.scanDir(main.java:23) at main.test.scanDir(main.java:19) at main.test.main(main.java:11) Edit 3: If it helps I am using eclipse on Windows 7 64 bit.