So it is technically both?
Everything in Java is pass-by-value. But the 'values' being used are the references/pointers to objects.
For most CRUD operations, prepared statements and/or Hibernate will do you just fine. Similarly, an EXPLAIN ANALYZE will tell you what to build your indexes on, and you'll likely be good. But, then again, you'll get some motherbitch of a query to write, and no amount of ORM-handling will get it done in time. For instance, about 8 years ago I had to write a query that involved meteorology records coming in off of dozens of weather towers. Idea being: Each tower had numerous instrument clusters, each of which was reporting on its own cycle (some at 3 minutes, some at 5, some at 10, some at 15, some at 20, some at 30, and some at 60, some at 180, and some at 240). Similarly, there were forecast data coming in, making predictions about data 1, 3, 6, 9, and 12 hours out. All of this was being dumped into a massive table, and I was asked to generate a query that would produce a list of: 1. The most valid individual instrument reading (meaning, the latest instrument reading, if one existed, or a forecast) 2. Per instrument cluster 3. Per tower 4. Per 15 minute interval 5. Based on what would have been current at the end of that 15 minute interval (as opposed to based on what is current 'now') 6. And also accommodate the notion that certain types of data would 'expire' on their own, based on their own intervals 7. Accommodate a data structure with hundreds of thousands of rows, and a 6-level-deep relational hierarchy There was no sane or reasonable way to write this query using Hibernate or any sort of ORM. Simply put, pulling tens of thousand of records across the wire, and sorting them as Java objects is the 'easy' thing to do, but it has a massive memory and performance hit. We tried it various ways and ended up pegging the CPU or blowing the heap space every time. Numerous ways were proposed, but we could never get execution time below 30 seconds reliably. (Keep in mind, this was 2003, everything's more powerful now). So, I had to write it all out as a mammoth, nearly-unmaintainable query, complete with a half-dozen aggregated selects, and another half-dozen subselects (working my way down the relational hierarchy), complete with gobs of aliases and GROUP BY statements out the ass. I remember it being about 100 lines long. (I know that's cupcake shit to some of you old-timers, but I'm still scared of anything beyond 2 lines of SQL) But it ran in milliseconds.
If you don't put `System.exit(0);` in the static block, then you get the following output: Hello, world! Exception in thread "main" java.lang.NoSuchMethodError: main If you end the block with `System.exit(0);` however, the JRE will exit before trying to run the main method.
Objects are not passed by reference.
Sure you can. You can even do "" + 1 + 3 to get 13.
I copied [TieDyeJoe's](http://www.reddit.com/r/java/comments/ow8y5/why_is_the_main_method_the_way_it_is/c3kmnl9) example and tried running ("java StaticAbuse") it, but it doesn't work ("Error: Main method not found in class"). 
He means that software development is about much more than hacking out code.
How to make a good cup of coffee.
Abusing the rules :P
To be fair, Spring wasn't around when I was in school. I learnt z80 assembly, Pascal and Forth
&gt; Personally, I find this idiom being just a clutter that should be avoided. Unless you are _only_ logging a _single_ String (no concatenation or method calls), the `log.isDebugEnabled()` pattern is always faster than letting the log framework deal with it. And the logging framework probably calls `log.isDebugEnabled()` _anyway_.
Copy/pasted the example into a file called "StaticAbuse.java". Ran "javac StaticAbuse.java". And then "java StaticAbuse". (Results in "Error: Main method not...") I'm using 1.7.0.
Wow, you just don't get it do you? "main" is always the first entry point for ANY java program. When you write a class with an init method, it's just being 'loaded' into an existing environment where main is called first and then main calls init. And main is just another method, you can call "ClassName.main(new String[0])" anywhere in your program and it will work just fine. (when it's the same main used as an entry point it will probably cause a stack overflow though)
At least provide a link to the part in the Javadocs that you're referring to... Edit: [Link](http://docs.oracle.com/javase/tutorial/getStarted/application/index.html#MAIN): "In the Java programming language, every application must contain a main method" and "The main method is similar to the main function in C and C++; it's the entry point for your application and will subsequently invoke all the other methods required by your program." 
I didn't ask this question on multiple channels/sites :). Thanks for helping me though. From what everyone says, C seems widely used. And a job in making games would be great. PC games that is. So from what you are saying I should learn C++, Java, also Scala (but they may be the same almost?) and I'll see what else. I was thinking some Python and also some PhP and MySQL seem useful.
*sigh*. Such ignorance. http://docs.oracle.com/javase/1.4.2/docs/api/java/applet/Applet.html#init%28%29 EDIT: Yes, downvote me after having been proven wrong.
Same here, except I'm still using 1.6.0_24. Interesting.
On the same page: "An applet is a small program that is intended not to be run on its own, but rather to be embedded inside another application." Or if you still don't get it, main is the entry point, main calls init. 
That's true, but changes to the objects are reflected in the calling location.
It provides mechanisms to connect your application to different systems,drivers,frameworks in a lightweight and "standardized" way. It also allows you to implement vertical functions (how is it called in English?) like Security or Transaction Management which can be very hard to implement.
So references are passed by value, but value objects are passed by a reference to the object? I thought I understood this before I came to this thread, but now my head hurts.
I understand your statement and I feel the need to clarify mine. When I say "make it work", I was not implying doing a half-assed job. Several times I have worked with developers that have created a system that is mission critical yet demands several days of code maintenance per year. They didn't "make it work" so that they could keep themselves employed. Sorry for the ambiguity of my initial post. 
I don't know about this book but I read Core Java 2. One of the best java books around. Both volumes [fundamentals](http://amzn.com/0132354764) &amp; [advanced](http://amzn.com/0132354799) are very good. The latest edition covers Java 6. I would recommend them over this book. 
Yes, directly, everything is passed by value. Indirectly, objects are passed by references that are passed by value.
No one's saying it's not a cool feature. However, it has no bearing on whether a language is pass by value or pass by reference.
I was going to argue, but it's not worth it, because, as you say, it doesn't change anything.
I'd love to take a [University of Reddit](http://ureddit.com/) class that taught (or at least introduced) some of these things. Its easy to Google these topics, but its not always straightforward to figure out what you need to learn.
* Coupling/Cohesion and how they apply to making modularity and packaging decisions. * [Tell, don't ask](http://c2.com/cgi/wiki?TellDontAsk) / [Law of Demeter](http://c2.com/cgi/wiki?LawOfDemeter)
1. Install [Java 7 JDK and NetBeans](http://www.oracle.com/technetwork/java/javase/downloads/jdk-7-netbeans-download-432126.html). 2. File -&gt; New Project -&gt; Java Web -&gt; Web Application. 3. When moving through the wizard, install GlassFish 3.1, if it wasn't installed for you with NetBeans. In Frameworks, select Spring MVC, Java Server Faces and Hibernate. 4. Click on Run. 5. Go edit the index.jsp page.
Spring/Spring MVC and Hibernate are almost universally used throughout Java webapps. Google's Guava is also very popular and useful. 
Thanks this was really helpful. So for the last example the only reason it doesn't change is because you're actually creating a new object for o so o kind of becomes a new local variable in foo right? Is it acceptable to think of it as primitives are pass by value but object are pass by reference? Whats the difference between passing the objects reference by value and passing the reference itself?
If you really want to understand the underlying stuff, it's best to know HTML/CSS/Javascript and look into Servlets and JSPs and a servlet container like Glassfish or TomCat. If you just want to play around and make some stuff and use the prebuilt forms etc, install netbeans and make a new webapp and play around.
"o' in foo is always a local variable, but it points to the same thing that the "o" in main points to. When you set it to a new Object, you're making it point to something else. You can think that primitives are passed by value and objects are passed by reference, but remember if you pass an object and set it equal to some other object, your original object still exists in the calling function. For your third question, passing the object by reference by value leads to what you see. If you just passed the reference itself, then the line o = new Object(); in foo would also change the "o" in main().
for(...) isn't a line, it's just the header of a line. Semicolons go at the end of statements. A statement has to actually do something. System.out.println(); does something, so we put a semicolon at the end for(int i=1; i&lt;=5; i++); doesn't actually do anything. And neither does i + " squared = " + (i * i) 
A string may be thought of as like a char[], but it is definitely NOT a char array. You can't say string[0], you have to say string.charAt(0). Which is the other difference. Strings have methods, simple arrays don't.
 public void loadDictionary() throws IOException{ BufferedReader b = new BufferedReader(new FileReader("wordlist.txt")); String s; while ((s = b.readLine()) != null) { dictionary.add(s); } }
I'm using Play! on a project at the moment as well. I wouldn't describe myself as a Java developer, and it's allowed me to rapidly build an application. I really love it. That said, from what I understand a lot of the conventions Play! uses are pretty weird in the Java world if you aren't familiar with Rails or something similar, and from what I understand 2.0 is going to be pretty dramatically different and be a lot more Scala oriented than 1.2.3. http://www.playframework.org/2.0 
Got it. Thanks so much!
Assume there is no accessors or mutators for the DAO in this particular class. Without editing the original source, is the test still possible?
Can you give a couple examples of what you would simplify, why, how, etc?
It is strange and non standard as far as Java goes that's for sure. I just use it at home, at work we are using spring mvc. 
Just so it's clear PersonProvider has no way of setting the peopleDao? How is it being set in the first instance? is the DAO being instantiated in the class? You cannot mock the DatabaseAccess as it is a static class. So if you can't mock the peopleDao then you will have to mock the whole class PersonProvider. The alternative is to find out how the DatabaseAccess loads it's datasources and write test config against an in memory db like h2. You will also have to populate it with test data. My first thoughts are you're testing the library at the wrong level, find the top level interface and test from there upwards. 
Sure. Let's start with the concrete classes that implement the Controller interface: * BaseCommandController * CancellableFormController * HttpRequestHandlerAdapter * ParameterizableViewController * ServletForwardingController * ServletWrappingController * SimpleControllerHandlerAdapter * SimpleFormController * UrlFilenameViewController * WebContentInterceptor Um, I just want a controller for my website -- something that will route requests to my handlers and serve up my views -- and I'm struck, right off the bat, by an overloaded Chinese menu by way of choices. The rest of the framework follows this model -- too many choices, covering every possible implementation contingency, with no regard for the principle of YAGNI. It's a simple matter of convention over configuration: you don't need a million tools on your Swiss army knife if you know you'll only ever need the knife. And that's what a Rails-like framework like Play gives you -- a straightforward model implementation that covers 98% of the cases you'll need it for. If you need the smorgasbord, it's there. But most of the time YAGNI, and for all these times MVC is pernicious overkill. 
That is not strictly true. It is entirely possible to load and execute Java code without ever executing a main() method, using an embedded VM. I haven't looked at e.g. how the Java plug-in does it in a long time, but I doubt it has a main method, and it's certainly not the only one. /former architect on the Java team at Sun
I've started reading Spring's manual / porting some code, and it seems like a good fit indeed. I'm still a bit struggling with some the concepts (it's a bit confronting how little the "applied Java web- &amp; enterprise development" course I've followed helped me with that), but I'm hoping I'll get there without too much of a delay. Thanks for your comment!
I can certainly help contribute where I can. I'm one of 4 architects working on SAP ME (manufacturing) which, as I just checked the other day, is up to 700Klocs and 7000 classes. We don't build with NWDI but use Maven, Jenkins, Artifactory/Nexus, and Sonar. I use NetWeaver 7.3, but I'm no expert and it's a love/hate relationship without the love. -tim 
I know Java but I'm a Variant Configuration / SD consultant. I barely use Java in IPC, SAP bundles it all in runtimes. Any discussions would help. 
Isn't it the job of your lecturer to go through this stuff at special sessions called "classes" during which you need only raise your hand to get an answer to your questions?
start cramming like a madman because you are going to have a lot to learn to do this.. that is all I can say.
On the skeleton code we've been given everything implements Serializable, but the guy has explained nothing about what exactly that means other than it's an interface. How do I go about creating a serialized file? Special kind of text file.. on my assignment it means a spreadsheet format? And thank you, for a) advice and b) no patronising sarcasm.
I agree. Start with the basics before you start with huge frameworks, so you know the underlying concepts. Here's an article on building a [Hello World Java Web Application in Eclipse](http://obscuredclarity.blogspot.com/2009/11/hello-world-java-web-application-in.html) taking you through how to set up your project, building it, and deploying it to Tomcat. And [here](http://xeiam.com/hellowebapps.jsp) are a bunch of hello-type webapps that demonstrate basic webapp functionality like AJAX, reverse-AJAX, adding charts, etc. (Yes, those are my websites.)
They've given us the code with regards to actually writing it and reading it but how to use that code and what file extension to use.. we've been told nothing. They've given us a skeleton code and nothing else. 
http://docs.oracle.com/javase/tutorial/ http://docs.oracle.com/javase/tutorial/java/concepts/index.html
Ahh okay cool. But I have a PEarson Textbook im going to be working through (also Sams teach yourself book) and the Sams book recommends having JDK 7. So are you saying the differences shouldn't be too drastic? In fact what are the main changes. If i learn on 6 will i feel outdated If i start on JDK7/8/9? or does the central theme and concept around JAva stay the same regardless of version. Thanks for the speedy response, have an upvote good sir.
Java 8 isn't even out yet. You will need to learn the feature set of 1,1.2,1.3,1.4,5 and 6 before worrying about the features in 7.
I think that you can do it, don't give up.
Well, I have no experience with embedded VMs, and you sure sound like you know this much better than me. :) That said, it looks like there's a main method in the Java plug-in, in the `sun.plugin2.main.client.PluginMain` class. Of course I haven't read the whole plugin source code, but it looks like it's the real deal.
**Note:** *The following is a very simplistic explanation of the differences. You should still look it up.* If you wrote your code procedure based, you'd write it and call functions to do all of the logic. An example: string equation = GetEquationFromUI(); float x = 0.0f; float y = 0.0f; float f = GetValueAtPoints(equation, x,y); If you wrote it object based, you'd create objects (classes) that represent data structures or discreet pieces of logic. You'd call functions on objects. An example: string equation = GetEquationFromUI(); QuadraticEquation qEquation = new QuadraticEquation(equation); float x = 0.0f; float y = 0.0f; float f = qEquation.GetValueAtPoints(x,y); And of course, you would have to define your own QuadraticEquation class (object) that models how a Quadratic Equation works.
Spring MVC is dead simple. You just had a bad architect if your experience was anything but straight forward. Its very flexible. This is why we create coding standards so a developer never has to think of anything but the business logic. 
You can start with 6 or 7. You really shouldn't be writing new code that targets anything pre-6 anyway. 7 has a few new nice features, but nowhere near the big jumps that were made in 5 or 6. Pre-5 will make you want to scoop your brain out with a spoon, so don't even bother with it.
First understand what functions/methods are and what variables are before you even try to understand what an object is!
There is no reason to upgrade and there is no reason *not* to upgrade. At the very least, it would have some security fixes that you don't have in Java 6.
Oh boy... First, make a list of all of the little parts of the quadratic equation that you can do in 1-2 steps. Basically, you are going to want to write a class a have A, B, and C as private variables, then use methods to access them.... then make a new class and construct the equation using those methods. Extremely inefficient, but hey, programming classes are terrible. By the way, make sure to be anal about parentheses when you write the actual thing. Those can screw over your codes.
By console, I meant terminal, text-based. I was thinking arrays, but what are the different things I'd do with them? 
By console, I mean the terminal that comes up. Like the black and white text. By displayable, I would cycle through the array in a for loop, as long as it is itself. Then be able to maybe search and see if, for example, a string "Iron sword" was somewhere.
java collections my friend. http://docs.oracle.com/javase/1.5.0/docs/api/java/util/ArrayList.html
I'll check this out. Thanks for the help! :)
I thought rails used the MVC structure . . .?
You should also check out some design patterns, there are some pretty classic patterns you will run into when designing a RPG, and if you can stick to some patterns it will help you in the future if you decide to change the way it works, or want to port it over to the web instead of a text terminal. Look into the Model View Controller Pattern first.
I'd probably use: String.format("%.2f", x) That'll convert your double, x, into a string with 2 digits after the decimal.
^ 
I feel like this is the worst possible description of object oriented programming.
&gt; I have to make a program for the Quadratic Equation. &gt; the teacher said it had to be object based not procedure. Excuse me while I go shoot myself in the head. Even considering this is a learning exercise, this is a terrible use for OO. There are few things more procedural than plugging numbers into a known equation. Tell your teacher this problem has been spoiled by some jerk on the InterWUBZ and you should get a new assignment: http://www.gully.org/~mackys/QuadraticFormula.java
Even if they do, they're still a great place to start when learning 3D graphics.
What's the team's current disposition, and attitude? Big, big difference.
How is it the worst advice? He needs to learn a lot of java in a short period of time -- giving him an answer to this one problem doesn't solve his overall dilemma...
Thanks Daswood! That's the same impression I was getting in regards to a slew of free training and material. The local colleges / uni idea is a great one, but much like my undergraduate years they focus heavily on C, C++, and just until recently .NET. I'll be giving a more "where the team is at response" to mikaelhg's response down below. Thank you again!
I totally agree mikaelhg! Here's an attempt at a short re-telling of how our group came to be... Our company decided it needed a Middleware team of sorts and given considerable budget restraints grabbed two employees from different non-programming groups and placed them under a newly hired, highly skilled programmer. In the last two years we've (myself and co-worker) have "learned" Java but in the "just enough to get by" method via Google, forums, stackoverflow, etc... But haven't built upon a proper foundation of programming or a structured approach to learning Java. I've made the argument for a proper amount a training and it has been accepted, hence my reaching out. The desire to learn is definitely there from both of us and with the upcoming projects in our roadmap we need to get up to speed in not only fundamental Java concepts, and programming methodology as a whole, but also JSP/Servlets/Controllers and Web Services. I hope this made sense, my 12-month old has me rather sleep deprived at the moment, leaning over crib as I type this. Thank you very much and let me know if I missed any useful points.
It's not clear that Java3D right API to start off with, compared to, e.g. LWJGL or Monkey.
You know that businesses can buy the Oracle Lifetime Support and get security updates for a very long time afterwards? Some of our clients are still on Java 5, maybe even Java 1.4.
 /** * This interface simply houses one method (not to be confused with "function" * from other languages like C++) without parameters and like everything in this * program is definately not needed. */ public interface MessageStrategy { /** * Sends a message * * @return */ public void sendMessage(); }// MessageStrategy /** * The AbstractStrategyFactory will be used to as a template for * StrategyFactories to take a MessageBody and create a useful Strategy whos * parameters is defined by the MessageBody. * */ public abstract class AbstractStrategyFactory { /** * Abstract method that creates the MessageStrategy. Any classes that * inherit this abstract class should use this method to create their * MessageStrategies. * * @param mb * MessageBody object to initialize the MessageStrategy */ public abstract MessageStrategy createStrategy(MessageBody mb); }// AbstractStrategyFactory public class MessageBody { Object payload;// This is the data that this class will be handling /** * Simple "getter" method because it's a lot cooler than accessing a public * variable. * * @return the data that this class is handling. */ public Object getPayload() { return payload; }// getPayload /** * Sets the payload for this TODO: Change to setPayload because that is the * common convention. * * @param obj * the object that you want this MessageBody to handle. */ public void configure(Object obj) { payload = obj; }// configure /** * Runs the sendMessage method on the MessageStrategy. Why you don't just * call it directly instead of using this method I will never know. * * @param ms * the MessageStrategy you want to call sendMessage() on. */ public void send(MessageStrategy ms) { ms.sendMessage(); }// send }// MessageBody /** * This class inherits from AbstractStrategyFactory and will be doing the bulk * of the work to print the "Hello World" string. * * */ public class DefaultFactory extends AbstractStrategyFactory { /** * Default constructor, this is completely and totally not needed at all as * it does absolutely nothing and takes no parameters. * */ private DefaultFactory() { }// DefaultFactory static DefaultFactory instance;// an instance of the factory /** * This method returns the instance of DefaultFactory, creating a new one if * there isn't one initialized already. * * @return DefaultFactory object ready for use. */ public static AbstractStrategyFactory getInstance() { if (null == instance)// If we don't have an instance instance = new DefaultFactory();// Initialize one return instance;// return the instance to the DefaultFactory }// getInstance() /** * This creates the relevant MessageStrategy defined by the passed * MessageBody and defines it's sendMessage() method. I didn't even know you * could define functions like this. Obviously as a factory this is the most * useful and relevant function in this class. * * @param the * MessageBody to you want the strategy to work with * @return the MessageStrategy associated with the passed MessageBody */ public MessageStrategy createStrategy(final MessageBody mb) { /* * This is actually really neato here, the constructor is actually * defined right here as it's created. */ return new MessageStrategy() { MessageBody body = mb;// set the body to the parameter /** * This simply gets MessageBody's payload and prints it out */ public void sendMessage() { Object obj = body.getPayload();// get the payload System.out.println(obj.toString());// finally a println // TODO: Change to System.out.println(body.getPayload()); }// sendMessage() };// MessageStrategy() }// createStrategy }// DefaultFactory /** * The main class of the program, this contains the main method and initializes * the Factory and MessageBody and then proceeds indirectly print out the * message by calling the MessageBody.send method with the "Hello World" * MessageBody object. * */ public class HelloWorld { /** * The main method, this is what gets run when the program is executed. This * is also all this class has in it. * * @param args * completely ignored, here for compliance reasons */ public static void main(String[] args) { MessageBody mb = new MessageBody();// initilize MessageBody object mb.configure("Hello World!");// set the body to "Hello World" //get an instance of DefaultFactory AbstractStrategyFactory asf = DefaultFactory.getInstance(); //initialize a strategy associated with the MessageBody MessageStrategy strategy = asf.createStrategy(mb); //Have the message body send using the passed strategy mb.send(strategy); }// main }// HelloWorld 
Most businesses neither know nor care about that. Most companies (outside application development) aren't even aware which platform technology they are using.
So due to the fact that I couldn't understand one tiny part.. and ignoring the fact that I'm getting a first in my degree... I'm in the wrong field? 
Would not advise taking a 101 and 102 course at the same time. Is the point to be a programmer after you graduate or to just graduate?
Unless you're dealing with a number of items in the tens of thousands, they are fine.
When you say console, I assume a text-based role playing game. If this is the case, look into current internet MUD (multi-user dungeons). Why reinvent everything when you can get a whole text RPG gamedriver and basic libraries already written for you. I would look into LPMUD. I learn OO programming from LPC. I think you'd be far better off doing this than writing a whole game in Java from scratch.
This may be of some help [OpenGL resources](http://www.opengl.org/resources/) keep us posted as to your progress!
Does it actually need to be a Daemon? Or just a simple command line app that can be run in the background and forgotten about? The difference is subtle, but if you don't care about it then it's much easier to just write an app that runs in the background (This is how things like Tomcat work, btw).
I'm not sure. The problem right now is that we're scanning files with FITS from a PHP script using an exec() call and the start up time is noticeable, but the actual processing by FITS is quick. So basically we want to eliminate the start up time. Do I not need a daemon to do this?
No, you can write a java app (I'd recommend an Executable JAR) that just runs in memory. You'll probably want to have the program "sleep" and periodically wake up to do whatever it is you need done. In unix, you can start the program with this command : java -jar myjar.jar &amp; The '&amp;' symbol tell the shell interpreter to run the command and return to command mode.
Could you possibly point me toward a resource that explains how to write something like this?
I'm hoping that you know how to use Eclipse for java development? If so, you can just right-click on your project and export it as an executable jar.
Your main java class will need to loop, sleep for a while and then do whatever you're trying to do. In this example below, I'm using Log4J for logging and a ResourceBundle to read in the amount of time to sleep between checking for the file or whatever you're doing. package run; import java.util.ResourceBundle; import org.apache.log4j.Logger; public class FITSRunner { //The Resource Bundle lets you read settings out of a properties file private static ResourceBundle bundle = ResourceBundle.getBundle("settings"); //Log4J will let you log info about the application private static Logger logger = Logger.getLogger(FITSRunner.class); public static void main(String[] args) { //Get the amount of time to sleep from the settings file and make it into an integer long sleepTime = Long.parseLong(bundle.getString("timeout")); logger.debug("Sleep time is set to : " + sleepTime + " milliseconds."); do { sleep(sleepTime); //Do Some work logger.info("Doing some work ..."); } while (1 == 1); } private static void sleep(long sleepTime) { logger.debug("Sleeping."); try { Thread.sleep(sleepTime); } catch (InterruptedException e) { e.printStackTrace(); logger.error("There was an error while sleeping : " + e.toString()); } } } 
From the Spring-Integration website: &gt;Spring Integration provides an extension of the Spring programming model to support the well-known Enterprise Integration Patterns. It enables lightweight messaging within Spring-based applications and supports integration with external systems via declarative adapters. Those adapters provide a higher-level of abstraction over Spring's support for remoting, messaging, and scheduling. Spring Integration's primary goal is to provide a simple model for building enterprise integration solutions while maintaining the separation of concerns that is essential for producing maintainable, testable code. It then links to [EAI Patterns.com](http://www.eaipatterns.com/) which further explains the need for best practices and describes the [common patterns](http://www.eaipatterns.com/toc.html). Basically, tl;dr: Spring-Integration is for having two or more systems that have to do work together with shared resources. 
I really like using Spring's Scheduled Tasks support for this type of work to abstract away all the timing/execution plumbing and provide greater flexibility. So with annotations you can just write your method like this @Scheduled(fixedDelay=1800) public void doSomething() { // do my scheduled work } To have the doSomething() method execute every 30 minutes (from completion).
See [Naming](http://docs.oracle.com/javase/tutorial/java/nutsandbolts/variables.html) basically - don't use $ _ is used in constant names (e.g. final static String THIS_IS_A_CONSTANT = "Hello";) other wise names should use [camelCase](http://en.wikipedia.org/wiki/CamelCase) - classes names starting upper case, methods/variables lowercase
I think it is using quartz under the covers. I thought about recommending quartz but it may be overkill.
Why not write the daemon in c or c++ and use jni to talk to FITS?
java != javascript
I do this. It's a perfect way instantly telling whether you're using a getter or using it internally. Any non _ variables usually means I have something to look into. Also, Eclipse generate them for me, and names getter/setter correctly, i.e: _Id turns into getId().
I love quartz makes life so much easier. But I probably won't suggest it to a Java newbie.
i read you can start the name of a variable with $
You can, but don't. You should generally stick to alphanumeric characters and underscores when naming variables, unless you really want to screw with your programming teacher and use different amounts of underscores for variable names.
+1 for Quartz Create an executable JAR, then just nohup it, something like: #!/bin/bash export JAVA_HOME=/opt/IBM/WebSphere/AppServer/java nohup $JAVA_HOME/bin/java -jar MyJarThatDoesStuff.jar &amp; (Adjust your paths as necessary of course)
Use Tomcat and this: http://php-java-bridge.sourceforge.net/pjb/ PHP-Java bridge. A complex application I've been writing uses Java for all the DB work and data processing (huzah type safety and speed) and PHP for all the fiddly UI stuff. Match made in heaven. There is a learning curve but it is, bar none, the best combination I've come across. Let tomcat do all the daemon stuff. It might seem like a bit much just for this need but you'll quickly find other uses for it. One fine example in my app is that I've got an include system for JS and automatic compressed file generation &amp; caching via YUI used as a library. Another is generating PDFs via flying saucer using HTML generated in the PHP. Really good stuff!
Ah.. I see what your doing there. You expect that the super class talk() should call the call the talk() method in the super class. That's not the way it works. If you override a method, the call to talk() will use the overrides method. If you want to make sure the foo() method in the super class always calls the talk() method in the super class make the talk method final so that it cannot be overridden. Next you may say that you want something to happen in the subclass when the talk() method is called... well just add a hook. For example: public class Car { public void startIgnition(){ this.startFuelPump(); // other stuff } public final void startFuelPump() { this.prePumpHook(); // do stuff } public void prePumpHook() { // do nothing } } public class BMW extends Car { @overide public void prePumpHook() { // do something only for BMW } } Sorry for bad formatting... watching previews at movie theatre.
Why not just write your own implementation? I've done that before when JOptioPane did not have the options I needed.
One of your highest priorities should be that your code appear simple, obvious and symmetric to your maintainers.
Actually, a more maintainable way of achieving the same goal _in your application_ would be to render the PHP pages inside the JVM with Caucho Quercus. As a side effect, it also protects you from many potential and actual PHP vulnerabilities.
\\
This, a simple shell script set to start at boot, is simple and effective.
Does that mean this is resolved? Could you post the code to what you were trying to do? 
Two tools for different purposes. Ant is a build tool. Maven does much, much more.
You should approach this question from a broader point of view: which factors will play a role in a successful launch? People factors are much more important at this stage, than specific technologies. 1. If there's a good off the shelf solution for your e-commerce needs, you should seriously evaluate it, or them. 2. Does the company have a good, proven idea, of what they want to do, or will this venture likely require a lot of fine-tuning? 3. Is this a business-to-business or business-to-consumer venture? 4. What kinds of resource constraints do you have? Are the people you can or must use, intimately familiar with one family of technologies and solutions? From my point of view, it would be extremely irresponsible and unprofessional to start selling one's favorite web framework in response to this kind of a question, without first making reasonably sure to understand the big problem the OP is trying to solve.
That's perfectly right. [Take a look](http://docs.oracle.com/javase/6/docs/api/javax/swing/JOptionPane.html) under showInputDialog.
Resolved? Oh god no. I just resolved the issue of getting angle brackets to show up on reddit. But if you're curious about what I'm trying to not do: [varargs](http://docs.oracle.com/javase/6/docs/technotes/guides/language/varargs.html). The problem is, I'm trying to avoid object reallocation as a performance issue, so allocating an Object[] and allocating the wrapper objects to fill it is a huge step in the wrong direction.
No, you can't symbolically refer to a method signature in such a way. In Java 8, you might be able to. http://blogs.oracle.com/briangoetz/resource/devoxx-lang-lib-vm-co-evol.pdf
Weak. Thanks.
I just found this, which is basically what I'm trying to do, but I've just started reading it. It looks like I can't it the way I was thinking, but they've surely thought about it more than I have. [Pool \(Apache Commons\)](http://commons.apache.org/pool/)
for (int i = 0; i &lt; 1; i++) System.out.println("And what bitches?");
Ahh okay, I've changed it to counter, it is a member variable also. I also thought with the in optionButtons() I'd need to declare it as an int since I'm returning one to oneAdded = optionButtons(); Also sorted the if statment, had it as larger than, my mistake.
I can see that in Python or so, but in Java, shouldn't almost all fields be private anyway? Using _ seems a bit superfluous.
It makes a lot of sense. Without this, you wouldn't be able to implement the Template Method pattern. In addition, it would bring confusion if the super class is implemented the way your talking about. For example, you have a black box api where you don't know how the code is implemented. When you subclass one of the classes and override a method, you expect your method to be executed when that method is called, not the super classes method. When you override a method, you are changing the behavior of the class. The Principle of Least Surprise would lead to your overridden method being called not the method of what you are overriding. 
This is exactly what I was looking for. I appreciate all of your help. I wasn't looking forward to implementing my own gui code, so this saves a large chunk of time. Here's the [finished result](http://i.imgur.com/BYWpK.png)
that worked thanks!
Just a word of warning: object pools are almost always the wrong answer. Before you use it, make sure you're one of those very rare cases where it's not counter-productive.
Easier or lazier?
That's pretty sweet. Any way we could get a .jar of this or your code? I totally understand if you'd prefer not to, but this looks very useful.
Both. Never reinvent the wheel. Unless of course, you are doing it for learning purposes.
Use scanner.useDelimiter(String regex). // (s can be a parameter to this method), sep and the lists may work better as fields. final String SEP = "FROOTYLOOMS"; File s; ArrayList&lt;String&gt; list1 = new ArrayList&lt;&gt;(); ArrayList&lt;String&gt; list2 = new ArrayList&lt;&gt;(); // Set up a Scanner for s. Since the terms are seperated by an *, we will use that as a delimiter. Scanner sc = new Scanner(s); sc.useDelimiter("\\*"); // Add the strings until one of them is the seperator for(String n = sc.next().trim(); ! n.equals(SEP); n = sc.next().trim()) { list1.add(n); } // Add the rest. while(sc.hasNext()) { list2.add(sc.next().trim()); }
was passed in declared in main and initialized there?
Untrue. Java 6 is still receiving updates.
First you either need a dictionary, or just have to go through every possibility by hand. Now you should imagine what your output will look like. If it is spewing out every possible combination according to the rules it will look like A AB ABE ABEF ABEFO . . . Not to mention, according to those rules you allow letter reuse, so you could have an infinitely long string. Now if you have a dictionary you can easily keep track of where you are at in the current word list and terminate the string if no further matches are made and move on. So your dictionary needs to be very fast.
Is there a way to do this other than making every permutation of patterns and then comparing this against a dictionary file? You would need to recursively calculate all of the possible x-letter words. For a 3x3 array you'd have quite a few combinations to define recursively. This seems like it would take awhile, so it would be best to start with 1-letter, and go to 9(or 16 in a 4x4), so that you could be providing partial lists before the program runs to completion (as there are both more permutations, and less dictionary words, at each threshold). 9 1-letters 24 2-letter 44 3-letter 80 4-letter etc All this seems like a lot of work just to cheat at boggle 
Graphic objects, e.g. in a particle engine, but I will read further. Thanks.
SOLVED! I found all possible words based on the 9/16 characters regardless of their position in the matrix, then went through the list of possible words and recursively found out if each word was possible to make. And it was totally worth the work.
Here are a few: [From the Oracle site](http://docs.oracle.com/javase/tutorial/), another [here](http://math.hws.edu/javanotes/), and [here](http://www.programmerprogramming.com/programming_java_learn01.html), and one [here](http://www.cstutoringcenter.com/tutorials/java.php) as well. Hope those will help.
By the way, my teacher needs help making a game, and I can get extra credit, what language would you use to make an original Super-Mario-like game?
[Thenewboston](http://thenewboston.org/tutorials.php) has a lot of great tutorials on Java. Also, [mybringback](http://www.youtube.com/watch?v=fEApt1B8ycs&amp;list=PLDAA5DE54FB5215EC&amp;feature=plcp&amp;context=C3b17bffFDOEgsToPDskIZP-nrQrxL7ExvGm905gjk) has a great playlist on Youtube on Java.
You mind elaborating on this? You did this for an entire dictionary file?
any language u know :)
amazon.com
What fool would vote this down? Can you explain?
Debugging Skills.
I think we're about to get to functions in class. But we just started and we have to make it with Scanner inputs.
 /*Name: Harlan Haskins *Date: 1/28/2012 *File: StudentAverages.java *Purpose: To display a student's name and average grades. */ import java.util.Arrays; import java.util.Collections; import java.util.Scanner; import java.util.List; public class StudentAverages { public static void main (String [] args) { Scanner name = new Scanner(System.in); Scanner grade1 = new Scanner(System.in); Scanner grade2 = new Scanner(System.in); Scanner grade3 = new Scanner(System.in); System.out.print ("Enter the student's name: "); String studentName = "Student: " + name.nextLine(); int len = studentName.length(); System.out.print ("First grade: "); int firstGrade = grade1.nextInt(); System.out.print ("Second grade: "); int secondGrade = grade2.nextInt(); System.out.print ("Third grade: "); int thirdGrade = grade3.nextInt(); System.out.println (""); System.out.println (studentName); String equals = String.format(String.format("%%0%dd", len), 0).replace("0","="); //This amazing line of code is thanks to I. J. Kennedy on StackOverflow System.out.println (equals); System.out.println ("Average (Rounded): " + (firstGrade + secondGrade + thirdGrade) / 3); List&lt;Integer&gt; grades = Arrays.asList(firstGrade,secondGrade,thirdGrade); //This, I found in the Java documentation. Collections.sort(grades,Collections.reverseOrder()); //Originally ascending, I had to figure descending out. String arrangedGrades = grades.toString(); System.out.println ("High-to-Low: " + arrangedGrades.replaceAll("[\\[\\]]", "")); //The results were showing up with brackets, so I used RegExes to remove them. } } You can use the code tag to help with formatting on reddit. 
Looks like they haven't gotten that far yet: http://www.reddit.com/r/java/comments/p1rwc/beginner_here_i_wrote_a_program_for_class_that/c3lsrbo
I know *why* everything works. We literally just moved past simple Hello World stuff.
It's a 20 line command line script. Perfectly logical to put it all in the main method even if you were a seasoned programmer. Breaking out his little script into a separate object would be over-engineering even if you were a seasoned programming veteran. Never mind that he is using objects: System, Collections, Scanner so he isn't "doing Java" without objects. He's just being intuitively practical and not creating a new object where one isn't needed. So not only are you being a smug shit, you're also incorrect. &gt; It means that every line of code he did there is magic and he has no idea what he is doing or why it works. Because wrapping his script in a MyObject would somehow make everything more clear? This has no credibility. 
Maybe you should rewrite it how you think it should be done, give him an example of how it should be modularised? He's asking how he can improve it after all.
Yeah, an entire dictionary file. I added one-letter words above each section of the dictionary file, so when I searched through the ArrayList of words, I just did indexOf(letter) and went downwards from there. That might've made it a litle bit faster. I could post the code to pastebin if you wanted to see exactly how i did it.
i really like how the [play framework](http://www.playframework.org) uses jpa (via [morphia](http://www.playframework.org/modules/morphia-1.2.4d/home)) to create a very nice interface for mongo. 
Thank you. Fixed.
A framework is a library with feature creep ;-)
The add method of the ArrayList actually does an insert. so what you are doing right now is rebuilding your original array with all of the &lt;end&gt; s taken out. It sounds like what you want to do is split the original list into a series of lists, each containing the numbers between 2 &lt;end&gt;s. To do this you will need to make a List of Lists so that there is a List at each index. This is not the best way to solve the problem, but it will work.
This is easy. If you can't do this yourself then you will struggle. Recieve the text and assign it to a String variable. Recieve the second line of text and assign it to another String variable Check this link http://www.java-forums.org/new-java/349-how-get-input-console.html to see an example Ok so now you have two Strings line1 and line2 which you can work with. Now you have 2 methods that will help you achieve the next part int lengthOfLine1 = line1.length(); int lengthOfLine2 = line2.length(); if(lengthOfLine1 == lenghtOfLine2){//... print message} I've used length() to get the length of the input for line 1 and == to compare the values. Now using less than &lt; greater than &gt; you can make more if statements to work out the rest of the problem by just looking at the lengths. Check this link for some more help, although I've never watched these videos myself. [TheNewBoston Java Tutorials](http://thenewboston.org/list.php?cat=31) Also there are some code examples here for a programming task we did on reddit that might help you understand a bit better http://www.reddit.com/r/java/comments/l8hge/programming_task_roman_numeral_converter/ 
(1) If you can be sure that those values are doubles only then use the wrapper class for type specification: ArrayList&lt;Double&gt; myArray ... use "Double.valueOf(line)" to convert the strings. (2) "j++" already does the job. No need to reassign it to the variable itself. (3) You can simply just use "myArray.add(Double.valueOf(line))" to add the double value. No need to provide an index. It is being created automatically. (4) If you don't care about the actual occurrence of similar values and just want to make sure there are none you could always just use a [Set](http://docs.oracle.com/javase/7/docs/api/java/util/Set.html) . If the list needs to be indexed though you could instead do a check beforehand with the "contains"-method to check whether the value already has been added. 
What's the point of this? Stuff like this has existed for more than a decade, why would anyone use yet another ORM framework when the old one works just as good? 
the file is exactly that (no bullet points)
I've decided to move the code into another comment here: So going back to your original question, if you want do implement your superclass so that it always calls it's own talk(), here's how you would do it. public class SuperClass { public void act() { System.out.println("super acting"); myTalk(); } public void talk() { myTalk(); } // Note, making this private or final will prevent subClass from overriding this. // I only want to allow the subclass to override the talk() method and never myTalk() private final void myTalk() { System.out.println("super hello"); } } public class SubClass extends SuperClass { public void act() { System.out.println("sub acting"); talk(); super.act(); } public void talk() { System.out.println("sub hello"); } } The result output for subClass.act() is: sub acting sub hello super acting super hello * With this implementation, I don't need to copy/paste the superClass.act() method to the subclass -- Copy/Paste is bad. * The SuperClass.act() has the expected behavior that you want. * This is better OOP design for extensibility. * I can change the behavior of the superClass.act() without having to change all the subclasses (as you'd need to do for copy/paste)
Yes. You'd want something more like this: String line1 = keyboard.nextLine(); String line2 = keyboard.nextLine(); int s1 = line1.length(); int s2 = line2.length(); 
I feel like I am making some headway slowly but surely, would anyone be willing to give some guidance over skype perchance?
LinkedList&lt;Note&gt;. Add note type classes to this list (holds private vars such as message, x,y, etc.) To click a note, have a mouse listener that searches for the x/y proximity. For (int count = 0; count &lt; Notes.size(); count++) and 'break' the for loop once it has found the first note. If it kept on searching, it would bring every note in it's way to the front. If this makes zero sense to you, I can evaluate further.
I say you should take a look at the ImageIcon and Image api examples. I just imported java.awt.Graphics for my paint methods mainly because I new I wouldn't really need powerful outputs for this program. If you're interested in pushing images into games, take a look at Java Slick and follow their basic tutorials. 
I wouldn't send Objects across the network. There's a lot of extra information that is sent that you really don't need. I would just continue to use strings to send information across the network. All you would have to do is separate the message into a type and a value, so if a text message is sent, it could look like "msg#text to send!".
how would the client know that the server sent a list of names then? but check the first value? how would you know what name is connected to what socket on the serverside? what if you want a specific fontcolour sent from the client?
&gt; Non-trailing spaces in text will count as characters. This hints that you need to .trim() the string before length comparison
nikoslianeris is just spamming r/java. Look at all of his previous [posts](http://www.reddit.com/user/nikoslianeris). All links to his site with little to no substantial content.
Basically come up with your own protocol. Both your client and server will communicate using this protocol. As TheEnigmaBlade mentioned, just come up with your nomenclature on how to pass information. connect#User Name disconnect#User Name font-color#Comic Sans etc... When you're writing your own client/server, you can make it whatever you want it to be.
I strongly suggest using Google's Protobuf instead. It's optimized for this kind of application. 
It doesn't work? So, the compiler just says "Go away, the code you are trying to compile doesn't work"? :)
is there any syntax to pull the integer from a specific place within arraylist of arraylists? something like arraylist.get(j).??
The "Head First" series is pretty good for beginners.
Yes. The course uses Java as a common theme throughout 1st, 2nd and (depending on module choices) 3rd/4th year. This gives a good basis in the Object Oriented paradigm, with objects being explain from roughly half way through the first semester of 1st year. That's not to say other languages aren't introduced though- e.g. Haskell, Prolog- that demonstrate alternate paradigms. PHP features too to show a scripting-style language, with a more relaxed type system. The problem with the Linux approach is that it isn't familiar for many new students. For example, most students wanting JVMs installed are using single-boot Windows laptops (although an increasing number of Macbooks now too). It is more important for them to start learning Java than it is Linux, for this course at least.
You use the library. The framework uses you.
Set your google to 2007.
Given that the latest stable version was released *last year* I don't quite see the point in digging up potentially highly outdated things.
Stick the with the Commons Math as it will be the most widely tested and adopted of your options. Otherwise you could write your own.
My thoughts exactly.
When you instantiate or "create" an instance of your object the constructor method is the very first method called to setup your object. A constructor is a method, just a very special method that is automatically called when an instances of an object is created.
"you make sure your object is in a valid state before someone starts to use it" That is the most key part of this- otherwise you could end up with an object that is only half set. This could lead to problems such as null pointers at later times.
You could make some sort of action in your IDE that automatically calls the protobuf compiler whenever you save the file; your IDE will obviously then automatically reload the newly-compiled class after that. You generally don't change the .proto file often.
While I don't believe this is sufficient reason to downvote, perhaps it's because he said 'messing' when he meant 'mixing'. 
Check you HTML code, and is the class in the same directory as the .HTML?
I've tried both: &lt;APPLET code="BusinessCard.class" width=700 height=500&gt;&lt;/APPLET&gt; and &lt;APPLET ARCHIVE="BusinessCard.jar" CODE=BusinessCard.class WIDTH=700 HEIGHT=500&gt;&lt;/APPLET&gt; and yes, the files are all in the same directory.
Exactly, and if you want to do scripting on JVM I recommend using Groovy. I personally like it and don't wanna go Jython or JRuby after I ran into it.
How would I put that in the html? I think my package name is CIS_162, well that's my project name, I'm not sure what else would be the package name? Here's a [screen shot](http://i.imgur.com/oYBuu.png) of my eclipse sidebar. 
This probably isn't it, because you're probably extending Applet, but you'll also get a "Class Abc Not Found" error if Abc extends Xyz, and Xyz is not found. Maybe also check that you haven't overlooked any other generated *.class files in the same directory: for example, if your class uses any inner classes, they would generate something like BusinessCard$1.class files, etc.
I would recommend the use of [CardLayout](http://docs.oracle.com/javase/7/docs/api/java/awt/CardLayout.html), which allows you to swap out different contents in a JPanel. ([Tutorial](http://docs.oracle.com/javase/tutorial/uiswing/layout/card.html))
If you had a package name defined - which it doesn't appear you do - you would put: &lt;applet code="my.package.name.BusinessCard.class"&gt; The top of your java file would have the word **package** followed by the package name.
There's always more than one way to skin a cat (Who comes up with these expressions!?!). Although I get the impression that he'd want a frameless JFrame for the first bit of content. 
Oh, you're right. In that case I would do what Vauce said and use frameless JDialog (rather than a JFrame) for the splash screen.
Try setting the codebase attribute: &lt;applet codebase="./" code="..." &gt;
YES, this was it. Thanks a million buddy!
I use commons math. Some of the inheritance hierarchies are a bit deep and a bit much, but once you start using them, it works well enough and you get accommodated. 
It would be helpful if you could post the output or what it is that you're having trouble solving, but I can tell you that the 5/9 is going to return 0 because of integer division. 5.0/9 should yield a nicer result.
Things that make me go "the hell" when looking at this code. fToC is a bad variable name. Not the worst, of course, but how about a nice tempInCelsius. *How* the temperature got to Celsius isn't important, we just need to know what it is. final int NUMBER is defined as a double then cast to an `int` for no discernible reason. Two scores are known and declared as final for no reason. You'd expect them to be in an array or some other structure that holds a variable number of scores to be extensible. The arithmetic average will be calculated wrong. It will first take SCORE2 / NUMBER then add SCORE1 to it. output is calculated and stored, but it's only used once. 5/9 is exactly equal to 0. Always. This is because of integer division. Calling System.out.println() twice rather than using `+ '\n'`
It's reasons like this that I prefer to separate the fraction (i.e. (temp * 5)/9).
Based on what you're looking to do, I would recommend using \t (tab) characters to space things out properly. I'm sure it's not the most sophisticated method of formatting your text, but it should work if the length of the strings before the tab is consistent.
Honestly, manually aligning the output of 4 columns seems the most practical. I suppose you could throw everything into a list and find the longest column title and then add max-s.length() + 1 spaces to each column name. 
she said no using tab characters... seriously this is so hard, I am a first time programmer and other then just using manually inserted spaces I have no idea what she could be asking from me.
I'm a beginner, could you even point me to a place where I can see an actual output of string.format() and how to use. I am taking my first programming course. None of my TA's speak any english what so ever and everyone in our LINUX lab has been completely worthless on this subject. I really never thougt it'd be so hard to simply make a what is essentially a "row" format in Java. 
I'm a beginner, could you even point me to a place where I can see an actual output of string.format() and how to use. I am taking my first programming course. None of my TA's speak any english what so ever and everyone in our LINUX lab has been completely worthless on this subject. I really never thougt it'd be so hard to simply make a what is essentially a "row" format in Java. 
I'm 24, not from US. been doing Android for the past 2 years. I could help through email/PM's. Don't hesitate to contact me. :) Cheers!
While fucking? Edit: reading the homework I don't see anything about no spaces manually
Wouldn't a HashMap be better? If you look up for a string like Iron Sword in you ArrayList, all you'll have is a string (unless you use object.getname() or something like that). A HashMap returns the item you need. It's just cleaner imo 
It's maybe better if you just make your inventory an arraylist of objects. If you use an interface or an abstract class to use all the objects, that would be way cleaner. Say, you make an array (because your inventory is probably limited) of InventoryItem objects. This InventoryItem can be an interface with the name of the item, the amount in your inventory, and an abstract method which says what it does when you use it. Just a suggestion, but when you are going to expand the game, you'll probably need design patterns like this one.
&gt; For what kind of projects would JavaFX be preferred over Java? For GUI projects (hint: FX in the JavaFX name ;)
Indeed. I like to do this, too. Makes it easy to know where things fail, but with the option to catch them if I have a good reason to.
Yeah this points to the overuse of exceptions due to lack of alternative ways to model failure. This is a perfect example where an Optional value type (like Maybe in Haskell) fits much better than an Exception. But you kind of need generics to implement such types cleanly and generics did not exists in java 1.1.
I hope the word gets out because JSF 2.0 + along with PrimeFaces or RichFaces provides makes it is easy to create a rich user interface. I can do things now in dramatically less time.
Absolutely YES
Sorry, the age requirement for the mentor is 25. Also, I am not exactly sure whether I can have a long distance mentor. I think I should be able to. If so, it would probably have to be over skype webcam call or something like that. Thank you for your offer.
Wow you explained that super good. Better than my teacher does.
Ahhh! Cause my y was at 0!
Yeah, that was quick! That's the first thing you want to do, is to verify that the method really isn't called. 
Depends, we need to clarify. Are we talking about an inventory in the sense of the WoW inventory, i.e. a little bag that you carry items in? If so, then you're not really going to have any more than a few dozen items in the bag and ArrayLists will go the job just fine. A linear search on a few dozen items is beyond negligible. HashMaps have a greater memory overhead than ArrayLists do, but they do have faster item retrieval. Honestly though, this makes no real difference whatsoever when you consider the number of items in question. If I were in your shoes, I would make a class called *Inventory* and have it based on ArrayLists. You're going to have to deal with issues like stacking; if you have, for example, 5 iron bars, are they going to take up 5 separate spaces within the inventory or just one space denoted that there are 5 of the item? Obviously the former is easier to implement, but the latter offers better gameplay. Just some things to think about.
Though one question, how come it draws in a line? How can I make it so it's just a square?
It draws a square. The squares make a line. 
try/catch is orthogonal to checked/unchecked exceptions. 
the way we solve it is if you call OurCustomRuntimeExceptionWrapper(e) -- i.e., without clarifying information as (msg, e) -- and OurCustomRuntimeExceptionWrapper.isAssignableFrom(e), we basically return the same object -- this(e.getCause()). A bit slower, but not noticeably slow. Any system that relies on exceptions too much has bigger issues. 
A factory for wrapping makes a bit of sense actually.
Hey, I'm 29 and an Android developer/consultant. Amongst other things, I have close to 10 years experience with Java. I'm in the UK so not sure if that would be suitable but PM me if you're interested.
Are you trying to align the row headers? First Name: Bob DOB: 11/11/11 Then I'd go with something like this: http://pastebin.com/embed_iframe.php?i=FtZx4aJN 
char[][] testList = {{'a','b','c'},{'d','e','f'},{'g','h','i'},{'j','k','l'}}; testList[0][0] = 'a' testList[2][2] = 'i' 
isDigits() will not protect against overflow, and a quick glance at isNumber() suggests the same. So woo, you can get true from at least one of those methods and still get a NFE from parseInt.
Another (admittedly smaller) issue is poor heirarchies for thrown exceptions. You come across some cases where you have multiple thrown exceptions which only have Exception as a common ancestor, meaning you can either write multiple catch blocks or catch everything in one go including RuntimeExceptions. Multicatch now helps here, but the damage to people's perceptions has long been done.
~~just freeballing while half-asleep here, so excuse me if this is idiotic, but couldn't you use string.matches(String)? eg~~ ~~Updated now that I'm awake and bored enough to try this~~ Ok, that's enough of that. 
"" is not an integer. This, as well as valid integer ranges are among the first reasons that doing anything but parseInt is a bad idea.
It's bullshit to learn a specialized technology as a first step. You can learn technology when you need it. Here a few tips: - Learn writing, best as possible in your native language. Your daily job as a programmer is to describe a problem and solution, so that you and other people (collegues, customers etc.) can understand it. When you can describe a problem you can bring it back to code. - Learn to communicate: You have to communicate with a lot of people as programmer. (Describing problems, explaining solutions, to learn new things from other colleagues) - Learn concepts, not technology (e.g. in field of Programming Languages: OO programming (e.g. Java), functional programming (e.g. haskell), logic programming (prolog)). - My biggest advice when you are not a native speaker: LEARN English. I was too lazy at school, and it cost me a lot of time and nerves to explain things in English. But today you need today English everywhere. it' so important. 
Always rows first then columns, its quite a bit faster that way. 170ms for rows/columns and 1800ms for columns/rows with a 10k by 10k array. Pastebin seems to be down so lets try this: public class ArrayTest { public static void main(String[] args){ int size = 10000; int[][] array = new int[size][size]; long start = System.currentTimeMillis(); for(int a = 0;a &lt; array.length;++a){ for(int b = 0;b &lt; array.length;++b){ array[a][b] = b; } } System.out.println((System.currentTimeMillis() - start)); array = new int[size][size]; start = System.currentTimeMillis(); for(int a = 0;a &lt; array.length;++a){ for(int b = 0;b &lt; array.length;++b){ array[b][a] = b; } } System.out.println((System.currentTimeMillis() - start)); } }
Something like: done = false while(!done){ done = true for(a){ for(b){ if(list.get(a).get(b) &gt; 1){ list.get(a).get(b)--; done = false } } } }
getName and getColor require parentheses eg: getName(), getColor(). Compiler thinks they're variables otherwise.
Maybe consider using [this](http://docs.oracle.com/javase/tutorial/uiswing/misc/splashscreen.html)? If it needs to be more fancy you could always use a borderless JFrame to display your panel.
Anyone know why this is the case?
Any particular reason you want to use ArrayLists for this? If you are not using any of the methods within ArrayList, then you'll probably be better off with a 2d int array. int[][] array = new int[xsize][ysize]; for (int i = 0; i &lt; xsize; i++) for (int j = 0; j &lt; ysize; j++) if (array[i][j] != 1) array[i][j]--;
Trudat.
Could you explain what exactly I did wrong other than not filling out the rest of the for loop?
You mentioned about adding a tomcat to a default eclipse setup, I've got a tomcat server in Eclipse and I can see the war but when I try to run it all I get is the build configuration, how do I actually link the war to the tomcat server? I know I could just start tomcat and drop the war in webapps, but is there a way to do it inside the IDE?
 for(ArrayList&lt;Integer&gt; ali : given){ for(Integer i : ali){ //Fill in the blanks } }
Woah, I didn't realize when casting you needed parentheses around the ob as well (before the .get___) Thanks to both of you! 
yeah I do have M2E and I've converted the project to a maven project, just doesn't seem to want to assocaite the war with Tomcat, bizarre. Did you set any buildpath or anything like that?
Well check if it has the maven war plugin. http://maven.apache.org/plugins/maven-war-plugin/
With the maven war plugin I build the app from the web module using mvn clean package -P&lt;profile&gt; Where I define profiles for my filter.properties, you should just be able to build it without a profile i'm guessing. Anyway if you're in eclipse just right click run on server? packing it won't launch it but right click run on server should do it if you have tomcat associated with eclipse. 
What's the contents of GetAddress.java look like?
This worked, thank you.
there is probably a better way to do it but you might want to play around with the java.awt.Robot class. you can use createScreenCapture() to get an image to analyze and mouseMove() to move make the program move your pointer. note: i know nothing about analyzing images so i may be way off on the createScreenCapture(), but you'll still be able to move the mouse with Robots.
Use: http://docs.oracle.com/javase/6/docs/api/java/awt/Robot.html My friend wrote a WoW fishing bot using Java's Robot class. should be pretty easy for this game.
Thank you very much!
char * comment; Get it? Pointer?
No pointers in Java.
Here, I did something like this awhile ago... used [this](http://xkcd.com/138/)
Nice find! I tried to answer this earlier and the best I came up with was to simply hack the Flash directly so you could intercept events data and pump events back in directly (speaking a bit theoretically because I know squat about the Flash runtime at this point). But your method would be useful across many different types of containers.
http://code.google.com/p/guava-libraries/wiki/GuavaExplained
Not to mention, it'll find unnecessary (because the functionality has moved to the JDK) and duplicate jars, which might well cause hard-to-debug problems.
The series will cover many aspects of the integration of Spring and DHTMLX trying to get the best of both worlds, including client and server site validation, MVC architecture, and URL mapping best practice.
When calling close() on a stream in a try catch block, if your code crashes and enters the catch block you will never close your stream. Add a finally block and close the stream there instead. public String getFile(String path) { try { FileInputStream fis = new FileInputStream(new File(path)); byte[] b = new byte[fis.available()]; fis.read(b); return new String(b); } catch (Exception e) { e.printStackTrace(); return null; } finally { fis.close(); } }
&gt; } catch (Exception e) { e.printStackTrace(); } If you're not gonna actually do anything with the exception, it's probably better to throw it than to "swallow" it. This sort of ties in with [my other advice about Design by Contracts](http://www.reddit.com/r/java/comments/p7qok/coded_a_simple_bayes_classifier_need_code_review/c3n8l2c): Your contract should specify what exceptions your method throws, and under what circumstances. For example, it's perfectly reasonable for your "store(String filename, String contents)" method to have a contract like "throws IOException if there was an error writing to the file specified by filename".
OOP has nothing to do with "interact[ing] with the world".
This. I would add another vague, fallible rule: libraries tend to be things that your code calls, while frameworks very often involve inversion of control—you write your code according to the framework, and the framework takes care of calling it for you.
InetAddress.getByName() is used to translate a host name to an IP address, but giving it an IP address is fine too. Now, are there any routers inbetween your server application and your client, any firewalls or NAT gateways ? The IP of your client is 192.168.33.100, what's the IP of your server ? At this point you'd want to install wireshark, so you can sniff the packets on the wire both at the client machine and the server machine, so you can determin where the packets stops. imo though, disable the Windows Firewall service entierly, just to at least have tested that. 
It's just my desktop with the private address 192.168.0.3. Does that even matter though?
We have our main router hooked up to the Comcast cable which sends 4 Ethernet wires to outlets in the 4 bedrooms. My roommate has his Ethernet wire in his room plugged into a wireless router which I connect to my laptop from. I use my Ethernet wire (directly connected to the main router) in my room for my desktop. That may be why they look funky.
It sounds like both his wireless router and your main router are trying to act as DHCP servers on different subnets. Turn off the DHCP server on his wireless router, and then all your computers should be assigned IPs on the same subnet, which should solve the problem.
Alright, well I'll assume the program works then aside from the routers since it works when sending to localhost.
It's likely that something you do four times doesn't work when done the fifth time regardless of order. But we'd need to see code to say for certain.
okay people, i got this
I tried JMonkey, Havnt really done anything though, it's so depressing not knowing what to do compared to plain 2d games
I would advise not to create your buffer that large. Try a size around 2048.
Thanks for the suggestion, I'll size it down and see if it fixes the prblem.
Do you ever flush the output stream?
The downloading process stops. I figured it would be safer to allocate a new buffer inside the loop in case the next InputStream read() call didn't return as much data as the previous call (meaning there would be excess data leftover in the buffer, potentially causing data to be written twice).
Domain Driven Design
I prefer doing it all through the code, but learning how everything works is very handy. And really, writing the code is alot more fun than using a somewat restricting design tool.
While we're on the subject, An API is a library, right??
Generally the code generated by GUI builders is overly verbose and somewhat of a nightmare to customise and maintain. Learn how to use Swing, it isn't difficult and you'll end up with exactly what you want. Also take a look at the JGoodies forms library; particularly PanelBuilder and FormLayout: Almost all Swing development I do uses those 2 classes.
Also, MigLayout is great, and especially suited to be programmed by hand. Unless you specifically want another (more standard, inferior) layout manager, you will probably not regret trying it.
[First thing that came into my mind...](http://www.quickmeme.com/meme/35w468/) (Sigh)
fixed ! i heard java 7 has a feature for this ....
done some. will add more tomorrow.
I noticed something else. You're checking for bytesRead &gt; 0, which is wrong. You should check for bytesRead &gt; -1. It's perfectly possible to read 0 bytes without the download being finished. Further, you should usually wrap your FileInputStream in a BufferedInputStream. That way it matters less what your buffer size is, as the implementation of BufferedInputStream on your platform can potentially choose a preferred buffer size. 
What GUI framework would you recommend?
My above review wasn't very comprehensive, and there's still a good few dodgy bits. When I said that all the methods were static, I didn't mean that the static keyword should be removed everywhere. That doesn't change the situation at all (in this case). It was more indicative of bad design, rather than bad it itself. If a method doesn't use any instance fields or methods, then it absolutely should be static. You probably don't want your system to have many of these methods. **"Map&lt;String, Integer&gt; good ; Map&lt;String, Integer&gt; ` ;"** These should probably be private and final. I'm guessing that the second is supposed to be bad. Why not changes those lines to "private final Map&lt;String, Integer&gt; good = new HashMap&lt;String, Integer&gt;();" etc? Then you can delete the constructor which is only there to initialize them. Also, fix indentation. **final static String[] specialCharacters = { ",", "#", ";", "\"", "\'", }; etc** Even though you use the final keyword here, other objects can still change the contents of the array. When you don't a visibility modifier (public, private, protected) fields and methods are package-private. You usually don't want this. Add an appropriate modifier or document why you're using package-private. **final static String empty = "";** This is probably going a bit far in extracting values to static fields, particularly as it's only used in one place, where the empty string's usage is obvious. I'd delete that field. **static void print(String s) { System.out.println(s); }** There is no good reason for this method. We already have a way to print out strings, the body of this method. If someone was to look at the methods of this class and saw that it had a print() method, they would most likely assume that it printed out the object called on, rather than an arbitrary string. A class should have one responsibility. Printing any given string should not be a responsibility of this class. Delete it. **void store(String fname, String data) { ... }** This method doesn't use any instance fields, so could be static to inform the developer of that instantly. It suffers from the same problem as above, but since there's more to the body of this method it is slightly more 'acceptable'. It should at least be private, however. Other classes should not be calling it. **String getFile(String path) { ... }** Same as above. There's also no reason to set fis to null within the try. You might want to include the commons io library, which gives you FileUtils.readFileToString(), FileUtils.writeStringToFile(). **String takeOutSpecialCharacters(String s)** The comment (should have been javadoc) does not match the method body. Bear in mind what Nebu said about the contracts on your methods. The minimum you should do to fix this is to include in the comment that the string will also be lower case. **int count(Map&lt;String, Integer&gt; map)** The method called count does not do a count. It does a sum. It says so in the comment. Change the name of this method to sum, if you're going to have it. The generics can be less restrictive here too, although since this method should be private, it's not a big deal. We don't care about the key, so we can write the signature as "int count(Map&lt;?, Integer&gt; map)". I'll look at the rest of the file later. Remember: deleting the static keyword doesn't fix the problem where all methods are (or should be) static.
One minor note: Try not to name variables RTD and rtd (Different caps, same letters). Gets confusing.
It's great, but requires external libraries in order to use.
There are some great suggestions here (especially using a smaller buffer and watching out for a response of -1), and I would also suggest you look into Apache's HttpClient library. It gives you far more flexibility in regards to configuring timeouts, has more sensible exception handling, can even auto-recover from some transport errors, and has actual configurable logging so you can see what's happening behind the scenes. URL.openStream is super easy, but using HttpClient wouldn't add but one or two lines to your code.
That's EXACTLY what I was looking for! Then just run a simple while loop, something like this: BufferedReader din; din = new BufferedReader(new InputStreamReader(socket.getInputStream())); int cread; cread = din.read(); System.out.println("Message: " + (char)cread); while (cread != 3) { cread = din.read(); System.out.println("Message: " + (char)cread); } Beautiful..and I'm silly for missing this. Already test-ran it and it works perfectly. Thanks!
Ah, ok. Within the context of Java, it probably makes more sense to say it as `0x03`, which is how Java and most other programming languages encode literal hex values. 
Do you have a good example of this? I also use this same process for another download which is resumable (via use of the "Range" header) - is this easily doable with HttpClient as well?
Singular, not plural. Only one 75 KB Jar file. Which is quite impressive considering how many features are packed into that size.
Reformatted for the eyes. public void mirrorVertical() { int width = this.getWidth(); int height = this.getHeight(); int mirrorPoint = width; Pixel leftPixel = null; Pixel rightPixel = null; for (int y = 0; y &lt; getHeight(); y++) { for (int x = 0; x &lt; getWidth(); x++) { leftPixel = getPixel (width - 1 - x,y); rightPixel = getPixel (x, y); leftPixel.setColor(rightPixel.getColor()); rightPixel.setColor(leftPixel.getColor()); } } } Why would you go all the way to getWidth()? You can just go half way across if you are reflecting it across the y axis.
Your code formatted: public void mirrorVertical() { int width = this.getWidth(); int height = this.getHeight(); int mirrorPoint = width; Pixel leftPixel = null; Pixel rightPixel = null; for (int y = 0; y &lt; getHeight(); y++) { for (int x = 0; x &lt; getWidth(); x++) { leftPixel = getPixel (width - 1 - x,y); rightPixel = getPixel (x, y); leftPixel.setColor(rightPixel.getColor()); rightPixel.setColor(leftPixel.getColor()); } } }
Alright, i'm trying this but should i be setting the temp pixel to null? Because when i try that i get a nullpointerexception error. ex: // before loop Pixel temp = leftPixel; // after loop leftPixel = temp; rightPixel = getPixel (x, y); leftPixel.setColor(rightPixel.getColor()); rightPixel.setColor(temp.getColor()); 
That won't work. Pixels aren't primatives, so temp would store a reference to leftPixel rather than the value of leftPixel.
Is there anyway around that?
I dont think the clone method is apart of the guzdial and ericson java-source that im required to use
It's a standard method in the Object class, which is core to the language and every class extends.
Absolutely correct. Not to mention that differentiating between files by changing the case of characters in the file name is just a phenomenally bad idea.
Why is the article title horrible? 
and if Josh Bloch catches you doing this he will punch you in the dick.
just on the surface, that sounds unpleasant
I'm completely aware that it is platform dependent and that HFS+ is case-sensitive .. thus I'm puzzled why it does **NOT** work.
Thanks for downvoting btw. I appreciate it.
read it again... it says case-INsensitive. go to your command line and type this... &gt; echo test1 &gt; foo.txt &gt; echo test2 &gt; FOO.txt &gt; cat foo.txt how many files do you have? What are the contents of foo.txt? This should give you an idea what's happening. 
Well I don't know which wikipedia article he read, but I can't find it within the [HFS+ article](http://en.wikipedia.org/wiki/HFS_Plus). However it's apparently not turned on on my System. And I'm under the impression that this must have changed during the last releases as I'm fairly certain it used to be case-sensitive. Anyways. Thanks for the input.
I have lots of httpclient samples, I will try to find an example that looks most appropriate. The more I think about it, to do this most reliably I personally would try to use non-blocking IO, so that if something goes very wrong with the download your thread won't sit and block for hours on end. If the server end simply stops transmitting and never sends a reset (or you just don't receive it), there's very little to prevent your client from blocking forever and ever. I checked the usual places for a solution like this and the most typical answer is "use a separate thread to monitor the download progress and kill it if it stalls," which seems inelagant and overkill. I'll write up something and post back later. Unfortunately, the NIO route is guaranteed to make for far more complex code, but it's much easier to monitor the progress and just give up and retry if it's failing. **EDIT** Ok, maybe this is early morning-related ovecomplication. URL.setReadTimeout() and setConnectionTimeout() both get you very close here. I would still monitor the progress in code and abort when it stalls for an unreasonable amount of time.
ReadTimeout applies to the InputStream itself. I did some playing with this and you can get a SocketTimeoutException during InputStream.read which is entirely recoverable. I wrote up a sample app to donwnload something and print the download progress on stdout. For your purposes, you can do one of two things: 1. Use a modest sized buffer (1k or so) and a readTimeout so unreasonably high that you can safely assume the download is no longer viable if it times out. If you can't fill a1k buffer in a minute's time, the download is probably messed up. 2. Do a bit of micromanaging, and track the BPS yourself. If it falls below some threshold and stays there, give up. Here's my sample: [http://pastebin.com/MeS678LS](http://pastebin.com/MeS678LS) It downloads a file and tracks the download speed in real time. You could do something simple, like whenever an interval's byte count is too low, increment a counter. If the speed picks up, reset the counter to zero If the counter gets to 10 or 20 or whatever you choose (my default implementation uses 500ms intervals) then declare failure. Or you could get fancy and use some kind of ring buffer or time series to keep a running total of the recent BPS and act accordingly. No threading involved.
Thank you so much for writing that out! On a side note, do you happen to know if there's any way to avoid being blocked by antivirus software? I've been having problems with AVG specifically...
Haven't looked at your code, but this is what I would do. Take the input as a String and split it via tokenization. Google this, but it's basically *tokens[] = input.split(" ");*. You will notice that the string is split via whitespace, thus removing whitespace from the equation. You now have an array containing all the numbers and operators. For example, "3 + 4" would tokenise as: tokens[0] = "3" tokens[1] = "+" tokens[2] = "4" **EDIT:** Why the fuark is Reddit putting all those tokens[] on the same line?
People are jerks dag. Here's what they're on about: don't use filename case sensitivity to distinguish files (it's bad practice and is file system dependent). If you want to create a unique identifier to appene to a filename, you can use something as simple as system.nanotime or whatever it is. If you absolutely uave to use case to distinguish files, read up on your production platform and file system, as well as the source/platform implementation of the relevant java file classes. You may have to roll your own byte stream/writer class to achieve your desired result because file name case sensitivity is always a Very Bad Idea. Gl
Can you use the code tag?? I thought i saw one. I'm on 'reddit is fun' (android) so I can't try it.
I would alternatively use inputString = inputString.replaceAll("\\s+", ""); Then you have a string with no white space, and can work from there. I would find that easier and less error prone.
I wrote this in Java while training myself for interviewing at the company I just got hired for... Here's my full solution that includes operator precedence and uses a couple of stacks to process the expression once it's been tokenized, hopefully this is a good code example :) Insert this into your class that has your main method: public static double parseExpr(final String input) { if (input == null || input.isEmpty()) { return 0.0; } Stack&lt;Double&gt; numbers = new Stack&lt;Double&gt;(); Stack&lt;Operator&gt; operators = new Stack&lt;Operator&gt;(); //assuming we're using spaces as delimiters: final String[] elements = input.split(" "); for (int i = elements.length -1; i &gt;= 0; i--) { final String element = elements[i]; //try to parse it: Double number = null; try{ number = Double.parseDouble(element); } catch (NumberFormatException e) { //swallow } if (number != null) { numbers.push(number); } else { //try to get an operator for it: \ Operator op = null; try { op = Operator.forSymbol(element); } catch (IllegalArgumentException e) { throw new IllegalArgumentException("Could not parse element " + element, e); } if (operators.isEmpty()) { operators.push(op); } else { if (operators.peek().getPriority() &gt; op.getPriority()) { Operator topOp = operators.pop(); double temp = topOp.calculate(numbers.pop(), numbers.pop()); numbers.push(temp); operators.push(op); } else { operators.push(op); } } } } while (!operators.isEmpty()) { Operator op = operators.pop(); double temp = op.calculate(numbers.pop(), numbers.pop()); numbers.push(temp); } return numbers.pop(); } Operator is an enum with methods, here's the full class: public enum Operator { PLUS("+", 1) { @Override public double calculate(double first, double second) { return first + second; } }, MINUS("-", 1) { @Override public double calculate(double first, double second) { return first - second; } }, MULTIPLY("*", 2) { @Override public double calculate(double first, double second) { return first * second; } }, DIVIDE("/", 2) { @Override public double calculate(double first, double second) { return first / second; } }; private final String operatorSymbol; private final int priority; private Operator(final String operatorSymbol, final int priority) { this.operatorSymbol = operatorSymbol; this.priority = priority; } public abstract double calculate(double first, double second); public String getOperatorSymbol() { return operatorSymbol; } public int getPriority() { return priority; } public static Operator forSymbol(final String opStr) { for(Operator op : Operator.values()) { if (op.getOperatorSymbol.equals(opStr)) { return op; } } throw new IllegalArgumentException("No Operator defined for symbol \"" + opStr + "\""); } } 
This seems shamelessly stolen from this: http://www.quickmeme.com/meme/35wnxf/
If you're using Eclipse, you can set those arguments to the VM as part of your run configuration when you export the jar. As for where to put those files, I'm not sure...you might need to add external resource or something.
Yay! SSL with Java! I've just been enjoying that hell for the last month or so. Have you tried setting `-Djavax.net.debug=ssl` to debug SSL? I don't know how Java SSL deals with classloaders and resources within JARs. What about exporting the keystore to a temp file and reading it from there?
Ok also, this method is apart of my java sources but it doesn't flip the image..it actually does nothing, anyone know why? public Picture flip() { Pixel currPixel = null; Pixel targetPixel = null; Picture target = new Picture(this.getWidth(),this.getHeight()); for (int srcX = 0, trgX = getWidth()-1; srcX &lt; getWidth()/2; srcX++, trgX--) { for (int srcY = 0, trgY = 0; srcY &lt; getHeight(); srcY++, trgY++) { // get the current pixel currPixel = this.getPixel(srcX,srcY); targetPixel = target.getPixel(trgX,trgY); // copy the color of currPixel into target targetPixel.setColor(currPixel.getColor()); } } return target; }
Are you kidding? &gt;System.setProperty("Djavax.net.ssl.keyStorePassword", "123456"); should be System.setProperty("javax.net.ssl.keyStorePassword", "123456"); This D mean "define" to help java distinguish sysprop definitions from other jvm options.
This is right. Also, he needs to think of not hard-coding the passwords.
You could implement [Callable](http://docs.oracle.com/javase/1.5.0/docs/api/java/util/concurrent/Callable.html) but in your case that would probably get unwieldy. You should definitely go with the interface as suggested by byikes. Also, I'd suggest having an ArrayList of Card objects in your Deck, instead of an array.
Other relevant libraries: Google Guava (which, in my view, has a better predicate system than Apache) and LambdaJ.
Check the string that gets returned by Counter.getFile(String). I suspect that when you use a large file (e.g. several megs), not the entire contents of the file is returned, and yet the javadoc you wrote "utility method, reads and returns the contents of a given file path" implies that it should read the entire contents of the file.
Command pattern maybe? [http://pastie.org/pastes/3320858](http://pastie.org/pastes/3320858) Your cards would implement the interface, and execute the command.
Seriously? Predicate? Transformer? OP want's a simple solution, I seriously doubt he wants to include a thousand of libs he does not even probably need. 
about 5 minutes after I posted this on Reddit I noticed my mistake and immediately face palmed myself :P
Case sensitivity being turned on by default or not can easily change between os releases, I don't see why not. However I feel incredibly stupid now. I think was under the impression because of the tab-completetion in terminal being case sensitive.
Im sorely tempted to export the keystore to simplify things but im going to try and see if there's a neater way first :D
javax.net.ssl.trustStore must point to a file accessible in the file system, NOT to a file inside a JAR file. It works in Netbeans because the file is directly in the classpath and getResource() will point to the file system directly. [Source](http://www.coderanch.com/t/372437/java/java/javax-net-ssl-keyStore-system)
Remember to pass a charset to InputStreamReader or you will be using the platform-specific default charset. If your client and server use different charsets, you might run into odd problems. new InputStreamReader(socket.getInputStream()**, "UTF-8"**);
Byike's suggestion to use many mini classes is the best way, although I would extend an abstract class rather than implement an interface. I'd also like to add, in case you're not familiar with the technique: in this case the implementing classes can and probably should be [inner or nested classes](http://docs.oracle.com/javase/tutorial/java/javaOO/nested.html) so there's no need for "many classes" to imply "many source files". This way they're kept together which is a bit easier to manage. The classes don't need names either. Outline example (not fully thought out): abstract class Card { private String text; final String getText() { return text; } abstract void act(Game game); } class SpecialCards { static final Card[] chanceCards = new Card[] { new Card() { { text = "Bank Pays You Dividend of $50"; } void act(Game game) { game.currentPlayer.income(50); } }, new Card() { { text = "It is your birthday. Collect $10 from each player."; } void act(Game game) { for (Player p : game.players) { if (p == game.currentPlayer) continue; int m = Math.min(10, p.money()); p.pay(m); game.currentPlayer.income(m); } } }, etc.... }; ... }
Could be an enum: public enum Card { BANK_DIVIDEND_50("Bank Pays You Dividend of $50") { void act(Game game) { ... } }, BIRTHDAY("It is your birthday. Collect $10 from each player.") { void act(Game game) { ... } }, ... public Card(String text) { this.text = text; } abstract void act(Game game); }
Take a look at the Chain of Responsibility pattern, which is based on the Command pattern.
When I realised I couldn't use the simple system properties with streams I started to look at the javax.net.ssl package a bit more and got a feeling I would have to create keyStores, which would mean a LOT of reading and fiddling. But your link was PURE GOLD!!! I had to adapt it, and to be honest im not sure why my code works (I guessed I had to use a keystore manager for the server and a truststore manager for the client based on the original system property settings!!!) but it does and thats great. Cheers! :D
It does work. I'm on an ubuntu 64 bit lucid lynx computer, and no, it's the regular whirring hard-drive. Intel core 2 duo, 1 Gib memory, What's the biggest file you can read at one go ?
There are some resources on this. I like this book: http://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882. Honestly, the way that it says to do things in there is pretty insane and really hard to actually do in practice, but it gives you a pretty interesting metric to judge your code against. It's a good read. As for answering your question directly, it's a very difficult and touchy subject. In general, each method should perform a very specific function and have an appropriate name. There should be nothing taking place in the method that you wouldn't expect from the method name. If you are just starting out, don't worry too much about any of this. It's usually so overwhelming to get everything working (calculators can be particularly challenging) that getting the basic functionality should take precedence over everything. That being said, one thing a lot of programmers do is to re-factor their code after they get it working. This means going back and moving things around, looking at your loops to make sure they're efficient, and generally re-writing a lot of the code to make things more logical and organized. Some more resources: http://en.wikipedia.org/wiki/Code_refactoring http://en.wikipedia.org/wiki/Programming_style http://www.langrsoft.com/articles/smallMethods.shtml Again, if you're just starting out take all of this with a grain of salt. More important to get it working first, then re-factor later. However, I find that designing method calls first can really help in understanding the overall program, too.
Once again, this is why software engineering should be taught as an apprenticeship!
it is taught! But if find that during my 1 semester of experience they have converged yet :(
Many developers advocate keeping code for object creation separate from domain logic. This means that you should avoid creating new objects outside of constructors, factories, your main method, and so on. (Excluding value objects, collections and such.)
[Rubber Ducking](http://c2.com/cgi/wiki?RubberDucking)
I'm definitely in agreement about Clean Code. If you plan on coding professionally, it's absolutely worth the read. Reading it now might not be a bad idea, but I think it might be a little too much. If you read it now though, then re-read it in a few years, I think that could be good. As for your questions about where to create objects and such, I would say the best thing to use as your guide is scope. Do you need the object in your main method? If you do, create it there. If you don't, create it in the method that you need it in.
I think if you post some of your code, we might be able to help you more. But here are a few things. * Create objects when you need to use them, NOT before! * Don't pass (the same) objects all over your class. If lots of methods need the same object, make it a class level variable. * If you have a ton of class level variables, you probably need to split the class into more than one class. If you stick to those few things, you should be pretty good IMO.
Would I declare this right away in the program or keep it strictly to my getOperand() function? 
Im starting to feel more and more what everyone is getting at is simplicity, and I will prioritise minimalising scope and making code very readable whenever Im confused over where to put method calls etc Thanks for the help.
When you declare a method as synchronized then the lock object is this - the current object instance. This means that all other instance methods that are marked synchronized, and all blocks synchronized with this will be locked to all other threads. So... yes, the first one.
If it is non-static then the threads lock on the instance object, regardless of the method that is invoked on the object. So if the threads are sharing a same object they will lock. 
I third the Enums suggestion, Java Enums were practically built for doing things like cards. 
Other people have answered correctly: yes. Now, if you don't want that (you prolly don't) looks into the concurrency classes: atomic primitives (atomicinteger, atomicboolean, etc) as well as the various external locks (I've used reentrantmutex or reentrantlock (can't remember exact name) with ease)
Well, either way, it's a potential bug, since you said you were getting poor predictor results, I suspected only first few lines of each file were being analyzed and that might explain why. Beyond that, the only thing that stands out is that I find the math a bit strange. I.e. maybe there's something wrong with your algorithm, rather than your code.
Declare it just like the other fields, and construct it in the constructor.
Yes. public synchronized void method() { ... } is equivalent to public void method() { synchronized(this) { ... } }
Do some reading on java.util.concurrent.locks to learn about better, safer ways to handle multi-threading in Java. The synchronized keyword really should be deprecated IMO.
I tend to think a main method should be pretty limited. Since java is OO most of that should go into the object's methods, but then again I don't really deal with main methods very often.
Not sure why you're being downvoted, the concurrent.locks package is awesome and much more flexible than synchronized methods and blocks.
Here are some comments about CounterOOP: **You are potentially initializing good and bad maps twice**. This is mostly a style thing since the performance difference is negligible. If you want to have the second constructor, you could remove the initialization from the variables itself and modify the constructors like this: public CounterOOP(){ this(new HashMap&amp;lt;String, Integer&amp;gt;(), new HashMap&amp;lt;String, Integer&amp;gt;()); } public CounterOOP(Map&amp;lt;String, Integer&amp;gt; cat1, Map&amp;lt;String, Integer&amp;gt; cat2) { this.good = cat1; this.bad = cat2; } Also make the variables good and bad final. It's also worth nothing that usually you should make defensive copies of mutable collections coming from outside sources. **Consider using doubles instead of floats**. Doubles have better precision and there are very, very few cases when you actually benefit from using floats. Especially in numerical computing you often want better precision. Speed is of course important, but you should use floats only if you are absolutely sure you need them. [More information](http://stackoverflow.com/questions/2733479/for-what-purpose-does-java-have-a-float-primitive-type) **String&amp;lt;-&amp;gt;byte conversions without charset**. If you are dealing with ASCII data this doesn't really matter, but I think it's a good idea to learn to do things properly from the start. If you don't specify a charset, Java uses the system default which is platform specific. In the "store" method you should pass a charset to getBytes: data.getBytes("UTF-8"); In the "getFile" method you should pass a charset to String constructor: new String(b, "UTF-8"); **Don't set fis to null in getFile**. Since you set fis to null, the finally block will always throw a NullPointerException. Yes, the exception is catched and swallowed, but there's no need to set fis to null and the exception can thus be avoided. And in any case it's a good idea to check for null in the finally block. **Don't return null in getFile catch block**. You are printing an exception and returning null. This is not itself wrong and can be a good design decision, but you are not checking for null anywhere when you call getFile. In this case I think it's better to rethrow the exception (or wrap it into RuntimeException). **Don't return null in downloadURL catch block**. Same as above. **You are allocating a potentially huge byte array and might not be reading the whole file**. This is basically what nebu said in the comments. Usually a buffer is preallocated and the file is read in chunks. Also, since you are eventually going to construct a String, it's better to use a Reader instead of InputStream. InputStreamReader reader = null; try { reader = new InputStreamReader(new FileInputStream(new File(path)), "UTF-8"); char[] buf = new char[1024 * 16]; StringBuilder sb = new StringBuilder(); int count; do { count = reader.read(buf); if (count &amp;gt; 0) sb.append(buf, 0, count); } while (count &amp;gt;= 0); return sb.toString(); } catch (Exception e) { } finally { if (reader != null) { try { reader.close(); } catch (IOException e) { } } } Note how I specify a to InputStreamReader, check for null in finally block and do not set reader to null. **The comparator seems odd**. You are converting from floats to ints, so at certain precision different floats will be truncated to the same integer. Are you just trying to do a descending sort by value? Do this instead: new Comparator&amp;lt;Float&amp;gt;() { @Override public int compare(Float f1, Float f2) { return f2.compareTo(f1); } } The comparator could also be stored in a static constant. **Your toList allocation size is wrong**. In "classify" you are allocating an array with 15 elements, but creating a sublist with 16 elements. When you call toList, your array will be discarded because it is too small. Calling subList(0, 16) will create a sublist with elements 0 (inclusive) to 16 (exclusive), which in total is 16 elements (remember that indexing starts with 0 so it's the first element, 1 is the second, 15 is the 16th). Based on the comments you probably just want 15 elements: Float[] probabilities = lProbabilities.subList(0, 15).toArray(new Float[15]); **toLowerCase without Locale**. This is a very minor thing, but when you call toLowerCase, the conversion is done using the default locale (environment specific). That probably won't break anything, but usually you want to force English rules for conversion: return s.toLowerCase(Locale.ENGLISH); If your app fully supports any locale properly, it's of course safe to leave the explicit locale out. **Split could use whitespace regexp instead of one space**. Since String.split uses a regexp, you could split on any whitespace. Your current code will behave strangely if you for example have a line break or more than one sequential space chars. String[] tokens = text.split("\s+");
Judging from a really quick look at your code, it seems that you don't have any collision control. What you need to do is to check before drawing a block if there is another block already occupying that space.
on a slightly unrelated note, this.setLocationRelativeTo(null); sets the frame at the center of the screen .... 
then kill yourself
This. I wish we would have had time in a module somewhere during my CS undergrad degree to cover using the Java Debugger. It is unbelievably powerful, fairly easy to use and saves you many println-spamming sessions looking for bugs.
You have to break switches? That explains a lot. And don't worry, I will name a boss in a future game after you :).
: )
it needs to be declared as a variable of class Calculator, if it is declared in a function it will disappear when the function finishes and each time you enter the function you will get a new blank instance. you either initiate as part of constructor or just initiate as part of declaration e.g. public class Calculator { java.util.Map&lt;String, Double&gt; memory = new java.util.HashMap&lt;String, Double&gt;(); ... 
I think Eninerd was providing an example, not suggesting that someone writing monopoly (clearly for a class project) should go digging through Apache commons libraries.
Anonymous classes are a code smell, avoid them. While it may be obnoxious to have multiple files, a good IDE will handle build for you. It may seem convenient for now, but anonymous classes will get you into trouble later.
I'm pretty sure they're already double buffering. They keep a non-displayed image and render it to the panel.
That piece of code was in there before I started, so I figured there'd be some reason for it. Well, so far I haven't found a reason for it, and it removing the first appears to have fixed the problem. Thanks!
The way I solved this was with BufferedImage. Drawing to it then throwing that into the render loop.
What did you use to make your 2D games?
http://docs.oracle.com/javase/7/docs/api/java/nio/file/Files.html#copy%28java.nio.file.Path,%20java.nio.file.Path,%20java.nio.file.CopyOption...%29 http://docs.oracle.com/javase/7/docs/api/java/nio/file/attribute/BasicFileAttributes.html#creationTime%28%29 I hope that'll get you moving forward? You only had to Google...
&gt; If lots of methods need the same object, make it a class level variable. Sensible advice in general, but keep in mind that a class represents a concept in your mental model of the application. Putting a variable in a class just because it makes it more practical is a bad practice when the variable just doesn't belong there conceptually. 
C
It's a design decision. Sun decided to support the minimum set that is widely supported when they designed their API...
Great News!
Aren't all recursive methods returning themselves? public final int recursiveMethod(int i) { if(i == THRESHOLD) { /** you're done */ } else { //Card c = _cards.get(i); /** magic */ } return recursiveMethod(i); } Question is: Why would you want to return a method just to pick a card?
This is the whole reason of checked exceptions. If you require the user to prepare for an IOException when checking for the date, it's much more explicit than handing back a bogus value.
[http://docs.oracle.com/javase/1.5.0/docs/guide/language/generics.html](http://docs.oracle.com/javase/1.5.0/docs/guide/language/generics.html) If I understand the question you're asking, you'd like to know why the code doesn't look like(?): Vector vector = new Vector(); // fill with stuff for( int i=0; i &lt; vector.size(); i++) { SomeObjectType obj = (SomeObjectType)vector.elementAt(i); // do things } If this is actually your question, generics provide us with typed collections which can be checked at compile time to make sure that the operation of adding elements to the collection, as well as removing elements and using those objects are the correct type. Also, since we know what *type* of objects exist in the Collection (Vector), we can use the foreach loop shortcut, providing iteration over the collection.. [http://docs.oracle.com/javase/1.5.0/docs/guide/language/foreach.html](http://docs.oracle.com/javase/1.5.0/docs/guide/language/foreach.html) Vector&lt;SomeObjectType&gt; vector = new Vector&lt;SomeObjectType&gt;(); // fill with SomeObjecType objects for( SomeObjectType someObject: vector ) { // do things with the 'someObject' object.. } This iteration shortcut is introduced to all [Collections](http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Collection.html) data structures (which Vector, ArrayList, LinkedList, etc implement)..
Not trolling, just a clueless freshman.
Also, stop using Vector. It's a legacy class not to be used in new code. ArrayList is the replacement. List&lt;Employee&gt; myVector = new ArrayList&lt;Employee&gt;(); 
boa13 is right. Eclipse has its own compiler. From [JDT Core Component](http://www.eclipse.org/jdt/core/): &gt; Core is the Java infrastructure of the Java IDE. It includes... An incremental Java compiler. When generics were first added to Java there were numerous differences between the javac and Eclipse implementations, which was quite annoying, as Eclipse users would get compilation failures that javac users wouldn't, and vice-versa. Also see [this](http://stackoverflow.com/questions/325498/where-eclipse-finds-javac-to-compile-the-a-project), and [this](http://stackoverflow.com/questions/5987694/how-to-run-javac-from-eclipse). The page you linked says: &gt; If you intend to use Eclipse for Java development, then you should install a JDK (the JDK includes--among other useful things--the source code for the standard Java libraries). That's hardly the same as saying it *requires* the JDK to compile Java code. It's more like a recommendation, since it's useful for other reasons than just javac. That said, hearing Eclipse called a compiler also caused my brain to throw a type error. It *has-a* compiler, not "is-a" compiler...
It looks like this will do what you want, OP, but please learn how to adapt quickly to whatever IDE is at hand. In the workplace, you might be forced to use Eclipse, IntelliJ, Visual Studio, notepad, or even vi over a remote connection. The more you become dependent on a custom IDE-specific features and the less practice you have at adapting to different development environments, the worse off you'll be when it comes time to get a job.
Use timers and timerTasks - [Here is a simple example](http://www.gammelsaeter.com/programming/simple-timer-example-in-java/). Then drop the windows scheduling and just let the .jar run. Java API for the [java.util.Timer](http://docs.oracle.com/javase/7/docs/api/) class
Eclipse has its own compiler. Damn sure.
Best JSF framework out there. 
I *could* use an enum, but I'm using a third-party library that expects Strings as arguments, not some enum type. Having to call .toString() explicitly on all of my enum values when-in use with the library seems ugly.
I stand corrected! Thanks!
It's not that simple. Your company might have written a suite of plugins that only work in IntelliJ IDEA, or maybe your job consists of SSH-ing into Amazon EC2 instances and hot fixing code in vi.
Well, I did say it "looks like". Another options though is to use an interface as a placeholder for the constants. Then you could do a @see to the interface.
Sweet, this is what I needed help with. Thanks.
That's true.. Thanks for the idea.
Vector was added before the Collections Framework and it really doesn't fit in. Vector *is* synchronized, but that actually gets you very little. It's just big lock around all the methods. You can get the same from any List implementation with Collections.synchronizedList(). In both cases, this synchronization does *not* cover iteration, so you need to synchronize that yourself anyway. List&lt;E&gt; list = ...; synchronized (list) { for (E e : list) { ... } } Exposed locks are bad practice. There generally are better ways to handle concurrency than simply wrapping a collection with a lock. A well-designed API (encapsulation, immutability, defensive copying, etc.) or use of the Java 1.5 java.util.concurrent.* collections will go much further. 
Yes, well said. I guess reality, as always, falls between the two extremes. All of the implementation consultants at my old company had to learn vi because when they got out on the client site it was pretty much the only thing that we could guarantee would be installed. I remember having to work in the data centre, telnet-ing from a racked PC on to solaris boxes to deploy code changes by manually changing files using vi for one client. 
A better job faster? Depends on what you consider to be better. Probably the certification. The old Sun Java certifications weren't easy. 
It is printing the address in memory. If you want to print out the contents, you have to loop within the double array and print it out e.g. int[][] myArr = new int[100][100]; //System.out.println(myArr); for (int i =0; i&lt; myArr.length; i++) { for (int j=0; j&lt; myArr[i].length; j++) { println("[" + i + "]" + "[" + j + "]" + ":" + myArr[i][j]); } }
When you pass an object into System.out.println() all it does it call toString() on it. When you call toString() on an array it prints out its memory address. That matrix probably has all 1's in it you just aren't printing it correctly. If you print any random member then it should be 1. Try something like System.out.println(myArr[50][50]); after populating the array and it should print out 1. To print the whole array you need to write the code your self. Something like nested for loops and appending to a string then print that string out would work.
You are printing the array as a string, not the values of the array. Try this: for (int i =0; i&lt; myArr.length; i++) { for (int j=0; j&lt; myArr[i].length; j++) { myArr[i][j] = 1; System.out.println(myArr[i][j]); } }
First off all, try changing System.out.println(myArr); to System.out.println(Arrays.deepToString(myArr)); The default string you get from arrays is practically useless. Basically [[I means a two dimensional array of integers and the @22911fb5 is the address where the object lives. If you try Arrays.deepToString() I think you'll find it much more understandable. Put that System.out.println after your loops and you should see it filled with ones. 
In Java, an array is really just an object. The Object Class toString prints out the Class name then an '@' then the hashcode of the Object. The '[[' denotes an Array, and the 'I' means int. See: [Object.toString()](http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#toString%28%29) I assume you want to print the values though, so you could do this: System.out.println(Arrays.deepToString(myArr)); That should print the Array's element in a better form
I consider a job that pays well and treats you well to be better than a job that pays less and doesn't treat you very well. But I also realize that entry level usually means bottom of the barrel jobs. I am guessing that you are implying that the Oracle certs probably will also, most likely, be difficult?
Why not take an entry level job at a software company? Sure you'll probably be assigned mundane tasks like writing test cases or re-formatting source files, but this won't be permanent. You might do it for what, 6 months, and then prove to the company that you're a competent, team-player and gradually get assigned bigger and better responsibilities.
I would have no problem with that at all! I've applied for a bunch of jobs, and I always end up interviewing with another tech staffing agency. They seem underwhelmed and never call me again. If you can tell me how to find a job like that....... What is the job title for a position like that?
Well I couldn't tell you because it's not my field. When I was looking for jobs of this nature they usually stated in the title or description that they were entry level positions. Sometimes called quality assurance analyst or something classy sounding.
:(
Somehow I don't think using a platform specific shell solution is a proper way of doing *Java* homework. Bwa ha ha ha ha.
Work experience is the primary thing that matters. All of your education and certifications combined is worth less than a year of relevant work experience. Going back to school for a degree could actually set you back because the time you spend studying could be spent acquiring valuable work experience (not to mention the money you're losing out on). Certifications are definitely cheaper, quicker and more relevant but they still carry little, if any weight in the eyes of most employers. My suggestion to you is to start some pet projects, perhaps an open source project on github.com or sourceforge.net. Open source projects are still considered experience, and employers like initiative.
Thanks, I decided to use this. So far so good - But I had to slightly rework some of my program so I haven't finished implementing yet. 
nice tip. i usually end up doing a for( int[] i : a) { for( int j : i) { System.out.print(j); System.out.print(" "); } System.out.println() } deepToString saves effort.
I agree. It really makes creating Rich interfaces easy.
Thoughts: 1. Wow, String case statements compile down to hashCodes? My only objection to this is that hashcodes, by their nature, are not unique to each string (there, are, what, 2**32 - 1 possible values? .... 4,294,967,295). Unlikely to cause immediate problems, but it would be a total bitch of a bug to catch if encountered. 2. I didn't realize that multicatch was in Project Coin. I would have loved this 7 years ago when writing a lot more IO-intensive code. 
It would start out as all 0's. His code seems to be correctly setting it to all 1's. I think his only issue is printing the array out incorrectly.
I hope javax.time API will be included in JDK 8 (or JDK 9 ;)
I would never put logic code in a *.jsp file! I use them only for the view. I have servlets acting as controllers and my model containing the data objects and the logic.
I misused the term JSP in the title... I need a database connection for the application as a whole. I just stumbled upon this part of the documentation: [Datasources tomcat 6.0](http://tomcat.apache.org/tomcat-6.0-doc/jndi-datasource-examples-howto.html#MySQL_DBCP_Example). Seems like a good explanation. Thank you!
Ok. Unless it's a toy application you really want to be using a connection pool. Additionally though, unless it's a toy application - or you have a very good reason not to - you really want to be using an MVC framework like Spring WebMVC offers. And once you start using a framework like Spring this kind of question goes away...
You should define the database connection as a datasource in Tomcat and look it up using JNDI.
You're the one that wrote jsp in the OP. you: Read before you comment? me: Proofread before hitting "submit." As others suggested, focus on using a pooled DataSource. I would recommend Spring, but if it's a very lightweight application, you could use something like [bdcp](http://commons.apache.org/dbcp/) directly.
Would you find it useful if /r/java had a documented example application, a kind of a skeleton starting point? I have a couple that go beyond the usual maven archetypes, I could clean them up.
Convert to epoch time (milliseconds) and subtract. Commons DateUtils for common basic date manipulation. That's covers 90% of use cases. java.util.Date is seriously broken. Calendar is ugly.
Use the application server to create the connection pool. It will then make that pool available in jndi. Create a DAO that grabs the connection pool from jndi, creates a prepared statement, executes it, then cleans up.
A couple years ago I wrote a chess engine in Java over two weeks. There's a mutable Board class that defines the current state of the game board. A Move is applied to a Board to transform it to the next state. Moves can be popped from the board move stack, to back off to earlier states (important for the AI). Pieces return a List of available, legal Moves when asked. The whole thing is driven by a Game, which retrieves Moves from each Player (interface) in turn, applying them to the Board and checking for end-game conditions. For AI, just use [minimax](http://en.wikipedia.org/wiki/Minimax) to recursively search all possible moves to a fixed depth (4-6 should be reasonable for you). With everything else in place, minimax AI is easy. For the display, just extend JComponent to observe (java.util.Observer) the Board (which extends java.util.Observable), drawing the board's state in paintComponent(). The JComponent is also a Player, who uses a MouseListener to get the player's move. 
I wrote a program in C++ to do this. Checkers "valid move", "valid king move", and "is jump available" functions are ugly and adding AI probably is a pain. The test will be less work, but have fun. Will it be on the console or graphical?
My tip is to spend the next months programming to gain alot of experience because in order to program such an advanced program you need alot of experience. Imperative programming is probably what you are learning right now but in order to implement a program like that you need to use APIs and should have a good understanding of object oriented programming too.
OK, here's a hint. You only need java.lang.String
Some comments that may help you out: 1) .replace will only replace the first instance of your key word, to replace all instances of the key word you can use .replaceAll 2) Your code is currently case sensitive. I cant think of the best way to handle this off hand but I do know string has a .equalsIgnoreCase() function which could be useful, especially if your are specifically dealing with things word by word 3) I'm not entirely sure when the program expects to output text, but my guess is that the two lines after the while loop should be in it, or you should be storing all of the user entries and printing them out after they have finished entering text (although this is unlikely since it terminates with a hard kill to the program) *edit* I got about an hour and a half before I gotta sleep, but if you have any questions before then I will leave this open.
nope, this is the first time asking for help. i just know that i'm missing something in my code. this is what i have so far.. a dialog box that asks for numbers between 0 and 100 separated by a space then i have int first = input.charAt(); char letter = (char) first; and i know that i have to put an index for that char after charAt but what if the number is 2 ints, which it would have to be to get a letter in ascii. right?
Thanks man, you're the best. I just want to get it so it will print the new text. Everything else seems easy, but I just can't get it. [This is my most recent attempt.](http://pastebin.com/kgsKkXw9) [This is my error message.](http://i.imgur.com/y3sCd.jpg) 
-_- hrm I don't know why its doing that off the top of my head, Ill go grab my laptop with netbeans... That error should be impossible since you explicitly check for a .hasNext() before calling .next() 
you sayin do a .toString? like i said in my other comment i'm just not to sure how to collect the ints from the dialog box 
Your's didn't exactly work but I'm tweaking with it. For some reason, when I press return after entering the replacement word, it wont accept it. The program just returns a line, it doesn't print anything else.
OK I'll try this. Does the way I created the new class have anything to do with it?
I *think* the problem is asking for the replaced text at the end of each loop, so it would work if you just move it into the loop. It has been so long since I've used system.in... Didn't realize at first that it will only start executing the while loop after the user hits enter 
So. Definitely just tried to copy this code and paste it on my laptop... which is a totally different computer... this is why its time for a vacation XD
It shouldn't, the code looks pretty good. What development environment are you using? maybe you didn't compile before running after changing the code?
haha wow
I'm just writing and running using eclipse.
If you are going to use .nextLine() you really should be using the .hasNextLine() call to be safer. and I think its cleaner to use aux[i].equalsIgnoreCase(oldchar) which returns a boolean Also (And I wouldn't mess with this for now Oliver) you can clean up those loops a ton with the syntax: for(String subStr : aux) which translates into "For all strings 'substr' that are elements of 'aux'"
how would i collect more than one index from a input dialog box? 
Actually I have to eat my words here, as a for each loop wont work with the first one, but just generally ignore that for now and come back and fiddle with it later.
It might be better to use the "\\s+" regex pattern instead of a one space string " " as your pattern to split on. If you're not familiar with regex, you're going to want to got acquainted pretty soon. Basically regex is a very powerful set of pattern matching and replacement rules. Really you could do your entire replacement section in one line using a regex but it looks like the assignment doesn't really want that (and you wouldn't get the number of times you made the replacement). The pattern "\\s+" means find any whitespace character (space, tab, line return) one or more times. The \s is a shortcut for those whitespace characters, the plus means to match one or more times. The leading \ escapes the slash in the \s so that java interprets the pattern correctly.
Its working for me &gt;.&gt; what exactly isnt working? (here is some sample output): Enter word to be filtered out: test Enter replacement word: 123 testing test test 321 testing 123 123 321 
keep writing :) it is working. it´s just that is outputing after each line :)
ugh i wish
i dont think so. i´m also using eclipse and the only import i have is java.uti.scanner :s dunno what´s wrong..
Thanks guys. I'll just talk to the prof.
Thanks guys. I'll just talk to the prof.
Are you using the debugger? Using breakpoints?
No lie, I was supposed to get adderal tonight and I was going to try to reread the only 4 chapters we've gone over. I said I was desperate. I've worked on this for a long time and have had no results. Everyone is telling me it's because of my Eclipse, so it's not that I am lazy. I understand where you are coming from. I'm a TA and a tutor. Reddit is a tool. I use my tools for learning, not for play. This is where I came when I got stuck. I'm in the class to learn, which is why I try my hardest. But that didn't cut it. So please, don't judge someone so hastily.
I was just saying that if you don't see why it prints out that line every time you enter a new line, you need to look at the basics. The line: System.out.println("Replaced " + oldchar + " with " + newchar + " " + count + " times"); Is in the while loop. The basics of the code given work, it doesn't completely fulfill your homework requirement, but the skeleton is there.
Yea I feel like I'm close.
I suggest you study for the final exam.
Its really not. Minimum to get going (above the standard webapp stuff) is the dependencies - one if using maven - one small xml file and one java controller class. And I think spring roo does a lot of that for you... (never actually used roo)
Study for the finals. This is no project that you will be able to do well without a number of advanced classes. I would say after you take Data Structures and Algorithms and Artificial Intelligence will you be able to accomplish this task. The problem is you are just learning the basics of programming. You really need to master that before you can build on top of it. I've known far too many people that have tried to skim by intro class and failed magnificently in later classes. If you still want to attempt this, I'd recommend you negotiate down the requirement from a player vs CPU to a player versus player game. The former is an order of magnitude harder than the latter. In addition, the latter demonstrates knowledge in skills you learn from your current semester as well as the next semesters knowledge. AI is much further down the track. In addition, a two player game is a stepping stone to replacing the player with AI. here's an outline of my approach at your level. After you take data structures and algo, you'll want to replace with oop. 1) create a data structure to hold the game board. The most basic structure is a 8x8 int array (reason I choose int is explained in next part. 2). Use the value 0, 1, 2 to store the state of the board. (You can choose any numbers you want). 0 represents no pieces in that square, 1 is a piece by player 1, 2 is a piece of player 2 3). Define the initial state of your board. 3 rows of 1 on one side, 3 rows of 2s on the other. 4). Define your move rules. (Ie diagonal, board edges, jumping, king'd) 5). Create an input mechanism to input moves. 6) update state of the board after each move 7). Check for win conditions Before you write any piece of code, whiteboard or diagram this out. Figure out how you would solve each of those pieces. For AI, it is just taking the current state and applying each possible moves and seeing if its a win condition, if not, for each of the ais states, apply every possible move for the human state. Depending on how many levels you want to search, that will determine which move the ai picks. 
&gt; I'm assuming I have to run this from CMD with "java filename but when I do I get: "Could not load or find main class UDPServer.java/UDPClient" Have you compiled your source files (.java) into class files (.class)? When you invoke the java command, you want to give it a class name, not a source file name (i.e. not with a .java extension). Also, when you wrote your code (I've not attempted to download it), did you specify a package? (That is, is the first statement in the source file package com.foo.bar; ?)
So the steps you need to take are Build the project using javac command Run the project using java MainClass command You should have all the ip address resolve to localhost (or 127.0.0.1) but localhost is prefered. If you can get them both to run they should be able to communicate on the same box 
is your classpath correct ? you need to call 'java Classfilename' from the folder in which the class file is present. We'll leave packages for later. I saw this line "String sentence = inFromUser.readLine();" in the client code. This means you must type in something at the client window. Just to be clear, you need TWO CMD windows - one for the server one for the client run "ipconfig" at the CMD for alternatives to loopback address please use pastebin for sharing code. 
Not sure if this was a lame attempt at advertising but im honestly curious. Free host what ?
This is my problem now. C:\Users\Admin\Desktop\UDP Socket\UDP Socket\UDPSocket\UDP&gt;java UPDServer Exception in thread "main" java.lang.NoClassDefFoundError: UPDServer Caused by: java.lang.ClassNotFoundException: UPDServer at java.net.URLClassLoader$1.run(Unknown Source) at java.security.AccessController.doPrivileged(Native Method) at java.net.URLClassLoader.findClass(Unknown Source) at java.lang.ClassLoader.loadClass(Unknown Source) at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source) at java.lang.ClassLoader.loadClass(Unknown Source) Could not find the main class: UPDServer. Program will exit. C:\Users\Admin\Desktop\UDP Socket\UDP Socket\UDPSocket\UDP&gt;javac UPDServer error: Class names, 'UPDServer', are only accepted if annotation processing is e xplicitly requested 1 error
When I run javac in CMD it says it is not recognized even though I have the java JDK installed and I added the path to the bin in system variables.
Really? I can do it - using maven - with 5 files, including 1 controller and 1 view file: * pom.xml &lt;-- Required anyway * web.xml &lt;-- Required anyway * context.xml * &lt;Controller&gt;.java * &lt;View&gt;.jsp Spring Security is a real pain to get working, but it's not something you actually Require either. Hibernate and DB access adds a whole other file - persistence.xml - and some more configuration but that's about all... I'd really not call 18k lines a Simple Spring app in the slightest. I was more thinking in the hundreds of lines not the thousands to get it working... 
I've never used c3p0. I'm sure it's a fine alternative based on my 10 second google search. I'm a big fan of using spring to decouple the application from the implementation of {insert whatever you want here}. In this case, you're asking spring to manage the connection to the datasource and then you ask spring for a datasource which may come from JNDI, bdcp or whatever else you want. In most of the apps that I have created, I end up using bdcp -- but that's just my standard MO. I'm sure there are many good alternatives.
It's hard without a Major in CS at the minimum. I got a major in Psychology and successfully transitioned to Java enterprise development. Here's my path: 1) Got a job at a university for an entry level programmer. Pay was crap, but they gave me a job because I was smart and knew how to code at a minimal level required to be taught the way they do things (note: I didn't say correct way of doing things). 2) I read lots of books (or at least started to read them until a real project would be spawned from the reading). This is a great way to catch up on all that stuff CS majors get taught. In a lot of ways it's better because you can focus on what you're doing and get applied knowledge (which is FAR better than theoretical knowledge in this case). 3) Once I had that magic number of "3 years of Java experience" I applied for a developer position at another company and effectively threw myself out of the frying pan and into the fire. 4) I flourished learning new things and teaching myself new things. 5) I'm now a Sr. Java Developer on par with graduates from excellent CS universities. Sure, there's things I still don't know - but if you keep repeating step #4, it'll work out. One other thing... some companies STILL won't give me a job interview because I don't have a BS in CS or EE. It's pretty silly too, but that's the way of things. If you do decide to go back to school, I'd focus on getting a quick CS degree from a **major** university (not Phoenix or some crappy business school). I'm not sure how it works, but I'm sure you can use your electives from your other degree to effectively skip all the crap and just take your CS credits in 2 years or so. I didn't do it this way, but it's not a horrible decision if you have the finances to do so.
While I just realised my advice wasn't what the guy was asking for, this wasn't an attempt at advertising, just a suggestion. Amazon Web Services offer a free "Micro" instance (at least for a year). You can sign up for this service and host servers and stuff on it. I use it to host my IRC bots (and works perfectly). If you go over the allocated usage of the micro instance you do have to pay monthly for the extra, but that generally doesn't happen (unless you have loads of read/writes potentially).
You are running trying to compile and run UPDServer but your class is named UDPServer. Do the following instead. 1. Open a command prompt 2. cd into the proper directory 3. run javac UDPServer.java 4. run java UDPServer 5. open another command prompt 6. cd into the proper directory 6. run javac UDPClient.java 7. run java UDPClient 8. type any string of characters then press enter. You should get the proper behavior after this. Note that javac takes **file names**, while java takes **class names**.
UDP or UPD?
Thanks didnt know about that service. Gonna check it out
What's horrible and pathetic is calling other people names without understanding [one's own licensing terms](http://www.primefaces.org/license.html). Nobody asked Primefaces to use the Apache Software License; that was their choice. Shame on anyone who complains about people abiding by their publicly stated Terms. **Edit**: Just for clarity, this is what Primefaces says about the use of their code: &gt; . 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form.
NullpointerException. http://pastebin.com/xb2JuC2y
You should do javac first as that will compile the code. You also need to include the ".java" extension when compiling. javac UDPServer.java javac UDPClient.java then run the server java UDPServer and finally run the client java UDPClient
This is a direct link. It would have been nice to mention that or better yet, include the link in a self post.
if you really want to be a developer, pick up a open source project in scala. scala people get mad respect from java people
I did. I was finally able to run javac after looking at some youtube videos to figure out why my computer didn't see javac. When I run javac *.java it now works when I run java * it get the errors above. Here is a video of me doing your exact instructions [!video](http://tinypic.com/r/9jkidu/5) I also have the newest JDK
I now have javac running. I added the wrong bin file to the system variables. But now I run into exceptions. Here is a [!video](http://tinypic.com/r/9jkidu/5)
You must be an icefaces developer! LOL.
Great post (and great blog) !
Write your own plug-in to do it! It probably won't even take that long.
Probably, but like everything in Eclipse is probably going to take you forever to find it.
Not sure, but you might be able to find something that suits you better here: http://www.eclipsecolorthemes.org
Hmm... I just tried exactly that, and it works fine for me. The Client/Server communication didn't work, but it found the classes properly. Have you tried googling for that error?
Very cool. now I know what I'll be doing Monday morning besides coding.
Your if-statement check is your problem. My advice (without giving it away too much) is to fire up a debugger and step through your while loop with some tests (0, 01, 10, 12, stuff like that). It should be clear pretty quickly. To me, your if-statement is a little unintuitive (I prefer working with "AND" and == over "OR" and !=) -- to me it should flow like a simple mathematical statement (I want to do this AND this). If you're still stuck after that (or don't know how to debug), just let me know.
Ok I don't know how but I figured it out. I read the first line of that error and it was looking for that file path, so it compiled in a separate file path and then I moved it from one computer to another. Which then changed the file path. So I opened up the compiler recompiled in a new class in c:\java taking out any package info from the code. It now works. Thanks guys. Now I know I just copy code over. It has to be completely recompiled.
I use nextLine() more often than next but for this case I guess it really doesn't matter.
Which IDE are you using? If Eclipse, you can set breakpoints by double-clicking the line number or margin on the left, then you should be able to simply click the bug icon (next to the play/"run" icon) and that'll let you step through line-by-line in your actual execution. You can see the values of objects and see what's truly happening (not just what you think -- that's the difference where bugs usually exist). Yeah, that logic was a bit confusing at first (!= and "OR" combined often leads to an always-true condition if not careful). I think my version would have been: boolean validity = true; for (int i = 0; i &lt; inString.length() &amp;&amp; validity; ++i) { validity = (inString.charAt(i) == '0' || inString.charAt(i) == '1'); } Or, for a while-loop: boolean validity = true; while (validity &amp;&amp; i &lt; inString.length()) { validity = (inString.charAt(i) == '0' || inString.charAt(i) == '1'); ++i; } The main part is the cutting-out of the loop once it's invalid (because it'll never become valid afterward, so the rest of the string doesn't need checked).
sorry about that. will keep that in mind for future posts
too bad no one found this funny . I thought you deserved the -20 votes too until I read the " i award you no points " and realized this was from a movie. my experience with quoting really funny movie lines is that the humor always loses against the relevance to the topic and then, downvotes!!! i try not to be funny anymore. gave you an upvote.. to stay on topic, i agree that in "objects are passed by reference, references are passed by value" - the second part of the statement doesn't add too much value to me 
For the amount of functionality it offers, protocol buffers is remarkably fast. Those Google chaps really are quite smart eh?
Thrift was created by a Facebook employee who was inspired by protocol buffers while interning at Google. Not sure why he left out the most important feature: backwards compatibility. Without that, you don't want to use thrift too much. With protobufs, you can store them, send them over the network, basically do anything. The second you start storing thrift messages, you're fucked because you almost always add fields. Seems like a big oversight IMO. Maybe he decided it was necessary to make thrift faster? But it's not faster. thrift seems kinda dumb. 
Good to hear it works :)
true, i do... edit : fixed !! new download on github page !!
This has the possibility to clean up a lot of code.
So while the list.tailist != null, you need to print out the list.headlist data. You shouldn't just be able to use a S.O.Println to test where your nodes and data are going :)
Because the development database server is embedded H2, whereas the production database server is standalone PostgreSQL. Look at ExampleApplication.java and ExampleConfiguration.java to see how the application works.
Debugger != Testing (like Junit-testing)
Liquibase doesn't really solve a problem that I've had, but people are welcome to integrate it into the skeleton, when the problem they're solving goes that way.
Read up on design patterns.
Yeah sorry! It's meant to recognise input that only contains the characters "a" and "ab".. I'm actually lost at this point! I was convinced that was the right solution! Help?
Sounds like you need the FlyWeight Control Structure. [here](http://www.oodesign.com/flyweight-pattern.html) 
It sounds like you don't know much about Java but are tackling a bigger task than you know how to take on. Learn Java first, then worry about designing a game.
[http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Scanner.html](http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Scanner.html) String ope = input.next();
Are you serious? Post your code...
Thank you! Works great! (I used the other because strings were used that way in a tutorial)
Take a look at [commons-pool](http://commons.apache.org/pool/). Also, what kind of objects are you pooling? With the exception of heavy-weight objects (e.g. database connections, threads, etc..), object pooling is generally a performance loss on modern JVMs. 
It may be the answer you are looking for. Have the reflex class hold a reference to the label that you are wanting to change and instead of running the same gui code again just do &lt;label variable&gt;.setText("lol.") at the moment you want to update the label.
Kind of "No shit"... I'm curious though, wouldn't an iterator speed things up considerably?
Sure, linked lists should always be traversed using an iterator (e.g. with a for-each loop - for (Integer i : list) ...). Then the performance should be similar, although I'd strongly recommend against using linked lists on a JVM unless you really need them (e.g. when doing lots of inserts/removals in the middle of the list).
I agree, and haven't broken out the debugger more than once during the previous two years. However, the OP doesn't seem to be there yet, so he'll need the tools which visually indicate to him how the VM executes the code.
Better yet, neither.
So how do I work on my debugging and testing skills. I m about to learn how to do some Junit testing from the netbeans tutorials. any other suggestions? 
thank you very much...i ll try this.
Wow, thanks. I will also be trying this out. By the way, do you have any resources that show how to do this? I have found little on the web about testing and debugging
I actually know Java well, and this is a very do-able task, because I've done many things like it in one class. All I need to know is how to use one variable in multiple classes that will actually update with new information.
Why do you say that? If you don't need multiple instances of an object static code is easier to call, executes faster, and uses less memory.
I'd love to know your reasons for saying that. Static has its flaws, but can be useful in the right situations. Static util methods or const type variables (static final) is nice. Using static methods that store any kind of state in static variables feels pretty dirty but functions pretty closely to singleton classes if you know you'll always be using the class (say a static ref to your database pooling instance). 
The things I tried, like some basic inheritance, never seemed to work. The variable never seemed to change.
Well, that one seems pretty simple. If the string starts with a 'b' it's illegal. If the string contains anything but 'a' characters and 'b' characters it's illegal. Typically you start by assuming the string is legal and rejecting it when it becomes clear it isn't: Given s as input string; if s starts with 'b' return false; let isLegal be true; for each character c in s: if c is not 'a' or c is not 'b': isLegal := false; break; return isLegal; 
What do you see as the actual problem here? There doesn't seem to be any license violation, and reuse of code across projects is not unusual in open source projects.
It does not extend or improve the functionality, nor is the functionality used as an input to an additional piece of functionality that solves an existing or new problem in a different or innovative way. Icefaces takes the work and simply repackages it with a different label and tries to make money off of it. There are no other legal implications or any other reason for forking (such as the Hudson/Jenkins issue) other than to solve the exact same issues with a different name. This is the equivalent to taking a project such as QuickfixJ, repacking and renaming, and then selling it as a separate FIX engine solution. 
Here's a quick tutorial on JUnit: http://www.vogella.de/articles/JUnit/article.html Once you get beyond learning and start writing code in a professional environment, JUnit is prevalent. I would be very hesitant to work anywhere that doesn't use any type of testing infrastructure. Basically, when you're dealing with a lot of coders and a lot of code, you need an infrastructure to make sure that a "minor" bug fix doesn't break a fundamental aspect of your system. The only way to "prove" that is after making the change, you go back and test all the functionalities. Without a system in place, it will be a complete waste of time. That's where JUnit comes in. Now the idea with [Test Driven Development](http://en.wikipedia.org/wiki/Test-driven_development) is that test cases fulfill a number of different roles. As I mentioned above, it's a good way to ensure that code change doesn't break other parts of the system. Secondly, it's a good way to "capture" requirements. For example, in your post, you have an insert method for a linked list. There are certain requirements that this method must fulfill (insert value in correct order, return new head if empty list). The idea is that before you write the code, you write a failing test case for it and then write the code to pass those test cases. The other benefit of this is that you don't waste time writing code for something that is not a requirement. For example, if your usage of the linked list only takes positive values between 1 and 100, there's no need to write code to handle negatives or MAX_INTEGER. Anyways, I started the test case and interface for you. Create an implementation that passes that test case. Then add additional tests to handle other scenarios.
http://math.hws.edu/javanotes/index.html I use, I like.
Always a book fan, but I do know this site exists: http://codingbat.com/java
http://www.greenfoot.org
I came looking for this. I say learn in a more conventional way first (eg. books, tutorials, class) then get your ass over to codingbat for practice.
[Google](https://www.google.com/search?q=google&amp;ie=utf-8&amp;oe=utf-8&amp;aq=t&amp;rls=org.mozilla:en-US:official&amp;client=firefox-a). It'll help you find [Eclipse](https://www.google.com/search?q=eclipse&amp;ie=utf-8&amp;oe=utf-8&amp;aq=t&amp;rls=org.mozilla:en-US:official&amp;client=firefox-a), [JUnit](https://www.google.com/search?q=junit&amp;ie=utf-8&amp;oe=utf-8&amp;aq=t&amp;rls=org.mozilla:en-US:official&amp;client=firefox-a) and [Stack Overflow](https://www.google.com/search?q=source+forge&amp;ie=utf-8&amp;oe=utf-8&amp;aq=t&amp;rls=org.mozilla:en-US:official&amp;client=firefox-a#pq=java+reflection+method+invoke&amp;hl=en&amp;tok=yNxZwnqacLEv__qonftKEw&amp;cp=6&amp;gs_id=1q8&amp;xhr=t&amp;q=stack+overflow&amp;pf=p&amp;sclient=psy-ab&amp;safe=off&amp;client=firefox-a&amp;hs=Qne&amp;rls=org.mozilla:en-US%3Aofficial&amp;source=hp&amp;pbx=1&amp;oq=stack+&amp;aq=0&amp;aqi=g4&amp;aql=&amp;gs_sm=&amp;gs_upl=&amp;bav=on.2,or.r_gc.r_pw.r_cp.,cf.osb&amp;fp=fc8f4a6474bcae3f&amp;biw=1100&amp;bih=918).
I can't see any reason why that function would always return false, so you might need to post the full code (pastebin or something). 
I might be reading this wrong, but doesn't this method always remove the student with the index of 1 (assuming that one student is found and every student in the array is unique). As you are incrementing *identifier*, when you find the match (0++).
Yeah, what he said.
yes, "identifier = i;" instead of "identifier++;"
 for (int i = 0; i &lt; this.capacity; i++) { if (this.students[i] != null &amp;&amp; students[i].equals(student)) identifier = i; } because you want to null out the student at position i.
This is the method in the Student class that calls the method in the description, if that contributes anything. public boolean dropCourse(Course course) { if (course.removeStudent(this)) { for (int i = 0; i &lt; courses.length; i++) { if (courses[i].equals(course) &amp;&amp; courses[i] != null) { courses[i] = null; numCoursesEnrolled--; return true; } } return true; } else return false; } 
No support for generics = I'll be sticking with javac, thanks.
&gt; Janino is not intended to be a development tool, but an embedded compiler for run-time compilation purposes, e.g. expression evaluators or "server pages" engines like JSP.
I remember using Jikes in like 2000. Is that still around? I mean I see the web page, but does anyone use it?
Two things: a) This code is fundamentally broken due to errors that others have described b) Your equals method in the Student class is probably the problem here. You need to fix it so that Student stu = new Student("stu"); Student stu2 = new Student("stu"); if (stu.equals(stu2)) return true returns true. You don't necessarily have to use the student's name, but maybe an identification number. Once you remedy that issue, some better code would look like: public boolean removeStudent(Student student) { int place = -1; // Arrays start at index 0 for (int i=0; i&lt;this.capacity; i++) if (students[i] != null &amp;&amp; students[i].equals(student)) identifier = i; if (place != -1) { // i.e. if the student was found students[place] = null; // remove the student object from the array currentEnrollment--; return true; } return false; }
I worked it out, thank you all!
Yes, and even in that context I'd like to be able to use generics and the modern *for* construction.
OH, these people should speak with UDub's CS department. We use a tool to input raw code for practice problems which compiles and runs server-side.
Loved Jikes. Sadly, the project died long ago. The last version was released in either 2004 (Wikipedia) or 2005 (Sourceforge).
Google regular expressions. indexOf() will also be helpful, but you may also find substring() to be helpful for replacement.
I am still looking for a small compliant java virtual machine.
http://kettle.pentaho.com/ - it's fantastically unshitty.
 * The call stack contains references to every method you are currently in, from the program's MAIN method to the current method. Without this information, there would be no way to RETURN. ;) * It kills the current thread (the thread in which the exception was thrown). Other threads are not affected by the thread that was killed. If the last thread has been killed, the program stops. The program also stops if any thread calls System.exit(). * An exception is a class that can be thrown, and must implement Throwable (actually an exception must extend Exception, not all throwables are exceptions). Throwing is a form of program flow control intended only for error handling, and works similar to a return statement except: a) No value can be returned, even if you are throwing from a value-returning function. b) Where return only unwraps the most recent level of the call stack, throw unwraps the entire call stack until a suitable handler (CATCH statement) is found. If no catch is found at all, the thread is killed (this will cause the program to exit if that thread were the only alive thread in the program). c) throw is associated with an Throwable instance, which is used to select a handler (CATCH clause), and may contain additional information such as an error message.
Also, exceptions seem scary from a debugging, bug tracking standpoint. What is the bottom of the error? What happens if you disrupt the flow of the program? Are resources freed?
Last point: Exceptions don't actually "disrupt" program flow. They really are part of the program flow. Sometimes it just takes a bit of extra knowledge to predict which statements/calls may throw run-time (unchecked) exceptions, since run-time exceptions aren't usually declared as part of method signatures. For example, if the variable 'a' in the following line is NULL, a NullPointerException is thrown. This isn't a disruption of program flow per se, it's actually the expected flow. a.foo(); Experienced programmers become familiar with the various run-time exception cases, and pay attention to statements that may throw run-time exceptions, and adding any code needed to prevent those circumstances from occurring where appropriate. This includes doing things like checking for NULL with if statements, checking the lengths of arrays before attempting to access an specific index, etc... This practice is sometimes referred to as defensive programming, and like defensive driving, can make life a lot easier if you're not a fan of crashes and debugging. :)
http://hg.openjdk.java.net/jdk8/jdk8-gate/hotspot/file/aaceb8ddf2e2/src/share/vm/classfile/javaClasses.cpp CTRL-F "fill_in_stack_trace".
You didn't define any constants. 
Ok, so apparently when I save a String from my input that starts with a zero, it takes off the zero's and saves it as whatever digits don't start with zeros for example 0002 would be saved as a 1 0023 would be saved as a 2 0392 would be saved as a 3 What can I do to work around this?
import java.security.AccessControlContext; import java.text.DecimalFormat; import java.util.Scanner; public class PhoneNumber { public static void main(String[] args) { System.out.println("Enter the phone number as: (NUMA)NUMB-NUMC"); Scanner keyboard = new Scanner(System.in); keyboard.useDelimiter("\\(|-|\\)|\n|\r"); DecimalFormat ft = new DecimalFormat("000"); DecimalFormat lf = new DecimalFormat("0000"); int areaCode = keyboard.nextInt(); int firstThree = keyboard.nextInt(); long lastFour = keyboard.nextInt(); String lac = Integer.toString(areaCode); String lft = Integer.toString(firstThree); String llf = Long.toString(lastFour); int x = lac.length(); int y = lft.length(); int z = llf.length(); // System.out.println(x); // System.out.println(y); // System.out.println(z); // if ( x != 3 || y != 3 ) { System.out.println("("+ft.format(areaCode)+")"+ft.format(firstThree)+"-"+lastFour+" Sorry, the phone number is invalid."); } else if ( lastFour &gt; 9999 ) { System.out.println("("+areaCode+")"+firstThree+"-"+lastFour+" Sorry, the phone number is invalid."); } else if (areaCode == 970) { System.out.print("("+areaCode+")"+firstThree+"-"+lf.format(lastFour)+": Valid, Local"); } else if (areaCode == 800 || areaCode == 866 || areaCode == 877 || areaCode == 888) { System.out.print("("+areaCode+")"+firstThree+"-"+lf.format(lastFour)+": Valid, Toll-Free"); } else { System.out.print("("+areaCode+")"+firstThree+"-"+lf.format(lastFour)+": Valid, Domestic"); } } }
In other words, "Quick, do my homework for me." Change your major. sincerely, Richard Nixon
What I would do is just set up an infinite loop: while(1) {*do whatever*} Then you can set up an if else real quick: if(choice == 3) break; That should break you out of the infinite loop if 3 is the choice, but if 3 isn't entered, it will continue going around the while loop.
try "continue" instead of "break"... this subreddit helped me pass java 1 but drained every bit of karma i had. programmers are dicks. 
 private final static List&lt;String&gt; TOLL_FREE = Arrays.asList("800", "866", "877", "888"); private final static String LOCAL = "970"; public static void main(String[] args) { System.out.println("Enter the phone number as: (NUMA)NUMB-NUMC"); Scanner keyboard = new Scanner(System.in); String input = keyboard.next(); Pattern p = Pattern.compile("\\((\\d{3})\\)(\\d{3})-(\\d{4})"); Matcher m = p.matcher(input); boolean valid = false; boolean tollfree = false; boolean local = false; String phoneNumber = ""; if ( m.matches() ) { String areacode = m.group(1); String prefix = m.group(2); String suffix = m.group(3); if ( areacode.charAt(0) != '0' ) { tollfree = TOLL_FREE.contains(areacode); local = LOCAL.equals(areacode); valid = true; phoneNumber = "(" + areacode + ")" + prefix + "-" + suffix; } } System.out.println("Valid: " + (valid ? "YES - " + phoneNumber : "NO") ); System.out.println("Toll Free: " + (tollfree ? "YES" : "NO") ); System.out.println("Local: " + (local ? "YES" : "NO") ); System.out.println("Domestic: " + ( (valid &amp;&amp; !(local || tollfree)) ? "YES" : "NO") ); }
1) NEVER use a goto statement 2) Use an infinite while loop while(true) { // switch here } Inside of it, use a break statement to get out of the while loop when a proper selection is made. 3) Consider alternate sources of help like tutors or tutorial websites. Also think about going to /r/learnprogramming for more instruction. 4) This isn't your homework help resource. Please don't bother a subreddit with trivial BS questions like this.
TDD doesn't prevent bad design. Though it certainly can improve the design. For example you can easily test package protected methods (a common approach afaik), but it might be better to think about refactoring those "private methods in disguise".
You first have to create a subclass of JDialog that creates the UI and exposes the UI elements via getters. -&gt; Example code, typed from memory so please excuse any errors: public class MyJDialog extends JDialog { private boolean result = false; public MyJDialog( Frame parent ) { // Tell the parent JDialog class who the parent Frame is and that you want to be modal super( parent, "My cool dialog", true ); init(); } private void init() { // TODO: Create UI, including OK and Cancel buttons } public boolean getResult() { return result; } // Define getters for UI element data public String getTextField1Data() { return textField1.getText(); } // TODO: Fill in the other 3 getters } I am assuming that your JDialog subclass has an OK button and a Cancel button. The JDialog subclass will have a "getResult()" method that returns the result of the JDialog (true = user pressed OK button). The ActionListener for both OK and Cancel buttons calls "setVisible(false);", which will hide the JDialog, breaking the modality and returning control to the frame, where execution will continue. -&gt; Example code, typed from memory so please excuse any errors: okButton.addActionListener( new ActionListener() { @Override public void ActionPerformed( ActionEvent e ) { result = true; setVisible(false); } } ); You then instantiate the JDialog subclass modally and let the user interact with it. When the user clicks the OK or Cancel button on the JDialog, your frame asks the JDialog for the result. If it is true, you use the getters to gather the data from the JDialog. -&gt; Example code, typed from memory so please excuse any errors: MyJDialog myJDialog = new MyJDialog(frame); if (myJDialog.result) { // gather data from myJDialog } // You then dispose the JDialog instance and continue on your merry way. myJDialog.dispose(); 
JamVM?
Looks very usefull, thanks!
Google "netbeans install junit". Click on the third link, the FAQ. Follow the instructions.
Double post, please remove one. It is also recommended to check the javadoc of the method you are calling: [http://docs.oracle.com/javase/6/docs/api/java/util/Arrays.html#asList(T...)](http://docs.oracle.com/javase/6/docs/api/java/util/Arrays.html#asList%28T...%29)
Yeah, definitely not my homework. I'm doing 2nd year css, its much harder than this trivial shit. Turned out i was being stupid, probably because it was like 1am and id been at something else for hours. Just took it all out of the main method and made a few different recursive methods. Not sure how i didn't come to that conclusion.
Oh? So you did the homework for your girlfriend? What's her name? What section is she in? sincerely, Richard Nixon
I wrote an answer a few months back for a similar question to /r/programming. Here's a [link](http://www.reddit.com/r/learnprogramming/comments/kwpi3/what_exactly_is_the_purpose_of_an_interface/c2nvp81), but I'll quote it here as well: &gt; ...Consider what would happen if every programmer "just implemented the methods" without resorting to interfaces. Let's say I have a Java program that needs to talk to a database. Let's suppose I like MySQL -- it's free, it does what I need to do, and it comes with a JAR that I can simply plug into my application. Problem solved! &gt; But suppose something happens where I need to ditch MySQL in favor of another database. Suppose, for instance, my customer just freaked out [because the MySQL website infected all their office computers with malware](http://news.cnet.com/8301-27080_3-20111943-245/hacked-mysql.com-used-to-serve-windows-malware/). My deadline is in two weeks or I don't get paid, and I need to move database platforms fast. &gt; So I pick up another database. But wait a minute! Because everyone is "just implementing methods," there is a completely different set of functionality that I need to integrate. Records that come back from MySQL are so completely different from what comes out of the new database that I have little choice but to rewrite 80% of my application code. I miss my deadline. The customer sues (because they secretly blame me for their malware problem). I go bankrupt. My family eats shoe leather to survive. &gt; Now let's suppose my two database vendors, instead of supplying incompatible implementations, used interfaces. &gt; There's a set of interfaces in Java called JDBC, which define how database connections should be opened, how returned recordsets should look, etc. Practically every database vendor offers a JDBC implementation, which means, as a developer, that when my customer goes insane and demands that I drop MySQL, I can plug another database into my app without changing any code on my side. Voila! My two-week deadline is met, and my children will not starve come winter. &gt; Truth is, you need interfaces any time you suspect that the underlying implementation might have to change, or when for any reason you want to insulate calling routines from the implementation of the code it's calling. Remember that a big part of OOP is encapsulation. Interfaces help you achieve that. &gt; EDIT: One problem with teaching programming is that what's valuable in OOP only becomes apparent when you have seen enough train wrecks on large projects (e.g., several hundred thousand lines of code and a team of seven developers) to understand how OOP can help. Until then, you'll need a certain amount of faith that these concepts will make sense later. The only thing I'd add to this is to explain abstract classes. These are used when you need a partial implementation for a class that you know will need to be subclassed. For instance (and to use a completely contrived example), you have an object called Pipe that's used in a plumbing CAD program. The pipe will have a certain amount of functionality that you can implement for every conceivable kind of pipe: getLength(), getDiameter(), etc. But then you also have a method called hookup(), which you'd ideally like to work whether the pipe is joined to a sink, a toilet, a garden hose, etc. You leave hookup() abstract, make the Pipe class abstract, and then *any connector in your CAD program that needs to hookup a pipe can do so, without caring about what kind of pipe needs the hookup.* Because, remember, you can refer to an object by its class type or by any supertype. Suddenly, you can call an object like follows: Pipe gardenPipe = new GardenHosePipe(); Pipe bathPipe = new BathtubPipe(); gardenPipe.hookup(theNozzle); bathPipe.hookup(theTub); ...and it will work. You've saved yourself some effort, some code duplication, and you can deliver faster than before. Again, this will all make more sense when you've seen enough large systems to understand why you need it. For now, just learn it.
Is this solved by PECS idiom? Producer Extends; Consumer Super
http://docs.oracle.com/javase/tutorial/java/concepts/interface.html As always, GO TO THE OFFICIAL TUTORIALS FIRST, then ask questions.
Interfaces are a basically contracts between implementing classes and the outside world. The define the behavior the implementing class will provide. Abstract classes define some part of the implementation detail while leaving some of the implementation up to the inheriting. Generally, you should only use abstract classes when there is an implementation that you want to remain constant in child classes that relies upon a methods that the child class must override. f.ex. public abstract class Runner { public void run() { init(); go(); clean(); } protected abstract void init(); protected abstract void go(); protected abstract void clean(); } In this case, we always want those methods to be called in that particular order, but we want the implementing child class to define what those methods actually do. Interfaces are generally easier to work with and should be preferred. Take shapes. Assume we have an interface: ThreeDShape. It will have the method for getVolume() but the computation will be different for each implementing class (cube, sphere, etc). Now assume an interface Bounceable with a method bounce(). Now we can have: public class Ball implements ThreeDShape, Bounceable { public double getVolume() { ..... } public void bounce() { ..... } } Now any class that interacts with Ball can treat it as a ThreeDShape, and a Bounceable object. This type of contract wouldn't be possible with abstract methods.
Thank you! And you're absolutely correct about preferring composition. I rarely use abstract classes, though once or twice they have come in handy. On the other hand, I use interfaces all the time. 
You're not doing her any favors by doing the work for her. sincerely, Richard Nixon
I would also add process, such as Agile and Extreme Programming... both very important in the workplace today
If you sign a contract, you promise to fulfill whatever it tells you to do. Methods and classes also have a concept of contracts: Given this this and this give me that that and that. For instance, the method double add(double a, double b) is *under contract* to give us the sum of its arguments. An interface is just a Java construct that describes a contract. Classes that implement the interface promise to fulfill it. interface Adder { double add(double a, double b); } A class that implements Adder says "I promise that since I'm an adder, I will have the ability to add. You can use this ability via the "add" method I provide." The thing about contracts is that the contract doesn't care *how* you do something, it just cares that it gets the right result. That's why an interface only holds a very basic skeleton of the method. The way the method actually works, its implementation, is up to the class that implements it. Abstract classes are sort of halfway between an interface and a class: You can't implement them, only extend them, and you can only extend one at a time. They provide contracts that your subclass must follow, but they give you a little help by providing default implementation for some methods. abstract class Multiplier { abstract double multiply(double a, double b); public double add(double a, double b) { return a+b; } } If your class extends Mutliplier, you have to supply the implementation for the multiply method. But, if you want to use "add" in your class, Multiplier has already done that for you. In fact, because it has that add method, the abstract class Multiplier qualifies as an Adder, so it can implement that interface abstract class Multiplier implements Adder { abstract double multiply(double a, double b); public double add(double a, double b) { return a+b; } } An important thing to note: Since abstract classes are "missing" methods (The abstract ones), you can't instantiate them (Which is to say, you can't say Multiplier m = new Multiplier();). To understand why, consider if you did, and you tried to invoke the multiply method. What would happen? (Ok, technically, you can say Multiplier m = new Multiplier() but ONLY if you immediately provide the implementation of any missing methods. That's called an anonymous instance, and don't worry about them yet)
100 tables isn't any different than 10 tables, is it? More about the amount of data and requirements? https://github.com/abiquo/abiquo is one large project using Hibernate , but I think it's not EJB3 (Spring+JPA instead).
Composition. Anyday, anytime you may change ArrayList's parent to something other than AbstractList or even remove that hierarchy. Because ArrayList implements List, you can be sure that the behavior should be preserved after removing the hiearchy.
Think about Super Mario Brothers for NES. Your interface establishes that the character runs and jumps and nothing else (let's call it Basic Interface). You may have other interfaces such as the Tanooki Suit or the Power Flower. In fact, these new interfaces could inherit from the Basic Interface. You have two characters: Mario and Luigi. They do almost the same stuff when running and jumping, but they have certain features that differences one from the other. You can wrap this common behavior in an abstract class that implements the Basic Interface, and leave the details (such as character color scheme and height) to the subclasses or a specific instance of a subclass. You now may have another child class that inherits from the previously mentioned abstract class and that additionally implements the Tanooki Suit interface. Therefore, this new class is capable of the actions defined in the Basic Interface and any new actions defined by the Tanooki Suit Interface (like converting into a statue). Remember that in this new class you'll have to implement the behavior for any new actions. As you play the game, and verifying what are the capabilities of the character you're playing with, it doesn't really care whether you're Mario or Luigi. I knows you're capable of running and jumping because it's using the Basic Interface to determine your character's capabilities. When you get a Tanooki Suit, the game will detect now that your new capabilities are those defined by the Tanooki Suit interface and besides running and jumping, it knows your character is also capable of converting into a statue). DISCLAIMER: I don't claim that any Super Mario Bros. game was implemented in any way similar to what I've described above. Implementing something this way may end in tears and may not prevent hair loss. Edit: Punctuation. Tried to add more words explaining the idea; everything sounds better in my head.
You are amazing. I got it working but I wrote some weird shit... lol I cleaned it up as much I could to make it more easy to read. import java.util.Scanner; public class PhoneNumber { public static void main(String[] args) { System.out.println("Enter the phone number as: (NUMA)NUMB-NUMC"); Scanner keyboard = new Scanner(System.in); keyboard.useDelimiter("\\(|-|\\)|\n|\r"); int areaCode = keyboard.nextInt(); int firstThree = keyboard.nextInt(); String lastFour = keyboard.next(); int z = Integer.parseInt(lastFour); String lac = Integer.toString(areaCode); String lft = Integer.toString(firstThree); int x = lac.length(); int y = lft.length(); int v = lastFour.length(); String invalid = "Sorry, the phone number is invalid."; String valid = "(" + areaCode + ")" + firstThree + "-"+ lastFour+": Valid, "; if ( x != 3 || y != 3 ) { System.out.println(invalid); } else if ( z &gt; 9999 || z &lt; 1000 &amp;&amp; v != 4) { System.out.println(invalid); } else if (areaCode == 970 ) { System.out.print(valid+"Local"); } else if (areaCode == 800 || areaCode == 866 || areaCode == 877 || areaCode == 888) { System.out.print(valid+"Toll-free"); } else { System.out.print(valid+"Domestic"); } } } 
Before making ignorant comments, have you considered researching this or maybe even actually compiling the class? Here's a screenshot of it running in eclipse: http://i.imgur.com/Hvlhd.png From the Java Language Specification, section 15.26: "At run time, the result of the assignment expression is the value of the variable after the assignment has occurred. The result of an assignment expression is not itself a variable." Therefore the value of the expression "(nextBand = GetAwesomeBand())" is a String. The value of the while expression is whether or not that value is null. But seriously, you are aware that Java compilers are available free of charge, correct? Download one and compile the code. Too lazy? Download beanshell or groovy and use the built-in console and it will run it for you, no compilation/class files required.
&gt;But seriously, you are aware that Java compilers are available free of charge, correct? Download one and compile the code. Too lazy? Download beanshell or groovy and use the built-in console and it will run it for you, no compilation/class files required. How would I have had any experience in Java if I didn't already have (a) Java compiler(s)? Anyway, having come from a C-ish background, I could have sworn I tried this when I first started Java and Eclipse complained that you can't assign and use the result of an assignment like that, so I've never tried it again. Also, it's typically just not Java-y to do that; it's much more C-y or C++-y. Therefore, I never saw that kind of code in Java code I read either. I'd never write it that way (in Java). I've never read any valid Java containing that. So it was only logical to assume that it was not valid. Actually, it turns out it's Python in which this is not valid. I still contend that it's poor style in Java. Also, the other problems I thought I saw in your code are actually because your lines are too long and the text box is cutting them off early, before they reach the right hand side of the page or even the border of the text box.
Great answer for interface - what about class and abstract class? I ask this question when I interview. Supposed mid-level Java engineers struggle or outright miss it all together. 
|I still contend that it's poor style in Java. And that may be true. I looked over a few Java coding standards documents and I'm surprised none of them mention this sort of case explicitly. Here's about the closest I could find in Sun's Java coding standards: *Do not use the assignment operator in a place where it can be easily confused with the equality operator. Example:* if (c++ = d++) { // AVOID! (Java disallows) ... } *should be written as* if ((c++ = d++) != 0) { ... } *Do not use embedded assignments in an attempt to improve run-time performance. This is the job of the compiler. Example:* d = (a = b + c) + r; // AVOID! *should be written as* a = b + c; d = a + r; I'm not sure what to say about a coding standard that claims that "if ((c++ = d++) != 0)" is acceptable under any circumstances.
I don't even think you can do the first one. It's disallowed because it doesn't return a boolean or Boolean, I think. That must have been what I was thinking about; you can't directly use assignment expressions in if statements.
I use anonymous inner classes a lot, but if you have one with more than five real lines of code, then you have a class with enough functionality to be worth naming for readability.
Upvoted. This is true to the way the OP asked for it.
Here's what is likely a very bad analogy, but I'll give it a shot. I thought of this while sitting in the doctors office today after reading your post on my phone. Lets start by looking at people. All the people in the world have various *titles*. For example, lets look at Jane. Jane **is a** doctor. She's also a paintballer, a wife, a dog lover, a knitter, and probably dozens of other things. All of these titles make up who Jane is as a person. Each one of Jane's titles *guarantees* certain skills. It's guaranteed she can dress a wound, because Jane **is a** doctor. It's guaranteed she can shoot a gun, because Jane **is a** paintballer. It's guaranteed she can watch your puppy while you're on vacation, because Jane **is a** dog lover. All the various titles people have create guarantees they have certain skill sets. Now imagine one day you're cooking dinner, and you accidentally cut off your pinky finger. You need a doctor! So you call Jane to come over and dress your wound, because as a doctor, it's guaranteed she's capable of dressing wounds. At that moment you don't care that Jane is a paintballer, because you're not playing paintball. You don't care that she's a dog lover, because you don't need someone to watch your puppy. The only thing you care about is Jane **is a** doctor. In fact, you don't even care if Jane comes over! It could be Bob that comes over, and you don't care what titles Bob has, just so long as a one of them is *doctor*. So lets look at interfaces. They look a bit like classes, don't they? But they're not. They're *titles*. Or as most people say, they're *contracts*. In the same way that people's titles guarantee they have certain skills (A doctor *can* dress a wound) an interface guarantees the implementing class has certain skills. In the Java world, having a "skill" means having a method capable of performing that skill. For example a class may be skilled at displaying names, because it has the method *public void displayName(String name)*. Lets look at some code samples. We'll start by creating a class that represents Jane. class Jane { private String name = "Jane"; public void sayHello() { System.out.println("Hello!"); } public void sayYourName() { System.out.println(name); } } That's pretty basic, right? Now lets define some interfaces. Each of these interfaces are *titles* we can assign to different people like Jane, Bob, or Zoe. We are, of course, assigning these titles to different classes that represent different people. For these samples I will use the convention of starting each interface name with an upper case 'I'. interface IDoctor { public void dressWound(); } interface IPaintballer { public void shootGun(); } interface IMountainClimber { public void climbMountain(); } The first thing you probably notice about interfaces, is all those pretty little methods like dressWound(), or shootGun() don't actually have any code. There's a method *signature*, but no code to the method. That's because interfaces don't guaranteed **how** a wound is dressed, or **how** a gun is shot. It's actually up to the implementing class to define how those things are done. It only guarantees that a class implementing the interface **has** the methods dressWound(), or shootGun(). Lets rewrite our Jane class to make her a little more interesting. class Jane implements IDoctor, IPaintballer { private String name = "Jane"; public void sayHello() { System.out.println("Hello!"); } public void sayYourName() { System.out.println(name); } public void dressWound() { System.out.println("Dressing your wound"); } public void shootGun() { System.out.println("Pulling the trigger"); } } Jane is now a doctor, and a paintballer. More specifically, she **is a** IDoctor, and an IPaintballer. You'll note that the Jane class now has the methods dressWound(), and shootGun(), and that's because the IDoctor interface *guarantees* Jane will have the method dressWound(), and it *guarantees* Jane will have the method shootGun(). Because of those guarantees, you *have* to fully define those methods in the implementing class. Lets now define the Bob class. class Bob implements IMountainClimber, IPaintballer, IDoctor { private String name = "Bob"; public void sayYourName() { System.out.println(name); } public void climbMountain() { System.out.println("Climbing the mountain"); } public void shootGun() { System.out.println("Squeezing"); System.out.println("the"); System.out.println("trigger!!"); } public void dressWound() { System.out.println("Dressing your wound"); } } Because the Bob class implements the IMountainClimber interface, it *has* to define the climbMountain() method, and because he's also an IPaintballer, you *have* to define the shootGun() method. You'll notice though that Bob's shootGun() method is very different from Jane's shootGun() method, and that's because IPaintballer doesn't guarantee *how* the class will define the method. It only guarantees the class *will have* the method. By this point you're probably saying to yourself, "Well that's fine and dandy, but what's the point?" I'll demonstrate the point by defining a class that represents YOU. class AlexProbablyKnows { public void accidentallyCutMyFingerOff(IDoctor doc) { doc.dressWound(); } } This should look familiar. You remember early in this rant when you accidentally cut your finger off, and you didn't care *who* came to dress your wound, so long as the person was a doctor? Well the method accidentallyCutMyFingerOff() doesn't care *what* kind of object is passed to it. It doesn't care if the object is an instance of Jane, or an instance of Bob, so long as the object **is a** IDoctor. And why is that? Because the method is going to call the dressWound() method on whatever object *is* passed to it, and the method needs to guarantee that the object *has* that method. You can't even pass an object to accidentallyCutMyFingerOff() that isn't an IDoctor, because the compiler won't let you. Now you may be saying, "Well that's cool and all, but now anytime one of my classes implements IDoctor, I have to create the method dressWound(). I have dozens of classes that will implement IDoctor, and that's a lot of code writing! Wouldn't it be easier to define a class called Doctor, with the method already defined?" So you create a class like this: class Doctor { public void dressWound() { System.out.println("Dressing wound"); } } And you use it like this: class Jane extends Doctor { } Well! That certainly is a lot less code to write in the Jane class. You didn't have to define the dressWound() method at all, because Jane inherits Doctor, which contains a fully defined dressWound() method. You would be right. That would be easy. But you have to remember the most important thing about interfaces: They only guarantee a method *will* exist, and not *how* the method works. The IDoctor interface guarantees the method dressWound() will exist in implementing classes. It doesn't do anything to say how the implementing class will define that method. The Jane class may implement the method like this: class Jane implements IDoctor { public void dressWound() { System.out.println("Dressing wound"); } } And the Bob class may implement the method like this: class Bob implements IDoctor { public void dressWound() { System.out.println("Cleaning wound"); System.out.println("Wrapping gauze around the wound"); System.out.println("Taping the gauze closed"); } } But still... Why all the trouble? It comes down to [programming to interface, and not an implementation](http://stackoverflow.com/questions/383947/what-does-it-mean-to-program-to-an-interface). Ultimatly it's up to you to *really* understand the purpose of interfaces through months or years of coding. As time goes on you'll begin to see patterns in your programming. Problems you find yourself needing to solve over, and over again, and you'll start to learn to deal with those problems. Interfaces are one way of dealing with a certain pattern of problems that comes up over, and over again. Basically, "All that can be learned can't be taught." You're just going to have to use them, and eventually it'll start to click why you need them. Oh, but what are abstract classes? Abstract classes sit somewhere between classes and interfaces. Like interfaces they may contain method signatures that *must* be defined in the inheriting class, but unlike interfaces they can also contain actual code. For example: abstract class Person { private String name = null; public void setName(String n) { name = n; } public void sayName() { System.out.println(name); } abstract void sayHello(); } This almost looks like a regular class. It contains the fully defined methods setName() and sayName(), but then there's that funny looking method sayHello(). Defining that method as abstract means any class that extends from Person must define the method. Just like interfaces tell implementing classes what methods they must define. Like interfaces, you can't create an *instance* of an abstract class. The following code is illegal: Person p = new Person(); Abstract classes can only be inherited, just like interfaces can only be implemented. Abstract classes kind of give you the best of both worlds: You get to create guarantees that the inheriting classes will contain certain methods, but you also get to save yourself a lot of trouble by fully defining some methods. 
According to the Oracle Java SE Risk Matrix at the bottom of the page, these releases (7u3 and 6u31) fix: * 5 critical flaws (easy to exploit using Applets or Java Web Start, resulting in a potential complete breach of confidentiality, integrity, and availability, at the attacker's whim) * 1 almost-as-critical flaw (just less easy to exploit through the Java Update mechanism, same consequences) * 8 others serious flaws (most are easy to exploit, but with more limited consequences) Most of these flaws concern Java clients (e.g. the JRE installed on your desktop), but at least two look like they can affect server availability (DoS). As far as I know, Oracle has not published the details of the breaches, notably the CVE reports are still almost empty.
line = line.replaceAll(forbidden, replacement);
what is the #1?
These are amazing. You made my day. [](/xx34)
Hmmm, it's not in the Maven repository yet.
Thorough! - Have an up vote. :-)
 They are detailed, thorough, with precise language a great way to get a degree and a sure way to kill enthusiasm.
There have been Gmail April Fools' Day pranks as well if that's what you're talking about. I'm not really sure what you mean. If you're trying to be sarcastic, well, it really was released on April Fools' Day. The timestamps don't lie (and again, I saw it ON April Fools' Day when it came out). Did you notice the acronym?
Intellij - The compiler is open source! http://kotlin-demo.jetbrains.com/
If it was in a maven repo I would start using them pretty much instantly.
I created a subclass but still [nothing happens](http://pastebin.com/s1TLPmua). Some more hints? :)
Thanks, that actually worked. The only other thing i had to change was to set "private class MyFrame extends Frame" to "private static class MyFrame extends Frame".
Sorry for bothering again, but it's just one of those days where nothing seems to work. My previous post was rather positive due to the string "bla" being displayed. Unfortunately the image still doesn't show: http://pastebin.com/npzSCvHA. I used the method by drkbeer and the image isn't null. Though it's still not working..
Yes you can! Use the processing libraries, namely processing.core.* and import it to eclipse. You can google for "processing eclipse import"
Try using this: http://pastebin.com/rACkAMJp I switched it from AWT to Swing, but it should work correctly (hopefully). I believe that the previous version didn't work because it was looking for the picture elsewhere and when it couldn't find the picture it would return an empty Image object instead of null. In this version I explicitly state where the picture is, in this case it resides in the org package.
And whatever you do, if you ever type "throw new Exception();" I will FIND YOU.
yaaa but OpenGL is not java :P
I use viplugin which I prefer over eclim. Costs money but you can trial it 
The overhead would be minimal. Hibernate has proven on several occasions it is almost as fast as straight jdbc. In my app we went from jdbc to hibernate and now have better performance due to free second level caching. 
A good argument, when it's applicable, and easily understandable from the context.
I actually wrote and support some commercial webservices backed by sql databases, most were done with JDBC, and a couple were done with JPA. I never noticed any performance problems with either, though the websites they are supporting are B2B and middling traffic (dozens or hundreds of hits per second sometimes, but not typically thousands) I have been leaning away from JPA in my new projects, but that's kind of because I've been working with a lot of stored procedures and pre-existing table structures in the DB, and I just find it easier to call and interact with them directly through jdbc-style code than setting up JPA. If your project lends itself to JPA's style of db interaction, then the freebies you get make it worth it IMO. If you think you can do what you want to do easier with JDBC, then use that. I wouldn't worry much about performance issues with either.
(hides) 
It kinda sucks.
Make sure you *understand* this code before you just drop it in. There may be some syntax errors, I didn't check it in my IDE. class MemoryBoard { private Dynamic2DGrid&lt;MemoryBoardCell&gt; grid; //You're going to have to write the MemoryBoardCell class yourself. public MemoryBoard() { //"Declarate" grid grid = new Dynamic2DGrid&lt;MemoryBoardCell&gt;(); } private class Dynamic2DGrid&lt;T&gt;{ private ArrayList&lt;ArrayList&lt;T&gt;&gt; grid; Dynamic2DGrid() { // I'm using ArrayList because the add() operation in List is optional. grid = new ArrayList&lt;ArrayList&lt;T&gt;&gt;(); } /** Change the value of an element in the grid * @return the element previously at (row, col) */ public T set(int row, int col, T element) { return grid.get(row).set(col, element); } public void add(int rowIndex, int colIndex, T element) { grid.get(rowIndex).add(colIndex, element); } public T get(int row, int col) { return grid.get(row).get(col); } public List&lt;T&gt; getRow(int index) { return grid.get(index); } public List&lt;T&gt; getCol(int index) { ArrayList&lt;T&gt; result = new ArrayList&lt;T&gt;(); for(ArrayList&lt;T&gt; alt : grid) { result.add(alt.get(index)); } return result; } public int getNeighbors(int row, int col, int radius) { int result = 0; for(int i=row-radius; i&lt;row+radius; i++) { for(int ii = col-radius; ii&lt;col+radius; ii++) { if( i &gt; 0 &amp;&amp; ii &gt; 0 &amp;&amp; i &lt; grid.size() &amp;&amp; ii &lt; grid.get(i).size() ) { if(get(i, ii) != null) result++; //Change this line to change the criteria by which neighbors are counted. } } } return result; } } }
Build shit.
What line in that method maps to line 75 in RandomMechanics.java? **edit:** I have zero reading comprehension apparently. ---- **edit 2 (possible answer):** Alright, I may have figured it out. There are lots of loops in this method (tip: this method has about 10 times as many lines as you should try to have in your methods), but let's just focus on the first iteration of everything: - Near the top we create the empty ``cameFrom`` map: LinkedHashMap&lt;Point, Point&gt; cameFrom = new LinkedHashMap&lt;Point, Point&gt;(); Then a few dozen lines below, you have the following: Stack&lt;Point&gt; pointStack = new Stack&lt;Point&gt;(); Iterator&lt;Point&gt; iter = cameFrom.keySet().iterator(); Point currentPoint = null; while ( iter.hasNext() ) { currentPoint = iter.next(); } If ``cameFrom`` is still empty (which, on the first loop through, I think it will be), then ``iter.hasNext()`` will never be ``true``, so ``currentPoint`` will remain ``null``. - This brings us to **line 49**: ``while (!cameFrom.get(currentPoint).equals(begin)) {`` If ``currentPoint`` is still null, then we have ``cameFrom.get( null ).equals(begin)`` ``LinkedHashMap``s allow keys to be null, so it will fetch the ``Point`` for the key ``null``, but since you likely never ``cameFrom.put( null, somePoint )``, it will return ``null``. Then you have ``null.equals( begin )``, which is where you get the null pointer. ---- You can test this by putting ``assert currentPoint != null;`` on line 46.
Line 49.
What sucked about it?
I can't read any of that, but look up the Scanner class.
Can you either [Pastebin](http://pastebin.com/) or format your code so we can read it? 
There are different ways to do it. Since I am too lazy and drunk at the moment to go into detail. Here is one simple and quick solution (make sure to make this a recursive call so it will call everytime the game ends): {{{ //play game, when finished call this method: System.out.print("Enter \"yes\" to play again else quit: "); BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); String restart = null; try { restart = br.readLine(); } catch (IOException e) { System.out.println("Error!"); System.exit(1); } if(restart.equals("yes"){ System.out.println("restarting..."); playgame();// play again } }}}
Not really sure why this got down voted so much considering all it is, is a readable form of what the OP originally wrote (before the pastebin). Kinda like saying "hey fucker, how dare you be helpful." import java.util.Random; import java.util.Scanner; public class Rps2 { public static void main(String[] args) { int SCISSOR = 0; int ROCK = 1; int PAPER = 2; //Declare a random number object to create random number Random random = new Random(); //Get the random integer value less than 3. This random number is XXXX as computers value for the game. int computerNumber = random.nextInt(3); //Create a Scanner class object to get values from user Scanner input = new Scanner(System.in); System.out.println("Please enter a number 0,1 or 2."); //Get integer input from user int userNumber = input.nextInt(); //Check for valid value if (userNumber &gt; 2) { System.out.println("Incorrect value entered"); } //Print Computer's value System.out.println("Computer Value:" + computerNumber); //If user entered and randomly generated number are same then its a draw. if (userNumber == computerNumber) { System.out.println("Its a draw"); return; } if (userNumber == SCISSOR) { //If User entered SCISSOR that is 0 if (computerNumber == PAPER) { //If computer value is PAPER that is 2 then User wins as per RULE 1 System.out.println("User wins!"); } else if (computerNumber == ROCK) { //If computer value is ROCK that is 1 then Computer wins as per RULE 2 System.out.println("Computer wins!"); } } else if (userNumber == ROCK) { //If User entered ROCK that is 1 if (computerNumber == PAPER) { //If computer value is PAPER that is 2 then Computer wins as per RULE 3 System.out.println("Computer wins!"); } else if (computerNumber == SCISSOR) { //If computer value is SCISSOR that is 0 then User wins as per RULE 2 System.out.println("User wins!"); } } else if (userNumber == PAPER) { //If User entered PAPER that is 2 if (computerNumber == SCISSOR) { //If computer value is SCISSOR that is 0 then Computer wins as per RULE 1 System.out.println("Computer wins!"); } else if (computerNumber == ROCK) { //If computer value is ROCK that is 1 then User wins as per RULE 3 System.out.println("User wins!"); } } else { System.out.println("User wins!"); } } }
 import java.util.Random; import java.util.Scanner; public class Rps2 { public static void main(String[] args) { int SCISSOR = 0; int ROCK = 1; int PAPER = 2; //Declare a random number object to create random number Random random = new Random(); //Get the random integer value less than 3. This random number is XXXX as computers value for the game. int computerNumber = random.nextInt(3); //Create a Scanner class object to get values from user Scanner input = new Scanner(System.in); System.out.println("Please enter a number 0,1 or 2."); //Get integer input from user int userNumber = input.nextInt(); //Check for valid value if (userNumber &gt; 2) { System.out.println("Incorrect value entered"); } //Print Computer's value System.out.println("Computer Value:" + computerNumber); //If user entered and randomly generated number are same then its a draw. if (userNumber == computerNumber) { System.out.println("Its a draw"); return; } if (userNumber == SCISSOR) { //If User entered SCISSOR that is 0 if (computerNumber == PAPER) { //If computer value is PAPER that is 2 then User wins as per RULE 1 System.out.println("User wins!"); } else if (computerNumber == ROCK) { //If computer value is ROCK that is 1 then Computer wins as per RULE 2 System.out.println("Computer wins!"); } } else if (userNumber == ROCK) { //If User entered ROCK that is 1 if (computerNumber == PAPER) { //If computer value is PAPER that is 2 then Computer wins as per RULE 3 System.out.println("Computer wins!"); } else if (computerNumber == SCISSOR) { //If computer value is SCISSOR that is 0 then User wins as per RULE 2 System.out.println("User wins!"); } } else if (userNumber == PAPER) { //If User entered PAPER that is 2 if (computerNumber == SCISSOR) { //If computer value is SCISSOR that is 0 then Computer wins as per RULE 1 System.out.println("Computer wins!"); } else if (computerNumber == ROCK) { //If computer value is ROCK that is 1 then User wins as per RULE 3 System.out.println("User wins!"); } } else { System.out.println("User wins!"); } } }
You may want to use the compareTo method. Look up Comparable interface.. Instead of having a thousand(give or take a thousand) lines of code for each possible combination and outputs, you can just have three instances. Also, you might as well declare the 3 int variables as final, not that it matters..
This is obviously some sort of homework, so I don't want to just hand you the answer; you'd learn nothing that way. 1. Look up Java's [*do ... while*](http://docs.oracle.com/javase/tutorial/java/nutsandbolts/while.html) construct. Put most of what you already have (the stuff that needs to happen each game) inside a *do ... while* loop. 2. You already know how to get input from the user via the Scanner class, so do something similar towards the bottom of your *do ... while* loop; ask the user if they want to play again (System.out.println), get their input (Scanner), and in the *while* condition, compare their answer to "yes" (or "y", or whatever). In some sort of pseudo-code: do { play the game ask the user "Do you want to play again"? answer = user's input } while answer == "yes" 
Excuse my stupid question, but do you mean which OS? Or do you mean like Java for web, desktop or mobile? Because if it's OS, doesn't matter. And I'd start with creating desktop applications, the point of knowing the basics is that once you know them you can use them anywhere.
Best one to use is [Eclipse](http://www.eclipse.org/downloads/). It's open source, and is developed by a community. So it's quite user friendly. This actually checks your code as you type, so any errors will be underlined before you run/compile it. And since you're a "complete noob", this is most recommended. (It's actually a recommended package for high school "noobs"). If you want to work with GUI, then try [NetBeans](http://netbeans.org/). It lays out and codes everything for you, so no coding required. All you have to do is move the GUI elements around. You can still learn how it codes, which is useful if you're starting out. But I don't recommend this.
If your are talking about OS, java is translated into java bytecode and then machine language for linux, mac and windows not a problem. As for an IDE.. you cant go wrong with eclipse or netbeans, but if you wanted to be a gangster you could use vim or emacs and run shit from the command line.
The one you are the most comfortable with.
There is always coding required. Eclipse also has GUI based coding as well. Although personally I think you should not attempt to code using Visual GUI until you understand how the code is written in the backend. 
Console apps will give you the basics too, and save you from having to pick up swing or javaFX at the same time. File manipulation and db connections will teach some important lessons about resource management. Learning an MVC framework after that will set you up for desktop or web apps.
For an IDE I'd choose [IntelliJ](http://www.jetbrains.com/idea/free_java_ide.html) - the community edition is open source. Everything you need to work is well integrated out of the box - eclipse is a bit bloated for my taste. For learning java, start with a text editor ( [notepad++](http://notepad-plus-plus.org/) or [programmer's notepad](http://www.pnotepad.org/) ) and the command line - you really need to know how the fundamentals work before moving on to an IDE. edit: fixed the links
Can I copy this and pass on forward to other developers?
Sure.
&gt; no coding required Excellent way to learn Java, then …
A desk. 
I'm have about 4 years of experience in Java. I've tried a ton of GUI builders and such to write my apps, and it usually comes down to doing it all by hand. IMO, the code is cleaner usually, and you usually have a little more flexibility
CNCWEBWORLD is one of the leading high end super specialization training and placement organizations in Pune.CNCWEBWORLD provide training on &lt;a href="http://www.cncwebworld.com "&gt;java training in pune &lt;/a&gt; &lt;a href="http://www.cncwebworld.com "&gt;php training in pune &lt;/a&gt;java,dotnet,iphone,android,rubyonrails,php,webdesigning,photoshop,illustrator,C,C++,basic computer and all software course.
Thank you!! This comment completely. At uni they just think it's a complete waste of time coding by hand when you drag and drop. 
The syntax highlighting is terrible, mostly wavy red lines under every other word. Doesn't make any sense at all.
Operating system doesn't matter. Use the one you already have. Get a good beginning java book and go through that. Make sure you are doing the exercises. Skip a lot of the advise here. For a complete newb a text editor and the command line are best. You won't be doing complicated programs at first by just playing with the API, learning the language, etc. The most important libraries are the java collections framework. Spend a lot of time there since they are the bread and butter of all development. IDEs are great but are a lot of overhead for a new developer and hide a lot of what you need to learn. (class paths, command line tools, jar files, etc) My advice is to keep it simple until you've gone through your first book. Then maybe move onto one of the free IDEs out there. IntelliJ Community Edition or Eclipse. Don't worry about picking the right one they're both great choices and it won't matter in the long run. When you do get to the IDE, learn how to put in breakpoints and use the debugger. If you use third party libraries, pull down their source code and spend some time stepping through it. Nothing like looking at other peoples code to learn how to program better. That should be about 3-6 months learning. Come back when you're there and have fun. 
" do you mean which OS? Or do you mean like Java for web, desktop or mobile?"
I made a newb PDF for very basic introduction to Java [here](http://3.bp.blogspot.com/-y0a3opPMKgw/TyvEzRfye8I/AAAAAAAAACk/QUqpThyjzpE/s1600/Java1.JPG) it uses Dr Java, which I think is better for beginners than eclipse and netbeans and etc. I know many people who get overwhelmed with the massive amount of stuffed crammed into these other IDEs. 
[Unrelated, but the reason I actually read the article.](http://upload.wikimedia.org/wikipedia/en/thumb/4/47/Zork_Nemesis_game_box_cover.jpg/256px-Zork_Nemesis_game_box_cover.jpg)
It's good to see someone focus on the what DI really means, rather than thinking in terms of frameworks. I would start even simpler, omit the factory, and just do the wiring right in the main method. Not that you'd want to do that in a big application, but for just showing what DI is, you don't even need the factory concept.
These are handy. Thanks for the list!
Netbeans has REMOVED Rapid Application Development of Desktop Applications. We need another solution.
That should be in the side bar.
Why in the world does anyone want to be a Swing developer?
Most frequently used for me Ctrl d - deletes currently line Ctrl shift t - opens type search. Stop hunting in the package explorer! Ctrl o - open method outline Ctrl shift r - open resource search (xml, jsp, etc) Ctrl 1 - quick fix (suggestions or easy fixes for certain things) Alt shift up or down arrow selects blocks of things. Just try it, its easier to see what it does than explain. Ctrl q - last edited line Ctrl w - closes current window/tab Ctrl m - maximize current tab
I think the real issue is that when it comes time to modify the code and you've switched IDE or Editor and you need to code by hand...then it is a real disaster (no comments, messy, complicated code) Or the newer version of your GUI builder just won't load the code correctly.
This is kind of funny
honest question : in what way is this product better than the basic visualVM. I took a look at their "benefits" and "features" page, and it is not very clear to me what is the real difference with visualVm. 
Why would you want to do this? To inject melicious code?
So what's new in Yourkit 11 ?
Oh cheers.. It's not just Swing I would like to go into, but the interface implementation is a definite. Why wouldn't anyone want to be a Swing developer?
I've read warnings on the types of layouts you use because it changes from platform to platform and can display differently. Personally, I check all of my code from the command line before doing anything with it just to make sure, so it's not that bad.
Because swing apps look like shit, and there's not much cool stuff written in Swing? I'd much rather build something nice and native in Eclipse RCP/SWT. You get native widgets and an awesome community.
http://www.youtube.com/playlist?list=PLFE2CE09D83EE3E28&amp;feature=plcp
Excellent resource. I highly recommend it. Its slow to start if you've done other languages before, but its still really good. This is what I used to learn my Java. Got it all down in a week!
Stanford's [Intro to Comp Sci Programming Methodology](http://see.stanford.edu/see/courseInfo.aspx?coll=824a47e1-135f-4508-a5aa-866adcae1111) is pretty fantastic, uses Java, and has a great instructor. You can see the video lectures on iTunes University or YouTube. They use a slightly modified version of the Eclipse IDE. It's worth mentioning that this course is not difficult, but is great for a serious beginner with an interest in programming and computer science.
haha thanks. I am a visual learner but with this teacher I am forced to learn from the book which isnt the best way I learn unfortunately.
Yes, it's way better than VisualVM in certain areas. I used it last month to improve the performance in one of the apps I had written. It did take me a day to get acquainted with it's features, but once I was in, it was pretty easy to figure out where the bottlenecks were. It allows you to capture snapshots containing profiling data, and even compare two snapshots to discern the differences between the execution behavior of two slightly similar codebases. You could theoretically make improvements in your code incrementally and have YourKit analyze the changes with a previous snapshot to conclude if you're actually improving performance or not. Also, it is capable of profiling the time taken for Network and IO activities, child process execution times etc. which I found quite useful for my optimization.
nextChar() isnt a method of Scanner (check the api specification). You can either just work with a String: String ans = console.next(); if (ans.equals("y")) { // do whatever you want to do } or, if you definitely want to use a char: String temp = console.next(); char ans = temp.charAt(0); if (ans == 'y') { // do whatever you want to do }
ok thanks
Been looking to start Java. Definitely going to try this out
There are probably better ways to solve your problem, but here is the answer to your question: List&lt;List&lt;Integer&gt;&gt; list1 = new ArrayList&lt;List&lt;Integer&gt;&gt;(); for (int i = 0; i &lt; 10; i++) { List&lt;Integer&gt; list2 = new ArrayList&lt;Integer&gt;(); for (int j = 0; j &lt; 10; j++) { list2.add(i * j); } list1.add(list2); } Integer value = list1.get(1).get(5); 
Swing isn't the best of looking by no means, especially in that awful default metal look &amp; feel. But you can still make some good looking apps and there are jobs as swing developers. What is this Eclipse RCP/SWT thing? 
http://docs.oracle.com/javase/tutorial/
How do you use Java?
If you are testing, how do you make sure that all calls to A.getB() return your mocked instance?
People get weird about the Singleton but really every language has the concept (an object class in Scala for example). Java uses a pattern because it isn't baked into the language as a feature. The problem is when it is abused (singletons everywhere) where it should be used sparingly as application startup classes, config, etc. If you're using some sort of injection framework the point is moot...the framework is your factory and you should get everything from it. If your codebase is much simpler, singletons are good for that central config object, that creates other objects. 
"Java uses a pattern because it isn't baked into the language as a feature" Actually it is baked in as a feature. See Application scope in JSF.
Should that not at least have been typedefed (or given some wrapper class, if typedefing isn't available) to something meaningful? Was this an *angle* of the ray of light relative to some axis, or an intensity? Or an index into some binary blob?
I use the Haiku naming convention as a rule of thumb for variable and class name length. Like Haiku, it is based on counting syllables. classes get seven variables at most five seven for the rest 
OCD much?
A Singleton is a global variable with a bit of hand-waving applied. Do you really need global variables?
There is a use for every pattern, some common and some situational. Comparing patterns is like comparing food ingredients...a good developer knows when to use the right pattern. And without Singleton pattern the job interviewers would have nothing to ask! (at least from my experiences).
that is actually really good, I watched a few, but went on to the 106B, which teach more advanced concepts.
@Magic public static int negate(int n) { return new Byte((byte) 0xFF).hashCode() / (int) (short) '\uFFFF' * ~0 * Character.digit ('0', 0) * n * (Integer.MAX_VALUE * 2 + 1) / (Byte.MIN_VALUE &gt;&gt; 7) * (~1 | 1); }
That's just a poor name, then.
Make an int[] array of size 100. The first element represents 1, second element 2, etc. If you come across a 1, increment the value of array[0]. If you come across a 57, increment the value of array[56]. Etc. Then, at the end, scan the 0-99 array and find the largest value inside. Now, scan it again and figure out which element(s) of the array has that value. Let's say you find that element 8 has the largest value (let's say it's 200). That means that the number "9" showed up 200 times and is the mode. That's not the fastest way to do it, but it's probably one of the simplest.
create a second array that counts the frequencies then find the max in that array?
This actually is one of the faster ways to do it. For an array of length n it accesses the array n times while the method I posted accesses it n^2 times. Your method also has the added benefit of being easily adaptable to there being multiple numbers of the same (modal) value. However I find this method a bit less intuitive. (maybe it's just me)
Java 7. The diamond operator alone is worth the time it takes to install, that thing comes in handy more times than you realize.
You are going to need some type of auxiliary data structure to store the counts for each number. Essentially, this is a [histogram](http://en.wikipedia.org/wiki/Histogram). Because the range is so small (1-100) you can use an integer array of size 100 to store the counts as others have suggested. Because arrays start at zero you'll need to subtract one from each number and use it as the index of your array. For bonus points, you should try and solve this without looping through the array at the end. This can be done by using two other variables to track the following as you go: * The number with the highest frequency * The number of occurrences of the number with the highest frequency Every time you update the array, check to see if the number you just updated has a greater count. If so, update those two variables. When you're finished looping through the 999 numbers you will already know what the mode is without having to loop through the histogram array. That is a very basic form of a powerful technique called [memoization](http://en.wikipedia.org/wiki/Memoization). Good luck! 
Personally, I would keep a running note of the element with the highest value in the array so far- surely this saves another unneeded full iteration?
Sorry if I wasn't clear, I know how key input works, I just want to know how to make the popup where the player enters his name look like [this](http://i.imgur.com/mCwXf.jpg) (Couldn't find a better screenshot, sorry :P).
This is exactly what I meant. I figured it would be something like this. It's just a lot of work, so I was hoping there was an easier way to do this. Oh well, i'll do it the hard way then. Thanks for your help though.
Good point. Question, though; is an extra iteration (100 extra reads and 100 comparisons) faster or slower than whatever extra operations would be required to keep a running note? It seems to me like you might be comparing 1000 times rather than 100. 
But you're still passing A around, when you should be directly passing B. This is probably better than a static getInstance method, but still not as clean as just passing in your dependencies via a constructor or via a method argument.
1
Oops, I did not think of putting it there. Excellent point! 
object test{ def main(args:Array[String]) { var a = Array(1,1,2,3,4,4,3,1) var s = 0; var sam = (a foldRight Nil.asInstanceOf[List[(Int,Int)]])((x,y)=&gt; y match{ case(Nil) =&gt; List((x,1)) case(c) =&gt; { var temp = y.filter(z=&gt;z._1 == x) temp match{ case(Nil)=&gt; (x,1)::y case(_)=&gt;(x,temp(0)._2 + 1)::y.filter(x=&gt;x != temp(0)) } } }) sam.foreach(x=&gt;if (x._2 &gt; s) s = x._2) sam.filter(_._2 == s).foreach(t =&gt; println(t._1)) } }
how do you format code :/
same here. And OSX's version is still a developer preview. wtf? http://jdk7.java.net/download.html . Should I use open jdk? I wonder what stuff are missing.
Probably start by posting to a JavaScript reddit, instead of r/java ;). Also, this is what I get when loading that url: &gt; Error &gt; &gt; We are very sorry but the page you are trying to view can not be found. &gt; &gt; Please use the menu above to navigate through our site. &gt; &gt; If the problem persists please let us know. 
 var mode = function(arr) { var result = []; for (var i = 0; i &lt; arr.length; i++) { if (result[arr[i]] &gt;= 0) { result[arr[i]]++; } else { result[arr[i]] = 1; } } var largest = { num: 0, occurences: 0 }; for (var i = 0; i &lt; result.length; i++) { if (result[i] &gt; largest.occurences) { largest.num = i; largest.occurences = result[i]; } } return largest.num; }; var randomCreate = function(num) { var arr = []; for (var i = 0; i &lt; num; i++) { arr[i] = Math.floor(Math.random()*100)+1; } return arr; }; var test = randomCreate(999); console.log(mode(test)); and it works (I think). 
Why not make the histogram of size 101 and ignore element [0]? 
 object test{ def main(args:Array[String]) { var a = Array(1,1,2,3,4,4,3,1) var s = 0 var sam = (a foldRight Nil.asInstanceOf[List[(Int,Int)]])((x,y)=&gt; y match{ case(Nil) =&gt; List((x,1)) case(c) =&gt; { var temp = y.filter(z=&gt;z.1 == x) temp match{ case(Nil)=&gt; (x,1)::y case(_)=&gt;(x,temp(0).2 + 1)::y.filter(x=&gt;x != temp(0)) } } }) sam.foreach(x=&gt;if (x._2 &gt; s) s = x._2) sam.filter(._2 == s).foreach(t =&gt; println(t._1)) } }
Open JDK appears to still be a [developer preview build](http://jdk7.java.net/macportpreview/) for OSX. I'm guessing if anything is tweaked it will be the GUI stuff. I wonder if that would affect SWT apps like eclipse? I used linux as a desktop for about a decade before switching, though with this happening + the dumbing down of OSX into iOS / neglect of the Mac Pro, I may end up switching back.
yah my work is too easy/boring(code monkey) when it comes to java, its caused my love for java wane. now i do scala for fun :(. struts 1 ftl
eg ArrayList&lt;ArrayList&lt;String&gt;&gt; List2D = new ArrayList&lt;ArrayList&lt;String&gt;&gt;(); becomes ArrayList&lt;ArrayList&lt;String&gt;&gt; List2D = new ArrayList&lt;&gt;(); //It doesn't seem like much, but this works for all generics and you probably use them more than you realize and Iterator&lt;String&gt; i = Arrays.asList(args).iterator(); for(Iterator&lt;String&gt; s = Arrays.asList(args).iterator(); s.hasNext();) { String st = s.next(); if(st.equals("-d") { flagD(s.next()); } else if(st.equals("-i") { flagI(s.next()); } else if(st.equals("-s") { //The text is all blurring together and the true meaning doesn't stand out flagS(s.next()); } else if(st.equals("-q") { flagQ(s.next()); } else { System.err.println("Bad arg " +st +"given!"); } becomes Iterator&lt;String&gt; i = Arrays.asList(args).iterator(); for(Iterator&lt;String&gt; s = Arrays.asList(args).iterator(); s.hasNext();) { switch(s.next()) { case "-d": flagD(s.next()); break; case "-i": flagI(s.next()); break; case "-s": flagS(s.next()); break; case "-q": flagQ(s.next()); break; default: System.err.println("Bad arg " +s +"given!"); //This is shorter AND easier to read! } } 
Da fuck?!
Good to know!
Here it is: Use JVisualVm.
http://pastebin.com/MEVP7HR0
You want the top one. http://www.eclipse.org/downloads/packages/eclipse-ide-java-developers/indigosr1 Minecraft is a poor example because it uses little in the way of normal java gui components. Play with a form builder (I like the netbeans one) to see how you might build an application from various components. The swing trail is pretty good too. Run through that. http://docs.oracle.com/javase/tutorial/uiswing/ EDIT: Swing vs AWT. AWT was the original graphical toolkit in java. It uses OS-level components for panels and buttons etc. Swing is an updated graphical toolkit which uses java-only components where it can. It's more modern in other respects too, and you should use it over AWT where there's no reason not to. There are many classes in AWT that it makes little sense to duplicate in Swing. Examples are java.awt.Color, java.awt.Dimension. These are things where common functionality is needed by both swing and awt, so Swing depends on the original classes.
I recommend using WindowBuilder, a free plug-in for Eclipse, to build guis visually. But no matter which tool you choose, you'll need a basic understanding of what goes on behind the scenes. Study up on JFrames, JPanels and how to add layouts and components to them.
No, read the javadoc again, it's not threadsafe for iteration.
If you turn the J2EE stuff on it will list out all SQL queries that were executed (if any). I spotted it but didn't look into it too much but looked interesting (not sure if it tracks their execute times?)
&gt; To clarify, Swing is usually the preferred option for Java UI apps Do you have anything to cite this? If you are coding for the RCP then you would need SWT knowledge. To me it is easier to code for, cleaner and actually looks like an OS application. So you don't get the user FUD about Java being slow just because they notice a difference in the UI. [edit] Just checked Eclipse description of the two. &gt; "SWT and Swing are different tools that were built with different goals in mind. The purpose of SWT is to provide a common API for accessing native widgets across a spectrum of platforms. The primary design goals are high performance, native look and feel, and deep platform integration. Swing, on the other hand, is designed to allow for a highly customizable look and feel that is common across all platforms." So if you want your app to look exactly the same on all operating systems and you are not using RCP, then Swing is the way to go.
Nothing compared to InternalFrameInternalFrameTitlePaneInternalFrameTitlePaneMaximizeButtonPainter
 InternalFrameInternalFrameTitlePaneInternalFrameTitlePaneMaximizeButtonPainter i = new InternalFrameInternalFrameTitlePaneInternalFrameTitlePaneMaximizeButtonPainter(... Short variable name - bad practice.
Even more readable: object Test extends App { val numbers = Array(1, 1, 2, 3, 4, 4, 3, 1) val mode = numbers.foldLeft(Map[Int, Int]())((acc, i) =&gt; acc + (i -&gt; (acc.getOrElse(i, 0) + 1))).maxBy(_._2)._1 println(mode) }
Thanks, **exactly** what I was looking for! Upvote for you! HUGEedit: Would the CopyOnWriteArrayList work at 60 *milli*seconds? Bit of an error in my OP!
Slight error on my part, I mentioned 60 seconds instead of 60 milliseconds!!! Would the methods suggested still work well at this speed? Thanks!
Agreed. I used eclipse for years, then discovered netbeans. Used that even longer, and this past year discovered intellij. Never looking back.
not technically java related but still funny: http://www.vmware.com/support/developer/vc-sdk/visdk41pubs/ApiReference/vim.vm.DeviceRuntimeInfo.VirtualEthernetCardRuntimeState.VmDirectPathGen2InactiveReasonOther.html
I know I could Google a generic list, but I want your opinion- what advantages does Intellij have over NetBeans? I've been using NetBeans for a couple of years now, and prefer it strongly over Eclipse, but I am never against moving if there is good reason to!
So, the classic singleton pattern that I see looks like this: class B { static B getInstance() { ... } } Throughout, where B is required, B.getInstance() is called. If class C, D... make a call to B.getInstance(), its often buried within a method call somewhere and not obvious to the caller that its a dependency. This requires that there exists some method to change the singleton returned by B.getInstance() for repeatable testing, perhaps B.setInstance(mocked(B.class). I'm positing that its better just to pass B around as a dependency or inject a singleton using some dependency injection framework. Your example redirects this notion into a sort of B Provider and passes that around, when really, it might be simpler just to pass B around explicitly. On the other hand, having a singleton provider class, such as A, and no B.getInstance method would allow one to only implement the singleton logic once, rather than in every class and subclass as a static method. However, you are still left passing around an instance, the singleton provider, to every method that requires the singleton. 
I disagree with this, as it usually ends with the developer never learning how it actually works. Personally, I would suggest learning it from scratch, design a couple of GUIs using just code, and once you're comfortable with that, then start to use WindowBuilder as a shortcut, instead of using it to learn.
If you have a boolean variable (like bA), and you want to check if it's true just do if(bA), the if(bA == true) is redundant. In this case it looks like you can replace all of this code with bB = !bA.
if (bA == true) { // Assuming bA is a boolean variable, it already evaluates to true/false, so there is no need to compare it to true. bB == false; // == is a logical operator, = is an assignment operator bB = false; } // Correctly assigns bB the value of false else { bB = true; } // Assigns bB the value of true It looks like you don't even need an if statement here, you can just say "bB = !bA". In this case ! is a logical inverse operator, so you'll assign the logical inverse of bA (true if false, false if true) to bB.
Thank you, this was helpful with the comments to actually understand the simplified version and not just regurgitate it
About the edit: bC = bA &amp;&amp; !bB || !bA &amp;&amp; bB which is equivalent to: bC = (bA &amp;&amp; !bB) || (!bA &amp;&amp; bB) can be replace with bc = bA != bB
I've been using 6 for a few years. I always thought 7 had newer features at the expense of stability. And java 6 had much better stability at the expense of fewer features.
So what should the .sh script include? Just a single line with "java filename"?
If you feel like going around notifying academic institutions of qusetions on [/r/java](/r/java) be my guest. As mods we are not here to be the homework police.
Stackoverflow (and most Java forums in general) is also pretty hostile to homework-type questions.
I had a look at this and worked out your issue. http://stackoverflow.com/questions/7020945/java-converting-string-into-des-key You are catching an important error message InvalidKeyException. Go through the code and add e.printStackTrace() to get all the error messages on the console while you're trying to debug the app. You need to use the SecretKeyFactory to generate a key for you from a DESKeySpec. The DESKeySpec is created from a byte[] of the passPhrase. Now you will have a working instance of SecretKey. Also other things to note are you shouldn't use capital letters for method names. The name of each method should be descriptive of what it does. If you are in a class with the name DES in it you probably don't need to include DES in the method names. Make your Cipher variables private so they can't be accessed outside of the class. 
 The introduction portion came out a bit garbled, sorry. Cheers. import java.util.Scanner; public class kljhklshd { public static void main(String[] args) { Scanner in = new Scanner(System.in); System.out.print("Enter the current temperature in Celsius: ");//entry for temp in Celsius while (!in.hasNextInt()) in.next(); { System.out.println("The temperature you entered was not in integer form.");}
We're all lost, I'm currently taking classes at a community college...so it's a small group there's about 9 of us. Directly after class we all went to the computer lab together and had an unsuccessful sitdown. We had the same problem last week with the unmodified version of this script. She(*edit* the professor) never taught us how to use an and statement to describe the state of matter &lt;= 0 AND &gt;= 100.
your first line: if bA is a boolean then you cannot use the if statement like it is a int. If you want to test if a boolean is true just use if(bA){ watever(); }else{ something else(); }
So it searches for Strings in the command line and converts them to an array that main can use?
 java -jar myapp.jar 
Say your class is named "program" and you invoke it in the command line with "java program -d 30 -t 20", then the parameter passed to main will be {"-d", "30", "-t", "20"}
Arguments in the command line are already individual elements separated by spaces, so "searches" is probably not accurate. Have you ever compiled and run your Java program from the command line? Perhaps doing that would help.
[Thanks, alot!](http://hyperboleandahalf.blogspot.com/2010/04/alot-is-better-than-you-at-everything.html)
Short answer.. very prevalent. Long answer: extremely prevalent. Java is used in a number of enterprise environment. It is another programming language in the same way that PHP is a programming language. Both of them use a data access layer to communicate with DB. In java, this translation layer is jdbc.
Java 7 has had it's third update. It's good to go. 
Awesome! Thanks.
Hm.. I'm sure that would work but it seems a bit too hacky. I don't see what's wrong with what I've done and if I'm going to use this as a library I'd rather doing it cleanly.
Well, might I direct you to [the Java API docs](http://docs.oracle.com/javase/6/docs/api/java/io/FileWriter.html) for FileWriter? You'll find that there is a constructor with a boolean argument, that determines whether the file is opened with the pointer set at 0 or the current file length. Also, in your method writeLine you close the writer handle. And thirdly I would highly recommend using writers that support encodings. In today's world you can not assume everything will just work out of the box.
It's not clear what you want to achieve. Can you elaborate on how the word search works. If I understand correctly you have a word search board with lots of letters, do you have a list of words you give the user? what exactly is the user selecting? Can you go through the whole process in english.
the way singletons work, they only allow for one instance to be created. Therefore there is going to be only one instance for all threads running within an application. Since you can't rely on which thread will create the instance you are better off creating an instance of an object for each thread and synchronize the object between the threads. See also, [Singleton pattern - Implementation (Wikipedia)](http://en.wikipedia.org/wiki/Singleton_pattern#Implementation)
You don't have very long for what seems like quite a complex piece of work. I'm not writing this for you but I'll point you in the right direction for making this recursive. public void findWord(String word)}{ Position topLeft = new Postition(0,0); checkForWord(word, topLeft); } private void checkForWord(String word, Position position){ //Check all 8 directions for the given word at the position given boolean found = checkAllPositions(); if(found){ highlightTheWord(); } else{ //Update the position and call checkForWord again position = new Postition(0,1); checkForWord(word, position); } } 
A little spammy I know, but I'm looking for undergraduate programmers with programming experience. My group builds weather radars(all stages from antenna, to RF, to DSP to visualization). I have some projects that require decent programming skills, or at least some experience with Java/C/Python/Matlab/IDV/IDL. In particular one I am looking to fill is reprogramming VCHILL, a radar visualization software suite. If you have any questions or cannot meet the deadline email me at jhardin@engr.colostate.edu Reference your github profile in the app and it can count as more than a recommendation letter. 
Could you give me an example of when it would be problematic not knowing which thread creates the singleton? I thought that was the whole point, that it was globally unique? Sorry for the trouble.
The contents are written to a buffer before they are persisted to storage, hence the name BufferedWriter. The reason to use this is that writing to memory is so much faster than waiting for disk I/O. The actual write happens when the buffer is full, or when you ask for a flush or when the handle is closed. Now, all the handles should be closed when your program terminates. But I am not sure how or if this is defined, so it is better to specifically do so in your code. You might add a close() method that closes all open handles.
http://docs.oracle.com/javase/7/docs/api/java/nio/file/Files.html#readAllBytes%28java.nio.file.Path%29 http://guava-libraries.googlecode.com/svn/trunk/javadoc/com/google/common/io/Files.html#write%28java.lang.CharSequence,%20java.io.File,%20java.nio.charset.Charset%29 Google is your friend, before you start inventing wheels.
From what I understand, Java 7 contains very few and modest changes to the syntax. Which parts of Java 7 did you find were poorly explained elsewhere?
He also has a slightly cheaper [Beginners Guide for Java 7](http://www.amazon.com/Java-Beginners-Guide-Herbert-Schildt/dp/0071606327/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1330087596&amp;sr=1-1) which some may be interested in.
Ok I think I understand now, thanks guys :)
So how much money do you make from the referrer link you have in the URL?
Glad I could help. I use the enterprise version because I need Grails support, which is expensive. You can try it free for 30 days though. The community version doesn't come with enterprise stuff, but is just fine for regular java, and I'm sure it does a great job with that. Many of things I like about code completion apply there :D [edit] the community version is free!
Maven
Why not just make a self executing Jar?
Double click on the jar file should work!
Beginners Guide is more like step-by-step guide. Am I right? This one is more like reference for Java language and its JSE APIs
If you want to share, then share. You can just as easily had posted the exact same link without you making money off it. [Like so](http://www.amazon.com/dp/0071606300/ref=as_li_ss_til?camp=0&amp;creative=0&amp;linkCode=as4&amp;creativeASIN=0071606300&amp;adid=1N025MF7X2FK3TARYKP3). You want to profit? Profit on the merit of sharing knowledge. If you want to make money from your links, then pay reddit for hosting the advert.
Well, I read several Java 7 books. Many of them do not show the deference between 6 and 7 from API perspective - specially JSE APIs. A lot of them explain the new keywords and features, but without going to details in new adjustments in the API, for instance: new classes, methods, deprecated items, etc.
Presumably you are correct. I'm not familiar with the contents, only the existence of the book, but Schildt has had many good books over the years.
Would you please provide me the link?
I already did. ^^ Amazon lists basic contents for both books and Oracle has a more in-depth table of contents on their website.
I think that using the wp.me URL shortner to hide the fact that the the blog linked to is owned by the submitter is a bit sly. I quite liked the article, though.
Think of scanner like a stream where the individual characters flow past the reader one by one in the order they were placed in the stream (access by the scanner object). This is a bit of an all-or-nothing strategy, but you could try: try { scanner.skip("("); } catch (Error e) { //handle error here } I'mma think about it some more. I've never used scanner.skip() before. 
What sorts of tasks do you hope to accomplish with programming? What's the most complex program you've built so far? I, for one, saw a great increase in productivity when I started using [Processing](processing.org). However, it should be noted that I was more interested in visual-things.
Ok, tried. Can select fine (achieved by moving coloring to the first action on draw). Moving doesn't still work (well, it moves the component), but doesn't repaint at the new location. Updated the files (same link).
The ability to make applications that are useful for me in everyday use. It would be awesome to learn game programming but I don't see that happening anytime soon. Probably the most complex program ive created is a calculator that would do many operations at a time when I gave it a number pattern. I am also working on a text based story game in the cmd propmt line for fun. And for the website il check it out thanks!
What are you trying to do with skip? scanner.skip() will return a NoSuchElementException if the regex pattern isn't found at the exact location the Scanner is currently looking at. The pattern includes the space that would be eaten by scanner.next(). If you want a Scanner to skip forward past a "(", you need to use a regex that would include all characters up to and including the "(". For example, if you are at the start of "foo (bar baz)" and want to skip past the "(", you could use: Scanner scanner = new Scanner("foo (bar baz)"); scanner.skip(".*\\("); System.out.println(scanner.next()); // prints "bar" System.out.println(scanner.next()); // prints "baz)" If by "ignore the value" you mean you don't want the Scanner to see it at all, you could just take that character out of the string: String newString = oldString.replaceAll("\\(", "");
At least add in what you're interested in. Not all programmers learn the same way, and if no one knows why you're different from the rest, it's more hard to give suggestions that will actually be of interest to you. I had a bunch of old links on my laptop, but it's inaccessible right now :( With that I suggest you start taking on a project you're interested and learn whatever it is that you need to accomplish that project. 
That's actually a really good solution. Thank you.
Don't ever `catch` Error. That will catch *everything*, including unrecoverable things like OutOfMemoryErrors.
Mixed feelings about the article. On the one hand it's well written and highlights the problem template generators exist to solve; on the other it doesn't provide enough details on the suggested libraries to give any meaningful insight - plus it's annoying that there's no obvious links in the blog to the libraries being discussed, compunded by the omission of the import statements in the code snippets. If this [StringTemplate](http://www.antlr.org/wiki/display/ST4/StringTemplate+4+Wiki+Home) is the one being mentioned, then I agree that it's fantastic. However, the code snippet's using an old version of the library - the current version is v4, and between v3 and v4 the main object's name was changed from StringTemplate to ST ([source](http://www.antlr.org/wiki/display/ST4/Differences+between+v3+and+v4)). The blog also doesn't cover the potential to pass complete objects into the template and pull out its values there, a feature supported by StringTemplate (and possibly the other libraries). For example if my class Foo has a method getBar(), I can pass an instance of Foo in to the template and call the value of getBar() in the template with "foo.bar" ([it'll also check for isBar\(\), a field named bar](http://www.antlr.org/wiki/display/ST4/StringTemplate+cheat+sheet)). This feature's highly useful, especially when creating say reporting templates.
Breach of academic honesty...this? Hell, no one would graduate from school if something like this was a breach of academic honesty (big consequences to having that term lingering over your head) and how would you know what school I go to? Wishful thinking is nice though ;)
If it doesn't throw an exception you will have access to it in the finally block as well, otherwise it won't have been opened to need closing.
Unfortunately this is not the case. If the variable is declared in the try block, then it is not in the scope of the finally block.
It's a little hard to say without seeing more code. Can you try outputting a stack trace if one happens in your exception? (e.printStackTrace();) You don't appear to be using the "directory" variable, is that intentional? A first guess would be that your "zip" File variable points to a file path that isn't being found, which causes the ZipFile constructor to fail, throwing an exception, but isn't displaying with your option pane for some reason (which is why outputting the stack trace additionally could help). Have you tried debugging to see where it breaks exactly or what the error is? The only way your code should act as you describe is by completing the try portion of the block successfully (returned early or full completion), or it hits an exception. Let me know if that doesn't get you anywhere and I'll try to dig further.
try shouldn't invoke scope. Also, nice fail at an attempt at semantics. Being closed for you == doesn't need to close it yourself.
Declaring before you need something is considered bad practice in Java. This is in contract to C where it is standard practice. Try shouldn't invoke scope.
&gt; It turns out there was an issue with how the library was packaged inside my application (not sure why no exceptions were thrown still). There are other things that could be *thrown* (which implement Throwable interface) than Exceptions, namely Errors which are unrecoverable (and thus shouldn't be normally caught) system-level hickups. Packaging problems probably fall into this category. If you're interested in finding more details about the problem, you can catch Throwables instead of Exceptions and examine the object thrown. Don't do this in production code however, as it might hide serious problems.
Thanks for the suggestion!
Every time I see this thumbnail I think of Battle For The Sun by Placebo. I wish there was a way to choose thumbnails when posting. 
There is also a class called CompletionService which can help when using multiple futures. It simply returns the first future to complete each time opposed to blocking when calling get() http://blog.teamlazerbeez.com/2009/04/29/java-completionservice/
Eclipse 3.7 is now certainly ready to be used in even the more conservative teams! :)
Velocity certainly supports "passing in the objects" option With a little twist. You have to have a getFoo() public method then both $obj.Foo and $obj.foo will work. Having just field named "foo", even public, will not work.
Books are good for when you are taking a dump, on public transit, or otherwise away from teh computer.
Simply create an object storing all the data. Then you can use an ArrayList for all the data.
To extend the second point a bit .. let's assume you can make main() take any arguments you want somehow. If the parameters are not cast able/parse able into your requested types, how would you like compiler to react? After all, the control is not yet in your hands, so should it print a message in Spanish? or in English? .. should it request user to re-input the data.. or fail fast? .. It just can't handle all possible outcomes, and can't read your mind, because only you can react in a way you need to do it. Besides, Java is not meant for taking command line arguments or doing console operations.
We use JSF/Spring at work and have been pretty happy with it. Every so often I try and go out to see what the most popular J2EE frameworks are, and it seems like you've mentioned the ones I see a lot. Spring MVC is the other one I see mentioned. If I were to try learning a new J2EE web solution, it would probably be GWT or Groovy, they seem to have a lot of interest right now.
I would stay away from Struts as they seem to be relatively older technology than SpringMVC or JSF/Spring. I generally dislike JSP and 99% of my front end is just HTML/jQuery/Javascript interacting with servlets. GWT is ok, but for me it just felt like a bit too much boiler plate and a long way round for just learning HTML5. 
Why not use jar bundler? I believe that comes with OS X?
Take a look at Vaadin for something a little different yet very cool. You write desktop-like code and let the framework take care of all the web-standards insanity. http://vaadin.com
i use struts at work &amp; liftweb at home
I like Spring Web MVC combined with Spring Webflow when needed
Spring/JSF2 (2 is muuuch better than 1.2 for various reasons) with *Primefaces*! Primefaces is a lightweight AJAX driven components library that sits on top of JSF 2. Uses JQuery under the covers, skinnable, ajax push via websockets, tons of great widgets, and lots of other awesomeness. Way ahead of Richfaces and Icefaces (Icefaces actually forked Primefaces for their 'next gen' library offering hah).
1) Well the JVM overhead is simply a waste of resources, and it's only justified in some rare cases (when you really, really need some library). 2) Longer command invocation (unless you'll use some kind of wrapper): java -jar myjar.jar my command line arguments 3) There are some fabulous shell scripting languages for all the simple and most of more extensive tasks. 4) JRE download varies from 20-30MB. 5) Instalation of Java could become a security risk.
This is the correct answer to the original question, if the OP prioritizes customer needs.
&gt; The advantage of using reference counts is that garbage is easily identified. When it becomes necessary to reclaim the storage from unused objects, the garbage collector needs only to examine the reference count fields of all the objects that have been created by the program. HotSpot's GC is generational, so most garbage doesn't need to be examined at all. All (eden) garbage is reclaimed in O(1) time. 
Heh, sorry. It's very small and I apologize for the lack of green text. Still don't know how to do that yet.
you should run the following command: java -cp yourjarfile.jar -jar packtest.PackTest Should be fine then
It won't be an issue with your jar, it'll be an issue with how you're running it.
Well, there's a modicum of progress being made. Originally, the stack trace gave me a 'java.lang.NoClassDefFoundError'. Now I'm getting a 'java.lang.UnsupportedClassVersionError'. The English version of the error is the same: 'Could not find the main class: packtest.PackTest. Program will exit.'
Using -jar makes the JVM ignore any classpath specified by the command line. http://docs.oracle.com/javase/1.5.0/docs/tooldocs/solaris/java.html Post the manifest file. Does it have a Main-class attribute?
This is because you compile the class with say java 1.6 and you run it on the command line iwith something &lt; 1.6. Do a java --version or java -v to check which version you have on the command line. Make sure you run the jar file with the same jre you compile it with
The same version? Or just a version that isn't previous to that which I compiled it on?
Thanks for the helpful response. I've used GWT - SmartGWT to be specific, a couple of years back. I liked what I saw, despite the 'too long to compile' problem you talked about. However, for some reasons, performance was a pain. I did a comparison between Yahoo!UI and GWT and Yahoo! UI blew GWT out of the water. I don't mean to generalize here - it could be specific to the components(Tree component, dynamic table etc.) we used. I agree with you about Spring requiring a lot of XML configuration. Spring 3.x is much better in this aspect - it uses annotations, but still 'some' amount of XML configuration is necessary. Haven't heard of WarpPersist before. Will check it out. Thanks again. 
The same major version. Major version being 1.4, 1.5 or 1.6 You can compile it on a lower version and run it on a higher version. If you do the opposite, you get a class version error. Good luck 
You could check out GWT/GWTP + GXT, pretty many cool things you can make with that now. GXT-demos: http://www.sencha.com/examples/ PS: Angry birds web version is GWT-based :)
Alright, here's what I did: changed the class to "public class ColorPanel extends JPanel implements ActionListener" added NoSpin = false; into the ColorPanel object (with image = i, in case I'm mixing up my words) changed the contents of the buttonlistener to have ColorPanel(); but that's probably not right. I'm a bit of a beginner. I've only been coding for about 6 months. except now it is saying that ColorPanel is not abstract and can't override abstract method actionPerformed.
I've used GXT and it's a pain in the ***. True story: I came to work, got a ticket to move a label 6px to the left, and I worked on that issue the whole day. That library is just badly designed, it looks pretty for the client, but as soon as you want something "custom made", it becomes a nightmare.
Does it make sense to use spring mvc with a HTML/jQuery/servlets setup?
You have to implement all the methods in the ActionListener interface to make that error go away. If you're using Eclipse, the Quick Fix menu (control + 1) should have an option to generate method stubs for all unimplemented methods. Then, move all the code from ButtonListener.actionPerformed() to ColorPanel.actionPerformed(), and delete the ButtonListener class. 
Tried it on a machine with the same version. Good news is that there is no exception anymore. Bad news is that the message is now "Error: Cannot find or load class."
Well, from my understanding of "final" it wouldn't really help my program. My program is a spinner (like you would have in a game of Twister) and it runs for a while, then stops. The button is to make it spin again.
Hey Greg, I'm at home on the toilet and this popped up on my feed. Just thought you should know.
The BlackBerry Desktop Software uses the mouse method to generate an encryption key when you first install it. You move the mouse around the screen for 15-30 seconds.
I'm using BlueJ, also, I'm confused. Can you explain it like I'm a relatively intelligent 12 year old?
The [ActionListener interface](http://docs.oracle.com/javase/6/docs/api/java/awt/event/ActionListener.html) defines one method (actionPerformed), but does not actually implement it. Think of an interface like a specification - it's an outline for what to do, but you still have to go and do it. So, any class that implements ActionListener (your ColorPanel) must define and implement the actionPerformed() method within that class, precisely as specified in the interface. You have already done this with your ButtonListener class, you just have to move that implementation of actionListener() over to your ColorPanel class. All this work is to allow the actionListener() method to act within the scope of a ColorPanel instance, which will allow access to all of a ColorPanel's methods and variables from the button click handler (actionPerformed). P.S - A little more detail about the error message: If a class does not define a method specified in an interface that it implements, then Java will tell you to make it an abstract class. An abstract class allows for unimplemented methods because they must be implemented by a subclass instead (as you cannot create an instance of an abstract class - it is essentially a class template). This is not what you want - you want to implement the actionPerformed method instead of making ColorPanel abstract. 
Isn't that overkill? So you want the mouse movements only to increase the randomness of the system? Are you saying you don't trust SecureRandom?
Not for long.
I tried that, and it gave me an error saying that ColorPanel is not abstract and does not override actionPerformed.
Use Apache Wicket. It's the best one out there, and it's growing by leaps and bounds. Combines with Spring and many other frameworks. Definitely worth your while to check it out.
If he's doing it to teach himself it's not about trusting the library but on trying to accomplish the result by himself.
You want to save the value of each result of multiplying dex with 13? If I understood the question, then the answer should be to use an [Array](http://www.java-made-easy.com/java-arrays.html).
That's because you added `implements ActionListener` to your ColorPanel class earlier as part of a separate fix which jbacon was suggesting. My suggestion doesn't really work with jbacon's, so you may want to undo my suggestions and just go with his since it's a bit less complicated. Maybe you could re-post your code, so we can see what you're working with now.
Ya strange, I guess I didn't stay on topic. It could be some butthurt redditor who didn't like what I said elsewhere and is downvoting everything I said with multiple accounts also. In any case it doesn't matter.
The compiler says that this is not a place to define a function. You trying to put the function outside of a class/inside a method, I guess.
You're missing the body/curly braces of your catch block. Also, I would suggest formatting your code to be more readable, since it helps you catch problems such as this :) public static void sleep() { try { Thread.sleep(2000); } catch (Exception exe) { } }
Awesome idea! In fact, I might just go ahead and do that...
Am I on the only person in the developer community that thinks this is a problem without an easy solution? You really only have a couple of common solutions (that are the most popular): 1. Property/configuration file as part of your deployment and source: Pros: Easy to implement Cons: Read-only until the next deployment. 2. External property/configuration file on your file-system, possibly as part of a DFS. Pros: Easy to implement, can update, accessible outside of your application. Cons: Read/Write but no easy interface to update the file. Also, could run into synchronization and lock issues. 3. SQL Database Pros: OK difficultly to implement, easily distributed, nice interfaces for your application. Easy to read/write. Cons: Can be messy with dbc interfaces, might run into performance issues, expensive, non-standards. I know people use these other solutions but I am not as familiar with them: JNDI, NoSQL databases, WebServices, WebServices over REST api, 
No. There's a specific notation to denote "lack of value", which is what you want to use, rather than some value that may or may not be valid output from your algorithm when everything goes south Integer thingy = null; while(!done) { Integer value = someCalculation(); if(null == thingy || value &gt; thingy) { thingy = value; } } edit: less grumpy sounding
So this is just a question but why would you make that method Static? 
JNDI property pointing to .properties file location. Also use JNDI for DataSources. 
Are developers writing web interfaces to read and write the settings? When I think of JNDI, I think of it as being administered through some application service interface. Let's say we need "users" or developers that should be able to update settings from some web interface. Is that easily done through JNDI? 
I'd either use the max value of whatever type you're using as stated by accamper or create your own OperationResult type and overload compareTo with a special isGreaterThanAllOtherValues flag or some such that you can check during compareTo...
Depending on how often you want it to refresh the configuration this can be hard or you might have to implement part of the logic yourself. Ways I've seen it done in large scale applications: * Read-only files that are parsed on application start. **Pros:** The files can be tracked in Source Control. **Cons:** Need to redeploy/restart service/app every time you make a change. If you're tracking config keys for lots of different countries the files get big and hard to manage. If you have multiple people/teams using the same service you constantly have to resolve/merge the same damn files. * RDBMS of choice (MySQL, Oracle, etc...): **Pros:** Can change config on the fly. **Cons:** more prone to human error since there is no code review possible on SQL queries in an easy to enforce way. You also can't track previous versions and additions/deletions unless you built custom audit tables and logic. * NoSQL: **Pros:** If you write your config file in JSON you have tons of libraries to read/parse it in every possible language fairly easily. You can write a single endpoint to GET every config file/key and use any language over HTTP to then read the configs. **Cons:** You'll probably have the same cons as the RDBMS solution, except that it may be easier to track object versions (Always write a full new object for each config key, keep track of the list of versions of the object in a "pointer" object, every time you read a key you do two reads, one to load the "pointer", and use the latest version from that as the key to read the actual object). I kind of agree that it's a problem but it's not without easy solution. It all depends on what you want to do. I also omitted to mention whether or not you want things to auto-update on the fly. If you do you'll need to write some polling code that checks every so often for changes on every client. If you deploy your webapp on a lot of nodes and they all have a lot of keys that seems like a non-trivial amount of background polling traffic that will grow with the size of your fleet. A better approach might be to use something like Publish/suscribe in that case (Like amazon SQS/SNS) that can do pushing of update notifications to clients. Good luck :)
Thanks, that bang on. Cheers
What do you mean pastebin? Whats pastebin 
In general, it could be a code smell if you are using too many variables. Use a more functional programming style. Don't use so many variables, no magic numbers. Obviously you need some but you won't go overboard with the variables.
How will this course benefit you: * Advance your technical skills and probably move into a better career * Get help in clearing exams and get good grades * Get help in learning new programming skills to add to one’s portfolio * You can start developing mobile applications for Android Mobile OS 
I would say learning about EJB and JEE in general is quite important. There are still plenty of Struts and Spring dependency-injection environments, but this is primarily legacy - the Java world has been moving away from frameworks configured by 1000-line XML files for a long time now. People seem to like Spring MVC, although I haven't used it myself, but I'm certain it's better than Struts. JSF (since 2.0 only!) isn't bad either, now that they support RESTful URL's and proper handling GET requests. Speaking of REST, it's quite a breeze to write a REST service in JEE, so definitely give that a go. JUnit is also a must. This is a [good book](http://www.amazon.com/Beginning-GlassFish-Experts-Voice-Technology/dp/143022889X/ref=sr_1_1?ie=UTF8&amp;qid=1330418236&amp;sr=8-1) for diving into EJB.
http://dottech.org/freeware-reviews/13865/mousepath-track-your-mouse-cursor-wherever-it-goes/
Spring no longer requires a lot of XML.
[Pastebin](http://pastebin.com/) is a site that allows you to post code, such that it will be syntax highlighted and therefore more easily readable. You then give the link to that here, instead of posting code, so people can help more easily :)
We use Spring MVC currently and in the past I've used EJB and Struts. Your best best is to make sure you know spring MVC and can show something you done in this area when you are at an interview to prove you are qualified. I would also say have a look at GWT because I've been offered jobs specifically for skills with GWT, it seems it is a more difficult skill to come by and so might be useful. If I was an employer and I wanted to higher someone, I wouldn't be so concerned with what tech they knew, but more so in their ability to learn new skills when it's required. 
If you want to update them via a web interface, a database is your best bet. However, don't lean on the DB too much. Databases do go down and then your site goes with it. What I typically do is save configs to a db and then pull them every min or so and save them as a file. This way you can restart db services without any noticeable hiccup in your app. I run db writes through a queue for the same reason. 
Struts and Spring are not acronyms, so don't yell when you're talking about them. JSP and PHP are, though.
Modern EJB (since 3.0) is just as nice as Spring, and I think worth learning.
You can replace files within a jar. Look into the command line utility jar. The command should be something like jar uvf &lt;jarfile&gt; &lt;inputfiles&gt; so for rt.jar, it would be jar uvf rt.jar path/to/file.class I believe (really not sure, haven't done this in a while) that the path to the class file needs to be the same was what you want it to be in the jar file, i.e. where the existing class is.
Here is a full working web application example written by the Primefaces dudes: http://code.google.com/p/primefaces/source/browse/examples/trunk/prime-moviecollector
For web development I would seriously recommend HTML 5, it makes sense as its the future.
This is a class project so it's likely that not only is he required to code his own linked list, that's probably a large portion of his grade. Additionally, the fact that he _can't_ code it is reason enough to believe that this is a good exercise for him to understand linked lists.
What I generally prefer to do is put database connection properties (host, port, schema, username/pass, etc) into an applicationContext (either a Tomcat context, or a Spring context) and substitute the values at deploy time using Maven. I then put the rest of my properties into RDBMS. I prefer to put things like this into RDBMS because it allows me (developer) to change things in production without getting production control staff involved. All of the cons you've mentioned about this approach are true (needing to redeploy to update the properties on disk, lack of version tracking for properties in the RDBMS, etc), but I feel like it's worth the trade off.
Agreed, the new EJB spec is nice but JSF is just terrible. 
You should know there was no way to get a correct double checked locking implementation with VM-s up to and including 1.4 (although the web was of course full of those claiming they had managed it). If your code might be deployed in 1.4 or earlier you should not risk it.
If you're really worried about the license, it seems like modifying rt.jar is probably also included under the same restriction in the license that using the `Xbootclasspath` option would break. At least that's my interpretation of the "Java Technology Restrictions" section in the [license](http://www.oracle.com/technetwork/java/javase/terms/license/index.html) (section F in the supplemental license terms).
There are still a lot of Spring jobs but there is not much reason to use it for new applications. JSF and JPA is the way to go.
I feel like this kind of thing belongs more in /r/learnProgramming than here. It's far too basic to be of interest to a professional Java programmer and too specific to be of interest to someone learning Java.
Wouldn't that only work on his machine, going completely against the portability of Java?
Depending on the configuration and your need, this can be done in various ways. There is no hard rules or bullet-proof solutions. My decision making goes like this: = Do I need to change it in runtime? # YES: Do I use an application server? - YES: Use web.xml and delegate the configuration to the application server web console interface - NO: Are these atomic changes? Or threading might screw things up? + YES: Use database + NO: Is it going to be used by many servers? * YES: Use RESTful configuration or put it into JNDI tree * NO: Use filesystem with a filesystem detection on # NO: Use filesystem (xml, properties, anything goes) It really depends on so many other parameters in the application/infrastructure you are using, or the model that you are using to deploy/distribute etc..
For option 1, you can easily write a "watchdog" thread that reloads the property file after X milliseconds. Pair this with an object that encapsulates your property values (as opposed to consumers directly querying the bundle) and you can change your properties while the app is running. Personally, I have my local dev set to reread the values every minute and extend that out to ~10 minutes for real environment deployments. For added flexibility, the time to wait is itself a property.
Can you post the error? I think you might be running into a problem with referencing - remember that java passes everything by reference, so when you say tmp.pNext = tmp.pNext.pNext; clipboard=tmp.pNext; you are saying: assign the "next" pointer of tmp to skip over one (that part's fine, if you just wanted to delete the tmp.next element), but when you want to get the data to the clipboard, you say clipboard = tmp.next, which causes it to look at what is NOW tmp's "next" element, a.k.a. the original temp.next.next. If this is your error, it can be easily solved by performing a deep copy, ie clipboard = new Node(); clipboard.data = tmp.next.data; BEFORE you "delete" the tmp.next element by changing tmp's pointer. Let me know if that's the problem you're having.
@supergoomba and @sparkster185 I like the idea of using standard HTML/jQuery/Javascript interacting with java. Are you using any framework with your servlet development? What's your set up like as far as setting up your local development?
No idea if it makes a difference but shouldn't the mime type be application/pdf instead of application.pdf? edit: an alternative to getting uri is new File("Report.pdf").toURI()
Thanks for feedback, I just need to know what is realistic and unrealistic for what a programmer will agree to. I am just scared to purchase the software to be developed and then it sits on the shelf for such a long time that it would cost the same to update it as it would be to have first developed it. The reason for it to sit on the shelf for awhile would be because of allocating funding for the cost of the servers, and I know that based on my estimates of users and bandwidth usage this could go as high as a million dollars in it's the first year. Again thanks for the feedback
Yep. If you don't know what the different types of variable are then you don't know Java.
5 times. It is a hard and fast rule. That is why windows has only ever had 4 updates. We expect the fifth and final update sometime in 2014.
&gt;on my estimates of users and bandwidth usage this could go as high as a million dollars If it really ends up being the case you'll need a programming team fixing issues and doing updates constantly. Back end software able to survive heavy load is totally different (and many times more expensive in both man hours and skills required) from the one that just provides the functionality you need to start. Your first back-end needs to survive the time you'll build up your service and get additional funding. After that you'll likely throw most of it away and replace it with something done by another team. If your plans are successful it will create a situation for the next team that they will hate - having to work with the piece of crap software the successful service started with - but this is just one of those facts of life some of us have to deal with. Just get a developer you **trust**. Make sure you own all the necessary rights and make a contract for retainer and set hourly rate for updates and get to the market quickly. Going for watertight inflexible specifications and price quotes where the developer would assume all the cost of possible defects and issues is just going to make your software too expensive and time to market too slow. The version of software you'll be running if you'll be successful is going to be 100 times bigger than the one you'll start to build your user base with. 
Agreed with this. I'm a software dev with both Java and Android experience. What you want to do now is set up a relationship with a solid developer now (probably not the cheapest that you can find). The person you hire needs to be experienced, don't get a kid straight out of college...most of them can't handle a full-on project. Get someone seasoned who has experience with the technology stack. Technology: Get to market fast with Ruby/Rails or JRuby/Rails. Scale-ability, if you make it big, can come in version 2.0 -- If you make it big, you'll have the big budget for 2.0. What's important now is to minimize your financial risk and get to market with a minimum feature set *now*. Project Management: Use agile methodologies. It looks like you're already approaching this with a waterfall minimum-number-of-releases approach. Do NOT present a list to a developer of every feature that you'll ever want in the application and say "these are the deliverables, I want all of these in a year". Give them a sorted list with highest priority items first. Make sure each of those items adds discrete business value. Figure out the minimum feature set for your application and schedule that for your first release. Everything beyond the absolute minimum feature set can be added later. Release early, release often. You'll get much better quality software by doing it this way rather than planning for one massive release in a year. If you follow agile philosophies, you can have an initial, minimum feature set release very quickly. Basically, follow an agile software development philosophy. 
Oops! Thanks, you are right. I typed it correct the first time and messed up in the code block.
You work around it. You do some sick hack or whatever obscene thing you have to do to make it work, wrap it in a nice looking interface (likely something you should have already), and you ship it. **Under no circumstances do you modify rt.jar and expect to ship it.** If you're a nice guy, you fix the bug and send a patch/pull request to the maintainer of your module and hope it gets into the next jdk update.
Your internal frame isn't showing up in the desktop pane because it has zero width and height by default. You should call `setSize` or `pack` on the `JInternalFrame`: JInternalFrame jif = new JInternalFrame ("HAHAHA"); jif.setVisible(true); jif.pack(); desktop.add(jif); `pack` will size the internal frame to its preferred size, and `setSize` will let you set the width and height explicitly. The [Internal Frame tutorial](http://docs.oracle.com/javase/tutorial/uiswing/components/internalframe.html) has a lot of other info about using internal frames.
Judging by what you describe, it sounds like Lindholm is qualified to decide that the "alternatives [...] to Java for Android and Chrome [...] all suck", since that is a technical decision, but not qualified to decide that they "need to negotiate a license". Whether on not they needed to do that depends on the details of the licenses involved, copyright law, payola, etc. That's a purely legal decision and most lawyers and judges get all fidgety when a non-lawyer tries to make them. NOTE: I am not a lawyer myself. I have not been following the case for years. Etc., etc.
glad you got it worked out.
Everybody has a different comprehension ability I'd say. And this is nothing to do with you being smart or not. If you are passionate about something and you have a born talent for the subject, then you'd probably learn everything within couple hours/days. Java itself seems simple, but it has so many underlying concepts you have to understand before you can really say "aha!". In terms of language design, without understanding those concepts, telling you can code in Java is to me a little cheating yourself. I personally wouldn't trust your code unless you are doing "hello world!" or any other simple program. My humble opinion is learn the concepts before learning a new language. For Java, I'd recommend you (assuming you have already basic knowledge like syntax etc..): * -Algorithms 101 (probably you know this already) * -Data structures 101 (not too deep, but at least know list, and hashes) * -Object Oriented Programming (at least learn 3 things inheritance, polymorphism and encapsulation) * -Some design patterns(bridge,strategy,factory,builder would be good start) After above, I'd recommend go a little bit into the language, learn maybe: * -Algorithmic complexities * -Type system of Java (static typing) * -Anonymous classes along with double brace initializations * -Constructor delegations * -JVM memory design and garbage collection * -Virtual method tables * -Stack frames and instruction This would take you very long time. But when you do, you'd have a very good understanding of the language. Hope it helps!
Learning inheritance and polymorphism now! Hopefully we go into the more advanced topics you listed it would be a lot better to learn those in a structured java class than on my own. Thank you for the information.
Yeah, I agree. It sounds more like he was saying, "Let's use Java", but jumped the gun a bit and just assumed they needed a license.
The day i learned to understand instantiation and classes.
I believe something like the following should work. I think the background corresponds to the button color and the foreground corresponds to the text color. JButton x = new JButton("test"); x.setBackground(Color.red); x.setForeground(Color.blue);
Hm I will look deeper into both topics even though I feel like I know the basics of both... Also, happy cake day!
Ideally, you'll keep having "Aha!" moments throughout your programming career, although they may be spaced apart by several years. For example, it's not implausible for someone to program full time, professionally, 60-80 hours a week, for 10 years, in Java, then, after a few months of browsing Scala blog posts, suddenly "get" functional programming, and how that might apply in Java. Which, unfortunately, means that it might take you 10 years, or even longer, before you hit your next Aha! moment.
...but everything, except primitives, is a pointer.
Once I understood the concept of objects. Then shit got real fast!
Which is a testament to his exceptional technical skills. It gives zero weight to his opinion on legal matters. I'd not ask him to run my licensing department any more than I would to draft my will.
Saved this comment because it actually has a useful bullet list of topics I can go read about instead of a hasty paragraph of stuff I should already know. Thanks!
My biggest 'Aha!' moment occured by reading SICP. It told all the basics which we're omitted and just briefly mentioned at school. Made Java and other languages easier to grasp.
To put it simply, do the following (fake-code): if button is pressed { boolean = !boolean } 
To many buzz words. Go [here](http://docs.oracle.com/javase/tutorial/) And start making some swing applications.
My "aha!" moment was in C++, and Java just felt like a little knob TBH.
Weird... someone in IRC just said the *same* thing. He said that Java basically "hides" all the pointers.
Just a guess but try setting the attributes of the button before you add it to the frame. Also it should be noted, naming variables by just one letter is really bad practice. It should always be at least an entire word (unless it just a for-loop index variable, then just 'i' is okay), with proper camelCasing. (i.e. restartButton and boardFrame). This will make your code 1000x more readable when you ask for help ;-). public static void addButton() { b = new Button("Restart") b.setLocation(width/2 - 25, 30); b.setSize(30,50); b.setVisible(true); F.add(b); } There might be more to your problem but that's my best guess without compiling and running your code. Good Luck! edit:Clarification on camel case and variable naming, also spelling is hard. edit2: Some inline comments in that HUGE paint method would also increase readability! edit3: You might find more people willing to help you over at /r/learnprogramming, as /r/java isn't really meant for basic coding help, it's more for news about java and it's frameworks. (Maybe that's just my opinion)
That's because the new keyword is actually, to my mind, a bad decision by Java's language designers, one that shows how much they had C++ in mind when creating the language. But it's overly verbose to say MyManagerPackageManagerFactory thing = new MyManagerPackageManagerFactory(); In C++, you manage memory yourself, so when you declare a new object, it stays around in memory until you deliberately free it. (There are a lot of exceptions to this -- many of which are not defined by the standard -- and I haven't written C++ professionally since the 90s, but it's generally true even if not specifically true in every single case.) But in Java the memory is garbage-collected for you, so the `MyType n = new MyType();` is a lot more typing than you need for what you're accomplishing. The "aha" here is the distinction between a class and an object, and realizing that the left-hand type declaration can easily be an interface, which gives you flexibility of how to instantiate what you're declaring. But it's noisy and verbose and prone to null pointer errors when you forget to fill out the right-hand side. Scala simplifies object declarations in some nice ways, but if you're struggling with Java, you want to hold off on learning Scala for now.
Thanks, good advice with the images. Well, i want to add a button at the top that is just 30 pixels high and 50 wide. Problem is, that it's just not resizable..
It's called a modal dialog. See [How to Use Modality in Dialogs](http://docs.oracle.com/javase/tutorial/uiswing/misc/modality.html).
The reason the button covers everything up is that the `Frame` comes with a default layout manager which automatically positions and sizes child components of the frame. This default layout manager is called `BorderLayout` and it *expands the child components to fill the container*. To accomplish what you want to do, call `F.setLayout(null);` to turn off the layout manager and allow absolute positioning. You will need to manually resize the button whenever the window is resized though. In the future, you could use a layout manager such as [`GridBagLayout`](http://docs.oracle.com/javase/tutorial/uiswing/layout/gridbag.html) to help position all of your mine squares, which would mostly save you from doing all the manual grid calculations in your `paint` method. However, you'd have to turn all the squares into separate components like `Button`s with separate `MouseListener`s.
Weird, after adding that one line it worked. Thanks, dude! [Quite an improvement, right?](http://imgur.com/y0pAa) Edit: Added image.
Tried it out but turns out with jvallet's method it works just fine. When setting the layout null, the button appears to be weirdly stretched.. Thanks for your help, though, really appreciate it :)
I do not know. What I do know is when you go in for an interview for a Java job most employers are going to prefer someone who is working with it currently over someone who is not.
thanks
Why not just make a class called SortedArray that does what you want? Or, better yet, if you've got a list of things that you're going to be frequently updating, why not use a LinkedList?
Take a look at the [random object javadoc](http://docs.oracle.com/javase/1.4.2/docs/api/java/util/Random.html). You can see that there are actually two nextInt methods you can use. So just as the other commenter suggested, you should use nextInt but take a look at the javadoc and see which one you think you should use if you want to find a random number between 0-9. Don't forget to import java.util.Random. Also, even though people are definitely willing to help others in times of need for learning programming, there is also a subreddit specifically for [java help](http://www.reddit.com/r/javahelp) so whenever you have questions, you can ask away over there.
You need to pass in an instance of a Comparator. You'll need to create you're own instance of Comparator. But you might like to take advantage of String extending [Comparable](http://docs.oracle.com/javase/6/docs/api/java/lang/Comparable.html) in your implementation of MySortedLinkedList.
The thing is, I don't want MySortedLinkedList to just be of Strings. I want it to accept all comparators. However, since String has a perfectly good comparator, I don't see why I have to create my own instance of it.
 &gt; new MySortedLinkedList&lt;String&gt;(Comparator&lt;String&gt;); When passing a parameter, you need to use an object instance, not an interface/class type. If you must use a comparator (if the `MySortedLinkedList` class has no support for using the natural ordering of `Comparable` objects), then you can make a "natural ordering" comparator: private static class NaturalOrderingComparator&lt;T extends Comparable&lt;T&gt;&gt; implements Comparator&lt;T&gt; { private static final Comparator&lt;?&gt; INSTANCE = new NaturalOrderingComparator&lt;String&gt;(); private NaturalOrderingComparator(){} // singleton public static &lt;U extends Comparable&lt;U&gt;&gt; Comparator&lt;U&gt; getInstance() { @SuppressWarnings("unchecked") Comparator&lt;U&gt; comparator = (Comparator&lt;U&gt;) INSTANCE; return comparator; } public int compare(T a, T b) { return a.compareTo(b); } } And then use that: MySortedLinkedList&lt;String&gt; t = new MySortedLinkedList&lt;String&gt;(NaturalOrderingComparator.getInstance()); 
String doesn't have a Comparator - it implements Comparable. AFAIK Java doesn't have (even thought it probably should) an easy way to get the Comparator for a class that implements Comparable. You could write a method that does this yourself however. 
The object itself essentially is the comparator (note the lower case 'c' as it's actually an implementation of Comparable, not Comparator). And Collections, for example, is overloaded with sort (Collection) and sort(Collection, Comparator), so it's not that bad. 
Derp, you're right. If I had wrote r.nextDouble() * 10; it would have worked. But you're right. 
I understand, but I fail to see the utility of what you are trying to achieve. Even in the provided example, the author notes the drawback of the fact that this alias provides 0 guarantee that the array actually remains sorted. By making your own object, you can actually guarantee that that property holds true. If you have a compelling example where this would be a good thing I'm genuinely interested to hear it.
There are a couple ways to do this easily. The first that comes to mind is just to 'shuffle' (randomize the order of the deck) the deck and iterate over it in order whenever a card is drawn. The other is to have a deck and select a random card from it (removing the selected card from the deck such that whenever you call rand on it again, the max is only the remaining cards and thus a drawn card wont be reselected).
Also, just a note, your current implementation really isn't a place to use recursion and would be better as a while loop (though still as inefficient, it wont cause a stack overflow).
Not sure how the best way to get an A is, but the best way to get good at programming is to program. I find that when I'm making something for myself and I need to do something, I'll find out how and remember how it works. Find something cool that you want to make. Then make it. It will take a lot of time, but if it is something that you plan on pursuing further, then go for it.
Well it wasn't me (sadly I've never found my home on IRC :) ), but I kind of feel like I'm a bit tied up by Java's restrictions sometimes. 
The question you need to ask yourself is this: will someone decide to stick with an int[] for performance reasons instead of creating a separate class? If you think the answer might be yes, then type aliases would be useful. And, sure, performance should not be a reason to do this. But, well, it still is sadly. In particular, reducing the number of objects created can really help performance --- see this: http://domino.research.ibm.com/comm/research_people.nsf/pages/sevitsky.pubs.html/$FILE/oopsla08%20memory-efficient%20java%20slides.pdf So, preferring sorted arrays to collections can be a real winner. 
**[Premature Optimization](http://c2.com/cgi/wiki?PrematureOptimization)** Also read Joshua Bloch's comments on Premature Optimization: http://java.sun.com/developer/technicalArticles/Interviews/bloch_effective_08_qa.html &gt; It's easy to feel like the general warnings about premature optimization don't apply to you, because you just know which code is time-critical and how to make it fast. But no one can determine this without measuring before and after each attempted optimization. &gt;The second reason that developers tend to reinvent the wheel is the same reason they tend to optimize prematurely: In order to stay sane, most developers have a can-do attitude, and some take it too far. They say to themselves, "Yes, there's a library, but I can do better." Maybe you can, but that doesn't mean you should. Use the standard library unless it's profoundly unsuited to your needs.
[Edit 2] I'm wrong. See further in the thread as to why. ----- Quick way to shuffle the deck (probably quicker ways). Assuming you have an array with the value of each card. Pick two random numbers from 1 to 52, then swap those items in the array. Do it 52 times should be reasonable enough for a mixed deck. After that your have a variable which holds your current position in the deck (starting at first card) and increment. When you get the last card the deck is empty. (shuffle again) This way you don't need to check if a card is drawn as you passed it already in the array. Also stops you having to mess around with adding/removing stuff from an array. [Edit] Not sure the down votes. He asked to shuffle, not to move every card in the deck to a different position. 
This, except I'd pre-shuffle the deck on initialization and just keep popping the first item on the array (for things like Solitare, card order is important, maybe point out that a solid deck state makes the class reusable in other card based games). Also impress your teacher, don't be lazy with your array randomizer, cite this: http://sroucheray.org/blog/2009/11/array-sort-should-not-be-used-to-shuffle-an-array/
http://docs.oracle.com/javase/6/docs/api/java/util/Collections.html#shuffle%28java.util.List%29
&gt; If you pick 104 numbers out of 52 numbers there's still a pretty good chance that some numbers never will be picked and remain in their original place in the deck. Of course. In the same way if you shuffle a real world deck, not every card is going to be in a different position prior to the shuffle. Alternatively just go through each card and pick a random number and then swap it with the random numbers card. Or just have a "split deck" so instead of starting at the first number in the array, pick one in the middle and then wrap around. 
Well ... it's not exactly as you would shuffle a real deck ... if you put one card out of the real deck and put it somewhere else, every card "above" it moves one place further as well, so there is no "switching places" like you described.
Once you've read that, then use this http://docs.oracle.com/javase/6/docs/api/java/util/Collections.html#shuffle(java.util.List)
Shuffling cards is kind of an interesting problem, certainly harder that it seems as first. I think this algorithm is considered a good approach: [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle#The_modern_algorithm) 
No, just no, that's terrible. Shuffling is something that's easy to get wrong for even very smart people. That's why even smarter people have thought up good and efficient methods. [See Fisher-Yates, for example](http://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle), which is used by [`java.util.Collections.shuffle(List)`](http://docs.oracle.com/javase/6/docs/api/java/util/Collections.html#shuffle%28java.util.List%29).
You really don't need to worry about the concept of moving/insertion. Only the outcome is that you have a list of cards that are not in an order that would be detected. 
The only advantage I can see in that method is if you plan never to use the whole deck, or you are dealing a large number items to pull from. It also requires to maintain what numbers have already been pulled from the shuffle. I am not sure why you say it is terrible. The end result is the same, in that it is unbiased random output. Is he allowed to use the API, or does he have to do the sorting himself?