Why is he yelling at me?
They are in consecutive range however the numbers are from 1-100. Namely: 90-100 = A 80-89 = B 70-79 = C 60-69 = D 0-59 = F I just opted for the switch case solution as I didn't want to make this more complicated that it needed to be; I was just thinking that it is likely that something would come up in the future where this would be needed. 
Thank you; this has been mentioned in the book however I'm wondering if it is less readable than using Switch case.
It is MUCH less readable. Never use it, except for maybe inline strings enabled?"Continue":"Please Wait"; Otherwise it's probably a mess.
Don't downvote me, honest question. I know the federal government is investing heavily in dotNet and the microsoft platform in general. Is Java doing strong in other sectors?
Maybe I'm just blind, but the whole idea that Java is dying seems insane to me. There are some very modern Java systems that are in use on a fairly wide scale today: * Twitter * Amazon S3 * Hadoop * ElasticSearch * Android I mean... really?
Seems mostly dead in browsers, though. Despite all the JavaFX sessions at JavaOne, Oracle still won't fight HTML5 openly. Java still has a place on the enterprise server though.
I personally don't think ternary operators are that bad... I wouldn't chain them together ad infinitum, but they can be used quite elegantly... though one of the more common uses for them can be replaced with Guava's [firstNonNull](http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/base/Objects.html#firstNonNull(T, T)) 
I like it for quick null checks sometimes return (thing == null) ? null : thing.stuff; might be a little cryptic the first couple times seeing it, but I sure prefer it over this multi-liner: if (thing == null) { return null; } return thing.stuff;
Yes. Java is quite large in the financial, healthcare, and "general enterprise" sectors. Also, it's heavily used by companies that need to scale in crazy ways; google, amazon, twitter, etc. All server side, of course. Client side java, like applets and swing, are not nearly so common. The only real exception that I can think of is android. Also, if you give half credit to those using not java languages on the jvm the usage goes even higher. Edit: Why are people downvoting cyanocobalamin? They were asking honest questions that they didn't know the answer too. I upvoted him so that our answers will be seen by more people. Educate, don't judge!
The federal government is a big market. Both .Net and Java are extremely popular in government projects. 
Groovy, scala. 
I wouldn't listen to HaMMeReD. I don't think it's by default less readable. You have to do it on a case-by-case basis.
[groovy, scala, clojure, etc](http://en.wikipedia.org/wiki/Java_platform#Languages)
"Feel"? Are we talking about those "feeling" things my wife keeps crying about?
Are you trying to say that these agencies use .net exclusively? That is false. I just recently interviewed some Java developers for NOAA. Both NOAA and NIH currently have postings for Java developers. There are certainly some .net jobs as well.
Java is also the #1 choice for big business. I know that doesn't say a lot, but business will need a compelling event to consider anything else. The web and y2k was the reason the business moved to java in the first place from Cobol. Better integration with client-side web technologies (html5 and javascript) as well as mobility will allow java to continue to be relevant into the foreseeable future. Luckily Google has our back on both of those fronts (with GWT and Android).
As a Java developer I feel constrained and irritated with the Java language. I had been coding with Ruby and Groovy for a while and recently had to go back to core Java. It is painful. It takes so much code to do the most basic stuff. I was coding a servlet last night and it literally made me sad.
I have worked for several large government agencies that heavily use Java. Also, it looks like the new health care site does too since people were reporting a "Jboss" error.
Hah! Let's all write large scale distributed applications in Python, Javascript, Ruby, and PHP. That sounds like a blast!
Servlet? What is this, 2001?
You do realize that servlets are the underpinning of pretty much any modern Java web framework, right?
90 is an A now? When I was in school, A started at 94, if I recall correctly.
Oh okay, your original comment seemed to suggest that you thought servlets hadn't been in use since 2001. 
Well, yes...but only one.
I live in Chicago. I made the mistake of completing my LinkedIn profile to highlight my Java experience. I keep getting calls and emails every week. &gt;Recruiter: Are you interested in **** No, I am not looking &gt;Recruiter: Do you know someone who is looking for work in Java/Web/JS/PHP as well? No, but our company is having a hard time finding them as well.
healthcare.gov uses Ruby / Jekyll with a Java back-end
Or that I was working on a lower level component of a web framework. Or maybe a component of a legacy app. So quick to jump to conclusions... 
I will lay it all there and I have felt this way ever since I encountered java 15 years ago. And potentially everything applies to C# but C# is heavily tied to MS tooling. Even some businesses don't like that. Java has never approached death. Java is not like COBOL. Yes Java can be verbose. Yes Java applets can suck. * It seems beneficial to catch errors at compile time. Java is statically typed allowing you to catch some errors during the compile process. It may seem like a small thing but I bet there are many companies and developers when looking at a large Python or Ruby code base and not knowing if all of the modules will run properly. The response from the community is "learn how to code proper Python and write unit tests". So that requires a little extra work from the developer just to ensure that his code will run. Scala, Haskell are in improvement on Python/Ruby in this regard. * Java runs on a virtual machine, interpreted from bytecode. If there is one thing that has kept Java on the map. I think it is the JVM. You can support multiple languages. The opcode set is pretty basic, it doesn't matter what crappy input language you used. Bytecode is bytecode and the JVM can run sophisticated runtime speedups to ensure optimized code. Many companies can implement JVMs on Windows, Linux, Unix and add custom scalabilty options, run on a cluster, some large large memory system or whatever. JVM engineering is an actual, lucrative business. I don't think any modern language system should NOT have virtual machine architecture. Why you can't do that with Python or interpreted Java, I don't know? Bytecode manipulation is just better, shrug. You don't really see this system engineering goodness with Python or Ruby. Erlang is the closest I have seen but the language is difficult to work with. Dalvik is pretty cool but has a Java input language, so might as well use that. * Java is sort of open? I don't have too much to say about the Java language spec and the JSR process. But I always felt that the JLS was so solid, readable and covered all aspects of the language, it would be easy for other companies to implement their own compiler and runtimes. And maybe it helps to have Oracle and Sun as host companies kind of pushing other software companies to implement in Java. Either way, Sun/Oracle didn't just stop those processes and close source all aspects of Java. For example, I work with IBM java and it is completely detached from Oracle. IBM makes money and it is still all Java. Maybe Python or Ruby have decent APIs and language specs, but I rarely hear about large companies "implementing" python. * Solid language and core libraries. Is the Java host language really that bad? Have you worked with C? C++? With C, you had microsoft C for microsoft c tools. Can I compile code on Linux? Hell no, good luck. The libraries won't exist. The make system will be different. And even the code and pre-processing will give you issues. C/C++ is never portable. And that is just the language, but what about the build system? It is always a big mess. Java? It is still mostly javac *.java. Sure you have maven, ant, make files. But they always end up invoking 'javac *.java' (essentially). And C/Makefiles aren't that complicated but it was more complicated the java option. You always have the issue where you build on Make/Cygwin/Mingw and you can't port that build to Linux. Or you missing some deprecated gnu script tool. Java code always just works. And is mostly readable. And it has a basic OOP system. C is readable except when you are missing that pre-processor macros and has gone missing from the Internet. __DO_FUNKY_STUFF__. Crap, how does this code work, this is the one part I don't understand. Java doesn't have that. The library is solid, has XML, network, database support and even GUI libraries and decent OpenGL libraries, image processing. And a host of other libraries that will make most developers will be happy with. * Tools and frameworks: This is my last bullet. But come on. Have you used a Python or Ruby IDE that was better than Eclipse, IntelliJ, Netbeans? Not only are those IDEs better from the default configuration but then you have tools like static code analysis and memory heap analysis. On and on. The frameworks? Struts, JSF, Spring*, hibernate are all backed by large companies and are very mature. * Company investment. Outside of the Spring Source and JBoss and Google's. Companies have invested a lot of money in creating Java projects. That contributes to projects like Hadoop and Hibernate and Spring and even the internal stuff you might use. That money invested in Python or Ruby just doesn't compare. ... I could go on but Java is solid, has mostly been that way after the 1.4 release, after year 2000. I am not a Java fanboy, I am not pushing for Java to disappear but I wouldn't mind if Java was replaced if I get a better system. I personally feel you have to have what Java has and more. You have to have a VM developed by serious engineers. You have to have a statically typed language with advanced language features. You need tools developed by serious engineers. No other tools really come close. I play with Python for scripts. I did the Ruby on Rails. I still wouldn't want write more than a thousand lines of code with. I don't really care what the hackernews bro-programmers say about that. Everyone of their sites just seem tiny, say compared to a Bank of America type site or Twitter or Amazon or Wal-mart, etc (Java friendly applications). ... Comment on other languages: The only other language system that I like is 'R' (ok Scala/Haskell too). Yea it is dynamically typed but the libraries are pretty amazing and there are decent tools out there. Scala, already runs on the JVM, maybe could replace the Java language. Hell, Oracle could surprise and drop Java, go for Scala. No one would bat an eye. Scala has advanced language features(expressiveness) and most of the code is Java like. Erlang; I really liked the network oriented approach. The language was difficult to deal with however. Haskell: This language blew my mind. I could write something in one line that might take 40 lines of Java. I was a little unimpressed with the environment though. E.g, no VM. No solid libraries like solid database drivers. Where are we in 2013? Well nothing is creeping up to Java? I can't keep up with Google, but maybe they have something in their coffers but I haven't heard about it. Scala is decent but it is not a must have. You are going to end up with Java bytecode anyway. Python/Ruby are for that hackernews/reddit/SF-venture-project-of-the-week. If you have some free time. R has some interesting libraries. Try the machine learning and statistics stuff. Haskell is kind of magical if you are into magical trickery. However, they lack the tools, libraries and big business support.
What kind of basic stuff? 
I don't use applets for major stuff but I still think they are viable for smaller project. But yea, you are right. Flash is king.
Uh, dude, where’re your braces at? Opening braces belong to the end of the line, as per Java Code Conventions!
Fix the source.
Great write-up, thanks!
The most overwhelming criticism I hear about Java (the language). Which only applies to the language and not the environment. "It takes me so much boiler plate code to code XXX in Java, I don't need to write so much code in Python/Ruby". Python isn't that advanced a language. Haskell is advanced. Scala is advanced. They allow you to write highly expressive code. But most python code is procedural and has a simple object system. Yea, Python has decent lambda expressions. But most Python developers seem to favor more explicit style coding. And that coding looks like OOP Java. So I am a little unconvinced by this whole Python allows me to write 10 times less code than in Java. The super serious engineer/hacker will say that the JVM sucks and sucks because the language sucks. If you really dig down deep into Java and the VM, there are inherent flaws that make the system slower than say a forth based system. Fine. I guess you wouldn't write a algorithmic trading system in Java without an expensive VM. And maybe if you can write a speedy, tightly coupled C++ system that will only run within your shop, go ahead. And I don't mean to bash Python. I would definitely use it before Perl for scripting. I would prefer bash for the most basic scripts and anything where I need less than 1000 lines of code, I would prefer Python. It definitely isn't going anywhere. But for millions and millions of lines of code, no way.
coming from java, the one thing i noticed when starting to use objective-c was the number of issues not caught at compile time that should have been
Some people work with Servlet, not a big deal. I upvoted. Not everyone has to use a shitty as Struts Action Form or heaven forbid that massive JSF mess.
I have actually seen COBOL and I still don't think the analogy fits. COBOL is highly tied to IBM mainframe systems. The language itself is not really a general purpose language but a way to run database queries and scripted code against a database system. COBOL isn't general purpose at all. Java is. COBOL looks like AWK/Bash/BASIC and SQL. Java looks like C/C++ or even Python sometimes. And don't forget C# where most of the libraries are equivalent.
I would use it for small business, but that is me.
Let's start really basic. Let me write a string to stdout. Java syntax is the cryptic: System.out.println("something"); Groovy improves on this with: println "something" And ruby is similarly enjoyable: puts "something" Oh, now I actually want to execute this? Well, in Groovy and Ruby I'm good to go. Let me throw that into a .groovy or .rb file and off we go. In java? Let me just wrap that in an awesome: public static void main(String[] args) { System.out.println("something"); } Let's take reading in a file line by line... in most cases, the things I care about are: * File name/location * The lines of the file With a good autocomplete of IntelliJ IDEA, I might, _might_ be able to do this in Java without googling to remember the combination of BufferedInputReaders, FileInputStreams, and File objects I need to use to make this happen. Without googling, in Groovy I can do this with no problem: def f = new File("path") f.eachLine { //whatever } In Ruby: File.open('xxx.txt').each do |line| print "#{line_num += 1} #{line}" end in Java, the improvements they made with java.nio have improved things very slightly over java.io: Charset charset = Charset.forName("US-ASCII"); File file = new File(...); try (BufferedReader reader = Files.newBufferedReader(file, charset)) { String line = null; while ((line = reader.readLine()) != null) { System.out.println(line); } } catch (IOException x) { System.err.format("IOException: %s%n", x); } How about dealing with Dates? Let's try to get a reference to 3 days ago. Groovy still sucks pretty bad, but in this one particular case it's pretty decent: new Date() - 3 Ruby similarly is pretty concise: Time.now - 3 Now for the beauty and elegance of Java: Calendar cal = GregorianCalendar.getInstance(); cal = cal.add(Calendar.DAY_OF_YEAR, -3); The list goes on and on... * Generics - because the Collections API wasn't verbose enough. * Anonymous inner classes - who wants closure/blocks as a first level language citizen? * Mathematical operations with the BigDecimal API Believe it or not, I'm not anti-Java. I actually like Java quite a bit as a platform. The JVM is solid. I love that you can compile JRuby or Scala or Groovy down to Java bytecode and execute it. IMO, the language itself just hasn't evolved in a positive way since Java 1.4. Instead of asking what could be done to make the language more usable and enjoyable to use, they've just kept bloating it with more and more classes that imitate the improvements that have been made in the open source community. But, hey, I obviously don't know what I'm talking about, after all I was writing code for a _gasp_ **SERVLET** last night.
There you go, I got rid of the 'System' on that println line: import static java.lang.System.out; public class Test { public static void main(final String [] args) { out.println("Running"); } } ... And Groovy runs on the JVM. So no 'Java/JVM', no groovy. ... Yes, Calendar/Date is a mess. You could use jodatime. The file IO processing is verbose. Fine. Your mathematical operations, no rational data type concern is valid. But what language is going to give you all what you want? Certainly not groovy, because you are going to be limited to the JAVAVIRTUALMACHINE. Same for Scala. And if a Java engineer has to crap out crappy Java code to generate bytecode that gets where he needs to be, some of us are OK with that. Your concerns are certainly valid in terms of the evolution of the language. BUT, I don't think the alternatives are going deter us way from the JVM. And if we are going to end up with bytecode, we might as well figure out a way to generate the code we need ... say without using Scala. We may end up with 50 lines for verbose Java code but the end result is the same. 
Look at wicket, actually pretty interesting for mid-size projects. Nothing comes close to the auto generated code of Ruby. Spring-roo? is trying to go the way of ruby on rails but hasn't reached that point yet. "Thanks for responding in a non-judgemental way. I really appreciate that." I agree with most everything you said. Java the language needs to evolve. But I want something that gives me a lot of what the Java platform already has without me using the Java platform. Like I said in my earlier comments, I suspect Google will come out with something if they haven't ready. Scala is JVM. Groovy is still JVM. 
http://www.reddit.com/r/androiddev
I would never say Java is dying (or dead), but I will say without hesitation that I'm sick of Java. JDK7 is a mess a I really hope JDK8 brings some redemption, especially in the JavaFX framework. 
cool, I actually recently discovered that subreddit and found a guide to beginners I'm checking out atm (http://www.pavanh.com/p/android-tutorial.html if youre interested), if you ever discover time travel be sure to tell me about r/androiddev about 30 minutes before now so I can get a head start =P edit: after trying to use the tutorials provided in the above link, I actually decided I liked the tutorials available at http://developer.android.com/training/basics/firstapp/index.html better. The tutorials at pavanh seemed targeted at people with more experience than I have. 
Couldn't have said better myself. I really feel that Scala, and core functional language features, is the future, and I hope more companies start to use it in major products. 
chomputer makes some valid points below on the language and some suckiness. But that still won't have me dropping the Java virtual machine. And if I am not going to drop the JVM, why not stick to the default language (Java). I still feel that the entire Java platform hasn't had much competition. C# comes close but is MS only technology (mostly anyway). 
Well they have models to work with. Groovy and Scala are two mature ones.
I feel a little plushier than I did in 2003.
Used, sure... but nobody uses the core servlet API anymore, that's all I meant... and it sounded like that's what you were using ;)
#humblebrag - I get recruiting emails from big companies all the time, but I'm not looking at relocating.
Right, so the actual distributed bit is in Java... because that makes sense :P
As a former Delphi programmer I am find the whole "Java is dying" debate rather amusing. Today I wrote code in Java, C# and SQL (yes, SQL is a programming language). Truthfully it is detrimental to your career if you slot yourself as being just a "Java programmer". Don't get me wrong, Java is great and reasonably fast. I tend to worry about implementation specifics rather than technology (unless the technology is shit - um - McAfee). But what do I know. I'm really just a "VIC-20 BASIC" programmer.
Like others have already posted, there are a wide variety of programming jobs out there. Of my college friends, some are in IT systems (like me), some make games, and others write commercial applications. Each one of those jobs is really different. I really like IT systems and gathering requirements and giving customers what they want (even if they didn't know they wanted it!) Other friends like a less strict environment where they're free to do whatever they want. Also, I'm glad you like java. It's a great language. But as great as it is, college will be the perfect place to learn more about other languages, and most importantly other families of languages (functional, procedural, scripting, etc.) You may fall in love with another language like Python or PHP or Scala. In that case, go for it! Loving your language (or even making your own one) will help a lot in making you feel comfortable and giving you confidence. Finally, I wouldn't worry too much about "being good enough". I've worked with many different programmers over the years and there are only two types of people who aren't good enough: 1) Those who switched careers because being a programmer paid more. This was a big problem back in the late 90s (before the .com bust) when people like English majors would become programmers without any experience. But you are already way ahead of those folks. 2) Those who don't understand what they're doing. Some people just don't understand what a 'for' loop really does. They live on copying and pasting code, even if they don't understand what they just copied. DON'T BE THAT PERSON! Know your tools. Understand what your languages/tools are doing under the covers. Spend the extra time to dig through some open source code. Again, college will be a great place to explore and learn the inner workings of things. I think you'll do great. You have a lot to look forward to :)
&gt; Truthfully it is detrimental to your career if you slot yourself as being just a "Java programmer". Although, Java and SQL *is* an awesome combination.
&gt; "It takes me so much boiler plate code to code XXX in Java, I don't need to write so much code in Python/Ruby". I think that it's worth mentioning that much boilder-plate code was removed from Java 7 through the try-with-resource syntactic sugar, and from Java 8 through the introduction of lambdas. Java-the-language may be a bit behind, but I believe that it will catch up. Combined with Java-the-platform, there really isn't any competition right now, in the market.
This shouldn't have been downvoted as much. While the servlet API is pretty good, it's really not so easy to set up a servlet for the first time. It feels like there is a lot of room for improvement for the kind of one-off website. This hasn't gotten much better with JAX-RS, which is a nice API, but still requires me to set up a servlet in a container.
No? How do you tamper with request headers, or sessions e.g. when using JAX-RS? Is there a better way than to just use @Context HttpServletRequest request ... and then operate on that? Actually, after some detour through the mess of JSF 1.x in 2007, I had never used anything *but* the core servlet API... What choice do you have if you're not building an application from scratch using something like Play?
A lot (all?) of the stuff that has to do with cancer research at NIH is java.
Have you though about shadowing a real professional programmer? I did it for a family friends son for 6 weeks, it was for some senior project. He came 2 times a week for 6 weeks and I showed him what I did, I explained SQL, basic web development and code management. I think he got much more by following me to meetings and watching me try to balance request. Good news after watching my life he still chose to be a developer and graduates this year from college! 
I didn't really know anything about programming until I started college, so I wouldn't worry, you already have an edge. Most of your classmates are going to be like me, and they will not know anything until they take their first CS course. Don't get me wrong, CS courses can be hard, but if you enjoy programming, I don't think you'll have any trouble keeping up with your class. Being a programmer is extremely fun for me. Often times I prefer to program my own projects over pretty much any other solo hobby, and I typically look forward to work everyday. It's just really fun to get to build things and solves problems. Sometimes I think to myself, "I cannot believe they are paying me to do this." Doesn't hurt that the money is also fairly good. It can be hard and annoying sometimes, but it depends on your field. Sometimes you have to make emergency fixes to a project that feel like life or death. Sometimes problems take days to scope out and structure a solution. Sometimes a stupid third party library will not compile until you scour the entire web looking for someone else who was able to figure it out. None-the-less, if you enjoy programming, you'll get satisfaction when you conqueror the problems even if they are painful. As for skill, I am sure if you get a bachelors at an university you will be skilled enough to find a job. In fact, if you can get decent internship while you're in school and have good grades, companies will practically be hunting for you. The hardest part are technical interviews, and they do suck. It's a game, and you have to learn how to play it if you want to find a good job. I wouldn't worry though, if you can keep up in school and you practice your technical interview skills you'll get any job you want. What you should be worrying about is whether or not you actually like programming. If you don't get any satisfaction out of solving problems and writing code then you should probably consider another major. When you find a job you could be programming 7-8 hours a day for weeks on end. If you don't like programming you're going to really hate your life. On another note, Java is a good language to begin with, so keep on learning it. 
It's awesome. Besides the high pay and casual environment, if it ever gets boring, that only means *you're doing it wrong*.
This. You obviously already have a strong interest in learning what you're good at. How good development as a job is really going to be is really going to depend on the company/team you're in, and how much freedom they give you I think. I've had awesome teams/working conditions so far in my career, and it's been great, but when I read about some other peoples experiences, I'm just "nope", I would not be staying there.
Are you me?
Being a developer is definitely the most enjoyable job I have ever had. Sometimes stressful but the money's good and if you can avoid dealing with end users it is paradise. Skill is something you will pick up over time, learn to communicate effectively in writing and speech, your life will be much easier. Learn multiple programming languages. Learn scripting and to be at home in multiple operating systems and shells, pick a text editor and learn everything about it, including using scripts to extend its functionality, and learn the basics of others, nothing worse than being sshed into some *nix box and finding emacs isnt installed so you launch VIM and now you can't figure out how to quit back to the shell. If you are just graduating high school, I would look into doing a Software Engineering or Computer Science Program at a decent college/university. Not necessarily because you need the skills but getting a degree makes you that much more employable, it helps you get past the HR screen more easily. 
Isn't GWT all but dead?
You have a 30m scrum meeting for 4 developers? Wow.
It's just for properties though, you can't mark an object not serializable and have it apply everywhere.
The spectrum of skill required is very broad. Do you want to be a programmer for hardware, operating systems, financial systems, business applications, web based systems, et cetera? And you are always able to switch the field if you take the profession as an opportunity to learn new things each day. Of course, things will be frustrating at start. You will have failures. But with each failure, you will learn and become a better programmer. I started at a small company and had some frustrating projects. I grew on them, turned following projects into successes and got to a level where I wanted to see more. So I joined a large consulting company. Since then, I had more freedom and happened to have only successful projects. So it is often fun for me, beside the frequent traveling and stupid corporate politics. I like the broad range of problems my clients have. And I like to work with those people to solve their problems with good software and/or by convincing them to look at other solutions. From my perspective, only 20-30% of developers are good developers, who can drive projects "alone". The least are savant-like types. Most of them are in a constant learning process (new products, libraries, frameworks, platforms, languages or concepts within a language) and seek to share knowledge with other people (discussions, conferences, articles - even if it is only inside a company). If you live that and take failures as reason to learn, you may end up having alot of fun in this profession!
What makes you think that? Google are actively maintaining GWT and there are a few libraries that extend GWT functionality like Vaadin and SmartGWT. I'm concerned if the community regards GWT as dead, as I've invested the last 2 years into a project that heavily utilizes it. Please elaborate.
Okay - im a CS student in my 3rd semester, and just finished a voluntary 6 week internship in a software company, and got to work on a pretty huge project (~ 30 millions development costs, 8 years of development, ~2.5 millions LoC). I'll just go trough your questions: &gt; am I wasting my time? Generally speaking - no. Briefly speaking, more and more things are being automated, so good programmers can definitly find a job, and depending where you will end up, chances are good for a good pay. &gt; Is being a computer programmer fun? Hard? Annoying? If you are coding every day, and you try to improve yourself, it seems to me that you are definitly having fun. Hard and annoying - well, you are not always only implementing new things. Sometimes you have to add features or refactor old code, which can be pretty frustrating if the old code is bad. Testing can be pretty annoying aswell, but thats also something that needs to be done. Where I did my internship, all code changes had to be reviewed by a senior programmer , which was helpful, but sometimes pretty annoying aswell. &gt; how skilled do I have to be to become a computer programmer. I have never heard of "fixed skill levels" that you need to achieve to call yourself a programmer. Try to constantly improve yourself, your code and your project plans. The most important thing is that these answers are not universal. Most of your personal good or bad experience will come from the company itself, their environments and your co-workers. A few general tips for you: 1) Dont get tunnel visioned on one programming language. Imagine the programming language as your vocabulary, its not that hard to learn it. You need to learn the "grammar", the general thoughts and concepts of programming. This is reaching from general programming paradigms (object orientated, etc.) to concepts of concurrency and so on. If you know that, then you will be able to effectively code in any language using this concepts, with very short training periods for the language itself. 2) Keep coding every day. Every single line you write is important to improve yourself. Find yourself projects to work on, you dont always have to reinvent the wheel. 3) Try to get as much pratical insight as possible. Try to work for companies, internships, private projects for someone. Experience is the key.
It actually makes quite a bit of sense. It's like writing a game engine in C and then using a scripting language with it.
[Exactly like this](http://31.media.tumblr.com/b396be6f7dd0e17ba7edd0b7811340c7/tumblr_monutkXsAQ1svdumoo1_250.gif). Source: I'm a keyboard slapper, too.
JetBrains linked to this free Android course in their latest newsletter: https://tutsplus.com/course/android-for-the-busy-developer/ I haven't looked at it yet, but it's free for all, so look for yourself.
How does all of this language support work. Did Sun/Oracle build in the support to the JVM or did the makers of those language build "compilers" to turn the source into bytecode that would run on the JVM?
[List of JVM Languages](http://en.m.wikipedia.org/wiki/List_of_JVM_languages)
At my previous job there was a guy who just didn't know how to code. He was really friendly, confident and a hard worker, which is how he got the job. There was already a code base in place, so this is how he worked: 1. Copy paste some code that does something similar to what he wants to do. 2. Change something. 3. Build the unit to see if it works. 4. If it doesn't go to step 2. After a few hours start asking the other devs to help because he's stuck. He didn't write any functions because he didn't understand them. He created massive sections of code that was duplicated several times in one file (500 lines duplicated 3 times in one file). One of the few times I helped him he was struggling with conditional statements, so I tried explaining it to him (he definitely didn't understand it). After about two hours (I like to think to of myself as a good teacher) I gave up and continued with my own work. I don't think he understood for loops. I think he just memorized that for(int i = 0; i &lt; 10; i++) meant the thing will happen 10 times. But try a loop like for(int i = 10; i &gt;=0 &amp;&amp; stuff[i] != null; --i) he wouldn't know what to do with it. He said he had a BSc Computer Science from the University of Western Australia, but I suspect he lied. He was never fired because the lead dev was spineless and the company went bankrupt about a year after I started there (he was there a year longer than me). They still owe me 2.5 months' salary, the bastards. Edit: This is mild compared to some of the stories on [codinghorror](http://www.codinghorror.com/).
&gt; I have frequently overhead that android development is java, but in my limited programming experience I feel slightly overwhelmed. I feel you. I expected Android development to be easy to get into for someone with a good basic understanding of Java and OOP. I had no idea how complex the framework actually was, or how many new APIs I would have to learn. Expect progress to be slow in the beginning while you're still trying to wrap you head around life cycles and adapters. But once you get over that inital hurdle, life becomes a lot easier. Just keep at it. By the way, I chose to learn basic iOS programming before Android, and in my personal experience, the difficulty is roughly equal. You do get a leg up in Android because you already know most of the syntax, but I found that advantage to be minor, and easily outweighed by shitty IDEs and beyond-slow Android emulators (both are better now, with Android Studio and Intel accelerated emulators). In comparison, iOS has a funky syntax and a foreign project structure, but the IDE (XCode) is amazing at the time the tutorials on iOS development was better. So... equally challenging, but in different ways.
&gt; Truthfully it is detrimental to your career if you slot yourself as being just a "Java programmer". This goes for everyone language or technology. IT is moving much too fast to stick with a single thing.
so....code for shenanigans and personal amusement over practicality, roger that! 
The latter. Except that the bytecode generated by Scala, Ceylon, Kotlin, Fantom compilers is not consumed by an intel/asm/motorola/sparc/whatever processor, but by the JVM. (I'm not 100% sure how Groovy works, though) An exception to all of this is [Xtend](http://www.eclipse.org/xtend/), which includes a compiler that generates Java *source* code, which is again compiled to bytecode by the Eclipse Java compiler.
That is really fascinating and it makes sense for interpreted languages, especially not ones smiled upon by Microsoft. Let Sun/Oracle do the work of opening up places to run on various platforms.
I particularly found this wording to be very refreshing: &gt; I had no idea the combining of languages was even possible! &gt; &gt; So my mind's really blown. The good old days when the whole software engineering world was still new :-)
None of those languages are interpreted (except Groovy). &gt; Let Sun/Oracle do the work [...] Well, it is certainly in Oracle's best interest that the JVM becomes the defacto machine code standard. They have a lot of patent and trademark interest. They just happen to accept free usage, right now, but the recent legal attack against Google over Android has shown, that Oracle might be willing to cash out, any time: http://en.wikipedia.org/wiki/Oracle_v._Google ... but yes, it's really fascinating! :-) awesome technology, this JVM
Well, some advocates of keeping all things in memory would still use SQL to query that, e.g. [MemSQL](http://www.memsql.com/)...
The Java ecosystem will be around as long as the JVM is...and that's not going anywhere soon (Scala, Groovy, Jruby). Take C/C++ for example, it's high performing, portable and extremely powerful. Consequently, it's been popular for many years and there are many languages that take advantage of it through native APIs (think NDK for Android, C extensions etc). Arguably, Java has many similar attributes to C/C++ and although developers may trend elsewhere (within the JVM ecosystem), Java as a tool is not going anywhere imho. 
interesting idea, JCA certainly provides to isolation and possibly the transportability across app servers 
&gt;I have actually seen COBOL and I still don't think the analogy fits. COBOL is highly tied to IBM mainframe systems. The language itself is not really a general purpose language but a way to run database queries and scripted code against a database system. In Cobol's heyday, Cobol ran on several minicomputers, as well as IBM mainframes and mid range machines. Yes, Cobol is and was a CRUD language. Until about 1990, CRUD systems were what computers were used for. Cobol was used for data processing before hierarchical databases were developed. &gt;COBOL isn't general purpose at all. Java is. COBOL looks like AWK/Bash/BASIC and SQL. Cobol was more business oriented than Fortran. Those were the choices in the 1960's. &gt;Java looks like C/C++ or even Python sometimes. And don't forget C# where most of the libraries are equivalent. I agree. 
When someone writes a language, they also write a compiler for that language and for a target platform. The JVM bytecode is specified by Oracle: http://docs.oracle.com/javase/specs/jvms/se7/html/index.html It is "easy" to write a compiler that produces "valid" bytecode output as specified by Oracle. Once you have bytecode, the JVM can interpret / run that. But the JVM doesn't know that any given bytecode was compiled from Java / Scala / etc. Much like an intel processor doesn't know whether machine code was generated from assembler, C, C++, C#, whatever. Note (to add more confusion ;-) that Ceylon, for instance, is a language that can compile into Java bytecode and into JavaScript.
I love what I do for a living. I've been working from home for the past 7 or 8 years. I usually start work pretty early, about 6am or so. I get up, make coffee and hit my desk. I'll take a shower at some point, make some lunch, take the dog for a walk etc. Whenever I hit a problem that I need to think about I just go play a video game on the couch for 20 minutes and it will usually help me get past whatever was causing me issues. I usually knock off of work about 4pm and then hit the grocery store to get out of the house. You can get a bit claustrophobic after not leaving the house for a few days. I love what I do for a living. It has its ups and downs, like any job, but for me its interesting and pays very well.
The company I work at uses GWT extensively for our inhouse SaaS solution, and I can say that GWT is very much alive. GWT 2.5 was released half a year ago and 2.6/3.0 will be released soon.
I love doing it, but for me it has varied from workplace to workplace. If I had recommendations for someone who is single, just finishing up high school, and wants a *career* in software development, this would be my advice: * **Get a degree from an accredited CS program.** You can get work without one, but virtually every company you can imagine wanting to work for will look for that before they consider anything else. * **Be willing to move around (geographically).** Unless you live in California, Washington, or New York, you are probably going to be limited when it comes to jobs. * **Be willing to move around (company).** No matter how much you hear about "industry standards", **every** company does things slightly differently, and it's good to get a broad perspective on which type of companies you want to work for. To answer your questions directly: * **And i just really want to know, am I wasting my time?** No, because it's very likely even if you don't end up in software development, knowing how to write code will help you in other fields. Where I work now, there are people writing code who have degrees in every science fields you can imagine, and they learned to program because it made the work in their chosen field easier. * **Is being a computer programmer fun? Hard? Annoying?** Yes. All three. At any given time. This is true no matter where you go. * **Also, how skilled do I have to be to become a computer programmer.** Depends on where you are willing to work. I've worked for companies where they would hire almost anyone off the street who could bumble their way through a logic test and companies who reject something like 95% of applicants after the initial screening.
Well, find yourself with a boss that tells you not to write a library, because it takes too much time!
Let him know how long it currently takes to write that code, then multiply that by how many times it had to be rewritten, any intelligent boss should be able to see it is worth writing the library. Or write the library on the side.
How can does he even find code that sort of does what he wants so he can copy and paste it if he doesn't understand what he is reading?
not even COBOL is really dead.
Yes, at least 50%-75% of the time. 
Scrum should be 2min per developer + 5 min for the scrum lead to mess with planning software.
Sphere sphere1 = new Sphere(); double vol = sphere1.getVolume(); System.out.println(vol); 
Exactly this ^^ Except you might need to set the radius somehow Sphere sphere1 = new Sphere(32.5); or sphere1.setRadius(32.5); where void setRadius(int r){radius = r;} 
im on page 200, been reading it a week. Was trying to read it much faster but i am horrible at reading books XD. So far i love it, it reminds me of LPTHW, once i learn something it sticks. One thing i dont like is how there is so much talking and not much exercises, but ive been doing my own exercises and test classes.
Don't want you to feel unwelcome - but is there a subreddit for Java help? When I subscribed I was expecting more java-related content than HW help. Should put a link to stack overflow in the sidebar
cool! Thanks for the link, it is now added to a folder on my bookmark bar. Ill be sure to edit the comment when I check it out, but for now I'm likley sticking with the tutorials at http://developer.android.com/training/basics/firstapp/index.html unless someone thinks another site is more informative for beginners.
There is a /r/javahelp. That said, nobody noticed the integer division issue? :) return (4/3(Math.PI)Math.pow(radius,3)); should be return 4.0/3.0 * Math.PI * Math.pow(radius,3); 
I always wonder how management can justify the cost of shelfware. Why are you paying me $x a year and not use what I produce?
I spent about 12 years after college doing non-development jobs, but always dabbling in code on the side. Had a few small contract jobs doing PHP development. 6 months ago I was hired by an incredible company in Ann Arbor to do Java development. Not only did they teach me Java (I had never worked with it), I am also learning a great deal about flow cytometry (http://en.wikipedia.org/wiki/Flow_cytometry). In addition I have been introduced (some say indoctrinated :p) to the practices of Extreme Programming and Agile project management. I interact directly with the clients and our CEO almost every day as a matter of casual routine. My pay is not as much as the majority of people on this subreddit, but I love going to work every day, I love working with the people I work with, and I am proud of the software that I'm helping to build. So my range of experiences is limited compared to others here, but just wanted to let you know there are some pretty awesome jobs out there.
Or you are facing intractable organizational problems that ruin your job satisfaction.
There is a lot of demand for Java programmers so you won't be hurting on trying to find a job. You are not wasting your time. Just like with every other profession, there are good days and bad days. One thing you may not be aware of is that the majority of the work is maintaining existing applications, brand new projects built from scratch are few and far in between. 
If you assume the analyst wrote up the specifications incorrectly, the provided sample data is corrupt, the servers are misconfigured, your code has bugs and the users are not identifying the problem correctly, you get to be surprised when something goes right. I spend half my day writing code and half managing coders. The code writing part is better.
I do two scrums a day, my team and the team lead Scrum. Both are less than 20 minutes. Usually 15.
&gt; I still feel overwhelmed, but I feel like I am making progress. This, more than all, is programming: keeping in gear, and finding ways to make progress. There are so many things we can run up against where we will slip, stop making progress, get distracted, and managing that tendency is tops. As you're finding, knowing Java isn't a huge help. Most of programming is not about languages- it's about understanding what libraries we need to draw to do the things we want to. The form of how we write down those instructions is not the hard part, the hard part is understanding what capabilities the environment gives us, and putting them to use. Keep putting yourself to use. If you cannot make anything, make the demo applications. But do it yourself. If you start to be able to make interesting things, make interesting things. Follow the interesting paths where you think you can make things, and follow through.
One minute to fix the bug, one hour to test, one day to put into QA and one week to put it into prod. I say that as a joke but it is often painfully true. I once had a bug fix sit in QA for three weeks because of vacations, confusion over who could give approval, etc. It was painful. 
Breakpoints/interactive debugging (it was UI code in Eclipse), the help of others and good naming of variables.
I was put in a worse position, as a contract web developer I wrote a script that automated my work. I shared it with my supervisor and it put the team out of work for two weeks. Needless to say since they had no intention to hire me on full time I didn't share any more scripts with them. They began to question how I was able to deliver above twice the quota on a weekly basis, but fool me once shame on you. Realistically, there were only two projects I couldn't automate. I could have saved them 30k a month from the cost of the team I was on, but now I work automating tests for a telco and have doubled my wage. 
Would you go into detail about the casual environment? I am currently learning java and hoping to make a career switch.
I was hired on while finishing up my degree at a fortune 500 company as a software engineer for web applications for business intelligence. It was very drab - endless rows of cubicles, strict dress codes, very structured and rigid management. I rose pretty quickly in that company, but it just wasn't challenging. After 4 and a half years, I moved to Germany and worked for one of Germany's top IT consulting companies. The culture was completely different - very casual dress code, I had a desk with a view overlooking the city, they embrace new ideas and methodologies, and I even get to bring my dog to work. I have learned more in the first year at this company than I did in the 4+ years at the previous. My suggesting is to find the right culture for you, even with your first job. 
Yes, exactly. This is precisely why I am trying to get a handle on the API's and libraries that increase the functionality of android development. One of the main reasons I made this post was because I was worried I wasn't experienced enough to start understanding the framework of android development. The responses I am getting are re assuring me that I should continue practicing in the eclipse IDE. I should embrace my lack of understanding as I piece together the new tools laid in front of me; instead of giving up and trying to start at a later date. Thanks for taking the time to reply!
That is a great way to put it. My own experiences include working for clueless nitwits that I was glad to escape from, decent folks and solid work, and great folks and challenging and interesting work. Right now, it's mostly the latter. I've had some real doozies in the day, like the manager in the distant past who thought he was a programmer and would make idiotic demands about what the problem was, even though we KNEW what it was. (he just refused to admit we knew) In the end, my technical leads would just lie to him so he'd leave us alone to get work done. Even a single office and job can vary wildly depending on the work you're given and the people in charge. Hopefully most of them are willing to listen to you if you can put your worries and problems in mature, intelligent way that gives them some positive ways to make things better. (i.e. don't just complain. give them details about issues and suggestions to fix things) Work with them to make things better. That's how my current job has improved dramatically. 
Its not everywhere, but I feel its a lot more common in software than some other professions. I personally have been at it for over 5 years. I have never had a dress code and I recently took a job where I work from home full time (as salary emp, not a contractor). My wife has instituted a pants rule (pajamas count) and that's about as strict as it is at the moment. Meetings and reviews vary by company and manager, though my personal experience has been very low key.
I am lucky to now work on a project that is heavily used. It makes a world of difference in my satisfaction level. If I were to switch jobs I would definitely ask questions to make sure it would be used although sometimes it can be hard to tell.
I think a lot of times it is government waste. They want to spend their budget so they get the same money the next year. They will build anything just to spend the money. 
Any video of the presentation?
In your case I would suggest getting a Java certification. They are not usually needed but for someone with the wrong degree and no professional experience it would show you know something. Most places will want you to know some web stuff but not all.
Hey thanks for the info, do you also know any beginners guide to Java? Thanks.
I agree with everything you said except the location statement. There are programming jobs all over the place as well as the possibility to telecommute. Of course there are more in certain areas.
Hi, I am 15 years old too, just about to be 16 i guess, but I have like 2 years of experience in Java. I do not regret the decesion of starting with Java and I really like it. I am just starting to get into Android development. I learned it all by myself. Mostly from the intertnet (TheNewBoston and TheCherno on Youtube) and I also read a book, which I would also recommend. I am not sure if I would say it's hard, I had quite a few situations when I was comfused when I got into object oriented programming and I didn't get it at first, but I eventualy figured everyting out. I hope others that do programming for a living can give some more thoughts on the topic. Zigec EDIT : "I am not sure..." paragraph added
Also 15, have 4 years in Java. Don't regret it at all and Android game development can be really fun. Just make sure you have a proper testing platform that doesn't lag or you'll hate doing it (ie not a crap tablet like I have). I mostly learned from Java for Dummies and just experimenting with code. Since you know Python it'll probably catch on really quickly. You'll only need to learn about braces and java's formatting.
&gt; &gt; &gt; Edit: This is mild compared to some of the stories on codinghorror. Are you thinking of [The Daily WTF](http://thedailywtf.com/default.aspx)?
Sadly it does not happen a lot. It can be hard for even experienced developers to switch languages. It is dumb because it does not take that long to learn a new language. You would probably have a hard time getting the interview without any credentials. The good news it once you get experience somewhere you are in good shape. That is where I think the certification would be a big help for you. I would not recommend bothering for someone with a CS degree.
&gt; ... and do I need to go to university to learn this language? Absolutely not and this is true for any language.
I understand interface is acting like a contract, but I don't understand how it helps you if you have requirement change. Won't you have to first change the interface, then change the class that use the interface? 
Java is different to Python, more structured and somewhat more verbose. It's a good language in that there are plenty of libraries and APIs. The documentation is pretty good for much of them. Android programming is slightly different from regular Java programming in that a lot of what you're doing most of the time is working within an API. It's also fairly heavy on it's use of XML to define and set up things. (However this is also noticeable in some business based stuff like Spring and build tools like Maven). You're also dealing with Android's intense fragmentation - the dev tools are better than they were so it's not so bad, but testing the same thing on 20 different device factors can be a pain [and you'll still get a bug on some random device misbehaving]. As a language Java hides (partly by design) things like memory allocation. It's heavily types and there's plenty of standard API functionality to support things like concurrent programming. This has downsides - the implementations aren't perfect and fine tuning it's behaviour can be a pain in the ass. One of the things that confuses people about Java is the client/server thing. Java client stuff like applets and downloadable games are a tiny percentage of usage. They get all the attention because they are where the security vulnerabilities are. Most usage of Java is server side stuff (and Android apps). There's nobody from business giving any feedback so I'll just put my few years in. Business use of programming languages tends to require a few things: * Testable Businesses need to be able to ensure what they put out there works. Java is well known for unit testing APIs. * Predictable Businesses need to be able to ensure software behaves the same way in different environments. The JVM provides some predictability, moving away from hardware. * Well Organised Businesses have huge codebases. Managing and organising these code bases is a problem. It's fairly common to have to do developments which link existing infrastructure together. Java's package structure and conventions probably helps this. * Quick To Develop &amp; Easy to Debug Java's pretty straightforward to develop in. The API is pretty standardised and mature (if anything it advances too slowly). Stack traces are usually pretty helpful in fixing bugs. It handles the common design patterns well. It's quite easy for a Java shop to churn out code at a reasonable rate. **Tutorials:** People have already pointed out some YouTube-ers. I personally don't like video tutorials, just never got on with them. Oracle's [Java tutorial](http://docs.oracle.com/javase/tutorial/) is actually pretty decent (Swing is an average API and JavaFX is unused to my knowledge - the 'Trails Covering the Basics' is probably sufficient). If you want Android stuff, just do the [Android tutorials](http://developer.android.com/training/index.html)
I agree with this, but I just want to point out that some languages (eg: Haskell with Monads) strongly rely on specific computer science concepts and using those languages without knowing those concepts can be very tricky. Of course, you can still learn those concepts without attending university. There are plenty of places to acquire the same knowledge.
If you want to learn Java, a good place to start is TheNewBoston Java tutorials on YouTube. The videos are fantastic and make learning Java far less overwhelming than it normally would be. Good luck, bud. 
&gt; controlled assessment on Python in school GCSE? If so, what course?
I found "Head First Java" to be helpful when I was starting out.
Thanks, I just started watching his Java videos. He makes it look really interesting!
I feel your pain. In our school, we have ICT GCSE which kind of matches you description: PowerPoint, word, excel and that... To recap on my computing lessons we have already done a controlled assessment on HTML and javascript (validating web pages). We also learnt networking, hardware of a PC and binary. Now we are doing our second 20hr CA on python (4hrs in). 
Using those concepts well is a more apt statement I feel. There are those that have no knowledge of the concepts that can use them, but to use something like that to its full potential generally requires a strong background in computer science and mathematics. 
Hopefully this doesn't come off as sarcasm, but what software firms are in Atlanta?
Perhaps I was being too succinct, or maybe my experience has varied from others... but for companies where developing software is the product, and not a means to an end... the large majority of those companies are in those three states. I'm not currently living in any of them, but my company *is* headquartered in NY and the large majority of development happens there. You *can* do development almost anywhere nowadays, but I still think your job options are vastly less limited in the big three. WRT telecommuting... if we're talking about cross state boundaries, that's usually only an option after you've established yourself at a workplace... and even then, it's not always an option. We have a handful of employees who telecommute at my current employer, but they're special cases.
Dammit, I really wish my school offered computing now. Sure, it's stuff I may already know, but it's an easy A*.
It's not hard. Android is a great place to start too. You should just pull down Android Studio and do some fun stuff with it! While I was in high school, I learned a bunch of languages in classes and on my own. It was great because I got a lot of exposure. Then when I went to college, I focused on computer science and software engineering concepts. You have a lot of time. Have fun exploring.
This, this, this. It's the book I recommend when I am asked. IMHO it's the best Java book out there for the beginner.
Comparatively, not even close to the other popular system languages: C and C++. 
Care to add the discussion in a more meaningful way? I will. I too began by watching his videos, but I had decent exposure to many of the topics. If they work for you, that's great, and you should go for it. But some of his videos might go over the head of someone new to both Java and programming. 
https://www.udacity.com/course/cs046 Take this course, I guarantee you can do it. This will get you the basics of java. Take some time to play around with it after taking this course. Then take another course. I suggest one on algorithms, maybe an intro to computer science. Keep reaching out for guidance like you did with this post and just keep taking courses when you have the time.
You could be describing a vendor I'm working with right now. It's eerie.
[The Java Tutorials](http://docs.oracle.com/javase/tutorial/) are a good free resource to start with. If you're going to buy a book, Head First Java is the best starting point out there.
Is not a hard language but the only problem I find (language-wise) is its verbosity. Doing simple things can become a huge line of code, for example, streams (file input/output, console IO, etc). University, not needed to program but will polish your coding and may teach you the less appealing (yet very useful) parts of programming like software engineering, design patterns, project management, etc... edit: Try this exercise to test a language *'complexity'* (I can't remember where I found it). *Write a program that adds two integers read from the console input and writes the result*
A language isn't hard, it's a tool. The problem you're are solving with the language is easy or hard.
As a 15 year old myself, I quite like Java and don't think it's very hard. 
The market here is for companies that use software internally or offer it as a service. For example: AT&amp;T, Fiserv, ADP, ETrade, Equifax, S1, NCR, Radiant, Bank of America, Suntrust, Turner Broadcasting, IHG, Coca-Cola, Home Depot, UPS, Northrop Grumman, Lockheed Martin. There's a bunch more. And there are a slew of start-ups that focus on software solutions. Oh, just remembered, Oracle also.
Ho ho ho, I did GCSE ICT too. MSPaint, PowerPoint. ended up with a B despite being the best in school. Same thing when I did double ICT at A level, which I would not recommend. That had such advanced topics as watching a lecturer stumble through installing windows 95. In 2006. Also the exam board specified these retarded essays about for example, "the digital divide" between people who have a computer and those who don't. It was like it had been designed by a silver surfer who just completed a basic computer user course in msoffice. I think that is what actually happened. It was very much "these windows 98 pentium II computers are quite good aren't they? I think they'll catch on." In 2006, and this was a new course. At one point they asked us to explain the threat of "data mining" and the lecturer had to tell them they've misunderstood the term. To do well on a course like that, it's best if you don't know anything to begin with.
Java's a lot more strictly structured than Python (ie: you must specify what type of variable you want, functions are defined by curly braces, etc.) but you'll find that basically all of the founding concepts of Python are the same as every other programming language. University is not at all required, I learned through this guy's videos http://thenewboston.org/list.php?cat=3
Java is *fussy*, but it is not at all hard.
There were a LOT of problems with this code. People always say "do your own homework", but as a self-taught programmer, I know that there is immense value in being able to examine and analyze working code. To be able to clearly see the differences between what works and what doesn't is precisely what teaches you what to do and what not to do. So with that in mind, I went ahead and did the assignment for you. http://pastebin.com/LPQK5eCX Here were the problems with the existing code: - In the calcFrequency method, the ints in freq were never initialized; you would've gotten a null reference exception when you tried to increment them. - There is no value returned by the calcFrequency method, simply a print to screen statement; this wouldn't allow you to output the results to a text file as requested. - The casting syntax for the sum variable in calcAverage was redundant. In fact, there was no need to make sum an int in the first place, if the method is supposed to return a double. - The textRead function shouldn't be there in the first place... you are outputting the results to a file, not taking in input from a file. The input for this program is a randomly generated list... no need to read a file. I changed it to properly perform the output. - There was no comma between the parameters for textRead, which is a syntax error. - There was a semicolon after the 'throws FileNotFoundException', which effectively ends the method declaration and orphans the following code block (and causes a syntax error) I'd be more than happy to answer questions about my code, if you have any... just lemme know.
Have you tried JAX-RS? It's really quite a decent API, which was added to JEE 7. I agree, though, that JSF is a bit of a shame to the JCP
Not only have I met people like this, I have fired people like this. It was the part about being a manager that I hated most (this was several jobs ago.) Firing someone for this reason sucks because usually they are a nice person, but their technical skills just didn't warrant keeping them in the position.
I agree with this. A college degree in CS isn't needed, but it really does help with different types of design patterns such as TDD for example.
Plus 1 for the oracle tutorials. The documentation on java is comprehensive and far better than the text book I used in my first year programming course.
I ride the train and/or tram every morning with a bunch of people in business suits, ties, dress shoes, etc. Me? T-shirt and jeans, or shorts. We literally have no dress code whatsoever. This is not every IT job by any means, but even when I've worked for large companies, the IT people get away with much more relaxed standards than the other people working there. Dress code aside, I can work from home as it suits me as long as it's not an every day thing, and the hours are flexible. We can fuck about as much as we want as long as we put in our hours. We used to have video game consoles and a ping-pong table in our last office (though we've moved to a smaller one now). Like I said, not every IT job is like this, but these sorts of jobs are out there. I would note however that anyone looking to switch because of the perks of the profession and not because they love working with computers probably won't fare too well.
Sorry, none of the use cases I'm familiar with justify the 5000 USD per CPU cost of this feature.
So quit. There are plenty of IT jobs, nearly everywhere in the world.
I took up programming in Java, with 0 coding experience, and no back ground in computer science. I read Learn Java in 24hrs to get a grounding on the basics, and started working on my own project within a few months.. I would however suggest you check out the [introduction to computer science](http://see.stanford.edu/see/lecturelist.aspx?coll=824a47e1-135f-4508-a5aa-866adcae1111). It really helped me a lot to grasp the abstract concepts.. Best advice I could give you, (and I am not great at programming but for someone who went from "I want to lean " to someone who did learn on my own ) is start working on a project, the sooner the better... As you try and add more to your project you will have a practical application to what you are learn which will make the whole thing a billion times more fun, and easier to do. Enjoy, cause coding is pretty damn awesome, best thing I ever did for myself
Not totally sure what you are asking but, try using [setText](http://docs.oracle.com/javase/7/docs/api/javax/swing/AbstractButton.html#setText(java.lang.String)). Also stack overflow probably has already answered something similar. 
It's easy to learn to code. The issue that most beginners skip over is patterns. Learn them from the start and it will stop most bad habits. 
I appreciate the feed back :)
I used to teach java to middle schoolers as part of a community service project, we have since transitioned to teaching clojure, which is a lisp dialect that cohabitates with Java on the JVM, but I would more then glad to answer any questions you have. There is no reason at all why you can't learn java, in fact the freshman level compsci course at my high school teaches java.
I'll try to explain it better: User loads page (index.jsp), and has, say, 4 buttons, each labelled w,x,y,z respectively. User clicks on x, system somehow reads a value that corresponds to x from the bean, and now the label on that button always shows the value from the bean(for that session, so even if the page is refreshed it will display the value)
Maybe, I'm not sure where I read the stories. But I know one on on codinghorror, like [this one](http://www.codinghorror.com/blog/2007/02/why-cant-programmers-program.html).
www.zenisoft.cn/calibre/get/pdf/209 PDF warning It's a book called Expert Spring MVC. It gives an interesting and general view about IoC, DI, AoP and Application Contexts in 2nd and 3rd chapters, and how they're used in a real world situation.
Since this book is for Spring 2, and Spring 3 is already out, is this book still useful? Did much change? I need to learn Spring MVC. Do you recommend this book, or should I just read the documentation/guides on spring.io ?
I don't know how much has changed, now that 4.0.0 is about to be released. Stuff used to be done with XML, but I know that in 3.0 it can be done with annotations. XML is not hard, you just have to remember to update the files when you change your code. Annotations are very practical but cannot be changed in a deployed app since you have to recompile. To me this book has a solid introduction to the concepts and main capabilities of Spring, it also explains nicely the layers of a MVC application and how Spring handles that. You can also check out *Spring Pro* if you want. I find the docs and guides on the spring.io website to be more helpful if you are familiar with the concepts. If not, they can be confusing. There are some projects in Github which can help you understand better and start a simple webapp and build on top of it. This one is about Spring MVC: https://github.com/spring-projects/spring-mvc-showcase There is also https://github.com/spring-by-example/spring-by-example. There are lots of websites out there showing examples of how to write an webapp with Spring, mainly just code without much explanation of how stuff works, so I suggest you read a bit of the book then try diving into code. I also suggest you use a dependency management tool like Ivy or Gradle (Maven may be too complicated at first) to automagically download the required JARs to your project. I believe there are plugins for Eclipse, Netbeans and IntelliJ. 
Ahh right. Don't know why I was thinking swing. Sorry for the bad suggestion. 
It does seem to be down. Get it from here instead: http://www.oracle.com/technetwork/java/javase/downloads/index.html
Jackson is nice.
Google search "Java JRE" (JRE = Java Runtime Environment) and download the Windows version (x86 for 32bit version or x64 for 64bit version Windows 8). P.S. This is a Java language programming subreddit. If I was in your shoes, I would google search something like this "Java Minecraft Windows 8" for future inquiry. Cheers.
The question was asked in the "Java EE 8 and beyond" session at JavaOne this year. The answer was that it was a scheduling issue, they didn't have the time to add this functionality before Java EE 7 was released.
 Ya sorry about that I tried to find something on it before posting but was getting no where fast since the actual java website kept giving me that weird error.
I recently tried a few and came to the same conclusion: Jackson is nice and fast.
Indeed. It's a pretty hard and fast rule - solutions built by developers working for user organizations tend to be far superior to solutions built by developers who spend much of their careers away from the trenches. When selecting tools and buying licenses, you should always ask yourself whether the people working on the solution have any personal experience of the problem area, or whether they are hearing a second or third hand account of the problem relayed through product and project managers, and written down in some JIRA field. Of course, in some situations it's OK to be left holding just half a spoon until it's convenient for the vendor. Or, if someone had lunch with their marketing, maybe the next release after that, a few years down the line. Case in point: CDI @ConversationScoped, JSF 2.2 and trying to clean after old conversation scopes.
Head First Java
I can tell you that I did not learn to program in University AT ALL and I am currently a Senior Engineer at a large US company. In fact, I tell many young people that for certain types of programming, University is a hindrance...
Please use more detailed titles. No one browsing would see this and realize they can help you, or that they have the same problem you have. 
[Effective Java Second Edition](http://www.amazon.co.uk/Effective-Java-2nd-Programming-ebook/dp/B000WJOUPA/) would be a very good place to start
Still not as simple as GSON.
Like it would have taken long. I could do it in 15 mins, and I suck at life in general
I've heard that recommended before. I'll take a look. Thanks!
gson = 4 letters. Object mapper = 12 letters. Gson.toString &lt; om.writeValueAsString() Plus Gson lets you use the @Expose annotation to exclude fields you don't want to be included in the json.
I am 16, and I started learning java when I was 15! It is not really a difficult language, especially if you have prior programming experience. I learned java through a combination of an AP computer science course (taken online, no university needed) and self-teaching from then on. I definitely recommend learning it!
One feature I like in Jackson is the ability to define simultaneous different profiles for exposing different properties for different use cases.
Would suggest just looping through random numbers til you get a remainder of 0 (check the % function). Not pretty but should work.
To expand on this convention and why it's important, many ides assume you will be following convention and base their optimizations on these assumptions. For example, IntelliJ assumes camel casing and provides fast auto complete - if my class's name is AutoCompleteStrategy, I can type: ACS&lt;ctrl+space&gt;. Many other things depend on convention like Jackson mapper
Surely just because of that he can't be a bad source. I learn Java from him and poor formation of code makes me cringe now. You learn to pick it up from others. 
Jackson has @JsonIgnore and other annotations for locking for field names etc.
Yes, because it's a different use case, where you want to expose one set of member variables as response to one particular call, and another set for another.
I haven't watched any of his videos but if he can't get something as basic and obvious as proper naming conventions why would you trust him to know anything else about the language? 
eh, I'm living proof that he does teach about the basics of the language. 
@JsonIgnore = 10 letters @Expose = 6 letters
I see
I'd argue if you are counting fewer characters as a win, Java probably isn't the language for you.
Using Java doesn't mean you have to be verbose for the sake of being verbose.. you should still *try* to keep your code concise
For sure, but verbosity is pretty low on my list when evaluating java libraries. I don't have anything against whatever you're in favor of, just sharing on opinions on Jackson.
Why not have all threads put to a shared [LinkedBlockingQueue](http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/LinkedBlockingQueue.html). If that causes perf issues, ask again. I'd be happy to help.
Nobody gets A's for Effort in real life. Trying, and doing a bad job, is generally worse than not trying at all. Which isn't to say that people aren't allowed to make mistakes. But they need to correct them or remove evidence of their existence. Bucky appears to have done neither. 
You'll wish you had verbosity on your list when you get parkinson's at 35 and can't even jerk off.
So? everyone makes mistakes and he teaches the concepts very well. There is no reason to say it's not recommended unless you can show someone better, and as far as I'm concerned there isn't anyone better for an intro to Java without taking an actual class or a very specific group of books.
And using a lathe is much harder than using a drill press.
I found a few articles on the net which say that with Java EE 8, since most of Spring now comes in built in Java EE, spring is not of much use. Am interested in knowing your thoughts on this.
I suggest you make your threads Callable and use a FixedThreadExecutor to execute them and get their values.
I dont understand it either. It helped me get the basics while I was taking a Java class in college. I would watch his video and then go read the textbook chapter. Without watching his videos and seeing the code live, reading the textbook was extremely difficult for me. Not only that but he explains everything in layman's terms since it's geared towards beginners. My textbook uses extremely complicated words and what seems like run on sentences that could have probably been worded in 5 - 6 words rather than a paragraph.
I'm impressed by the fact that you've been programming since 6th grade, you have a great future ahead of you. Since you are in high school, I strongly recommend you to take AP Computer Science class if you haven't yet. In addition, you should plan ahead what engineering college you would want to go to. From where I live, Georgia Tech is a big deal in engineering so the education where I'm getting at is all set. Honestly, there are still millions of stuff you need to know and learn in-depth of Computer Science. So the background of what you know is great, but there are still a lot of concepts you need to learn. &gt;I'd also like to know if it's possible to get hired without a degree. It's possible, but you have to be REALLY talented at coding to get at least average CS major salary without a degree. I've been job-shadowing at Oracle, and what they told me is that nowadays if you don't have a degree, you are in a difficult situation competing with others who does.
You are wrong about everyone demanding a degree. Sure, most huge software companies require it as your resume will get filtered out even before any technical person reviews it. However, huge companies absolutely does not mean huge money. I myself found a job right after high school, it was some cheap PHP startup and it was the shittiest job I worked ever, but that is not the point. After working there for a year, I got a pretty "Work experience: 1 year" in my resume, that opened me a way to another, much better, Java startup company. Working there for 2 more years, I got called by another IT company, which was not a startup but a big company spanning over few cities and got hire there for double the pay. Few more years later, I'm working in one of the top companies in my country earning great money. Also, I feel pretty stable, as I get constantly contacted by companies asking ME if I want to come to the interview.
&gt; I'd also like to know if it's possible to get hired without a degree. You absolutely can be hired without a degree. I've been in the IT industry for 10 years now. I've come from a network engineering background and now into a programming role. I do not have a degree. And I do not consider myself a special exception. I've known other people throughout my career with degrees completely unrelated to IT and Computer Science, or no degree at all, that hold very respectable, senior positions. I'll give you my 2 cents, that is probably contrary to mainstream, but if I were you, I wouldn't waste my time and money on pursuing a degree. Why go in debt for 10s of thousands, just to "learn" the skill-set you probably already have right now? I have interviewed dozens of people, and I have never once looked at or cared about the education portion of their resume. I only cared about how they held up in the technical interview. You seem to have some very good knowledge already and I can tell you are going to go places, kid. Rather than college, you are probably better served by studying about various design patterns, read up on some common algorithms and practicing your skill-set in hobby and open-source projects. I'm sure you'll find a job out of high-school, but still, I wouldn't expect a senior position up front. As far as what kind of skills does a Java programmer need for a job? I would say know when to use the right design pattern or correct means of abstraction. And depending on the project, UI design may be something you'll always need to be able to help guide, as I've observed you are the first user of the program or feature you are working on, so you get the first insight to how it behaves and "feels" for the user. But on the non-technical side, understand that you won't always be solving interesting problems. If you are in a position and domain that always keeps you challenged, great, but be prepared to have projects that just drain you. And don't be afraid to keep your eye open for a company or industry that interests you. Speaking of which, lastly, I would also advise to not be afraid to move on. You may find yourself at a point in your career that you realize you've out-grown your current position at the company you work for. If you can't find a way up, look for and take another position elsewhere where you can broaden your skills and knowledge.
You sound like me, 10 years ago... Yes, it's definitely possible to get into the industry without a degree, I did. It's late, I'll post more about java specifics later. 
&gt; I'll give you my 2 cents, that is probably contrary to mainstream, but if I were you, I wouldn't waste my time and money on pursuing a degree. I wouldn't agree with this. If you *can* get a degree - get it. The main problem with working without a degree, is that you depend on people knowing who you are. And that usually has influence over some territory. For example, a hireing guy may get your resume and read there "5 years work experience at BigCompanyInNearbyCity". He thinks "Oh, I know that company, they are pretty good, if they worked 5 years with the guy then he's probably good too". On other hand, if you decide to change your location (move to a different city far away or a country), stuff can get messy, as the person will now read "5 years experience in SomeUnknownCompanyInFarawayLand". And he will have no idea how good you are based on that. Degree makes that much easier. Even if you have 5 years in unknown company experience, seeing that you have a valid degree makes those 5 years experience much more solid.
Your degree has some value for two years after getting it, after that people look at your experience. Get a degree if you enjoy it, or want to become a researcher or lecturer. Otherwise, it's a waste of time, and you are unlikely to even touch on any of the major subjects which correlate with being succesful in the field.
post your poms on pastebin or something
Good question, good question, may the force be with you.
What do you exactly mean with case in point? Didn't the Seam developers have any real experience with real software development, or are you pointing out one particular issue with that scope?
The best programmers have the following archetypes, beyond being straight coders: * HACKER. Problem solving skills. Being able to fit a square peg into a round hole. * HUSTLER. Being able to communicate ideas, solutions to others. Particularly conveying complex technical issues to non-technical people. * HIPSTER. Making things look great. Being able to add the gloss to your output. 
Thanks for the link, very useful! 
You cerntainly have the experience, it should'nt be hard for you with the kind of talent you have, i wish you the best, greetings from a german programmer ;)
The small (6 man development team) company I work for are hiring, and we filter based on degree or not. A candidate would have to show good experience, or have an awesome personal statement and CV, for us to consider them if they lacked a degree. It sucks from the prospective employee's perspective, but from the employer's view it's an easy way to cut down the number of applicants. It also filters out people who haven't had a basic grounding in software development. Whether or not this is a valid filtering method given how difficult it is to get a good candidate at the moment, is another question..
I suppose. Bucky really only helped me to get the basic thought process behind programming, rest of it was learn from other sources
I too can echo this experience... Lately I get no less than 3 call a week from recruiters who have found me on one of: Stack Overflow GitHub LinkedIn Keep those profiles active and constantly updated. Also, add links between them for better visibility.
A parent pom should define the modules, so i'm curious about your pom contents too. However, using a plugin that depends on a specific ide is a code smell to me. Your project should be portable, just as your Java code should.
I've never heard it put this way, but thinking about it, it seems true.
Many large corporations (in the USA) have internships that will pay you decent money for summer work while you are in college, without a degree. They usually pay pretty well. It's difficult to work while going to college, and I wouldn't recommend it if you have that option. Intern in the summer, save your money, and live off it while in school.
no, you don't need a degree; but I don't care what any of these other chuckle-heads tell you, having the degree is better. There are companies that discriminate if you don't have it, and you'll learn a ton of interesting stuff. You may decide to go onto a graduate degree and become a researcher. Can't really do that w/out a college education. In school your interests may change too. As a high school student, you haven't been exposed to all the awesome career possibilities. If you like computer programming, you may also like bioinformatics, physics, math, computer engineering .. and each of those have lots of different opportunities to apply your computer programming skills. 
Doesn't this come under spamming if sole purpose of this user on this subreddit is to add content from his blog?
I think you're missing an important ability, which is that of creating elegant, readable, maintainable code. As someone that hires programmers, that is one of the most important factors. Just one sloppy coder can ruin a codebase.
Sounds like you want to use maven modules. You define the projects in the pom.xml file and then build the root project which in turn builds all the modules. Quick example &lt;modules&gt; &lt;module&gt;errors-domain&lt;/module&gt; &lt;module&gt;errors-producer&lt;/module&gt; &lt;module&gt;errors-consumer&lt;/module&gt; &lt;/modules&gt; This is a single project with multiple modules. http://docs.codehaus.org/display/MAVENUSER/Multi-modules+projects
No, he's the author, he writes very interesting content and I hope he keeps posting here. Your comment on the other hand is pretty spammy.
How is a comment asking about someone's self promotion spammy?
Sorry if the posts offend you. I do use Reddit for more than just posting links, though not that much/that often. If it is spam it is rather infrequent and I hope you'll find a way to ignore it. For now you have my sincere apologies...
Because it diverts from the main discussion. There is a button for that, it's called report. And there's an instrument for not liking the content which is the downvote.
Your blog is great, please don't stop posting links to reddit.
Very true. I was referencing more-so that what he's doing isn't spam, it's just off-topic. 
Just wanted to say - great post. Was a great read. :)
I think you don't quite understand the meaning of spam considering you call my post spam. The fact that he is the author doesn't go in his favor in this case. 
It doesn't offend me, but browsing your history 95% of content added by you comes from your blog, and similar percentage of comments is posted only under the links you addded. The frequency doesn't really matter and even though the content is high quality I see the sole purpose of this account is to promote your blog whether it is intentional or not.
It depends on the quality of the content, and on whether the purpose seems to be self-promotion or community building. The articles in this blog have been of very high quality, and community building. Therefore, I don't have a problem with it.
See I don't really have a problem with this too, and I don't want to sound like a useful idiot protecting rights of people that too don't have a problem. I brought it to attention that sole purpose of this user is to post his blog and comment inside his threads and there is nearly none other activity on this account.
Can you recommend any resources for a *newer* approach?
I always chuckle when someone shows the syntactic sugar of another language as a reason why Java is bad. Like the use of the "read all lines" example for comparing Java to other languages. First, I do not see in your Ruby or Groovy example where you handle potential errors, so I'm guessing that if either has an error it just bubbles up to a higher level error handler which you can do by having your Java method throw the exception. What would the full example look like with error handling in Ruby and/or Groovy? Aside from error handling, if you use the new java.nio.file.* package you could rewrite your java method like: static public void main(String args[]) throws Exception { for(String line : Files.readAllLines(FileSystems.getDefault().getPath("mytextfile.txt"),Charset.forName("US-ASCII") )) { System.out.println(line); } } which is likely something Groovy is doing under the covers. Ok so a few more letters due to spelling out the class/package names, but that's it. The data/time one in the JDK proper is a mess, but the Joda time package helps clean that up. And that is one major strength with Java -- the easy availability of high quality packages to provide capabilities not present in the core when there is an issue. 
What I'd like to have would be a GitHub project where anyone could open pull requests of JDK regression tests, and an automated cloud infrastructure for running them over every JDK build tag and official release. The current closed system constrains 99% of the possible contributors from participating in regression spotting.
Browsing your history it looks like you contribute nothing. Yet you are here, telling people posting links to their original work, that they are in the wrong. What's the purpose of your account?
No no no no no. The compile and pray method is what every new programmer does until they realize that doesn't work. This is where the "science" in computer science comes from: that moment when you start digging your code to figure out why your route didn't work and what route is going to get you the correct results. Look for a book on object oriented programming. I don't have any recommendations they really all day the same thing. It is important to understand how object oriented languages differ from other languages and what benefits there are to using OO. This book doesn't have to be Java, but reading an advanced book that assumes you already know the language it provides examples in can be difficult if you don't. Basically you are going to get the same high level description of what objects are. Imagine you want to make a program that functions like a bicycle. You may have a bicycle class that will contain each of its components. Most importantly you have a gear system. In a gear object you would need information specific to that object. In this case you may have an integer that keeps track of what gear you are in. Here is where data protection comes into play. Sure you can just increment gear by one when you shift, but there are some issues with this. First, you wouldn't want say your brake class to be able to shift gears this can leave your program in an unstable state. By creating a method that shifts up for you inside your gear class you can provide some data protection to not only your current gear, but the entire functionality of shifting gears. Also by creating a method you can ensure your gear doesn't have a value that doesn't make sense. For example. If you continued to shift up, you may find yourself in gear 100. You can set up your method to allow you to call shift up, but not actually change the gear any higher than would be allowed, much like a bicycle functions. OOP also allows inheritance and polymorphism among other things, and I will leave it up to you to learn about these topics, but these are the marquee parts of OO. If nothing else, if you apply for a job that is using an OOP language you will be asked what benefits OOP provides and what they are. As for the next step: keep trying. What seems to be the case for most programmers is that you have this sudden moment of clarity. Its a new way of thinking that your brain fights with until that single moment when your brain turns over. It maybe the wording of what you read or something you wrote that makes it click for you. For me it was my final exam of my first programming class (which was also OO with Java). I read one question that kind of gave me the answer to another question and it all hit me. Just keep trying it was new to everyone at some point no matter how much of a guru prodigy they want you to think they are. Edit: words 
The exception stack traces are shown in the reports generated by Maven. See the surefire configuration for reportsDirectory, [here](http://maven.apache.org/surefire/maven-surefire-plugin/test-mojo.html#reportsDirectory). By default, the files are stored in the "surefire-reports" directory in the build directory.
But if I'm using an ObjectInputStream, and I try to read an integer, that could mess up the next readObject(), no?
If you have a heterogenous, or simply unspecified type collection, `ArrayList a`, then getting objects out of it requires explicit casting, `Person p = (Person) a.get(0)`.
Ah, `useFile` set to `false` fixes the problem. http://maven.apache.org/surefire/maven-surefire-plugin/test-mojo.html#useFile
I've heard it said that (some) HR departments want/need to see a degree, but more and more programmers that do the recruiting themselves are interested in seeing your portfolio (all those things you listed, especially SO and GitHub/Bitbucket) more than your degree. And I think it makes more sense that way. If you're hiring someone to write code, you'd probably do well to see the code they've been writing, the projects that interest them ... and evidence for the "my passion is programming" line.
The other trick is to use the [available](http://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html#available\(\)) method. It returns 0 at the end of the stream, and does not alter the state of the stream.
Some lucky chaps are hired for programming jobs without Computer Science degrees, but if you get the degree, you're much more likely to land the job. Skills required? * Debugging (print statements, gdb, unit tests, thinking) * Quickly pickup different technologies (Node.js, Hadoop are hot now, but the buzz will be something else in a few months) * Translating between problems in technical space (line 34 bottleneck) and business space (losing money on slow code)
You obviously spent some time putting together this blog post. Thank you. As long as all of your stuff has real original content like this, feel free to self-submit 100%. :)
I already did, chumpface.
Programmer for 6 years here. Compare it to watching a work-out video for 20 minutes a week (these videos, or whatever) vs. actually spending years exercising with a good routine that was approved by a professional physician or something (studying various CS textbooks very closely.) Learning anything to become really good at it is not supposed to easy. Not like burning off 10 pounds a week, or whatever. 
&gt; Does having open source contributions help in interviews, or are they more focused on how well you know the language individually and individual merits? I can't speak specifically for interviews, but it's definitely attractive to employers. If you're frequently active with open source, and you make sure your contributions are known, you'll have employers seeking you out. [Do things, tell people.](http://carl.flax.ie/dothingstellpeople.html) As a point of reference, [here's my GitHub account](https://github.com/skeeto) and I get about one e-mail per month from an employer in the US interested in me -- and I specifically list that I'm *not* currently seeking out other employment. When they initially get in touch, they have no idea what my education and professional experience are, so I think you could potentially get your foot in the door without a degree. I also suggest you make a [Masterbranch](https://masterbranch.com/) account and link it to your GitHub account. That seems to draw a lot of potential employers' attentions. 
Kinda like automobile drivers who don't understand how their car works.
&gt; Look for a book on object oriented programming For this I recommend both [Head First Java](http://www.amazon.com/Head-First-Java-2nd-Edition/dp/0596009208) and then follow that up with [Head First Design Patterns](http://www.amazon.com/First-Design-Patterns-Elisabeth-Freeman/dp/0596007124). 
I'll keep trying, for now I found a great site which has a lot of assignments which I'm going through, sort of back to basic. Hopefully that will clear some things up for me, just going through the basics up to the point where I'm stuck. I will stop using the compile and pray method and rather go more in depth when I hit a wall and do some research etc. Thanks a lot for your reply, I definetly don't want to quit doing this so I just have to get over that hump. And I know what you mean with something just "clicking", because exactly that happened at an earlier point when learning about when and if :)
Yes, this.
Oh check out Khan Academy. 
&gt; and also "the next step" after that to get ahead in my class. You apparently already are *in* a course learning Java. There's no need to go ahead - just go ***with*** the class. &gt; I know I could just google for it, but I thought you guys probably knew about the best places to learn these things so hopefully you can help. The subreddit has many many ***many*** threads (posted at least every other day) about learning ressources. Look them up. 
thanks !! The image is generated out of 50 rectangles of varying size and color ( gray) . That limits what it can do quite a bit. Successful versions have used multi-sided polygons . One website also uses facial recognition algorithms to compare the original and generated images, instead of the (most basic) pixels comparison method that I've used .
This discussion isn't about the working world though. 
Thank you for not http://xkcd.com/979/
I posted there as well yes :) thanks
but this doesnt help me at alll lol
Yeah, those days are Hell on Earth.
`available()` would return `0` for both a closed input stream, as well as an input stream to which the next chunk of data hasn't yet been written.
Wonder where you are at. I've seen it being used plenty, but not as much as eclipse. What I don't like about your dev population is that you say that they haven't heard about Idea, which I would take as lack of interest in their main work tool, which is really sad.
Now that I think about it, this can be solved without even using the mod operator... just get 2 random numbers and multiply them, and use the result as one of your operands... for example: random number 1: 6 random number 2: 10 calculate rn1 * rn2 = 6 * 10 = 60 So now you will always have ints and can ask your user something like "60 / 6 = ?" knowing your remainder will always be 0. 
Core Java I and II by Horstmann et al, but you really need a good understanding of the Java basics first.
Well, Java EE 7 was just released back in June so... Not everyone uses Java EE, so there is plenty of use still for Spring.
You are right sorry for the sidetrack. I will stop.
Well, in this particular case: 90 / 10 = 9 80 / 10 = 8 70 / 10 = 7 60 / 10 = 6 ... So, integer division can work. You can take that an index into an array. Frankly, though an "if () return" is probably the way to go here. Unless you're doing this a lot in a small loop, there's not going to be any speed improvement. 
&gt; I literally used to come home from school and get on my computer and just program. Just keep doing that, youll be fine. &gt;Does having open source contributions help in interviews, Yes &gt;or are they more focused on how well you know the language individually and individual merits? No, you should know this - but this is mostly trivial. If a company spends their whole interview asking you very language specific questions, you probably dont want to work there (unless its a simple weed out interview to get rid of all the not candidates or a very specialized language / job). &gt; I'd also like to know if it's possible to get hired without a degree. Possible? Absolutely. But you have to have serious provable skills (top 1% or better), or already been working for a decade or so. Even if you are, many doors will close automatically. IBM, Microsoft, Google, and many other big tech companies that are doing interesting things will not look at you. Your resume will be automatically filtered out because you don't have a degree. You also will be unlikely to get a job with any government contractor. This takes away most of your employment opportunities, and leaves you competing for the low hanging fruit against people who can say "I finished my degree". Its not easy and its not fun. Long and short of it, are you [Fabrice Ballard](http://en.wikipedia.org/wiki/Fabrice_Bellard)? No? Then get your degree (even Ballard got his degree). &gt; having a summer job doing what I love would be awesome and would definitely help in getting future jobs since I've noticed that a lot of them require 4+ years of actual experience Your degree is your first 4 years "experience". You can (should) also get internships. The companies that strictly apply "you must have X years of technology Y working in industry Z" are generally not the ones you want to work for. Most places will look at you, what you've done, and decide if you might be a good fit. It may take a few tries (universal rule of life: HR sucks at hiring people for anything other than HR). This is one advantage you have at college, go to your career fair and talk to a technical rep from the company you are interested in. Most companies that are seriously interested in recruiting from a school will send out real developers / engineers to do recruiting (along with HR). &gt;Thanks for your feedback and I hope I can get a good idea of what to expect doing Java programming as a career Don't think of it as Java programming as your career. Programmers are expendable and replaceable. You want to be a Computer Scientist. Get out of the mindset of "I want to use Java" to "I want to solve problems". Thats what Computer Science is, and Java is but one of many tools to solve problems. 
Hmm, that's a pickle. The read() method is the most reliable approach, but it is destructive and would corrupt the ObjectInputStream. The simplest workaround I can think of is to wrap your input stream with a [PushbackInputStream](http://docs.oracle.com/javase/7/docs/api/java/io/PushbackInputStream.html#read\(\)). This will allow you to "unread" a number of bytes. So, you can check if the stream is closed, and if it isn't, put the byte back so the ObjectInputStream is none the wiser: PushbackInputStream wis = new PushbackInputStream(/* InputStream to wrap */); ObjectInputStream ois = new ObjectInputStream(wis); int v; while((v = wis.read()) != -1) { wis.unread(v); /* read from the ObjectInputStream, as usual */ }
I'd recommend getting an IDE as well. I personally use Eclipse. It builds it as you go and will tell you as soon as you type an error. It helped me learn a lot since the javadocs pop up as you're typing out the method name for a built in function. But definitely check out a book and look at some open source code to get a feel for what lies ahead.
I opened an issue and attached a patch at: https://issues.apache.org/jira/browse/THRIFT-2227
If you only use JUnit, adding the JUnit provider to surefire config generates better test failure messages. The output is quite similar to what you would see from an IDE test runner. http://maven.apache.org/surefire/maven-surefire-plugin/examples/providers.html
http://lmgtfy.com/?q=How+do+I+call+a+java+method+from+inside+of+C
You'll have much better luck with this question on [Stack Overflow](http://www.stackoverflow.com/). Be sure to tag your question with `java` and `jni`.
We used this stack on a previous project successfully: * JAX-RS via RESTEasy * iBATIS &amp; some Hibernate * JSP templating via tags for HTML (pretty damn nice btw) * SASS for CSS (used a jruby maven plugin IIRC) * Knockout.js &amp; jQuery (databinding ftw!) * js-signals for events across page components * hasher + crossroads for bookmarkable URLs edit: we also used: * JMS to interface w/existing business processes * Coffeescript - not sure how I forgot this one heh
/r/javahelp is a better place for this. Anyhoos...Without seeing the full class file this is a guess, but have you added the import statement for [javax.swing.JOptionPane](http://docs.oracle.com/javase/7/docs/api/javax/swing/JOptionPane.html)?
would you believe me if I said that I just saw that, and came here to delete this thread? I am so embarrassed... Here have a picture [puppy in a dress as an apology.](http://i.imgur.com/yOEKLRV.jpg)
Are you trying to call a Java method from inside C code called through JNI? If you are, check out the [JNI spec](http://docs.oracle.com/javase/7/docs/technotes/guides/jni/spec/design.html#wp17074).
Currently the 3D api of libgdx is under development, but nearing it's first release. You can use it if you're using the nightly build. I've created some tutorials to get you started. See: http://blog.xoppa.com/basic-3d-using-libgdx-2/. It still has some rough edges, but it gives you full control over the render process. I placed some examples at my youtube page: http://www.youtube.com/user/XoppaBV
What tools do you use for the web front end side.
&gt; The popularity of the Eclipse IDE continues to rise. Which is probably why I hear more and more people complaining about it and switching to IntelliJ.
People have been complaining about eclipse and switching to IntelliJ for as long as those IDEs have been around... I don't think it means much one way or the other.
there are tons of youtubers that have java tutorials.
University freshman here. What are the common complaints about Eclipse? I have used it so far with good results. Edit: I get downvoted for asking a relevant question?
It's not terrible, especially for an open-source program. Granted, it's sometimes slow and buggy, but there aren't really many big issues.
I believe the formatting for code is 4 spaces before each line.
Is this a school assignment or just for practice? Basically do you have to implement your own Queue or can you use a LinkedList or Deque which already exist and work like queues in Java. You create a Generic E in the following line but you never use it. class MyQueue&lt;E&gt; Your queue only accepts ints, and returns ints. If you want it to work with generics you need to replace all of the ints with the Generic E. private E[] queArray; public E peek() // peek at front of queue { return queArray[front]; } But if you can use an ArrayList or Deque this is already done for you. Hopefully this gives you a starting point. Remember to look at return types.
Really? Have you ever heard someone complaining about IntelliJ and switching to Eclipse? Netbeans I can see, but never Eclipse.
Hey there I have no answers for you, but I'm very interested in finding out the answer as well. Similar boat to you n'all.
Quick answer.
No. If it was, the certification would be completely worthless.
Are you speaking about a class dedicated to the exam, or a university class covering object-oriented programming using Java? If it is the former, you will most likely be using a Java certification prep book. [This](http://www.amazon.com/SCJP-Certified-Programmer-Java-310-065/dp/0071591060/ref=sr_1_8?ie=UTF8&amp;qid=1381816985&amp;sr=8-8&amp;keywords=java+certification+7) is the book I used for Java 6 certification. I simply studied the book and left my IDE open to play with the concepts and did not take any formal classes and passed easily. If you are talking about a University course on Java, then no, it would not be enough and you would need to get the prep book. Regarding what it covers, you are mainly looking at the Java core, which in your example would not include swing graphics. 
Most complaints I heard about Eclipse comes from three areas: slowness, buggyness, and poor suport for external build tools (mostly maven). The first two are still annoyingly present (even on Kepler sr1). The last one really got better with Kepler release. 
Yes it does. In fact, a competent Java developer should be able to pass the exam with just the introductory class.
Not really trying to dig at you but when you realize why saying "I know two dimensional arrays" is enough proof that you're not ready, you might be in a position to take it. Two courses is not, and should not, be enough to get a certification
To pass certification you should prepare for it. To prepare you should read book by Katty Sierra(not head first java, but SCJP). To make the best out of it (i.e. not to forget nearly everything after you have crammed for 3 months), you should before actually write something meaningfull. [here](https://github.com/thekarangoel/Projects) is the list of projects that you can try. Choose one of appropriate level, build experience, then solidify knowledge with certificate.
It makes use of a workspace concept instead of using simple project files, with metadata that gets corrupted every time there is a solar event. Does not integrate properly with external build tools. Other IDEs tend to reckognize special build targets in build files and use them directly. Has lots of buggy plugins.
Sure that is why so many developers are moving to Netbeans and InteliJ, even Google is migrating their Android SDK away from Eclipse. And lets not reference the great *success* Eclipse version 4 is.
I must admit I've never seen any CVs with the Java cerification listed, and we're currently in a hiring phase and looking over a fair number of them (including StackExchange). Is there much point getting this certification any more?
Ok I ran Intellij as Administrator and it created the entries in the registry. Does anyone know how I could create them as part of the installation process?
We went the opposite route. After some experiments we're now designing our applications to use **less** client-side libraries. Preparing the HTML on the server provides a much better integration with back end services, offers better tooling support, better refactoring support and overal better and a more consistent performance.
Wait what? All that article and no mention of Cassandra? WTF over?
I complained about Eclipse, then I tried yoxos.
AngularJS +Typesafe + Restful service layer where payload is JSON. 
IMHO - programming is crafting. It is combination of education, knowhow, passion, indomitable will, curios mind and artist skills. It is engineering, science, hard mathematics and art messed up to somekind N dimensional object floating in some imaginary space that doesn't have laws of physics. And that is only part of art. You still need to interface this introvert mind of programmer with external sources like stupid customers, stupid bosses and absolutely stupid project plans such way that it is able to communicate with them more or less civilized ways without dropping to some [compulsive behaviour pattern](https://www.youtube.com/watch?v=I25UeVXrEHQ). Once you have found certification that covers all those aspect, please congratulate yourself and post certificate here to reddit so that we all know that such thing exists. Otherwise - forget certificates (they only cover small part). 
&gt; Is there much point getting this certification any more? By itself no. The problem isn't the exam. It's that it is too easy to get question dumps on the internet. Also the exam covers stuff in Java that your average developer tends not to worry about (ie. Lets the IDE do the work). I don't have the reference on hand, but generally if you are an experienced developer with no knowledge of the exam, it will take you 3-6 months study (assuming you have a full time job). Also there are a couple of parts of the exam which although you study for them don't show up on exam. So they can be good tests to see if the person studied, or just studied the questions. eg. "int x = 008;" 
The reason is simple: Your drawing happens in the event-Thread, so it can only be executed by one processor core. Older processors had fewer cores, but each core had more performance. In the task manager just change the cpu diagram to one per core, then you'll see on both computers only one core is at 100%. If you need to draw graphics or many objects, try to use OpenGL via [lwjgl](http://lwjgl.org/)
Its mentioned 3 times.
Ok thanks for the tip. I was originally using Properties to store settings in the users home directory but then read about the Preferences API and thought it sounded quite good. Unfortunately it turned out to be lot more trouble then I expected... 
Hate to say it but the certificate is pretty much worthless either way. 
I am assuming, you want to take the [Programmer Level I Exam](http://docs.oracle.com/javase/tutorial/extra/certification/javase-7-programmer1.html). That link provides the basic concepts that will be tested.
&gt;Have you ever heard someone complaining about IntelliJ and switching to Eclipse? No. Then again, I don't think there are many developers that have experience with IntelliJ who didn't have experience with Eclipse first...
Fair enough. So think of CDI as a built-in object factory. It allows server-managed beans to be created, configured and delivered by the application server, and it can be as easy as just using annotations to indicate they need to be Injected. A very common and useful use is using CDI for injecting your Persistence Context. Typically you'll configure it as a persistence unit on a persistence.xml file, and then you can use that name to inject it on your app, like into your Data Access layer: @PersistenceContext(unitName="myDatabase") EntityManager em; then you can use that to access and query your data source: public User findById(Long id) { em.find(User.class, id); } When you start looking into CDI in Java EE you'll soon run into 2 different CDI-like annotations, @ManagedBean and @Named. The first one is for managing beans with JSF, while the second is the generic CDI one. It might depend on how you set things up, but I would try to stick with the CDI ones, as you can do more (injection-wise) with them. Just don't try to mix them as that doesn't really work. Next take a look at the different Contexts provided by each one and you'll see some other interesting stuff about these. Although they are not truly standardized just yet, you can do plenty with the existing ones. The @RequestScoped is used by default and has a lifespan of the http request and response. Then there are also @SessionScoped for beans you can keep in session, and even @ApplicationScoped for application-wide use. The not so standard ones are usually the ones that span over multiple requests, like @ViewScoped or @ConversationScoped. You'll see variations of these depending on the server/implementation you use (a couple of CDI implementations are Jboss Weld and Apache CODI). So now you can start thinking of creating beans and having them being managed by the container without having to manually code when and where they are available to you, by just using an @Inject annotation to make it available to you in your beans, or just by name if you use Java EE's Expression Language (EL), which you can use in both JSPs and JSF. Now I would suggest you watch this youtube video, which is a very good example about what you can do when you use the Java EE stack: [Real-World Java EE 6 Tutorial](http://www.youtube.com/watch?v=8E3Ry-6xqj4) Let us know how you are doing after watching that. Have fun!
And nobody ever looks back.
&gt;yet a piece of my code using swing and some drawing runs really slow on my laptop Java's Swing and most all of the GUI code is now GPU accelerated on Windows, OSX, and Linux. The discrete GPU in your desktop is probably better than the integrated GPU in your laptop at 2D acceleration. 
If none of the other suggestions help, perhaps it's I/O related? For example, if you're pulling data from disk, laptop hard drives have typically spun at 5,400 RPMs vs. at least 7,200 RPMs in desktops, so that can affect your performance. Also, memory latency/bandwidth could be an issue.
Yeah, I checked that but none of the cores is in use on the laptop. On the desktop it's very close to 0% CPU usage as well. And yeah I'm looking at each core/thread (my laptop has HT).
Oh, that would explain it. Thanks. Actually it's Intel HD 3000 vs GeForce GS 8400 hmm... I'm not sure what to think. Both are pretty crap.
And a couple of the exams that have this first exam as a prerequisite are pretty cool.
No, no, it's a simple example program using swing. It just outputs a rotating square shape. I was doing it from Bruce Eckel's "Thinking in Java" exercises. Then I started playing and instantiating 20-100 such squares on the screen to see how it affects the machine.
My point is Eclipse's popularity doesn't depend on these people. As long as IntelliJ has been around people have been switching to it from Eclipse. Yet, Eclipse has been growing in popularity throughout that time. There is simply enough people that start with Eclipse and never look "forward" to sustain it's popularity.
Build a portfolio of programs and get experience in application development. Better than a cert from what I've been told.
Actually, for 2D performance, both should be more than good enough. But different GPUs might mean different performance, especially when it comes to things like drawing lots of rectangles. Can you try different GPU drivers? Or install (or boot liveCD) of Ubuntu and see how it fares on Linux? Also, can you put your code somewhere so that we can see exactly what it's doing?
Eclipse is the software equivalent of Howl's Moving Castle. So many random parts bolted on to the frame. It's possibly the most feature-rich piece of desktop software I've ever seen and runs seamlessly on Windows, and nix. It's just a big tradeoff with stability and speed. IntelliJ is just a lot tighter and smoother, alghough it isn't really knocking my socks off so far.
I'd be happy to, but I've never distributed any Java code before. Any advise? I'm using Eclpise and the project is using classes from another project.
How much code do you have? If it's just a single java file, put it on PasteBin. If it's more than that, make a zip file and put it somewhere on the web. If you don't have your own webserver, use one of these: http://en.wikipedia.org/wiki/Comparison_of_file_hosting_services If it was a real project, I'd say put it up in github or use some other source control system.
Thanks. But I'll have to get back to you later, because my workplace blocks all the hosting services... 
The internet and YouTube is a great way, I'm using that myself! http://www.java-made-easy.com/ That site is good to get started, but its no longer edited but still useful!
On that, both points of view have their strengths, but I'm primarily trying to get /u/Ze_Carioca to think his own question all the way through.
The PrimeFaces team is really active and quick with the releases. It is a great project.
I can download an executable for Netbeans that includes the IDE tomcat and glassfish. All I have to do is run the file and I have a complete development environment that works out of the box. No plugins or configuration required. There area also fantastic tutorials available to demonstrate how to create an application with any major framework.
I think you get this error because your class package is undefined (empty). Add [proper package declaration](http://docs.oracle.com/javase/specs/jls/se5.0/html/packages.html#7.7) to your code and see if it create userNode somewhere under HKEY_CURRENT_USER..
If it is a work laptop, they most likely haven't installed the appropriate drivers - could be for the chipset or for the graphics card. This is a problem we had - console screens would flicker a lot and lots of stuff was slow. EDIT: reading some of your other answers, it definitely sounds like the graphics drivers. Check other drivers while you're at it, though.
I do have a package declaration but I didn't copy paste it into the post. It seems like there must be a way to get it to work without having to manually create the registry entry though, I'm sure I'm doing something wrong.
Slowness you can deal with- get an SSD. Eclipse creates lots of small files, which kills performance on normal HDDs. In some cases, I've seen speed increase by a factor of 4x when using an SSD vs HDD. Regarding buggyness- It has some hassles, but not that many. Individual plugins are often buggy, but the most popular plugins and the core are OKish. Bad thing is that you never know if this plugin will be good, or if it will blow things up. I'm mostly coding on Netbeans now, even though I love Eclipse's Synchronize with Repository view- the one in Netbeans is not that nice. Refactoring is better on Eclipse as well. I still don't trust Eclipse-Maven integration though. --Coder
The New Boston is great, google it. On a mobile device so cant link
Must be because of Intel HD problem with Java 7 HW-accelerated. Could you check by using "J2D_D3D_NO_HWCHECK" set to True, if you are using Windows, go to Environment Variable, add new key name "J2D_D3D_NO_HWCHECK" and value "true". If you're using JRE 32bit, try to switch to 64bit to see if the problem gone. 
This is asked again and again and again. Please refer to one of the ***other*** daily "java ressources?" threads in this subreddit.
Not even an hour after this other thread: http://www.reddit.com/r/java/comments/1oi40x/best_place_to_assist_in_self_teaching_java/
He's pretty awful. He encourages all sorts of bad practices and his videos aren't good for anything other than learning syntax. It's very clear that he's never actually worked as a software developer nor worked on a proper project.
Effective Java is the best book on Java you will ever read, but read it after you have a firm grasp on language fundamentals. 
http://docs.oracle.com/javase/tutorial/
&gt; nt This is for a school assignment where we have to implement our own queue class. So basically I should just change the parameters around?
I actually know all those concepts. 
A good place to start is the Java concurrency tutorial: http://docs.oracle.com/javase/tutorial/essential/concurrency/
You may know them, but for the certification, you have to have a deep understanding. For example, Double y = null; double x = y; What happens? Compile error, runtime error, x = 0? Answer: This will compile but will throw a NullPointerException during runtime.
http://chortle.ccsu.edu/CS151/cs151java.html
Couldn't agree more.
"Java Concurrency in Practice" by Goetz&amp;friends is a really good book on the subject.
If this is work-related, you may want to ask permission from your boss before putting any of it online.
OK, I found [this bug](http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=5097859). It seems that you can ignore the warning text because for some reason Preferences class prints a lot of useless ~~garbage~~[logs](http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=8019289) to System.err ;) I guess it shoud silently create HKEY_CURRENT_USER\Software\JavaSoft\Prefs\... as expected.
Awesome thanks. Not sure how I missed that!
This! This gentleman knows what he's talking about. This works. Adding the key solved it immediately. Just to make sure I've deleted it and restarted the laptop and I got same choppy 2fps. Adding the key brings it to a smooth animation.
Of course I wouldn't do that. The "job" is an internship and the code is just an exercise for my development. Besides, I said it's from Eckel's book - "Thinking in Java"
I found my solution, but if anyone is still interested, here's my horrible code https://www.dropbox.com/s/npygtabhqrk9w7j/RotatingSquares.zip
The other reason why it's important is basic idiomatic understanding. As an example, if I speak to someone in olde English, they can understand me, but it is more of a chore to carry on a conversation. Practicing the idiomatic conventions of a language makes your code more easy to read across a broader audience, increasing the maintainability of the code. This typically applies per language. I would attempt to avoid using snake case in Java just like I would attempt to avoid conventions like using camel case and explicit getters and setters in Ruby.
try [Cave of Programming](http://www.youtube.com/user/caveofprogramming) youtube channel 
Your title really sucks. Edit: actual help: - use an IDE. You have syntax errors which the IDE can point out to you. - see http://www.reddit.com/r/learnjava
i apologize that it is asked again and again, I am not a normal reddit user, I was told that the community here is quite helpful and can assist. There are plenty of people that have offered answers and don't mind at all sharing an answer that is not one such as yours. 
I was watching his videos for awhile but noticed that he was back tracking a lot.. and mis-representing a lot of concepts.... Thanks for verifying that this was indeed a good choice to not watch his videos anymore.
I'm sorry if it upsets you to be pointed to other threads that answer what you're looking for. I wonder if I should dare to mention /r/androiddev or not. Seeing as it's another pointer to a useful resource. Whether you are a "normal reddit user" or not doesn't matter in my opinion: as a developer you should be able to use the search function, and use it in abundance.
I suggest you the videos of Bucky Roberts, located at http://thenewboston.org/list.php?cat=6 This dude is simply amazing at teaching.
 import java.util.Random; public class CoinFlip { private int heads = 0; // ... public static void main(String[] args) { // ... } public void makeRandom() { // ... } } 
I'm not angry at all. I just didn't see the point to your post and was merely letting you know, for your future reference, that there are newcomers to this site that aren't exactly aware of the already established information. I did sift through a lot of posts and didn't see one that was very helpful before I posted.
i do thank you for the offhand point to /r/androiddev.
Before starting on Android, have some understanding of Java: Have a look at /r/javahelp and the wikis. There are plenty of resources for learning Java. A good start is also the Oracle site on Java - their tutorials are easy to follow and quite thorough. [udemy](http://udemy.com) has many (paid and free) course on Java I guess that Google (not the search engine, but the company) will have some tutorials specifically for Android programming since they are the ones who created Android.
&gt; Older processors had fewer cores, but each core had more performance. The E7500 came out Q1 2009. The i5-2540m came out 2 years later. I don't care how fast single core performance was; it's not going to beat something that came out 2 years later. Plus OP very clearly said: &gt;Also the task manager shows the java not using much of CPU at all on my laptop which means it has to be a GPU acceleration-related issue.
&gt; The reason is simple: Your drawing happens in the event-Thread, so it can only be executed by one processor core. Older processors had fewer cores, but each core had more performance. &gt; Thats a Myth see http://youtu.be/MC1EKLQ2Wmg?t=3m51s (thats single-threaded) 
what? your 4770k is clocked at 3.5GHz, thats the same for each core. they are independent, you don't divide the clock rate by the number of cores, that's just nonsense. 
Unfortunately I can no longer reply to /u/robepes, but here's what he wrote: &gt;wat. &gt;I have a 4770k (came out a few months ago) that is base clocked at 3.5GHz. It has 4 (or 8 depending on situation) cores. That means that mathematically each core is running at most 875GHz. &gt;The E7500 is clocked at 2.93GHz with 2 cores. That is 1465GHz per core, roughly 1.7x the speed of the processor I spent big money on a few months earlier. &gt;When dealing with a single core process, the E7500 would blow the 4770k out of the water. And here's what I wrote: &gt;&gt;That means that mathematically each core is running at most 875GHz. &gt;Wat...that's not how these things work. Each core runs at (up to) 3.5 GHz (excluding Turbo Boost, in which case some cores can go higher while the others site idle). &gt;&gt;When dealing with a single core process, the E7500 would blow the 4770k out of the water. &gt;No. Just no. &gt;Even if you were correct in that the GHz are divided among the processors, that the 4770k has a lower number still doesn't mean anything. That is a fallacy known as the "Megahertz Myth", and it stopped working on most consumers around the mid-2000s. &gt;Even if the "Megahertz Myth" wasn't a myth, I still don't see where you got 875 GHz (I assume you meant MHz). &gt;And this is still false: &gt;&gt; It has 4 (or 8 depending on situation) &gt;No, it has 4 physical cores. Those cores can each also be 2 logical cores if enabled in the BIOS/EFI. It doesn't spontaneously change, and either way it still only has 4 physical cores. Each of those 4 cores has some duplicated parts so that you may switch execution threads without a heavy context switch penalty. &gt;And we know Moore's law says that performance goes up about 2x every 18-24 months. What you are saying implies that we've gone from a total of 2.93 GHz (spread over 2 cores) to a total of 3.5 GHz (spread over 4 or 8 cores), an increase of about 17%, in the last 4.5 years or so. That is total nonsense. &gt;I dare you to find any single-threaded benchmark on which the E7500 even comes close to the 4770k. I double dare you. I triple dare you. I also dare you to measure your CPU's GHz (with cat /proc/cpuinfo in Linux, for example, or CPU-Z on Windows, etc.) and show me how your 4770k will only run at max 875 MHz per core. &gt;I have a master's degree in computer science. I did graduate work in computer architecture. I think I know what I am talking about. Please, for the love of fucking God, learn a few things before you try to talk about CPUs.
You might also want to look at actor frameworks such as Akka. They make concurrency a lot easier, by avoiding shared mutable state and relying on message passing instead. And although it was written in Scala, it's convenient to use from Java: http://akka.io/
Ahhh that's awesome. Thanks for your help!
Thank you all for your replies. It is very much appreciated!!!!
If you look at the fields and return types of your Queue they are all int. You have a queue that can only handle integers. You need to replace that with either Customer, or you can use a generic type.
What environment are you running in - specifically what OS is this running on? I've seen something similar with Websphere's preferences not persisting on a Windows 2008 Server (and in the process causing navigation around the WAS admin console to slow to a crawl), but my Googling's letting me down at the moment I'm afraid.
Seriously, this book is one of the best investments you could make. Incredibly comprehensive but really easy to read. Can't recommend it enough. Concurrency is a very deep subject and can lead to all kinds of nastiness if you're just copying some sample code from online without knowing precisely what it's doing and why.
The Netbeans UI is much easier to navigate. The only real complaint I have with IntelliJ is that is does the "rebuild" every time I open the project back up. I understand why but still a little annoying. I don't have anything good to say about eclipse so I won't say anything.
I hadn't heard the Android part. What are they moving to?
The [Maven By Example](http://books.sonatype.com/mvnex-book/reference/multimodule.html) book has a very good example setting up a multi-module build, step-by-step.
You might use Eclipse or IntelliJ for the Java but do you use any developer tools for the frontend or just text editing?
Cool, thanks, will check it out. 
im like 200 pages into head into java and i like it. I am learning good the concepts but not enough examples, you have to give yourself your own examples and make your own tests. I hate the puzzles, i dont feel they help learning, they are really just made for people who like puzzles. I also hate the sharpen your pencil, i wish everything had answers, especially something geared to noobs. However, i am glad i chose it as my first book. Afterwards i was going to skim through the official docs to get a better understanding
Well, you'll want to use an API to get the data from the job sites. Don't just read the HTML.
The @ManagedBean is being depricated. It was mostly needed because CDI lacked a conversation scope. The only disadvantage to the CDI is you have to have an EE server.
Basically I think this is true for new projects. There are still a lot of old projects out there that use Spring and they will be around for a good while. 
Ya I can see the puzzles not being the favorite thing. I liked it becaues it made me feel like I understood the concepts that I just learned when i got it right. I'm glad someone else is having a good experience with the book :)
d c e ?
The important distinctions are between OpenJDK and OracleJDK. OpenJDK is the entirely open source (GPL) implementation of the Java specification. OracleJDK is Oracle's product based upon OpenJDK and includes some closed source components including the Java Plugin, Web Start, Access Bridge, Mission Control, Flight Recorder and some other bits (licensed and/or patented code from 3rd parties). HotSpot is the JIT used by both OpenJDK and OracleJDK though the Oracle version includes support for commercial features (mostly Flight Recorder). You can create your own builds of OpenJDK or use builds bundled with various linux distributions, commonly IcedTea, RedHat's free software Java implementation based upon OpenJDK.
In open source terms, OpenJDK is upstream from Java SE. But, Oracle demands that all contributors sign an agreement to let Oracle use the code in their non-open-source JavaSE. It's been estimated that JavaSE is 90% or likely even more, identical to OpenJDK. OpenJDK is a large and complex project with many sub projects. Hotspot is one of those sub projects. To be clear, Hotspot *is* the JVM shipped with OpenJDK. Muddying the waters is Oracle more recently acquiring BEA and the JRockit JVM. Some features from JRockit are being merged into Hotspot, but it's not clear whether all of this will happen in the OpenJDK project or just internally at Oracle for JavaSE.
I'm developing it on Linux but I was testing it on Windows 7 in a VM. 
No, get the book. Really.
So does the jvm from OpenJDK require the daily patches that the jvm on windows does?
So does the jvm from OpenJDK require the daily patches that the jvm on windows does?
On Windows it seems like I'm constantly being asked to apply security patches.
You aren't correctly updating then. If you click update and actually update you won't get asked more than once a month and likely less than that. 
Collections.shuffle
IntelliJ is about a thousand times smarter when it comes to code analysis. The entire IntelliJ toolset is better too -- everything just works without any real hassle. Eclipse's way of handling projects is beyond stupid and does not integrate with anything, for example, Maven. One time I accidentally got Eclipse to recursively create subdirectories without end until I force killed Java. I have no idea how this happened during a project import. Even worse was that somehow the thing was able to create these subdirectories so recursively deep that normal system tools would not delete them (path was that long), so I wrote a program to unfuck my system. Edit: And the GUI is awful. Like, pile of garbage that was lit on fire bad. Though my opinions were formed four or five years ago and ever since buying IntelliJ for myself I have become way more productive and write cleaner code.
Focus less on just Java and software engineering generally. Go buy and read *Design Patterns* by Gamma, Helm, Johnson, and Vlissides. Go try your hand at database design and SQL, even if you're more into the latest NoSQL stuff or whatever. Try to learn concurrent/threaded programming (for Java, go buy and read *Java Concurrency in Practice* by Goetz, Peierls, Bloch, et al). Study unit testing and learn how to use JUnit and other such libraries.
You are either exaggerating about "daily patches" or you are declining the update and it's just reminding you daily. As someone who works with this stuff, let me caution you to definitely accept Java updates when offered, especially if you have Java enabled in any web browser. Because of the shared code base, pretty much all of the same security issues that affect JavaSE also affect OpenJDK. Oracle, for complicated reasons having to do with producing a supported software platform for enterprise customers, schedules [security updates](http://www.oracle.com/technetwork/topics/security/alerts-086861.html) to happen for Java usually 4-5 times a year. A similar update is done at the same time for other vendors (possibly linux distributions) of OpenJDK-based Java.
Short answer: Oracle owns it all, but most of it is also published under an open source license. Differences? That's a harder question, would require indepth knowledge of both projects at a source level. But, I've never looked at JavaSE source code, because the license agreement to see it would prohibit me from contributing to any other Java implementation. Besides, I've only seen a subset of the gigantic code base of OpenJDK (and grokked only a subset of that which I've seen). But, I've inferred some things in various ways, so here's my bullet point attempt: * It's my understanding that there are some (but not a lot) of performance differences that depending on your workload could make one or the other of bare OpenJDK vs JavaSE more attractive. One performs better for some benchmarks, and vice versa. YMMV etc etc. * JavaSE comes with an Oracle implementation of browser plugin and WebStart. These are not part of the JDK/JRE spec, and are not part of OpenJDK. There are open source implementations that seem to do mostly the same thing, but because there is no published standard there may be differences. * Some monitoring/serviceability features for the JVM are available via only Oracle-supported Java releases, and are not supported in OpenJDK.
Why 1000 responses, when only one is needed? http://www.youtube.com/watch?v=UPatfgoNBRo 
I don't believe java is dying, in fact i'd say with Java 8 the opposite is likely to be true. That being said, if I just went off the amount of "Java is not dead" posts on this subreddit I'd think it was cobol. The constant need for our community to validate itself is a bit pitiful. Can we stop with these posts now?
Java is dying? First I've heard about it. Regardless, there's not much to replace it. Scala is the only viable successor and people aren't catching onto it yet, it's not very widely used. Groovy just made the top 20 in TIOBE, but I wouldn't see a dynamic language as a viable replacement.
I like Scala, but it will not be successor of Java. It's too complicated for many people which are productive Java programmers. Java as a language is lacking many features that exist in languages that are getting popular recently. But this is the reason why business likes it. You don't need really ambitious and talented engineers. You can have many people working on one codebase without risk that they won't understand each others code (I used to work with C++ projects before, where this is an issue).
There are a certain type of software engineer that's moving away from java, usually to other JVM languages, and possibly C# but these languages rely and inherit so much from java anyway. there are many moving to java and the JVM family from other languages (php / ruby spring to mind) as they find out their platforms can't scale like java can. i myself am using C# and scala a lot more these days but i'm not myopic enough to call this the death of java. 
That means you have declined and update and it is reminding you daily like someone mentioned earlier. Just do the update and it will leave you alone.
Haswell is as fast as NetBurst, right. But a core of a Sandy-Bridge-Processor is slower than a NetBurst processor.
Use philosophy thinking tools to learn how to hold contradictory viewpoints in your head simultaneously. Then start adding moving parts. Then start adding shared state. Then learn how to imagine one process has no view of the other's nonshared state.
I think Java can be more popular on desktop with JavaFX, if we gain the ability to only include parts of the runtime environment in our applications. In which case from the perspective of the user there would be no difference using a native or a Java application. And I think that the JVM is a magnificient technology, which keeps evolving, and Java can be used as a substitute more and more for the mid-level programming languages. Java is unique in that it abstracts away a whole range of platform differences, containing sane abstractions and optimal solutions. 
 // be REALLY sure that nobody attempts some SQL injection here input = input.replaceAll("[\"']+", "------"); Or someone is really effective in escaping [Unicode codepoints U+2018 through U+201D](http://www.fileformat.info/info/unicode/block/general_punctuation/list.htm). Otherwise, this is somewhat remiscient of the analogies featured in TL;DRs in /r/talesfromtechsupport.
IntelliJ appears to be taking a sharp turn towards being an android IDE in the next version, which scares me because I develop enterprise software and I don't want its focus to be in a different area.
It's the Java semantics I'm trying to wrap my head around, not the underlying philosophical implications. I've been here before, just not in Java.
Well now that I have your attention, I skimmed your video, and it doesn't seem like you are following very many best practices. Why not use an enumeration for card value and suit? Why not use collections.shuffle? Why not write a real unit test? Why not use iterators instead of for loops?
I'll almost miss Boulder... almost. ;]
But why not just post [the link](http://regionalhelpwanted.com/search/detail.cfm?sn=38&amp;id=96473263)?
Gotta love the straight talk - even if it sounds like he's high. Much more fun to read than the re-gurgitated crap they dish out as JD's these days.
i see on amazon it is only 2nd edition and about 4 years old. Would it be considered outdated? I don't know much about java and looking for a self-teach book as well.
 CoinFlip randin = new CoinFlip(); Then later: Random randin = new Random(); You declare randin to be one type, then you declare the same name again, in the same scope, to be a different type. You can't do that. Use a different name for one of those variables. There are other problems with your code, but that is why you're getting those errors. 
Well, what else will the fauxgrammers write about? As biffsocko said, Perl went through a "Perl is dying" phase, but they never spoke about it, and now it *is* dying. If the advocates don't speak up, the naysayers get all the airtime.
Proper being the point. Experts can argue about thumb placement when lifting but they all agree on some basics. You wouldn't want to learn from someone who was getting the basics wrong, even if you recognize and can adapt to it, because you can't trust them to know what they're doing later.
Job posts come and go. Thanks for posting it though
"Yeah, I'm here to apply for the truck driver job?"
What davedontmind said. It looks like you've accidentally put all of your code in the method "makeRandom". Try moving lines 8-22 into your "main" method.
As text with apostrophe fixed: Senior Java - concurrency, multi-threading What I do know is that I have a client that is processing a metric-F ton of data every hour and they need some new Java developers to drive the data trucks up to the mouth of the mine when the last one gets full. The problem is that scheduling these trucks has turned out to be tricky because while I can have a couple trucks concurrently filling up, someone locked their keys in the truck while it was running and accidentally left it in gear (something about they thought it was in park, I guess because it was on a slight hill and wasn’t going anywhere). So anyways, what happened was that the truck started getting filled up and then started running away down the road only half full of data, which caused this big problem because I was expecting to only fill 12 trucks and I had to fill 13 (unlucky numbers and all that), so it threw the whole system out of whack. Obviously, I am talking about multi-threading, concurrency and other fun stuff that you Java devs do all the time like it’s nothing. But in fact our client is willing to pay you really well for knowing how to do it because they need like 6 awesome people like you that love my little story up there and immediately realized how silly it was that I tried to write a story about lock conditions and run away processes in the context of this job that I’m trying to convince you to apply for. Apply for it! Are you applying yet? NoSQL is a buzzword now because everyone is using NoSQL for storing data and accessing it really fast when they need it. Yeah, this job uses it. Knowing how to work with it, or having Patrick Swayze move your hands for you while you work on it, is kind of important with this job but not exactly required. It totally helps, especially if after the Patrick Swayze spectre realizes you’re not the chick from that movie and leaves, that you still know how to work with NoSQL. Seriously, you don’t have to know how to work with it " just be willing to be taught by someone, Swayze or not. Ok, if that last paragraph didn’t convince you, what’s it going to take? Algorithms. Did that work? People who write open source software totally rock my world, because it means that I don’t have to write the software. I am a dev too, but switched careers to help other devs find jobs. Sounds sappy, but it’s kind of true (more on this later-no, not really). When I don’t have to write the software it leaves me time to remember an awesome quote by Isaac Newton, ‘If I have seen further, it is by standing on the shoulders of giants’ Which of course in a grand sense means that I can do more now to further my quest through the forest of whateverness by using someone else’s code and writing new code on top of that code to do new stuff that is way cooler than the code I used. Yeah, that. Our client does that all the time, because it rocks and means they can innovate and create new awesome stuff without reinventing the wheel every time they want a taco. OK, so now that you are completely ready to give me your resume I should tell you that this job is in Boulder, CO. Yeah, I know what you’re thinking, ‘I don’t live in Boulder, CO. I live in (fill in the blank).’ Well, that’s fine. Once I show my peeps how awesome you are, they’ll help you move. They won’t come to your domicile and pack up your crap into boxes and put it on the truck for you. They are more likely to throw you a few bills so YOU can pack up your crap and put it on a truck. In order to be convinced to do that though, you’ve gotta be this tall to ride: If your career was a malamute, it would be 70 dog-years old and have built Java code it’s whole life instead of staring at the kitchen hoping for a piece of steak to hit the floor. If you could automate your interview process, you would have to build a robot that could take verbal requests for algorithm examples and then draw them on a white board. You don’t have to build a robot and I hope that your career is not a malamute (if it is, please send us an email how you did that), but you will have to show how you know some stuff and that you can demonstrate it. Otherwise, how are these guys going to know that you know what you know. You know? Did you just ask me if you could apply for this job? Seriously? I’ve have been trying to convince you this whole time and you waiting till the end to ask? Where did I go wrong? I would have bet money that I had you with ‘Algorithms’ in my awesome voice. Oh well, I guess you can email your resume and a link to your favorite website to Patty at technicalintegrity dot com. Or call me at 303-663-6378. - See more at: http://regionalhelpwanted.com/search/detail.cfm?sn=38&amp;id=96473263#sthash.9TAggI3A.dpuf
That's not a java question. Also, do your own homework.
What, exactly, are you looking for? If you are simply looking for a place to download Java 6 for a Mac, try **[here](http://www.oracle.com/technetwork/java/javase/archive-139210.html)**.
The 2nd edition is the latest edition. Java 8 is due out March 2014 and there will probably be a new edition to go along with that.
I posted it as a link elsewhere... and I got yelled at about how it was stupid because the site asked to install an app or something and to post a screenshot. I can't please everyone. lol
Shame it's reliance on Java 7 and an outstanding bug in JDK 7u40 means I can't use it properly with a retina display on my rMBP (feel free to correct me though!). There are a few things I want to test out once a JDK update fixes that 
Has anyone used netbeans in the past for android dev? If so is it comparable to the eclipse plugin? The js framework inclusion is a nice touch on this release.
To expand on my previous comments: I'm guessing this is some sort of course work or homework, which is why I didn't originally go into details about the other problems in your code, but after some thought I decided to expand a little, in the hope that it'll be educational, so here are some comments about various parts of your code. When you run a Java program, where does it start? In main(), of course. What does the main() method in your CoinFlip class do? It does this: public static void main(String[] args) { } i.e. nothing. That should start alarm bells ringing immediately. What did you expect it to do? Flip some coins? Then put the code to flip coins in there. /u/Salusa gave the reason in his reply to my other comment. Also, what did you expect that first println to display? It will display something like "Flip was Heads5Flip was Tails" (when you fix the rest of the code) which I don't think you intended. My next comment is about your variable naming - a variable should be named clearly and concisely - i.e. the name should describe the basic function of the variable, but without being too verbose. So when you create an instance of the CoinFlip class, why do you call it "randin"? A name like "coinflip" or "flipper" would be much more suitable. Similarly, the method "makeRandom" is terribly named. Does it make some random thing? Not really. What does it actually do? It simulates a coin flip, so why isn't it called "flip" or "flipcoin" or "simulateFlip" or something like that? Finally, all code (other than quick throw-away programs) should contain comments (this is a major bugbear of mine - I'm currently trying to deal with someone else's multi-thousand-line JavaScript code that is totally uncommented - nightmare!). You don't need to write essays, but you should describe what a class or method is used for, explain *why* you do certain things, what any side effects are, give examples of expected usage, etc. If you don't have one already, get a text editor that does syntax higlighting, so things like comments stand out in a different colour. My rule of thumb is that your code should look pretty, both in layout, and in mixture of colours. :-) I understand you're only learning, but it's really important to get these things right early on so they become habit. Correct naming and commenting will not only help other people maintain your code, but will help future-you understand what the fuck past-you was thinking. 
Sadly not really, as the ADT is developed by Google, whereas NBAndroid is by volunteers.
Apple Java 6 for Mac OS X For Java versions 6 and below, Apple supplies their own version of Java. For Mac OS X 10.6 and below, use the Software Update feature (available on the Apple menu) to check that you have the most up-to-date version of Java 6 for your Mac. For issues related to Apple Java 6 on Mac, contact Apple Support. from : http://www.java.com/en/download/faq/java_6.xml try to see if application - &gt; utilities - &gt; java exists or try this at your own risk : http://apple-java-for-mac.en.softonic.com/mac/download
Cool and all, but I feel like IntelliJ is so far beyond both Netbeans and Eclipse that I wouldn't move back to either one.
How are you going to know if what you do is actually correct? You can't watch yourself while you do squats, so knowing that you must have a straight back, and get as far back as possible without falling really doesn't help much, if you can't get feedback on your performance. Do you need to go further back? Are you bending your knees enough? Are you feet facing the right way? In order to do these exercises correct while being alone, you must be able to feel that you're doing them right. You can't feel this from watching a video. 
Well I'm supposed to record myself and submit it to my coach, who then provides feedback.
What's with the open/closed division with IntelliJ? Is there a fork which adds some of the close source features to the open source version? Also, did it always have a community version?
Not going to argue WRT IntelliJ as a Java IDE: it is indeed very nice, and, if you're already used to it, there would be no reason to move. However, IDEA doesn't handle C or C++ yet, though I know they're working on it. So, for me, IDEA is neat and all, but not worth serious consideration yet. I do too much in C and/or hybrid C/Java work, and prefer to use one IDE as my primary environment (though I use Eclipse enough to keep my kb shortcut chops there, as well). When the new C/C++ functionality is released, you can bet I'll give it a go, though!
hello there, /r/fitness!
We're talking about "leaning" as a thing - not fitness.
What, you mean like this? public int addFirstTen() { int sum = 0; for ( int i = 1; i &lt;= 10; i++ ) sum += i; return sum; }
I agree, there are workarounds, but it's an operation I use at least a couple of times a day personally, which is far too frequent to not be annoyed by. Again though, it isn't the fault of the NB folks, and for now I'm just being patient on 7.3 with a Java 6 JVM to run it in. Edit: Also, there is the problem of *remembering* that you cannot use the delete function. It may also be the case that other actions have the same problem, but I haven't had the persistence to notice them.
Most likely, yes. Here's a line-by-line explanation of what's going on: * Line 1: Declare the method. It takes no arguments, hence there is nothing inside the parentheses. * Line 2: Declare an integer variable by the name of "sum" and give it the value 0. * Line 3: A for loop. Using the integer variable i, which is given the value 1, for as long as "i" is bellow or exactly 10, execute the body (line 4) and afterwards increase "i" by 1. * Line 4: Means: sum = sum + i, which again means that you add the value of "i" to the current value of "sum". So, if "sum" is 3, doing "sum += i" will mean that "sum" is now 7, because "i" is 4. * Line 5: Return the variable "sum", which now is the sum of all numbers from 1 to 10. * Line 6: End of method.
Clearly, I have a _very_ different understanding of the word 'hilarious'.
I'm going for the optimised approach: public int addFirstTen() { return 55; }
It seems to me you don't wish to learn. [As I said:](http://www.reddit.com/r/java/comments/1oifx2/hey_help_please/ccs85j) - Your title really sucks. Next time, be more specific. For example: "help with this error in java: variable is already defined". Then try pasting your specific title to google. - use an IDE. You have errors which the IDE can point out to you and even offer solutions. If you don't know what an IDE is, see https://www.google.com/#q=ide+for+java - see http://www.reddit.com/r/learnjava Don't post crap like this here again or I shall taunt you a third time.
I downloaded just the essentials of the Android dev kit in the hopes I could use it with NetBeans. Unfortunately, it seems like it is more trouble than it is worth. I guess I'll download the full install, which comes with the Eclipse IDE.
is there something wrong with android dev studio? why are you still using eclipse?
I am not. I was hoping to use my pre-existing install of NetBeans, but the set-up to develop Android apps using NetBeans seems to be more trouble than it is worth; therefore, I plan on using the version of Eclipse that comes with the full Android SDK install.
Just thought it was weird that you were making videos that look like tutorials if you have no idea what you are doing
+1 for noting that /u/Obfuscation could be a man **or** woman! 
&gt; You don't need really ambitious and talented engineers. You can have many people working on one codebase without risk that they won't understand each others code (I used to work with C++ projects before, where this is an issue). Exactly. There are a lot of barely capable developers who can eek out a living in a Java shop that will not get through the door in one using Scala or Clojure (or Erlang or F# or OCaml...) 
7u45 is out now. Don't know if it addresses the bug you mentioned.
If you are going according to [ASCII rules](http://en.wikipedia.org/wiki/Ascii), the order is: * Numbers (`0x30` to `0x39`) * Capital letters (`0x41` to `0x5A`) * Lowercase letters (`0x61` to `0x7A`) This is the order you will get when comparing two English strings in *most* programming languages, and in many [character encodings](http://en.wikipedia.org/wiki/Character_encoding). There is no overall absolute order, though. It mostly depends on the business use for the sorting. In some cases, it makes more sense to put numerical items at the end. It almost *always* is better to sort ignoring case when developing **for people**. Nobody really expects the list to be `D,E,F,a,b,c`. You really need to be careful these days, because blindly sorting based on ASCII values will almost certainly screw up when encountering [Unicode characters](http://en.wikipedia.org/wiki/Unicode) (UTF-8, for example) in [different locales](http://en.wikipedia.org/wiki/Locale). For example, how you sort `A`, `Ä`, and `Å` depends highly on the locale.
If you are running Windows there is no pattern, anything can happen. 
That's reassuring....
In the last question, you suggest there is no difference between `i=i+1`, `i++`, and `++i`, yet in the preceding questions, you answered that `i=i+1` yields a value of `11` for `i` while `i++` and `++i` yield values of `10` (with an initial value of `10` in all three cases). If the three expressions are equivalent (and I'm _not_ saying they are), why is your answer not the same for all three? I would follow the advice in the last question and do some more research. Here's one thing to consider: `i=i+1`, `i++`, and `++i` are not just statements; they are also _expressions_ (i.e., they don't just modify a value; they produce a value themselves). Maybe you should try assigning each of those expressions to a separate variable and see if/how the value of each expression compares to the new value of `i`.
This makes sense to me now. Thanks.
Java version? What kind of problems, can you be more specific?
I take it that the site owner isn't using prepared statements? &gt;_&lt;
&gt;Hey I'm trying to create a well designed collection of objects and had a question about my class structure. I want to create a simple bubble sort method using my previously created compareTo methods that belong to my object. Can this method belong to the class that describes the object? Or should I create a new class that describes a collection of objects and have the sort method belong to that class? If you're going to have just one object, your compareTo methods can belong to your object. If you're going to have more than one object, you should create a Collection class that contains the sort methods. Just like Java does with the different object classes used by the Collection class.
Boulder CO. Probably is high
Hazelcast.
If you are looking for a different approach: //method declaration - called addRange, takes 2 int arguments, x and y, returns an int total public static int addRange(int x, int y) { //check direction of range and call recursively if (x &lt; y) { return x + addRange(x+1, y); } else if (x &gt; y) { return x + addRange(x-1, y); } else { //base case return x; } }
Yes, do be as specific as possible about your problem, but try very hard not to post your company's proprietary code in the process. (We had to fire a guy for this.)
Yeah, that's what I am trying not to do....
This question is probably testing your ability to write efficient code. Solution with a for-loop has a complexity of O(n) where n is the size of your range, namely y - x. Basically, the program has to visit all numbers that fall between x and y in order to come up with an answer. Imagine the case of x = 0 and y equals a really large number. You program will take a while to run. A much more efficient solution, which has a complexity of O(1), is given as follow. You can see that it doesn't matter how big y is, the program can always return the answer in several calculations. public int addRange(int x, int y) { return (x + y) * (y - x + 1)/2.0 } 
/r/learnprogramming enjoy!
Note that this is all in JUnit by the way.... Uh, I'm not sure what you mean by "unexpected version"?
The answer is to call one of the methods on the List interface, described at http://docs.oracle.com/javase/7/docs/api/java/util/List.html I'm not going to spell out which one as being able to read and understand Javadoc is important.
Hilarious - just like Data Warehouse work can translate into running one of those cool trucks they have at the big box hardware stores... 
Then just use the debugger and follow the code path... they must differ in some way. 
Thanks for the heads up. I'll give it a look, but given there hasn't been any mention of a fix on the issue tracker I'm doubtful one will be included yet. Fingers crossed, though Edit: Unfortunately, no such luck, so left stuck on NB 7.3 running on a 1.6 JVM.
If you go on Google and type "learn programming" literally the first result is http://www.codecademy.com/ and the second is http://www.reddit.com/r/LearnProgramming Google is one of the best resources that a programmer has at their disposal, I recommend getting more acquainted with its features before moving forward 
Given that this is [your second topic asking for help](http://www.reddit.com/r/java/comments/1ol1w3/new_to_java_need_homework_help/) today, and that you've asked it after you were given a decent answer in the other topic by /u/Izmaki ([link](http://www.reddit.com/r/java/comments/1ol1w3/new_to_java_need_homework_help/ccsza32)), you're just coming across as lazy. Questions like this should be posted to /r/javahelp, but you should also be posting the code that you've got so far with specific questions. You're not going to learn anything by getting others to do all your work for you.
So basically any shop that employs lots of functional programming? This isn't intended to be snarky - but is functional programming considered to be a lot harder than OO and iterative approaches? I guess people tend to abstract ideas into "things", so to speak.
Perl still serves a purpose, though, right? Is it still a really good language for manipulating and examining text?
It seems like you may not understand number representation. The number 1837 in base 10 is 1 * 10^3 + 8 * 10^2 + 3 * 10^2 + 7 * 10^0 . All bases work exactly this way. So the operative question when converting is what is an n such that x^n &lt;= y where you know y and x. The simplest way to convert bases is something like this: long pow = originalBase; long real = value % 10; while (value &gt; 0) { value /= 10; real += (value % 10) * pow; pow *= originalBase; } // yay... real now has the number stored normally // find x such that x = target ^ x &lt;= real // string building loop // (real / x) * x is now a number &lt;= real and real / x is 1 digit in the target base // real -= (real / x) * x // x /= target... and back to the beginning of the loop Let's step through 1 complete conversion. I'll do 1816 in base 10 to base 7. * 343 (7^3 ) is the highest power of 7 &lt;= 1816 (use a simple loop to find this) * 1816 / 343 = 5 (so the first digit is 5) * 1816 - (5 * 343) = 101 * 343 / 7 = 49 (this is the next lower power of 7) * 101 / 49 = 2 (this is the next digit) * 101 - (2 * 49) = 3 * 49 / 7 = 7 * 3 / 7 = 0 (this is the next digit) * 3 - 0 = 3 * 7 / 7 = 1 * 3 / 1 = 3 (this is the next digit) * 3 - 3 = 0 (don't break the loop here or you'll miss trailing zeros) * 1 / 7 = 0 (here's okay to break) So the result is 5203 in base 7 which is 5 * 7^3 + 2 * 7^2 + 0 * 7^1 + 3 * 7^0 .
&gt; 3 2 2 0 n 3 3 2 1 0
Looping is a fine way to find the x this way, but if real &gt; 0, it is equal to: int x = (int) Math.pow(target, Math.floor(Math.log(real) / Math.log(target)));
Looks cool. Should try it out. Anyone already did?
There was a huge collection of various Java language proposals (including multiline Strings): https://wikis.oracle.com/display/ProjectCoin/2009ProposalsTOC
I personally started to learn Java from http://thenewboston.org/tutorials.php 
Oh, yes, I remember that list. Some nice items on there.
Hasn't it always been part of Spring Framework?
I'd like to get verbatim strings (or whatever they're called) like C# has, so you don't have to escape characters. You put in an @ before the string and then type it out. Stuff like @"c:\temp\stuff" where you don't have to escape the \. Also, proper generics.
I wouldn't say that IntelliJ is that far ahead of Netbeans. In some areas IntelliJ is better, in others Netbeans. I moved to IntelliJ after I bought a license for cheap last year and sometimes I really miss Netbeans. The Maven integration is by far the best out there. The code recommendations were often better than the ones in IntelliJ. Seriously, IntelliJ. What the hell is wrong with you. When I start to type File I always get "FileNotFoundException" as the first suggestion. It should be pretty obvious that unless I am inside the brackets of a catch block I want to type File file = new File("whatever"); I think the suggestions are the one thing that annoys me the most in IntelliJ. They are so bad, compared to Netbeans.
Feel polished.
Collection literals would be great!
Yes, literal strings would be very nice as well. What's wrong with the current generics?
Yeah, raw strings as they are called in Python. Not only for Windows paths, but also for regular expressions that either need a mess of backslashes or `Pattern.quote()` to work.
Yes, that is what I meant. Nobody knows why this isn't going to be in JDK 8 any more. It was planned...
I vote collection literals too. I really miss them. Something like: List&lt;String&gt; x = ["hello", "world"]; Also index access would be very useful and also very easy to add.. Just add an interface like "IndexAccessible" with a get(int idx) and set(int idx, T value) and some syntactic sugar, and you're done. myCollection[2] = "hello"; myMap["key"] = 33; I'd also like to have a variable declaration that doesn't require explicit type, like a "var" or the ":=" operator: var n = 10; // like int n n := 10; // like before. n is a new variable var m = MyObject.toString() // like String m var a = getTeamPlayers() // like Map&lt;String, List&lt;Player&gt;&gt; a This would save typing for long types as the above. Of course variables are still strictly typed, just the type is inferred (this is how Go works, btw). Another thing i'd like is an optional "close" methods on Iterator (or a child interface ClosableIterator), so that the foreach cycle would call it when it's done cycling (like in a finally). The reason behing this is that foreach could be much more powerfull, but often when you cycle something you use up some resources that must be freed at the end. Think about resultsets from a db. You could do something like: for(Row p : db.query("select * from person") ) { System.out.println(p); } Currently you can't do this becouse the resources associated with the iterator would not be freed.
~~I don't care how awesome it is. Closed-source VCS is a terrible idea, and I will not touch it with a ten-foot pole.~~ Edit: Apparently this is a standalone diff tool, and I was under the mistaken impression that it is an integral part of a VCS.
 &gt; var n = 10; Should n be an int or a long?
Uhm... flamer. Danger, danger.
It is not a vcs but a diff and merge tool that you can plug to any vcs. Anyway, if you prefer text based diffs... enjoy :O
Ah, I am not a big fan of type inference. Explicitly typing a variable is much safer than having to look up what a method returns or, god forbid, having the compiler decide how to type a literal.
Looking at the list /u/__konrad linked it was already planned for Java 7.
Oh. I was under the impression this was part of a VCS. My mistake, then, I guess.
Hudda hudda huh.
Can we please spend LESS time sailing and MORE time fixing bugs? Please?
Best place to start is the official [Java tutorial](http://docs.oracle.com/javase/tutorial/). There are a series of "Trails" listed. Do the trails in the Trails Covering the Basics section on the linked page above. Don't worry about the trails about creating GUI's - that's irrelevant to what you want to do. You can do the specialised trails at the bottom of the page when you need them. Maybe do the networking one since that's one of the things what you want to use Java for. Since you're looking at writing webapp's - you may also want to check out the [Java EE Web Profile](http://www.oracle.com/technetwork/java/javaee/downloads/java-ee-sdk-7-web-downloads-1956240.html). It's basically the parts of Java Enterprise Edition that only contains the bits relevant to writing web apps. There is a tutorial in the Java EE download. Have fun.
Is there a version of this for Jetbrains?
Explicity type is not any more or less safe than implicit, as the compiler infer a correct type for you, or else it doesn't compile. It's exacly the same safety. Note that when you do: long x = 10; you're creating an int and the compiler insert a type cast (that is eventually optimized away), but it still regard 10 as an int literal. The compiler already decide how you type a literal: 10 is int, 10L is long, 10f is float, etc. You can ignore it and type all your literals as int, but it's you that's wrong. The only argument one could move against "var" is that the reader loses some information. Seeing soemthing like this means you don't know the type of either the left or right part: var x = unknownMethod(); The question is: how much better is knowing the type vs having more coincise, readable sources? After all, x will be used pretty soon in the code, so the important information is that x is being passed around between methods, the type is only relevant when you need to work with it. Consider the following: var x = createRectangle(side1, side2); var area = calculateArea(x); System.out.println("Area is "+area); Do you really need to know if x is a Rectangle, or a Point[] or a String to understand the code? And if you're working with an external library and know that x is H2RectangleImpl, does it tells you anything more than "var", without reading some docs? Also note that this "var" concept is already implemented in java8, for example when you declare a lambda: list.filter(p -&gt; { return p.getGender() == Person.Sex.MALE &amp;&amp; p.getAge() &gt;= 18 &amp;&amp; p.getAge() &lt;= 25; }); Here the type of p never appears and is inferred automatically based on the context, exacly as my "var".
My mouse doesn't cost $45 a year, or even $45 forever.
you can do the last one with try-with-resources, which admittedly isn't very elegant...
yes that's what you can do now, and i do that very frequently in my code (for example with BerkeleyDB) try(Cursor c = db.query("select * from person")) { for(Row p : c) { System.out.println(p); } } As you said it could be more elegant since the try line could be completely removed with ClosableIterator
First, have you measured your memory usage? Have you tried JVisualVM? Tried increasing the max heap size?
Then we'll have a special price for you! :)
&gt; Serialize the Strings to and from byte **arrays** Are you are suggesting I pass an Object[] containing byte[] Objects instead of String Objects? This is probably less performant than the current solution as you still need to make 2N calls to box and unbox the data, and need to make an addition 2N calls in Java space to convert the byte[] Objects to String Objects. It's possible that N calls to NewByteArray/SetByteArray region is faster than N calls to NewStringUTF/SetObjectArray, but the N conversions into Strings and N conversions back into byte[] in Java space probably negate any benefit. It is also possible you mean to convert the array of C strings into a single large byte[], which is passed into Java and tokenized on the Java side. This is an idea I considered, but was unsure how the overhead of turning a delimited byte[] into a String[] coupled with the overhead of constructing the initial byte[] would compare with the current method. You would still be creating N String[], but the Object construction is happening in the JVM, which might be able to JIT understand that N instances are being populated and batch allocate them. A worry with this method is the only way I know to perform the tokenization is: String[] tokenizedArray = new String(bigByteArray).split(delimiter); which has the unfortunate side effect of adding a potentially *very* large String to Java's String table. I am dealing with megabytes of character data per invocation, with potentially many invocations. What's more, the only "safe" delimiter in the byte[] is '\0' and I'm unsure how the String class reacts to a byte[] initializer that contains null bytes. Thoughts/clarification? The performance benefits seem dubious, but I am not a Java/JVM expert, which is why I'm asking here!
try increasing the initial memory pool and maximum memory when running the application using -xmx and -xms parameters, the default maximums is 256MB so try 1GB or more depending on the available memory in your system. for example use "java HelloWorld -Xmx1024m -Xms512m" for more info about these parameters see their sections here: http://docs.oracle.com/cd/E13150_01/jrockit_jvm/jrockit/jrdocs/refman/optionX.html here is a random question on stackoverflow about them: http://stackoverflow.com/questions/14763079/what-are-the-xms-and-xmx-parameter-in-jvms
Not necessarily functional programming. C and C++ are good examples where poor or mediocre programmers cause more harm than good. Or any shop that requires concurrency. I don't think it's an issue of FP being harder than OO or iterative approaches, rather many people are not exposed to different paradigms and do not have the gestalt of 'programming' in the abstract to handle language changes. Thinking about problems functionally can have a big impact on how one designs and implements solutions to particular problems. 
I disagree with you 115%. &gt; Explicity type is not any more or less safe than implicit, as the compiler infer a correct type for you, or else it doesn't compile. It's exacly the same safety. But what if your understanding of what the compiler will do is wrong? In the instance of clearly declared types, you'll get the error at the site you created the variable. In the case of type inference, you'll get the error when you use the variable wrong. I much prefer the former. &gt; The only argument one could move against "var" is that the reader loses some information. It's not the only argument, but this is a monumental problem. Code is read more often than it is written. &gt; The question is: how much better is knowing the type vs having more coincise, readable sources? After all, x will be used pretty soon in the code, so the important information is that x is being passed around between methods, the type is only relevant when you need to work with it. Knowing the type makes your code *more* readable, not less readable. Conciseness in code that needs to be maintained is a fool's errand. Verbosity is one of Java's greatest *strengths*, not weaknesses. &gt; Do you really need to know if x is a Rectangle, or a Point[] or a String to understand the code? And if you're working with an external library and know that x is H2RectangleImpl, does it tells you anything more than "var", without reading some docs? I might. It's impossible to be sure right now, but chances are pretty good that this information could be important later. A few keystrokes here saves a few minutes of thought later. &gt; Here the type of p never appears and is inferred automatically based on the context, exacly as my "var". No, not exactly. In this case, the lambda is more like a deferred expression. In C++ parlance, it's like an "rvalue". This is the same type of type inference as your int/long examination. Defining the type of an expression like this would be silly. There are really nice languages on the JVM that give you a lot of these features (Groovy comes to mind). Use those if implicit typing is your thing. I use Groovy often, myself, but not for larger codebases (&gt;1000sloc). 
* post questions like this to /r/javahelp * always post the exact error messages that you're getting * you can't declare two variables with the same name within the same scope (method/class/etc.), as you did with `n1` and `n2` within your `main` method.
How often do you write recursive methods? Just curious. Are you writing your own data structures?
http://spring.io/projects -&gt; http://projects.spring.io/spring-framework/ "Spring MVC web application and RESTful web service framework"
Does the community edition give a good enough taste of what's on offer?
Void is a really strange choice here. That exists for the reflection API. Anyway, if you want one thread to wait on another thread to complete a task, consider a [CountDownLatch](http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/CountDownLatch.html), or just do what erad said. Your current approach requires the other thread to poll `cacheFlusher`. 
I'd prefer you sign it for me, as I (again) am ignorant of all things Java. Just tell me what you need from me!
Send me a PM.
Depends on what I am doing, but at least every other week I write recursive methods for either parsing or network related things. 
Look in `chrome://plugins`. Not only can you enable and disable Java there, but also switch the builtin PDF viewer for a external vendor browser plugin, for example. The setting in the Java settings panel only controls whether Java *registers* with browsers. Modern browsers offer a custom choice which plugins to *enable*. Also verify you have the 32 bit version of the JRE, the 64 bit plugin only runs in 64 bit browsers (Waterfox, IE). If you want the 64 bit version for a resource intensive app like Minecraft, you can install both in parallel. 
Multiline strings. Seems like such an easy thing to implement.
I never felt the need for those. Any IDE creates them for you. I can't remember when I last wrote getters/setters myself.
I do not write them either but I really do not need all that extra boilerplate in my classes. It is just messy.
Almost everything in this thread already exists in Groovy.
* small, open sourced VM (except *GPL) * software as monolithic image or bundled with necessary libs * repository with libraries * hot-pluggable libraries (downloaded from repo on first use) * real IDE (with real "I") as a library * live environment (no compilation-test cycle) * Erlang's security model.
my guess would be that ant uses javac and eclipse uses its own compiler. so your not using the same compiler
+1 to this Even better would be to use the StAX cursor APIs in javax.xml.transform. That will let you read through the XML document only reading and parsing the underlying character from disk data as needed and keeping object creation to a bare minimum. And of course use VisualVM or something to get a heap dump so you actually know exactly what objects are using up your heap, blind optimizing can be a huge waste of time.
They're outdated, the download part is at least.
1. How would I check? 2. This brings up the question: why the difference anyway?
More important for C# since it lives in c:\windows land.
I guess your most expensive problem is that your C environment seems to use UTF-8 while chars and Strings in Java represent Unicode codepoints in UTF-16 (which is equal to wchar_t in WinNT). Whether JNI does that conversation, the JVM does that (through decoding/encoding UTF-8 byte arrays to/from Strings) or your C library does that (standard wchar.h functions, iconv, MultiByteToWideChar/WideToMultiByteChar Win32 API...) and you simply call NewString in the JNI on input, it's probably not going to differ much. Except in the second case, the JVM keeps both representations in memory.
Could it be using a different zip compression level? If you open the war files in a zip program, are the internal files a different size, or just the external size of the archive? If if its the .class files themselves that are different, use `javap`, possibly with the `-p` and `-v` options, to see what's different inside them.
That sounds more appropriate. I don't buy the whole "work out with the video" thing. Everybody needs their own routine, for whatever it is they want to do. By the way, this applies to programming and exercise...
&gt; But what if your understanding of what the compiler will do is wrong? In this case you should improve your understanding of the compiler. If your understanding of a car is wrong, you shouldn't be driving. I agree with you that errors are better at the actual error site, if possible. Note however that "var" is only "local" to a method, as methods parameters are still always declared. So any error will usually be contained within the method. &gt; Knowing the type makes your code more readable, not less readable I agree. But concise code is more readable than verbose code. What if knowledge and verbosity are against each other? As an example, java introduced the diamond operator just to reduce verbosity in spite of a little bit of (mostly redundant) knowledge. &gt; Verbosity is one of Java's greatest strengths, not weaknesses. Wait, the "good" verbosity of java is the one about class names and intelligent method names and other constructs, i like that too. I much prefer a "compareStringIgnoreCase" over a "strcmpic". But this two identical for cycle, i much prefer the shorter one. This is bad verbosity and java used to have a lot. for (Iterator&lt;Person&gt; iterator = p.iterator(); iterator.hasNext();) for (Person person : p) &gt; No, not exactly. In this case, the lambda is more like a deferred expression. In C++ parlance, it's like an "rvalue". This is the same type of type inference as your int/long examination. Completely wrong. I was going to explain this but i've finished working for today and it's time to go home :P
If only Groovy had universal "enterprise"-level acceptance. ;)
Wrong on both counts. Eclipse has its own bytecode compiler, ecj. Further, while the Java specification details the sematics of the Java language, and the VM spec details the specifics of both the bytecode and the virtual machine, there are many degrees of freedom WRT transforming Java source into bytecode. javac vs. ecj is certainly the main casuse of different bytecode between the two situations. 
I'm on my phone otherwise I'd just cheat and tell you but I *think* it's a d b c e or a b d c e. Not sure which, but it definitely prints every letter, not just dce. 
Try static Groovy? @CompileStatic class MyGroovy { def static main(String [] args) { List&lt;String&gt; list = ['foo', 'bar', 'baz'] // or using type inference def list = ['foo', 'bar', 'baz'] println list[0] // baz list &lt;&lt; 'buzz' // 'foo', 'bar', 'baz', 'buzz' Map&lt;String, String&gt; map = ['foo':'bar'] // or def map = ['foo':'bar'] // or def map = ['foo':'bar'] as Map&lt;String,String&gt; map.foo = 'baz' println map.foo // baz // bonus collection: Range object def today = new Date() def nextWeek = today + 7 (today..nextWeek).each{ Date date -&gt; println date } } } 
Java 7 onwards doesn't it auto select 1/4 available ram on startup?
[C/C++ plugin for IntelliJ](http://plugins.jetbrains.com/plugin/1373?pr=idea). It's probably not the best support, but it's there. Also, you could use two IDEs.
Better take it to the cloud.
The internal files are a different size. I'll use the javap tool you mention and report back. 
You are bs. In my experience almost every case was individual. Maybe there is a pattern when you deliver specific software which includes native code, but in more general situation all what can go wrong someday will go wrong. Especially on Windows - this system is controlled by M$ , not you, so one sunny day and after minor update your perfectly working software may suddenly crash without warning.
&gt; In this case you should improve your understanding of the compiler. If your understanding of a car is wrong, you shouldn't be driving. Compilers are fantastically complex and sophisticated systems. By your logic, only highly experienced mechanics or automotive engineers should be driving. &gt; I agree with you that errors are better at the actual error site, if possible. Note however that "var" is only "local" to a method, as methods parameters are still always declared. So any error will usually be contained within the method. "local" to a method can be a terrifying prospect in large codebases. "real" software often already has miles of technical debt, and you've just arrived to help the company fix something or add a feature. &gt; I agree. But concise code is more readable than verbose code. What if knowledge and verbosity are against each other? As an example, java introduced the diamond operator just to reduce verbosity in spite of a little bit of (mostly redundant) knowledge. What knowledge do you lose? The type is declared on the same line, or the context is clear. In your examples, the type was never declared at all. Not having to issue the type twice is not the same as not having to issue the type at all. I also argue that consiceness does NOT always make code more readable. I find that code that takes a more verbose, but clear, structure tends to be much simpler to understand later. The example you provide (for-in loop) is just sugar. It simplifies a very common case. No information was lost, and it is clear what the iterator was doing. A 'var' keyword does not meet these requirements. &gt; Completely wrong. I was going to explain this but i've finished working for today and it's time to go home :P Perhaps our semantics differ, but I don't think you understood what I meant. Lambda functions, in Java, basically act as function literals. The type is made obvious by its use. However, at SOME point the type is clearly declared, unlike 'var'.
it does
Yeah, it sure does help!
How I saw it wrong. It is making a test object. I think it would be d a b e. I've never seen just static println method before but I suppose it would just be a static method but it is kinda strange. 
What's that mean?
That is ugly, yes. Ok, so let's have your annotations.
Oh god, yes. I would kill someone I don't like for this.
Memory aside, if you are attempting to compose a scene with millions (or perhaps merely thousands) of discrete visual elements, you are mostly likely going to run into severe performance problems. Even if the geometry itself is simple, the way you describe the scene suggests that the cubes are fairly "heavy", i.e., they participate in layout, respond to input events and hit testing, etc. I do not know much about JavaFX, but I have never seen a rich UI framework that can scale to the levels you are describing, even in 2D space. Things tend to get even worse in 3D space, particularly when you are dealing with discrete, interactive elements, as opposed to simply projecting a complex but non-interactive scene onto a simple UI surface. I would be surprised if you could make this work without "cheating" with some clever custom rendering, and probably custom hit testing that is more carefully tailored to your specific needs. There is some solid advice in this thread that may help with your runaway memory usage, but I fear your problems will not end there.
Yeah that is a strange block. I've never seen it before. 
Representation of C strings as UTF-8 is unavoidable in my case. I didn't know that Java Strings were UTF-16. I'm going to write up a few test cases and do some benchmarking to try to identify exactly what is slow. Thanks for the input!
[This probably doesn't explain it very well.](http://youtu.be/QUyHhA3u9Vc)
The main problem with multiline strings might be portability: have you saved your file as UNIX? DOS? Mac? Will \r or \n make any difference in your application? PHP supports multiline strings already through " " and &lt;&lt;&lt;EOF.
Is there a chance one of them is being compiled with debug information (line numbers, etc.) and the other one isn't? For example, one compiles with -g and the other one with -g:none. Usually when I have the same code compiled with different sizes this is what is happening...
I almost forgot! I really want to have methods that allow you to pass in infinite arguments and put them into an array of Objects (public void example(String str, ...)) in which the ellipses signify the extra parameters. 
That already exists, almost exactly as you described, since java 1.5: http://docs.oracle.com/javase/1.5.0/docs/guide/language/varargs.html public void example(String str, Object... args) // args is actually an Object array! (this is actually how printf("hello %s %s %s", x, y, z); works)
I currently am creating a compiler, and let me tell you this: type inference is extremely difficult. It is probably one of the hardest things, so my language does not have it. Another problem with type inference is that an error does not appear in the IDE when the value of a var is changed to a different type than when it was initialized. That is extremely dangerous, especially in libraries where the user has to guess what the "var x" means.
Java already has references -- all Objects are passed as references e.g. List&lt;String&gt; list = new ArrayList&lt;&gt;(); list.add(1); list.add(2); list.add(3); Collections.sort(list); // list is passed by reference and sorted! Primitives, however, are copied and are not passed by reference. EDIT: Technically Java is pass-by-value, however all Objects are pointers so the "value" of the pointer (a reference) is passed. This is the source of the very common phrase "objects are passed by reference and primitives are passed by value", which is incorrect but a very effective way to think about it.
A sane way to open and read a file.
What does being unable to use lambdas in enhanced for loops mean? Unable to call them or unable to create them? ANd how exactly is this caused by array not being Iterable?
Pointers or at least method references (eg. Pass a method to another method as a parameter and the former can invoke the latter without necessarily knowing what object it is attached to. Currently the only way to do this is with reflection (slow) or with a ton of interfaces (complex).
Oh man, it sounds like a great opportunity. Too bad i don't reside in the US.
I wouldn't mind property access. However I think implementing it via annotations is a bit of an abuse of annotations. I wouldn't mind a cleaner way to specify trivial getters and setters but I would prefer it be a keyword or some other syntax.
Seriously, fuck type erasure. So much rage. I have a fuzzy understanding of why it is what it is though, and suspect generics would be done in a less useful way if we demanded generic type knowledge at runtime.
An improved system to read and write from Input Streams would be awesome, instead of having to use dependencies, or read bytes using loops...
Which is exactly why he language should just take care of it unless you explicitly override it. 
Wouldn't the type of the variable be set when "var" is declared? For example: var list = new ArrayList&lt;String&gt;(); list = new LinkedList&lt;String&gt;(); //compile error If I want a general list, the current syntax would still be available: List&lt;String&gt; list = new ArrayList&lt;String&gt;(); list = new LinkedList&lt;String&gt;(); //no compile error "var" would basically just be a way to tell the compiler, "take the type of whatever is on the right hand side of the equal sign and make it the permanent type of the left hand side." It would be a very simple type inference, not like var in dynamic languages (for example, in Javascript, you can do var x = 10 and then later assign x = "abc". That would not be allowed in the proposed type inference here). 
Good on ya for having a fun hobby project but tbh, if we can't see it running then no one will be inclined to comment on it. It would be like me saying that I wrote a really cool replacement for ZeroMQ and I want you to tell me what I should do next w/o ever showing you my working product - people just won't be interested.
Are these concerns applicable when the vast majority of Java developers use an IDE? If "var" existed, finding the type would be a simple keystroke or hover with the mouse. 
Maybe Eclipse is building it with debug symbols or something?
I can't use the single threaded executor because it uses up a thread, and needs to be shutdown manually; and I want to be able to create, and garbage collect light weight threads.
I can't use a CountDownLatch because I can't want to waste threads blocking on waits (it's okay to block occasionally when using a cached thread pool executor but it's not best practise.) In this situation I'd end up with a queue of threads waiting on each other which could be really bad.
From what I've heard from this years JavaOne, Java 9 was discussed, and reified generics were one of the targets they had for the language. Whether or not it get's put into 9 or pushed back to 10, we'll have to wait a few years or so to find out, but hopefully reification will eventually happen.
I think a keyword would be great. I would prefer it to an annotation as well. I do not get why this has not been done. It seems like such a simple thing that would really clean up Java code.
Java is pass-by-value not pass-by-reference. The difference is mutability. In your example, you are passing the actual list not a reference to it. However, since arraylists are mutable, the changes to it are preserved after sorting. If you had passed an immutable list, this would not work. Primitives and strings are immutable. For example, if you passed an int variable to a method that added three, the variable would retain the same value (it would not be increased by three). Edit: As has been mentioned below, java passes the object reference (by value) to the method, as opposed to the actual object itself. I also mis-communicated when I said "you are passing the actual list not a reference to it". I should have said that you are not passing a reference to the *variable* list. If a method parameter is assigned a new value, the assignment is not propagated to the variable passed into the method. I apologize for the poor explanation. Thanks to [elevatorwhiperer](http://www.reddit.com/user/elevatorwhisperer) and [Scullywag](http://www.reddit.com/user/Scullywag) for pointing out my errors
1) NetBeans if you won't use eclipse. DrJava... there's quite a lot of of IDEs and Java Editors. 2) Honestly... if it makes him comfortable doing that, then he should do it. A psychological process called "Familiar Pain" has overtaken him and until he's totally comfortable from where he is, he probably won't go to a different editor due to not feeling secure. In the end, it's the productivity and quality of code over where/how you made it.
Right, I meant that he doesn't get warned about them before compiling like in eclipse. 
Re: 2, if he's just a terminal junky, he could setup something like [guard](https://github.com/guard/guard) to continually compile his code in the background and receive warnings. One other reason he might want to keep doing what he's doing is so that the IDE doesn't become a crutch. Learning the APIs is sometimes easier when you're forced to remember them. That said, if he's going to do this professionally, he needs to know how to use and setup an IDE as well.
I've known quite a few stubborn people who insist on developing in vim or textpad and they eventually pick up an IDE because not doing it makes them MUCH slower and more frustrated than everyone else.
I learned Java with gedit and the command line in school. It wasn't that bad for simple assignments. Eclipse is noisy for a beginner.
I prefer to do most of my building and what not from the command line. I have always hated eclipse because it tries to do everything for me. a) I don't want it to do anything except edit code, and b) it usually winds up making a mess. I also hated the whole importing a project idea and the built in SCM tools. I've found netbeans with maven integration to be the best fit for me. I can use it pretty much as a code editor and it has all the bells and whistles like auto complete, error highlighting, etc... But I can still manage my build and my repo from the command line. 
I'm going to toss Sublime Text out there. It has the syntax highlighting, plugins to source control, etc - but at its core it is a code editor. I find I spend more time in it than the full IDEs. Supports OSX, Linux, and Windows. http://www.sublimetext.com 
In java all objects are pointers. While you are technically correct in that java passes the "value" of the reference, rather than creating a reference and passing that, your reply is misguided. The concept of immutability is not a language construct and has nothing to do with the language itself, it is merely a description of the semantics of an object. When you call Collections.sort(list), java resolves the value of the "list" pointer, which is a **reference** to the list object, and passes that to the Collections.sort method which modifies it in-place. In pass-by-value, the memory contents of an item are copied to the callee. Because all objects are pointers, the callee ends up with a copy of that pointer which is a reference to the same object. The fact that it is mutable is immaterial, as even for the immutable case, the error would be thrown during the invocation of the method on the reference being passed (consider run-type polymorphic types to convince yourself of this). An easy to way to see that both are dealing with the same object (the same reference) is to print the toString of an array (which prints the pointer) outside of, and within, a method call. They will be the same. 
Java on the desktop is not dead. It's just not where you're looking. It's all over data mining, which is a hot field. Pentaho uses it, RapidMiner uses it. Talend uses it. Jasper uses it. Oh, and AWS SDK, JetBrains (IntelliJ and their other IDEs like PyCharm), Eclipse (not just Java), and Netbeans (Java and PHP). Applets are pretty much dead, and I am okay with that. So is Flash. 
it depends on what he is doing with Java whether an IDE will help or not, but everyone should at least know what an IDE provides. why anyone would prefer the command line: more direct, fewer distractions, nothing hidden. Some people find that any kind of interruption - including warnings and just about anything GUI related - are destructive to their flow.
&gt; if he's going to do this professionally, he needs to know how to use and setup an IDE as well. That's not true at all. I've met some very good Java programmers who have written a crapton of code, all from vi. It's fine not to like an IDE. Eclipse does have some handy features that can decrease the time for some big tasks, but for the most part its most useful tool can be auto-import and this can be taken care of quite easily by memorizing the large package spaces and just importing * from them so you don't muck about with specific imports. 
&gt; perhaps he doesn't realize that the code can be stored in .java files for later compiling. The fact that people might not realize this is astonishing. Just goes to show how much I take for granted.
I use Context and compile on the command line or with a .bat file. 
You are the noob, not him.
My company has about 100 devs who are welcome to use whatever tools they prefer. Those that do use graphical IDEs use primarily Sublime Text over Eclipse. But a sweeping majority prefers highly customized vim or emacs setups.
No. There is nothing better about doing a job a harder way. Use an IDE. Ever do a complex refactor in a text editor? Ever extract interfaces or methods with copy/paste? Nobody's going to give you a pat on the back for choosing the hard way to do something. Simplify your life and use suitable tools for the job.
You program quickly compared to what/who? I guarantee you would be crushed in development time by an equally competent developer using an IDE. You're really just making your life harder. Take the time to really learn all of the keyboard shortcuts and refactorings and you will see your productivity go way up.
Groovy can help! @CompileStatic class MyGroovy { def static main(String [] args) { // read line one by one new File("xXx.txt").eachLine { String line -&gt; println line } // read all of the content String content = new File("xXx.txt").text // List of lines List&lt;String&gt; lines = new File("xXx.txt").readLines() // words per line new File("xXx.txt").splitEachLine(" "){ List words -&gt; println words } // Writing File f = new File("SpartanPoet.txt") f.write("This is madness!\n") // will overwrite f &lt;&lt; "Madness?\n" // appending // Copying binary File src = new File('hotgirl.jpg') new File('hotgirlbackup.jpg').withOutputStream { OutputStream out -&gt; out.write(src.readBytes()) } } } 
I agree with your conclusion, but... &gt; long x = 10; &gt; you're creating an int and the compiler insert a type cast (that is eventually optimized away), but it still regard 10 as an int literal. This is a "Widening Primitive Conversion" and is covered by [JLS §5.1.2](http://docs.oracle.com/javase/specs/jls/se7/html/jls-5.html#jls-5.1.2). It is evaluated at compile time.
Not really. For beginner to intermediate programmers perhaps, but once you get into people that are actually competent programers, at worst they are equally productive, and usually the CLI guys blow away everyone else. The CLI is more powerful, more easily manipulated, it is lighter weight, and less cumbersome to use.
Thanks. How do I manually call the java cmd from the 1.7 JRE directory, then update the PATH? Other than the Java site and settings saying I've updated, I cannot find any evidence that the update was installed.
You can try writing down the steps on a paper, use the steps to run through a couple examples and then write the program. 
Before pestering someone to change something, we must first consider what is the quality of the code he is producing, and is he meeting deadlines. If both are acceptable, then just leave him alone. That being said, I highly doubt he has both of those (if any). I love the command line, and I love working in vim. I have a very complex setup, I use vim for writing and executing SQL (through DBext), looking up old code, etc. The one thing I do not use vim for though is _writing_ Java code. * While it can be made easier (via plugins like Command-T), writing Java in vim will encourage writing procedural code instead of well formed OO code following principles such as SOLID * vim has auto completion, but not semantic auto completion * vim can't do the type of refactorings that IDEs can do * I can setup tools to auto compile in the background and key bindings to execute unit tests, but easily running just one test would not be an easy feat * NO DEBUGGER * etc So, in short, if deadlines and the standard of quality are being met, leave him alone. If not, focus on those and show him where using an IDE can help.
I know but I don't know how to show that in java.
What? Do you really think that emacs and vim don't have shortcuts that do the same things all from the command line? He'll I'm pretty you can setup Eclipse to use Emacs shortcuts...
If your friend is comfortable using and editor from the command line why try ots top him? One of my coworkers solely uses Emacs and is just as fast as someone writing code in an IDE
&gt;Or perhaps he doesn't realize that the code can be stored in .java files for later compiling. How exactly do you compile Java code *without* storing it?
DrJava as an IDE? Please. Once you get into a real project using maven, good luck using Dr Java as an IDE. Do you get semantic autocompletion? Compile in background? Automatic fetching of sources using maven? There's a reason most developers prefer Netbeans, Eclipse and IntelliJ IDEA over Dr Java.
You know, I'd intended to to say that using a text editor was a good way to learn the language, and then you can/should move to an IDE when you know your way around and have to work on a larger project. That must have been lost in one of my edits, and I came off more like "text editors are better than IDEs" which is not what I meant.
&gt; All the fancy things that eclipse can do, can also be done using custom scripts in Vim/Emacs and some plugins. This seems to be the common wisdom, but I don't think it's actually true, outside of Eclim (but then what is the point?)
All eclipse is, is the text editor and compiler etc in one, who's to say a standalone text editor doesn't have shortcuts? And why are shortcuts so important? Sometimes it's easier to fill things in myself so I don't lose my train of thought. That's just me though.
What part are you having trouble on? /u/detroitmatt has provided you with a good algorithm to work from.
As an emacs user, I can tell you that most IDE key bindings for emacs are wretched and not worth using. They lack important features and I wind up wishing I was just using emacs. On the other hand, there are features built in to IDEs that emacs can't touch. For java in particular, I find a proper IDE a more effective tool, but for most languages I prefer emacs.
Not free though
Same thing here - I use IDE only when I touch something new. When I already know the code base, I use emacs with etags.
Please ask /r/javahelp.
/r/javahelp
Eclipse/IDEs aside, I believe this to be the attitude that prevents developers from improving themselves.
Did you start a new terminal session before you tried it? Because if the browser said that you upgraded, you probably did. But an old terminal will have the old path. 
That's my problem with it lol Edit: are there any alternatives to sublime that don't cost money? 
The bigger the tool, the less articulate one needs to be. It's not unlike playing acoustic vs. electric guitar, particularly when you are learning. I used an editor that didn't have syntax highlighting at the start myself. The first time I had to go over a couple hundred lines of code to find my syntax error is forever burned in my consciousness. A misplaced apostrophe. I later discovered BBEdit and the screen would blink if I did something wrong. I loved BBEdit, but I also had an appreciation for it I would not have had if it weren't for learning the hard way at the start. Since then, I've maintained certain principles of being meticulous, clear and often commenting my code. Takes a little more time, but it feels better. I feel I can actually feel what I'm doing and what the code is doing better. More hands on. I champion your friend.
No, but there is no time limit on the eval version. It prompts once in a while with the 2.x version, but is for the most part very well behaved on the nagging. This, and IntelliJ, are two bits of development software I actually spent my money on. IntelliJ's trial is too short, IMHO, to get the hang of their IDE.
But your wrapped 'executor' also needs a thread (otherwise the task would be executed in the current thread). The singleThreadExecutor uses a single thread for processing all tasks, it doesn't get any cheaper than that...
When the left side is a wildcard, the right side is the problem. var foo = Library.staticMethod(); System.out.println(foo.getClass()); // java.lang.String foo.replaceAll("bar", "baz"); // all's good But what if whoever manages Library decides to change things? var foo = Library.staticMethod(); System.out.println(foo.getClass()); // java.util.Date foo.replaceAll("bar", "baz"); // Exception With type inference you will only notice the error in line 3, with static typing it would have been caught in line 1. When declaration and use are not that close in proximity looking for the bug becomes an annoyance.
The enhanced for loop supports arrays and anything that implementes Iterable&lt;T&gt; on the right side of the colon. T[] array = new T[5]; for (T x : array) {...} Collection&lt;T&gt; collection = new ArrayList&lt;T&gt;(); for (T x : collection) {...} Now, with Java 8 you can use a lambda with functional interfaces, which are interfaces that only have one method. Iterable&lt;T&gt; only has one method: Iterator&lt;T&gt; iterator() and so it is a functional interface. So something like this will work: List&lt;T&gt; list = new ArrayList&lt;T&gt;(); Iterable&lt;T&gt; iterable = () -&gt; list.iterator(); for (T x : iterable) {...} But what will not work: for (T x : () -&gt; list.iterator()) {...} foreach doesn't allow any lambda expressions. I learned about this because I regularly use an old library that still returns only Iterators and no Iterables, so I tried to create a lambda that just returns an Iterator. Alas, it won't work. This is not only caused by the fact that arrays are not iterable, but also that foreach will only support lambdas that return an Iterator&lt;T&gt;. Now, I understand that this example has limited use and isn't that big an issue. It's just one of those small things where I wish things would be different.
Honest question here: at what point do you differentiate between a text editor and an IDE? I mean if you spend an hour on your config files to make emacs or vim work seamlessly with Java (build automation, debugging, I'm sure there must even be some refactoring tool somewhere) then in my opinion it stops being a text editor and is just another IDE.
Java is development is your own experience. There are so many IDE's, libraries, integration components, etc that every java developer could be entirely unique if they wanted to be. If you want to conform maybe try .NET. 
For giving change: If (change &gt; 100.0) then -----change/100.0 -----use floor (round down) //gives amount of 100's -----modulus 100.0 = new change amt If(change &gt; 50.0) then -----change/50.0 -----use floor (round down) //gives amount of 50's -----modulus 50.0 = new change amt if(change &gt; 20.0) then -----change/20.0 -----use floor (round down) //gives amount of 20's -----modulus 20.0 = new change amt if(change &gt; 10.0) then -----change/10.0 -----use floor (round down) //gives amount of 10's -----modulus 10 = new change amt if(change &gt; 5.0) then -----change/5.0 -----use floor (round down) //gives amount of 5's -----modulus 5.0 = new change amt if(change &gt; 1.0) then -----change/1.0 -----use floor (round down) //gives amount of 1's -----modulus 1.0 = new change amount Now pretty much do the same for denominations of change. 0.50 (if you use 50 cent pieces), 0.25, .10, 0.05, 0.01. I'm kinda drunk right now, so please excuse any errors in typos or logic. But 6-beers-drunk-Me says this seems kinda sound.
For Java, I have yet to see anyone that are _actually_ faster programming that way. Now for stuff other than normal programming, e.g. quickly generating code for a lookup table, scripting an integration test, re-deploying an application, grepping and manipulationg the output or log of an application and many other things - sure the command line is great and you can drop down to that whether you're using a fully blown IDE or not.
It IS another IDE. In fact, emacs and vim have more claim to the title IDE than eclipse does. IDE stands for "integrated development environment" and is supposed to indicate that the development tools are integrated into the editor along with any other programming tools you may need. At some point along the way, people forgot that you don't need a fancy GUI to achieve this -- the unix command line, along with all its commands and pipes offers the perfect system for integrating tools and using them together. IDEs on the other hand, don't even typically ship with a compiler built-in anymore and ironically aren't integrated at all. Semantics aside -- a toolchain is just a toolchain. You can accomplish just as much on the command line as you can in a fancy GUI, and often more. The learning curve takes longer, but vim and emacs and all the unix commands used in modern development tend to offer a lot more features and flexibility than any modern iDE. 
Use a while loop, keep track of how much money is left to give. At each iteration, find the largest denomination you can give and subtract it from the `changeRemaining` float changeRemaining = productPrice; while( changeRemaining &gt; 0) { float[] denominations = [100,50,20,10,5,1,0.25,0.10,0.05,0.01]; // Loop through the denominations and give them the largest // denomination possible for(int i = 0; i &lt; denominations.length;i++) { float d= denominations[i]; if(changeRemaining &gt; d) { println("Giving $"+d+" change"); changeRemaining -= d; break; } } } You'll get stuck in an infinite loops if you can't give the right change though (ie. when the changeRemaining has 0.001 cents or less.
Edit: Sublime is totally free what are you talking about?
https://github.com/senny/emacs-eclim
I am a power vim user -- I use it for _everything_. Except Java. I find eclipse's build system horrible. The GUI is just obfuscatory, and I'm always switching between mouse and keyboard. Find and replace in eclipse is rubbish -- any programmer who hasn't learned regex find and replace is slowing themselves down immensely. Eclipse has three things that vim (without my rebuilding vim and a load of plugins that I'd then have to maintain) doesn't (and it's nothing to do with shortcuts): - Live outline view. - Ctrl-Space completion. - Refactoring variable rename. I absolutely love this one. Renaming a variable is so much easier with Alt-Shift-R than find-replace. The second is the one that really speeds me up. How I long for vim to have ctrl-space completion that's as good as eclipse's. I could then ditch it and be happy. YouCompleteMe looks like it has potential, but it's not easily installable yet; and it's not entirely clear to me that it's fully context aware. Object oriented programming with overloaded functions and proper completion is a joy. Vim isn't. That being said -- eclipse's editor is, in other respects, rubbish. I've therefore got eclipse set up to use vim as an external editor, and I switch between the two. I guarantee that I am faster for every other editing task using vim and a command line than any young pup with their IDE. But I do yearn for some eclipse features in vim; it's not fair to say the eclipse has nothing to offer. 
IntelliJ has a community edition that is free for Java SE development so you can learn to use it at your leisure. They occasionally do sales for the full version which I'd say is worth picking up because of the sheer amount of features and language support it has (I got it during their End of the World sale for a really low amount compared to the normal price). I still jump down to the command line for pushing and pulling to Mercurial repositories as Idea occasionally has some issues with that.
these parameters are used to *override* the default, I couldn't find anything related to this in java 7, the only thing I found related to this is, which looks like a java 5 feature: maximum heap size Smaller of 1/4th of the physical memory or 1GB. Before J2SE 5.0, the default maximum heap size was 64MB. You can override this default using the -Xmx command-line option. http://docs.oracle.com/javase/7/docs/technotes/guides/vm/gc-ergonomics.html 
I hate programming in IDEs. I often find them clunky, and find myself leaning too heavily on their autocomplete functions. For me, a well configured Vim is the best programming platform for any language I use (Java, Python, JS, PHP, lua, C). It's lightweight, fast and contains any feature I could desire. It gets out of the way of my coding, and gives me a firmer grasp of my code in my experience.
So, you are telling me that you can write a hotkey for Emacs to refactor my code such a way that method call: aClassInst.callMethod(bClassInst, cClassInst, dClassInst); Will be refactored to: bClassInst.callMethod(aClassInst, cClassInst, dClassInst); By moving the method to the different class, changing it's respective parameter, changing all references to that parameter and `this` and doing that for all places where `callMethod` is called? IntelliJ does that all with a simple "Move" command. How much time will you waste for this 5 second refactoring with Emacs?
A variable rename? How cute. Here's an example of what a proper IDE does in a second: http://www.reddit.com/r/java/comments/1oomn2/i_have_a_friend_who_insists_on_using_terminal_the/ccu8m1i
That's very clever of course, and I'm aware that it can be done; I'm simply saying the things that I use regularly and therefore would make a genuine difference to the speed I work. I think you've misunderstood me as well; my comment is that I end up using the IDE because of these features that vim/emacs don't have -- as much as I would prefer vim, I find myself using eclipse. It's rare that I move methods between classes, so if I have to find-and-replace those -- it doesn't cost me much; so that wouldn't be enough to keep me from vim. Those context aware renames are _really_ common though. Particularly when I'm tidying up other people's code. Particularly people who can't spell.
I'm less concerned about his not using Eclipse than I am about the fact that you say he gets no error messages. What does that mean? Vim can put them right in the editor window, and I'm sure emacs can too.
In your .bash_profile add the following line export JAVA_HOME=`/usr/libexec/java_home`
No, I did not misunderstand you. I just tried to amplify your point by stating that you are not using some more advanced features IDE's provide. And for the person like me - they are crucial and absolutely impossible in non-IDE environments.
Java installation on mac is 'different'. You should use '/usr/libexec/java_home' to update the path. Make sure it's installed with '/usr/libexec/java_home -V' 
This is a false claim.
Got it. Apols.
I don't know. I was not much in touch with the Java world, and then I just noticed they have moved everything to spring.io. I was a bit confused and lost, but well, the new web site is very well designed.
The main alternative to Eclipse is Netbeans in the professional world. It seems like InteliJ is very popular among hobby programers.
Thanks! I'll try this!
Alright, thanks!
I realize that. We're talking beginners, though. My personal preference is using Eclipse with Vrapper and Command Line, honestly. Sublime Text, apparently, works wonders, though.
Yes, they are. IDE's are great tools... for *writing* code. Most of their features are geared toward the writing aspect of software development. This is a *good* thing, as most of the mistakes are made in this process :) However, they don't help with the lean-back-and-grok of reading code very much. Syntax highlighting helps a little. Code navigation helps more, but that's just about it.
JPA is really the prime example of an API made significantly worse by taking something pretty good, and grinding it through the standardization process.
Yep, do this. Don't try messing with the PATH manually like I said above. For reference, though, I expect the installation directory to be something like &gt; /Library/Java/JavaVirtualMachines/jre1.7.0_nn.jre/... 
There is nothing in the JavaVirtualMachines folder
Ah, nevermind then. I guess the JRE installation is quite different than JDK.
I'm under the impression there should be though. Why make a folder with nothing in it?
I think that directory is simply provided out of the box by OS X as a place to install future JDKs. There is some JRE specific info [here](http://docs.oracle.com/javase/7/docs/webnotes/install/mac/mac-jre.html) but I'm not exactly sure what the installation directory is supposed to be.
Hmm, i had an issue with aws data pipeline on ec2 a bit ago, it was starting a runner on jvm with a quarter available ram (i spun up an m3.2xlarge instance with 30gb of memory and it only used 7). I thought they were doing default jvm startup but maybe not?
If he wants to, let him. Ultimately, not using an IDE will increase awareness of how it all works. That said, I would slit my own throat before programming everything using a command line editor. Now, THAT said, I've heard vim has some really hot shit java plugins that make it as good/better than the GUI intellij/eclipse/netbeans IDEs out there. Again, I've HEARD this - I personally don't buy it.
Didn't mean to pick on you in particular but I saw a lot of that sentiment in these comments. Text editors really fall on their face when you try to practice emergent design or debugging or anything remotely advanced.
Millions of 3d objects in a scene? I don't think a few clever tricks will help you. Can't you limit the amount of objects to a realistic amount for the hardware (e.g panning the scene). Then either an object pool or simply not rendering all of them.
Yep, turns out Eclipse is including line numbers. 
Look I love the CLI and vim, but the big Java IDEs are way more than a text editor + compiler. The refactoring tools alone are miles beyond anything you can easily do in the command line.
I didn't say that he _needs_ to use an IDE. He needs to know _how_ to in case he goes to a junior developer's desk and they ask him, "how do I set this project up in my IDE"? Is he just going to say, "Use vim"? (And I say this as someone who actually does use vim to code Java and Scala.)
I personally use vim for small java projects. Its a little cumbersome to learn at first, but its an amazingly powerful editor, and supports color coding and code formatting. Now, using vim still means having to deal with errors from the console instead of an IDE, but woth smaller programs this isn't much of an issue. For bigger stuff I use DrJava. 
The Spring Framework is what user organizations have de facto standardized on. A good way to get started with it is their newest project, Spring Boot: http://projects.spring.io/spring-boot/ Use a good IDE, I recommend the http://www.jetbrains.com/idea/ community version. If you're doing consumer-oriented web stuff, you want to be able to staff your frontend developers from a pool of the best and the brightest, and that's why you want to standardize your frontend stack on something as close to plain HTML, JS and related web technologies as possible. If that's the case, you want to avoid JSF and even JSP like the plague. Create straight up REST/JSON interfaces for your services. Hit them from AngularJS/EmberJS/KnockoutJS/BackboneJS websites. If you must render HTML pages, use something simple like Thymeleaf, FreeMarker or Velocity. You can keep things very simple and your recruitment policies optimized for the maximal amount of good candidates, if you just keep away from companies trying to lock you in to legacy technology.
Out of interest- why not use path?
AbstractAnnotationConfigDispatcherServletInitializer LocalContainerEntityManagerFactoryBean RepositoryRestMvcConfiguration Really?
For this example, I'd recommend taking in the whole object. Think about what would happen if the isCourseHard method implementation changes. If it takes in an assortment of parameters, those parameters might need to change, and you'd break anything calling the method. Yes, by taking in the whole object, you're hiding which Course fields you're using, but that's a good thing. That's an implementation detail, and it should only matter within the method. If you need that object to be in a certain state, that should be in the method's documentation, and I'd consider throwing an IllegalArgumentException if you get an object that isn't usable (documenting when that exception will be thrown, of course). That's my thoughts for this example anyway. The isCourseHard method, even just from the name, implies that it works on a Course object. A method should take in whatever parameters makes sense for the method. I'd just consider what would happen if the implementation were to change. If a change in implementation wouldn't change the parameters, you're probably doing it right.
thanks. this is exactly the type of explanation i was looking for. i want to get in the habit of coding in a way that will make sense to someone who needs to modify my code in the future and i wasn't sure if that meant restricting the parameters so its obvious what it needs to complete its job or whether something like that was better done in another way.
Like a delegate in C# or a function pointer?
False, it shares a thread. It doesn't create it's own thread. For example, some code might do something like. final Executor pool = Executors.newCachedThreadPool(); final Executor taskA = new MutexExecutor(pool); final Executor taskB = new MutexExecutor(pool); // etc... And then occasionally submit jobs for the individual tasks to do. 
&gt; 1. GET for reading resources &gt; 2. PUT for creating resources &gt; 3. POST for updating resources &gt; 4. DELETE for deleting resources Strictly speaking, this is not correct, for PUT and POST, anyways. Both PUT and POST can create or update a resource. But PUT is idempotent, which means repeated PUTs will have the same observable effect. POST is not idempotent, which means repeated posts can have different observable effects. For example, two POST operations with the same order description might end up actually creating two orders. If you had two PUTs with the same order description, the first would create it and the second would update it, but the end result would be the same as if only one of the PUTs were done. Thus, PUTs can be safely repeated.
With Jersey (JAX-RS RI), I can configure a resource to read header and query (and cookies and form) parameters in this way: public Response getFoo( @HeaderParam("userId") String userId, @QueryParam("pageNo") String pageNo){ // blah blah blah } How do I implement the same with spring-data-rest? After reading the sample shown in the blog post, I feel that spring-data-rest is suitable for setting up RESTful web services in very short period of time and not that customizable as Jersey.
I tried to use this library to create a relatively simple REST API to be used by some Javascript and Android clients. It ended up being too rigid for me to actually get anything done. Maybe it's changed since the few months ago when I used it, but you essentially have no control over the JSON serialization the API uses. The framework ignores all Jackson annoations, and apparently uses its own methods for serialization. To change the serialization format (even if it's just to rename a field), you have write an entire custom (de)serializer and added to Jackson's object mapper. Many of the objects I needed to pass back and forth had multiple nested objects inside them, and Spring-Data-REST would just put a resource link as a property in the JSON for the nested object, requiring me to do an additional GET for every nested object. There was no option to do a "greedy" serialization where it would just embed the object properties into the parent JSON object. This made programming client applications a nightmare. In addition, business logic for saves and updates was a bit cumbersome as well. You have to annoate functions with HandleBeforeSave, HandleAfterDelete, in separate classes and instantiate an EventHandler to invoke those functions. After I finally got everything working with this, I would occasionally get ConcurrentModificationExceptions thrown from within the Spring-Data-REST libraries (none of my code was involved) whenever my application was under heavy load. At that point I threw in the towel and just used Spring-Web-REST, and it has since been much easier to design and maintain. As long as your use cases are simple and you strictly adhere to HATEOAS in your application, though, Spring-Data-REST lets you get a TON of functionality through almost no code writing.
More like a function pointer.
So?
Spring Data REST and JAX-RS don't do the same thing. Spring Data REST is a special purpose framework to expose JPA to REST. For general applications you would use Spring Web REST. In Spring Web REST, your example would look like: public Response getFoo( @RequestHeader String userId, @RequestParam String pageNo) { // blah blah blah }
Thanks for the clarification.
The Java Way™ EDIT: Wait a second, I thought I'm in /r/ProgrammerHumor...
I actually got it awhile ago, thanks a lot everyone. However, I must say some of the things you guys were talking about were stilll pretty advanced for me
Not sure why you were downvoted, there are many of us looking for jobs, thanks for the post.
I generally despise XML configs, but XML configs (or even JSON) wins hands down if you add an application to write the XML file. So, this is the part where I'm downvoted for advocating GUI approached programming, yet that's the inherent advantage of strictly defined data structures -- it is easy to manipulate and validate with external tools. But then again, I guess I'm just too lazy.
Probably because there's a subreddit already for programming jobs (can't find it for some reason this sec). I don't mind the job postings, personally.
Don't know what you're talking about. JPA made Hibernate bearable. 
The definition of a "void" method type is that it doesn't return anything, not even null. Hint: Your teacher never said you had to sort the numbers, return them, and then print them. At least one of those 3 steps is unnecessary for the assignment.
Maybe you should move println into displaySortedNumbers? (The name seems to suggest that.)
You're getting an error because a void method isn't supposed to return anything. Right now you're overthinking how to print out your numbers. Try to think of how you can print your numbers without returning them in your method.
You don't need to return the values, just print them. You can put the calls to println in the displaySortedNumbers method, and remove its "return" statement.
To agree with everyone else, I think you're over thinking this. Just print (System.out) the numbers in order from within you method.
Okay, got it. Thanks everyone. Deleting the thread.
Alright, that's not covered by the standard java.util.concurrent executors.
Good job, Arjan, taking time to find and collate this information. Thank you. Reading this, it came to my mind that I haven't even thought about Caucho Resin for years. What's happening with them, are they doing JEE7?
&gt; expose JPA Or Mongo, or other data sources. 
Thanks! I haven't had a chance to check this out yet but I haven't seen too many tutorials on Java FX out there.
http://download.java.net/jdk8/docs/api/java/util/function/Supplier.html
&gt; So far we've been unable to find the proverbial Ninja Developer. With a site design as infuriating and unintuitive as that one, I wonder why.
I wish there were no job posts here at all * I don't want head-hunters to spam /r/java (and reddit in general) with job offers. * It's a form of advertisement for the company, and I dislike people using reddit for subliminal ads. * If you're a professional Java developer, you most probably already know where on the internet to look for jobs - or what contacts to call upon (in my neck of the woods this is the usual way that one seeks for jobs). * They are always for remote cities and countries. Also, IIRC I've only ever seen offerings from US companies. Edit: Of course a monthly thread would be somewhat of a solution, but I don't think that it would work: * the thread would be gone from the front page within one or two days * people would post job-offers all the same * consolidating and/or deleting threads is moderation work - and this subreddit is mostly not moderated at all (I don't think I've ever seen an official [M] post or other mod-action in here).
&gt; I'll start. No. This is a *meta discussion* about job threads - it's not the actual thread to post offers to.
I'm going to go out on a limb here and guess he doesn't like eclipse but it's probably telling him to do things a certain way that he doesn't like, for example: putting java code in packages with camel cases class names, one per file. If he can't deal with eclipse's opinion he's going to be in a world of hurt after his programs grow beyond a file or two, plus the refactoring tools
Just some quick thoughts: * You're only checking for the space char (`' '`), which is just one of many whitespace characters. * You're constantly assigning String variables, each time creating a new `String` object in memory - use `StringBuffer` instead! * You could achieve the same thing without new String or StringBuffer objects: just use two (integer) pointers to find the first and last non-whitespace character, then use `substring` and return it. * #7: you re-assign `str` - the variable that you're looping over. It should work because you call str.length() in the loop condition, but it's ugly. * reversing the string just to do the same whitespace-search at the end is inefficient: you would do *two* unnecessary string reversals (which costs time and memory, too). 
If you're going for a StringB* use a StringBuilder rather than a StringBuffer, you don't need any thread safety there
Lots of good points here. If it were me I might convert it to the character array and deal with that instead of substring, but substring works fine.
As TheHorribleTruth stated, one of your main issues here is that you are recreating strings many many times. This is typically considered bad practice. You should try to figure out a way to do this only creating one string. Additionally, you should not do it once forward, and once backward, you should be able to just just loop once to make it more efficient. 
I hope you pointed out that you'd use [String.trim from the standard library](http://docs.oracle.com/javase/6/docs/api/java/lang/String.html#trim\(\)) before attempting anything else - sure the person asking the question's probably looking for something more complicated, but not reinventing the wheel's a big part of being a developer. 
Maybe it will help a few people reading this thread. This is pure functional example, without loops and no variables mutation. public static boolean isWhiteChar(char c){ return Character.isWhitespace(c); } private static String _ltrim(String str, int n) { if (n &gt;= str.length()) return ""; if (isWhiteChar(str.charAt(n))) return _ltrim(str, n + 1); else return str.substring(n); } private static String _rtrim(String str, int n) { if (n &lt;= 0) return ""; if (isWhiteChar(str.charAt(n - 1))) return _rtrim(str, n - 1); else return str.substring(0, n); } public static String trim(String str) { return _ltrim(_rtrim(str, str.length()), 0); } Version less readable for beginners but with a little less boilerplate (looks like Lisp in Java): public static boolean isWhiteChar(char c){ return Character.isWhitespace(c); } private static String _ltrim(String str, int n) { return (n &gt;= str.length())? "" : (isWhiteChar(str.charAt(n)))? _ltrim(str, n + 1) : str.substring(n); } private static String _rtrim(String str, int n) { return (n &lt;= 0) ? "" : (isWhiteChar(str.charAt(n - 1)))? _rtrim(str, n - 1) : str.substring(0, n); } public static String trim(String str) { return _ltrim(_rtrim(str, str.length()), 0); } This is not a defensive code. I'm not checking for null or indexes out of bounds. *_ltrim* and *_rtrim* are just helper functions. If you need public versions of them just add: public static String ltrim(String str) { return _ltrim(str, 0); } public static String rtrim(String str) { return _rtrim(str, str.length()); } and update *trim* function to: private static String trim(String str) { return ltrim(rtrim(str)); } Notice: this code may blow up stack. Don't listen to angry bigots commenting it. I is perfectyly valid code. For ex. directory tree travrsal on your disk in almost all software is done in a recursive way. Recursion is only a tool and since world is moving towards functional programming it is good to know such things.
In my opinion, JavaFX is total crap. On linux you can't use OpenJDK, you have to use f*cking Oracles proprietrary JDK, some of the examples do not work at all (crash, blank window) and the few working ones are REALLY slow and use up to 50% cpu when doing some simple animations.
Observe that the trimmed string is the original string or a substring thereof. In other words, we can use *substring(int, int)*. The basic algorithm: 1. Find the index of the first non-whitespace character (simple for loop). 2. Find the index of the last non-whitespace character (a for loop that starts at the last index, counting down. You know that you can stop when/if this index is the same as the index as (1). 3. Return the string itself if the start index is 0 and the end index is the length of the string minus one or *substring(startIndex, endIndex + 1)* otherwise. In (3) I assume that substring has a check for startIndex == endIndex to avoid creating a new String. Also, note that a solution using a StringBuilder is often not optimal: if you have a very long string, seeking the left and right indices is usually far less work than traversing the whole string. And *substring* is constant-time, since it creates a string that shares the underlying character array with the original string (it just has a different starting index and length).
I don't know if it would be circumventing the intent of the question, but I'd personally just use a regex. String trim(String string) { return string.replaceAll("^\\s+|\\s+$", ""); } 
Pointing out that you know the core Java API will take all of a couple of seconds, shows that in reality you won't waste the company's time writing your own implementation of existing functionality, and then leaves you free to give them the "but if I had to develop this from scratch..." answer the interviewer may (or may not) be looking for.
You're still missing it. The question is to see whether you know *how* to do it, not whether you would do it or not. &gt;and then leaves you free to give them the "but if I had to develop this from scratch..." This part is implicit anyway.
True but it's still better to provide both answers in the context of a job interview. Also, it would give bonus points if you were to ask the interviewer how often and how frequently the code will be ran as these are important requirements which would potentially change the implementation. There are even more bonus points to be had if you ask questions which demonstrate knowlege about VM internals such as "how big is the original string and is it needed afterwards?". If you trim a small string from a big one the VM will normally use an inner reference to the big string as a performance optimisation. This costs memory so if the original string is huge and has a lot of whitespace *and* is no longer needed you'd be wasting a lot of memory simply by using String.substring() in your code. This is a common bug when people write an XML SAX parser as pulling out a substring for an attribute value will often result in the entire XML structure being held in RAM. The String.intern() method can eliminate this. Showing this level of awareness will get you the job. If I got this kind of response I'd just move on to the next question without seeing any code as the candidate is well beyond needing to write some basic algorithms. 
oh man I love when people propose solutions that are not the "normal" procedural way. Thank you for sharing this unique solution 
[Look at how open jdk does it](http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/7-b147/java/lang/String.java#String.trim%28%29) Edit: One of the cool things they do is they check if there are even any white spaces on either side of the string before creating a new one.
Agreed, asking questions like that about charsets in an interview would will you a few extra points if I were conducting it. To be honest I would argue that asking a bunch of requirements questions about such a test would demonstrate far greater coding skill than any actual code itself. A good coder knows about all of these in advance and can ask relevant questions before coding anything so that the produced solution is correct first time. 
Which is exactly why I ask questions like this when I interview people. A lot of the time I'm more interested in how they approach the problem with the questions they ask. 
This looks pretty, but Java does not do tail recursion. Unlike Scheme or Lisp, neither Java nor the JVM will convert recursive calls at the tail position into loops. This code needlessly builds up stack frames. I wouldn't recommend writing this kind of code in Java.
It was time to start looking elsewhere ten years ago.
I probably would have approached this in a similar way to the OP. Can someone comment on why the interviewer would have said to "study up more on data structures"? Is it just because this code ends up generating so many String objects memory?
This is the closest one. Here's the actual code: public String trim() { int len = count; int st = 0; int off = offset; /* avoid getfield opcode */ char[] val = value; /* avoid getfield opcode */ while ((st &lt; len) &amp;&amp; (val[off + st] &lt;= ' ')) { st++; } while ((st &lt; len) &amp;&amp; (val[off + len - 1] &lt;= ' ')) { len--; } return ((st &gt; 0) || (len &lt; count)) ? substring(st, len) : this; }
Resin does the web profile. They even have their own CDI container.
This is fast and clean but there are too many chances for an off-by-one mistake to write it quickly.
Are you using it for applets? If so, when you can only use "expired" Java versions with signed applets. 
Yeah, but the question was to do it in Java...
Yes, for applets. Was hoping to get the older versions to run the unsigned applets of an older version of a product. The newer version of the product has signed applets, so there's no problem there.
I just wouldn't post a solution in Java, and then argue that the solution is only good for non-Java cases.
Interesting that he told you to read up on data structures. I'm not sure how any data structures (other than using the char array you already have) are going to help you here.
Scanning for files does not involve recursion at the tail position, so TCO does not apply. The state of the iteration through the parent directory must be remembered as you descend into child directories, so you can pick up where you left off. You can either maintain this state with a queue or stack frames. TCO can only be applied when there is no such state.
How does it compare to http://www.jboss.org/tattletale ?
Or you could just use a dependency manager and not have these stupid problems in the first place.
Great comments. This applies to a lot of tech jobs. 
So, is it off-topic to say that part of the reason is that Java makes it easy to write programs that "work" but are horribly slow and/or awful to maintain?
It's not.
It's always on-topic on /r/makingshitup.
Hi all, thanks for the comments. There are already maven plugins to stop the build if multiple versions of the same class are found, see for example the maven enforcer plugin with [extra enforcer rules](http://mojo.codehaus.org/extra-enforcer-rules/), this works great. The tattletale static reports are much more detailed, this tool is not so much a static analysis tool. it's mostly a runtime troubleshooting tool, that can be used for example to find out why a application starts in development and not on another server. It scans the classloader chain looking for duplicates inside the same classloader, and allows to query the runtime classpath to find where is that class that is causing a server startup exception. Regarding maven, the use of maven (I mean without plugins like the extra enforcer rules, just using the maven dependency mechanism) reduces the occurrence of classes with multiple versions in a WAR, but unfortunately it does not eliminate it due to the way some projects are published, have a look at the [frequent causes](http://jhades.org/documentation.html#freqcauses). Projects are sometimes published to maven repos with diferent groupIds/artifactIds, in that case there is no way for maven to know it's the same library. Some projects publish jar-with-dependencies versions that get linked to other projects, code is copied from one project without renaming packages, etc. The example on the main page is actually from a maven project that was working fine in development but did not start in another server: there where more than 305 class duplicates on the same WAR. These are examples of some cases of classes with duplicate versions: 129 duplicate classes between aspectjrt-1.7.2.jar and aspectjweaver-1.7.2.jar - these are actually harmless because one includes the other and the versions are the same, but we can see how things can go wrong next 91 overlapping classes in ejb3-persistence-1.0.2.GA.jar and hibernate-jpa-2.0-api-1.0.1.Final.jar - These where problematic, multiple versions of JPA classes on the classpath These are other examples, typically related to XML libraries and [Xerces Hell](http://stackoverflow.com/questions/11677572/dealing-with-xerces-hell-in-java-maven): 34 classes overalapping stax-api-1.0-2.jar and xml-apis-1.4.01.jar 29 classes overlap between javax.xml.soap-api-1.3.5.jar and saaj-api-1.3.jar other problems: xbean-2.2.0.jar overlaps with xml-apis-1.4.01.jar - total overlapping classes: 6 commons-logging-1.1.1.jar overlaps with jcl-over-slf4j-1.6.6.jar - total overlapping classes: 6 commons-beanutils-1.8.3.jar overlaps with commons-collections-3.2.1.jar - total overlapping classes: 10 Hope this answers some of the questions, Thanks, 
About String.substring()'s result sharing its char[] with the original String, this is not true any more since a few JDK 7 updates. At least for OpenJDK-based implementations (Oracle JDK included). See this [change](http://hg.openjdk.java.net/jdk7u/jdk7u/jdk/rev/e1c679a00712) on OpenJDK. This means that you pay the copying cost if you call substring (modulo escape analysis) but you don't risk keeping the big char[] around.
I just wanted to say I think you gave a fine answer to a problem you probably had not considered before. Especially under the pressure of an interview. Some developers really like trying to show people up on an interview. It is easy to have a better answer when you pick the question and have plenty of time to think about. Edit: Thanks for the gold!
&gt; Every recursive algorithm can be implemented as tail recursive. If you externalize the stack frames into data structures passed along with the recursive call to hold the state, sure you can move the recursive call to the tail position. There is no limit to the complexity you can throw at a problem. Of course, the extra effort to force tail recursion might not be worth it. &gt; I gave an example where recursive algorithm is preferred to imperative one. I never said that recursion must be avoided at all costs. Traversing a tree structure is naturally recursive, and the complexity involved in making it iterative wouldn't be worth the cost. Trimming whitespace is super easy with loops, and the cost of recursion is not worth the cost in Java. In languages like Haskell, the recursive solution is simpler and the runtime and compiler support recursive definitions. It's a dumb thing to do to shoe-horn patterns from one paradigm into another language not designed for it. It is possible to simulate imperative computations in Haskell, but you would be going so far against the grain, what would be the point?
Wait, who's the religious fanatic here? You're the one speaking of "blasphemy". It is not dumb to accept that you should use the right tool for the job, and just because you have a hammer (recursion), doesn't mean everything is a nail. Recursion is not the golden hammer in Java like it is in Haskell.
Agreed, if the candidate is not willing to listen, they are going to be hard to work with.
For anyone who, like me, didn't realise, [this is the actual code in OpenJDK](http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/7-b147/java/lang/String.java#String.trim%28%29). 
It does. Your company's design choices, especially where forward-facing representations are concerned, are indicative of the nature of your company. 
I'm not sure what you want to achieve, but one big flaw I see is: In your implementation classes, you call super.add(), super.sub(), etc. methods. These do not exist. The keyword is "implements". You have to implement the methods, that are declared in the calc interface.
I know that is wrong but I thought to have the method signature there as a start to correction. with a piece of the code being public int add(int x, int y){ super.add(x, y); } if taken away I get the error "The type x must implement the inherited abstract method calc.add(int,int) 
I was suffering form a very similar error with vmware workstation. I tried uninstalling, cleaning the registry, editing the registy, etc. No success. This is what solved the problem: [microsoft fixit](http://support.microsoft.com/fixit/) I don't remember exactly, but I downloaded a small exe, it analyzed the problem, and fixed it.
Try downloading it using the offline method. Not sure if it will work but give it a try.
/r/java is for java news; not help. /r/javahelp is where you should be. on that note: http://www.reddit.com/r/javahelp/comments/1ohr0r/metasince_its_getting_out_of_hands_a_message_to/
People in /r/netsec actually get pissed off when we're late with a new quarters hiring thread. They are very popular, and I know quite a few people who filled positions by posting in our thread. Anything that helps unemployed or unhappily employed people find a new job is a positive thing.
First, you should read the [documentation](http://docs.oracle.com/javase/tutorial/java/IandI/index.html) about this, it has good examples. You should not take away the whole method, just the call to the parent class, the "super" part. When you call super.add(), it tries to call the "add()" method in the parent class, which is Object (by default). In the object class, there isn't a method "add". 
Clearly you've done a lot fewer code reviews than I have :D
believe it or not I actually first looked at the sidebar and didn't see it.
&gt; I work there and actually know wheras you're just guessing and are SOOO sure ... anyway... What am I guessing at, exactly? You get awfully defensive over things you want to pretend I've said. 
Unsigned types (byte, short, int and long), and I want them to be primitives.
The last time I had this problem, I used Revo uninstaller to fix it. It probably worked because Revo caught all the leftover registry keys that I missed. 
&gt; How would I check? By reading the docs. `ant`'s docs say that [it uses javac](https://ant.apache.org/manual/Tasks/javac.html). Eclipse uses ecj, [its own compiler](http://www.eclipse.org/jdt/core/). &gt; why the difference anyway? The [JDT page](http://www.eclipse.org/jdt/core/) provides an explanation: &gt; An incremental Java compiler. [...] it allows to run and debug code which still contains unresolved errors.
Asterisk should meet your needs. For java I believe there is an asterisk-java api out there. I'd hunt links but I'm a) lazy and b) on my phone.
No, it creates unnecessary String objects.
My wrapper for Character.isWhitespace does one thing : makes code easier to read. This is good. Im not a fan of using Aaaaaa.Bbbbbbb.Ccccccc.f() trains wrecking my code. Dividing functions responsibilities to single tasks makes your code much more flexible, easier to read, reason about and easier to test. Look at the most upvoted reply in this thread and notice how hard it is to read its code. This is example of code I would not like to see in my source files.
You have an interesting version of javac then. In order to omit the synchronization from the bytecode, javac would have to either * inline the StringBuffer code into your method * or change from StringBuffer to StringBuilder I don't think any version of javac that wants to adhere to the Java specifications will ever do either of those
&gt; Google really needs to suck it up and pay Oracle to license Java. Damn right!
&gt; actually, it's the compiler that makes that optimisation, not the VM itself How would that work? The synchronisation is compiled into the StringBuffer class in the runtime jar and not the calling class. Afaik it is an optional optimisation performed by the JIT which is part of the JVM. The javac compiler only performs very limited optimisations itself and leaves most of the work to the JIT. 
No one uses phones anymore. Move on for heavens sake.
&gt; Im not a fan of using Aaaaaa.Bbbbbbb.Ccccccc.f() trains wrecking my &gt; code. Java has had static imports since 1.5.
&gt; If company is made of dumb, closed minded people I don't want to work &gt; for them in the first place. You're equating "dumb" with "showing proper judgement".
Revo was the first thing i tried, not working tho
looking around here, but dont seem to find anything that relates (at least by searching java, jdk, error #, etc)
Do you even know what a troll is? A troll provokes angry responses with inflammatory comments. I am trying to have a reasoned debate, and you respond with inflammatory comments. That *is* troll-like behavior. What code do you want to discuss? There are numerous, perfect good implementations in this thread that use loops. The [top answer](http://www.reddit.com/r/java/comments/1orwz5/just_had_an_interview_and_want_to_know_how_yall/ccuzr29) is a perfect example.
Thank you :)
I understand that, I am looking for a temporary solution. The web app is on the intranet, that's less of a concern.
RTFM, yourself. The example in the manual shows how to use `Math.cos` into just `cos`. &gt; Importing all of the static members from a class can be particularly &gt; harmful to readability; if you need only one or two members, import &gt; them individually. Used appropriately, static import can make your &gt; program more readable, by removing the boilerplate of repetition of &gt; class names.
1. Kamilio (http://www.kamailio.org/) is probably more suited to your needs than Asterisk or Freeswitch. Fancy approach alluded to in #2, then try http://webrtc2sip.org/ 2. JAIN Sip: https://jsip.java.net/ OR you could get fancy and attempt from the browser via http://sipml5.org/ 3. It is technically possible, but probably not ideal as you'd be reinventing the wheel in many aspects. Remember the media (RTP) will be P2P, but the signalling (and all the details) will most likely be routed through your SIP proxy. Really this could be pretty simple with zero development with a VoIP android client, PC VoIP soft phone, and SIP Proxy. It really depends how much you want to implement yourself.
1) In my opinion, the best alternative to Eclipse is IntelliJ Idea. 2) Yes, if that is what he enjoys and it works best for him. If he is using something like Vim, I guarantee it is more powerful and like a GUI IDE than you may think.
Thanks for advice, I'll look into it all. Yea, it could be zero dev, but my Prof probably wouldn't like that lol I was wondering if I should just record the audio and send an audio file using ftp, but it would end up being a walky-talky sort of communication I think (start,record,stop, repeat)
Your requirements for this project are still kind of vague. What do you mean by "a VoIP"? A softphone? 1) That's not completely true. But your phone and your PC need some way to find each other. If they're on the same LAN, then maybe you could hard code IP addresses, or use Bonjour. If they're not on the same LAN, then usually you need a server on the internet, preferably not behind NAT. The idea is your android phone and your PC each have a username (which might be a telephone number, or might be more of a username). Your PC can then call sip:android@server and the server can forward you to the right place, if it knows what the right place is. Both softphones would register to the server so that the server knows their IP addresses. 2) See [here](http://stackoverflow.com/questions/498043/what-is-the-currently-popular-java-sip-library/498227#498227). 3) Sure. Both your PC and phone would need to run both a UAC (user agent client) to make calls and a UAS (user agent server) to receive calls, regardless of whether they're directly talking to each other or talking to a server. The main problem you'll run into is knowing how to talk between them. How does the phone know the IP address and port of the PC and vice versa? The next problem you'll run into is NAT transversal. Even if they know how to talk to each other, if they're each on different networks, and each network is running NAT, then they won't be able to talk to each other directly. There is a hole punching technique that can sometimes get around that, where both sides send UDP packets to each other at the same time. Since UDP is connectionless, the router thinks the incoming packets are replies to the outgoing packets, and lets them through and routes them correctly.
I've detected a hexadecimal color code in your comment. Please allow me to provide visual representation. [#498227](http://color.re/498227.png) *** [^^Learn ^^more ^^about ^^me](http://color.re) ^^| ^^Don't ^^want ^^me ^^replying ^^on ^^your ^^comments ^^again? ^^Respond ^^to ^^this ^^comment ^^with: ^^'colorcodebot ^^leave ^^me ^^alone' 
Recording audio from RTP streams isn't trivial to do unfortunately. SIPREC is the newish standard to handle this. You could try one of the following but I have no experience with any of these: http://www.voip-info.org/wiki/view/Converting+RTP+to+audio
Thanks for your feedback, I am new to network programming. What I would like to do is create an android app that will connect to a applet on my PC (a softphone, I would like to program this as well, but may not have the time) and demonstrate voice chat between two devices (my PC and android), aka VoIP (as I understand it). So you're saying it would be easier to just setup an SIP server then? I tried sipwise on a Debian VM, but I couldn't get it setup. /u/Enigmaudi suggests using kamilio. 
My experience is that SER/OpenSER/OpenSIPS/Kamilio configuration is at least 10x easier to fuck up than asterisk or freeswitch. In both Asterisk and Freeswitch, you set up peers and trunks, either by username/password or IP address/ports. And then dialplans, so when you call this number, it goes here, when you call that number, it goes there. In SER, your config file is really a customized scripting language. Every Request sent to the server runs through your config file script. Every line you write is an opportunity to break the SIP spec, or send a packet to the wrong place, or forget to handle some edge case, like INVITEs with to-tags, or loose routing (which in SER also handles strict routing). I would only use kamailio/ser/openser/opensips if I really needed a SIP *Proxy* and a B2BUA wasn't good enough. Or if I needed the kind of per packet controls that opensips gives you.
Strongly agree with this recommendation!
I think one of the main usages of javax.script is to allow your applications to be scriptable by end users to make your system do things you hadn't planned. Think a built-in macro system.
Cool, is that the main use case? Like if you want to just have JS validations etc then separating out the code and other best practices are still the way to go?
&gt; someone at least as good as me I am also curious as to what you meant by this. Although professionalism isn't an indicator of skill, for some reason, I find it hard to believe that you've sat in front of enough tech to actually classify yourself as an elite developer.
Another example for curious people: public static void trim(String str) throws Exception { java.lang.reflect.Field charField; charField = String.class.getDeclaredField("value"); charField.setAccessible(true); char[] chars = (char[]) charField.get(str); int i=0; int len = chars.length; while (i &lt; len &amp;&amp; chars[i] &lt;= ' ') i++; while (i &lt; len &amp;&amp; chars[len - 1] &lt;= ' ') len--; if (i &gt; 0 || len &lt; chars.length) { char[] newchars = new char[len-i]; System.arraycopy(chars, i, newchars, 0, len-i); charField.set(str, newchars); } } This is approx **2-3x** faster than most [upvoted here] (http://www.reddit.com/r/java/comments/1orwz5/just_had_an_interview_and_want_to_know_how_yall/ccuzr29). This code has approx. the same speed as original String.trim() on my PC. It seems Java's trim() is not using Character.isWhitespace(). Notice: you may encounter trouble running this on OpenJDK. Works fine on Oracle Java. **This function trims in place. This is a very dark black magic.**
Will look into that annotation. I would write it in java (and javascript for a lot of it too before it even makes it to the server)
That was just an example. I don't know of a library that implements something like that.
This is not a good approach for dynamic URL mapping. Both JAX-RS and Spring Web MVC support path variables.
To me everything looks good, but I would re-think your interface...
Yes, clearly we ignorant heathens do not appreciate your brilliance.
This code is valid only when you want to modify Java sources. There is no *offset* field in Oracle Java and you cannot access those in normal conditions. [This] (http://www.reddit.com/r/java/comments/1orwz5/just_had_an_interview_and_want_to_know_how_yall/ccvq8sp) is how it should look like.
What do you even mean by that? btw I also started another thread in /r/javahelp with updated finer code. Thanks.
I looked it up in my searh history. My error was the same, "error 1316. a network error occurred while attempting to read from the file...". I'm 95 percent sure, that [this site](http://support1.geomagic.com/link/portal/5605/5668/Article/865/How-do-I-fix-the-error-Microsoft-Error-1316-a-network-error-occurred-while-attempting-to-read-the-file-during-installation) helped me. &gt;1) Download and Install the Microsoft Fix It Utility at &gt;http://support.microsoft.com/mats/Program_Install_and_Uninstall &gt; &gt; &gt;2) Run the Microsoft Fix It Utility file you downloaded and click Run or &gt;Open in your browser and follow the onscreen prompts. &gt; &gt;3) Restart your computer, then try installing the new version of the software again.
Asterisk can record calls, and record audio. (See it's applications Monitor, MixMonitor, Record, and Voicemail) But I think /u/Digitalneo is talking about recording it on the client side, copying the file using ftp, playing it back on the remote client. A schema like that, like he says, is more like a walkie/talkie (but with lag). But it doesn't involve RTP at all. It might be easier to implement. I would personally use HTTP and not FTP, if I was going to go that route. But it seems kind of silly to do that in this day of age, because softphone's exist. Asterisk (and Zoiper) also speak a protocol called IAX2 (pronounced eeks two). IAX2 is a binary protocol, and it combines signaling and media over a single UDP port. If you had to implement the protocol yourself, IAX2 might be easier to implement. There's only 1 RFC you have to read. But fewer things speak IAX2 as compared to SIP.
I can't think of a reason to put the JavaScript code embedded in the Java code (maybe for some tiny bit of setup-code?), you would probably use that to run external script files, so it is nothing at all like embedding stuff in HTML/JSP. Speed is not a reason. JavaScript is slower than Java even when running natively, and JavaScript in a JVM is bound to be even slower. I guess people run JavaScript in the JVM for the same reason I use Clojure (and others use Scala or Groovy or Jython or JRuby or ...), that it often much more productive to do things in a higher-level language (same reason so many games written in C++ embed Lua or whatever).
Still trolling? Who cares about exceptions when code needs to be fast at all costs? 
I see you still don't know the meaning of the word trolling. But, perhaps it was my mistake to assume that you wanted honest criticism. The example you modified is plenty fast enough without requiring violation of encapsulation, which is something you should never do in ordinary Java code.
https://github.com/bclozel/springmvc-router
I do not need your criticism. Get lost. I will accept your answers only and only if you will provide more performant version or much more interesting one. Show me something I do not know.
Clearly. You're too smart for any of us here.
I only expect discussion on the same level. If you're bringing nothing to the table except criticism you're not welcome. Trolling is what you are doing every reply: "any of us"... who is this "us"? Am I talking to cacroaches imitating a man?
That is how I have seen it used, and I don't see why anyone would put the JavaScript code inline. Others probably know much more about the performance, but since JavaScript is relatively slow even when jit-compiled to native code it sounds unlikely it would do very well in a JVM (adding yet another level of abstraction between the code and the hardware).
It's called "escape analysis", the compiler recognizes that the object never "escapes" the current method and then inlines the code while stripping away the locking. See [here](http://www.ibm.com/developerworks/java/library/j-jtp10185/). *Most* java optimisations take place in the VM at runtime but the compiler does have some of it's own tricks like this. 
&gt; If you're bringing nothing to the table except criticism you're not &gt; welcome. Except that I didn't only bring criticism. I said your original solution was pretty but has performance issues in Java. *You* responded with trolling, and I was responding to your trolling. As for this code sample, there was nothing more I could say, because it was exactly the same as the first one except for the ill-advised introduction of reflection. &gt; Trolling is what you are doing every reply You still don't get it. Perhaps you might call me overly critical. Fine, I'll accept that. But trolling means intentionally provoking an angry response. You responded to honest criticism with insane taunts of people being dumb, slaves, drones and even making a reference to Hitler. You got the expected response. Then you deleted everything. &gt; "any of us"... who is this "us"? Am I talking to cacroaches imitating a man? This was in response to your (deleted) troll-like response of why people were downvoting you and upvoting me. And taking a trollish delight in the response.
The article discusses the hotspot just in time compiler a part of the runtime and not the javac compiler. The linked article describing escape analysis always refers to it being implemented on the jvm. Both optimizations happen at runtime on the jvm and not in the compiler - java bytecode does not even have instructions to support stack allocation of objects in a sane way (you would be unable to call any method on it) and since java classes do not know which implementation of a class is loaded until runtime javac cannot create a non synchronized copy of StringBuffer - only the jvm has all the necessary information available.
&gt; The fact that you feel so strongly about the website baffles me because I work there and actually know wheras you're just guessing I've made no guesses about anything. I pointed out how un-user-friendly your company's website is, and pointed out the correlation to the fact that you were having a hard time finding a "ninja developer". I assume this means top talent rather than a person skilled in both espionage and programming. If not, then that is my mistake.
&gt; This wasn't an official job posting Everything you do when it comes down to your company is official, whether or not you have the working capacity for it to be so or not. You are a representative of who you work for, and often the sole representative. If whoever is hiring was worried about hiring talent before, you've certainly done all in your power to prevent it. How you're acting right now? Extremely unprofessional. And [this](http://www.reddit.com/r/java/comments/1oqu43/meta_can_we_have_a_monthly_job_posting_thread/ccv3x2z) nonsense? Especially when two posts up you've just mentioned the business? You should be crucified for that. The only saving grace that you have is that the mods removed your post linking you to your company. Though, if someone really cared about which company it were, they could do a reddit undelete to see what used to be there.
Trust me, this version (7u45) is really secure... it actually breaks many webstart applications... &lt;/sarcasm&gt;
YES! Holy shit it works. Sorry, I thought you meant you found the program on the Fix-It site, but that was only a "pick your problem" type list. Thank you so much dude.
http://docs.oracle.com/javase/tutorial/essential/concurrency/sleep.html
Thank you!
If you're asking questions like this.. May I suggest a bit more googling in the future? (;
Ok haha
Try /r/javahelp too. It's more forgiving with questions.
Thanks. Didn't know. (:
Glad I could help! :)
Why is it just "#xD" and not "\&amp;#xD;"? replaceAll() is also regex based. So maybe replaceAll("\r|\n|&amp;#xD;", "") 
 yourString.trim().replaceAll("[\r\n]","") Doesn't work?
This might be legit, though I'd throw parens around "&amp;#xd". 
In a command line, with user interface elements, or a web page?
using command prompt
 Scanner stdIn = new Scanner(System.in); String cmd = null; while(stdIn.hasNextLine() &amp;&amp; !(cmd = stdIn.nextLine()).equals("quit")) { doStuff(cmd); }
For clarity? Otherwise it's less efficient. Although for true efficiency I suppose it would be: replaceAll("[\r\n]|&amp;#xD;", "")
Never ever do nStr += str[i]; In a loop. Every time you do that it gets expanded to something like this by the compiler StringBuffer tmp = new StringBuffer(nStr) tmp.append(str[i]) nStr = tmp.toString() You would be much better off making nStr a StringBuilder.
Check out Quartz. It will work in Java SE, Servlet Containers, and Web Profile &amp; Full Platform Java EE application servers.
I don't know what exactly you're expecting with this. You're barely even asking a question, and certainly not a question to answer. I have no idea what information you're looking for. My best guess is: In java, there are basically 3 kinds of iteration: manual indexing, Iterator, and Iterable. Iterator iteration has become somewhat less popular since java got a for-each loop. First and most primitive is manual indexing. Object[] anArray = generateArray(); // for 0 to &lt;anArray.length, apply doSomething for(int i=0; i&lt;anArray.length; i++) { doSomething(anArray[i]); } Advantages: Applicable to anything that provides an index-based accessor, whether or not it is aware of `Iterable` or `Iterator` Iterator: Iterator&lt;T&gt; iter = someIterableOfT.iterator(); T each; while(iter.hasNext()) { each = iter.next(); doSomething(each); } Advantages: Allows you to operate directly on the Iterator Disadvantages: Forces you to operate directly on the Iterator. In particular, the `remove` method is often not implemented and throws an `UnsupportedOperationException`. Iterable: Iterable&lt;T&gt; anIterableOfT = generateIterableOfT(); for(T each : anIterableOfT) { doSomething(each); } Advantages: Relatively concise, high level of abstraction.
It sounds like what you want is a static initialization block, as mentioned [in this part of the tutorial](http://docs.oracle.com/javase/tutorial/java/javaOO/initial.html). It might look something like this: class P { static int DIST; static { // open file, read lines, parse values, set things like DIST, catch exceptions, et cetera } ... } Static blocks are like "constructors" for the class itself, that run at load time. 
Very cool, thanks.
It's not Java, it's Microsoft's broken focus model.
Use a static Factory and a Singleton P to prevent these strange Exceptions.
Does anybody know how to install and use the intel performance counter monitor with ubuntu? The article only talks about its results, not how to use it.
Yes, I noticed that. Fortunately I was able to figure out the cause of the exceptions this time. Thanks for the warning though.
I would try to avoid error-prone things like I/O in static init blocks for that reason. Populating a collection with static values and other guaranteed-to-succeed things would be fine by me, though.
Can anyone recommend a site/book where I can learn more about code/processor/memory interactions for performance. I really want to learn more to be a better programmer :)
Just got it to work just download from [here](http://software.intel.com/en-us/articles/intel-performance-counter-monitor-a-better-way-to-measure-cpu-utilization). At the bottom of the article there is hidden Download button. Extract and run make in command line that will compile pcm.x, pcm-memory.x, etc, etc
I will give you for example of one of the things that may be contoversial and need explanation : Is original String.trim() safe when you are dealing with Unicode? What I can see is this function is a ugly hack and this is more serious than lower speed of execution or exceptions. I think this was hiding under the question in the interview, not how swift you are juggling for loops. And the lesson to learn is that: if you want safe and correct code do not trust Java. To be more specific. There are Unicode white characters in range above of 127dec. Java's String.trim() will not remove them. 
Please ask on /r/techsupport. This sub is for Java development and related news and happenings, not fixing a problem with your computer that may or may not have to do with Java.
Java sucks. ... the least out of all the options.
I'd like to see the tests repeated on various processor architectures.
You should also look into Java properties. http://www.mkyong.com/java/java-properties-file-examples/
What...no, use a rich IDE like Eclipse or IntelliJ. That sounds a bit mad to me...I don't know anything about sublime but surely it can't have the powerful content assist features a rich IDE has? Edit: typos
Also, being able to use a rich popular IDE is something you should have on your CV if you're looking for jobs.
ok thanks, i recomend giving it a look, a great text editor for all languages! great features
I'm also confused. I think OP may not know how to use Eclipse correctly if he thinks all it does is compile the project.
I don't need a text editor, I need something with content assist, great debugger, auto compile, abililty to validate coding styles, warnings, errors, an in memory java model for navigating the type hierarchy, integration with junit, git etc
Strongly suspect OP is a student or just learning Java.
oh okay, so an all in 1 bundle
Yes, but if you're seriously trying to learn Java you'll quickly find you cannot live without those features and more (and there are a LOT more).
haha okay, thankyou so much for that info, that leaves me one question. Which is better, Eclipse or NetBeans! ha
...or intelliJ community edition. I use eclipse, and I'm now so used to its shortcuts etc that switching to another would be a pain for me right now. I find it is great for what I need, but I know a lot of people prefer IntelliJ. Not used netbeans for about 8 years so I cannot really comment on that.
I know it does both, I just believe I thin k its easier to write in sublime text 3
So would I, but there's only so much time in the day, and only a limited selection of hardware available to me. The code is there for any and all interested parties to play with so if you got some spare time and a variety of interesting hardware I'd be very interested to collaborate.
Java and I still don't get along. I feel it's often overly verbose and inflexible requiring too much code to do simple things which leads too much time to read and debug things. It's inflexibly strict typing also forces too much copy and paste increasing this problem. I feel Java's strength has never been the language itself, but the JVM that backed it. While the two are deeply connected, recent arrivals of other languages on the JVM are showing that the strength of the JVM is available without the relatively weak language. I'm very interested in how Perl 6 is now starting to integrate with the jvm. It's progressive typing that allows a full range of options from the flexibility of dynamic typing to even stricter typing than java allows seems like the right way to do things. So much attention and thought has been put into syntax and how to create compact and precise code, that I can't help but feel that it's impact on programming will be enormous. 
Sublime Text is awesome because it's lightweight and that's cool. There are quite a [few](https://sublime.wbond.net/packages/Javap) [plugins](https://sublime.wbond.net/packages/Javatar) [to](https://sublime.wbond.net/packages/SublimeJava) sublime that make it closer to an IDE.
Nothing seems to work. Tried the examples above yet the output still contains the line feeds. Even tried \\\\n etc as per a suggestion on stack overflow. Never had an issue like this before. Ill post full code when I get home, must be missing something simple.
For those who want a short version of the list, without clicking through 5 pages: 1. Resiliency in the face of (often dirty) politics 2. The magic of threads 3. Java as first programming language 4. (Close enough) cross-platform compatibility 5. Sustained success on small chips 6. Blu-ray 7. Curly brackets just work 8. Groovy 9. The JVM 10. The NoSQL revolution, built in large part on Java 11. Minecraft hooks into postmillennial mind share 12. Open source
when using substring no copy of the underlying char array is created, so just finding the start,end and getting a substring would be the best way 
How does it compare to [JUNG](http://jung.sourceforge.net/) ?
It's not *always* the best way, see [here](http://www.reddit.com/r/java/comments/1orwz5/just_had_an_interview_and_want_to_know_how_yall/ccv0a01) for some questions to determine if that might be a problem (3^rd paragraph)
Kind of a random set of bulletpoints. Blu-ray?
That's a nice thought - although I don't really need the views served across the network, just the data. I was looking more for connection pooling/database access/session management run-of-the-mill server stuff, except with some sort of API to access all these goodies from a Swing front-end. 
As someone not-too-familiar with Groovy, what are the main reasons driving you to use it?
There are a few reasons IMO: * Syntactical sugar. For example, if you have a list of People, and you want to get a list of their ages, in Java this is 5+ lines of code. While not terrible, in groovy it is much shorter. e.g. people*.age. * Succinct and readable. Many people complain about the verbosity of Java. While that still exists to a certain extent, things take up far less space in my experience. * Java Code is Groovy Code. With very few exceptions, Java can be compiled with the groovy compiler. This lets any Java programmer easily pick up Groovy, which allows even larger corporations to make the switch. * Grails. It's an easy to use, powerful web framework. Very useful if you need to be as productive as Ruby / Rails, but inherently on the JVM. There are many more, I'm sure, but those are what I can think of off the top of my head.
Why not a RESTful backend with something like JAX-RS? There are tons of (servlet) containers that scale this model incredibly well. Use a nice HTTP/REST client (e.g. Jersey-client) and JSON mapper (Jackson) in the Swing front-end and you're golden. Btw. JavaFX _will_ replace Swing. It's not a bad thing to consider JavaFX even if you don't need the FXML features.
It's the ecosystem. More libraries than you can shake a stick at.
olivers talk is really good, i also recommend the videos of it. http://www.youtube.com/watch?v=s9LJG6olxI4 for example.
Depends on your point of view. If you really want the distributed Swing clients, you need to look into web services and start thinking about everything in terms of JSON or XML responses. If you aren't really set on distributed clients specifically, but rather on leveraging your existing Swing knowledge and avoiding front end development, read up on [Vaadin](https://vaadin.com/home). Vaadin is a Finnish word that loosely translates into "female reindeer" or "Swing for Web Applications", depending on the temperature and current blood alcohol content. Disclaimer: I am not affiliated with Vaadin in any way.
Personally, I'd just delete it from the filesystem. Not sure if you are planning to install an updated one. If so, then make sure you set the **JAVA_HOME** and update the **PATH** environment variables.
Have you tried [JavaRa](http://singularlabs.com/software/javara/) a tool for the deployment, updating and removal of the Java Runtime Environment (JRE)?
Netbeans is better in my opinion. Particularly for learning. There is a no configuration and you do not need to search around for a bunch of plugins to make it usable.
You can use a regular application server for this. [Stateless session beans](http://docs.oracle.com/javaee/6/tutorial/doc/gipjg.html#gipin) are very lightweight and you can leverage the concurrency capabilities of a standard Java EE application server, like Glassfish. The Swing client would then just become a [remote client](http://docs.oracle.com/javaee/6/tutorial/doc/gipjf.html#gipiu) of the beans on the server.
That's a question for each individual and sometimes it varies by what you are working on... I like to do JavaFX/Swing in NetBeans; Android in IntelliJ; and JavaEE in Eclipse.
That's a question for each individual and sometimes it varies by what you are working on... I like to do JavaFX/Swing in NetBeans; Android in IntelliJ; and JavaEE in Eclipse.
You use the double brace initialization like this: http://vanillajava.blogspot.com/2011/06/java-secret-double-brace-initialization.html
Another approach is to use Guava's [Immutable.Builder](http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/ImmutableMap.Builder.html): static final ImmutableMap&lt;String, Integer&gt; WORD_TO_INT = new ImmutableMap.Builder&lt;String, Integer&gt;() .put("one", 1) .put("two", 2) .put("three", 3) .build();
yeah really. Made sure someone pointed this out. #6 Even. Blu-Ray!
please don't use ant, use Maven or Gradle.
&gt; obligatory article du juor strutting about how relevant/important/dominant java is Obligatory cranky guy who's tired of seeing this kind of stuff on his front page. I don't mind a little language evangelisation, especially for one that has bad rep for being considered "old," "buggy" and "slow." Even so, articles/headlines like this make the Java community out to be very insecure and self-obsessed. Languages/frameworks are validated by the projects that are being done with them, and those things can speak for themselves. Talking about uses for it, or projects that have been done with it do far more good than listing off all the cool things that Java has/does.
http://www.stackoverflow.com is a great resource for these kinds of questions. http://stackoverflow.com/questions/507602/how-to-initialise-a-static-map-in-java
&gt; IBM loved the language but was always battling Sun. Its decision to call its wonderful IDE "Eclipse" was not warmly received by those at Sun, who never figured out the business world like the folks at IBM. That is hilarious and I understand, now, why they named it such.
I was not aware of this, thanks. I think I may have pretty much already built my own version of this for my project. It seems to me an easy way of converting a file into a String -&gt; String map, essentially? For my project, my configuration file has String, int and double information. So I wrote a method that reads the file and sets up three maps, one each String to Integer, String to Double, String to String. That way I don't have to keep calling Integer.parseInt, etc. Though I'm guessing there's probably already a better way of doing this.
Yes. Take what you read as a starting point, and write lots and lots of code. Find an open source project that you like, and read lots and lots of code. See how things are done in the "real world". If you feel brave enough, go through the open bugs and try to fix one. Submit patches, listen to the feedback. Make a name for yourself, so you can open doors that would otherwise be shut by not having the degree. It is a harder road not having the degree, but perseverance can make up for the paper.
You can be good at anything without a degree if you put in the effort. This is true of programming even more than most things, because of all the resources available online. "Can I get a job writing java without a degree in CS?" is a different question though. The answer is still "yes", but the difficulty is increased because prospective employers who get 100+ resumes for the same position will toss a lot of them with very little review, and "no CS degree" is high on the list of reasons yours might be excluded. To make up for that you'd need "experience" which, if you've never had a programming job, will be hard to come by. You may want to look into contributing to open source projects to build up a portfolio of code to show off in place of a degree.
If only it was that simple. OP provided a [frequent causes](http://jhades.org/documentation.html#freqcauses) link to explain why it's not so simple. From my own experience, he is quite correct.
I use this too, but it's important to note that this is technically an anonymous inner subclass of HashMap.
Or, and this is going to probably be surprising, update.
I read that in Snagglepuss's voice, was that the intention? Number six eeven. Exit, stage left.
Java is the worst programming language, except for all of those others that have been tried?
Are you asking about what to use for communication? Is there some reason you can't use JAX-RS or JAX-WS on Tomcat or some app server? Is there some requirement that precludes the typical network communication solutions in Java?
The "compiler" that this article talks about is the JVM's JIT bytecode to native code compiler. Not javac, the Java to bytecode compiler. Javac would never inline code from Vector or StringBuffer because this would completly bind this code to a specific version of the JRE and break the "write once run everywhere".
Which classes? Swing/AWT/JavaFX are not covered in the Oracle certs. The OCJA isn't extremely difficult. The OCJP is more challenging. Have you tried comparing your class objectives to the cert objectives? [OCJA topics](http://education.oracle.com/pls/web_prod-plq-dad/db_pages.getpage?page_id=5001&amp;get_params=p_exam_id:1Z0-803&amp;p_org_id=&amp;lang=#tabs-2) and [OCJP topics](http://education.oracle.com/pls/web_prod-plq-dad/db_pages.getpage?page_id=5001&amp;get_params=p_exam_id:1Z0-804&amp;p_org_id=&amp;lang=)
Care to elaborate? Is that your opinion on all certs or just the Java ones? Is there anything you'd change to improve their worth?
I've only ever been exposed to ant. Why use these other two over it?
Programming certificates in general. The Java Certification assess that you know the semantics, syntax and the standard API of the language but does not asses you on your ability to use those tools to solve problems or how well your solutions are. This is why having projects you've completed on github or in past work is more valuable at demonstrating your skillset. However if say you're an experienced C#/C++/lang X developer with many projects under his belt but wants to move to a Java role in a new job, these certificates can show that you can apply your current knowledge to the Java toolchain. 
so much boilerplate code to get a project running. I do love static typed but gah... so much typing
Try http://www.reddit.com/r/javahelp
You can be good at anything without a degree, however to get a Job or be taken seriously is another matter. Most workplaces want to see that you have something that can prove you know what you are doing. For most young-adults these days, that comes in the form of a college degree. For others, it comes in the form of prior work experience. What are you looking to do with your java knowledge?
Because one array stores the String that is the name of the song which will be displayed on the mp3 player. The other array just contains the MP3 file which should be matched up with the other array when the song name is clicked
Autocomplete along with macros save me a lot of typing. For netbeans, ctrl+space is amazing.
The modulus (%) operator is what you're looking for.
Depends on your view render (and an assortment of other technologies, configurations, stacks, etc, etc). - JSP? &lt;%=... %&gt; - Velocity? ${...} - FreeMaker? ${...} etc. With this in mind, you will need to provide the the value to the view somehow which will depend on a host of other things. We need more info!
the modulus operator gives you the remainder for a division problem though. I just need to be able to split up a number (36) into 3 and 6
Modulus is what you'll need if you want individual digits. What happens when you modulo a 2 digit number by 10? Alternatively you can also convert the number to a string and split up the characters.
Convert to string 
10 % 10 = 0 11 % 10 = 1 12 % 10 = 2 See a pattern?
ohhhh okay. I think i'll be able to solve this