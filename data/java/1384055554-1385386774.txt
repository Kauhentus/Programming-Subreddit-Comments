Describing certain numbers (exactly) in base 2 is impossible, much like how, in base 10, 1/3 = 0.33333333 repeating forever. So, the computer approximates it as close as it can.
&gt;You can't do some things with the Array class though, for instance, subclassing it That just means that an array has no associated class type.
I looked into this when writing an led screen ticker for google trends. I went from java to c and others but realized it was easy to do with Processing, the language that the arduino ide uses. [Here is the serial library](http://processing.org/reference/libraries/serial/) Edit: It's really high level but if it as simple as sending a one or a zero this should be fine as the data stream is sent one byte at a time.
The installation is a pain, but luckily we have very experienced people in it in our team, so they took care of all of that. It actually requires quite a lot of resources, but in exchange gives great throughput and low latency. So far I am finding it much better than ATG Search.
Not sure how experienced OP is but to use Processing in Java you can just include it - search for Processing Eclipse tutorial
Actually, an array does have a class type. The class of `int[]` is `[I`. That's why if you call `toString` on `int[]`, you'd get `[I@xyz`, which is `getClass().getName() + "@" + Integer.toHexString(hashCode());`, the implementation of `toString` provided by the `Object` class.
an Array has a fixed size that needs to be specified at initialization (5,10..etc), ArrayList size increase as you add elements to it but you can specify an initial size at construction.
&gt; As a first year I.T. student, this thread genuinely scares me. If it really does, and I'm not joking, you may want to reconsider your study. I'm pretty sure most people only mention the most important stuff they use. Even for the absolutely smallest of projects, you won't start from scratch. As an extreme example, starting completely from scratch means you would not even install an operating system on your PC, but write your own kernel for the single project, your own threading support library, your own virtual machine, your own network stack, your own string library, your own library to extract the useful bits from an HTTP request, and so on and so forth... just to get a simple HTTP "hello world" response. Why would you do all that? This would take you years, maybe even decades, when you can just reuse the existing OS, existing JVM and existing Servlet framework. A "hello world" would not take you 20 years then, but 20 seconds. This is a big difference and that's why people use frameworks. 
Most likely you have just coded some sort of concurrency bug, like a race condition that behaves differently on different processors. To get more help, you are going to have to post more info about which frameworks you are using, and perhaps some code. Have you tried debugging the code? Do you reuse some object which describes each of the squares? Have you tried doing a clean recompile on both machines? Have you tried copying the working binaries on to the other machine? Double checked the version of Java you're using on both machines?
An array is an object, but not a class instance. See JLS 4.3. And 4.3.1. 4.3 &gt;There are four kinds of reference types: class types (ยง8), interface types (ยง9), type variables (ยง4.4), and array types (ยง10). 4.3.1 &gt;An object is a class instance or an array. JLS 4.10.3 does have some class-like implementation details for the array type, but the JVM implementor can implement them as they like. 
[10.8](http://docs.oracle.com/javase/specs/jls/se7/html/jls-10.html#jls-10.8) &gt; Every array has an associated Class object, shared with all other arrays &gt; with the same component type. I was responding to: &gt; That just means that an array has no associated class type.
Punit is interesting to hear about. I feel like cucumber-jvm should have been preferred over jbehave. It is a much more vibrant community and better documented
I also agree mockito is amazing
Frameworks make development much easier not harder. You will not have to learn them all. There is a lot of similarity between many of these frameworks as well. The only real problem I see with so many frameworks is it is difficult to evaluate them all and pick the best one.
I fixed it after a suggestion on a java irc channel to update my video driver, apparently I forgot to install one after formatting my laptop, and that fixed the problem!
Can you share the code that is placing the objects on the grid? It appears that the full tree is painting in 3 quadrants, then the partial tree is overlaying the full tree in 2 quadrants, but the partial tree is not as large as the full so the full tree is bleeding through. How are you laying out the placeables in your grid? 
Sorry, I was not clear. I meant to say that "Array" itself has no class type.
A forewarning about dropbox that is pure anecdote: I've been using it for syncing my research project. Occasionally, it will not sync the latest version, even though it reports that it is, in fact, synced. Just keep an eye on it if you need the copy to be up to date. 
You are working on some game / emulator based on Ultima 8?
&gt; Most of the time someone is tempted to throw an AssertionError that there is a more expressive error or exception to choose: for example, InvalidInputException. If one doesn't exist then defining your own would be more expressive. For example, if your program has 0 bananas write an "OutOfBananasException". AssertionErrors are not for invalid input or such "normal exceptional" situations, but rather for unexpected cases, which should never happen. If you have an invariant defined for your class, you can use asserts (i.e. AssertionErrors or assert statements) to signal that invariant has been broken, as in there is a programming error within your class. Errors should not be caught, so exception handling done right does not interfere with using assertions as it would with Exception subtypes. &gt; What value does AssertionError provide? As explained above, it's well suited to signal an invariant has been broken, i.e. your module is broken. InvalidArgumentException or such signals, that your module is used incorrectly, i.e. it might behave perfectly right, but some client code (perhaps not even under your control) just calls your module with incorrect parameter values. &gt; I prefer errors in production because they are deterministic. For testing I'd rather write unit tests than rely on assertions. I'm not sure if I understand what you're saying here. Assertions used in unit tests are almost entirely separate from "normal" assertions (AssertionError or assert statement), and while they serve similar pupose of ensuring correct functionality, they tend to verify class through its public interface, as assertions within the class often verify its internal state. All of these are deterministic.
Arrays are a fixed-length data structure. Each one of its elements can be set or accessed. When an array is created, its contents are filled with the [default value](http://docs.oracle.com/javase/specs/jls/se7/html/jls-4.html#jls-4.12.5) for the type of the array. ArrayList&lt;E&gt; is a data structure which implements the List&lt;E&gt; interface. It stores information using an internal, private array internally known as elementData. As elements are added to the ArrayList, they are stored in the internal array. ArrayList prevents you from accessing elements that are not yet added to the ArrayList. As ArrayList grows, the internal array eventually runs out of space. When this happens, ArrayList creates a new and larger array and copies the data over to it. This is a double-edged sword. ArrayList has no limit to what you can add, even though you might not be able to access each of the elements by index (another topic for later), but at the same time it takes more and more time to add elements to ArrayList when it needs to create another internal array. You aren't creating a new array every time you add an element though, ArrayList will give the internal array a lot of extra space to prevent constant array copying. Still, accessing array elements is way faster than accessing ArrayList elements. So you get to decide, when choosing between the two, if you want a fixed size in exchange for speed or a little less speed in exchange for dynamic size.
I think by platforms you mean Ecosystem. Industry jumped onto Java with the first introduction of a memory safe, crashes less oop programming language. It was all the rage and companies could port their brick and mortar code rather quickly. A lot of momentum comes with that so when a novel markup language like xml comes about it becomes the industry standard if it is better by an order of magnitude than what was used before. But momentum is hard to stop so by the time the platforms adopt and polish all their hard work better things exist but you can't stop a Mac truck... so we have ant and maven and hadoop; all cludgy hybrids of great new concepts and industry standards of days gone by.
thank you very much, I spent a few hours yesterday searching for something but found nothing. This should work well enough. 
Version control!
I would recommend using a proper version control system such as Git. Dropbox only lets you rollback revisions from the past 30 days. 
Maybe not indeed, and especially given the dire state of Geronimo progress over the last few years anyway. I created an issue at the Geronimo tracker. Offered to submit code, offered to help out, offered to provide more info. All I got was... nothing. Silence. Where have you seen a community version of Liberty? The only version I saw is just "Liberty" (8.5.5). It's friendlier for developers, but it's still closed source, still not allowed to be used in production, and still ships with a JSF version that's so old nothing runs on it but the TCK. 
Firstly this is a Java subreddit, not JavaScript subreddit. Although they sound similar, they are very different languages. It is no problem though. The problem with this is code is that you have a semicolon after your if statements, which ends the if statement. If I were you I would bracket { } the if statement so it would look like: if (size == "large"){ price=3; } 
remove the ; between ) and { in your if statements, and add {} for every if statement until your more comfortable (even tho its only one line) **Explanation:** your ; 's are quitting your if statements. so you're running it alle. price=2; is just the last time you set price, so price will always be 2. and yeah, you want /r/javascript 
What do you do when the tool you're using for version control states that the version you're looking at on one pc is the most current version, and the version you're looking at on their website, and on other machines (which is an older version) is also the most current version? My resolution: Thumb drive. If thumb drives stop working for this task, I'll probably just move to carrier pigeon. 
What tool are you talking about? Dropbox isn't a tool for version control
Find a publicly available weather API. Use the basic java HttpClient and make calls to it. Download an XML or Json parsing library to handle the result. I would say to just start out with a text-only command line interface until you get the hang of things. http://stackoverflow.com/questions/6051648/httpclient-in-java
Dropbox does version control, as a matter of fact. It's not a tool meant for software version control, and so it tends to not like frequent changes to files, because it expects files to be more static. 
you know, there are mailing lists for announcing your release. one would think that each "demux" submission getting downvoted would tell you something. also it's never inciting any discussion at all. 
 I'm a uni student, last year I had a Flash course and created a 2D Minecraft game (currently hosted at https://s0217133.webontwerp.khleuven.be/webdesign/website/games/minecraft/), It's a bit heavy and still needs some tweaking. This year I have a Java course and decided to kick it up a notch, creating a isometric multiplayer game, since I wanted to put as much time in coding, I used some textures from Ultima 8, since it has really nice pixelart. I'm planning on putting everything together on a site I host myself, probably around next year.
I commented above that the issue wasn't even in the IDE or SDK, but as a missing driver for an nVidia card, after installing the driver the issue was resolved! To answer your questions about position (in case you'd like an idea of the code): I use a double array of Tile classes, Tile[][] map, and I a MapRenderer to calculate the offset of each tile and output it to a bufferedImage, the objects themselves have an x,y position corresponding to their tile, and it fetches the actualy position from the MapRenderer, which then serves the function of translating cartesian coordinates to isometric coordinates.
Agreed, Dropbox is not version control! Thank you, and good day sir!
Ya no problem! You should share your project over at /r/arduino after you get finished!
Why don't you create a bitbucket.org account instead? Unlimited private repositories, shareable with up to 5 other people, and online tools for navigating your repo...
C++ is still here, right?
So is C.
Yes. My point is, people use c++, and c, nearly 25 years later after creation. Java is young, but popular. I think it will be about where c++ is 10 years from now.
Java will need to be maintained for quite some time in the future. It'll be just like cobol is now, with large corporations needing to retain expertise in that language for legacy code that's too expensive to rewrite. I see it being around for 2 decades for sure. I'm hoping by then we'll have newer and better languages that solve contemporary solutions, so it may not be used for new development. 
The point of my initial reply was to state that there is an issue with Dropbox's ability to do any kind of version control, and therefore one must weigh the risk if one intends to use it as even a means of syncing code. A snapshot IS a version control, though. There are also plenty of version control schemes that do not keep track of an infinite number of revisions, but are still branded as version control, so I fail to see the argument here. Doing something poorly certainly means it the tool doing it should not be used, but it does not mean the tool does not do that thing.
If I'm understanding the problem correctly, you probably want to put something like a JPanel inside of the JScrollPane, then override the paint(Graphics g) method in the JPanel to draw on it. If you want like an actual *image*, as in a .jpg or .png, then still include a JPanel but put your ImageIcon inside that JPanel. So, for example, something like this: public void createAndShowGUI() { JPanel panel = new JPanel(); panel.setLayout(null); //or whatever layout manager you want panel.setBounds(0, 0, width, height); //width and height obviously being whatever you need JScrollPane scroll = new JScrollPane(); scroll.setSize(panel.getSize()); scroll.setLocation(x, y); //or whatever you need/nothing if layout manager takes care of it scroll.add(panel); IconImage image = new ImageIcon("image path"); //use whatever image path you need, or if the image has already been made, use that image.setBounds(x, y, width, height); //fill in values as needed, remember its relative to the JPanel panel.add(image); } That will draw an image inside of a JPanel inside of a JScrollPane. If you wanted to just draw in the JPanel without an image (.jpg, .png, etc.) then you wouldn't include the ImageIcon part, but instead your JPanel constructor (line 2) would look something like this: .... JPanel panel = new JPanel() { @Override public void paint(Graphics g) { //draw using Graphics g } }; .... There are, of course, other ways to do it. Say you did want the image (the first example) though. Drawing *on* that image becomes a whole new beast. Something like putting the .jpg or .png or whatever inside of a BufferedImage, extracting the graphics context from the BI, editing it, and then displaying that graphics context in a new BI. Super complicated, and I haven't actually done anything like that, so I may be wrong. But I think that's what it is. Feel free to ask questions and I will do my best to answer.
Once a programming language gets well established it doesn't really die. But there is generally some language that is the most popular at any given time, and the top language inevitably changes with time.. Thinking back to my earliest computer experiences in the late 1960's, I would say that a language is doing well if it spends a decade as one of the lead languages. To be king of the hill for a decade generally means that the language must dominate in both commercial and academic circles. Generally languages fall into disuse when programming styles and technology changes. Java has had a good run, and it isn't done yet. But it does have some vulnerabilities. I worry when it seems Oracle more concerned about getting me to install the Ask toolbar than fixing problems. But someday we will have a change in programming style or technology that Java can't or won't accommodate. As long as there isn't a "Javapocalypse" there will be Java jobs around for a long time. The may not be the newest sexy stuff, but by then you may be one of the old-timers who is content to do maintenance. Or else you will be a restless old fart like me who is always looking for the next big thing.
You may want to try [r/javascript](http://www.reddit.com/r/javascript).
Try the [/r/javascript](http://www.reddit.com/r/javascript) subreddit since this one is for the Java programming language.
Maybe you don't need the keytool, but can use the SUN PKCS12 KeyStore implementation instead? KeyStore ks = KeyStore.getInstance("PKCS12"); InputStream is = new FileInputStream("file.p12"); ks.load(is, password); String algorithm = KeyManagerFactory.getDefaultAlgorithm(); KeyManagerFactory kmf = KeyManagerFactory.getInstance(algorithm); kmf.init(ks, password); SSLContext context = SSLContext.getInstance("TLS"); context.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null); SSLSocketFactory fact = context.getSocketFactory(); Socket sock = new Socket(host, port); SSLSocket client = (SSLSocket)fact.createSocket(sock, host, port, true); client.startHandshake(); 
Where'd you get this code segment (or did you write it yourself)? I don't see it in the SUN API. Either way - thank you I'll give it a try.
I will, its simple but interesting.
No. Have you considered a database?
Can't figure out how to edit on phone. Just to clarify. I'm trying to get an image to display in a 500x500 ScrollPane and then draw on top of that image
Yep, the JVM is an undeniable force to be reckoned with.
But the JVM will never die.
Er, no. It's seeing what websites worked for other people. Some are indeed better than others. They aren't created equal at all. A massive page of information isn't going to help you understand much lol... No one is blaming anyone for anything here. You're really defensive and paranoid about something and I have no idea what it is and I'm guessing it's a personal problem.
Not Forbes, but a blogger named Michael Humphrey wrote the piece and hosted there. 
I hope not.
Predicting the future is impossible, however, it seems to me that Java -or broadly speaking JVM- isn't going anywhere any time soon. While Java has several strong points independently, there's also the Android platform too which is entrenched in Java. What seems more likely to me is that another language built on the JVM platorm (Scala, Groovy, Clojure, etc) where the JVM compatibility is retained, but another language or interface patches some of the gaps that Java refuses to (operator overloading).
Well thats a strange requirment hehe. Well how about int timesOne(int i) int timesTwo(int i) ...... int timesNine(int i) int result(int i) { returnt timesOne(i) + timeTwo(i) + ... + timeNine(i) } That should be 10 methods
I would refer you to this tutorial http://examples.javacodegeeks.com/desktop-java/awt/image/drawing-on-a-buffered-image/ Because off the top of my head, I cannot explain it to you.
The jvm one of the strengths of Java, but it is also a point of vulnerability. If Java were to have a sudden catastrophic failure it would probably be due to a jvm problem. I am definitely not saying that will happen, but we have to recognize that it is vital to keep the jvm secure and reliable. Oracle seems to have finally recognized how important jvm integrity is; I was worried for a while. 
Alright, lets think this out together - what would you think about doing a text based blackjack game? Simple rules, fun and easy, and if you have the time you can go further with images too. Until then you can just do something like this - ---------- WELCOME TO POKER CURRENT CASH (X) YOU HAVE BEEN DEALT: CARD CARD DEALER HAS [CARD] [HIDDEN CARD] DO YOU WANT TO (h)it, (s)tand or (f)old? YOU HIT. CARD CARD CARD DEALER: CARD [HIDDEN CARD] YOU BUSTED. YOU LOST X DOLLARS YOU HAVE X DOLLARS. PLAY AGAIN? y/n n EXIT! YOU LEFT A WINNER! CONGRATS! -------------- What do you think? 
for(var i= start counting here; i&lt; until this is false doesn't really need to be i based but probably should; perform this operation after each iteration most commonly i++ no reason it can't be i+2 or whatever; btw that's the value of i next iteration){ you're going to want to grab img 1 document....blahblah hey couldn't we use i in the id, and file name; because we're sooo clever. (Even though whoever made this assignment is basically backhandedly guiding you into bad design practice; instead of to detaching model from logic. Could totally have a model object for number to file matching up top, perfect time to introduce enums; that could be loaded by someones restful web service.. but noooo that's too hard to teach in a way where that will be natural when you understand what those words mean, so you'll just have to relearn over bad habits latter...... grumble grumble grumble) }// damn closing brackets (because your probably in notepad or something that won't close them for you) oo up top in the for ; delimits those 3 sections in case that wasn't clear with the word mixing. .. no reason not to help him; it's a common piece to every language... downvotes are fair play though.
arraylist is growable, and a class; and an implementations of a list ...... just look up all the collection interfaces it'll make sense in a little less than a week probably. set, list, map learn them.
Well since the entire enterprise and identity stacks from Oracle, IBM, SAP and CA are all written in Java and millions of companies worldwide use one or more of those products, yes. When you add in finance, CRM, integration, service delivery and reporting systems that are built on Java you will realise there are a shitload of systems and software packages that use Java. It's not just applets, Struts and Spring any more.
I think the reason people are downvoting you in subsequent comments is because using a thumb drive as an alternative is not a good (or, in many cases, feasible to begin with) solution. Either use your own server with automated backup to hardware you own, or move to a cloud-based system. (Storing a git repo on a thumbdrive would also be acceptable if it's just a personal project.)
..... ummm your gonna want some work on that &gt;.&gt; collection interfaces set map list learn those. Arraylist is an implementation of list, just remember that for the test. It's called arraylist, because it uses arrays internally, but implementation is unimportant, until you know what these mean: random access, amoratized constant time, and unsynchronized. 
Sure its essential and in the big picutre much more powerful than just java the langauge so I am not worried about the jvm going away or loosing steam anytime soon... 
"still be"?? \&gt; implying...
Depends, is it being used (by yourself or others) already? Do you know it all works already? Are you going to write unit tests for everything? 
You could start writing test wherever you're working on new functionality - before you change anything, put together a complete test suite for that section. That way you can attempt to ensure that your changes don't break anything.
I agree that the jvm is more powerful than the Java language itself. The fact that other languages are built on top of the JVM is proof that it is more powerful than the Java language. But it is important to understand the danger inherent in the jvm model. Too many Java fan-boys want to bury their heads in the sand and pretend like there are no dangers, but that is only inviting problems to creep in. When Java got kicked out of the browsers that was a wake-up call. Some people wanted to kick it out of the OS, too. That is clearly an over reaction at this point. But we can't become complacent. Sure, if the Oracle jvm gets in trouble we have the open jvm to fall back on. But if the official jvm proves to have a fatal flaw the whole system will get a black eye and the general public will not be interested in the fact that there is a safer alternative available. Every Java developer should be working to hold Oracle's feet to the fire and make sure that they continue to take Java security and performance seriously.
This all comes down to how you have separated your code into layers of distinct purpose. For instance, you may have an application with a "service layer" that implements a service interface and is primarily responsible for receiving input, translating it to its internal representation and passing it on to the "business logic" layer and then appropriately creating a response to return to the caller. If such a layer exists, I would concentrate on writing unit tests that ] validate that different kinds of input are appropriately handled. For instance, is it valid for your service methods to accept a null object (it certainly shouldn't throw an NPE). What kind of exception should be thrown if the caller requests an object that doesn't exists (in the case of your typical 'public Foo get(Long fooId)' method)? Each one of these behaviors can be asserted using a unit test. Furthermore, I find it extremely helpful to use a code coverage tool (such as Clover) to track the code coverage I am achieving with my unit tests. I typically shoot for about 80% coverage. I will write a few tests, run them, see if I am hitting all the interesting bits of my code, write some more tests, repeat. I also use "Mockito", a framework for easily controlling the behavior of transient dependencies of the component under test. For example, lets say there is some complex behavior in which, every time your method under test is called, a DB lookup is performed, a message is added to a Queue, an email is sent, etc. You don't want to go through the process of wiring all these dependencies into place just to get some assurance that you method under test is performing correctly. Instead, you can quickly mock out the behavior of your DB, JMS system, and SMTP server by declaring exactly what behavior they should exhibit for this test. Its also great for synthesizing behavior that is difficult to reproduce in practice (for instance, your DB connection being unavailable) so that you can make sure your code handles error scenarios. Another great guideline is to make sure that your method visibility is correct. Only make things that need to be public, public -- everything else needs to be private or protected. This forces you into thinking about what each components responsibility really is and thus what clients of a component really need access to. Once you have that sorted out, you are a hop skip and a jump away from defining an interface that your components will implement and that your clients will conform to. You are much more likely to have appropriately decoupled components if you keep this in mind. How is this related to unit testing?... well, you can now concentrate your energy on writing unit tests that will exercise your code exactly the way your clients will. 
Nice
Mwhoah... you don't have to learn to these things NOW. If you're a first year student you'll have plenty of time to dip your toes in the basics first and don't worry about frameworks for at least a year or two.
How should we know? At the very worst people won't write new stuff in it, they will just have to maintain the old codebase.
Neat. I had no idea OpenCV offered a JAR.
Facebook just developed its Presto engine in Java ;) Many startups I know are using Java. And last but not least, many big enterprises have vast amounts of Java code running. Despite the doom and gloom spread by mainly Python and those few Scala users, Java is not going away over the next decade!
Agreed, 10 years ago C++ was in the same position as Java is now. (matured major language)
Geronimo is NOT a good example of how Apache manages things!!! The project has NO community and NO face. To the outside it seems like an almost dead project. I've never seen blogs about Geronimo in the last 4 years (there were some when it just started) and never ever see someone talk about it at a conference. The only thing you can be sure of with Geronimo is that you are going to be complete ignored. We once tried to evaluate Geronimo and asked some questions, but got no response whatsoever. I think they have all user mail going straight to /dev/null. I hate to say it, but I would even choose WebSphere (shudder) or WebLogic over the pain and desolation that is Geronimo. 
Why do you think Scala does not deserve being the successor of Java?
It will rewrite anything because serializing is another step than writing stuff to a file. But the other question is crucial: why on earth would somebody dump objects with gazillions of strings on file?!?
/u/kristler deserves a medal for using that picture!
So your psychology degree finally pays off. Congratulations!
Well functional programming has been in academic for decades and never really entered the business world. Anyway Java 8 added many functional-style facilities. I hope this will be the key to bring, if not a FP language, at least some FP mindset to the enterprise world. A new language like the one you say, even if it magically appeared tomorrow, would take ages to impose in the programming world, expecially in enterprise where the established is hard to change. Maybe you're right but surely it won't be soon :)
Never too late to start, friend!
I'm working on it! Just finished my first Java class, but I'm still at such a basic level. It's interesting though, I've been able to use it with some arduino stuff I'm doing. It's nice to be able to apply it to something.
Create a subclass of JScrollPane and override paintComponent. I forget if repaint() must be called.
Visual Basic 6 is coming back. **Source: I'm an idiot.**
I have mostly been a "windows stack" developer since the late 90's. I started with ASP/VB and then moved to C# once .NET made it into production. Fast forward to the present and I am now completely kicking myself for not being a Java guy all those years--and am frantically trying to retool myself to remedy this situation. The way I see it, every company (start-up or established) needs a healthy mix of new hotness (web/mobile front ends) and old busted hotness (core services). For my next venture, my old busted hotness will be Java/Linux. These will be the systems I don't want to revisit every time the hipster maintainer of my stack decides that [backwards compatibility is for suckers](http://blog.ircmaxell.com/2013/06/backwards-compatibility-is-for-suckers.html). So I realize the plural of anecdote is not data, but for me Java/Linux represents the most attractive option if you want to build a system that you will refer to as "ole' faithful" one day. 
The JVM is open-ish at this point and it doesn't seem like there's a lot of JVM changes coming. Most language changes seem to be syntactic sugar rather than bytecode changes. 
My thoughts exactly.
Does it need to be Java? If you only want to put it on a website, then I'd rather look into PHP Games. There are plenty of games that can be self-hosted out there. Even, if you only want to set it up on a local server, PHP would probably be the better option.
The following is written on two assumptions I have made based on your question: 1) You already have an established code base 2) The majority of your code has already been manually tested Unit tests are most useful when they are written along side the code the are testing, whether you do it before or after the code is up to you (some people like doing TDD and writing the test first and then code until it goes green; others like writing the code and then the test to verify functionality afterwards). It's extremely challenging to go back to old code and write tests for it, the functionality isn't fresh in your mind, you might not remember the quirks about it off the top of your head; in general the practice is an exercise in frustration. My advice is to, going forward, write your tests with your new code still fresh in your mind; tests for old code should be written over time as you go back and refactor it or whenever you fix a bug so you can have a test that fails should something happen again.
AssertionError should only be thrown by an assert statement, so let's rephrase this, should I assert or throw an exception? In my opinion, assert is for unit testing, since it must be explicitly enabled at runtime it doesn't provide much value (especially since it will just throw an AssertionError!). If you want your calling code to be notified of a failure, just throw the appropriate exception or error, if one doesn't exist make it. There's a reason we have a wide array of built in exception types, use them!
R classes are generated. This probably shouldn't be in the Javadocs. More info here: http://knowledgefolders.com/akc/display?url=displaynoteimpurl&amp;ownerUserId=satya&amp;reportId=2883
Why would you make a constructor private? Serious question. In my classes so far we've only used public ones. Wouldn't this prohibit you from instantiating instances of the class from outside the class?
Library classes for instance shouldn't be instantiated. The class would consist of a private constructor and static methods. It would be awkward to write new Math().someFunction(...) instead of the usual Math.someFunction(...)
you would use a private constructor mostly if the class has a static factory method. or dependency injection. But yes, private constructors would prevent you from instantiating the class from outside code. 
I'm also curious if OP is looking for a Java Applet or a server-side application. FYI, applets are relatively uncommon these days.
Germany, services * server: JBoss EAP * web framework: JSF + PrimeFaces + PrettyFaces + OmniFaces * injection/beans: CDI + EJB * ORM: JPA * Validation: JSF native + bean validation * Remoting/rest: JAX-RS * database: PostgreSQL * OS: Debian (servers), Ubuntu (workstations) * IDE: Eclipse + JBoss tools * build systems: Maven + Jenkins + nexus * issue management: JIRA (+ several extensions) * source control: git 
Couldn't recall if I've seen a java game applet in ages. I frequently come across applets in professional environments, though. Managed Switches, firewalls, GPS Timeservers, etc. still use them quite commonly. 
witdraws ~
no. The XML configuration dependencies are not always nice to deal with.
Where are you creating the event handler code? You might be creating and registering new handlers each time you switch scene. If so all of the handlers will still exist in memory and fire when the button is pressed causing the creation of more handlers.
I think you should try /r/javahelp
It's created in the screen class. EventHandler eHandler = new EventHandler(); Every time the action is performed, it calls eHandler.eventHandler(buttonPressed), where buttonPressed is the actionCommand string. Would that cause it to be registering a new handler each time? If so, where could I create the eventHandler so it doesn't do this?
Nevermind! I solved my problem. The issue was whenever I called the Game.getUI().setMenuButton method I added an actionListener to the button, and when I called Game.getUI().clearButtons(); I did not remove the actionListner, so all my buttons were calling a new listener each time. Thank you for the help!
Java was officially released in 1995. That's 18 years from now. How long do you need so that it is no longer young? Compare its popularity (in general, not in the hipster world) against other languages that are about the same age: python &amp; ruby. Java is no going anywhere soon. For better or worse.
Lambda anyone?
You seem to have a custom object (`scene`) that can compare itself to a `String`. While it might work in this case your `equals` implementation is broken. Among other things, the contract for `Object.equals()` states that `x.equals(y)` must be the same as `y.equals(x)`. Comparing your object to a `String` might yield the result you want but the opposite does not. Donโt do that.
Can you copy and paste the actual code rather than transcribing it? I ask, because I see that you have: ArrayList&lt;Vehicle&gt; cars = new ArrayList&lt;&gt;(); but that won't compile, because you can't have empty angle brackets in that locations, which makes me wonder if you aren't accidentally missing something else. Also, it would help to see more of the source code. For instance, do all of your classes correctly extend Vehicle? And can you list out the full error message, as well as verifying that it's occurring at the `cars.add( truckOne);` line?
In Java 7 you certainly can, it is called the Diamond operator, it does type inference. http://docs.oracle.com/javase/7/docs/technotes/guides/language/type-inference-generic-instance-creation.html
In my opinion, the one-line version makes the code harder to read. Annotated and non-annotated variables no longer line up nicely, and having multiple annotations on one method would be extremely hard to read.
Ah, I've been stuck using Java 6 for so long that I forgot about that. I guess it's still better than my last client, where I was stuck using Java 1.4. And we're talking about just last year, not a decade ago.
If you look at the nested classes for R, they all look like the only thing they do is hold constant values. So it would make no sense to create a new R.xml() for example when you can do R.xml.ConstantValue instead. R.xml has no fields or methods, so you gain nothing from creating a new R.xml. Hiding the constructor helps lessen the confusion. There might be other reasons for keeping it public though, maybe for reflection purposes, serialization or inheritance.
Definitely hard to read. I don't want to have my eyes parse through metadata to get to definition. 
Genuine curiosity: what is the point of nesting classes like this instead of just using standard Java packages and classes with static constants? (since I gather R is just a collection of constants.)
Ah - so I was close :)
In my experience, there are often times when an Object needs a crucial piece of data to function, without which it would be useless. In this case you have to take full control over the creation of the object, such that when it is created it has all the prerequisites to function. What I would do then is to make the constructor private, and then have a factory method or a Builder so that the user can construct the object according to specification. Another advantage to factory method is that you can have named constructor. Consider the following: public class Resource { private Resource() {} private Resource(String uri) { // do something } public static Resource createFromUri(String uri) { return new Resource(uri); } } This may seem repetitive and verbose, and it is, but it helps make the code so much clearer in terms of what the object is supposed to do and what it needs to function. It's a form of self-documenting code. More importantly is when you have two ways of constructing the object, both methods requiring a `String` argument. You can't have two constructor with the same signature, but you can have two methods with different names but the same argument type: public class Resource { public static Resource createFromUri(String uri) { // something } public static Resource createFromFilePath(String filepath) { // something } } There are more explanations of why you would want to use factory methods instead of just exposing the constructor in the [Design Patterns book by the Gang of Four](http://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented/dp/0201633612)
How goes the assignment? Think something up? Need a hand working it out?
Do your concrete classes extend Vehicle?
I agree. We also use the one line per annotation convention and this is also the convention I see when drifting through third party code snippets.
Sure! Java has many advantages: -First is oblicuos, it is pretty much everywhere. From back end enterprise systems, big data, to indie video games like minecraft, and mobile apps on android. -It is very robust, I keep hearing the complain Java is to verbose, it lacks the elegance and simplicity of something like Python. To me verbosity is not a problem, I rather have robust tools a giant library of methods, than a fast language to type in. This days most of the typing is done by the IDE anyways. -If you ask yourself is there a library to do X in Java the answer is 99% of the time... yes, yes there is one. This is more valuable to get the job done than clean syntax or fancy new language features. -Even if you a computer science purist who enjoys playing with fringe languages, Java has you cover, Closure and Scala run in the JVM and they are pretty much modern Javas for the future. -And then there is the whole mobile with Android, Microsoft has blew over and over again with mobile, Apple keeps their narrow elite market strategy, so it is no surprise Android is already the dominant Mobile platform. It is a matter of time before the Android marketplace mature profit wise to developers. -So those are my 2 cents: Java is not the prettiest nor the most elegant language out there, I do love Python, I have play with Scala and a bit of Haskell, yet when the time to actually get stuff done Java never disappoint. 
Java Libraries * https://code.google.com/p/java-weather-api/ * https://code.google.com/p/wunderground-core/ * https://github.com/fedy2/yahoo-weather-java-api * http://pastebin.com/sxmRGnmW HTTP APIs * http://stackoverflow.com/questions/3363052/best-weather-apis-free-for-commercial-use * http://blog.programmableweb.com/2009/04/15/5-weather-apis-from-weatherbug-to-weather-channel/ I don't know what's good or bad. I just googled "weather api" and "java weather api".
Wow, what an open ended question. What is your experience with programming and programming in Java? Knowing your background might help direction the question. The core of Spring, the IoC container is like a design pattern and a set of tools. It wants to guide you into developing code into small fragments that don't rely on each other in an attempt to make code simpler for writing, understanding, testing, using and modifying. Where spring gets used extensively (in my experience) is in web applications deployed to containers like Tomcat and Jetty. SpringMVC is an additional set of tools and patterns to help make building web apps easier. It tries to separate URLs from what code gets executed. How code gets executed from how it is presented. Adds some nice security features without being hard coded into the functionality of the code (although this gets difficult when rules get complex). Spring also has a large chunk of code dedicated to integrating ORM and other database access libraries without your code becoming dependant on the specific implementation. I started on a project that was going to use Hibernate for storing and retrieving of stuff to the database but we were running into trouble. So we switched to writing SQL ourselves. Since the logic of the application was separated from how we stored and retrieved the data, we didn't have to write large portions of the app, just the sections that stored and retrieved. Spring is a huge project that is broken down into many subcomponents. I can't imagine this answering your question completely but hopefully it is a good start. --edit-- I should have just pointed to the [wikipedia](http://en.wikipedia.org/wiki/Spring_Framework) article :/
It's used for wanking and self-flagellation. You might think those are contradictory, but you'd be wrong.
I just feel like I can't code anymore, its like a writers block but for programming.
How long have you been programming? I'm mostly self taught and I've been programming for 13 years now. I would definitely say I don't know everything. The good thing about not being good at programming is you have a lot to learn and can get much better. No reason feel down. I would definitely get some books though. In my experience, being a good programmer and programming the right way do not go hand-in-hand. Understanding the logic is half the battle anyway. Once you understand the logic, opportunities are endless. No worries dude, keep it up.
I've been programming for about a year now. Are there any books you suggest?
Depends on what you want to learn. For PHP, I have this good one that goes over MVC framework setups and stuff. Murach's PHP and MySQL. I haven't gotten any Java books really, buy I do have a few Android ones. I'm not sure what the names are at the moment. Just check Amazon and read the reviews. And only programming for a year, you are supposed to suck at programming lol. Thought maybe you'd been doing it for like 5 years or something lol. Ya no worries then, just keep at it.
Pick up or piratebay Spring in Action. It's a good read.
Yeah. Write a calculator, then a graphing calculator. Write tick-tac-toe in the console, then in swing. Then one you find an original idea, write that.
Surely you jest?
Well I am a software test automation engineer with background in JAVA. I would say I am pretty well versed with core Java. I have worked on hibernate and dealt with only spring as a concept and worked very little on it. I would like to know why spring is used, what are the difficulties it helps in overcoming. 
Lists are not arrays for starters. 
As others have pointed out, this is a difficult question to answer, without knowing your level of experience/expertise in Java EE. I will attempt to answer it based on my experience with Spring. Rod Johnson - the creator of Spring - wrote a book titled 'Expert one on one J2EE Design and Development'. In the book, he talks about some of the pitfalls and hard-ships faced by J2EE developers, especially with technologies such as EJB. I will explain with an example. Let's say you are building a banking application and you have two business entities - customer and account. With standard edition of Java, you'd create two classes - Customer.java and Account.java. You'd be able to create these objects in your code at your will. Now, if you used EJB, you'd create CustomerEntityBean.java and AccountEntityBean.java, make these classes implement the Home and Remote interfaces, deploy them in an ApplciationServer such as Weblogic etc. Why would you do that? So that transaction management, security, remoting etc. would be provided for you by the App.Server. But, the downside of getting this functionality for free was that you could no longer create Customer and Account objects, like you normally would. These are no longer normal/ordinary Java objects, they are EJBs. So only the application server would be able to create them. If you needed these objects, you'd call special EJB framrwork methods to get a reference to the objects created by the application server. Now, imagine changing one line of code and not being able to test it unless you started the app.server and deployed the app in the server. Using EJB (and any other J2EE technology for that matter) created 'tight coupling' with that technology and dependency on the application server. Rod Johnson's point in the book was that applications should be built independent of technologies and any technology should be easily replaceable. Spring Framework was created based on the ideas he discussed in the book. So, how exactly does Spring solve this tight coupling? When building the banking application with Spring, you'd continue to use the ordinary java objects from Customer.java and Account.java. Transaction management and other functionality that was provided by EJB before would now be provided by Spring Framework (or other technologies that Spring integrates well with). The difference is that 1) your application doen't need a server to run, which is a huge advantage when testing 2) If you ever wanted to replace Spring Framework with an equivalent frameowrk, you shouldn't need to change any code; only the configuration files need to be changed. (at least in theory). I've simplified a lot of things and omitted a lot of details, but I'm hoping this gives you the general idea. 
It just so happens that I taught a short class on IoC/DI just today. This is kind of the way I explained in the course was based on folks who were at least junior developers (meaning CS degree and some OO experience of typically 1-3 years): When developing an application as complexity grows you inevitably will (if you are 1/2 way decent) take advantage of some kinds of patterns to organize your work and make your code readable. The problem tends to come in is that you end up spending almost as much time writing mangers, context handlers, factories and the like as you do actually writing code that is responsible for doing what you really want to do. DI tools become popular because at it's core DI/IoC enables you to create nearly every other kind of pattern you could think of while leveraging the framework. What this does is it allows you to implement a lot of common and complex patterns with little to no manager code at all. You might write a wrapper or an agent that uses your container or if your problem is simple enough you just inject all the way through with some custom build plan classes. Planned correctly DI allows you to get away from writing ceremonial code and get into writing code for your business problem meanwhile maintaining critical items like: * encapsulation * testability * code portability Now DI frameworks, like all tools are just tools and can easily be made into a jumbled mess where your configuration can become just as cumbersome if not moreso than your ceremonial code from before. The example I used in my walkthrough was a simple combination of two patterns: * strategy * chain of responsibility Basically there were 2 Action classes that do some processing and a handful of Filter classes that a request would pass through before the Action was called. The initial example showed a standard program with hard-coded dependency mapping done in a manager class. Then we added DI and using the configuration chopped out about 50 lines of code (and a bunch of redundant code) and allowed the DI tool to take the user input and make decisions on what classes to provide based directly on that input rather than a mess of IF and SWITCH statements. The configuration itself was about 7 lines. This of course was a very simple example and my chain of responsibility example was purposely obtuse so I could show off some of the decoration features of the framework. The important thing to keep in mind with any of the more mature IoC frameworks is that they are highly flexible and can recreate the control for most patterns you can come up with. With this in mind don't try to think about how you can twist your application to work well with DI, rather come up with a basic design then ask what can DI do to make the code needed to implement that design more focused and with less cruft. 
The best way to do it would probably be to define a list with unique numbers and then use Collections.shuffle to randomly permute the whole list. Then you can just take them out of the list in order of index. Edit: note that you have to use an implemented list class like ArrayList.
I would suggest taking some online courses to help beef up your skills and keep yourself interested. I recently took a Scala course at https://www.coursera.org/ that was pretty solid. Whether you are a hobby programmer or a professional programmer you always need to find ways to keep yourself interested and continuously learning. Programming is like any other skill, the only way you will get better is through practice, practice, practice. 
Many recommend Big Java Late Objects to read for newbies. I hated it, but it is more popular than my opinion. :)
Even toasters! Microwaves! And I bet your computer runs java! All that is left is the internet (applets are a *joke*).
&gt; what are the difficulties it helps in overcoming It provides a lot of tools for writing clean code that has as few dependencies as possible. You could write these tools yourself but that means you can't bring in outside help and have them understand some of the patterns. I think the coolest thing it gives you is flexibility when expanding your project provided you don't go out of your way to add dependencies. If you compare it to the j2ee design patterns it's just far simpler as mentioned by imok. Have these answers given the insight you needed?
No. They do not
Learning the languages is the easy part when it comes to programming. The hard part is figuring out how to describe the problem and come up with a way to solve it. A problem is most often made of two, three, four to *n* sub-problems that can be solved in a sequential order. For example, a calculator application requires input, parsing, operations and output. Each part of the project is its own problem, and can be broken down further into smaller and smaller sub-problems. Ever play with legos as a kid? You didn't just whip out a batch of blocks and start putting everything together, did you? You built a section up block by block, then another section, and then another. Depending how the project goes, a section can be plugged into the entire project as a whole, or it can be standalone for the time being. Another way to think about it is putting a jigsaw puzzle together. I personally begin with the corners, filling the border out and then start looking for pieces that align together. Slowly, one piece fits into another, and then the picture begins to reveal itself. Once you can describe in a logical order of what problem you face, it becomes pretty easy to write the code to fill in those areas. I don't recommend that you start writing the code out right away, but begin with defining variables, methods and relationships. Build the structure of the program first before you start writing the logic itself. 
One way that you can do it is with a Set. By definition, a Set is a structure that contains either zero or one of a unique value and no duplicates are allowed. So if you generate a random number and stick it in the set, you'll know that whatever values in there are both random and unique. import java.util.HashSet; import java.util.Random; public static void randomSet(){ //initialize Hashset and Random objects HashSet&lt;Integer&gt; randoms = new HashSet&lt;Integer&gt;(); Random rand = new Random(); //populate random set with at least 10 values. //May be less if duplicate generation occurs. for (int i = 0; i &lt; 10; i++){ randoms.add(rand.nextInt()); } //You can write the code to extract out n &lt; 10 values //from the set }
What he said. Leaning to program IMHO is not only learning the language but learning how to break large problems into manageable pieces. If you feel fairly proficient in the basic java language, I would start looking at design patterns (but not the Gang of Four book). 
Spring does not really overcome any difficulties compared to the standard Java EE libraries. It adds complexity. At one time Spring was a big leap forward but for a new application it is much simpler to use the standard Java EE libraries.
This is pretty close to how I would do it. Forces the numbers to be unique - can easily access the values
That's a decompiled switch(enumtype). Figure out what the enum type is (trivial) and fix it manually.
No one can really motivate you to go out and code things. You have to find that for yourself (in reference to your writers block comment.) Don't feel bad if you're code isn't up to par with people who have been in a specific language for 10 years. Everyone started somewhere. Focus more on the things that will apply to every language. How clean your code is, how readable it is, concise documentation. For projects to work on, I found that things I can use daily really motivated me to code for them. If you have a cell phone, write an app for it, something that will make your life easier. Interested in the security of your computer? Write a program to log all the keystrokes on your system. Linux is great for this because you can really study how specific events are called in c, and the data structures they use. Do you have a hobby like D&amp;D, making models or something similar? Write code for an AVR Microcontroller and build your own circuitry to add flair to your projects. Write a program to backup all your documents. The real trick is to have fun with it while you're solving problems.
This is a great answer but I would change for (int i = 0; i &lt; 10; i++){ randoms.add(rand.nextInt()); } to while (randoms.size() &lt; 10) { randoms.add(rand.nextInt()); } so that you definitely get 10 values
Dude... a year? Look... I graduated with my CS degree almost 15 years ago now, and started programming back in high school... that's 20 years, and I am *still* learning new things. Don't give up after programming for just a year... if you enjoy it, keep at it, and don't let other people's skills discourage you. Odds are they're either prodigies or (more likely) they've been doing it for much longer. Keep your chin up, kiddo. You'll get there.
Not to mention virtually all of Twitter, much of Amazon Web Services, and oh... I dunno... huge chunks of Google's codebases?
(1) It is generally a good idea to create the Exception class in its own file, i.e., you would have a MonthException.java file with public class MonthException extends InputMismatchException { public MonthException(int month) { // code here... } } (2) The logic for verifying input would go in the program, and then you would throw the exception if the verification failed, as if (input &lt; 1 || input &gt; 12) { throw new MonthException(input); } (3) super() calls the matching method/constructor of the parent class. For example, in the following code public class MonthException extends InputMismatchException { public MonthException(int month) { super("Invalid month: " + month); } } This code would call the InputMismatchException(String s) constructor, and "wrap" it in an instance of MonthException. If your child class overrides a method defined in the parent class, you can also use super() to call that parent's original method if you still want the functionality of the parent's method but want to add additional logic to it (this saves you from having to "reinvent the wheel," as my professor used to always say). See example below public class FooBar extends BarFoo { // code ... public void doSomething() { super.doSomething(); // This passes control to BarFoo's doSomething() method, then returns to this method. Due to overrides, you cannot normally access BarFoo's doSomething() method from within this class. // Do other things... } } 
When I ran into Spring during my internship last summer, I found that Spring made my life at the same time easy and frustrating due to it working by (what appears to be to the uninformed) magic. While I don't believe I'm anywhere near close to understanding Spring I feel like as I worked with it the benefits of having code detached from technology were obvious. While it is great that if you want to change the technology your code shouldn't be changed (too much, we'd be kidding ourselves if we said no changes would occur) the biggest immediate advantage to me was that any changes to the configuration and organization of the code/project can be propagated fairly easily through the same config files. However, one of the downsides that I found to this was the fact that problems could also propagate easily and dependencies could get complicated depending on the way you've structured your packages and spring configs. As well as the added bookkeeping to the programmer who needs to make sure the config files and beans are all up to date.
A lot of the suggestions here are pretty good. Are there any video games you enjoy besides Minecraft? You might be able to develop a project portfolio further by staring a development for Skyrim or something else with a nice entry-level programming platform. Now might be an excellent time to get into Roguelike games, or brush up on the basics of another language like Python. I, for one, am in the middle of a Nanowrimo (/r/nanowrimo). I struggled with thinking up projects to take on during the summer, but without the free time to hobby program (I still practice for class), I'm finding the project ideas bubbling over. Long story short, anything to do for your portfolio will be well appreciated later. I have a friend who told me he got his job bragging about re-coding a gameboy. Obviously, applications and open-source tinkering look best on a resume, but I envy your current level of practicing (I'm almost through my first semester programming - I just started seriously thinking about it at the beginning of the summer). **tl;dr:** Keep tinkering. You won't regret it. 
Wow thanks man for the in depth explanation. I understand now about the exceptions. Still a little fuzzy on the super() but the best way to understand it is to just use it. I appreciate the help so much!
I saw the one-line version at oracle documentation http://docs.oracle.com/javaee/6/api/javax/inject/Inject.html 
If you cant find a project to work on, try [coding challenges](http://coderbyte.com/CodingArea/Challenges/)
Code reviews can be a good tool for learning better coding habits and techniques. Find someone more experienced to look at your code and suggest areas for improvement. Heck, I wouldn't mind helping out if you can't find anyone. I've been a software engineer, professionally, for 10 years now, working primarily in java. 
Thanks for the comments guys! I feel better already! I'll start doing online challenges and maybe get into another language at the same time.
I have been feeling the same way you are lately. The only difference is that I have taken the programming classes at college. There is only 1 more class I can take and I have aced them all, but I still feel like a horrible coder. I am even sitting on a homework assignment that has me drawing a blank. Here's hoping we can break though this rut and get some forward momentum going again.
Well there's your problem. Everything you add to an arraylist has to be a subclass of the type you constructed it with. 
Then the answer is: avoid serialization altogether and store XML. Or JSON. Or DB. Or just about anything else.
It's probably me, but I don't find writing myself the whole DB management code that awesome. And as a general note, one never ever needs to call super();
It does not display the result for 2 reasons: 1. you never call qualityPoints 2. in qualityPoints you check for another input. So, in your main method, you should make a call to qualityPoints
I *really* dislike having everything on a single line. There's really no need to "save" space like this, and as others have said, it makes things a lot harder to read. It also goes against the conventions used in virtually every library and codebase that I've seen, which is personally a huge turn-off. 
Good programmers don't write flawless code. They learn from mistakes, asks for help and know that they have a lot to improve. Good code requires even better skill, which only comes by writing decent/shitty code.
Here you go import java.util.Scanner; public class Fix { public static void main(String[] args) { Scanner input = new Scanner (System.in); System.out.print(" Enter student's average grade:"); int inputNumber = input.nextInt(); if ( inputNumber &gt;= 0 &amp;&amp; inputNumber &lt;= 100 ) System.out.printf( "Score out of four is: %d\n", qualityPoints( inputNumber)); } public static int qualityPoints( int grade ){ if (grade &gt;= 90) return 4; else if ( grade &gt;= 80 ) return 3; else if (grade &gt;= 70 ) return 2; else if ( grade &gt;= 60 ) return 1; else return 0; } }
Example: import java.util.ArrayList; abstract class Vehicle {} class Honda extends Vehicle{} class Nissan extends Vehicle {} class Toyota extends Vehicle{} public class Cars { public static void main(String[] args){ ArrayList&lt;Vehicle&gt; cars = new ArrayList&lt;Vehicle&gt;(); cars.add(new Honda()); cars.add(new Nissan()); cars.add(new Toyota()); cars.add(new Toyota()); for(Vehicle vehicle: cars){ if(vehicle instanceof Honda){ System.out.println("Honda found!"); } else if(vehicle instanceof Nissan){ System.out.println("Nissan found!"); } else if (vehicle instanceof Toyota){ System.out.println("Toyota found!"); } else { System.out.println("Unknown class!"); } } } } 
Thanks for doing that, I was on mobile. 
`super()` is not specific to exceptions. It's integral to object oriented programming. That you're not yet comfortable with it is indicative that you've not got a good handle on object orientation yet. I suggest a bit more research there -- it will stand you in excellent stead. Make sure you understand what a base/parent/super class is and in turn what a child/sub class is. Abstraction is related, and you might also here the terms "abstract base class" and "concrete class". For now, just file them away as being the next thing on your list once you're happy with parent-child class relationships.
I think this is most relevant reason. Thank you. I guess the most clean (but not most comfortable) method here is using xml configuration. 
Shameless plug for Play! Rod Johnson now works at TypeSafe.
Submitted to http://www.turnitin.com/en_us/features/originalitycheck/content
Books and online courses can be great. Much of what I've learned, though, came from spending time exploring open source projects. Find a popular project that is generally considered to be well designed and start digging in. Extend it. You don't necessarily have to commit any patches; just fiddle around for the fun of it.
After my first year of my BSCS program, I was a hair away from dropping out and going to film school. I hated it; I just couldn't get excited about the entry-level stuff. It wasn't until I took the rather infamous Languages and Compiler Design course in my third semester that I really got into it. Looking back, I can't believe I almost gave up on it. I love my job, and my life has been immensely satisfying as a result. And yes, in spite of this, I still go through the occasional dry spell when the work just doesn't seem as fulfilling as it usually does. It always passes. Maybe the same experience could work for you. Consider giving the [Compilers course](https://www.coursera.org/course/compilers) a shot over at Coursera. These courses give you a fascinating look into how programs are translated, and the projects make you feel like you're really accomplishing something.
Oh yes I do! I find it amazing how much I have improved over the years. I know that I still make a bunch of stupid mistakes, I get told when I get my code reviewed, and I know that in the near future I will have a good laugh looking at the code I'm writing today.
Sweet, now my graphics card can run out of memory in record time!
&gt;Luckily for the code monkeys So he does not seem to hold java developers in high esteem.
*Accredited software development engineering professionals 
`Math.random` is a convenience wrapper around `Random.nextDouble`. The documentation on that class states that it is implemented as public double nextDouble() { return (((long)next(26) &lt;&lt; 27) + next(27)) / (double)(1L &lt;&lt; 53); } `next` is implemented as a simple linear congruential pseudorandom number generator (http://en.wikipedia.org/wiki/Linear_congruential_generator). It's very fast, but does not produce very high quality random numbers and is not suitable for cryptographic purposes. `SecureRandom` is a subclass of `Random` that uses a slower but higher quality implementation of `next`. http://docs.oracle.com/javase/6/docs/api/java/util/Random.html#nextDouble() http://docs.oracle.com/javase/6/docs/api/java/util/Random.html#next(int) 
Troll somewhere else.
&gt; and what the code looks like http://hg.openjdk.java.net/jdk8/tl/jdk/file/5561b34f6d4c/src/share/classes/java/util/Random.java
Highly elucidating! Thanks! It could also be added that if it is required to both inject dependencies and pass in arguments to a constructor then you can do both with the same constructor using the factory pattern. However I'm sure there are other ways of acheiving the same outcome that I don't know about! 
Don't give up. Like so many other posts programming takes a long time to learn I've been programming for 11 years and I learn new stuff every day. Just use the online tutorials for java their pretty good. There are thousands upon thousands of books out there but the online stuff is free :-) Java has a very steep learning curve being object orientated and all but persevere and you'll get it.
I've used [Aparapi](https://code.google.com/p/aparapi/) to use OpenCL from Java. The nice bit is that you write Java code, and at runtime it examines the bytecode and translates it to OpenCL. The nice thing about OpenCL is that it works with both GPUs and APUs, and since you write plain Java code anyway, it can also fallback on plain CPU.
What have you tried so far? What do you think the algorithm does? 
I just don't really see how this differs from providing a default constructor. You don't want to care about the objects details, don't provide arguments to the constructor. If you care, do provide them. I just fail to see the value. Also, why is this so prevalent in Java and not in any other OO language? 
Not sure if you've had one, but a mentor can help. I would suspect that you most likely would be good if you had someone who could point out things that could help you out in your coding and improve your style. 
 bool ALGORITHM Mystery(A[0 .. n-1]) // input: an array of n elements // output: returns "true" or "false" for (i = 0; i &lt;= n-2; i++) for (j = i+1; j &lt;= n-1; j++) if (A[i] == A[j]) return false; end if end for end for return true; end function Formatted for easier read.
An interface is used when you expect common behavior across classes. It's not typically used to share constant values. Prefer to move those constants out into their own or existing class where it makes sense (e.g. window size info constants should go into the class creating the window).
I would suggest you have a butchers at head first design patterns. If I'm being totally honest the factory pattern is one of the easiest to understand and very commonly used.
I agree. Constants interfaces are an anti pattern.
It works very well when the factory returns an interface. Then at any time the underlying implementation can be changed without causing everyone to do a major refactor.
&gt; how this differs from providing a default constructor The default constructor may not have the information necessary to make that decision. For example, let's say you have a repository class which retrieves information from a database: public class FooRepository { private Connection cn; public FooRepository(Connection cn) { this.cn = cn; } public List&lt;Foo&gt; getFoos() { // use the datasource to query for foos } } The class using FooRepository doesn't care where the foo objects come from. It just wants to get foo objects. It shouldn't have to be responsible for managing connections itself. Also, you may not want to create connections all the time yourself. Connection creation is not cheap and you can create connection leaks if you bungle connection management, which can have very bad consequences for your application. public RepositoryFactory { private ConnectionPool connections; public getFooRepository() { return new FooRepository(connections.lease()); } } You may want to compartmentalize the code for handing out connections to one place. So, instead of having this logic replicated all over the place, you have it centralized, reducing redundancy and limiting the amount of places where things can go wrong. Factories are one approach to the above. An alternative is Dependency Injection. You aren't calling `new` there, either. I'm not sure why you think other OOP languages don't have factories. The Factory pattern is part of the Design Pattern book, and illustrates a common pattern used in many OOP languages, such as C++, C# and Java. These are statically typed, single-dispatch OOP languages. There is less need for the factory pattern in dynamically typed OOP languages such as Smalltalk, Ruby and Python, which have greater metaprogramming capabilities due to their dynamic nature.
I'm not asking how it works - I get it. I'm asking why. 
I did, but I was evoking Will Smith from MiB2. :) You definitely nailed the gist of it.
The easiest thing for me is to create a simple arbitrary example. For example, if you take an array with 5 elements i.e. n=5: A[0] = 'a' A[1] = 'b' A[2] = 'c' A[3] = 'b' A[4] = 'z' That gives you the following code (all I did was substitute n=5): for (i = 0; i &lt;= 3; i++) for (j = i+1; j &lt;= 4; j++) if (A[i] == A[j]) return false; end if end for end for return true; Now that a simple example is created, can you determine what the method does on the first pass through the loop?
Well to the constructor point providing a static factory can allow you to essentially name a constructor. Perhaps a poor example but it gets the point across is an object that can be constructed from a string, XML or json providing factories allows a syntax like this. `MyObject.fromJson(json) MyObject.fromXML(xml)` It also helps refactor without breaking your users code. Maybe you decide later that MyObject XML would be faster if parsed lazily but not so for JSON, so rather than returning MyObject you return LazyMyObject in the case of XML, the client code doesn't have to know the difference. Had you used the new keyword you wouldn't be able to do this easily. You'd have to go out and explain that if you are using MyObject with XML you now should change all your code to instead be LazyMyObject.
&gt; I just don't really see how this differs from providing a default constructor. You are not constructing the object, you are calling the factory to do it. You might give in some context while doing so, usually the factory will provide other contexts or dependencies. &gt; You don't want to care about the objects details, don't provide arguments to the constructor. If you care, do provide them. You are looking at the "creating objects" problem too shallow. Not all dependencies for object creation might be simple primitives, or if they are you don't really need a factory. A factory comes into play when you need other services to create and register an object, database connections to log access, whatever -- you need to provide the instantiated object with the necessary infrastructure. And if you don't use singletons (bad), you have to get the infrastructure objects from somewhere. The most clean solution in many cases is the factory. It separates all concerns of the creation of a certain type of object into the factory. If dependencies change, they only need to be changed one time in the factory and not everywhere that kind of object is created. &gt; Also, why is this so prevalent in Java and not in any other OO language? As much as many people look down on "enterprise applications" and the bad things that often come with that term, there is a set of good practices that comes with the territory of writing maintainable and extensible software. Not every language culture shares these concerns to same degree. Some languages grow into it. The early development culture of e.g. JavaScript was pretty abysmal -- which was not only due to APIs (document.write) but also due to lack of good tools (firebug) and software development practices (stuff like requirejs, node, grunt, bower). Some have said that dynamically typed languages do better at this, but I'm not so sure. Sure, there are things some languages just make obsolete. (e.g. no proxying in Smalltalk), I don't really see it here. 
Sure. You understand how inheritance works, right? (If not, [here's an excellent explanation](http://docs.oracle.com/javase/tutorial/java/IandI/subclasses.html)). When you define an ArrayList, you tell it what type of objects you want it to hold, but because of the way Java does inheritance, any subclass can be accepted by something expecting its superclass. In your example, you declare an ArrayList of Vehicles &gt; ArrayList&lt;Vehicle&gt; cars = new ArrayList&lt;&gt;(); so anything you try and insert into cars either needs to be a Vehicle, or a subclass of Vehicle. To achieve this, your Honda, Nissan and Toyota classes should all extend Vehicle (or if Vehicle is a interface, they should all implement Vehicle). (In the extreme case where you define an ArrayList of Object (the class), anything can be put into it as everything implicitly extends Object.)
I agree with this. When I was an intern I had one and I learned a lot from her. Now there are little things that need experience to easily work though. The best thing about having a mentor is the times when you don't know what to search for to figure out how to tackle something. A good mentor won't tell you how to do it, but will point you in the right direction.
I agree with that window size should go in the class containing the window, but I'm not convinced it's an anti-pattern generally speaking. Not that the JRE is perfect by any means, but I'm thinking of `javax.swing.SwingConstants` and `javax.xml.transform.OutputKeys`* as cases where it's never rubbed me the wrong way to have constants collected in a "namespace". ^* not actually an interface, but a class with a private constructor
I tend to use Factories when I want to provide interfaces, but not implementation details. The Factory's job can be to decide what particular implementation is appropriate, and allows me to abstract that away (if I need different implementations or something later on). Generally I don't use them to much these days though.
I assume you're talking about the 'sysout' template. You can see a list of templates by opening Preferences and going to Java &gt; Editor &gt; Templates. You can also add your own here.
[This one](http://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented/dp/0201633612)
Awesome. That's the exact info I was looking for, thank you. 
What's your take on storing constants as protected variables in an abstract object, then inheriting from that? Of course, I'm not sure if that fits OP's case, but I'm curious if this would be considered equally as bad as using interfaces for constants.
Thanks for that but yeah looking for something pre-written. If I can't find anything I'll have a go at doing it myself but it feels like I'd be re-inventing the wheel - a file manager tool must already exist.. it's just finding it
I'm slightly confused as to what you're trying to do, so I'm going to walk through your code and explain what it looks like you're doing. &gt; String results = "BABAAAABAAAAAAABAAAABBAAAAAABAAAABABAABAAABABABAABAAAAAABAAAAAABAAAAAA"; int i = 0; &gt; while(i &lt; results.length());{ String divider = results.substring(i, i + 7); System.out.println(divider); i += 7; You're creating a string literal of a long series of Bs and As. You are then breaking this up into substrings of length 7 and then printing them out. &gt; divider.charAt(i); Here's where it starts to get confusing. The charAt method is a method that returns the character at a specific location in a string. However, you aren't doing anything with the character you get back. (Because you already incremented i, this will be the first character after the end of the substring, divider). Do you want to print this character out? Assign it to something? As it is now, this line has no effect. &gt; for(int s = 0; s &gt; length.divider(); s++){ Check your &gt; vs &lt; signs. As it's written currently, this loop will never execute. However, what it looks like you're trying to do is iterate through the length of the divider, which would happen if you reversed the &gt; for a &lt;, and fixed the syntax to be divider.length() &gt; if(int s = 1){ &gt; } Major major things wrong with this line. For one, you're attempting to declare a new variable. For two, you're using the single =, which is the assignment operator, rather than the ==, which is the comparison operator. If you want a statement to evaluate only when s = 1 (which would be the second iteration of the loop) what you'd want is: if(s == 1) { //do stuff } &gt; if(divider.charAt(s)){ &gt; } Again, looks like you're confused as to the if statement syntax. The inside of an if statement needs a logical value, so something like: if(divider.charAt(s) == 'A') or if(divider.charAt(s) == 'b') Seems to be more what you want.
Ah! The divider.charAt(s) == 'A' is extremely helpful yes. I have since posting this run into some of the things that are "Major majorly wrong", and one that wasn't yet found for the '&gt;' signs. Currently: &gt;You're creating a string literal of a long series of Bs and As. You are &gt;then breaking this up into substrings of length 7 and then printing &gt;them out. That is what I was using from the book, I wasn't totally sure how to say "Keep this value, until my for loop is done processing it before pulling another set of 7". Because the next part of the for loop once it has found an A, B, a, b or -, needs to send the value to a corresponding array, which in my book, seems to be absurd to suggest that sending iterative values to different arrays could occur. I asked my prof about this approach and he told me to re read the book, which by my questions here, seems to not have been entirely productive. Thank you for the very detailed response so far, it was very helpful - I heavily appreciate it. Also - Updated OP with current code status
You're trying to call nextLine() on a string object when String doesn't have the method. You can also just print "shit" directly instead of creating another string. Hope this helped.
Why use an interface? Just use a class and static imports.
The way I see it - if your object uses data that is relevant to it's function from higher up in the hierarchy it's fine - just don't cross hierarchy boundaries in order to access that data (at that point you should consider injecting the data).
Oh god yes
Does js fiddle run java?
I threw this into eclipse and fired off a few test cases. In checkingBalance you should check if the data file exist Hello! Welcome to BankAtHome Ver1.0 Is this your 1st time here? enter 1 for yes 2 for no 2 Please insert your 5 digit user name 12345 Please instert your 4 digit passcode 1111 login successful! Welcome back, 123451111! Please wait while we retreive your account information retreiving checking balance Exception in thread "main" java.io.FileNotFoundException: 123451111Checking.txt (The system cannot find the file specified) at java.io.FileInputStream.open(Native Method) at java.io.FileInputStream.&lt;init&gt;(Unknown Source) at java.util.Scanner.&lt;init&gt;(Unknown Source) at atm.ver1.pkg0.ATMVer10.checkingBalance(ATMVer10.java:176) at atm.ver1.pkg0.ATMVer10.main(ATMVer10.java:56) You should really be validating user input Hello! Welcome to BankAtHome Ver1.0 Is this your 1st time here? enter 1 for yes 2 for no 5451 Please insert your 5 digit user name 123456789 Please instert your 4 digit passcode 987654321 login successful! Welcome back, 123456789987654321! Exception in thread "main" Please wait while we retreive your account information retreiving checking balance java.io.FileNotFoundException: 123456789987654321Checking.txt (The system cannot find the file specified) at java.io.FileInputStream.open(Native Method) at java.io.FileInputStream.&lt;init&gt;(Unknown Source) at java.util.Scanner.&lt;init&gt;(Unknown Source) at atm.ver1.pkg0.ATMVer10.checkingBalance(ATMVer10.java:176) at atm.ver1.pkg0.ATMVer10.main(ATMVer10.java:57) I shoudln't be able to withdraw money to be negative what would you like to do today? type 1 for deposit,2 for withdrawal 2 revcieved0.0 How much would you like to withdraw? 1000 Your checking account balance is $-1000.0. Instead of prnInt(double), prnDou(double), and prnln(String) just make prnln(Object). At least I assume autoboxing will take care of this I've never actually seen anyone use helper methods like this. You don't need import java.io.IOException; when you have import java.io.*; but you could also just have import java.io.File; import java.io.IOException; import java.io.PrintWriter;
If you're storing sizes, why not an enum?
Try github gists
How about putting the stuff into another class? abstract class ActorSpriteBase&lt;T&gt; extends TweenAccessor&lt;T&gt;{ abstract int getX(); abstract int getY(); //... stuff from aboth } class ActorTween extends ActorSpriteBase&lt;ActorTween&gt;{ .... }
I know. I have just used it just for the example. The right way would be that each car has it's own getName() method (defined in the abstract class) that returns the name. Then use vehicle.getName(); in the loop.
The website is called "JSFiddle". As its name implies, you put "JS" (i.e. JavaScript) on it, not Java. For anything other than JavaScript, use Pastebin or Github Gists.
Not quite strictly directly related, but you may be interested in learning about guice: https://code.google.com/p/google-guice/
OK, I'm bad at the Socratic method, so here it goes. I don't see 75 different cases, but just four. You could go with three methods that check for the three kinds of patterns you described, connect them with if-else and default to "no pattern".
That post is from may this year, so the preview has been available for the last 5 months. The latest preview build is [132.1045](http://blog.jetbrains.com/idea/2013/11/intellij-idea-13-eap-132-1045-is-out/)
This is so old that I'll just wait another month for the release.
See this: http://stackoverflow.com/questions/2659593/what-is-the-use-of-interface-constants 
I can only see, as /u/armerthor mentioned, four distinct cases and therefore only four if clauses. Could you just clarify what you mean by run? Is it the dice are in ascending or descending order? Similar to a straight in poker?
You probably should look at building if/else with conditions &amp;&amp; and ||, to avoid going into each specific exact case (hence the 75). That's what others are saying with "4 cases" I guess.
Okay, let's think about it: Put the roll results into an array of int(egers). For the example, I'll call it **die[]** Before doing anything, sort the **die[]** array in ascending order So, for the **same** check it's down to: if((die[0]==die[1])&amp;&amp;(die[0]==die[2])) For the **pair** check it's if((die[0]==die[1])||(die[1]==die[2])) // the condition die[0]==die[2] can be left out, since the array is sorted in ascending order - would die[0] be equal to die[2] we'd have all three dice the same. So, only the **run** check left - for the run check, a very simple condition must exist to make a run possible (since the die[] array is sorted): die[0] (the first die) must be less than 5 if(die[0]&lt;5) { // this is a shortcut check if a run is possible if((die[2]-die[1]==1)&amp;&amp;(die[1]-die[0]==1)) // this is a run! Every other result is the fourth condition and thus a loss.
You're right, I meant to say that I'm sure you're only using it for the example (I considered doing the same which is why I mentioned it ;) 
There is plenty of other goodness as well.
You should not throw exceptions like that at the user. Instead check if the account exists and if the password is correct and print error messages like "account number not found".
Net Beans. Thank you very much, problem solved.
I could type a whole lot, but why don't you check out this set of videos (the one most relevant is the first link, but you should really watch all of them): [Don't Look for Things](http://www.youtube.com/watch?v=RlfLCWKxHJ0&amp;list=PL693EFD059797C21E&amp;index=3) http://www.youtube.com/playlist?list=PL693EFD059797C21E 
Hey man, I can't contain *all* of this frustration on my own. Thanks for the tip.
Just using an interface to group similar constants is fine. But inheriting from that interface to save typing is not. If you really need to do that use static imports imports.
Thanks for helping, sorry for the late reply. Is it that the code is checking to see if A[0] is the same as A[1] and checking A[1] against A[2] etc. In other words is it just check to see if there is a duplicated item in the array?
Ok great :) Also wouldn't the answers to question a) "What does this algorithm compute?" and question b) "What is the algorithmโs basic operation?" be the same?
I'm not 100% sure what it's asking by "what it computes", but my assumption is it's computing comparisons. Maybe your teacher/book has a similar example that way you can see what type of answer he wants there.
Have you considered defining a common interface that both Actor and Sprite implement and then using that interface instead of your concrete classes? Something like maybe: public interface Positionable { int getX(); int getY(); void setX(int x); void setY(int y); }; public class Actor implements Positionable { } public class Sprite implements Positionable { } public class WidgetAccessor implements TweenAccessor&lt;? extends Positionable&gt; { .... @Override public int getValues(Positionable obj, ..... 
I will have a look into it, thanks for the help :D
No problem, best of luck!
Based on your access of the file name "Directory.txt" directoryFile = new File(directoryFileName); the file must be located in the directory that you are running the program from as that is where the code will look for the file. This effectively uses the path "./Directory.txt" when attempting to open the file. If you are using an IDE and executing the code from the IDE, look into the settings to find the startup directory and make sure the data file is in that directory. 
Awesome :)
Sorry last question, what does it mean by "worst case efficiency class"
It's more of the latter, because you still need the JVM to run it.
Not sure if this is related to your OSX version actually. But you could go the Oracle Website and install the latest JRE Version as Apple doesn't supply one anymore.
https://www.dropbox.com/s/3pg7p1wny3z16t7/Unbenannt.png is somthing wrong?
Yeah I have notes on it, I will have a look over them. No problem :)
It really depends on where Oracle takes it. There was talk about being able to deploy JavaFX applications to iOS and Android, but we've yet to see any code. My (limited) testing shows that, even running as an applet in the browser, JavaFX kicks butt performance-wise compared to flash. However, with the recent applet security kerfluffle, more people have applets disabled than not, so getting people to use the software is rough.
Compare the line with your import statement. It's important to use the lower case letter. You typed: import Java.awt.*; I also recommend using an IDE like [NetBeans](https://netbeans.org/) or [Eclipse](http://eclipse.org/). If you need instructions in German I'd be glad to help out as well.
You should be able to find lots of examples and explanations online as well. It's an important topic that every CS student is taught. Let me know if you have trouble.
Why do you need it to be in java?
Don't just post your homework question verbatim. Explain what problems you're having or what you don't understand. 
ok, ill figure out a way i can do that. thanks for the tip! you have any suggestions on where I can start?
Thank you. I'll try that.
Thank you very much for the response! I initially tried to put Directory in the source folder but it wasn't working, so I just copied and pasted it everywhere and it ended up working. I have another question though, can you take a look at my add method at line 52 and tell me if it makes sense? I got the program to run and when typing 'add rick' into the console it returns the correct message 'rick added'. but when i type 'find rick' it is telling me that rick isn't in the directory.
I use "toa" for toarray -- although it's a little unnecessarily verbose!
I just finished a project for a startup that I started writing with jQuery, Backbone, and Bootstrap. Based on several rounds of user feedback, the final product was a stand alone (desktop) app that I wrote using JavaFX. No applets. Just a FYI that there are companies using JavaFX for real.
You can find this information in your course book.
Nice going. Congrats.
Kinda like this: http://i.imgur.com/zz80uum.jpg
It seems pretty cool and I will probably end up writing some personal projects in JavaFX. But I think the ability to compile into an HTML5/JS app would make it really killer and I could find ways to fit it into my paid work
JDK libraries use them as more of an artifact. They are used to hide implementations or to make usage of them a little more modular. Good example of that is the dom construction with the JDK xml implementations. Factories in those libs allow the designers of the xml api to hide the underlying dom providers and give you ways to construct parsers in a highly specific way. The average programmer shouldn't feel obligated to use factories in their own code because there simply isn't a need. You don't need to replace the underlying implementation at any time, and you typically know what type of object you need to create when you are coding (for example you're in a controller for /users/orders so you create an Order object. 
These days a dependency injection framework has pretty much obviated the factory design pattern, at least for dev work.
Well, JavaFX can't do that, but... libgdx can! Granted, it feels like a 2nd class citizen right now. It *does* do the job, though.
How about this, you need an object to render data. In some cases the rendering will be to a screen, in other cases to a printer, and finally in other cases to standard out. A factory would help you segment those closes in their own implementation without having you having to put all those implementations in the exact same class. Moreover, the client of the rendering class doesn't care about which class its running, all it calls is .render(data).
This was very cool. I will look forward to the tutorial.
Get yourself familiar with generics and their use of common interfaces. Just read the documentation on the Oracle site.
Not converted. The Javascript code was thrown away and the JavaFX written from scratch. The feedback was from potential clients in the industry - not the EU.
How on earth could you possibly ever think that posting text as an image is a good idea?
Yes.
What's happening here is that every variable declared within your try/catch block only lasts as long as that block (same goes for anything declared within curly braces {} ). Your compiler doesn't know what to return because you declared the "ArrayList&lt;String&gt; words" inside that block. To fix this, you should declare all your variables before you enter the try/catch block. This includes your string array, your scanner object, etc.. You can still assign them a value within the try/catch block. There's nothing wrong with your return statement. 
Because when you define the "textline" variable, you assign it to be Scanner.next(). Scanner.next() simply returns the next complete token, and by default, Scanner delimits tokens by whitespace (so you're also doing a lot of unnecessary "trimming" and the like). Check out the Scanner API: [http://docs.oracle.com/javase/7/docs/api/java/util/Scanner.html](http://docs.oracle.com/javase/7/docs/api/java/util/Scanner.html). Also, you might want to reconsider how you're adding items to the ArrayList to begin with. Your process (theoretically) is taking the text from the scanner and placing it into a single string, then placing each word into an array, and then each item in the array into an array list. Now that you know about how the Scanner.next() method truly works, what's an easier less round-about way you could do this? (Hint: it involves the Scanner.hasNext() method) 
&gt; it is now the replacement for Swing There's a replacement for Swing? I may have to look into writing GUI stuff in Java again.
Thought this might come up :) It's for security testing of a client site. The environment is partially locked down so exes/batch files don't run but VBScript and Java do. Googling "java file manager", "java network tools" etc gives results for java programming rather than tools developed in java so I thought I'd try asking here to see if someone can suggest something
unrecognizable.
The only chink in the armor is probably LLVM. If LLVM really gets steam, and here's the key, LLVM gets a good standard library that other LLVM-targetting languages can use or target, then Java might fall fast. If LLVM doesn't help solve balkanization... then the JVM is going nowhere. Java's advantages remain to be almost everything except the language: VM, infrastructure, tooling/IDE, build systems, deployment, etc. The language may have organizational benefits. 
The JVM is a decent multithread/multiprocessor VM though. So even if java the language sucks, there are JVM languages that could support better paradigms for the execution. Java and its libraries will live on for a looooong time... 
Oh for sure. It's a little immature but *so* much nicer to use than Swing. You create with FXML (XML based markup language) and CSS (for styling) and use Java to control it. Or you can do it all via Java too if you really want.
Thanks. What were the primary complaints/issues with the JavaScript UI?
Flash isn't exactly secure, eitherโฆ
Do you want to list the Windows shares, or browse the contents of an specific one?
Butโฆbuilding OpenJFX requires some binary blobs from the Oracle JDK, which if I'm not mistaken you can't legally redistribute. By the way, anyone know what the status is on that? Is that stuff going to finally get open-sourced some time soon?
The test is whether there senstive files in unsecured shares (ie shared with Everyone). Windows explorer has been restriced so mapping drives/browsing shares isn't availbe but java/vbs script can get around this. I can list all computers on the network using vbs and can expand that script check for open shares, but using an exisiting Java tool to do this though would save time (I don't mind clicking though each computer, it just needs the ability to map/browse to a share).
As well they should, considering all the vulnerabilities. I just find it funny that Flash's reputation isn't similarly terrible.
Since HTML5+JS and JavaFX are both Turing complete, it is always possible to compile one into the other. It's just a question of how slow and difficult it would be.
Absolutely - couldn't agree more. With dependency injection, I don't have to worry about the implementation control so much, I can wire it up in the context as appropriate.
Close your browser. Search for "java" in spotlight and open Java Preferences. Select Network, and remove the checkbox for caching data. Press "Delete files" and then OK. Profit. Source: I support this problem daily.
There are no JREs for 10.6.8 avalible from Oracle, only for 10.7.x and newer. 
Just in case anyone is curious, these aren't all the new features in Java 8. It seems like these are examples from the book "[Lambdas In Action](http://manning.com/urma/)", which would of course be focused on Lambdas. For example, I didn't see anything about interface methods, Spliterator, or the new date/time API.
Examples for the features and APIs you mention are coming in the next few weeks. Check out the ToC of the book. Stay tuned ;)
You've got it. Static methods belong to the class, so can be called without a specific instance of that class needed. For example, the Math class contains many static methods which means you can use these methods without needing to instantiate the Math class. Also the main method is usually static because it is called first, before there is any time to instantiate a class! Non static methods can only be called on an instance of the class itself, and they usually do something that depends on the individual characteristic of the class (e.g. play with variables).
So here is an example of how you might see instance methods/variables vs static methods/variables. You have a class called "Customer" that represents a customer in your system. Customer customer1 = new Customer(); customer1.setName("Frank"); System.out.println("Name = " + customer1.getName()); Customer customer2 = new Customer(); customer2.setName("Bob"); System.out.println("Name = " + customer2.getName()); In a situation like this, you are instantiating two new instances of the Customer class and giving it values specific to that instance. You could do this another 5000 times if you wanted for different customers with different names. Your memory footprint might start to get big with so many objects in memory but there are situations where this sort of thing certainly happens. When you call getName() on each of these classes, you will get a different value back because they are two different instances of the class with different values. These non-static functions are specific to that specific instance of the object that you created using the "new" keyword. Static methods and variables by contrast, are not specific to an instance of an object. You don't even actually have to create an instance of the object at all that the static method/variable is declared in. You can simply access it by saying something like: Customer.sortCustomerArray(customers); I think you should probably look up some examples of static functions that are used in core libraries like Arrays, Math, String and System for some common examples of where static methods are used. Once you understand that, it may be worth also doing some research into the Singleton design pattern which is an alternative approach to providing static-like methods and has it's own strengths and weaknesses. Hopefully that was helpful a little. 
There's a decent tutorial here too: http://www.dreamsyssoft.com/java-8-lambda-tutorial/index.php 
The compulsive code reviewer part of me needs to point out that as a rule of thumb, you should have Customer implement Comparable and use Collections.sort(customers) instead :) (Not to detract from the explanation of the concept - it's good.)
I've been told that static methods and attributes are EVIL and should not be used unless the entire class is static. Something about being unable to alter an object's state. I think I understand, but maybe someone else can explain better than me.
This is actually the binomial distribution in probability theory. 1 - P(rolling a 32) = 1 - (1/32)(1 - 1/32) ^ 3.
Minor point: main is static, but it is not called first. Static initializers are called first (when your class is loaded by the classloader), and then the bootstrap code calls your static main method.
I think it's a very good first program! Of course, learning a new language usually means minor things are missed, which isn't bad, it's just a learning experience! Here a few things I noticed... * All of your methods are static, which means that you are basically writing a procedural program. There isn't anything theoretically wrong with this, but Java is conventionally OO, so you may want to start toying around with OO paradigm a bit more. * Make use of your ATMVer10 class! Instead of defining several static methods and then invoking them via main(), remove the static keyword and make those methods become behaviors of the class. This will mean that your main() method will "drive" the ATM object after instantiation, but will have no knowledge of the underlying "work" being performed. * You define several "prn" methods which, it appears to me, represent helper "functions" to print different data types. You can refactor much of this behavior; plus have a look at the String.format() method :) If these methods were just to shorten the "System.out.println", you can actually "import static java.lang.System.out;", which will then allow you to remove the "System" reference to each line. Most developers I know don't do this, because most IDEs will now generate the fully qualified operation by using something like "sysout" or "sout" templates with code completion. Also, I just noticed that you may not make use of all of these....? I didn't scan all of the code in depth, but you may want to take a peek, I only saw prnln(), which is the same as prn(). Best of luck with your learning! :) 
Check out templates. I would also take the time to learn how to write your own. They are invaluable. I have some custom ones that I use for importing all of my standard imports on new classes and junits, the generation of different junit testing scenarios (e.g. like testing valueOf, name() off enums for code coverage :( ), javadoc, etc. 
ctrl + / to quickly comment out code
 File checkingFile = new File(login + "Checking.txt"); if(checkingFile.exists()) { // normal flow } else { // exceptional flow }
RuneScape
JavaFX can run HTML 5 inside it.
If this is your whole code, I assume you are missing this: import javafx.collections.ObservableList; import javafx.event.ActionEvent; import javafx.fxml.FXML; import javafx.scene.control.TableView; import javafx.scene.control.TextField; Edit: how do I print code?
Simple rule: Immutable is good. So if your method does not change the state of the object and if it must not be overwritten by a subclass, it should be static. Also static methods are easier to inline by the JIT-Compiler.
Do you have more on what code is good for JIT-Compilers and what code is not good?
One rule-of-thumb, if you have a `class Obj`: ask yourself "does it make sense to call this method, even if no `Obj` has been constructed yet?" If so, it should definitely be static. So in a `class Car` you might have a method `double convertMpgToKpl(double mpg)` which would be static, because one might want to know what 35mpg converts to, even if nobody has ever built a `Car`. But `void setOdometer(double mi)` (which sets the distance-traveled for one particular `Car`) can't be static since it's inconceivable to call the method before any `Car` has been constructed. (Admittedly, a unit-conversion method like `convertMpgToKpl` might be bundeled with other math-ish functions in its own class, but you get the idea. Methods like `numberCarsCreated` or `EPA_rating()` might be (if the class represented just one particular model of car).) One nuance: The converse isn't always true: you might sometimes have a method which involves two `Car` objects, and still want it to be static. E.g. `Car theMoreEfficientOf( Car c1, Car c2 )`. Although this could be converted to a non-static version, some would argue that since there isn't a "privileged" choice of which `Car` is more important, you shouldn't force a caller to choose one `Car` as the object you'll invoke the method on. This situation accounts for a fairly small fraction of all static methods, though.) [Disclaimer: self-plagiarized from a similar answer I've given on stackoverflow.]
Yes, it happens as defined!
I don't know. I think this illustrates why static attributes are bad. Since objectCount is static, you can't reason about it in tests. Sure, it's just one int, but what if it were a String or another object? It won't be garbage collected for the entire life of the program, so if you end up making a lot of Shapes, you'll make a lot of problems along with them.
Basically it depends on the complexity of the method. If your static method calls other methods and/or has complex execution paths, the optimizer still has the same problems with optimizing it as with non-static methods. However if you write a method in form of a utility method (like filtering values from a list), making it static may help the optimizer to inline code earlier and reduces the chance of optimized code to be dismissed.
There is only java. I'm not exactly sure what khan Academy uses, but are you looking for help with javascript? The two are completely different things. 
Is it just me, or does this look pretty awesome? The syntax is very clean and easy to read, the features for declarative structures and union/intersect look very useful, the higher-order function support is also very simple, yet powerful. I will definitly look more into it. I am really curious how Ceylon works performance-wise, since the Ceylon compiler is based on OpenJDK. Also the jump from a few years of Java to Ceylon should be pretty easy.
I don't really understand the benefit of Ceylon over Java though?
Javascript, but less advanced as what you would find in a normal Java platform. If that makes sense? Javascript*
It doesn't make sense. Javascript is not the same thing as java, despite having similar names. They are not related. 
I think the guys over at Red Hat felt that Java was ignoring some development features and that the language promotes verbosity instead of clarity. I'm going to mess around with it some to see how I feel. As long as it can interact with standard Java libraries it might be very nice.
So it's aiming to be Java on some sort of steroids? I might take a look at it. Does it achieve exactly the same as standard Java?
It runs on the JDK so I'm guessing so. If I had to guess I'd say it's more of a pointed attack on Oracle's stewardship of the Java language.
Hmm, might be worth taking a look then. Are there any real key benefits that you can see though, or is it just the beginning of something different?
no offense but this sounds like the latest start-up fad. Anyway wish you all the luck!
None I can see yet but I'm pretty busy right now but later this afternoon I'm going to try and write something simple. Major complaints I can see now are that it doesn't **seem** to have EE6 or EE7 support, but I could just be missing something.
&gt;So I am trying to teach myself JavaFX (via FXML - doing it all programatically just looks like so much boilerplate code) [clojurefx](https://github.com/zilti/clojurefx)
The problem you have in locating the "rick" record is that you have a slight code problem. The **inDirectory** method as you have copied it is written like: public boolean inDirectory(String name) { for (int i = 0; i &lt; directorySize; i++) if (directory[i].contains(name)) { return true; } else return false; return false; } The issue is you have an **else return false** inside your loop. What is happening is that your loop only checks the very first item and if that does not match, you return **false**. Your loop logic should be if you see the match, return true, otherwise continue until the end of your list. If no match is found then return false. Rewrite that routine like this and it should work: public boolean inDirectory(String name) { for (int i = 0; i &lt; directorySize; i++) { if (directory[i].contains(name)) { return true; } } return false; } 
Looks nice, but I'd put more stock in Kotlin taking off. It's fairly similar in terms of goals, but is backed by IDEA who built it with IntelliJ in mind to make it 100% IDE-friendly.
The way I like to think about it: ... Non-static methods can access `this`. Static methods cannot access `this`. ... If your method body never uses `this`, you can make the method static. A method will either use `this` directly, or (more likely) it is implied when it uses a non-static variable or calls another non-static method. Conversely, if you're writing a static method but find that you really need to access a non-static member variable for some reason, you should make it non-static. In my experience static methods are mainly used as either one-off utility methods or (more commonly) as factory functions. This can be especially useful for Bean classes since all Beans are supposed to have a public no-args constructor.
I'm a bit a loss for what you mean by a more "generic" solution. Using a common interface as you tried for the type given to the TweenAccessor is fairly generic, but if you're looking for a way to do a single registration, there's only one way for that to work I think. I grabbed the Tween source code and took a look at the project. The accessor registration appears to be a simple map where the class is key and an instance of your accessor is the value. The lookup code for the accessor in the Tween source appears to go through the super class list of the provided class is not the key itself. So if you only want to do a single registration, then all your classes would need to have a common base class that you would use as the type passed into the TweenAccessor and the type used as the registration key. If they do not share a common subclass then I think you would have to register them separately. Sorry if I'm not understanding your issue correctly. 
If you're a Java shop, then why does the job posting list in preferred qualifications &gt;2 or more years of Ruby on Rails development experience and/or an interest in acquiring Ruby on Rails experience 
We use Rails for some components of our stack so being multilingual is an advantage, but right now our primary need is Java.
It seems Ceylon is backed by Red Hat, which is also a powerful company.
Powerful, but shitty. IDEA makes first rate products. RedHat makes bloatware. 
java is to javascript as a elephant is to a rhinoceros. They are two different languages, with very different paradigms and execution. To be honest, I have no idea what you're looking for. What have you done to start?
I haven't looked at it enough to be sure... but I was hoping exactly what you described would be the case. I just don't see it as a top billing that's all. In some cases you'd need compatible method signatures... maybe I can write hybrid Ceylon/Java code.
You should probably ask a specific question or tell us what information you are looking for.
As if quality has ever been a requirement for success... Remind me again what is the marketshare of IntelliJ compare to Eclipse?
You only need jfxrt.jar as bootstrap jar for building. You can redistribute a complete open source version of JavaFX + JDK. It builds all native stuff including Webkit &amp; multimedia. The only thing that is missing in the open source version is the on2 video codec.
An interesting fact about Apache POI is that supposedly POI stands for Poor Obfuscation Implementation since the files were apparently obfuscated to make them proprietary, but it was poorly done. The specific libraries for the different office formats also have humorous names in reference to how poorly the formats themselves are (taken from [Wikipedia](http://en.wikipedia.org/wiki/Apache_POI#Architecture)): &gt;* **POIFS (Poor Obfuscation Implementation File System)** โ This component reads and writes Microsoft's OLE 2 Compound document format. Since all Microsoft Office files are OLE 2 files, this component is the basic building block of all the other POI elements. POIFS can therefore be used to read a wider variety of files, beyond those whose explicit decoders are already written in POI. * **HSSF (Horrible SpreadSheet Format)** โ reads and writes Microsoft Excel (XLS) format files. It can read files written by Excel 97 onwards; this file format is known as the BIFF 8 format. * **HPSF (Horrible Property Set Format)** โ reads "Document Summary" information from Microsoft Office files. This is essentially the information that one can see by using the File|Properties menu item within an Office application. * **HWPF (Horrible Word Processor Format)** โ aims to read and write Microsoft Word 97 (DOC) format files. * **HSLF (Horrible Slide Layout Format)** โ a pure Java implementation for Microsoft PowerPoint files. This provides the ability to read, create and edit presentations (though some things are easier to do than others) * **HDGF (Horrible DiaGram Format)** โ an initial pure Java implementation for Microsoft Visio binary files. It provides an ability to read the low level contents of the files. * **HPBF (Horrible PuBlisher Format)** โ a pure Java implementation for Microsoft Publisher files. * **HSMF (Horrible Stupid Mail Format)** โ a pure Java implementation for Microsoft Outlook MSG files * **DDF (Dreadful Drawing Format)** โ a package for decoding the Microsoft Office Drawing format.
First part of the tutorial about building a fully functional JDK is done! I'm working on the next one. Should I provide OpenJDK 8 builds for download?
Static methods have no "this". Non-static always have an object that they are called from, and it becomes "this", and you can operate against it and access it's data. Static methods don't have that, so they usually only operate on class wide things, or do simple work based on arguments passed in. They are not inherently tied to an object. FYI.. I'm a bit of a java noob so correct me if I'm wrong.
Java/Machine Learning people are in high demand. That Ruby on Rails bit would really deter people from the site if they thought they would be stuck doing some lame ActiveRecord turnkey webiste maintenance instead.
Perhaps, I've removed it.
Fair enough. Although in the case of Eclipse, it has an obvious cost advantage. 
I headed over to KA to see what you're talking about. A few things: First of all, they're using JavaScript, not Java. As others have said, these are not the same languages at all. Second, I think I understand what you mean the "code base." KA doesn't have distinct JavaScript code base. They take elements from the JavaScript library and implement them in such a way so that the code associated with element (such as drawing a rectangle) is automatically generated. Then you're freely able to edit the code in a WYSIWYG-like editor. Basically, there is nothing special about their code compared to other JavaScript applications that you'd come across. Lastly, and this is a matter of opinion, I think that grabbing a WYSIWYG editor that auto-generates code is a poor way to learn how to programming/developing/languages. This isn't to say that you can't become proficient in a language by doing this; however, clicking buttons that automatically generate code without a fundamental understand of what is actually going on will hinder your learning process. I suggest heading over to /r/javascript for a way to get started with the basics. You have to learn the syntax and semantics before you can get anywhere. Of course, if you're *only* going to make a 6-sided die with no intention of ever programming again, then a KA-style suite isn't so bad.
I recently used poi to help my wife automate some tedious excel chores. It made working with excel suck a lot less.
Dragon Dyce ;) 
Oh wow that makes so much sense. Thank you so much. 
The code is the same as on the website here: http://docs.oracle.com/javafx/2/fxml_get_started/fxml_tutorial_intermediate.htm#CACFEHBI The code for these examples is here: * http://docs.oracle.com/javafx/2/fxml_get_started/FXMLTableView.java.html * http://docs.oracle.com/javafx/2/fxml_get_started/fxml_tableview.fxml.html * http://docs.oracle.com/javafx/2/fxml_get_started/FXMLTableViewController.java.html * http://docs.oracle.com/javafx/2/fxml_get_started/Person.java.html * http://docs.oracle.com/javafx/2/fxml_get_started/FormattedTableCellFactory.java.html Also using these examples in IntelliJ
Checking this out now
Seems like unnecessary effort, without additional benefit, which can be easily done today by a simple souece-&gt;generate getters from any IDE.
I'm not commenting on your company (haven't looked - dont really care) Having customers does not preclude being a fad. The pet rock sold over a million units - and that was an obvious fad. There is currently a lot of money being thrown at tech startups of all types. People going into it with the goal of being bought should indicate just how manys fads and useless money is being thrown around. 
Rather than me trying to explain what it's not a fad, which is probably impossible, perhaps you could give an example of an A-round stage startup that is definitely not a fad.
Really? This surprises people?
Not really. The JVM is back in vogue for a reason. (Scala has a role in that too, I'm pretty sure.)
[The standard way?](http://www.merriam-webster.com/dictionary/fad) The tech industry is spewing out a new fad every 1-2 years that people get into (web2.0, hadoop, media specialists, "web scale", and now "big data" and "data scientits"), usualy with some amount of intrinisc merrit - a few good showcases, and now your an "idiot" for not jumping on the band wagon. But then they usually die off and people realize they were spending a lot of money / effort for something with not so much payoff or relevance to them. Or with the current cycle, apply very specific tools to every problem they were never meant for. My personal favorite is people making hadoop clusters with 3 EC2 instances with no more than a 8 GB of ram each. Makes no sense at all. I'll go ahead an add for the sake of argument - its much more difficult to be in a fad and have never had any customers, as that would be counter to a fad being popular for a short time. 
I really don't see what about what we are doing would suggest that it is a fad any more than any other company at our stage.
As I said, I wasn't talking about your company (no idea what you do - again, don't really care). Just saying that your response wasn't really all that good. 
thanks! i have it set up like such public static boolean accountCheck(String login) throws IOException{ File checkingFile = new File(login + "Checking.txt"); Boolean bool; if(checkingFile.exists()) { bool = true; return bool; } else { bool = false; return bool; } then in the main i have it like this String loginString = login(); prnln("Please wait while we retreive your account information"); boolean bool; bool = accountCheck(loginString); while(bool = false){ prnln("Invalid username/password. Please try again"); loginString = login(); bool = accountCheck(loginString); } 
thanks for the support! we haven't learned much as far as what you suggested goes. I'm pretty much just using what my professor taught us in class. I'm defiantly gonna look into what you said though. 
ok, ill remember that for next time. thanks!
Got it to work on IntelliJ but it still is giving me that tooltip error that it cant coerce, but yet it does coerce it into it and it works anyways now. Can someone else please copy the code from there website (Oracle - http://docs.oracle.com/javafx/2/fxml_get_started/fxml_tutorial_intermediate.htm#CACFEHBI - under view source code) into IntelliJ and confirm they are getting the same tooltip message. The message is about being unable to coerce it from a FXCollections to an ObservableList. Yet like I said it's still doing it now though. Fairly confused
It's less effort, less noise, less opportunity for error.
While condition should be == instead of = while(bool == false) but would usually be while( ! bool ) You can also do the following for accountCheck to simplify it return checkingFile.exists();
By using apt to do this it works both inside IDEs as well as command line build tools.
What's the difference between this and proto buffers? 
I think this is a highlighting bug in IntelliJ. I'm guessing NetBeans is the same. http://youtrack.jetbrains.com/issue/IDEA-112152#
So, essentially, NIH Lombok?
Wait youre telling me that the JVM executes code faster than the Python and Ruby interpreters?! What's next? That water is wet?!
I screwed up the title, I meant Constructors, not Constructs. Goddammit I'm an idiot.
If we go with the recipe analogy, which is a little imperfect but works, the ingredients list is the members -- all the bits that go into the pie. The constructor is the actual instructions that say what to do with those ingredients to make the pie.
I like that jRuby is faster than Ruby.
Cool, but it does kind of hide what is going on. If I inherited a project from someone that used this a lot, I would be taken aback, trying to figure out what's going on.
Ahhhh ok. Yup seems to be an FXML parser thing. Cool to see I wasn't the only one to see it. Huzzah!
Like C++, Java has never gone away. Just the hipster thought otherwise.
They usually aren't interpreted though. There is nothing stopping them from being compiled to an intermediate language and then being JIT compiled. Infact, I'm sure that is exactly what they do in a server environment.
CGI / FastCGI / mod_python / Tornado / mod_wsgi / etc all require Python interpreters to run Python on the backend. I mean if you want to argue that Python is JIT compiled okay I suppose but to Python bytecode not machine code...
I mean it gets compiled right before a block of code is run in the Python VM, one might say it is compiled just in time... I mean if you really want to be semantically correct it doesn't get compiled to machine code but it is compiled just in time to be executed as bytecode
The definition of JIT compiled code: http://en.wikipedia.org/wiki/Just-in-time_compilation The JVM runs an interpreter and a JIT compiler. It is up the JVM to determine which portions to JIT and which portions aren't worth the overhead. Python does the exact same thing. &gt; I mean if you really want to be semantically correct it doesn't get compiled to machine code but it is compiled just in time to be executed as bytecode You aren't making a lot of sense. Nothing is JIT compiled to byte code. JIT it compiling _from_ bytecode to object code native to the CPU.
I believe that building a war to deploy to a web server gives you the greatest flexibility. If Jetty ends up being a problem you might be able to give Tomcat a go. If you want to deploy to some cloud solution that load balances between many machines, you may be able to just deploy a war file to it and have it go. You may get a small benefit in terms of development time by getting something working sooner if you do embed Jetty but I don't think it's going to give you a significant pay off. You can't work out how to meet performance marks until you know where the time is being spent in your setup. Are requests backed up due to database contention, thread contention, disk contention, cpu contention, thread contention etc. Once you know where you can make improvements, you can work out how to solve it.
As I said, semantics. Python programs are *literally* compiled just in time. I understand the actual difference you're just trying to argue definitions at this point...
&gt;And while some java frameworks might be faster overall, memory usage is not measured, nor is code maintainability. Are you suggesting there would be an issue with either of those on the JVM platform? Maintainability, is a pretty fuzzy concept. I have no idea how you'd go about measuring it across languages and platforms.
&gt; As much as Oracle would like to think otherwise, developers choose a given framework for plenty of reasons other than raw performance. Ease of development, time to release, developer affinity, and third-party community involvement are all at least as crucial. Does the article writer think that Oracle just came out with Java last year or something? If only Java had some third-party support. Lol. 
&gt; Python does the exact same thing. Only PyPy does it, but you are right, it is an implementation issue, not a language one.
Eh, one must wonder what's the point in writing such an article (or submitting it here) at all. Only to be laughed at?
Excellent answer and advice, thanks! The limited testing I've been able to do so far has been basically beat it up with ab and siege to make sure I can at least hit some concurrency marks before progressing further and so far it seems ok. Perhaps I'm nervously treading into the early-optimization territory and I need to just back up and focus more on implementation and worry about optimizing when the need arises because like you said, without knowing where the bottlenecks are, there's not much I can really plan for is there? I think for the time being I'll keep truckin' with the embedded solution until a time comes I need to start looking at performance. My biggest concern is just with how green I am with some of these tools, the last thing I want to do is set expectations one way and then when the fires start burning, not be able to handle the issues due to my lack of experience. C'est la vie, out of the pan and into the fire has a tendency to be a fantastic motivator for learning haha. Thanks again!
Totally agree.
Yes, it does. The unwashed masses think that java is "slow" because of their experiences with applets ten years ago on JVM 1.1.
this doesn't sound like something you are designing but as an home assignment from school. you should do it yourself if they give you this assignment it's because you should have by now the knowledge to complete it. second i asseme they have already told you wich dbms yo use. 
Kevin Bourrillion from Google describes problem with Lombok [in this podcast - (starting from 17:40)](http://javaposse.com/java-posse-430-kevin-bourrillion-on-java-guava-and-more). Long story short - for value / case classes (ex. `case class Foo(a: String, b: Int)` in Scala) Lombok is too big hammer for this particular simple use case and it did not work well at Google.
actually no, the `*.py` code is translated to `.pyc` Ahead of time, for CPython at least. PyPy is an actual JIT.
Good decision ... The thing to keep in mind is Spring Boot is an 'opinionated' packaging of various Spring components and design decisions but the fact that are thinking about them and questioning them is a very good thing. You will always be able to change things later. I havent used Boot yet bit have been using Spring framework core and various other libraries for years.. But after building it all of from scratch I really appriciate the work they are starting to do with Boot, making it very to get up and running quickly while maintaining the flexibility that using the Spring container allows for changes. On the topic of embedded vs standalone war, this I think is more a realization of the trend of not always having a configured or shared app server available and allows for easier deployment in the cloud and makes your app much more portable.
[The link to actual benchmark](http://www.techempower.com/blog/2013/10/31/framework-benchmarks-round-7/) for brevity.
This seems significantly more complex to use.
Well first of all, I never said Python replaced Java, in fact I didn't even imply it. In reference to language cleanliness I was only comparing it to the languages that are much more in line with it. Comparing Java code to Python code is more of an apples and oranges affair because the base assumptions about code organization are different. Perl, Ruby, Lua are much more similar, and I was comparing Python to them, not Java. Python has the ideal that "there should be one way to do somethign" where as Perl and Ruby definitely have the, "there should be many ways to do something." Python in that regard makes spinning people up on correct application distinctly easier, and that's based off my experience, I'm not just saying the party line. You are absolutely correct, programming languages won't prevent someone from writing bad code, I don't think I implied that it did, but maybe I did? Java is a good language, I used it for the better part of a decade, I switched to Python because that's where my employment was. My experiences with the two languages tell me Python is much simpler to understand than Java for many tasks(not all). That doesn't say anything about the quality of Java though, Java is rock solid and I'd be happy to write in it again. Also understanding design patterns makes a huge difference in the quality of written Java, you may be able to write Java without that knowledge, but its like poking around in the dark. Java has many base level assumptions that are rooted in those concepts. 
And the 30 for 30 page has been bookmarked... nooice!
/r/javahelp Please note its posting guidelines in the sidebar.
Personally, I work on a project where we offer both solutions. That way, the customer decides. That does not have huge impacts on the code, but a little more on your packaging system.
In a commercial environment they will not care about the computational performance, but the overall price of developing, maintaining and running the application. In fact going for the higher computational performance at an even higher price would be detriemental to the company's health. The python bytecode is interpreted, there is nothing wrong with that. It works well enough anyway.
Yeah, people hear 'Java' and they think of that crappy applet they used once or some kludgy old Swing GUI. They don't realize how fast and optimized Java runs in and of itself.
You are not going to get hired as a developer, even at entry level, without a college degree unless you have a decent record of commits on open source projects.
Likely not. But you could get in as a tester, deployment specialist, technical support or the like and prove yourself with the knowledge you have after you have your foot in the door. Besides, I assumed the asker was already a dev, just not a Java dev. Plus, they would have the minimum competency to meaningfully contribute to an open source project -- which is a good recommendation. It also gives people who merely have a degree without any experience a taste of what real code is like. Many devs I know don't have degrees or have degrees in unrelated fields, so it is not terribly difficult to get a job if you have the chops. And I am not talking about fly-by-night shops. I am talking about places like IBM, Cisco etc.
Ahh. Good advice.
I don't know how to answer you you're stating facts that are not contradictory with what I am saying. But just for future reference Python does not need a *.pyc file to run, it just tries to persist the bytecode (all a *.pyc file is is bytecode persisted to disk) that was generated just before the program is run.
Generated just before the program is run is not JIT. And please specify CPython, that sort of thing is an implementation detail of a specific interpreter
I would add glassfish to the list of application servers
I did not know that had happened. But it makes sense - there's no point having two competing commercial application servers. I still expect to see glassfish used for a long time in a local context e.g. for development and rapid prototyping.
You're already on the right track by knowing some C#. Try practicing building GUIs with Swing/JavaFX so you can get used to not doing click-and-drag GUI building. Also, I think MS is starting to push dev tools so you can use C# to create Android apps. Take a look at Mono (independent) and Xamarin (partnered with MS).
Join us in http://www.reddit.com/r/progether. Look for the JAdventure project :)
I'm familiar with Xarmin and mono. I mostly use C# for playing about in unity. The course in signed up for mentioned that is meant for people with some java experience. And I'm a fan of doing things natively, so java ahoy! As for gui work, I'll look into that. I'm going to be using eclipse, android studio, and intellij idea, so I'll likely stay with stay and drop, but I'll need programmatic UI if I want anything dynamic. 
Would be great if there was a @Lazy annotation to allow for the creation of Scala like concurrency safe and highly efficient lazy loading.
very cool :) Why are you using TinySound? Lwjgl comes with OpenAL 
Long story short: I know there is OpenAL. I tried to use it, but ran into a whole list of issues with how DIFFICULT it is to make a custom sound class. So I just used TinySound. It is simple, easy, and small! Not for long, however. I said earlier: &gt; paulscode! Paulscode 3d (can be 2d) sound is a HIGHLY advanced sound library (even minecraft uses it!) that I will implement soon. Just a bit busy at the moment with another thing.
Sales pitch time: what makes this ECS unique?
Subscribed 
For interests sake, what would you say are the alternatives and why is this preferable to those?
Thank you sir, this is wonderful. Now it's time to start coding!
Libgdx, and slick2d. Those are both GREAT libraries, way more than this will ever be. But that is why I made this. Sure, they are great, but they are *LARGE*. They have tons of utilities that few people use, like slick2d's TileMap class. MERCury is compact, and gets the job done at a high framerate. You can stick to libGDX, Slick2d, but if you want a small lib/engine, you have to look around (as you could guess, smaller engines/libs are less popular). But I am not pitching this to you, I am sharing my progress on this project. This is for my learning benifit. If it come in handy for you, then I feel like I have accomplished that much more!
* Component's can be anything, they don't need to extend a Component class. This enables you to use your own Vector, Matrix, etc classes, or String, interface, etc. * Entities are defined by Templates, which is an easy and quick way to see what the components on an Entity will be, it's behavior (based on Controllers) and it's view. * Component values can be generated dynamically instead of stored on an Entity (saves memory) * Component values can be shared between Entities of the same Template (saves memory) * Component's can have alternatives, meaning entity.get( POSITION ) could return a position unique to that entity, or entity2.get( POSITION ) could return a dynamically created position based on the entities center and size (for example). Basically alternatives enable you to overwrite the normal getters and setters for an Entity to do something else. * Systems don't exist literally. They've been replaced with Controllers and EntityIterator+EntityFilters. Systems are often used to iterate over all entities that have a set of components (like POSITION and VELOCITY) and performs an update: POSITION += VELOCITY; Controllers now do this. If you don't want to use controllers, you can define a filter like "and(components(POSITION, VELOCITY), enabled())" and all enabled entities with position and velocity will be returned. There are over a dozen different filters to do all kinds of neat stuff. * Views have life cycles, so you can keep track of when an Entity is created, wants to be drawn, and has been deleted. * Views enable decoupling between game code and rendering code. * Speed and low Memory Consumption have been large factors which decided its current design. * Has solid examples! * This library will be very actively maintained... want a feature just ask and you shall (most likely) receive. * Ents are in Lord of the Rings, and are totally awesome. They are obviously not related in any way =/
Than you have to list Tomcat as a toy server as well since it does not have commercial support. Glassfish is open source and has a large user base it it not going anywhere. Actually there are companies that offer commercial support for both servers. It is just that Oracle does not.
That is part of Java EE and covered in those tutorials...
In what way?
Great post! Do you know any good play! tutorial?
Personally, I don't think there is much specific about any particular application server that you need to know. If you know enough about servlets to build a tomcat project you're probably fine to get employed for any Java servlet based project for entry and intermediate level positions. 
I like "Head First" series You can find there web app topics like Servlets and JSP which may sound outdated but are basics for further learning. There is one about EJB as well. 
Good idea! *Boop
I prefer Goncalves for how-to's from start to finish, and Gupta for top-down overviews. I really liked Antonio's EE 6 with Glassfish book, and was writing apps almost immediately. 
That's cool then. I would suggest just downloading the Typesafe activator and/or looking through the "samples" folder whenever you download the Play framework. All of the example projects are really well done compared to what I'm used to as a Java developer. 
Fine, I'll add an aterix. See what you've done?!
This looks pretty cool! Just wanted to point out: I don't think your `randInt()` ([link](https://github.com/weslgames/MERCury/blob/master/MERCury/src/com/wessles/MERCury/maths/MercMath.java#L67)) works as it should. Doesn't this never return Integer.MAX_VALUE?
[These](http://nehe.gamedev.net/) are the tutorials that I learned JOGL with, they are pretty comprehensive. Feel free to PM me if you have any questions.
I think the library analogy would work better of instead of books and DVDs, you stuck with books on a variety of topics. You give me the ISBN of any book, and I can go and find it, but the ISBN alone isn't enough to tell me what the book is about.
I second this. I've done many visualizations, simulations and other projects using JOGL and it's a worthy platform, and NeHe's tutorials are all you need. Also, once comfortable with JOGL, you're probably going to play around with controllers, in which case I recommend [JInput](https://java.net/projects/jinput). I used a PS-like USB controller (rumbler is supported!) in a recent JOGL project. Some alternatives to JOGL are [JMonkey Engine](http://hub.jmonkeyengine.org/downloads/) (better for games) and [LWJGL](http://www.lwjgl.org/) (as used by Minecraft)
Nice thing, why don't you post it on r/gamedev ?
&gt; Maintainability, is a pretty fuzzy concept. I have no idea how you'd go about measuring it across languages and platforms. That would be hard. I think the problem is that now e.g. the raw Servlet test can blast out the html tags for the e.g. the Fortunes benchmark as a few Strings with the values streamed in between. But in practice, you wouldn't code any non-trivial page like that, and probably not even trivial ones. You'd use a template, like e.g. the example gives: &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;&lt;title&gt;Fortunes&lt;/title&gt;&lt;/head&gt; &lt;body&gt; &lt;table&gt; &lt;tr&gt;&lt;th&gt;id&lt;/th&gt;&lt;th&gt;message&lt;/th&gt;&lt;/tr&gt; {{#.}} &lt;tr&gt;&lt;td&gt;{{id}}&lt;/td&gt;&lt;td&gt;{{message}}&lt;/td&gt;&lt;/tr&gt; {{/.}} &lt;/table&gt; &lt;/body&gt; &lt;/html&gt; This allows the programmer to add or remove tags easily. In a Servlet benchmark you could do: writer.write(HTML_1).write(value1).write(HTML_2); with e.g. HTML_1 defined as e.g. private static final String HTML_1 = "&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;Fortunes&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;table&gt;&lt;tr&gt;&lt;th&gt;id&lt;/th&gt;&lt;th&gt;message&lt;/th&gt;&lt;/tr&gt;"; It will be very tedious and error prone to add and remove tags in such strings, as you don't see what the matching tags are in other strings. If the HTML gets a little bigger it's practically impossible (as I in fact know from practice, long time ago I worked on a project that did something like this)
Holy crap. With the LWJGL version I get upwards of 6000 FPS. I guess a 7950 is a bit overpowered for this application, huh? lol
http://docs.oracle.com/javase/tutorial/essential/regex/quant.html That page has everything you need to know about variable length regex stuff. http://docs.oracle.com/javase/tutorial/essential/regex/char_classes.html You can use character classes to define what range of numbers is acceptable. You can also place arbitrary grouping in the "X" portion on the first page. Which basically lets you quantify groups. That entire series is a pretty great source of info for all things java regex aswell, hope this helps.
Oh I did!
Yeah most likely :-D
Yes it can for lets say 90% of the work that concerns the application and UI part. You can always drop into JNI to call optimized Assembly, C, C++, GLSL, OpenCL, CUDA for the encoding/decoding part.
There is a [stackoverflow](http://stackoverflow.com/questions/809646/libraries-tutorials-for-manipulating-video-in-java) question about this that has a couple links on it. Still, I'd look at building something a little less complicated, since a video editor is a pretty complicated piece of software and you can very easily find yourself bogged down. Just out of curiosity, do you know anything about design patterns, object oriented construction and such? All that will be necessary to put together a project like this.
Thank you very much! I have been watching thenewboston's set of tutorials, but I've been told they aren't very good, so I stopped after making that calculator. Do you think you could recommend me some useful tutorials, either online or a book? Thanks again for your help!
IBM, Spring source, and Red Hat all offer subscriptions to support Tomcat so you're just wrong
http://www.amazon.com/Effective-Java-Edition-Joshua-Bloch/dp/0321356683 http://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented/dp/0201633612
Faster version of R would be freaking awesome at work. If I'm reading the page right, though, it can't yet be used for general-purpose hoo-haa, it's more at the experimentation stage.
/r/javahelp also, you know, debug it? Think about return values?
Heads up Java and Heads up Patterns are pretty good to explain design/pattern concepts. 
You could just match on and set of xxx.xxx.xxx.xxx:xxxxx which would speed things up then Assuming a string representation you could just split on : and then on . And then check to make sure the length / values are acceptable. You really should try to avoid regular expressions if possible they tend to be slow in Java due to using a NFA approach to pattern matching.
i knew this question would come up. Its for a project and must be included that's why. I know there is far easier ways
Also beats the CLR frameworks ( on both mono and Microsoft implementations). It is not only about executing code faster, Java frameworks are both mature and mostly open source and with Java being a widely used server side language many developers are interested in having these frameworks optimized.
Or rely on gstreamer/ffmpg
In terms of time theoretically Merge sort would probably be the fastest. However being that this is in the Java sub, Java has some built in sort methods that handle most common applications of sorting. These methods perform a fair bit better than any custom implementation of Merge or Qsort. 
Here's what's wrong with your code: The first time this code executes (the first iteration of your recursive function), what (2) possible return paths does it have? On line 8 you have return lo; and on line 20 you have return pos; These are the only two places that can return a value. Right off the bat, you've got the problem that the first one is returning a *value* from the array and the second one is returning a *position* in the array. You need to decide whether you want your final function to return the minimum value or the position of the minimum value. I'm going to assume that the `return pos;` is a mistake and that you actually want to return the minimum **value** from the array so that last statement should have also been `return lo;`. Well, next question is -- when do you ever update the value of lo with the results of your *recursive* search. Yes, you update the value on line 11, but that update isn't going to help you when it's happening 5 calls deep and invocation #1 of your function can't get the results back. In short, you are throwing away the results of your findMinRecursive function and never returning them. Here's two more pieces of criticism that are slightly more stylistic in nature so they aren't as critical. 1. I'd suggest not starting your search with an arbitrary constant. (-1) Instead, just choose the first element from the array as the 'seed' value. If you were to start with a pre-defined constant anyway, -1 is probably a bad one if you don't know what possible int values are going to be passed in to the array. A better constant would be Integer.MAX_VALUE which is bigger than every other integer representable in an int variable. 2. You can make this function properly tail recursive by eliminating those duplicate recursive calls. Just use that first `if` statement to update the value of `lo` and then make the recursive call once. Here is your code updated with all of my suggestions: // assumes that a != null &amp;&amp; a.length &gt; 0 public static int findMin(int[] a) { return findMinRecursive(a, a[0], 1); } private static int findMinRecursive(int[] array, int lo, int pos) { if(pos &gt;= array.length) return lo; if(array[pos] &lt; lo) lo = array[pos]; return findMinRecursive(array, lo, pos + 1); }
This question might be better answered in /r/programming but anyway the following video is a cool if round about answer to your question https://www.youtube.com/watch?v=kPRA0W1kECg&amp;feature=youtube_gdata_player
These are great books, but both absolutely useless for someone who just started out.
Just my opinion, but I don't think changing languages is going to change your development speed. Yes, Java is verbose, but I really don't think that's really the bottleneck, especially since it sounds like you're using Java in a domain that is battle-tested: web apps, services, server-side code.
&gt; Wouldn't try to write a video editing app without at least that level of understanding. That's true. IMO it's a goal that's *WAY* off for someone just starting out.
Between all four of those? Merge has the smallest time complexity, O(n log(n)). Everything else you listed is O(n^(2)) complexity.
Have you ever worked with ruby on rails or python? This answer seems very much like it comes form someone who has not worked outside of Java.
I don't know jack about groovy but I can comment on Python and Ruby. Both Python and especially Ruby on Rails, are very very quick in terms of initial development. I have not worked with Ruby much recently but several years ago I was using it to build prototypes of web applications. Sometimes those web applications would go on to be finished in Ruby and sometimes not but Ruby and Python both can give you amazing results in terms of the speed with which you can get the basic layout of a web application running and they at least on the surface are scalable. I could build working prototypes sometimes as quick as 30-40 min. However where things start to fall to pieces is when you are developing a web application that does more than relatively simple tasks. If you need to do some sort of login, filling in forms, saving info to a database, ect. ect. basic web application stuff. Ruby and Python are really pretty OK and can get that working much much quicker than in Java. However their weakness is really in that they do not scale as well when they are asked to do more complex tasks. Ruby is especially weak at anything that requires heavy computational work, python less so but both are still relatively sluggish when compared to Java. Basically, for something like twitter, Vine, Instagram type deals where you are mostly doing simple tasks in an elegent way Ruby and Python shine for their simplicity and speed of development. If I had different teams specializing in different languages, I would try to split the work so that, the guys specializing in Java got things where more computational work is required and performance is more of a factor. 
Coding languages and and technologies are just tools on your tool bench to be used to create something. Java may not always be the right solution just like a sledgehammer is not the best hammer to use when building a birdhouse. Systems that are enterprise in size, and will require a long maintenance cycle should probably be done in a language like Java. But utilities, with short lifespans or low maintenance costs could probably be implemented faster in a scripting language like groovy. Before every project analyze the requirements and ask yourself what technologies will best help you to quickly and reliably complete the tasks. Java is not a silver bullet but you might find that although something could be done in another language its not worth the time bringing everyone up to speed on the new technology when you can fall back on Java knowing everyone already has a strong foundation there. Software Engineering is 90% planning and 10% execution. Know your requirements, know your teammates, and everything will fall into place. Address roadblocks quickly and never be afraid to change direction if the path your going down doesn't seem to lead to your goal. 
+1 Java is without a doubt verbose... but the best IDEs will easily take that burden off the developer's shoulders.
python + django and for front end and have it use java for any complex services usually using json as response format. That's about as simple as it gets and separates the front end from the business logic. For prototyping you can set up dummy services in any language that return canned responses in expected format so the service logic can be developed concurrently from the front end.
If fixed, there would be a 0.00000232830645% chance of ever getting that. You are more likely to get mauled by a bear, on a sunday, while eating a hotdog, during a solar eclipse, while in antarctica. So let's fix it!
Why not use Clojure? 
Fragmenting the tech will only lead to information silo's in your company. It's not really a good idea. I'd say company should commit to a open and well established technology and embrace it. Investigating JVM languages might be a decent idea, because it's easier to break someone out of the silo if the alternate language just runs in their IDE and the current project setup.
Well, what's it doing instead? You haven't given us a complete class or method we could run for ourselves, so it's somewhat difficult to debug. 
I've worked on several projects mixing Java and short cycle "agile" methodologies with great success. I think you're taking the problem by the wrong end here. The limiting factor is very probably not how fast you can type code, but rather something else. Take a few steps back and take a good look on your team, and try to find what may be the problem: What does it mean to be "too slow"? Do features take more time than promised to be implemented? If so, is it because of bugs, incorrect estimates, unstable feature requests or other work taking precedence? The answer is probably a mix of these issues which will all have a different resolution. Also if you are being compared to some other team, try to determine if the comparison is fair (is the defect rate also better, is the scope similar?) and if so try to find out what they're doing right. It might be beneficial to exchange ideas with other team leaders.
Rails runs on JRuby. It can leverage Java libraries and still allow rapid development. 
Slow? You mean you guys as a dev team or as a language because as a language, Java is blowing by everyone else on Web stuff: http://www.infoworld.com/t/java-programming/surprise-java-fastest-server-side-web-apps-230565 As far as rapid deployment for java? Try Vert.x - http://vertx.io/
Most of the DuplicateValueException classes I found were not children of the NumberFormatException. Maybe you want to catch "Exception" instead?
IntelliJ for the win. ALT+ENTER import statements and generating getters / setters is nice.
The day I discovered all that stuff was a magical day. Also Ctrl+o to generate overridden methods.
It's both otherwise you end up like all the rails apps that worked great until they needed to scale. Programming the app is a small part of building apps. 
The dev team is seen as slow. I'm trying to take a step back and ask myself are we slow? Could we do things differently and what tools would help us to get code into production faster.
Different projects have different requirements, so I'm not going to say it's globally true, but I think it's something to consider if possible when choosing new project technologies. I mean, if you had some garbage would you throw it on the floor because it's already dirty? I'd think the first step is to mitigate possible bad decisions, while trying to consolidate over the future. Because of your current structure you probably have a lot of specialists and few generalists. Generalists are a bit more valuable because they allow a company flexibility in how priorities and development will be placed.
I don't just mean writing code but also getting the code into production. We use IDEs at work but even then Java can be cumbersome to work in. For example creating a list an adding elements to it takes several lines of code, when it would take only one in newer languages. Also code is read more than it is written and the verbose nature of Java doesn't help. 
Java is a big ecosystem. You might not need to switch languages. Maven or ant are great tools for deployment, and they have uses in the development cycle. 
&gt; Java is a big ecosystem. Agreed. The people who can't do rapid development and prototyping in Java are using the wrong tools and frameworks or have bought into the heavy enterprise mentality. 
&gt; Part of that is that the people asking for the work don't understand the effort required to do what they want. I see this from organizations all the time. Quite often it comes down to people who get the wrong idea or impression about how easy it is to develop software. It's easy to get an 80% functional prototype out the door, in just about any language. It's hard to get that prototype stable, bug free, scalable, extensible, and maintainable. Organizations often fail to realize that getting things right earlier is cheaper in the long run than maintaining a system that's clunking along on chewing gum and bailing twine. However in some circumstances, a quick and dirty solution is what is required, and some languages or frameworks do lend themselves to faster development. Finding string patterns is likely better done in a quick perl or shell script than writing a Java application. On the other hand, a basic CRUD webapp or quick web serivce can be done in just about any language (including Java) with the right frameworks and button presses. Just that such applications have a tendency to expand beyond their original 'quick and dirty' roots -- but no one thinks to go back and charge that future maintenance time to the original project estimates. 
There is very little difference in development time of a large Java project vs a large Python project. Python is definitely better than Java for short 100-200 line scripts that are handy for small tasks or a relatively small data pipeline. And bash is handier than Python for 1-10 liners. 
There are several 'modern' web application and rapid development kits, things like vert.x mentioned above, [Play](http://www.playframework.com/), even giant things like Spring have IDEs and tools to rapidly prototype then do real development on. You might want to investigate Play, it uses Scala and/or Java. The challenge is switching languages for a team requires a learning and experience gaining curve that will slow them down in the short term. 
Use guava
I'm gonna follow up on my own comment. Java also suffers from bad-programmer-itis. That is to say, often newer or "cooler" languages like Scala, Groovy, Ruby, R, whatever tend to attract people who really love and care about programming, and who are aware of changes and new developments in software engineering. But big, established languages like Java, VB, C#, etc attract both the above, but also attract a lot of mediocre programmers by dint of them being common in training courses, university programs and the like. It doesn't take very many bad eggs on a development team to slow down productivity. It'd be interesting to see a study of code quality and productivity of the 'average' Java developer vs the average Ruby, Python, Scala,, etc. developer. You might benefit from a cold, harsh look at the productivity of the people on your team or anyone roadblocking adoption of better libraries, techniques or processes. It's no good if you can't assign a task to someone without having to have their code reviewed constantly to keep them on course. 
Since your question has already been answered, has anyone actually found a use for bubble sort (besides academic/education purposes)? Insertion/selection sort are easier to implement, have the same runtime complexity as bubble sort, and are pretty fast (relative to other sorts) on &lt;= ~10 elements. Just don't use a bogo sort, ever (or a bogobogo sort).
With your experience, I would like to ask whether you've used Grails in production environment? If yes, Is the current version maintainable and performant compared to rails? Is it really improve your delivery time and quality of the project? We are peeking at grails now and consider it to replace our web frontend technology while on the backend/batch we still trust Spring.
Try attaching a debugger. It is a good skill to have and will let you see the variables and if/when exceptions are thrown 
I did not know about this. I'm guessing this is in Collections.sort()? EDIT: Found DualPivotQuicksort.java
What does the stack trace say?
How far off the curve are you? Are you delivering projects in 2 months that should be delivered in 1? Or are you delivering projects in 6 months that should be delivered by 1? Jython, JRuby or Clojure are the default options ... more expressive, less code, REPLs. 
Google JFrames and Swing GUIs. That's a good place to start. Oh, and you're not going to want to use Scanner in a gui, unless you want to record the questions with the console then launch the Quiz in a gui. You should also make the questions into objects, they're kind of clunky the way they are now.
I use netbeans because of school. It also has all this stuff, but I don't know how well it fares on a higher level. Is this bad?
Nothing wrong with Netbeans at all. Has all the same features as IntelliJ (maybe even more natively than InteliJ). I use IntelliJ because I can edit the theme of the editor. That Darcula theme is sexy. 
I'm a big fan of groovy, been using it since almost when it first came out. I use Groovy and Java together on many production projects. I've not used grails much though. I've used rails and do like its design by convention. Grails should perform better than rails because it's on the JVM. Worst case is that if a particular routine is slow, program it in Java and use Groovy as the glue-code. If you guys are a Java shop then Grails seems like one good thing to try out. I usually look for one-off projects that I can try new technology on. The biggest thing is that you almost can't go wrong with a JVM-based platform because there is so much choice available and the JVM is solid. 
I have never coded faster than when i switched to intellij and found out how to use templates, working with OSGi i managed to set new classes up and get going pretty quick because the templates did the boring stuff for me. 
I believe if your competent in the language, you use an IDE which makes your life easier and you have set guidelines on code styles and such you can code pretty damn fast. Also if you project management is good and you use a ticketing system like jira its very easy to get projects together quickly. On a side note we in some projects use Java to create a framework and then use groovy to implement a good chunk of the code. Another good tool is sonar it analyses your code and points out any week spots and tells you how many man hours have been wasted by poor coding in a project its very effective after a short time using it.
+1 for darcula, it came out just a few weeks after i had created a dark theme in the previous version of intellij! Never getting that time back. Also as i do a lot of C# glad the newer visual studios also have a dark theme.
I'm not sure what it exactly is you want to parse, but you might want to use the java.net.URL class and catch a MalFormedUrlexception when the format is wrong.
If you use Lombok you can add annotations which will make it generate getters and setters (and also constructors and other things) in your bytecode so you can keep your source code free of boilerplate code.
NetBeans is awesome. The latest version (7.4) even updates your browser in real time as you make changes to the markup, huge time saver (requires Chrome with the "NetBeans Connector" plugin)
Interesting. I think the programmer community has a form of superiority complex. "I feel so good about myself for understanding such an advanced concept as lambdas. That must mean I'm really smart and I can't imagine the common plebe to possibly understand any of it". And also a need to constantly assert such superiority by using a vocabulary accessible only to the initiated and testing themselves against others.
Late to this post but a lot of the answers are confirmation bias. Java covers the server side components. Javascript delevopment is what slows the process down where I am. 
Perhaps the reason you are slow is how you are using Java. If you are using an older framework like Spring with a bunch of JavaScript libraries than it is slow. It is much faster to use a modern JSF framework with a component library like PrimeFaces. 
&gt; It's easy to get an 80% functional prototype out the door, in just about any language. It's hard to get that prototype stable, bug free, scalable, extensible, and maintainable. Organizations often fail to realize that getting things right earlier is cheaper in the long run than maintaining a system that's clunking along on chewing gum and bailing twine. Preach on brother! (or sister?) For my last two large assignments, I had that 80% prototype done in a couple days. The last 20%, however, took at least double the time. And that's just development. QA testing is a whole 'nother beast. It seems like the OP's need isn't to decide when to/not to use Java. Instead it is more setting the expectations of the people who are asking for the work. It might come down to a frank discussion where you (or your manager) lay out the requirements and ask which of them the stakeholder *doesn't want* in order to meet an accelerated date.
This is definitely true. That is why I switched to JSF. This allows me to use components for the front end. Instead of spending more than half my time using a mess of JavaScript I can use components. It dramatically cuts development time and makes a more finished looking product.
There are ordered sets if position matters. 
And a set is just a collection that doesn't contain duplicate entries. Usually, I don't care about position within a set, but that is just my use cases. 
Considering that this "name" is your reference ... is this something you'd really want? Wouldn't you rather pass the name written by the user as a parameter to it (e.g. have a private class variable with the name, along some setters and getters)? This way you (the programmer) would always know exactly what the reference is - the name of the object is hardly of any relevance to the user as long as the object contains the information. 
I think the short answer is no, but there might be a way to do it with reflection. I'm curious what your use case is, and I suspect there is a better way to meet your goals here. 
I do understand him, having reviewed thousands of lines from off-shore projects in enterprise projects. You have guys implementing classes already on the SDK or writting code that just makes someone really cry! 
That "name" might not exists when your program executes as the compiler will replace it with an integer offset on the stack if it is local to a method. You could store your Object in a Map, in this case the "name" cannot be removed by the compiler. HashMap&lt;String,Object&gt; objects = new HashMap&lt;&gt;(); objects.put("SomeName",new object(parameters)); 
 class NamedObject extends OtherObject { String name; }
I wouldn't call it a "java menace" any more than any other JVM language. Just a different tool that solves different problems.
Why don't you tell us what you are trying to do?
I'm pretty sure you don't want those customers. Browse through /r/webdev for a bit and read the customer horror stories.
Ah I see what you mean now. Ok, so what does "not working" mean? what happens when you input a string? Do you see a stack trace in the console?
// ArrayAccess.java import java.awt.FlowLayout; import java.awt.GridLayout; import java.awt.event.ActionEvent; import java.awt.event.ActionListener; import javax.swing.JFrame; import javax.swing.JLabel; import javax.swing.JOptionPane; import javax.swing.JPanel; import javax.swing.JTextField; public class ArrayAccess extends JFrame { private JTextField inputField; private JTextField retrieveField1; private JTextField retrieveField2; private JTextField outputField; private JPanel inputArea; private JPanel retrieveArea; private JPanel outputArea; private int num; private int index = 0; private int array[] = new int[10]; private String result; /** * ArrayAccess * @throws NumberNotFoundException * @throws NumberFormatException * @throws DuplicateValueException */ public ArrayAccess() throws NumberNotFoundException, NumberFormatException, DuplicateValueException { super("Accessing Array values"); setLayout(new FlowLayout()); // set up input Panel inputArea = new JPanel(); inputArea.add(new JLabel("Enter array elements here")); inputField = new JTextField(10); inputArea.add(inputField); inputField.addActionListener(new ActionListener() { public void actionPerformed(ActionEvent e) { try { num = (Integer.parseInt(inputField.getText())); // converting // input // field to // int for (int i = 0; i &lt; index; i++) { if (num == array[i]) { throw new DuplicateValueException(); // throw new NumberFormatException(); } } array[index] = num; index++; } catch (NumberFormatException n) { // exception in case user // Doesn't input a number JOptionPane.showMessageDialog(null, "Please only enter integers.", "Invalid Input", JOptionPane.ERROR_MESSAGE); // } catch (ArrayIndexOutOfBoundsException a) { // incase user // exceeds the given // array limit JOptionPane.showMessageDialog(null, "You've exceed the amount of arrays.", "Invalid Input", JOptionPane.ERROR_MESSAGE); } catch (DuplicateValueException d) { // incase user // exceeds the given // array limit JOptionPane.showMessageDialog(null, "Duplicate value entered.", "Invalid Input", JOptionPane.ERROR_MESSAGE); } inputField.setText(""); } // end method actionPerformed } // end anonymous inner class ); // end call to addActionListener // set up retrieve Panel retrieveArea = new JPanel(new GridLayout(2, 2)); retrieveArea.add(new JLabel("Enter number to retrieve")); retrieveField1 = new JTextField(10); retrieveArea.add(retrieveField1); retrieveField1.addActionListener(new ActionListener() { public void actionPerformed(ActionEvent event) { StringBuilder output = new StringBuilder(); num = (Integer.parseInt(retrieveField1.getText())); // convert // retrievefield // to int for (int i = 0; i &lt; index; i++) { // going through the // array looking to // see if any of the // numbers in array // match input if (array[i] == num) { output.append(i + " "); } } if (output.length() == 0) { try { throw new NumberNotFoundException(); // incase the // number isnt // found } catch (NumberNotFoundException e) { JOptionPane.showMessageDialog(null, "Number could not be found.", "Invalid Input", JOptionPane.ERROR_MESSAGE); } catch (NumberFormatException n) { // exception incase user // doesnt input a number JOptionPane.showMessageDialog(null, "Please only enter integers.", "Invalid Input", JOptionPane.ERROR_MESSAGE); } } else { outputField.setText(output.toString()); // displaying the // number } retrieveField1.setText(""); } // end method actionPerformed } // end anonymous inner class ); // end call to addActionListener retrieveArea.add(new JLabel("Enter index to retrieve")); retrieveField2 = new JTextField(10); retrieveArea.add(retrieveField2); retrieveField2.addActionListener(new ActionListener() { public void actionPerformed(ActionEvent event) { String output = null; num = (Integer.parseInt(retrieveField2.getText())); /** retrieve field 2 gets converted into int * */ for (int i = 0; i &lt; index; i++) { // going through array // to find matching // index if (i == num) { output = Integer.toString(array[i]); // converting the // number found // to a string } } if (output == null) { try { throw new NumberNotFoundException(); // incase number // isnt found } catch (NumberNotFoundException e) { JOptionPane.showMessageDialog(null, "Number could not be found.", "Invalid Input", JOptionPane.ERROR_MESSAGE); } catch (NumberFormatException n) { // exception incase user // doesnt input a number JOptionPane.showMessageDialog(null, "Please only enter integers.", "Invalid Input", JOptionPane.ERROR_MESSAGE); } } else { outputField.setText(output); } retrieveField2.setText(""); } // end anonymous inner class } // end new ActionListener ); // end call to addActionListener // set up output Panel outputArea = new JPanel(); outputArea.add(new JLabel("Result")); outputField = new JTextField(30); outputField.setEditable(false); outputArea.add(outputField); add(inputArea); add(retrieveArea); add(outputArea); } // end constructor } // end class ArrayAccess /************************************************************************** * (C) Copyright 1992-2012 by Deitel &amp; Associates, Inc. and * Pearson Education, * Inc. All Rights Reserved. * * DISCLAIMER: The authors and publisher of this * book have used their * best efforts in preparing the book. These efforts * include the * development, research, and testing of the theories and programs * * to determine their effectiveness. The authors and publisher make * no * warranty of any kind, expressed or implied, with regard to these * programs * or to the documentation contained in these books. The authors * and publisher * shall not be liable in any event for incidental or * consequential damages in * connection with, or arising out of, the * furnishing, performance, or use of * these programs. * *************************************************************************/ 
this is the class 
// ArrayAccess.java import java.awt.FlowLayout; import java.awt.GridLayout; import java.awt.event.ActionEvent; import java.awt.event.ActionListener; import javax.swing.JFrame; import javax.swing.JLabel; import javax.swing.JOptionPane; import javax.swing.JPanel; import javax.swing.JTextField; public class ArrayAccess extends JFrame { private JTextField inputField; private JTextField retrieveField1; private JTextField retrieveField2; private JTextField outputField; private JPanel inputArea; private JPanel retrieveArea; private JPanel outputArea; private int num; private int index = 0; private int array[] = new int[10]; private String result; /** * ArrayAccess * @throws NumberNotFoundException * @throws NumberFormatException * @throws DuplicateValueException */ public ArrayAccess() throws NumberNotFoundException, NumberFormatException, DuplicateValueException { super("Accessing Array values"); setLayout(new FlowLayout()); // set up input Panel inputArea = new JPanel(); inputArea.add(new JLabel("Enter array elements here")); inputField = new JTextField(10); inputArea.add(inputField); inputField.addActionListener(new ActionListener() { public void actionPerformed(ActionEvent e) { try { num = (Integer.parseInt(inputField.getText())); // converting // input // field to // int for (int i = 0; i &lt; index; i++) { if (num == array[i]) { throw new DuplicateValueException(); // throw new NumberFormatException(); } } array[index] = num; index++; } catch (NumberFormatException n) { // exception in case user // Doesn't input a number JOptionPane.showMessageDialog(null, "Please only enter integers.", "Invalid Input", JOptionPane.ERROR_MESSAGE); // } catch (ArrayIndexOutOfBoundsException a) { // incase user // exceeds the given // array limit JOptionPane.showMessageDialog(null, "You've exceed the amount of arrays.", "Invalid Input", JOptionPane.ERROR_MESSAGE); } catch (DuplicateValueException d) { // incase user // exceeds the given // array limit JOptionPane.showMessageDialog(null, "Duplicate value entered.", "Invalid Input", JOptionPane.ERROR_MESSAGE); } inputField.setText(""); } // end method actionPerformed } // end anonymous inner class ); // end call to addActionListener // set up retrieve Panel retrieveArea = new JPanel(new GridLayout(2, 2)); retrieveArea.add(new JLabel("Enter number to retrieve")); retrieveField1 = new JTextField(10); retrieveArea.add(retrieveField1); retrieveField1.addActionListener(new ActionListener() { public void actionPerformed(ActionEvent event) { StringBuilder output = new StringBuilder(); num = (Integer.parseInt(retrieveField1.getText())); // convert // retrievefield // to int for (int i = 0; i &lt; index; i++) { // going through the // array looking to // see if any of the // numbers in array // match input if (array[i] == num) { output.append(i + " "); } } if (output.length() == 0) { try { throw new NumberNotFoundException(); // incase the // number isnt // found } catch (NumberNotFoundException e) { JOptionPane.showMessageDialog(null, "Number could not be found.", "Invalid Input", JOptionPane.ERROR_MESSAGE); } catch (NumberFormatException n) { // exception incase user // doesnt input a number JOptionPane.showMessageDialog(null, "Please only enter integers.", "Invalid Input", JOptionPane.ERROR_MESSAGE); } } else { outputField.setText(output.toString()); // displaying the // number } retrieveField1.setText(""); } // end method actionPerformed } // end anonymous inner class ); // end call to addActionListener retrieveArea.add(new JLabel("Enter index to retrieve")); retrieveField2 = new JTextField(10); retrieveArea.add(retrieveField2); retrieveField2.addActionListener(new ActionListener() { public void actionPerformed(ActionEvent event) { String output = null; num = (Integer.parseInt(retrieveField2.getText())); /** retrieve field 2 gets converted into int * */ for (int i = 0; i &lt; index; i++) { // going through array // to find matching // index if (i == num) { output = Integer.toString(array[i]); // converting the // number found // to a string } } if (output == null) { try { throw new NumberNotFoundException(); // incase number // isnt found } catch (NumberNotFoundException e) { JOptionPane.showMessageDialog(null, "Number could not be found.", "Invalid Input", JOptionPane.ERROR_MESSAGE); } catch (NumberFormatException n) { // exception incase user // doesnt input a number JOptionPane.showMessageDialog(null, "Please only enter integers.", "Invalid Input", JOptionPane.ERROR_MESSAGE); } } else { outputField.setText(output); } retrieveField2.setText(""); } // end anonymous inner class } // end new ActionListener ); // end call to addActionListener // set up output Panel outputArea = new JPanel(); outputArea.add(new JLabel("Result")); outputField = new JTextField(30); outputField.setEditable(false); outputArea.add(outputField); add(inputArea); add(retrieveArea); add(outputArea); } // end constructor } // end class ArrayAccess /************************************************************************** * (C) Copyright 1992-2012 by Deitel &amp; Associates, Inc. and * Pearson Education, * Inc. All Rights Reserved. * * DISCLAIMER: The authors and publisher of this * book have used their * best efforts in preparing the book. These efforts * include the * development, research, and testing of the theories and programs * * to determine their effectiveness. The authors and publisher make * no * warranty of any kind, expressed or implied, with regard to these * programs * or to the documentation contained in these books. The authors * and publisher * shall not be liable in any event for incidental or * consequential damages in * connection with, or arising out of, the * furnishing, performance, or use of * these programs. * *************************************************************************/ 
Here is the full class , if anyone needs the other classes let me know // ArrayAccess.java import java.awt.FlowLayout; import java.awt.GridLayout; import java.awt.event.ActionEvent; import java.awt.event.ActionListener; import javax.swing.JFrame; import javax.swing.JLabel; import javax.swing.JOptionPane; import javax.swing.JPanel; import javax.swing.JTextField; public class ArrayAccess extends JFrame { private JTextField inputField; private JTextField retrieveField1; private JTextField retrieveField2; private JTextField outputField; private JPanel inputArea; private JPanel retrieveArea; private JPanel outputArea; private int num; private int index = 0; private int array[] = new int[10]; private String result; /** * ArrayAccess * @throws NumberNotFoundException * @throws NumberFormatException * @throws DuplicateValueException */ public ArrayAccess() throws NumberNotFoundException, NumberFormatException, DuplicateValueException { super("Accessing Array values"); setLayout(new FlowLayout()); // set up input Panel inputArea = new JPanel(); inputArea.add(new JLabel("Enter array elements here")); inputField = new JTextField(10); inputArea.add(inputField); inputField.addActionListener(new ActionListener() { public void actionPerformed(ActionEvent e) { try { num = (Integer.parseInt(inputField.getText())); // converting // input // field to // int for (int i = 0; i &lt; index; i++) { if (num == array[i]) { throw new DuplicateValueException(); // throw new NumberFormatException(); } } array[index] = num; index++; } catch (NumberFormatException n) { // exception in case user // Doesn't input a number JOptionPane.showMessageDialog(null, "Please only enter integers.", "Invalid Input", JOptionPane.ERROR_MESSAGE); // } catch (ArrayIndexOutOfBoundsException a) { // incase user // exceeds the given // array limit JOptionPane.showMessageDialog(null, "You've exceed the amount of arrays.", "Invalid Input", JOptionPane.ERROR_MESSAGE); } catch (DuplicateValueException d) { // incase user // exceeds the given // array limit JOptionPane.showMessageDialog(null, "Duplicate value entered.", "Invalid Input", JOptionPane.ERROR_MESSAGE); } inputField.setText(""); } // end method actionPerformed } // end anonymous inner class ); // end call to addActionListener // set up retrieve Panel retrieveArea = new JPanel(new GridLayout(2, 2)); retrieveArea.add(new JLabel("Enter number to retrieve")); retrieveField1 = new JTextField(10); retrieveArea.add(retrieveField1); retrieveField1.addActionListener(new ActionListener() { public void actionPerformed(ActionEvent event) { StringBuilder output = new StringBuilder(); num = (Integer.parseInt(retrieveField1.getText())); // convert // retrievefield // to int for (int i = 0; i &lt; index; i++) { // going through the // array looking to // see if any of the // numbers in array // match input if (array[i] == num) { output.append(i + " "); } } if (output.length() == 0) { try { throw new NumberNotFoundException(); // incase the // number isnt // found } catch (NumberNotFoundException e) { JOptionPane.showMessageDialog(null, "Number could not be found.", "Invalid Input", JOptionPane.ERROR_MESSAGE); } catch (NumberFormatException n) { // exception incase user // doesnt input a number JOptionPane.showMessageDialog(null, "Please only enter integers.", "Invalid Input", JOptionPane.ERROR_MESSAGE); } } else { outputField.setText(output.toString()); // displaying the // number } retrieveField1.setText(""); } // end method actionPerformed } // end anonymous inner class ); // end call to addActionListener retrieveArea.add(new JLabel("Enter index to retrieve")); retrieveField2 = new JTextField(10); retrieveArea.add(retrieveField2); retrieveField2.addActionListener(new ActionListener() { public void actionPerformed(ActionEvent event) { String output = null; num = (Integer.parseInt(retrieveField2.getText())); /** retrieve field 2 gets converted into int * */ for (int i = 0; i &lt; index; i++) { // going through array // to find matching // index if (i == num) { output = Integer.toString(array[i]); // converting the // number found // to a string } } if (output == null) { try { throw new NumberNotFoundException(); // incase number // isnt found } catch (NumberNotFoundException e) { JOptionPane.showMessageDialog(null, "Number could not be found.", "Invalid Input", JOptionPane.ERROR_MESSAGE); } catch (NumberFormatException n) { // exception incase user // doesnt input a number JOptionPane.showMessageDialog(null, "Please only enter integers.", "Invalid Input", JOptionPane.ERROR_MESSAGE); } } else { outputField.setText(output); } retrieveField2.setText(""); } // end anonymous inner class } // end new ActionListener ); // end call to addActionListener // set up output Panel outputArea = new JPanel(); outputArea.add(new JLabel("Result")); outputField = new JTextField(30); outputField.setEditable(false); outputArea.add(outputField); add(inputArea); add(retrieveArea); add(outputArea); } // end constructor } // end class ArrayAccess /************************************************************************** * (C) Copyright 1992-2012 by Deitel &amp; Associates, Inc. and * Pearson Education, * Inc. All Rights Reserved. * * DISCLAIMER: The authors and publisher of this * book have used their * best efforts in preparing the book. These efforts * include the * development, research, and testing of the theories and programs * * to determine their effectiveness. The authors and publisher make * no * warranty of any kind, expressed or implied, with regard to these * programs * or to the documentation contained in these books. The authors * and publisher * shall not be liable in any event for incidental or * consequential damages in * connection with, or arising out of, the * furnishing, performance, or use of * these programs. * *************************************************************************/ 
Heres what I get, Exception in thread "AWT-EventQueue-0" java.lang.NumberFormatException: For input string: "d" at java.lang.NumberFormatException.forInputString(Unknown Source) at java.lang.Integer.parseInt(Unknown Source) at java.lang.Integer.parseInt(Unknown Source) at ArrayAccess$2.actionPerformed(ArrayAccess.java:110) at javax.swing.JTextField.fireActionPerformed(Unknown Source) at javax.swing.JTextField.postActionEvent(Unknown Source) at javax.swing.JTextField$NotifyAction.actionPerformed(Unknown Source) at javax.swing.SwingUtilities.notifyAction(Unknown Source) at javax.swing.JComponent.processKeyBinding(Unknown Source) at javax.swing.JComponent.processKeyBindings(Unknown Source) at javax.swing.JComponent.processKeyEvent(Unknown Source) at java.awt.Component.processEvent(Unknown Source) at java.awt.Container.processEvent(Unknown Source) at java.awt.Component.dispatchEventImpl(Unknown Source) at java.awt.Container.dispatchEventImpl(Unknown Source) at java.awt.Component.dispatchEvent(Unknown Source) at java.awt.KeyboardFocusManager.redispatchEvent(Unknown Source) at java.awt.DefaultKeyboardFocusManager.dispatchKeyEvent(Unknown Source) at java.awt.DefaultKeyboardFocusManager.preDispatchKeyEvent(Unknown Source) at java.awt.DefaultKeyboardFocusManager.typeAheadAssertions(Unknown Source) at java.awt.DefaultKeyboardFocusManager.dispatchEvent(Unknown Source) at java.awt.Component.dispatchEventImpl(Unknown Source) at java.awt.Container.dispatchEventImpl(Unknown Source) at java.awt.Window.dispatchEventImpl(Unknown Source) at java.awt.Component.dispatchEvent(Unknown Source) at java.awt.EventQueue.dispatchEventImpl(Unknown Source) at java.awt.EventQueue.access$200(Unknown Source) at java.awt.EventQueue$3.run(Unknown Source) at java.awt.EventQueue$3.run(Unknown Source) at java.security.AccessController.doPrivileged(Native Method) at java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source) at java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source) at java.awt.EventQueue$4.run(Unknown Source) at java.awt.EventQueue$4.run(Unknown Source) at java.security.AccessController.doPrivileged(Native Method) at java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source) at java.awt.EventQueue.dispatchEvent(Unknown Source) at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source) at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source) at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source) at java.awt.EventDispatchThread.pumpEvents(Unknown Source) at java.awt.EventDispatchThread.pumpEvents(Unknown Source) at java.awt.EventDispatchThread.run(Unknown Source)
The quality of my colleagues is fine. The claims are coming from the rest of the company. We are given requirements, which we estimate and then are told the estimate is too high.
The customers are generally internal so we don't have much choice :)
&gt; DualPivotQuicksort.java Ah, it looks like I was incorrect in the number of elements (it's 47), and it was an insertion sort instead of selection sort (could have sworn I remembered that part correctly). It's fascinating how much I know vs. how much I don't know about programming.
[This question sounds familiar](http://www.reddit.com/r/java/comments/1qttif/allow_user_to_set_object_name/). Is this some sort of homework assignment?
I wouldn't say it's a matter of not knowing about programming as opposed to not knowing all of the under-the-hood details. 
Wait, so the rational for Ceylon is to avoid writing JavaScript? A language for a "better" GWT? Really? &gt;Java has been enormously successful, wonderful, fantastic language - but, the initial vision kind of failed on arrival. And so, as soon as you wanted to bridge the gap to a web based client, you found yourself having to leave the Java language and write something in JavaScript or something like that. Java applications today are composed of several languages cooperating together, and that's not necessarily a bad thing, but the problem is that you lose static typing, you lose the tooling support. &gt;Java developers like me are amazingly attached to having great tooling, and having tools that help us maintain and refactor and alter our code. As soon as we leave Java and start having to work with XML or JavaScript, we really keenly feel that loss of support from the tooling level.
Its basically a way to abstract a idea from a particular implementation of that idea. The best example are the classes in the java collections framework. You will see a pretty common patterns where the basic idea such as a List is a interface, and has many concrete implementations such as ArrayList, LinkedList, and so on. This allows you to easily use whichever implementation is more useful for your particular set of data, but still be able to write methods which can operate on any of them. For example static int getMax (List&lt;int&gt; input){...} Such a method could take any implementation of list and get the maximum value from it. So we can do. List&lt;int&gt; NeedsToBeAccessedByIndexAlot = new ArrayList&lt;int&gt;(); List&lt;int&gt; HasVariableMaximumSize = new LinkedList&lt;int&gt;() And we can pass either into that function because it knows how to work with lists and doesnt care about their implementation. 
Polymorphism! If a methods takes an interface as a parameter, it can take any object implementing that interface. When you get an object by an interface reference, you can only call the methods of that interface. Of course, that might seem to be the exact same thing as having a superclass with only public abstract methods. The difference is that while you cannot inherit from more than one class, you can implement multiple interfaces.
Interfaces make it easy to swap implementation. Imagine a class that looks up valid user names and passwords. Sometimes this will be backed by a database across a network, sometimes in testing you may want to look them up in memory. Write you code against the interface, swap implementations as you see fit. &gt; If a superclass implements an interface, do the subclasses implement it as well? Yes &gt; do the methods from the interface behave as the ones from a superclass would Yes &gt; how do i call an interface method from a superclass Call whoever implements it. If not you, probably super.
You need to use Integer in this example: generics don't accept primitives. Also, variable names should not start with a capital letter.
Interfaces may also contain static and constant declarations. It allows multiple inheritance. Im in y 2nd year of computer science and we just did a lab where we had to create a bookbag that could hold n number of items. We had to fill the bag with the most valuable items. We were given an interface for the items that could be stored In the bag, right away the interface tells us what our item class must do. We didnt have the code body, but we had the signature which was enough to go on. I think the idea of the lab was to show us that id we work for a company, we will definitely work on sections. You may not know the functionailty of the methods, but thats your job to make them work. As for your side questions, You can impliment an interface on a parent and yes the children classes will be able to call from that interface also. Im not sure about the last question, It would make sense to use that syntax. Anyone with a better understanding than me wanna take a shot? Lol. Im a little high and we just went over this in class so forgive the errors. 
Got any specific questions? Happy to answer them.
I don't see any insert method?
I have absolutely no idea what happened... Is java installed in a certain language? I cant remember. As for a solution i will go with the tried and tested reinstall. 
You need to ask more specific questions and explain what you think is happening currently then you will find you get more and a better standard of help. Don't focus too hard making it work and really think about what it is doing and what you need it to do and you will find you know the solution even if you cant implement it and that is where we can help.
In case you are interested, I made a similar engine a long time ago. Feel free to steal ideas and/or source code if you find any of it useful :) https://code.google.com/p/oje2d/
Sorry, my background is actually in C#, I always forget the weird edge cases in java. 
Not exactly sure what you are asking or doing. The -classpath argument is not portable. Windows uses ';' to separate paths, and unix/mac uses ':', eg -classpath app1.jar;app2.jar in windows (will fail in unix) If you are building the classpaths in java, you can use String path = "app1.jar" + File.pathSeparator + "app2.jar" Otherwise you can use a [Manifest](http://docs.oracle.com/javase/tutorial/deployment/jar/downman.html) in the jar, which has a portable property 'Class-Path: app1.jar app2.jar' (space separated) 
Pretty much way off base. Lol. public static int[] array(int n) { int[] toReturn = new int[n]; for (int i = 0; i &lt; n; ++i) toReturn[i] = (int)Math.ceil(Math.random() * n); return toReturn; } public static ArrayList&lt;Integer&gt; list(int n) { ArrayList&lt;Integer&gt; toReturn = new ArrayList&lt;&gt;(); for (int i = 0; i &lt; n; ++i) toReturn.add((int)Math.ceil(Math.random() * n)); return toReturn; }
Look at line 2: return findMinRecursive(a, -1, 0); As I understand, this function is initiated with the lowest value already being -1, for finding a minimum, wouldn't you want to make that value really high? Otherwise any value in the array which is higher than -1 would get ignored...
This helps a lot, thanks. Just have to take this class as a support course and it's killing me; the teacher is not helpful whatsoever. This looks familiar to me except for the math. functions. I was thinking I was going to have to use a "new Random ();" function? Maybe along the lines of Random r = new Random(); then using r as the array size? 
Also could you explain the for loop? Why wouldn't the int [] toReturn = new int[n] declare an array with random numbers in it? Then just return the "toReturn". I appreciate any help you can give.
You're probably right, but this helps. We have NO hands on in class, he basically just explains it, hands out a lab and says [Goodluck!](http://24.media.tumblr.com/e031fccefb10ad3e29b12eb9ec8959c3/tumblr_mssjkhCNZG1sffdlyo1_500.gif)
It's possible you have a font that is being used that displays like this.
I believe it is version 7. I tried uninstalling every version under Control Panel, but this still didn't fix the problem. Is there a way to do a deeper scrub?
Actually, quite the contrary. As someone who's entirely self-taught, I can tell you that there is no more valuable teaching tool than a concise, relevant example. Knowing what the code is supposed to do and being able to read exactly how it does it is invaluable. Of course, it's up to the reader whether or not they actually learn from it, or if they just copy/paste to complete the assignment.
&gt; The value of the integer parameter is also the size of the array that I will return. This tells you that the parameter passed in to the method should be the length of the array returned. You're not returning an array of random length, the length is specified; the only thing that is random are the values contained. Random r = new Random(); Random is just another Java class for getting random numbers. In this code here, r would be an object of class Random, not a random number itself. If you wanted to get an actual number out of that, you would then use r.nextInt(). This would have worked too, but I used Math.random() out of habit. Math.random() returns a random double value between 0 inclusive and 1 exclusive (0.496812332 for example). You can multiply this by a number and pair it with rounding (Math.ceil stands for ceiling, which will round up to the nearest whole number in all cases) to get a random number within a certain range. For instance, Math.ceil(57 * Math.random()) would give you a random number between 1 inclusive and 57 inclusive.
Definitely trying to learn from it! Thanks again
Well, unless you're running that in a very strange way (I just used setVisible(true)), it works fine. I get no errors when entering a number, and when I enter a letter I get the pop up you want. 
Don't worry about that, try reinstalling first.
Ok. Uninstall every Java version you have. Reboot your pc. Now try running those apps. If they still run then they are using their own version of Java (which is kinda out of your control now) If those apps don't run then install the latest version of Java7 from [here](http://www.oracle.com/technetwork/java/javase/downloads/jre7-downloads-1880261.html). Reboot your pc and try again.
Does the pop up show up for you when you try to type a letter in the retrieve section?
Yep. The other functions work as expected as well. To be fair, I cut out the code with the new exceptions you created. And, as a word of advice, never ever ever use exception handling for flow control. 
To be fair code from offshore projects typically makes me cry regardless of language. I can't see how lambda or any other feature would make it any worse than what they can do with jdk 7
You will get the NumberFormatException in the retrieve textbox but you don't have a try/catch around the Integer.parseInt() call so it throws the error to the console.
What is the language of your windows? Do you have any other java installs other than 7?
Almost. `toReturn[r.nextInt(i)]` is just accessing a random element in the array. You're not assigning a value to it like you want to. You're making that same mistake with the `ArrayList`. Look again at /u/Stormtalons reply. Also, `Public Static` should be `public static` 
How would I go about doing that?
After improving my code I still get the out of bounds area from line 3 in the code.
Delete your %WINDIR%\System32\FNTCACHE.DAT as administrator.
Ahh I see. Thank you! This subreddit is so extremely helpful!
 Start by stating what you know n = number of items in each vector x = [x1, x2, x3, x4, ..., xn] // vector 1 y = [y1, y2, y3, y4, ..., yn] // vector 2 And what you are able to change: x' = [x2, x4, x3, x1, xn, ...] // any permutation you like of x y' = [y3, yn, y1, y2, y1, ...] // any permutation you like of y Your goal is to reduce the value of: (x'1 * y'1) + (x'2 * y'2) + ... + (x'n * y'n) Note that you can't change the number of additions in this summation, all you can do is affect the numbers being summed. The problem then boils down to "how do you get the smallest products from numbers?" 
I don't think this is a java problem. I think one of your windows fonts went missing or was corrupted. Reinstall your fonts.
Do you have gdipp/mactype/other text renderer installed? If so add an exclusion rule.
Did you try downloading from the link I gave you? (instead of where minecraft was redirecting you to) Also, make sure you remove any/all java plugins in your browser(s). ps: a colleague of mine says to "go to the java control panel and check that your language is set correctly"
First legit "DELETE SYSTEM32" advice I've ever seen.
Thanks I'll have a look into JSF.
I totally agree with you on with 80:20 and I feel that Java does a good job at helping with that last 20%. It is really the quick and dirty, fast turn around, development seems to be the area where we struggle and other dev teams in the organisation win.
Can you give examples of those tasks and the estimates?
You're on the right path already. All the other things suggested here, like creating a batch file are not needed. The problem of not showing anything is probably related to the fact, that your program executes and terminates before anything can be shown really. You need to make your program interactive so that it won't quit right away. As a result the shell will be visible until you quit your program. Another way, obviously, would be to launch the shell first and issue java -jar myprogram.jar I hope that makes sense! Good luck!
Well, if your code looks identical to what I posted above, odds are that you are testing the function with an empty array. If that's a case that you need to handle for your assignment, you need to figure out how the function ought to behave when it encounters a situation like that. Normally you would throw an Exception such as an [IllegalArgumentException](http://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html) but your assignment may indicate that you should return a default value of some kind (like -1 for instance). Whatever the case, you should put that check before the recursive call to prevent that exception. For example: public static int findMin(int[] a) { if ((a == null) || (a.length == 0)) { // customize below line with desired behavior for bad input throw new IllegalArgumentException(); } return findMinRecursive(a, a[0], 1); } private static int findMinRecursive(int[] array, int lo, int pos) { if(pos &gt;= array.length) return lo; if(array[pos] &lt; lo) { lo = array[pos]; } return findMinRecursive(array, lo, pos + 1); }
Did you try Googling "reading lines from a text file"? The # is a delimiter.
Paste what you have done so far
[Another](http://www.reddit.com/r/Steam/comments/1qsaiv/what_happened_to_steam_how_do_i_fix_this/) case of Fifth World-itis
Not quite, but close. Change the array method's assignment to look like: toReturn[i] = r.nextInt(x); and the ArrayList's to: toReturn.add(r.nextInt(x));
Is it normal to start variables as capitals in c#? I'm currently working on a java open source program and many of the contributors only coded in c# before and always make method names and variable names capital in the beginning...
Hi All If you are interested in learning in Java EE 7, you can also look out for my book *Java EE 7 Developer Handbook* - *Peter Pilgrim* * http://www.packtpub.com/java-ee-7-developer-handbook/book * http://www.xenonique.co.uk/blog/ 
It's basically just a font cache (hence the name). It being corrupted is a common cause of text displaying garbled.
Method names definitely. I didn't know about variable names. I thought Properties were supposed to be capitalized, but not variables.
Firstly, you first assumption is wrong. Second, your second assumption is wrong. I have decided to take this upon myself to do as i want to get better at java programming and if i was told this in school (which i have left now about 7 years) I would have listened and known what DBMS to use 
Yea your best plan is to google a default path then re-add everything you need to from there. I don't even have my java jre on the path, only the jdk.
Add %SystemRoot%\system32;%SystemRoot%; to your path to get most of your basic functionality back.
yes because when you make a living out of programming you check your question 3 days after you made the question.... 
 // Without op4j Set&lt;String&gt; set = new LinkedHashSet&lt;String&gt;(list); // With op4j Set&lt;String&gt; set = Op.on(list).toSet().get(); &gt; Ok, op4j code here was a little bit more readable than "normal" java code... ... riiiight ... more readable ...
set Java_home = c:\Program Files (x86)\Java\jre7\bin then set PATH=%Java_home%;%SystemRoot%\system32;%SystemRoot%;
I agree with you that one example is a bit of nonsense, because doing it normally is more readable. However, it does make sense in other things such as what he mentions in this blog: http://www.bendingthejavaspoon.com/ and also simulating literal `in` operator: `onListFor(a,b,c).get().contains(value);` http://stackoverflow.com/questions/7390571/java-in-operator
Post the code you are having issue with.
Done, thank you!
Well, it depends how you see it. In terms of "just" code readability and length, op4j definitly wins. "Op.on(list).toSet().get();" - Operate on "list", convert to Set, return. "Set&lt;Calendar&gt; set = "Op.on(list).toSet().forEach().exec(FnString.toCalendar("dd/MM/yyyy")).get();" - Operate on "list", convert to Set, convert each String of list to Calendar object, return. Seeing it this way, it is more readable, since you basically can read out the complete specification of the code directly. But I dont like this method-chaining style of code either. I would rather have longer code, but that way I know exactly what objects are created/needed, and what happens to them. Also shorter code does not imply readability and maintainability.
It's kind of hard to understand what you're asking. You're looking to automate server deployment? Like have one central `war` and then have servers load and run that automatically?
Yes, server deployment automation in theory, however not a WAR or a traditional web-application inside an application server. As in the WebStart GUI model, the client system would launch a small, client side application (like javaws) which would retrieve an definition file remotely (like JNLP) which would retrieve any/all required jar files from an private/internal server which had been updated, and would launch the JRE with a set of remotely designated conditions (jvm params) from a local cache of the jars to start the larger server application. This could be scripted for the system on startup, even one that had no pre-existing configuration or anything installed beyond the JRE (and the java-ws like launcher). We have had some success in doing this with Maven, which does work, but seems overly complicated and requires running an internal maven repository and restricting access to external repositories. Maven might be the right, or only answer, but not nearly as streamlined or lightweight as webstart on the gui side.
Have you tried using the form feed character? ('\f')
I think it should JAVA_HOME=c:\Program Files (x86)\Java\jre7 and the set PATH=%JAVA_HOME%\bin
It would be nice to have something that's hands on and talks about actual programs rather than snippets that briefly show how to do something in general, which is what Goncalves' book seems to do. I've been reading the Java EE Tutorial from Oracle because it actually talks about specific programs you can run that are complete, working, and standalone.
Based on this: 1. You're throwing NumberFormatException 2. You're catching NumberFormatException I think something *else* is wrong (a theory is the code you've showed us is different from the class files that are being executed). I'd suggest a few changes to your code to test what's wrong: A. change "throws NumberNotFoundException, NumberFormatException, DuplicateValueException" to "throws NumberNotFoundException, DuplicateValueException" B. add a "catch (Exception e)" with an appropriate System.out C. add a "System.out.println("test")" to your constructor to make sure that you're correctly running the right class. D. Try this out: `public class d { public static void main(String[] args) { try { Integer.parseInt("a"); } catch(NumberFormatException nfe) { System.out.println("caught nfe"); } } }`
Look at the code for the actionPerformed in the inputField JTextField object.
Thanks alot, I already figured out how to use the delimiter, now the problem is the user will enter his username and password. I need a way where you can search the file for the line which contains the username and then use the line number to get the password. I suck at explaining I'm sorry.
Well, first of all, you could disable transaction if possible. Secondly, try not to commit every single insert. Instead commit only at a certain threshold. The larger the threshold the bigger the heap size you will need.
A nicely insightful comment from an Oracle developer has surfaced in the /r/programming thread on this issue. There were actually two reasons for the change: 1. To reduce the size of String instances. 2. To avoid memory leakage caused by retained substrings holding the entire character array. It's worth reading the whole comment, I think ([/r/bondolo] ["I'm the author of the substring() change ..."](http://www.reddit.com/r/programming/comments/1qw73v/til_oracle_changed_the_internal_string/cdhb77f)).
Yeah I have never understood the verbose complains, IDEs do most of the typing, I can dev faster in Java than in Python because I understand Javaยดs in and out better than Python. Disclaimer not saying Java is better than Python or viceversa is just an example, I'm pretty sure is the other way around for some people. 
toSet is the initial conversion from a list to a set. I think get is in the end of the statement to symbolize a "finalizing" operation returning the type of the last conversion with the operations performed that are specified in between. Well, its a matter of preference. Some people like it this way, some dont. I would probably kill myself if I would need to maintain such chains.
http://pastebin.com/QMfp1jqn 
I worked with Django, I didn't find it significantly faster than lets say play or spring.
I don't know if you're encountered threading yet, but when creating some threaded code you can implement the Runnable interface, then call: new Thread( _instance_of_class_ ); [Oracle provide a more complete example.](http://docs.oracle.com/javase/tutorial/essential/concurrency/runthread.html) "So what" you may be asking? Well think about it - the standard Java library (which Thread is part of) has no knowledge whatsoever of your code; likewise your code needs to know nothing about how the Thread class is behaving behind the scenes. What the Thread class does know is that been passed an instance of Runnable; this tells it that it can call run() in your class as it **must** implement that method, The Runnable interface allows the developer of the Thread class to ignore *how* the run method is coded up, but guarantees that it *will* be implemented.
Create a new user &amp; copy their path to a file. Open file from original user &amp; paste in path. Keep Java if necessary.
That looks much better! Thanks so much. Do you have any idea why the transaction thing would change that? I haven't been committing since I am not concerned with the database functionality, so I didn't have to make any changes there. 
Keep it up. I'm recently graduated from collage, and had been programming for 5 years, and still feel overwhelmed by many tools, paradigms, and ideas in the programming world. What motivates me, is that programming, like any creative work, takes years and years to master. Peter Norvig, Director of Research at Google suggest to [Teach Yourself Programming in Ten Years] (http://norvig.com/21-days.html). 
On a SIMPLE Java program (meaning standalone and not in an application server) you would do as follows... 1. Create a persistence.xml file 2. Annotate your entity classes 3. Add references to entity classes to the persistence.xml 4. Place the persistence.xml in &lt;ROOT&gt;/META-INF/ 5. In the program code, EntityManagerFactory emf = Persistence.createEntityManagerFactory("persistence_unit_name"); 6. Then, use the EMF to create EntityManagers 7. Use EntityManager objects to perform JPA work...
thanks
Sure... And this link may help more: http://www.objectdb.com/java/jpa/persistence/overview
/r/javahelp Please note its posting instructions, particularly about formatting your code.
I've had issues with text getting layered on top of each other , producing pseudo bold text in pdf. You might want to check that.
ty, submitted and reformatted.
[Clean code](http://www.goodreads.com/book/show/3735293-clean-code) 
You may want to fix the indention to make it more readable.
Thanks I will for sure check this out!
Are there any particular you would recommend? Edit: thanks for the tip :)!
I'm not sure what API u are using to make the mod so I would hop on over to the MinecraftForums if you are using Forge go to the forge forums 
Will Do
Aight thanks!
Your comments make me sad a little - for example, " // constructor for ..." We know it's a constructor, and the comment doesn't add any extra understanding. That makes it noise - it's just clogging up the code. As per the clean code book suggestion earlier, perhaps look at splitting the code into smaller methods. The places where you've put comments inside the code explaining stuff are probably good points to start - extract those methods and name them something along the lines of the comment. Then you can get rid of the comment too.
[Oracle's Java Coding Conventions](http://www.oracle.com/technetwork/java/codeconv-138413.html)
Letโs see. - Line 13/14: a `boolean` that holds how many entities have been spawned? - Line 16: field name with underscore in its name. - Line 18: useless comment. - Line 23: auto-generated TODO comment. Useless! - Line 27: inconsistent whitespace before opening curly bracket. - Line 28-30: local variable is never used. - Line 32: wrong indentation level. - Line 33: different, wrong indentation level. - Line 33: comparison of a boolean with a constant boolean. - Line 34: again different, wrong indentation level. - Line 34: superfluous whitespace. - Line 34: comparison of a boolean with a constant boolean. At this point I ran out of fucks to give. Yes, your code is bad and you should feel bad. Very bad.
Damn I was just asking for some constructive criticism, but thanks I guess.
I had no idea this existed really helps with the layout thanks.
Don't mind the douchebag. Your code is in no way horrible, and pretty readable, especially compared to some of the over engineered messes I've worked on. Your biggest problem seems to be with the use of consistent indenting. Fixing that would really help with being able to easily see what block of code belongs in what method/conditional/loop body. You might also want to look at being consistent with your field naming convention. Doesn't have to be camel case, but that is widely used.
While the tone of the comments from QshelTier is a bit off-putting, his points are valid. Having code that aligns with the standard coding conventions makes it easier for everyone to read, and in time you will feel the same way. Eclipse has the built in formatter and any number of plug ins that can help you build better, cleaner code. I've done a quick tidy through of your code and pasted it at the end [(link)](http://pastebin.com/AYn6RLxk) and will leave it to you to build from there. Regarding the code comments, if they help you read your work then great, but as has been suggested make the comments of value. Things like //this is the constructor are not particularly helpful as it is obvious when you read the code. Not knowing the API framework you are using, it is hard to comment on some of the things that seem a bit odd to me, but good luck improving your coding :)
I don't know why you are being down voted. This is constructive criticism. He's telling you exactly what you want to hear. Read this, correct your code, and learn from it. They are simple mistakes everyone makes when they first begin programming. The sooner you learn from your mistakes, the sooner you become that much better. 
I think it was more of the tone he said it in, it was kind of douchey, but I think it was probably the most helpful piece in this thread.
Thanks for the info, it really helps especially the fact that you took the time to clean up the code yourself. you are the reason why I keep browsing sub Reddits like these :)
Further I would recommend an Eclipse plug-in called FindBugs. It will highlight problems in code that will compile, so things like dead stores to variables, and has some detailed explanation as to why they should be avoided. You can install in easily through the Eclipse Marketplace (help -&gt; Eclipse Marketplace). Has saved me from making silly mistakes at work when I first started as a developer. Also, thanks for the kind words. Makes my day happier knowing I've helped someone learn a little :)
When linking users, you do /u/ instead of /r/. So, /r/bondolo becomes /u/bondolo.
eclipse fixes imports with ctrl + shift + o (by default). Setters and getters can be generated through the *source* option when right clicking a project.
This is one of the challenges you face when you use a managed memory model - the fact that the memory manager will often do things behind your back that bite you. There are ways to mitigate it however. As you've said, you can find ways to stop allocating and releasing so much memory - by pooling and reusing objects, for example. Just be careful that you don't end up with a lot of wasted memory from stale objects that aren't evicted from the pools, and you don't end up with bad data from not resetting objects between usages. Something else you can consider is to see about tuning the GC. You can do this both from outside - by configuring the GC itself to use different settings - and from inside by the use of some of the Reference classes to give clues to the GC. Be careful though, because these are getting deep into the innards here and can do weird and wacky things if you're not careful.
I use jProfiler to profile my stuff, if you're open source they'll give you a free license too. I found I had a memory leak where I was generated 900k Method objects, just because I had written the code in the AM and forgot a goto for a double loop iteration. jProfiler is great for showing you how much of each object you have, what methods are generating them. Same goes for CPU usage too. That only shows you were the flaws lie not how to solve them, I recommend object reuse/object pooling where possible. Also you can always try to null out or finalize() your objects when you're done with them. You can hint to Java's GC when to run (though this isn't an accurate or advisable way to manage memory really), so maybe do it when your CPU utilization is low. Though I really found little things made the difference, like using ThreadLocal rectangles in my mediators for my collision detection rather than generating new ones. Depending on the version of JRE you're using to execute it on have you tried using different GC arguments? They can make a huge difference. 
Listen to /u/liquidhot. Just reading the title I thought this would be about the java.exe files created in the default path. This caused be some headache when I had three different JVMs installed and just using java.exe on the command line always used the wrong one, even though I had %JAVA_HOME%\bin on my %PATH%. But %SystemRoot% came before it, so the lookup never even got to my correct JVM.
Something I learned in this very subreddit is that the Eclipse Display view is a REPL during debugging.
I LOVE Eclipse shortcuts! Thanks!
That's shorter and simpler written in normal Java as `asList(a,b,c).contains(value)`
We're doing realtime bidding, so the challenge is to estimate the monetary value of an impression (aka showing an ad) based on the predicted likelihood of the user clicking on the ad, and then doing some subsequent action that the advertiser cares about (like filling out a form or making a purchase). We then bid that amount.
I probably need to look into the exact behaviour of the GC. It would be nice if the GC would kick in and release the object almost directly when I set it to null. Instead of just marking it as release'able when reaching the heap roof. I guess I will have to go the pool - way. Hopefully hotspot will be good at optimizing the handling so I won't pay much performance in handling the pool. Thanks for your input!
Definitely profile your code, but as another possible solution, you might want to test out different GC patterns. I went through something kind of similar with a remote desktop app I was working on. The GC wouldn't kick in until the memory had already exploded out of control. There's a [massive SO thread about it here.](http://stackoverflow.com/questions/15141011/massive-memory-hemorrhage-that-causes-heap-size-to-go-from-about-64mb-to-1-5gb) In the end, the thing that worked for me was setting the GC to concurrent mark and sweep. It was almost magical. As soon as I made the change all of the memory issues cleared up. It was like getting something for free! Not sure if it'll help you, but worth a shot! 
So all this is based on estimates? Have the other teams actually produced anything to match their estimates, or is this all just a "give me a number that looks good" game with the people requesting the work?
The site is giving me pop ups prompting me to download their android "virus removal tool". 
nothing happens when I run it
This is one of my specialties, but here's a few tips: 1. The sawtooth pattern is quite typical in the Java world. Don't try to fight it if you're using a lot of objects. That's how it's supposed to work :). 2. Use a profiler like YourKit to look at what objects are being created, and why. Maybe look into object pools or the flyweight pattern. You can track which methods are creating objects, and how many they create. It's a great tool. jProfiler is fine, but nowhere near as good as YourKit. 3. Why is 1GB unacceptable? Why are you trying to make it smaller? 4. GC tuning is the last thing you should do, when you've exhausted all else. 5. What is your goal with GC tuning? Do you want to reduce stop the world (STW) pauses? Use less memory? Goals will often conflict, and you have to pick which path to go down. 6. Once you're going down the GC route, make sure you do all the normal perf stuff. Enable the -server flag, choose the CMS + ParallelGC collector, enable multithreaded collection, tune your eden space. Maybe try out the G1 collector if you're on jdk &gt;= 7, as it (theoretically) has fewer STW pauses. 
I was having a problem like this in a game I was working on, and my solution was to use mutable vectors and reuse them when possible. It helped a lot, although I had to keep good track of which vectors were reused. For math I used VecMath, which has it's x, y, and z fields public and non-final, but I don't know about about openMali.
I assume dx &amp; dy get set some where else. Isn't 'dx -= dx' the same as 'dx = 0'? That doesn't sound like what you want to do. The y calculation bothers me too, is dt supposed to be delta-t or absolute t? It's been a few years since physics, but I'm not sure your math is right.
/r/javahelp Please note the [posting instructions](http://www.reddit.com/r/javahelp/comments/1ohr0r/metasince_its_getting_out_of_hands_a_message_to/) there - "it isn't working as intended" isn't a problem description, it forces us to guess what your problem is (instead of you telling us).
This is what I was going to recommend. Glad you got it worked out! :)
Bitcoin stuff is mostly written in C though I know of some Java based miners out there. As for seeing the code, it's not possible in the way that you want it to be possible. You can look into decompiling, but if you're here asking this question, I am not sure it is the right direction to take. http://en.wikipedia.org/wiki/Java_Decompiler What is the ultimate goal of what you're after?
I'm a novice when it comes to programming, but I've been trying to learn how to program for a month now. Over the last couple of weeks there has been a lot of talk about Bitcoins resulting in me downloading a few Bitcoin apps to see how they work. Of course seeing the GUI is all nice and all, but seeing what happens behind the curtains is what I'm more interested in. But in the end it's purely because of my curiosity and in a way to kinda "study" the code and to play around with it myself. 
Stop using Stop-The-World style garbage collection. You can adjust the way the JVM garbage collects your application. http://www.oracle.com/technetwork/java/javase/gc-tuning-6-140523.html#available_collectors.selecting Use `-XX:+UseConcMarkSweepGC`
Not to burst your bubble but that stuff is probably beyond your level (and mine)...I'd recommend looking at some simpler code before you jump into Bitcoin!
You will need: Basic flow control (if and while statements), input and output mechanism (check out Scanner)
This sounds a lot like a homework assignment... Most of the really basic Java tutorials will get you there with this. You need console input, very basic math operations, and the Scanner util (hint: hasNext is important).
can you explain steps 3, 6, and 7 in greater detail, I am having trouble understanding them
A lot of stuff related to Bitcoin is actually open source, as is Android if you want to see some larger projects. They're pretty complicated though, so you might want to start small first. Find sample projects on github and look through those.
I'm going to point out a few basics, but you have to figure out how to do it in detail yourself. * How will you tell the calculator what to calculate? Answer: Scanner. Scanner is a standard part of the Java library, and it can do a whole bunch of really neat stuff. It can read a single number, it can read a single character, it can read a full line if you so wish it to. Which one would suit you better? That's what you gotta find out. I seem to remember that you'll find it as java.util.Scanner, but check the Javadoc to be sure. * Data types: Floating point numbers are very flexible. Make sure everything is float before you start doing calculations, if you throw an integer in there it can really mess things up. Hint: "(float) integer "variable. * Data validity: This can be tricky for a newcomer. A letter is also a number, so you need to make sure that you check for this correctly. Hint: ASCII map, go look it up on Wikipedia. * Operators and functions: So you have some floats that you want to do some calculation with. You need to read the mathematical operator sent by the user (+, -, so forth) and have a corresponding function that performs the given action. Example: float add(float num1, float num2, ...). Read about how to make your own functions in the documentation, it is very helpful. If you're stuck, I can try to help you along. :)
This isn't a place to get your homework done. Look up input/output for Java. What you're asking is probably about 10 to 20 lines of code, but you need to *learn* it, not have it done for you.
Here's the Java miner I was referring to: https://en.bitcoin.it/wiki/DiabloMiner No open source linked there. I'm not sure if it is or not.
To sort the Array in descending order you can use the Arrays.sort(array); function and then just reverse the order of the Array. [Oracle Documentation on Arrays.sort](http://docs.oracle.com/javase/6/docs/api/java/util/Arrays.html) 
Loop through the array, check each item against the last stored item, if it's higher, store it; int maxIdx = 0; for (int i = 1; i &lt; array.length; i++) if (array[i] &gt; array[maxIdx]) maxIdx = i; To sort it, see /u/desrtfx's comment. EDIT: Also I'd suggest something different for how your program runs. Currently you have it like this: main() | |---&gt; createArray() | |---&gt; sortArray() | |---&gt; printArray() Where it should be something like: main() | |---&gt; createArray() |---&gt; sortArray() |---&gt; printArray()
So it seems that you have to find the maximum repetitively and swap the array positions out. Something like: 1^st iteration: find the max in the whole array (index 0 to array.length-1) swap the max with array[0] 2^nd iteration: find the max in the array starting from index 1 to array.length-1 swap the max with array[1] repeat the above incrementing the starting index throughout the array until array.length-2.
X-post from /r/javahelp - [source](http://www.reddit.com/r/javahelp/comments/1r03nu/how_to_make_a_calculator_command_prompt/)
http://pastebin.com/QdfMDP3j I used your suggestion and this is what i have now. /u/desrtfx i used your suggestion as well. The only problem I really have, is that it doesn't sort. I wish i could use the sort with the array import. Sadly I cannot. Any ideas? Because arrays confuse me :P I get what I've done so far though! So that's good!
Your problem is the done variable. You made it a class field instead of just a local variable in the method. So you set it to true the first time, and never set it back to false again, so the loop won't run the second time. But mcbi4kh2 is right, I don't think you need the loop at all. I guess you put it in because you were thinking that the user will keep guessing until they get it right.... but each time you guess, you create a new event, so the code gets called many times anyway. It is a general rule for your variables/fields that unless their values never change, you should keep them as local as possible. In most cases you should create the variable just before you use it. It makes the code easier to understand.
Do you have to find the highest number after generation? Otherwise you could just keep track of the biggest random number generated so far (and it's index), perhaps inside a custom class with a field for the array and a field for the index of the largest element in the array. 
use a bubble sort http://stackoverflow.com/questions/12339939/bubble-sort-in-java
That's doing more work than needed for the first part though. 
Interesting. Is the predicted likelihood per user, based on previous action? Or per a population of people as a whole?
Depending on the JPA provider (hibernate/toplink/openjpa), step 3 may be unneeded. But to demonstrate it would be easier by showing an actual JPA project. [HERE](http://goo.gl/EUDGKF) is an example of a (simplified) persistence.xml file. Step 6 is as easy as EntityManagerFactory emf = Persistence.createEntityManagerFactory("persistence_unit_name"); EntityManager em = emf.createEntityManager() ; Where emf is the EntityManagerFactory you created. Step 7 is to use the EntityManager object you created to perform CRUD operations like: em.persist(entity) ; // Create em.find(primaryKey); // Retrieve em.merge(entity) ; // Update em.delete(entity) ; // Delete Queries are another matter. Several edits for correctness
You mean ascending order.
 /** * Rearranges numbers in the array from highest to lowest */ public static void sortArray(int[] array) { // Loop through the array and swap array[i] with array[j], // where array[j] is the max number in array[i:end] , j &gt;= i for (int i = 0; i &lt; array.length; i++) { int max = -1; // temp var used to store max number for (int j = i; j &lt; array.length; j++) { // iterate from i to the end to find max max = Math.max(max, array[j]); // max is redefined everytime a higher number is found } for (int j = i; j &lt; array.length; j++) { // now we find the index where max is found if (array[j] == max) { int temp = array[i]; array[i] = array[j]; array[j] = temp; break; } } } } Use java's standard util lib to print to console: System.out.println(Arrays.toString(array));
If the root CA is really in cacerts, your problem is probably that the host isn't returning the intermediate certificate(s). Unlike browsers, Java can't fill the gaps for you. Check the chain returned from the server using something like OpenSSL s_client, make sure that the chain returned includes everything up to the root certificate (but not including). If you have no control over the host and it's misconfigured, you might have to skip validating the cert. 
The way you described it seems like you're supposed to implement [Selection Sort](http://en.wikipedia.org/wiki/Selection_sort) on the array.
&gt; If you have no control over the host and it's misconfigured, you might have to skip validating the cert. This ought to be a last resort...
Right, really the preferable workaround is to explicitly trust the host certificate via a configured keystore or cacerts if that's not possible, rather than skipping validation. 
It's a silly last resort but check your system clock, mine was off by five minutes once and it was enough to cause some SSL tools to fail. 
You can also tweak the thresholds at which point it kicks in. By the way, when you said "it takes up to 1 second releasing all that memory" earlier, don't worry about that either. It's only the "stop the world" period that you have to worry about, particularly in games. Be sure to test the collectors which promise the most minimal stop-the-world times, they will likely be your best bet. For what it's worth it's opposite for batch processing, you want big stop the world periods because it's raw throughput you want, not responsiveness. 
1) Stackoverflow.com Stackoverflow.com Stackoverflow.com 2) You probably have stupid restrictions on how to do this because it's a class assignment, so #3 won't help you. 3) Implement proper equals and hashCode methods. Iterate your list, and add each item to a new HashSet, which will drop duplicates. Recreate your double linked list from the HashSet. If you need to do it in-place then just if(hashSet.contains(current)) {yourRemoveMethod(current);} 4) In real life, do it the simplest way possible and worry about performance later. And reuse code that smarter people already wrote. apache-commons-collections has lots of useful collection filtering methods.
Iirc, it is either wrong or right. There is no partial credit.
wouldn't it be better to convert the array to a list/set, then use the Collections framework to sort it? or there may even be a findMax() method. My guess is the collections framework will use all sorts of JNI (C code probably) to speed things up. Why reinvent such a simple wheel?
You're probably getting away with it, but never do if (someString == "someString") always if (someString.equals("someString")) Also, starting in java7, you can use strings in a switch statement, which is often more readable.
Thank you all so much! /u/mcbi4kh2 's code worked, was just missing a curly brace. I really appreciate the help guys.
You are right about why I was using the loop. Thanks a lot for the information. I will definitely keep that in mind for the future.
I believe that is what the book said yes! 
Give this a try: https://gist.github.com/4ndrej/4547029 I had a similar issue and this found the missing intermediate cert. This can also be quite useful: http://miteff.com/install-cert here is the source if you want: https://code.google.com/p/java-use-examples/source/browse/trunk/src/com/aw/ad/util/InstallCert.java 
equals() check for values equality whereas == checks for reference equality. You can have two strings that have the same value but different references. Or in other words, if you have two seperate String objects with the same value, == returns one answer and .equals() returns another. 
Forget number 4 for now. You're trying to learn the things that ~~smarter~~ more experienced people already know. Learn how to write those things yourself, then when you're out of school and on the job you'll know what to look for that's already implemented.
Deploying a war is very standard and portable. You could easily scale up from jetty to tomcat to a higher level app server like jboss/glassfish
Your return statement is inside a conditional. The compiler can't know if that's going to be executed in all cases, so it wants you to have a return even if that conditional always evaluates to false. Add a line after 23: return -1; That will ensure your method always returns.
You could also download the intermediate certs from your browser and install them into your JDK's cacerts store. (if missing intermediate certs is an issue) Try out https://www.ssllabs.com/ssltest it is an easy tool to figure out what is wrong with the target site.
Also: 1.5) /r/javahelp
The point of reinventing this "simple" wheel is to understand how arrays work, how loops work, and the general principles behind sorting algorithms. That being said, you're absolutely right but this is a learning exercise.
Be very careful when transcribing instructions, be even more careful when you're reading them. If I do exactly what you said then the first integer of the array is the largest after one swap...which index will be the largest the next time you go to swap? It will still be the first index.. so you're going to swap it with itself... which is essentially what your code does in the other reply I made. It should say something like: swaps the first index THAT HASN'T YET BEEN SORTED with the index of the largest unsorted element. here is some psuedo code: for i through 9 //i starts at 0, corresponds to index to swap out for smallestUnsortedIndex through lengthOfArray-1 //smallest starts at 0 - or could use implied logic like you did Find biggest index from smallestUnsortedIndex through lengthofArray-1 Swap biggest with I 
This is a very good point, I think keeping the deployment as decoupled as possible from the server is going to be the best choice so I refactored the app to use the profiles feature in Spring Boot so I can enable the embedded server if need be, and compiled everything into a war so if/when I do deploy it to another server, it just won't use the embedded server at all. Thanks for the suggestion and input!
This is essentially what I opted for as well. Using the profiles in Spring Boot I can enabled the embedded server through an env property when executing the war, which is done currently using a maven plugin from Spring. Thanks for the input!
No, I meant descending order because I said รรsortรร then reverse the order. Sort by itself is ascending but reversing the order makes it descending.
Your way for making random numbers is better and definitely easier to read.
Nice, thanks for the validation :-)
My team used this at work before. We saw around 30% memory reduction. Pretty neat !
Right, sorry. The last part just disappeared under the code block. It's bad advice though. If you want it in descending order, sort it in descending order to begin with. Reversing after sorting is just extra work.
Yeah, did mine a few months ago and basically think of it as 1 mark per question. Just be sure to tick the appropriate number of options on the multiple choice ones as Aveneyer said
Thanks for the insight!
&gt; In real life, do it the simplest way possible and worry about performance later. And reuse code that smarter people already wrote. &gt; You probably have stupid restrictions on how to do this because it's a class assignment, so #3 won't help you. So true. I would also say, that "in real life", most of your real performance gains come from exploiting non-standard approaches to problems. I've written XML parsers that were much faster than "standard" parsers. I'm no super genius, I just knew the datasets we worked with would not require handling all of the edge cases*. ^* ^- ^fret ^not ^fellow ^corporate ^programmers, ^I ^properly ^separated ^my ^code ^as ^to ^make ^injection ^of ^said ^standard ^a ^simple ^swap/injection/change.
This is [indeed](http://hakipedia.com/index.php/Poison_Null_Byte) [a problem](http://www.madirish.net/401) with many higher level programming languages and APIs that pass strings more or less directly to the underlying ANSI/POSIX C functions with a null byte appended. And the only reliable fix is to explicitly check for null bytes either in your input or fixing that bug in your language.
Really interesting reading, which I'd love to see more examples of; is there any dedicated sub-Reddit which covers links on this type of security hole?
If you trust a file and assume it's contents based on it's extension you're a sucker anyway. 
[FusionReactor] ( http://www.fusion-reactor.com) is a great monitor, has absolutely loads of features to help monitor performance.
I can't believe bukkit is so high. I know Minecraft is popular, but how can there be that many people writing plugins for it?
Thanks, I'll check this out
I would try moving your writer.close() to the try block instead of the finally block. Also unwrap it from the second try/catch. Edit: Are you doing this on Linux? If so, does your user have rwx permissions on the current directory?
check [jgoodies form layout](http://www.jgoodies.com/freeware/libraries/forms/)
Happy to see Joda Time that high on the list
I need to check ma messages more O.o you're close but not quite, they're more like premade versions of constructs you might learn about in a comp sci course like linked list, double linked list, queue's, stacks, maps ect and whatnot. memory allocation is something you should mostly forget about for java(ha haaa c problems). It's not as much an issue, this is more a question of efficient organization of objects for x purpose. It's a similar concern, but you're not really saying I want to reserve x bytes; you're more defining structures.
For an example of the file, here is is: 3.75 That is exactly how it looks in the file.
^ ^ this most ide's have some kind of export as executable jar that handles it for you too. if it's an application with gui you don't want a console for, experiment with javaw too; no idea how to make that catch right with the manifest though. 
That is text, which will not work with the method you call. You need to read it as a String and then convert it to a double afterwards.
Thank you very much for your answer, but /u/squishles below has solved the problem. Not to be mean. :)
Have you considered you may have to write a Point class?
In the assignment, the instructions were to use the Point class given by java.awt.*, so I assume (read: hope) there is some way to use that point class as a parameter when constructing a new line.
Think about how you'd use a constructor here. 
This is what I have as my constructor, and I feel like it isn't the problem; I just don't know how to call it when I test the class out in another method. public class Line { private Point a; private Point b; public Line (Point a, Point b){ a = this.a; b = this.b; }
 new Line(new Point(x1,y1),new Point(x2,y2)) Now get back to homework.
Thank you so much!
You need to add your jdk bin dir to your system path
I wish I had something like bukkit growing up, but all we had was BASIC from the magazines painstakingly transcribed onto a Vic 20. *shakes cane*
Why is there no jquery in the javascript list?
Jquery is 19th.
Take a look over at /r/javahelp there is an extended section on tutorials, books, etc. /r/java deals with Java in general - /r/javahelp is for learning Java. Have a look at the [/r/javahelp/wiki/tutorials](http://www.reddit.com/r/javahelp/wiki/tutorial_list) or at [/r/javahelp/wiki/books](http://www.reddit.com/r/javahelp/wiki/books) Or at the [/r/Javahelp wiki](http://www.reddit.com/r/javahelp/wiki/index) in general. **Also, and extremely important:** familiarize yourself with the [Oracle Java Documentation](http://www.oracle.com/technetwork/java/javase/documentation/index.html) and the [Oracle Java Tutorials](http://docs.oracle.com/javase/tutorial/)
How about a dice game (High/Low, 21, craps, etc.)? It would include nearly everything, except files, but you could add some statistics writing/reading, user reading/writing, etc. to it to include even that. 
Same here, and moment on the JS side.
You can traverse the json tree by deserializing to JsonElement, then using "getAsJsonObject" and grabbing properties off that. JsonElement obj = new Gson().fromJson("{test:1}", JsonElement.class); System.out.println(obj.getAsJsonObject().get("test").getAsInt()); // prints 1
Here's the source article, with more technical details: http://www.symantec.com/connect/blogs/all-your-tomcat-are-belong-bad-guys I was wondering which Tomcat version is vulnerable, but it appears this worm merely targets Tomcats which have the standard Webapp Manager running, and tries very obvious passwords on them (such as admin/admin, tomcat/tomcat, manager/manager, tomcat/admin, etc.). Once logged-in, the worm simply uploads/deployes itself on the new Tomcat... So the vulnerability is not in Tomcat itself, but in its users who sometimes deploy it with no experience of what it is to harden a server for public exposure.
Quite surprised that trove is not in the Java list. 
That's the wrong way around. In java when assigning you assign what's on the right to what's on the left. You're assigning the class members (this.a, this.b) to the constructor arguments (a and b). You should reverse that to this.a = a and this.b = b.
Implement a commandline based [mastermind](https://en.wikipedia.org/wiki/Mastermind_%28board_game%29) game. The user chooses the length of the codeword, and the number of guesses. the user than starts guessing, and your programm says how many white and blackhits the user has.
IIRC, Java is a trademark, and you can only use the Java trademark to promote your product if you comply with the TCK of Oracle.
I realized this too in the end, haha. Thank you though!
Which is presumably why the TCKs are being withheld. Licensing of the Java trademark is big business.
This is a variation of the same attack that can be done in other services, like telnet or ssh. http://www.zdnet.com/illegal-botnet-census-finds-1-2m-devices-with-default-passwords-7000012871/ The telnet problem is actually way scarier than this.
http://www.jboss.org/rhq
Basically you need a simple application, that reads properties from a file, and calculates a random thing. What about a "quotes of the day" application: reads random quotes from a text file, or weather prediction app (with random predictions for rain, sun, wind and so on), or a prediction application that tells future stocks, a news feed reader that imports news lines from random urls. By the way, what kind of smartphone apps do you have installed, or what functionality are you missing? 
So Java doesn't have a language standard like C++ does? All the JSRs and all that stuff are the property of Oracle?
http://docs.oracle.com/javase/specs/ it has a standard. The problem is you can't call it java and use the java trademark unless your implementation passes the TCK. And I think there are legal issues as well with trying to have a language that's mostly like java but doesn't pass the TCK... but IANAL so might be wrong on that one. I thought that's what the whole oracle/google legal battle was about.
&gt;As you've said, you can find ways to stop allocating and releasing so much memory - by pooling and reusing objects, for example. Be very, very careful about this. Not before long you'll be (poorly) implementing your own rudimentary GC on top of the existing one. It's quite easy to make your application perform *worse* by doing things like your own caching system.
For my first java app I made a program that simulated planetary orbits you could do that...
Which....nobody should ever do. And if they do, you have to EXPLICITLY enable the accounts to log in with, they should be fully aware that they're asking for trouble. Although honestly, I really wish Tomcat had a user setup script similar to jboss that requires a new username/password be entered, too many people get lazy and just uncomment the tomcat/tomcat combo in the config.
Sounds like you want [Jetty](http://www.eclipse.org/jetty/).
I think URL shortening services like goo.gl are probably better because they don't require any software to be installed. If you want to do something like this in Java it sounds like you would just make a program that updates the hosts file. If you really want something that is an alternative to DNS then maybe get into writing protocol handlers - mysite://awesomesite42
Yeah, link shortning might be an option but one of the points is to maike it easy to remember.
block-style is a preference. While I use it now a days, it is by no means something you must do. Egyptian style brackets are just fine. Either way, using a code formatter is a good habit to get in to, regardless of the actual format.
This is true. If you go the pooling route I'd definitely recommend you use an existing pooling library - I think there's one in Apache Commons, for example - instead of writing your own.
Have you taken a look at the [Oracle documentation](http://docs.oracle.com/javase/tutorial/uiswing/components/textfield.html)? It does a very good job and provides lots of examples. That should give you a good start. If you get stuck from there then I'm happy to answer more specific questions.
you apply an action listener to a button or some thing that triggers an event. In this action listener method you override actionPerformed(). Here you put code you will enter to convert the time. textButton = new JButton() textButton.addActionListener(new buttonListener()) public class buttonListener implements ActionListener { public void actionPerformed(ActionEvent ev){ convert here }
X-Post on /r/Javahelp - OP please mark X-posts! http://www.reddit.com/r/javahelp/comments/1r64xi/having_trouble_using_actionlistener_to_get_an/
I know that the F3 stats screen displays the player's viewing direction, but I do not know how you would access that in code... **EDIT:** After a brief look at the source code (thanks, forge!), it seems the method you want is `player.getRotationYawHead()`, which returns a float. ~~However, assuming that you do get viewing angle,~~ Calculating the appropriate X, Z offset simply requires some unit circle trigonometry (X = cos(angle), Z = sin(angle)), multiplied by the strength of the knockback (1 = normal hit). Remember, though, that these trig functions work with radians, but the viewing angle is given in degrees, so you would have to multiply by PI/180.
Create an class whose only job is to store and retrieve student objects. 
Unit testing != tdd.
Yes. Typically you have a data class and an associated sql class. In sql you ll just do the tables to model the data fields. Implement collections as sql tables with a field referring to the main table s primary key.
Oracle just sucks as a company. Their products are shit, their technology is shit. The only things that aren't complete rubbish is their legal and marketing departments... and apparently the golf games they take their customers cios to
In the example in the introduction, how does the compiler know that the closure is meant to be applied to the run() method? Or, what ties the code inside the closure to the run() method inside Runnable?
well if i understand correctly you are missing a "!" on the first if like so: if(!name.equalsIgnoreCase("-1")) or you can also use this way for easier reading: if(name.equalsIgnoreCase("-1") == false) by the way, dont use ";" after if statements. It might cause hard to find problems on more complex programs :S ninja edit: on the second if there is a "!" and that is why that one works as expected!
Looks like I helped your classmate a couple of weeks ago :p
There may be copyright issues for the API, but Oracle lost on that one, fair use. There was also some code copied wholesale, but the judge (who is a programmer) called it trivial and ruled for Google.
On a different note, I suggest you use DataSource instead of DriverManager. [DataSource](http://docs.oracle.com/javase/tutorial/jdbc/basics/sqldatasources.html) The reason you should use DataSource instead of DriverManager: [Reason to use DataSource](http://stackoverflow.com/questions/15198319/why-do-we-use-a-datasource-instead-of-a-drivermanager) Also try-with-resources is something you may want to look at aswell: [Try-with-resources](http://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html) Took a quick look at your code, in my humble opinion it looks pretty good. 
Because the operator you are using compares the two int primitives rather than Integer objects. Try the .equals method. For example "==" will check if two objects are the same object and will not compare their values.
Probably because .length() starts at 1 where as the array index starts at zero.
Say your image is 6 pixels wide. There is data in the array from index position 0 to 5. The first loop of the swap, j is 0. So it's writing to position 0 in the array, and reading from 6 - 0 - 1. The minus 1 is there is because arrays are 0 based. If the -1 **wasn't** there, it would read from 6 which would throw and index out of bounds exception.
Sometimes, this is the hardest error to pick up. I've done it many times close to midnight. It's a sign to stop :)
That fixed it, thanks!
Awesome, thanks.
Ohhhhhhhhh. I knew it was something simple. Thanks so much!!!
Look up "POJO" and "DAO"
I'll follow your suggestion and visit javahelp
Since `Runnable` only has one abstract member, the compiler knows. Classes/interfaces with only a single abstract member are known as "functional interfaces" (and were previously known, intuitively, as Single Abstract Member (SAM) interfaces).
Agree, pretty nice 
Unless you're using a version of the JDK (or compiling for a JRE) older than Java 5, auto boxing/unboxing should be automatic for primitives. The following works just fine. import java.util.Random; class OrderedList { class Node { public Integer data ; public Node next ; public String toString() { return data + " -&gt; " + next; } } private Node first ; public void insert(Integer x) { Node newNode = new Node() ; if (first == null) { newNode.data = x ; newNode.next = null ; // Don't assign first to newNode.next first = newNode ; } else { if (first.data &lt;= x) // &lt;--- This is perfectly valid { newNode.data = x; Node currNode = first; Node prevNode = null; while (currNode != null) { prevNode = currNode; currNode = prevNode.next; if (currNode == null) { newNode.next = null; prevNode.next = newNode; } else if (currNode.data &gt; newNode.data) { newNode.next = currNode; currNode = null; prevNode.next = newNode; } } } else { newNode.data = x; newNode.next = first; first = newNode; } } } public String toString() { if (first == null) return null; else return first.toString(); } public static void main(String[] args) { OrderedList orderedList = new OrderedList(); System.out.println(orderedList); Random random = new Random(); for (int i = 0; i &lt; 10; i++) { Integer x = random.nextInt(100); System.out.println("Inserting " + x); orderedList.insert(x); System.out.println(orderedList); } } }
I've been playing with JDK 8 and it's quite reliable but IDE support isn't there yet (at least not 100% ready). If you want just check simple lambdas via javac, then you're OK - JDK 8 it's in ["Developer Preview" milestone](http://openjdk.java.net/projects/jdk8/milestones#M8): &gt; Developer Preview โ A reasonably stable build suitable for broad testing by the developer community is published. This build will include all planned features unless otherwise stated. About IDE support: Eclipse publishes nightly builds with JDK 8 support [here](http://downloads.efxclipse.org/eclipse-java8/2013-05-19/), you can follow [this tutorial from Oracle](http://www.oracle.com/technetwork/articles/java/lambda-1984522.html) and try it in wild. EDIT: I don't use InteliJ nor NetBeans and didn't mention them but I believe none of them (and Ecplse, too) have released stable version with JDK 8 support yet.
A Netbeans Nightly Build has JDK8-Support as well: http://wiki.netbeans.org/JDK8
I'm using IntelliJ a little while now. Support for JDK8 is pretty good.
Played around with lambda's off course.
It has an open and free standard (by contrast of C++ only the final draft is free, the almost identical officialy release text comes with a price tag) the problem is that Sun and now Oracle hold the trademark rights to Java and AFAIK some patents (one of the reasons the VM used by Android is not compatible with jvm bytecode). Sun held tight to the TCKs in order to make money from Java ME, only SE and EE are freely available and Oracle being Oracle would rather squeeze until there is nothing left than loose out on money.
This is brilliant!
I missed their last big sale and I am eagerly awaiting the next one (I'm a poor grad student)! IntelliJ seems to get all the common features earlier than other IDEs...
I've been doing some infidelities to Java with Ruby and Groovy and I've been stricken by an acute lambda-envy on my main language.
Did you try updating the underlying data? something like calendarDisplay.setDate(date) ?
But the community edition is open source and free (and also supports Java 8)? They also have academic licenses, though the price may be a bit steep for a student. /Happy Ultimate user :).
This assumes you have the bin directory of your JDK on your PATH, but to determine the version of the JDK you have installed, run the following on the command line: &gt; java -version You should see output similar to this: &gt; java version "1.7.0_40" &gt; Java(TM) SE Runtime Environment (build 1.7.0_40-b43) &gt; Java HotSpot(TM) 64-Bit Server VM (build 24.0-b56, mixed mode) Also run the following: &gt; javac -version You should see output similar to this: &gt; javac 1.7.0_40 Paste the output for both in a comment. In any case, if your JDK is at version Java 5 or later, the issue is likely a NetBeans setting. It may by default be compiling your code to be compatible with an older version of Java. I don't use NetBeans so I wouldn't know where to look for that setting. Google will be your friend there. In the meantime, you don't need NetBeans to compile the code above. Run the following on the command line (again assumes java and javac are on your PATH): &gt; javac OrderedList.java &gt; java OrderedList The first command will compile the code. You'll see two files generated: OrderedList.class and OrderedList$Node.class. The second command will run the compiled code. You'll see output similar to the following: &gt; null &gt; Inserting 93 &gt; 93 -&gt; null &gt; Inserting 21 &gt; 21 -&gt; 93 -&gt; null &gt; Inserting 92 &gt; 21 -&gt; 92 -&gt; 93 -&gt; null &gt; Inserting 23 &gt; 21 -&gt; 23 -&gt; 92 -&gt; 93 -&gt; null &gt; Inserting 53 &gt; 21 -&gt; 23 -&gt; 53 -&gt; 92 -&gt; 93 -&gt; null &gt; Inserting 6 &gt; 6 -&gt; 21 -&gt; 23 -&gt; 53 -&gt; 92 -&gt; 93 -&gt; null &gt; Inserting 60 &gt; 6 -&gt; 21 -&gt; 23 -&gt; 53 -&gt; 60 -&gt; 92 -&gt; 93 -&gt; null &gt; Inserting 7 &gt; 6 -&gt; 7 -&gt; 21 -&gt; 23 -&gt; 53 -&gt; 60 -&gt; 92 -&gt; 93 -&gt; null &gt; Inserting 58 &gt; 6 -&gt; 7 -&gt; 21 -&gt; 23 -&gt; 53 -&gt; 58 -&gt; 60 -&gt; 92 -&gt; 93 -&gt; null &gt; Inserting 53 &gt; 6 -&gt; 7 -&gt; 21 -&gt; 23 -&gt; 53 -&gt; 53 -&gt; 58 -&gt; 60 -&gt; 92 -&gt; 93 -&gt; null Behind the scenes NetBeans is probably setting the source and target versions when it calls javac. To replicate the error you're getting on the command line run javac like this: &gt; javac -source 1.4 -target 1.4 OrderedList.java That forces javac to compile the code as if it were JDK version 1.4. I get the following output: &gt; warning: [options] bootstrap class path not set in conjunction with -source 1.4 &gt; OrderedList.java:25: error: bad operand types for binary operator '&lt;=' &gt; if (first.data &lt;= x) // &lt;--- This is perfectly valid &gt; ^ &gt; first type: Integer &gt; second type: Integer &gt; OrderedList.java:39: error: bad operand types for binary operator '&gt;' &gt; else if (currNode.data &gt; newNode.data) &gt; ^ &gt; first type: Integer &gt; second type: Integer &gt; OrderedList.java:69: error: incompatible types &gt; Integer x = random.nextInt(100); &gt; ^ &gt; required: Integer &gt; found: int &gt; 3 errors &gt; 1 warning But if I run any of the following, I get no compile errors: &gt; javac -source 1.5 -target 1.5 OrderedList.java &gt; javac -source 1.6 -target 1.6 OrderedList.java &gt; javac OrderedList.java
You should test your project and report issues/incompatibilities. I submitted one bug report and it is now fixed in recent JDK 8 :)
I think you misunderstood me. I wasn't talking about brackets, I was talking about having a method comment like this /* * Method description * */ rather than: // Method description Edit: Did a [pastebin](http://pastebin.com/B60qEcEA) to show what I mean.
Netbeans 7.4 is released &amp; has support for JDK 8. Try the "Inspect &amp; Tranform" feature on some of your existing code with event handlers or crazy loops.
Could you post the full code and tell us what exactly needs to be updated? Because chances are you're not using the EDT correctly. If you modify the underlying data structures, the components should update themselves. Usually it shouldn't be necessary to call *repaint* or *invalidate*.
Going out with Groovy is not infidelity, you're still with Java although in a more distant way.
 Collections.sort(users, (User u1, User u2) -&gt; u1.id.compareTo(u2.id)); can actually be rewritten with users.sort(Comparator.comparing(u -&gt; u.id)) or better users.sort(Comparator.comparing(User::getID)) if there is getID method
Been using it daily! Some of the builds are... still not that great - but generally speaking they've been good. You can join us at http://adoptopenjdk.java.net where we have a community of people testing early access releases and creating things like lambda tutorials for developers to try out!
HTML + Java = web application. You use HTML + JavaScript for the UI on the user's web browser, and AJAX to communicate with Java which sits on the web server. The Java code is made available to the HTML/Javascript through URLs, mapped through the routes you see in the Spark example. Instead of just "hello world", you can return JSON or HTML which communicates changes to the UI to the HTML/Javascript. For example (not tested, but hopefully you get the idea): HTML (+ jQuery to for AJAX): &lt;html&gt; &lt;head&gt; &lt;script&gt; setInterval(function() { $.ajax({ url: "http://localhost:4567/time", /* the Java code lives at this URL */ context: document.body }).done(function(data) { $('.timer').html(data); /* replace the content of the HTML with the result from Java */ }); }, 1000 /* make AJAX call asking Java for the time every second */); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;span class="timer"&gt;[Time goes here]&lt;/span&gt; &lt;/body&gt; &lt;/html&gt; Java: import static spark.Spark.*; import spark.*; public class HelloWorld { public static void main(String[] args) { get(new Route("/time") { @Override public Object handle(Request request, Response response) { return new Date().toString(); } }); } }
You need two libraries that already come shipped with the standard Java SDK. You can communicate with eBay using standard HTTP, using the [HttpURLConnection](http://docs.oracle.com/javase/7/docs/api/java/net/HttpURLConnection.html) class. The response is in XML, and you can use the standard [XML parsing](http://docs.oracle.com/javase/7/docs/api/javax/xml/parsers/DocumentBuilderFactory.html) and [XML query](http://docs.oracle.com/javase/7/docs/api/javax/xml/xpath/package-summary.html) libraries to pick out the pieces of information that you want. 
I read the head first into python book awhile ago. I did like the way it was structured. Thanks for the tip on the Java book.
Yeah, I figured the best way would be to just dive into creating an app. Trial by fire... Thanks for the tips. 
Ah, I did misunderstand - my bad.
Thank you! Mina sounds *perfect*!
We have been using JDK8 and especially JavaFX8 for months now. There are still a couple of bugs and some less critical features aren't there yet at all. It's also obvious in some areas that they have implemented one particular thing, even though you are supposed to be able to choose from a number of different things. (e.g. light sources in 3D.) But overall it has become pretty stable and performance is pretty ok. I agree with the changes they made, especially that they are getting rid of Swing. The big issue is that there is only very little documentation right now and many official tutorials are simply wrong. I.e. you copy their code examples verbatim and they simply don't work, because they changed names or method arguments around after writing those examples. But I guess that's to be expected, since release is currently planned for next March. 
Thanks, I ended up communicating with the API through HTTP, coded everything up and got it working before I realized I was going down the wrong road and the API call I was using didn't give me what I needed anyway... After a bit more research I found what I wanted in the eBaySDK. Wasted several hours on that mistake!
It's ["preview support actually"](https://netbeans.org/community/releases/74/index.html): &gt; Java: Preview support for JDK 8 features: Profiles, Lambdas Full support for JDK 8 isn't there yet, [see this wiki page](http://wiki.netbeans.org/JDK8). But anyway - nice to know there's not-nighlty-build IDE for simple lambda tests.
Are you using the UTF-8 charset? Also check whether you are sending UTF8 with or without BOM. Maybe that's the problem?
I'd start with checking compression and charset settings. Maybe you base64 encode it as ASCII and they decode it as UTF or something similar? What kind of data channel are you using?
What library are you and they using? Hopefully not sun.misc. There's definitely a UTF-8 dependency in commons-codec, as seen here (: http://grepcode.com/file_/repo1.maven.org/maven2/commons-codec/commons-codec/1.8/org/apache/commons/codec/binary/Base64.java/?v=source 
Does it still have copy-paste issues with JDK8?
Ah, missed that bit. Learn on, young programmer!
My guess is that we were using different Charsets, yes. I think that I was actually using Cp1252, and am unsure what they were using.
I was using it and all my projects would build fine, but I had to stop because the java 8 JVM would crash with several apps I needed.
What's wrong with using length? 
if some one asks u in the interview , How length method works internally in java , what answer you will give 
Still worth the price, but yea - I hear ya... &lt;-- user of Netbeans, Eclipse and IntelliJ
It queries the length field of an internal char array? Not sure really haha.
You don't need two variables. You can use the charAt method in a simpler way with a while loop: public static int length(String s) { int index = -1; try { while(true) { //increment before checking charAt s.charAt(++index); } } catch(Exception e) { //index now points to the first index //that does not contain a char } return index; }
please try to give alternative trick instead of optimizing the code
??? String str = "string" int length = str.toCharArray().length;
&gt; is possible to construct a regular expression which represents all the valid characters of a string (I think that it is..), then you can use String.split(regex) to split the input Strin return s.toCharArray().length;
I really doubt it keeps a loop counter and finds the first index that throws an exception. Especially considering that for that exception to be thrown, `charAt(i)` has to have some kind of conditional like `if(i &gt; stringLength) { throw new IndexOutOfBoundsException(); }` A more worthwhile exercise would be to actually download the source of OpenJDK or a different implementation and actually look at how `.length()` is implemented
What if I can't use the length field!?!? J/K, this is the best way for me too, not sure why to create a blog post on this :/
Actually, until recently, it keeps an offset and count, because substrings can share from the parent char array. Now, all strings get their own char array, so I'd imagine that's how it would have to be. Especially since they yanked one of those fields for some hash code trick.
You want advice? **Don't** do this! Yet. Let's see.. &gt; I have completed year 12 &gt; ... &gt; I will be aiming to develop for trading companies mostly If you're a self-taught "developer" with no prior experience whatsoever, no one will buy anything off of you. In particular no one from the finance industry. Also, no company want's a one-shot product. They want software that they know someone will support, for a couple of years at least. Perhaps 24/7 - particularly for a trading software. &gt; I will be going to them personally, perhaps scheduling a meeting, and present to them No one will take their time for a personal meeting for the same reasons as above. &gt; I know I'll need to learn more about mainly databases, networking and Gui's as well as alot of other key areas. So what you're saying is that effectively you don't know programming? Databases are *the* workhorse of any enterprise application, and networking is a core point in any finance application as well. &gt; I will go away for a few weeks and develop the software. A few *weeks*?! You grossly underestimate the time it takes for any serious application to be built. &gt; I will fix bugs... &gt; ... &gt; I will obviously take longer... &gt; ... &gt; ..teach myself new things quickly. You won't have time to learn, as you will be swamped by a) developing the actual software, b) fixing the bugs you've created while doing this and c) acquiring, preparing and attending the sales meetings. &gt; I will fix bugs ... for free but charge &gt; ... &gt; will not charge them by the hour &gt; ... &gt; simply sell my the application for no more than a few hundred dollars You won't be able to sustain yourself with this kind of rates/deals. At all. "A few hundred dollars" is what a professional software engineer costs in an hour. &gt; people who work in this area, what is some advice you can give me? Here's my advice (again): don't start off with your own company at your own risk, with no experience and no knowledge of either the language nor the field (trading software). If you want to be a programmer, get a job as one, maybe an apprenticeship. Or even better: goto university and get a software engineer's education. I'm not trying you crush your dreams - but if you start this at your current point in life, you'll fall &amp; fail hard. Give yourself some time - learn, study, get experienced and prepare for one day opening your own business. ^Edit: ^fixed ^some ^typos.
That's probably just the entry level one, mine did something similar with alice http://www.alice.org/ it's to get you used to objects and object oriented programming, or functional programming; whatever the schools paradigm de'jour is. But it looks like your ready to get past that :p The other way that is done is a class on uml diagrams. Which takes that spark of interest people have going in, and curb stomps it's teeth into the gutter. Although it is useful knowledge latter, especially for large projects, in team environments. oo also look into serialization, it's what objectinputstream/datainputstream ect are for. No one does it, because integration with non java systems hand waving, but it's nifty. And clarifies why certain object need that interface for other things, like jndi, ejb's, general persistence, jms ect.
This SO post should help with understanding how Java auto-boxes http://stackoverflow.com/questions/1514910/when-comparing-two-integers-in-java-does-auto-unboxing-occur Since this is also for a school project, for brownie points you might want to look up generics. Take the Collections objects, List and Sets, you can define the storage type within the diamond operator. List&lt;String&gt; words = null; TLDR; Think of it like a place holder for a data type to be defined later. class Node&lt;T&gt; { public T data; Node&lt;T&gt; next; } Node&lt;Interger&gt; node = new Node&lt;Integer&gt;();
Yes. It can be used to let a class control its instances.
My JDK: java version "1.7.0_10" Java(TM) SE Runtime Environment (build 1.7.0_10-b18) Java HotSpot(TM) 64-Bit Server VM (build 23.6-b04, mixed mode) javac 1.7.0_10
What crazy fool would do such a crazy thing? Well let's say you have an object that has loads of mandatory attributes, and dammit it just can't live without an id, an alias, a key, a composite key, a category blah blah. And you have to share it with other developers? At first you think 'java doc to the rescue' but then you remember no-one, including you reads every inch of jdoc meticulously because, if we're honest, reading is more boring than coding and-you-kinda-get-what-it's-for... So, not the best plan. Ok, so you think 'this is what constructors are for! Er not when you have about 2 strings and 5 longs in a row you don't. Forget someone else getting parameters the wrong way around: you'll probably screw it up before you even show it to someone else! Hm. This is called 'telescopic constructors' and it's a bad plan. So what do you do? You declare the constructor private and stick a builder (or factory pattern) within the class, which you can use to build the thing properly and throw an error if it's constructed the wrong way e.g. something mandatory is missing. Huzzah! Now no-one phones you on a sat evening to fix a bug because some random contract developer used your class in the wrong way and for all the 'I told you so's' in the world you would much rather be down the pub. All rejoice: The end
You could also throw an exception in your constructor. Obviously using a builder makes it easier to get right when you have many required fields, but that doesn't stop someone from failing to set a required field. If someone doesn't test the code, it will break anyway.
Concerns me that someone took it upon themselves to make a blog post about something that I feel should be obvious to most competent java developers 
Thanks 
Other than "because you can" there is no reason to do this. "What if I want to" is ridiculous.
Your description doesn't seem to match the shown input file: &gt; The first line represents the number of test cases. First line is "2". Ok... &gt; Each test case starts with 3 integers... Next two lines are "4" and "ab". Where are the 3 integers?
 package p4; import javax.swing.*; import java.awt.*; import java.awt.event.*; public class CalendarFrame extends JFrame { // Instance variables for componenets private static final int FRAME_WIDTH = 350; private static final int FRAME_HEIGHT = 350; private static final int FRAME_X = 40; private static final int FRAME_Y = 40; private static final String TITLE = "Calendar"; private static final short MAX_YEARS = 12; //Number of years in future to show private static final short MIN_YEARS = 10; //Number of years in past to show //Private variables private short BASEYEAR; private BasicCalendar cal; private DateAD date; private short month; private short year; private short day; private JTextField dayTextField; private JLabel datePickerTitle; private JTextArea dayText; private JTextArea weekDayText; private JComboBox monthCombo; private JComboBox yearCombo; private JTextArea dateStringTextArea; private JPanel datePickerPanel; private JTextPane calendarPanel; private JPanel dateDisplayPanel; private JPanel mainFrame; public CalendarFrame() { mainFrame = new JPanel(); mainFrame.setLayout(new BorderLayout()); createCalendar(new DateAD()); cal = new BasicCalendar(); BASEYEAR = year; // Create panels datePickerPanel = datePicker(); calendarPanel = calendarDisplay(); dateDisplayPanel = dateDisplay(); // Add panels to content pane mainFrame.add(datePickerPanel, BorderLayout.NORTH); mainFrame.add(calendarPanel, BorderLayout.CENTER); mainFrame.add(dateDisplayPanel, BorderLayout.SOUTH); setBounds(FRAME_X, FRAME_Y, FRAME_WIDTH, FRAME_HEIGHT); setTitle(TITLE); add(mainFrame); } private void createCalendar(DateAD date) { this.date = date; this.month = date.getMonth(); this.year = date.getYear(); this.day = date.getDayOfMonth(); } private JButton debugButton() { JButton button = new JButton(); button.addActionListener(debugListener); return button; } private JPanel datePicker() { JPanel panel = new JPanel(); BorderLayout frame = new BorderLayout(); panel.setLayout(frame); datePickerTitle = new JLabel("Select a Date"); panel.add(datePickerTitle, BorderLayout.NORTH); JPanel datePanel = new JPanel(); panel.add(datePanel, BorderLayout.SOUTH); dayTextField = new JTextField(2); dayTextField.setText(Short.toString(day)); dayTextField.addActionListener(dayListener); datePanel.add(dayTextField); monthCombo = new JComboBox(); String monthArray[] = DateAD.monthsAsArray(); for (String m : monthArray) { monthCombo.addItem(m); } monthCombo.setSelectedItem(monthArray[month - 1]); monthCombo.addActionListener(monthListener); datePanel.add(monthCombo); yearCombo = new JComboBox(); for (short i = (short)(BASEYEAR - MIN_YEARS); i &lt;= BASEYEAR + MAX_YEARS; i++) { yearCombo.addItem(i); } yearCombo.setSelectedItem(year); yearCombo.addActionListener(yearListener); datePanel.add(yearCombo); return panel; } private JTextPane calendarDisplay() { JTextPane pane = new JTextPane(); // Settings ROWS+1 to compensate for weekday name titles GridLayout grid = new GridLayout(BasicCalendar.ROWS+1, BasicCalendar.COLUMNS); pane.setLayout(grid); String weekDayArray[] = DateAD.weekDayNamesAsArray(); for (String d : weekDayArray) { weekDayText = new JTextArea(1, 2); weekDayText.setText(d.substring(0,1)); pane.add(weekDayText); } for (int row[] : cal.getCalendarArray()) { for (int calDay : row) { dayText = new JTextArea(1, 2); dayText.setText(Integer.toString(calDay)); dayText.setEditable(false); if (calDay == 0) { dayText.setVisible(false); } pane.add(dayText); } } return pane; } private JPanel dateDisplay() { JPanel panel = new JPanel(); dateStringTextArea = new JTextArea(); dateStringTextArea.setText(date.toString()); dateStringTextArea.setEditable(false); panel.add(dateStringTextArea); return panel; } private void updateCalendar() { date = new DateAD(day,month,year); createCalendar(date); cal = new BasicCalendar(month, year); datePickerPanel = datePicker(); calendarPanel = calendarDisplay(); dateDisplayPanel = dateDisplay(); mainFrame.removeAll(); mainFrame.add(datePickerPanel, BorderLayout.NORTH); mainFrame.add(calendarPanel, BorderLayout.CENTER); mainFrame.add(dateDisplayPanel, BorderLayout.SOUTH); mainFrame.revalidate(); } private ActionListener dayListener = new ActionListener() { @Override public void actionPerformed (ActionEvent e) { try { short actionCommand = Short.valueOf(e.getActionCommand()); if (actionCommand &gt;= (short)1) { dayTextField.setText(String.valueOf(actionCommand)); } else { throw new NumberFormatException(); } } catch (NumberFormatException inputError) { System.out.println(inputError); dayTextField.setText("1"); } day = Short.parseShort(dayTextField.getText()); updateCalendar(); } }; private ActionListener monthListener = new ActionListener() { @Override public void actionPerformed (ActionEvent e) { String actionCommand = e.getActionCommand(); if ("comboBoxChanged".equals(actionCommand)) { month = DateAD.getMonthNumberFromLiteral( (String)monthCombo.getSelectedItem()); updateCalendar(); } } }; private ActionListener yearListener = new ActionListener() { @Override public void actionPerformed (ActionEvent e) { String actionCommand = e.getActionCommand(); if ("comboBoxChanged".equals(actionCommand)) { year = (short)yearCombo.getSelectedItem(); updateCalendar(); } } }; } 
Full code posted in my other reply, I have another class called CalendarViewer which calls: package p4; import javax.swing.JFrame; /** * This program calls the CalendarFrame */ public class CalendarViewer { public static void main(String[] args) { JFrame frame = new CalendarFrame(); frame.setTitle(frame.getTitle()); frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); frame.setVisible(true); } }
whoops, I left out a line. I put it in. Thanks!
I still can't figure out what those 3 integers are. In your description, can you add the first example for each value you describe? For example: &gt; The first line of the text file contains a single integer. (eg: "2") ... &gt; Each test case starts with 3 integers, the first (eg: "???") is the number of state for the automaton, next is the number of symbols in the alphabet (eg: "???") and then the number of final states (eg: "???").
Yep, just did a POS + Inventory tracking with JavaFX, more or less I was forced into it because of the better WebView engine
C# and Java are incredibly close. What in particular are you having issues with?
Thanks for the post, I was wondering where all those hits were coming from on my lambda tutorial page!
From what I understand, it wouldn't be truly asynchronous, but it wouldn't be on a thread that handles requests on the Play server. Is this correct?
If the values of the bean aren't known ahead of time, you can use reflection to do it.
Take a look at [this ancient document](https://www.cs.cmu.edu/~mjs/121/Java4Python.pdf). I too am interested in Java. However, not so much because I want to become an expert with Java, but because more advanced material about algorithms and data structures seem to use Java more frequently than the Python I am more comfortable with. (Plus, I've run across a bit of Scala in machine learning applications) A lot of material introducing Java can be pretty frustrating when it glosses over explaining what the boiler plate is doing, but has tedious explanations about things like loops. Obviously learning about control structures is more fundamental to a beginner building a foundation, but I think you're coming from the same place as me. Let me know if you find other great resources that are relatively explicit about the superficial stuff, but also assume that you have a grasp of some basic patterns.
&gt; public String getSentence() { &gt; return new String("On the 23rd of November, " + this.name + " " + this.mname + " " + this.lname + " decided that it would be a fine day to walk down to the market."); &gt; } Omg I feel so stupid I never thought of this. I guess I over complicated things in my head. This would work just fine I believe. Let me ask you something though. I have a helper for my controller so when I call my values in my jsps I do it like this ${helper.data.name} So in order to echo the values in this sentence in my jsps how would I call the method? Edit: spelling
What framework are you writing your code / app in? 
Netbeans IDE 7.3.1 with Tomcat
What do you mean by asynchronous database library? Database operations on the server side are usually bound to a socket connection and are happening in the same thread that is handling the socket connection. For a database, this is the best option to keep things simple and deterministic. During the operation, the client can not use the connection for another operation.
I assume he means the user doesn't need to wait for a response. ...in which case, database library isn't relevant, just need to to have thread or actor handling it
Define "garbage"? Base 64 is an algorithm that encodes bytes into ASCII characters. It does not convert Strings. So to Base 64 encode a String, you first have to encode it into bytes, and to decode Base64 into a String, you first have to decode it to bytes and then convert those bytes to a String. If you put the bytes (not as a String) of the XML document into a Base64 encoder, and you convert the Base64 data back into bytes (not into a String), there is no way you'd have corruption. I'd guess the problem you're having is with converting bytes to chars and vice versa, not with Base64.
Web facing interfaces should never have default username/password logins even if not enabled by default. I have seen the migration with routers the first I owned had default username/password, after a couple of hackers exploited that every new router came an individual default password. Having users enter a sane password is harder, even applications checking for password "strength" can only force limited deviations from "password" when the user is lazy enough.
I haven't used Netbeans so I'm not familiar with the syntax, but my guess is that it should just be ${helper.data.getSentence()}. Maybe someone with Netbeans experience can chime in, I'm sure it's something simple.
You should check out Kotlin, it's a jvm language from intellij with almost every feature you wish java had. 
interrupted exception :x
Netbeans is an IDE, Tomcat a server - neither of them is a framework. I guess what /u/ejmw was asking about is that you use JSF (1). &gt; So in order to echo the values in this sentence in my jsps how would I call the method? Probably `${helper.data.sentence}` or `${helper.data.allValues}` - depending on how you name your method. Read up on how bean properties are called, and the naming conventions of it. 
There's a discussion about this [here](http://www.reddit.com/r/java/comments/1qwedf/til_oracle_changed_the_internal_string/) which references the larger [OP](http://www.reddit.com/r/programming/comments/1qw73v/til_oracle_changed_the_internal_string/)
Ah, yes, that's a tricky one. As a "supervisor" myself I understand, you can't have everyone using their own pet JVM language.
I second OPs reply, the java situation is a bit different than python. Please read a beginner's book first, with Java (at least IMO) it helps a lot. I read through beginning java 7 (Ivor Horton) and now I read effective java alongside working on projects.
I believe it's not just the javadoc that warn of this, the methods themselves where no charset is specified are now marked as deprecated and so should trigger a compiler warning.
no
That worked I was using just the name of the method without the () behind it and it wasn't working. However now the three values are being returned as null so this is what displays These are the values, null null null.
Try http://errai.github.io/ - easy and rich htm5 web application development.
bulshit! It's a big company. They have suck-ass shiet and they have pretty cool stuff. They have cheap-ass sales droids and they have some of the finest engineers. And probably pretty much everything in between...
That's not helpful. Would you care to explain?
To expand on /u/TheHorribleTruth, you would benefit a lot from a TAFE bridging course into a software engineering degree, assuming you can't get in right away, during which you may be able to do some small part time projects. It would also be a good idea to put some sort of portfolio together to demonstrate your knowledge to potential employers.
Works like a charm now! Thank you so much for your help this had been bothering me for days, wish I could give you more upvotes :)
I won't be doing any further schooling due to personal reasons but I am willing to learn as much as I can on the internet through tutorials and books. I am even considering looking up some of the curriculum of these courses and learn them myself. I do appreciate the feedback but I don't think you quite understand that the businesses I want to make programs for a small and old fashioned in the way they do things and most don't understand how this stuff works so I will have that advantage of explaining this to them and showing them what computers are capable of and what I can program for them. They will have minimal knowledge of this industry. Also this is a hobby, not a business. This is something I will do to give myself experience in this area and thus the reason for my low price. The applications I want to develop aren't going to be large. They will be basic because these small businesses don't need anything complex. TheHorribleTruth (I love the name) thinks I am trying to start a software company to create large applications for big expanding businesses, something that really does take alot of resources, time and staff. I live in a small working town with lots of local small industrial businesses in Australia and I will not be targeting major businesses and I will be prepared when I present my service. I know I'll need at least a year or two to prepare and teach myself everything I need to learn. thank you for your feedback even though you mistaken this hobby idea as trying to start my own software company. I am still confident in myself and I will give it my best shot. If you guys have any questions please ask
I currently have a full time job and this will be something I will do in my spare time as a hobby.
I second this, it is required reading at my company. I found it very helpful even with over 15 years of Java coding experience. Also check out "Effective Java". 
If you're talking about a console app, try this: BufferedReader r = new BufferedReader(new InputStreamReader(System.in)); String userinput = r.readLine(); System.out.println("You sent: " + userinput + "!"); Otherwise, with swing, you'll want a [JTextArea](http://download.java.net/jdk8/docs/api/javax/swing/JTextArea.html)
Ah mid game of lol, back soon with info!!
If you are using the spring framework, you can annotate a service method with @async
Ok so from what I had seen previously, the android equivalent of JTextArea is TextView, except I am unsure how to make this a box on the screen. I feel like it's something stupidly small, but I am currently using a fullscreen view. Any thoughts ?
You'll want to create an EditText if you're on android, try [this](http://www.mkyong.com/android/android-textbox-example/) tutorial out.
Use neither - get out while you still can
Yes, in that either is capable of sapping your will to live, replacing any hope and joy you might have known with abject horror, darkness, and despair. Not to over state the point, but they really are both rather bad. If you really are forced to choose, I'd say that Sharepoint is marginally less of a Lovecraftian horror. Still and all, best to avoid both.
is this 1997?
It shouldn't be possible (without if statements) since months vary in time. The day could be done but not the month. If you are allowed to use switch case then you can do it over the month where every case is translated and added to your day count. (case 1: day+=31, case 2: day+=(31+28) etc) After that simply multiply by 24*60. Edit: There is a class that handles time from 1970 in seconds (Can't remember name but should be easy to find). It's probably possible to get minutes into the current year at the time when the user runs the program. But that would mean it would only work for the current date and not for any input.
This is exactly what I think is happening.
I can confirm this.
http://docs.oracle.com/javase/tutorial/deployment/jar/build.html Use the above for generating a jar via command line or resort to an IDE such as Intellij, Eclipse, or Netbeans.
Any suggestions on best RAD platforms?
Do you know of any good tutorials/examples on how to do this?
I hate both of these platforms.
Ruby
Share point isn't as bad as lotus. But since this is a java discussion, I don't even know why you think share point is an option 
Pretty cool. I dont the regular stax library has optimize memmory or speed features. 
Yes it is. But I must recommend that you go for the 2nd edition anyway. It was written because the language changed enough for it to make sense, it's not one of those books that are only slightly altered in new editions. For example it covers generics very well and it's one of my favorite chapters and I don't want you to miss out on that :-)
OK, I saw in another post that you think you were using the wrong charset and are now using urlencoding. This got me curious. Are you sending this in an URL parameter? 
If you are using the Java EE framework, you can annotate a service method with `@Asynchronous`.
Use `@Asynchronous` and Futures. If you want to do asynchronous reads for rendering HTTP then you'll have to think about how to organize your page. If you render it top down, then at some point the data has to be there. If it isn't you'll block anyway. Alternatively you can do a bunch of AJAX requests that are handled asynchronously on the server side, or do something with SSE (see e.g. http://balusc.blogspot.com/2013/07/serving-multiple-images-from-database.html) or web sockets, and then display content on the user's page as it becomes available.
Do not forget that [the same thing](http://plugins.jetbrains.com/plugin/?idea&amp;pluginId=7125) can be done in IntelliJ.
I use [JNA](https://github.com/twall/jna) (JNI without C). A bit slower but much nicer to write.
For day job it's used to do socket communication and stuff like that for integrations. It's a last resort 
Depends upon the task at hand. SharePoint exposes a web services API, and Java obviously can do an fine job using web services, so that might be suitable. Not what I'd call RAD, though. And for my part, neither is an option.
I use it to do some DLL interrupts. 
I think so. Essentially, the problem involves calculating the number of minutes between two points in time. The solution doesn't require any conditions because it doesn't matter how many days are in a month, or if this year is a leap year, etc. All you need to know is a minute is 60 seconds, or 60 * 1000 milliseconds. For example, this code prints the time difference, in seconds, between right now and the start of this year: Calendar startOfYear = new GregorianCalendar(2013, Calendar.JANUARY, 1,0,0); Calendar now = new GregorianCalendar(); long seconds = (now.getTimeInMillis() - startOfYear.getTimeInMillis())/(1000*60); System.out.println("Seconds since start of year: " + seconds);
What do you want to accomplish, and with what ingredients?
&gt; Iโm not a big fan of JavaFX: version 1 was just a huge failure, and investing in fat-client architecture in 2013 is either because you have very specific needs or are completely out of your mind. Well, we are doing fat clients in 2013, just not in Java, because Oracle stubbornly ignores mobile platforms.
Why do you need a sample project? JFX 2 is just Java. The usual project structure should be fine.
Those look informative, but all the sample code is in Scala. Is there a version in Java? I can't find one.
Your tagline should use 'peace', not 'piece'.
I doubt Oracle ignores mobile platforms, after all they have their own (Java ME) but they (really Sun) got beat when they failed to make ME a complete stack to compete with iOS like Google did with Android. And Sun also failed to capitalize in anyway with Android and all that is left is for Oracle to have happy-lawsuit-funtime with Android. What magical thing do you think Oracle could do in the mobile space? They tried to add Java to iOS for years but Apple wouldn't have it. They finally have a limited JVM on iOS with ADF mobile because Apple opened things up a tiny bit however they still wouldn't be allowed to have full Java apps for iOS. 
While I like JavaFX and think that it is a step in the right direction for GUI development in java, it still feels pretty immature. What's worse, it looks like oracle isn't planning on pushing in too much support for it. For example, look at the FXML support. It shoots to support things like CSS and to push towards a more web like development cycle (a good thing IMO) but at the same time, it has limited CSS support. You just can escape from mixing style with layout with functionality (a shame). An example of this is just trying to set component width. It can't be done in CSS. Sure, you can change the font, setup the border, and do some other javafx specific changes, but you can't define the width of an element.
&gt; What magical thing do you think Oracle could do in the mobile space? What about providing native code compilers that target iOS and WP8? As for Android, settle things properly with Google. This is why I said they are stubborn. The community is forced to write their own native code compilers, see RoboVM, because Oracle, like Sun, religiously refuses to do so.
Haven't used it directly for a long time, however a lot of libraries use it to either expose a java API for an existing C library or to give access to features the JRE does not cover (SWT, JOGL, LWJGL). There are a few alternatives that dont involve writing C code. * JNA lets you describe the native interface purely with java classes and interfaces and generates the native code on the fly, however doing so requires some basic knowledge about C calling conventions and structures to get it right and is limited to C interface (no C++). * SWIG supports multiple languages to C /C++ including Java and generates the interface from existing C/C++ headers.
Well, no ... but I could. That would be HTTP GET, and I'm using HTTP POST (there is a length limitation introduced by using HTTP GET). HTTP POST data has several parameters, so the post content after the HTTP headers looks something like the following (values within &lt;&gt; are provided by variables): username=&lt;userName&gt;&amp;updateItem=&lt;itemToUpdate&gt;&amp;xmlData=&lt;urlEncodedXmlData&gt;
I'm a little confused by the use of the term 'fat-client'. As I understand it, 'fat-client' has more to do with the nature of an application's function than the manner in which it interacts with the user. JavaFX is a UI framework meant to replace the ancient Swing, and could be used in either a fat-client or thin-client implementation. I will heartily agree, however, that Oracle's examples are fucking awful.
I can't find the corresponding page for Java in Play documentation, but since this is Akka concepts you can take a look at [Akka Dispatchers documentation](http://doc.akka.io/docs/akka/snapshot/java/dispatchers.html).
Okay, neat problem! I'll try and walk you through my mindset when I tackle a problem like this, so that you can learn how to approach these problems yourself in the future. The moment you said a jumper bug, I start asking myself questions. My first was, is it an unbounded or bounded grid? But, an unbounded grid wouldn't make the bug jump anyhow, so that question was immediately answered. The next part actually doesn't involve any coding at all. I start asking myself, can I mathematically define where the bug needs to land on the other side of the grid? In other words, we need to come up with a formula that will calculate what coordinate the bug needs to land on when it wraps around. I suggest, grab a sheet of paper and a pencil, and draw a grid of a sensible size, maybe 5x5. Label the coordinate point of every square, so that the top left square is `(0,0)`, and the one to its right is `(0,1)`, and so on. This helps us visualize the grid. Next, draw a hypothetical bug, and place it in a location such that, when it jumps, it'll need to wrap around. Using the information we have, such as the bugs current location (Which is a `Location` object, which means we can pull the `x` and `y` components from it). We also know things like how many squares the bug would hypothetically jump. We also know how big the grid is, by calling the `getNumRows` and `getNumCols` methods defined in the [`BoundedGrid` class](http://www.horstmann.com/gridworld/javadoc/info/gridworld/grid/BoundedGrid.html#getNumRows()). Make sure to check every possible case, such as wrapping around after jumping too far up (so we end up at the bottom), wrapping around after jumping too far left (so we end up right), and so on. So, you'll manually calculate this out, so that if the bug is at `(3,0)` (Somewhere near the middle of the top of the grid), and it tries to jump upwards 2 spaces, then the "hypothetical" location it'll end up at is `(3,-2)`, which isn't a defined location on our grid. This means we have to wrap somehow. If we draw it out, our bug should really land on `(3,3)`, because our grid is 5x5, and jumping two squares up against the top of the grid wrapped around should take us two squares up from the bottom of it. Play with the numbers, and see if using the numbers you're provided, you can produce the result of `(3,3)` (Our intended jump position) given the hypothetical location of `(3,-2)` (Our "hypothetical", non-wrapped position). Once you've got it so that you can consistently predict where the bug *should* land regardless of which direction it jumps (Up, down, left, right, diagonals), we need to generalize the formula to be applicable to any set of problems. In other words, in the previous example, we had two concrete "magic" numbers, 2 and 5, respectively representing the squares a bug jumps, and how tall and how wide the grid is. To generalize this, we need variables to represent these magic numbers, so that regardless of whether we change the jump length, or the grid size, our formula to calculate wraparound position still works. Once you've figured out, and tested your formula with generalized jump length and grid sizes (Choose random numbers and plug them into the formula, and see if it works. Try things like a 3 square jump with a 2x2 grid.), we can finally implement it into our code. Refer to the [GridWorld API](http://www.horstmann.com/gridworld/javadoc/info/gridworld/grid/BoundedGrid.html) once again to find the methods you accomplish what you need. As usual, let me know if something doesn't really make sense or I went too fast and skipped over bits. Let me know if you have any questions!
...I run JavaFX stuff in Eclipse all the time, including the ensemble examples? I'm a beginner, but I'm not really sure what the problem is?
Great job! Glad you figured it out so quick.
This was a great talk that Joshua Bloch gave: [Effective Java - Still Effective After All These Years](http://www.youtube.com/watch?v=V1vQf4qyMXg) I considered it a rather nice supplement to the book.
Declare a counter before the loop then increment inside the loop. Then it'll "count" the times the loop ran.
I recently used it to access setuid, as well as talk unix sockets. I don't mind JNI at all. I prefer it to interfacing with native code in perl or python. 
You could add the following declaration between lines 2 and 3: int count = 0; Then after line 6 add: count++; After line 9 add: System.out.println("Failed attempts: " + count); A couple of other little things: You should reverse lines 7 and 8. As you have it written now you will test one number, but then print another one. A common format for these types of loops is to repeat the statement just before the loop (Your line 4) as the last statement in the loop so that it resets for the next pass through the loop. Also, the message in line 8 is not accurate because you will only be printing numbers that are NOT prime. You should probably move it from its current location to after the } on line 9. 
Line #2 should return true ;)
Thanks for the correction :)
You can use groovys [JsonSlurper](http://groovy.codehaus.org/gapi/groovy/json/JsonSlurper.html) from java code if you want to process JSON
The way it is implemented means that you can very quickly check whether an item is not in a set. However, you can get false positives as to whether an item is in a set. Thus you *cannot* guarantee that an item will be in the set in a bloom filter, but you *can* guarantee that it will not be.
The bracket on line 9 is ending the main method, the loop doesn't have any brackets. 
for yaml look for yamlbean: http://yamlbeans.sourceforge.net/ for json look for jackson: http://jackson.codehaus.org/ anyway, have you consider xml ? It already lost its cool factor but it remains the most stable and well supported data serialization format in Java. Several high performance standard exists: Woodstox (STAX), SAX, JAXB (eclipse Moxy), DOM. You can even validate your xml data using XSD and also allow your IDE to highlight for error/type mismatch in your xml document. I've tried YAML and JSON, but for some serious project I always return to XML. 
Well, I can't really help debugging so far, because I don't know what Calendar API you're using. Google didn't help with that either. I'd like to point out a few things though that I gathered while skimming through your code: frame.setTitle(frame.getTitle()); This is redundant, since you're setting the title in your CalendarFrame's class constructor method: setTitle(TITLE); Besides that: * since your window is just a container for the rest I'd suggest using *JPanel* as your base class for your *CalendarFrame* * only use BorderLayout for simple layout tasks; for everything else I would recommend using [GroupLayout](http://docs.oracle.com/javase/tutorial/uiswing/layout/group.html) to nicely align all controls; *GridbagLayout* is pretty hard to get right, too, and IMHO a little overkill for what you're trying to accomplish * unless you're using this as a practice for teaching yourself Swing development I'd suggest to look into the [SwingX project](https://swingx.java.net/), which has a ready-made date picker control If you can tell me which framework includes the *BasicCalendar* and *DateAD* class, I'll be able to help you further!
Just noticed that this will return true for all even numbers. You need a check for (i % 2) == 0.
I used it in my masters research to extend a software transactional memory library written in Java to a hardware-based one (to run on a simulated hardware at the time). Basically begin_txn() and end_txn() would call into c functions, which in turn would have inline assembly code to force the compiler to emit specific transactional ISA extensions. EDIT: didn't notice the op asking people who've used it regularly. I acknowledge that my case is rather esoteric. 
Ever hear of something called Google? You're even lazier than I was in school. You've got upper management written all of you.
This is called the Sieve of Eratosthenes for those who are interested.
I kinda disagree on it being "easy to use". Sure, standard row &gt; object mappings and simple 1:N relations are relatively simple to create, but for more complex stuff it's easy to run into brick walls that can be quite a challenge to scale. I would personally recommend that for a school project you don't use an ORM at all. It's good practice to learn SQL and you don't 'waste' valuable time learning an ORM (better to do that later when you're actually going to use it professionally). If you really want to go for an ORM I can recommend http://ormlite.com/. It is annotation based and very simple to set up and use.
I used it to interface with a finger print scanner that only had .dll drivers. IMHO that's the only type of projects it should be used in; it removes any form of cross-platform compatibility and is inherently unsafe.
True that added complexity in the project will require proper design, but that's true for virtually every large/complex application. For the project /u/Baggerwiet is doing, it doesn't sound like he'll reach that complexity. Now using JDBC directly is probably what was expected of him for the project. If we relate this back to your original argument though, the SQL statements can get *very* complex with multiple joins, inner selects, etc. I'd personally recommend going the direct JDBC route for experience, but I didn't mention it in my initial post since it wasn't what was asked.
4 would return true in the code. You need the n == 2 check for the prime 2 but you also need to exclude other even numbers by returning false if n % 2 == 0.
It's a typical thing from some outsourcing countries that somehow developers are required to blog about stuff they know. And by doing this they just show how little they really know. If you think you're going to impress anyone by regurgitating something that can be found on the first page of any Java tutorial you're going to be in for a surprise. I'd never hire someone who had recently written a piece like this.
I don't disagree with what you're saying perse; but writing "complex" joins yourself isn't all that complex if you know SQL well enough. But to be able to debug whatever Hibernate is producing you will need that level of SQL knowledge anyway. I'm not against Hibernate at all (ORMs are great tools), I am just afraid they'll run into issues caused by a lack of knowledge of both Hibernate and SQL.
There are certain platform-specific functionalities that don't have mature Java libraries. Windows SMB support for example.
I see that, didn't think about the second (loop) part of the code. My bad, sorry.