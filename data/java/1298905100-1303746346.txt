One of the first scripting languages for the JVM - BeanShell, dormant since 2005 - is back again...
Don't say that, I'm still trying to strip the last of this garbage out of a webapp I inherited. BeanShell is EVIL!
* Create interfaces that specify default behavior for methods that are unimplemented by the implementing class WTF?
BeanShell as a Java REPL is great. I use it all the time when I want to prototype some code, or examine the behaviour of a method or class. I'm sorry you've had to inherit a project where someone used it poorly, but that's not BeanShell's fault.
The default behavior for an interface points to a static method that provides a default behavior for it. The purpose of this is to allow adding new methods into an interface without having to go back and change legacy code to implement the new method(s) if they are not required. Normally for interfaces that are used in a lot of legacy code that you are not allowed to change, you have to create "versions" of the interface to add new methods. So I would have "MyInterface", then "MyInterfaceV2" which extends MyInterface and adds whatever methods I need. The "default" implementation for a method in an interface makes it so you don't need to create multiple versions of the same interface. I will agree though, it does seem a bit odd and can be used the wrong way, but it has its uses.
BeanShell has its place, but Groovy is even better as a Java REPL.
Thanks for this. It's going straight to the offshore team!
The first assertion isn't completely inappropriate -- it's a sanity check. It's also testing that a file was actually written -- `output.content()` could still return the correct String without writing to disk.
Can anyone tell/link me to the advantages of glassfish over jboss?
At least one advantage: it has rather nice administrative tools (both command-line and graphical). It feels much more polished too.
Sleek, but no real killer-feature versus google+regular javadoc...
A fool with a tool is still a fool ;) Maybe that's not BeanShell but the usage which is evil? And btw. i often heard the sentence "jsp is evil" - mostly when there are really many jsp files involved and the tomcat just died with "out of permspace"..
Can you enlightment us with an example? I am thinking about integrating a console in our webapp and I am looking for pros/cons.
Can someone explain this to me. I get the idea of teaching fundamentals but when I was a a CS major (graduated 2002) for the most part we did stupid stuff like this and 9 times out of 10 we were just designing our own data structures (lists, stacks, queues, trees, etc). Towards the end of my education one of my professors taught us some of the STL and how to use its data structures and I was like WTF. Why did we write all those crappy ones ourselves? Today, I'm paid to code Java among other things and there isn't a whole lot of reason to roll my own data structure. To keep this a tiny bit on topic I'm pretty sure we could get close to GuyWithLag's 14 lines of perl just by using a java.util.Set which enforces uniqueness. Edit: I guess my rant is: If you have to start teaching something simple, why not make it something interesting and more "real world" than a data structure which, once out in the real world, will be either built-in or an easy library away for just about any language?
I don't like google results because docs for Java 1.4.2 (!) are always on top
No, it's impossible.
In my situation the application was pretty much written without any sort of objects. A flood of JSP, and BeanShell commands to manage connections to DB servers and the mainframe. On top of that they had bat files to merge and move these BeanShell files. It really is a nightmare to backtrace. I would love to see an example where it is used correctly so I can get this awful taste out of my mouth. 
I don't see the point.
This posting describes how we used Lucene beyond standard full-text search including index switching and using it as a simple NoSQL database.
I ended up finding a fix to this. Yeah, I don't really know what the idea is either. It all seems so ridiculous to me, and I don't really understand it either. There are other ways I wanted to code this, like using lists or things like that, but I guess understanding specific things is sort of ok. Maybe the idea is to be able to use our own logic to come up with an answer, re-inventing the wheel to know how everything came about. That's about the best answer I can think of, but that still may not be the best teaching.method();
I ended up finding a fix to this. Yeah, I don't really know what the idea is either. It all seems so ridiculous to me, and I don't really understand it either. There are other ways I wanted to code this, like using lists or things like that, but I guess understanding specific things is sort of ok. Maybe the idea is to be able to use our own logic to come up with an answer, re-inventing the wheel to know how everything came about. That's about the best answer I can think of, but that still may not be the best teaching.method();
I ended up finding a fix to this. Yeah, I don't really know what the idea is either. It all seems so ridiculous to me, and I don't really understand it either. There are other ways I wanted to code this, like using lists or things like that, but I guess understanding specific things is sort of ok. Maybe the idea is to be able to use our own logic to come up with an answer, re-inventing the wheel to know how everything came about. That's about the best answer I can think of, but that still may not be the best teaching.method();
Compare [Kiwidoc ArrayList Javadoc](http://www.kiwidoc.com/java/l/p/java/j2se/1.6/p/java.util/c/ArrayList#) to [Oracle ArrayList Javadoc](http://download.oracle.com/javase/6/docs/api/java/util/ArrayList.html). Good job, now make ~~autocomplete in the search box and~~ an Eclipse plugin :)
Excuse my ignorance, but why would I want Java certification? Are there jobs out there that actually require it? I was just job hunting a month ago and was able to find a multiple Java jobs without any type of certification. Sure, it will probably teach you a lot about various aspects of the language, but most google searches or reading around a few forums can answer almost any question I've had.
I am certified, did it way back when for 1.4 and was thinking about doing it for 1.6, and having been working with Java for a while now, I can tell you that the certification is worthless. What they do is try to trick you with worthless stuff. Seriously, who needs to be able to calculate how many objects are eligible for GC in Java? I already got the book for the refresher, but I decided that it's just a cash cow.
This is not a comment for or against certifications, but some organizations/companies have policies that require their staff to be certified. Plus for some programmers it is a way to gain more self confidence. Having said that some of the current Java certifications can be acquired even by people who don't know a damn about Java or architecture. And I believe requiring people to attend a 4 day course isn't gonna make things any better.
If this is a uni course then try finding a masters student who is sympathetic. It may be you just haven't gotten OO yet and a few hours talking to someone who has been in the same situation will turn it around. I'm guessing your at the start of the year and you have a week before you can pull out with no ramifications. (I'll also guess you are in NZ like me). If true then 6 months is a long time, stick with it and it will get easier.
I didn't have a Java background so I got Java Programmer certified. If I had to take a $2000 4 day course instead of reading a $30 SCJP study guide then I probably wouldn't have bothered. It might have helped me get a job. I work with Java now. But I don't know whether it helped.
Specifically, which skills are giving you troubles? I would not give it up. I really struggled until I started to build methods and classes. That is when it just clicked. I might be able to point you to some good resources.
I agree with what others said, but also have my few cents to add. I've been a TA in several undergraduate computer science courses, so I at least kinda know what I'm talking about. I've at a university in the states, so if you're not in the US, this advice might not be as applicable. First, I strongly suggest talking to the professor or TA and flat-out saying that you're lost, disappointed with how you're doing, and that you want help doing better. As a TA, I always appreciated when students who didn't understand the material would come to me and want to learn. Secondly, I'd suggest re-reading the relevant portions of your textbook, starting way at the beginning, even if it seems insultingly simple. Again, as a TA, it was much easier to help people who put in the effort to understand the material, even if they weren't able to fully understand it themselves. Finally, if you are able to pin down specific examples of what you don't understand, ask questions to help you improve. "I don't understand Java" is an almost impossible problem to address as a TA, but "I can't wrap my head around the difference between objects and classes" is a far more concrete problem. So yes, take advantage of all the support options you have. Most of us enjoy helping students and want to see everyone succeed to the best of their ability. You can do this!
Just my two cents, and take it as being worth about that much. But... If you can drop this class and take it again next semester or even next year, then do that. In that time, hit the online tutorials and books and whatnot, and study hard at your OWN pace. Then when you come back to the class later, you will be much more prepared. OO really is a very different way of thinking about programming, but, if you are anything like me, you will struggle with it until suddenly something goes "click" in your head, and it all starts to come together really quickly. Like that speck of dust or debris at the center of a snowflake, something - no matter how trivial - will suddenly make sense, and upon that speck your crystal will start growing. You may just need some time while you wait for that "click". And with enough exposure to the subject, it will eventually happen. 
With the right spatula, yes. I recommend [Spatula City!](http://www.youtube.com/watch?v=2XbCWmY0eqY) Hrmph! Sorry. Couldn't resist.
HTML and css aren't languages. And javascript isn't much more of one. Forget that you even know those.
html is equivalent to regular expressions. any program you can represent with a finite state machine you can represent as a set of pages, the links being the transitions between states. fwiw. 
I've worked with Java, professionally, and have worked with others who did. None of us were certified. In fact, I don't know if I've met anyone who is. I've never seen certification referenced in a job posting, either.
What is the error saying?
Code example?
You should just be able to access it with getField() or super.getField() if you want to explicitly use the superclass method. If not, post a code example that shows the problem.
HyperText Markup **Language**
If you're looking to improve your understanding of Java, I would recommend taking a look at codingbat.com. this site provides you with various beginner to intermediate problems to solve. Also, for the beginner exercises, you are provided with a solution as well as links to tutorials related to solving the problems.
The guy with all the certs at my office got fired for incompetence.
Don't do what I did, which was to suffer through a class, and still not pass it. Do talk to your TA about your problems, and see if they'll let you sit through the rest of the class, even if you drop the class. That way, you get a practice run on the material, without jepordizing your grade point average. It took me 9 months after my java class before I really understood it. Would have saved me a butt load of pain. 
I'm in the same boat buddy. I have taken four quizes this quarter, and failed them dramatically. Quizes are only 20% of my grade so I'm not too worried. The only thing that can save me right now is to do incredibly well on my next midterm exam. My previous semester with java was a piece of cake and I ranked in the upper devision of my class (86% grade ain't bad). This semester has definitely put me in my place. I say we both listen to these guys and take everything to heart. We can see the greener side as long as we put in the time and effort.
to be turing complete, a language needs to have "if" and "goto". i'll buy hyperlinks as a goto, but i cant think of how html implements "if" without cheating and using javascript.
Right. It's equivalent to a finite state machine. It's not turing complete, it's a regular expression.
Agree with megdo, especially about rereading parts of the book that seem insultingly simple. I'm in my 3rd Java class and when I seem to just not understand something, most of the time it's because I don't understand how a simpler portion of that something works, or the limitations of it, or the sheer power of it. Example: Arrays are easy. I couldn't understand ArrayLists because I didn't understand the List interface. I assumed an ArrayList functioned exactly the same way, but BOY HOWDY are they different. Read up on the List interface, now it's simple.
Claiming JS isn't much more of a language than HTML or CSS is a *terrible* thing to tell a beginning student. No, JS doesn't have strong OO support, but otherwise it is a perfectly valid programming language, used in all kinds of applications. You are either trolling this poor kid or horribly ignorant yourself. It's unbelievable that you've gotten 5 upvotes so far.
You can also (theoretically) earn more money with a certification. Some companies ask the developers to get them in order to place a marker on the product (Microsoft certified), or to get discounts (MSDN). I don't have experience with this, however, since I decided to get a real programming education and passed up the certs. The downside is companies put more weight on certs when hiring developers or engineers.
You forgot about [conditional comments](http://msdn.microsoft.com/en-us/library/ms537512\(v=vs.85\).aspx).
Don't forget, HTML runs on browsers other than internet explorer. I know, hard to believe anyone would use a different browser. :) 
A language, yes. So is English a language. But neither are really programming languages. Javascript, on the other hand, is. HTML comes from SGML, standard general markup language, which was a word processing formatting language.
You can learn that stuff in two weeks if you really want to. Ask your prof./TA like others said and just study a TON. It's possible to pull it off and feel great doing it. If you really think you can't, then do what you have to do.
Autocomplete in the search box is already working. Maybe you have something blocking the JavaScript?
I guess. You could probably whip up a Greasemonkey script to switch it over to the left, pretty quickly.
Look at this package http://code.google.com/p/beanshell2/source/browse/#svn%2Ftrunk%2Fsrc%2Fbsh%2Fservlet
There is no example yet, but it shouldn't be too complicated to set up one from scratch. Register a servlet which evaluates beanshell scripts as templates, sending script output ("bsh.Interperter.setOut()") to HttpServletResponse.getOutputStream(). Choose the name of the to-be-called script depending on HttpServletRequest.getRequestURL().
yeah , what's the error
For beginners, it's maybe good, but for someone doing programming for a living, I agree with [Mr Yegge](http://steve-yegge.blogspot.com/2007/09/ten-tips-for-slightly-less-awful-resume.html). Tip 6.
This is the only reason why I think that certifications still work. Sadly, people pay for them out of their own pocket thinking that they are going to suddenly bypass years of necessary education and experience simply by having a certificate showing that they somewhat know the language. I once knew a guy who worked for Sun, and he was offered the chance to take Java certification. After a few different certs he was a far more confident programmer simply through the formal process of learning this stuff and receiving some sort of validation of his ability to program in Java.
Sorry, but that's so wrong on multiple levels. By your reasoning, everything is equivalent to regular expressions. When I draw a DAG in the sand on the beach, does that mean that the twig and the sand are equivalent to regular expressions?
Considering that Oracle has a healthy sum of money, their leadership could have been very positive. The way doing it right now though, is only making things worse and worse. Suing Google? Kidding me?
 public class A { private String field; public String getField() { return this.field; } } public class B extends A { public void otherMethod() { String s = this.getField(); // works fine } } Works. Is that what you meant?
Is a piece of paper equivalent to the english language? No. HTML Pages as states and links as transitions are clearly a regular language. You can implement tic tac toe just by clicking links. Pages without links are not sufficient. you need some way to reference other states. wikipedia claims this, and i think it's right: A deterministic finite automaton M is a 5-tuple, (Q, Σ, δ, q0, F), consisting of a finite set of states (Q) a finite set of input symbols called the alphabet (Σ) a transition function (δ : Q × Σ → Q) a start state (q0 ∈ Q) a set of accept states (F ⊆ Q) i don't see how sand and a stick meets that requirement. I think a dfa drawn in the sand does, just like a sentence written in the sand is english. Each page is a state. input symbols are the links on a page. transition functions are the href= part. the start state is index.html, or some other well defined page. accept states can be noted however you wish, including &lt;h1&gt;done!&lt;/h1&gt; I don't see what level i'm wrong on, but apparently there are many. could you point out a few? Also, i don't think a DAG can represent a* can it? don't you need a circular reference from state 1 to state 1? The kind specifically prohibited by the acyclic part of DAG?
It was just a joke anyways. He wanted an if statement, so I gave him one. Not that it really matters in the discussion of Java.
All I heard was HERP DERP FAIL. Where's the detail, what do you understand about java so far? Maybe the community can help a friend in need.
bump. definitely in support of tip 6
Honestly I have more trust in Microsoft and .NET, they provide far better direction on their platform than Oracle is currently doing. Sad too because I never thought I'd say something like that. :(
Saying JavaScript doesn't have strong OO support is misleading. JavaScript does not have the concept of class, but has arguably better OO support. And it is in many ways (of course not every way) more sophisticated, more expressive than more 'conventional' languages like Java.
&gt; i don't see how sand and a stick meets that requirement. I think a dfa drawn in the sand does, just like a sentence written in the sand is english. And that's one of the flaws. HTML is nothing else but a language. A markup language. With a browser, that interprets it and provides the possibility to follow links, you can construct automatas. But with my sand figures and the instructions how to interpret them, I can do exactly the same. I could write HTML in the sand and you play the browser, how's that? You're confusing the concept of regular expressions. There is the possibility to evaluate if something is in the language specified by a regular expression. This can be done using automata. And, yes, this can be emulated using web pages and links (among a lot of other things, like sand drawings). To say something is equivalent to regular expressions makes no sense. A regular expression *describes* a (very limited) language. Oh, and sorry for the DAG reference, you're right. I'm currently working on teaching stuff for freshmen and had the wrong things in mind. I meant to draw the automata in the sand, using directed graphs, of course. 
Yea similar to that, except the getField was return an object of type A (I was dealing with a linked list), and I needed an object of type B, I tried casting it and that seemed to work. Thanks for your help!
Thanks for posting the link. I am the author of kiwidoc and would certainly appreciate any feedback. I very recently integrated with uservoice for the feedback mechanism so feel free to leave any feedback/feature request. I am trying to gather requirements for the next iteration. Thanks.
My personal story, I hope this motivate you. I studied electronics engineering in India but I fucking hated it. I decide to switch to CS. Took a JAVA programming class in first semester without any previous coding or programming background. After first month I was sure that I am going to fail this one. The deadline of dropping the class was long gone. I was fucking depressed. Then I contacted my cousin who is a JAVA programmer himself from last 10 years. He suggested me to go over two books. 'Head first JAVA' and 'Core JAVA Vol 1'. Believe me Head first JAVA was the best thing that ever happened to me in my programming career. First of all, the language and structure is designed for the n00b like us. Must read if you want to learn JAVA from scratch. Ok so back to my story. For next 15 days, I read like a freak. 5 hours sleep maximum. No social life at all. I used to read for about 12-14 hours a day. To refresh my mind I used to take small half and hour break after every 2 hours of reading and watch an episode of family guy. I ended up getting B in the class (That is because almost failing grades in first few assignments). But more over, the I got really good jump start in JAVA. Today I am working as a JAVA developer in the financial IT firm. The bottom line is. Put aside the fear of grades or class. Work your ass off on this one. Throw yourself into this. If you take up this challenge and study to LEARN, it will boost your self esteem. You can do it. You are comfortable with JavaScript, that means you know some basic programming. You just need to bend your mind to think in the OO. Buy Head First JAVA, use good tools and IDE, go through the online tutorials and HAVE FUN. 
If its OO support is arguably better, I haven't heard that argument. :) At any rate, you may be right. I'm no JS expert. I was just shocked at the misinformation I was responding to.
Better direction? "Accumulate features until an event horizon forms"?
&gt; I could write HTML in the sand and you play the browser, how's that? Exactly! We agree, computation doesn't really have anything to do with electronic computers. We write sentences in various languages that have semantics that we could map to physical process, if we feel like it. Any computational process you can describe with a regular expression, i can describe with a set of pages. any computational process i can describe with a set of pages, you can describe with a regular expression. the are computationally equivalent. It doesn't matter if we have to use a browser to evaluate the computation, or dominoes or simply our imagination. We can show that the language HTML can represent concatenation, repetition and alternation, therefore has all the power of the regular expression language. Further, we can show it provides no counters or stacks or any features that could be used as counters or stacks, so it is no more powerful than the regular expression language. Thanks for taking the time to reply, good luck with class. 
You might be able to use generics. class A&lt;T&gt; { private T field; public T getField() { return this.field; } } class B extends A&lt;B&gt; { public void otherMethod() { B b = getField(); } }
You definitely got the more important part - that JavaScript is a serious programming language. deserve some upvote
I wish recursion would click like that for me. . .
The problem is, regular expressions are not computational processes. Regular expressions *describe regular languages*. You can not describe a computational process with regular expressions. And, especially, regular expressions are not problems like in complexity theory. The reduction technique you're using applies for problems like SAT, 3-COLOR, KNAPSACK, etc. Language theory, where regular expressions belong in, is a different thing. What you showed, is that the complexity of validating if a word is in a language described through a regular expression is not more complex than than having pages and following links. And, just for the record, I'm *teaching* the freshmen. Normally, I'm teaching much more advanced courses, but the freshmen courses are passed around every other year. My own CS courses are a long time ago, but this is essential stuff. You don't forget it.
Thanks for the codingbat site. This is great. I will share it with my students.
Article seems to be gone now. Here's a [cached version](http://74.6.117.48/search/srpcache?ei=UTF-8&amp;p=http%3A%2F%2Fwww.readwriteweb.com%2Farchives%2Fsurvey_finds_many_in_java_community_worried_about.php&amp;fr=yfp-t-701&amp;u=http://cc.bingj.com/cache.aspx?q=http%3a%2f%2fwww.readwriteweb.com%2farchives%2fsurvey_finds_many_in_java_community_worried_about.php&amp;d=412795865130&amp;mkt=en-US&amp;setlang=en-US&amp;w=cf3becc4,e2935abc&amp;icp=1&amp;.intl=us&amp;sig=EaJFLHlM.uuFlGG8CVfddQ--). Relevant info: The survey, which had over 600 [JavaOne] respondents, asked a number of questions including this key one: under Oracle, will open source projects thrive, hang on, or die? 46% said they anticipate open source would barely hang on under Oracle's ownership. 19% predicted that open source will die. Open source under Oracle includes not just Java, of course, but MySQL as well. 56% said they were concerned about Oracle's lawsuit against Google, saying they felt that the lawsuit was bad for Java. 13% said they felt the lawsuit would be a good thing for Java.A
I used to have a lot of problems understanding recursion. I highly recommend you look at learning a little bit of scheme, first chapter of [SICP](http://mitpress.mit.edu/sicp/) or read [The Little Schemer](http://www.ccs.neu.edu/home/matthias/BTLS/). It has imporved my understanding many times over.
&gt; India ... JAVA I'm sorry, I just had to laugh. You might be an excelent programmer still :) 
Thanks, I will give it a read. I am in my second year of teaching AP Comp Sci. I was pressed into service. :\ I love teaching it. I think that I do a pretty good job teaching most OOP concepts. Recursion is the one that gets me. I can do it and work with it, I just have troubles explaining it and getting kids to understand it.
wtf?
My impression was, though, that they were simply following through with what Sun would have done eventually. While Oracle certainly had the right to not sue Google (and I think that's a whole other discussion), I think it's unfair to cry foul on Oracle as an originator of the lawsuit.
What? I deal with people who may go so far as to actively hate working on computers and they get warm fuzzies around .exe files. Executing a .jar (oh god file associations what is javaw.exe how did i get here i am not good with computers) is less familiar to them than running a .exe. From a technical perspective, it's a stupid thing. From a user's perspective, it's something that developers may or may not have to deal with.
What's your code look like? It worked for me: package com.example; import org.junit.After; import org.junit.Test; public class ExampleTest { @After public void tearDown() { System.out.println("Tearing down"); } @Test(timeout = 1) public void testTimeout() throws Exception { Thread.sleep(2); } }
The impression at Sun was that Google was intentionally trying to fuck Sun over because they knew that Sun couldn't afford to really fight back. They were quite happy about Oracle suing.
As noted by James Gosling (or maybe it was McNeally himself), suing others was not in the "genetic code" of the people at Sun. Though overall what I do care about is that this is not for the benefit of the Java community. Ideally Oracle had to invite Google to be a part of the OpenJDK board just like they did with IBM.
I'm not refuting your assertion about what's best for Java, but Sun hasn't shied away from litigation before: http://www.sun.com/lawsuit/summary.html
Yes, this is better then "Remove features, products and support until an event horizon forms".
Thanks again for taking the time to reply. I've rewritten this a couple of times, because i've really trying hard not to be insulting or trollish. I'm sorry if it comes across that way. I went ahead and wrote a regular expression that matches when X wins tic tac toe, and fails to match when O wins, or it is a draw. the input is a string of moves "1234567" X takes square 1, O takes square 2 etc. 1(2(3(4(5(6(7|8(7(9)|9(7))|9)... -- it's really long. I'd believed this sort of thing qualified as a computational process. I guess you have to have a universal computer to qualify. Look - i get the computational complexity is less than one deterministic turing machine. However, i can show this will terminate. i can show this will take constant space. Maybe it's just not cool enough to hang out with Knuth-Bendix. I'd thought that showing one problem could be solved in terms of another was really general and applicable to a wide range of problems. like reverse and append in scheme. A good, robust logical tool. I'm a little offended that you are restricting that to the NP and up stuff only. Don't you do little mini proofs in your head? Like "i can transform this tail recursion into a loop by ..." I'm only replying because i think it is *amazing* html can actually simulate a fsm. It is incredibly weak, but (just) powerful enough to play tic tac toe. Sure, it's "just" deciding if a string is a valid sentence in a regular language. I find it shocking how much you can accomplish with just that. I wonder if there is some terminology i'm horribly abusing? I dunno. I'm trying to stay open minded about what you're saying. **edit** removed some stupid comments. In any case, thanks again for the replies. If nothing else i thought pretty hard about how i think the world works, and that's always interesting.
One lawsuit in a life time is not comparable to a lawsuit every couple of years or so.
Thanks for trying but I have the impression you decide to *not* read my posts but instead argue on the same grounds as in the beginning. I thought I made clear: 1. Regular expressions describe languages, not algorithms and not computational processes [see MIT 6.035/2](http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-035-computer-language-engineering-spring-2010/lecture-notes/) 2. Proving, that a word is in the language described through a regular expression can be done algorithmically with a finite state automaton 3. You can emulate a finite state automaton using a browser and web pages written in html Ist that something we can agree on? &gt; I'd thought that showing one problem could be solved in terms of another was really general and applicable to a wide range of problems. I see the problem of deciding if a word is in a regular language. Where is the other one? The problem of ... ? &gt; I'm only replying because i think it is amazing html can actually simulate a fsm. With the right interpreter, nearly everything can do that. Plain text files, for example. Ones and zeroes, if you want. The complexity is in the interpreter, **not in the language**. The interpreter is the one who solves the problem. &gt; It is incredibly weak, but (just) powerful enough to play tic tac toe. No. It can't **play** tic-tac-toe. It just enables you to specify a fsm that you can use *with a browser* to check if a word is in a specific language. If your language is the language of the words which lead in tic-tac-toe to O winning, then you can check if a word is in that. Nothing else. I, too, try to stay calm, but I find it enraging that you, obviously, have some background and understood some concepts, but don't see where your reasoning is wrong. What about an experiment: I write an algorithmic description of how to solve the 3COLOR problem in html. Now I extend firefox with a plugin that can use this description (in plain html) to actually solve 3COLOR. What now? Is html now computationally equivalent to 3COLOR?
Can you tell us more about what exactly you are struggling with? some example of the kind of assignment you have trouble with... (html and css are not programming languages...)
:/
They were worried about Sun too. Meh.
How does swt make it easier to make exe's? Did I miss something? SWT still compiles to jar files. 
i came here to post this. If you are willing to do a little manual work, you can build your whole interface effectively using only the miglayout layoutmanager, and with very concise and simple code.
http://www.jasypt.org/ http://www.jasypt.org/howtoencryptuserpasswords.html http://www.bouncycastle.org/ http://code.google.com/p/keyczar/
If you want to gain a bit of confidence in writing good Java code i'd start by reading Josh Bloch's Effective Java. It's a fantastic reference manual to have on your desk... [Check it out here](http://www.amazon.co.uk/Effective-Java-Second-Joshua-Bloch/dp/0321356683/ref=sr_1_1?ie=UTF8&amp;qid=1299186017&amp;sr=8-1)
Be careful, SimpleDateFormat isn't thread safe. 
I suggest looking on [sourceforge](http://www.sourceforge.net) at some recent opensource projects. Coming from Perl, it's unclear whether you understand OO, or java's OO syntax, as in Objects, Classes, Access Modifiers, thread synchronization, etc. *[Java 5 added features](http://download.oracle.com/javase/1.5.0/docs/relnotes/features.html) like - enums, generics
Yep - Josh is a Smart guy. Recommend the book.
You might want to take a look at some general architectural best practices if you haven't used them in Perl. Testing is of course a big thing. Take a look at Junit or TestNG. Make sure you understand the differences between e.g. unit testing and integration testing. Work on writing more testable code. This one might seem a little silly, but learn about Dependency Injection and how it changes your code structure. You might want to look at one of the dependency injection framework like Spring or Guice. Many people hate them, many like them. Get to know an IDE. Eclipse, Netbeans or maybe IntelliJ. (Depending on what your new job will involve),
I second the recommendation of Guice, it's pretty damn cool
I'm not sure how I feel about Oracle. They seem to be pretty enthusiastic about implementing the JDK7 JSRs, followed by the JDK8 JSRs. However, Gosling leaving and the Google lawsuit can't be good signs.
Java concurrency in practice
Just a bug patch release. Release notes with fixed bugs can be found here: http://www.eclipse.org/eclipse/development/readme_eclipse_3.6.2.html#DefectsFixed
As far as I'm concerned, the only two books you need are: 1. Effective Java 2. Java Concurrency In Practice &lt;-- absolute essential, I wouldn't trust a Java developer that hadn't read it. And a healthy dose of reading FOSS and working with popular FOSS libraries should get you there :)
Sorry, my mistake - it's too deeply-ingrained in me that SWT goes hand-in-hand with Eclipse.
is there any performance benefit to using switches for strings or is it just syntactic sugar?
Effective Java -&gt; The 2nd Edition
I third the recommendation of Spring and Guice. Also, pick up some Java build and packaging tools like maven or ant. One that can download your dependencies is also a plus, because they sort of act like CPAN, if I understand from my limited Perl experience. Most projects I see out in the wild use at least maven or combination of both maven and ant. I haven't read many Java programming books, as I've learned by doing mostly (which does stink), but Java Power Tools is nice. Goes into unit/integration/load testing, build tools, Java-based CI tools,
Maven takes so much of that initial frustration that all Java newcomers have concerning dependencies and classpath issues out of the picture, it almost seems unfair.
Shouldn't that be "divre"?
Basically it makes it much easier to use strings in switches. I don't think there's any perfomance benefit. Before, you could switch on a String's hashcode and put precomputed hashcodes of Strings you want to have cases of inside the switch (rather overcomplicated), now you can just put the String as-is in.
Haha, tell me about it. I'm too young to have worked on Java without maven. Some of the more experience/set-in-their-ways developers I worked with seemed surprised when I was banging out demos/proofs of concepts/working apps very quickly in Java after only a few months of Java development because I didn't have to tangle with complex build architecture, dependencies, local tomcat installations, etc. 3 years later (read:recently) I started learning the maven-assembly-plugin. It was a giant leap in the quality of my applications and packaging. Learn something new everyday. Man I love to hear myself type. Upvoted.
Yes I tried this too and it worked. But when you have like multiple threads being spawned by spring and jax-rs, junit just stops. It is very difficult to explain without showing it.
I thought the assembly plugin was awesome until I discovered the shade goal of the jar plugin...
Oh yes,I forgot. I would even suggest a general understanding of maven *and* ant, because on the long run, you'll need both.
crockford's API has to be the worst choice in JSON apis. Personally I like [svenson](http://code.google.com/p/svenson/), [Jackson](http://jackson.codehaus.org/) is pretty popular, although their claims are a bit dubious and there API is a quite redundant.
Answer: "The package compiles on Java 1.2" o_O
Use GSON. There will be NO LOOKING BACK.
You'd be better off asking the same question on stackoverflow.
You can make a hash of anything in Java if you're not careful. 
thank you, i will try that!
Tons of people seem to be recommending this book, including my future employer, so I'll be picking it up ASAP. Thanks!
Thanks - there are some points here I hadn't considered, particularly getting used to Eclipse since that's the IDE I'll be using - right now my "IDE" consists of a text editor and a command prompt :)
Eclipse has a few features that make java less terrible to use. e.g. automatically creating getter/setters from a field or in general the refactoring operations. Method Call Hierarchy and Type Hierarchy, etc etc
That's for executable jars, correct? I don't really use those much as I work mainly on web code. My goto-setup I make with the assembly plugin is: * a handful of java-based jars, copied into lib and lib/optional * two-or-three WAR files copied into webapps/{folderName} * including jasig cas overlaw WAR for single-sign-on * a root jar; which includes bin/ startup scripts, conf/ for configuration files. So my entire assembled directory tree contains a re-usable,configurable project. They are either running jetty+activemq, or simply jetty or tomcat, and HSQLDB as the default database engine (for testing). 
Indeed. While I picked up GSON first because it was rather easy, Jackson seems to be the fastest one out there: http://www.cowtowncoder.com/blog/archives/2011/01/entry_437.html And here's the code he uses in his tests: http://www.cowtowncoder.com/blog/archives/2009/09/entry_326.html It seems he changed the format of his blog so images are getting clipped.
Maybe they should claim to be faster than json-tools and gson and not "FASTEST EVER".. because my tests with svenson and jackson seem to point to basically the same performance while it wasn't clear if jackson supports all the stuff svenson does.
Just go through the tutorials: [http://download.oracle.com/javase/tutorial/](http://download.oracle.com/javase/tutorial/)
I've always been a big fan of [Thinking in Java](http://www.mindview.net/Books/TIJ4) by Bruce Eckel.
[Head First Java , ](http://www.amazon.com/Head-First-Java-Kathy-Sierra/dp/0596009208)
And you can get a digital copy for free.
And, while it's perhaps not an "into" type of book, once you start using Java and get to know your way around, pick up Effective Java (2nd Ed) by Joshua Bloch. It talks about a lot of pitfalls and "bad" ways of doing things, and I wish I'd read it before I did.
This. This book is what started me. 
Nginx is a wonderful server for proxying and serving static content. It's config files take a bit to understand as all the original documentation is written in Russian. 
To teach myself, I'm currently using Java: How to program (8th ed.) by Paul and Harvey Deitel. It's a pretty good book so far; it explains all code line by line, provides tips on how to avoid common errors, and does a great job of explaining things. The index is extensive. It comes with a disk, and is accompanied by oodles of online information at the authors' site. The book assumes you're using Sun's JDK, but provides online information on using NetBeans and Eclipse, among other IDEs. In case you'd like to check it out: ISBN-13: 978-0-13-605306-4 ISBN-10: 0-13-605306-8
BE A FATHER AND TEACH THE DAMN KID :D
Introduction to Java Programming by Daniel Liang. We used it in my CS intro class, it's quite helpful 
I own three books mentioned on this thread. Head First Java Java: How To Program Thinking in Java Head First is definitely the best place to start, then graduate to Thinking in Java. "How to Program" isn't that great. Once you've grasped those books you can go onto Head First Design Patterns, Effective Java and Java Concurrency in Practice. This combined with a lot of programming projects will put you in good standing of being a Java guru.
Objects First with Java: A Practical Introduction Using BlueJ
I understand that having a system at all is better than none; particularly if the paper system is unreliable or non-existent as well. That said, you should be aware that using MS Access in a multi-user situation often leads to database corruption/data loss. Have you looked into patient registration/electronic health records systems that may be available as open source or free software? It's not really my area, but I'm betting you'll find something you could use rather than take this on yourself. I know it's tempting to try to do this as a project on your own, but health systems are far from simple and must be designed in a way that minimizes treatment errors. Issues in such a system can have serious consequences. Here's a list of potential solutions I found on [this page](http://outsourceitindia.com/index.php?option=com_content&amp;view=article&amp;id=27:open-source-ehr-systems-&amp;catid=30:open-source-ehr-systems-&amp;Itemid=30); you will have to evaluate these for yourself: For US and compatible regions: - ClearHealth (www.clear-health.com), - FreeMED (www.freemedsoftware.org), - OpenEMR (commercial, www.openemr.net), - OpenEMR (community, sourceforge.net/projects/openemr), - WorldVistA EHR (www.worldvista.org/World_VistA_EHR) .. are some of the products that have gained wider acceptance among the medical community. For medical practices outside the USA, a few open-source EHRs are available such as: - OSCAR (Canadian System, www.oscarcanada.org) - GNUmed (Germany, www.gnumed.org) Best of luck to you!
Anyone want to compare this with Lighttpd ?
Really ... you came into a Java forum to post this?
Absolutely. There is no book that does a better job of explaining concepts in a way that you will never forget. I am assured that if anyone with any desire to learn and commitment whatsoever reads this book, they'll learn Java with ease and success.
hmm, I've always used JSON.simple because it uses Java's Map and List classes and is.. well, simple. http://code.google.com/p/json-simple/ So far all the other ones I tried had way too much functionality in them that I just didn't need.
Anything for going the other way? We just switched from .NET to Java and have some straggling .NET projects.
http://dev.mainsoft.com/ Maybe?
No, you need to write your own (AFAIK). For collections you have Collections.shuffle(). [edit] Why is this being downvoted so much?
No, but it's simple enough to write your own no? As a guess something like the below might do : Random gen = new Random(); for (int i = 0; i &lt; 500; i++) { int p = gen.nextInt(arr.length); int q = gen.nextInt(arr.length); Object o = arr[p]; arr[p] = arr[q]; arr[q] = o; }
It is simple, but this is a method that will be called a lot, so I want to make sure it's not wasting cycles.
Consider using an object with built-in optimized shuffling rather than an array. 
Ugh.. your code reminded me of somewhere I was doing a stupid random shuffle...
How about: Random rnd = new Random(); for (int i = 0; i &lt; length; i++) { int p = rnd.nextInt(length - i); out[i] = in[p]; in[p] = in[length - i - 1]; } \*Edit\*: actually, could do that without a second array and shuffle just as fully. I haven't tested this: Random rnd = new Random(); for (int i = 0; i &lt; a.length; i++) { int p = i + rnd.nextInt(a.length - i); Object o = a[p]; a[p] = a[i]; a[i] = o; }
Isn't there some method in Array to make an array into a Collection, and isn't there a method in one of the collections or perhaps Collections to make a collection back into an array?
Yes, if anyone chooses to use a shuffle algorithm on this page, please choose this Fisher–Yates example, not Murf_'s naive algorithm. (Though I would prefer it be either non-destructive or in-place, rather than neither.) 
That's what Collections.shuffle() does in the background for collections without reasonable random access.
Oh, I didn't know it had a name. [http://en.wikipedia.org/wiki/Fisher–Yates_shuffle](http://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle)
Collections.shuffle(Arrays.asList(array));
[corejava](http://www.horstmann.com/corejava.html)
This is what I was going to suggest. When did Google buy it?
Arrays.asList() just wraps the array. There's no copying or conversion.
http://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle
Including arrays wrapped with `Arrays.asList`.
And here is the reason why this is bad. http://www.codinghorror.com/blog/2007/12/the-danger-of-naivete.html
could you tell me where? The linked page only allows a demo version, and a quick google search produced nothing...
Search for "Thinking in Java pdf" in google (without quotes). Click on the second link.
awesome - thanks.
Head First Java Thinking in Java by Bruce Eckel Both are best books for Java.
Thank you for the advise ! I'll give it a try ! Keep on redditting ;)
Thank you for the advise ! I'll give it a try ! Keep on redditting ;)
Or just use Spring Social http://static.springsource.org/spring-social/docs/1.0.x/reference/html/apis.html#facebook-status
Big time bugs using soft/weak references. I have found that in certain circumstances, the GC will not clear out these references when memory is tight and will not throw an OutOfMemoryException either. I have experienced a situation where JVM was just spinning in a tight GC cycle because of these references hogging up memory and for some reason, would not be cleared. We eliminated the references, the problem went away. This might be because of our JVM/GC flags or because of a bug in our 1.6 version, but CAVEAT EMPTOR. An older thread, but we were still [seeing this in late versions of 1.6] (http://coding.derkeiler.com/Archive/Java/comp.lang.java.programmer/2008-07/msg00611.html)
The moment I came upon "Finalizers" and the first sentence wasn't "NEVER USE THEM, NEVER. NEVER", I closed the article :\
the ref package is definitely not for the faint of heart, but when used sparingly, it can save you from generating tons of garbage intermediate objects, for example using the canonical map mentioned in the article for processing large amounts of text, etc...
I had the same feeling at first, but after reading the whole paper I like how the author explains how stuff works and not what devs should do.
He talked about how they were basically useless. The article was clearly trying to relate c concepts to java. Shouldn't have ragequit
This is probably a big scary for a beginner.
Start here 100%. My University uses this book for it's Java Intro course and Java 2 course. I started without any programming knowledge and I devoured this book like a lion on a zebra. Also, Eclipse IDE is a must.
OP, Netbeans is also a great choice
I've used this and Java Software Solutions in introductory courses to Java. I think both taught me a lot but BlueJ is a great beginner IDE and really tries to show how OOP works. 
Yes, the author mentions the danger of relying on memory-controlled caches... but doesn't spend enough time on the warning for my tastes either. My understanding is that both Sun/Oracle and IBM have improved their Reference Handling in upcoming releases, so hopefully things should work more as expected. But GC thrashing because of some huge cache-object will always be an issue. Best to consider the article's (brief) sidebar message and impose other sanity checks on the size of your structures (time limits, LRU, etc.)
Yes, the author mentions the danger of relying on memory-controlled caches... but doesn't spend enough time on the warning for my tastes either. My understanding is that both Sun/Oracle and IBM have improved their Reference Handling in upcoming releases, so hopefully things should work more as expected. But GC thrashing because of some huge cache-object will always be an issue. Best to consider the article's (brief) sidebar message and impose other sanity checks on the size of your structures (time limits, LRU, etc.)
Yes, the author mentions the danger of relying on memory-controlled caches... but doesn't spend enough time on the warning for my tastes either. My understanding is that both Sun/Oracle and IBM have improved their Reference Handling in upcoming releases, so hopefully things should work more as expected. But GC thrashing because of some huge cache-object will always be an issue. Best to consider the article's (brief) sidebar message and impose other sanity checks on the size of your structures (time limits, LRU, etc.)
Yes, the author mentions the danger of relying on memory-controlled caches... but doesn't spend enough time on the warning for my tastes either. My understanding is that both Sun/Oracle and IBM have improved their Reference Handling in upcoming releases, so hopefully things should work more as expected. But GC thrashing because of some huge cache-object will always be an issue. Best to consider the article's (brief) sidebar message and impose other sanity checks on the size of your structures (time limits, LRU, etc.)
Wow, this is a truly great post! Thanks for sharing.
jetbrains IDEA CE ftw.
http://www.greenfoot.org/index.html
Just look at your java class as a whole... and repeat after me: Never gonna give you up, Never gonna let you down, Never gonna run around, and desert you.
In all honesty I took a java course in college and barely passed it. I think it's because I didn't understand a lot of the core concepts... such as polymorphism, inheritance, access scopes, the difference between accessor and mutator methods, not knowing proper method signatures, etc. I just started taking java again (3-4 years later...) and I'm finding it a breeze. The first few classes were a review of what I did take 3-4 years ago, then we dug right into new material. Here's my advice: 1. Push through it (unless you can drop it and get your money back) 2. Take the course again, except this time **pre-read all the chapters before the lectures**. 3. Mess around with minor java projects on your own time before the new course starts. 4. Know and remember all the basic terminology, it's important!
quizzes are 20% of my grade too and it makes me worried. That means that assuming you get 100% in everything else, you may only get a maximum of 80% in the class. Lets face it, if you're bombing quizzes you wont be getting 80%! Every little bit matters!
Forget? What an awful piece of advice. OP, don't abandon current knowledge, that's just silly.
Hey man, I WILL PROGRAM YOU A WEBSITE: &lt;html&gt; &lt;body&gt; see? I CAN PROGRAM, YEAHHHHHHHH &lt;/body&gt; &lt;/html&gt;
HTML runs on internet explorer?
YMMV. Maybe I should have said "limps". :)
No kids yet, but I always recommend Greenfoot to parents of kids that tend that way. 
No kids yet, but I always recommend Greenfoot to parents of kids that tend that way. 
I have seen some amazing programmers from India. The fact that they are underpaid and therefore poor enough to take any job they can get to make ends meet doesn't make them bad. There's also somewhat of a language problem.
Ah! That makes sense now.
...or to summarize a bit, don't rely on the teacher to spoonfeed everything to you. Keep ahead of the class, and then you can ask questions about what you didn't understand, possibly during the class if that's allowed. I took a java class after having worked as a C++ programmer for many years. Before the class, I did tutorials from Sun's site, and for the assignments, I always did more than what was required. By the end of the course, I was being called on by the professor to help the students having problems, and even to help the professor when he had problems with software updates. And this was an advanced java class - most of the students I was helping had already taken the first class. Needless to say, I learned a lot; more than if I had done it on my own, and more than if I had relied on the professor to teach me everything. 
I actually have a question for you... I recently received an email from a C++ teacher at my college stating that often students find it easier to do the harder java courses after C++. Correct me if I'm wrong, but C++ is just more work than Java since you have to deal with the memory management and stuff, right? I dunno, the vibe I got from that email was "I suck at teaching and nobody wants to take my class... please take it!". I wouldn't mind doing some C++ however. Is this true?
I think it could probably go either way - C++ is probably easier to learn after learning Java, too. But I think there may be some truth to what the teacher said. I started out with some assembly language back when computers were simpler, then used some basic and the C. At first, C was just a better assembly language, but I started learning more about data hiding, etc. Then, I started with C++, first as a better C, then learned more an more about object-oriented aspects, etc. So, my course of learning taught me a lot about what was going on under the hood at the machine's level, which is still plain old machine language. C++ is harder, but I always felt that I knew exactly what was going on as I learned, and I had to be aware of many issues that Java hides from you. Then, when I took Java, it was kind of like a better C++ in many ways. It made many things easier and simpler, but the habits and techniques I had learned were still with me, so my algorithms could be fairly efficient even though they were now in Java. I knew that memory still had to be managed, even though I didn't have to do it explicitly. To me, it's a tossup as to which language is better to start with. Java will probably teach you better OO habits, buy C++ might teach you better low-level under-the-hood techniques. I guess it depends on what type of programming you want to do in the future. I think C++ will only be used in specialized applications, where Java will be much more mainstream. If you learn just Java, buy also pay attention to best practices, you might be better off. 
Thanks, this comment makes a lot of sense. I'm doing java for 2 reasons: Work is paying for it (there are some java apps here), and for mobile application development. C++ is too hardcore for that kind of thing. If I ever got more serious about programming, I think I would take C++.
Thanks, this comment makes a lot of sense. I'm doing java for 2 reasons: Work is paying for it (there are some java apps here), and for mobile application development. C++ is too hardcore for that kind of thing. If I ever got more serious about programming, I think I would take C++.
Thanks, this comment makes a lot of sense. I'm doing java for 2 reasons: Work is paying for it (there are some java apps here), and for mobile application development. C++ is too hardcore for that kind of thing. If I ever got more serious about programming, I think I would take C++.
Children? I just started using it to teach myself!
That's actually great news for potential candidates, as you can now ignore these certifications completely, as they're clearly just a cash grab.
 public static double myExp (double x, double n) { double i = 1; double q = 1; while (i &lt; n){ q = q + (Math.pow(x, i) / factorial(i)); i = i+1; } return (q); } This appears to work for me, although I did do the equivalent in clojure not java: (defn factorial [n] (reduce * (range 2 (inc n)))) (defn myExp [x n] (loop [i 1 q 1] (if (&gt;= i n) q (recur (inc i) (+ q (/ (Math/pow x i) (factorial i))))))) (myExp 3 18) ; 20.08553685145113
tl;dr: public static void main(String[] args) { System.out.println(Math.exp(x)); } The long version: on first look, the code is simply not doing what your series is doing. See double q = ((Math.pow(x, i))/factorial(i)); is returning q = (x^i) / factorial(i) That is not what you intended. What you wanted was x elevated to the q you just computed. Anyway, if you're just practicing Java, then you gotta rewrite myExp copying your series exactly - it's just a syntax error. Otherwise, if you just want to solve the problem, goto tldr.
...Wow. That honestly makes such perfect sense, I don't know what the hell I was doing before. Thanks so much, man, I think I've got it now.
Totally just a style tip, but I would discourage you from naming your class Main, since there's a special method called 'main' that would be executed as a result of instantiating that class. public class FactorialCalculator { void main (...){ ... } }
If you have the .class file you can use a java decompiler to spit out the java code; it may be obfuscated though.
the sdk typically comes with a src.zip file that contains the source for the included libraries
There's a link to download the source on the same page as the jdk download. Assuming Oracle.
Download the SDK/JDK. The Reference Implementation is provided in source form for you, typically in a file called src.jar (or src.zip) in the root directory. (This happens for both Sun/Oracle and IBM's JVM's as far as I'm aware.) http://download.oracle.com/javase/6/docs/technotes/tools/linux/jdkfiles.html#jdk1.6.0_src_jar Of course, you could also go here: http://openjdk.java.net/ for development versions of the open-source java implementation online in Mercurial. Or here: http://harmony.apache.org/ for the sadly-on-its-last-legs "free" implementation. Also, as someone who debugs bad java applications every day, I have to add: You should never base your application on the implementation of a given JVM. There are many ways to implement the specification, and many known implementations exist. The source (of only the public classes, usually) is provided to help you understand performance implications and debug your applications... not to cause later programmers headaches and indigestion. :-) 
I could give at least two good answers to your question. Other people have done that. But on the other hand, I've lost a lot of time implementing a spec which described the wrong requirement. What sort of help are you looking for? * Examples of good code - the java libraries are only "ok" as examples because they have a wildly different development process from what you generally need to write. * Clues about the best way to use them - The source code may mislead you badly, since implementations can vary wildly. * Hints about why they aren't working for you - This is the best use I know for the source code. It might even help you track down a bug in the implementation you're using. This can feel great. Just don't be surprised if you end up just having to work around it. Sometimes for a long time. 
If you want a collection that is keyed on an arbitrary type then you want a Map. For your specific example you want a TreeMap&lt;Day, String&gt;. A TreeMap is a Map implementation that is automatically sorted based on the value of the key - the Day in this case - and a TreeMap&lt;Day, String&gt; means that the map uses a Day object as the Key and a String object as the value. To loop over that, you can do - for example: Map&lt;Day, String&gt; days = new TreeMap&lt;Day, String&gt;(); // populate here for (Day d : days.keySet()) { String s = days.get(d); // do stuff here }
EnumMap
 public enum Days { MONDAY("I LIKE CAKE"), TUESDAY("MY FINGER SMELLS LIKE POOP"); private String nonsense; Days(String nonsense) { this.nonsense = nonsense; } } The array can be accessed via Days.values().
Yes - I didn't realise until now that EnumMap *does* guarantee that entries are returned in the order of the enum, which is why I said TreeMap before...
Yes, there is. IF you install JDK you can look at the included source in src.zip. If you install Eclipse or Netbeans you can step into, or open any JDK class file and navigate the source easily. 
 sudo apt-get install openjdk-6-source unzip /usr/lib/jvm/java-6-openjdk/src.zip 
What do you think?
 as in: for (Days d : Days.values()) { // do stuff here } although I recommend singular names like "Day"...
Whatever makes sense to you. I might as well have named it "DooDooHead" considering the rest of it.
Extremely basic, but it has given me the basics of how java works. I'm already fluent in Fortran and MATLAB, so it's not all that new to me. I just need to learn the syntax and structure of java, which this seems to do pretty well. I'd definitely recommend it for beginners. 
+1 to this. The complexity of this aside, I've done MS Access through JDBC and I feel dirty just thinking about it. If none of the above-posted solutions work for you, you're better off using MySQL or PostgreSQL JDBC drivers (or Derby / HSQL if you're constrained to keeping a local database file, but I believe these lock the file and disallow multi-user access). Access is a terrible database for anything than a single user's use (and, even then...).
As dominosci pointed out: EnumMap is the definitely the Class you would want to use. Also I think you will rarely find a linked list example, because there are no pointers in Java and all available Collections are able to grow dynamically. The only exception I can think of are trees, which for some reason are poorly represented in Java. Also have a look at the [Documentation](http://download.oracle.com/javase/6/docs/technotes/guides/collections/reference.html).
How does not having pointers in Java mean that linked lists are implemented poorly? A linked list is a stack that behaves in a certain way, whether or not the programming language uses pointers is a few levels away from the implementation is it not? A linked list contains a pointer to the prior element in the list. That "pointer" isn't necessarily an address variable. Or am I crazy?
Well a linked list in Java would mean to have an Object with references to one or more other Objects. The only structure I can think of where this concept would be used is in trees, because you would want to navigate through its hierarchy by referencing parent and child nodes. If such a Class exists in the Java I haven't discovered it yet.
The LinkedList and friends don't do this? I want to learn something here, as I haven't had much need for such structures in quite some time. I always assumed that the LinkedList class was what it said it was, but like I said, I haven't had the need for one, as we (the other engineers where I work) actually rolled our own linked list type class because the early developers all came from a C++ background, and rolling your own is almost second nature. We've all had to build stuff like this from the ground up so many times, we were just excited not to have to write our own String library for a change.
I didn't really grasp recursion and the situations to use it until I began working with binary trees. Unfortunately, binary trees are an AB topic, and I don't think it's taught in the normal AP comp sci class any longer.
Nope no binary trees in AP A. I looked at some examples of recursion with trees the other day. I can see how it is useful there. Thanks!
&gt; I want to learn something here, as I haven't had much need for such structures in quite some time. Well I learned something obviously. Haven't come across the LinkedList class yet. Still, can you give an example where this type of structure would come in handy?
\#java @ irc.quakenet.org \#\#java @ irc.freenode.net If you have any questions, this is the best way to ask them. You won't learn programming by reading books. If you already know the basics, PROGRAM SOMETHING! Learning frameworks is completely useless if you don't have any use for them. I can tell you to learn about IoC and Spring Web but what for... :O Write a game or something fun, come on IRC and ask questions. And remember compsci isn't about java :D
Use a [trie data structure](http://en.wikipedia.org/wiki/Trie). Assuming what you want is, you have a list of words, and you want to find all with a certain prefix.
but this year we're doing java
Okay, you need to understand the basic structure of a for loop and the order in which operations are performed. A for loop allows you to set a variable, give a constraint on the loop, and also modify the variable every time an iteration occurs. Let's have a look at the first for loop. You're setting the value of 'a' to 1. You're then saying that this loop will continue to run while 'a' is less than or equal to 5. Finally, you're saying that at the end of each iteration of the loop, you want to add 1 to the current value of 'a'. If you were to run the following simple bit of code: for(a=1; a&lt;=5; a++) { System.out.println("a = " + a); } System.out.println("a finished the loop = " + a); ...then you'd see the following: a = 1 a = 2 a = 3 a = 4 a = 5 a finished the loop = 6 So, why would a==6 once the loop is finished? The reason is the order in which the loop does things. When the loop initialises (before any iterations occur), it sets the value of 'a' to 1. It then checks the constraint. Is 1 less than or equal to 5? Yes it is, so we can iterate once over the loop. Once the loop finished, it updates the variable. So 'a' now equals 2. It then checks the constraint again before performing another iteration. Is 2 less than or equal to 5? Yep, iterate again. Now, I think where you're having a slight issue is the point where 'b' is being printed as equal to 7. This is because you have to remember the order in which the operations are performed. Assume we've been through the loop a few times and 'b' is currently assigned a value of 5. We check the constraint (b&lt;=6), which turns out to be true, so we perform another iteration of the loop. We finish the iteration and then we add 1 to the value of 'b' to now make it 6. Again we check the constraint. Is 6&lt;=6? Yes it is. So we now perform another iteration. We finish this iteration, add 1 to the value of b and check the constraint again. Is 7&lt;=6? No, it's not, so we break from the loop. But the value of 'b' is still 7, because we performed the 'b++' before checking the constraint. So, in the code you provided, once it gets to the print statement within the 'a' loop, 'b' does indeed have the value of 7. Once the 'a' loop reiterates, the value of b is set back to 1. Does this help at all (e.g. did I address what you were confused about)? 
Thanx guys :)
it really does! i appreciate the response! 
All self-proclaimed 'simple' java libraries are either not simple or not fully functional
No, they do different things. JRootPane is not a Window, it is a separate class that swing RootPaneContainer classes (JWindow, JApplet, JInternalFrame, JDialog, JFrame) use via composition. Re-read the javadoc you linked, especially the beginning part and the diagram. edit: Each RootPaneContainer (e.g., JFrame, JDialog) has its own JRootPane. Since you can have multiple RootPaneContainer instances in an app, there can be multiple JRootPanes. Swing doesn't track a root or "first opened" window/frame/etc. You could open a hundred JFrames from your main method and they would all be peers and all have their own JRootPanes.
As far as I know, it returns reference to the root pane. But I am not sure 
Hm. XStream is simple and fully functional.
I think this method will be useful: http://download.oracle.com/javase/6/docs/api/javax/swing/SwingUtilities.html#windowForComponent%28java.awt.Component%29
"Hasty generalization is the root of all evil".
I imagine it's there for historical reasons, so they don't break applications. If the developer was looking to ensure they had an official JDK (as opposed to an open source implementation), the easiest place to look would be the vendor string.
Umm, why? Can't you just press a hotkey when your cursor is at the relevant method and get instant full documentation as a tooltip? It could be helpful as an index of available classes (and perhaps methods), I guess, though. Personally, I just type "relevant package/class 7" (as in Java 7) into my browser url bar and instantly get desired results :)
I've just downloaded it and this is much better - you don't get false positives for popular classes, and there are lots of platform/package overview articles you can't easily find through search engines.
Note that there's a really good reason why you can't view CHM files from a network drive. The format is inherently insecure: anyone who has write access can stick a virus in it and anyone who opens it (with the Microsoft viewer) will get themselves infected. 
Ok, thanks.
mmm, servlet 3.0 support
Actually they did that in 1.6.0_21, and that broke Eclipse. They had to re-release 1.6.0_21 to "fix" the situation. http://www.zdnet.com/blog/burnette/oracle-rebrands-java-breaks-eclipse/2012 They will switch the vendor string to its proper value in 1.7.0.
I'm not sure if you really need interfaces everywhere, but... **private List&lt;A&gt; someAs;** or use this : public class Test { interface A { void funcA(); } interface B { List&lt;? extends A&gt; get(); void set(List&lt;A&gt; list); } class CA implements A { @Override public void funcA() { throw new UnsupportedOperationException("Not supported yet."); } } class CB implements B { private List&lt;? extends A&gt; someAs; @Override public List&lt;? extends A&gt; get() { return someAs; } @Override public void set(List&lt;A&gt; list) { this.someAs = list; } }
You'll need to have the interface return List&lt;? extends A&gt;, or declare B.someAs as just List&lt;A&gt;. Java doesn't support generic inheritance for purposes of passivity with pre-Java 5 code. There are plenty of articles over use of "super" versus "extends" keywords. Joshua Bloch's book, "Effective Java", is a great source for understanding the differences and reasonings behind these two keywords.
OMG thank you so much. I had no clue about the ? extends syntax, that fixed it. I can't just make it a List of A's, because the things that implement it do additional things. The whole ontology is pretty complex (possibly too complex, but I may redesign again down the road), but this problem was just making my brain hurt. Thanks again!
Welcome to the wonderful world of Java's Generics Hell ;-) 
Anybody want to nutshell the new features. I did some reading but I'd like to hear from those who was looking forward to this release for one or more specific reasons. The async servlet processing sounds interesting. Anybody have a real use case yet or a decent link explaining this? Does the call to the servlet provide an endpoint or something for the servlet to respond to when it is done processing? I'll keep digging around but if someone has already Googled some good pages for me, please link to them.
[grepcode](http://grepcode.com) is pretty good for that purpose. Very handy for a quick look-up. Includes Android source as well.
I find myself spending around 60% of my programming time working around crazy little syntactic errors like this in Java. I'm rather hoping as I build up more Java experience that I'll start lowering that percentage. Since I've never met another human that has claimed any understand of Java it has been left up to me to teach myself, and taking Standford's 106A/B through Open Course Ware.
A great read [here](http://java.sun.com/j2se/1.5/pdf/generics-tutorial.pdf).
fill yer boots: [http://www.angelikalanger.com/GenericsFAQ/JavaGenericsFAQ.html](http://www.angelikalanger.com/GenericsFAQ/JavaGenericsFAQ.html)
-_- I *knew* it felt strange when I did not find the method in the standard libs... I really should explore SwingUtilities* at some point ;)
&gt; Anybody want to nutshell the new features. In Tomcat 7 in general (which was released in mid-January) or in Tomcat 7.0.11 (which is just a bugfix release)?
Java Generics aren't that bad once you understand what they can (and more importantly) what they can't do and stick to it.
I thought it would be interesting to talk about 7 in general but the thread didn't get any traction. I'll just google around myself.
Check for "pi" at the start of the string, and then recurse on the remaining substring (either two characters in if you did find a match, or one character in if not). That way each successive call will be on a smaller string, which will eventually be empty (when the recursion will end). Think about what you'll need to return for the following cases: empty string "pi" matched at the start of the string "pi" did not match at the start of the string
[This](http://www.reddit.com/r/java/comments/g3bjz/recursion_help_needed/) might help.
As might [this](http://www.reddit.com/r/java/comments/g3bjz/recursion_help_needed/) And [this](http://www.google.com/search?q=recursion)
Please tell your teacher this is a fucking terrible example, since Strings are immutable in java. If (s)he doesn't "get it", drop the course. Why would people try to demonstrate something by a WRONG principle? wtf...
In order for you to understand recursion, you must first understand recursion. 
Say what? It may not be a great problem for recursion, but the homework problem here is to compute a "new" string. I don't see where immutability comes into it at all.
"...compute recursively a NEW STRING." 
a + b + c + d + ... is O(n^2 ) because strings are immutable. And I don't think passing a stringbuilder around is the desired solution. And yes, this is a real-world consequences. Last time I saw people doing += on strings while generating web pages, it took a seconds to concat all that shit. Now imagine you're serving 2000 requests a second...
a + b + c + d + ... is O(n^2 ) because strings are immutable. And I don't think passing a stringbuilder around is the desired solution. And yes, this is a real-world consequences. Last time I saw people doing += on strings while generating web pages, it took a seconds to concat all that shit. Now imagine you're serving 2000 requests a second...
How many different ways can you be wrong in a single reply? 1. C'mon, the assignment is obviously intended as a way to learn about recursion, not as a course in how to write 'sed'. 2. Recursion is canonically implemented by returning a value, so no need to pass around a StringBuilder. 3. Your 'big O' math is wrong. 
Just because it's a bad lesson in Java doesn't mean it's a bad lesson in general. I think the focus is on recursion, not string manipulation...
Agreed. Just because it's not a good way to use recursion doesn't mean it's not a good way to illustrate it. Factorials and the Fibonacci sequence spring to mind.
As you mentioned, the 3.0 spec added support for async server publish. Theoretically, it should make it easier to implement things like chat applications, notification services, etc.. with servlets. I'm not sure if any libraries or frameworks have actually added support for this quite yet, so I'm not sure how effectively usable it really is. Honestly, it's been a while since I've had a use case for a servlet.
Or multiplication/-and functions, those are fun too.
Funny story: I took my midterm to determine If I should keep my CS Major. After taking it, I thought for sure I would get a high 'A'...I got a 30%!! I'm switching my major to visual communication. In the mean time, I'll be making this game: http://www.reddit.com/r/Minecraft/comments/g2419/microminecraft_update_2_v11/
Not totally sure I understand the question, but one one suggestion is mapSaves.get(mapSaves.size() -1). Since the list is 0 indexed, mapSaves.size() is going to be one past the end of the list....
This sounds like it could be part of your issue. Also, you mention that you want to assign it to your local tempMapSaves variable. If you just want to copy out the integer values, but not modify the underlying representation of the object stored in the arraylist, you'll need to write your own clone method when you're trying to save them to tempMapSaves. Object.clone() won't do the trick either - you'll need to override it to do the deep copy yourself (initializing a new object, taking the int values out of the existing object and assigning them to the variables in the new object... there's even more legwork if your object is composed of other objects - if it's just ints, it should be easy).
Okay, point taken. But I don't have that big of a problem with the instructor asking the students to do it in a less than efficient way if the point is for them to learn recursion. I just think it's not even a very good problem for *that*.
Assuming I'm on the right page (planetpdf) it appears to be an older version (version 3, but the first link mentioned v 5 i think). Do you know of any major difference that may cause an issue? I'm on mobile so it is a pain for me to look up all the publishing dates, see which version of java was used then etc.
I'm a bit late to the party, but hasnt AB been dropped?
What error does it give you when you hover over it? 
I get two options: 1) Add cast to 'ArrayList&lt;Integer&gt;' and 2) change type of 'tempMapSaves' to 'Object'
try this tempMapSaves = (ArrayList&lt;Integer&gt;) mapSaves.get(mapSaves.size() - 10);
&gt; private ArrayList&lt;Object&gt; mapSaves = new ArrayList&lt;Object&gt;(); That's your primary problem. But you might have some luck adding a cast to get around it, like so: &gt; tempMapSaves = (ArrayList&lt;Integer&gt;)mapSaves.get(mapSaves.size()-1); It would be much better to make the mapSaves object strongly typed. &gt; private ArrayList&lt;ArrayList&lt;Integer&gt;&gt; mapSaves = new ArrayList&lt;Object&gt;(); I don't really understand your problem well enough to know why you're storing an ArrayList (tempMapSaves) in an ArrayList (mapSaves). Makes no sense to me. Posting pictures of text is crappy.
hmm, i then get: Add @SuppressWarnings 'unchecked' to 'loadMap()'
I would go one step further and declare your variables to use the List interface i.e. List&lt;Integer&gt; tempMapSaves = new ArrayList&lt;Integer&gt;(); List&lt;Object&gt; mapSaves = new ArrayList&lt;Object&gt;(); If in the future you find some performance problem with ArrayLists it is much easier to swap them for something else. That's what interfaces are for.
In case you're new to Java, netvision's solution above would become: tempMapSaves = (List&lt;Integer&gt;) mapSaves.get(mapSaves.size() - 10); And neebat's solution would become: private List&lt;List&lt;Integer&gt;&gt; mapSaves = new ArrayList&lt;List&lt;Integer&gt;&gt;(); 
Oh hell yes. :-( Now I feel stupid. In code reviews, I'm hell on those concrete classes for variables and fields. Hell, I want to write a whole language that only ALLOWS interfaces for declaring references.
taligent's interpretation of my answer above is much better.
You really haven't provided us much of anything to work with. Are you making a linked-list using Java's Generics feature, or are you making a specific version that only works with your kind of objects, or are you working with Objects? You should also list code (probably not on reddit -- try pastebin instead) so that we can see it. Also, why aren't you using the JCF? Is this for an assignment?
Why aren't you using java collections? Are we doing your homework? &gt;I want the add method to be implemented so that if a packet of an existing page is coming in, it should be inserted based on packetid. What do you mean by this?
Yeah, I suppose it has been. I was only speaking based off of my experience from high school, when it was still being offered.
The probem is, this is not even a good excercise to practice recursion... Binary search, expo by squaring, sorting, drawing fractals, those are all recursive in nature. This example is not.
&gt; 2 &amp; 3 a + b + c + d = (((a+b) + c) + d) = create new string a+b, call it c', then create new string d' by COPYING data from c' and c, then create new string e' by COPYING data from d' and d. The outer loop runs |S|, where S is the resulting string, the inner loop runs |a| + |a+b| + |a+b+c| + |a+b+c+d| ..., which is ~(n*n+1)/2 -&gt; n^2 &gt; 1 You should teach correct examples no matter what you want to teach. Plus, it's not an excelent example for recursion either.
The probem is, this is not even a good excercise to practice recursion... Binary search, expo by squaring, sorting, drawing fractals, those are all recursive in nature. This example is not.
&gt; 2 &amp; 3 a + b + c + d = (((a+b) + c) + d) = create new string a+b, call it c', then create new string d' by COPYING data from c' and c, then create new string e' by COPYING data from d' and d. The outer loop runs |S|, where S is the resulting string, the inner loop runs |a| + |a+b| + |a+b+c| + |a+b+c+d| ..., which is ~(n*n+1)/2 -&gt; n^2 &gt; 1 You should teach correct examples no matter what you want to teach. Plus, it's not an excelent example for recursion either.
Declaring List vs ArrayList can lead up to serious performance deficiencies. Some tests with Map vs HashMap were as bad as 10 times slower. If you're writing games, you want to go as concrete as possible.
My guess is that he's trying to do something like ArrayList. Something like this but this is just a blind guess. list.add(packetID, packet) 
Well given the minimal amount of information you gave this answer may not be what you're looking for, but I'll try my best here. If you're trying to add the data to the linked list, you have to add the node where you need it and then adjust the pointers to accommodate for the new node. (The node being the packet I assume). Basically, have the node before the one being added point to the new node and the new node point to the node that came after that one. Sorry if this is way off from what you're looking for, but it's what I got from your question. 
Prove it.
I've spent about 4 hours now this morning attempting to set this up for some JPA projects I am working on at school. I've read a lot of the information provided on the wiki, and am having some difficulties. I will go home and try to install on my computer at home but it would be cool if you guys might be able to give me some pointers or maybe set me in the right direction for when it comes down to installing this awesome looking addon. I will post an update when I get home and try.. Perhaps I'll have to put together a quick how-to that breaks it down for people as... uhh.. "misguided" as me. edit: thanks for the link
You're problem is that Java generics don't support covariance or contravariance. Just because ArrayList extends Object doesn't mean ArrayList&lt;Object&gt; is the same as ArrayList&lt;ArrayList&lt;Integer&gt;&gt; That's why they included wildcards when declaring generics. 
I'd love to see that claim backed up. I design by contract and will use interfaces everywhere unless you show me hard facts otherwise.
iPhone redditor detected.
My best guess is, he misread "Map" as some other concrete class. And you can get results much worse than 10 times slower if you pick the wrong concrete class. That's actually THE REASON to use "Map", so you can change to the implementation that gives you the best performance.
&gt; Currently, Mobile Clients are only available for Windows Mobile versions 5 and 6, and Research In Motion BlackBerry devices. The framework does not support the iPhone, Android devices or Windows Phone 7 devices. The Oracle development team is considering extending the framework to include these other devices, but is not ready to make any announcements of what will be supported in the future yet, Mills said. &gt; &gt;Oracle itself deployed the Mobile Client in its PeopleSoft Mobile Inventory Management mobile application, released last week. &gt; &gt;The Mobile Client costs $5 per user and can be priced per device as well. Oracle also provides a free extension to its JDeveloper IDE (integrated developer environment) for designing apps using this client. It kinda screams "don't bother", now doesn't it? I didn't see a single compelling reason to use this in that entire announcement.
Could you elaborate a little more? Is it a tree or a list linked one way or both ways, etc .. ? Please provide the general data structure and maybe the class definition for your node. [Use this.](http://pastebin.com/)
I don't have iPhone.
Eh, no... write it yourself, it's 20 lines worth of code. Dynamic dispatch is a bitch. EDIT: Here's the code for the lazy. On my JDK 6 it's about 2 times difference, so apparently they did some work on it. It used to be much slower import java.util.List; import java.util.ArrayList; import java.util.LinkedList; import java.util.Map; import java.util.HashMap; import java.util.TreeMap; public class Test { public static void main(String[] args) { List&lt;Integer&gt; a1 = new ArrayList&lt;Integer&gt;(); ArrayList&lt;Integer&gt; a2 = new ArrayList&lt;Integer&gt;(); LinkedList&lt;Integer&gt; a3 = new LinkedList&lt;Integer&gt;(); long time = System.currentTimeMillis(); for (int i = 0; i &lt; 1000000; i++) { a1.add(i); } long timeEnd = System.currentTimeMillis(); System.out.println("List: " + (timeEnd - time)); time = System.currentTimeMillis(); for (int i = 0; i &lt; 1000000; i++) { a2.add(i); } timeEnd = System.currentTimeMillis(); System.out.println("ArrayList: " + (timeEnd - time)); time = System.currentTimeMillis(); for (int i = 0; i &lt; 1000000; i++) { a3.add(i); } timeEnd = System.currentTimeMillis(); System.out.println("LinkedList: " + (timeEnd - time)); Map&lt;Integer, Integer&gt; m1 = new HashMap&lt;Integer, Integer&gt;(); HashMap&lt;Integer, Integer&gt; m2 = new HashMap&lt;Integer, Integer&gt;(); TreeMap&lt;Integer, Integer&gt; m3 = new TreeMap&lt;Integer, Integer&gt;(); time = System.currentTimeMillis(); for (int i = 0; i &lt; 1000000; i++) { m1.put(i,i); } timeEnd = System.currentTimeMillis(); System.out.println("Map: " + (timeEnd - time)); time = System.currentTimeMillis(); for (int i = 0; i &lt; 1000000; i++) { m2.put(i,i); } timeEnd = System.currentTimeMillis(); System.out.println("HashMap: " + (timeEnd - time)); time = System.currentTimeMillis(); for (int i = 0; i &lt; 1000000; i++) { m3.put(i,i); } timeEnd = System.currentTimeMillis(); System.out.println("TreeMap: " + (timeEnd - time)); } } 
This is the first thing I wondered too. Why would he be remaking the Java collections package unless this is purely accademic. But, then again, it's not so bad to help someone accademicly. I just hope he's not making a professional product and having to ask this question.
&gt; **Do not use wildcard types as return types.** Rather than providing additional flexibility for your users, it would force them to use wildcard types in client code. [Effective Java](http://java.sun.com/docs/books/effective/generics.pdf).
As someone whose only ever had highschool level experience in programming I've found "Sams Teach Yourself Java in 24 Hours" to be well paced for a beginner who understands programming basics.
Java, write once run....on windows. Or we'll sue. 
As long as the core of Eclipse for Java development (JDT aka Java Development Tooling) has a lot of problems and Eclipse maintainers and contributors deny it, these extra (and useful) features won't make it any better.
Oracle is just going to kill Java. 
Did anyone else laugh out loud when they read this part?
http://lmgtfy.com/?q=hash+password+Java
uh we already have one its called android
If only they would stop caring about backwards compatibility and make the language more powerful...
Don't hold your breath :\ Part of Java's success is and has been not breaking BC, so it's unlikely Oracle will change that.
Yeah, I saw the fit to that niche as well. However, I doubt very much that WORA really has a place in the mobile market, especially when it's backed by a resource pig tech like JSF. But even if that is never an issue, native development on each of the mobile platforms is going to be way easier than tying yourself to their solution. For example on WinMo, why would I go with anything besides Visual Studio and .NET? It's already ridiculously easy. Add to that the their silly licensing and even dumber charges for the run-time client and it's just a non-starter for the most part.
Try changing KeyStroke.getKeyStroke("pressed CONTROL") to KeyStroke.getKeyStroke(KeyEvent.VK_CONTROL, 0) or KeyStroke.getKeyStroke(KeyEvent.VK_CONTROL, InputEvent.CTRL_DOWN_MASK). If that doesn't work, you can use use [Component.addKeyListener(KeyListener)](http://download.oracle.com/javase/6/docs/api/java/awt/Component.html#addKeyListener%28java.awt.event.KeyListener%29). That lets you get the nearly raw keyevents from the OS. I'm not sure how to replicate WHEN_IN_FOCUSED_WINDOW. Maybe you will need to add the listener to every component(?) Your other question ("is there a way to make it only be called once per hold?"), I don't think there's an easy way to do that because it depends on the press &amp; release key events sent by the OS. E.g., if I remember correctly, holding a key down on Windows doesn't generate a release until the end whereas on Linux it does repeated release &amp; press events while held down.
&gt;KeyStroke.getKeyStroke(KeyEvent.VK_CONTROL, 0) Doesn't work. &gt;[KeyListener] I actually tried that first, and it didn't like control/shift either. While looking around trying to find a solution for that, I discovered the InputMap/ActionMap/KeyStroke/etc. way, which seemed like a generally better idea. &gt;I don't think there's a way to do that because it depends on the pattern of press &amp; release key events sent by the OS. Ah, okay. Well, it's not a big problem. All that happens in `actionPerformed` is `shift = false` or `control = true` or whatever, so it shouldn't be a major performance problem. &gt;on Linux it does repeated release &amp; press events while held down. I can confirm this. And thanks for the heads-up. 
Did you try KeyStroke.getKeyStroke(KeyEvent.VK_CONTROL, InputEvent.CTRL_DOWN_MASK)? (I was editing my comment.) Also, I guarantee you the KeyListener interface *does* work for modifier keys. There isn't a lower-level interface in Java, so if it didn't do modifier keys they couldn't work at all. E.g., pressing ctrl on Windows I get: java.awt.event.KeyEvent[KEY_PRESSED,keyCode=17,keyText=Ctrl,keyChar=Undefined keyChar,modifiers=Ctrl,extModifiers=Ctrl,keyLocation=KEY_LOCATION_LEFT,rawCode=17,primaryLevelUnicode=0,scancode=29] on canvas0 java.awt.event.KeyEvent[KEY_RELEASED,keyCode=17,keyText=Ctrl,keyChar=Undefined keyChar,keyLocation=KEY_LOCATION_LEFT,rawCode=17,primaryLevelUnicode=0,scancode=29] on canvas0 You don't get typed events though, just pressed &amp; released, because the modifier keys are not characters. 
http://www.reddit.com/r/java/comments/g3huq/need_help_accessing_object_of_an_arraylist/c1kqwwm
So I ran the tests 3 times. For the sake of 90 milliseconds over a 1 million insertions, I'll gladly develop the more effective, loosely coupled way. From inside eclipse: List: 169 ArrayList: 255 LinkedList: 316 Map: 660 HashMap: 583 TreeMap: 1094 Next pass: List: 183 ArrayList: 235 LinkedList: 314 Map: 654 HashMap: 591 TreeMap: 1078 3rd pass: List: 179 ArrayList: 258 LinkedList: 340 Map: 699 HashMap: 600 TreeMap: 1121 Also, modify your code as follows: Map&lt;Integer, Integer&gt; m1 = new HashMap&lt;Integer, Integer&gt;(1000000, 0.75F); HashMap&lt;Integer, Integer&gt; m2 = new HashMap&lt;Integer, Integer&gt;(1000000, 0.75F); TreeMap&lt;Integer, Integer&gt; m3 = new TreeMap&lt;Integer, Integer&gt;(); // no constructor to test with default initial load factor, on my system, using the interface is faster. So what the hell is your point and where are you backing this up other than in a silly application. List: 152 ArrayList: 214 LinkedList: 261 Map: 446 HashMap: 539 TreeMap: 946 
&gt;Also, I guarantee you the KeyListener interface *does* work for modifier keys. There isn't a lower-level interface in Java, so if it didn't do modifier keys they couldn't work at all. E.g., pressing ctrl on Windows I get: My mistake--the problem was that it didn't have focus. I tried `requestFocusInWindow()`, except that fails. &gt;Did you try KeyStroke.getKeyStroke(KeyEvent.VK_CONTROL, InputEvent.CTRL_DOWN_MASK)? Brilliant, that works! Thank you so much! --------- Note to future Googlers: To get the key release, use `KeyStroke.getKeyStroke(KeyEvent.VK_SHIFT, 0, true)`. The 0 is because you're no longer holding down any modifier keys; the true specifies that it's for a release, not a press (if omitted it defaults to false).
I like Head First: Java. I will surely be called a poser tourist for this, though.
I assume SCJP? Back when I could get a raise for it, I passed my SCJP using [Sierra/Bates](http://www.amazon.com/SCJP-Certified-Programmer-Java-310-065/dp/0071591060)
There is quite a good discussion [here](http://stackoverflow.com/questions/75102/best-java-book-you-have-read-so-far).
That is awesome. Thank you so much for what has to be Eclipse's most glaring omission.
That will be really sweet : //Marketing people asked us to add some cloud in our application (ticket #4378) Application.setCloudEnabled(true); WebConfig wCfg = WebConfigFactory.getInstance().buildNewWebConfig(); wCfg.enableAjax(); wCfg.setHtmlVersion(new HtmlVersion(HtmlVersion.FIVE)); wCfg.setGradientLogo(true); To web 3.0, and BEYOND!
To clear things up: Not my project. I have only found the link and found it would be nice to share
Well thanks for sharing. I've been waiting for this for awhile too.
Wow. I've been waiting for this for so long. It's like the rapture for java programmers :)
why isn't oracle doing anything with RTSJ?
As good as it is, I still have issues with various menus under Ubuntu 10 using the default theme. :(
excellent! 
This reads like it was written in 1995. All the references to C++ increase that feeling.
Great find, thanks for the share! Does anyone know of anything similar for Visual Studio? I also dabble in C# and would love to find a similar site/project for Visual Studio. Thanks again!
Thanks so much this made my team and i's day! Themes are good so far and should get better with further adoption.
 public class HelloWorld { public static void main(String[] args) { System.out.println("It works!"); } } save that as HelloWorld.java and run: javac HelloWorld.java java HelloWorld 
Zenburn!!!
While that is a good test to make sure the JDK is installed properly, I suggest the OP install Eclipse ASAP.
i just got rid of eclipse, cause i kinda wanted to start from scratch and then move into eclipse. I installed eclipse and the android sdk a few weeks ago... and there were just too many settings and i think i screwed eclipse up somehow. It kept telling me that there already was a helloworld class... but i couldnt find it. so i got this book http://books.sharedaa.com/2008/01/head-first-java-full-book-free-download.html, and was going to start from the bottom up. But if you guys honestly think i should just start with eclipse ill give it another try. I think im going to just start with java and run and test with that before i even start messing with the android enviroment.
which version of eclipse? classic?
Get Eclipse Galileo. Trust me, once you figure out how to set up &amp; run a project, this is a great IDE.
okay. so http://www.eclipse.org/downloads/packages/release/galileo/r but which one?
My favourite is Eclipse Classic. :)
My favourite is Eclipse Classic. :)
My favourite is Eclipse Classic. :)
Eclipse IDE for Java Developers
If you want a really simple java editor without the learning curve of eclipse, I would suggest DrJava. It doesn't have autocompletion, but when you just want to compile and run some simple java programs and not learn the intricacies of an IDE while trying to learn java, it's pretty good. I learned java using it. http://www.drjava.org/ 
I too like simple programming (vim/notepad2/etc) for programming and just started Java. I also installed the JDK and tried to do it without an IDE, trust me its not worth it. You will eventually give in and use one as its just a LOT of unnecessary work not to. Everyone is all crazy about Eclipse but I tried Netbeans beta 2 and love it. I have even been trying it out with a little PHP! 
Maybe it's just me, but I found that those themes are all ridiculously hard on my eyes. I have a very bright monitor and the result with most of those is that the neon-bright text on black background hurts. I actually like the Eclipse default. Nice find, but I'll pass.
My favourite is Eclipse Classic. :)
I think this whole thread is people trolling each other. OP asks how to build a "Hello world" program, even though he's apparently got *Head First Java*, which as I recall has a "Hello world" program in, like, the first chapter. Everyone except adam41 responds by saying to install a full-fledged IDE as soon as possible and not to make sure the JDK is running first. To the OP: if you're serious, just read through *HFJ*. It'll do ya right.
Just remember, everything extends the Object class (except primitives).
Yes..... The "Beta" period is about a month. Just enough time to let you set up a whole bunch of stuff on your server, then they hit you with a mandatory survey (if you want to keep your server going). At the end, they offer you a discounted price to keep your host up and going, but with an option to also destroy it and pay nothing. I personally don't mind paying for something, but don't give me something I am going to have to pay for under the guise of being free, period. Just saying. Now, on the flip side, my cost per month would have been about $13, which isn't awful, but just not a cost I was expecting to incur with the "Free" word on their page. I can say that if and when I do need a server, I would certainly consider them, though. I liked having my own server and being able to set everything up from scratch w/o someone telling me what I could and couldn't have. 
on a slightly different note I'd like to highly recommend the "thenewboston" YouTube video series on java programming if you'd like to see any concepts from the book explained in an alternative way.
Hey drux, thanks for the shout!
Yeah, at the time of my original posting I was all excited, because I finally found something, on my own, that I could share with reddit. Unfortunately, I wasn't aware of the bait-and-switch routine they were pulling. I am still using the service to test one of my web applications in a low-memory environment. The chunk has been rock-solid since the day I provisioned it. I would definitely consider using them again in the future. Also, my friend, who originally recommended chunkhost to me said that they will give you the option of getting a machine image of your chunk when you decide to leave them. He was only a beta user at the time. YMMV. So, I am going to see what happens when my "free" trial is up.
Sorry for the traffic :)
Give the community edition of [IntelliJ](http://www.jetbrains.com/idea/download/) a go. I recently switched from Eclipse as my primary IDE and, while I'm missing some things from Eclipse, it's much cleaner and has it's own highlights (maven support is built in and works well). With that said, start on the command line in a nice plain text editor, and take this advice: http://www.reddit.com/r/java/comments/g5jj6/hey_guys_brand_new_to_java/c1l3erf
&gt; To the OP: if you're serious, just read through HFJ. It'll do ya right. QFT
you can use this tutorial (http://eclipsetutorial.sourceforge.net/totalbeginner.html) to start learning Java with Eclipse ;)
Java is "dead" in the sense that we don't trust the company pulling the strings there's a very real worry that the proverbial pooch will get screwed in one form or another. You'll still have jobs for Java even if the language were to stop dead in it's tracks. Someone needs to maintain all of those legacy applications. A language is dead when it stops evolving or when people stop making new applications and focus on maintaining and porting source code to other langages.
&gt; [...] but surely the jet fighters/starwars figures in the header, and the giant RTS scenes on the frontpage must have set alarm bells ringing? In his defense, the author of the JSF Framework [PrimeFaces](http://www.primefaces.org/) calles himself "Optimus Prime" on the prime faces forum and the logo also looks transformerish. 
&gt;A language is dead when it stops evolving or when people stop making new applications and focus on maintaining and porting source code to other langages. Neither for which is true for Java
Yeah but the point is some people fear it happening in the not so distant future.
"Fear" is not the same as "dead".
My personal opinion is that when people say that "Java is dead" they really mean either "Java is no longer top dog" or "Java is no longer the majority of web development".
Ahah, didn't know that. Though it is not a valid excuse in this case, since he was looking for JAXRS / Spring advice, not PrimeFaces ;)
most likely he found the forum through google.
I meant that your project wouldn't be the first Java Enterprise framework with strangely non-corporate imagery.
I disagree. Java is the top dog now where it was 4/5 ago. Java=enterprise. Java never has been the mayority of the web. That place is taken by php... Oh wait! I'm reading Php is dead 5 years now.
Java will be killed by its succesor. But right now there is no such thing as a static typed, garbage collected, vm based language running consistently on so many platforms. May be go.... I do not trust mono on linux to run perfectly all .net libs.
just checked this out. seems like good practice for eclipse, but i gotta figure out wtf Java is first. I want to know WHY a semicolon goes after every statement... etc. Saved. So thanks!
&gt; statically typed, garbage collected, vm based language running consistently on so many platforms Scala.
"Java is dead" == "The innovation and impressive stuff happens somewhere else now" I think that's the right translation. Java is more or less like COBOL now. It won't go away in the next 200 years. But if developers want to run on the JVM and don't have a large legacy Java code base, there is no reason to use Java instead of Scala.
But this has more to do with the availability of an excellent runtime and decent application servers, not because "Java the language" is such a great thing. In the past In the future Java language Scala language Java standard library Scala standard library Java virtual machine Java virtual machine Third party libraries Third party libraries Application servers Application servers Java IDE's Scala IDE's Not a big deal indeed.
I haven't used Scala so I can't really say how good it is. However, I disagree with the statement "there is no reason to use Java instead of Scala". From a developer's perspective, there is a lot more demand for Java programmers than for Scala programmers, therefore Java experience is much more valuable. From a company's perspective, there is a large available pool of developers with Java experience that the company can hire for a project, while there are very few Scala developers. Edit: accidentally stated "there are very few Java developers" above, corrected to what I actually meant to say, "there are very few Scala developers".
I think no one is denying that, but you're missing the point there. Of course there are super-conservative businesses which will never consider anything else except mainstream, like "Eclipse, Java, Maven". This doesn't change the fact that objectively and technically there is nothing what "Java the language and standard library" does better than "Scala the language and library". Quality doesn't necessarily correspond to _popularity today_ (look at PHP). Independently of that I don't think that concentrating solely on a single current mainstream language makes a developer particularly valuable. Neither from the employer's nor from the employee's POV.
Thank you for making this point. 
As a language, yes, Scala could be the successor, but I think people are looking for a successor *technology stack* that isn't under the thumb of a company like Oracle or Microsoft. Or Apple. In that sense, Scala suffers the same sort of "fear of dying" that Java does, because it depends on the JVM.
How else are forums found?
ie. he didnt click through the homepage. despite popular beleif no one looks at anyones homepage.
With Duke being effectively dead, I for one think it would be completely awesome if the FOSS Java community adopted Transformers for mascots/project code names. :)
Please ignore the whole idea of installing an IDE right now and just read through *HFJ*. Using an IDE will give you too many moving parts, so you won't understand where Java stops and where your IDE starts. Install and evaluate several IDEs *after* you understand what's going on.
You seem to be pretty confident about the ability of the average enterprise programmer to learn Scala.
wow really? we're going to call someone out on reddit because they posted in the wrong forum somewhere on the internet. way to stay classy reddit. This might have been news worthy if the guy who posted incorrectly had responded with some attitude or complete denial that he was in the wrong place, but as is this post isn't even relevant to java or anything else.
By this you mean don't use wildcard types as return types in implementations, correct? I am using a wildcard type in my interface as the return type, and the actual implementations don't have any wildcards in them. (I am pretty sure this is what you mean, but I have been pretty sure and wrong a whole lot in my life...)
Great game engine though. Pretty close to the original TA in experience, much nicer to look at though.
C -&gt; C++ -&gt; Java -/&gt; Scala Scala may be "better", but it's too "different". The future of Java is Java 7. Java 8 will continue the trend of stealing proven features from "cool" languages.
The difference in speeds you are seeing has nothing to do with dynamic dispatch. The reason why your insert speeds are so different (almost double) is you overflowed the size of the default heap in the jvm and it had to allocate more heap space to do the additional add's. Switch the order so you do the List&lt;Integer&gt; inserts first and the times will be opposite.
That u can safely ignore
I would have to absolutely disagree with everyone recommending an IDE before you've even written your first program. Jumping straight into an IDE will mask a lot of basic understanding about Java. Write some simple programs first. Use the actual compiler. Have a play about with the classpath. Spend a bit of time looking at the compiler output (rather than the output an IDE will give you if you get something wrong) and try to understand exactly what it is you got wrong. Build a JAR manually. There are so many things you either won't get a chance to learn oo will have an incorrect understanding of if you jump straight into an IDE.
Two Java specific books you should read cover to cover (and keep around as an effective reference) are [Effective Java](http://www.amazon.co.uk/Effective-Java-Second-Joshua-Bloch/dp/0321356683/ref=sr_1_1?ie=UTF8&amp;qid=1300441065&amp;sr=8-1) and [Java Concurrency in Practice](http://www.amazon.co.uk/Java-Concurrency-Practice-Brian-Goetz/dp/0321349601/ref=sr_1_4?ie=UTF8&amp;qid=1300441107&amp;sr=8-4), and you should also seriously consider reading [Design Patterns](http://www.amazon.co.uk/Design-patterns-elements-reusable-object-oriented/dp/0201633612/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1300441185&amp;sr=1-1). The examples in it aren't written in Java but they hold for all OO languages.
I've noticed a trend in software programming, where some developers encounter a problem, don't even try to read the documentation, and fire a post on the first forum possibly related to their problem (which has often been answered a thousand times already...). They don't even attempt to search. In this case, the poster chose a forum which had *absolutely nothing* to do with Spring / JAXRS, which would have been obvious, had he tried to search... I guess he might have had good reasons (tight deadlines, sleep deprivation...), but I still have a hard time sympathizing with him, and I think it's actually pretty funny, especially the response he gets. I guess I'm already jaded, at 24. This made me think of [Eric Steven Raymond's FAQ](http://www.catb.org/~esr/faqs/smart-questions.html), and specifically of the [Choose your forum carefully](http://www.catb.org/~esr/faqs/smart-questions.html#forum) chapter.
this is interesting, but when i want to iterate through a tree and filter it, i think recursion, not iteration. handling tree state seems to be the justification for this 78 file feature. let the stack do it for you.
Use Scala. Problem fixed.
The possibilities how Java can evolve are severely limited, due to earlier design mistakes in the language - and as much as I love Scala - I think most of the planned additions to Java7/8 don’t fit Java at all. The current development of the Java language suffers from a NIH syndrome. Take the planned collection literals for instance. They introduce a huge change of syntax instead of just taking a look at Guava and adding a static method to their collection classes, like “ArrayList.of(“item1″, “item2″, “item3″)” or HashMap.of(...) and so on. Another example are extension methods: Java’s proposal of adding “defender methods” really smells like they looked at C# and thought “how can we provide less functionality while making the definition and usage more cumbersome?”. Let’s go on with “closures/lambda”: “How can we provide this thing – which every other language had since the beginning – in a more restrictive, annoying way with a syntax which differs from all already established alternatives in use?”. I really hope that Oracle finally accepts that Java is at the end of its development and concentrates on providing useful libraries like NIO2 (Java 7) and JSR-310 (not decided yet) and stops trying to cram useless things into it. In the end, those shops who need a modern language already use Scala and the shops who are still running Java 1.4 … they don’t really care about the features anyway.
Another approach using annotations: http://www.nesterovsky-bros.com/weblog/2011/01/24/YieldReturnFeatureInJava.aspx
&gt; An implementation of "yield" (as seen in **C#**) in Java. Makes iterators a lot easier to write! FTFY.
Fucked up syntax introduced.
WTF How could the poster confuse c# and python!!? 
Hear that Mr Anderson? That is the sound of inevitability....
you need to leave reddit and ycombinator land once and awhile
What happens when you overflow the stack?
It sounds way cooler if you claim it was Python-inspired.
It probably was. The regular expression engine in .NET is actually almost identical to Python's.
Still in the learning process myself, so I could be wrong on this, but your drawRowOfBricks method adds BRICK_WIDTH to x before using x, possibly pushing it over to the right.
No time to do your homework, but you'll learn a lot by using a debugger to set breakpoints and examine the data to see what's going on, then figure out why it's not what you expect. You can use Netbeans, Eclipse, or whatever you like - they're free, and they work.
Thanks, that combined with one more small thing i noticed on my own fixed it.
I'd love to, but i haven't been able to learn it yet (using the debug options in Eclipse, i mean). I started reading up on things tonight so hopefully i'll be getting better soon. (I've only been doing this for 1.5 weeks.)
Dude, this isn't his homework...Stanford's on the quarter system and just finished their finals. This guy is learning on his own.
I think you should write a few programs without an IDE to get started. It is simple to get Java working without it. Once you have set the environment variable (which looks like you already have), the "hard part" is already over. As spiffyman said "you won't understand where Java stops and where your IDE starts." You will gain a much more portable understanding (applicable to any environment that runs Java) of the language and platform if you start without an IDE. 
stop spamming your blog. even if its interesting, thats not how this works.
[Let me google that for you](http://lmgtfy.com/?q=how+to+use+jar+files)
That pretty much depends on whether using client will work on the interface or the implementations. But what sense does a public interface make if you don't use it? 
I get it... We can use zip program to unpack the .jar files and use the .class decompiler to compile class files back to java source code again. And now we can import library using the both jar and java files Thanks for help, anyway :)
Find a copy of this: http://www.amazon.com/Programming-Language-2nd-Brian-Kernighan/dp/0131103628/ref=sr_1_3?ie=UTF8&amp;qid=1300812062&amp;sr=8-3 If you really want to learn all of (most of) the "Why" crap up front. I got a copy at a used bookstore for $4. However, you don't worry about learning WHY it goes there, just learn to realize WHEN it needs to go there. It has to do with statement termination, so the compiler can properly convert your code to machine code. I came at programming with your same mindset "why" but I realized that the answer is usually "doesn't matter to me" so then I started focusing on "when" and I realized that the "why" question eventually answered itself down the line at a time when I was better able to grasp it anyways.
The formatting doesn't have to be exact. You can have as many line breaks, spaces, etc as long as the syntax is correct. At least, that's my experience. The line breaks and tabs are for readability only. I hope that helps!
Thats exactly what I needed. Spaces dont matter. cool. thanks.
I guess you should read [Java Code Conventions](http://www.oracle.com/technetwork/java/codeconvtoc-136057.html).
wha....? I think pspkicks316 answered exactly what i was asking. 
title very misleading, there were no legos in the article.
I'm so confused 
Well that's another hurdle in trying to persuade people of Java's merits.
theyve been doing this for a few years now. mcafee is new though usually its some kind of toolbar
I actually like programming in Java. Just not sure I really like Oracle's JVM (and associated nonsense).
think of it this way, at least you get the option to not install mcaffee. 
Makes me glad my flavors of java are OSX (for now) and linux. 
Oracle is really starting to get on my nerves. It would have been so much better had Apple bought Sun.
Do you think that Apple would pull that kind of marketing crap? McAfee security scan? Really? Java would have been more integrated with Mac OS X and it would have given them a server business. Oracle just continues to mangle Java. 
&gt; Also Apple would just charge you to use the IDE, SDK and Debugger. How is that better? 5$ hardly breaks the bank. reco-oping some costs isn't a bad thing. My interest in Java has been from the desktop/UI perspective. they are just ruining the reputation of java with this bullshit.
What the hell Oracle? [FTFY]
Nobody uses the Sun (now Oracle) IDEs or Debuggers. (Eclipse.)
Nice nick!
I do (http://sourceforge.net/projects/mionchrom/)
No guess not. I know Oracle owns Java but thought as of 1.6 Apple built their own JVM (though I always assumed the worked with Sun on this). There was a big deal about Apple not providing Java anymore in future OSX releases a few months back. Our Linux distro is handled by our net guy. Now I'm going to ask out of curiosity. Guess I could just do a java -v on those servers to get the details. 
Personally I wish IBM had bought Sun, not Apple or Oracle.
Sorry to burst your bubble,but loads of people use Netbeans and I'd rather shelve out for IntelliJ than use Eclipse again the way things are currently (alas judging from Oracle's treatment of the Java ecosystem that day might come rather sooner than I'd want it to).
Apple? The megalomaniac's company? New capital of vendor lock-in and assorted software villainy? Are you nuts?!
Actually Apple currently is Apple built, but it is expected next JDK version (1.7) will be OpenJDK built (so completely open source). I'm not sure if we will see JDK 1.7 on Mac OS X in a timely fashion though. I keep checking the project status and there are still huge parts missing. My guess is we'll have the usual 2 year lag behind other platforms as before. At least for JDK 1.7 since it's really the first open source release (that will include Apple donated source code and Cocoa Swing widgets). Perhaps after that we will see synchronized releases.
same could be said about yours :D
Sure they do. Netbeans is a good IDE (it has a good GUI designer and real VIM plugin, it supports C, C++, python, ruby, javascript etc development). Eclipse is not Sun but originally IBM technology that was later open sourced.
Now that IntelliJ has a free version, there's very few reasons to use eclipse. The only time I fire it up is to use the drools workflow editor (shudder).
I'd rather **shell** out
Not sure why you're getting downvoted; your argument is valid (and not simply because I agree with you). Oracle is much better suited to push Java forward than Sun was. Whether they actually do or not has yet to be proved. I think Apple would also be suited to push Java forward; but I don't think they would without monetizing it even more than Oracle is (or will).
Ice**d**Tea has been OpenJDK for a while now.
$5 doesn't break the bank. I imagine that, at first, choosing to pay $5 for an 'official' IDE vs. an unofficial free IDE would be reasonable. However, given Apple's track record, I think they would eventually close that choice to only official prodcts. Then that scheme would sneak into frameworks (or further). The community would really suffer from something like that - $5 for one thing isn't much; but $ for each framework (or even library) used would add up to a lot. I certainly disapprove of the subject of this thread, but at least it is optional.
It's already pretty irrationally low. And besides, you can always just bundle a JRE with your application when you distribute it so that users never have to even know your application is written in Java.
Y...you can do that? This. Changes. Everything.
it is boring to have the same thing for years, but none of the new themes here is close to the quality of the default theme in my opinion. I tried and was disappointed.
Yep, I know a lot of companies that use NetBeans as their IDE of choice, and many universities use NetBeans to teach their students Java throughout most of their courses.
Ya, I might agree with that as well.
Do they still do that with the latest versions? I just got version 24 (JRE &amp; JDK) and I didn't see them anymore.
Well, since Apple is, first and foremost, a marketing company, yes. I'm certain they'd do the same "bonus add-ins" in the Java installer that they do in the Quicktime installer.
Yes... but it wouldn't be so garish. :) It would have all the style and flavour of doing *you* a favour by adding it in. I mean really. Apple isn't gauche. :) edit: I still separate the computer from the media empire but it's getting harder and harder. i still think the product itself is a quality product.
Really... So when apple does the same thing it is doing you a favor?
Came here to say this. I like to think of Java as a beautiful woman who's been kidnapped by the ogre named Larry Ellison.
The guy who wrote that article is a self-righteous asshole. Perhaps why he hasn't had any updates in nearly three years. P.S. I write Java daily and quite enjoy doing so.
Ahhh, I miss bileblog... he absolutely wrote in a style intended to offend, but he was also so damn poignant. Hani was a true character.
he reads like a markov bot trained on curse phrases. turd polish monkey butts!
He is a java-hater-hater.
Eclipse has SWT, GWT is the Google Web Toolkit.
Oracle jumping the shark...
They need to get their money somewhere...
I've used this before in the course of my work, and it's a decent enough tool for java (although not nearly as nice as the tooling we use in games for C++, it could be run on the fly, show the stack trace and usage of every object, etc.). My only gripe is that a GC call is forced before the dump is generated so you lose a lot of potentially juicy things. I've spoken with the authors of the article via e-mail before and they were definitely helpful.
So it's a proposal on how they can start submitting their proposals. It is cool that they will probably use Mercurial to version the documents, write them in Markdown, and auto-publish them to the web. I guess I was just hoping that we might starting getting a list of what may be in Java 8.
Whats that smell? Ahhhh.... Community Nuub again!
This is a great story. We use version 2.9 here and now I can't wait to upgrade to 4.x!
Believe me that my posting wasn't a complaint towards them, it was more of what I experienced. I definitely didn't expect the "bait and switch" as you put it. Considering the time I had put into setup and configuration, if I had the $$ to continue (which would have been about $12 or $13 a month after the discount, I would have continued. Unfortunately I couldn't, so C'est La Vie. :) Hopefully all goes well for you. 
Seems like they might have been better off trying to get this Jean-Phillipe Barrette-LaPierre bloke to either contribute a Java impl or at least provide enough information or explanation for the Lucene guys to port it. This business of taking Python that is not understood and automatically converting it to Java that essentially un-understandable and dropping it into an extremely widely used software lib like Lucene makes me a little nervous. On the other hand, this is a directly verifiable and testable algorithm and it sounds like everything is green, so maybe the performance improvement is worth it in this case. Also, I suppose ultimately all code is compiled into a lower, less understandable form so perhaps this can be seen as just another case of that.
Anyone used this with Hazelcast or ActiveMQ?
http://www.reddit.com/r/learnprogramming
Well it's not free, but if you're a student the [ACM](http://www.acm.org/) has an $18 annual student rate. The membership gets you access to a TON of free online classes and their seemingly endless digital library. I'm in my third java course at my college, but I'm using the ACM's classes to learn C++ and working on getting Microsoft certified.
Great write-up, very thorough, but to me this also showcases how burdened java has become with backwards-compatibility. I really believe new languages are the future of the JVM.
Java is hardly beautiful. More like a a hot tramp who fucked everybody and now it is Larry Ellisons turn.
My boss and I (I work in a Java shop) have talked about working together on a side project where we'd basically say "fuck backwards compatibility!" and start with the JDK 7 or 8 featureset and add things we liked from various places - AspectJ, C#, etc. - and "make Java better." I may never do it, but I'd really love it if it were done.
Check out "thenewboston" on YouTube. 
These tries really look a bit helpless though. val statesToCapitals = Map("Great Britain" -&gt; "London", "France" -&gt; "Paris", "Germany" -&gt; "Berlin") statesToCapitals: scala.collection.immutable.Map[java.lang.String,java.lang.String] = Map(Great Britain -&gt; London, France -&gt; Paris, Germany -&gt; Berlin) What's wrong with that?
Did you look at Scala already? It might have all the things you want, and much more.
Scala = Java with retarded syntax.
Java: Map statesToCapitalsTemp = new HashMap(); statesToCapitalsTemp.put("Great Britain", "London"); statesToCapitalsTemp.put("France", "Paris"); statesToCapitalsTemp.put("Germany", "Berlin"); Map statesToCapitals= Collections.unmodifiableMap(statesToCapitalsTemp); Scala: val statesToCapitals = Map("Great Britain" -&gt; "London", "France" -&gt; "Paris", "Germany" -&gt; "Berlin") I see your point. NOT.
Dang man..harsh. 
I think this only works with gtk stock icons and not the gnome stock icons. If anyone knows how to get the gnome stock icons without groveling thru the file-system looking in various places, please let me know.
I'm so glad this exists. My professor is pretty horrible at teaching (and boring at that) so to have video tutorials for everything is awesome.
Yes. I concede this is true. However, Apple would spin it better. I'd be lulled into a feeling that they would be doing me a favour by doing so. Oracle is just so garish. 
I'm not sure what the confusion about null is. If you have more than a surface understanding of Java's reference system, it's pretty trivial: null is a reference value that doesn't reference an object in the heap. Nullable Java variables are references, not objects, so a null reference is just a reference without an object's location to dereference. Not that hard! Someone needs to teach these monks they shouldn't be pondering Java questions when they obviously never finished their first course in Java!
You may have missed the pointer.
So is the point that we shouldn't try to differentiate between something being nothing and something representing nothing? This may have gone over my head.
You are not suppose to use nextInt() for this kind of job. Just split the imgLine into tokens, using a regular expression. Then count the lines to get the height and the longest line is your width. Code looks like this (untested, won't probably compile, but then again ... it's your homework to get this working, isn't it?) Scanner scan = new Scanner(System.in).useDelimeter("\n"); // Line end while (scan.hasNext()) { imgHeight++; String tmp = scan.next(); if (tmp.length() &gt; imgHeight) imgHeight=tmp.length(); } 
Yeah it is my Homework, deadline is 1st of April so im kind of a little bit screwed if this isnt done by then. So ill be working overtime, im a daytrader, got a job in the afternoon at a bank and trying to finish university and kind of left the programming stuff for the end so any help here is appreciated. Here is where im sort of at a dead end: The length(rowlength) needs to be the same on all lines(rows) the amount of rows can differ though thus: xxxxxxx xxxxxxx xxxxxxx xxxxxxx xxxxxxx Would be valid and xxxxx xxxx &lt;--- Invalid because this is only 4 and the others are 5 in length. xxxxx xxxxx xxxxx Im incredibly confused about how to implement this, im sort of understanding the basic concepts behind scanner but i dont understand how im supposed to make sure it checks the lines Havent used the delimiter yet but im liking the idea somewhat. so if i implement the following: while(scan.hasNext()) { // Start scanning the imput until the end of file has been reached imgheight++; // increment imgheight integer by +1 for every line scanned in, thus giving us the number of rows(width) imgLine = scan.next(); //Save Scanned thingy into string imgLine if (imgLine.length() != something something somthing //This is the part how do i execture the comparison of each lines length to the other? This is the part where im stuck for hours.. maybe im just stupid but i havent found anything in "Java How to program 7th Edition" so far concerning this. 
For example lets assume the length needed to be 80 and the width 50 then i could easily programm this here: import java.util.Scanner; public class AsciiReader{ public static void main(String args[]){ int countLines = 0; Scanner scan = new Scanner(System.in); while(scan.hasNext()){ if(scan.next().length() != 80){ System.out.println("Length less than 80"); return; } countLines++; } if(countLines != 50){ System.out.println("Width less than 50"); return; } System.out.println("Length and Width are 80 and 50"); } } I know for a fact that this works because ive just tested it. But here is my issue which i cant resolve (also see the other post i just did). I cant directly implement the output of the length value unless its set in stone. i dont even understand how. Secondly if i just need to make sure the length of each line is the same how the fuck am i supposed to do that? Do i somehow magically save the first line of the ascii image into an integer or and then let it compare to the rest of the lines? If so how would i do that... Seriously stuck here....
He should reference his source.
AGGGGGH! ::hurls shoe::
The next day, another monk came to the master, being unable to sleep through the night while listening to his comrades. He wondered if perhaps the problem was specific to the language used. "Master," he asked, speaking in another dialect, "I too would like to know if null is the value, or an absence of a value." The master considered this, translating it in his mind. "Mu!" the master replied, as he walked away.
Tried rewriting this into this: import java.util.Scanner; public class AsciiReader{ public static void main(String args[]){ int imgLength, countLines = 0; String imgLine = ""; Scanner sc = new Scanner(System.in); while(sc.hasNext()){ countLines++; //increment integer for every line read String imgLine = sc.next() //dumping the first line into the String imgLine int imgLength = imgLine.length() // int imgLength is given the numerical value of imgLine String if((sc.next.length() != imgLength) { // Would This start comparing each of the next lines to the value stored in imglength? System.out.println("Bad ASCII Image, Line length differs, Please recheck input"); return; } else { system.println(countLines + imgLength) } Any comments/ hints? 
Whoosh!
This is a fantastic book, I received a copy in the mail a few weeks ago. It's also light years above the OPs head, based on what is being asked.
ah the semi predicate problem 0 but true
No, I got it. It's just stupid that this exists - because it only exists because people don't understand Java's reference system and its relationship to null, which I felt obliged to explain.
I'm not familiar with minim, but have you tried using the Java Sound API (the stuff under [javax.sound.sampled](http://download.oracle.com/javase/6/docs/api/javax/sound/sampled/package-summary.html)) directly?
From the [java tutorial](http://download.oracle.com/javase/tutorial/java/javaOO/accesscontrol.html): "Public fields tend to link you to a particular implementation and limit your flexibility in changing your code" so best practice is to "Use the most restrictive access level that makes sense for a particular member"
The [java tutorial](http://download.oracle.com/javase/tutorial/java/index.html) online is pretty good for learning the syntax This has been asked [before](http://www.reddit.com/r/java/comments/a6u2h/what_are_good_ways_learn_java_please_post_any/) Stack Overflow has a good list of [java books](http://stackoverflow.com/questions/75102/best-java-book-you-have-read-so-far) Reddit has prepared a [reading list](http://www.reddit.com/r/books/comments/ch0wt/a_reading_list_for_the_selftaught_computer/) for you. And some people of questionable repute might also pull down something like [this](http://thepiratebay.org/torrent/4670029/Java_Books_Collection) And I'm also going to direct you to http://www.reddit.com/r/learnprogramming/
I don't understand the point of this. With the following property set: class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader and assuming I have a bunch of stuff under src/main/resources/templates I can just do: VelocityEngine velocityEngine; // init the object velocityEngine.getTemplate("templates/myFavoriteTemplate.vm") which works when I have these resources packaged in my jar as well.
codingbat.com has a s lot of good practice problems for beginners.
I hope they've worked out some of the problems with the compiler. Netbeans is by far my favourite IDE, but it can be very frustrating when it just refuses to update compiled classes
What the hell, it always on topped my Always On Top Process Explorer. :) Also, it crashes with a non-256x256 image (ie. the image has to be exactly 256x256) with: java.lang.ArrayIndexOutOfBoundsException: Coordinate out of bounds! at sun.awt.image.ByteInterleavedRaster.getDataElements(ByteInterleavedRaster.java:318) at java.awt.image.BufferedImage.getRGB(BufferedImage.java:888) at clam.a.a.b.a(Unknown Source) at clam.a.a.a.a(Unknown Source) at clam.a.a.a.&lt;init&gt;(Unknown Source) at clam.a.a.a.&lt;init&gt;(Unknown Source) at clam.gui.b.b(Unknown Source) at clam.gui.b.&lt;init&gt;(Unknown Source) at clam.application.ClamCompressionStudio.&lt;init&gt;(Unknown Source) at clam.application.ClamCompressionStudio.main(Unknown Source) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:613) at org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader.main(Unknown Source) Also, works with Java 7 64bit. Who the hell doesn't have at least java 6? :) And I have an integrated graphics chip, a geforce 6150, it works with it. Seems very fast. I'm getting some (rare) artifacts on some frames, though, but nothing special. Would be nice if there was an option to export the chromosomes. I'm working on a similar program myself. What did you use exactly? I can post my source, if you want. This runs way faster than my program, I'm guessing because you run on the GPU (even though my gpu is rather weak)? You used JOCL?
Define pretty decent. What do you know. There isn't much work out there for part time juniors.
So I start reading... &gt; In functional programming, Map and Fold are two extremely useful **operators**, and they belong to every functional language. What the fuck, OP has no idea. Close article.
I'm guessing I would be a junior... but... I am starting this java course series [UCSD Java](http://extension.ucsd.edu/programs/index.cfm?vAction=certDetail&amp;vCertificateID=55&amp;vStudyAreaID=14) but I am pretty sure I am comfortable with everything except JDBC, RMI, java.net and have only used multiple threads a few times. (I'm mainly doing it to get the certificate and make sure I haven't missed anything). I also am just about done with an application that uses ArcGIS to run a naval simulation that keeps track of multiple ships and their interactions with submarines. If you think I'm a junior, what should I know to be able to get some contract work? Thanks! 
Web development is your best bet if you're looking for contract work, but Java web dev is best left to the enterprise biz community - too much boiler plate tedium IMO (and it's my full-time job, so you can take my word for it). I'd suggest contributing to an open-source project written in Java if you want to keep learning. There's no money in it, but it's a great experience and looks good on your resume. Plus, once you starting digging into some real production-level Java code, you'll probably realize that you're not as decent as you think... :) **EDIT:** I skimmed over the part where you said that you've already worked on a real app - sorry if that last line sounded a little condescending. Just speaking from my own experience, I thought I was "pretty decent" with Java when I was in college too, and I guess I was for the most part, but once you start programming to make money, you realize that there's a shit-ton of things out there to learn and not enough time in the day to learn them all. 
Yeah...I know the application works and looks good, but I'm finding more things I want to change as I keep working on it and getting deeper into it. Thanks a bunch for your input!
Java is just a language. You may be able to find some small opensource applications to donate some code to. Maybe even write something yourself. There aren't a lot of "core" (jobs that only use the core J2SE library) Java jobs out there, most are going to be based on some type of other library or toolchain. This could be web backend stuff (J2EE with Spring or Hybernate), it could be a platform like Android, or a wrapper language like GWT.
should probably note it's up towards bucks county straight up 309
I am a java developer with..........blah blah blah, hook me up with trees, man. 
You can look at the [Jajuk](http://jajuk.info/index.php/Main_Page) source code if you want to see some rather good Swing programming. Maybe you'll even want to contribute some plugin or bugfix? :)
only if its telecommute, I'd never venture into that filthy city on a daily basis..
I'm a computer engineering major who was so frustrated my first time learning java. The New Boston helped me tremendously. This guy made videos of coding on Eclipse, and explains every step. So helpful. [Here](http://www.thenewboston.com/?cat=36&amp;pOpen=tutorial) is the link to the java tutorials! Good luck! 
It's not a java problem, it's a Windows problem. Your DOS window buffer size is set to 20 lines.
When I run it, I get the expected output. What environment are you running this in? Is the scroll buffer too small?
Does it make a difference if I'm using a Mac?
I really wish I knew what "scroll buffer" meant. I'm running it in BlueJ.
Unrelated to your stated problem, you have some 'odd' things. In this method: public void setAccNumber(int accNumber) { if (accNumber &gt; 0) { this.accNumber = accNumber; } accNumber = 0; } ... you assign a new value to the *accNumber* parameter that you passed in. The method then ends. This means that your assignment served no useful purpose at all. You can't change the value that the caller passed in. (It's also 'bad form' to change the value of a method argument - it's best to consider them as final).
You have some console window that the output is being written to. The output is 'too long' and scrolls off the top. There may be a setting somewhere to configure how many lines of "scrolling buffer" there will be (but I've never looked at Blue J).
Use this, and it will write it to a file under your home directory. try { final BufferedWriter out; final String home = System.getProperty("user.home"); final String file = home + "/output.txt"; System.out.println("Writing to: " + file); out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file))); for (int i = 0; i &lt; ref.length; i++) { out.write(ref[i].toString() + "\nInterest earned = " + ref[i].computeInterest(3)); out.write("\n"); } out.close(); } catch (IOException e) { e.printStackTrace(); }
I know there is a lot of things wrong with my code. :/ I'm very new to Java and I have been driving myself crazy with this assignment for 3 days. Once I got it to output the proper numbers, I stopped. The whole [assignment](https://www2.seminolestate.edu/dgrant/cop2800/assignments/chap12/chap12_assignment.htm) was gibberish to me. I don't know how I got it to work, but I did. I'm not exactly being taught how to code. It's more like "here's an assignment, do it" kind of deal. So, in turn, I don't know a lot and don't understand a lot of the syntax.
In BlueJ, the console window is called the terminal window. 
And is Java the first programming language you've used?
I have also used a little Visual Basic. I worked a little with it in an introductory class last semester. 
This is a little ahead of my knowledge, unfortunately, and I'm tied down to the specific assignment details. I was able to change the settings in BlueJ to unlimited buffering and it worked perfectly. Thank you so much for replying. I would have never figured that out and it would have driven me crazy. :)
Shouldn't that be final String home = System.getProperty("user.home"); final String file = home + "/output.txt"; final BufferedWriter out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file))); since you're declaring `out` as final?
You mean with the declaration in-line with the assignment? No, doesn't need to be. The compiler checks that there's only one assignment done.
[From here](http://www.bluej.org/doc/bluej-ref-manual.pdf) 7.4 Keep all output terminal window: menu: Options – Unlimited buffering shortcut: — By default, the terminal buffers only the last 48 lines of output. If you want to keep more of the output (for example to save it to a file later), switch on the Unlimited buffering option from the terminal's Options menu. With unlimited buffering, all output is kept in the terminal. This option can make the output relatively slow if the application produces a lot of text. 
You might want to try one of these subreddits instead: * /r/philadelphia * /r/forhire * /r/freelance * /r/jobbit * /r/work
Huh. Didn't realize that. It makes sense though.
Sounds like you don't need the job bad enough.
People will play games if they're good. I think minecraft did a pretty good job demonstrating that. However, for the most part the last time I looked at what's available for game development in java I came away fairly underwhelmed. 
For raw performance when doing a triple A title, C++ I'd say is required. However there is a huge amount of gaming applications that Java is suited for. I've just been looking at jmonkey myself recently. It seems pretty good and straight forward, the only issue is the lack of documentation its pretty bad. That should be fixed when they publish an offical tutorial book. 
Java hasn't been very popular in the past for writing games as its not really been a focus for the language (and probably never will be) but recently however Java + LWJGL has become a pretty good choice for creating games (especially indie). The JVM is pretty damn fast these days with its Hotspots JIT producing performance almost as fast as C/C++ in some cases (and it gets faster with each new Java release). Besides for games most of the heavy lifting these days is done by the graphics card so language speed become less relevant. Other advantages include Java (or most other languages that run on the JVM e.g. Ruby, Python, Scala, etc) give developers the ability to write code much faster then C/C++. It also has solid IDE support (Eclipse, Netbeans, etc) and documentation which is rarely matched by other languages. As well as the advantages it provides for writing server code (so if client and server are written in same language makes it slightly easier). Many new studio's are picking up Java and there have already been a few massive success stories recently e.g. Minecraft and Revenge of the Titans (was part of the humble indie bundle and now selling well on Steam). With other big games like MMORPG Spiral Knights (published by Sega), Runescape (and other new games coming from Jagex e.g. new transformers game) also using Java. Its a pretty good choice for cross-platform games on Windows, Mac and Linux. Getting Java games onto consoles is still a problem. Also the mobile situation is a bit weird but with Android being pretty popular its not too bad. Stuff like LWJGL and JOGL are pretty low level, so not suitable for everyone but the java game toolsets, libraries and engines are improving all the time and there is now a solid choice of libraries and engines like Slick2D, LibGDX, jMonkeyEngine, Ardor3D, jPCT, Xith3D, PulpCore, etc. Of course most of those are not yet as mature as some of the tech and choices available on C/C++ but its getting there. It'd say stick with Java if you enjoy programming in it as it can only get better for making games. Also you should join some of the java gaming communities like java-gaming.org which can really help you get started with any problems that you may have.
I don't think you'd use a Java engine for high performance graphics, in the same way you wouldn't use C for distributed systems programming. However I strongly believe that Java would be a good platform for particular types of games :)
Also, might want to be careful with this one: public void setIntRate(double intRate) { if (intRate &gt; 0 ) { this.intRate = intRate; } intRate = .02; } this does not set your instance variable, it resets the input parameter. So if what comes in is less than 0 you are not setting the instance variable to .02.
It isnt really my cup of tea as a game but runescape seems to be written all in java... I played with it for a while and the client is... I woudl assume the server is the same.
notch says yes.
i'm sorry sir, but without a resume, we can't accept your application for enjoyment
Wouldn't learning how to create mods for games built on Unreal be a good first step, rather than starting from scratch with Java? You mention the Unreal engine and there's not much place for Java in that domain AFAIK.
Probably easier to use a command line tool that will decompress and compress it for you. http://lame.sourceforge.net/
Depends on how graphic intensive your game is. I haven't seen any super visual java games like those out there with a few million dollars graphics budget. I think for the time being, learn c++ in your spare time while making the games you love in java (keeping the visual time low so you can do the thing I love, coding).
you can post you job for free on softdevjobs.com
I say go try runescape, go try minecraft...go look at jmonkey engine.. To me those games and tools feel ugly and sluggish. If you're looking to break into the real gaming market..you'll have to step up and use c++ i'm afraid. 
this should work: http://audacity.sourceforge.net/
elance.com is the best place I know of, but don't expect the same pay as someone who does it fulltime at a company instead of at home, because you're competing with Indians and people from other low income countries. To make things worse, you have to estimate how much time it will take and give a price based on that. Only if you are the most optimistic one and ask the lowest price, you'll get a job, then realize how hard it is. I learned this from experience .Still it was nice to get more experience in Java in real world situations, and make at least some extra cash. ifreelance.com and getacoder.com are similar sites but I never got a job from these.
I have more than a few problems with the strategy this guy is championing. For those who want to follow along, I suggest installing Readability (https://www.readability.com/) because he's cleverly made it impossible to read his post. 1. He loses out on any kind of referential integrity by going with encoded data in a key-value store. This means that you have to be extremely careful to update data correctly, in a transaction-safe manner. Failure to do so = your data is inconsistent. 2. There are plenty of ways to do (stringified data) -&gt; (Java object) mappings neatly; one such way is YAML (see SnakeYaml\*: http://code.google.com/p/snakeyaml/). YAML also cooperates nicely with every other language under the sun, especially the more dynamic languages he seems to prefer. YAML is a strict superset of JSON, so making the transition is relatively easy. 3. He now loses out on any benefits of a strong typing system, while still being tied to its disadvantages -- something he spends most of the remainder of the article railing against. 4. If your Map&lt;String,?&gt; has values of different types, you have a few choices. First, you could separate these into different mappings. Second, you could declare the value type as the nearest-common-ancestor. Third, you could let your serialization language handle converting your map into a domain object (as SnakeYaml does). He managed to choose a fourth way, "work around it", which is just incredibly wrong. In any case, a "multi-typed" dictionary in Java is...a _class_. Since he chose not to really use any of those, he's left wondering why Java's Map (apparently) sucks so much. 5. By dealing with "external" systems using exclusively JSON, you are now passing all of your problems on to them. Now they have to parse your JSON and convert it to some object -- whether domain model or Map / List -- to even work with your data. This is something that should be easy, not hard. 6. His idea about representing points as an array of doubles is fine. This is something that's trivial in Java -- and should be, regardless of which serialization language you choose. I don't understand what his complaint is here. 7. His bit about the "law of Demeter" could be solved by -- and this is just one way -- using domain models! That way, anything that deals with those particular bits of your data model are _already encapsulated by default_. This is something that every competent Java developer does by default when using domain objects; only by discarding those is he introducing this concern. \* Disclaimer: I am a contributor to SnakeYaml. TL;DR: He discards the advantages of the Java type system while keeps its disadvantages. Then he discards all the benefits of a proper database. Then he spends the rest of the article lamenting the fact that you can't translate JSON&lt;-&gt;Java objects trivially (which you can do in other serialization formats, like YAML) and dealing with the problems he's caused himself. We will probably see some code from this application on thedailywtf.com soon.
I have no knowlege of Java, and could only work over the summer, and am in highschool, but if you're desperate enough, I'll see what I can do.
Why try to reinvent Spring? Seems like a huge waste of effort...
Well, the obvious way would be to have the length of the progress bars completion be proportional to the completion of the process it's supposed to show the progress of.
I was hoping to do the coding in java myself.
Currently though I have them both on the same thread so apparently it doesn't work that well...I'm mainly using it as a "This is the title screen don't be alarmed as there is a loading bar to watch!"
I always use them, everywhere. Remember, most of the time you aren't writing code, but reading it. And that's in the best case; usually, *other* people are reading it and trying to figure out what you did. Making your code spaced out and a bit more verbose really helps readability.
I always use the brackets. If you have: if (cake) return nom; you might later go in and add: if (cake) System.out.println("It's *not* a lie!"); return nom; It would be a dumb mistake, but I know myself well enough to know I'll make lots of dumb mistakes.
Never, never, never write this: if (cake) return nom; That's begging for errors. If you're leaving out the braces, you must always leave out the newline. if (cake) return nom; And if your editor doesn't allow you to make that distinction, just give up and use curlies all the time.
Even though every engineer I work with is solid, I have never met a person who didn't get bit by this during a large refactor. You run through someone else's code and misread the intention sometimes (especially when people pull the one-liners as your example shows). Just get in the habit of always using them. So you lose a few bytes of storage, but hopefully save headaches down the road.
Oh, and the REAL argument (even in my shop) is "open bracket: to newline or not to newline".
best practice alway use curly braces if (cake) { return nom; } Yes it is longer. When you come back to all your code after some time, you will thank yourself for developing a writing style which is clear and easy to read.
Do you know the language specification on how it deals with the ambiguity problem? In the example below, which IF does the else apply to. if(cake) if(delicious) nom(); else donotnom(); 
You need to thread this out. Do not get into the habit of riding on the dispatch thread when working with guis and doing actual work. Have a callback interface at the bare minimum and make the progress bar implement it. Then update the progress bar from your "worker" thread. Make sure the gui update happens on the proper thread or you will get runtime errors. Longer term. Read up on the observer pattern, concurrency, and mvc. 
I usually just type it out the way OP described if I only have one statement within a condition, and then use auto-formatting since that adds the brackets automatically and formats it nicely.
I'm not sure about the two stacked if statements, but it does seem to make sense except why not combine the two into a single statement? Since that would end up like... if (cake) {if (delicious) {nom();} else {donotnom();} So you are saying that the bottom is better then the top just for if (cake &amp;&amp; delicious) { return omg_super_nomming_action; } else { return lie; } would be a lot easier to read then this in the long run? And since it is returning, you wouldn't really need the else statement, but putting it there anyway to be sure? if (cake &amp;&amp; delicious) return deliciously_bad_coding; return bad_coding;
I leave them out if they are simple branches into single method calls, since I feel that it's more readable with less vertical space for single-statement blocks. I don't make the mistake of accidentally indenting incorrectly (autoformatter and being really anal about the syntax and semantics helps).
As someone who has used both Spring, and Seam, Seam is, franky, superior. How about you give it a try?
Never newline. And in a try/catch block, the catch goes on the same line as the close bracket of the try. Edit: Same with if/else.
I don't know a site, but you could have him try to design Conway's Game of Life... I did it for an assignment to learn objects - it wasn't too hard but it was a great way to practice with objects, scope, etc. I can send you the project spec if your friends needs a starting point. You could have him try some problems on Project Euler, but using Java, of course. The problems may not be much practice with objects and such, though.
javaranch.com has a paid 'Cattle Drive' but the exercises are public and only the marking/discussion part costs. The exercises are based on a ranch of topics (basic java, servlets, jdbc etc) and have several exercises that build from a simple start. http://www.javaranch.com/java-college.jsp * note that I am affiliated with the site but still think the exercises are worth doing.
Newline + comments on closing brace!
I feel as though relying on an auto-formatting is not a good thing. Especially for a beginner, they must know why the auto-format does what it does.
I agree with you 100% percent on the C++ thing. I've been poking around with LWJGL and it seems you can do some pretty neat stuff and get pretty close to the hardware. I think I'm going to put my desire for gaming on the back burner and just focus on some more business tools and get a little more acquainted with some of the new features in Java 1.6/1.7. I haven't worked with Java as my primary language in years so I need to beef up my chops there. I think what makes a good long lasting game more than it's graphics is the addictiveness and re-playability. Minecraft took off like a rocket because it's just one of those open ended sandbox types with no purpose. You can wonder aimlessly bashing trees for months before getting burned out. Add in some achievements and bam, big winner. When I do get to a point I want to do some work in gaming, I think I'll still stick with Java though because you can generally be a lot more productive with Java than C++ and it seems that's what people focus on a lot these days unless you're working on a AAA title, how often is stuff added and fixed ya know? Thanks for the input!
I agree with you, especially when you focus more on game play mechanics instead of graphics. Will Java ever make its way to the console or produce a AAA title? Who knows, but I've seen a lot of successful indie games that tells me a small team or 3-4 developers and designers can make a great living focused on one or two really good projects. Thanks for the input!
True, I think Minecraft so far is really the most visually demanding game I've seen built on Java, and it's done a very good job. Some of the texture packages and mods people have made for ambient lighting, bump mapping and such have really pushed the game's graphical boundaries. I love coding too, and I'd prefer to spend more time productive than re-learning stuff, and from the few C++/C developers I know, they're constantly spending the majority of their time learning some new library or nuances of how it interacts with a driver or some other odd technical issues that requires that low level understanding. Some people love that, I'd rather make stuff bounce on the screen. While Java may not produce the next Crysis, I could see it making the next Goldeneye, where game play is the emphasis, and not sure much graphics. 
Thanks, did not know this, I dug into the technology a little and it seems Java is used for a lot of client/server situations in games. League of Legends is another example, the client itself is written in C++ for performance reasons but the matching and rating servers are all written in Java. 
I agree about the documentation, I would love a more extensive understanding of jMonkeyEngine but finding the knowledge out there is just hard. I've found more on blogs and comments than I have actual docs themselves. 
Thanks a lot, and I agree with your premise. I enjoy Java and writing cross platform games is a big appeal. The only down side is really not having any chance in the console market, but then again, I'm not really big into console games anyways. I think PC will remain a strong market and the demand for games across platforms is only growing. I've completely abandoned my gaming "PC" and gone almost entirely Mac on all my hardware. I have one Ubuntu machine running Gnome and that's it, so I'm all too familiar with the lack of cross platform titles. I'm going to stick it out with Java, I mean realistically the bar can only get higher and higher from here. Thanks for the great comment!
Simple and to the point, I agree
You should take a look at LWJGL again if you were underwhelmed. I've been pretty impressed by how simple it makes working with things, and how easy it was to get up and rolling in a weekend. Obviously the problem with using something like LWJGL is you're going to be recreating a lot of engine-esque code that has already been done elsewhere. If you don't mind building things from the ground up then it's pretty powerful to work with. 
I think the Unreal engine is just very appealing because so much of the work is already done there, and porting your game to the console market is that much easier. I've poked around at using Unreal's scripting language and it's very comprehensive but ultimately, I think I want to focus more on spending my time in Java world than C++. I know usually a developer should not put so much emphasis on the language or the tools but more on the problems, but in this case, I just really don't like working with C++ enough to commit the time it would take to produce a title that would even need the kind of graphics tuning and performance C++ would give me. 
Always use them, you will thank yourself later.
I like to use them so it's more consistent.
I think stuff like Eclipse's "Save actions" provides the best of all possibilities. "Convert control statement bodies to block" just automatically converts my brace-less if states etc into well-formatted brace-full ifs on first save. This way I get to be lazy and the programmer's after me (which might just be me) get indented braces everywhere.
Wow thanks! I'm enjoying the New Boston videos right now, can wait to get home to watch some more!
That's ok, too. A best of both worlds approach.
Could you be a little (ok, a lot) more specific? "Java Developer" covers an awful lot of territory. 
Yes it does, but in my specific example, without knowing the language specification it is impossible to determine to which 'if' that else belongs to. Not all languages agree on which it should belong to, so It's safer in general to just be more verbose and use these braces. 
And if you are using Sun style formatting it's only 3 lines: if (cake) { return nom; }
Holy shit that is awsome.
I recommend projecteuler.net. The problems are language agnostic and really help build your core knowledge of the language of choice. Plus, if you get stuck, there are tons of examples over the web.
Curly's first! Then once the codes working and only if it needs to be optimized then its time to look at removing them.
http://www.blackbeltfactory.com has some courses and coaching
http://www.blackbeltfactory.com has some courses and coaching
LIKE A BOSS!
Do you understand what this is in terms of math?
I used to a while ago, now I just have a brief possibly mistaken understanding. If I were to take the function sin(a) where a is the angle in radians(?), the result would be the y position? How would I know what the x position of that point would be, and how would I draw an entire sine wave with this information. Further more how could I scroll this sine wave? I think those are some of the points I'm stuck on. Changing the frequency and height of the sign wave I believe I might be able to figure out myself.
I would use a queue where you push to the end and pop from the start. Then these are your points that you need to draw in terms of the Y. in terms of the x, you just move it forward in time according to the width of the pixel / point that you are planning to draw. Now in terms of your sin function, you can do something like: let x equal a number that is growing forward, after 360 it can reset back to 0. 100*Math.sin( (x) * height ) now as your 'frequency' increases, I think you can increase X to skip passes, and this is also your indicator of how far across the x to draw the next point. now just make sure the points are connected via lines. Just my thoughts. I'm not much of a GUI developer, but something like that makes the most sense at first glance to me.
Thank you. I'll give this a try.
[https://sites.google.com/site/cs127b11/](https://sites.google.com/site/cs127b11/) This is the class website for an introductory Java course offered at the university of Arizona (second semester) that has links to lectures you can watch online, projects you can do, labs you can do, assignments you can do and best of all the book is available to download from the site as well. 
I was going to suggest that, but what about when you reach INT_MAX.
[Be aware that Swing is meant used in a certain way and is based on a single threaded design](http://java.sun.com/products/jfc/tsc/articles/threads/threads1.html)
http://www.stanford.edu/class/cs106a/WWW-winter/index.html this is all of the handouts and assignments that go along with stanfords programming methodology course that is freely available on iTunes U. It is essentially a course in java. 
You want to do height * Math.sin(x * frequency) Here is a plot to show you http://www.wolframalpha.com/input/?i=sin+2x%2C+sin+x%2C+2sin+x
Thanks.
Wow, they have a Pokedex project. Their projects are so much better than the shit we get here at NAU.
I used to use [InstallAnywhere](http://www.flexerasoftware.com/products/installanywhere.htm) - it was fantastic. Haven't used it in a while though. Lets you bundle up whatever you want and generates a nice Grandma-friendly installer. Edit: Woops, looks like it's been end-of-life'd. There should be similar products out there though.
I use maven. Take a look to [assembly plugin](http://maven.apache.org/plugins/maven-assembly-plugin/), or with [dependency:copy-dependencies](http://maven.apache.org/plugins/maven-dependency-plugin/) you can create later a zip file with everyhting you need (or deb file).
I use maven. Take a look to [assembly plugin](http://maven.apache.org/plugins/maven-assembly-plugin/), or with [dependency:copy-dependencies](http://maven.apache.org/plugins/maven-dependency-plugin/) you can create later a zip file with everyhting you need (or deb file).
If you want something truly simple to setup, you'll want an installer. This could be something like InstallAnywhere or [InstallJammer](http://www.installjammer.com/). Launching a Java application is a whole other pain-in-the-ass. If you don't believe a .jar file will do what you need, that means you need a wrapper script to launch your Java app. Along with this, you need to figure out if you want to package a JRE with your distribution. On Linux, you can just create a .sh script to launch it, super simple. On OSX you can probably create a Application bundle, but I've never dealt with this. Windows is troublesome. Since the advent of UAC you have to deal with signed executables, so I'll let you figure that one out. :) A .exe wrapper tends to be preferable since Windows may not like a .bat file launching your jar. 
He said **a** pointer, not three!
I looked into Concordian a while back and, personally, disliked it because it uses XML to describe the steps involved in BDD. Given that one of BDD's goal is to make tests less obfuscated and easier to understand, embedding it in XML, while better-structured, seemed to fail to hit this goal. I ended up using JBehave[1], which I felt fit the criteria of simplifying tests; for example, a test may look like this: Given a username of admin and a password of admin When a user logs in Then the user should be able to access the control panel It's simple and easy-to-read, plus you'll find that a lot more non-technical people can actually write these tests (rather than construct and troubleshoot XML). Plus, I like my JUnit 4. :) 1. http://jbehave.org/
Where do you see the EOL notice? They have a 2010 edition, so it *looks* fairly current.
&gt; on a ranch of topics Mmmm. Ranch.
Really, though, fields should have been, by default, private ("Use private unless you have a good reason not to."). Methods should be public, by default (as in interfaces).
Woops, the page wasn't come up for me, and then I saw something about it be EOL'ed in the Google search results...
I forgot to mention my need for a launcher. Thanks. Found two windows executable wrappers, but don't really know a lot about them: [jsmooth](http://launch4j.sourceforge.net/) and [launch4j](http://launch4j.sourceforge.net/). 
Thanks for the info. Pretty pricey for what I need for now. [InstallJammer](http://www.installjammer.com/) seems like a free alternative (though no Mac suppose yet).
The biggest problem with this code is that the board should be a class "Board" or "Maze". for (int i=0;i&lt;=boardsize;i++) for (int j=0;j&lt;=boardsize;j++) boardpack[d][i][j] = tempboard[i][j]; This should be a copy function. Your startx and starty should be part of class such as "Cursor" or "Traveller", that travels through the board and marks a pixel in the board as having been visited, backtracked over, part of a dead end, etc, and these values should be an Enumeration w/o integers directly used to indicate what the state is. Split all of this into its own function with appropriate parameters: if (board[startx+1][starty] == 0) { tempboard = findPathRecursively(board,boardsize,startx+1,starty,stepcounter+1); if (tempboard[boardsize][boardsize+1] == 100) boardpack[d][boardsize][boardsize+1] = 100; else { for (int i=0;i&lt;=boardsize;i++) for (int j=0;j&lt;=boardsize;j++) boardpack[d][i][j] = tempboard[i][j]; movechecker = true; } } Remember to name your methods in reference to your *intention* of what the code should do.
heh, one track mind?
Agree with all this, with these further points: 1. Both sets of 'for' loop/switch/case statements are completely unnecessary. All you need are the four 'if' statements contained in the cases, done consecutively. 2. When you make the Board or Maze class, you won't need to do anything tricky like using the last element of the array as a flag -- just have a boolean field in that class that you set. 3. In fact, I don't think you even need to create multiple copies -- you should be able to recurse using just the original matrix, setting values within it just before you recurse and unsetting them just after. 4. There's a /r/reviewmycode :-)
What kind of mess is this? Use paste.org or anything similar next time. So you return the Account **class** although you're supposed to return a String **object** in your toString() method implementation. As your annotation says above you have to create a string from all the stored informations and return it. e.g. like this: String info = name + ", " + acctNum + ", " + balance; return info; or just return name + ", " + acctNum + ", " + balance; You definitely should review method definitions and strings in general.
Formatting is good in the compiler, when I copy pasted over it screwed it all up and I quickly hit enter.
Btw. in case you're using an IDE like NetBeans or Eclipse it should be able to tell you what's wrong.
import java.util.Scanner; public class Account { private double balance; private String name; private long acctNum; //Constructor -- initializes balance, owner, and account number public Account(double initBal, String owner, long number) { balance = initBal; name = owner; acctNum = number; } // Checks to see if balance is sufficient for withdrawal. // If so, decrements balance by amount; if not, prints message. public void withdraw(double amount) { if (balance &gt;= amount) balance -= amount; else System.out.println("Insufficient funds"); } // Adds deposit amount to balance. public void deposit(double amount) { balance += amount; } // Returns balance. public double getBalance() { return balance; } // Returns a string containing the name, account number, and balance. public String toString() { } // Deducts $10 service fee public void chargeFee() { System.out.println("You have been charged a service fee of $10."); balance -= 10; } // Changes the name on the account public void changeName(String newName) { Scanner scan = new Scanner(System.in); System.out.println("Please enter a new Account Name"); name = scan.nextLine(); } } Formatted better?
Thanks for the help. I was able to get it after you brought that to my attention. and for some reason they want us to use jGRASP.
here's the link: http://code.google.com/p/cliche/
thank you very much
Thanks!
Thanks for posting this! I started a new project yesterday with a command line interface and I needed to build this kind of thing.
Stuff I have had great success with for wrapping jars to make them double-clickable: Mac .app bundle: The [JarBundler](http://www.informagen.com/JarBundler/) ant task Windows .exe wrapper: [Launch4j](http://launch4j.sourceforge.net/) Both of the above can be used in builds that run on any platform (Linux, Mac, Windows). You don't need to build on a Mac to use JarBundler, and you don't need to build on Windows to use Launch4j. Once you have an app bundle, you can just use ant to put it in a .tar.gz and you're done. Mac users expect to just drag an icon to their Applications folder. They don't demand an installer. With a .exe, Windows users still expect an installer. I have had less than stellar experiences with stuff packaged in InstallAnywhere, although I have never used it for any of my own packages. I have used [IzPack](http://izpack.org/) on a few projects. It was okay, it worked as advertised, but I'd probably try something different next time. Maybe finding a way to build [NSIS](http://nsis.sourceforge.net/Main_Page) installers in a cross-platform build. On the Linux front, I have not yet discovered a nice solution for making GTK or KDE launchable icons and menu items for a jar-packaged app, other than just learning how and doing it by hand. I'll be watching here to see if someone else knows of one!
NetBeans framework is capable of [creating wizards](http://platform.netbeans.org/tutorials/nbm-wizard.html). I've been working with NetBeans platform for a few months and it has plenty of really nice GUI tools for creating rich clients including a visual editor.
seems neat. I'm always saddened, when I see that sort of stuff, that it is not possible to access function arguments name by reflection. That would have allowed a nice alternative to those quite ugly @param annotations. I wonder if there is a fundamental reason for this capacity not being added to the last java versions.
Check out Google Window Builder Pro for Eclipse. They released it as open source late last year. http://googlecode.blogspot.com/2010/12/windowbuilder-becomes-new-open-source.html http://code.google.com/javadevtools/wbpro/
[StackOverflow](http://stackoverflow.com) is a much better place for this type of thing.
Here's how I do it in Windows: 1. Place the .jar file in a folder (say, C:\MyProgram) 2. Place any command line tools (and anything else, such as images I need to use) in a folder named "assets" underneath that folder (i.e. C:\MyProgram\assets) 3. Get the path to the assets directory like so: String userDir = System.getProperty("user.dir"); String assetsPath = userDir+"\\\\assets"; I'm pretty sure you could declare both userDir and assetsPath **static** but I haven't tried it.
Thanks for the suggestion. I'm wondering if this is robust enough for me (rather to my end users). The user.dir may not be C:\MyProgram\ when the application is called from a different path (e.g. C:\SomePlace&gt; java -jar C:\MyProgram\my.jar). 
Not the best username when promoting stuff ;)
Ah. My users always launch .jar files by double-clicking on them (they're baffled by command lines) so the current directory is always the location of the .jar, but I just checked and sure enough it doesn't work if you launch the .jar from another directory. The code below will give you the filename of the executable .jar, from there you can throw it in a File object and extract the path component: String[] classpaths = System.getProperty("java.class.path").split(";"); System.out.println("The executable .jar is "+classpaths[0]); Java completely ignores both the CLASSPATH environment variable and the -classpath parameter when it's launched with the -jar option, so you probably don't need to do the split(), but it doesn't hurt to play it safe. I suppose to be *really* robust you could inspect your main() Thread's ClassLoader or something, but at some point you have to say "screw it, this works for anyone who's not deliberately TRYING to break things" :)
nvm, after hours of trial and error on Eclipse, I solved my problem. Thanx anyway
something like this? import java.net.URL; import java.io.File; import java.util.Map; // example of how to find stuff in PATH and find yourself in Java class WhereAmI{ public static void main(String[] args){ WhereAmI d = new WhereAmI(); System.out.printf("%s\n",d.findPath()); System.out.printf("%s\n",d.which("gcc")); } // find yourself public String findPath(){ URL url = this.getClass().getClassLoader().getResource("WhereAmI.class"); return url.toString(); } // find executable in PATH public String which(String cmd){ File file; Map&lt;String, String&gt; env = System.getenv(); String path = env.get("PATH"); if(path == null){ return null; } String[] dirs = path.split(File.pathSeparator); for(String d : dirs){ file = new File(d, cmd); if(file.exists() &amp;&amp; file.canExecute()){ return file.getAbsolutePath(); } } return null; } } 
assets lol
Wait. What? A status update and a rough estimate of when it will come out for the Mac? What is this indescribable feeling that I have in my chest? Is it joy? Relief? Dare I say happiness? I'm so confused. 
Other than MyEclipse, the only one I know of is Jetbrains Intellij Idea - it isn't strictly speaking a plugin to Eclipse, tho' ;o) I'm not a regular Eclipse user, though.
runtime.gc(); ? This doesn't guarantee any kind of garbage collection, you should let Java manage it's own memory. If you've stopped using an object the make sure you don't have have references to it.
you have a definite point there.
Hope you will enjoy this blog!
This last part of the series gives a roundup of our best practices and tips for successful database schema evolution with LiquiBase.
Don't get too carried away. This guys is just too optimistic. 3 months after official release is very very optimistic estimate and quite out of touch with the actual state of the project.
Actually, it's the status update and the projected release statement itself that has me gleeful considering apple is notoriously tight lipped about this. Java for the mac should have been taken in-house ages ago.
public static void swapElement (int [] array, int swap, int index) { int b = array [index]; array[index] = array [swap]; array[swap] = array[b]; } Maybe that last line should be array[swap] = b ....
...Yeah, that'd be it. Wow, this was a stupid question. There's no such thing as stupid questions, but this one managed to go and be one anyway. Thanks so much, dude, I was prepared to freak out in mere moments.
We've all been there, bro. :-)
I'm curious if you used a debugger at all for this. In general, I find stepping through code helps tons when dealing with errors like this. If you got to the line where the problem lies you'd immediately see that b was too big to be an index and at least know that you had 3 lines to look at.
Thanks for the info and the extra which() code. There seems to be another way by: String spath = MyClassName.class.getProtectionDomain().getCodeSource().getLocation().getPath(); File ff = new File(spath); String pp = ff.getAbsolutePath(); But not sure which is better / more robust. Once again, newb to java/swing. Improving this code would be appreciated. 
wbpro is awesome
Actually, I ran the code and the url returns null. Does it have anything to do with extending javax? public class WhereAmI extends javax.swing.JFrame { } 
Thanks for the info. This seems to work as well. I did notice that the output is different if it's in jar form vs within the Netbeans project; a minor annoyance I suppose. What do you think about the solution bjarneh gave or the one i replied to? thanks again.
I was using Netbeans IDE, but apparently not as well as I could? I did see the location of the error, but for some reason it didn't click with me that it should just have been "b". It had been a long day.
You probably just need to call repaint(); at the end of that if statement. Another way you can potentially achieve that result is to set the tick marks to the values you care about and call setSnapToTicks(true); Hope that helps.
&gt; setSnapToTicks(true); . d'Oh ! Thanks much.
http://www.onyxbits.de/content/wherami-locating-installation-directory-your-java-application
Blasphemy! :D
If the code will ever be read by anyone else OR is anything but brain-dead simple, use them. Oddly, the reason is readability - I don't want simple crap taking up space that should be used by more meaty parts of my code. And I'm on of those "newline before opening curly braces" people.
This should help get you started: for (double x=0; x&lt;360; x++) { double y = Math.sin(Math.toRadians(x)) *100; // you now have your x and y, draw them on a graph System.out.println("x, y = "+x+", "+y); } 
hi, not sure what's more robust. i don't think extending matters, parhaps packing your source into a jar or something matters. these are just clippings from programs i wrote a while back to find external programs, and also to find some pictures which i packed into the same jar-file as the program, or executable jar. perhaps it locates the root and you need to extend the path down to your class? i.e. if your package ends up in org.some.where.WhereAmI.class or inside the jar: org/some/where/WhereAmI.class you need to look for it like this: URL url = this.getClass().getClassLoader().getResource("org/some/where/WhereAmI.class"); 
Matisse (The Netbeans GUI Builder) is nice, but since I got used to Eclipse I'm happy with Windowbuilder Pro that Google recently bought and open-sourced: http://code.google.com/javadevtools/download-wbpro.html
I like Matisse, but I haven't used Google's Windowbuilder pro so I can't compare the two.
My workplace has landed on JFormDesigner, and it works for us. The generated code is hidden/consolidated nicely and the IntelliJ plugin is stable. While it still helps a lot if you understand how GridBags work (since JFD uses that layout by default), JFD allows you to interactively change the GridBag parms layout settings instead of the usual trial-and-error you have to deal with if you're doing it by hand. 
Used to use NetBeans' Matisse, but got fed up with its massive slew of bugs that nobody seems to care about, and now design GUIs by hand using [scala](http://www.scala-lang.org/).swing and [MiG Layout](http://miglayout.com/). Haven't done any really complicated ones this way yet, though.
I use Google Windowbuilder. There's nothing wrong with using a gui designer imo. Time is money and hand coding gui's is a huge waste of both.
Gasp. You subscribe here, too. You must be a pretty awesome dude.
It won't happen in the way you want it to. Try mirah. 
As a java n00b I am going to stay with hand-crafting for some time yet, but this is for my own learning curve: doing so has taught me more about object-thinking than 30 years of IT. That said, Google Windowbuilder Pro sounds like the promised land.
I actually code the design by hand. Usually I use a combination of BorderLayout and GridLayout but sometimes it is a mess. I used to use GridBagLayout but it was slightly messy having to change a lot of variables every time you wanted to add something. My main reason for coding by hand is that I find the GUI builder messy and usually I can achieve what I want (usually quite simple things) by using these layout managers. I always had problems with what I imagined to be bugs (but could have been me not understanding) in the GUI builder in netbeans but that was back when I still was quite new with java, so I got used to code everything myself. I find Oracles tutorials quite useful on this subject: http://download.oracle.com/javase/tutorial/uiswing/layout/index.html
Why is the answer E? Shouldn't it be C if you want the method to return true or false?
Why is the answer E? Shouldn't it be C if you want the method to return true or false?
The only method there that fulfills the Comparable interface is E. http://download.oracle.com/javase/1.4.2/docs/api/java/lang/Comparable.html#compareTo(java.lang.Object) The type of the parameter to the compareTo method in the class that is implementing the Comparable interface has to match the interface.
If I ever need to do GUI I would then use a GUI builder. WindowBuilder with Eclipse is great.
When you implement Comparable by itself, the method signature has to be public int compareTo(Object other) I'm guessing you thought it would be choice D. For that to be correct Rectangle would have to implement "Comparable&lt;Rectangle&gt;". The question isn't very clear that you didn't explicitly do that, so the default answer would be E. If Rectangle implemented "Comparable&lt;Rectangle&gt;", the method signature would be public int compareTo(Rectangle other) Happy coding, good luck next month!
Comparable is a built-in java interface that returns an int. It allows for GL, LT comparisons. This is a dumb question because it requires knowledge of a library, but E is the right answer.
iirc the AP exam requires knowledge of the comparable interface.
Thanks so much. And I'll do my best haha.
(D) public class Rectangle implements Comparable&lt;Rectangle&gt; {... [Interface Comparable&lt;T&gt;](http://download.oracle.com/javase/1.5.0/docs/api/java/lang/Comparable.html)
Doesn't C lack the ability to discern between less than and equal?
I do it by hand. It would be terrible if I used GridBagLayout as is, but I find making my own LayoutManagers is a secret art worth learning, because now I just have some nice simple layouts that allow me to just add components to a container with some useful info object and I am done. When BoxLayout came out, I thought, "Halleluja", with the combo of horizontal and vertical layout, 90% of layout patterns should be pretty simple. Sadly, BoxLayout is completely useless as far as I can tell. So, I made my own to work they way I wanted. Writing out the java components by hand is definitely a pain point in coding though. I just think I'd get frustrated with using a tool to do it. Such tools never seem to do things as I would want.
It's not knowledge of any library. Comparable is an interface, and it's only one of the most important interfaces available. This question is easy as hell; you don't even need to know when to return &gt;0 or &lt;0. You just need to remember the purpose of the interface, which is to compare 2 objects and return an int based on the result. Therefore the method signature HAS to be public int compareTo(Object other) as that's the only one that makes any sense.
My worst bugs are always silly little things, often only 1 character in length, like mistyping an i instead of a j in loops. Such facepalms.
It's always the small things that get me usually. Except this one time when I was working on a merge sort algorithm for a class. That was a whole different level of debugging lol. 
Yes it's easy, but if you've been taught to program through mindless lectures and assignments (I was lucky enough to learn beforehand), holes like this are going to emerge. I guarantee you less than 5% of people taking the AP exam for Compsci would feel comfortable independently programming. Be patient with the less fortunate
I'm not trying put down anyone. I just mean that it's not the "stupid question" you make it out to be.
Descriptive variable names will fix that.
I had an interface: public interface Herp { String derp(); } ...and class HerpImpl. I spent about twenty minutes trying to figure out why HerpImpl.derp().toCharArray() was throwing an NPE, when I finally saw this: public class HerpImpl { public String derp() { // TODO stub return null; } } This taught me the value of writing unit tests after writing each class. 
Yeah you should really break the habit of using non descriptive variable names period. I work on a very large codebase and I dont think we have any variables like that.
Or completing your todo list
The trickiest bit of code I've ever had to debug was one that went a little like this: Map&lt;String,Integer&gt; map = ...; ... for ( String key : map.keyset() ) { int value = map.get ( key ); // NPE here } It took me way too long to figure out that while map wasn't null, there was a mapping "foo"-&gt;null, and that trying to convert a null Integer to an int will generate an NPE.
Thank you I stand corrected - did not know what the comparable interface was
Very true, but writing for(int x = 0; is in my muscle memory at this point. Of course, I have no-one to blame but myself.
I do all my coding by hand, including coding Swing apps. I don't think it's hard at all. Plus it puts me in total control of what goes in my code.
Aye, that's a classic (though I've never done that myself, yet!). It's always the little things. You know you're in deep water when you start blaming the JDK/JVM: "Is this a JVM bug?! It must be *because my code is perfect*; I can't see anything wrong!" :)
Or before implementing the class...
A and B are wrong right off the bad -- you need to be able to pass an instanced class to the compareTo method. C is wrong because you are returning a boolean -- the compareTo method always return and integer. You are then left with D and E. They both do the same thing, but one big difference - D only allows Rectangles to be passed to it, whereas E allows any object to be passed to is. E will throw an exception if you pass the method anything other than a Rectangle. While everyone else is linking to the [1.4.2](http://download.oracle.com/javase/1.4.2/docs/api/java/lang/Comparable.html#compareTo) version Java and citing that; the [1.5](http://download.oracle.com/javase/1.5.0/docs/api/java/lang/Comparable.html) version, which is what you are probably using, allows for the use of Generics. Because of all of this, the answer is **D**.
Apparently 3 is NOT greater than 2. I'll never forget.
I loled
I've had stuff like that happen before, also apparently 2!=2 in some cases so you have to use equals() instead of ==.
I feel the same way, I'm probably more prone to build my own tools instead of use those by someone else.
I wrote my own Gui.... (and graphics lib)
Would an ArrayList work?
Can you give a bit more of an example? At my best guess so far, I would think you could have an array of your base class, and you could call your base methods (with the subclass implementation). So, Vehicle[] vehicles = new Vehicle {new Car(), new Motorcycle()}; vehicles[0].accelerate(); (calls Car.accelerate()) and vehicles[1].accelerate(); (calls Motorcycle.accelerate())
IMHO, the cleanest interface to this (if you can make it work) would be to have an interface (Mungeable) and have all interested classes implement the interface. That way you can deal with ArrayList&lt;Mungeable&gt; and you don't have to worry about having an artificially inflated class hierarchy. 
Use a marker interface if they have nothing in common. It doesn't even need to declare any methods. Then have a process() method which can take a type I, and do something like: if(i instanceof herp) { herp(); } else if(i instanceof derp) { derp(); }
**J**Boss not **j**Boss for God's sake!
I guess mysql/ruby isn't as sexy when you have to do some heavy lifting.
Spring bean configuration, for c3p0 and object pooling. the host was set to: l0.X.XX.XXX notice the l at the start. took me a while to notice haha :(
true, but if you're writing a small program and want to create a loop to, say, sort through an array, it's kind of a waste of time to figure out a variable name for the current index instead of using the standard "int i = 0" declaration. That being said, using non-descriptive variable names in methods, classes, etc., would be unwise.
If you're trying to run class Foo from the command line (i.e. "javac Foo.java &amp;&amp; java Foo") then Foo needs to have a "public static void main(String[] args) { /* stuff */ }" method in it. 
That was the issue. I had that whole line, except without "static", and apparently that made the whole thing not work. I'd ask why, but I don't think I want to know. Thanks, man, that made this whole thing so much simpler.
If you do want to know: All _class_ methods are marked static All _instance_ methods are not class Dog { // a variable of a Dog instance public final String name; // constructor for an instance of the Dog class public Dog(String name) { this.name = name } // a class method of Dog public static void sound() { System.out.println("bark") } // an instance method of Dog public void sayName() { System.out.println(this.name); } public static void main(String[] args) { Dog.sound(); // prints bark //Dog.sayName(); // WOULD THROW AN EXCEPTION // Because the Dog class doesn't have instance methods. // Only Dog instances do (new Dog(...)) Dog alfred = new Dog("Alfred") alfred.sayName(); // prints "Alfred" alfred.sound(); // prints "bark" - sorry to blow your mind // but this works. It doesn't work the other way around. } }
Well I think this is too important to disregard :) Static methods are very useful. Not every method needs an object instance. Think of utility methods like *println*.
I second that. For the sake of type safety this seems to be the cleanest solution.
Oh! Ok, that makes a lot of sense. Thank you, that was sort of bothering me. Edit: So static would be for variables and methods only?
Yeah. It's a simpler version of a double dispatch pattern. http://en.wikipedia.org/wiki/Double_dispatch
I use the gui builder to create panels layed out how I would like static things to be layed out and I use layout managers, mainly box layout, flow layout, grid layout but sometimes gridbag for anything dynamic. You should at least know how to user flow for toolbars, box layout for organizing panels vertically and anything you can do easy in the formbuilder, use that.
Classes can have static variables, methods, inner classes, and inner interfaces. However, you can never have a single class in a file like: static class Foo {} Because it's not a member of any class...
The main improvement was switching from sync IO to async IO, and I'll guess that switching to the JVM is a big win as well. I bet they could have done nearly as well with a switch to jruby and the same architecture changes. 
Alright, that cleared up the whole matter. Thank you for answering my silly questions.
Get the feeling you are trying to make something simple that already is and over complicating it. There's lots of reasons to create circumvented logic just make sure there valid. As asked for an example or even pseudo code of the intent of what you are doing would be helpful for context.
Java arrays are covariant. As far as I understand from your questions you can just use the common supertype as the Array type. class Vehicle class Car extends Vehicle class Bike extends Vehicle //Now use Vehicle as the array type: Vehicle[] vehicles = ...
Hmmm the most recent one that comes to mind was something along the lines of: private static void something(Player pl) { p1.getName(); } See if you can spot my mistake ;) This has happened to me on multiple occasions as well...
Definitely agree. This is something that should be taught very early on. I'm on my second year of my CS degree and I only figured this out last month until a passing tutorial supervisor heard me moaning about "I don't even know what static does!"
The last time I tried Vehicle[] vehicles = new Car(); did not work. I tried again today and it did. I wonder what I did that first time to make it not work out.
The last time I tried Vehicle[] vehicles = new Car(); did not work. I tried again today and it did. I wonder what I did that first time to make it not work out.
Sorry, seems so natural ;-)
That's a common trend when sites grow big, script languages are not optimal for such large web sites, great for small sites and initially getting something up quickly. But using it under high volume is a challenge and often too expensive (form IT costs perspective). 
They should switch to scala. That way they can be trendy and performant.
they already use it (or at least did 2 years ago) http://www.technologyreview.com/blog/editors/23282/?nlid=1908
I mostly agree with you, but let me frame it differently. Scripting languages are great for 99% of sites. p.s. - I work at a rails shop that handles tens of millions of requests per day.
Hmm... the first example generates a larger .class file (+4 bytes!), but the disassembled (javap -c) opcode looks identical.
Where is the definition of ImageHandler?
I think D_rock's comment has a hint of sarcasm. Note the use of the neologism 'performant'.
The best I can gather from the snippets is that ImageHandler has a private data member called myImage (of type java.awt.Image) and this is the object that has a getWidth() method. Your ImageHandler class needs to either expose this method (ImageHandler: getWidth() {return myImage.getWidth();}) or expose the myImage variable (ImageHandler: getImage() {return myImage;}). In other words, I don't see where "getWidth()" is defined in ImageHandler for you to use it in a subclass (KernelHandler). (Barely related: I doubt this is the most effective way to know how many windows are open; what if themes are applied that change the X box, or between versions of Windows (&lt;= 2000; XP; Vista/7), or for windows that don't have the minimize/restore/close buttons?)
The first example is defining a new variable at every iteration of the loop (which is unnecessary); whereas in the second example, the variable tmpStr is simply reused. There would be a slight performance increase with the second example; but I doubt it would be very significant. The blocks would function otherwise in the same way. When it comes to loops, I find it generally better to declare variables beforehand to avoid unnecessary variable creation. The only other difference is that, in the second example, tmpStr can be accessed after the loop has completed.
Unless you have hard evidence that there is a bottleneck, don't re-factor your code for readability. There are other more important areas that you can work on, such as fixing bugs (and there's always more), adding new features, etc in a system. When your profiler tells you the bottle neck is in a certain class, then time to investigate. Not before hand.
You are calling the method 'getWidth' on your KernelHandler class, yet the definition of the class as you present it in your question does not define that method. Is KernelHandler a subclass of another class? If you are trying to get the width of the image, you have almost everything you need. Again, your missing information in your posted code, but I'm assuming in the ImageHandler class your variable **myImage** is of type **BufferedImage** as that is the type returned from the **ImageIO.read(...)** call. If that is the case, the **BufferedImage** class provides the **getHeight** and **getWidth** methods you are looking for. Your code does not show that you ever actually create an **ImageHandler** object instance so you apparently are not loading the image, but a possible change to your code (not using the **KernelHandle** as I see no use for it would be: public static BufferedImage getImage(String nameOfFile) { BufferedImage myImage; URL imageURL = getClass().getClassLoader().getResource(nameOfFile); try { myImage = ImageIO.read(imageURL); } catch ( IOException e ) { System.out.println( "image missing" ); return null; } return myImage; } public static int numOfRedBoxes(String nameOfImg) { BufferedImage myImage = getImage(nameOfImage); if(myImage != null ) { for(int i = 0; i &lt; myImage.getWidth(); i++) { for(int j = 0; j &lt; myImage.getHeight(); j++) { if(myImg.getRGB(i, j) == red) { numOfRedBoxes++; } } } return numOfRedBoxes; } 
&gt; But for smaller team size and code base, RoR is still an unbeaten champion LOL: So for demo projects only? Seriously, I think it's the third-party support and JVM that made this a better long-term move for Twitter. More choices mean you can pick libraries, frameworks, and containers that suit your project's needs.
Unless you don't want to do anything with it out of the scope of this while loop it's perfectly legit to use the first version. It's really of cosmetic nature though. :)
I would say 99% is a bit of a stretch, but yes most sites on the web do not handle high volume or have enough hardware to handle it. Most of the big ones that account for majority of the traffic choose compiled languages (Google, Microsoft, eBay, Yahoo, etc).
&gt; Note the use of the neologism 'performant'. I think I love you.
Yahoo uses php, amazon uses perl and other stuff, etc, etc. I don't think that 99% is a stretch. Our site does tens of millions of requests a day on rails, i'll bet a paycheck that our site is in the top 1% of sites by traffic. Digg was a top 100 site and they were using php for the front end. Having said that, I love love love the jvm and think it's crazy to not use it. I would just prefer to use jruby over java for the front end. 
One could argue in the other direction. Why waste time with a more expensive solution (more development time), when you can implement in a scripting language and wait to see if the project is successful. If not successful, it will die with less time invested. If successful, then you can deal with long term problems then. It may be a smarter way to do things, given that so many projects fail.
Sites yes - backend and support systems no.
Maybe. The whole "wasting time" thing is a possible red-herring though. Give me an expert ruby programmer and an expert Java programmer and I'd have a hard time placing bets on who delivers a non-trivial, well tested, stable application first. Java is more verbose, no doubt, but I've never felt that directly translated into longer development time, just more boilerplate (most of which can be taken care of by a solid IDE). Once you get to your first major refactor the scripting language speed kind of dies a little compared to what you can do with a boring old statically typed language and a nifty modern IDE. That time wasted on dealing with Java's verbosity may more than be made up for with not needing to unit-test for static typing, not needing to worry about if Mongrel can handle the load vs Tomcat, not needing to write/test your own library (given that Java still has more 3rd party library support than Ruby). Then again you can counter that with using the jRuby version of RoR, which has all the advantages of JVM, solid Java containers and libraries. Plus it would probably run faster than regular Ruby. 
Facebook wrote a parser to translate a subset of php into C++, so it's possible but I imagine that code base is horrendous. For all its faults, Java is a pretty good language.
Sensationalist title is sensationalist. They just switched a component of their search backend from a self-hacked mySQL solution to .. *suspense* .. good old Lucene. Also, fucking blogspam again. It's infactual, overhyped and contains less than the [Twitter Engineering post](http://engineering.twitter.com/2011/04/twitter-search-is-now-3x-faster_1656.html).
It’s an app, not a library, but [Terminator](http://software.jessies.org/terminator/) might be useful (if a bit much for your needs).
Terminator is a terminal emulator. You're still at the exact same place you started out.
From the [InfoQ](http://www.infoq.com/news/2011/04/ceylon) Q&amp;A: &gt; As many commenters have asked: Why not just use Scala? Gavin has specifically [responded](http://in.relation.to/Bloggers/Ceylon#comment19175) to this: &gt; Scala is an interesting language and it's one of several languages that influenced Ceylon. We looked closely at Scala, but we collectively concluded that it wasn't the right thing for us. Personally, I find that Scala's type system is simply more complex than I want or need. IMHO, it looks like a Scala light. And while it's not strictly prohibited to have another JVM based language, but they could've gained a lot more by educating users, advocating for other less-patent-and-such-encumbered JVM languages (Jython &amp; Scala), porting code or contributing to the JVM.
I haven't used it, but it sounds like JCurses might do what you want: http://sourceforge.net/projects/javacurses/ There's also a thread on StackOverflow listing some other alternatives if you're not afraid of JNI (note: you should probably be afraid of JNI): http://stackoverflow.com/questions/439799/whats-a-good-java-curses-like-library-for-terminal-applications
Ah, they are wanting too much information for signup. Someone want to report back in late July to tell us if the magazine is any good?
I'll do as soon as I read it ;)
Wat? There's an essay question?
This language seems only slightly different from Scala. Only less powerful and less orthogonal. But taking the implicit stuff away was definitely a good idea.
Apparently: [http://education.oracle.com/pls/web_prod-plq-dad/db_pages.getpage?page_id=321](http://education.oracle.com/pls/web_prod-plq-dad/db_pages.getpage?page_id=321)
What I mean is the widgets might be somehow reusable.
I agree with that, Java is strong middle ground between low level speed of C++ and high development speed of scripts. I prefer Java for web development over say python, ruby, php, etc.
I like how when I closed the window, they threw out a little pleading popup. "But it only takes 2 minutes to complete!" It's the information, not the time. I get that they're giving you a free magazine, but when I consider the cost of my employment information being stuck on some mailing list for decades, it's not worth it.
http://stackoverflow.com/questions/2156120/java-recommended-solution-for-deep-cloning-copying-an-instance
Uh, those widgets are probably just Swing or whatever regular Java stuff. The guy wants to make a TEXT-based, console-only app, NOT a GUI one. You are offering exactly what he DOESN'T want.
&gt; I don't need to run in a real terminal
That's probably because whenever you hear the term "such-and-such killer" you immediately remember Cuil...
Just a heads up that [pastebin](http://pastebin.com/) could be a better place to put this much code. It has code highlighting and is easy to copy+paste into an IDE/text editor.
I clicked on the link just to see what a "maganize" was. :)
Awesome! I wasn't sure if something like this would be feasible - thanks! 
Nice thread there. This sounds like a good solution if you have multiple objects you need to copy. If you just have one object that you need some fields copied out of, you could write your own pretty simply (without having to include another jar file). But if you have multiple objects, one of the libraries mentioned there seem to be the way to go.
Just use fake answers
This feels Phishy
surface area of a cone is: (*pi*)r*s+(pi)*r^2. s is the hypotenuse of triangle formed by the height and the radius. Thus s=sqrt(r^2 +h^2 ) surface area of a cylinder is: 2(*pi*)r*h+2(pi)*r^2. The area of a sphere is (4*pi*r)^2. Just divide that by 2 and then multiply by .9 Prompt the user for radius, height and set r=radius and h=height. Do your calculations using those variables and then print out the results. 
Bytes are not characters, use the String(byte[], String) constructor, where the second byte is the character set. I would suggest you use UTF-8, also marking up your web pages as such.
Bad programmer can't program nor read documentation: skipped Thread.isInterrupted() He should study the java.util.concurrent package.
Virtually every language and platform have the same "problem" with stopping a thread. It's a seemingly easy thing to do unless you actually know how threads, code,processors, memory models work. Just execute student code in a separate process, 
This. Definitely this. 
You stop threads by ending the condition of the while in your thread. It's really quite simple. You get really unpredictable behaviour if you try and stop executing mid call. while (threadIsRunning) { doSomething(); } then eventually just threadIsRunning = false... Voala, thread is stopped. 
moral: maybe, maybe if you're running untrusted *ie student* code, you should run it in a sandbox and kill the jvm process
I think his problem is that doSomething() gets in an infinit loop and doesn't return
At which point, he uses Java's concurrency package to enforce a timeout of the code being executed.
The author should try wrapping his student's programs in a [FutureTask](http://download.oracle.com/javase/6/docs/api/java/util/concurrent/FutureTask.html) which are in turn passed to an [ExecutorService](http://download.oracle.com/javase/6/docs/api/java/util/concurrent/ExecutorService.html).
&gt;It's a seemingly easy thing to do unless you actually know how threads, code,processors, memory models work. Exactly right. For someone who knows how to develop software, a great technique for understanding any problem is by writing an implementation of the problem. I've found, for both myself and my developer friends, understanding of the problem is usually complete before even finishing the implementation. For example, this works great when trying to explain the Monty Hall problem to a software developer: have them write a simulation, and the solution should become glaringly obvious to them quickly. In the case of aborting threads, I didn't really understand its problems until I built my own VM + GC (with a friend), and [we started to add threading](http://srfi.schemers.org/srfi-18/srfi-18.html). We both suddenly understood why aborting threads is such a bad idea. 
I knew there had to be a catch as soon as I saw "Oracle" and "free" in the same sentence...
This is just attacking the symptoms of the real problem instead of the problem itself which is executing untrusted code in the same process. There are just too many ways that this can blow up. What stops the student code from starting thousand new threads or calling System.exit? This should definitely be executed in a new process by a unprivileged user. Doing it this way would make it a lot easier to add even more constraints using things like ulimit and Java security profiles. 
*signing up as donald duck*
That was one of the first things I tried. Using UTF-8 it still came out as a ?
That means then that your java stack isn't configured to emit UTF-8; this could be your servlet, or tomcat, or some JSP. The question mark means that somewhere an encoding operation is happening and that codepoint isn't translatable with the used character set.
That doesn't really solve the problem of wanting to 'kill' a thread. You still end up waiting when you call ExecutorService.shutDown(). Check this out from the ExcutorService javadoc: void shutdownAndAwaitTermination(ExecutorService pool) { pool.shutdown(); // Disable new tasks from being submitted try { // Wait a while for existing tasks to terminate if (!pool.awaitTermination(60, TimeUnit.SECONDS)) { pool.shutdownNow(); // Cancel currently executing tasks // Wait a while for tasks to respond to being cancelled if (!pool.awaitTermination(60, TimeUnit.SECONDS)) System.err.println("Pool did not terminate"); } } catch (InterruptedException ie) { // (Re-)Cancel if current thread also interrupted pool.shutdownNow(); // Preserve interrupt status Thread.currentThread().interrupt(); } } 
Thanks for the reply. I was thinking of primarily using FutureTask.cancel(boolean) to stop the execution.
The perfect name for this GUI tool is: Toe 
I have no idea what this is.
Unfortunately, that doesn't work since that library relies on code which is interruptible. I.e. FutureTask will only timeout if the code in question actually enters sleep or wait so it can be interrupted.
So, one issue with the process approach is that, say I have 1000 tests per student. I want to timeout each test individually --- that's 1000 process creations and destructions per student ... which seems like a lot. I guess it will work though, but might hammer the server quite hard ...
FutureTask.cancel uses the interupt flag ... so it does not solve the problem. If the code in question executes without entering sleep or wait, then FutureTask can't cancel it. That's because FutureTask.cancel doesn't use Thread.stop() ...
Pardon my ignorance (I probably don't do enough concurrency stuff), but why can't you do something like wrap it in a Callable implementation calls interrupt() on a given thread, i.e.: // This calls the given thread's .interrupt() method Callable interruptingCow = new Callable(runner); // some ScheduledExecutorService final ScheduledFuture scheduled = scheduledExecutorService.schedule(interruptingCow, 1000, TimeUnit.SECONDS); Thread runner = new Thread(...something to execute student code...); runner.join(); if(!scheduled.isCanceled()) scheduled.cancel();
This won't stop the thread from running, unless it enters a sleep() or wait().
I'm sure there are other valid use cases than this though. For example, what about plugins?
I prefer Jockey.
again, you'd think anyone with experience of flash would see that *running in a sandbox* is a good idea for third party or untrusted code.
Somehow I don't see Eclipse running all of its plugins in a sandbox. Correct me if I'm wrong.
Well, each student is executed in a separate process. It's just the individual tests per student are not. If the first test hits the infinite loop, I don't want the student to fail every test. However, I could certainly use a separate process per test per student ... just seems a little heavyweight ...
it might make it less of a buggy piece of shit if it did
oh it's that time of the month time to rebuild my workspace from scratch
That's not really a lot, I clocked running 'make' on one of my C projects as creating a bit over 150k processes. Though, with the relatively slow JVM startup time it could be an issue. Be sure to run stuff in parallel at least. 
ok, that's good to know!!
:)
apache camel is an esb. i think it's at least vaguely motivated by mule (which is another esb). an esb is an enterprise service bus. an enterprise service bus is a fancy name for a library that does two things. it make different kinds of messaging systems and protocols talk to each other. and it provides a way to let you control what talks to what. the last part is a bit like ioc (spring or whatever) for networks. or a patchboard, say. so this is some kind of gui that lets you wire together services that talk to each other over a network. it's soa (service oriented architecture) and all that enterprisey stuff.
Dear Java-Killers, Use Scala. Love, argv_minus_one
Is it useful. It seems like when you layer these applications up too much, I always wonder if there is no actual need or application for putting something like an ESB together. Who is using camel?
i'm not really an expert (although i did work at mule for a year or so it was as a developer of the system, not as someone *using* the system). i always thought the best part of mule (and i suspect camel is similar) was how easy it was to connect weird things together. you could wire emails to soap to jms to whatever. so if you're in a situation where you're working with lots of different services it's probably pretty neat. but that's not using it to it's "full potential". to benefit from the routing and all that stuff i imagine you need to be working on the kind of huge project that is likely to fail for any number of reasons. so it's going to be difficult to know if the esb helped or not... curiously i was working on a quote today for work with the noaa http://www.noaa.gov/ and they are using camel to provide a common platform for a lot of their science work (they have to manage lots of data from lots of sensors, process it in various ways, pipe the results to other places, let scientists combine and display data, etc etc). that's developed by raytheon and it's a huge project. but i have no idea how successful it is (and even if it sucked it probably wouldn't be so smart of me to say so publicly right now :o)
&gt; All this co- and contra variance, wildcards, raw types, upper and lower bounds and the involved conversion rules are super complicated. http://programming-scala.labs.oreilly.com/ch12.html 
I feel like I'm a wimp for not creating my owm JVM language. Any day now, someone is going to create a point-and-click GUI for creating JVM languages.
Solved. Turned out, that I needed to use [Windows-1252](http://en.wikipedia.org/wiki/Windows-1252) as the character encoding. String decode = new String(byteData, "cp1252") worked like a charm.
I agree but with one exception, you seem to be suggesting Java is slower then C++, that is not my experience. 
I never get this verbose thing. Are most programmers typing with one finger? Verbose makes little difference (IMHO) it is thinking time which counts.
C++ is compiled into native code, java uses a JVM and with JIT compiled native code, it will always be slower, but by maybe 5-10% which is really nothing to complain about. This is of course assuming the JIT is used (try turning off the JIT and calculate a hash of a 1MB file, it is scary). My main gripe would be with java is memory usage and garbage collector cycles... but I tune and optimize java and VMs for a living, so that stuff is good for business :)
I'm not sure where I would draw those lines. If the code, feature set, etc changes rapidly then I'd prefer a dynamic language. If I'm creating hadoop or Cassandra then java or scala makes sense.
I totally disagree, JVM JIT compiled code will not always be slower. What would lead you to think this? The JVM has the chance to optimize the compilation based on profiling of a running application. For any long runing process, JVM is more than likely to be faster than C++. The garbage collector is an issue. However, memory must be collected in C++ as well. The challenge with Java is writing is well so that one does not create too many object. Escape Analysis helps (a bit) with this as well.
You may disagree that is your choice, but what lead me to this is about 5 years of profiling java and C++ code for about 30 different companies. I have met many people who think in the ideal and have no actual profiling data to backup their argument, same people also dismiss the GC as a side-effect while it has some very real performance impact on long running processes that cannot be ignored and often difficult to optimize. One thing you forget is even if the JVM optimizes the code to the long run it is still a JVM executing it (non-trivial overhead) unless it is a JIT block and I have yet to find code that actually does the same thing over and over (save for the embedded world and there JVM is not used due to hardware and cost limitations). This is why so much code is still developed in C++ (games, servers, operating systems, drivers, micro-trading software, market trackers, real-time, etc). The promise of a JVM on a chip may have leveled the playing field, but there hasn't been anything major in that area other than lots of rumors and press releases. Your case does sound plausible but in reality there are way too many factors involved to allow java and C++ to be on the same footing, albeit they are close. I love it if java was just as fast if not faster, because tools for java are far ahead of C++ and it is often a long and involved process to tune C++ code, but it's out there and numbers don't lie; they just make my life a bit more complicated.
Achacha, I don't know is Ms Voiton has profile data to back up her claims. I do! Over those years I have seen JVM code faster than C++ and C++ faster than JVM. In algorithmic heavy lifting, there is nothing in it (from profiles). Even the famous array bounds check is optimized away in JVM code nowadays. I don't really believe that you have yet to see code which does the same thing over and over. If you run a JVM instance with -XX:+PrintCompilation, then you will notice that even the class loader gets compiled eventually. File handlers normally get compiled. all hot loops get compiled. If you work mainly in the GUI world, and your JVM's are running -client, then maybe your assertion is correct. However, the moment you move over to the server world, C++ and JVM are head to head. The idea that there is some overhead to running on a warm JVM is just wrong. Now - GC. That really is an interesting area. Comparing a single threaded application running in C++ where most objects are on the stack to Java where most objects (note - escape analysis) are on the heap, then C++ will win. BUT (and it is a big but) the heap in C++ gets contended between threads very quickly and suffers from fragmentation. Neither of these are issues on modern JVMs. Again, in the server environment, JVM often has a big memory advantage over C++ code. I suspect, if I were to code to the wire, count every clock cycle and code for a particular chip, and pick my own memory controller,I could always better JVM with C++. But if I were to go to that much effort - I'd code in C, COBOL or FORTRAN anyhow! I do not really argue with the idea C++ can be faster. It is the idea that it will always be faster, it must be faster and that JVM can never be faster. 
Thanks, good interview. Interviewer annoyed me a bit, he seemed a bit condescending. Josh Bloch is a very smart man. 
Unfortunately, none of the classes in java.util.concurrent solve this problem. They all use the interrupt() mechanism and, hence, rely on the threads to be co-operative and enter sleep() or wait().
While a lot of what you say is true, I won't argue the C++/Java issue as in most cases it is so close that a minor inefficiency in an algorithm is enough to provide noise to screw the results. I have seen many cases where Java and C++ were identical in performance, this is for code that was well written. Unfortunately I deal a lot with not so well written code (I can't remember last time I dealt with a program that didn't at least double perm space because they had more objects than they knew what do do with). This high object count seems to be prevalent in many large corporations that have big (and often distributed teams). Under these conditions GCs have to be tuned or every so often (sometimes 30 seconds sometimes every 5 seconds), everything freezes while GC tries to make space. A lot of these are web applications and having the site freeze every 5 seconds for a few seconds has disastrous effects on request per second (which is the gauge used for web site throughput). Some of the worst offenders are parsers like Xalan/Xerces/tidy/etc; it's not uncommon for a simple XML doc to generate 1000s of transient objects and cause memory spikes under load (but that is neither here nor there). I was just commenting on what I see in what I do.
isnt that jeremy allison of samba? I agree though, but I'm pretty sure he's always that way.
Yes it is, I never knew that. He actually got much better as the interview went on. 
Left image focuses on bright detail, right image focuses on dark detail. After a half million mutations, they are spliced together and the result of that is mutated further.
Pretty cool, what are the relative sizes to competitors like png and jpeg? you might also be able to get an even better result if you have the decoder do a Gaussian fuzz on the inputted triangles.
Can you put this description on the webpage and show the current iteration count plus the original starting size compared to the compressed size?
Good idea. I updated the page to include this and the original image. thank you.
Thanks! Is there any way to get the iteration count in there? I waited for quite a while before and it still wasn't finished. It eventually slowed down my computer enough that I had to terminate it. It'd be nice to see how long it needs to finish. Great job by the way.
Well, if you bring up the Java console - it does output the number of each frame for the first phase of evolution (the dark and light parts). I will add a iteration count to the applet soon. It's pretty rough but I'm just showing off the speed of the evolution algorithm.
&gt; Java console Chrome :\ Thanks for working on it. Awesome work.
The Mona Lisa sure has aged well.
Well, it's not pretty - but there's a counter now :)
Sorry for the late reply. I meant something like this which works for me. https://gist.github.com/925249
For those who don't want to run it, here's the output http://imgur.com/RIXAW Interesting concept. I'm rather uncertain where I would want to use the result format though. A lot of details lost in the result format, but it still gives enough detail to see basics of the image.
Eclipse is my editor of choice. Some shops use IntelliJ or Netbeans, but most I've been a part of use Eclipse. I've heard good things about all the editors. The best recommendation I have is to use whatever editor most of your co-workers use. It makes it easier when helping eachother out. If you are doing AWT/Swing GUI development, there are a couple window builders out there, but I never used them for anything but prototyping (I like having control). Netbeans has a nice integrated GUI designer. As well, Google recently bought a company that has a GUI builder and put it out there for free: http://code.google.com/javadevtools/wbpro/index.html And it works in Eclipse. Test frameworks... someone else will have to help. JUnit is the standard test suite to do unit tests on code, but it doesn't really do anything for GUI code.
Most people use Eclipse. There's a distribution for J2EE that includes plugins for XML editing, JSP, JS, CSS, and HTML. Beyond that, Eclipse is incredibly flexible with tons of plugins for various purposes. There is a plugin for Python editing. (I've written less than 1000 lines of Python, so I can't judge its quality.) There is a visual designer. I might have it installed, but the work I do would have to change dramatically before I would ever use it.
I'm a much bigger fan of NetBeans, personally. Check 'em both out, though, since I believe that [PyDev](http://pydev.org/) (the Python environment for eclipse) is more mature than [the Python plugin for NetBeans](http://wiki.netbeans.org/Python). As for unit test frameworks, I'm not a fan, but JUnit is the defacto standard, for sure. Both NetBeans and Eclipse have full support for JUnit, though there has been some license brouhaha of late, so it may or may not be part of the standard install of either. When I installed NetBeans 7 Beta 2 (one of the best updates to NetBeans so far, BTW), it was a separate plugin install, but the install came up automagically during the main NetBeans install IIRC. GUI designer wise, I'm not a huge fan, but I've heard plenty of good (and some bad) about Matisse (the NetBeans Swing GUI designer) and [Window Builder](http://www.eclipse.org/windowbuilder/), (the commercial Eclipse Swing &amp; SWT GUI designer that Google bought and donated to the Eclipse foundation as open source). 
While the below recommendations are surely going to contain some good ideas, I suggest working with your new team instead to understand what they're currently using. Ask to sit with a couple of the developers already on the project as they work on a defect/whatever. I would guess they'll appreciate your attempt to "work within the standard tools" and it will bring you up to speed WAY faster than trying to Google-whack it on your own. As for your overall transition, I predict you'll need some patience to get through the first few months. You can do anything with the JVM/Java that you can do with the CLR/C# (and maybe more), but if you're not used to it, you will find it to be slow going at first. You know all those whiz-bang things in VS that it automatically takes care of for you when it comes to hooking up new services, creating user controls, etc.? Well, some of that exists in Eclipse and other IDEs, and some doesn't. In some cases you'll have to ramp up on the whole new SDK or plugin with custom tools to get similar productivity. Have fun!
Eclipse or SpringSource Tools Suite (built on eclipse) Maven integration run-jetty-run plugin for quick web-app development subclipse / egit JUnit
It is a self blog post, everyone is talking cellular automata, I thought I would post this.
Thanks this is a good point, I will actually be working at a company that I'm sure they will have a lot of custom stuff which I didn't consider. I haven't done Java development in years except for a bit of minor stuff though so for now I'm just looking for something common so I can get back into it on my own until I start. I do feel like I'm a bit spoiled from VS, I used to do a lot of WINAPI C++ and so I'm no baby when it comes to wiring it up by hand but man was it nice to do events and layout auto-magically.
Well now that I think of it, my work probably won't include a lot of GUI stuff (unless its something for myself or a side project), so most likely I will end up doing console based and library work. The link you gave is a good resource so I will try to get familiar with that. I actually think I'll be working on the Google Web Toolkit so thats my next stop as far as stuff to get familiar with and the details of it at that link so hopefully I have little trouble integrating that into Eclipse and getting started.
How is Eclipse for web development? I think I will be doing a lot of library work on the Google Web Toolkit so I figure its good for me to get familiar with something other than ASP.NET WebForms (which I don't love lol) and MVC3 (which I loved).
I've used it with the Google App Engine and it was just fine. I probably wasn't using it to its full potential though. Usually I'm working on Java Web Services, with a very maven-centric configuration, and there's quite a bit of pain, but I blame maven for that.
If you're talking about "System.out.println(...)", that's not a static method. "System.out" is in fact a reference to a [PrintStream](http://download.oracle.com/javase/6/docs/api/java/io/PrintStream.html).
Ok, that's a bit different. I actually work in a GWT / Perl shop and been doing GWT for about 2 years now. GWT is really only a subset of the standard Java SE (standard edition) libraries. Plus all the GWT client code is "compiled" into Javascript. Google has some great documentation [over at their website](http://code.google.com/webtoolkit/doc/latest/tutorial/) with getting started with GWT. I had to help get a former team up-to-speed on GWT and I always pointed them to the GWT website and told them to read all the docs and ask me questions. Googles tutorials and examples will be a great place to get started. Just don't forget, GWT is not Sun's Java. While the syntax is the same and you can use Eclipse's Java editor, all of the underlying classes are re-written versions of the Java SE implementation. Google has a page up explaining [what parts of the JRE](http://code.google.com/webtoolkit/doc/2.2/RefJreEmulation.html) they implement. All of Google's examples are based on Eclipse. I have seen some people use IntelliJ with GWT.
In terms of ease of use IntelliJ is a bit closer to Visual Studio than Eclipse. Eclipse and IntelliJ will have roughly the same features, but I've found it easier to get an environment up and running with IntelliJ...things just work with less set-up fuss. All of the big IDEs (Eclipse, IntelliJ, NetBeans) work well with JUnit right out of the box. You should be able to compile and run unit tests right in the IDE, and in most cases run just the currently selected unit test method. All of them also support the standard visual debugging, though VS probably beats them all in this category. 
I would suggest to try them if you want to find the perfect one for you. Most of todays IDEs have all the basic features you need and it is more about how they present them. My personnal choice is [IntelliJ Idea](http://www.jetbrains.com/idea/). It's free for J2SE but you have to pay for the J2EE version. For a test framework, JUnit is a classic but [TestNG](http://testng.org/) is a great choice too.
try http://piet.jonas.com/FormBuilder/JsfFormBuilder.html
java heap space errors. mac os 10.6, firefox 3.6.16, java 1.6.0_24 64-bit
What do you mean by "the bin"?
Within each workspace created by eclipse, a bin folder is created. It is within the bin that I like to keep my content. I can't seem to get my .au files read from there.
I was working with a 256x256 image earlier, and there's a 512x384 version there now. I tried to put in a 1024x768, which caused your problem. It's fixed now. Sorry about that, and thanks for trying out the applet.
That really is not a good practise as the bin is designed to be blown away when you run clean. Either keep all your files in the src directory or create a separate resource project and include in the build path
&gt; I am a traditionally C# dev thats used to Visual Studio. I transitioned from C# to Java many years ago so have walked in your shoes, so to speak. &gt; ... so I'm looking for tips as to how most people have their Java IDE setup. Some shops will mandate a particular development environment. If you have a choice, I strongly agree with vplatt; do what your colleagues are doing. If this is your first foray into 'enterprise' Java, you have an amazingly steep learning curve ahead of you and will need their help. &gt; Which unit tests framework is the most common? JUnit (similar to NUnit) is the dominant test framework by a large margin. All the major IDEs have full JUnit integration out of the box. Specialized frameworks (that usually integrate with JUnit) are available for testing GUIs (SWT bot), web applications (Selenium, HTTPUnit) and mocking (EasyMock, Mockito). This is obviously not an exhaustive list (and technically, some of these facilitate integration tests rather than unit tests). As with most areas of Java, there are legion frameworks out there to do a particular job. &gt; Is there a defacto web framework Nope. In Java, you have a much greater choice of technology so the IDE tends to be more decoupled from any particular solution (JUnit being an exception!). I understand GWT has excellent documentation and Eclipse integration via plugins but again, see what your colleagues are using. FWIW, I use Eclipse and have been very satisfied. I find Eclipse far superior to VS.NET in terms of code editing/generation/refactoring functionality. In fact, the only time I've really missed VS.NET was the macros. VS.NET quick macros rock and to my knowledge, there's no Eclipse equivalent. I feel Netbeans offers a much nicer profiling environment and GUI drag/drop support. From personal experience, Eclipse is the dominant IDE.
I found my answer, thanks for your help. I just needed to add this line of code to my object: URL url = this.getClass().getClassLoader().getResource(sound);
We use the IntelliJ Idea IDE almost exclusively in our office (though one guy uses Eclipse). Most of us are on Linux boxes with a few on Macs. We use git for source control, ~~Hudson~~ Jenkins for CI, and Gerrit for enforcing the review process. We use TestNG for tests, EasyMock and Mockito for mocking in tests, Spring for wiring, slf4j for logging, and MBeans for monitoring. As for IDE customization, we use QAPlug and FindBugs for local CI before submitting to Gerrit. This all works well together and our office is humming along nicely. Can't help you with web frameworks...
Windows Builder also has a GWT builder.
I used Eclipse and the GWT plugin for the last 6 months and I liked it very much (coming from the Java side and having done little web development). I think the best part is the debugging, which all of it is done in Java, instead of JavaScript and the server-side language. GWT in general is very good documented and there are a lot of examples on the net. If you want to see some cool features of GWT, I'd suggest to watch some videos of Google I/O (starts in 21 days) which usually has a few talks about GWT. For MVC resp. MVP in GWT I'd suggest to read http://code.google.com/webtoolkit/doc/latest/DevGuideMvpActivitiesAndPlaces.html and watch either http://www.youtube.com/watch?v=PDuhR18-EdM or both http://www.youtube.com/watch?v=M5x6E6ze1x8.
Thanks I will look into this! It's good to know that its easy to debug and use GWT in Eclipse. I expect that this will be a lot of what I deal with for the rest of the year.
Totally agree with the high object count issue. That has plagued Java from day one. I don't want to point the finger - but I will :) I suspect a lot of the issue comes from computer science training. People are taught that one should have immutable objects. That is BAD in Java if those object are create a lot. I have had situations where massive performance gains come from changing from an immutable to mutable model and caching object instances on thread local. Funny old world.
Take a look at the JavaDoc, setBounds takes four integer arguments, not two. (The first two represent the x,y coordinates of the position, the second two are width and height). Maybe what you want is setLocation(x,y). 
I was under the impression that setBounds could take either two or four arguments. While I was seeing the same error when using four arguments earlier, it was caused by something else, which I have apparently since corrected by wrapping it in a method, using four arguments allows it to compile, but the X still appears in the default location. Using setLocation with two parameters also compiles, but leaves me with an X in the default location. [Update] I forgot to comment out line 38, which was a temporary line intended to be used with the generic JFrame object that is commented. That was causing my problem with the positioning. Thanks for your help blargle. setLocation() appears to be exactly what I was looking for. However. **While I can use getLocation to verify that setLocation is moving the component to new locations, the component is no longer displayed. I just get a blank frame with an invisible component.** **[Final Update] Okay so setBounds is what I needed. I couldn't see the component because apparently the JLabel was displaying an X that was one pixel by one pixel. Using setBounds, correctly this time, allowed me to size the X to a visible setting.**
Netbeans. http://netbeans.org/community/releases/70/
Spot on article, in my particular case. Thanks for posting it!
does it still take like 8 hours to start up?
Maybe a dumb question sorry but can't find anything on the installations page and I am a relatively new user to NetBeans. The updater is telling me that I have the current version of NetBeans. Do I need to uninstall 6.9 first or will the updater eventually recognize that there is a new version out?
If you have 1000 projects open - yes.
no Ruby :'(
lol good point :-D
Is the final image raster or vector? Whats the light/dark threshold? There seems to be much more detail in the dark channel prior to the hybrid stage, and I wondered if there was a correlation between the lightness threshold point, and the perceptual detail in the split images. (Great work by the way :) 
There is a separate Ruby &amp; Rails development plugin at the plugins download page http://plugins.netbeans.org/plugin/38549/ruby-and-rails 
You can install 7.0 side-by-side with 6.9. It's a separate install but it'll import your 6.9 settings.
The input is a raster image, the output is a vector image. There is no threshold involved. In fact, if you're unlucky it will just chop off parts of the picture which to the human eye are important.
And not a single screenshot was given. Also, the GUI is in the form of a proprietary Eclipse plugin.
not sure if 7.0 has the visual web server interfaces component...may have to go back to 6.5
I get the feeling that eigenvalue decomposition for a complex matrix will never be implemented in Java. Every time a new matrix lib comes out, I get my hopes up only to see it only works with doubles, not complex numbers. Looks like I'm still using C for now.
Have you tried [Scalala](https://github.com/scalala/Scalala/)? It's for scala, though. However, that means you can do things like DenseMatrix((1.0, 2.0)) * DenseMatrix((1.0), (5.0)) and similar :) 
Looks nice, but I noticed this: &gt;Scalala defers to LAPACK and BLAS wherever possible LAPACK and BLAS are common native libs that do the actual work, and Scalala looks to mostly be a wrapper. I am essentially doing that myself at the moment, making a JNI call to some native code. I just don't want to deal with native libs.
What application do you need the eigenvalue decomposition of a complex matrix? I have personally never needed to deal with complex matrices. Which since I'm also the author of EJML (noticed a small bump in traffic, which lead me here) is why its not currently supported. BTW EJML does have partial support for real matrices with complex eigenvalues. It stops short of computing complex eigenvectors since it doesn't support complex matrices. You might also want to take a look at JBlas. It does a very good job of hiding the native libraries.
Check the package names at the top of both files. Check the access modifier on the interface definition. Also, unrelated but you may have wanted: List&lt;Sortable&gt; funnyName; Conventionally, variables are declared to interfaces, not implementations.
I'm doing some research in signal processing. Specifically array beamforming based on eigenvalue decomposition. I wind up with cross power spectral density matrices (complex) and I need to get the principal eigenvector. I'll take a look at JBlas, thanks.
It would help if you posted your code to something like [pastebin](http://pastebin.com/). Without seeing the code, there are a number of things that could be causing it. As soon as we see the code, we can help you identify the problem and explain the reasoning behind the issue.
EDIT: Terrible confusing advice removed.
This is perfectly valid: List&lt;List&gt; list = new LinkedList&lt;List&gt;(); and I can definitely do list.add(new ArrayList()); list.add(new LinkedList()); 
I'm not really sure what I was thinking. I need to get some sleep.
Yeah, I missed a tiny line at the top of the interface file reading package soAndso; It's always the tiny stuff. :(
I'm only a student, but I believe I have the gist of polymorphism and the use of generics. Now is it only abstract classes that I can't instantiate? Also when using generics, would I be able to do something like this: List&lt;someAbstractClass&gt; list = new List&lt;some...Class&gt;(); EDIT: thanks for your time.
Yes you want to use the simplest type possible whenever possible unless there is a very specific reason to be very explicit. Same reason why you should use the List type versus a concrete example. This promotes loose coupling. List&lt;someAbstractClass&gt; list = new LinkedList&lt;someAbstractClass&gt;(); list.add(someClassThatExtendsSomeAbstractClass); list.add(someOtherClassThatExtendsSomeAsbtractClass); 
This is only true for parameters and return values of methods... internal variables should generally use specific instances, i.e. LinkedList&lt;String&gt; foo = new LinkedList&lt;String&gt;(); not List&lt;String&gt; foo = new LinkedList&lt;String&gt;(); It's not a hard and fast rule, but in general it results in faster code.
I've argued this in a previous thread. I don't buy it. http://www.reddit.com/r/java/comments/g3huq/need_help_accessing_object_of_an_arraylist/c1kufxm
Properties files are standard in the java world, and have a well defined character encoding and built in support in the standard library and most IDEs. "Properties" is already shorter than "IniFileLoader", if that's really the criteria that matters.
On the other hand, if OP isn't going to stick to the well-defined standards, then he probably shouldn't use the properties extension.
That's the same hand.