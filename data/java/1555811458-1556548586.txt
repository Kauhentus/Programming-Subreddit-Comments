How do i find more of this git java libraries?
Yeah, it's an interesting question because Red Hat is the new "steward."
It's still Java. Microsoft claimed they had a tweaked/tuned Java runtime that runs Minecraft better. It was also most probably built with Microsoft's compiler.
I'm aware, and that's not what I stated in my post. Read it again.
I know, but that is not my point.
Thanks, that's what I was looking for.
I know, but that is not my point. Microsoft claimed they had a tweaked/tuned Java runtime that runs Minecraft better. This is not the MSJVM discontinued in 2001. Read my post again.
That is when the talk begins.
As long as it is 100% compatible with the original one, it doesn‚Äôt matter. Very rude attitude for someone who has been making an effort to not understand the issue.
No, it was not built with anything Microsoft. It is the normal JDK, and they just changed some files. We have been trying to tell you this for a long time now.
Good job missing the point again.
&gt; Microsoft claimed they had a tweaked/tuned Java runtime that runs Minecraft better. There is nothing wrong with that. You can implement the JVM however you want as long as it complies with the specs. It doesn't matter if one JVM runs bytecode *better* as long as the compiled code can be run *at all* on any other JVM. Microsoft Java from 2001 generated bytecode *specifically* for MSJVM which *could not be run* on other JVMs, violating the license agreement with Sun.
A relatively recent challenge has been flattening out the runtime landscape for client-side deployments. Where we used to have JNLP, now we have a mishmash of runtimes, app stores, per-platform signing requirements, update mechanisms, and so on. A unified runtime with an understanding of Maven dependencies and a good client update mechanism would be lovely.
You could go along way here with a personal connection. You are getting HR blocked and simply need someone that can get you a fair chance. Your example code looks like what I would expect -- but since it already uses our frameworks I would definitely consider you over a similar CS student without framework knowledge. &amp;#x200B; You should also consider outside LA. If you were willing to move for a period of time to gain experience I think it would open a lot of doors. We frequently hire and once the developer has proven themselves we will let them work remotely and live wherever they want. But you usually cannot get that kind of flexibility while doing entry level work.
You are missing the point, over and over. The JVM Microsoft was forbidden from using was one that was developed internally. The one that is bundled with Minecraft IS Oracle‚Äôs JDK, it was not developed or built by Microsoft.
Well, I am a senior developer, and your website just made me feel ashamed of myself. You are clearly talented, and if you were here in Tokyo, you‚Äôd be getting offers, easily. I‚Äôm guessing this is just a case of you have to keep trying until someone sees your value.
I agree, but I understand that people have weird hangups about that sort of thing. OP included it would seem, as they said they're not going to do it.
Actually your right, but its a pretty painless process to install the jdk so wouldnt be difficult to still use the cmd approach?
The for loop with i will execute the j for loop five times. Each time that loop is executed, i will be printed i times.
Sorry, but it seems like your explanation was too short.
No that‚Äôs fine; It probably is. What specifically are you interested in about the code?
I know the output but I'm trying to understand the code that makes this output.
It's so complicated and this is only one problem.
So it will print the value of i, i times each loop. 1 22 333 etc
Sorry. I‚Äôm self taught, so sometimes it is difficult to gauge how in depth certain concepts should be explained. On each iteration of the first for loop, a second for loop is set to the value of ‚Äúi‚Äù from the first and run. The loop will continue until ‚Äúj‚Äù (which is equal to i) is less than 0 and the value decreases. Because ‚Äúi‚Äù is getting larger on each iteration, the amount of times the ‚Äúj‚Äù for loop runs increases by one on each iteration .
That's when the ear rape begins. Who actually listens to the intros of these things?
&gt;the amount of times the ‚Äúj‚Äù for loop runs increases by one on each iteration . I thought it decreases because it says j--.
Sorry ü§¶üèΩ‚Äç‚ôÇÔ∏è. For each iteration of the first ‚Äúfor loop‚Äù the number of times the second loop runs is increased by one. I wasn‚Äôt able to sleep until 1:30am and my ability to function has been hampered significantly.
The class just had the two nested for loops. The first one (iterator is called "i") starts at 1, "int i =1" and is incremented by 1 after each iteration. This loop will keep going until "i &lt;= 5". Every time the first loop iterates it will run the second for loop (iterator called j). This loop starts j with whatever"i" is currently at and counts down (j--) while "j&gt;0". Every time this second loop executes it will print whatever it's in "i". Finally after the "j" loop finishes each time it will print a new line.
It could be your location, bro? Also, maybe try to apply for jobs in finance then once you‚Äôre in a company, see if there are tech jobs open to you. Maybe it would be an easier way to get in?
i = 1; i(1) is less than or equal to 5; enter nested loop; j = i (1); j(1) is greater than 0; System.out.print(i) -&gt; this will print 1; reached end of inner loop; return back to top of nested loop; iterate j (in this case j-- or j - 1 = 1 - 1 = 0; check conditional statement (j &gt; 0 = 0 &gt; 0 which is not true); break nested loop; execute println after nested loop (println() will print nothing in this case but will print next statements on a new line. This is not always the case, but is in this situation because its called with no statement to print; return back to top of outer loop; iterate i (in this case i++ or i + 1 = 1 + 1 = 2; check conditional statement (i &lt;= 5 = 2 &lt;= 5 which is true); enter nested loop; j = i (2); 2 is greater than 0; System.out.print(i) -&gt; this will print 2; return back to top of nested loop; iterate j -&gt; this time j-- = j - 1 = 2 - 1; check conditional statement (j &gt; 0 = 1 &gt; 0 which is true); execute inner loop again; print(i) = print(2) \*notice the println hasnt been called because youre still in the inner loop, so this will print again on the same line; return back to top of nested loop; iterate j -&gt; 1 - 1 = 0; Check conditional statement (0 &gt; 0 is not true, exit nested loop); execute println() -&gt; again this will do nothing but start printing new statements on a new line; return back to top of outer loop; iterate i (i++ = 2++ = 3); 3 is going to print 3 times, 4 is going to print 4 times, and 5 will print 5 times; Output: 1 22 333 4444 55555 &amp;#x200B; dm me if you have anymore questions. Remember programming is hard because it requires a lot of patience to learn.
Java is heavily used in backend server side development, from web apps, web services, batch processing, big data, etc., etc. In fact, the biggest reason Java is used isn't even Java itself, but the JVM (Java Virtual Machine). This let's you compile your Java code in Windows into a JAR file and you can run that same JAR file in Windows or Linux. This works because Java is compiled into *bytecode*. The JVM converts bytecode into machine code. The JVM is really good at this, and is one of the fastest virtual machines. The neat thing is that any language can be compiled into Java bytecode, not only the Java language itself. There are many alternatives to Java that can also be compiled to bytecode, including Kotlin (a lot like Swift), Scala (used by Twitter), Clojure (a Lisp variant), etc., etc. I would say that the language isn't so important, as much as what you build with the language. That's the other cool thing about Java. There is a free and open source library for almost anything you can think of, so you can pursue almost any programming challenge you can think of . Although, I would also recommend learning languages like Haskell or Lisp, which are not used as much as Java, but are very useful for learning how to *think* about programming.
I'm honestly not very experienced. But I do agree Java is great for backend, and I've recently been working with Angular which is awesome for front end! I think Full Stack developers are really in demand. Someone good at front end and back end Angular and Java work great together! There's some good courses I've taken on Udemy.
Java has lost a lot of it‚Äôs ‚Äúshininess‚Äù per se, in that it is quite old now. In addition to this, it takes a relatively long amount of time to make a project in the language in comparison to something like Python. For these reasons it isn‚Äôt used nearly as much by startups as it was 10 years ago. However, due to it‚Äôs age and relative popularity for many years, it has a large collection of libraries and frameworks for almost everything imaginable. Additionally, Java is still used pretty widely in the scientific sector and the language is very popular when making web apps. Furthermore, the fact that the language can be complied once and run anywhere is very helpful for portability and it limits the number of versions you have to have for your project. As far as languages you should learn that is always a difficult question. Learning any new language will beneficial in the long run regardless of whether or not you find a practical application for it in the future. If you are looking to expand your horizons, I would chose something somewhat different from the languages you have learned to date.
Reading through the comment where you clarified the use case as long as you are expecting the machine to be windows I am pretty sure you could just get a cheap usb stick and create a portable eclipse and put a copy of the jdk on it since all an ide does is invoke a executable. Afaik that should be possible then you can just plug in the stick and do and save the work to that stick
Mmm, interesting. So I can technically do almost anything with Java? If so, then I think I will choose Java for future projects. Also, is there any other language like Java? In terms of be capable of doing '*anything*'?
Like bytedeco.org (and javacpp)but for popular rust libraries, with an index of course
&gt; It was also most probably built with Microsoft's compiler. Indeed, but there is nothing peculiar about that. JDKs on Windows are usually built using Microsoft toolchain/compiler. They are the only ones officially supported by the OpenJDK project.
Java and C# have a very incestuous design history, and then there's C++ and even C that can make pretty much any kinda of app, just with more effort required to wressle with all the unbridled potential for screwups that they enable.
Just apply in job portals like monster or indeed. Add these projects to your resume.
large high-performance applications
Any programming language can do anything, thanks to an idea called "Turing Completeness". However, some languages make things easier in their area of specialty. Java is a solid well rounded language with an abundance of free libraries and tools, so Java isn't a bad choice. There are plenty of other choices. Like .NET, if you don't mind sticking mostly to the Microsoft stack and Windows. Or scripting languages like Ruby or Python, which are really easy to get started with.
There are other languages that compile down to Java class files that can then be run on the JVM and interoperate with Java code: Scala, Kotlin, Clojure, and many others.
Take any popular python API and port to Java.
r/javahelp
Pretty much any programming language can do anything. Asking "what is this language good at" is usually not a very useful question because the answer is "everything" for most mainstream languages. What Java is really good for is it's huge popularity (this is actually important), ubiquitous support, excellent tooling, expansive libraries, and countless resources. I've yet to work with a language more pleasant to work with thanks to its wonderful ecosystem.
Programming help goes in /r/javahelp. Also, pictures of code are an absolute no-go.
Java is pretty decent at processing video. Chaoslab my VJ app can process 550+ million RGBA pixels a second.
How about a standard Machine Learning library? I know Mahout but that requires Hadoop if I'm not mistaken and I'm not sure it's the best choice for machine learning.
As said in other comments Java is great at backend web and high performance server apps (some high frequency trading and crypto trading is done in Java). It can also be used to write cross platform desktop apps with frameworks like JavaFX and Swing. Other languages that also work on the JVM like Kotlin and Scala and Clojure have pretty much the same platform and performance benefits and each bring their own programming styles with pros and cons. It‚Äôs good to have one main language in which you do most of your projects (For me it has been Java but Kotlin is slowly taking over the top spot) BUT It is even better to occasionally dabble with other languages just to see what makes them different and you will pick up other techniques and skills and experience that you can apply to your main language .
Something that generalizes mapping objects to other objects, a lot of time I'm just transforming stuff into other stuff. Maybe something which allows field by field mapping or using lambdas that extract and map the data.
Yeah, I just used that as an example, you'd have to find a newer API which doesn't have a client yet.
i disagree. the language is important. try reading objective c. and after coding in Swift for 7 months.. Java is still.much better. i hate not seeing the type of a variable because muhhhhhhhh verbosity.
had C# be even more incestuous with a proper camel naming convention that does not rape your eyes with Capital Letters in front of methods, i would have invested a lot more time in C# its like Swift. Even after 7 months of usage i bloody hate a few details which make want to go back to Java asap.
writing a Swing Gui that works on linux mac and windows. truly write once run everywhere. no other language gives you that.
Two things: 1. Scala != Java 2. **Sidebar** -&gt; **Do not post tutorials here**
True
A mind reading library which produces executable code.
Google *&lt;task&gt; java library*, that's what we all do.
Can I get some Collection implemebtations with some more advanced methods please? Doing logic in a foreach feels....dated
Hi, @1 Using Scala's testing frameworks in Java projects seems to be pretty common. @2 Thanks for letting me know! I'm new here. Should have checked the FAQs first. Cheers
Are you aware of streams?
He's not past that option, I am 25 and applying for them like crazy, got calls, failed interviews, but it's doable
Yeah I'd like some of those features present directly in Collection. Even if thet implicitly create a stream with .collect at the end
That would be a lot of additional methods with very little benefit. For example it would be relatively easy to just add a default &lt;U&gt; Collection&lt;U&gt; map(Function&lt;T, U&gt; fun) { return this.stream().map(fun).collect(Collectors.to???()); } method to the `Collection` interface, but as you can see with my question marks, what collection interface should be returned? A `Set`, `List`, `Deque`, `PriorityQueue`? Even if you don't add the method to `Collection` and instead add them to `List` and `Set` for example, what type of list or set will be returned? Will ordering be preserved? What about duplicate values after the `map` call? Will they be mutable? In my opinion it is much better to explicitly use Streams and explicitly use a collector for the result type you want. For example I may want to map the entries of a `List` or the `values()` or a `Map` with a function and collect the result in a `Set` to remove duplicate values in one step. I would probably very rarely use the shorthand methods because they wouldn't be as flexible.
Every team I've ever worked on would have hired you. I work in north east
A library to compile C# to Java bytecode
Meh I have a lib of static util metods for it but I'd like the expedience.
My bad, I confused the Eclipse and Apache incubation programs.
Maybe for the old API? I implemented the GraphQL API not too long ago and it's horrible. Like getting 500s with timeouts for obvious queries.
No one knows for sure but, in the past, Oracle has continued with the old exams for several years before phasing them out. So, our guess is that Java 8 certification exams will be available for another couple of years at least.
Just as a cursory glance at your projects you appear better at writing code than some of the senior developers I have to work with. No idea why you're finding it hard to get work, perhaps you're not finding anyone who would take the time to look into your personal work. If you applied to my work you would be an instant interview candidate (if you survived our brain dead internal HR lol) &amp;#x200B; My advice is to ask why you were being rejected. It took me a couple of months to get my first job and that time period seemed fairly common among my peers.
Pandas! I've recently started doing ML as a side gig, and man is pandas slick. I've found joinery via Google, but I haven't tried it.
Mapstruct, Orika, Dozer. Of the top of my head. In order by favorite to POS. Personal opinion, so take with a tablespoon of salt.
Obviously, there are languages that are ugly. In fact, a lot of people consider Java ugly. My point is, instead of stressing about the language choice too much, focus on building things.
If you dont have medium membership, please use the following link: https://itnext.io/enforcing-semantic-versioning-fcad774db7f0?source=friends_link&amp;sk=0211d095fa790087c90b86b430dd650e
Java exists for a long time so most problems already have at least one solution or library. You could try adding a more Fluent API/interface using streams and lambdas to existing libraries that are still using old paradigms.
This. But to re-phrase parent's request, I'd love one that magically "just knows" what to do instead of making me have to think so much. :)
In practice, with strict semantic versioning you end up bumping the major version for most changes, greatly removing any usefulness. The real problem is people that think looking at a version number is sufficient to judge an upgrade.
Was I the only one that had to look up ABI? Author should really define acronyms when using them the first time. However, using a version number to indicate backward compatibility is a pie-in-the-sky pipe dream. As the author points out it is harder than it seems. I do like the idea of an automated tool to help but no thanks on a tool that is maven only and is written in Perl.
Perhaps this already exists, but I would say a re-imagined persistence (maybe full ORM) library. Something that: 1. Isn't JPA/Hibernate. I've been working with this for roughly 15 years, and STILL have to consult documentation whenever I want to setup a bi-directional reference. Common things, such as joining against part of a compound primary key, either require arcane tricks or just aren't possible at all. I'm a little tired of being the "old guy" who suggests JPA by default... the pushback from younger devs who either don't want to learn it or think it's too stuffy is almost as annoying as the "*We should be doing this in Node.js!*" pushback. 2. Isn't Spring JdbcTemplates, or JDBI, or something that's super-close to the raw-SQL level and starts to get overly complex as soon as you introduce a join. 3. Isn't a non-starter at many places because it introduces a Scala dependency (i.e. Slick), or requires a paid license (i.e. jOOQ).
I'd say it might be you resume... try asking the kind folks at r/resumes for help
If you are willing to move out to ATL I may be able to get you an interview. I can send your resume over to my boss if you say yes.
There is a older but still great book called _Killer Game Programming in Java_. There are some older edition chapters available on the authors website, the one about creating a framework for a game loop is great: http://fivedots.coe.psu.ac.th/~ad/jg/ch1/ch1.pdf Basically, no don‚Äôt use Thread.sleep() and instead use active rendering. Also, if you are developing a game in java you almost certainly want to be using libgdx. It takes care of the game loop for you and is well documented. It can produce your game for multiple platforms as well. (Desktop, iOS, Android, web browser, etc) https://libgdx.badlogicgames.com/
None of those things you mention have high enough precision for a game loop.
Reddit is neither a self promotion, nor a blogging platform. A maximum of **10%** self promotion is tolerable. Your constant spamming of *itnext.io* (and the correlating medium posts) is not acceptable. This is your one and only warning. Next spam will result in a permanent and irrevocable ban.
I had a look at some of your work, and I like what I'm seeing. I am recruiting myself quite a lot of people, unfortunately in Sydney, but I had a look at your test code, and I think it's far superior to what 80% of our current candidates produce. If you're a starter, I would probably hire you on the spot if you have the right attitude, pair you up with a few more experienced developer, and have you in a position where you'd deliver amazing work in 3-6 months. If you want, you can send me your resume (PM me). I can't hire you here in Sydney, but I can review your resume, and give you a few tips how to stand out despite the lack of knowledge. I've reviewed somewhere between 250-350 resumes in the last few months, so I might be able to help a bit.
Look at any programming opportunities at finance related companies. Also, as someone else mentioned, your resume/portfolio might be a much better fit outside of LA (NYC, possibly SF, and some other areas). Take a look at opps on [dice.com](https://dice.com) as well.
The one who solves this issue will be adulated for sure. It's been on the brinks since the nineties, and no proper solution has been found yet.
Magic is bad, don't do it. The solution is to avoid over-architecture. Do not do these mappings at all when you can avoid them. Most of the time, you can do without them, and shrink your code easily by half.
We already have this one, it's called a software developer. &lt;/yourboss&gt;
Echoing some of the more popular comments here, I would focus on finding a finance job that will enable you to do a little programming. I got my first degree in dumb humanities, basically what I did was found a job that afforded me the opportunity to do a little bit of development work on the side, and then boom‚Äîyou now have X years of experience on your resume and can get past the bullshit Taleo screeners, and then life is easy mode. This shouldn‚Äôt be that hard in finance because that industry is notorious for having awful IT infrastructure. One of my good friends was a finance major in college with a CS minor and has had a very impressive career in back end dev work. Another friend of mine just got a dev job at one of the big 5 and didn‚Äôt even go to college. The whole trick is to start getting paid to write code, then you‚Äôll see your career really take off. If you want to do back-end work, it‚Äôs hard to contrive projects that will let you do so, but anything using Kafka Streams, AWS‚Äôs queueing stuff, or RxJava will prepare you much better than most back end devs. Keep at it!
HR can be ridiculous. My first 'real' development job -- met one of the lead architects at an open house who took a chance on me. A few weeks into the job I got the rejection letter from HR. Lots of fun as they realized one hand was not talking to the other. Most of the time, they are a blocker to the hiring process. I do much of our screening for new hires - both junior to senior. The absolute best way land a job is by personal reference. Ask your friends and peers for leads. Not uncommon for the people who want the resources to be exasperated at the lack of people available. Many will even give them referral bonuses. Over two decades of this - by far, the best candidates came from personal recommendations. This does mean you should also be careful with the people you link with too. :) Recruiters work. Find a good one and they can usually find you a home. Not quite as good as a personal reference and with a pound of flesh for finding/landing you... but it works. Look at the consulting companies -- contract to hire is a safe way for both sides to vet you out without making a serious investment on the hiring side. The first job is the hardest. Just about every posting asks for a unicorn with sparkles and rainbows. The reality, at your level, is be mildly competent and show enthusiasm. I've got interviews set up Monday and Tuesday with two kids just about to graduate.... they likely have less experience than you.
When you need code that is maintainable, Java shines. The fact that it's a strongly typed langage helps a lot in that. Few langages can claim to be as strongly typed as Java, Kotlin or Scala.
As I wrote: &gt;403: Forbidden, he basically tries to enter your door with the wrong key; here: he has an **invalid** Auth Header Value &amp;#x200B; As for the other parts: &gt; Sounds good. But that means that response codes do contain application logic. Which is fine for me. But not really sure if that is the "standard" way to handle things here. A client can be dumb as f\*\*\* but an API is still a contract. You could map everything just on `200`, `400` and `500`, but why would you not use the well-known HTTP status codes to tell the client what happened. It is something along the line, like using self-created exceptions instead using only `RuntimeException` or `Exception`. In the end, it is up to the app how the results are displayed. You could either show a warning, if no results are contained or just show the empty result list. But you have to always ask yourself: how would you differentiate when something goes wrong on the server.
I always thought that the concept of Gradle-wrapper or Maven-wrapper was neat. Why is there nothing like that for Java itself? Nowadays you are basically abusing docker
&gt; Few langages can claim to be as strongly typed as Java, Kotlin or Scala. Haskell is way more strongly typed than Java. In fact, Haskell is so strongly typed, that much of Haskell programming is arguing with the compiler that your types are correct, and more often than not Haskell will prove you wrong. Java has strong types, but they are pretty lame. Try using the Hamcrest matcher library or streams. A few levels in, and Java completely forgets what the types are. Kotlin and Scala are better, but I find Scala to be too much. Kotlin is a reasonable middle ground. &gt; C# is far behind Than Java? I find C# to be a much better language, but the JVM is way better than the CLR, and the Java ecosystem is far superior to the .NET ecosystem in terms of free and open source libraries and tools. &gt; which makes maintainability a nightmare with these. Clojure people in /r/programming will cite studies showing that a significant difference in maintainability between static typing and dynamic typing is not proven by the research, so pick you want to believe, I guess. I like types.
&gt;execute inner loop again; print(i) = print(2) \*notice the println hasnt been called because youre still in the inner loop, so this will print again on the same line; Ok. I think this part is what got me confused. Thx!!
This is foolish advice. While Node.js and Python have seen strong growth recently it will slow down eventually. When things mature and need to scale then Java the platform is a much stronger candidate. I expect this to remain the case for a long time especially also in light of heavy investments to keep Java state-of-the-art.
Believe it or not, not every business application system developed over the past 20 years will be converted to microservices or AWS Lambda call within the next couple of months. Decoupling is a necessary architectural principle on all but the most trivial of toy projects... and for better or worse, adapters layers are a common tool for achieving that in a monolith. Not arguing that decoupling isn't painful. It's still painful in a microservice or serverless world too BTW, you're just shifting around the pain points. But "don't do decoupling" is hardly a silver bullet.
Eclipse-collections
The Holy Grail... The Java equivalent of Doobie would be nice.
Don't know if this falls under the category "library". 1) a unified/standardized compiler infrastructure, so that joint-compilation of different statically compiled JVM languages works flawlessly. 2) standard implementation of sdkman for all platforms (i think this should be no problem with native-image), so I don't have to search and maintain a separate tool for Windows.
A library or tool to automatically generate unit- test and integration tests.
I was in a similar position 1.5 years ago. I ended up in a retraining programme for post graduates that entailed a fast track reaching CS undergrad level within a 11 months. Even working 6 months out of those. I've been working as a java back end dev for over a year now. Next month I'm starting another job with a 3 year fast track to senior level (senior by skill, not by years hanging around somewhere). It's cliche, but you should leverage your strengths to get hired. You're probably socially able and coming from an economics background you should know about business values and structures. You probably even understand the economic value of clean/SOLID code. Maybe focus on these assets while presenting yourself to possible employers, through your CV, cover letter and phone calls. I even wrote a self promoting pitch of 2 minutes, to create a clear picture for myself and any potential employers of why they should hire me. Besides looking for other geographic areas that have more relevant jobs, you might also be suited for (java) consultancy/engineer jobs. And don't take those years of experience in job ads seriously. After one year, I've been scouted for jobs that asked for 5 years. A lot of companies don't even know what exactly they are looking for.
I would really appreciate if someone makes a movie parsing library. Which can parse data from file name, media-info etc. I could not find any defacto / library that does the job well. So, I hacked one myself but It's not very good.
Make sure your personal projects are in GitHub (or some public project manager) and mention it on your resume. It's still valuable experience even if it's not for pay. Can't imagine trying to get a programming job in LA though. Southern CA is a hot area for tech jobs so I would think the entry level stuff goes to former interns and those that have an "in".
With your background in finance and economics, Wells Fargo in San Francisco might be worth looking into.
An RTC client for querying and updating work items. Big pain point on my team that there's zero integrations and all updates are manual.
I don't think you'd necessarily need to make a brand new library to be helpful either. Often I just need a good, fully-functioning example to go off of and usually I end up finding code snippets. I think a project filled with ready-to-use examples would be a huge help to new and seasoned programmers.
I appreciate all the suggestions! Instead of applying online or emailing the hiring manager, do you think I should email a senior software engineer or team lead directly and ask if they're hiring a junior dev? Especially since it seems like I'm getting screened out by HR for lack of C.S. degree or lack of work experience.
I appreciate the offer! But I'm looking to stay in the West Coast for now.
PM'd, appreciate it!
To get my profile/resume in front of someone like you, do you think I should circumvent HR and reach out to a senior or team lead directly? Cause I've messaged a couple of in-house company recruiters and they never end up replying.
If you know the developers - reach out to them. Cold calling them is likely not to go well. Peers can tell you if a location is really hiring. It is not uncommon for LinkedIn to be just collecting resumes. (That happens way more than it should) The minor vs major will likely not be an issue. Honestly, the domain knowledge outside of CS is worth a fair bit in the real world. Do look at consulting companies. Likely the best way to get your foot in the door. One of the things that will help with some of the HR is the[ Oracle Certified Associate Java](https://education.oracle.com/java-se-8-programmer-i/pexam_1Z0-808) certification. If you have it, great. Most of the Jr level 'interview' questions are at about that level... so just the act of prepping to take low value certification will go a long way. Most developers would expect someone fresh out of school, with a few months of Java, to be able to pass that. HR, on the other hand, occasionally gets suckered by it. It does help a fractional bit... if you have it. (I use it for MBO fodder for my Developers - easy bonus money) A very questionable spend of $250 of your own money, however.
The WWW-Authenticate header supports a "type" directive. A common type is "Basic". IANA maintains a list of Authentication schemes. See https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/WWW-Authenticate and https://www.iana.org/assignments/http-authschemes/http-authschemes.xhtml. My advice would be to respond with 401 for all types of authentication failures and provide an even more generic error message than the example you provided. Authentication can fail for lots of different reasons - missing credentials, incorrectly encoded credentials, unknown username, wrong password, locked account, etc. I usually respond with 401 for all of these and include a generic error message. The one exception is when the internal LDAP service is broken in which case I respond with 500. If you think your users will benefit from a list of common error scenarios then feel free to include such a list in your error message. Personally I just set the message to be "401 Unauthorized" and expect the next person to figure it out. I'd avoid using the example error message you provided because it may give the next person the idea that the username is incorrect when they have in fact provided incorrectly encoded credentials or are trying to use a locked account.
IIRC you can now easily bundle whatever modules you want from the JRE/JDK with your code to make an standalone .exe-File (or whatever format) without any dependencies.
Sorry, but I just have to mention this: just posted a link to my \[article\]([https://renato.athaydes.com/posts/comparing-jvm-alternatives-to-js.html](https://renato.athaydes.com/posts/comparing-jvm-alternatives-to-js.html)) comparing Java implementations on the browser... I show how CheerpJ runs my little Swing app inside the browser. So, yeah, Swing can run even in a browser now.
I use [https://sdkman.io/](https://sdkman.io/) to manage Java versions. It's similar to a Gradle wrapper in a sense... you just run a command like \`sdk use java8-openjdk\` and the current shell will use that. You can also do \`sdk default java-xxx\` to set the Java version globally.
[https://squaretest.com/](https://squaretest.com/)
That doesn't look custom to me.
Super cool article :-) You didn't mention it, but there's another horrendous option called stjs to have Java to JS compilation. It's JSweet but the worst possible with a subset of supported Java keywords that doesn't even include for each haha Nonetheless, JSweet is pretty much the best option in the end as you saw
Great resource, thank you
that is not the point of a wrapper though. I do not want to bundle Maven or Gradle with my application, but it downloads it on the fly and attaches it to the process. &amp;#x200B; There are also few other applications which do exactly that like Launch4J.
Very good comment.
Oh, `sdk use` sounds neat. Will this install automatically if not installed?
Eh, probably not unless you're really desperate. When you say message do you mean like dms on LinkedIn? From personal experience I've only got jobs through recruiters passing my CV on, or sending a CV in response to a job posting, can't say anything about how effective dms would be. I'm sure you already know but CS career questions is a decent subreddit for this sort of thing.
You're welcome. I'm glad you enjoyed it.
I have built [java2uml.com](https://java2uml.com) on GWT, now thinking of switching to other framework as performance gains look to be two-fold in some cases.
It's intalled with \`curl -s "https://get.sdkman.io" | bash\` so I guess you just need to put this script on your repo, then run \`sdk use java ...\` to get the Java version you need ready... but I haven't tried doing it like that yet... At work, we bundle the Azul JDK with our product and get the Gradle wrapper to "point to" it... at home, I manually change versions with SDK depending on the project I am working on.
FYI just tried to check your website, but it seems to be down at the moment.
I know it has only been 4 months but.. 1. are you still happy with adopting Istio? :) 2. is it *really* agnostic to the applications or do they require tweaking a little/a lot? 3. are you running it on kubernetes? I'd be really grateful if you answered those questions. I might soon have to choose between Spring Cloud Netflix stack vs Service Mesh solution and any real world insight would really help me decide.
Hm... thank you. Seems to be working for me. On the other note, TeamVMs attempt to compile to webassmebly looks very promising.
Late answer, but judging by other comments in this thread it seems like they are using some kind of service mesh solution, be it Istio or AWS App Mesh.
Have you considered Hazelcast? There is near cache in the open source version and also a 1st class JSON support. Disclaimer: I work for Hazelcas.
I considered at first, but one the main reasons for me to pick a library is the community size (maybe this is childish) but the hazelcast's git repo has 3K starts vs 8.8K from Redisson. Can you change my mind?
wouldn't have thought GWT to be so "light".
Mapstruct does that for the most part. You really only have to fiddle with it if there is something not so straightforward to do, for example if field names are not aligned.
I love Vaadin for the rock solid business logic integration. You can whip up avform form, table and filters really easily in no time. And reasoning about state management and client communication are not an issue. Also updating the UI based on async backend events is really easy. But when you have to implement some more complicated designs and outside the box ideas, the whole thing is just not pleasant to work with. Mainly because of the missing markup and cumbersome access to the browser apis and features.
I'm also unable to access your site. Might want to check on it.
My apologies, typo in the link. Fixed now
more stream operations like `Pair` and `zip`, sliding windows, partition etc in sdk.
Hi Renato - any reason why you didn't include Apache Wicket in your article?
Seeing as there is a build step involved with each method except for the React one, I'm not entirely sure it's fair to pick it as a baseline for comparison. Maybe compare the metrics to a React version of the app, which went through comparable build steps from common build tools. The author himself mentioned, that React apps without build tools is not very practical.
Would have liked to see j2cl included: https://github.com/google/j2cl
no worries, least I can do!
is there a reason for this? just that you don't care for maven's `integration-test` phase being different than `test`?
Thank you for suffering through all that. This is gold.
You should also check out https://kweb.io/. It's Kotlin rather than Java. From the [FAQ](http://docs.kweb.io/en/latest/faq.html): What‚Äôs the difference between Kweb and Vaadin? Of all web frameworks we‚Äôre aware of, Vaadin is the closest in design and philosophy to Kweb. In many ways Kweb is a philosophical descendant of Vaadin. This makes Vaadin one of the most useful frameworks to compare Kweb to, as there are also very important differences: * Kweb is far more lightweight than Vaadin. At the time of writing, kwebio/core is about 4,351 lines of code, while vaadin/framework is currently 502,398 lines of code, almost a 100:1 ratio! * Vaadin doesn‚Äôt have any equivalent feature to Kweb‚Äôs immediate events, which has led to frequent complaints of sluggishness from Vaadin users because a server round-trip is required to update the DOM. * Vaadin brought a more desktop-style of user interface to the web browser, but since then we‚Äôve realized that users generally prefer their websites to look like websites. * This is why Kweb‚Äôs philosophy is to be a thin interface between server logic and the user‚Äôs browser, leveraging existing tools from the JavaScript ecosystem when it makes sense. * Kweb was built natively for Kotlin, and takes advantage of all of its language features like coroutines and the flexible DSL-like syntax. Because of this Kweb code can be a lot more concise, without sacrificing readability. * In Vaadin‚Äôs favor, it has been a commercial product since 2006, it is extremely mature and has a vast developer ecosystem, while Kweb is still pre-1.0. (I'm Kweb's creator).
I believe there may already be work towards using the Const\_Dynamic mechanism in the JVM and the Constable APIs to have lazily initiated variables in Java which may fit your use case.
You will have to run it from the terminal using the command `java -jar file-name.jar`
You my friend are my hero. Tyvm
You‚Äôre welcome!
The reason you need to run it from the terminal is because it's a terminal program. If you want a "double-click" to start it you'll probably need to figure out how to fire up a new terminal in java before doing the quote guessing. Or you could make it a gui game.
I want to make a program that has a GUI eventually but I'm only in programming one. Just doing little side projects to practice my skills.
I like builds to be under 30 seconds and this one thing shaves 3 seconds off the build
or just: [https://github.com/kwhat/jnativehook](https://github.com/kwhat/jnativehook)
To the hiring managers who're reading this: Keep the practice up of not letting people, who've done due diligence, establish their careers and socialism will be here before you know it.
This is really the same issue gwt has. Js frameworks make it so much easier to work on the html directly when you need it, and worth how good js frameworks are becoming I see less and less reason to use java-based frameworks for frontend anymore.
I thought this was posted before but cool none the less. Variance and interfaces are really cool. You can create a read only interface version and extend it with a writable interface and then only share the read only interface implementation.
JNativeHook has a problem in OSX ([https://github.com/kwhat/jnativehook/issues/225](https://github.com/kwhat/jnativehook/issues/225)) and which hasn't been fixed since June 2018, which prompted me to write this as a working replacement for OSX.
&gt;Apache Wicket Wow, I just didn't know about it, TBH. I did search around to see if I was missing something, but this never turned up! I will have a look!
At least the Checkstyle and Enforcer plugin links are borked, but easily manually fixable. Someone else can sign up/in to comment directly on this Medium article.
:) Yeah, some of the options were a little bit painful for sure.
Nice! It does seem quite innovative... does it use KotlinJS to run Kotlin in the browser? Looking at the code I can't tell.
I believe a build step wouldn't have changed much... the React libraries were already minified and the JS code was too small to be significantly better after minified/bundled, I believe... but I would be happy to include the results with a more traditional React app if you make a pull request.
TIL! So many options! I will check this out and I am even thinking of writing a followup article including this, Apache Wicket (which I also didn't know about), maybe things like kweb.io , ClojureScript, scala.js and maybe more if there are others?
\&gt; This site is not yet optimized for your browser. Please try Chrome or Safari. Oh well, I guess FireFox is too niche these days to be supported?
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Yes, earlier discussion is here: [https://www.reddit.com/r/java/comments/bbuj1t/variance\_in\_java/](https://www.reddit.com/r/java/comments/bbuj1t/variance_in_java/)
I'll bookmark this for next time I get interviewed as it always seems to get asked and I always struggle to remember it all without an IDE in front of me.
And what about ZK https://www.zkoss.org/ I dont use it since 3 years, but at that time was for me a much better option than vaadin
Yep, it's a very rich ecosystem. If you extend language choices, then there are even more options like elm ([https://elm-lang.org/](https://elm-lang.org/)), reasonml ([reasonml.github.io](https://reasonml.github.io)), purescript ([http://www.purescript.org/](http://www.purescript.org/)). I've tried Elm, it has amazingly tooling, solid libraries, and it's very easy to started.
Yeah, I know... I mentioned Elm at the end... but I was thinking of traditionally JVM-based languages like Clojure, Kotlin and Scala.
Try comparing it to a prod build of create-react-app, it's very easy to setup
Looks a lot like Struts, no? Not sure it would fit with web front-end frameworks.
In regards to GWT you made a point that no one can argue with and yes the documentation is really really outdated and the only way to get the updates is to be close to the community Gitter is a good place for that [https://gitter.im/gwtproject/gwt](https://gitter.im/gwtproject/gwt) BUT GWT is actually much more modern than the one in the example, for example it is really super easy to create a GWT project using [https://github.com/tbroyer/gwt-maven-archetypes](https://github.com/tbroyer/gwt-maven-archetypes) that uses maven -no more ANT-. Also even though GWT widgets are still widely used we now have [https://github.com/google/elemental2](https://github.com/google/elemental2) which uses JsInterop to give us native access to browser API which means we dont need to pay the size price for the html elements as we dot with widgets. lets not forget about [https://github.com/hal/elemento](https://github.com/hal/elemento) which can help us reduce the code size for that sample to almost the half. &amp;#x200B; I would also recommend taking a look at some new GWT projects like domino-ui [https://dominokit.github.io/domino-ui-demo/index.html?theme=indigo#home](https://dominokit.github.io/domino-ui-demo/index.html?theme=indigo#home) and other domino tools like domino-mvp [https://github.com/DominoKit](https://github.com/DominoKit) or Nalu [https://github.com/NaluKit/nalu](https://github.com/NaluKit/nalu) &amp;#x200B; So even though GWT is old and is not as shiny as some other tools, it is still really powerful and modern. and i still have my doubts about comparing these using a small project like the one in the sample, in many cases the results will change when project grow larger and larger. for example GWT might not be the best choice for small project but could be the right choice for an application with hundreds of pages and many thousands lines of code.
I really miss C# in/out parameters in Java, it gives so much more control over variance. even as java developer, this blog post (and the subsequent ones) is also a really great read: https://blogs.msdn.microsoft.com/ericlippert/2007/10/16/covariance-and-contravariance-in-c-part-one/ It highlights some pitfalls of variance that are inherent in both java and C#.
Great writeup. Working on a similar topic for a BA thesis. Doppio is another possibility, that wasn't included. https://github.com/plasma-umass/doppio/
Is it really useful to link and article from 12 years ago about language features in Java and C#, both of which have changed tremendously since then? For example, now that you have value types in C#, in/out parameters are just confusing and don‚Äôt do anything useful.
The whole article chain covers a wide range of theory beyond the immediate application to Java and C#, and yes, it is still useful.
It might have reduced the overall size, through combining all sources and tree-shaking the result. I don't think that works with pre-bundled/minifined releases of JS libraries. I believe one needs to setup a package.json project and let the build tools do their thing with the unbundled React source code. Anyway, still a very interesting article. Looking forward to experimenting with JSweet.
Nothing at all. I would define it like swing components for the web. The controller is just through binders and event handlers
Programming help should go in /r/javahelp. **Removed**
in/out in C# don't really have anything to do with variance, they are parameter passing modes, specifically pass by reference (Java is only pass by value). Contravariance protects the integrity of the output parameter, so you can't insert plants into a list of animals. The out modifier doesn't do this. Covariance allows you to impose restrictions on the type of the input parameter. You can be passed a list of cats or dogs, but by covariance, you can restrict the input parameter to a list of animals. The in modifier doesn't do this.
i did read your whole post.. and have an upvote because it was on topic I believe. it is interesting. I did not know about CheerpJ.. I will look into it! Can you link me of the best web app that use CheerpJ that you know of?
yea those people who like Python, whose creator from his own admission said untyped language as big big mistake as soon as a project grows in size. Ugly because of semi colons? Checked exceptions? Ah yea that debate.. API designers are not forced to throw checked exceptions. At least in Java, you do have a choice. Kotlin and Swift are much uglier with all those : : : : everywhere.
Thanks for your comment, I really agree with all you said and it's good to know there are some GWT enhancements around (they should make that clearer on the website!). &amp;#x200B; \&gt; and i still have my doubts about comparing these using a small project like the one in the sample, in many cases the results will change when project grow larger and larger. &amp;#x200B; Agreed, I should probably have made this clearer... but my intention was to show the very basics characteristics of each framework... a little app like that is definitely not representative of a professional app, but it does allow one to rule out a framework based on the bare minimum overhead it introduces, which I think is very important to know.
Oh wow, yet another JVM-in-the-browser implementation!!! I am really amazed how many options there are!!! Given none of these projects seem to be getting mainstream though, I think it would be nice if some of them united forces... Using the JVM ecosystem for web applications would be really attractive if it managed to become lighter and easier to interop with the browser, but that requires a huge amount of effort to do right, and this fragmentation of efforts into so many different options is not optimal to fix that.
I just had a quick look... this seems like alpha software (the website mentions it's a research project)... the demo has very basic bugs (I can't even type commands with quotes it seems as it misses characters) so I wouldn't have included it anyway at this time.
Kotlin is certainly the most interesting one to me. I use it for sharing code across an Android app, JVM CLI, JVM server, Chrome extension, and web frontend.
Check [https://www.leaningtech.com/cheerpj/demos/](https://www.leaningtech.com/cheerpj/demos/)
/r/javahelp
That function is a simple placeholder. You can easily create it yourself, it literally just returns a list of `Person`s. You should be able to do it like this: public List&lt;Person&gt; createPersonList() { List&lt;Person&gt; persons = new ArrayList&lt;&gt;(); persons.add(new Person(1, "TheReal", "Trash")); persons.add(new Person(2, "John", "Doe")); return persons; }
We finally able to build out app with TeaVM along with GWT so that the app can be run in booth mode https://edu.cospaces.io/Universe This is a large project (about 10k java files) with own scripting, co-blocks language, physics, lightning, materials. Q/A: Q: why you use both A: to make a smoother transition of our continuous delivery app Q: what advantages it gives you? A: it allows us to add Kotlin code to out app, it runs many algorithms faster, take lsee memory (TeaVM uses native JsTypedArrays)
I have a pretty unusual approach to frontend, but it seems to work really well. I keep the routing on the server side, and render static templates per route. The server never puts any data in a template, they just contain static information: &lt;nav-bar&gt;&lt;/nav-bar&gt; &lt;current-view&gt; This template is rendered inside a layout template (or "frame"), which loads all the dependencies in the &lt;head&gt; tag (this includes the `current-view` component in the example). The layout template is also responsible for initializing a Vue app for the current view. All frontend code is written as single-file Vue components: &lt;template id="nav-bar"&gt; &lt;header class="navbar"&gt; ... &lt;/header&gt; &lt;/template&gt; &lt;script&gt; Vue.component("nav-bar", { template: "#nav-bar", data() { return { ... } }, }); &lt;/script&gt; &lt;style&gt; header.navbar { background: #f5f5f5; border-bottom: 1px solid #ddd; } &lt;/style&gt; Pros of this approach: * It's not an SPA, you get a new app per request (no state management required) * No need for a frontend pipeline, no node or anything * Single file components * No need for a "loading" page, the correct page is rendered directly (never any flickering when loading or refreshing) * Save and refresh, no need for watchers or WebSocket CSS injection and whatnot Cons: * Need a server for the frontend * When switching pages, the entire app (user written code) is download per request. I'm working on a fairly big admin-page with this approach. The entire app is about 80kb, but gzips down to about 14kb * Need to do some hacky things, like pass the current user roles and path parameters to the frontend as a cookie I have been waiting for over a year for this arhcitecture to blow up in my face, but it doesn't seem like it will. It's a very simple way of building webapps. I replaced a react+redux+redux-sagas mess with this, and the resulting code-base is less than one third of the original size, has more features, and fewer bugs.
Chrome/Safari sufficed for proof of concept. Firefox support requires more work and optimization - I chose to block it rather than provide bad experience (for now).
Why kweb.io instead of pure KotlinJS ? (or KotlinJS + official React wrapper [https://github.com/JetBrains/create-react-kotlin-app])
Thank you! &gt; does it use KotlinJS to run Kotlin in the browser? Looking at the code I can't tell. No, it doesn't use KotlinJS, it uses a fairly efficient "bytecode: language to manipulate the DOM in the remote web browser, but all Kotlin runs server-side, there is no cross-compilation. If you're familiar with [X Windows](https://en.wikipedia.org/wiki/X_Window_System) in Unix/Linux, the principle is fairly similar. More than happy to answer any other questions.
**X Window System** The X Window System (X11, or simply X) is a windowing system for bitmap displays, common on Unix-like operating systems. X provides the basic framework for a GUI environment: drawing and moving windows on the display device and interacting with a mouse and keyboard. X does not mandate the user interface ‚Äì this is handled by individual programs. As such, the visual styling of X-based environments varies greatly; different programs may present radically different interfaces. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/java/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
Did you know about https://github.com/google/j2cl
I should have scrolled down.. Wrote the same
You're missing my point. Microsoft released a version of Minecraft that they said is bundled with an optimized JVM. What I am talking about has nothing to do with the forbidden Microsoft JVM. Why are you missing my point?
So in general, Oracle's Java 8 has a slight edge. It's a bummer we didn't get a comparison of Oracle's packaged Java 11 vs OpenJDK 11. I know they're supposed to be nearly identical, but these results don't make it clear why there are some performance regressions
&gt; I really miss C# in/out parameters in Java, it gives so much more control over variance. I think you mean `in` and `out` *modifiers*. There are in and out parameter modifiers which mark the parameter as passed by reference (Java only has pass by value). The C# keywords are certainly more succinct that Java's very wordy version (`&lt;in T&gt;` vs `&lt;? super T&gt;`) and (`&lt;out T&gt;` vs `&lt;? extends T&gt;`). But, I feel C#'s designation seems backwards. The keyword [in](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/in-generic-modifier) is for contravariance, and the keyword [out](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/out-generic-modifier) is for covariance. I think "output" for contravariance (`Dog` can be inserted into `List&lt;? super Dog&gt;`) and "input" for covariance (`List&lt;Dog&gt;` and `List&lt;Cat&gt;` are assignable to `List&lt;? extends Animal&gt;` and readable).
No Oracle build was tested. Only OpenJDK builds.
Too bad no builder pattern like in C# [`With`](https://blog.cdemi.io/whats-coming-in-c-8-0-records/). However, because &gt; Records are classes; they can have most of the things other classes can: accessibility modifiers, Javadoc, **annotations** &lt;...&gt; I guess we'll have annotations for that.
Dummies guides to java are a great series of books that can get you introduced to programming java, i have a 9 in 1 version but that could take longer than a month to read. they introduce java and the basics of programming as well as everything you will need to start programming in it. you want to start programming as soon as possible, get an understanding of how java works and how people are supposed to program in it (formatting and syntax). most bugs are based in misunderstanding these or poor programming so for bug checking you should also learn how to make flow diagrams when reading java code.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Yeah, the project hasn‚Äòt been updated in a while, but the code is surprisingly stable. Just used in in a thesis project. There‚Äôs another project using this JVM implementation, called JavaPoly (https://www.javapoly.com/).
Can you name any of the other JVM-in-the-Browser projects? Alle the stuff that I‚Äòve found needs another offline component (like a Python tool or another Server to compile Java source to Bytecode). Doppio seems to be the only solution to compile and run Java completely in the browser without external dependencies.
PLEASE READ the sidebar, which says &gt; NO programming help, NO learning Java related questions! &gt; These have separate subreddits - see below. &gt; Please seek help with Java programming in /r/Javahelp! Good luck!
Is there a bug in one of the charts? &amp;#x200B; The Perfomance Chart: \- JSweet ha the longest ba, but the smallest time (0.8 s)
I am sorry dude, but you want to learn java in one month to teach someone who is studying for 8 months? Better off finding some expert and pay some tutoring
I didn't read the entire issue thread but if you are going to write a whole new library why not just provide a PR for jnativehook with a fix?
use a proper visual system, not the console as it will allow you to take mouse input more easily with rectangle objects. i use JFrame and Graphics2D because they are simple and easy to understand as well as keyboard listener for arrows, it will also manage redrawing better than a console as you can load things out of frame and "slide" it around behind the screen automatically.
Will do! Thank you.
\&gt; (I was 12 or 13, now I'm 16) Oh god you're (much) younger than java (1994 or something)
So for an ascii based program, you might want to try something like curses https://stackoverflow.com/questions/439799/whats-a-good-java-curses-like-library-for-terminal-applications#12896503 Really the trick to making a good ascii program is abstract all the logic for printing characters in screen, then make your game. Curses will help you with that, but you will probably want your own layer of abstraction around it to make it easier for you while designing and programming it.
So could I use JavaFX then? And if so how would you recommend I set up drawing to the screen?
Are you saying Doppio actually compiles AND runs the Java code on the browser? If so, then yeah, that seems unique to it... but why would you want to do that?
What would make my life easier? &amp;#x200B; A library, as a JAR, that once added to my project would make all existing and future bugs disappear.
yep
how/why does it shave 3 seconds? not being cheeky, i'm actually looking if this will affect any of my projects positively :)
Excellent advice, OP seems under the impression of too many superhero movies. It's cute, but it's not realistic.
Maven skips spinning up one more process (JVM)
Because, as I told you, Microsoft was forbidden frok bundling its own internally developed JVM. Bundling Oracle‚Äôs JVM was never forbidden. And the JVM included in Minecraft is fhe Oracle one. You can verify it by looking into your Minecraft files.
Lombok already provides this with @Data and @Builder annotations. But it would be nice to see something in the language itself.
Repeating \`implements Expr {}\` on \_every\_ entry feels rather verbose. I wonder if moving the \`record\` declaration inside the \`{}\` of the \`sealed interface\` was considered.
Network administrator. I'm now a senior software engineer working on web apps. Current project involves talking to a local service via HTTP that communicates to attached TWAIN-compatible scanners, so you can scan and edit documents from a browser.
That was suggested at one point. I haven't been able to read the latest discussions, though.
I guess for simple things that syntax may work well for ADTs were you leave functions OUT of the data), but for more complex things, or non-ADT usages maybe not so much.
https://www.javatuples.org/
I use them regularly. Like you said, it can help with class internals.
They‚Äôre nice to use when you want to further encapsulate your implementation, such as a `Node` class used in a linked list implementation.
I use them often when I need to follow the builder pattern.
So would JavaFX not be a good idea then?
Not much anymore since we have functional.
If you use JavaFX, I don't really see a point in making a game with ascii graphics. I guess if you really want to make your graphics just text and want a lot of customization you would use JavaFX, otherwise be able to have it run in the terminal or create a game without text graphics and make it with a combination of rectangles and text. I don't really have any experience with JavaFX so I don't know how good it is. From what I understand it's mostly used for GUIs. If you decide against text based graphics, you should probably use a game engine instead of JavaFX. I recommend LibGDX.
Are you counting based on "stars"? That wouldn't give a clear insight into the community that actually contributes code. &amp;#x200B; I bet most users of Hazelcast are corporate and have no reason to log into Github to star it. Hazelcast is pretty established.
The best part about the Spring Boot integration is that their build plugin has configuration for it already. You just add the dependency and the config kicks in. &amp;#x200B; For anyone else that is curious: [https://docs.spring.io/spring-boot/docs/current/reference/html/howto-build.html#howto-git-info](https://docs.spring.io/spring-boot/docs/current/reference/html/howto-build.html#howto-git-info)
&gt; The only good reason I can think to use them is to simplify code....? Isn't that the only good reason for all language features? I use inner classes when they make sense. Usually they are private. Frequently, they are static. Generally, it will be for some cache key. Does every class I write get an inner class? No. Generally, I use them when they make sense locally to the problem at hand. I generally won't use them for any more than data shuttles. I think using them for more than that ends up being problematic due to the fact that they are hard to test.
What's not shown here (and that I don't see) is which launch options were used. One major change from Java 8 to 11 was that G1GC became the default garbage collector. If they didn't switch it back to the parallel collector that would be a pretty good indicator of what's going on with these benchmarks. It also doesn't really show what the application looks like. Is the benchmark running the JVM multiple times? Is it closer to a JMH benchmark? I'm not sure. I'm pretty distrustful that they've correctly benchmarked java (so few do). This benchmark is devoid of detail which makes it not very trustworthy to me.
Why are they bundling these two proposals together? Can't we have sealed types without records, or vice versa? It kind of feels like sealed types will be controversial. So they're bundling it in with records which everyone wants.
Yes, that‚Äôs what I‚Äòm saying. Doppio is running a fully functional JVM in the browser, including the Java compiler. I think one of the uses cases is live coding environments/sandboxes to run Java in the browser (think of Codecademy, etc.)
I assume they're being bundled together because, as a pair, they represent algebraic data types. And classes aren't entirely interchangeable with records due to mutability, inheritance, etc.
Actually, there are many oop features of java looks pretty impressive at first glance but we are not using them in real life scenarios. Because simple codes are better and reliable than complex codes. Programming industry doesn't give money for the complex code structures. After having experience of programming more than 3 decades in Assembler, C, C++, Java, C# and R programming languages. It seems like C and C++ are the best abstraction of all computer languages. Your code is just a text! Ultimately every code need to be converted to machine language. In other words every code you wrote should reduced to machine language. I prefer to use the term reduction because machine language is primitive! You got make reduction to convert programming language to machine language. This reduction is done by compiler. Maybe you are using futuristic programming language but ultimately you code text should reduced to machine code. So why we need to write complex code? The answer is we don't need! It's just a advertisement of programming language.
Nowadays it's only ever useful for ¬´ type tokens ¬ª.
I know they're not entirely interchangeable, but given that many people feel that classes should be immutable, and you should prefer composition over inheritance, wouldn't that lead to using records by default? I mean, maybe using records by default is a good idea. I just kind of got a vision of a generation of junior programmers who never write classes, only records. I don't know if that's a good thing or a bad thing.
&gt;I am sorry dude, but you want to learn java in one month to teach someone who is studying for 8 months? &gt;Better off finding some expert and pay some tutoring But then it wouldn't be a ROM com.
The places where you'd use records seem very similar to the places where you'd use value types. I'd rather wait for value types before releasing this, and base records on them rather than classes, so there's one clearly correct way to implement simple data struct types that maximizes both performance and legibility, rather than changing the best way to implement structs twice in quick succession.
JavaServer Faces (JSF) is the Java standard technology for building component-based, event-oriented web interfaces. Like JavaServer Pages (JSP), JSF allows access to server-side data and logic. Unlike JSP, which is essentially an HTML page imbued with server-side capabilities, JSF is an XML document that represents formal components in a logical tree. JSF components are backed by Java objects, which are independent of the HTML and have the full range of Java abilities, including accessing remote APIs and databases.The key idea to a framework like JSF is to encapsulate (or *wrap*) client-side technologies like HTML, CSS, and JavaScript, allowing developers to build web interfaces without much interaction with these technologies. Referred this site for JSF. [https://www.javatpoint.com/what-is-jsf](https://www.javatpoint.com/what-is-jsf)
The idea that the fields in a record are accessed via getters and setters already completely spoils it. The record simply needs a set of auto generated constructors (or a compiler supported builder pattern) and as all fields are final, getters are superfluous.
The Record type is nice (and long overdue), although I do wish it didn‚Äôt require the resulting object to be immutable. I can‚Äôt really think of a use case for sealed types though. Seems more of a access modifier than anything else...so basically you can restrict inheritance to your whole project rather than just packages
Programming help should go in /r/javahelp. As a heads up: There are several libraries for that: Google for "Java Roguelike" Another starting point: *Lanterna*.
Not sure if this is allowed on the sub, I'll delete it if there's an issue. &amp;#x200B; Currently it's just alright, it judges the best position based off weighting of various factors that I've programmed into it. It doesn't work as well with only 10 columns, so I eventually want to try running it through an evolution algorithm to find the best values for the weightings. &amp;#x200B; Based off Yiyuan Lee's Tetris AI - [https://codemyroad.wordpress.com/2013/04/14/tetris-ai-the-near-perfect-player/](https://codemyroad.wordpress.com/2013/04/14/tetris-ai-the-near-perfect-player/)
lombok reduces memory footprint of objects and pointer chasing at runtime? wow, who knew?
private inner classes are nice. public ones are annoying to fully qualify. caller could use static import but that's annoying too
repost
In case you have a link ready of a benchmark you would consider trustworthy, could you please link it?
Getters more naturally sit alongside wither methods, and methods for extracting derived state, which they're looking into providing VM support to make lazy and run-once. At least they're not named with a "get" in front. Also make it easier to have them fulfil the contract of interfaces in some cases. Don't see how it "spoils" it particularly. In what way do you see them as being a significant detriment?
I use static inner classes often for form objects in controllers (usually spring MVC). This way the formobject is defined very close to the method handling the form POST.
They're completely orthogonal. and there's no reason records can't *also* be values once those are delivered, so why on earth hold the feature back all that time when they can be delivered now?
Sealed types have 2 use cases. Firstly they allow you to prevent clients from adding further subtypes to union types, where it wouldn't make sense. For example, Optional could be modeled as a sealed union of Present and Empty, and by design you wouldn't want further cases added. The other use case is for exhaustiveness checks on switch expressions on the type.
They're basically how you did stuff that is now handled by lambdas, before lambda's. They were commonly used when I was working with Swing back in the day. Not much with web apps.
I use them mainly for Mementos and listeners in jfx
My Bad, i forget to point out this small guide to GWT [https://dev.to/ibaca/modern-gwt-first-steps-509k](https://dev.to/ibaca/modern-gwt-first-steps-509k)
I would just say you should keep applying, many people send out dozens of applications before even landing an interview. Also consider looking for jobs that appeal to you and then creating a project using the same or similar tools required for the job. Best of luck!
I would rather they write records and clean that up than trying to convert their classes back to records... One direction is easier than the other, imo.
Methods also allow for method references VS explicit lambda to extract/map state
These features are welcome and long overdue. Question: Why is it necessary for the author to state 'It is not a goal to declare "war on boilerplate"'? Boilerplate is one of the main criticism of Java, and Java language designers continue to downplay the problem. In my day job, I work with an app with 206k lines of Java code. The vast majority of it is boilerplate. When programs get to a certain size, too much boilerplate becomes a hinderance to management and understanding of the code base. I would have switched languages long time ago had it not been for our already massive investment in the current code base and the huge eco-system of libraries available in Java.
Please don't ask them to delay. We've been waiting for records for years already.
Kotlin has sealed classes, and it's great because compiler is able to verify whether 'when' statement is exhaustive. It would play nicely in Java with incoming switch clause improvements.
To clarify further, code that is too concise (i.e. minimal boilerplate), may also be an impediment to comprehension (e.g. Perl). Clearly, the Java language designers need to strike some sort of Gold middle. In my opinion, Java still errs on the side of too much boilerplate, although thankfully, the needle is shifting upon each successive Java release.
Textbook example!
Not one in particular, but here's an oldie but goodie about benchmarking Java. https://vimeo.com/78900556 These are things I look out for in general when people benchmark Java. Most benchmarkers fail, so much so that I don't trust them without the benchmarking code and runtime options.
Recently I used it as Mixins for Jackson, for instance.
Straight from [Data Classes and Sealed Types for Java](https://cr.openjdk.java.net/~briangoetz/amber/datum.html) &gt;**Are records the same as value types?** &gt; &gt;With *value types* coming down the road through [Project Valhalla](http://openjdk.java.net/projects/valhalla/), it is reasonable to ask about the overlap between (immutable) data classes and value types, and as whether the intersection of data-ness and value-ness is a useful space to inhabit. &gt; &gt;Records and value types have some obvious similarities; they are both immutable aggregates, with restrictions on extension. Are these really the same feature in disguise? &gt; &gt;When we look at their semantic goals, we can see that they differ. **Value types are primarily about enabling** ***flat*** **and** ***dense*** **layout of objects in memory. In exchange for giving up** ***object identity*** **(which in turn entails giving up mutability and layout polymorphism)**, the runtime gains the ability to optimize the heap layout and calling conventions for values. With records, in exchange for giving up the ability to decouple a classes API from its representation, we gain a number of notational and semantic benefits. But while some of what we give up is the same (mutability, extension), some values may still benefit from state encapsulation, and **some records may still benefit from identity, so they are not the exact same trade**. However, there are classes that may be willing to tolerate both restrictions, in order to gain both sets of benefits -- we might call these value records. So while we wouldn't necessarily want to only have one mechanism or the other, we certainly want the mechanisms to work together.
Switch expression on types is nothing more than an `instanceof`. Really aweful design if used.
That's highly subjective. In conjunction with the forthcoming pattern-matching JEP, switch expressions on types will be much more powerful than simple instanceof checks.
Thanks :)
What GUI library are you using? I would guess Swing. I'm pretty sure I already know this next question answer but you are drawing the grid and values each time rather than using components I would assume. Does it scale or are you using fixed values for your grid? I think it is cool to demonstrate your AI works, however, you probably on the right side display with like a heat map where the AI is thinking to place the next piece. Even creating a another area to show what the next pieces will be and piece the AI is holding/not holding. Could also show stats or what name of algorithm used maybe a leaderboard of algorithms that came up with the best scores. Also, I think what would be cool is to create a game that could be different each play through. Maybe you could have squares that never go a way so you have to navigate around them, obviously when that lined is filled it clears but doesn't clear the squares that never go a way (could be like a black square). You could create shapes that aren't in the game and see how the AI adapts to them. Maybe you could use as a goal for the AI to accumulate a certain amount of points in a time frame. So you'd want to give more points for specific clears like t spin or 4 lines cleared at a time. You could even have two AIs verse each other. Though with all these suggestions slowly makes a simple project into a beast. Kind of how my online Mastermind game is going right now.
Java has pass by value only for built-in types. All objects are passed by reference. You can easily see this, if you pass in an object, and then modify it - it will be modified outside of the function as well, which would not be true if the object would be passed by value.
How are you streaming a Java animation to Twitch? I spent several hours trying various methods to stream to YouTube (RTMP like Twitch so I assume it works similarly) but couldn't get anything to work
There's no reason why these can't be added later.
Because this is a narrowly focused JEP. That is a non-goal for this JEP. Other JEPs will handle other places where the language could be terser (see switch expressions).
Obs window/screen capture?
a Java App Store.. Sun should have made one back in the 2000s.
Don't static imports only work on static inner classes too?
do you understand that Microsoft would introduce a feature to break this if that would be possible. That's what they tried with J# Microsoft hates Java.
Really? I thought that‚Äôs what anonymous classes were for, not inner classes. I‚Äôve never heard of anyone using an inner class in that way
They're called "anonymous inner classes" I believe...
Ah yes I think you‚Äôre right. I think the devil is in the details My interpretation was that OP was talking about normal (non-anonymous) inner classes, since people don‚Äôt really talk about anonymous inner classes these days due to the introduction of lambdas (as you mentioned)
Shows perfectly that, if you keep things in order you won't have to overthink them.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
What drives me bonkers is the whole `.collect(Collectors.&lt;collector&gt;)`. I would just love to see all the `Collectors` as defualt methods on stream
Probably
We need a new logo for Java.
I think so
It looks like in your [submission](https://www.reddit.com/r/java/comments/bgfz7s/spring_mvc_with_spring_social_facebook/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
&gt; All objects are passed by reference. Objects are also passed by value. The value in this case being the reference itself, which is copied. &gt; if you pass in an object, and then modify it - it will be modified outside of the function as well That's not what pass by reference means. Here is an example of pass by reference in C#: void int swap(ref int a, ref int b) { int tmp = a; a = b; b = a; } x = 2; y = 3; swap(x, y); // x = 3, y = 2 This is impossible in Java.
Would be great to teach it to try to do high score rather than just complete the line too. Do you have your code on github?
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Yes, moving to G1 by default is a likely culprit. Most of these benchmarks focus on throughput, and G1 is trading throughput for better average latency, which means it will get a few percent lower on average score compared to parallel GC. G1 might need a bit more heap to perform optimally, too, so results are very sensitive to whatever other command line flags have been set. (Full disclosure: I've been doing benchmarking internally of OpenJDK at Oracle for a few years, and in stable configurations most benchmarks have improved a few percent from 8 to 11 when comparing G1 vs G1 or parallel GC vs parallel GC. There are some outliers, of course, both big improvements and some regressions.)
&gt; That's highly subjective. Consensus is that `instanceof` is bad and almost always a design error. In any reasonable language that is and that supports dynamic dispatch. &gt; switch expressions on types will be much more powerful than simple instanceof checks For example? Do you mean something like `case Point(_, 5)`? Even that will use `instanceof` and better be solved on the concerned class.
Why is it necessary for the author to state 'It is not a goal to declare "war on boilerplate"'? &gt; While it is superficially tempting to to treat records as primarily being about boilerplate reduction, we instead choose a more semantic goal: modeling data as data. (If the semantics are right, the boilerplate will take care of itself.) It should be easy, clear, and concise to declare shallowly-immutable, well-behaved nominal data aggregates, and to organize them into related hierarchies.
&gt; How often do you use inner classes? All the time when I'm too lazy to refactor some logic into a new top level class and pass around tons of shared state. &gt; The only good reason I can think to use them is to simplify code....? That's a treacherous thought. The code looks more simply, but is really more complex. If time permits, it's often better to refactor and separate inner from outer class, but they're just too damn convenient, and cleaning up is something we do "tomorrow".
It looks like in your [submission](https://www.reddit.com/r/java/comments/bggh2p/backend_developer_contract_opportunity/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
&gt; The argument list may be omitted (because it is identical to the state description); further, any record fields which are definitely unassigned on all normal completion paths are implicitly initialized from their corresponding arguments (this.x = x) on exit. This allows an explicit constructor to specify only argument validation and normalization, and omit the obvious field initialization. Oh man, I dislike implicit behaviour in my explicit definitions.
1. **Sidebar**: **Do not post tutorials here** 2. **Spam somewhere else**
Pass by value means that the value is pushed on the stack, so that would mean that an object is pushed on the stack and then, if modified in the function, only the object on the stack is modified, but not the outside one, thus Java cannot be pass by value.
In some cases 8 is faster and in others 11? What to think of this?
&gt; so that would mean that an object is pushed on the stack An object is not pushed on the stack in Java, the reference to the object is pushed on the stack. The object is allocated in the heap. Note, reference in this context has nothing to do with reference in pass by reference. A reference in Java is a glorified pointer value. A reference in pass by reference is an alias for caller's variables, which is why swap works. Java does not support aliasing variables outside the method's scope. &gt; thus Java cannot be pass by value. A reference is a value type, which is passed value. Objects in Java are not value types. Java is pass by value only.
C# ... we‚Äôve moved to it for new projects
.net core is probably the closest. C# is actually my favorite language. My concern is the eco-system and the open source community around it.
This isn't using instanceof though. Pattern-matching over union types is arguably a superior alternative to stuffing all of your type-dependent logic into said types. The logical conclusion of the latter approach is types which have database serialisation logic, UI rendering logic, business logic etc all within each subtype instance. It simply doesn't work. To put it another way, taking Optional as a union of Empty and Present as the example, it would not make sense to have to embed database serialisation logic into the two subtypes. It should clearly live outside, in which case the logic needs to determine which of the two subtypes it's dealing with. To date the only options to do that have been instanceof or visitors. Pattern-matching over the types is clearly better than either of those.
just capture the screen lol
I have been in the same boat before. For Swing, you frequently need to add a something-listener to a control, such as a button or checkbox. The only purpose of this class is that it implements a necessary interface in order to respond to the button click event. There are a number of cases where it is useful to have a named inner class, rather than an anonymous inner class for a Swing event listener. It is difficult to remember specific cases, but here is one that I can remember. I had a number of buttons that needed some custom behavior. They all had the exact same event handling code, but how it behaved was controlled by some parameters. In this case, I would create an inner class (not static! so that it had reference to the context of the enclosing class). The inner class had a constructor with the parameters, and obviously private members initialized from the constructor. Then in each Swing event listener, I would assign a new instance of this inner class, with appropriate constructor parameters. Otherwise all these buttons had the same click event handler code, but controlled by constructor parameters of the event listener. I hope that made sense. There were a few other cases I remember creating named inner classes to make Swing life easier. But as others say in this thread, the reason you use any language feature is to make code simpler and easier to read. In this case using a named class to eliminate a lot of nearly identical copy-paste boilerplate.
Because a "record" is completely pointless when it is just a POJO with no business logic but still uses getters (setters seem not to be involved as the proposal is: everything is final/const [what is actually the point of that?] )
Instead of C#, how about a library to compile CLR to Java bytecode. &amp;#x200B; Problem: The .NET ecosystem, like Java, is tied to its ecosystem of libraries. Thus to run some C# code within Java, you also need to bring in all of its .NET dependent libraries. In other words, the C# code will use different loggers, different Math libraries, crypto, string and everything else. As a simplistic example: C# code doesn't call System.out.println(). So to really make any C# code work within Java, you need to offer re-implementations of a lot of the most basic features of C# libraries -- such as standard in / out / err -- just to give one tiny example. You need to re-implement their Date class, etc.
I'm 5 minutes in and still haven't figured out what Payara is. I clicked the link on this post, couldn't figure out what the software does from that. Went to the homepage, top tagline is typical hipster vapidity: "Recognized Leader in Creating Future-Proof Innovative Infrastructure Software". Saw "Payara at a Glance" header at the bottom of the screen, scrolled down, and got this: [https://imgur.com/TrwVJyl](https://imgur.com/TrwVJyl) Eventually I got about halfway down the page before coming to the conclusion that Payara is yet another application server? I don't know if OP works at Payara or not, but if you do... your homepage reads like a literal parody of all other cloud-based SaaS providers.
This is where OOP and FP paradigms and mindset split, the understanding of what a type is and should do. I like to adhere to Liskov principles and high cohesion / low coupling. &gt; to stuffing all of your type-dependent logic into said types Not into "said types", but into classes that can deal with it. Except of course the business logic. &gt; Pattern-matching over the types is clearly better than either of those. No. It's not *clearly* better. Pattern-matching is maybe less verbose but its disadvantageous in design compared to visitors. Note that Pattern-matching is nothing more than glorified if-elseif-else (+ maybe exhaustiveness check).
Easier (and less error-prone) to write, sensible default equality/hashcode, soon to get generated patterns too. Also more information available via reflection, e.g. member order, and reliable contract of reproducibility between members and constructor, making for straightforward and safe serialisation libs e.g. to/from JSON... I'm curious why you think it would be less pointless if it just exposed fields?
Cool! Did you just build the reinforcement algorithm yourself or use a library to help out?
Great writing and surprising results! Didn't expect java to do so well. Excellent job! &amp;#x200B; There is however another difference: Widget set. When you are mostly a backend programmer you not only need a technology but also a good looking widget set in order to create a not-so-horrible web application. GWT is not only a java to js compiler, also includes a more or less complete widgets set. React does not include one, but there are many professional looking sets of widgets you can use. Vaadin has a nice widget set, Jsweet may have some useful candies to try, CheerpJ has the horrible Swing components.... maybe it supports pluggable look and feel to make them less horrible &amp;#x200B; In my line of work the most important widgets are table related, I should try to see how hard is to make a simple web page with some tables and see how that affects performance. &amp;#x200B; Thanks again!
It seems to be a rebranding of GlassFish, the reference Java EE implementation: https://en.wikipedia.org/wiki/GlassFish
Useful to know, thanks for chiming in!
It was an anti-Java joke bro
It's either static or inner, not both: https://docs.oracle.com/javase/tutorial/java/javaOO/nested.html Both are nested, however
A bad idea with a good presentation is doomed eventually. A good idea with a bad presentation is doomed immediately.
Check out /u/henk53 post history, I think he works for Payara and posts frequently here about Payara. Mods should prohibit this type of shilling.
Someone could seriously propose such a thing. And if actually achieve, it could have potential uses. I wanted to treat it seriously while pointing out the immense difficulty of such a project.
It wouldn't be compatible. For example `LinkedList` implements both `List` and `Deque`. So the `collect` method must return both `List` and `Deque`. How would that work? Of course in that case they could add a `map(...)` method to `LinkedList` that also returns a `LinkedList`. But if you had written a similar class yourself, they can't do that for you.
OP's license is a more friendly license. This library's api looks nicer too. Plus, this looks like a fun project to build.
Doesn't a star on github, just mean someone bookmarked it?
Does Hazelcast work on applications that are in separate containers and on separate servers, like in a Kubernetes cluster?
I think I have been "accused" of working for just about every other Java EE related company out there :P A few weeks ago you accused me of working for IBM, since I posted a few liberty blogs in succession: * https://www.reddit.com/r/java/comments/b8yaf3/microprofile_22_im proving_the_developer/ * https://www.reddit.com/r/java/comments/b68q1q/testcontainers_beating_arquillian_at_its_own_game/ * https://www.reddit.com/r/java/comments/ax6krs/support_for_sharding_keys_with_jdbc_43_in_open/ * https://www.reddit.com/r/java/comments/a4x7qr/checking_the_health_of_microservices_using/ Now please, make up your mind, which one is it?
Payara started as a fork of GlassFish, when Oracle announced stopping support for GlassFish. Since then Oracle hasn't done much for GlassFish, while Payara has continued it. Since Java EE moved to Eclipse, and hence became Jakarta, there's no Ri anymore. Neither GlassFish, Payara or any other Java EE implementation is the RI now.
&gt; Eventually I got about halfway down the page before coming to the conclusion that Payara is yet another application server? There's actually not that many active Java EE application servers remaining. WebLogic is theoretically still active, but practically gone. Geronimo is gone. Resin is still there, but they remain at Java EE 6 and have no plans to update (it's on their forum). JOnAS is gone too, they just stopped. SAP NetWeaver is gone. OC4J is gone as well. Essentially it's now JBoss/WildFly (the number one), Payara/GlassFish, (Open) Liberty (from IBM, build from the ground up to replace WebSphere) and TomEE (based on Tomcat). But, IBM acquired Red Hat, so essentially JBoss/WildFly and Liberty will be from the same company, likely they will merge in some way. Therefor *yet* another application server is stretching things a little. In a little while it will be: * JBoss/WildFly/Liberty * Payara * TomEE And that's practically it.
All of them.
All of them.
They're very different, Kweb.io is server-driven, philosophically similar to Vaadin but way lighter weight, and taking advantage of all of Kotlin's features. It doesn't do any cross-compilation of Kotlin to JavaScript, which helps a lot with simplicity.
Kweb was also heavily inspired by Apache Wicket, particularly Wicket's approach to keeping state server-side but automating the synchronization with the browser DOM.
If I take this post at face value, then Payara may bring some value to the table. Unfortunately, that doesn't change the fact that the website is a terrible parody of other SaaS websites; and if Payara can't communicate what they actually do, then they're consigned to the same graveyard of history as the other app servers you describe.
It looks like in your [submission](https://www.reddit.com/r/java/comments/bgldvs/can_somebody_help_me_with_this_java_code/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
UPDATE: It still doesn't work but i have also tried this: &amp;#x200B; **import** java.util.Scanner; **public** **class** testing5 { **public** **static** **void** main(String\[\] args) { Scanner keyboard = **new** Scanner(System.***in***); Scanner in = **new** Scanner(System.***in***); String pizza, vomit; pizza = "pizza"; vomit = "vomit"; System.***out***.print("Welcome to Don't eat the dohnut! "); System.***out***.println("This is a text based game made by Nicholas A. "); System.***out***.println("The objective is to type "); System.***out***.println("down something to not make you eat the dohnut before you run out of turns."); System.***out***.println("Press enter to continue"); keyboard.nextLine(); System.***out***.print("---------------------------------------------------------------------"); keyboard.nextLine(); System.***out***.println("Type down something: "); String input = in.nextLine(); **if** (in.nextLine() == pizza || in.nextLine() == vomit) { System.***out***.print("It worked! You won"); } **else** { System.***out***.print("It didn't work and you ate the dohnut"); } keyboard.close(); } }
okay thanks
UUIDs have a specific form and meaning; you don't get to choose their length. If you need something of a different size, then it's not a UUID, by definition. [There's already code to do this](https://www.google.com/search?q=generate+uuid+in+Java).
Yes a more interesting task is to have it learn to maximize score by playing and gaining experience with something like deep q-learning
Thanks for clearing that up, I looked into UUID.randomUUID() but I was asked to limit the id length to 16 so I am trying to come up with some alternative way, I guess I could've ommited term UUID from post and used word uniquekey instead?
&gt; but I was asked to limit the id length to 16 Then whoever is giving you these requirements probably also has a direction in mind.
if UUID doesn't cut it for you, take a look at this: [https://docs.oracle.com/javase/8/docs/api/java/security/SecureRandom.html](https://docs.oracle.com/javase/8/docs/api/java/security/SecureRandom.html)
Well the way I posted I am generating the key is what we agreed upon but I thought there may be a better to do it so asked for suggestions
I was hoping for something with less overhead than that. Like a way to generate frames in Java and push them directly to RTMP without having to draw them on screen and capture that.
Technically speaking a UUIDv4 is represented in memory as a 16 byte long array, so you can always take Thatcher array and write it to a string that will be per definition a 16 characters long string.
What about. Net has you concerned?
Depends on how you want to encode those bytes. Using standard encoding like Base32 or Base64 you are going to end up over 16 characters to encode 16 bytes.
Maybe, I dunno. I do like how JBoss has the enterprisy website for people who like that, and the more dev focussed website for devs (https://wildfly.org). With Payara it's all "Payara", though the official terms I think are Payara Server and such. If you go from the homepage to software and then choose Payara Server it looks reasonably clear-ish what it approximately does: https://www.payara.fish/software/payara-server/ I gave the Liberty guys quite a bit of hints a few years ago on how they could make their site less enterprisy and more dev oriented. Might be a coincidence, or maybe they listened, but many things I suggested is what they did: https://openliberty.io
Maybe something like this will work for you? https://github.com/prisma/cuid-java/blob/master/README.md
If the answer to "your website's front page is devoid of information" is "here's how to dig through the website to find some information", you have missed the message.
Hmm it might actually, thanks a lot for sharing :)
YAML is gross, because it uses whitespace so I can't easily inject it into a test as a string.
[test](https://i.vgy.me/lBLT5c.jpg) Does this work?
IntelliJ
I haven't tried in probably 3+ years, but maybe NetBeans could be useful.
I've been using NetBeans for a while now, I came from using Intellij as my main IDE. The newest version, 11, is incredibly easy to use with Gradle. That's how I do the majority of my projects and the new openjfx gradle plugin is much easier to setup than manually installing libraries.
How do I get in touch with a reddit admin? I don't understand why my account is banned reddit wide?
IntelliJ I think would be a great place to start. Overall great IDE.
Just use the [latest version](https://www.eclipse.org/downloads/packages/release/2019-03/r/eclipse-ide-java-developers) of Eclipse (or use the installer). Newer versions of the JDK don't come with JavaFX included so you can [download](https://openjfx.io/) (yes this is the official location to get it now) the newest version. The API now uses java modules (a feature introduced in Java 9) so in your Eclipse project you'll want to put them on the module path (in the 'libraries' tab under the 'build path' section in the project properties.
Netbeans actually has good JavaFX + Scenebuilder integration (as of version 8.2, I'm not sure about 11), but any of the main 3 work well (Intellij, Eclipse, Netbeans).
I can't put the code on github just yet as this is part of a uni assignment that is currently ongoing. I want to modify the code to only prioritise filling lines if there are 3 or more that it can fill, however that will throw off the balance for now. Next thing I'm going to try is to rebuild it so 100 "creatures" with different weightings for the values they read play 100 games each, and the 50 best performing survive, and are duplicated with minor modifications. Kind of like the evolution videos that carykh does.
Unfortunately, hajduboti is correct, this is just OBS doing a window capture of the java output
Yes, using Swing to draw the board. And yes, there's a repaint method that is called at various points that just draws the entire board again. However, it is all based off variables, so I can set any number of columns and rows and it resizes the window to fit (Not live, just on run). &amp;#x200B; It has a variable that holds the next piece, so one of the plans is to extend the window and show more features, like the total score, next piece, and ideally, if I can get the evolution algorithm working, have it displaying information about the generator of the AIs and how they all perform as it's going. I had thought about displaying the value the AI is giving to each possible position, but it would be a bit hard to follow when it's playing at this speed, and if I slow it down then the evolution algorithm will take way too long. However, if I get it all working fine then I might run it from scratch nice and slow and watch the AIs evolve over a month or so :P &amp;#x200B; I do like the idea of making the game more challenging too! Perhaps I'll give that a shot once I get the evolution working! As for t spins and stuff, that actual game that I've programmed can't handle that. Currently it only accepts a single translation or rotation at once and can't combine them to complete a t spin. It was something that I was originally aiming for, but left out to try to get the first version working. &amp;#x200B; Thanks for the ideas!
Built it myself. The board is stored in a 2D array, so I just wrote methods to extract all the values the AI uses to make it's decisions (max height, average height, number of holes, roughness, number of full lines)
Yeah, while testing this out I noticed that the wider the board, the easier it is as there are lots of different opportunities to place the piece well. When you only have 10 columns, like a normal board, you are more likely to be forced to play in an awkward position if there are none better. The major advantage the AI has is that it takes a negligible amount of time to pick that spot, so the speed of the game isn't an issue.
It's possible given the restrictions they've got their own stripped down interpretor and you're really just programming with something that feels like Java. Not sure how the linked approach was tested either, but you wouldn't want to include JVM startup time. It would likely already be running, and quite possibly the web server is Java based.
This is for Scala but probably applies to Java https://medium.com/@otto.chrons/what-makes-scalafiddle-so-fast-9a3edf33ed4d
Jshell is also really fast, and you could write similar tests on it and get it to run near-instantly, just keeping the JVM running in the background.
I really like the idea, especially minimal performance hit for logging at disabled levels and stuff like atMostEvery. I might consider it for a new project but would never want to update all my existing logging code. But I don't see any documentation apart from the little in the readme and at https://google.github.io/flogger/benefits. Is it supposed to be self-discoverable? What about stuff like MDC?
Out of curiosity, when and why did you make the switch from IntelliJ to NetBeans? As a longtime NetBeans user, I have the impression that people mostly move in the opposite direction.
Or how integrate with libraries using log4j/slf4j/log4j2/jul
Maybe: https://docs.oracle.com/javase/6/docs/api/javax/tools/JavaCompiler.html They don't run a command line tool, they run an API in a resident JVM process.
This was a great read. Is there a Java equivalent to compile to js?
This is probably it... I wrote a wrapper around this because using this directly is very hard: [https://github.com/renatoathaydes/osgiaas/blob/master/docs/lang/osgiaas-javac.md](https://github.com/renatoathaydes/osgiaas/blob/master/docs/lang/osgiaas-javac.md) &amp;#x200B; I used this to implement the OSGiaaS-CLI's java REPL. It's really fast.
Why use the older Eclipse Neon version?
Why would you ever code a robot in java? That's pretty silly. C/C++ are way more suited for the job.
I find FooBuilder much easier to code complete then Foo.Builder
`java.lang.UUID` stores its value in two `long` variables. It does not encode the UUID to characters at all.
Quite a few. [There was a post about it](https://www.reddit.com/r/java/comments/bfs5tl/comparing_java_alternatives_to_javascript_in_the/) just a few days ago.
You probably didn't compare this in your head, but when you use an IDE ... this is exactly what you're doing. IDEs don't run javac every time you type.
First off, full disclosure, I work for Azul. As has been mentioned, we do have a completely free OpenJDK binary distribution, Zulu Community, which can be downloaded here: [https://www.azul.com/downloads/zulu/](https://www.azul.com/downloads/zulu/) Although we are not an enormous company, like Amazon, we have around 80 engineers that work on all aspects of the JDK (both Zulu and our commercial, low-latency JVM, Zing). Many used to work for Sun or Oracle (or both). As for our longevity, we were founded in 2002 so have been around for a while (and intend for that to continue!) The Zulu build of OpenJDK started when Microsoft wanted a JDK for their Azure cloud. We still provide Zulu support for Azure deployments and have many other Fortune 500 customers using Zulu Enterprise (the commercially supported version). Feel free to contact me if you have questions.
I didn't miss any message, and it's not my website. My guess it's somewhat of a confusion between Payara the company and Payara the product. Eclipse has a somewhat similar issue, there's for a while the Eclipse Foundation, and there's the Eclipse IDE. The Eclipse front page shows very little about Eclipse the IDE, since they are two different things.
Not sure. But I would do a double take if I was you. You are looking to make an ethical action based on an unethical motivation.
Ah yes, I created my own (hobby) package manager/build tool using this - works quite well.
Relax, it's just a thought experiment.
Probably not.. why do you want to do that anyway? Also you can still use new Oracle builds in development environment for FREE, just not in production. Production is either OpenJDK (free) or Oracle (paid support)
It's worth noting that this JEP is only mostly of interest to JDK developers, not Java developers. It allows Oracle et al to notice performance regressions in the JVM/JDK.
&gt; I'm curious why you think it would be less pointless if it just exposed fields? Because you can write simply a Java class with all fields public and no special methods. That record idea just looks like that :D
None of the advantages I listed out in the last two comments (or discussed in the JEP itself) apply to a normal class with a bunch of fields... Again, what **specific advantages** do you see public fields having over generated getter methods?
Actually, making this more explicit would open up a few more issues, it's not only implicit, they take way the ability to interfere. For the record contract for construction and destruction to work, you need to take away the ability to write `this.x = x`. So the only thing you can do is validate and reject certain records using exceptions, but you can't change an argument in the constructor.
Not needing to write the method call syntax e.g. However that is not the question. The question is why would one want automatic generated getters when he simply can access the public final field?
More or less main the point I tried to make when answering questions for the Q&amp;A section of this article (Hi!), but then maybe I got caught up in all those other details..
I was mostly commenting for people who didn't even get that far in the article :)
So it's the extra two characters you have to type out that you have a problem with? I certainly don't see how that "completely spoils it". Seems like a minor complaint in the face of all the benefits I've pointed out. &gt; The question is why would one want automatic generated getters when he simply can access the public final field? I have already given you multiple answers to that question. Here's yet another: records can only enforce *shallow immutability*. If you want to enforce *deep immutability* you will need to override the accessors of any mutable fields and defensively copy them or wrap them in an unmodifiable decorator. You obviously can't do that with public fields.
From [here](/r/java/comments/bdeq0h/check_out_this_post_to_learn_more_about_the_top/) and [here](/r/browsers/comments/bdeqze/this_platform_will_let_you_test_your_website_on/) and [here](/r/webdevelopment/comments/bgh1aa/are_your_html5_input_fields_cross_browser/): &gt; Kindly stop spamming your website, please. With this and any other of your alt-accounts. Neither with saif_sadiq nor with heliumsingh nor with LazyWillingness (that one didn't get much traction, didn't it?) nor ValuableTreacle nor AgileBother nor any other ones I might have missed.
Right, gotcha. :-)
The issue is how so you display the bytes of the UUID as a 16 character unique ID. How do you propose to turn the 16 bytes of a UUID into a 16 character unique ID.
Java is an excellent language, and the JVM is an excellent run-time for robotics. C++ is slow, brittle and convoluted \*in development time and effort\*. Java beats C++ on all these fronts in the development space. C++'s minor runtime performance advantage is also quickly overshadowed by the limitations in the ability for the linker to optimize through pointers. the JVM linker optimizes through references and the end result is that our runtime performance is exactly on par with the best C++ frameworks (Fastest I tested was DART and our runtime was on par). &amp;#x200B; Running the OpenJDK on Linux with the prempt\_RT kernel and a niceness of -10, i can get my straight JVM controller to push a UDP packet down, and receive the response back on a 2ms real time loop that maintains less than 200ns of jitter (verified with an o-scope). For the physics calculation updates this is 5 times faster than is needed and running the same spec that BostonDynamics boasts running on their VXworks and custom code. &amp;#x200B; If you had some data to support your claim, I'd be happy to review it. Do you have any specific recommendations for a C++ framework that matches the capabilities in the BowlerKernel and beats it on performance?
You keep **spamming** the same advertisements over and over. You are heavily overdoing it. This is unacceptable according to **reddit rules for spam and self promotion** that *tolerate* a maximum of 10% self promotion. Next such post will earn you a permanent and irrevocable ban from here without further warning.
(Not js) JWebAssembly
Boojah!
A few interesting notes: &gt; These enhancements were a preview feature in JDK 12. This JEP proposes that the enhancements become a final and permanent feature in the next JDK. &gt; Switch expressions were announced in December 2017 as JEP 325. They were targeted to JDK 12 in August 2018 as a preview feature. Feedback was sought initially on the design and later on the experience of using the enhancements to switch. Following this feedback, we propose to make the following change to the preview version: To yield a value from a switch expression, the break with value statement will be dropped in favor of a break-with statement. (break-with is a hyphenated keyword.)
I'll give you my reasoning when I get home tonight
&gt; but you can't change an argument in the constructor. I can well imagine that this exactly what I might need to do. E.g. set defaults.
I have some doubts about the gain according to the log util of Java. There is just one test in the log util of Java. Here there are several function calls, so I wonder whether there is a real gain?
&gt;8GB RAM Not enough.
This should fix it. https://www.jetbrains.com/idea/
I find too the i5 series processors are not as effective as the i7 series. My work provided me an i5. But my home desktop was i7. I built it for gaming but use it more when i work from home. Because its a lot less frustrating than the having to wait for eclipse all the time.
Why are you so slow? /r/javahelp
/r/eclipse
Not only is it the wrong subreddit for *Eclipse problems* - that's /r/eclipse but also is your reply here derogatory and thus unacceptable.
It‚Äôs now a zombie.
I'd say there are gains by using Loom instead of Reactive Streams, in that you can keep your code looking synchronous. Streams are push based, which make them harder to read and debug than if you keep your stuff synchronous and pull based. You have to take care of subscriptions and your supplier can produce items faster than you can process (might run out of memory if you use a queue that can grow indefinitely). With Loom you pull data, park and wait for it (without blocking the actual thread), wake up when the data comes available and go on processing it.
Perhaps berating the people that can‚Äôt read would help reduce the frequency of inappropriate content being posted. But to be serious, as someone who sorts by new and reports all the trash, it seems as though you guys could use some help.
If you‚Äôre into EE, Payara is pretty well known. Do you also ask here what Wildfly or Spring is when posts about them appear here?
That's a good example.
Payara also leads the Glassfish project now. https://projects.eclipse.org/projects/ee4j.glassfish/who
Mostly it was in the search of free and open source alternatives which don't hold back options to paid customers (which I don't disapprove of, I use intellij at work now) but I couldn't afford intellij ultimate to learn Spring back then. What really draws me to NetBeans is that it feels lighter and just lets me do what I want without fuss. Intellij kind of pushes it's own agenda and leaves files all over of its own. When I use a gradle project or maven project, I just want to be able to open it anywhere without all the fuss. NetBeans 8.2 also had both CPP and Java (and really anything else I'd do) built in. I'd need a separate editor, or just go Eclipse, since Intellij is jvm targeted.
And pray tell, what state of the art language are you using?
Having struggled with this as well for multiple platforms.... Sometimes biting the bullet and using a commercial product makes the most sense: install4j. They do offer a free version for open source projects.
What Java is really missing is another logging framework, said no-one ever...
&gt; after Oracle abandoned support for the programming language Right‚Ä¶ Given the staggering number of inaccuracies in this article, let's give them the benefit of the doubt of making a less egregious mistake and assume they meant ... for versions 8 and 11. So: Regarding Oracle JDK 8, the period of free public updates has ended, as it had for all prior versions, after a period of five years (which is pretty much average), users have been given warning one year in advance, and the following major release (which was also the last ever) had been available a year and a half in advance. As to JDK 11, unlike JDK 8, this is not a major version, so speaking of "support" (in the sense of updates) is misleading, but anyway, there are two paths in which OpenJDK versions are "supported" in this sense, *neither of which* is the same as the old model: 1) The gradual path, led by Oracle, in which the update to 11.0.2 is 12, which, like 11, is not a major release (it is similar in size to the old "limited update" releases, but not the same). 2) The step-wise path, led by Red Hat, which updates 11.0.2 with 11.0.3 and further patch versions (which are also not quite like the old "limited update" releases).
I‚Äôm using Java and some Kotlin, only my coworkers seem to appreciate jokes a bit better. Oh well.
I can relate exactly to your frustration here. It's not common. But sometimes I come across an announcement of something. Not exactly clear what it is. Go to the website. Even that is not exactly clear about anything. Just information about how it is great, will change your life, lots of big companies use it, etc. If it doesn't get right to the point about what it is, I'm gone. No need to tell me how that helps me. I can decide that for myself. What is it? What problem does it solve? If it solves an already solved problem, how is it better? There must be special courses somewhere that teach how to write a website completely devoid of useful information.
You can just assign to the parameter itself, e.g. `x = x != null ? x : 10`.
I thought every 3 versions will now be an LTS release (8, 11, and 14 coming up) which are the closest thing we‚Äôll get to what you‚Äôre calling a ‚Äúmajor‚Äù release. I think the way you‚Äôre using ‚Äúmajor‚Äù is strange. Isn‚Äôt major a whole integer increase in the version number (e.g. 11 -&gt; 12)? So we‚Äôre getting ‚Äúmajor‚Äù releases twice a year.
What matters to me (and Java developers in general, I assume) is not the name but the impact on users. So by major release I meant a release similar to the old (pre-9) major versions. Whatever you want to call them or the new versions, they are drastically different. This is what the [last major release, 9](https://openjdk.java.net/projects/jdk9/), looked like, and this is what [11](https://openjdk.java.net/projects/jdk/11/) and [12](https://openjdk.java.net/projects/jdk/12/) look like. In terms of enhancements and bug fixes, 11 and 12 are similar in size to [8u20](https://www.oracle.com/technetwork/java/javase/8u20-relnotes-2257729.html) and [8u40](https://www.oracle.com/technetwork/java/javase/8u40-relnotes-2389089.html), despite getting a new integer number. According to the [original proposal](https://mreinhold.org/blog/forward-faster) JDK 11 would have been called 18.9, but the scheme wasn‚Äôt received well by the community, and Java ended up adopting the ‚ÄúChrome versioning‚Äù scheme, which gives a six-monthly release a new integer number. Personally, I don't think that whether a release is major or not is determined by whether it's called 18.9 (as originally intended) or 11. As [I explained elsewhere](https://www.reddit.com/r/java/comments/ba79hh/beware_of_computation_in_static_initializer_much/ekb4s3s/), the version name by no means signifies the probability that it may break your app to the point that it requires code changes. Both patch (11.0.2) and feature (12) release could potentially break your app, but both do it with a very low probability. As to LTS, technically this has nothing to do with OpenJDK. Oracle selects an arbitrary feature release at least every three years to provide a commercial LTS service. Community members other than Oracle have decided to lead OpenJDK update projects, like 11u, for a version that has so far coincided with the one Oracle has chosen to provide LTS for, and have said they will do so in the future. This gives OpenJDK users the choice between the gradual (feature releases) and non-gradual ("LTS"+patches) update paths.
Sorry. I had a big up my ass apparently. I reread my comment and it was a bit harsh.
Interesting -- I moved from Eclipse to NetBeans for similar reasons, many years ago: I liked the fact that a NetBeans project was just an Ant project that you could build anywhere, whether or not you had the IDE installed. I had the impression that IntelliJ was similarly "hands-off" regarding the build -- thanks for the heads-up that it isn't. I think the main thing pushing me towards IntelliJ is that its refactoring support seems more powerful and reliable. But I noticed that a couple of refactoring bugs seemed to get fixed in NetBeans between 8.2 and 10, so perhaps things will get better now that they've had time to settle into Apache.
I tried JavaFX for video playback. Was extremely slow, clunkiy and could play very few formats. Not acceptable for my needs. JavaCV (OpenCV) on the other hand is awesome.
Right, but its awkward. Also what about overloaded constructors?
I think these days they like being called "undead". Zombie is derogatory.
I fixed it by moving all the calculations to the stored proc using analytic function as I couldn't find a way to do it within the template file. No longer needed to use variables in template.
I already know what wildfly and spring are. But, even if I don't, if I go to each of their webpages, it's rapidly evident. Wildfly's homepage doesn't say what Wildfly is, but does have an "about" button at the top of the page, that takes me to a page that in a big box at the top says "What is WildFly? WildFly is a flexible, lightweight, managed application runtime that helps you build amazing applications." On first load, spring's homepage has this sentence: "End-to-end support for reactive &amp; servlet based apps on the JVM" Payara's website has "Recognized Leader in Creating Future-Proof Innovative Infrastructure Software" I'm confident someone at Payara is pleased with themselves for coming up with that, they probably even have the word "communication" in their title... but that person should be stopped from writing any more words on websites.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
It looks like in your [submission](https://www.reddit.com/r/java/comments/bh1twf/text_based_adventure_game_help/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
&gt; every 3 versions will now be an LTS release (8, 11, and 14 coming up) Oracle has stated that they will have an LTS release every six versions (every three years), i.e. 8, 11, 17, 23... So far most vendors seem to follow the same pattern, although at least Azul has "MTS" releases in-between as well.
Esssntial
How important are bags for grocery shopping?
&gt;Was extremely slow, clunkiy and could play very few formats. Did you try vlcj or a ffmpeg wrapper? They offer a lot more than Java's native decoding.
In my experience, a solid knowledge and understanding of data structures and algorithms is the defining difference between a junior or mid level developer / engineer and a senior developer / engineer or technical lead.
Lists and Maps, everything else is extra
OpenCV uses ffmpeg. Was looking into VLCJ but never got it working and wasn't too phased as it also uses ffmpeg.
That seemed to be the take at my current company. And suddenly errors kept on disappearing when I put sets in appropriate places.
Data structures define your world, business logic interacts with the world. Data structures gives meaning to data.
If it's in java.util, you need to know it. If it's not, you don't.
There are plenty of data structures that doesn't come with the JDK. Just because you haven't found a need for them doesn't mean others don't.
You cant use inner classes for builders. Youre using static classes, the two are different.
Sometimes data structures are already a solution to the whole problem. Want to remove duplicates? Put your items into a set. Want to organize items for fast search? Put them into b-tree. And the list goes on.
Yep, no one could ever need a set or a queue or a stack or any of the various implementations of those datastructures.
Azul (who I work for) is planning two Medium Term Support (MTS) versions between the de facto LTS ones. Between OpenJDK 11 and 17, the MTS versions will be 13 and 15. These will have extended (commercial) support until 18 months after the release of OpenJDK 17. This will provide users with time to migrate to the next LTS release at a time that works for them.
We prefer the term "the infected".
Last night I tried to get an old javafx app to run. * Installed openjdk 8 * Error, javafx libraries not found * Check oracle site to download oracle jdk 8 * Asks me to make an oracle account to download and fill out big page of personal information * Try amazon corretto * Does not include web libraries * Try installing openjfx * openjfx is made for jdk 11 * Try switching my app to openjdk 11 * Fuck you, you have to redesign it with the module system of jdk 11 * Signup to oracle jdk using gorilla mail * Gorilla mail does not display the signup image * Signup to oracle jdk using mailinator * Email took 6 hours to arrive. Kill me. Any new GUI I know now to use python qt5
&gt; Check oracle site to download oracle jdk 8 After five years (which is pretty much as usual) and a one year warning, Oracle JDK 8 is now past its period of free public updates. In other words, as before, patched versions of Oracle JDK 8 are no longer free. To get old ones (without recent security patches) you need to go to the Java archive. &gt; you have to redesign it with the module system of jdk 11 You don't. The module system is entirely optional for applications. &gt; openjfx is made for jdk 11 The current version JavaFX, 12, targets JDK 12, which is the current OpenJDK version and the one you should try to target unless there's a good reason not to. BTW, the recommended practice now that the centralized desktop JRE has been discontinued is to bundle the runtime with the application. &gt; python qt5 Because Python is famous for no breaking changes ;)
I wouldn't consider most of those other ones a "must know", though. You should know what a tree is. You don't necessarily need to know the details of a red-black tree. Are there others? Sure. Do you absolutely have to know about them? No.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
You absolutely need to know the difference between an `ArrayList` and `LinkedList` and between a `HashSet` and a `TreeSet` etc, because they very much have different properties.
All of those are in java.util :)
Sorry, thought you were replying to another comment I made. But there are data structures that for example implement LRU maps, or circular queues.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
&gt;You have to take care of subscriptions and your supplier can produce items faster than you can process (might run out of memory if you use a queue that can grow indefinitely). With Loom you pull data, park and wait for it (without blocking the actual thread), wake up when the data comes available and go on processing it Should I read this part of your comment as "one must use the back pressure mechanism of RS correctly"? RS' design specifically addresses the issue of "a fast data source does not overwhelm the stream destination" by providing a non-blocking back pressure. I believe we can say that blocking \[\*\] calls also operate with back pressure, albeit implicitly. Back pressure there is implemented by, well, blocking. Do you think there are applications where RS fits better than the alternatives (including Loom)? &amp;#x200B; \[\*\] In the case of Loom, I should put blocking in quotes.
If I understand correctly, all overloaded constructors should ultimately forward to the default one (because that's where all the validation logic is). What problems do you see?
&gt; Wildfly's homepage doesn't say what Wildfly is, but does have an "about" button at the top of the page, that takes me to a page that in a big box at the top says "What is WildFly? WildFly is a flexible, lightweight, managed application runtime that helps you build amazing applications." There is an about button on the payara home page as well. In fact, this button is also available on the blog article. The about page presents an image and a very small paragraph. Here is the beginning: &gt; When commercial support for GlassFish ended in 2014, Payara Server was created as a fully-supported drop-in replacement
Enthuware has released 7 Mock exams for OCP 11 Java certification exam 1z0-815. BTW, there is no OCA certification for Java 11 anymore. 1z0-815 is Part 1 of the two exams that you need to clear to get OCP Java SE 11 Developer certification. OCA certification has been scrapped.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Look at you in your environments where people actually upgrade their infrastructure
If you don't update -- bundle. Bundle even if you do.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
https://www.azul.com/downloads/zulu/zulufx/
the only thing that has kept me from switching for my javafx app is the loss of javapackager.
Have you tried [the early access builds](https://jdk.java.net/jpackage/) of the new jpackage tool?
The problem is that I can't define overloaded constructors. Do I see that correctly?
i have not yet, mainly because I'd have to learn to use jpackage myself while [my build plugin](https://sbt-native-packager.readthedocs.io/en/stable/formats/jdkpackager.html) handled most of that for me before. I can create my own custom hooks into jpackager, and I've already developed builds that run on java 11, but going the extra mile and getting everything put together into a cohesive build system is not something I've done or found the time to do just yet.
This is why making Java modular is a pain. For most cases it makes sense to just include everything as the baseline. From there we could allow specialized light weight builds when needed.
javafx getting made modular was actually good. oraclejdk had it built in, but almost no builds of openjdk had openjfx built in. and if you didn't have it built in you might as well not have it. with javafx now being jar files, I can just distribute a fat jar for the platforms I'm directly supporting (mac and windows) and that jar will constitute a working javafx app even if the user is running openjdk, or coretto, or openj9.
True! I didn't mention this as I believe field references are on the way :).
i was hoping for discussion of the rationale for the change.
There was some discussion at the expert group meeting, which you can read about [here](https://mail.openjdk.java.net/pipermail/valhalla-spec-observers/2019-April/000920.html). I am looking on the mailing list for something more solid. I haven‚Äôt been able to read them as of late.
What am I looking at here?
They are the change sets in the JDK. Updating ‚Äúvalue‚Äù with ‚Äúinline‚Äù.
I think the naming overlap with Kotlin might initially cause some confusion but it should be rectified when (if) Kotlin gets support for Valhalla features.
I enjoy reading their discussions,because it shows how much thinking goes into a feature. For example, not recently, one of redditors asked the difference between [value types and records](https://www.reddit.com/r/java/comments/bg411v/jep_draft_records_and_sealed_types/elju9cd/?utm_source=share&amp;utm_medium=web2x). And here they are, discussing the same [thing](https://mail.openjdk.java.net/pipermail/valhalla-spec-experts/2019-April/000944.html): &gt;I like the hint-y nature of this keyword and I think it brings front &amp; center what this feature is about in a way that **'value' never really did (users asking about the difference between records and values is, I think, a proof of that particular failure)**.
\+1 to me, this is why normals devs should think twice about writing their own DSLs, etc. It takes enormous thought to write general purpose languages, et al
Apparently it is now being maintained by Apache, and was renamed to [River](https://river.apache.org/).
What Java does is sometimes called "pass reference by value" to mitigate this confusion but it's more formally known as ["call by sharing"](https://en.wikipedia.org/wiki/Evaluation_strategy#Call_by_sharing). [The JLS](https://docs.oracle.com/javase/specs/jls/se11/html/jls-15.html#jls-15.12.4.2) uses "pass by value".
&gt; Any new GUI I know now to use python ~~qt5~~ flask and do the GUI in web I've just given up doing desktop apps for internal tools. Everything is a server, package chromium or run it in the browser, toss it on an internal server if you are feeling fancy.
It never gained traction or relevance. I think the biggest problem was that it tried to be generic so it could solve *every* problem related to distributed service discovery, but failed to provide any out-of-the-box working solutions for *specific* use cases - and that is what people needed. So now we have UPnP instead.
I assume the underscores are placeholders. Don't want to end up like python
vert.x + rxjava
Yep! They are.
Call them structs!
They aren't structs, though. Brian Goetz talks about this [here](https://youtu.be/Tc9vs_HFHVo).
I have used all these combinations for different projects, and other than the image size, it doesn't really matter which one you choose. The only consideration is whether you'll ever need to launch a shell, in which case you don't want distroless
You don't need a custom build just as you don't need a custom build to use any of the other zillions of libraries on Maven Central.
What are your thoughts about them changing \`break\` to a new, hyphenated keyword \`break-with\`?
If you can use Java 11+ then I think the better route is to make a custom image with a custom JRE. I can't find the exact guide I used but these all give roughly the same info: - https://dev.solita.fi/2018/01/24/Java9-modules-Spring-Boot-2-Docker.html - https://blog.dekstroza.io/building-minimal-docker-containers-with-java-9/ - http://blog.gilliard.lol/2018/05/26/Multi-Stage-Docker-Build-with-jlink.html - https://stackoverflow.com/a/53669152 I ended up using `azul/zulu-openjdk-alpine:11` (now 12) as my `packager` image (for building the JRE with jlink) as it seems to be the only current openjdk base that supports musl (alpine's alternative to glibc). Then my app image is based on `alpine:3.9.3` and copies in the JRE + my jars. My pom has maven copy my dependencies to target/lib which i copy to /app/lib on my image, as its own layer, for faster rebuilds as only my app.jar will change frequently (i.e. only the newest layer needs to change and push).
I welcome the change. It helps differentiate from a break that may be used to exit a loop. We are likely to see more hyphenated keywords as time goes on. Maybe even `package-private`! The plan is outlined [here](https://mail.openjdk.java.net/pipermail/amber-spec-experts/2019-January/000945.html).
Seems like additional (and therefore overloaded) constructors are allowed: &gt;Records are classes; they can have most of the things other classes can: accessibility modifiers, Javadoc, annotations, an implements clause, and type variables, and the component declarations can have annotations. (The record, and the components, are implicitly final.) **The body may declare** static fields, static methods, static initializers, **constructors**, instance methods, instance initializers, and nested types. What these can do is not clear to me from reading the JEP though. Since all fields are final, one could guess that they need to be explicitly initialized or the constructor needs to forward to the implicit constructor. The implicit nature is unfamiliar, that's true. The constructor has new syntax though, so the mental switch is at least easier. An argument in favor of implicit assignment: Imagine a record with 10 fields. Also imagine you want to validate one of them. If validating requires you to list all of the other fields as well, you now have to justify the bloat of 10 additional lines that the eyes gloss over when reading anyway. A less disciplined developer might skip the validation or deem it too costly to the overall readability of the record. In some sense, the language is punishing you for doing the right thing. If I remember correctly, there was some talk on the mailing lists about adding something like these smart-constructors in other places as well.
Of course it was possible as it's been done for almost 2 decades.
No, because resource allocation changes, and responsibilities shift. Also, JDK developers haven't been maintaining unused technologies for two decades; maintaining, say, CORBA in 1999 is not the same thing as maintaining it in 2019. In any event, someone needs to pay for maintaining the JDK. If your company was willing to do all the work required to keep the JDK monolithic, it should have volunteered sometime during the many discussions from the time the project was proposed circa 2009 to the time it was completed, in 2018. Saying now that everything could have and should have stayed the same just shows unfamiliarity with the issues.
You are listing political issues. I am talking about practical matters that make the jdk easier to use.
Vaadin + Electron would probably be less of a headache https://github.com/jreznot/electron-java-app
These are not political issues but very resource issues. A monolithic JDK was becoming unmaintainable. Also, this project was discussed for a whole decade, and those involved believe this will actually make the JDK not only easier to maintain but also to use, after an adjustment period in which the tooling adapts.
Why not use `return` in this context? I know it's not returning a value from a function, but we're returning a value from the block? I get they aren't identical, but *feels* like we're returning something
Why not use `return` in this context? I know it's not returning a value from a function, but we're returning a value from the block? I get they aren't identical, but *feels* like we're returning something.
I feel like `return` would cause some visual confusion, just as `break` might have. When I see `return`, I know immediately that the method is being exited. If `return` was now used in `switch`, you would have to reason about it being a method return or a local return.
I think you just answered your own question.
I don't get Java's direction. There are so many other things that would be nice. This switch statement and the new string syntax are not on my list.
Some features take longer than others. The features that you want are likely in progress. Thanks to the [new release cadence](https://blogs.oracle.com/java-platform-group/update-and-faq-on-the-java-se-release-cadence), though, we can get smaller features like these right now.
Yeah, language changes are easier to implement than VM changes. This will provide a lot of practical benefits and can be delivered quickly.
It handled hetrogenous networks of clients poorly, the wire protocol was terrible and firewall hostile. It was poorly engineered and unreliable. If you controlled all of the clients and could ensure that all were running the same code inside a single datacentre then it worked OK. Outside of that it was disappointing.
It would be the first hyphenated keyword wouldn't it? It feels a bit awkward like the @interface keyword, but it really isn't too bad.
IIRC Kotlin used inline instead of value (in part) to avoid confusion with this feature in Java... And now Javas gone and changed it to inline =P
Haha! How interesting!
Yes, they plan to add others in the future. Some will be inverse keywords like `non-final`.
It‚Äôs part of a chain of changes that will result in best of breed pattern matching, data classes, and deconstruction. Once you‚Äôve used it you‚Äôll never want to be without it. It‚Äôs the one thing I miss from Scala
I knId just read this somewhere, tweet from JetBrains employee Roman Elizarov (coroutines lead): "We named new Kotlin 1.3 experimental feature ‚Äúinline classes‚Äù for clarity and to clearly differentiate from upcoming value classes in Java project Valhalla. Now Java renamed them to inline classes. What to think? Shall we be proud of apt naming or fear confusion?"
That‚Äôs interesting!
It waned along with all the other P2P-style frameworks that were the rage at the time. It had some interesting ideas but was hobbled by complexity around security managers and whatnot from what I remember. Not sure what makes it more relevant than ever today though.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
whats on your list ?
Multi-line, raw and interpolated strings would be significant for our JPA and SPEL heavy Springboot applications. Switch expressions is one part of a larger story involving (at least) pattern matching and eventually given even better ergonomics with sealed types and destructuring. I agree that this step, by itself, isn't that compelling. Keep in mind that there are many parallel pieces being worked on - records and value types (part of Valhalla) and fibers (Loom) are big ones that spring to mind. The goal is to deliver small value more quickly in a way that builds up and supports bigger value later... Rather than waiting 5 years for any value.
Exit from a non-value-returning method: `return;` Exit from a value-returning method: `return val;` Exit from a non-value-returning switch: `break;` Exit from a value-returning switch: ???
As someone who maintains a somewhat-popular TCP networking library, this makes me very, very happy :)
For this version, 100 different AIs are generated with randomised values for the weighting they give to various factors when deciding where to place a piece. Each AI gets 20 games to place as many pieces as possible (a game ends at 1000 pieces or when the stack is more than 10 lines high), and after each generation of AIs has played, the 50 with the lowest score are eliminated and the 50 highest scoring ones are cloned with minor mutations to their weightings. Eventually, hopefully we will be left with 100 AIs that score 1000 every game!
Java is still and will probably always be huge in the enterprise. Spring Boot is growing pretty rapidly. I work for a huge megacorp. The app I am building will run for decades.
You can have a form in your Java JSP submit to a node rest api if that‚Äôs what you‚Äôre wanting... are you familiar with Restful APIs? Any reason you still use JSP‚Äôs?
All syntax highlighters need update ;)
I learnt JSP so I just stick with it as I need more time and effort on java code. I am familiar with java REST, no node REST. So u r saying I could still build a form using node.js and then sent it to my JAVA REST? What about server side? Because I know node.js is using NGIX server - correct me if I am wrong. Do I need the node.js server to work together with Tomcat?
Ok. I have read about node.js being good for data processing and I am keen to try things out. So, how does the industry is combing node.js and java?
I can imagine node.js would be preferred by some, but it's not universal. JSP and raw servlets are getting long in the tooth, but a Java server exposing a RESTful(ish) API for a JS front-end (Angular/Vue/React/...) seems fairly standard these days.
When you construct a ThreadPoolExecutor, you can pass in a LinkedBlockingQueue among other things. You can specify the capacity in the constructor of LinkedBlockingQueue. If you do not, then default capacity is Integer.MAX_VALUE. If the capacity happens to be exceeded at some point, it'll throw a TaskRejectedException. What to do when that happens is up to you.
Thank you for mentioning this. I've been in a tough spot since yesterday because of this.
Just to get my understanding right, so you are saying I create a java REST api and use jS to render the page is that right?
Yes, that's a fairly common split. All the common front JS frameworks can consume REST APIs easily, and aren't too concerned in what's behind them.
I recall how it was presented. In the future mobile phones, refrigerators, tvs, toasters, would all be connected to the internet and they would need to be able to discover other devices and to be discovered themselves. Mobile phone scream "I need a printer" and all the printers in the vicinity reply "I'm here sir, what can I do for you?". It seemed a bit too far into the future then, but here we are now. I wrote a file system scanning agent that would search our Solaris machines for documents. That was fun. Thanks for the reply!
It works if you don't need server side rendering. SSR with Java is possible (see Graal) but tricky.
If merely displaying data? Besides Angular, vue etc not sure if node.js will work?
"we have introduced a new break-with statement to yield a value" I would prefer yield as a keyword.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
I think it feels less awkward than `@interface` on the grounds that it feels less ad-hoc. It's difficult to come up with good choices of character/keyword combinations to extend that to other intuitive uses. On the other hand, a hyphenated keyword promises to carry its weight a little further if needed, and consistency is good. For instance we could have gone with `annotation-interface` all those years ago, though that's a little long...
Why? No relationship to existing keywords in Java to help users grok the meaning. Established use in other languages to mean something different to *hinder* users from understanding the meaning. Backwards compatibility demands that it be a "context sensitive" keyword, which is way more complicated for the lexer/grammar.
Short answer: no you can't. Node.js is a JS interpreter. Express.js is a web server for Node. When people talk about Node in context of web development they usually mean Express. Soo you will have to write another app using Node and Express.
JSP (and servlets) are the "old" way of writing web applications. There is nothing wrong with it (and in fact servlets are still used in most MVC style framewroks), however lots of applications in the enterprise are today written as rest services. This allows the "backend" developers to focus on backend stuff, while allowing "frontend" developers to focus on making UI's. By allowing these frontends to talk to different backend endpoints, you can have many applications serving the needs for one user facing one. Then you could use Java for one, and Node.js for another, and as long as you have some sort of common login, the frontend doesn't care. So java is still used a lot for server side processing, that will not change anytime soon. JSP's and Servlets are probably not the best way of programming a frontend today, especially if you are in a job hunting position (they do have their uses). So, it would be a smart descision for your career to learn about REST. Node.js is a good alternative on the server side instead of a java server.
Akka streams in my preference: * The mechanism of **Sinks (One input no output)**, **Flows (One input, One output)** and **Source (One output)** is neat * The separation of defining the graph and executing the graph is logical * People are looking at Akka, Akka streams etc for commercial projects so it's by no means dead * The learning curve can be high but once you understand the basis of the **ActorSystem, Materialiser, Flow** etc it's easy &amp;#x200B; RXJava is a solid choice with less of a learning curve. Just found the usage wasn't as high and it doesn't play well with Scala.
Ok. So I can‚Äôt mix Node, Express with my current web app right? So why are people are so running to use Node including this guy who insisted that Nose is the way to go even though he told me he is a senior java backend Engineer and another senior Java backend engineer who are into AI and machine learning?
This seems like a great idea, but it has two drawbacks. These drawbacks are only situational, but they are worth considering. The first is the use of a common base image. If all your docker containers use wildly different images, the docker layer cache will be largely useless. This can work against you when it comes to start-up time. If you don't share base images anyway, this doesn't matter. &amp;#x200B; The second is the modularity of your app. If your app is modular, and all it's dependencies are modular (in the jigsaw sense), then you can do this. If they're not, this becomes harder. You can aim for just a smaller jdk without the man pages etc, but you're unlikely to get the very small JDKs with this approach alone. I tried this approach on a non-modular project, and the effort **far** outweighed the gain. &amp;#x200B; If neither of these things apply, however, creating a custom image with a custom jdk is a great idea =)
I know, but I'm not saying that you can. I'm just saying that I prefer using FooBuilder over Foo.Builder. The poster I replied to was talking about inner class builders.
I understand the behavior of ThreadPoolExecutor. However, my concern is that how to specify this queue size in Tomcat parameters (in server.xml). I found a parameter named maxQueueSize in tomcat executor which defaults to Integer.MAX\_VALUE, maybe this get's mapped to the BlockingQueue size. Thanks for the reply!
We use return in lambdas and it's ok. If new switch block acts as lambda (variables outside the scope of the block must be final) it feels natural to have return to return in this case.
And I think the problem with that was that Jini basically provided an SDK for developing such functionality, but didn't define what "a printer" means - IIRC there was handwaving about "well-known interfaces", but no such interfaces were actually defined. To succeed, it would have needed cooperation from e.g. multiple printer makers to agree on such an interface and have it implemented by actual hardware you can buy. And for that to succeed, having an implementation in Java rather than a protocol definition was a hindrance rather than an asset, because the last thing a printer maker wanted was having to build a JVM into their printer and pay royalties to Sun (because embedded JVMs were *not* free). Basically, JINI was a typical engineers' folly: it solved some interesting *technical* problems that I'm sure people had fun working on, but it failed to solve the actually much more difficult business and organizational problems.
&gt; I was told by an interviewer to change to node.js for web apps after he saw my web app which run on JSP and servlet. I don't really get why you'd even consider changing a career based on what one random interviewer tells you. Our trade is filled with [expert beginners](https://daedtech.com/how-developers-stop-learning-rise-of-the-expert-beginner/) who are completely tribalistic about which technology you should use. Their reasoning typically doesn't go beyond "I know JavaScript and Node is JavaScript, so it's the best". Node.js is "the preferred way" for that interviewer. Guess what happens if you ask a Python dev? A C# dev? A Java Dev? Any developer who doesn't just see languages as tools you can switch depending on what works best for a certain problem is not worth paying attention to.
Node is terrible for data processing. It is single threaded so you cant do anything cpu intensive with it.
Just curious, what library?
&gt; I actually wrote the whole thing myself in the old-fashioned way, and now I'd like to rewrite it, in the "reactive way". Why? I mean if it's for learning; by all means. But on my previous project the architect decided we'd be going full reactive (Spring Web Reactive) on all microservices and frankly it was a pain in the ass. The code is more complex, debugging is more complex, testing is more complex, filters don't work anymore. And for no gain at all. It's definitely something I'd try to at least pick up, there's a good chance you're exposed to it at a client. Personally I'd go for Spring just because it's used so much; a higher chance of running into it and there's more of a community that can help you out if something gets stuck.
Amen to that. I wonder what role that interviewer held within the company. Maybe like my boss: "I read this article on popularmanager/linkedin/applefanboinews and it said to use technology x and that y is old-fashioned."... (my boss is generally a good guy, but has these PHB moments)
It's incredibly common in small web dev / project companies. I worked for one (kinda got bait-switched) where they were developing in ColdFusion. The 'lead' consultant, basically the loudest most arrogant dev, thought CFML was the best ever. He really just didn't want to bother learning anything new. He had been working for that company since he graduated, is still working there, and probably will for life.
I just realized I didn't exactly answer your question. I'm unfamiliar with Tomcat's code base, but it loads properties somehow and it creates this ThreadPoolExecutor somewhere. If you need to, you can create a new property, load it in the relevant initialization class, and pop it into where it's calling the BlockingQueue constructor. If that's not already being done of course. Curious, why do you want to limit the size of the work queue? What's your plan for when it gets rejected? If you're modifying the source, I wonder how a [WorkStealingPool](https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executors.html#newWorkStealingPool--) might work vs a ThreadPoolExecutor.
&gt; I was told by an interviewer to change to node.js for web apps after he saw my web app which run on JSP and servlet. Interviewer was an idiot. That's it.
I hope it gains support for more modern tcp options, like tcp fast open.
Oh...btw, that interviewer is working in one of our government office and he is holding senior java Engineer post. He told me node is used to handle intensive data processing and hence I was so keen to explore for more. N besides him there was another government related institution that I just went to interview which did intensive data analytics on water/rain also appeared to advocate node/angular/single page applications which lead to wonder if the data gather this way will be easier for transfer in distributed systems or what.
Is Java REST not good enough? Or it is necessary to learn how to create REST using Node.js?
I'm trying to understand the behavior of Tomcat thread pool (which essentially is java ThreadPoolExecutor). My ultimate goal is to applying machine learning techniques to tune this thread pool at runtime. The size of the work queue plays a crucial role in determining the thread count in the thread pool. Hence, will be an important parameter to tune (together with maxThreads and corePoolSize). &amp;#x200B; Basically, if the queue is full, and the thread pool size is at "maxThreads", any request that comes will be dropped (typical behavior of Java ThreadPoolExecutor). I suppose it is somewhat related to admission control where we try to drop requests in order to maintain the server performance. &amp;#x200B; I'm not much familiar with WorkStealingPool. Seems like, WorkStealingPool does not have any parameters to set (apart from the parallelism). In that case, my idea of using machine learning to determine the optimal parameters (tune) at runtime will not be applicable. But it is indeed worth exploring since I can compare server performance numbers with that as well.
At least this solves my gripe about confusing `break value;` with `break label;`: int a = 5; a:{ int y = switch (1) { default: break a; }; foo(); } //----------------------------------------- int a = 5; a:{ switch (1) { default: break a; }; foo(); } If I understood the previous proposal correctly, the first snippet would call `foo` and the second wouldn't. And if I didn't, then it means it was confusing. I'm not sure if a hyphenated keyword is the best solution though.
I am not changing career but am trying to get my foot in. After painstakingly building a many to many Java EE web app plus some mini apps I still can‚Äôt get my foot in.
`return` always returns from a lambda and never from the enclosing function. In your proposal, `return` in `switch`statements would return from the enclosing function and `return` in `switch` expressions would return only from the expression. That would be confusing, especially since the common refactoring technique of var unused = expression; ‚Üì expression; // as long as this compiles too would change semantics of the code completely.
They are just technologies. If you understand the concepts between those, you can pick the right technology for the task. Why pick just Java or Node.js -- why not check both?
REST is an HTTP specification, it is not bound to any implementations. You do not need Node.js for REST, Java will do fine (or anything that can serve restful endpoints, really).
Try /r/cscareerquestions, more suitable for these kinds of questions.
&gt; He told me node is used to handle intensive data processing Weak typed language without support for 64-bit integer (only 32-bit) for intensive data processing? He was kidding )) Node is for hipsters frameworks only. To launch small online shop quickly and have cheap contractors to reliably pass project if former one die ))
Worth to mention Java doesn't host Node files. `.js` files are compiled into `bundle.js` that is passed to browser via Web server (ngnix/apache/lighttpd). To consume RESP API from Java you need to set reverse proxy for CORS and other Web stupidity. So basically `.js` files hosted as static resources (think of .png file).
&gt; AI and machine learning When I see such buzzwords I think about Python )) How the hell Java or even Node come to play?
It seems like they wanted a person to use Node js to get the data. But I am all blurred because the advertisement mentioned Java so I do not know why for the 2 interviews they tried to push me to go for Node.js and advocated Node.js.
A Java application server can host .js files, too, e.g. as static resources, so that they are in the same origin as the REST API.
&gt; If all your docker containers use wildly different images, the docker layer cache will be largely useless Which docker execution environments reuse layers? Do Cloud hosters worry about saving another 1GB of HDD/SSD?
With Spring `bootJar` "micro-service" you have zip archive of zip archives. Extracting resource from 2 level of compression isn't optimal (though usually it should be one level for non-library code). I haven't investigated how to unpack Uber Jar but have experience with extending classpath to `file://...`. Even though I suspect that Java can't do `mmap` syscall, Ngnix/Apache are more smart on this...
All of them do. This is a basic Docker thing.
&gt; Nevertheless I suspect that Java can't do mmap syscall, Ngnix/Apache are more smart on this... https://howtodoinjava.com/java7/nio/memory-mapped-files-mappedbytebuffer/ But usually if you want high performance, you'll want to have load balancers, reverse proxies, CDN, etc. anyway...
Have you got real offer? Haven't that gut check? I was in similar situation. I was asked to solve https://en.wikipedia.org/wiki/Knapsack_problem on whiteboard. I told them that it is NP hard problem and there are tons of research papers and scientists who dedicate their life to this problem. I can't solve it and it is waste of time to talk about heuristics and attempts to reuse search space using specifics of domain. It is not 5 min interview task. Their core business model was to find better price among packages offers and they solve it by brute force. I gave advice to look to https://www.optaplanner.org/ and instead of programming - just model domain and apply plugable algorithms from well established library.
Storage costs money. Bandwidth costs money. Start up time costs money.
Well, I doubt I will get it. After that government guy viewed my project, i could sense that he was not impressed. Hence, I really want to know what sort of projects will impress people. Right now, I am thinking of adding in more functions into it. But, I am already stuck at the email sending where I wanted to test locally using gmail. I seem to forever stuck in something I can‚Äôt do or trying to resolve area where I am stuck. I wonder how other people did it cos I only have forums to rely on.
And the final product won't involve annotations, right?
Great! I suspect that NIO should use this but haven't checked docs/specs/blogs on topic. The other problem is to find framework / library that uses NIO for `file://...` URI. Quick googling for `spring resource mmap` show nothing relevant. That's why we use Redis written in C, Rabbit written in Erlang. Those execution platforms provides access to low level syscalls. Probably there are libraries and Spring wrappers for fast file retrieval. I'd like to study any such solution... At least Apache Luscene uses `mmap`: https://lucene.apache.org/core/6_0_0/core/org/apache/lucene/store/MMapDirectory.html But it is state of art project. How can pure Java developer get access to `mmap` with funny tenths proxy / cglib invocations per stack frameworks?
hmm, haven't used the switch statement for a while as I prefer using separate methods with ifs and fast return. Code seems cleaner that way
&gt;Why? because even though it's already implemented, it really follows some bad practices and I'd like to rewrite it anyway. So this was an opportunity to try reactive programming (and it seems to fit my problem) &amp;#x200B; Yeah, Spring itself is popular but is reactor popular as well in comparison to RxJava? Interestingly, many RxJava discussions are about RxJava uses in the front-end rather than in the back-end. Obviously, RxJava (and Rx\* in general) is a multi-purpose library but it's just interesting to note that. &amp;#x200B; So can you elaborate a bit more about choosing spring-reactor in favor of RxJava?
\&gt; It is possible, but unlikely, that there is existing code that depends on this. The author definitely underestimates to amount of terrible legacy code that exists.
kind of weird to have statements inside an expression but i guess i don't really care
I just can't believe it is true... Imaging Amazon or Google Kubernates offering. They have 4/8 core CPUs. Recently they go 96 cores: https://cloud.google.com/blog/products/gcp/96-vcpu-compute-engine-instances-are-now-generally-available they probably oversell power, but even with 10 containers on 4 cores why should they care about drive storage? It is cheap and layers doesn't help to save RAM. And what probability that containers have a common ancestor? The only one reason I can imaging for this to work is that every vendor uses `libdocker` under the hood and Docker Inc. provides us such quality. I am curious how Docker engine search for base image equality? SHA-256 of image? Because you can serve same `redis` as in dockerhub but in your own private repo....
&gt;RXJava is a solid choice with less of a learning curve. Just found the usage wasn't as high and it doesn't play well with Scala. Yeah, I guess RxScala isn't that popular in comparison to RxJava just because Scala people tend to go with Akka streams. &amp;#x200B; What worries me about Akka streams is that it might favor Scala over Java (i.e. the community) and my team is Java oriented. Second, the learning curve really seem steep in comparison to the other option. Lastly, I'm not familiar (yet) with the "Actor model". &amp;#x200B; So really, I can't find a good incentive to choose Akka streams other than the fact that it supports distributed services.
&gt; The app I am building will run for decades. So you're writing the legacy code of tomorrow! ;)
The cloud provider doesn't care. It's the customers. If the customer can pay the cloud provider less for megabytes transferred, they're happy.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
&gt; You absolutely need to know the difference between an ArrayList and LinkedList That one is simple: always use `ArrayList`, never use `LinkedList`.
It is marketing wording. Sorry (( What is probability of two customer to use same image? Container spinner/planner/decider (I am not familiar with terminology) should track compatibility of base images across fleet of hardware. It is a `map` not so hard to reason about, OK. If we talk about huge customers I don't understand how layering can help. Instead of asking for 100 identical containers I'll ask for 3-4 with 24 CPU each. Because I want to save money on RAM wasted by classes and static resources. I definitely don't want same service will be run on same physical host. I can't see how layering helps...
No, there are valid reasons for using `LinkedList`. In particular, if you're going to be inserting into the list frequently rather than just appending.
Unless you already have an iterator to the exact place you want to insert into the `LinkedList`, just following the pointers to get to the correct place will be slower than moving the following elements of an `ArrayList` in a cache-friendly manner. Aside from demonstration purposes, I haven't used a `LinkedList` in years.
It's likely that the actual processing is done using batch processing in another language/runtime. The node/angular program then simply exposes the already computed results. Node has two major strengths. First, it is javascript. You very likely already have javascript on the frontend already. By using the same language on the backend you can share some code, generally the datatype definitions and some validation logic. Second, it naturally has asyncronous IO. This is great if you're writing a web server which queries a database without doing any heavy processing. Node is not the only language with asyncronous IO, in fact pretty much every language supports it, but it is simpler in Node than in many other languages (but there are languages that are even better than Node for this).
&gt; I really want to know what sort of projects will impress people Famous? Join to any of Apache umbrella.
SimpleNet
It would change the semantics because, as I can, see they allow old fall-through semantics. I don't think that it's a good decision. Just separate old switch statement and switch expression (I would call it lambda-switch) and you good to go.
If you have multiple services with the same base image running on the same host, the layer cache would help a lot
Shameless Plug: https://github.com/jhg023/SimpleNet
Off the top of my head... - async/await - coroutines - interpreted strings `my value: ${value}` - extension methods - lambda's with AST (allowing things like LINQ to SQL) - switch pattern matching - .? operator
pattern matching would be great, this change doesn't look to bring us any closer to that it looks to just add more syntax options for switch statements.
The problem is interpolated strings is not part of the new string syntax just raw multi-line strings. In my opinion if you are writing many lines of raw multi-line strings that sounds like code smell. So now the back tick is taken for raw multi-line strings so adding interpolated strings later (to avoid breaking code) will need to find a new quoting character.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Yes they've back-pedalled and are intending to limit scope in this pass. I do worry that these are so related that they really should consider the future more for this - it doesn't feel like you can eat the elephant without considering the entire meal. Several frameworks require embedding multi-line strings and there is value in making these interpolated in some cases - though compiletime evaluation might be doable.
&gt; they allow old fall-through semantics It looks like this might be dangerous in a very narrow set of circumstances: * you're using switch expressions with colons * a branch ends with a call to a function that returns a compatible type * you wanted the expression to end with the value returned from that function, but forgot to use `break-with` &amp;nbsp; var x = 1; // foo() is called, a = bar(); the only problematic case var a = switch (x) { case 1: foo(); default: break-with bar(); }; // foo() is called, b = foo() var b = switch (x) { case 1: break-with foo(); default: break-with bar(); }; // compilaton error: block is missing break-with var c = switch (x) { case 1 -&gt; { foo(); } default -&gt; { break-with bar(); } }; // foo() is called, d = foo() var d = switch (x) { case 1 -&gt; foo(); default -&gt; bar(); }; // println() is called, a = bar(); fallthrough var e = switch (x) { case 1: println(); default: break-with bar(); }; // compilaton error: incompatible types void and int var g = switch (x) { case 1: break-with println(); default: break-with bar(); }; // compilaton error: block is missing break-with var f = switch (x) { case 1 -&gt; { println(); } default -&gt; { break-with bar(); } }; // compilaton error: incompatible types void and int var h = switch (x) { case 1 -&gt; println(); default -&gt; bar(); }; Personally, I'd prefer using switch expressions with arrows, and I recommend others do too, as they simply look like structured expression-oriented code and not like a 50-year-old hack that's essentially glorified goto.
That's a cool idea. This genetic algorithm is going to take about as long as actual evolution, though!
Yeah, I figured it would be cool to show it happening over a long time. I've got a similar one running on another computer to try to find the best values, and it's running a population of 1000 and allows up to 10,000 pieces per game instead of 1,000... and it is running at around 20,000 pieces per second. I'm about to go to sleep, and hoping I will wake up in the morning to find at least one set of values that can hit the 10,000 piece mark regularly!
[Project Loom](https://wiki.openjdk.java.net/display/loom/Main) will be delivering coroutines. Pattern match for `switch` [is coming](https://openjdk.java.net/jeps/8213076).
It‚Äôs a precursor to pattern matching. Think of case/match in Scala. Also look at Brian Goetz‚Äôs various presentations of pattern matching.
Can someone ELI5 the problems this JEP is aiming to solve in the legacy API? I've interacted with Socket API but I couldn't grok under-the-hood details. So, any online resources that goes into depth is also appreciated.
I've been told TCP fast open has been enabled by default on Linux for some years now.
The problem is not the legacy API but its implementation, which is currently in native code. The reimplementation in Java makes those IO operations fiber-friendly in anticipation of Loom (i.e. if you use that API when running in a fiber, no kernel threads will be blocked).
I think they are loathe to add new keywords. Every time they do they risk breaking old code. I agree that \`yield\` is better. This new dash keyword stuff is a way around this I guess. Looks ugly to my eye but we'll all get used to it.
Eclipse 2019-03 is the most current and search for a plugin on the marketplace called e(Fx)clipse. That should get your java libraries in with your eclipse and java libraries and make your life much easier.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
My friend told me that Go has heap / thread dumps. That what is needed for analysis of production problem. They threw Java / Spring / Hibernate and go with Go. It is banking industry and it is much easier to write single DB/REST call service in Go than bringing monstrous reflection framework in Java and looking for skilled programmers, that remember all 100 annotations ))
Performance is likely not much of a concern for serving static files. They are the easy shit of a web service, and something like deflate can probably easily saturate your network pipe from a single CPU core. Similar concerns would apply to micro-optimizations regarding mmap vs. file i/o or whatever. Fact remains, you need a pretty damn fat network pipe to make the stuff you do on the CPU side matter.
Correct, the documentation of the annotation says it's temporary: &gt;A class annotated {@code @__inline__} is an inline class. This is a temporary workaround to enable use of inline types in editors and IDEs that do not yet understand the 'inline' modifier.
At first they were considering a few new keywords that just "happened" to be spelled with hyphens in them, which bothered me more; now it's more principled and will come in handy a few times.
I think you meant C++ references, C doesn't have references :)
"Return" and "break" used as intransitive verbs both have the meaning we want. "Return" used as a transitive verb has the meaning we want; "Break" does not.
A switch expression most emphatically does not "act as a lambda". It is code that actually executes.
Dunno mate, I don‚Äôt have problem with knowing stuff exists :)
Do you get a higher score for clearing 4 rows at once vs 1 row 4 times? The AI doesn't seem to be prioritizing that kind of play. If not, would be very interesting.
What do you mean "actually executes"? Which part of switch expression (it has multiple code blocks) does actually execute? How it's different from pattern matching in functional languages? Answer this questions and you will see my point.
The VS Code team at Microsoft responsible for Java extensions has now moved on to recommend [AdoptOpenJDK](https://adoptopenjdk.net) pre-built binaries for developers who install the [Java Extension Pack](https://marketplace.visualstudio.com/items?itemName=vscjava.vscode-java-pack&amp;WT.mc_id=reddit-blog-brborges) and don't yet have a JDK installed. Feedback is more than welcomed.
So in my case, I can re-use the base image and beneift from layer caching. I am not using modular libraries so I don't benefit from a super slim JRE. However I can still get the JRE down to ~45 MB vs the 70-80 MB for Java 8 and 130 MB for Java 11 (out of the box). Here's what lead me there: - I needed Java 10+ for the cgroup memory option improvements particular to running in containers (the backports to java 8 are actually insufficient) - The java 11 base is almost double the size of java 8 - I care about size because this is a small app and having 99% of the image size be the JRE makes me sad So with jlink I am able to build a ~ 45 MB JRE layer (which is still huge compared to my app) with a bunch of modules enabled. Since these modules are required by the majority of my common libraries I can re-use it for probably 90% of my apps. This layer would be cached as a base layer. Anyway my number one goal was to get the container improvements from later versions of java over 8, and using jlink to make it smaller was a nice bonus.
Looking at connections that my Java NIO code does on my (ubuntu 19.04) laptop, I don't see any trace of TCO cookies in the second connection's syn packet. I haven't done any tweaking of any kernel things on this laptop.
If the majority of your apps share the same base layer (i.e. the JRE) that will save you tons on transfer and start up since that layer would already be cached everywhere. Then the only non-cached layers should be the app itself. Imagine if you had to build and push all of your dependent library jars to nexus/artifactory/etc every time you compiled your app, even if the libraries didn't change. That would be a huge waste of time and eventually bandwidth.
is there an updated switch expressions preview?
I mean that execution continues in the appropriate case, as opposed to a lambda expression, which is not executed at that time. It is a limited form of pattern matching where you can (currently) only match against constant values.
How is it opposite? Look at switch expression: it has a bunch of blocks (Runnables if it helps to understand), it has a switch which decides which block to run. Only one block is executed. Any other block "is not executed at that time". If you agree with this you will probably agree that it's natural to use return statement to return from those blocks.
Java-related?
That was my view once upon a time. Then I realized that switch statements and switch expressions should be very similar except that one produces a value. What return already meant in one, it should mean in the other. Same with break, but it's better to spell it break-with in this case for multiple reasons I don't need to rehash. So, Im very happy with where we ended up on this.
That‚Äôs a good question. I‚Äôm currently using a [JDK 13 EAB](http://jdk.java.net/13/), and the change is not in the latest one. I am thinking it may go through another round of preview, but I could be wrong.
Wow! Dude... looks awesome! I read some documentation and watched the time lapse \*insert-not-bad-meme\* I'm not familiar with React, but I'm well aware about the reasons you came up with the idea. &amp;#x200B; ... is i18n a thing? &amp;#x200B; Some tiny complaints about the website: * The menu: People sometimes forget where they are on the site. The menu changes and removes the menu entry of where I am. Suggestion: Keep the menu static, highlight the entry of the current page. (Honestly, I was a bit lost for a short time and felt a bit like an idiot lol) * Start page: The screenshot on the right is a bit hard to read on Full HD (works okay on 1440p) and it's not clickable. I'm not sure if you should but the screenshot there in the first place. I would have preferred the description below ("Create React Web application with a single click"). If someone is not familiar the site and what it is all about, he should get that information at first glance... and add probably a "get started"-link, too! * It's "too much marketing-language"? I'm sometimes very suspicious, especially when someone writes things like "find **professionally** tailored ..." - it feels a bit pushy - probably that's just me. * "Customize pre-created" ... you mean, like, "existing" ones? :P &amp;#x200B; Thanks a lot for giving it to the community - it was a lot of hard work! I wish all the best for you and the project!
Thanks for the detailed explanation. I‚Äôm not English native speaker, so sometime can‚Äôt write clearly. I‚Äôll try to make changes you‚Äôve suggested.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Incorrect subreddit
I don't believe that they should be that similar. I find classic switch statement with break confusing and I don't think that we should use this just because some guys 50 years ago did so. Let controversial design decisions from the the past stay in the past.
I think the frustration is really because of the old issue that javascript is not strongly typed nor an oop language. Everyone has to understand that these are 2 languages using different paradigms and thus, code must be organized differently. That being said, good on you to provide a tool that eases transitioning of backend developers to front end.
while it's true (and disappointing) that the tool is electron-based tackling a front-end problem, i suppose it can be of help to java developers as well (and go, and python, and .... whoever writes web applications).
When control enters a lambda it's actually another frame pushed onto the stack though, from which you return. It's a method invocation. A switch expression is just control flow within the same block.
Hence break-with.
Good point.
NetBeans is not on version 11 already and just graduated from the incubator to a full fledged Apache project. So that's exciting. It definitely doesn't have all the fancy features of Intellij, but from what I do with it, I never miss anything. I use Intellij at work and kind of find it a little cumbersome sometimes. The things with Intellij is that it likes to make its own project files (ipr or some weird extensions) NetBeans does the same thing really but if I want, I can just take the project and go to anything else. Since I use Gradle, I can use any ide I want, but Eclipse and Intellij always want to make more project messes xD...
just found it on the 60th player in gen 4. how does it compare to the beginning doesnt look like i can go back :(
common sense and jdk mimicry?
Spring Boot Data Rest
 [How to design a good API and why it matters by Joshua Block](https://youtu.be/heh4OeB9A-c) http://web.archive.org/web/20151229055009/http://lcsd05.cs.tamu.edu/slides/keynote.pdf
Yeet
Good one :-)
Lol I know, right! Like if you just do everything perfectly and have common sense at least then it's so easy
deep thought then. whatever you want to call it
Lol, okay mr smarty pants, tell me why the JDK APIs are bad
\* [https://www.amazon.com/Effective-Java-Joshua-Bloch/dp/0134685997/ref=sr\_1\_1?keywords=effective+java&amp;qid=1556330445&amp;s=gateway&amp;sr=8-1](https://www.amazon.com/Effective-Java-Joshua-Bloch/dp/0134685997/ref=sr_1_1?keywords=effective+java&amp;qid=1556330445&amp;s=gateway&amp;sr=8-1)
Just brainstorming like that : * Integration points with the relevant JSRs * Clear customization points * Good thread safety * Up-to-date documentation * Distributed in a multi release artifact
Not Java specific, but you should check out Google or Microsoft's API Design Guides
Probably most used tool. But not a design.
&gt; records can only enforce shallow immutability. Then they are even more "useless", sorry, what problem do they exactly solve in that case then? I understood that records can only refer to primitive datatypes and other records. That should make everything immutable from top do bottom. Anyway, I'm not against them, but even after having it in the back of my mind since a week or so, I see no compelling reason for them to be introduced in Java. The proposal btw, did not look like you could overwrite the getters or define your own one, but I guess I forgot most of it already :D
Here is good video about design https://youtu.be/QpAhXa12xvU
They certainly *help* to enforce immutability. You're free to only define them over primitives and other records if you want, though it would be a shame to preclude yourself from including other known-immutable classes like String which aren't records. What problems? - They can be applied to about all the same problems tuples can. - I already mentioned how they provide a simpler and more reliable contract for serialisation. - Plain data carrier classes are common as hell, they mechanically scanned Oracle codebases and talked to people from Google who did the same and found a huge number of them. You may also be familiar with e.g. AutoValue and Lombok which provide similar features and are hugely popular... - Reliable automatic implementation of useful equals/hashcode/deconstruction patterns. - All the same problems as algabreic data types, as alongside sealed types that's what they are. With pattern matching this will become more useful. What specific problems do you see them as prevented from solving just because they *can* be made mutable by careless coders? Enums have a similar trade off, a tighter contract for some extra features. They too should be immutable just about 100% of the time but are not enforced to be. Do you see Enums as being "useless" for that same reason?
JAXB is part of Java EE and was removed from core Java, starting with Java 9.
&gt; What specific problems do you see them as prevented from solving just because they can be made mutable by careless coders? I don't see any "problem" in records. I just don't see any true benefits. We already have the tools, like Lombok. If there is really a need for something like this, I would go for annotations. &gt; They too should be immutable just about 100% of the time but are not enforced to be. Do you see Enums as being "useless" for that same reason? I don't get this point. What is not immutable about an enum? Before enums got introduced, we wrote the code the compiler is now generating by hand, or with our own generators. So they are most certainly not useless ... but they came to late. People in our days still insist that members of an Enum are written with all CAPS, like ONE, TWO, THREE, insisting that they are "consts" not understanding that this marker style writing only was used because Java lacked enums, and the closest thing was a static final constant and those where written in all CAPS because coming from C/C++, macros where written like that :P Probably you mean that an enum can wrap arbitrary data fields, which do not need to be final? I actually never used that, I guess I have to search if one did.
It might not match the JDK that Oracle released exactly, but you could use http://archive.ubuntu.com/ubuntu/pool/main/o/openjdk-8/openjdk-8_8u191-b12.orig.tar.xz which should be a complete unmodified JDK source distribution. Ubuntu patch it with http://archive.ubuntu.com/ubuntu/pool/main/o/openjdk-8/openjdk-8_8u191-b12-2ubuntu0.16.04.1.debian.tar.xz to make their source tree. Either before or after patching will give you what you're after.
Because many of them were designed 20 years ago and we've learnt from our collective mistakes to produce better.
dont use it
&gt; I don't see any "problem" in records. I just don't see any true benefits. We already have the tools, like Lombok. If there is really a need for something like this, Lombok is exactly what *demonstrates* the need. Promoting it to a first-class language feature has the following additional benefits: - Even more concise. - Direct reflection support, facilitating e.g. safer serialization as I've mentioned. - Better IDE support for refactoring etc. - Can likely take advantage of new features without recompiling record class. - Much lower barrier to entry to contribution to projects which use it. - Much lower barrier to entry to adoption for projects, and this is the big one, which will almost certainly lead to **hugely wider adoption.** Would you prefer to *not* have those things? Why? I also find it curious that you simultaneously think that mutability ruins records and that Lombok makes it redundant, given that Lombok provides even less protection against mutability. &gt; I would go for annotations. Why is is it better? It's just longer, a less direct expression of intent, and means the compiler will silently ignore it unless you have the right jar on your build path. And personally I think relying on internal javac API to abuse the annotation processor is a bit of an ugly hack. &gt; I don't get this point. What is not immutable about an enum? &gt; Probably you mean that an enum can wrap arbitrary data fields, which do not need to be final? I actually never used that, I guess I have to search if one did. Well yes exactly. Just because it's possible for someone to abuse the feature an make mutable enum instances doesn't make the feature less useful, because in practice nobody does it so it's not a problem. Same for records. &gt; but they came to late. People in our days still insist that members of an Enum are written with all CAPS, like ONE, TWO, THREE, insisting that they are "consts" not understanding that this marker style writing only was used because Java lacked enums, and the closest thing was a static final constant and those where written in all CAPS because coming from C/C++, macros where written like that :P You latch on to the most peculiar and unimportant things to dismiss features. Too late because of adopting all-caps convention? Seems pretty minor to me. Besides, enum instances *are* static final members of a class. They're just restricted so they can *only* be instantiated by assignment to static finals declared in the same class, allowing for the syntax to be sugared to a list of names and the generation of some extra reflective metadata. So why *shouldn't* they use the same naming conventions?
Switch expressions are becoming more powerful with Java (with upcoming pattern matching, deconstructing) thus I think you'll start to see of them more.
A couple weeks back I attended a talk about this very topic (10 Reasons Why we Love Some APIs and Why we Hate Some Others by Lukas Eder) - it was very good and informative if you can stand the very large amount of jokes - recording‚Äôs here https://www.youtube.com/watch?v=CYniPcoiI5g
You can find the code for `JAXBException` and some other classes [here](http://hg.openjdk.java.net/jdk8/jdk8/jaxws/file/d03dd22762db/src/share/jaxws_classes/javax/xml/bind/). They appear to have split everything up across multiple folders.
I thought the Sun stuff was deprecated anyway?
\&gt; apigee: RESTful API Design - Second Edition
I think you want to have the sources for the build (version) you have. Which one is it? For the upstream 8u forest, there are several subtrees, and JAXB is in *jaxws* subtree, not in *jdk*. Also, you need "8u" to see the latest source: [https://hg.openjdk.java.net/jdk8u/jdk8u/jaxws/file/0b35685505cd/src/share/jaxws\_classes/javax/xml/bind/JAXBException.java](https://hg.openjdk.java.net/jdk8u/jdk8u/jaxws/file/0b35685505cd/src/share/jaxws_classes/javax/xml/bind/JAXBException.java)
I think in Java 8 the code was still in a forest of repositories. It no longer is, but I think for 8 it still was.
TL;DW A `java.util.LinkedList` consumes 6 times as much memory as a `java.util.ArrayList`. Starting at about 10 million elements, inserting at the end of a `LinkedList` suddenly becomes an order of magnitude slower compared with an `ArrayList`. Inserting at the middle of a `LinkedList` or at random locations is an order of magnitude slower even much smaller lists. Today's cache architectures love flat arrays with predictable access patterns. They hate pointer chasing.
As other people mentioned, JDK8 repository is a forest, so you actually need to fetch multiple sub-repos. However, regarding the question, there is a reason why that src.zip file exist. First, that file is not really there for you to compile into a proper JDK distribution. It only contains the Java source code for some classes (many, but not all), but no more (like the source code for the implementation of the virtual machine). src.zip is there as a reference. When using an IDE, it will be able to display that source code when debugging, or if we ask it to show a specific class. It is something I've found extremely useful in many occasions. Other files, like javafx-src.zip does for javafx/OpenJFX include the code of those other libraries.
You are right, sir
Is your [Performace.compare](https://Performace.compare) method reliable? At 4:04 the durations for 4 million are 21.7 and 27.6, in the second run at 7:38 it says 25.3 and 110.2 for the same methods. So although it's the same methonds the ratio changes from 1 to 4 ?
How about when I need a concurrent (de)queue with variable size for 1-2 producers and 1 consumer? Is there something better than ConcurrentLinkedDeque?
Performance.compare measures 7 times, sorts the results, throws away the best and the worst, and uses the average of the remaining 5 results. My best guess is that the GC kicked in during `fillLinkedListEnd`, and since the GC has to touch every Node object, the performance falls down a cliff.
Do you have an upper bound for the variable size? Then I would suggest `ArrayBlockingQueue`. Completely unbounded queues seem like a bad idea to me, but I'm not an expert in this area. If you are, please ignore my advice :)
You should really use JMH instead of you own ad-hoc benchmarking function, there's so much stuff you're not accounting for.
Seems potentially suspicious not to use the de facto standard JMH.
It's about pros and cons, the LinkedList has some advantages over the ArrayList. For example worst case constant time insertion at both ends and worst case constant time concatenation (not method for that in the Java impl afaik)
This is nothing new to anyone with basic understanding of data structures.
I always thought JMH was for measuring stuff in the microseconds area and below, where even calling a method could completely screw up the results. Am I misguided?
jmh is very flexible, and is designed to do what you're doing here.
I do not really need an upper bound, but could have it I guess. I do not like `ArrayBlockingQueue` because I could have mostly 1 element sitting in a huge empty array. But these things look nice: https://github.com/JCTools/JCTools/tree/master/jctools-core/src/main/java/org/jctools/queues https://github.com/JCTools/JCTools/wiki/Which-Queue-Should-I-Use%3F
Actually for me it is very unintuitive that appending seems not to be o1
Do I *want* to be isolated from all side-effects though? GCs have a hard time traversing linked lists, and I wouldn't want a benchmark suite to completely isolate me from GC, because those GC pauses *will* frequently happen in practice, albeit not deterministically... I'm torn :/
Appending *is* O(1) for `LinkedList` and amortized O(1) for `ArrayList`. The performance difference is most likely due to the 6x memory overhead and crossing a cache size boundary.
&gt; worst case constant time That's a good point!
you don't have to be. jmh has options to either isolate yourself from gc or not. you just choose to not isolate yourself from GC in this case.
Depends. If you have a list where you will only ever insert/remove on the extremities and iterate through the whole lists, LinkedList is fine. Instead of ALWAYS using this or that, you should understand how your data structures work, their advantages and disadvantages, and use them accordingly.
Also make it 'kotlin friendly': SAM-type parameters last, no kotlin keywords as names like 'when'. I think there might be more but these personally annoyed me in the past.
From the perspective of the linked list it is O(1). The problem is that allocating the new list node becomes increasingly slow as the amount of free heap space decreases, GC runs become more frequent and every GC run must work through more still-accessible data. If there was enough heap space to allocate all the needed nodes and GC was disabled (or never run during all the appends), it would be closer to O(1) in practice as well. The usual theoretical analysis of data structures just doesn't consider such memory management overheads.
Have you read Effective Java? It gives a lot of good insight into why Java APIs are like they are.
It's not important what the language is. It's best if it follows a known standard such as REST. I think you don't learn API design from a YouTube video. You need a resource that can be frequently referenced. I don't have one at hand, but if you go for public API design, you should follow some very specific standard and not just go by "tips and tricks". Some starting point: [https://hackernoon.com/restful-api-design-step-by-step-guide-2f2c9f9fcdbf](https://hackernoon.com/restful-api-design-step-by-step-guide-2f2c9f9fcdbf)
&gt; If you have a list where you will only ever insert/remove on the extremities and iterate through the whole lists, LinkedList is fine. If you just want to read or add/remove at the ends and maybe iterate over it completely, just use an `ArrayDeque`. A `LinkedList` is basically only optimal if you use its `ListIterator` and navigate forwards and backwards on it, and add/remove at the iterator position.
I think the post is targeted at Java dev's that don't want to mess around with a front end stack.
You can take a look at the [Google API Design Guidelines](https://cloud.google.com/apis/design/).
Potentially you could flip the scenario and have the entities alternate waiting on a/several [CyclicBarrier](https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CyclicBarrier.html).
If you want meaningful results, you should use JMH. Even with JMH you can easily get things wrong. FWIW, you can check out the [Kryo benchmarks](https://github.com/EsotericSoftware/kryo/tree/master/benchmarks) for a straightforward JMH setup (eg [StringBenchmark.java](https://github.com/EsotericSoftware/kryo/blob/master/benchmarks/src/main/java/com/esotericsoftware/kryo/benchmarks/io/StringBenchmark.java)). Also in the `charts` folder are some R files for creating charts with ggplot2, which is pretty painful but does make [nice charts](https://raw.github.com/wiki/EsotericSoftware/kryo/images/benchmarks/array.png).
This OCR was made originally for [MS Paint IDE](https://github.com/MSPaintIDE/MSPaintIDE) but quickly grew into a standalone project. It's not meant to read any natural images, and it does have some restrictions on what fonts can be used (No fonts hardcoded, though). If anyone is interested in how this works or wants to use it, I have example code and a very detailed description of how *everything* in the OCR works, check out the wiki: https://wiki.newocr.dev/
Can someone please explain when it is appropriate to use LinkedList?
Java's good at concurrency, if you need to use threads for CPU-bound tasks. It's much more performant than most other languages, due to the heavily optimized JVMs. It also has a lot of capabilities offered by the language, especially since Java 5 and 8 allowing for a range of designs and programming styles. It also has a great, well-optimised standard library. Java (as in the language) is mostly aimed at large, enterprise-grade applications. It's not something to be used for prototyping small projects or tasks.
Yes it is. When data structures are taught in school they focus on Big-O notation, which makes linked lists sound like they are really fast. Especially compared to copying arrays. Very few instructors will mention the high cost of pointer chasing, which is not reflected in the Big-O notation.
Iterating through a linked list is still really slow. Pointer chasing and low cache coherency are major problems. Especially in real life code where the nodes are not necessarily allocated sequencially.
 &gt;When data structures are taught in school they focus on Big-O notation, which makes linked lists sound like they are really fast. Only if you don't truly understand asymptotic time complexity and ignore the role of the two constants. Big-O essentially describes the behavior when you approach unlimited amounts of data.
Enum instances are not static members of the "enum" class. They are singleton nested classes or singleton subclasses of the enum class. Yes, the all CAPS thing is a majour issue for me ... it was abandoned in many C++ frameworks around 1995 ... About your other points I have no sound opinion. Sorry ... the discussion of records are a good addition or not is not super relevant for me. From the first glance it sounded like a non convincing idea. But I have no issues if they get accepted. But they wont get my vote. Most likely actually I would not bother to vote on it. Funnily many things dismissed in the beginning suddenly have unexpected synergies ... so lets see.
Cute. I like how you quoted my prolog and completely omitted my actual argument, making it sound like I didn't know what I was talking about. Or were you just in such a hurry to say I was wrong that you couldn't be bothered to read my whole comment?
One interesting thing is that the `LinkedList`'s performance changes a lot with different Java versions: .../jdk8u212-b03/bin/java ArrayList, ArrayDeque, LinkedList 1000000: 6.48 (reference) 4.28 (x0.66) 4.26 (x0.66) 2000000: 15.15 (reference) 10.15 (x0.67) 8.60 (x0.57) 4000000: 27.37 (reference) 21.28 (x0.78) 17.74 (x0.65) 8000000: 62.57 (reference) 44.11 (x0.70) 40.00 (x0.64) 16000000: 151.68 (reference) 96.76 (x0.64) 265.52 (x1.75) 32000000: 688.20 (reference) 343.19 (x0.50) 1824.20 (x2.65) .../jdk-11.0.3+7/bin/java ArrayList, ArrayDeque, LinkedList 1000000: 11.44 (reference) 13.72 (x1.20) 11.34 (x0.99) 2000000: 24.93 (reference) 29.64 (x1.19) 225.76 (x9.06) 4000000: 42.11 (reference) 57.54 (x1.37) 181.35 (x4.31) 8000000: 85.19 (reference) 98.83 (x1.16) 1361.47 (x15.98) 16000000: 219.03 (reference) 218.14 (x1.00) 3232.46 (x14.76) 32000000: 498.90 (reference) 473.17 (x0.95) 6790.75 (x13.61) .../jdk-12.0.1+12/bin/java ArrayList, ArrayDeque, LinkedList 1000000: 17.56 (reference) 24.69 (x1.41) 45.85 (x2.61) 2000000: 37.66 (reference) 29.18 (x0.77) 129.20 (x3.43) 4000000: 45.50 (reference) 49.75 (x1.09) 444.60 (x9.77) 8000000: 99.63 (reference) 117.68 (x1.18) 918.19 (x9.22) 16000000: 216.74 (reference) 275.13 (x1.27) 1847.82 (x8.53) 32000000: 458.74 (reference) 581.73 (x1.27) 4387.23 (x9.56) While the `ArrayList` and `ArrayDeque` have similar performance (albeit getting constantly slower for small arrays), the `LinkedList` is about * 3 times slower for larger lists on Java 8, * 5-15 times slower for all but very small lists on Java 11 and * about 10 times slower on Java 12
They're both, and the capitalised identifier is the static field name, not the type name.
Some of the packages are probably deprecated. But I'm building a compiler tool, so I'm not concerned about what is deprecated. I'm more concerned about some classes not existing in the source code.
Could you elaborate why [src.zip](https://src.zip) only contains some classes? One reason I can think of is that it excludes classes that we aren't supposed to use in our Java application.
Thank you. openjdk-8\_8u191-b12.orig.tar.xz contains both com.sun.beans.\* and javax.xml.bind.\*. Could you elaborate more about this "orig" archive file? A corresponding file doesn't seem to exist for openjdk 9. But this is great. I can use this file.
Whether the large Big-O constants in practice are determined by pointer chasing, CPU cache size, the number of CPU cycles it takes to add two 64 bit integers or anything else, is irrelevant in the understanding of what the Big-O asymptotic means and what it doesn't mean. There's infinitely many practical factors that asymptotic complexity doesn't consider. Or rather, isn't usually considered: it's perfectly possible to have other parameters than the input size n in the asymptotic to not assume every operation like allocation is O(1) but it makes the analysis too complex in most cases and isn't done. The key is that Big-O isn't some magic measure of absolute speed, but instead a relative measure under the assumption that some operations (like fixed size allocation) take constant time, which may not be true in practice and it's not the fault of Java if you try to directly use theoretical results under false assumptions.
*sigh* I feel a physical pain just by watching this video. Just looking into the Main class makes my head hurt. Everything is so wrong in these measurements. You measure adding of a reference to the lists. But what you really measure is object allocation and GC. How is it even relevevant to the topic? I'm not sure what "Performance.compare" method does what it looks like that it effectively does nothing to ensure that previously allocated objects were garbage collected so it won't impact of further measurements. Even the timings which you got tell you that something is wrong with the way of your measurements. You are increasing number of elements but the timings for "LinkedList.add" are jumping up and down. It means that your measurements are unreliable as there are side-effects. And I'm not even talking about the warmup cycle to ensure that JIT won't interfere and the code would be compiled. Then you are talking about always discarding results which are "slower than milliseconds". But why? Did you measure the error size? How you can tell that such results should be discarded? 1 microsecond is still a lot in comparison with CPU frequency. And the only reason why you discard such results because you don't understand how to create benchmarks correctly. Then you try to explain why "LinkedList.add(int,Object)" is so slow but for whatever reason start talking about cache misses. How do cache misses are even relevant to the problem? It is the last problem in the whole scenario. The main problem is the fact that you HAVE to read and dereference thousands of elements to find where to put a new node. Of course it would be faster if all elements were in CPU cache. But it is not the cause of the problem. The root cause of the problem is the fact that you have to go through elements one by one. AND creation of a new object which is already a problem by itself. Later, generating random number inside the benched method. No comments. By the end of the video I felt that part of my brain has died. If I ever need to give a heartattack to Shipilev I know what to use. This is one of the worst perfomance analysis which I saw. Please, never do this again.
Thank you! One question: what does jdk8u stand for? I saw this before and assumed "u" stood for "update". But it seems like it is a repo for fetching the "complete source code".
when you need that O(1) insertion time at either end of the list. but, as he showed here at very large number of elements, even that insertion can be sometimes expensive as the array copy that ArrayList imposes can be quite fast. this is taking advantage of the fact that all objects in java are pointers. so what you have essentially is an array of pointers. in c++ you can put objects into lists/vectors not only pointers. then copying them around can be extremely expensive. at which point, depending of what you need to do with the list, it makes sense sometimes to just use a list vs a vector.
&gt; because those GC pauses will frequently happen in practice In practice you also don't populate a list with millions of data right after creation. If you don't isolate or take under control the side-effects then all your benchmarks just measure temperature on mars. They just measure how fast YOUR program is working. Not how fast different operations work. Your benchmarks become unreliable which means that you make made up conclusions.
You're still ignoring the guys point dude. He's specifically saying that most people are taught algorithms in terms of big O notation and not those other factors. We understand what big O notation is dying
Debian source packages are made from three files. * A .dsc file that describes the other two files * An `orig` upstream tarball as released by the upstream project * A patch file that contains all the Debian specific changes This is done so that all Debian releases of the same upstream version can share the same orig tarball.
It is memory overhead. It is the number of allocations. With LinkedList you create an object on EVERY add. With ArrayList - just time to time when you need a new array. And every allocation takes a lot of time. And there is nothing with CPU caches. It is like you once heard the word "CPU cache" and now are trying to explain everything with it.
Yes, but that doesn't make Big-O asymptotics wrong. That just means you're applying them wrong or don't understand that the constant factor of the asymptotic is implementation dependent and not an exact measure of runtime. And everyone's taught that way because that's the only way to teach them theoretically to abstract away from a specific implementation of each data structure. Teaching separately the runtimes of C++ data structures and Java data structures and Python data structures and Javascript data structures and having to know them all separately would be plain stupid.
&gt;"No Machine-Learning" &gt; "That can be trained" Which is it?
I feel that the timings are screwed by GC. Like a lot. Please, show the code of the benchmarks. The performance difference might be caused by JIT, GC, default memory settings, etc. And it doesn't mean that it is a perfomance change in LinkedList.
It doesn't use standard machine learning, though can be trained with algorithms that separate characters into pieces, then get the percentage they are filled in, and it stores it in a database. Then during scanning, it breaks up input characters the same way, gets the percentage they are filled in, and compares it to all the trained characters. If you're interested, I explain the main part of training here: [https://wiki.newocr.dev/explanation/training/calculation](https://wiki.newocr.dev/explanation/training/calculation) &amp;#x200B; I suppose it could be considered "machine learning", I should have specified "no neural networks". Sorry for the confusion.
He didn't say they were wrong, he just said that they're not the whole picture and that students often aren't given the whole picture for a long time.
In the case that you need real time guarantees. I'm which case you can forget about Java because of GC. Also even C malloc might be too unpredictable in this case. Splicing is fast in lists as well but the bad locality will make array based data structures faster in practice 99.9% of all cases. Also look up amortized analysis as in many cases your code might use am amortized O(1) anyway for the list operations or running time is dominated by something else. For those interested in a nice blend of theoretical and practical algorithm analysis, the following is a good read... https://www.springer.com/de/book/9783540779773
&gt; Very few instructors will mention the high cost of pointer chasing, which is not reflected in the Big-O notation. That depends; Big-O of *what*? You are correct that Big-O of *operations* does not reflect pointer chasing, but Big-O of *cache misses* (which dominate operations in data structures like these) do. Big-O of cache misses is, therefore, very common in the analysis of data structures. It is used to show the superiority of cache-conscious (like B-trees) and cache-oblivious (streaming B-trees) data structures over balanced binary trees. Such analysis is not usually covered in introductory courses, though.
From the point of business I don't see why for simple transactions (like making SQL select/update or HTTP GET/POST) to hire Java developer with over engineering dev-stack if this can be done in Go out of the box with 10 lines of code? I leave Python/Ruby/Perl outside. They are not multithreaded...
That isn't really a good statistical method. Why don't you use the q-test instead of just arbitrarily throwing stuff away?
Only in very rare and extreme circumstances. Both array-dequeues and linked lists offer worst-case O(1) operations, but for the array-backed dequeue, it is *amortized*. If you have a real time system where worst-case deterministic performance of each and every operation is more important than max throughput, linked lists may be appropriate, but usually when you have some direct control over de/allocations (so no GC). One advantage of linked lists is that all nodes, and therefore all allocations, are of constant size, which allows further predictability of de/allocation when using some sort of node-pool.
I would say SSL handshake is the first thing that kills performance. Deflate/gzip is a layer deeper. For me Java apps should be exposed via plain HTTP and TLS+cert management should be moved to front firewall+load balancer. No need to securing intranet unless you try to comply PCI-DSS. In most cases small shop is hosted in Cloud, talking about paranoiac security in such case is nonsense...
Thank you. That summarizes what I was trying to say perfectly.
&gt; You measure adding of a reference to the lists. But what you really measure is object allocation and GC. How is it even relevevant to the topic? If `LinkedList` is slower because it allocates more memory and uses more references, how is that *not* relevant? &gt; it effectively does nothing to ensure that previously allocated objects were garbage collected Honest question, how would you ensure that? `System.gc` is nothing but a hint: &gt; Calling the `gc` method **suggests** that the Java Virtual Machine expend effort toward recycling unused objects &gt; You are increasing number of elements but the timings for "LinkedList.add" are jumping up and down. It means that your measurements are unreliable as there are side-effects. Fair point. But I find the results below 10 million rather uninteresting. Who cares if a method is 30% faster or slower? What I find interesting is that `LinkedList` totally dives in performance above 10 million elements. And it does that every time without exception. Again, I don't care if it's 10 times slower or 20 times slower. It's an order of magnitude slower, that's the point. Are there better, more precise ways to measure performance? I'm sure there are. And it would be necessary if "LinkedList bad" was my own, unproven claim. But everybody from Bjarne Stroustrup to Josuha Blocha agrees that `std::list`/`LinkedList` is bad and should almost never be used. This entertainment video just confirms that and hopefully makes the viewer go "What? That can't be right... Let me do some research into this topic!" &gt; the warmup cycle How often do you have to call `add` on a list to trigger the JIT? &gt; Then you are talking about always discarding results which are "slower than milliseconds". But why? Because I'm not interested in micro-benchmarking. I care about real-world performance, not sub-millisecond differences. &gt; The main problem is the fact that **you HAVE to read and dereference thousands of elements** to find where to put a new node. Your quote almost sounds like I never mention the bold part at all? Caches are (also) relevant because shifting 1000 elements in an array is cache-friendly, but following 1000 references is not. This wasn't always the case and can be counter-intuitive. &gt; Later, generating random number inside the benched method. No comments. Honest question, what would you do instead if you needed tens of thousands of random numbers? These days, simple computations are faster than table lookups. That's why we stopped storing sine and cosine tables in memory. &gt; This is one of the worst performance analysis which I saw. Please, never do this again. Thanks for your honest feedback. Feel free to skip my next "performance analysis" then ;)
&gt; Big-O of cache misses How would that even work? Shouldn't cache misses always be O(n/k) where k is how many n's fit into the cache in question?
I think you have that backwards. Allocations in Java are cheap. What's not cheap is having to read in a new cache line as you visit each node because they aren't next to each other in memory.
For this to be true what is export format for Docker container? I am superficial when it comes to Docker. Isn't Docker container image a single tarball? How is it possible to download piece from tarball over wire? If my assumption is true you need some smart repository for Docker images and compatible API across vendors... Would be glad if someone points to Docker docs/specs on a topic!
Even in Big-O notation, random acceses to a LinkedList is O(n), whereas for a ArrayList it is O(1). If a teacher does not emphasize this, they should not be teachers.
Of course they cover that part, it's a standard test question.
I always take the language I am working with into consideration on performance because most of what we learned about Big-O notation is based on C, but in most higher level languages things like Arrays are just linked lists or trees under the hood and they're better optimized especially when you consider rolling your own means you're using their abstractions to build a list that a normal "Array" does on a lower level. &amp;#x200B; &amp;#x200B; So I think data structures that are useful in higher level languages are trees, and graphs since it can more efficiently link and retrieve things based on your use case.
Yes, but the number of elements in a block (often denoted `B`) is also treated as a variable, rather than a constant. This makes sense because in many cases you have control over the cache-line size -- not on a CPU cache, but when the cache is the file-system page cache, or when the cache is the RAM of a single machine. These data structures often trade off computation operations for cache misses. For example, a query of a B-tree requires O(B) operations for each node, whereas for balanced binary trees it is O(1).
&gt; in c++ you can put objects into lists/vectors not only pointers. then copying them around can be extremely expensive. Enter move semantics
LinkedList random access should be O(n/2) on average surely?
The apis are labeled with @since. Anyone can see which are new and go off of that
ListIterator.add() (judging by the API), could potentially be an O(1) operation as well. Linked list insertion is also O(1) if you have a reference to the preceding element.
There is no difference between O(n/2) and O(n). If you grow your list by a factor of 10, then it will take 10 times as much. That's what O(n) means.
O(n) is linear time, it‚Äôs not fast.
&gt; most of what **we** learned about Big-O notation is based on C What exactly do you mean by "we" in that quote? Because Big-O notation is completely independent of programming language.
Not until you‚Äôve done the profiling and determined that these structures are actually a large portion of your time budget. Even then, probably not. That‚Äôs a _very_ complicated bit of work. Trading a little speed for not having bugs seems like a good tradeoff to me.
Don't get that with any non-primitive array anyway, since the array itself it probably contiguous but none of the objects will generally be.
We as in people who learned about Big-O notation as it's taught in school. Also Big-O notation is different in higher level languages since what you think is an Array is actually just an abstraction where the random access `array[3]` may seem O(1) but due to the fact the under lying code that makes up the library Array class you're using is something different like a vector or tree. So what is more efficient depends on the languages implementation and design.
I agree. Once I realized `ArrayDeque` existed, I never used `LinkedList` again.
You do realise a linked list doesn't have to use pointers?
In a language which freely moves your objects around the heap. How do you get cache coherency? Sure the linked list will have it's node somewhere &amp; its data somewhere else. So potentially two cache misses compared to one. If you want cache coherency and that level of control, and use java. You want off heap storage.
No, I don't "realize" that because it's nonsense. Your pointer may be based (i.e. an array offset) or unbased (i.e. a direct memory address), but either way it is still a pointer. And if we want to be super pedantic, all pointers are based because of how virtual memory works. But that's only useful to compiler and OS writers, so let's table it.
Depends on what you want to do with it. But yea, that can be a problem. Which is why we need structs and real generics in Java.
Congratulations, you know the answer to a CS 201 test question. Do you want a cookie?
Thanks
I‚Äôll take yours.
It still has to use something that acts more or less like a pointer, like indices into an array. As far as cache performance is concerned, those may as well be pointers.
Hrm. OP compared array to linked lists. You say its due to pointer chasing. I say well you can implement it with array indexing, you say its nonsense. Also I have to point out that realize is the american spelling, and being a Brit, I spell words the ~~correct~~ way we do in England.
If Java had structs, you can use preallocated arrays instead of heap allocated objects. Actually, that should still work. Create an object pool, pinned by an array, and the GC will not move the objects relative to each other. Just make sure that you allocate them all at once so they'll start contiguous.
I can't agree more.
Iterating an array in order is very different than jumping around to random indexes from the CPU's perspective.
Again, we're comparing an Array to a Linked List. If you're talking about cache performance; in Java both can have dismal cache misses as the memory can be all over the place. All reference types in Java are pointers. It is not guaranteed to be contigious.
This is pretty well known, and mis-taught in CS programs. https://www.reddit.com/r/programming/comments/25xpre/bjarne_stroustrup_why_you_should_avoid_linked/ https://kjellkod.wordpress.com/2012/02/25/why-you-should-never-ever-ever-use-linked-list-in-your-code-again/
If the object was humongous it would probably be in place. However each individual item in the pool could be moved. Depends really on which GC your using. In that example though; a linked list makes alot of sense as the underlying structure for a pool.
Allocation is never *that* cheap. Maybe the allocation itself is only a few CPU instructions, but you still have to initialize the memory (otherwise why did you allocate it at all?), and every allocation means the next GC sweep will have to come that much sooner. Dead objects can still waste space in the cache until they're garbage collected. There's also a minimum amount of memory overhead per object, so if you're allocating a lot of small objects (like list nodes), that adds up to a pretty high ratio of overhead to useful data.
When it comes to cache locality, that really depends on how big the array is, and how much cache contention there is.
In other words.... the machine... learns? I think machine learning means any algorithm that gets better via training of some sort. So if you train it, it's machine learning.
(yes, that's my point.)
If the GC sees a page full of active objects, I would assume that it is smart enough to leave it alone. You can't compact a page with no open spaces.
Honestly I wouldn't use java standard collections for such number of objects. I don't have a good usable case for linked lists in the 10 million range. We do use a form of double linked list at work, against an off heap store in the millions, with list lengths in the 1000s.
sure - but who knows, maybe a GC in the future would rearrange it.
Why don't you run it with GC activity printing enabled? Also with JIT activity enabled? Or with Mission Control recording?
Well that's why I said it "should work" instead of will work. Who knows what crazy optimizations they will come up with next.
Once again. Big-O notation is a mathematical term. It doesn't depend on programming language. It can't be "different".
Aka an ArrayList
Years and years ago, I wanted to automate a program that use a qt interface and I needed to read the data in it's main frame. Even using testing tools, without paying for a very expensive license and without spending a bunch of time learning how to read the data, I wrote a program that read the text, removed the antialiasing and saved raw pixel data for each character. I had to train it by it presenting me with the pixel data, and me telling it which character it was. This was training, but necessarily machine leaning, as I knew it at the time. I think there is a distinct difference between the two. If I had extended the program further to start making guesses as to which character it was on it's own, I think that would have been machine learning.
I didn't say that anything in LinkedList changed, but even if the implementation is identical, code that ran OK in Java 8 now in Java 11/12 runs a lot worse... I changed the code to run the test loop continuously for 10 minutes to even out some initial GC/JIT issues. The result is that on my machine Java 8 ran the loop 24 times, Java 11 only ran 8 loops and Java 12 ran 8 loops. At the same time the performance of the ArrayList is pretty much identical for all three Java versions. This is the test-code: [https://pastebin.com/fBXMHDVm](https://pastebin.com/fBXMHDVm)
"jdk8u" stands for "jdk8 update". Formally, once particular release is out of the door, any further work is done in the update release. In older times, there was the jdk8/jdk8 repository where 8 was developed, and update work was done afterwards in jdk8u/jdk8u. In modern times, the development is done in jdk/jdk, and update work is done in e.g. jdk-updates/jdk11u, jdk-updates/jdk12u, etc. &amp;#x200B; For example, compare the last changeset timestamps in both: jdk8/jdk8 has last change at 2014-03-04 (basically the 8 GA release), jdk8u/jdk8u has the latest at 2019-04-16 (most recent 8u212).
If you understand how data structure works.... then you should know this right off the bad.
when your iterator needs to be able to remove elements in constant time.
If that is the only things application will need, then sure, you are right, but often business need much more.
Did you tried eclim it gives all of eclipse inside emacs. [https://github.com/senny/emacs-eclim](https://github.com/senny/emacs-eclim) [http://eclim.org/install.html](http://eclim.org/install.html)
Whatever. Data Stuctures 101 is not Computer Architecture 101. I'm thrilled (/s) to know that you didn't learn anything from this video, but your reasoning is stupid.
&gt; basic understanding of data structures It's completely new to people with a "basic" understanding of data structures. I've gotten this question in interviews in the last year but they always look irritated when I always say it's pretty much always better to use ArrayList and not worry about it.
I‚Äôve rolled with slim jdk for all of my deployments, I find that the less mature the organization is, the less you need immediate start up and the more you want basic Linux tools at your side.
Right ok I thought it might be :)
yes, annotations are cancerous
Standard procedure when you're not sure is to google the error message. In this case it seems like it's a known issue that the build is failing https://sourceforge.net/p/wireshare/bugs/7/ You can either ask the authors for support or get someone to fix it or learn how to fix it yourself. Just out of curiosity : what is your end goal?
Well, I was the original maintainer on this project (not a programmer, I had two programmers who left the project a few years later). I was thinking of re-starting development, and distributing it for the Macintosh.
or use intellij/eclipse
&gt; Allocations in Java are cheap. Who said this to you? Allocations are cheap and fetching a cache line is not? What? Do you understand that memory allocation alone requires tons of memory accesses to find an appropriate space in a heap. Even in terms of cache misses it might cause a lot because JVM had to work with heap structures which already makes your statement nonsensical. Also it requires a number of function calls which also impact on performance. Number of different checks and various code is performed just to allocate few bytes. And in the worst case scenario you'll get a system call to reserve and commit physical memory which is very costly. And I'm not even talking about possibility of GC triggering, heap blocking, etc.
&gt; I didn't say that anything in LinkedList changed, but even if the implementation is identical You said that the performance of LinkedList has changed. If you test the same code on a slow machine and then on a fast machine it doesn't mean that the perfomance of the code itself has changed. It means that the performance of the machine is worse so everything on this machin will run slower. &gt; to even out some initial GC/JIT issues. There is no "initial GC issues" there are just "GC issues". You are making the same mistake as OP. You try to measure adding to LinkedList but during of this adding GC might happen as you allocate a lot of objects. It means that you don't know what part of the time is caused by GC Stop The World and what part is actual adding of an object. And the same problem actually happens with ArrayList.add as it also cause allocation of huge arrays time to time. But less frequently. Also you don't even try at least to call System.gc() to cleanup memory before a new cycle.
Java has not been killed off. With the new release cadence, new features are being delivered at a faster rate than ever before. I‚Äôm not sure who is telling you these fallacies. You can download the free OpenJDK builds of JDK 12 [here](http://jdk.java.net/12/). If you want to use the Oracle builds in production, you will need a license. The builds are equivalent, except for their support period.
Quick Search on google `openjdk 12 download` * [https://jdk.java.net/12/](https://jdk.java.net/12/) * [https://www.oracle.com/technetwork/java/javase/downloads/jdk12-downloads-5295953.html](https://www.oracle.com/technetwork/java/javase/downloads/jdk12-downloads-5295953.html) &gt;open source project activity is all at the standstill in comparison to other languages And on what data are you basing that statement of? Google Trends does not indicate anything of that https://trends.google.com/trends/explore?q=java,ruby,javascript Maybe you want to tell us which projects you meant.
&gt; If LinkedList is slower because it allocates more memory and uses more references, how is that not relevant? Because it causes GC which also goes into your measurements. However GC is not a part of the LinkedList.add(). In real world program it might even not happen once while calling this method as it would happen more naturally during execution of other code. &gt; Honest question, how would you ensure that? System.gc is nothing but a hint: And so you decided to not do anything? At least analyze what part was taken by GC and what by actual node-creation and wiring into the list? You can at least run tests in separate processes to ensure that objects which were allocated during previous run won't mess up results. &gt; Fair point. But I find the results below 10 million rather uninteresting. Who cares if a method is 30% faster or slower? Actually 30% is a lot. It is really a lot. Especially if it is a hot method. Out compiler and runtime teams are fighting for each per cent to improve the perfomance of our JVM. And you are saying that no one cares about 30%. &gt; It's an order of magnitude slower, that's the point. It is not a point it is speculation. Why it deeps in performance? If 95% of time is caused by GC does it mean that it is LinkedList's fault? If you have hundreds Gb of RAM how does the result change? Do other processes affect the benchmark? Does swap affect the benchmark? Making a correct statement with a faulty (or even false) arguments is not making a point. It is a poor research and lack of analysis. And it is a poor excuse as you mark your video as an educational while doing absolutely opposite because you spread incorrect statements and bad benchmarking practices. &gt; How often do you have to call add on a list to trigger the JIT? JVM allows you to get compilation logs which you can use to analyze when and what compiler is called. This can be used to make a good approximation how long should be a warmup cycle. &gt; Your quote almost sounds like I never mention the bold part at all? &gt; Caches are (also) relevant because shifting 1000 elements in an array is cache-friendly, but following 1000 references is not. This wasn't always the case and can be counter-intuitive. Almost fair. Caches help with copying of array parts. But there are more than this. Array copying is highly optimized as it is made via an intrinsic. And node searching is JIT-compiled so it might be not as much good. Also the node-searching cannot be unrolled by design. Also there are NullChecks. Might be other checks. So it is not only about caches. It is more a general problem that moving through linked list elements takes a lot. And concentrating on CPU caches is just a tunnel view. &gt; Honest question, what would you do instead if you needed tens of thousands of random numbers? These days, simple computations are faster than table lookups. That's why we stopped storing sine and cosine tables in memory. Oh, really? Just take a few minutes to look how Random.nextInt is implemented. You'll see that it is more just a simple computation. And even without it, generating of a random number is not a simple computation. It might take a lot of arithmetic operations. So it is difficult to say what would take more: a read from a pre-generated table or random number generation. And regarding sine/cosine tables. That's just a BS. Float point functions are fast enough to not care much about it. However if you need the highest performance then you still consider the tables as a possibility.
What JVM settings do you use? The default GC changed since Java 8 (prioritizing low latency over throughput) which would explain the apparent slow down. Make sure to run with the same settings to get a representative result.
They are very nice.
Are you sure that you are not confusing JVM with C? I know C searches through a free list looking for a large enough slot. But I was under the impression that JVM uses a compacting GC like the CLR.
Usually we ignore constants such as /2 or 3* because it doesn't change the shape of the curve.
How about teaching it to read musical scores? That's a project I've been wanting to start.
You'd have to do some modification to it, the main problem with that is the lack of support of arbitrary alphabets. I have an open issue on that and I'd love to make it happen, it wouldn't be too hard, though I'd look into it more if I were you. Also note that it currently doesn't support natural images, though with some good image preprocessing it could be done.
At first, what JVM we are talking about? There are a lot of them. Oracle HotSpot, IBM J9, Azul Zing, Excelsior JET, etc. If we are talking only about HotSpot then it also have different GCs: Serial GC, Parallel GC, G1, Shenandoah. Each of them manages allocations differently, scans heap differently, fights fragmentation differently, collects garbage differently. Even in the most simplistic model before you just "increment a pointer" the current thread has to take a lock to avoid conflicts with other threads. Then you need to initialize object: zero some memory, write some internal data, run a constructor. Also you need to check if you need to run GC, perform a class initialization, etc, i.e. you have a lot of stuff behind the scenes. So if you need to create and manage a huge number of small objects then it might be reasonable to create a cache and re-use the same objects to avoid GCs and unnecessary allocations.
Although this is speculation, and I haven't check exactly what is in or not, I would say licensing reasons.
right. but moves can be expensive too (shouldn't, but you're free to shoot yourself). resizing (increasing the capacity) can be expensive as well as it constructs objects. evreything can be expensive in c++ if you're not careful.
Yea let's use javascript and we don't even have to download anything just use browser woaah
&gt;If you test the same code on a slow machine and then on a fast machine it doesn't mean that the perfomance of the code itself has changed. Exactly. But in this case I ran the same code on the same machine using just different JVMs. &gt;There is no "initial GC issues" there are just "GC issues". You are making the same mistake as OP. You try to measure adding to LinkedList but during of this adding GC might happen as you allocate a lot of objects. The GC running explains when some of the measurements are off but if you look at my original edited post, in a 10 minute time window the code ran 24 times on Java 8 and only 8 times on Java 11. &gt;It means that you don't know what part of the time is caused by GC Stop The World and what part is actual adding of an object. And the same problem actually happens with ArrayList.add as it also cause allocation of huge arrays time to time. But less frequently. &gt; &gt;you don't even try at least to call System.gc() Over a time span of 10 minutes, is it relevant when exactly the GC runs?
I used the defaults, so essentially `javac PerformanceTest.java` and `java PerformanceTest` for each JVM version.
Yep, currently finishing up a semester in Data Structures. Was taught this.
&gt; Can‚Äôt find downloads of it I think that says more about your googling skills than about the state of Java.
The method that the compiler is failing on was added in Java7. Can you set the source and target compiler options for Java 6. I'm not sure if that will help with the Java 12 jdk, if that fails try a Java 8 jdk.
Well, luckily I could convince my customers in recent years to use proper names and not all caps :P Sorry, probably we are just cross talking. But the "fields" in enum Numbers { one, two, three } Are not fields, they are singleton subclasses of "Numbers" (or singleton nested classes).
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Sorry but you are absolutely wrong. Enum constants themselves refer to singleton **instances*, not types. Hence it is possible to invoke instance methods and access instance fields on them... They are unquestionably instance names, not type names. Enum constants *may* declare anonymous classes if they declare a body, but it's unnecessary for an enum constant with no body to declare a subclass. Seriously, read the spec. You have been misleading your customers!
U are correct u need to download it from [http://adoptopenjdk.net](http://adoptopenjdk.net/)
These experiences reassure me that there will always be a need for a little fine skill and that some people would do well not to express themselves. The problem here is quite simple: there is no direct access with a list, so you should not use a list when you need direct access. Lists are not made to be manipulated like an array. When I want to delete elements from an array then I have an interest in grouping them together and then removing them once and for all, with a list I do not have an interest in thinking like that: I can directly delete the elements but I have to access them first. &amp;#x200B; He should do the following test: take a list that contains elements from 1 to 100000 and delete the next even element from the last even element deleted. Each deletion must be immediately effective. There he will see the interest of a list
&gt; He should do the following test: take a list that contains elements from 1 to 100000 and delete the next even element from the last even element deleted. Each deletion must be immediately effective. So... you want to remove all even elements from the list? Easy as pie: list.removeIf(x -&gt; (x &amp; 1) == 0); The performance difference between `ArrayList` and `LinkedList` is negligible. In C++ you would employ the [Erase‚Äìremove idiom](https://en.wikipedia.org/wiki/Erase%E2%80%93remove_idiom) for the same purpose. &gt; some people would do well not to express themselves Agreed. I'll take down the video on Monday.
No the performance should not be negligible when using a list. Use the ListIterator with the list. With the array remove the element and rebuild the array EACH time, because after each operation we need to assume that the data structure is consistent
When using a list you need to have an access to the direct internal element. In this case delation/insertion operation can be done in O(1) whereas it requires O(n) with an array. If you do not have an access to the element you shoudl not use it. Th eproblem is that some people use the same direct access to list as they use with array and then claim that is is a bullshit data structure. These people did not really understand algorithmics and data structures
Did you check it? No, you can implement a list with an array. So you are going to different position within the array. You are going to lose time but not a lot
Herbet Simon got the Turing award, partly for list processing, so it should not be so bad ...
This is stupid. Claiming that means that you do not understand computer science Point to a middle element. Then remove the next one. Cost with list = O(1) Cost with an array O(n) Repeat this operation
btw just posing this as a side note which major JDKs are currently out there: &amp;#x200B; * community: [https://adoptopenjdk.net](https://adoptopenjdk.net/) * Azul: [https://www.azul.com](https://www.azul.com/) * IBM: [https://www.ibm.com/developerworks/java/jdk](https://www.ibm.com/developerworks/java/jdk) * Eclipse: [https://www.eclipse.org/openj9/](https://www.eclipse.org/openj9/) * Oracle Open: [https://openjdk.java.net/](https://openjdk.java.net/) * Oracle Commercial: [http://jdk.java.net](http://jdk.java.net/) * RedHat: [https://developers.redhat.com/products/openjdk/overview](https://developers.redhat.com/products/openjdk/overview) * SAP: [https://sap.github.io/SapMachine](https://sap.github.io/SapMachine) * Amazon: [https://aws.amazon.com/corretto](https://aws.amazon.com/corretto)
Always is a dangerous word
The
&gt; Even in the most simplistic model before you just "increment a pointer" the current thread has to take a lock to avoid conflicts with other threads. No, in most GCs, first they allocate in a thread local buffer, you don't need locks to allocate there. If this buffer is full the still living objects are copied to the next, shared generation.
It looks like in your [submission](https://www.reddit.com/r/java/comments/biaenz/public_void_vs_public_static_void_vs_public/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
&gt; With the array remove the element and rebuild the array EACH time Sure, that will explode to quadratic complexity. But why would anyone do that? Java 8 gave us `removeIf` for a reason.
Linked lists are really fast, however, not if it involves an object allocation. If instead you add next/previous references to the objects themselves that you need to have linked, it would perform much faster, especially for the remove and insert cases where you know the relevant node already.
If you really need a LinkedList, add next/previous references to the object itself. It will perform much better, not to mention that it will also make arbitrary removes and inserts before / after an object in O(1) time.
because a LOT of algorithms do not traverse the array for performing some operations, They use pointers and often linked list when they need to maintain some properties. This is why I am upset when I see people claiming that lists are bullshit
Array is not laways O(1) even for amortized complexity
No. "Very rare circumstance" is certainly false. It depends on your need and on the data structure you want to maintain The benchmarkas is a little bit stupid. When I want to remaove an element from a set, I can do that In O(1) with a linked list and not with an array, and a set is more useful than "very rare circumstance".
This is not true. This talk of stroustrup is just a non sense. Sorry for that but this is just wrong.
What is your favorite example of such an algorithm?
maintain an ordered list of elements or dealing with sets
When and If you are ever willing to sacrifice 2.5 yrs on the East Coast this boot camp is amazing for help people transition into professional Software Engineers. https://www.zipcodewilmington.com/start-with-zip-code The Summary: 12 weeks of 10 hours a day, 6 days a week Java/Spring, GIT, Angular, etc If you survive, the #1 employers is JP Morgan Chase on a 2 yr junior dev position starting at a measly $65K - 70K After 2 years you can return to the glorious West Coast and ask for that 6 figure salary everyone expects
And 150 gb of node packages....
What you describe is machine learning. It falls into the category of machine learning called 'Supervised Learning'. Not sure what distinction you think there is or why that's important selling point for the code.
Machine learning is much broader subject than neural networks.
Cool idea, will check it out!
I set your page as my home page, really cool project, thanks
The downloads / license was taken care of by other posts, but I'd like to know where you're seeing this other information... &gt; open source project activity is all at the standstill in comparison to other languages. Java has been around so long (what was it... 1995 or 1996?) that it never trends anymore, but it's definitely active and most areas are still hiring Java developers for new projects. [https://projects.apache.org/projects.html?language#Java](https://projects.apache.org/projects.html?language#Java) There's quite a few active Java projects in the Apache umbrella. If you count the ones using JVM based languages instead of Java on its own (e.g. Apache Spark in Scala), then that's even more activity. The Spring framework (love it or hate it) is still actively developed as well. &gt; Is that it? Move this thing into ‚Äúlegacy‚Äù bucket and not use for anything new anymore? If you're developing a new project, you *always* want to check all your tools. Java, a programming language and runtime (JDK) is a tool, just like your continuous integration or the pointing device your graphics designer has. Since I already assert that Java isn't completely dead, here's some cases you would want to consider Java: * You need a library that's well developed in Java, for example Geodesics and geometry (compare with C++ and Python which are also decently developed) * Local universities are churning Java computer science grads, and you want to quickly onboard local talent * Monolithic apps - this will probably get me downvotes, but there are cases where you have disproportionate developer resources to operations resources. If you're not going Big N scale, you can use quite a lot of experience gained from all the big monoliths of thousands of lines of code done in Java before. * Still a necessary evil for mobile app - that said I'm not in that space, so I'm not sure how far you can get with a progressive web app (PWA) versus Java app these days And for not Java? * Simple microservices or "serverless": When startup time is everything, having to load up 50MB of JVM will incur a penalty * Other types of apps that do one thing well - you may be better off served by Golang or an interpreted language * Stuff that it's actually deprecated for (i.e. use HTML5 instead of Java applets) * Desktop app (it's horrifying to have to wait for a JVM to load on a desktop or laptop, then show up with that "uncanny valley" user interface where every element is just "off" compared to a native desktop app on the same platform)
Try again using the same GC/JVM for each test. Comparisons aren't really useful when using different settings like you are. The defaults changed to prioritize different things, so if you use the defaults on different jvms is not a meaningful test.
Sure, of course I know where it‚Äôs at - as any other professional java developer. The problem are that - for anyone trying to learn java, openjdk web site is practically useless. Pretty soon there will not be anyone left with java skills either (other than in offshored contracting shops, and even there java is known mostly due to google android, and a bunch of old legacy code they maintain) - Openjdk doesn‚Äôt come up in search results in google for anything related to ‚Äújava‚Äù, - java results that do come up are all pointing to oracle owned commercial jdks which no one should start out with, voluntarily, anyway. Plus it all looks dated and and time limited and non production, according to all the scary legalese - There isn‚Äôt any kind of introduction/tutorial/playground, or accessible docs available for java on any of these ‚Äúofficial‚Äù sites - package management (maven central and others) feel all very dated and confusing (sure maven/gradle work if you know how to use those things, trying to find source code for packages is like digging around in dead forest) - other than a handful of oss projects (spring/Lucerne/elastic) java OSS development largely is at standstill - it seems like no sane startup company would start development in java either, voluntarily anyway - it‚Äôs unclear if any enterprise would start any new major project in java either I‚Äôd like to think I‚Äôm just being too pessimistic this weekend, but...
&gt; I can do that In O(1) with a linked list and not with an array You mean from the *middle* of a queue? Yes, you're right. I was thinking about the ordinary queue operation of adding/removing from head/tail and traversal.
I have *never needed* to remove the middle element except in those cases where *I do not care about the order of the collection* anyway, and in those cases, I use an `ArrayList` or raw array+count and simply move the last element down to fill the space of the "removed" element. That allows O(1) removal of middle elements. The only other useful thing `LinkedList` can do is function as a ordered queue, which I find `ArrayDeque` does better. Hence, as I say, I never have a use for `LinkedList`.
From the descriptions I found, supervised machine learning is still able to make new insights and judgements after being trained - my code was not able to do that.
In cases where I need to repeatedly remove middle elements, I use an `ArrayList` or raw array+count and simply move the last element down to fill the space of the "removed" element. That allows O(1) removal of middle elements. If I really need to preserve the exact order of the collection, then removing from a `LinkedList` by index is not going to be better than removing from an `ArrayList` by index, because although with `LinkedList` it's O(1) to unlink the element, it's O(n) to *find* it. What about iterating thru a collection, removing many elements during the iteration? Using the remove method of the iterator returned by `LinkedList`, the total iteration and all removals would be O(n), better than `ArrayList` which would be O(n¬≤). **Or**, I could just dump all *kept* elements into a fresh `ArrayList` and swap it at the end, which is still an O(n) procedure, and sometimes works out extra nicely if I want to keep the collection live for concurrent access. The only other useful thing `LinkedList` can do is function as a ordered queue, which I find `ArrayDeque` does better. I just can't find a use for `LinkedList`.
Before you do any refactoring, make sure to watch this talk. And ask yourself, do you really need the reactivness, right now? I'd wager, probably not. [JDD 2018: Reactive programming: lessons learned by Tomasz Nurkiewicz]{https://www.youtube.com/watch?v=5TJiTSWktLU} The speaker outlines a number of issues that have already been mentioned. I've worked with a lot of reactive microservices, and can say that they are overly complex for little gain.
Just use SDKMAN! and you'll never struggle to find downloads of it again. Java is far from dead.
I get ‚Äúno results yet‚Äù when adding to my RSS reader
Two of the most important rules when designing APIs are: ### Know the problem domain Your API can only solve problems in its domain if you've understood the problem domain, completely would be the best. You can't just whip up some library in an area you have absolutely no expertise in...well, you can, but that library will suck, sooner rather than later. So understand the problem domain. ### Don't be clever, be consistent Every time you think "huh, that's a nifty shortcut, people will love this", don't! Really, don't! Just don't! You can provide it as an extra helper layer, but don't build "clever" stuff into your API, ever. It just sucks. Just build an API that works and gets the job done in the most easily usable and most readable way. If the user must write boilerplate in the process, they can always wrap your API or you can provide an extra layer handling that, but don't be clever. And while we are at it, be consistent. When all functions accept the object ID as the first parameter, except that one function over there, people will stumble over it, constantly.
 &gt; It‚Äôs kind of sad but it looks like Oracle is finally achieved it‚Äôs goal of killing off java. Oracle never had the goal to kill Java...they want to make money off Java quite badly, and hurt it in the process, but they don't have the goal to kill it.
I'm not seeing a link to *your* benchmark. And there's a lot of complexity you're not talking about. Such as how to maintain the free list in the array, which is needed when objects are added and removed from the actual list. And the copying operation when the linked list exceeds the size of the pre-allocated array. Then there's what happens if you are currently iterating the list at element X and you want to insert an item, but there's no more room in the current array. I'm not saying any of this is unachievable, but it's a hell of a lot harder than simply "use an array".
It was an example for the **"most simplistic model"**, as i said, where the allocation is performed via a pointer increment in an infinite heap.
No, I'm not absolutely wrong. Every enum instance is its own type. Look at the byte code ... Or how exactly do you think you can overwrite a method in every instance? Hu? How should that work if they are "objects" aka instances of the same type and not subtypes of the "enum class"? &gt; Seriously, read the spec. You have been misleading your customers! No, I don't. As we don't need to talk about simple stuff like this :P I only ask them to get rid of full capitalized names. Again: enum Numbers { one, two, three } introduces FOUR types and three singleton instances named one, two and three, which are class one extends Numbers {} class two extends Numbers {} class three extends Numbers {} Obviously the language and the compiler does not allow you to use one, two and three as types. Hint: get down from your high horse, and read the specc, and comprehend it :P (Learning SmallTalk helps, too)
Ha! There will be plenty of people with Java skills, and likely even more over time. I‚Äôm not sure where you‚Äôre getting your information. I just think you came here to troll us :) In terms of tutorials, Oracle offers some great ones [here](https://docs.oracle.com/javase/tutorial/).
If startup time is a concern, [ahead-of-time compilation](https://openjdk.java.net/jeps/295) might be of interest to you. In terms of using serverless with Java, [Fn](https://fnproject.io/tutorials/JavaFDKIntroduction/) would likely be helpful.
&gt; Or how exactly do you think you can overwrite a method in every instance? Did you not read my comment? **If you define a class body** then yes obviously this creates a subclass. This goes by the rules of anonymous class declarations. But whether they create a new class is irrelevant, because either way **they also create an instance per enum constant**. What would be the point in a singleton class with no instances? Again, the capitalised name is the constant which refers to the instance. It is not the type name. So why do you insist that they be names according to the convention of type names and not the convention of constants? The clue is in the name! [Enum **constants**](https://docs.oracle.com/javase/specs/jls/se12/html/jls-8.html#jls-8.9.1). The part about defining a method body is as follows: &gt; The optional class body of an enum constant implicitly defines an anonymous class declaration (¬ß15.9.5) that extends the immediately enclosing enum type. The class body is governed by the usual rules of anonymous classes; in particular it cannot contain any constructors. Instance methods declared in these class bodies may be invoked outside the enclosing enum type only if they override accessible methods in the enclosing enum type (¬ß8.4.8). Which is roughly how I described it.
Yes it is more complex, but a mist can be much more efficient than an array. In a list you just need to represent the next of an element. You can use a pointer to a class like EltList but you can also use an index in an array (a pointer is no different than an index in memory)
Hey! You should try sololearn. It's an Android app with a lot of course and tips on java and other programming languages. Enjoy
&gt; If I need to repeatedly remove middle elements, with an ArrayList or raw array+count, I can simply move the last element to fill the space of the "removed" element. That's O(1). In this case, you lose the ordering &gt; If I need to preserve the exact order of the collection, then removing from a LinkedList by index is not going to be better than removing from an ArrayList by index, because although with LinkedList it's O(1) to unlink the element, it's O(n) to find it. In this case this is a bad usage of the list. When you use a list you have to be able to a have an access to the element Here is an exemple. You want to have a list of 10 elements from 0 to 9 Create 2 arrays: One next array, one prev array, The next and prev arrays are used to manage the list. When you want to remove elt i you immediately acces to its next or prev. Then you can link your Object to the index, either by saving it in your object or by using an hash table
Thanks a lot! Will definitely try it out!
Yes I am sure Stroutrup knows nothing and an idea that makes perfect sense given what we know about architecture is absolutely non sense. Thanks for the insight.
The most effective learning is by actually writing code, which is very hard to do on a mobile phone without the usual interface and tools.
Open [https://docs.oracle.com/javase/tutorial/](https://docs.oracle.com/javase/tutorial/) in any browser.
Buy the java book with the highest customer rating from Amazon.
I just get a spinning clover. Also what‚Äôs the point of the login?
It looks like in your [submission](https://www.reddit.com/r/java/comments/big5bd/java_8_update_211212_noncommercial_licence_and/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
bad bot
Hmm not sure why you're not getting anything. Login is for saving favourite articles
It's not an rss reader, it just collects rss feeds and displays them. Good idea though, might be an easy way to do that.
for java 8 he's sadly not wrong afaict. i wanted to upgrade from _122 to something near _200. ended up getting it through ubuntu, but for a download i found nothing
An array of pointers is still more cache-friendly than a linked list of pointers. It's one indirection vs two.
Cross-Origin Request Blocked: The Same Origin Policy disallows reading the remote resource at [https://api.codetabs.com/v1/proxy?quest=https://blogs.oracle.com/java/rss](https://api.codetabs.com/v1/proxy?quest=https://blogs.oracle.com/java/rss). (Reason: missing token ‚Äòuser-agent‚Äô in CORS header ‚ÄòAccess-Control-Allow-Headers‚Äô from CORS preflight channel).\[Learn More\] Cross-Origin Request Blocked: The Same Origin Policy disallows reading the remote resource at [https://api.codetabs.com/v1/proxy?quest=https://blogs.oracle.com/java/rss](https://api.codetabs.com/v1/proxy?quest=https://blogs.oracle.com/java/rss). (Reason: CORS request did not succeed).\[Learn More\] TypeError: NetworkError when attempting to fetch resource.
If you're not using any builds in production, you can use any build you want. If you need to use a build in production, you can use [OpenJDK builds](http://jdk.java.net) or builds from other vendors, such as RedHat or Amazon. These are free. If you want to use an Oracle JDK build in production, you will need a license.
If you're using Java 8 on your desktop for non commercial use, you should still be supported by Oracle until next year. I think that includes the JDK. I recommend upgrading to newer versions, if only because the language is getting nicer.
Long story short, if you are only using for your own personal, non-commercial use, you can still use the Oracle JDK without any issues. If you are using it commercially, you need to use OpenJDK instead, which has feature parity with the Oracle JDK.
I believe openjdk does not have feature parity with oracle jdk. Last I heard it‚Äôs missing things like javafx.
This is not true. JavaFX was removed from both builds. Oracle JDK builds and OpenJDK builds are now equivalent. All previous commercial features have now been open-sourced. The only differences are the support period and license.
Doesn't work in Firefox or iOS Safari. Works in Chrome though.
Thanks, didn't test in Firefox
Can vouch for Hazelcast its great
My own two cents, but at this point I think everyone should be moving over to OpenJDK if they aren't already. Red Hat taking over stewardship of OpenJDK 8 and 11 ([https://www.redhat.com/en/about/press-releases/leadership-openjdk-8-and-openjdk-11-transitions-red-hat](https://www.redhat.com/en/about/press-releases/leadership-openjdk-8-and-openjdk-11-transitions-red-hat)) and their work on Shenandoah ([https://wiki.openjdk.java.net/display/shenandoah/Main](https://wiki.openjdk.java.net/display/shenandoah/Main)) shows why the future of OpenJDK has never been brighter.
I agree! I think most will go with OpenJDK or another vendor. We just need keep spreading information about the new changes so the general developer population knows, not just those following closely.
Head first java
There's free Python and c++ compilers in Android. The java one is paid but pretty good.
For OSS projects, you forgot: - Jackson - Neo4j - DL4j - Firefly / JBoss Just to name a few.... Really not sure where you‚Äôre getting your info from but plenty of startups turn to Java (as well as other languages), I‚Äôve worked for a couple now. Also don‚Äôt forget, Java is a first class language over at AWS. It may not be the explosive growth you‚Äôre looking for, but Java is a major player in Enterpise and backend development. And you can‚Äôt really expect explosive growth for a mature language, esp when there is a new language coming out every other week and new developers are constantly looking for the new shiny object.
This guy didn't RTFM
https://aws.amazon.com/corretto/
Yeah as you've found JMS is likely a bit heavy for your use case. Maybe try [guava EventBus](https://github.com/google/guava/wiki/EventBusExplained)
Oh awesome, at first blush this looks perfect. Thanks
https://adoptopenjdk.net/ You can get totally free to download and use JDK/JRE binaries here. You have the option of both Hotspot (OpenJDK) and OpenJ9. Have a bit of a bias as I am an IBM developer advocate, but OpenJ9 is legit as it offers substantial memory savings when compared to other JVM implementations.
Besides the very well informed posts of other redditors here, where you learnt that for your personal projects you don't need a license perhaps the platform you work on can determine which Java distribution to use. What OS do you mainly use? Usually it is very easy to maintain an up-to-date installation of OpenJDK in Linux systems. This can be a factor in your choice. On the other hand, if you work on Windows, perhaps installing an already built EXE by Oracle is easier.
Seems you are either nitpicking or bad in english. Obviously in this: enum Numbers { one, two, three } one, two, and three are the names of the instances. BUT: one, two and three are SUBTYPES of Numbers. No idea why you want to nitpick about that. If they are modeled as anonymous inner types, then they are subtypes ... so, do you want to nitpick, or do I miss something?
This includes the jre as far as I understand it as well. Because you technically install a jdk or a jre instance on a deployment server. The grey area (of understanding) is... im pretty sure is a no no... But you cpuld complie on a oracle jdk and then run openjdk on the server..
For what it's worth, ActiveMQ (which is an implementation of JMS) allows you to start a broker internal to your application and then the communication is done in-memory.
Yeah, that is an interesting corner case. I‚Äôm sure it‚Äôs mentioned somewhere in the license.
I look forward to them releasing their own binaries, which will make that easier.
I believe these days you should be using Artemis over ActiveMQ "classic".
There is no such thing as a "JRE distribution" any longer.
The identifiers `one, two, three` are not `types`. They are *instances*. And for the last time they are only instances of anonymous subtypes when they declare a body, otherwise they are just instances of `Numbers`. The point is that the constants are static final fields. The names `one, two, three` are the names of fields, not of type names. So their naming should reflect that. How many times will I have to repeat this? You *now* say that "obviously they are names of instances", and yet this whole time you have repeatedly denied that they are fields.
Most game loops I have seen use a hybrid sleep / spin wait strategy that sleeps out some of the delta and then spins the rest.
Meanwhile the new language features get implemented by Oracle.
dont use oracle garbage
OpenJDK 12 download, atm: https://i.imgur.com/1GfXSrA.png
Nope. If the linked list node and data lie in the same cache line; then it might be two indirections, but only one cache miss. An array of pointers could be have the array on one line and data on another; then it‚Äôs two cache misses. Talking in absolutes is a problem as the layout of memory, operations performed, and the environment in which it‚Äôs operating all have bearing on how efficient things are.
I don't know what you're trying to say. Java is a language specification. The development of the language (which includes new language features) is the responsibility of the JCP (Java Community Process). There are many implementations of the Java specification. The Oracle JDK is one, as is OpenJDK. &amp;#x200B; The mechanism of the JCP (using JSRs) is one of the many reasons why Java succeeds. Java has community support and a well defined process of what becomes new language features. Other languages struggle with this whereas Java has done a really good job with it.
Oracle JDK is 99% based on OpenJDK, and the large majority of people writing OpenJDK code, and JEPs, are Oracle employees.
[Azul Zulu](https://www.azul.com/downloads/zulu/) is offering Java 11 JRE downloads for Linux, Windows, and Mac. That's the only JRE 11 distribution I know of, though.
&gt; Nope. Sounds like you mean "not necessarily". &gt; Talking in absolutes is a problem Stop doing it then?
FWIW I think that ActiveMQ feels a lot more mature than Artemis. The latter might have a more modern API but I've ran into a number of weird configuration issues that I didn't get with ActiveMQ.
Learn from a book - coming from someone that switches off after 5 minutes of listening to someone talk.
I am sorry for you, but this talk is really bad. Stroustrup badly uses list by considering that a direct access is required (see my other anwsers in this thread). Stroustrup is an architecture and a language specialist but it is clearly not an algorithmist
It's important to note that that's only true for Java 11+
Docker images are stored in the registry with 1 tarball per layer, not per image. You can see it in action any time you do a `docker pull`.
Hey thanks for trying it in each browser for me. I've managed to fix Firefox (might need a shift+reload to bust cache). Wondering if you could try Safari for me again? I don't have a Mac so can't test. Thanks in advance.
Just as a warning, the first lines of the Readme quotes : &gt;It is not a general-purpose publish-subscribe system, nor is it intended for interprocess communication.
Oracle JDK 8 is no longer supported while Amazon Corretto 8 has JavaFX included.
Thanks for info, I've never called `docker pull` to see that )) What about `docker save --output saved-image.tar my-image:1.0.0`? What if I don't use registry? How do things work in a cross registry environment (dockerhub for base image, private for own images)?
Azul still provides [JDK with JavaFX included](https://www.azul.com/downloads/zulu/zulufx/) for convenience.
`docker save` bundles all the layer tarballs into a single tarball. The cross registry thing is pretty common; you pull the base layer from dockerhub (unless you also pushed it to your private registry) and then you pull your own layers from the private registry.
not always ;-)
Have a look at Apache Camel. It implements internal queuing as well as numerous other patterns. https://camel.apache.org/seda.html
&gt; Oracle Commercial: you are still linking to OpenJDK builds page. Commercial from oracle are [here](https://www.oracle.com/technetwork/java/javase/downloads/index.html)
/r/Javahelp
&gt; com.sun.beans.* this is not a public API and you should NOT be using it, that's why
You can't download it even if you ignore the certificate error, [https://download.java.net](https://download.java.net) links give &gt;**An unauthorized request.** Errors. This is just astonishing level of incompetence, even for Oracle. Sure makes me want to buy a license.
It looks like in your [submission](https://www.reddit.com/r/java/comments/bint8k/vavr_try_with_either/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
How's OpenJ9 compared to OpenJDK performance-wise nowadays?
That would be a great point if it weren't for the fact that Oracle has fucked up their certificates and otherwise broken https://download.java.net so you literally CAN'T download OpenJDK anywhere from their site at the moment. I'm sure it'll be fixed eventually but it has been down all weekend so obviously this isn't a particularly high priority. Sure, you can get some builds from 3rd parties but who am I to tell which ones are trustworthy and which are full of malware without making a lot more significant time investment than a Google search? Perhaps next time you could try for yourself if those google links actually work before being a condescending jerk?
hmm sdkman was able to download java11 and 12 for me https://sdkman.io/
**Java SE 8 Update 202** is the last free Java SE update from Oracle. This one supports applets. [OpenJDK from Oracle](http://jdk.java.net/) is free and it is a reference implementation. Other releases of Java that are free: * AdoptOpenJDK: [https://adoptopenjdk.net](https://adoptopenjdk.net/) * Azul: [https://www.azul.com](https://www.azul.com/) * IBM: [https://www.ibm.com/developerworks/java/jdk](https://www.ibm.com/developerworks/java/jdk) * Eclipse: [https://www.eclipse.org/openj9/](https://www.eclipse.org/openj9/) * RedHat: [https://developers.redhat.com/products/openjdk/overview](https://developers.redhat.com/products/openjdk/overview) * SAP: [https://sap.github.io/SapMachine](https://sap.github.io/SapMachine) * Amazon: [https://aws.amazon.com/corretto](https://aws.amazon.com/corretto)
Thanks, I added the link.
I wrote a small list of intellij shorts which my colleagues and I use on a daily basis, and hopefully it might help others!
&gt; Oracle has fucked up their certificates and otherwise broken https://download.java.net Wasn't your point that Oracle are a bunch of untrustworthy gits who hate Java? Why are you so keen to get OpenJDK from them specifically if you don't trust them? &gt; Sure, you can get some builds from 3rd parties but who am I to tell which ones are trustworthy and which are full of malware without making a lot more significant time investment than a Google search? JDK distros are available from (among others) RedHat, Amazon, IBM, and SAP. If you don't want to do due diligence on your software supplier, just pick one of those familiar names. I think we can trust that none of them are distributing malware. &gt; Perhaps next time you could try for yourself if those google links actually work before being a condescending jerk? I'm sorry you feel that way; I didn't mean to be condescending. I honestly feel that it doesn't take a great deal of search engine fu to find an OpenJDK download. But for your convenience, here are links to the "big-name" JDK distros I mentioned above. RedHat https://developers.redhat.com/products/openjdk/download Amazon https://aws.amazon.com/corretto IBM https://www.ibm.com/developerworks/java/jdk SAP https://sap.github.io/SapMachine I affirm that I've tried these links myself and they work. (NB: RedHat download required free registration with an email address.) If you just want a low-hassle JDK 11 from a name you can (hopefully) trust, I'd suggest Amazon.
Check out Vert.x: http://vertx.io/
You mixed up Ctrl+Y and Ctrl+D.
nice write up, with some stuff i didn't know (press SHIFT + F6 twice for example). One I personally like to use is CTRL+SHIFT+A to search a certain action or shortcut. (nowadays it is also integrated in the menu when you click SHIFT twice).
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
&gt;Other releases of Java that are free: &amp;#x200B; "free" as in "*free corresponding to the GPL (with classpath extension)*", but no "free" as in "without any restrictions" The GPL limits the "freedom" quite substantially - but that was already the case when Oracle was the exclusive owner and maintainer.
The article is short as that shift from the preview image.
Nice, thanks! =) &amp;#x200B; Double-Shift is more: It additionally searches... everything... So whenever you forget a shortcut and you remember the correct name of the action, you should be able to find it here. &amp;#x200B; Some other shortcuts I often use and find quite handy I find CTRL + ALT + left/right: Navigates through last locations, like back or forward buttons, within classes. CTRL+SHIFT+Backspace to last edit location. CTRL+B -&gt; jump to declaration, CTRL+ALT+B -&gt; jump to implementation CTRL+E -&gt; There's also CTRL+SHIFT+E, which shows the contents of the recent files (if you can't remember the darn name) ALT + Insert is 'Generate' (Constructors, getters/setters, ...) CTRL + I is implement, CTRL + O is override Refactoring: CTRL+ALT+V: Extract variable -&gt; Use F for field (member var), C for constant (static), P for parameter (as in method parameter) Git/VCS has some handy shortcuts, ALT+9 is git log, CTRL+K is commit, CTRL+SHIFT+K is push. &amp;#x200B; And there's probably dozens of other handy shortcuts left... I still often watch someone and be like "Hey, how did you do *that*?!" Like I didn't know about CTRL+SHIFT+Enter, I try to remember this one :-)
haha. Oops!! Thanks for spotting it, I'm going to fix it right away!
Great stuff, definitely a couple on here I should have been more aware of. The biggest omission I noticed that I use extremely frequently is Ctrl+Alt+H to view method hierarchy. More informative and easier to navigate than the Usages window imo.
Liberica JDK is a free binary OpenJDK distribution: [https://bell-sw.com/java.html](https://bell-sw.com/java.html) Current versions: 12.0.1, 11.0.3, 8u212
BellSoft: [https://bell-sw.com/java.html](https://bell-sw.com/java.html)
My favorite is ALT + J for select next occurrence. Multicursor is crazy useful. Once you get good with arrowkeys + modifiers and home/end it makes creating/editing stuff with the same pattern much easier.
The short answer, noticeably better than OpenJDK. The long answer, performance is a nebulous term. Performance metrics include; throughput, memory usage, startup, shut down, etc. So which JVM performs better might vary depending upon the particulars of your use case. All that said, OpenJ9 generally has as good throughput, startup, and shutdown, and VASTLY better memory utilization (generally ~40% less than the other JVMs). I put together a demo comparing the performance of OpenJ9, OpenJDK, Corretto, and Hotspot. You can view the demo on my github: https://github.com/wkorando/openj9-batch-processor If you are using a *nix system and have Docker installed you should be able to run the demo on your system without issue. I would recommend using [demo-v2](https://github.com/wkorando/openj9-batch-processor/tree/master/demos-v2). As I have incorporated updates and enhancements from lessons learned. Let me know if you have any questions about the demo or OpenJ9. I do still need to do some clean up to that demo, along with (vastly) improving the documentation.
Thanks for the feedback. I didn't want to list ALL the shortcuts, that would go a bit far. I mean, you can also do Ctrl + Shift + Space, which will be a smart code completion, and you can also code complete with ! instead of Enter and Tab, which will put the ! at the beginning. I used Generate quite a lot, but now I switched to Kotlin, I find the need for this less. The implementation of interfaces etc I usually do with F2 -&gt; Alt Enter.
I was afraid you'd say: as short as the space bar....
There is a base Liberica JDK image built for musl. And you can easily get 37 MB, 100 MB or 180 MB image by choosing an option: [https://hub.docker.com/r/bellsoft/liberica-openjdk-alpine-musl](https://hub.docker.com/r/bellsoft/liberica-openjdk-alpine-musl)
Interesting! Thanks for sharing, I tried using it, but the focus always goes to the hierarchy screen, and it somehow always shows me the wrong information. Maybe I should have another look at it.
Really weird, the certificate contains a bunch of DNS, except the [download.java.net](https://download.java.net). The guy maintaining the URL should have mixed certificates or something... This is impacting A LOT of people. I cannot do a maven build because of a dependency on this url... Anyone knows how to contact them ?
In JDK 9+ you can use jlink to create custom runtime image for bundling with your application. [https://docs.oracle.com/en/java/javase/11/tools/jlink.html](https://docs.oracle.com/en/java/javase/11/tools/jlink.html) Liberica JDK is free to bundle, it has jlink, and it also contains OpenJFX for many platforms [https://bell-sw.com/java.html](https://bell-sw.com/java.html)
Liberica JDK has a nice installer, file associations and it gets regular updates.
Liberica JDK has apt repository which you can use [https://www.bell-sw.com/pages/liberica\_install\_guide-8u212](https://www.bell-sw.com/pages/liberica_install_guide-8u212) 8: bellsoft-java8 for JDL or bellsoft-java8-runtime for JRE [https://bell-sw.com/pages/liberica\_install\_guide-12.0.1](https://bell-sw.com/pages/liberica_install_guide-12.0.1) 11: bellsoft-java11 12: bellsoft-java12
Yes, you have those 3 options. With some comments: 1) You probably mean Oracle JDK. But you can get paid support from other vendors like BellSoft for their binaries. 2) Please don't stop getting \_security\_ updates. You can still get 8u updates free to use in production, e.g. Liberica JDK 8u212 [https://www.bell-sw.com/pages/java-8u212](https://www.bell-sw.com/pages/java-8u212) 3) Probably it is to switch to some JDK binary that is not Oracle JDK.
Ah ok cool. Might be worth checking out. We have support agreements with AWS and RedHat though so might not be able to change. Anyway, startup and shutdown wouldn't matter for us since we have instances running for months between deploys. But basically a few thousand http requests and several thousand AMQ reads and writes per second. Usually the DB is the bottleneck though and I imagine that won't change at all no matter what JDK. Could be nice if we could scale down on server sizes though.
Also "semi column" should be "semi colon". Thanks for the list, a few I didn't know.
For Mac but it should be similar in windows: CMD + shift + v is multi clipboard paste. Such an useful tool!
Much, much more than 99%.
&gt; Java is a language specification. The development of the language (which includes new language features) is the responsibility of the JCP (Java Community Process). This is incorrect. [This video](https://youtu.be/HpbchS5kmio) explains Java's governance. &gt; The Oracle JDK is one, as is OpenJDK. Oracle JDK and OpenJDK are the same implementation, which is primarily Oracle's (Oracle contributes 80-90% of new work), but with some great contributions from other companies. Oracle and Red Hat cooperate in the development of OpenJDK, and the transfer of old OpenJDK versions to Red Hat's leadership has become a regular process, which has now happened for the fourth time in the past six years (Red Hat took leadership of OpenJDK 6 [in 2013](https://www.redhat.com/en/about/press-releases/red-hat-reinforces-java-commitment-and-assumes-leadership-openjdk-6-community) and of 7 [in 2015](https://www.redhat.com/en/about/press-releases/stewardship-openjdk-7-project-shifts-red-hat)).
Yea, at least my personal view is that start up and shut down speeds are somewhat overhyped. Don't mistake me, for certain use cases like serverless, or for organizations running at extreme scales; Google, Netflix, etc., startup and shutdown speeds could have no trivial impacts on operation costs and performance. However those are generally edge cases. The *vast majority* of the Java user base are working with long running processes (long running being any process running for more than an hour), or do not operate at the extreme ends of scale. OpenJ9 is totally free to use, and I haven't worked enough with AWS to know how easy it would be to try it out in their environment. Are you running docker containers in PROD and/or have shell access to the instances you are running? Personally, if you were interested in trying out OpenJ9, I would recommend doing A/B testing. If say you have 4 instance of your application running, have one running OpenJ9 and compare the performance (in whatever way that is meaningful to your org). All that said, if you're anything more than a startup organization, having that paid commercial support is understandably important. IBM offers commercial support as well for [OpenJ9](https://www.ibm.com/cloud/support-for-runtimes), but I doubt you'd save enough in operation costs to justify the switch *while still having a support contract* with RedHat and AWS. Anyways, you are right the JVM you are using wouldn't, or at least shouldn't in a predictable/deterministic manner, have an impact of DB performance. The big improvement OpenJ9 offers is, as I initially mentioned, in reduced memory consumption. At a high level, it seems likely you'd might be able to scale down instance requirements, but there are a lot of factors beyond "raw" performance that can go into making that determination (e.g. failover reliability). Anyways, more just thinking out loud about the considerations around choosing a JVM (for anyone else who might stumble upon this thread). Not trying to hard sell you on OpenJ9. :)
\`Ctrl+W\` (expand selection??) is extremely useful. I use same in Emacs (\`er/expand-region\`). NetBeans analog \`Alt+Shift+.\` (dot) is hard to type and remember ((
I understand where you're coming from. :) But yeah we have commercial support already so we would have to switch that and I think that would be (practically) impossible. We're mostly using huge on-prem instances but a few things are running on EC2 instances or in lambdas. We've avoided docker until we can migrate to later JDK versions with better container awareness.
Pro-tip: you should remap ‚Äúfind usages‚Äù to Ctrl-Shift G. This happens to be the Eclipse shortcut for this, but it‚Äôs not used in IntelliJ for anything. I use this function constantly and it‚Äôs way easier to type than moving your hands all the way to the function keys.
What does this have to do with Java the language or the JVM? There is a forum on Reddit for Intellij: [https://www.reddit.com/r/IntelliJIDEA/](https://www.reddit.com/r/IntelliJIDEA/)
That's a good idea !
&gt;When you use a list you have to be able to a have an access to the element No I don't. Sometimes I just want a jumble of objects that are currently present in a game world for example. In that case it doesn't matter what index they have. &gt;Here is an exemple. You want to have a list of 10 elements from 0 to 9 Create 2 arrays: One next array, one prev array, The next and prev arrays are used to manage the list. When you want to remove elt i you immediately acces to its next or prev. Then you can link your Object to the index, either by saving it in your object or by using an hash table . In this case tyou can remove ONE element and have a consistent data structure Speak English? &gt;your data structure is not consistent after each removal of elements. What do you mean by "consistent"?
These are also useful for me: Ctrl + Alt + T (surround with... try/catch, if etc) Ctrl + J + iter/fori/...(generate loops) Ctrl + Alt + O (optimize imports) Ctrl + Alt + L (format code)
Oh I know 'os-has-shortcuts-too'-issue... I'm on linux, and 'trying out' another window manager ends up in 'figuring out how to disable all the shortcuts'
Same problem when I wanted to download virtualbox yesterday. You can use http until they fix it.
Java will slowly die if openjdk doesn't catch on. This is the first time I'm reading about the license changes, and I really rethinking keeping up with Java developments. What a shitty move.
Thanks, I've fixed that too, thanks for spotting it!
Seems to work in FF and Safari now. Great job.
!remindme