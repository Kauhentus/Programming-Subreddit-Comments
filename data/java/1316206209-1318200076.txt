The smallest unit, in this case day. But you do have a point. Someone assuming datetime would have some trouble reading that code.
Feb 30, 1712, Sweden. Look it up.
I envision a world in which everything is a lot simpler than it is in Java. Nobody has shown me that world yet, only fragments of it. Some of the fragments are in Smalltalk, Scala, Python, Haskell. None form a coherent simpler framework based on all the possible simplicity criteria.
This one came up today in work: Given some Collection of items of type T, return a collection of the same type, containing only the items that pass some predicate. Ruby: items.collect { |item| item.param &gt; 3 } In Java you need to type far more code. 
No, java is just fucked up when it comes to dates. Zero based month numbers? Date constructors based on the year 1900!? etc. It's a seriously WTF bad design.
Every single one. (I started writing Java in '96 and it's still my main professional language. I'd *much' rather write Python.)
[I hate to be that guy, but...](http://www.urbandictionary.com/define.php?term=public%20static%20void%20main%28String[]%20args%29)
Function pointers. You have to define a new Runnable (or similar class) instead, and every one gets a separate class file. It's yucky.
Haha fair enough. I'll stop lurking and post stuff I find from now on!
Regexps are pretty awkward. For anything other than trivial replacement you have to manually set up a `static final` Pattern object (so the regexp isn't recompiled every time) and then set up your local Matcher object and manually step through the matches sticking it in a new StringBuffer with Matcher.appendReplacement and all the rest. It's still much easier than doing without regexps, but when you compare it to Perl or PHP or JavaScript regexps (maybe others?), it's dramatically less elegant and convenient.
Making a gui... properly. So many gotchas, so many pitfalls, and most people don't even know they exist so we have tons of really glitchy and poorly implemented guis. Most things in programming you have multiple ways of doing things right... sadly, the Java gui must be done the right way, and only the right way, to be proper.
You should still post ElasticSearch. IMHO it's really interesting. I'll upvote you.
I see your unsigned integers and raise you unsigned long longs.
Java 8 to the rescue!
Java 8 to the rescue!
But what? It can be done in one line in qbasic? You can do it in 4 keystrokes in java: ctrl + c ctrl + v See? It's not at all hard to write a hello world in java.
...Not sure if trolling.......
Will do. Cooking up some schnitzel for early Oktoberfest but will do so tomorrow. Hehe
From my experience many other programming languages use the zero based month numbers, PHP is one that comes on top of my head (or was it Javascript?)
Well, other frameworks making the same mistake doesn't really justify it. When you see the number "3", you dont think "April". It's a bad design screwup. And the constructors for the core "Date" class assumed the year 2000 would never come. That's pretty bad for a language designed in the 90s. The Calendar class is also a pretty horrible abominationâ€¦
Well if you need someone to shoot you in the foot.... /joke
Allot of people got / getting burnt by Swing.
It's not *that* much more if you use [Guava](http://code.google.com/p/guava-libraries/): Collections2.filter(items, new Predicate&lt;Integer&gt;() { public boolean apply(Integer item) { return item &gt; 3; } });
Thanks! Now I can delete some code from our codebase and replace with a single call to Guava. I love finding a library that does just what you need. 
Using transform with Function is pretty great as well: List&lt;String&gt; strings = Arrays.asList({"1", "2", "3"}); Collection&lt;Integer&gt; ints = Collections2.transform(strings, new Function&lt;String, Integer&gt;() { public Integer apply(String input) { return Integer.parseInt(input); } });
Parallelizing stuff. It is so much easier in C# with Parallel.For/ForEach/Invoke.
JavaScript's date stuff used to be just the worst shit ever. Now it just sucks.
It *is* horrible. I am remembering fondly my C++ days of having to write our own Date libraries. Sometimes, if you want something done right, you have to do it yourself. In a pinch, though, I found that using sql.Date is easier and gets the job done.
Not sure I agree with your premise that Java is complicated, though. By "simple" do you mean "terse", or are you referring to the variety of classes that make up stuff like structures or arrays?
Coming from Python, I really dislike working with JSON data w/ Java. If I knew more Java, I probably wouldn't be complaining. But until JSON, trying to port foo to Java was pretty simple.
No, thats not the one (tis still a nice link though, so thanks for that), but the one I'm after didn't cover JSPs.
This is absolutely terrible. What the heck is 'a - 7'? Just adds to the list of arguments against Ruby.
You want OSGi. Look at Eclipse Equinox or Apache Felix.
PRAISE SCIENCE!
Joda is fantastic, but it won't correct a weak understanding of how time is represented and manipulated in computers. I now require any developer that wants to discuss timestamps, timezones, etc with me to read [this](http://www.odi.ch/prog/design/datetime.php) first. Not understanding that System.currentTimeMillis() *always* returns time in UTC makes for very frustrating discussions. You can't *convert* such a timestamp, only express it in different timezones.
Good lord, faking signedness sounds terrible. What algorithm possibly demanded that?
~~Java 8~~ Scala to the rescue!
Especially a large scale one. Managing dependencies for a complex object graph without declarative DI is nasty enough, a swing gui is even worse. Java needs something like flex and c#: *declare* your layout and components, then code up your functions to handle actions on them. It seems like a much better model.
The decorator patterns in java.io.* are actually very useful once you get to know them, but it could definitely be much easier to do common, basic tasks, like do something for each line in a file.
See fork/join in java 7, Executors in java 5+. Forget threads, break your app into tasks and give them to an executor, much better.
I've heard good things about gson...
jvm
^^ your and idiot
compare to Groovy: 1) println "Hello World!" 2) Eat a snack.
Pretty sure copy/paste isn't the same things as 'writing'. I could copy/paste a million lines of code, that doesn't speak to the topic which is &gt;What programming task is a lot **harder than it should be** in Java? 
other technical subreddits have tried to do this, but the thing is whenever you start banning questions you also start banning a lot of conversation. A lot of the threads that start as simple questions actually can turn into very interesting discussions about different ways to accomplish things, or alternate libraries to use... wheras on the other hand links to random articles don't usually generate a lot of conversation.
SWT is pretty awesome though. Bare to the metal, uses native widgets of each platform, and fast.
That's what we ended up using. I guess I take the Python ( /iPython) Interpreter for granted sometimes. Like when exploring json trees, and so on. I didn't think you'd have to make classes and attributes for every object in the JSON data. Guess it was a good learning experience, but they say a programming language is like a tool for a specific job, and I'd def. go Python for something like this.
I read the topic. I'm saying it isn't actually that hard. Either you know the language, and it flows out of you easily, or you don't and it's about 40 characters that can paste in until you know what you're doing. 
I did look into SWT too back in the day as well, not too bad. I wrote my own Gui / Event model. I needed something more flexible being into real graphics. Written in such a way it can be trivially back ported to C and will look the same on any system. It's not too tricky, but I don't recommend you do it unless you need too or want to learn the nuts and bolts of making a Gui from the ground up. :-) .^edit^corrected
Some protocols and file formats have unsigned numbers in them. 
The String and Integer classes should both already implement the compareTo method. CompareTo is generally used for sorting. The return values represent a sorting order for the objects it's used on: negative if it comes before, zero if equal or positive if it comes after. The actual value of the int doesn't matter, just that it's less than, equal or greater than zero. For Strings you are determining the lexical order, generally alphabetical. To do this compare the strings character by character.
Streaming, File I/O is still a little verbose. Buffered Reader to Buffered InputStream to PrintWriter to Buffered OutputStream...seriously? Web Application Development with popular web frameworks like Struts, JSF. The collections API could be a little simpler. You have a Queue which is a List which is a LinkedList but a collections....etc. 
hmm...i see. thanks. 
Reading and writing to a file.
I actually wanted to say dates...since that's taken, Threads. Nearly every Relevant function is deprecated.
Nah, I just like slinging about assertions about frameworks. ;) Yeah, work experience. Granted, it was about 8 months back, but I'm not aware that any of these things have been changed ([ROO-120](https://jira.springsource.org/browse/ROO-120) remains unresolved).
Perhaps you'd care to elaborate on what you mean by 'all the possible simplicity criteria'? Who knows: one of us may be able to point the way.
upvote = upvote | 1;
I'd really love at least javascript style regexps in java. Though it would probably just lead to a lot more bad regexes in the wild... 
~~Java 8 Scala~~ Clojure to the rescue!
Guava is worth it for this alone. The joiner/split classes are delicious gravy on top.
I see a lot of people giving the answers I'd give (regex, date/time, functions as objects). A lot of libraries like joda and guava make Java play better with some things. But there's one are where it can never be improved because of the design of the language: infinite precision math. Java supplies BigInteger and BigDecimal classes, but because it does not allow operator overloading, using them winds up looking like BigInteger value = (new BigInteger("70000000000000").plus(new BigInteger("44444444444444"))).divide(new BigInteger("13123123123123")); rather than simply value = ( 70000000000000 + 44444444444444 ) / 13123123123123
Working with xml.
Oh no, you have to use signed integers and waste a whole bit! Also, anything to do with 5-bit integers, 9-bit integers and 53-bit integers is just too damn hard in Java. And how can any language not have a built in type for 79-bit integers!
Well, there's a difference between "there is no way to access this memory, all the handles are gone and it can't be freed" and "I forgot to null that array after I was done with it". 
&gt; An integer seems simple enough because it would just be a couple of if statements. In Java 7 you can use the new Integer.compare(int, int)
Great point!
can you use assertEquals?
Simple code (readable, expressive), Simple framework conceptually (everything is a *),Â¨ Simple to compile/deploy/reuse/connect libraries/refactor - those are some of the criteria. 
I suppose Java is as complicated as C#, and more expressive than Basic. Scala is a little more complicated (I think), but a lot more expressive and less verbose. Python: less verbose. Smalltalk, Lisp, Forth: simple conceptual model, much less verbose. Haskell: conceptual model with no upper bound of complexity, actually quite a bit of syntax. For simplicity: take Smalltalk code like myFileHandles do: [:each| each printOn: myScreen] and see what it typically looks like in the mentioned languages.
To be fair it's not an entirely awful design, there are reasons for that, basically when you have an array with the month names, the number 3 gets the 4th item in the array which is April.
The dust cloud he says he was in the middle of is probably [the one you see here](http://www.nytimes.com/2011/09/17/us/reno-air-show-crash.html).
I am aware of that, and I don't care :). January is month number 1 of the year, not number 0.
True that :). I haven't tried using sql.Dateâ€¦ For the most part, I use a clone of the Objective-C NSTimestamp class, but for some projects I use JodaTime which is extremely nice.
Everything. Just use Scala and get things done.
Or people stop putting lipstick on a pig and just do: items filter (_.param &gt; 3) :-)
 List("1", "2", "3").view.map(_.toInt)
The ciurrent C# version is more complicated than Java. Java 7 is like C#1.2.
It's 40 characters of pure confusion for beginners. That's way too much. "What's this 'public'"? "Ignore it!" "What's this 'class'"? "Ignore it!" "What's this 'static'"? "Ignore it!" "What's this void'"? "Ignore it!" "What's this prinltn()'"? "Well, actualy ..." "What's this 'String[] arg'"? "Ignore it!" "What's this 'System.out'"? "Ignore it!" 
It's not about wasting a bit, it's that the bits you have don't behave correctly when you need to replicate the behavior of a real unsigned integer. If you need an unsigned 32-bit integer you can use the 64-bit long, but you have to mask to the low 32-bits after some operations or before every time you display to get the right result. I've never had to deal with unsigned 64-bit integers in Java but I imagine that must be very awkward, because there's no 65-bit+ signed type. I suppose it has to be faked with BigInteger?
I prefer ThreeTen, it is in many ways superior to JodaTime.
If you are wondering why this is in r/java James Gosling "invented " the java programming language.
&gt;and every one gets a separate class file Anonymous classes http://littletutorials.com/2008/03/09/anonymous-inner-classes/ Inner class http://download.oracle.com/javase/tutorial/java/javaOO/innerclasses.html Go nuts.
Yes, every one of those gets a separate **.class** file.
That makes more sense but I dot see how that's a problem.
Because I once needed thousands of them and they're slow to compile, slow to load, and don't compress well.
Do you have an example of this happening?
WTF is he doing at an air race?
If you think you need to use those depreciated methods, you need to learn more about threads. They're depreciated because it's impossible to implement them correctly. There are proper, correct ways to do what you want. 
The JVM is Java's greatest strength.
Using sound is more complicated than it should be. And OpenJDK (6, never tried 7 yet) doesn't support sound at all. 
that should have happened in 1995 so he would be thankful for his life and not invent java.
And you'd be bitching about TCL.
Yeah. This would be what I'm trying to do.
i take that back. if there wasn't java, we wouldn't have groovy and scala. thanks gosling. http://www.drl2.com/blog/wp-content/uploads/2010/04/BuddyJesus.jpg
Especially is, say, self signed, or expired SSL certificates are involved.
mvn archetype:generate :D
He narrowly escapes death at the Reno Air races.
... enjoying it?
I learned Java with this book, and I **enjoyed it**. Now I' am getting ready for the SCJP.
PDFs are difficult to edit, by design. That fact and its consistency across machines is *why* people choose to distribute PDFs. Ask your source for a non-PDF version. If you're on a PC, there's probably no free/legal way to do it. I believe that the full version of Adobe Acrobat has a "TouchUp Text" tool which will let you make small changes (e.g. changing a word for another). http://lmgtfy.com/?q=how+to+edit+PDFs You should really post this elsewhere; this isn't a Java issue.
What criticalsection said. Also I'd like to add that sometimes a convenient way to edit the text is to paste a white rectangle on the page like wite out and then paste new text overtop it.
http://www.reddit.com/r/java/comments/hyz7z/which_java_apis_do_you_frequently_use/
* ~~[Google Gson](http://code.google.com/p/google-gson/)~~ See reply for Jackson * [log4j logging framework](http://logging.apache.org/log4j/1.2/) * [Spring Integration](http://www.springsource.org/spring-integration) * ~~[c3p0 - JDBC3 Connection and Statement Pooling](http://www.mchange.com/projects/c3p0/index.html)~~ See reply for BoneCP * [MyBatis data mapper framework](http://www.mybatis.org/) * [Hibernate ORM framework](http://www.hibernate.org/) * [Cucumber BDD Testing Framework](https://github.com/cucumber/cuke4duke) - also see [cuke4ninja](http://cuke4ninja.com/) for help on getting started! * [SpringSource](http://www.springsource.org/) there are loads of fromeworks to choose from here. I know I've put some obvious choices in there. I use the majority of these on a daily basis. Edit : Any alternatives or suggestions to better frameworks are appreciated! P.S Was talking about a new framework today [Disruptor Framework](http://code.google.com/p/disruptor/) - Not had a chance to use it but it is a concurrency framework.
They clearly shouldn't have included those to begin with....
* Joda Time * Guava * JCommander * JSoup * Apache Commons 
Yup, that's the mistake, not that they're depreciated. I don't know if they hadn't realized the impossibility at the time -- maybe because they used to be green threads -- or they thought correctness wasn't so important.
* GreenMail * MyBatis (seconded) * Selenium * TestNG Not really a library but: * Maven * Intellij IDEA
* Log4j * Apache Commons * Quartz * [XChart](http://xeiam.com/xchart.jsp) 
Yeah Guava is great, especially for the Preconditions class.
This. I can't recommend OSGi enough for module-based develpoment.
[slf4j for logging](http://www.slf4j.org/). I use it because it has string formatting and because it can bind to any Java logging library. You choose binding at runtime by including the .jar for the binding you want to use. Other than that I prefer to roll my own for most purposes rather than drag in a million dependencies. I hate dependencies.
* Spring * Hibernate * slf4j * Jackson * Mockito * asm (for the occasional javaagent) And: * IntelliJ * Maven
JRuby Ha, take that ;) On a serious not, * guava * lucene * guice
Compare to cLisp: "Hello World"
Anything and everything to do with networking...
I've used Gson and like it's simplicity, but if you are doing serious JSON parsing server-side, I recommend [Jackson](http://jackson.codehaus.org/). From what I've read and heard, Jackson is the way to go due to performance. See [this performance breakdown of Gson vs Jackson](http://www.cowtowncoder.com/blog/archives/2011/01/entry_437.html). Right-click and View Image on the chart as it is clipped. The [source code for their test](http://www.cowtowncoder.com/blog/archives/2009/09/entry_326.html) was in one of there posts 2.5 years ago.
On my phone so no links, but in no particular order the ones that come to mind are: Spring - lots here Apache Commons - lots here Hibernate JSR-223 for scripting JSR-310 for date/time SLF4J for logging Easymock Junit Jpa validation annotations Hessian Jackson for Json serialisation Freemarker for writing web views Dbunit Liquibase Aspectj
My colleagues and I really like [LambdaJ](http://code.google.com/p/lambdaj/). It gives you several methods that can be statically imported for manipulating collections in a functional style.
If you want to write a java program that can replace one word in a PDF with another word, then see the example provided by Apache PDFBox here: http://pdfbox.apache.org/userguide/cookbook.html. (under the link called ReplaceString). The source code is open source.
We use: JodaTime Mockito Google collections Slf4j Protocol buffers
Or, if you don't need the amount of stuff in Jodatime, look at Date4J. Very simple, one class datetime library. Not as complete as Jodatime, but Date4J has served me well.
In my opinion, it's dealing with value objects, primarily for addition/subtraction etc. Lack of operator overloading makes this a really painful process.
There's many languages that fit that bill. Assembler, C, Pascal, Modula and even some modern scripting languages could be put in that category. Hell, pretty much any language that wasn't designed by committee is 'simple'; sorry Java, Cobol, and Common Lisp - you're not in the club. But I don't think they're what you want. You say you want 'simple'. Well, assembler is simple. C is simple. They're small and fairly well defined and understood. But, if you wanted 'simple', you'd be using them now. Now, if it's "easy" you're after well.... take up something else. Programming is never going to be easy.
Apache Wicket. 
Cucumber is an awesome way to work. I use it with groovy for all my acceptance testing. 
Can you post all your code for me and I'll try to figure it out for you?
I like Sumatra beans, city roast.
in the second code snippet im trying to read numbers from a text file and insert each number into a separate cell until i hit -1, which is when the program is supposed to stop.
Thanks for the offer to help, but I think I've figured it out now!
Ah that makes more sense. Any idea how i would go about incrementing r2 and c2 so it goes through every cell? Thanks for the help.
- JodaTime - One-Jar - http://code.google.com/p/onejar-maven-plugin/ It builds a single JAR that contains your whole app. No more deployment messing. - Jetty (You can embed the webserver in main(), which combined with one-jar means you can run a webserver by executing a single jar: java -jar my-server.one-jar.jar 
Tablelayout. Much better than grid bag - and much easier to use.
[ModelMapper](http://code.google.com/p/modelmapper/)
JDOM H2 JFreeChart Jasypt JoSQL JGoodies htmlcleaner docx4j rhino Jazzy 
use 2 for loops
Mvn assembly and mvn jetty:run will cover both those last two without polluting your source tree...
Apache commons IO and commons lang are missing from this list. 
[Mockito](http://code.google.com/p/mockito/) is a pretty nice mocking framework, and [PowerMock](http://code.google.com/p/powermock/) adds additional features on top of it (like being able to mock static methods, and object instantiation).
c3p0 is dead, there are [Tomcat pool](http://people.apache.org/~fhanik/jdbc-pool/jdbc-pool.html), and [BoneCP](http://jolbox.com/) 
Cool, I'll have a look into these when I get to work on Monday. Thanks Edit: Just checked performance on the links and BoneCP seems to be the way to go!
I use it with Groovy as well, it just makes life easier. Saying that I let someone else work on my scenario's and they migrated all the code back to Java! WHY lol. 
We are only using GSON sparingly at the moment but I will definitely have to check out Jackson as the performance looks fantastic. I'm sure I could switch GSON out quite quickly but first I'll have to write some performance tests. Looking forward to trying this one. Thanks
I went ahead and modified the second snippet of code a little bit based on your suggestions. Now im getting a noSuchElementException. what am i doing wrong with the scanner?
what do you use Spring Integration for and how does it work for you?
&gt; What kind of unexpected behavior might arise from this? That's pretty much impossible to answer without looking at your code. Are you iterating on the vector at the same time as modifying it. E.g. looping over all the elements in the Vector whilst removing / adding elements to it? That or doing something with threads? I'd be extremely anxious about hiding the exception.
Its probably caused by adding/removing objects from Vector while iterating over it. One way to fix it is to replace Vector with CopyOnWriteArrayList, every time you add/remove something from this collection it creates new collection, and the one that you are iterating over works on the old data.
Look at where you make modifications to the Vector. You're iterating over it at the same time that you make modifications. Work out where this happens, then make a copy of the vector before iterating, and all will be fine. Do **not** just hide the exception. You can lose data. Also, don't use Vector. It's been out of date since 1998 (the release of JDK 1.2). Use List, for example ArrayList.
I am looping over its elements in one thread while occasionally adding new elements to the vector from the main thread.
Well there's your problem!! If you add a new element to a collection while iterating through that collection, that's when the exception will be thrown. When you add elements to a list, the elements may be copied around, making the iterating thread see possibly inconsistent data (e.g. visiting an element twice, or no times). &gt; What kind of unexpected behavior might arise from this? This behavior is completely expected, and is documented in the collections framework. *Here's one solution:* thread A: synchronized(list) { // perform iteration } thread B: synchronized(list) { // add items occasionally } this will ensure you don't simultaneously iterate and add/remove items.
We use it to define all our Java messaging services. You can configure beans for different messaging channels routers etc... all done via XML. Check the documentation it is very good. 
&amp;#3232;\_&amp;#3232; I love the way this comes across as if that's totally fine. Try the official documentation so that you can understand the different issues that you will have to cater for when using threading. It has a nice tutorial in there as well which is very helpful. Criticalsection's solution is a good one but you're best reading the documentation so you understand it properly. [Java Concurrency Documentation and Tutorial](http://download.oracle.com/javase/6/docs/technotes/guides/concurrency/index.html) 
Or read up on CopyOnWriteArrayList
Your inner loop is fine - it's when it falls back out to the test condition on the outer loop (after completing the inner loop) that you're getting the error, because at that point col is out of bounds. If you know the dimensions of A anyway, then why is the outer while loop necessary at all?
If it isn't critical that the iteration touches every element every time/doesn't touch an element twice on occasion, an alternative method is to replace iteration with a traditional C-style loop using a numeric iteration variable (for (int i = 0...etc)) and pull the element corresponding to the number from your collection.
That true in the case of Jetty. One-jar is just a plugin for maven that you put a few lines in your pom, so you don't notice it. What I prefer about my approach is that I don't need to have maven installed on a box to deploy to it - I just need the JVM and the jar file.
The maven assembly plugin will let you build a JAR file that has all of the dependencies unrolled into it, so you can then just deploy that one single JAR file and you're done... The maven jetty plugin is wonderful for developer testing - mvn jetty:run, load a web browser, test code, repeat - but I wouldn't want to use it in a production system. I wouldn't want to use an embedded web server in a production system anyway - it's just the wrong way round if you ask me. Much better is to have the web server with the webapp running inside of it...
Eh not really with algorithms just use the next size up. Although with reading binary data written by other languages using unsigned values. Now that's a pain.
Ignoring all the awesome ones already mentioned I will just add a shout for http://projectlombok.org/ since I don't see it on the list yet.
you've to be at the top of the (folder hierarchy ~~~ package structure ), in order to run "java com. ..... " from the command line, right ?
The Apache HttpClient library is VERY useful here....
I don't get all of these people espousing the simplicity of Python. I actually work at a company that started out using python for nearly everything and the whole infrastructure is just falling apart due to performance issues and lack of strict typing causing data to get garbled. I've tried python, it just doesn't hold a candle to a good Java program.
No, declaring it volatile will do absolutely nothing in this situation.
Using arrays and generics together. Making a T[] somehow works (check out ArrayList's code), but T[][] simply **cannot**.
I wouldn't chain Buffers like that. If you're dealing with Strings use a Reader / Writer otherwise use a *Stream. 
I will use Scala as a wrapper and then just use the Java libraries. (just kidding)
Those are all much more complicated than e.g. Parallel.ForEach http://msdn.microsoft.com/en-us/library/dd460720.aspx You can parallelize embarrassingly parallel routines with almost no change to the code structure. That's easy, and that is what is missing in Java.
scala-library.jar
Do you know how he made this? Is it an Eclipse plugin or what is this kind of 'tool' called?
This also works well when conditionally removing items from the List (assuming you start at the end and count down to zero).
Have you tried [JFreeChart](http://www.jfree.org/jfreechart/)?
what is operator overloading?
Happened to me a few days ago just doing a stupid name database programme for a class in college. I just kept re-running the code to test it in eclipse and suddenly I got a message from windows saying I was out of memory. Checked task manager and i had literally *hundreds* of javaw.exes clogging my memory. 4 gigs of ram eaten in the space of an hour. 
Yeah, I actually used it quite a bit before XChart, but I never really liked it. In my opinion, the API is over-complicated and the source code is a rat nest. 
this ! ( it is fully eclipse and netbeans integrated ) It easily works with JSF, primefaces and MongoDB/Morphia.
Operator overloading is changing how the operators (+, -, /, * and some others) behave. You typically use it when you are building a value object to say add the objects together in a certain way. Java does not have this, so what you end up with is something like this: Language with operator overloading: BigDecimal + BigDecimal Without operator overloading: BigDecimal.plus(BigDecimal) Realistically, this just makes the code a bit cleaner, but when you get into really complex equations, it can get really hard to follow really fast.
How is running the web server embedded any different to running through a cobweb of XML configuration files?
I have never heard of this until now.... wow. Looks good. I need to start poking around with this instead of swing. Swing is nothin but headaches.
FYI, the Eclipse UI is built on SWT. You'll also want to look at JFace which provides an MVC layer over the SWT APIs
I suppose using a ternary expression is cheating? Such as result+=(i mod 2==0)?0:i; EDIT: That code doesn't find the product, btw, but demonstrates the point.
Agreed. As mentioned in other parts of this discussion (solving different problems), the Google Guava library has unsigned numbers. It's at least a decent workaround.
It's not that at all. It's the difference between the web server being embedded in the application to the application running inside the web server. It's the difference in which one is the actual process that is running, and which is running inside the other
[Learn Programming](http://norvig.com/21-days.html) and pick up good habits along the way.
Your teacher probably wants you to use the modulus operator % You can basically think of that as remainder... I would guess it probably has something to do with result = result + (result * i * (i % 2)); I don't know if that formula is correct, but should get you going in the right direction :)
It depends upon your intended purpose. Serialization is OK for use as a caching format and sometimes as a document format. Keep in mind that forward/backward compatibility will break if you change your object structure in any way. This frequently makes serialization impractical as a document file format. Read about [serialVersionUID](http://stackoverflow.com/questions/285793/why-should-i-bother-about-serialversionuid) for more info. Serialization should never be used as an exchange format or RPC mechanism. It's just too brittle and presents too many attack opportunities. If you send serialized objects across the Internet you will eventually regret it. Guaranteed. Without any doubt. 
The Problem you'll run into with serialization is with java runtime versions and patches. If your serializing anything that has a dependency on anything that's been changed since a patch, there's a good chance something will break. Serialization is not good for long term object persistence, because your storing a binary representation of your object and if anything has changed for the objects class file since it was serialized; when you try to un-serialize there's a good chance you'll run into problems. I know for myself I would much rather use an XML format. That way my class files can change and I can take into account how to interpret that via the XML. 
I'm not sure I understand. Are you not aware that [this](http://download.oracle.com/javase/6/docs/api/java/util/Arrays.html) exists, or are you wondering why you have to use a separate class to do it?
Arrays.sort(T[] a, Comparator&lt;? super T&gt; c)
Plus 1. I got really stuck on Java updating something somewhere between Java 6u9 and 6u12 for a while due to that exact problem. If there's a somewhat easy alternative, I say go for it as serialization often causes problems.
Thank you!! My java professor told me such a method did not exist.
if that's not enough, here's more http://download.oracle.com/javase/tutorial/collections/interfaces/order.html :-)
What is the easiest way to apply a single action to every object in a array?
A foreach loop is usually the best way to iterate through every item in an array or Collection: for (E element : arrayOfElements) { // do stuff } From the rest of your comments, it sounds like you might be in an intro programming class? Be careful with using stuff that you haven't gone over in class yet. Usually if the professor(s) leave things out, it's for a reason: like wanting to make sure you completely understand the basics of how to sort arrays on your own before telling you about the library function that most people use. /Former CS TA
If that's true, you are so screwed.
You can also use collections to order it. Some examples http://www.exampledepot.com/egs/java.util/coll_SortArray.html
You should generally stick to lists (collections, etc) over arrays. They provide a much richer API than arrays. You might occasionally need arrays for performance (speed or memory) in extreme cases but this will be very unusual.
&amp;#3232;\_&amp;#3232; You're _not_ getting your tuition's worth. 
In theory, it should work as reliably as an xml file or something as long as you use serialVersionUID correctly... Though I'm not a big fan of it, it just feels like theres so much that could go wrong. I only use serialization if I'm using a 3rd party library or something that needs to work with serializable objects.
0xAIRPLANEBAD!
Dealing with unsigned byte/ints and general byte/bit manipulation.
Remove the call to repaint. You're telling the component to repaint (call the paint method) again at it's earliest convenience. I'm not sure what the consequences of doing this are, but I can't imagine they're good. You don't want to loop and draw in the paint method since, when you do get it working, you'll only ever see the last shape drawn. Also, the draw method is on the AWT event thread so any heavy processing you do there causes other GUI events to wait, ultimately causing the entire GUI to freeze. Consider using multiple threads and SwingUtilities.invokeLater to accomplish this task. You probably don't want to override the frame's paint method. Instead, extend a JPanel and override the paintComponent method. Then add an instance of that panel to the frame, e.g. `frame.getContentPane().add(myPanel);` Finally, to answer your question, you need to 'repaint' the entire component back to it's background color first, then draw your shape: g.setColor(Color.WHITE); g.drawRect(0, 0, getWidth(), getHeight()); g.setColor(Color.RED); g.drawPolygon(shape); As I said though, with your processing in the paint method as it is, you'll only see the last shape.
This may be a bit advanced but... http://docs.guava-libraries.googlecode.com/git-history/v9.0/javadoc/com/google/common/collect/Collections2.html#transform(java.util.Collection,%20com.google.common.base.Function)
You lost me at "Thaughts" &amp;#3232;\_&amp;#3232; Jokes aside, have you tried using JSON? http://json.org/java/
The OP might learn a lot more from reading the official Java tutorials, than from their class.
Or, similarly, http://www.kiwidoc.com/java/l/p/commons-collections/commons-collections/3.2.1/p/org.apache.commons.collections/c/CollectionUtils#transform%28Ljava%2Futil%2FCollection%3BLorg%2Fapache%2Fcommons%2Fcollections%2FTransformer%3B%29 Though both of these deal with Collections, not arrays, so you've have to turn your array into a collection, using `Arrays.asList` or something along those lines.
I have three implementations of persistant storage available (coded up and working) my 1st method - A custom format that is just awful, i but have to support the previous file format. This is fast and i've done the hard work for so this is a non-issue. the 2nd method - An XML format, using 'http://simple.sourceforge.net/ ', This is extremely easy to use, i have looked at the android/java implementations of XML (SAX i think) but haven't got anything using that at the moment. The file format is quite large, but i have solved that by zipping the file, another problem is the speed, its considerably slower than the other 2 methods. the 3rd method is the serialization. the caching with serialization is interesting (mentioned by bondolo) and could solve the speed problems. 
sorry :/ Thoughts* i have seen that, but i have not attempted anything using that before, but i will take a deeper look, cheers.
JSON is AWESOME! I'm sure anyone who uses NodeJS or JS in general will agree
Cool project!
Why? You know a task that is easier in Java?
It is nice to see more data mining/machine learning projects out there. Have you considered to also announce this on mloss.org? http://mloss.org Does it support both classification and regression? How does it compare to C5.0/Cubist?
&gt; Have you considered to also announce this on mloss.org? I'm not familiar with that site, but I'll check it out. *edit:* [done](https://mloss.org/software/view/334/) &gt; Does it support both classification and regression? No, just classification, although you could bolt a simple regression &gt; How does it compare to C5.0/Cubist? I don't know, I haven't yet benchmarked it against any other algorithms, although if you'd like to try - its very easy to use. Its doing some stuff that is quite novel, to the best of my knowledge, so it would be interesting to see how it stacks up.
Or functionaljava.org. Not for the faint of heart, but very, very, very good library. Example: http://functionaljava.org/examples/1.5/#Array.filter
Interesting, this was created by Ian Clarke, who also created [Freenet](http://freenetproject.org/).
I would use an enumerated type and keep that logic inside of your application. That allows you to add, expand, refactor, and do a lot of other things without worrying about updating the database.
What would I store in the database to determine what type it was? EDIT: Plus I really like to avoid conditional statements when I can.
Look at [connection.getMetaData().getTables(...)](http://download.oracle.com/javase/1.4.2/docs/api/java/sql/DatabaseMetaData.html#getTables%28java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String[]%29)
I would prefer a lookup table in the application to translate from some ENUM type value to the class names. That way if you do any refactoring in the code, the refactoring will make it easy to find the matching values in the lookup code. If you save class names into the DB, then you would have to do update calls on the DB any time you refactor. enum MyEnum{ FTP_TRANSMITTER("static_name_for_db", "my.package.FTPTransmitter"); private String nameForDB, className; private MyEnum(String nameForDB, String className) { this.nameForDB = nameForDB; this.className = className; } public String getDbName() { return nameForDB; } public String getClassName() { return className; } } So you would store the static_name_for_db into the database, then do a lookup using this enum. You'll have to add a getter for the Enum based on the "nameForDB". You could change nameForDB to be an int instead of a String, that'll make a switch block easier.
I guess I was trying to do this without conditionals. It's not the end of the world, but I was wondering if there was a cleaner way.
Using a static map of enum values: http://stackoverflow.com/questions/1080904/how-can-i-lookup-a-java-enum-from-its-string-value/1080912#1080912
[Here](http://xeiam.com/yank.jsp) is a really straightforward JDBC persistence layer library built on top of Apache Common's JDBCUtils that you should consider.
A property file would also be useful in this case, where you could map a property name to a class name, and use the enum to store the property names which you can use to lookup the class form the property file. This would alleviate the need for any database entry aswell as keep the java classes clean with mapping from a name to a class. If you want to swap out a different handler class for a protocol a property file change is the only update needed.
Another option would be to serialize the entire object and store it in the DB. Here's a discussion on SO about that: http://stackoverflow.com/questions/244493/homemade-vs-java-serialization
The last thing I want to do is to have more hd access.
The best you could do would be something like this public class SomeClass { public static final int THIS_VALUE; static { if (config.value) { THIS_VALUE = 4; } else { THIS_VALUE = 0; } } } You're forced to have the else clause because final fields must be initialized to some value. You can drop it if you drop the final modifier from the field. It should also be noted that unless these values are Objects of some form, you won't be saving any memory at all. Fields with primitive types take up the same amount of memory no matter their value.
Thanks but I solved this via SELECT * FROM sys.Tables
lewlew is right. The difference in memory is essentially zero. If it's a LOT of values, you could put them in a map or separate object, but it's still unlikely you'd save much memory.
That solution may work for the current DBMS that you're using, but if you ever decide to switch, your code will likely break. The method that kreiger suggested is more portable, and although that may not concern you yet, it's worth keeping in mind. 
Ok I'll 
&gt; Say I have records in a database where I want each one to have it's &gt; own Transmitter. Ie, record #1 is SOAPTransmitter, record #2 is &gt; FTPTransmitter. This sounds like a bad idea. Why do you want the transmission type to be mixed in with the record type? Aren't these orthogonal concerns that should be kept separated? &gt; try { &gt; Transmitter tmp = ((Class&lt;Transmitter&gt;)eType.getValue()).newInstance(); &gt; System.out.println(tmp.getData()); &gt; } catch (InstantiationException e) { &gt; // TODO Auto-generated catch block &gt; e.printStackTrace(); &gt; } catch (IllegalAccessException e) { &gt; // TODO Auto-generated catch block &gt; e.printStackTrace(); &gt; } Don't ever do this. Just remove the whole try/catch business, and put a "throws Exception" on your main method instead. (It's not a good idea in general, but on a throwaway main it's not an issue.) And turn off autogeneration of these try/catches.
It sounds like it'd be a single read at program startup. I like this idea only because it allows you to add new transmitters without changing existing code.
Your current example is kind of suboptimal as it creates a new instance of Transmitter (why isn't this an interface, btw?) every time while the nature of the transmitter most likely involves configuring the instances (hostnames, service URLS etc). So you better have a public interface TransmitterService { Transmitter getTransmitter(String name) } and implement that to return the already configured instances.
Well, the above code is an extremely bare-bones version of the finished product. Basically, I work for an e-commerce company that deals with many distributors. For the most part, they use different formats and protocols for communication. I want to make this so they can add distributors through a control panel and be able to set what protocols and file formats. Then they will upload either an XSL file or something else to translate the data for their particular format.
Also try to pay attention to the CamelCase, the variable "Resultset" should (ideally) be "resultSet" in this case.
This is a bad idea, but I'm going to upvote you since others seem to be downvoting you and others should see why it's a bad idea. Both serializing the entire object or storing the symbol (class name) in the database will be harmful when it comes time to refactor the code. With Java you have good tools for refactoring. Code changes should be fluid and happen often. Data stored in the database shouldn't depend on a particular implementation in code. It should be the other around. Store the data in a way that makes sense regardless of what language is reading the data. Once that's right, it's easy to parse the data and create objects and go about your way. Unless you or a colleague absolutely love doing data migration scripts, code is generally much easier to change than data. 
Upvote. You can use the built-in lookup, or create your own map statically.
Yes, I agree that doing this with conditionals would be wrong. Use a map instead.
There's even a specialized [EnumMap](http://download.oracle.com/javase/7/docs/api/java/util/EnumMap.html) specifically for this purpose, and it's super fast because it's simply an array under the covers. [edit] Whoops, we're looking up Enums by their String keys, not the other way around. Oh well, EnumMap is neat anyway.
You accidentally the whole sentence.
Nope, I like the self-help questions AND the tips/tricks/tutorials... Leave it alone.
Java enums can be have abstract methods implemented by each value. If you want to go down the enum road, you could potentially move all of your functionality into the Enum itself. public enum TransmitterEnum { FTP { public String getData() { return "Ftp"; } }, HTTP { public String getData() { return "Http"; } }, SOAP { public String getData() { return "Soap"; } }; public abstract String getData(); } This puts all your transmitter code into one file, though, which may be a pain to maintain, and only allows for one instance of each code. In that case, you can still skip the reflection code (Reflection has a speed penelty, plus is just a pain to deal with) by adding a createInstance() method. public enum TransmitterEnum { FTP { public FtpTransmitter createNewTransmitterInstance() { return new FtpTransmitter (); } }, HTTP { public HttpTransmitter createNewTransmitterInstance() { return new HttpTransmitter (); } }, SOAP { public SoapTransmitter createNewTransmitterInstance() { return new SoapTransmitter(); } }; public abstract Transmitter createNewTransmitterInstance(); } 
This is what the factory pattern is for. Create a factory to return a Transmitter and pass in an identifier. That identifier can come from the database.
Beware of making your code more complicated in order to enforce arbitrary, self inflicted rules
Vector is synchronized, other List implementers may not be, depends on how you want to used it. Vector has its place. Also, if you need to remove elements from a list while iterating over them, don't make a copy of the list, just use the Iterator.remove() method to remove the last element returned from the Iterator.next() call. 
Honestly, all of Commons should just be integrated in the language. fileutils, io, lang, beanutils, fileupload, logging. I don't know how we survived.
What kills me is how easy JDOM is to work with, and how nothing of comparable quality has made it into the language.
I want to say there was some similar function in commons-collections (I believe a "collect"), but that seems much, much nicer.
Jackson's not horrible and GSON's respectable. But, this is really one of those things that (for me) leaving the Groovy/Grails world and coming back to Java made me want to weep.
They got to him! Poor Mrleibniz!
[SYNCHRONIZED](http://download.oracle.com/javase/tutorial/essential/concurrency/syncmeth.html)! 
She spent the first half of the talk speaking about cakes. She then basically complained that the annotations and sql hibernate generate are ugly. Yes, 10 annotations on a field/class/method are ugly, and yea the sql that hibernate generates is ugly. The problem is that she didn't show any metrics showing that her home grown solutions were faster, more reliable, or more maintainable than a hibernate solution. I personally hate every time I use hibernate, but I can't argue with the fact that I define my data model, add some annotations and config and I'm talking to my database. If I had to rewrite my database communication and ORM from scratch every time, it would add weeks to my development time. This is something she seemed to skirt around. Writing custom solutions, testing them, code reviewing them all take a LOT of time. Similar to her cake mix example, it takes me half the time to make a cake from a mix than from scratch. I can write more optimized SQL than hibernate can because I know the assumptions of my database, but its a trade off between developer time and application speed. From a stand point of the business, a couple weeks or a month of extra developer time _usually_ out weighs the value of having a slightly more optimized query or a developer having 'fun' creating their own new framework. Hibernate is a trade off like everything else. Its one of those 80/20 tools, where it does 80% of the work for 20% of the effort. If your database fits that model, it really simplifies things and saves time. You can then either choose to work around the limitations or decide that its far too limited for you and roll your own ORM. That's a trade off an engineer has to make when designing the system. Anyone who advocates a silver bullet approach (whether or not its a lets all use hibernate or lets never use hibernate) has a bit more to learn about software engineering.
I tried to post this, but I couldn't get into the post until Kyrra had finished responding to the question.
lol
Ok, show me. Without conditionals.
Because of the boogyman? Seriously, what's the point of these circlejerk comments? The code would be cleaner.
FYI - I work with a lot of people who speak English as a second language and they often use *I'll* instead of *I will* in text conversations, so it was probably intentional. 
I don't understand what you're asking.
Loop through each element in sequence. When you get to a null value, set that element then exit your loop.
Can you give a example?
http://code.google.com/p/google-gson/ google-gson I use it a lot in my Android game.
 for (int i = 0; i &lt; array.length(); i++) { if (array[i]==null) { array[i] = overwriteValue; break; } }
I agree. I write software that interacts with specialized hardware devices. I was shocked when I found out how much of a pain in the ass unsigned bytes were to deal with.
Despise Python for this very reason. I did a project with it and it was great at first. Once it grew in size it became a nightmare.
I've used GSON and like it a lot.
Oh, I got one, verbatim string literals... in c# String myRegEx = @"^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$"; and in Java String myRegEx = "^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$" Easy enough buy a royal pain in the ass if you use a lot of regular expressions. 
I was told my professor that using break was bad coding practice and should only be used in extremely complicated code. 
I think that's more the case when you have a large loop with several exit points and clean-up code (closing streams, sockets). You're probably okay in this situation. You could avoid using the break if you want: Ugglier.. int nullPos; for (nullPos=0; array[nullPos] != null; nullPos++) {} array[nullPos] = newvalue; 
And when you're done with that, [CountDownLatch](http://download.oracle.com/javase/1.5.0/docs/api/java/util/concurrent/CountDownLatch.html) may also help.
For those that have no idea what this is (like me before some googling), this is the next release of Eclipse that is due out in June 2012. * [Wiki page](http://wiki.eclipse.org/Category:Juno) * [Latest release notes](http://download.eclipse.org/eclipse/downloads/drops4/S-4.2M2-201109161615/eclipse-news-M2.html) (Juno M2 build)
And?
If you're picking up any books, I'd suggest anything by John Lewis. For my first year CS courses I had just a foundation of program design book, and learned SO much just from the book alone. I also have a Data Structures &amp; Algorithms book by Lewis and it is also good. They're a pretty good bet for laying out good practices.
You set the priority on the thread object. Assuming SimpleThread implements Runnable, you'd need to modify the for loop to something like this: for (int i = 0; i &lt; 10; i++) { SimpleThread newThread = new SimpleThread(horseNames[i]); newThread.setPriority(somepriority); newThread.start(); } You can check the priority's with getPriority(), and all this is mentioned in the Thread API at http://download.oracle.com/javase/6/docs/api/java/lang/Thread.html#setPriority(int)
There are pretty much the same. Post code.
Why do you want to set their priority?
Swap the first element with any element after and including itself (generate a random index, which is easy). swap the second element with any element after and including itself, 3rd element, and so on. Right now, I don't have a proof that this produces an equal distribution of letters, but my gut says it does. (On the other hand, I have a niggling suspicion that there is a bias towards later elements appearing earlier in the list.)
This might be a good idea. I'm thinking that your suspicion might be right though seeing as the first few letters would be likely pushed to the end of the word and the last to the beginning. It definitely is an interesting idea though.
Can you elaborate on what exactly you're wanting to do?
yeah, see edit.
came here to say osgi.
You'll want to look into the [Runtime](http://download.oracle.com/javase/1,5,0/docs/api/java/lang/Runtime.html) class. Use Runtime.getRuntime().exec(String command);
Are you looking for [Runtime.exec(String)](http://download.oracle.com/javase/1,5,0/docs/api/java/lang/Runtime.html#exec%28java.lang.String%29)? You can then use the returned [Process](http://download.oracle.com/javase/1,5,0/docs/api/java/lang/Process.html) object's getInputStream() and getOutputStream() methods to send text commands to the spawned process and read back the result. If your actually looking for the Windows Command prompt, you'll want to final Process cmd=Runtime.getRuntime().exec("c:\\Windows\\System32\\cmd.exe");
Awesome thanks a bunch
That was considerably farther than 40 feet. But OK. It was close enough.
So, the answer to the titular question is the already mentioned Runtime.exec. But I don't think you actually want or need this for what you want to do with the Minecraft Server. Mikecraft is written in Java and is shipped as a Jar file, so it seems feasible that you should be able to interface with it directly using appropriate calls to Minecraft classes/methods. Additionally, if you really must send commands to the Server through the "console" which it appears to define as StandardIn and StandardOut... then I think it would be much better to build a wrapper around the Main-Class of the Minecraft Jarfile where you redirect stderr and stdout (see java/lang/System) to your own management console. (Reasoning for this method over Runtime.exec: see the API Spec. exec-ing a new process can cause serious synchronization issues and since the application you are launching is also Java, you can save a lot of overhead by reusing the same JVM.) Of course to interface directly through classes and methods you require the developer(s) of Minecraft to build/support such interfaces. To do the wrapper design you don't need much except willingness to workaround any crazy preconditions the developer(s) have about how their "console" behaves. 
That sounds much better, but how do I create a wrapper for something like the minecraft.jar? Im just not sure where to start?
Good answer... to the weirdest question I've seen in a while.
Don't use `exec(String)` unless you really like dealing with escaping yourself. Use a ProcessBuilder instead: ProcessBuilder pb = new ProcessBuilder("C:/Windows/System32/cmd.exe"); Process proc = pb.start();
Craftbukkit ?
success.
&gt;Minecraft is written in Java and is shipped as a Jar file, so it seems feasible that you should be able to interface with it directly using appropriate calls to Minecraft classes/methods. Minecraft is shipped obfuscated.
&gt;Vector is synchronized, other List implementers may not be `Collections.synchronizedList(list);`
Similar idea. Why not just iterate through the characters and swap with any other character in the string including itself (randomly chosen index)? The only problem is you could end up with the exact same string as your input string.. which is fine if you want it to be truly random...
The "contract" for implementing clone is as you described but it may or may not be the case with the object you are using. Post code.
Why do you ask why? See we could be at this all day
I think this might be what I need!
[Try Bud Dry](http://www.youtube.com/watch?v=OuVhGAUR4oo#t=0m15s)
lol
I knew there was another way to spawn Processes, I just couldn't remember it off the top of my head. Thanks for reminding me. /me Goes off to write a swing GUI to copy MySql databases using mysqldump and mysql command line tools.
The main class should be listed in minecraft_server.jar's manifest file. Add the JAR to your classpath, reassign System.in, System.out, and System.err with streams your program is monitoring (you may want to pass through any activity to/from the old steams to your new ones so you can still see output on the command line), then invoke the main class's static void main(String []) method.
[That](http://download.oracle.com/javase/6/docs/api/java/lang/String.html) should be all you need...
 final Scanner scanner = new Scanner(System.in); System.out.println("Please enter a string"); final String string1 = scanner.nextLine(); System.out.println("Please enter another string"); final String string2 = scanner.nextLine(); if (string1.length() % 2 == 0) { System.out.println(string1 + " length is even"); } else { System.out.println(string1 + " length is odd"); } if (string2.length() % 2 == 0) { System.out.println(string2 + " length is even"); } else { System.out.println(string2 + " length is odd"); } if (string1.length() &gt; string2.length()) { System.out.println(string1 + " is larger"); } else if (string1.length() &lt; string2.length()) { System.out.println(string2 + " is larger"); } else { System.out.println("Strings are same length"); } System.out.println("First character of " + string1 + " is " + string1.charAt(0)); System.out.println("First character of " + string2 + " is " + string2.charAt(0)); System.out.println("Concatenated: " + string1 + string2); System.out.println("Uppercase: " + string1.toUpperCase() + " " + string2.toUpperCase()); Don't just cut-and-paste this, understand it or you'll only get further and further behind.
I tried but there are so many unrelated links and my notes state to create a string you use "String Str1=abc", but that didn't work, so then I looked in my book and it says String (String str) so that confused me even more :/ 
You are a life saver man, no lie. This is due in a few hours and I was panicking because I simply didn't understand it. I'm not going to lie this was partially my fault because I didn't attend a java tutoring session earlier this week(I was in math tutoring at the time for an exam). I'm going to try to do these assignment days ahead in order to avoid this. Rest assured I WILL be using this for my knowledge instead of copying and pasting. In fact I might just study your code and try to type out myself for practice. tl;dr version: THANK YOU
Not sure why you got down voted but you're right.
Thanks a lot, I accidentally posted this on my brother account and didn't know it so I wondered why I couldn't find it, I just now realized but anyways I actually figured out the solution this morning, I do appreciate the help though.
Its ok, but please do really try to understand it, otherwise you'll be even more lost the next time, and it will only get worse from there. You should go through it and look at the Javadocs for each method used (most of it is in the String class as others have pointed out). If you can afford it I highly recommend [this book](http://www.amazon.com/Java-Programming-Language-4th-Arnold/dp/0321349806/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1316817178&amp;sr=1-1) for learning Java. Its by the creator of Java himself, and back when I was learning Java in 1997 it was by-far the clearest explanation of the language I could find.
ugh. That's terrible. When will people learn that obfuscated code doesn't do anything except make it difficult to diagnose, service, and extend a product in the field. 
Yes. bingo. It sounds complicated, but its almost exactly the same process as what you'd do with ProcessBuilder or Runtime.exec. Just redirect the System.* streams to your own input/output streams and then call the main() instead of exec-ing.
Setting the thread priority isn't portable across platforms and has almost no effect in any case.
http://xeiam.com/yank_examplecode.jsp http://commons.apache.org/dbutils/
If your machine has a JRE only, you could download eclipse and run that, it comes with its own Java Compiler.
great!! ... can I use it in the form of like javac.exe? I'd rather use vim, which I'm familiar with, than Eclipse, which I'm not.
Your best bet is to get it from a computer or person that already has the JDK and zip up the JDK directory. There is no need to use the Oracle installer other than it sets up your path information and tries to install their crappy updater.
&gt;Your best bet is to get it from a computer or person that already has the JDK and zip up the JDK directory. I have access to neither of these things at this time. None of my friends are really into that stuff. I'd be awfully happy if someone sent me the zip with ifile.it or something.
Those 4 billion requests could come from IVY or Gradle too. BTW, having used both Maven and Gradle, Gradle is much better. 
Eclipse has a good debugger, so you might as well just edit your files in vim and run them in Eclipse (which is what I often do).
Huh ... interesting. Thanks.
If you are using eclipse with ant to build your project, you may need this to get ant to work: - in your ant-build-file: &lt;property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/&gt; - Than "right-click" your ant build-file in eclipse, select "run as", than "configuration". In "JRE"-Tab select "Run in the same JRE as the workspace". 
I'm using university library computers here and flash drives to hold all my stuff. Doesn't running a VM take up a lot of space?
Try renaming the installer .exe to a .zip and extract its contents. (Or right click -&gt; open with.. -&gt; your favorite unzipping tool). 
Really? OMGWTFBBQ THANK YOU!!!!
I just tried it: It is not a .zip archive but both WinRAR and 7Zip are able to open it as an archive.
[Do you mean GUI's?](http://download.oracle.com/javase/tutorial/uiswing/components/frame.html) [Applets?](http://download.oracle.com/javase/tutorial/uiswing/components/applet.html) Or [Full Screen Exclusive Mode?](http://download.oracle.com/javase/tutorial/extra/fullscreen/index.html)
What does that do?
This will pretty much just break your computer. (Spawns infinite threads.) http://pastebin.com/x3eH0Zmr If you don't want to do that, then just creating a thread with "while(true){}" in it will chew up a lot of processor time. Something to do with the behavior of Java in unbounded loops. http://stackoverflow.com/questions/580419/how-can-i-stop-a-java-while-loop-from-eating-50-of-my-cpu
Are you trying to load up the CPU or just have the thread wait? Would adding Thread.sleep(5000) do the job (5 second sleep)?
If he or she is on a Windows box, there's a pretty good chance that Java isn't in PATH.
I am trying to load the cpu with multiple of the same thread with different priorities and record the results. 
Here's something I whipped together quick. It randoms a bunch of numbers, adds it to a list, and sorts it using collections. Let me know if you have questions... // make adjustSize larger/smaller for a bigger/smaller thread task int adjustSize = 5000000; void doRandomSort(int adjustSize) { LinkedList&lt;Integer&gt; numberList = new LinkedList(); // adds as many random numbers as adjustSize to the LinkedList for (int n=0; n&lt;adjustSize; n++) { // random a number 0-1 million int randomInt = new Random().nextInt(1000000); // add random number to linked list numberList.add(randomInt); } // sort the linked list full of random numbers Collections.sort(numberList); // optional, to print off the sorted list for (int number: numberList) { System.out.println(number); } }
Call the above in each thread, adjust adjustSize accordingly, time the results. If you graph the time vs adjustSize, you might be able to make a reasonable guess at what kind of sort Collections uses...or use it to determine the effect of Thread.setPriority
I have not dealt with collections or linked lists yet. The most complicated thing I have dealt with is Arrays. :-)
Well just like a screen where you play the game, a screen like Minecraft screen. Not fullscreen, just a window where the game is played you know?
Out of that list, you probably want the last item.
Based on your comments I'm presuming you don't want a fork-bomb. There are a lot of complicated (and nasty!) suggestions here! (Who knew /r/java was so evil! :-) ) Why not just have a counter in a loop? Usually, to ensure the JIT doesn't optimize out your loops, you need to make sure you do something "productive". If you are just trying to gauge the effectiveness of priority, then counting seems reasonable. int stopVal = 100000; // maybe an argument you pass into your thread-object? for (int i = 0; i&lt;stopVal; i++) { if ( 0 == (i%100)){ someVolatileVariable = i; // A volatile field in your thread-object perhaps? } for (int j = 0; j&lt;stopVal; j++) { // do nothing to waste cycles } } Those two nested loops will simply loop over and over again for stopVal^2 iterations. (on a modern computer you likely need nested loops to have any meaningful delay -- an int (or even long) is only so large.) I'm hoping the second loop doesn't get optimized away by the JIT, but you can always stick some useless mathematical equation in there which should keep it active. Every 100 iterations of the main loop (the i%100 part), the code will write the current loop number to a variable called "someVolatileVariable". Just make that a gettable field in your Thread Object and your main program can check on each Thread's status.
I agree, yet 768x512 seems to work out for me. Here are some [examples of mine](http://www.indiedb.com/members/doppler/games).
Oh thanks man. I'll look into it, but really I've been meaning to get started, so thanks
You probably want a tight simple loop like: double x = 1.0; for(int i=0;i &lt;10000; ++i) { x = x + x / i; } You may need to adjust the loop depending on the processor.
I couldn't open it with WinRAR. Will try 7zip. Are you sure you're using JDK 7?
Look into [Slick](http://slick.cokeandcode.com/) (2D game library) and [LWJGL](http://www.lwjgl.org/) (3D game library). Minecraft uses LWJGL. Slick actually uses LWGJL behind the scenes but is meant more for 2D games. You can combine the two if you wish though.
In addition to the other things mentioned, take a look at jMonkey. Its a bit more of a game engine. 
Ok. I've figured it out, I think. Further problems might crop up though ... I don't know. I know there was a .cab file or something in one of the directories containing a tools.zip, which I extracted to E:\Apps\Java. It's got a bunch of .jar files and all the .exes like javac.exe. There's another one you can find in there that contains a file called src.zip. I don't know whether that's essential or not. If it is, I don't know where in the resulting file structure to extract it. Another issue is that I ended up with a bunch of files with .pack extensions. And when I tried running javac I got this error at first: Error occurred during initialization of VM java/lang/NoClassDefFoundError: java/lang/Object I found out how to fix that and make them .jars (see here, for the future reference of anyone in my situation: https://forums.oracle.com/forums/thread.jspa?threadID=2253193) So far, so good. You've been immeasurably helpful here.
And in conclusion: http://i.imgur.com/umHD3.png
Just realized the comments made it kinda sloppy because of how it copy/pasted sorry
[This should fix your screen flicker](http://download.oracle.com/javase/tutorial/extra/fullscreen/doublebuf.html) Otherwise, congratz! Much more complete than my "first game".
Awesome, I've heard of that but I wasn't sure, I see how it works but I don't see how to do it, I'll google it tomorrow, I'm too tired now Thanks for the info though Also I've messed around in visual basic and game maker, I'm just getting used to graphics and this game took much longer than it should have, but I added little by little Making it up as I went. Probably about 3-4 hours invested in this
Sweet bro. I am just starting to learn Java this semester and I hope I can write my own game soon.
same here! Objects are really nice so far :D
While main is static, you are creating an instance of "game" called a, and you can call init() on that like all the other methods you are calling on it. game a = new game(); //just setting up the window itself a.init(); a.setSize(490,545); I don't do AWT but I believe that paint only gets called after the setVisible(true) which would mean you should call init() before setVisible().
In gcd, you must make sure you only work with positive integers, otherwise the algorithm wont work. Apart from that, calling System.exit from a constructor is no good. Why not throw an IllegalArgumentException or even a DivideByZero Error?
That's not really a memory leak, more to do with forgetting about running processes.
Just a quick tip after looking at you're code. You did if(string1.equals(string2) == true){ .... } You don't need to check the result in an IF statement. If works like this If(true){ do something } else { do something else } string1.equals(string2) returns a boolean, that is all you need. if(string1.equals(string2)) 
You don't have to care about Double Buffering by yourself in java swing app (swing is doing this for you). Im not relay into Gui/Swing, but imho you should overwrite (swing) JComponent.paintComponent(Graphics) instead of (awt) Component.paint(Graphics). To do this, put your Gfx-Stuff into a JPanel/JComponent Class and overwrite the paintComponent method. Quote from "Filthy Rich Clients" (great book about swing/gui applications): JComponent.paintComponent(Graphics): Applications that have components with any custom rendering [...] may need to override this method to perform that custom rendering. Component.paint(Graphics): For the most part, Swing applications do not override paint() directly [...] there are important situations [...] by doing so we can set up the graphics state that will be used by a component and its children. One more thing: All swing painting happens in EDT (Event Dispatch Thread), you should start your app in this way: public static void main(String[] args) { SwingUtilities.invokeLater(new Runnable() { public void run() { new Game(); } }); } 
I'm really interested in making a game but I don't know if I should learn more java or not. What sort of other programs have you made? I seem to know most of what the code in your program means, and I understand about paint methods and double buffering but I am still not sure if I am ready or not. I have just completed a multi-threaded network chat program with a GUI for a client/server 2 way conversation so I'm slowly understanding java a little better, although I haven't really touched much on the gaming side of java.
FYI: http://ureddit.com/class/268 University of Reddit Class about Game Programming: "This course will cover game programming from an introductory level and continue to an advanced one at a brisk pace. The course is set up to be language-agnostic, although most example code will be in Java"
In addition to voxfrege's comments, I'd add: 1) When you construct with a negative divisor, you are not actually setting the member variables. "n = n/gcd(n,d)" is *not* the same as "this.n = n/gcd(n,d)" The member variable is being shadowed by the local variable and needs to be explicitly be referenced by "this". 2) And even then, when you construct with a negative divisor, you are not calling gcd(). Thus, new Rational(-2,6) would store -1 and 3, but new Rational(2,-6) would store -2 and 6. 
If you want to start playing with various libraries, my recommendations: * [JBox2D](http://www.jbox2d.org/) - java 2d physics library. * [PlayN](http://code.google.com/p/playn/) - 2d graphics library that you write java code for and it'll compile to html (canvas or webgl), java, and android. It was used to make [Angry Birds](http://chrome.angrybirds.com/) for Google+. (note: playN doesn't have an official 1.0 release yet but they are getting close. It should be out in the next couple of months I believe).
Your question is rather vague. You can arbitrarily add or remove components from containers. The LayoutManager takes care of where they get placed. 
I made a simple example: http://pastebin.com/RKN942WA You can either add/remove JPanel-s from JFrames-ContentPane. Or just switch the visibility. My first idea was also to use CardLayout. Why is this not working for you? BTW: I'm not really good at swing/gui.
I want to be able to change the entire contents of a window from one whole panel to a different one without having to make windows over and over.
the window changes need to be procedural. 
This would be procedural: http://pastebin.com/sQ4xj2HM
I took the liberty to change your code to generate the UI on the fly. http://pastebin.com/sQ4xj2HM
Check out [SLICK](http://slick.cokeandcode.com/) game engine for 2d games and [LWJGL](http://lwjgl.org/) for 3d stuff. LWJGL is what minecraft is written in btw.
If you wanted to post the code somewhere with syntax highlighting, try [github gist](https://gist.github.com/). You don't need an account to post code snippits.
Then stuff all the content on a JPanel that you add to the JFrame, remove that JPanel later on, and add a new one. 
[Forkbomb](http://en.wikipedia.org/wiki/Fork_bomb)
You go through the while loop as long as count is less or equal to numTimes, but you just keep increasing numTimes. It's not actually a infinite loop since numTimes will overflow after passing Integer.MAX_VALUE (2147483647) -- you just have to be patient and wait for the 2 billion prints to finish.
Well think of &lt; as 4 for less than, and 7 as &gt; for more than. Do you see the problem now?
setContentPane ?
Initialize count to 0 Replace numTimes++ with count++ The reasons why should be fairly obvious. Alternately you can do this slightly more elegantly with a for loop.
Thank you, just what I have been looking for. :D
I'm a little bit late to the game here, but I think [Collections.shuffle(List&lt;?&gt;)](http://download.oracle.com/javase/6/docs/api/java/util/Collections.html#shuffle\(java.util.List\)) might be what you're looking for. 
The best way to work out what the bug is yourself is to step through the code manually, writing down the values for each variable on a piece of paper as you go. For your example, say the user enters the number 15: At the start, numTimes=15 and count=10 For the while loop, is 10 &lt;= 15? It is, so we continue through the loop. We print the string "I love programming" and add 1 to numTimes. So now numTimes=16 and count=10 Is 10&lt;=16? It is, so we continue through the loop again. Now numTimes=17 and count=10 If we continue on like this, numTimes goes to 18, then 19, 20, 21, and so on. If you want to put a limit on it, why not start counting from 1? Then you could keep count of how many times the loop has run, and stop it when the number of times it has run is equal to the number of times it was supposed to run.
Wow I can't believe I didn't get that, I did the count to 0 thing but didn't replace the numtimes++ with count++. Thank you Mr. Cheese this was bothering me! And thank you reddit java you guys reply crazy fast! Upvotes for alllll
Formatting: Develop a new program where they will allow two colleges to set up information booths each day during their lunch periods. To be sure there is something for every college-bound student, they will allow one Tier One and one Tier Two school each day. A Tier One school is considered a very high quality school, accepting only the very best students. A Tier Two school is one whose standards are not quite as high. You are given functional code on your Blackboard site that processes information on students visiting the information booth. However, the code uses the same criteria for each school and needs to be improved. Make the following changes: * In the School class, allow for each object to have its own criteria (i.e., minimum GPA and SAT for acceptance), rather than using the constants provided. * Include a specific constructor for the School class that will provide those values at object creation time. To test use the following information: * School A expects a minimum GPA of 3.9 and a minimum SAT of 1950 * School B expects a minimum GPA of 3.2 and a minimum SAT of 1500 * Include the functionality to keep count of the number of students accepted at each school * Using a static variable in the StudentApp class, keep count of the total number of students visiting the booths. * Provide output regarding the projected acceptance rate at each of the two schools 
Do you have an actual question?
Yeah, where are you having trouble?
Use the [Javadoc](http://download.oracle.com/javase/6/docs/api/index.html?overview-summary.html). The documentation shows [System](http://download.oracle.com/javase/6/docs/api/java/lang/System.html) has the member out that is a [PrintStream](http://download.oracle.com/javase/6/docs/api/java/io/PrintStream.html). [Printstream.format()](http://download.oracle.com/javase/6/docs/api/java/io/PrintStream.html#format\(java.lang.String, java.lang.Object...\) ) shows that the first argument is a [format string](http://download.oracle.com/javase/6/docs/api/java/util/Formatter.html#syntax).
The format string javadoc isn't the easiest to understand, but I think what you are looking for is this: System.out.format("'%05d' '%5s' %n", i, Integer.toString(i));
null, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 makes more sense in a way.
No comments here? I thought so :S
What if you're only serializing primitives? 
JSF is known to be hyper productive, so not much to comment there ;)
Or nobody watched the video :)
TIL Swing Double Buffers for you, appreciate the knowledge.
Really? I've never managed to get it to be anything but a major pita on any project I've worked onâ€¦ simple stuff is either incredibly hard or (imo) incredibly ugly, cross field validation and non-trivial custom components come instantly to mind.
This is a completely uneducated guess, but perhaps it has something to do with the numbers of cores you have?
Thread priorities are flaky very-OS-dependent things. They're best left alone unless you want to get involved in that. Set them above normal and you can hang the desktop if your thread doesn't yield. Set them below normal and on new-fangled frequency switching CPUs they might not get the full CPU speed/voltage. (I don't specifically know why your thread 7 would come first though.)
I think your experience is with old JSF versions. In JSF 2 custom components are absolutely trivial to create using composite components. Java based ones for more complex cases are really not that difficult either anymore. The biggest problem of JSF was jsp. Ever since that was dumped things got better at an incredible pace. The current version is absolutely great.
Version 2 made quantum leaps ;)
I tried to watch it but it started repeatedly crashing out about 35 minutes in. It wasn't the most interesting thing in the world and I hadn't really learnt anything so I gave up. Hopefully there was nothing good in stages 6 to 9!
Yes, definitely old versions (my first exposure to it was with IBM PS 6, which had 1.0/1.1)â€¦ so in this JSF 2.0 age, would you recommend any particular JSF build?
IMHO it's OK, because threads with lower priority start first. What will happen if you start the threads in reversed order? t10.start(); t9.start()...
I would personally recommend to just go with the latest version, which is JSF 2.1. There are two main implementations, Mojarra and MyFaces. Mojarra 2.1.3 is the latest one and runs really well. I haven't used MyFaces for some time, but I've heard it's pretty good too. For instance, it's better at dynamically manipulating the component tree than Mojarra (but then again dynamic manipulation is rare, so this isn't a top selling point)
If your experience is with 1.0/1.1 I can understand your aversion. Those were horrible. There was a rough diamond in the core design, but the user experience was totally ruined by a slew of silly problems and a utterly crappy implementation by Sun. I hated JSF back then. 1.2 was just passable, provided you used Facelets, Tomahawk and carefully read the articles by BalusC. From 2.0 onwards the framework is really good and is only getting better.
I used to use ws-xmlrpc
I was under the impression that Java Threads are OS independent since they run inside the JVM and not at the kernel level (i.e. Java threads have nothing to do with the underlying OS and more to do with the VM they are running on). 
Thanks a bunch. Fixed up both of those problems.
Could you work around this by having the first thing the thread does is yield until an agreed-upon start time, say, 3 seconds after you start launching threads? final long startTime=System.currentTimeMillis()+3000; Race t1 = new Race(horseNames[0], ted, priorityComboBoxArray, startTime); Race t2 = new Race(horseNames[1], ted, priorityComboBoxArray, startTime); Race t3 = new Race(horseNames[2], ted, priorityComboBoxArray, startTime); ... public class Race extends Thread { public void run() { while(System.currentTimeMillis()&lt;startTime) { Thread.yield(); } //Off to the races. ... } }
trollin?
 public static boolean returnTrue(){ return false; }
any book on java 6 will do, there are a few language features you can take advantage of in 7, which you can learn in all of 5 minutes after learning 6
I think 5 and above should be just fine. I just read Head First Java and I believe they used 5, and I still learned what I needed to. If you are really concerned about it, just look up the differences between the versions. From what I read of 7, you aren't going to miss anything except maybe binary literals or strings in switch statements. Not sure why it took this long for Strings to be in a switch...
http://math.hws.edu/javanotes/ thats the book we are using for class, its quite informative and free so you cant really go wrong. 
Thanks :)
Okay, good to know, I was worried that I would miss a lot :P
Thanks, it looks great :)
Jesus. Who does that?
no problem, as for ide's people seem to like Eclipse
 public String toString(){ return "I'M A MOTHERFUCKER SUCK MY CUNT"; } *edit: thanks bjb*
It is still better than throwing magic numbers around. Well, a little better than throwing them around at least.
[Hello World using NetBeans](http://download.oracle.com/javase/tutorial/getStarted/cupojava/netbeans.html) [Pig Latin Translator](http://eventfuljava.cs.williams.edu/sampleProgs/ch19/lectures/PigLatin/PigLatin.java) [Webcrawler](http://java.sun.com/developer/technicalArticles/ThirdParty/WebCrawler/)
More common are things like: public static boolean evalWhatver() { /* This always returns true */ return false; } Often dressed up with lots of misdirection and sloppiness to make you want to believe the comment more than the code. 
Could be worse. TWENTY_SEVEN = 50; TWENTY 48; SEVEN = 94; x = SEVEN + TWENTY_SEVEN + SEVEN - TWENTY; 
Scumbag boolean. Promises to returnTrue... returns false.
that's a complete breakdown of a functioning development team if that ever made it into production...
`int GIRLFRIENDS_AGE = schfiftyfive;` `int MY_IQ = schfiftyfive;` `int YOU_MUST_PAY = schfiftyfive;` `if (5 + 5 == 50){` return shfiftyfive; `}`
Never believe the comments. 
Naming is probably the most important skill one can develop in programming. It can make or break how readable your code is and if a library is useable and intuitive.. 
What is wrong with the Apache's?
 public static void returnUnixTimestamp() { // Troll'd }
 public static void returnUnixTimestamp() { // Troll'd }
That is a hard task to accomplish. Damn you garbage collector! Here are some examples: http://stackoverflow.com/questions/6470651/creating-a-memory-leak-with-java 
Thinking in Java by Bruce Eckel is one of the best i know. [3rd edition](http://www.mindview.net/Books/TIJ/) is free as ebook.
 public static int abs(int i){ return -1; }
Yeah, at least it can be renamed something semantic (I'd hope) later on.
You can't do this. It won't compile. toString() in MyObject cannot override toString() in java.lang.Object; attempting to use incompatible return type found : int required: java.lang.String public int toString() {
Lets hope I/you never find out..
won't it compile as an overloaded method? It won't compile with @Override for sure.
public static boolean isValidated(){ return true; }
Jesus, thats who!
He's a terrible programmer.
I don't think java can infer which method to call based on return value. 
To be overloaded, the list of arguments must differ.
You can't change return types when you override a method.
open up a terminal and type java -version. You have two different JVM's, I'm guessing they moved to openjdk or something in 11
That's not true either. You can override String toString() { return "hello world"; } from the Object superclass that way. It still has the same arguments.
I said overload, not override.
So you did. My mistake!
Maybe they are working in base 21.5 ?
I hate people that post links to an image that contains a line of text. WTF is wrong with you people?
both are using Java web Start 1.6.0_26, both are using openjdk the version on Mint 11 is updated, 2.0.0 instead of 1.9.9 sort of things... I can replicated the error/crash on the Mint 10 machine, and it shows the red Oracle logo when it crashes. the error reporting is always the same thing: Exception in thread "main" java.lang.NoClassDefFoundError: BB2/jnlp Caused by: java.lang.ClassNotFoundException: BB2.jnlp at java.net.URLClassLoader$1.run(URLClassLoader.java:217) at java.security.AccessController.doPrivileged(Native Method) at java.net.URLClassLoader.findClass(URLClassLoader.java:205) at java.lang.ClassLoader.loadClass(ClassLoader.java:321) at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:294) at java.lang.ClassLoader.loadClass(ClassLoader.java:266) Could not find the main class: BB2.jnlp. Program will exit. 
His creations are full of memory leaks and and vulnerable to viruses.
Was just coming to write that. Comments are useless. Your code readability should be self explanatory. If there are any unexpected artifacts from your code, it should be self evident. In most cases, an unit test is far more useful than a comment; it ensures code is doing what is expected and gives other developers an explanation of usage.
This is the truth right here. if the code accepted an argument or something, it should work though because java would overload it.
What? This is the second time I've seen this mentioned in this thread. People do this? Why?
My usual recommendation in this particular vein of posts is to tell people to get a subscription to O'Reilly's Safari On-Line Bookshelf. For the money, you get access to more resources than you can believe. http://my.safaribooksonline.com/
I disagree. I write as though I am writing an API to my design. I hope my team members are able to use my code the same way that they would expect to use the Java standard libraries. This means documentation. At the very least, I like my team members to be able to see Eclipse's automatic javadoc from my comments when they get contextual help. If I have a Paint class that accepts an enumerated Paint.Type in the constructor, when someone types: "Paint." and then when: "Type" pops up in contextual help, the documentation: "Enumerated types of paint. These describe the behavior of the Paint. One of these must be passed to the constructor" should show up, and then when "OCCLUDE" pops up in contextual help, the documentation "A type of paint that obscures whatever is behind it." absolutely should show up with it. That's just an example I thought up off the top of my head. I haven't actually made anything with those actual types, but you see what I mean. I am just illustrating the usefulness of automatic documentation through comments when writing as an API. I would probably not actually have a "Paint" type accept an enumerated "Type" in its constructor, and would probably actually have "Paint" be an interface with many other kinds of "Paints" that implement it. Still, you can guarantee that, in my code, when someone hovers over the word "Paint" in Eclipse, it would tell you what it is. Unit tests are important, but they do not absolve you of your responsibility to document as you code. If you write a component, and that component doesn't explain itself to people who are using it, then you're not being professional. Also, it makes your design unfriendly if someone ever uses it as a compiled library, and can't see your code, no matter how self-explanatory your code may be. Or, perhaps, even if they can always see your code, it's still terrible to have to stop what you're doing and inspect someone else's code to figure out what a public interface is supposed to do. At the *very* least, every single time you make an interface, it should have a javadoc, and that javadoc should explain what each method and static value is and what they're supposed to do. Not only for people who are using implementations of that interface, but also for people who are *implementing* that interface so that they keep the implementation inside the intended purpose of the interface.
It's called "job security".
It can't, I've tried on output stream close before when I wanted to add some information to the return. Had to create a method that took a meaningless arg.
Comments can sometimes be misleading, therefore they are useless in general? You are right about writing self-evident code and the importance of unit tests, but let's not throw out the baby with the bathwater here.
I just removed about 50 **public static final int**s, ranging from 0 to 70, from a GUI listener class. and replaced it with an **enum**, bitches love **enum**s.
This is a great book we've been using in class: http://library.nu/docs/HI3MV4J7BK/Absolute%20Java
Java doesn't allow overridden methods to change the return type, except to return a more narrow type than the original method. That is, a sub-class of what the original method returned (or similar for interfaces).
I don't think that OpenJDK is allowed to use Oracle's name in that splash screen, though I may be mistaken. I think the 10.0 machine has sun-jdk on there
http://code.google.com/p/json-rmi/
http://json-rpc.org/wiki/implementations
at least it's faster
So, I'm not going to try and decode all of this off the bat, but rather just provide you with some guidance; if you have trouble beyond that please reply to the comment. If you have a directory called c:\mystuff\ containing MyCrawler.java and you want to compile that, you would switch to c:\mystuff and run: javac MyCrawler.java This is the java compiler, and it should produce MyCrawler.class. Note that you did include the file extension here. To run this, from the same directory, run java MyCrawler Note that this did not include the .class at the end. This should run your program. Let us know if this works.
Use an IDE 
They take three days to compile.
If the bathwater has given the baby a highly contagious virus which threatens the lives of everyone in the area, it's a good time to throw the baby out with the bathwater. And code comments are like that.
Sorry, I can't upvote it for the colors alone. But they are lovely colors.
Six days...
Can't wait to change all my nulls to Options, use Ranges, DiscreteDomains and the EventBus!
The code compiles fine, but the error happens when I try to run either MyCrawler or Controller, regardless of whether I include the .class extension or not. The dependencies all seem to be .jar files, so I shouldn't have to do anything else after extracting them into the folder I specific in the classpath, correct? Hurm..
Here's some advice for Horstmann from "Core Java Vol I (Version 6)" qouted directly: "Thread priorities are highly system dependent. When the virtual machine relies on the thread implementation of the host platform, the java thread priorities are mapped to the priority levels of the host platform, which may have more or fewer thread priority levels. For example, Windows has seven priority levels. Some of the Java priorities will map to the same operating system levels. In the Sun JVM for Linux, thread priorities are ignored altogether - all threads have the same priorities" 
Comments should describe purpose and sometimes implementation details, but never effect. 
That is just booting up the system. 
On windows you don't need to install the JRE / JDK at all. Simply add the directory were the java.exe lives to the **PATH** system variable and set what you need in **CLASSPATH** and you are good to go. I use allot of tools with out full installation (Eclipse, etc, makes building a Dev machine a 5 minute procedure copying files instead of a day or two of getting it all into the Goldilocks Zone). .^.^edit^corrected
This is a common optimization practice. If you look at a number of open source libraries, they use this to optimize the allocation of memory. Anytime that there is a vararg with a common usage of a small number of arguments, API writers would overload them with defined varargs. For example: public static void foo(String value); public static void foo(String value...); The difference between the first and second is that an array is allocated in the latter at runtime whereas a String reference is allocated in the former. So to take advantage of this fact, programmers would overload varargs methods with a small number of pre-defined arguments. For example: public static void bar(String value1) public static void bar(String value1, String value2) public static void bar(String value1, String value2, String... otherValues) Examples: [Java5 EnumSet#of](http://download.oracle.com/javase/1,5.0/docs/api/java/util/EnumSet.html#of(E, E, E) ) [Guava Joiner#join](http://docs.guava-libraries.googlecode.com/git-history/v10.0/javadoc/com/google/common/base/Joiner.html#join(java.lang.Object, java.lang.Object, java.lang.Object...) )
I would recommend not being overly quick to use the JDK 7 specific features as JDK6 is still very common "in the wild" - you'd be limiting compatibility a bit. This is probably a moot point because you're just starting to learn and by the time you're making something you want to distribute, JDK7 will probably be common. But it's good to be aware of this sort of thing later. As a general rule, develop with the lowest version of the runtime you intend to support and then test with newer ones.
The error sounds like you try to run the java runtime with a Java Webstart (.jnlp) file. So the file is called "BB2.jnlp". The command "java BB2.jnlp" tries you load a class from "BB2/jnlp.class", hence that error. You need to run "javaws BB2.jnlp" or make it run. Most likely by fixing file associations for .jnlp files to be opened with javaws.
You just made my day. I didn't attempt to verify your math, but have an upvote.
Thanks, That reminds me of a question, do I have to learn every version of Java new?
Never learned this in my advanced Java class last semester, thanks for posting! 
I would recommend heritrix here but it is a tangled mess of java code. It might run more readily though
No problem. Also, I would highly recommend reading through [Effective Java](http://www.amazon.com/Effective-Java-2nd-Joshua-Bloch/dp/0321356683) by Joshua Bloch. It's a great read once you learn the basics of Java and want to advance with some great advice backed by real world experience. The varargs discussion is Item 42 in Effective Java. He goes into great details about this. See the [Preview](http://my.safaribooksonline.com/book/programming/java/9780137150021/methods/ch07lev1sec5#X2ludGVybmFsX0ZsYXNoUmVhZGVyP3htbGlkPTk3ODAxMzcxNTAwMjEvMTk5)
But what about javac.exe? I needed that. Anyway, my problem is solved.
Not really. Mostly the support libraries add features and fix bugs (usually with decent backwards compatibility) but it's not necessarily obvious what the minimum version that supports a given enhancement is.
Okay, when I try to open netbeans IDE it always gives me an error, I can't remember it right now, it's something about not being able to create the JVM I think... It's something with a J and a V, sorry for bad explanation &amp;#3232;\_&amp;#3232; 
It's usually not as blatant as the example, but the reason why you'll see it, more often than not, is that someone fixed a function in a way that changed its behavior from what it used to do -- without updating the comments. So, the thing that /\* returns a three element array \*/ now returns a four or five element array, much to the next guy's surprise.
I didn't say JavaDocs are useless. I said comments are useless! Nowhere in your response do you make an argument for comments. JavaDocs are critical. If you have a public method and you don't write JavaDoc, I hate you!
It's late for me here, but I'll look into it in the morning. Thanks for the advice. Given that the crawler4j page gives sample code to fit the dependencies, I guess I'm also kinna curious as to if anyone else has made the sample code work, it seems to me like all the hard work has been done, but I'm just having problems since I'm not extremely familiar with java (although I'm using this as an incentive to become more familiar with it) 
Okay, so I'm bad at not sleeping. I did some preliminary research into heritrix, (wiki) and see that it's a crawler. I'm specifically looking to scrape pictures, however. Crawler4j has this functionality (there's even a sample code for scraping), but it doesn't seem like heritrix does, although I'm sure it could be adapted to do so.
When you set the PATH to the java.exe directory that will also include any other executable's in that directory.
Making an applet is really just a question of copying a few lines of code from a tutorial. Making an applet that does something, well that depends. I started typing a reply here but I quickly realised that what you would potentially need to handle could get quite big. We can probably start giving you a better answer if you provide a lot more detail about what exactly you want it to do. At a base level it could display a bunch of pictures of lessons and have a next and previous button to take you through each "page". That would be very manageable for a beginner. To be honest though I'd probably not recommend doing it in an applet. It seems like a web page with javascript to provide the programming aspect (present maths questions, use the JS to check answers and keep score etc) would be a lot easier to make and actually provide a better result. Flash would be my second choice. Is there any reason you want to make a Java applet? Whilst Java is a fine language applets have more than their fair share of problems.
You could just switch to Scala.
Applets are not difficult to use. There are plenty of tutorials online which will show you how to build one. But they tend to require a lot of boiler plate, and it is a lot of work to get good, well polished results. Both Flash and HTML/CSS based solutions tend to look and feel a lot nicer, whilst taking a lot less time to build. You can always tell when a web application is built using an applet, as they have a cheap Windows-y feel to them (like it's running on Windows 95). Personally, I would recommend just build it using HTML and JavaScript.
thanks for the advice, the reason i just said java is simply due to the first ideas i have for this task 
well it would be teaching aids with adjustable variables such as explaining Pythagoras, Algebra at GCSE grade ect. nothing really complex
well it is due to the fact that java is one of the languages allowed by the exam board. Its a really silly restriction. What other language do you recommend? 
Could you use Java and compile it with GWT? http://code.google.com/webtoolkit/ Write in java, compiles to Javascript. There is a bit of a learning curve, but you're still coding in Java! :)
Well like I said Flash (Actionscript) or HTML (Javascript). If Java is approved though then you could certainly get something going, it will probably take longer than either of the other approaches but it's far from impossible. Do you have any experience with Java? There will be a bit of a learning curve right at the beginning, particularly when working with an Applet.
So, as someone that doesn't know anything about Guava, that website kinda sucks. There aren't really any "getting started" kind of things about what Guava offers. Looking through those release notes and poking through some of the other pages I get a rough idea, but it would be nice to have a high-level overview of the library.
I would highly recommend not using Java applets. There is a major ssl vulnerability in common browsers that take advantage of applets to hijack an ssl session. Both Chrome and firefox are considering blocking applets by default. This is going to break a number of major websites as is. Plus, applets are 13+ year old technology. Everything you can do in applets you can now do in Ajax http://www.theregister.co.uk/2011/09/29/firefox_killing_java/
The PDFs linked from the project homepage shed a little more light.
Does it say /r/scala in your browser? No? Then go away!
Any idea when will it be available from Maven's repo? Currently the latest version is 10.0-rc2 Edit: oh I see, it has already been uploaded. Good job! &gt; This release will be identified in the Maven Central repository as com.google.guava:guava:10.0 and com.google.guava:guava-gwt:10.0
Oh. Did not mean to offend.
ahh, thanks. I looked at the concurrent slides and said meh. Just read over base/primates/io one and got a much better feeling for it. I do like it. Feels like the things I was looking forward to in Java 7 are already in here (and I don't have to require Java 7). But I still think a living wiki page that did an overview of the framework would be nice.
a good suggestion, but I was using javaws
I hate it when people do this: public int foo() { ... } catch (SomeException e) { throw new SomeOtherException("good luck debuging this!"); } } rather than this: public int foo() throws SomeException { ... } 
take a look at http://download.oracle.com/javase/1,5,0/docs/api/java/util/concurrent/CountDownLatch.html
Never really played with netbeans, sorry! Make sure you've got the jdk set up properly - google and you should find howto's for windows. Get used to looking things up on google, you'll be doing it all the time when you're programming.
[Here](http://www.ibm.com/developerworks/java/tutorials/j-threads/section3.html#N102830) is one solution. Basically tell each thread to wait on the next before completing. Thread[] threads = makeMyThreads(); for(Thread t : threads) { t.start(); } try { for(Thread t : threads) { t.join(); } } catch(Exception e){ /*Do your own cleanup*/} finally { //Update JTextfield } That whole article I linked is a good resource for threads. It's a relatively easy read and goes through the basics of threads.
&gt; My professor gave extra credit to figure out how to report that all ten threads are done There's about twenty ways. It's tempting to create all the threads in a single ThreadGroup and then use ThreadGroup.activeCount(). But the javadocs say that activeCount() isn't always accurate. Shit like this drives me completely insane - I don't understand why you could give someone an API call and then say, "Dur! Hur! This API call *doesn't do what I said it would.* Ha, sucker!" Maybe this is why Sun went out of business. If you can change the code in the threads' run() method, you could make run() call a threadHasFinished() synchronized method on some public object as the last thing they do. The threadHasFinished() method can keep a internal counter, and when the counter gets to 10, all the threads are done, and it changes the text field. Seems to me there is a small possibility of a race condition here - the thread could get suspended just after it returns from the threadHasFinished() call, but just before run() actually exits. You could spawn ten more threads, each one calling join() on one of the original ten threads. When join() returns, the original thread is dead. Just watch out for an InterruptedException that may kick you out of the join() early. Catch this and call join() again. You could set up a timer, and every time the timer goes off, call isAlive() on all ten threads. (You'll have to keep all ten threads in an array somewhere so you can call their .isAlive() method.) When all ten threads are dead, kill your timer, and then change the text field. 
I need all ten threads to run at the same time. 
&gt; Feels like the things I was looking forward to in Java 7 are already in here Yep, that's specifically mentioned in a slide about the I/O classes.
Does this not defeat the purpose of threading? Genuine question...what am I missing?
...and they will with the above code. that code will just wait until they're all done (in parallel), then the "//Update JTextField" will happen.
[Thread#join()](http://download.oracle.com/javase/6/docs/api/java/lang/Thread.html#join%28%29) just waits for the target thread to die before continuing execution, if the thread is already dead then it will continue automatically. It doesn't actually tell each thread to wait for the next before continuing. Rather it will execute all the threads at once and then wait for them all to finish.
off topic: for me one of the most painful experiences in programming was finding out that androids "AsyncTask.cancel()" sometimes works and sometimes does not... "look at me, i will cancel this task now! GOTCHA!"
Seriously makes me want to fly to wherever these fucksticks work, with my sword, and behead them. :P I'd get the electric chair for sure... but it'd be SOOOOOOOOOOO worth it.
Nice find, I've never used that class before. Looking through the javadocs it looks like CyclicBarrier would be easier though. Something like: barrier = new CyclicBarrier(THREAD_COUNT, new Runnable() { public void run { // Update JTextField }); Then when each thread is done processing just have them call barrier.await(); Edit: I should note that part: // Update JTextField Shouldn't really update the text field. Rather it should use SwingUtilities.invokeLater
I actually use scala for all my own projects, and I find it frustrating having to go back to using Java in my day job. The 'Function' and 'Predicate' interfaces from the original google 'collections' are still the most used/useful -- most of what I use Guava for is transforming/searching collections. What seems to work best is to have a 'Functions' suffix for your POJOs (preferably generated). For example, if I write: class User { ... public String getName() { ... } } then I'd have a (generated) UserFunctions class like this: enum UserFunctions { ; // uninstantiable public static final Function&lt;User, String&gt; GET_NAME = new Function&lt;User, String&gt;() { public String apply(User input) { return input.getName(); } } ... // (functions/predicates for other properties here } So (finally getting to the point), in your code you'd then have: ... Collection&lt;User&gt; users = ... Map&lt;String, User&gt; usersByName = Maps.uniqueIndex(users, UserFunctions.GET_NAME); Collection&lt;String&gt; userNames = Collections2.transform(users, , UserFunctions.GET_NAME); ... and lots lots more!
Wouldn't it be simpler to simply call join() on each thread right in your main thread? t1.join() t2.join() t3.join() t4.join() t5.join() t6.join() t7.join() t8.join() t9.join() t10.join() now, when your code makes it through all that, it can only be because all 10 threads are dead. And if you put them in some sort of list or array, you can save yourself many lines of code, of course.
Slashdot has a nice comment section about this whole thing. http://developers.slashdot.org/story/11/09/29/1323235/to-stop-beast-mozilla-developer-proposes-blocking-java-framework EDIT: to add, TLS 1.1 and 1.2 support wasn't added to OpenSSL until 1.0.1, which there are only dev snapshots available for. So no TLS 1.1 support for Apache, Nginx, Lighttpd, or any of your other favoriate linux tools most likely.
&gt; Try building a reliable solution [using activeCount()] to this problem even assuming ThreadGroup.activeCount() always returns an accurate result. You can't. You're right, "Active" isn't even what I care about. All I want to know is if the threads are all TERMINATED or not. Active or asleep is the wrong distinction. It isn't helpful.
I don't know join() well enough to know what will happen if you call it on a thread that's already TERMINATED. I assume it would return immediately, but since I can't be absolutely certain (javadocs are silent on this issue), I didn't recommend this course of action.
I wondered that too, but I figured it's worth trying and seeing. Seems the simplest method.
I agree. Totally worth trying.
I've done something like this before.... not sure how correct it is but it seems to work (this isn't tested) public abstract class CallbackRunnable implements Runnable { public interface ICallbackRunnable { void onWorkComplete(); } private ICallbackRunnable _callback = null; public CallbackRunnable(ICallbackRunnable callback) { _callback = callback; } @Override public void run() { work(); if (_callback != null) _callback.onWorkComplete(); } public abstract void work(); } public class test { public static void main(String[] args) { ICallbackRunnable callback = new ICallbackRunnable() { @Override public void onWorkComplete() { // thread just finished! } }; CallbackRunnable newThreadRunnable = new CallbackRunnable(callback) { @Override public void work() { // do whatever } }; Thread newThread = new Thread(newThreadRunnable); newThread.start(); // thread will start, do work() and then execute the callback when it's done } } Basically just creating a class that implements Runnable and in run() calling the user defined work() method and then a callback to let the user know it's done.
1. Spawn a new thread. You'll use this to launch the 10 threads you need. 2. Inside that thread, spawn your worker threads and store them in a List: **List&lt;Thread&gt; myThreads = new ArrayList&lt;Thread&gt;();** **// create threads and toss them in your list** 3. Have the spawning thread call *join()* on all 10 threads. **for (Thread thread: myThreads) try { thread.join(); } catch (InterruptedException ie) {}** 4. As soon as step #3 is complete, all 10 threads have died, update your JTextField. There are other ways to do it, but this one is straightforward and doesn't require any knowledge of anything other than the Thread class... I'm not a fan of most of Java's more advanced threading management stuff.
A queue with `synchronize` will work for the extra credit.
Java is disabled by default for Chrome. 
There's always GNU TLS, but I can't seem to get it working on my server for some reason.
Your computer's math is just fine. `^` represents a bitwise XOR operation. Read up on this at [Wikipedia](http://en.wikipedia.org/wiki/Bitwise_operation). `0b101` XOR `0b011` = `0b110` = 6 EDIT: Had a typo where I swapped the 1 and 0 in the last binary term.
Because the caret symbol (which is being rendered as a superscript control character here) means binary exclusive-or in Java. 5 = 101b 3 = 011b 5 xor 3 = 101b xor 011b = 110b = 6
The other comments address the XOR problem, but to actually use powers you'll want to use the [pow function from java.lang.Math](http://download.oracle.com/javase/1.4.2/docs/api/java/lang/Math.html#pow(double, double\))
Eh, as a general rule you don't ever want to block in your main thread in any sort of GUI application (Swing, SWT, Android, Windows, *anything*). However it's trivial to spawn a thread that then turns around and creates the worker threads, then calls join() on all of them.
You can be absolutely certain that **join()** on a dead thread returns immediately - programmers rely on that behavior all the time, and if they ever change it all kinds of things are going to break. But you're right, the Javadocs aren't real clear, they just say "join() waits for a thread to die."
Thankfully we don't have to rely on the docs to know what it does: /** * Waits at most &lt;code&gt;millis&lt;/code&gt; milliseconds for this thread to * die. A timeout of &lt;code&gt;0&lt;/code&gt; means to wait forever. * * @param millis the time to wait in milliseconds. * @exception InterruptedException if any thread has interrupted * the current thread. The &lt;i&gt;interrupted status&lt;/i&gt; of the * current thread is cleared when this exception is thrown. */ public final synchronized void join(long millis) throws InterruptedException { long base = System.currentTimeMillis(); long now = 0; if (millis &lt; 0) { throw new IllegalArgumentException("timeout value is negative"); } if (millis == 0) { while (isAlive()) { wait(0); } } else { while (isAlive()) { long delay = millis - now; if (delay &lt;= 0) { break; } wait(delay); now = System.currentTimeMillis() - base; } } } /** * Tests if this thread is alive. A thread is alive if it has * been started and has not yet died. * * @return &lt;code&gt;true&lt;/code&gt; if this thread is alive; * &lt;code&gt;false&lt;/code&gt; otherwise. */ public final native boolean isAlive();
Jesus saves though. 
uh oh (jk lol)
Pretty much all software licenses have the same or similar clauses.
How should we program a nuclear power plant then?
mechanically?
If you can't use it in a nuclear facility, then why does it have classes like [AtomicBoolean](http://download.oracle.com/javase/1,5.0/docs/api/java/util/concurrent/atomic/AtomicBoolean.html)? :P
What IDE would you suggest?
LOL. Did you facepalm over this?
Caret used to be exponents right? Or did it always require special care Edit: now that I think of it, I'm just talking about math in general/calculators
It has always been this way in Java, C, and C++. Exponentiation has never been a core part of the language, but has always been provided by libraries. (IIRC)
with due diligence
In Cobol
it would just be import java.lang.Math; But I don't think you even need to import Math
Pretty sure you meant Java, not Javascript. Anywhoo, for an IDE, which will double as a compiler, I personally use Eclipse. Also, just download the JDK.
Ada
Solid advice.
There is no reason to do that though
I remember reading that in there in the late 90s
It's Java Duke Atomic Edition ;) BTW, [TicTacToe](http://java.sun.com/products/plugin/1.5.0/demos/applets/TicTacToe/TicTacToe.java) can cause meltdown too
I use JCreator cause they used it at my school, I've never tried eclipse but that's what I hear mostly used I'd love to help u out, I'm fairly new to programming java games but I'm working on two at the moment, the first (though I've changed it some since then) is posted in here under "my first java game"
Right now I'm just using jEdit for a text editor and debugging through lots of System.out.println()'s when needed. This might not be a good approach for larger applications where a real debugger could save a lot of time but for what I need it for it works fine. One of the areas where an IDE would be nice is quickly doing GUI component arrangement, like basic dialog boxes. (bad analogy time:) Making a graphical java program through code only is a bit like if a sculptor would start with a bag of sawdust instead of a chunk of wood and glue it together instead of carving it out. If you're creative you can make things that would be impossible to carve but it can be a lot more work for simple things. Anyway, eclipse and netbeans are the popular open source ones as far as I know. I'm not really an expert though, there may be others.
I fixed the flicker problem by manually double buffering, so I'm not too sure how true this auto buffering is.
Do you mean Java or JavaScript? They're two totally different languages. JavaScript is used for Web-based games and a bunch of other stuff. Java is mostly used for server-side programming and business applications. If you mean JavaScript, I'd suggest asking this question in /r/javascript. If you really want to try writing a game in Java, [Eclipse](http://www.eclipse.org/) is the ultimate IDE for Java development. As for JVM, just grab [the standard Java SE JDK](http://www.oracle.com/technetwork/java/javase/downloads/java-se-jdk-7-download-432154.html) from Oracle.
 [Eclipse](http://www.eclipse.org/) is the gold standard for Java IDEs. Personally I can't stand NetBeans. You'll need to install [the Java SE JDK](http://www.oracle.com/technetwork/java/javase/downloads/java-se-jdk-7-download-432154.html) first, if you haven't done so already. Eclipse should detect and use it automatically. There are a few plugins for Eclipse that provide GUI component design, personally I just do it by hand. What's *really* nice about Eclipse (and other IDEs) is autocomplete (type "foo." and they pop up a list of all the methods that make sense in the statement you're working on), their ability to catch compilation problems on the fly, and their ability to do easily do things like jump to a method/class/whatever definition. In Eclipse, for example, you can just CTRL-click on a variable name or method call and bam, you're looking at the point where that method or variable is defined, even if it's in another file.
Glad to know i helped, even if a little. :). Mind posting the updated code?
As other people have pointed out, thread priorities are highly system dependent and therefore unreliable. This is true for all languages, not just Java. If you really, absolutely need to have Thread A complete before Thread B, the most straightforward way is to have Thread A *spawn* Thread B, then have Thread A join() Thread B: Thread A = new Thread(...); // Thread A will spawn Thread B, see below A.start(); Then, inside Thread A's run() method: Thread B = new Thread(...); B.start(); // Thread A can do some work here... or not, whatever suits you try { B.join(); } catch (InterruptedException e) { }; // At this point B has completed, A can now do whatever needs to // be done after B is finished There are other, more complicated ways involving inter-thread communication, but this way is dead simple. Also, this makes baby Jesus cry: Thread t1 = new Thread(...); Thread t2 = new Thread(...); // ... t1.start(); t2.start(); // ... t1.join(); t2.join(); // ... Do something like this instead: // create your threads and throw them on a list List&lt;Thread&gt; threads = new ArrayList&lt;Thread&gt;(); threads.add(new Thread(...)); // start all the threads for (Thread thread: threads) { thread.start(); } // more work can be done here // join() all threads for (Thread thread: threads) { thread.join(); } There are more complicated ways to manage groups of threads with ThreadGroup etc, but again, this way is dead simple.
Don't fear the List... it will quickly become your best friend, and it's dead simple. However, 99% of the time you'll want to use ArrayList, not LinkedList. They both do the same thing, but ArrayList is *much* faster in almost every case you'll encounter. Also, you'll generally write: List&lt;Integer&gt; numberList = new ArrayList&lt;Integer&gt;(); not ArrayList&lt;Integer&gt; numberList = new ArrayList&lt;Integer&gt;(); Without getting too confusing, both ArrayList and LinkedList implement List, they just have different ways of going about it..
I highly suggest taking the time to learn Eclipse. *vim* is a fantastic text editor, but once you get the hang of Eclipse you'll be able to blow even the most seasoned *vim* users out of the water. Want to rename a class method and have every single reference to it in your program get automatically updated even though there are thousands of references spread across dozens of projects? Eclipse does that - just find where the method is defined, push SHIFT-CTRL-R, and type in the new name. Boom, done. Want to find the definition of the method so you can rename it? Ctrl-click on the method name ANYWHERE YOU USE IT and it will take you to it. And that's just scratching the surface.
You'd also need all the system .jars.
So I'm pretty sure that's because it's not a real-time language (at least the default impl isn't), which means you can't guarantee that any particular statement will complete in any particular amount of time, so it's unsuitable for things that need that kind of control, like airplanes or, as mentioned, Nuclear facilities. Sorry to be all boringâ€¦
Java != JavaScript. Get OpenJDK or Oracle JDK, there's no practical difference. They both contain a compiler and a JVM. Get Eclipse as your IDE. It's the best.
&gt; an IDE, which will double as a compiler Technically, the IDE uses the compiler from the JDK. 
i wonder if they got into legal trouble with a nucler power plant or something? They specifically mention nuclear power plants but not other types of power plants, or other similar applications like jet airplanes or military applications..... Yet I would assume you wouldn't want to use it for these purpses for the same reason you woulnd't want to in a nuclear power plant.
Challenge Accepted
I'll be even more boring. It is actually a pretty standard clause that I have seen in many products. Even when I was a QNX(a real tiem operating system) developer their license had a clause about nuclear and medical equipment. 
HTML5.
oh yeah i saw that one
ok well thanks i didnt know of the technical differences between the too so ill move this post to r/javascript
Call "join()" for each thread. "join()" causes the main thread to wait until that thread is complete, then it will return letting the main thread to continue. Win32 API has a WaitForMultipleObjects function which you can pass a multitude of handles to do this process for you. Java may have a thread container that does something similar.
"java script" better start with Flash because you have no clue.
i am not a big flash fan tried it once
You need to go back to school.
&gt;Don't use nuclear facilities
Is it that hard to look at the Thread API also &gt;setting thread priority ISHYGDDT
If you want to learn OO look at Smalltalk.
I read the title as "nuclear family" and was supremely confused for a full minute.
Im using Intellij and I love it. My current side project uses jMonkey as its game engine. Seems decent. I believe there's some 2d game engines out for Java, so you may want to take a look at those for your first few projects. Plan to build little little games. Asteroids is fun early. Tetris is good. Then start going up from there. 
I would like to know the actual answer to this. Probably C/C++ ?
Emacs
If you haven't already, you may want to check out [Java Gaming](http://www.java-gaming.org/) which to my knowledge is the most active community discussing Java game development.
You use Java anyway, being extra careful about it, and you can't blame Oracle if something terrible happens. 
A language is only as good as its compilers. I take it Ada has exquisite compilers?
Karma!
Applescript.
&gt; `0b101` XOR `0b011` = `0b110` = 6 FTFY
If you rely on undocumented behavior, you are setting yourself up for a fall. If it's undocumented, that means the people who control the language can change it at any time. And your code would then be broken. I will *not* recommend anyone make their code dependent on functionality that could change. It's bad engineering.
Sorry if it is not relevant, but I remember seeing a similar error when installing Java. Basically, it was because I was trying to install 32bit java on 64bit OS.
Well, I have widows 7 64 bit. However, I have been using 64 bit installer. So, I'm not sure what to do 
They actually say "nuclear facility", not "nuclear power plant". I suspect it's an "anti-nuclear" sentiment, as many software license agreements have similar clauses. For example, I heard rumour that the Sony Playstation SDK had some clause about not being allowed to use it to develop (real life) weapon or missile controls.
I'd never recommend that someone take the documentation to be the canonical source on program behavior. That's just plain dumb.
Thanks for being honest about that. I appreciate your candor. Think you're totally wrong, of course. But there's much to be said for clear communication.
It sounds like it is an an MSI error issue (missing DLLs or similar) - try [Microsoft's Program_Install_and_Uninstall](http://support.microsoft.com/mats/Program_Install_and_Uninstall) Googling for "install error 1723" brought up suggestions to clean registry and a suggestion [JavaRa](http://raproducts.org/wordpress/) (from site javafixer.org but nod32 complained about something on that site)
Thanks.
C would probably be the language of choice.
No, it doesn't say DON'T use Java. It just says Java isn't fit for this usage. Compare this to iTunes' EULA, which says that you are forbidden to use iTunes in the creation of certain weapons or something.
Alright I'll try that out in a bit. Thank you! :)
I would like to see 1 snappy action game written in java that I can run in linux. I have seen much crap.
No arrays or no Collections period?
yea thats right. simple Java code with none of those. Im so lost in this class lol
Yes any additional .jars you are using will need to be pathed. Java will pick up its own from the installation directory. Of course to do this you need to install Java on a machine then copy it.
Don't use static imports...
Sometimes it's necessary to deal with the ugliness that is checked exceptions. But you should at least pass SomeOtherException a reference to the original one. Then it'll give you "SomeOtherException .... caused by .... SomeException" in your stack trace. 
Everyone coming in here has to be thinking the same thing, which is, "Surely, Mexvizu misunderstood the assignment somehow." It's just such a good opportunity to use a arrays.
Or at least Collections. Forcing them to use something like case statements seems ridiculous.
no arrays. prof. i used an array method for our last project. this one we wants us to use simple java tools.....Im just confused as to how to use those tools. 
any help will help....dont want answer just help 
what part are you having trouble with. I modified your mainloop to put x's and o's in the appropriate places, but I haven't made any checks for winners. It also doesn't check to see if a space is occupied before entering it, but before I went any further I wanted to know what you're exactly having trouble with. void mainLoop() { String inputString; // stores user position position char userInput =' '; //uses character of user input // Display Identification Information displayIdentificationInformation(); // Display Game Instructions displayGameInstructions(); // CreateBoard displayInitializeBoard(); // Display the Board System.out.println(); System.out.println("Welcom to TicTacMore"); displayBoard(); int count = 0; while( notDone()) { inputString = keyboard.next(); inputString= inputString.toLowerCase(); userInput= inputString.charAt(0); userInput= inputString.charAt(1); char letter = inputString.charAt(0); char number = inputString.charAt(1); int index = 0; switch(letter){ case 'a': index=0; break; case 'b': index = 5; break; case 'c': index = 10; break; case 'd': index = 15; break; case 'e': index = 20; break; } switch(number){ case '1': index+=0; break; case '2': index += 1; break; case '3': index += 2; break; case '4': index += 3; break; case '5': index += 4; break; } count++; if (count%2 == 0) userInput = 'O'; else userInput = 'X'; setValueAtSquare(userInput, index); //wrong if( makeValidMove( userInput) == false) { } //displays the board displayBoard(); moveNumber++; }//-----------------------while }//-----------------------------main private boolean notDone() { // TODO Auto-generated method stub return true; }
An array is a simple tool... Without arrays or collections it ends up being hideously complicated and well... just plain hideous! Are you saying that your professor told you specifically not to just arrays or collections?
Are you sure the professor doesn't just mean you can't use Arrays (big A, the class with all the static utility functions), or are they also banning arrays, little a, the enumerated series of variables? Banning the big A makes some sense (can't use the pre-made algorithms until you understand how they work and can write your own), but little a is just tying your hands, and, really, leads to bad code.
I was having trouble with putting user input into the board, then saving that move so the next user places his move adjecent to the last move. The cross check seems much more easier since i can just use a bunch of if statement to see that. Ill try and mess around with this and see where that sends me. 
yes....he said no arrays. Im clear on that. We havent covered arrays in lecture anyway. 
I wasn't aware that you have to put your next move next to your last move. I suppose you could store the index of the last move in a global variable, and then do a check at the beginning of setValueAtSquare() before entering the value
It's a language idiom.
I'm going to give you a constructive reply in a few hours. Just don't have much free time right now.
We use FORTRAN and C in nuclear facilities.
There is no IOException(Exception) constructor. :&lt;
But there is an IOException(Throwable) constructor. Exception is a Throwable.
Why do you have comic sans' retarded step child as a system font. e: Also. Hard to tell what your problem is. Can you show us some settings. What kind of settings do you have for your project, what kind of Errors/Warning and Javadoc settings do you have for Java prefences. Normally the problem is related to your Javadoc settings somewhere. :)
First off, that font looks awful. Second, it looks like you don't have a java project in your workspace, so whatever you're editing is not being compiled.
Your trolling is a little obvious, a bit too over the top.
It's probably that terrible font.
Well, you could tell him that the entire Java community considers that an unusual request ;)
The Java compiler can't bear to even *look* at your code, much less tell you where the errors are. ;]
Looking at your code, I think it would really help you to work on the early, boring phases of your programming process. It's generally in the first chapter of your programming book, sometimes it's the entire first chapter. It talks about writing out the goals of your program and what-not. It'll mention things like functional decomposition, and will generally try and put you to sleep if you've never written a program before. This section of the book is meant to be revisited. I was never actually told this by any of my teachers, but it helped me out tremendously. This section, more than any other, will help you write good programs quickly and translates to any language. Until you feel like you have a solid system down that can tackle any programming challenge known to man, I would keep revisiting that part of your textbook with every knew program you write, and try to find more and more efficient ways of planning out your program before you actually start coding. Once you get good at that boring shit, programming gets SO much easier. So, with this problem you've got right now. I would try and start fresh, and try and divide the program up into sections before you tackle it. You know you're going to need a 5x5 board for the game, so you're going to need a block of code that stores 25 nodes with 3 possible states each (X,O, or Null). You're going to need a block of code that translates the previous block of code so that it can display the board to the user. You're going to need several more blocks of code. You know what a lot of them are, just from casually glancing at the program instructions, so write them down. Once you write down all the needs of your program, put them into your code as comments and then try and flesh it out. Not only is your coding easier this way, it really helps when you ask other people for help.
I'll post the part I changed, im on my phone right now though
Was coming here to say that. I can't take you seriously with that comic sans font.
watch thenewboston's youtube tutorials on java. they are awesome and it got me started with java.
wtf? i have 7 but i couldnt use strings in switches -_- is there something on eclipse i need to change?
My example was to show the double-bad way of dealing with exceptions. Hide the fact that SomeException might need to be handled and then suppress anything useful via the catch-and-obfuscate anti-pattern.
The java compiler might be willing to compromise and look at your code if your java file were in a java project.
That font would be [Sand](http://www.identifont.com/show?3IF). Edit: on second viewing, it's not sand. It's way worse.
The least we could do is offer [a better solution.](http://www.proggyfonts.com/)
what the fuck is that nasty image
Lets manipulate some bits :P class Player { private int bitvector = 0; public void clear() { bitvector = 0; } public void put(int x, int y) { int bitmask = 1 &lt;&lt; getIndex(x,y); bitvector |= bitmask; } public boolean isUsed(int x, int y) { int bitmask = 1 &lt;&lt; getIndex(x,y); return (bitvector &amp; bitmask) != 0; } private int getIndex(int x, int y) { return y * 5 + x; // 0-24 } }
It sounds like you want to take each roman numeral from left to right and, for each one, make sure the value of the numerals to the right of it are less than its value. Does that makes sense? Seems like there may be exceptions. Maybe I've got it all wrong though, I don't know much about roman numerals beyond X.
I believe Eclipse does need to be updated but I personally have not done it so I cannot confirm, sorry.
After briefly looking at the wikipedia page for roman numerals (lol), this seems somewhat accurate, but when there are several of the same numerals together, like CCC, I think you'd skip to the last one. I guess you'd also want to make sure the symbols are in an acceptable order. The IV IX thing would have messed me up. No idea if I'm helping at all. Just looks like a neat assignment!
This would be trivial in a language built for this. Finite State Automata. It's common knowledge that lex, and yacc/bison are the preferred tools in C. If anyone could point to similar tools for Java, I'd be interested for my own edification.
Without reading this code I can tell right away that one problem with it is that you only have one method. This would be easier to work on if you could break the logic up into smaller pieces.
This is for a school project my teacher doesn't want this into smaller pieces and it works i just dont know how to impliment the restraints. And i'm really a beginner all we've seen in class so far are if else while do while for and basic loops.
The order is good my program is fully fonctional as long as you enter a valid romain number i just dont know how to add the loop to check if the romain number entered is valid :S
I mean this in all seriousness. If it's an option, drop this class. This is a bullshit assignment. It is quite impossible to accomplish it in any sensible way without using arrays of some sort. You aren't going to learn anything useful by accomplishing it.
I see. You could add a new while loop like while (!validated &amp;&amp; !invalid) and validate the roman number there. If there's a problem with the roman number, set invalid to true. If your validation completes, set validated to true. It's unfortunate that your teacher doesn't want you to split this into smaller pieces. It would be much easier and much better practice.
What's validate? and invalid? We haven't seen those yet :( Is there an other way i can do this?
Ohh - sorry. Those would be boolean values you'd set to false. Guess you haven't seen that yet. I guess you could use a for loop to go from left to right in the string. If you haven't seen that, a crude version of it using a while loop would be int index = 0; while(index &lt; romain.length) { //do your stuff with romain.charAt(index) here index += 1; } It would probably still get really complicated inside the loop. Not sure if I have any better suggestions.
Thanks! I'll lyk how it ends out.
The way I see it, You only have to check if you have tied the game. if not, check if you won the game. everything else is a loss. That's only 2 checks instead of 9. To check if you won the game there are only three things to check. if the computer chose Rock did you select paper? if the computer chose Paper did you select scissors? if the computer chose scissors did you select rock? so only if ONE OF those conditions are met have you won the game, so you can ask all three questions in the same if statement using an OR operator. Another thing I would do is change the computers entry to be comparable to the users input, so take the first letter of the computers choice and check if it is the same, you will have to ignore the CaSe for this to work effectively. Alternatively you can make the computer only chose between "r","s" or "p" and output the full word accordingly. import java.util.*; public class test { public String compare(String playerOp,String comp){ String result = "you lose"; comp = comp.substring(0, 1); if(comp.equals(playerOp)){ result="tie"; }else{ if( (comp.equals("r") &amp;&amp; playerOp.equals("p")) || (comp.equals("p") &amp;&amp; playerOp.equals("s")) || (comp.equals("s") &amp;&amp; playerOp.equals("r") )){ result = "you win"; } } return result; } public static void main(String args[]){ String[] compOps = {"rock", "paper", "scissors"}; String comp = ""; String playerOp = ""; Random r = new Random(); Scanner s = new Scanner(System.in); System.out.print("Enter r, p, or s: "); playerOp = s.next(); comp = compOps[r.nextInt(3)]; System.out.println(comp); System.out.println(new test().compare(playerOp, comp)); }} Now read redclit's improvement below and you are golden.
At first your program made me want to punch dead babies :|, I like how you did the decimal notation even though most this should had been in a methods. For the Roman Numerals, I would first determine what the Roman Numeral given in arg[index] equals, which you do, then I would run this number through the Arabic to Roman Numeral, (assuming the Arabic to Roman is accurate), and compare the first string you started out with, with the 2nd string you got, if they equal the Roman Numeral is correct if not then it is invalid! So either create another loop that checks this or save your results in a arrayList which I dont recommend at all but I guess it is a way to work around it.
haha your code is quite funny!
That is not how to help someone improve.
Appearance preferences tab is still open. 
It's a bit "verbose" but I would do it something like import java.util.*; public class PaperRockScissors { private enum Result { WIN("Win"), LOSE("Lose"), DRAW("Tie"); Result(String description){ this.description = description; } final String description; }; private enum RockPaperOrScissors{ PAPER("p", "Paper", "Rock"), ROCK("r", "Rock", "Scissors"), SCISSORS("s", "Scissors", "Paper"); private RockPaperOrScissors(String userPressChar, String description, String beats){ this.userPressChar = userPressChar; this.description = description; this.beats = beats; } final String userPressChar; final String description; final String beats; public Result compare(RockPaperOrScissors othersChoice){ if (othersChoice == null) throw new RuntimeException("check is Null"); if (othersChoice == this){ return Result.DRAW; } if (beats.compareToIgnoreCase(othersChoice.description)==0){ return Result.WIN; } return Result.LOSE; } static public RockPaperOrScissors findFromUserPressChar(String userPressChar){ if (userPressChar == null) throw new RuntimeException("userPressChar is Null"); for (RockPaperOrScissors value: values()){ if (userPressChar.compareToIgnoreCase(value.userPressChar)==0) return value; } throw new RuntimeException(String.format("user pressed character of '%s' - doesnot match expected choices", userPressChar)); } } public static void main(String args[]){ RockPaperOrScissors[] compOps = RockPaperOrScissors.values(); Random r = new Random(); int computerNo = r.nextInt(compOps.length); RockPaperOrScissors computers = compOps[computerNo]; Scanner s = new Scanner(System.in); System.out.print("Enter r, p, or s: "); String playerPress = s.next(); RockPaperOrScissors players = RockPaperOrScissors.findFromUserPressChar(playerPress); Result result = players.compare(computers); final String msgFmt = "You %s as the computer selected '%s' and you selected '%s'"; String message = String.format(msgFmt, result.description, computers.description, players.description); System.out.println(message); } } 
(Replying to OP directly instead of TheGreatFuzz's comment so OP gets an orangered.) TheGreatFuzz nailed it with this observation: &gt; You only have to check if you have tied the game. if not, check if you won the game. I could come up with other ways to implement the solution, but since you're new to programming that is a variation on the wisest advice anyone can give you - *always look for the simplest, most elegant solution to a problem.*
If you really want to be a badass... a 5x5 array of values from 0-3 can easily be stored in a plain old Java **long**: long gameGrid = 0; long setGameGridValueAt(x,y,inputGrid,v) { // Clear the two bits at (x+y*5)*2 and (x+y*5)*2+1 to 0 long tmpRV = v; tmpRV &amp;= 0xFFFFFFFF ^ (0x03 &lt;&lt; ((x+y*5)*2)); tmpRV |= (v &amp; 0x03) &lt;&lt; ((x+y*5)*2); return tmpRV; } int getGameGridValueAt(x,y,inputGrid,v) { // Return the two bits at (x+y*5)*2 and (x+y*5)*2+1 return (tmpRV &gt;&gt; ((x+y*5)*2))) &amp; 0x03; } and then: static final MARK_NONE = 0; static final MARK_X = 1; static final MARK_O = 2; // set the position at (1,2) to X gameGrid = setGameGridValueAt(1,2,MARK_X); // find what's at (3,4) int value = getGameGridValueAt(3,4); There might be some typos in there, but the theory is sound. Those of us who grew up with very limited RAM and nothing but C (or worse, assembly) to work with used to do this kind of thing all the time edit: Another (easier) solution is to use a 50-character String and judicious use of *charAt* to read a value and *substring* and *concat* to set a value. I'll leave that implementation up to you, since you're supposed to be learning programming, not copying and pasting :)
Just a little typo.. &gt;LOOSE(Tie"),
Exactly, There are far more elegant solutions to the problem, but mine was just improving your current method. AStrangeStranger did a rather impressive take on it, as "verbose" as it may be for such a simple application his technique would be best for scalability, not likely in a game with static rules but good practise for larger applications.
oops - thanks
Close, but Tic-Tac-Toe has THREE states - empty, X, or O. So you need to use two bits and have some fun with generating bitmasks for the set operation - basically // reset the two bits located at (x+y*5)*2 GRID = GRID AND (0xFFFFFFFF XOR (0x03 &lt;&lt; (getIndex(x,y)*2))) // set the two bits located at (x+y*5)*2 to value, making sure // to clamp VALUE to the range [0..3] GRID = GRID OR ((VALUE AND 0x03) &lt;&lt; ((x+y*5)*2))
It's not a bullshit assignment... the goal is to figure out how to implement arrays without using Java's builtin array types. You can use bitmasks, strings, or any number of other solutions. It's not something you'd do normally but it's a great way to teach beginners to think outside the box.
Yep... AStrangeStranger's technique was nice, but a bit over the top for such a simple program. In my experience, premature generalization is just as bad as premature optimization.
It's a bullshit assignment. How about teaching arrays first? It's like teaching painting by tying the students hands behind their back and putting a paintbrush in their mouth. Look at the code he ended up writing for it. The complete lack of structure is not even a reflection of OP's ability - it's exactly what you'd expect from asking a learner to do something this messed up.
It sounds like arrays *were* taught first, and this is being taught as an alternative.
Here is my attempt: public class RockPaperScissors { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); Move computerMove = Move.randomMove(); Move playerMove; do { System.out.println("Choose [r]ock, [p]aper or [s]cissors: "); playerMove = Move.forValue(scanner.next()); } while (playerMove == Move.INVALID); System.out.println("Computer move was: " + computerMove); if (computerMove == playerMove) { System.out.println("Tie!"); } else { System.out.println(playerMove.winsAgainst(computerMove) ? "You win." : "You lose."); } } public enum Move { ROCK(2), PAPER(0), SCISSORS(1), INVALID(-1); private int winsAgainstOrdinal; private static Random rnd = new Random(); private Move(int winsAgainstOrdinal) { this.winsAgainstOrdinal = winsAgainstOrdinal; } public static Move forValue(String s) { s = s.toUpperCase(); for (Move m : Move.values()) { if (m.name().startsWith(s)) { return m; } } return INVALID; } public boolean winsAgainst(Move m) { return m.ordinal() == winsAgainstOrdinal; } public static Move randomMove() { return Move.values()[ rnd.nextInt(Move.values().length - 1) ]; } } } Encapsulating the basic game rules in an enum makes the code far easier to read. Edit: Combining this with the enum Result { WON, LOST, TIE; } Might make it even more succinct.
&gt; but a bit over the top for such a simple program. I started thinking that after I posted, but thought there was still some worth in it for OP in reading others ideas for how to write the solution. 
&gt;Forcing them to use something like case statements seems ridiculous. Maybe it's some sort of pedagogic trick to make the students realise how important and valuable arrays are? The logic being along the lines of "you don't know how much you love it until it's gone", perhaps.
&gt;use a 50-character String That would work, but is not a String just a wrapper around a char array?
Damnit google, stop being so damn *useful*.
I see. If you haven't learned how to do methods yet, then basically you have no way to cut it up. IMHO he's given you a fairly tough task to tackle with such a limited set of tools. You've done well to get as far as you have.
I was thinking just use a bitvector for each player and manage overlap somewhere else, but your solution works too :)
Keep track of how much you have written and create a new file when you reach your limit. Every char is 16bits (not sure if this is true when you write them to a file) so for every char you write, add 1 to a counter, when the counter reaches [131072](http://www.google.com/search?q=2+megabytes+%2F+16+bytes) you close the file and start a new one.
A char (an UTF-16 code unit) is two bytes, so if he's counting those he should stop at 1048576 chars. But it's easier and better to just write and count bytes, using a FileOutputStream and a [CountingOutputStream](http://commons.apache.org/io/api-1.3.2/org/apache/commons/io/output/CountingOutputStream.html).
Yeah, much better. Don't know why I typed in "16 bytes" instead of "16 bits".
Thanks allot mate I'm not that good at java tbh, but will try this :)
No shit sherlock.
Simple and easy solution. Perhaps better starting point in this context than more general approach with e.g. enums or Maps. We could add some refactoring to *compare* to make it more readable, maybe even self-documenting: public String compare(String player, String computer) { if (isTie()) { return "tie"; } else if (isWinForFirst(player, comp.substring(0, 1))) { return "you win"; } else { return "you lose"; } } private boolean isTie(String first, String second) { return first.equals(second); } private boolean isWinForFirst(String first, String second) { return (second.equals("r") &amp;&amp; first.equals("p")) || (second.equals("p") &amp;&amp; first.equals("s")) || (second.equals("s") &amp;&amp; first.equals("r")); } Other minor things that could be improved (to some extent these are a matter of taste): * There is no need create empty String when declaring the variable (e.g. *String comp = "";*), just leave it uninitialized. * If you don't give a meaningful name to Scanner or Random instances, you might as well inline their creation to lessen the amount of potentially confusing local variables (e.g. *playerOp = new Scanner(System.in).next();*). You would save half the lines of *main* by doing so. Usually better approach is to give descriptive names for convenience variables, e.g. *systemInScanner*. * Naming in general is very important factor of readability, as is code structure and even formatting. Class name *test* is against common Java naming policy, since class names should start with capital letter to help distinguising them from method and variable names. My choices for parameter names are maybe also poor, first and second, altough I couldn't immediately come up with better ones. *player* and *computer* would also be bad choices, since those private methods shouldn't assume the order the parameters in calling context. As in my refactoring example, restructuring the code into small methods with descriptive names helps the readability a lot.
aw how cute :) .. a real internet tough guy. adorable.
I would like to have a word with your teacher ;) I think the OP's original code is easier to read and less problematic then yours. Have a look at Mine and then redclit's (haha) improvement. 
+1 That is much easier to read/maintain. Thanks for the improvement.
Thanks! This really helped a lot.
This is the solution. You want to move that 2mb requirement to the OutputStream class. Don't keep it mixed in with your main logic. This will allow you to substitute a different output stream in the future. For example, you move to 4mb per file or all in one file. Separation of concerns.
If you want to look at it that way, every Object is just a pointer to an array of pointers... I think you're OK using String as long as you don't go the methods that go to/from char[].
You would be surprised at some uni CS professors, I don't know how they have jobs. I had professors in my senior level courses not want me to use design patterns or basically follow any best practices because they felt they served no real purpose and said I was wasting my time... Unfortunately most professors don't have any real world experience, which I believe is the reason there are so few entry level people worth hiring.
Sure, I wasn't intending to criticize it. I'd hate for new programmers to get the idea that there is one "right way."
You could also just write the output file and then split it into 2MB chunks at the end. 
Note that I am *not* advocating this style for production use, but it seems that the other solutions didn't take advantage of a fundamental property of the game. Here's a nice simple version that only has to do one check for a tie, and one check for victory. It is left as an exercise for the reader (I hate when people do that) to determine **why** this works. import java.util.Random; import java.util.Scanner; public class Paper { public static void main(String args[]){ Random r = new Random(); Scanner s = new Scanner(System.in); String[] ops = {"r", "p", "s"}; System.out.print("Enter r, p, or s: "); String playerOp = s.next(); Integer comp = r.nextInt(3); if (ops[comp].equals(playerOp)) System.out.println("tie"); else if (ops[(comp+1)%3].equals(playerOp)) System.out.println ("you win"); else System.out.println("you lose"); System.out.println("Player: " + playerOp); System.out.println("Computer: " + ops[comp]); } }
I would extend/implement OutputStream and keep track of the bytes being written, redirecting output and managing multiple file handlers behind the scenes.
Might I also humbly suggest that if you are also working with files which you have previously written (and therefore do not know the current size of the file, as in log files for example) that you use something like RandomAccessFile. This class allows you to not only seek to specific points of the file, but you can append to the end of a file as well as check the current size (length()) and index (getFilePointer()). Good Luck!
http://www.youtube.com/watch?v=X0zm1Blykn8
lol we dont get marked on anything but indenting, commenting, and whether or not it works, and we were only allowed to use certain methods (we were being tested on our use of the "if" statement). I just thought i should share the code I already had.
Jesus, no offense. But that is not a good solution.
The constructor for Date() takes a long which is the number of milliseconds since the epoch (January 1, 1970 00:00:00.000 GMT). It looks like you're taking the date, turning into the integer 20070703 and sending that in. That works out to something like 5:34am on Jan 1st, 1970. Give or take. It looks like [DateFormat.parseObject](http://download.oracle.com/javase/6/docs/api/java/text/DateFormat.html#parseObject(java.lang.String, java.text.ParsePosition\)) might be the droids you were looking for instead.
Taking that a step further, I mainly just use DateUtils from apache's common-lang nowadays: Date startDate = DateUtils.parseDate(start, "MM/dd/yyyy"); That's it! No muss, no fuss! http://commons.apache.org/lang/
I was going to chime in with java.util.SimpleDateFormat, but apache generally wins. Is dateutils in the commons.io package?
Right now it just shows the current date and I know why. I'm having trouble taking the current date and adding 7 days to it. 
Right now it appear you have the date as a String. To do date manipulation I use [Joda-Time](http://joda-time.sourceforge.net/) I would use a [DateTimeFormatter](http://joda-time.sourceforge.net/api-release/org/joda/time/format/DateTimeFormatter.html) to convert the String you have into a [DateTime](http://joda-time.sourceforge.net/api-release/org/joda/time/DateTime.html). From there you can use *plusDays(7)* to add 7 days. Hope this helps.
I'm just going to point this out because I see it a lot in younger developer's code -- watch out for a time component on the visitDate column. For example, if your myStart value is initialized to midnight but the visitDate value is set to noon that same day then it won't be included in your results. The simple fix is to remove the time component from the db column in the query.
thank you soo much!!!!
Stepping back a little, are you making log files that you want to be no more than 2mb? If so, you might be better off just appending to a single file from your java code (keep it simple), and use logrotate ( http://linuxcommand.org/man_pages/logrotate8.html ) to handle the 2mb limits. 
Thanks for looking out for that. I actually only accept Dates in this table, no times although I'll add that as a unittest to double check. 
Thanks I actually figured it out by trial and error. I just played around with sql queries on the mysql command prompt to see what format it was searching for. (YYYY-MM-DD) was the key so I changed it and now everything is working as expected :D.
How are things at Happy Valley, Harvard on the Hudson these days?
I love it here, I already graduated with a lib arts degree and spent time at oney and ualb but I just discovered this network admin program so I left. Want to buy a [t shirt](http://518gear.com/uploads/2/9/1/3/2913975/8595694.png?291) ? anyways, I know a lot of the faculty and admin. I find most people that call it harvard on the hudson are dumb and/or never actually went here. EDIT: so what's your story? did you go here? I graduated from vliet in 06'
About a third of my high school class ended up there back in the 90s. I've been on the campus I think twice in my life.
Oh. Well it's a great school. And most people that go there are pretty much forced to be there because of low HS GPAs. 
The problem is in the logic in the if statement in your getCard() method. The fillDeck() method initializes all elements of the deck array to 1. In getCard() you set x and y using Math.random() and then you check: if (deck[x][y] == deck[0][0] &amp;&amp; deck[0][0] == 1) Since you've just initialized the array using fillDeck() both deck[x][y] and deck[0][0] will be equal to 1, so the first branch of your if-statement passes. It seems like you really want something like: if (deck[x][y] == 1) And I don't mean to be impertinent, but I'm a little surprised that a student in an Advanced Java class wouldn't use Java's object-oriented features (by writing Card and Deck classes, for example).
It's in the commons.lang package.
 java.util.GregorianCalendar c = ... c.add(Calendar.DAY_OF_MONTH, 7); java.util.Date d = c.getTime();
What is wrong with Calendar's .add(Calendar.DAY_OF_YEAR, 7) ? There's slightly more overhead in terms of getting a calendar from a date, adding, and dumping back to a date, but it's not particularly awful. Unintuitive to have to manipulate a calendar object to get a date, I'll admit.
First step is to design your data structure. How will you represent your board? 
Will you use strings, ints, doubles ect. Will you use an array? These are the questions you should be asking yourself.
You should really consider using a JDBC SQL library of some sort like Apache commons DBUtils or [Yank](http://xeiam.com/yank.jsp). Manually creating Connections and PreparedStatements and parsing ResultSets gets old quick. The following would be all you needed if you used Yank, which will save you lots of time in the long run and keep your code more manageable. Here you would use the Date objects directly as well. public static List&lt;Thing&gt; selectAllThings(Date date1, Date date2) { Object[] params = new Object[] { date1, date2}; String SQL = "SELECT * FROM MyTable WHERE visitDate &gt;=? AND visitDate &lt;=?"; return (List&lt;Thing&gt;) DBProxy.queryBeanListSQL("local", SQL, params, Thing.class); } 
You did not answer my question. How will you represent the rows/columns and how will you represent the markers? Integers, doubles, Strings what? You tell me.
Perhapse your markers should be but how about the board?
I was tempted to offer an answer, but instead I will offer relevant advice. A detailed, accurate , well thought out specification is critical to getting a project completed in a timely manner. &gt;So, my assignment is to make a tic tac toe game with a 5x5 board. With 2 players and connecting four wins. I am supposed to use 25 variables for the board and am having trouble figuring out how to get started. This is not nearly detailed enough, it takes a problem that should be straightforward and turns it into a bunch of guess work. I would guess that's why you haven't received the answers that you were looking for.
I don't believe you are understanding the question kelroy is asking. To make your game you need some means of representing the board *inside* the game, some data structure that will hold the information for the board so you can update and change it. You already know that the board is expected to be a 5x5 grid, so the first question to ask yourself is *for each position on the board how many possible options are there?* For tic-tac-toe a square either has an **X** or an **O** or is not in use, 3 possible states. So now you know that you can't, for example, use a 5x5 boolean array (boolean array[][] = new boolean[5][5]) because a boolean has only two states, **true** or **false**. So that means you need a data type that can hold at least 3 states. Since the grid is only 25 elements (or 36 if you have the title rows/columns) and not a memory issue, I would suggest you use a board made up of the datatype **char**: char board[][] = { {' ', '1', '2', '3', '4', '5'}, {'a', ' ', ' ', ' ', ' ', ' '}, {'b', ' ', ' ', ' ', ' ', ' '}, {'c', ' ', ' ', ' ', ' ', ' '}, {'d', ' ', ' ', ' ', ' ', ' '}, {'e', ' ', ' ', ' ', ' ', ' '}}; This will create the board (with 36 *variables* of type **char** and initialize it with spaces in all cells not labels. Now, if the cell is a space (' ') it is empty. To fill it just set the cell to either **X** or **O** : board[row][col] = 'X'; Now you can easily print the board by simply printing the value of each char in row column order. 
It looks like you're trying to get the number of rows that meet your criteria. You should really be using SQL's COUNT() function instead of fetching and iterating over the entire row. All you have to do it change you're sql statement to SELECT COUNT(*) FROM MyTable WHERE visitDate &gt;=? AND visitDate &lt;=? and then the result set will contain a single row with a single value that will represent the number of rows you're looking for.
is this your first programming class? or second?
This is actually pretty neat. I'll look into this later. This project is a software engineering mess that my school has been passing down for 5 years. There are about 50 Database query files that I'd have to fix 0_o.
Yikes! Have fun. ;)
dude, do your own homework....
Thanks I didn't even realize COUNT existed. 
Wouldn't that also make every if statement valid? And if you mean make each if statement if (deck[0][0] == 1) like that, I've already done that, and it returns the first and second array element in the [0] row. And yeah, I actually entered Advanced Java without any prerequisite, so that's why I'm not using separate classes yet. 
moveCard - You're just moving an element in your ArrayList to a different position. You'll need to implement some logic to handle the circular movement that is described. Edit: It looks like he wants you to swap the values of two cards in moveCard. If you use a helper method you can reuse that method in tripleCut. tripleCut - You're swapping the values from index 0 to index1 with the values that are in index1+1 to index2. For example, say you have two strings. You want to swap the values in string1 and string2. You basically are applying that concept to your tripleCut method with a little extra logic for the other use cases given. It might help to know which areas your confused about. It sounds like a homework assignment so I'm not going to give you any code.
For the moveCard method I was thinking store the card at target into a temp card then remove it from the array and then just add it back at the appropriate index EDIT: this is what I came up with public static int moveCard(ArrayList&lt;PlayingCard&gt; deck, int target, int places) { int pos = target; int deckSize = deck.size(); PlayingCard tempCard = deck.get(target); deck.remove(target); if(pos+places&gt;deckSize) { int newPos = (pos+places)-deckSize; deck.add(newPos,tempCard); return newPos; } else { int newPos = (pos+places); deck.add(newPos,tempCard); return newPos; } }
In the method description it says "don't just swap it with the card at the new location", so you can't do it that way. :( It sounds like your teacher wants you to swap each value until reach your target index. Hint: You need to keep track of the current index of the card being moved.
but when you add something at an index in an arraylist doesn't it shift all the elements for you?
Yes, that will work, but your teacher doesn't want you to do it that way based on the method description. It says there needs to be a swap for each move ("i.e., don't just swap it with the card at the new location - you need a swap for each move"). So, if you move a card 10 places there will be 10 swaps. You're shifting a value until you reach the target index.
I believe kelroy was looking for which kind of data structure you plan on using. Your comment eluded to you using a separate variable for each cell on the board. A cleaner method would be to use a data structure to make access to each cell easier in the long run, for example in code maintenance. Ironically, I'm not sure how to structure this so I apologise if it's all just a jumble of words. I also apologise if you already know most of this, I thought it would be better to go right to basics than not be helpful. Now, there are many data structures that can be implemented, all with different benefits and downfalls making them suitable for different situations. One of the first data structures programmers learn about are Arrays. You can think of an Array as a indexed list which starts at 0. For example: 0 Milk 1 Sugar 2 Bread 3 Eggs Arrays are random access which means that, if you want to find the 4th element in the array, you can look straight at it without having to read everything on the list that came before it. Remember that, since the first element is element 0, if you want the nth element you have to look in index n-1. There are 2 ways to declare an array. You can set the contents of the array when you create it, or you can either declare an empty array of a set size. This last way might sound counter-intuitive but remember that creating an array sets aside a certain amount of space in memory for your data. Onto some notation: To access an element in an array, you use ArrayName[index] E.g. Alphabet[0] = 'a'; Would set the first element in the array Alphabet to 'a'. Alphabet would have to be an array of chars for this to work. The inverted commas are used to indicate that it is a char, rather than a variable. Also, you can set a variable to have the same value as an element in an array with VariableName = Array[index]; To save time and space, if you want to set the values for the array upon creating the array, this is done like so: DataType ArrayName[] = {element1, element2, ...}; A working example would be: int OneToTen[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}; If you would prefer an empty array... DataType ArrayName[Size] = new DataType[Size]; Or char Alphabet[26] = new char[26]; Always remember the semi-colon at the end! When learning to program, they will be one of the most common causes of problems in your code! Ok, so instead of 25 variables you could have an array with 25 elements! But wait, if you're checking for if there is a link of 4 in a column, that could very easily result in confusing code such as: if(board[0] == 'x' &amp;&amp; board[5] == 'x' &amp;&amp; board[10] &amp;&amp;...) **Finally, something related to your question!** An alternative solution would be to have 5 arrays, each containing 5 elements. This would make your code more readable as the accessed indices would be more intuitively linked. For example, you would access Row1[2], Row2[2], Row3[2] etc. Now, think for a minute. You now have 5 things which store data but the information is related. Does this seem familiar? So now we do the exact same thing again and group them into an array! Yep, we make an array of arrays! Where as our last array was like a list (one-dimensional), this array of arrays is like a table (two-dimensional). You can make an array with as many dimensions as you like, but for the purposes of your assignment we'd better just stick to two. All of the notation is the same except that where it would have once been Array[index], it's now Array[row][column] Righty-o! We have a 2-D array to represent the board! This will make checking for a situation where someone has won even more easy in terms of code e.g. if(board[row][0] == 'x' &amp;&amp; board[row][1] == 'x' &amp;&amp; ...) Ok, so I just stopped for a cup of tea and have kind of forgotten what else I was going to add, so I'll leave it at that for now. If you have any other questions, feel free to ask and I'll try to respond quicker than the 8 hours it took for me to see this thread :P **edit:** putting asterisks around something on reddit italicises it. Either put a \ immediately before it or leave a line break and start the next line with 4 spaces to make it appear in courier like the code extracts above
Ok that makes sense. That means that I'm gonna need a helper method that just swaps two elements in the array and then call it in the moveCard method. I can't quite think of how to implement this though. Edit: here is the helper method I came up with public static ArrayList&lt;PlayingCard&gt; swap(ArrayList&lt;PlayingCard&gt; deck, int index1, int index2) { PlayingCard tempCard = deck.get(index1); deck.set(index1, deck.get(index2)); deck.set(index2, tempCard); return deck; }
Yes! Now you're on track. You can re-use this helper method in your tripleCut method as well. Edit: So how do you use this in your moveCard method? The idea here is that you're going to swap the values until you reach the target index. So, here you'll need to know a couple things: 1. Current index of the card you're moving (currentIndex) 2. Index of the neighboring card (this changes each time you swap a value) You'll have to figure out the details, but you're essentially doing this: while (currentIndex != targetIndex) swapValues(...) // get new neighbor index // update current index 
OK so here is what I've come up with I'm not sure if my loop is correct though: public static int moveCard(ArrayList&lt;PlayingCard&gt; deck, int target, int places) { int pos = target; int deckSize = deck.size(); int targetIndex = target+places; if(pos+places&gt;deckSize) { targetIndex = (pos+places)-deckSize; } else { targetIndex = (pos+places); } while(pos!=targetIndex) { int newPos = pos; if(pos&gt;deckSize) { pos = 0; } if(pos+1&gt;deckSize) { newPos=0; } else { newPos = pos+1; } swap(deck,pos,newPos); pos++; } return targetIndex; }
That's basically what I was thinking - now just test it and debug any issue and you'll be set! :D
Thanks for the help! I might have a few more questions but I think I'm set for now
No problem!
The problem is that you're trying to do two things at the same time: check to see whether a certain card has been drawn already and assign a suit and face value. If you have enough time, your code would benefit a lot by separating things into classes. You've already identified that a Card object should have a numeric value, a suit, and a String representation (i.e., given a 1 card with suit "Clubs" you want to be able to refer to it as the "Ace of Clubs"). This leads to the following class: public class Card { private int value; private String suit; public Card(int value, String suit) { this.value = value; this.suit = suit; } public int getValue() { return value; } public String getSuit() { return suit; } public String toString() { // implementation needed } } You've also identified that you need to be able to initialize a deck and draw cards from it. That suggests something like the following: public class Deck { // private instance variables to keep track of the deck state public Deck() { // use the constructor to initialize the state of a new Deck } public Card drawCard() { // return a random card from the deck and update the state of the deck so that // the drawn card is no longer available } } If you implement these classes, then your game logic would become something like the following: Deck deck = new Deck(); Card firstCard = deck.drawCard(); Card secondCard = deck.drawCard(); int total = firstCard.getValue() + secondCard.getValue(); System.out.println("You drew " + firstCard + " and " + secondCard + " for a total of " + total); Obviously there's a lot left to do, but I hope this gives you some ideas.
How can I do it so I can keep it all in the same class?
Use Scala.
I'm getting closer :)
I don't get the rant. You want to use an OutputStream for something other than I/O? Or you can't be bothered if an error occurs? What's wrong with an I/O method throwing an IOException? How do you want to be told that an I/O error occurred? If you really just plain don't care about errors and want the next schmuck who has to work on your code to say all kinds of nasty things about you, make all of your methods "throws Exception" and be done with it.
No error will occur.. it's a byte array. Unless I make it HUGE and run out of memory. I don't need to worry about IOException when dealing with byte[] 
Well, `toString()` could still throw an `IOException` (`UnsupportedEncodingException`) if you give it an [invalid encoding](http://download.oracle.com/javase/1.4.2/docs/api/java/io/ByteArrayOutputStream.html#toString%28java.lang.String%29) ;)
In that case, I'd make my own wrapper class class Foo extends ThatOutputStreamThatHasVarint { ... // override methods assert ones that should never be called // implement the ones you want to use ... / e.g.: @override public int readVarint() { try { return (super.readVarint()); } catch(IOException e) { e.printStackTrace("Oops I was wrong"); return -1; } } } heh - wonder what that's gonna look like when I click save? edit: fixed formatting.
I hear you, it is annoying. This is kind of a limitation of Java though, in order to have a uniform interface for all {In,Out}putStreams, even a BAOS must declare a thrown exception. And because we have checked exceptions you have to catch them. I usually throw AssertionErrors when these happen and I *know* they shouldn't throw; less likely to be suppressed by a catch (Exception e) {}
I have written a version using GWT of the normal 3X3 grid. (I did this to start a site of games for young children to play and also to learn GWT). The source code for this is [online](http://code.google.com/p/grandpasgames/source/browse/#svn%2FNoughtsandCrosses%2Fclient). You are welcome to look at it. You only need look at the GameData and the Game Mechanics, the GameGUI just puts in on the screen using GWT. This is the [actual site](http://neilwilliams36.appspot.com/).
Or Groovy
Linked lists take up more space since you need to store two pointers for each entry. So I generally use ArrayList unless I have a good reason. As you point out, the ease of removing items from the front of a LinkedList is a good reason. Adding and removing items to the end of an array list isn't as bad since as bad since the array backing the ArrayList probably has space allocated at the end anyways. (Remember, ArrayLists are generally allocated 2^n entries at a time). But we shouldn't loose sight of the fact that, except in rare cases, there really isn't much of a difference. The vast majority of lists one uses while writing software won't get very large.
Removing from the front of the list in LinkedList takes O(1) time whereas it takes O(n) time in ArrayList so that's why LinkedList is better than ArrayList.
Straight copy/paste from stack overflow (1st google result). http://stackoverflow.com/questions/322715/when-to-use-linkedlist-over-arraylist LinkedList and ArrayList are two different implementations of the List interface. LinkedList implements it with a doubly-linked list. ArrayList implements it with a dynamically resizing array. As with standard linked list and array operations, the various methods will have different algorithmic runtimes. For LinkedList get is O(n) add is O(1) remove is O(n) Iterator.remove is O(1) For ArrayList get is O(1) add is O(1) amortized, but O(n) worst-case since the array must be resized and copied remove is O(n) LinkedList allows for constant-time insertions or removals, but only sequential access of elements. In other words, you can walk the list forwards or backwards, but grabbing an element in the middle takes time proportional to the size of the list. ArrayLists, on the other hand, allow random access, so you can grab any element in constant time. But adding or removing from anywhere but the end requires shifting all the latter elements over, either to make an opening or fill the gap. Also, if you add more elements than the capacity of the underlying array, a new array (twice the size) is allocated, and the old array is copied to the new one, so adding to an ArrayList is O(n) in the worst case but constant on average. So depending on the operations you intend to do, you should choose the implementations accordingly. Iterating over either kind of List is practically equally cheap. (Iterating over an ArrayList is technically faster, but unless you're doing something really performance-sensitive, you shouldn't worry about this -- they're both constants.) Also, if you have large lists, keep in mind that memory usage is also different. Each element of a LinkedList has more overhead since pointers to the next and previous elements are also stored. ArrayLists don't have this overhead. However, ArrayLists take up as much memory as is allocated for the capacity, regardless of whether elements have actually been added. The default initial capacity of an ArrayList is pretty small (10 from Java 1.4 - 6). But since the underlying implementation is an array, the array must be resized if you add a lot of elements. To avoid the high cost of resizing when you know you're going to add a lot of elements, construct the ArrayList with a higher initial capacity. It's worth noting that Vector also implements the List interface and is almost identical to ArrayList. The difference is that Vector is synchronized, so it is thread-safe. Because of this, it is also slightly slower than ArrayList. So as far as I understand, most Java programmers avoid Vector in favor of ArrayList since they will probably synchronize explicitly anyway if they care about that. ...google is an amazing tool.
What does it mean "solitaire encryption"?
...for queues. You always remove from the top of the stack (the "end" of the list), so using either as a stack would work in constant time (minus array resizing on add).
The tl; dr version is that ArrayList is almost always the best choice for stacks or random-access arrays. Queues, on the other hand, are more difficult to handle. Personally when I need a "pure" queue (one I won't need random access to) I usually implement it myself as a linked list, and maintain both head and tail pointers for speed. I don't bother with "LinkedList" or even Collections.
this wouldn't be hosted on a website. The most exposure it will get is a intranet inside a school system. 
Isn't there a queue and/or a stack implementation in 6+? 
One would think it would be less bother to just use LinkedList, rather than implementing LinkedList yourself.
If you're that adamant on disabling the error checking, why don't you just create a proxy object that handles it for you?
It's [encryption using a standard deck of playing cards](http://en.wikipedia.org/wiki/Solitaire_(cipher\)), with no need for a computer. 
If you're not worried about performance, a Collection will work just fine. This is usually the case and it's what I'd generally recommend. However, if you need a queue that absolutely, positively must have optimal performance, they're so simple to implement that it's often easier to bash out a class yourself than to try and remember and avoid all the edge cases that can occur with the various Collection implementations. Plus it's a fun problem to think about.
Can't because if you have to pass it to an object that you can't control it will require you to throw an IOException.
There really aren't any edge cases to remember with java.util.LinkedList. You'll have to remember a few if you try to implement it yourself though. I agree that it might be fun to implement a linked list. I've done it dozens of times. I suspect that a benchmark would show that the few extra variable updates done by java.util.LinkedList affect performance minimally and the extra performance would not be worth the lesser maintainability. It would probably be much more worthwhile to spend the time finding a better data structure or algorithm, than spend an hour or two reimplementing a linked list for the nth time. 
&gt; an hour or two reimplementing Challenge accepted, total time: 10 minutes :) I haven't benchmarked it against a Collection, but having your own implementation allows you to change the behavior however you'd like, i.e. you could make it threadsafe just by slapping a **synchronized** keyword in there, or you could extend it to do awesome things like block on *add()* if there are too many items in the queue (you'd need another thread consuming from the queue, of course). Never underestimate the power of reinventing the wheel! public class TurboQueue&lt;T&gt; { class TQNode { T contents; TQNode next; public TQNode(T obj) { contents = obj; } } TQNode head = null; TQNode tail = null; public TurboQueue() { } public void add(T obj) { TQNode tmp = new TQNode(obj); if (tail != null) tail.next = tmp; else head=tmp; tail = tmp; } public T remove() { if (head != null) { T rv = head.contents; head = head.next; if (head == null) tail = null; return rv; } return null; } public static void main(String[] argv) { TurboQueue&lt;Integer&gt; tq = new TurboQueue&lt;Integer&gt;(); int i=0; for (i=0; i&lt;10; i++) { tq.add(i); } Integer foo; while ((foo = tq.remove()) != null) { System.out.println(foo); } } } 
Very good, have a cookie! I'd be interested in a benchmark comparison with java.util.LinkedList. 
I should probably preface this by saying that I don't agree with your desire to eliminate exception handling for a stream handler but since it is very unlikely that I will ever have to come into contact with something that you have developed, I will help you out. Just promise me that you will never write any software having to do with avionics or the medical industry.... That said, a proxy object is an object that sits between two other objects and acts as an intermediary. In your case, this would be the java.io.OutputStream object and the object that you're writing for yourself. Let's call it MyAppObject. Now, you create another object that sits in the middle and acts as an adapter between the two. The purpose of this middle object is to accept calls intended for the java.io.OutputStream object and make some kind of modification to the call or handle it in a different way. All the while ensuring that the calling object (MyAppObject) doesn't know that things are being messed with. In this case, defeating the exception handling logic. You can see this in practice with java.io.FileOutputStream. Let's call your version of this object "MyReallyBadIdeaOutputStream." So, your MyAppObject would call MyReallyBadIdeaOutputStream's read() method which, in turn, would call OutputStream's read() method and return the results. The MyReallyBadIdeaOutputStream would have a try..catch block around its call to the OutputStream's method and consume any exceptions, thereby freeing you of the burden of ever having to worry about writing code in a safe and responsible manner. That's all there is too it. Now.. go out into the world, have fun, and never, ever write controlling software for a nuclear power plant. Ever.
If he's doing this for a class, then he is probably expected to use the native Calendar object, not an external library.
5 people don't understand concurrency
A real rough benchmark on my end shows that they're neck and neck as written, but by simply making TQNode **static** you'll get about a 25% performance increase: public class TurboQueue&lt;T&gt; { static class TQNode { Object contents; TQNode next; public TQNode(Object obj) { contents = obj; } } // ... public T remove() { if (head != null) { T rv = (T)head.contents; // ... Of course in most applications using a queue the amount of time just creating and using the queued objects will dwarf any little performance increases like this, but like I said you can get some real fine-grained control over your queue's behavior that you won't get out of LinkedList.
lol, [mexivu seems to be in the same class as you](http://www.reddit.com/r/java/comments/kwqqp/need_help_with_program/). You might want to contact him and help each other out.
http://www.reddit.com/r/java/comments/ky7wb/java_tic_tac_toe_need_help/
I enjoyed [Code Complete](http://www.amazon.com/Code-Complete-Practical-Handbook-Construction/dp/0735619670/ref=sr_1_1?ie=UTF8&amp;qid=1317692536&amp;sr=8-1).
Get [Effective Java](http://www.amazon.com/Effective-Java-2nd-Joshua-Bloch/dp/0321356683/ref=sr_1_cc_1?s=videogames&amp;ie=UTF8&amp;qid=1317740502&amp;sr=1-1-catcorr) by Josh Bloch.
[The Pragmatic Programmer: From Journeyman to Master](http://www.amazon.com/Pragmatic-Programmer-Journeyman-Master/dp/020161622X) It's not really focused on Java or any language specifically, but it helps you become a better team member. The concepts help you write code you won't curse at later...
The best possible book to read for this is "Clean Code" -- it focuses a lot on java, it has elements of scrum/agile, it has elements of code patterns, and prose-style coding (and why some commenting styles are worse than none at all), etc. It's a fantastic book, a quick read, and wont' break the bank. I simply can't recommend it highly enough.. Seasoned developers can learn a lot from it too. It's all stuff you've learned over time, but sometimes you just need someone to smack you and say, "you KNOW you should do this -- why aren't you?!"
Just finished an undergraduate degree in Nuclear Engineering. Believe it or not we were taught FORTRAN in our numerical methods courses. Though I am not a computer science major, I have heard the reason for this is that FORTRAN still computes the quickest for numerically intensive programming. Of course all the nuclear power plants use analog systems for control. A plant hasn't been built in over twenty years and the designs for those were approved years before that. They are built to be dependable and fail-safe. 
I can almost guarantee you, the amount of Energy companies that use Java, and the power and cross-platform functionality of java, that at least one Nuclear plant in the world uses Java to maintain it. 
[The Java Tutorials](http://download.oracle.com/javase/tutorial/) -&gt; [Getting Started](http://download.oracle.com/javase/tutorial/getStarted/index.html)
http://www.thenewboston.com/?cat=36 http://codingbat.com/
http://www.leepoint.net/notes-java/
[The best intro to programming/java for starters](http://see.stanford.edu/see/lecturelist.aspx?coll=824a47e1-135f-4508-a5aa-866adcae1111) - Stanford CS106a with Mehran Sahami. Great video lectures and 100% free.
[java2s.com](http://java2s.com) has some of the best code examples I've seen. Between here and StackOverflow you should be good on gettting questions answered. Edit: java2s can be hard to navigate... if you just google the specific code you need and tag 'java2s' to the end of the search query it will take you right there.
[Head First Java](http://www.amazon.com/Head-First-Java-Kathy-Sierra/dp/0596009208?tag=duckduckgo-d-20). It's a book, so it's not free. But it's good, if a little basic. If you want to actually learn Java you will need to spend some actual time. I'm sure your company will let you expense it.
Wow. Thanks guys, Karma all round!
You can use [Checkstyle](http://checkstyle.sourceforge.net/) to strictly enforce good practice. Also turn on all of the checks in the compiler (`-Xlint`). 
I second the Java Tutorials. They are very much step by step and clear to follow - However, you will have to supply your own creativity. Some might argue, but I strongly feel the fastest way to learn a language or framework is to come up with a project idea that interests you, and then figure out how to use said language or framework to bring your idea to life. I find you retain the things you learn this way much better than simply typing in other people's examples!
Yes, I have been doing that somewhat, but I feel i need a solid base to build on, as the language is getting more advanced as I learn more, The more I realise i don't know!
God forbid should an advantage of another language be discussed.
Nope, not gonna do your homework for you.
What part can't you figure out. What do you have so far? Post it on pastebin or something. 
Take a look at this [other post.](http://www.reddit.com/r/java/comments/ht88v/the_java_sound_api_how_to_play_music_samples/)
Unless it's Eclipse, in which case it probably doesn't.
I've allready looked through the tutorial from Oracle and it's a little too advanced for my need at the moment, but I'll try the other one, thanks :)
Great article, thanks!
This is beyond easy. Here's all the algebra/logic you will need. int hours; //input from user double totalA,totalB; //base costs int hoursA,hoursB; // amount of hours included with package int extraA,extraB; // cost per additional hour if (hours &gt; hoursA) totalA += extraA*(hours-hoursA); // if hours exceed limit, charge for additional hours if (hours &gt; hoursB) totalB += extraB*(hours-hoursB); // if hours exceed limit, charge for additional hours if (totalA &lt; totalB) print(Package A is the better choice); else if (totalA &gt; totalB) print(Package B is the better choice); else print(Both packages cost the same); Now, be a good boy and do your homework. EDIT: if you can't wrap your brain around this math, you probably don't have a future as a programmer.
package run; import java.util.Scanner; public class ChoosePackage { private static double PACKAGE_A_FIXED = 9.95; private static double PACKAGE_A_HOURS = 10.0; private static double PACKAGE_B_FIXED = 14.95; private static double PACKAGE_B_HOURS = 20.0; private static double PACKAGE_A_HOURLY = 2.00; private static double PACKAGE_B_HOURLY = 1.00; public static void main(String[] args) { //Get the Input System.out.println("Please enter the number of hours of internet per month you expect to use : "); Scanner s = new Scanner(System.in); String strHours = s.next(); int intHours = Integer.parseInt(strHours); System.out.println("Running analysis for " + intHours + " hours of expected usage."); double dblA = getPackageACost(intHours); System.out.println("Package A Costs : " + dblA); double dblB = getPackageBCost(intHours); System.out.println("Package B Costs : " + dblB); if (dblA &lt;= dblB) { System.out.println("Package A is your best choice at a cost of $" + dblA + " per month"); } else { System.out.println("Package B is your best choice at a cost of $" + dblB + " per month"); } } private static double getPackageACost(int hours) { return calculatePackageCost(hours, PACKAGE_A_FIXED, PACKAGE_A_HOURLY, PACKAGE_A_HOURS); } private static double getPackageBCost(int hours) { return calculatePackageCost(hours, PACKAGE_B_FIXED, PACKAGE_B_HOURLY, PACKAGE_B_HOURS); } private static double calculatePackageCost(int hours, double fixedCost, double hourlyCost, double hoursIncluded) { double dblReturn = fixedCost; if (hours &gt; hoursIncluded) { dblReturn += (hours - hoursIncluded)*hourlyCost; } return dblReturn; } }
TBH, I would assign each choice to a number, and then add a number based on the computer's choice. For example, assign: rock = 1 paper = 2 scissor = 3 Create a method that assigns the string choice to number. You don't have to check strings on the computer's choice since you'll be comparing numbers. Create an int variable for player choice; I'll call it x in this case. Use RNG function to determine what computer chooses; set this variable as y. Before comparing numbers, set exception for when there is a rock and scissor choice: If x + y = 4 { If x = 1, x = x + 10; //I just used 10 because its a number that would make looping impossible, although I think 3 would work just as well (I don't wanna think up of every combination). If x = 3, y = y + 10; } Comparing numbers: If x &gt; y { player wins else computer wins } Quickest way IMO. 
Don't attempt to learn programming by directly diving headfirst into the language. The language itself is just a tool; it's better to learn the underlying principles of programming and efficient programming. You need to understand what programming is and what makes programming into a "science" if you will. Read a book on object orientated programming (most common these days), and then dive into the language once you obtain enough background information.
That's what I'm doing :) I picked up a copy of Java for Dummies 5th Edition, it gives nice examples of building houses that are the same but with different rooms, and such.
Alright cool, just making sure. I'm not a wizard in programming or anything, but I do understand coding in Java and C++. I just hate seeing people programming 3000 lines of crap with 10/20 classes/methods when it can be done in 300 lines with 3/10 classes/methods.
Sick, thanks man :)
Also, can I message you if I have any questions? Or do you prefer not? I understand perfectly if it's a no :)
i don't want anyone to DO it for me. just askin for some help. it's much easier than scheduling and using a tutor. 
i haven't used any variables that change value throughout execution so i was completely lost. its only been 3 weeks and we haven't had a variety of problems to solve yet. 
thanks a lot for ur help. i used what u put to help me fix my errors. i also have never used the "total = total + extra" equation. thats y i was lost. i truly appreciate ur assistance.
You said not twice, but I'm guessing the second one wasn't intentional.
I hope you at least implement that Queue interface (http://download.oracle.com/javase/6/docs/api/java/util/Queue.html). There's no reason not to. Anyways, I totally support the re-write the implementation to the task if it fits. As you've pointed out, you can do a number of performance enhancements. This does come at a cost in maintenance and support. Someone coming along later on tasked with maintaining your code will have an easier time maintaining/supporting a custom implementation rather than a standardize one. With a standard one that I've worked with time after time, I can make the assumption that it does things as I expect it. With a custom one of unknown quality, I would have a hard time trusting it. This is even more true if the author's reputation is unknown. I would definitely argue for less experienced developers to always lean towards standards rather than creating your own. Now, going back to your implementation, the two things that I would think are minimum in most usage of your Linked List implementation are implementation of Queue interface and Iterable interface. I would want to be able to do: for (Foo obj : myLinkedList) { // Do something }
Actually, there are some good reasons not to: 1. TurboQueue doesn't implement the full Queue interface and has no need to. 2. Using interfaces is significantly slower than using a real class. Since the point is to write something that's faster than LinkedList, writing something like **Queue&lt;Integer&gt; q = new TurboQueue&lt;Integer&gt;()** would completely defeat the purpose.
It shouldn't matter as long as you don't call a constructor that can throw an exception. If you do, you can use an initializer block or initialize the field in the class constructor to catch it. So it's really down to preference and project practice. I prefer initializing everything in my constructor, seems much more sane to me.
&gt; Using interfaces is significantly slower than using a real class. Since the point is to write something that's faster than LinkedList, writing something like Queue&lt;Integer&gt; q = new TurboQueue&lt;Integer&gt;() would completely defeat the purpose. Please explain. This statement you've made is actually really scary and demonstrates your lack of understanding of development standards and the JVM.
What? I do not understand what you mean, nor have I heard of any such restriction.
&gt; as long as you don't call a constructor that can throw an exception. If you do, you can use an initializer block or initialize the field in the class constructor to catch it Can you expand on this? I am at a loss as to what you are warning against, and what construct you are proposing to bypass it. 
If the question is: "Why should you not initialize an ArrayList in the field *but instead* in the constructor?" I still have questions: 1. What field? 2. Which constructor? Does he mean a constructor of his own class, or the ArrayList constructor (which doesn't even have an "initialize" variant per se)? 
All of the suggestions you got so far are great. I'd also suggest making [developerworks](http://www.ibm.com/developerworks/java/) regular reading. Developers from many enterprise corporations and research institutions, including the developers of the IBM JVM itself participate and contribute there. If you want to learn how to build bullet proof or best-practice Java applications, it (and its forums) are the place to go.
Relevant article on the software for the Space Shuttle. http://www.fastcompany.com/magazine/06/writestuff.html When your software must never fail, you need to ensure that every single piece of software under it must also never fail. The Java Virtual Machine supplied by Oracle hasn't met the necessary testing to be supported in the Nuclear Industry, and they can't speak for the software they run on top of (the C-Runtime, and underlying OS) so they cover their ass with this legal speak.
You can, but programming is just something I'm self learning aside from maybe 1.5 year of classes. 
 public class Foo { List&lt;String&gt; bar; { try { bar = new ArrayList&lt;negativeNumer()&gt;; } catch (IllegalArgumentException e) { System.out.println("Told you so!"); } } ... }
Dude, if you're going to insult me then I have no reason to explain a damn thing to you. Yeah, on a lot of JVMs there's very little difference between a method call on an interface and a method call on an actual class. On others you can incur a pretty nasty penalty. Since you chose to be an asshole I'll leave it to you to figure out which is which.
It's not an equation, and your fellow students and/or instructor will think poorly of you for calling it that. It's not an equation because the two sides of the equal sign are not equal (although you're sort of setting them to be. Nevermind.) *total* is being *assigned* the value of *total + extra*. Do you still need help with anything here? Firstly, READ YOUR TEXT! You should be doing so anyway, and that's sometimes easier to learn from than your instructor. Secondly, I can try to help, though doing so over the internet is generally a sort of psuedo-flailing.
Ah ok. Terminology confusion. Thanks. You are answering that he should avoid initializing an instance variable using an object constructor that might throw an exception. (In which case he could do what you are doing in your example with an "object initializer block".) However, there is really no difference between an instance variable initializer and an object initializer block. As the Class-specification level they are both segments of code executed at the same time. In fact, you are free to have both of these throw checked exceptions... it just means that every constructor must be marked as throwing those exceptions. The reason to use an object initializer block is to save the headache of typing the same code over and over in each of your constructors. Effectively it does execute at the same time as your constructor (after the implicit call to super() occurs) so I guess it might be fair to say it is "part of the constructor"... except that it isn't. :-) If you want to catch a checked exception every time and want to avoid replicating that code in every constructor, then you can use the initializer block to hold your try/catch. But catching exceptions isn't the real reason for those blocks... it is just to save space and typing. **EDIT**: Two things in case anyone reads this comment and tries to write ballistic missile software based on it: 1. Don't infer these rules apply to *Static* (aka Class) initializers. Those are different beasts and Exceptions there get converted to Linkage Errors (ExceptionInInitializerError) so you definitely need to be careful. 2. The parent code example has some typos in the initialization line of "bar" surrounding the placement of the method call in the generic-area versus within parenthesis. I got the gist of the example... don't copy code without knowing what it does. (especially not for ballistic missiles!)
I am referring to the field of my own class. if the class has an array-list field, my TA told me that I should always initialize the array in the field instead of the constructor to avoid complications. I asked him why, but he couldn't answer my question. So I thought Reddit would be a good place to ask. 
That is what I have been doing ever since I started coding. But I remember my teacher in my first CS class telling me that I should always initialize the ArrayList in the field and I remember him giving me a reason that made sense, but recently my TA told me the same thing, but the TA has been unable to give me a reason.
If you're replicating code in your constructors, you could just move that code to a shared init method. Sure, you're going a method call deep, but you save typing, you can use arguments, and all of your init code is run explicitly. I don't think it would be appreciably slower unless you're creating thousands of objects at once.
Initializers are not able to access arguments passed to your constructor, so you might not be able to avoid initializing your fields in the constructor. Maybe your professor wasn't using decent tools, since any good Java IDE will warn you before you use an uninitialized variable. 
The only thing I can think of related to field initialization would be for defaults. http://www.javapractices.com/topic/TopicAction.do?Id=14
Replying here versus your similar comment below since this is nearer the top. (Your intended title was the opposite of my restatement above.) Without knowing the exact case that your TA advised you on, I'd have to say that I disagree with him. Presuming this is an *Instance* field and not a *Class* (aka static) field, there is no difference between initializing the variable inside or outside the constructor. (In fact, the code outside the constructor - object initializer block - executes at the same time as the code in the constructor itself.) For Reference from the JLS: http://java.sun.com/docs/books/jls/third_edition/html/classes.html#8.3.2 http://java.sun.com/docs/books/jls/third_edition/html/execution.html#12.5 There certainly is no case that I know of where this advice would be different for an ArrayList versus any other object The only benefits I can see to performing the initialization outside the constructor body are: 1. If you perform the same type of initialization every time, and that initialization is complex, then you save yourself space and keystrokes by using an object initialization block versus retyping it over and over in each constructor. 2. An Object Initialization block is the first piece of code executed within your object's constructor (simplifying away any implicit this() or super() calls). This might help you ensure it is set early enough. NOTE: All of this advice should be thrown out the window for static (Class) fields and initializers.
This can be OK when you control your codebase entirely, but it is frowned upon in general for a few reasons. (I'd agree that the performance concerns are minimal.) One concern is ensuring that any shared init method is marked final to prevent it from being overridden. Overriding and extending your classes is the biggest place this kind of design can cause issues. (It's explicitly discussed in depth in [Effective Java](http://java.sun.com/docs/books/effective/)) I definitely concur that using your constructor's arguments and explicitly running code versus having it be potentially hidden in weird out-of-flow code blocks is a huge plus for initializing things in the Constructor itself... one of the reasons I'm very confused by the OP's question.
We use jGrasp in class, it's fairly dope
&gt;In fact, the code outside the constructor - object initializer block - executes at the same time as the code in the constructor itself. Minor point, but this is not entirely true. As per your second link, the object initializer block is executed before the constructor itself. Thus any fields that are initialized outside of the constructor are available for use in the constructor.
I disagree. Usually with constructor arguments you can provide *some* sort of estimate of a good initial capacity. I have yet to think of a time where you are completely unable to specify the order of magnitude for the initial capacity of your list. I think it's worth it to put it in the constructor and use that to estimate the initial size. It's a good habit to get into, especially if you are creating many instances of this class. If you're always in the habit of initializing in the field, you will be less likely to think of using the constructor to specify a good initial size.
Remember that just because a CS teacher tells you to do something, doesn't mean that he or she is right. Especially for TAs. I'm a TA (PhD in CS) and often see fellow TAs fumble through giving advice even if they don't entirely remember the particular topic at hand. Question everything.
&gt;in the constructor. in any of the constructors, while only having to write it once.
My understanding is that its all done in &lt;init&gt;, but the field initializations will be executed before the declared constructor code.
Nonsense. I generally prefer the constructor for consistency. Not everything is initialized in the field (if you need passed parameter values) but everything can be initialized in the constructor. Either spot works perfectly fine ultimately though. What your TA should be doing is telling you to mark the ArrayList as final so it can only be initialized once in one of the aforementioned spots. Attempting to be as immutable as possible is king (the ArrayList contents still won't be in this scenario however). Once you get a taste of the benefits immutability gives, you won't go back willingly.
This seems likely to be the reasoning of the TA. 
If a book isn't out of the question, Introduction to Java by Y. Daniel Liang is a great starting point. It takes you from the very basics of Java (variable declaration etc) all the way up to intermediate topics like GUI design, multi-threaded applications and more. It's ~1300 pages, but it has a large font and tons of examples.
Create a schema. 
http://download.oracle.com/javase/6/docs/api/java/io/RandomAccessFile.html http://www.exampledepot.com/egs/java.nio/CreateMemMap.html 
http://code.google.com/p/guava-libraries/ Though Java7 has new I/O classes which make some of the Guava I/O classes irrelevant.
please forgive my mistake. hopefully everyone that reads this knows that its an *assignment* instead of an *equation*... i don't need any more help in this area. i came up with a few other scenarios to write programs for so i can practice. thanks for being willing to help. next time i have a question, ill be sure to post to this subreddit. 
That was my first thought, but is it possible to do that with custom tags?
Holy Crap BATMAN!
here's one of the problems i came up with to practice. thanks for the help. any CONSTRUCTIVE feedback would be helpful. /* a video rental store offers blu-ray rentals at 3.99 for 1 week. * every day after 1 week adds a $.25 late fee. * they also offer dvd rentals for 1.49 per week. late fees for dvd's * are $.75 per day after 1 week. * user inputs how long video will be rented. * write a program that tells user how much each rental would be and * which would be cheaper to rent: blu-ray or dvd. */ package rentalfees; import java.util.Scanner; public class Main { public static void main(String[] args) { // declare variables int days; // user input days of rental double bluRay = 3.99, dvd = 1.49; // inital rental fees final double bluRayFee = .25, dvdFee = .75 ; //late fees double bluRayTotal, dvdTotal; // total charges // get user input Scanner console = new Scanner(System.in); System.out.print("How many days will the video be rented? "); days = console.nextInt(); // perform calculations // add late fees if needed if (days &gt; 7) { bluRay = bluRay + bluRayFee * (days - 7); dvd = dvd + dvdFee * (days - 7); } //display output // determine which would be cheaper if (bluRay &lt; dvd) { System.out.println ("\nRenting a bluRay for " + days + " days would only cost $" + bluRay + ".\nA DVD rental would cost $" + dvd + " for " +days+" days."); } else if (dvd &lt; bluRay &amp;&amp; days != 1) { System.out.println ("\nRenting a DVD for " + days + " days would only cost $" + dvd + ".\nA bluRay rental would cost $" + bluRay + " for " +days+" days."); } else if (dvd == bluRay) { System.out.println("\nDVD and bluRay rentals would " + "cost the same if you rented for " + days+ " days."); } if (days == 1) {System.out.println ("\nRenting a DVD for 1 day would only cost $" + dvd + ".\nA bluRay rental would cost $" + bluRay + " for 1 day."); } } }
The object initializer block is executed after the constructor has begun execution, but before any of the explicitly written code is executed. (it occurs, for example, after the superclass's constructor is called... which occurs after the constructor begins execution.) This becomes very important in cases of inheritance and in cases where one constructor calls another. In those situations, those implementations get called, parametrized, and invoked *before* the object initializer is run. I would agree that this is mostly academic if I didn't encounter logic errors in this area all the time while evaluating enterprise application frameworks. **EDIT:** Just to be clear, I am agreeing with you that fields initialized outside of the constructor are available within the constructor. Just being pedantic and pointing out that superclass fields are also initialized and the superclass constructor itself is executed before your initializers get run. (In other words, don't rely on inherited fields being NULL in your initializer code... because the superclass may have initialized them for you.)
Technically "&lt;init&gt;" is an implementation detail of the Java Virtual Machine and not the Java Language itself. The language spec. just states that certain things happen in a certain order. The VM on the other hand does look for an &lt;init&gt; method which typically contains a call to the superclass constructor, field initialization code, object initialization blocks, along with the contents of the constructor code itself. The important thing to note is that if your Java code explicitly calls super() or this() as its first action... **that** call will indeed be called before the object initializer block is executed. (Something that can cause headaches if you are overriding a class whose author wasn't expecting you to.)
Try deleting the classes folder (and all the .class files). If you have the source then you can easily rebuild them.
10+ Year developers are hardly going to take a job from reddit.
It's worth a shot, doesn't hurt anyone if it does.
It's hard to tell what's going on here but try this. 1. Create a new java project 2. Copy all the files in the other projects src folder in to the new projects folder. 3. Try and run the project (using the green arrow) This should use Eclipses default method of building a project.
Did you build? Or is build automatically turned on?
In my experience it's rather unusual to write to just part of an existing file. Typically you just write whole files.
Check Project -&gt; build automatically If it still doesn't work, open Project properties, Java build path, create screenshot of first and second tab and post it here so that we could see what is wrong. 
Try understanding the IDE you're using before you jump in head first. Get something working first so you understand what's going on. http://www.vogella.de/articles/Eclipse/article.html
Thank you. Its not like RandomAccessFile has been around since version 1.0 or anything! I find that a great deal of programmers try to do all of their I/O directly through high-level java.io stream classes and forget that there are some very useful building block I/O classes that have been around for a very long time. Then, god forbid anyone teach the NIO Classes that recent Java versions have graced us with. People will do all kinds of unnatural things with multiple BufferedOutputStreams but get scared at the first mention of a FileChannel.
[Use eclim](http://eclim.org/) and combine the best of both worlds!
I think the number of years is really nonsense. we see all the time people programming many years without getting much better. between 0 year and 1 or 2 years, it may matter. between 2 years and 10 years, it is really up to the particular person and the actual experience.
You can see such issues if you open 'Problems' view too
These aren't our requirements but the requirements of the client. For the 10+ year programmer they really are looking for someone to join a very fast-paced, senior team. They've rejected multiple skilled candidates who don't meet those requirements because of the high level of applications and deployments the team does.
At the very least it puts noSQL on the radar for larger companies who may have been scared off when hearing a product is built using couchDB or Cassandra, not a relational DB. 
And Apache's commons-io is good for those who can't uplift to Java 6.
You should use a `JavaFileManager` which doesn't touch the file system. That'll avoid some potential security issues (although compiler Java code with annotations doesn't seem to be safe anymore anyway) and seems to have a significant impact on compilation speed.
Nice! I am working through a project where I am trying to read in a configuration file, generate Java classes, and then package them into a (non executable) jar file. This should come in handy.
I suggest that you sign up at [java-gaming.org](http://www.java-gaming.org/) and have a look around there.... 
Try writing it all out on paper, erasing and updating each variable. The inner loop is going to be repeated on each iteration of the outer loop.
First loop is a simple counter from 1 to 5 since you need to do 5 things "forward". Second loop is a counter from 5 to 1 since you need to do 5 things "backwards" for (int i=1; i&lt;=5; i++){ for (int j=5; j&gt;=1; j--){ if (i==j) System.out.print(i); else System.out.print("."); } System.out.print("\r\n"); }
The flipped image should have the same dimensions (width &amp; height) as the source image, so the values *tgtW* &amp; and *tgtH* should be equal to *srcW* &amp; *srcH*, respectively. You want to copy values for all columns (while *tgtX* is less than *tgtW*) in the image, and for all rows in each column (while *tgtY* is less than *tgtH*). You want the source and target columns to correspond, so *srcX* should equal *tgtX*. You want the rows of the source and target image to be inversed. The first row in the source image should be mapped to the last row in the target image; So *srcY* should be *tgtH* minus *tgtY*, minus 1. 
The Eclipse project has it's own Java compiler that's written in Java too and can be embedded in any project. This doesn't require the application's host to have the JDK installed. Eclipe's compiler is reported to be faster than the JDK's compiler. At some point Tomcat was thinking of using it instead of relying on the JDK for compiling JSP. You can find how to use the Eclipse compiler in this blog post: [ECJ - Eclipse Compiler for Java](http://thecoderlounge.blogspot.com/2010/05/ecj-eclipse-java-compiler.html) 
I assume this is a troll? Java != Javascript
Seriously?! Shut down by a site that promotes a product called "Astro-Weather" and "Astro-Analyst" noted as "the premier program for determining the effect of astronomical cycles on stock, bond and commodities prices."
I am learning Java for three years now and every time when I am not sure, what my Code is doing, there are two good ways to find out what it is actually doing. First: Debug or Programm step by step Second: Do different println - commands in ur code For Example: for (int i=1; i&lt;=5; i++){ System.out.println("Outer for loop: " + i); for (int j=5; j&gt;=1; j--){ System.out.println("Inner for loop: " + j); } } So you can log the flow of ur program to the console =)
I keep saying this, but that has really bad variable names, there is no danger is just using proper wording to make sure people understand the code properly. sourceWidth, sourceHeight, targetWidth, targetHeight, tgt is ambiguous in it's meaning. Anyway looks like you got your answer in another comment. Maybe mention that you thought it could have had a better naming structure to make it more obvious what the variables were.
I see Effective Java was already mentioned. Also try [clean code](http://www.amazon.co.uk/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882) by Uncle Bob (Robert Martin). I am currently reading this book and it is an essential read for any professional programmer. Also try practicing some programming Kata's which will help you understand the practices that are talked about in clean code. Start with the [bowling game kata](http://butunclebob.com/ArticleS.UncleBob.TheBowlingGameKata) 
Try this [JMonkey](http://jmonkeyengine.org/) I've not really done a lot of 3D programming but I good place to start is something like webGL since you can code in js and see your changes instantly. These skills are then transferable to most other openGL frameworks.
&gt;compiler Java code with annotations doesn't seem to be safe anymore anyway Please elaborate.
Who says we don't need intellectual property reform?
If one of the libraries on the classpath contains an annotation processor and that processor touches annotations with enumeration values, it can trigger loading of user-supplied classes.
And? The `SecurityManager` still applies, does it not?
I put this in the wrong subreddit. I stand corrected.
Well, this is bound to foster some creativity. /s
This isn't just used by Java - it's used by pretty much every system, programming language and operating system out there. These guys were putting a lot of effort into keeping the database updated, and shared it freely. Thanks to them, there was one canonical, unified, standardized database of timezones, so that computer users all over the world could agree on timezones. Then some peddlers of pseudo-scientific BS comes along with a bunch of lawyers and shut them down. I'm raging so hard right now.
Get Jimmy Wales (sad, beggy face) to SAVE TIME!
To promote the Progress of Science and useful Arts, by securing for **limited Times** to Authors and Inventors the exclusive Right to their respective Writings and Discoveries. We need to rethink our current IP laws and their true intent. Copyright and Patent law have not kept pace with technology and our 'representatives' are not with the times and what is truly going on. Or are they? The public domain is the greater good, not artificial monopolies.
Now if only science had it's own army of lawyers...
Firstly, you should consider using more logical class names, especially before asking for help. Names like *HelloWorld* and *gui* (which should Capitalized BTW) don't really help tell us how your program is structured, or how it's supposed to work. I'm not sure how you want your program to work, but I think there are two solutions to your problem: 1. In your *gui* class, add your *world* object to the Applet, like you're doing with your JPanels and JTextFields. 2. In your *gui* class, get rid of your *world* object altogether. Instead of calling *setSeatingGrid()* on your *world* object, call it on *this* object. You can do this because *gui* inherits from (extends) *HelloWorld*. Furthermore, since it looks like most of your methods in *HelloWorld* only access static references, you can probably just make those methods static, and call HelloWorld.setSeatingGrid(). It should be noted that **this is all bad design**. Why are your JTextFields, JComboBoxes, etc in *gui* declared static? I imagine you did this so that you could move some methods from *gui* to *HelloWorld*. Is there any logical reason to move those methods from *gui* to *HelloWorld*, other than to make it more readable? Making fields static, just so that you can access them from anywhere is lazy, and destroys the object-oriented paradigm. I think you just just move setSeatingGrid(), et al. in to your *gui* class. 
You shouldn't post homework here (or on stackoverflow). Anyway... public int calculatePow(int base, int exponent) { int result = base; for (int i = 0; i &lt; exponent - 1; i++) { result = result * base; } return result; }
15 up / 5 down / 0 comments. Truly the silent majority! 
A simple Google search for [java 2d game engine](http://www.google.ca/#sclient=psy-ab&amp;hl=en&amp;source=hp&amp;q=java+2d+game+engine&amp;pbx=1&amp;oq=java+2d+&amp;aq=3&amp;aqi=g4&amp;aql=&amp;gs_sm=e&amp;gs_upl=515l1656l0l4780l8l5l0l0l0l0l202l879l0.4.1l5l0&amp;bav=on.2,or.r_gc.r_pw.,cf.osb&amp;fp=b28c86c0469d20f3&amp;biw=1280&amp;bih=715) or ["java 2d side scrolling engine"](http://www.google.ca/#hl=en&amp;cp=25&amp;gs_id=45&amp;xhr=t&amp;q=java+2d+side+scrolling+engine&amp;pq=java+2d+game+engine&amp;pf=p&amp;sclient=psy-ab&amp;source=hp&amp;pbx=1&amp;oq=java+2d+side+scrolling+en&amp;aq=0w&amp;aqi=q-w1&amp;aql=&amp;gs_sm=&amp;gs_upl=&amp;bav=on.2,or.r_gc.r_pw.,cf.osb&amp;fp=b28c86c0469d20f3&amp;biw=1280&amp;bih=715) reveals plenty of link, including a curated list over at [Wikipedia](http://en.wikipedia.org/wiki/List_of_game_engines).
thanks i was searching mario java engine
On my machine, that sends a packet for every character when the socket is on the loopback interface (127.0.0.1). If I write a byte[] instead, all the data gets sent in one packet: to.write(Charset.forName("US-ASCII").encode("This is a test").array()); However, in all cases the entire message is being sent. Are you explicitly closing the socket after writing your data?
You need to buffer output: DataOutputStream to = new DataOutputStream(new BufferedOutputStream(s.getOutputStream())); to.writeBytes("This is a test"); to.flush();
Shall the server accept text commands and binary data in one command? If not I would recommend the classes BufferedReader and BufferedWriter to send text over the streams of the socket. According to sending binary data maybe DataInputStream and DataOutputStream can help you.
This was in the spam queue. I have tested it, and it seems to be virus free.
Is there any way I can verify my status as a non-malicious member of this subreddit or is this reputation-based?
Unless you have absolute control over both ends of the connection in terms of the data being transmitted/received, you need to be very careful about the character sets your program uses. Internally, Java represents characters as a *variant* of UTF-16. (You shouldn't rely on it being interchangeable with other UTF-16 implementations.) In addition, and far more important, is that the vast majority of functions in the JVM that convert from binary data to characters do so using the platform default character set using their own internal (and potentially differing) implementations. Creating [Sockets](http://download.oracle.com/javase/1.4.2/docs/api/java/net/Socket.html#getInputStream%28%29) and then grabbing their Input and Output stream is easy enough and will work fine for your binary data. But if you intend to do character-set conversions you might want to look at using a [CharsetEncoder](http://download.oracle.com/javase/6/docs/api/java/nio/charset/CharsetEncoder.html) and [CharsetDecoder](http://download.oracle.com/javase/6/docs/api/java/nio/charset/CharsetDecoder.html) to ensure you know exactly how the characters are being represented over the wire. 
Not directly related to your problem, but for your interest you should read about Nagle's algorithm.
Do not guess at encodings. **Decide** which encoding you are going to use, and **always explicitly specify** it in **all** conversions between strings and bytes and bytes and strings. I **can't** stress this enough. I recommend UTF-8. UTF-16 is a variable length encoding that nearly pretends to be a fixed width encoding. * Do **not** use *new String(bytes)*, use *new String(bytes, encoding)*. * Do **not** use *string.getBytes()*, use *string.getBytes(encoding)*. * Do **not** use *new InputStreamReader(inputStream)*, use *new InputStreamReader(inputStream, encoding)*. * Do **not** use *new OutputStreamWriter(outputStream)*, use *new OutputStreamWriter(outputStream, encoding)*. And so on. *ByteBuffer.asCharBuffer()* will use UTF-16 just because that's what Java chars represent. It is a retarded and confusing API, and i recommend you do **not** use it. **Do** use *CharSet.newEncoder().encode(CharBuffer)*, and *CharSet.newDecoder().decode(ByteBuffer)*. If the server and client are both strictly Java, you could use *DataInputStream* and *DataOutputStream*, but i don't want to recommend them because they write and read strings in a nonstandard format similar to but not entirely unlike UTF-8.
I tend to play on the safe side, but in the future if you could do a self post it stops accidental download.
I think if you just try to write to c:\program files (x86)\ it should trigger UAC, shouldn't it?
It's probably just his personal coding style and he wants you to adopt it.
Ooh okay, will definitely keep that in mind.
Why?
Are you using the -jar flag?: java -jar app.jar 
yes. I get an exception when I try to run the file though windows as well. 
How are the files structured in your jar? Did you say that you have a *bin* folder inside your jar, which contains your class files? Have you tried moving those class files into the top-level directory, alongside your META-INF folder? 
They are. I built the jar from the same folder that the classes and manifest are in.
&gt;JDK 7 for Mac OS X YES! About time...
TCP will happily chunk your data up according to it's alogrithms, so T coming in one packet and the rest in another is no problem - *TCP guarantees everything will arrive in the order you sent it.* (this is why you should never use it for games, by the way - buffering is expensive). However, your other issue is benign, you just need to flush the stream. `to.flush();`
Are you sure the class name in your manifest file actually matches your class name? That class has a public static void main(String[]) method, right? Have you viewed the contents of your jar file? Is it what you think should be correct? 
If you want help, you need to provide information needed to give that help. Likely sources of problems include a typo in the manifest file, or things in the wrong place in the jar file. Without information as to what is in the manifest, and the jar file, everybody's guessing. If you post the command line you use to start the app, the manifest file contents, and the output of "jar tf app.jar", we might be able to help. Or we can check our crystal balls and guess. 
http://leepoint.net/notes-java/io/10file/sys-indep-newline.html &gt; There are three different major systems for indicating the end of a line (new line): One for Unix, one for the Macintosh, and one for DOS/Windows. Unix. The '\n' character represents the single Unicode character with the value 10 ('\u000A') and is used to separate lines in Unix files. This character is also sometimes called linefeed. Windows. Windows programs often process a '\n' separated text file correctly (NotePad is a exception), but many expect a pair of characters (carriage return followed by line feed = "\r\n") Use the method below to get the newline string that is appropriate for your system. Mac. In the past, the Apple Mac requirse lines to be separated by '\r', but their move toward Unix (System X) probably means they also accept '\n'. I haven't used a Mac in quite a while tho, so I'm not positive. System independent value. You can get the value for the system your Java program is running on from the system properties. It is essential to do this with portable programs, and you should always assume your program is portable, eg, that it might run as an applet or using Webstart. public static String newline = System.getProperty("line.separator"); When NOT to use the system independent newline characters JTextArea lines should be separated by a single '\n' character, not the sequence that is used for file line separators in the operating system. Console output (eg, System.out.println()), works fine with '\n', even on Windows.
Thanks for the comprehensive reply, I felt like I couldn't find a definitive answer on the whole "What encoding method do Strings use?" question, but your reply sets this straight :) Part of me really wants to use UTF-8 as it seems so much simpler and easier to use. I initially wanted to use UTF-16 to allow usernames/passwords in other languages, but after looking at the java.nio.charset.CharsetDecoder class im not so sure. Im going to use a specific command that indicates when binary data is going to be used, but this specifies the length of the binary data so its simply the case of getting the required amount data from the buffer. I may have another command that's encoded in UTF-8 that sort of nests a UTF-16 command and specifies the length, which may simplify the decoding but i'll have to decide if its worth it :) Again, thanks for the help!
Does your main function work as Java App while you are in your IDE? What I am asking is, does your code work before you put it into a jar? How are you trying to execute? What is your main function signature (should be public static void main(String[] args) {...})?
I find long lines are normally a code smell
Could you post your manifest and the output of running jar -tvf app.jar on your archive? Or at least the first 10 lines or so of output
Have looked at [Launch4j](http://launch4j.sourceforge.net/)? It wraps your jar into an exe and even let's you assign an icon. 
I wrap long lines. For long expressions, I tend to introduce temporary variables if they can be named in a meaningful way.
You might be interested in taking a look at some of the Java style guides used by various projects. The most popular one (and the one they use at Google, with minor modifications) is the [original Sun (now Oracle) style guide](http://www.oracle.com/technetwork/java/codeconventions-136091.html#313).
Use a less verbose language. I'm only kidding, I just break up lines with white space in places that seem logical. The white space doesn't hurt anything in how the code compiles (in Java at least) so its not hurting anything. I also like to indent a continued line for readability.
I split long lines. Mind you my source code style is not like anyone else I have seen. No Tabs, a single space is fine with me (can't be naffed having to go all over the place). I also vertically align source code according to previous lines (all the ='s, +'s, etc aligned, all the names, types etc) This results in a very orderly and beautiful looking source code and its possible to spot some bugs just on alignment / not looking like it fits the rest of the source code. Not saying its the only way, but if you are writing code for yourself you can trust your intuition and especially if you've been coding for 10+ years (30+ here). Of course I ignore most of that when writing code for some one else and always stick to the already existing scene and setting of an already created source base. 10 cents.
That would just either fail, or go to the VirtualStore, wouldn't it?
Yes the code works. I'm using an example program from Ditel's *How to Program* just so I can figure out how to make jar files work. I'm working from the command line for the time being (not using an IDE) The main function signature is public static void main (String[] args) 
The manifest is simply the main main class pointer: Main-Class: LabelTest jar -tvf app1.jar META-INF META-INF/MANIFEST.MF LabelFrame.class LabelTest.class That's it, I'm using an example program from *Java How to Program*
Yes and yes. I have tried with several different programs and I get the same result every time. In this case there's an image file that's not showing up in the archive, but I don't think that has anything to do with why it won't run.
I'm sorry I was unclear. I was being generic on purpose as I've tried with several different programs with the same result. I realize that isn't helpful to those trying to help. My apologies. to run the (non archived) app from the command line: java LabelTest To create the jar archive: jar -cvmf manifest.txt app1.jar *.class Contents of the manifest: Main-Class: LabelTest To run the jar file : java -jar app1.jar Contents of the archive jar tf app1.jar META-INF META-INF/MANIFEST.MF LabelFrame.class LabelTest.class 
And you haven't defined a package in for LabelTest? So there should be no package foo.bar; at the being of the file. Also does the LabelTest class have a method public static void main(String[] args){ //your code } in it? Finally what happens if you run: java -cp app1.jar LabelTest
Include the image in your jar. If the *LabelFrame* source code I found is the same code you're using, the program will fail if the file "bug1.gif" is not found. jar -cvmf manifest.txt app.jar *.class *.gif 
Extract expressions to variables and methods, and you'll find you won't need to break lines. If you need help, provide some examples of long lines and i'll show you how.
Included the image in the archive, still would not run, same error.
No, there is no package. Yes, LabelTest has a main method; the code runs just fine normally. The code ran correctly using your command.
Does your manifest file end with a newline or carriage return? It may not be parsed correctly if it does not. 
This appears to be the issue. Thank you. It worked.
Use the Eclipse formatting. Configure to your taste in line widths. I personally like 120 chars. Then CTRL+Shift+F everywhere, all the time. 
Googling "applet init start" tells me that init() is called once when the applet is loaded, and start() may be called more than once, when the applet is started or restarted. So use init() for code that you want to run once when the applet is loaded, and use start() for code you want to run each time the applet is started.
Another way to put it is that the silent majority doesn't care about the evolution or future of Java.
No I understand what the difference is, I'm trying to think of a practical situation in which you would want to use start instead of init. Maybe if you're doing something with sockets, or something really memory intensive that you want to stop/restart every time a user switches to a different webpage. Just sort of looking for community wisdom. 
Googling "applet init start" tells me &gt; For example, in a video applet, the init() method might draw the controls and start loading the video file. The start() method would wait until the file was loaded, and then start playing it. The stop() method would pause the video, but not rewind it. If the start() method were called again, the video would pick up where it left off; it would not start over from the beginning. However, if destroy() were called and then init(), the video would start over from the beginning.
Use init to load and set resources for the game. Such as, setting foreground and background colors, looks and feel, the panel layout, any dependencies... so forth. Use start to actually start the game... for example, starting the game thread. Use stop to stop the game. ... You shouldn't be using init to ever start the game. Why? Because say you navigate away from the page, then go back, the game won't start back up. It is because init is not called again, start is. Start is where you start the game. Prefer start over init as you can always reload everything. Use init for everything that can be preserved between game sessions.