Be a bit clearer in your description, please. Do you want to stop incrementing i and j? Do you want to cancel the loops? What exactly do you want to achieve? As a guess, I think that you want to only have unique numbers in your list - am I right? If so, you need a little change of code: Instead of: int n = (int)(Math.random()*(474))+1; if(!myList.contains(n)) { myList.add(n); myList.add(n); } Start with a reverse condition: int n; do { n = (int)(Math.random()*(474))+1; } while (myList.contains(n)); myList.add(n); myList.add(n);
What he said. Unless it's for a college course where the professor has never worked outside academia. In that case add another couple hundred comments.
I doubt it's your installation: if you can play Minecraft, Java's obviously up and running. &gt; it's not allowing VM launching now Where is it not allowing this? Can you start a Java process from the commandline? Try "/full/path/to/java -version" at the commandline.
Here's an article I wrote over a year ago - [Traffic Signal GUI](http://java-articles.info/articles/?p=38)
Better post this in /r/learnjava - this sub here is for general discussions about Java and more advanced topics.
&gt;I'm also looking for feedback on faulty code/convention breaking as there probably are some terrible faults. I don't think you should be so hard on yourself, I think you did a good job for a beginner. I would recommend maybe building upon this such as add user interaction. Maybe buttons to switch the light maybe a text field/button to change the timer. Otherwise good work and keep it up and you'll get where you want to be.
Try installing a 32bit version of Java or a 64 bit browser. Default Chrome and Firefox downloads are 32 bit and will not work with a 64 bit JVM.
Sherlock Holmes would be proud
Something like this? http://ugate.wordpress.com/2012/06/06/javafx-pojo-bindings/ 
Interesting conversation concerning the benefits of using Java instead of JAVA. Here are my thoughts: http://www.troll.me/images/ancient-aliens-guy/java.jpg :D
It's only a benefit if you value convention over configuration :)
The best you can do with an array is a linear search. That's O(n). Not particular efficient. If you need it more efficiently than that you have to use a different data structure. A sorted list or tree can do it in O(log(n)) or a hashmap or hashset can do it in O(1)! You'll want to think one level higher than "contains". Think what actual problem you are trying to solve and use the right tool for that job. For example if you want the entries to be unique, use a hashset and it does it for you. Unless this is a homework assignment. In that case sort that shit then use a binary search. 
can't argue with that!
[Binary Search](http://en.wikipedia.org/wiki/Binary_search_algorithm) is a way of efficiently searching through *sorted* data to find the location of a specified object. Suppose the following problem, I have a 100 floor building and want to know what the highest floor I can safely drop an egg from is. Now, one way I can do that is by starting at floor one and continuing up until the egg has broken, but that means I have to try every floor until I find one where it breaks. That would take a long time. But what if I decided to start at the 50^th floor? If the egg broke, I'd know that the floor I want is in the range 1-49, if it didn't: 51-100. I can then repeat this process until I've found the right floor. In fact, every such search would only take a maximum of 7 checks, compared to the average of 50 checks I'd need if I went 1, 2, 3, â€¦. Extending this, I can find any element in a sorted list of 1000 elements in a maximum of 10 checks. Why sorted? As we saw in our example, the floors were 'sorted' by height, as higher floors are, by definition, higher up. But suppose the following list: [1 2 4 5 3]. That list is obviously not sorted. If I perform a binary search for 3, then I would check the middle element (4), see that 3 &lt; 4, and go in the wrong direction, falsely believing that the element does not exist. Feel free to ask further questions if there was anything that wasn't clear enough.
I don't know what you want...but code up bogo sort, quicksort, mergesort, bubble sort all the sorts you can think of...generate arrays of 1k, 10k,100k, and upwards numbers between 0 &amp; 1500. Use each sort to sort the arrays and compare the times. 
That's pretty much loop unwinding, not a binary search. It's also O(n), not O(log(n) because O(n/2) is still O(n). A proper binary search like /u/BarghestWarlock describes is O(log(n)).
This is really misleading. Binary search is only slower than linear search in an array of tiny size. But of course it requires that the input be sorted, which is not addressed at all. "Time Complexity" and the only actual references to time complexity are for other datastructures? Benchmarking is good, but it is dangerous to do it without thinking, like this article does. Edit: it actually has a major error: "the result would be the same if a large-size array is used." - it wouldn't, binary search would be faster. Ugh.
That is great for him. I hope he eventually goes into video tutorials of popular libraries like Jasper Reports and Quartz. There doesn't seem to be much of those.
program your version of http://www.spreeder.com
I started on quicksort first, so forth until i get a working timing test uni. I got Quicksort unit done with a timer.
Sounds fun to program and could be interresting portable fast reader.
Have you tryed the Craking the Code Interview book's ones yet?
Subbed, I'll get a chance to watch it some tomorrow hopefully. 
Head over to /r/dailyprogrammer Also, it's "programming". 
This article is a great example of how to spot someone that's never taken an algorithms and data structures course. And also doesn't understand how to benchmark Java applications.
Thanks, I actually stumbled upon that yesterday. It still has a few limitations (changes in the underlying POJO are not immediately reflected in the GUI), but it seems like the best option out there at the moment. 
You need an ActionListener on the button and in the ActionListener, you can just assign a String variable to &lt;Textfield&gt;.getText()
In the side bar, there are some other subreddits that might be more appropriate for this. Eg. Java Help, /r/javahelp. You can get the text from a text field by using yourField.getText(). You can do that when a button is clicked by adding an action listener. Maybe you should start with the [swing tutorials](http://docs.oracle.com/javase/tutorial/uiswing/index.html). Or if you want to do something a little more modern try [javafx](http://docs.oracle.com/javase/8/javase-clienttechnologies.htm).
Nice article indeed. I like the way you structured the code. Just one quick comment: You state that you should separate the GUI model from the actual GUI, yet in your **TrafficSignalPanel** class, you create the border directly. Shouldn't that one also go into the GUI model? I know, this is a simple thing, that has no effect other than "beautifying" and "untangling" the code.
This is something I have on my "someday/maybe list". If you want to do it, it's good, too. Fail2ban auto-abuse-notifier 1. get email from POP3 account that includes amongst others the offending IP address and the abuse contact. 2. Write a short and friendly email to the abuse with the original mail attached to it, and the IP in the subject line 3. remove original email from POP3 account 4. repeat until no more fail2ban emails are in the inbox. Example mail can be provided.
Well if you want to build a development tool how about something that takes log files and converts them to events in some sort of event store that allows complex querying on this event data. See event sourcing. Edit also check out a project called event store. 
yes, unless you save the contents of the array list to a text file.
Yes, the data in the ArrayList will be lost on program exit. Depending very much upon the requirements stated in the assignment, and the details of your implementation, it sounds like your teacher might be in the wrong. One suggestion unrelated to the specific question: If pose a question in your post title, and echo it in your post, make sure you don't change the sense of the question, as you did here. It'll greatly increase the odds of a useful answer. If I were in a hurry, and answered the question in the title with a simple "no", or answered the question at the end of the text with a "yes", how would you know which question I was answering? 
Alright, so I think there's two parts to this :P First, you are correct, the ArrayList will cease to exist once the application closes, which means you creating a playlist is stupid. You putting that list into a text file instead would be better for the usage of the application. Second, was the point of the exercise to put data into an ArrayList? Did you actually put it into an ArrayList before you wrote it to a file? What you SHOULD have done was create your playlist as an ArrayList, then on program exit, write it to a text file (or allow the user to save it to file) so it doesn't forget. It's like if the teacher just taught you how to use for loops and you did the assignment using a while loop - you'd fail because you did it wrong, not because you didn't come up with the same answer.
You can put the border parameters in the model if you wish. If you look at my other articles, I don't put the insets in the model either. I'm not a perfect coder. I'm not a MVC zealot, either. I found a way of coding Swing applications that works for a wide variety of Swing applications.
Java is just another programming language. It has no impact on my personal life. As for my professional life, it's been paying my mortgage for 14 years or so.
You maybe can ask how a job of programming affects people, but java? Come on. Also it's not like there are developers who write just in java. In most project you have to also know JavaScript, CSS, XML, SQL, RegExp and many other languages/protocols, so it's hard to say java specifically affects people.
Trying to prove you're smarter than your teacher is rarely a winning strategy, whether it be true or not.
You can consume RESTful webservices with any of those (JSF Managed Bean, GWT, Vaadin). REST may expose your back end, but you still need front-ends, state management, validation, etc... Think of REST as a more modern implementation of SOAP. It's just one piece of the puzzle, and your project spec will define what services you need.
I dinit notice of it, thanks.
As far as personal life goes, I get far more dates as a Java programmer than I ever did as a Perl or PHP programmer. As far as professional life goes, we do exclusively Java at where I work, and there's generally a need for Java programmers where I live (Kansas City).
What you are looking for is called Java Serialization. Your instructor just wants to see some object oriented programming, explicitly that your MediaPlayer class has an ArrayList&lt;Song&gt; for storing songs. To actually persist in memory objects when starting and stopping the program you need to perform object serialization. https://duckduckgo.com/?q=java+serialize++ http://docs.oracle.com/javase/7/docs/platform/serialization/spec/serialTOC.html http://www.javabeginner.com/uncategorized/java-serialization There are other serialization libraries beside the default java serialization. XStream is a very popular library that is simple to use that will send your java objects out to a JSON or XML file. http://xstream.codehaus.org/
Given Java's "retardedness" (sic), how do you explain Java's success in all areas from mobiles, entertainment, on the server, in the enterprise and in [insert unnecessary expletive here] *space*? 
I think there is a world market for maybe five Java developers.
&gt;They don't know any better. You think NASA haven't done their homework? Or Google? &gt;Justin Bieber is also "very successful". Justin Bieber is also modern. I am unsure if this implies an endorsement of java or a comparison of C# and Justin Bieber. Please clarify. Joking aside, I get your point. Popular does not necessarily equal good. &gt;COBOL is also "very successful" It was, at least. There's an awful lot of that stuff still running. &gt;java == COBOL I have a few otherwise good friends who have apparently drink some strange C# kool-aid. Though their mental capabilities are sharp as ever, they seem to think that Java hasn't changed since '95. When asked about specific shortcomings of java, they either mumble something about type erasure, how java isn't "modern" or they get totally defensive. I have to conclude that they don't know Java at all and parrot some C# marketing phrases to avoid looking ignorant. I'm not saying that Java has no shortcomings, but it has some great things going for it (one being the JVM). &gt;Once again, I prefer **modern** technology. No problem. Go on and create things that rock. But before you continue bad-mouthing things, ask yourself if you really know your stuff. (Edit: fixed bad autocorrect).
https://news.ycombinator.com/item?id=7552820
will do! haven't gotten round to it but will before the week ends! ssh will be nice! our group is very... paranoid! is mercurial/svn integration coming up aswell ? it'd be nice to move all these side projects that have started with previously! 
I ask myself this question on every new project I start. Creating services to serve up your data is good for making multiple apps with one backend and using decoupled front ends. Its NOT EASY though after you get through the intial CRUD operations. Validation, authentication, state management...etc get alot harder when using a REST back end. Performance is always a concern as well, with a closely coupled application(like JSF), you would probably have more luck with tweaking for performance gains and can avoid some of the custom mapping code you would need for the service. So...it all depends :) Using REST will be more difficult IMO, but will have more payoff long term assuming you actually re-use the service for something else.
The program Eclipse works wonders, and its what the pros use.
That's difficult to answer...sort of like asking, how many cooks are there? The best thing to go would be find out how many people globally work in IT, then multiply by the percentage of development jobs, then the percentage of Java jobs. Even then there will be a number of non-professional Java developers that you aren't counting (myself included).
Looks great, I'll read it through!
I am going to use that example in the future. Great one.
As /u/robertjliguori mentioned, FindBugs/Checkstyle/PMD are all great for automatically finding small issues in your code, and while it's more complicated, SonarQube has a ton of info. Related to code stats, if you have JUnit tests in place, you can always use [Cobertura](http://cobertura.github.io/cobertura/) for unit test coverage reports.
There are dozens of us.
It's a sad story. Java once had a reputation of being a *very* tough nut to crack, and that graph is testament to it.
I use Netbeans, how do you do the import shortcut there?
What motivation could you possibly have for this?
But did it become *that* much more popular in that short amount of time?
Yea, the mobile market helped especially due to high demand. Back 5/10 years ago you wouldn't have heard a word of Java; it was over in it's own corner.
I work a lot with places that hire college students, and they are always looking for a better (free) way to handle job schedules. Students have such random schedules, they really need a better way to handle it. So, just something that could accept maybe text files with weekly availability and auto-configure who should get which time slot.
I don't 100% agree with this one. While in Uni I used to do what was required from the point of view of the teacher, then go over and above for my personal reasons and submit my entire assignment with my own additions, brownie points all round! When doing it like this, you just have to remember that you HAVE to do the original course work before going over and above.
Okay, so I'd tackle this problem first of all by thinking about what you want each class/method to do. 1. Allow user to input song/artist name. Check 2. Check if that song is in your database. ? A. Does your main method know anything about your database? If not, how you can make that connection? B. Does your validator know anything about your database, because if not it has no way of "validating" any information. I think if you figure out how to do part A and B, it will make more sense to you. If this doesn't make sense, just comment back and let me know, I'd love to help! Also, quick tip, particularly directed towards your music class. I'd make sure that the name of the class is as meaningful as possible so you know **exactly** what the class/method is supposed to be doing. The name "music" could mean that it stores information about a single song, or a group of songs, or a single artist, etc. I'd suggest going with something along the lines of MusicLibrary. 
Integer is immutable, what get++ actually does is get = new Integer(get + 1); Your old Integer is still in the list, unchanged.
Since Java and C# are by definition not equivalent, the source snippets won't be either. But: FutureTask&lt;String&gt; someTask = new FutureTask&lt;&gt;(MyClass::getDataAsync); executor.execute(someTask); //why would you not do this in the main thread? updateUI(someTask.get()); And I won't write out your example using .add(), .mul() etc. - I know that Java does not do operator overloading. Whether that's a good or a bad thing depends on what you try to do. For the third example, I give you [@Data](http://projectlombok.org) (btw. also @Delegate). The fourth example has a bug - you forgot the array length. If the length is added, the example is actually possible to implement in a hacky way in Java (using Guava's [TypeToken]()): public static T[] createArray&lt;T&gt;() { return (T[]) Array.newInstance(new TypeToken&lt;T&gt;() {}), length); } Note however that this works only if T is fully bound. With regards to shortcomings: Many of the things you listed are nice features, but I see nothing that would make me X% more productive where X&gt;1. I'll however readily admit that Java lacks in the desktop client department. As the desktop becomes less and less relevant, so does this shortcoming. &gt; NASA started coding way before C# existed. They also started coding way before Java existed. Yet they have set their standard on Java and forbid C# (along with other languages) for any mission-critical code. The reason why NASA (btw. ESA, too) like Java is its predictability. It's a well-understood system that's unlikely to break in unforeseen ways. &gt; Google are just a bunch of spoiled children. They are also a bunch of *very clever* spoiled children. Another thing where Java shines is devops. And this is where Google wins. Also see below for a performance comparison. &gt; Would they have chosen C# instead of java for Android, it would be Much Faster and consume less battery [...] This compares to an old version of Android (I would also guess a benchmark of C# against Java created by Mono Poster Child Miguel de Icaza is going to be skewed in some way), guess what - it's now faster and uses less battery without changing language at all. &gt; [...] and they would NOT be sued about it. Mere conjecture. The Backwards compatibility argument isn't as idiotic as it may sound to you. There has been a huge investment in JVM technology, to the point where in many use cases, JVM code runs as fast (sometimes even faster) as well-optimized C++. Sorry, but the CLR just doesn't match the JVM for raw speed. The argument against changing JVM specs is simply protecting this investment. &gt; So we can actually say that java becomes more and more retarded with each version. I won't argue about taste - and most things you bring up seem to me as mostly a matter thereof. Many features you list have a value and a cost, and for some applications the value may outweigh the cost, while for others it will be vice versa. TL;DR: If you want to code in a truly modern language, you should ditch C# and code Haskell or Idris. Otherwise feel free to stick with C#. It's a fine language, and certainly superior to Java in some areas.
I believe this comes down to the fact that Integer is a primitive. When java stores a list of objects, the address is saved and so doing something like this would work. However with an array of primitives, only the true value is copied meaning that it is a completely different place in memory edit: Array of objects- myList = ([234a5][672df][5267e][1782a][][][][]) // Hexadecimal Address's in memory myItem = myList.get(0) // myItem now points to 234a5 These are the addresses in memory and when you use a get on 0 for example, 234a5 will be returned Primitive list- myList = ([2][1][8][6][4][-20][9]) myItem = myList.get(0) // myItem now contains 2 and has no reference to myList With out the reference, myItem cannot alter myList variables
If you use Eclipse, EclEmma (install from the marketplace) also provides good coverage reports.
I can see why this comment gathered so many downvotes, but it has actually a kernel of truth: Eclipse shows warnings for some anti-patterns. The checks are much less involved than what e.g. Findbugs does, but they are done in real-time while you code, so it makes a good first line of defense.
You're confusing **Integer** - the Object with **int** - the primitive. Lists can only hold objects, not primitives. So, /u/crapet is right. It is due to the fact that the **Integer** object is immutable.
Ahh just like the problem with Strings!! thanks :)
Exactly. The types with capital letters up front are objects, not primitives.
Downvoters obviously don't get the IBM reference.
Yes, well if the OP had actually used an ArrayList he would have apparently satisfied the requirements of the assignment. If he had then added persistence to this ArrayList, via any means desired, that most likely would have been fine.
&gt; // Instead of having a validator class, make validator a method within the "Music" class I think The old discussion whether the model should now about the business rules. I tend to agree with separate validators, because the business rules can change or they can be different for separate users of the same model. But in this, what seems to be either a self-learning exercise or homework, I think either way is fine.
http://www.slideshare.net/jeffz/why-java-sucks-and-c-rocks-final
&gt; 2 year experience with java 
I could agree with most of the article if it would not be for the final conclusion that Java continuous to innovate. There is nothing innovative in Java 8. Everything is taken from other languages. Instead of innovative, one could say that Java is great because it puts only mature concepts and lets others break the ice. 
In addition to code quality warnings, I think any code review that doesn't include formatting is problematic. I like [CheckStyle](http://checkstyle.sourceforge.net/) for that. 
I don't have any problems with EclEmma, and I don't see a killer feature in CodeCover, so I won't switch yet.
the loop and term reports are killer features for me. Also, the reporting of branch coverage in EclEmma (at least, the last I used it) was terrible compared to CodeCover. 
The most comprehensive rules I've found so far are included in IntellIJ IDEA. 
Spend a bit of time with JavaFX and you'll see some real innovation there. This is the most modern UI toolkit available today.
JavaFX is the way to go if you are working with Java.
It's never too early to get into the convention of proper naming, especially since a proper name can tell you a ton of information about the function of a class or method, particularly when you are just starting to learn about these things, at least that's my opinion on it. 
Really wish it was licensed Apache, MIT, BSD, eclipse or something else useful for closed source.
 Doubtful , durandal, backbone, underscore, marionette are as modern and arguably much better
SVN will never happen for serving. At best I could offer viewing, but I run into other problems which are the same problems I'll list for Hg. In order to support Hg I'd have to depend on an Hg installation (perhaps bundled) but that breaks one of my design rules - pure Java. There is "hg4j" (and SVNKit) from the Tmate guys, but it is GPL'd which is incompatible with the Apache license that Gitblit is distributed under. So I can't offer that without breaking one of my own rules or breaking the rules of the GPL. JGit, upon which Gitblit is built, is distributed under the EDL, which is the Eclipse version of the BSD license.
&gt; Doubtful , durundal, backbone, underscore, marionette are as modern and arguably much better Seems like apples &amp; oranges to me. http://docs.oracle.com/javase/8/javafx/get-started-tutorial/jfx-overview.htm#A1131418 
I very rarely do anything with XML. It sounds like you are working with some legacy stuff. The main application I work on is 5 years old and contains very little XML. I do use ANT as a build tool with Netbeans but I have never had any reason to touch the script.
I spent a lot of time with JFX and there is nothing new in it. FXML and binding through observable collections is annoying at best. AngularJS is innovative. I am not trying to say that Java is bad. It is stable, robust and reliable. However, it is not innovative. 
Yeah, what's the fastest way to build a maintainable web ui with low lines of code? I could care less about Swing, and libraries like d3js and threejs are outstanding for 2d and 3d graphics respectively.
Swing is still the most complete and functional UI toolkit for Java, but JavaFX has come a long way, and offers much easier access to special rendering effects than Swing. Eventually, JavaFX will most likely "replace" Swing in much the same way that Swing replaced AWT -- Swing will still be there, and some Swing elements might continue to be referenced (no point reinventing the wheel if the wheel is working well), but most everything will be done in JavaFX. Of course, that's not certain - Swing is pretty darn mature and capable, so, even though it's Oracle's stated goal to replace Swing with JavaFX, users may not follow suit. Fortunately, you can embed JavaFX in Swing easily, and, with Java 8, can embed Swing in JavaFX, so the transition might not be too bad. If I were starting fresh today, I don't know which I'd learn first. I guess I'd probably do some simple apps with Swing, just to make sure I know the basics, then switch over to JavaFX, using that as my primary UI toolkit. That way, should I run into a situation that cannot be solved currently with JavaFX, I would have some familiarity with Swing, which would smooth the process of building a hybrid Swing/FX app.
Does JavaFX have a native look and feel like Swing?
Nope. If you want a "native" look and feel, you would want to go with Swing. That said, though I was once a proponent of native L&amp;F, these days I've come to think of it as unnecessary in virtually all cases.
What "site"? A website? Is it build with Java - or are you confusing Java with Javascript? If it's the former, I'm assuming you're using JSF, so: either use a static variable in your bean class, use a field with getters/setters in a dedicated or separate ApplicationScoped bean.
May I ask what frameworks you are using? Spring always seemed to be the biggest offender for me
Give it a few years and people may perhaps create styles that mimic an OS' visual styles - for example, take a look at this: http://fxexperience.com/2011/12/styling-fx-buttons-with-css/ There's styles to mimic the OS X Lion and Windows 7 buttons.
It seems like newer frameworks are moving towards the convention over config approach now, however, the reality in many instances is that bigger organizations with an entrenched staff. I've worked on brand new applications, literally first line of code was written less than a year ago, where the preference of our client was to use the XML configuration because they did not understand the new approaches. I've personally experienced this twice and I doubt I'm the only one to have experienced this.
LOL
Well the spring this is interesting and it is a sore spot for me, especially since the reason I posed this question was indeed because of the frustration with the app I am currently developing. That perception of "absolutel portability" often leads IT managers to shy away from adopting newerish platforms like Java EE. The app I am working on (and the reason I made this venting post) is because absolute portability is an edict an IT manager buys. It stifles innovation so perhaps its more of an instituional thing in my case. It still is frustrating though
Spring does not use XML for "modern" configuration. In the past, they were indeed one of the biggest offenders. 
I believe XML was the solution to your problems with type safety and validation in the past. However, when you look at how SBT and Gradle use a DSL as the means of configuration it is much more elegant. Maven and SBT essentially the same thing... build configuration and metadata. However, to a programmer, it is much more elegant to write actual code to configure the system than debug something in an XML file. That being said, I do appreciate the rundown on the evolution of Java's XML usage. Thanks.
&gt; Yeah, what's the fastest way to build a maintainable web ui with low lines of code? I could care less about Swing, and libraries like d3js and threejs are outstanding for 2d and 3d graphics respectively. So you only develop for the web, an nobody else should develop for other targets?
&gt; FindBugs, CheckStyle, PMD and Sonarqube And the [Checkers Framework](http://types.cs.washington.edu/checker-framework/)
In the instance of Spring v EE, I would say you'll devote your time to either configuration of the application (Spring) or the server (EE). Both have ended their love affairs with XML nowadays, so the latest incarnations attempt to use it as minimally as possible. Unfortunately, it's not as though many of us can toss our infrastructure out of the window and take advantage right away.
So, the ouput of the above code is : &gt; SafeArray: [Ljava.lang.String;@276bced8 I tried to feed the `sa` variable into "OpenUSBDevice" and got a: &gt; Jacob_Testing_3.pde:33:0:33:0: ComFailException: A COM exception has been encountered: At Invoke of: OpenUSBDevice Description: 80020005 / Type mismatch. A few different variations didn't reveal any improvements. I think this is because the output of ScanUSB is explicitly a pointer to a serial number. I get the pointer, but Java turns it into a hash code I don't know how to use it to retrieve the serial number that I would send to OpenUSBDevice. Also, I tried just sending the serial number on the back of the device. No go.
Less than someone who doesn't have to point out *Maven* as some special expertise.
You can create a Java EE application on Tomcat. Just include the Jars you want in you application or use OpenEJB from Apache. It is a portable way to do it. It is safer than Spring because there are multiple vendors with implementations.
I'm not sure how to connect my main class with my database, how do I do that?
Did I name something wrong?
In that case though you lose some of the advantage of using the integration tooling that is out there for camel. Fuse provides a neat Eclipse graphical interface for drawing routes like in a diagram. However, it can only currently produce XML for the file. So if you start out that way, when the editor inevitably is insufficient, you need to drill into the XML. The Camel fluent API is really nice, but then you have to find another way of visualizing your integration flow OR maintain the diagram and the implementation seperately.
You have to create a variable that is your database in your main method. Music library = new Music();
legacy code more than likely... some configurations will use XML which I'm fine with. Web Services are moving away from SOAP/XML and more towards REST/JSON.
I'm a recruiter trying get a ballpark rates on java developers. I haven't sourced Java folks in a few years - pardon my ignorance.
Okay I changed my Validator class. I'm confused what library = lib; means. I get that you are making library an object of the Music class, though, is that right? What do I do with valid in the main class, can I compare it yet with testThis?
I would say that is probably true for a lot of the more mainstream popular libraries like spring-core, spring-mvc, etc... Some of the more specialized libraries annotations ARE present, however you cannot escape without a healthy dose of XML configuration (Spring Batch). Even the Java EE batch standard (which is mostly just a standardization of Spring Batch) is fairly XML heavy, and Java EE. That being said, I don't profess to know what the best way to describe a batch flow would be, I'm just pointing out that not all Spring assets have completely modernized.
Okay is [this](http://imgur.com/zWD74yC) starting to look closer?
Five years old 8-O... seriously... Everything but the most trivial application at my work is 10 years and counting. XML is a mature technology that just works. Like makefiles. yeah, there may be a better, shinier way but people know what they're doing with it and it works, in the end, that is all that matters to them with the paycheck.
Yes! I would pull the Validator valid = new Validator(); line outside of the top of the while loop, because as you have it currently written, you will create a new validator every time the the loop is run, but you actually want to keep the same validator. Does the stuff I said earlier make sense?
Yes Javascript, maybe that is why my search results were not giving anything, thanks. 
this is why I mentioned 'some configurations will use XML which I'm fine with' - spring falls under this category, but you only chose to use XML for Spring. You can use annotations to configure spring with very little XML (context:component-scan) 
What do you mean? The Validator valid = new Validator(): is INSIDE the while loop, and not at the top?
I used the getElemSize() method to look at the size of the returned object, which is "8", which probably corresponds to "276bced8". However, any attempt to read this string returns only the value at the input. The number seems to be a hashcode, unless I'm totally off base. If I try to put in a string of any kind, it simply replies that the number of parameters is invalid. 
You should put the Validator valid = new Validator(); just above the while loop, between the String userinput = ... and while(...) This ensures that you are not creating a new validator every run.
Swing components (such as JTextField, JCheckBox, etc.) are in no way different to other Java classes. This means, that they can be created in exactly the same way. + Find a way of storing a changing amount of objects (hint: look at the various list types) + create the swing component the same way as you would create any other object + add the component to the parent control (JPanel, etc), and add the component object to your storage.
$50-60000? Check workopolis and monster for similar positions maybe.
I hope by Java SE 9, we can have a Serializable be an annotation rather than a marker interface.
Async: We can use callbacks for that. With function refs we could even mimic the C# interface, but who needs that? I *could* write a bytecode processor to allow for adding arbitrary objects via + etc. or simply use groovy/Scala/kotlin/..., but I personally have no use for that, because the values I work with fit in an into, long or double. Don't get me wrong, I don't think that operator overloading is a misfeature. It's just that I don't effin' need it for the problems I solve. It's the same with reified generics. Yeah, I get that they're cool. No, I don't use them in my code. Threads, futures and a fast ring buffer are a good match to my concurrency needs. Async? Nice. I may use that some day, now that Java has a similar solution. When it's all said and done, Java may not be better (for some arbitrary definition of better - your definition is as arbitrary as mine) than C#. But I have plenty of experience with it. So while it may or may not be the 'best' solution, for me it's certainly the more comfortable. Also, as I've discussed above, in my field the nice features of C# are of little benefit. I don't say that this applies to everyone - it obviously doesn't - but neither does your cost-benefit evaluation of both languages.
getElemSize() will return the size in bytes of a single element. You need to call getUBound()-getLBound() if you want to return the size. What exactly does getString(0) return?
At least it runs on *nix systems.
To be clear, this "modern configuration" you're describing -- is this the one which uses java annotations?
DSLs require learning DSLs. XML is universal. An XML schema can be used to validate documents in any language.
This is a super common misconception. Yes, if you're still doing idiomatic spring 2.x, you'll have a ton of ugly XML. Enterprise loves XML, I think that's what you're seeing. As for how I like to work with Java, I like to use Dropwizard for services, which uses no xml whatsoever, and most of the cross-service communication done with REST or Thrift/Avro. Tomcat/WebSphere/etc are going the way of the dinosaur, and even Spring is stalling out. 
How rural? Is it close to a tech hub? In a tech hub (SF, Seattle, NYC, etc), you probably know java devs are usually 70k-110k, with some outliers on both ends. Given that, I think a 50-60k salary is probably great assuming a lower cost of living than those cities. 
Yeah, the original safearray is unmodified by the dispatch. getString(0) returns the value that it originated with; in this case, nothing. It is strange because I can get the dll to reply back that as yet unimplemented calls are not yet implemented and I can close all devices without complaint (none are open). I verified that I could establish communication with the vendor software, so I know that's not it. Is there a different format that I should be submitting the calls in?
Which version of the JVM are you using? Recent version release the heap slowly when it is not in use. I'm afraid you're going to have to delve in GC details if you want to achieve a significant and fast reduction of heap size. Not necessarily calling the GC yourself, but exploring the many options available. Maybe it would be easier to just run the heavy lifting in another process, so that when it is done, all resources are released?
One if the larger cities in Maine. But, we're still talking about Maine..
I am not comparing them. All I tried to say is that there is nothing innovative in Java 8. Everything has been seen before. That does not make it bad or wrong. It is simly not new.
Ive been hearing a lot about drop wizard id like to give it a go sometime
LOL. What a retard. WPF is still single threaded like the 90's. Keep trolling though. 
&gt; and thus is more portable than your typical EE app With the exception of WebSphere, every Java EE server + app is just as portable. They're all Java and they all run on every JVM. 
Sorry you lose again. http://www.cnblogs.com/JeffChen/archive/2006/12/07/585576.html
It must be nice living in a bubble. 
LAF never really worked well anyway. There were always issues with it. Try creating your own LAF and you'll see what I mean. JavaFX uses CSS instead which has a lot of nice advantages. Yeah whoever presented that should have spent a bit of time styling for Android with CSS.
&gt; Whereas with an application server, there is a delineation between what is part of the infrastructure and what is part of the application. App developers just need to be assured that the JNDI reference to say a JMS queue was set up by their infrastructure team This is an outdated and legacy view. The development team ***always*** owns the server. All what IT ever did and will ever do is execute `/etc/init.d/jboss restart`. I've worked with brilliant and very capable IT staff, but seriously that's all they ever do. In particular, IT is ***NOT*** going to create a JMS queue, just as IT is NOT going to rewire EJB beans in the middle of the night. Just think of it, why should developers create a `java.util.queue` inside the application, but let it to IT to create a `javax.jms.Queue` instance? Are IT developers too? Do IT even know what a JMS queue is and where the application needs it for? From practice I can tell you that the answer to these last two questions is nearly always a form NO! In Java EE 7 nearly every resource that according to the pipe dream of the deluded few had to be defined by IT admins can now be created from within the application (JMS destinations, JDBC datasources, Mail sessions, and what have you), which is pretty much the only right initial place for them. Java EE should have a better answer for switching known configurations, but the road Java EE 6 and 7 started to go in is definitely the right one. 
WPF works just like winforms. The event dispatch thread is the same thread. Add a click event with some code that takes time. Visual Studio itself freezes. You have to fork/join threads to get a responsive UI in these situations. JavaFX solves this with a scene graph and 3 threads which are managed for you. You rarely have to even worry about threads in JavaFX. Dude, instead of trolling why don't you spend a weekend futzing with JavaFX. I know it may burst your Microsoft bubble but.... 
My company targets WAS v8.0. The only XML that I'm forced to use is web.xml to register the JSF 2.0 servlet, OmniFaces config, Wink JAX-RS servlet, Shiro config, and PrimeFaces config. There a few lines I'm sometimes forced to put in faces-config.xml, persistence.xml, and beans.xml. There's also Indirect JNDI config that's required in web.xml and ibm-web-bnd.xml. In total, aside from my Maven poms, which aren't thousands of lines of code, I'd say it's about 700 hundred lines total of XML config...not that I actually typed all of those lines. During the J2EE days, the amount of XML was ridiculous. It's gotten considerably better. hibernate.cfg.xml and faces-config.xml used to be gigantic. Servlet Spec 3.0 allows for the possibility to not even have a web.xml, but WAS v8.0 still sucks.
&gt; You can also export and import Eclipse preferences. You should check out mechanic, it's far cooler than simply importing/exporting. I only wish eclipse had a better configuration repository (especially for templates)
I didn't really understand what is "take a supplied starting point and **continue** calculating a Fibonacci series." Care to explain better? If you only want to find out the nth number in the Fibonacci series for some given n, you can use the recursive definition to whip out a quite simple, straightforward and horribly slow version of Fibonacci series. "for 10 places" I assume it means you can't go past 9.999.999.999, which explain the use of int. (though it'll only get you up to slightly over two billion, not the full ~10 billion range). You may also use the simple iterative and accumulate the result.(start with zero ((or one)) as accumulator (Acc), 1 and set Acc to be N, and N to be Acc + N. That'll take a LOT less time. There's a way to take even less time, but it's a simple search away, and the full explanation makes it more didactic than I can explain myself.
not sure why you're quoting that, but yes - @Configuration Java based configuration instead of XML based configuration. The only XML sometimes needed is a listener in your web.xml, but that too can be worked around if you use a newer Java Servlet Container that supports non web.xml configurations
Er you don't get any toolbars with the JDK only with the JRE and only if you get that from Java.com. But whatever.
As of now, there are only XML only configurations for some of those specialized "fancy tags" that I like to call them the &lt;namespace:myspecialbean value="something /&gt; You can, almost always, just create @Bean Java configurations of the exact same classes. It sometimes requires a little bit of investigation to figure out what the fancy tags are creating under the covers, but I've created many Java configs equivalents of the XML tags without any documentation just from reading the source code. Don't get me wrong, I think it's extremely annoying that some of these "special projects" insist on perpetuating XML configuration; however, I wouldn't hold that against the Spring Core just because some library under the "spring" name uses some XML. 
Okay the first image [here](http://imgur.com/a/QDtpK) I didn't know what to do, but I saw that NetBeans had a solution and when I clicked it it made what is in the second image, but I'm not sure what that does either. Either way when I compile, although I have no errors, I'm getting [this](http://imgur.com/CRssFrX), any idea on what to do next? Now that I can test if it has the song or not I want to make sure that works before I proceed.
Then why did you even mention Angularjs in this context?
That's my point. You don't even need an application server to run a Spring application, least of which one that supports the entire EE specification. The embeddable and web profiles were made specifically to address this issue.
True, but I'm referencing more so the vanilla tomcat utilized so much in large Spring deployments with minimal server configuration. 
Are you serious? Let's forget about Linux users. But what about OSX users?
&gt; It's ok if you want to write 25 lines of code for something that takes me a single line in C#. I don't, because as I said, I'm not writing in the same problem space as you. A chi square test or a Jaccard index is going to take the same 5 lines (give or take 2) in both C# and Java. And in terms of performance, C# has some catching up to do with the 90s. &gt; [...] but you can't deny that on a pure language level, java is years behind the rest of the mainstream languages. That depends on what you count as mainstream. If you go by TIOBE, java is comparatively young. There's C, C++, Python, Perl (though waning) and JavaScript (almost contemporary to Java BTW.) - so you can hardly make a case that Java is somehow more behind the times than all others. I say use the right tool for the job. For my job, java fits the bill nicely. For your job, C# may be better. For someone else's problem, Lua or Python or Haskell or Scheme may very well be an even better fit. So by all means be happy about your language of choice, but don't stop there, or you might miss out. Thank you anyway for the good overview of C# features - I know most but not all of them and will certainly revisit C# whenever I have a GUI to write (unless it's on Android).
I need to respectfully disagree here. XML used for configuration is just a DSL written in another form. In order to use the Camel XML config I need to learn the camel namespace and all of the properties in it. There is nothing universal about it, it is for camel and camel only. The same goes with Maven, you need to learn the pom structure to use Maven. Not really any universal or transferrable skills there. Same goes for spring. You need to learn the structure of the XML in order to use it the same as you would an API. The only difference between that and something like SBT is that my DSL is in my chosen language. I like writing code, I hate editing xml nested to the nth degree. 
kill the process and start a new one?
Try sending an email to the hotspot-gc-use@openjdk.java.net list. You're likely to get a much better (and more authoritative) answer to your question there. 
I don't think you're all THAT far off right now. The first thing I noticed is that addDog() for instance, never creates a new Dog(...) and of course never adds such an object to the list. Also, I didn't look at all of your concrete classes, but I saw that the Dog class had a bunch of methods that did nothing but call the super. version of themselves. There is no need to do that. Plus it's prone to bugs, like this one: public int getWidth() { return super.getWeight(); } Now probably that wouldn't affect ANYTHING, since you'd call getWeight and super.getWeight would be called implicitly, but still... I would probably make 'addDog', 'addLoudDog' and 'addCat' create objects of the appropriate type and return them to the calling function, which would handle actually calling add() on the ArrayList. I'd declare petList as List, not ArrayList, although when initialized it would still be new ArrayList (good practice, you can find out why later). I'd also specify that it only accepts objects of type Pet by making it List&lt;Pet&gt; petList; and saying petList = new ArrayList&lt;Pet&gt;(); Or if using a recent enough JDK petList = new ArrayList&lt;&gt;(); I am not using a machine capable of actual development right now, so more subtle issues I can't really help with. But you are not that far off.
500K a year. I'm available.
Head First Java. Great book for any expertise level.
Agreed. It's not a beginner book by any means.
... yes? Any time a language changes syntax, adds features, or otherwise makes massive changes to the "front end" of itself that programmers often use, there's good reason to learn these details quickly. Tutorials help do that. Especially with new safety procedures. 
I didn't write any quotes! Strange, they must have automatically spread from your comment to my comment.
I've added a petList.add line to each of the add() blocks and those work. Now im trying to add a toString method to print out the information but when i try to compile i get a cannot find symbol - variable name error. Im not quite sure what ive done wrong or what i need to change. http://pastebin.com/3wQx36Xb
that is an excellent point
Maybe it's just because I've been working in it so long... I know that containerless deployments are gaining mindshare. But I still wouldn't trust the average developer to be able to handle some of the perks of having a container like threading and connection pooling. I know even newer more cutting edge platforms like the Akka/Play/Spray ecosystem are addressing this.
Have you tried plugging in a profiler or jconsole? Verbose garbage collection? Just setting MaxHeapFreeRatio isn't enough? 
I highly recommend it. I also recommend using the uber-jar method of packaging it, and treating it like a daemon service. It takes them a bit, but eventually your IT guys will love that method of deployment. Especially if you put it into a docker container, and they just have 1 thing to deal with. 
If you have Netbeans installed, you should create a new Java application project. There are about a hundred "skeleton" projects in categories in the various selectable folders when you choose New-&gt;Project. Choose "Java" and select the simplest Java application example that has a JFrame. Then fill in the project with the components you need from the palette by dragging and dropping the components onto a panel in the JFrame.
Very often though there are schedules and deadlines that need to be met (particularly in consulting engagements). Sometimes diving directly into source code as intellectual validation results in failure to deliver or insanely late nights. Sometimes you have to weigh the work life balance... and in general I would say the documentation for every framework I have come across... the XML configuration is usually more abundant and more accessible than the newer, sexier alternatives.
Yup -- I profile my code constantly; for the kinds of loads I process it's a necessity. MaxHeapFreeRatio is surprisingly *not* enough when using the newer GCs. I had to use the serial GC and wait a few seconds before invoking it by hand to see the shrink-wrap I wanted. Funnily enough, I fell on my "wrong" solution when I got frustrated fiddling with command line switches and mashed the "GC Now" button in JVisualVM. "Free, damn you! (click) Why won't you FREE? (clickclickclick)" ...and it worked.
In the class Validator, you never assign anything to `Music library`. This makes it null. When you try to call "null.contains" a null pointer exception is thrown. You've made a `setLibrary(Music lib)` function and never call it. This is the kind of thing that should be done in the constructor to prevent the object from ever getting into an invalid state.
You get editor support.. the XML editor in Eclipse for instance can autocomplete on anything with a schema, show you the documentation on hover, red warning on typos, etc. Still waiting to see that in practice with JSON or custom DSLs
Ugh. My kingdom for System.vacuumHeap()!
SBT is terrible. I will pick an XML based configuration file over that unreadable symbol soup any day.
Really? I've never had a use case for serial GC. In fact, I'm pretty sure -server and -client cover about 99% of use cases.
How do I assign something to Music library? I thought I was doing that with Library = lib;?
So all I need to do is type in setLibrary() in my main method after I take in the user's input?
&gt; As for build scripts like Maven and Ant, hell yeah...those suck. Is that really the best a world full of programmers can come up with? At least there are archetypes to get you started, but dayum. Which is why I'm so happy we switched all our projects over to Gradle last year. It's the flexibility of ant coupled with the convention-driven approach of maven, and no XML in sight. Plus it's easier for developers to maintain and extend since it's all just groovy code, which is a superset of Java.
700 hundred, so 70 000... Yeah, sounds about the same that we have.
Post questions like this in [/r/javahelp](http://www.reddit.com/r/javahelp) 
oh ok i wasn't aware thanks.
Really, lol?
Thanks for the excellent reply and links!
&gt; 2) Is there any communities or open source projects that are presenting alternatives? With Java, you can use [jOOX](https://code.google.com/p/joox) to *manipulate* XML. That won't help you much with those use-cases that you've listed, but if you're operating on XML data, at least you can write jQuery-like code to operate on the DOM
Without actually seeing the app code, this sounds like what I would do. Refactor things such that the main app is lightweight, fire up a separate process to handle this periodic heavy lifting activity.
&gt;Gradle doesn't even let you set the project organization/name/version in the same place. Uh... yes it does. You set group and version right there in the build.gradle file (and they'll inherit to subprojects by convention). Some companies put them in a separate properties file, but it's just a matter of which convention your team prefers. Name of the root module does require a separate file to override since it's considered immutable within the buildscript (which helps simplify multi-project builds), but the default convention is pretty universal for module naming (unlike group and version).
Coming from C#, for me its the richness of the open-source ecosystem and the capabilities of sharing code among multiple platforms, eg. for example I can use some of my class with confidence in several platform: * Desktop: Linux, Windows, Mac * Mobile: IOS (RoboVM), Android(Native), HTML 5 (GWT) * Server: AIX The other one is performance and easy to use threading library (java.util.concurrent is epic, akka is nice too).
I wrote a DOM wrapper library you might like: [XML Wrappers](https://github.com/JeffreyRodriguez/XML-Wrappers-for-Java)
Name of the root module is what I'm talking about. I didn't even bother with multi-module projects once I ran into this little embarrassment. I so wish someone would make a good build system. As it is, I only get to choose the least bad one.
Project names are used to refer to projects - if you could change it during the configuration phase, it would make project dependencies extremely confusing. Also, I'm struggling to think of why you'd want to override the root module name in anything but very exceptional circumstances. It's not like matching conventions to project layout is anything new here. Got any examples? No offense, but that seems like a really minor complaint, especially given how much Gradle offers over Maven.
&gt;Project names are used to refer to projects - if you could change it during the configuration phase, it would make project dependencies extremely confusing. That's why having project configuration written in a programming language is an incredibly stupid idea. If it's just XML (or JSON or YAML or whatever), the build system is not restricted like this. Maven, accordingly, has no such limitation. &gt;Also, I'm struggling to think of why you'd want to override the root module name in anything but very exceptional circumstances. It's appalling on principle. Gradle configures the root module's name from the name of *the folder that it's in.* Madness! Chaos! The folder could be called anything! Now, maybe you'll argue that the root module's name doesn't matter anyway. In that case, why does Gradle keep track of it? Why isn't the root module's name the empty string, then, or a constant string? Why does Gradle insert such unnecessary unpredictability into my build process? No. I'll have none of this nonsense. Making my projects' builds repeatable despite their ever-changing build environment is hard enough without the build system inserting more uncontrollable variables like that.
&gt; It's appalling on principle. Gradle configures the root module's name from the name of the folder that it's in. Madness! Chaos! The folder could be called anything! This makes no sense. The vast majority of people are using version control, and if they're not, they should be ASAP. If your environments are rewriting the contents of stuff under version control in unpredictable ways, you have way bigger issues than what build tool to use. Of all the issues I've seen making builds repeatable (and I've seen a great deal), this would be really, really far down the list. &gt;That's why having project configuration written in a programming language is an incredibly stupid idea. If it's just XML (or JSON or YAML or whatever), the build system is not restricted like this. Maven, accordingly, has no such limitation. There's a difference being making something completely static and making it declarative / functional. Maven requires all logic to be hidden in a plugin, even if that logic would be functional / declarative in nature, even if it would be substantially more readable if written out. As a result, you wind up trying to fit square pegs in round holes all over the place. The vast majority of our gradle builds are still declarative; the code executing in the configuration phase is functional. For what it's worth, since switching to gradle, our maintenance burden has gone way down, and builds are far more stable.
Sorry, but the assignment is perfectly clear. &gt;I just feel if he would teach us proper java instead of handing us half of the work, not explaining how it does what it does, and then expecting us to figure out on our own to fill in the blanks, I'd understand this. That's what most people do when they are programming. Tracing through code that somebody else wrote, trying to understand and troubleshoot. - Actually, being able to work like this is one of the most valuable skills. One skill that every programmer needs is to read the Java documentation at Oracle - it is indispensible! As for a good beginner's tutorial on the internet, look at [Java for Complete Beginners at Udemy.com](https://www.udemy.com/java-tutorial) (it's free).
&gt;This makes no sense. The vast majority of people are using version control, and if they're not, they should be ASAP. If your environments are rewriting the contents of stuff under version control in unpredictable ways, you have way bigger issues than what build tool to use. What are you talking about? I'm talking about which folder the project is checked out into, which is independent of version control. &gt;Of all the issues I've seen making builds repeatable (and I've seen a great deal), this would be really, really far down the list. I don't care. It's another variable with potential sneaky side effects, whose value I cannot properly control, and there is no good reason for this to be the case. &gt;Maven requires all logic to be hidden in a plugin, even if that logic would be functional / declarative in nature, even if it would be substantially more readable if written out. Nonsense. Plugin configuration is quite flexible. Look at the `maven-antrun-plugin`, for instance: you can write an Ant build script inside your POM if you really want. But it almost never really is the right thing to do. My experience has been the opposite: Maven plugins often force me to put far *too much* logic in the POM. What would be far better is for Maven's plugin API to not be such crap, so that we could easily write a plugin whenever we need any custom build logic, and keep the POM clean. Unfortunately, all that horrid Plexus garbage makes plugin development a nightmare, especially if you need your plugin to take POM configuration parameters of a type Maven doesn't have built-in support for. On a side note: Maven's command-line syntax sucks. Specifically, the way plugin parameters are passed from the command lineâ€”via *system properties*â€”is terrible. &gt;The vast majority of our gradle builds are still declarative I was having to do some very undeclarative things to set the project name. I imagine there are other fairly-common cases where Gradle's declarative facade breaks down, but I noped out of there before I got a chance to discover them, so I wouldn't know.
Privacy has been a complicated issue throughout JavaScript's history. 
Wrong sub. Post this in /r/javascript Your post has nothing to do with Java.
Consider posting to /r/javascript instead.
But any XML editor will offer auto-completion out-of-the-box when the XSD is available. That is not the case for other DSLs, where you need specialized support in an IDE or text editor. Also, the syntax in XML is basically always the same. Only the identifiers are different.
LGPL is the license. It means you can use it for closed source code.
Saying people are entrenched sounds like a euphemism for calling them Luddites. When proposing a change in a company you have to provide a business value. How is this new approach making us more money than the old one? If many people are familiar with XML, what's the benefit of using something else? Just because it's new doesn't mean it's better. XML is well-known by many people and it has excellent tooling. Any new approach will have to deal with training people (cost), acquiring new tooling (cost) and dealing with issues new technologies usually have (cost). Personally, I think for configuration that needs to change without recompiling everything and/or needs to be maintained by non-programmers XML is a very good fit. I would choose it over JSON any day. 
What's in the variant returned by the Dispatch.invoke()? 
Sorry. I thought you were the one searching for a job.
/u/science_rocks seems to be a automatic bot summarizer and poster 
IntelliJ IDEA has full support for editing of sbt build files. 
&gt;Someone would have to go out of their way to intentionally rename the root folder after cloning Which they are completely entitled to do. Projects breaking as a result of that is an embarrassment. And that still is not an excuse for the fact that Gradle has such a variable. It can only cause problems, and I have enough problems already.
Yeah. Really. Because you really just mean HTML5 right?
He's just a kid living in a microsoft bubble. Give him some slack.
You are calling next token without checking if there _is_ a next token. When there are no more tokens you will get that exception
I'll do it later, currently not much time to write out code. I'll post the code when I have it in a new reply to yours above.
If you highlight text before you hit reply...it quotes it. Maybe that? 
Yes.
Great article. Reactive design patterns are the way forward. I'll definitely be having a mess around with Akka and Java 8. Rx (Reactive Extended) is also quite interesting. I think for Java we have Apache Rx and that is built on top of a Netflix Rx port. https://github.com/Netflix/RxJava https://camel.apache.org/rx.html Now it's just how to convince the business this is better for them. Edit: Also check out Reactive Design Patterns http://manning.com/kuhn/ 
Hi. I'd like to determine complexity especially for this sorting. 
Wouldn't you like to be able to determine complexity for more algorithms? Simply spitting out a complexity for this one would not help you that much would it?
I do not think you understand or maybe I do not understand you. You can use a standard Tomcat and just add the Java EE Jar files to your application just as you would with Spring. If you want CDI just add the weld jar to the application, if you want JSF and the JSF jar. There is no server configuration required.
I completely agree; however, how-to posts (and documentation to an extent) does not mean that you're forced into the XML. Is it sometimes easier to just do XML? Sure. I'm not saying I don't use it now and again, but when you say "XML is easier" just after "ZOMG why does everyone use XML" you're sort of answering your own question. For me, I like to not have any XML so I (usually) spend a little extra time figuring out the configuration classes and just @Bean them. As for the spring docs, so long as you don't google an old version (and btw, kudos for them for keeping old docs online unlike other projects), the @Annotation approach is usually the example given. Again, the spring sub-projects might be different, but I don't necessarily consider those Spring when I talk about Spring.
haha, I get it.
n^2 yes, because the constants like 0.5 get discounted
Sadly I cannot access pastebin from the office. If you put the code directly here along with the error you're getting I may be able to help you past it.
Have you had a look at Vert.x? http://vertx.io/
I'm only trying to demonstrate one of the key differences between Spring and EE. There seems to be a lot more configuration internal to Spring applications in regards to connections, naming, general "wiring", etc, whereas in EE you generally handle much of that on the application server itself (JDBC pools, mail, messaging queues), and so by nature EE applications require less internal configuration, because large portions are managed through the server configuration. I would say Spring is more manual in this regard...not better or worse per se, because it depends on what suits the project, but in spite of the two standards approaching singularity, there are still differences.
import java.util.Scanner; /** * class Dog * @author Michael * @version 4-2-2014 */ public class Dog extends Pet { public Dog(String name, String color, String breed, int weight, int length) { super(name, color, breed, weight, length); } /* public String getName() { return super.getName(); } public String getColor() { return super.getColor(); } public String getBreed() { return super.getBreed(); } public int getWeight() { return super.getWeight(); } public int getLength() { return super.getLength(); } */ public String speak() { return "Woof"; } public String toString() { return "\n\n Name: " + name + ", Color: " + color + ", Breed: " + breed + ", Weight: " + weight + ", Length: " + length + "\n"; } }
http://imgur.com/EG3Mx15 ?
Where do I put Library = lib; ?
It will definitively limit the adoption of your framework. Most of your users will be early adopters and so-called hipsters. You might see this as a drawback, however those are usually the most vocals on the social networks, so it might brings you some visibility if you succeed having them give it a try.
I'm in the process of bringing some reactive patterns, primarily events/messages via actors, to some projects, and I can tell you its pretty hard to get some folks on board. The problem is that it's pretty abstract, which gives it power, but at the same time breaks the brains of people who don't think that way. It's mostly older folks that had their brains washed to only think in terms pf traditional objected oriented hierarchies and synchronous method calls back in the 80s/90s. We need to get kids thinking reactive coming out of school.
Have you ever benchmarked pub/sub/events in vert.x against remote actors? If you ever did I would be interested in the results.
Netflix ported it from .net
You are way over thinking it. I mean? You shouldn't need any more than a couple hours to do this assignment as a student. Make a purse that you can add and subtract coins and bills from with simple user input, then allow the user to save that purse for next time. This will be easy, fast, and you can design it to meet all of your assignment requirements with ease.
Well...That's something I could do previous semester :) We're doing something like this http://kifri.fri.uniza.sk/~bene/vyuka/inf2/zoo.zip it's in slovak so you won't understand text. but maybe you'll get the difficulty level. 
Will take a look thanks. 
LAF didn't work well in swing. But in SWT where the underlying native code is used to render widgets it works quite well. It makes me wonder why they didn't go a route like that. 
I don't know if it makes a difference, but the project isn't a framework, it's a standalone application.
It's a bit hard to read, but the first thing I'd look at is that single '/' character after main is over. My presumption is that it's meant to be the beginning of the comment that ends just before 'speak', so it should probably be '/*' instead. There something similar after the @version annotation, too. Best I can do based on the current format of this. Try putting four spaces in front of each line in the code block here and it will look more like my stuff up above.
Sorry I did not reply sooner, but can you explain how so. What do you develop, what other places do you use java etc. 
I'm the head of R&amp;D at [Data Geekery](http://www.datageekery.com), the company behind [jOOQ](http://www.jooq.org), a product that started out as pure Open Source and has transitioned to a dual-licensing model. We're sticking with Java 6 for about as long as Java 6 is still available from Oracle. And even afterwards, we might check compatibility with the OpenJDK 6. I don't think we should move on with our JDK dependency. Obviously, we have prepared many API parts to be *"Java-8-ready"*, meaning that we have a few SAM types where this makes sense. But if we had a hard dependency on Java 8, our product would have never gotten any adoption. We even opted out from upgrading to Java 7 for the same reasons so far, even if the try-with-resources statement would have saved quite some useless lines of code in our database software. TL;DR: You can write a *"popular"* Java 8 framework (number of GitHub stars) if you do the right marketing. But not a *well-adopted* one (number of productive users) for quite another while. Such is life of framework vendors :-)
Even then. Will your users need to upgrade to the JDK 8 to *run* it? I suspect they will, because you're using the whole Streams API, the new functional interfaces, the extension methods, ForkJoin pools (not available in JDK 6), invokedynamic (not available in JDK 6's JVM), etc. For a complete set of users (*"the enterprise"*), your standalone application will be a no-go for another while. Think of it like saying. Heck, I want to use all those fancy new HTML5 features. True, you can try. But you won't reach those banks or insurance companies that still use IE 8.
XML was in a major hype cycle during the enterprise adoption decade of Java. Since java was compiled and people wanted to make compiled software configurable, you had to use text files to externalize / export config parameters. Properties files weren't enough, JSON wasn't known at the time, and they weren't going to use EDI... XML was hot, so all configuration went into XML. Spring is really a late-binding or DSL in XML for object graph construction. XML, while bloated, was still more concise than ugly java classes. Thus... XML. Since Java tends to produce a lot of classes and has love affairs with Design Pattern based verbose names, the XML became bloated. ... times change ...
You THINK XML has dead simple syntax. In reality it causes a ton of headaches that JSON avoids: - CDATA - For general deserialization, JSON's list and object syntax implicitly indicates that a tag/identifier's data will be a list of objects vs a hashmap/complex subdocument vs a single value - XML namespaces are a disaster - attributes vs tags to store data: this is mixed and matched across XML land - all the URIs, all of which don't actually resolve to real documents when pasted into a browser. XML lends itself to bloated, poorly designed files that are slow to parse and process. 
I understand not moving to 8 but still not moving to 7? Is it just a matter of having too many distributed install environments to manage an upgrade or is there an actual concern about performance/stability/security? We (change.org) use 7u50 something in production for both java (dropwizard) and jruby. The bulk of our infrastructure doesn't actually run java (rails/resque on mri, and node for front end) but we still have a half dozen servers in any environment that run various java services. I'd love to start working in 8 but it's a bit early for that maybe.
C is a good starting point. Then C++. From what I have been told, learn those two and most other OO languages will fall into place quite easily. I taught myself the basics of C 15+ years ago and then never did any programming, when Java came around in college, it was easy to pick up since I remembered most of the basics from C. Learning the OO aspect of Java was no major issue.
If you like the Dropwizard way of things but still like working within the Spring eco-system, checkout Spring Boot.. It makes it dead simple to write an application that packages up with embedded Tomcat or Jetty (my preference being Jetty). Choose Gradle over Maven and there is no XML in site.
First off, since you're storing the songs as Strings, ~~simply checking if the *contains* method on the list returns true or not is not the correct way to do it - you'll need to iterate over each of the String objects in the list and check if they match~~ you can actually just keep using the *contains* method, like so: public boolean validate(String song) { return library.contains(song); } To call the method, all you'd need to do in your case is call the method and pass the *testThis* variable: boolean duplicate = valid.validate(testThis);
Do you have any sort of breakdown of JDK version use in your customer base? It seems like it varies widely by industry. I've done small contracts backporting libraries to Java *1.4* in the last year.
The mean of those two figures would be $30,025.00. Or if you meant subtraction, it would be $-59,950.00.
Start with either Python or [F#](http://www.tryfsharp.org) and do tiny projects. Beyond high school algebra, the math really doesn't come up until you have an intuitive understanding of how to code. After that, Coursera to the max. Learn HTML, HTTP, SQL. Learn TCP if you're into embedded systems, learn JavaScript if you're into web. Go through the books *Structure and Interpretation of Computer Programs*, followed by Van Roy's *Concepts, Techniques and Models of Computer Programming*. This is intro stuff; once you have some skill and experience, look at *Computer Networks* and *Modern Operating Systems* by Tanenbaum. Read *Clean Code* if you want to go on a managerial career path.
That is actually very neat! Thank you very much for your input.
Thanks. I am not in high school, I am older (married et al) and already graduated college .. I just want to learn coding as it would help out with my work/business. I know the basics of HTML/CSS and want to learn more ... maybe go back for a minor in CS. my wife is going to be working extra hours for the next few months, I work from home .. so I have about an extra 4 hours a day + weekends to learn and wanted to know where to start. thanks. when it comes to the language, before I buy any books, what is the basic structure?
The Stefan Krause article provided exactly what I needed to know. Thanks!
&gt;when it comes to the language, before I buy any books, what is the basic structure? Can you elaborate on this?
Of course not, what gave you that impression? Have you actually used backbone or angular?
Because neither of these can be used to create native desktop applications. They're simply JavaScript libraries designed to make HTML less painful.
The context of the language. The basic strucure .. (method, objects, etc). I know the very basics of java and html. In java, the structure is a class, and then methods of that class ... etc.
These kind of questions lead to everyone suggesting their favorite "beginner" language. You said Java, posted in /r/java, and I see no reason to deter you from that. Here is my suggested progression of programming skills/concepts that are mostly language agnostic. **Hello World** - Find a tutorial that teaches you Hello World. This is everyone's^([citation needed]) first program. It gives you a functioning program as a starting point. Learning all the parts of it will come as you work through more things. **Primitives and Variables** - int, long, float, double, char, byte, boolean. I'll throw String in here too, though it's not actually a primitive. **Basic IO** - Console read/write. Maybe file read/write. **Control structures** - if/else, switch/case, loops **Methods** (aka functions) **Classes and Objects** - Primitives' smarter brothers. **Data Structures** - Arrays, Lists, sets, maps, stacks, queues. Learn what's readily available and how and why to use them. **Algorithms** - Sorting, Searching, etc. Learn how they apply to the data structures. Learn what's already available, and maybe attempt to implement popular ones like quick sort, bubble sort, insertion sort, binary search. If at any point, you have an idea that you want to try to create, feel free to ditch the learning order I'm suggesting here and try to determine what you need to know to do it and learn those things. The important part is to try to cover all the areas (and I'm probably forgetting some) and not bore yourself to death before you reach the point that you can make the computer do your bidding. 
Fine, point us to some awesome javaFX native applications or web sites.
Look at F#, structure is half of the fun.
You'd need to frame it in terms of how it would be beneficial for the company. The best sales pitch is showing them how it will save them money - i.e. you'll be x% more productive, so they'll actually be *saving* money after y months.
I'm trying to get that call formulated correctly. It seems to want: &gt;invoke(Dispatch, String, int, Object[], int[]) My dispatch, of course, is oOphirLink, but I don't know what else I need for that call.
This. I had the same issue at my work years ago. I said IDEA is so much faster and better that it would save me 12 minutes a day. 12 X 5 (days a week) = hour. $50 an hour. In a few months it would pay for it self. It was a little cheaper back then, but the math works out the same. 
http://www.ng-newsletter.com/posts/angular-on-mobile.html So, yeah, I can convert my angularjs apps to native.
Its not going to be write once and run anywhere for UI when your developing an application that runs on both mobile and PC even with JavaFX. Desktop users have far more real estate to take advantage of, and interact with the application in a way that's different from mobile. So in the worst case they'd write an SWT like connector for mobile and an SWT like connector for PC and you'd write your UI code twice if your going to both PC and Mobile.
Yes, you'll lose some users, but I hope you go for Java 8. Historically, the java community takes an extremely long time to upgrade which I find highly irritating and a hindrance to java as a platform. If more people migrate faster to new versions of java, it will put more pressure on the slowpokes to upgrade. Don't let other peoples' procrastination control your coding. Java 8 is fun!
Say that you'll pay for the license yourself, but you'd like them to front the cash. That will at least get their attention. Or, offer to go halfway. 
&gt;You THINK XML has dead simple syntax. In reality it causes a ton of headaches that JSON avoids â€¦and avoids a ton of headaches that JSON creates: * No schemas * No namespaces * Only a handful of data types, with no means to create more * The way object types are specified when not implicit is ugly (i.e. with a field named `type` or similar) * No block escape syntax along the lines of `CDATA` (a flaw that the lack of namespaces only makes worse) * Mixed data and text (as in HTML) is ludicrously verbose in JSON * No way to identify what type of object an arbitrary JSON file contains (because there are no namespaces and no `DOCTYPE`-like constructs) There are better data languages and serialization formats than XML. JSON is not one of them. JSON is shit. &gt;CDATA What of it? It's a perfectly good way to escape markup in an entire block. &gt;For general deserialization, JSON's list and object syntax implicitly indicates that a tag/identifier's data will be a list of objects vs a hashmap/complex subdocument vs a single value How is that useful? &gt;XML namespaces are a disaster JSON doesn't even *have* namespaces. &gt;attributes vs tags to store data: this is mixed and matched across XML land Most schemas are very poorly designed, like I said. Doesn't mean they have to be. Attributes should be used for simple types. Child elements should be used for complex types. &gt;all the URIs, all of which don't actually resolve to real documents when pasted into a browser. Why the hell are you pasting random URIs into a browser? &gt;XML lends itself to bloated, poorly designed files JSON, on the other hand, doesn't give you a choice in the matter. JSON is always ugly, instead of merely usually ugly. &gt;XML â€¦ files â€¦ are slow to parse and process. I don't know about "slow", but I will admit that parsing XML is tricky. Scannerless parsers are your friend here.
Easy and clean output in debuggers and loggers, for one. And then if you need to simplistically do a CSV entry in, e.g. JSON or a web form, perhaps
I was well into classes and methods before messing with I/O. Just seems a bit of a strange order there. I'd definitely agree with the rest, though.
If it's a standalone application, can't you simply package it with a jre 8 included? This means you won't depend on any particular java version people may or may not have installed. edit: nevermind, this was already suggested below by BonesJustice.
Is this a library? Then you should stick with Java 7 or even Java 6 since binary compatibility is the same. If this is something else then maybe you could go Java 8.
Properties files are the simplest solution. 
I usually recommend this book to people learning java. I think it has a pretty good order. Some people talk about teaching objects first. While they're important, it's extremely important to understand the fundamental control structures: conditionals, loops, simple method abstractions. Being able to think like that will help you with you work. Once you need to parse a website then you can reach for a html parsing object. http://www.greenteapress.com/thinkapjava/index.html
I think he means .properties files, there's built-in support for it in Java. Take a look at the Properties class. A simple google will show you how to do it. Personally I only use properties files for language files, otherwise I use yml (but only because it's built into Bukkit)
Don't use a database unless you have an existing one (dont connect to the database only for config values) I'd say .properties is good as long as the config isn't too complex. 
Oh good god. Please don't. I am currently working on a major upgrade to a program that was clearly written by one of your kind. Just hire a programmer or go with cots. I am all for you learning for fun purposes, but this basically will amount to those apps that are built by a friends son who knows how to install word.
I... What? The contains method does not check equality with the equals operator. It calls the objects equals method, so he definitely doesn't need to loop through every string in the array list he is supposed to have... I will run to my computer and try to point you in the right direction op.
If you're part of a small company, see if you might qualify for the [startup discount](https://www.jetbrains.com/estore/startup/).
Apache Commons Configuration gives you many options and provides a standard mechanism for using any of them. It's quite nice. http://commons.apache.org/proper/commons-configuration/ 
No, in the worst case (ie, present actual reality case) "they" don't write an SWT connector for mobile and you don't write any UI code at all.
There is just so much wrong here, op. I will base the tips on the code base you currently have. 1) You have never declared or instantiated a "Music" object Music musicLibrary = new Music(); library.loadArray(); 2) Your Music class is clearly supposed to be using an array list List&lt;String&gt; library; 3) You've never done your "loadArray()" body songLibrary = new ArrayList&lt;String&gt;(); songLibrary.add("..."); etc... 4) Your Validator doesn't have a way to store the library private Music library; 5) Your setLibrary(Music lib) needs a body this.library = lib; 6) You've never called set library from main valid.setLibrary(musicLibrary) 7)you've never added the new song to the library library.add(song); 8) Your printArray() method has no body. You are going to have to do this one on your own, sorry bud. 9) You've never called printArray() 10) You never use scanner to get user input ... hey, I have to leave some for you. That will get you well on your way. In fact, other than not fixing your scanner, I've pretty much just finished your assignment for you.
Out of curiosity what (beyond appearance/skin deep pretty things) do you find better? Those might be the justifications for getting it at work and I'm also interested myself. I purchased idea myself a couple months ago, use it every day but honestly haven't found anything compellingly better than eclipse (which I used daily for a couple years prior). Building large projects is quite a bit slower too. Am I missing something major?
Best sources for learning: Books. Then you have an order to follow, problems to solve, references to use. You might want to visit [/r/learnprogramming](http://reddit.com/r/learnprogramming). They have a nice wiki/FAQ for beginners, with book recommendations and all.
You can also use the built-in Preferences API. http://docs.oracle.com/javase/8/docs/api/java/util/prefs/package-summary.html
How about this one: I've learned so much from spending the time reading your code. I've become a vastly better designer by following the your design decisions. As much as using Guava improves my code, I believe that my code is improved even more by this. 
why (or even how) do you learn methods before classes?
I am guessing that's about 1% of the salary of a programmer. Would it increase productivity by more than 1%. If yes, then your boss would be wise to buy it.
When expressing big-O you always throw away the coefficient. So, it's just O(n^2^).
Get everybody to use Maven (or Gradle) and then simply generate the IDE files off the pom. This also gives you a better dependency management and other plugin capability and most importantly, for this topic, the ability to use either IDE.
If it's an app it shouldn't much at all. as others have suggested, just embed the JRE (with the stipulation I have no idea of the legal ramifications of such a move)
I think the uptake on java 8 is going to be considerably faster than it was for 6 or 7. Features like the date stuff are more compelling than other releases on their own merits, but also programming language landscape has evolved and people expect higher productivity syntax. Without streams integration into your api the users may very well choose something that lets them use python comprehensions. 
This is, in my opinion, the best configuration library for Java.
Scala has been a little impenetrable for me, although I'm making strides everyday... not nearly as much experience with SBT as I would like. Groovy was nice in the one (albeit simple) project I used it in.
The syntax of XML is not always the same. Compare a POM file to a a Websphere configuration file. Then take the two of them and throw them against a WSDL. Sure they all have a vaguely regular look and feel, but they aren't "always the same". Also, I'm we're on the Java form... I am completely assuming that the availability of very mature IDE's is a given (Eclipse &amp; IntelliJ). They both have rich plugin ecosystems where coping with DSL's seems like a really normal feature (maybe requiring some minor tweaks). On the other hand, I haven't yet found a good XML editing platform that is free (bonus points for open source). If you know of one please... please suggest it.
&gt;Which they are completely entitled to do. I strongly disagree, especially for publish/release builds (which is the part that would break) that should be done from a fixed environment like a CI server or build container, not joe developer's workstation (and that's true for any build system). This is going in circles, just forget it.
I have had some frustrating experiences with the Eclipse XML editor. It might really be a fault of the Eclipse plugin, but regardless... the tooling was not up to par IMHO. I'm not complaining from a team or project perspective though. I realize that I should put my foot in my mouth and fix it... it's open source after all. I would if I had the time. I'm just commenting on the state of the tooling as of the time I used it.
this sounds interesting... not sure it would fit into what i'm doing but i like to keep abreast of new emerging things going on. is it structured only at web facing things. I am more interested in operating on configuration files at the moment
Maven is incredibly verbose... I cannot imagine a multi module project where the line count is &lt; 1000. I don't believe it... or you are some kind of maven wizard and I would love to see the POM files.
Ignoring the fact that Java forces you to use a class as the entry point into your program, creating methods to avoid duplicating code or to make it more readable is a pretty common task and it's one less thing to learn when diving into classes.
I am very interested in containerless deployments, especially for mostly straightforward web API's. A few things from Java EE that have served me too well however are things like the EJB @Schedule annotation and message driven beans. I've been able to do some pretty sophisticated proof-of-concepts in very little time thanks to those, so I can't abandon the container completely just yet :(.
How many users, how many options for configuration, do you have an existing database......
I understand where it came from historically. I understand things like release cycles for big businesses and all that nonsense. What I truly believe in is that the "configuration" craze for compiled code was a symptom of things before DevOps techniques and virtualization were available. Back then it was a big deal to release code... now (with the right backing infrastructure)... it's trivial to release code once every hour. I think Java's XML craze is over... and now I'm asking the community for what is out there now that is bucking this trend.
There is an existing database. It's an application with technically a "single user", but socket communication comes in from ~40-50 simultaneous satellite programs. There are many configuration options... between... 60-120.
Very cool, even less boilerplate than Spark. http://www.sparkjava.com/
Yeah, it is. http://docs.oracle.com/javafx/2/deployment/deployment_toolkit.htm
So no awesome native apps either?
Nope, native, here's a video for you http://m.youtube.com/watch?v=Apk6Eii06wo And step by step instructions to deploying to the app stores http://docs.phonegap.com/en/edge/guide_platforms_ios_index.md.html Or a slightly older version http://enyojs.com/docs/2.3.0-pre.10/deploying-apps/platform-specific-deployment.html Dufus? How does that add to anything? you seem to be taking this debate too personally.
I respect your opinion, but when I say entrenched I refer more to the sort of double edged sword that I have seen in organizations. They proclaim that in order to succeed they need to innovate, do new things in the marketplace, be unorthodox. Yet they in the end when you propose a solution that is outside their "risk adversity zone" they whimper away and you get stuck with development techniques from the late 90's. I totally agree you need to demonstrate business value by doing something new. But more than often I've encountered people saying they are doing something new while trying to retrofit it into doing things like business as usual. It stifles innovation.
You should be able to add this to your eclipse update sites (hopefully for free, we had Fuse subscriptions to back us up) for the Camel tooling. https://devstudio.jboss.com/updates/7.0/integration-stack/
The licensing doesn't allow that. 
You can also buy a personal license and use it for work. The licensing allows that. When you leave that company you can still use IntelliJ.
This captures the essence of my frustration... there are a lot of comments of all these new novel approaches... yet I have not seen them widely deployed in the field. And whenever I try the newer approaches it is always a lot harder to make work or less well documented than just using the old XML format
Is it too late for a suggestion? How about this for a project. The motor vehicles department in the state of Tamil Nadu in India is switching from an old way of assigning numbers for vehicles to a new way. They used to be of the format AAA-AAA, where the first 3 characters AAA was the area code within Tamil Nadu, for example MSS or MSN. The second three characters can be from AAA to ZZZ. An example of an old number can be MSN-AXB. The new format is changed to this TN-01-9999. Where the first two characters TN are constant. The next two characters represent the area code and can be from 01 to 07. The next three characters can be any number from 0001 to 9999. An example of a new vehicle number can be TN-07-2045 Obviously you can see from the new arrangement that this prevents any body from having vanity plates. But the Indians are a superstitious lot and believe that some numbers bring luck. They believe that any 4 digit number whose digits add up to 9 brings luck. For example the number 3051 -&gt; 3+0+5+1 is 9 and is therefore lucky. They also believe that vehicle number that has more than two 9s in it is also lucky. Thus, 5909 is considered a lucky number. The motor vehicles department has decided to monetize this aspect and sell numbers like these at a premium. Your task is to generate three files. File 1 will be called *Premium_1.txt* which will have a list of all possible vehicle numbers from TN-01-0001 to TN-07-9999 whose 4 digit numbers add up to 9. File 2 will be called *Premium_2.txt* which will have a list of all possible vehicle numbers from TN-01-0001 to TN-07-9999 where the number of times the number 9 appears in the 4 digits is equal to or more than 2. File 3 will be called *Premium_3.txt* which will have a list of all possible vehicle numbers from TN-01-0001 to TN-07-9999 where the number of times the number 9 appears in the 4 digits is equal to or more than 2 AND whose digits add up to 9. Let me know if you have any questions.
I recommend this as well
Because it is actually innovative. The original assertion was: &gt;Spend a bit of time with JavaFX and you'll see some real innovation there. This is the most modern UI toolkit available today I'm a java developer, and a web developer. And I'm not terribly excited by javafx, nor do I see any large amount of innovation. IMHO the real innovation is taking place in web user interface libraries.
Personally I would then go db. But thats my comfort zone. However are the config options universal to all the programs?
I would use JSON first unless there was a particular reason not to. JSON is structured, easy to read by humans and easy to read by machines. For example you can encode a list of values as an array or group a number of related fields together as an object. If your company already has a database you can use that. How do other applications in your company get their configuration? Also if you have a great deal of reference information that can be configured (e.g. per-customer information) that should be in a database. Does your company have tooling for XML configuration files? Are most people in your company comfortable with that? If it is a simple config file (e.g. just db connection settings) Apache Commons configuration is good as mentioned elsewhere All these things are tools. The questions are - which of these tools fits your task (e.g. do you need a structure) and what fits your existing environment?
Neat idea, somewhat similar to scalatra. I disagree about the huge overhead in getting a java service built and deployed though, I've used dropwizard with gradle really successfully, and scale ridiculously simply (horizontally and just in terms of the huge amount of throughput they can handle compared to mri ruby or even node)
emm..algorithm makes iterations that equal n, and in each iteration it makes one comparisons less that in previous one. So in my opinion complexity is n*(n/2). Am I correct?
Your input stream needs to byte read data until there is no more, then assemble the full byte data by byte length and then translate the binary representation into Unicode code points then you will be able to tell the length of the unicode string. Alternatively you can do byte detection, since 1 byte chars will always be ascii 7 2 bytes will be prefixed with 110xxxx, 10xxxx, and keep going. This is all pretty low level stuff though so I'm lost to your specifics.
&gt; Building large projects is quite a bit slower too. Really? I've had the opposite experience. As my project grew larger and larger I couldn't even use Eclipse anymore. It would constantly crash and popup error messages. It literally freezes for 5+ seconds whenever I try to use IntelliSense in combination with JSF. I've had a blast developing with IDEA on the other hand.
I am assuming that non-programmers have to handle these files. And in that case XML just makes more sense. The syntax is always the same. It's always just elements and attributes in a hierarchical structure. If you can read a POM, you can read a WSDL or an Ant build script.
&gt; is it structured only at web facing things No, unlike [jsoup](http://jsoup.org/), which parses HTML (not well-formed XML), [jOOX](https://code.google.com/p/joox) is really a wrapper for the `org.w3c.dom` packages. If you're using XHTML, you can use jOOX to manipulate web facing things, but the main point is to be able to easily operate on DOM XML trees
The code completion in more fluid. Better keyboard shortcuts out of the box. More user-friendly design (daily tips). Better refactoring. Static analysis. Code suggestions. Built-in support for so much (Emmet). And postfix templates blew my tiny mind. As for build times, Play manages that with sbt, so it's not an issue.
This is not right. There is no general way to detect the last character of a string read from a byte stream (e.g., TCP). You need to explicitly send the length of the string before sending the string data, or an explicit end marker like a null byte.
I think that today, Java 7 is a safe bet, as you're just starting. By the time you will get natural traction, Java 6 might be more than EOL :-) And again, as you've said in other branches of this thread, yours is a standalone application, where the JDK dependency is a bit less important than if you were developing a framework / library (jOOQ has been there since 2009 now, thus Java 6)
Oh really? That's a compelling option! I noticed it said that work could not reimburse me for a personal license, so I thought it was a no-no. 
But how do I know if I'm done reading the length? I left the actual excersize of transmission up to the reader. But in general you cannot prepend message length unless you have a fixed width packet format otherwise your length falls into the same issue as your actual data when it's larger than 1 byte or you have a sliding data format. Also InputStream stops on EOF by default
I'd be more concerned with making something useful before letting other people use it - I don't think I've done that without using any ifs and so on. Methods and classes could be after it, but I'd definitely put control structures before I/O. 
We've had only two requests to backport jOOQ to Java 1.5 so far - but we couldn't agree on maintenance terms (i.e. the people in question weren't willing to cover for the costs), so we thought that this isn't good source of revenue so far. We haven't reached out for quantitative feedback yet, that would be a good idea. Or you take the current [ZeroTurnaround survey](https://rebellabs.typeform.com/to/BTGaVf) and wait for results. But I agree with you. I've heard that SAP very actively maintains a commercial Java 1.4 distribution for their customers. I guess that some industries are not willing to upgrade for another while.
They can't reimburse you, but you can likely deduct the price in your taxes.
&gt; But how do I know if I'm done reading the length? Because it's fixed length, or uses a self delimiting encoding.
Did you set the daemon and parallel mode on? Create *gradle.properties* at the same directory with your *build.gradle* and put the following properties inside org.gradle.daemon=true org.gradle.parallel=true org.gradle.parallel.threads=2 org.gradle.jvmargs= -Xms64m -Xmx196m -Dsun.io.useCanonCaches=false -XX:+DoEscapeAnalysis -XX:+UnlockExperimentalVMOptions -XX:+UseG1GC -XX:+UseFastAccessorMethods -XX:+CMSClassUnloadingEnabled -noverify -Xverify:none -XX:+TieredCompilation -da The above properties will run gradle in daemon mode. I've had no experience with tomcat because normally I use gradle jetty plugin. It loads and restarts very fast. 
Gradle 1.6 is a little on the old side. 1.11 is the latest release, bump the wrapper element and run ./gradlew wrapper to update. Use the daemon if you're not already: http://www.gradle.org/docs/current/userguide/gradle_daemon.html
This is cool! Totally useful for Spring developer like me. Anyway, it would be better if it includes a more hipster side of the Spring Framework such as Thymeleaf, Spring Boot, Spring Loaded, etc... 
My mistake. Updated my original answer.
oh please. I am not going to *waste* $20 an hour to hire some kid out of college to do *un*sophisticated work that I can start doing on my own in 6 months. I am in the finance/investing (economic analysis) world ... all programs I/We hire or math wizards who write algorithm. I just need to be able to write a basic program(s) for input the information, like a calculator ... The 'equations' that I will be using is what I pay money for, not the object .. 
Thank you so much.
If you look at http://www.jetbrains.com/idea/buy/license-matrix.jsp you'll see that you can do the same stuff with a personal license as with a commercial one. The difference is in who pays and who gets to keep the license.
The link to http://http.jcabi.com/ in the article is wrong "http://http.jcabi.com/" 
Thanks for that. It might be the easiest way. Plus, I don't have to convince my *next* employer to buy it as well!
i dont have experience with this but since no one else is answering, i'll show what i found. the content itself should be easy enough using two panels and gridbaglayout. for the look and feel i found the oracle tutorial using swing which should at least show you what specific components you need help with. [that can be found here](http://docs.oracle.com/javase/tutorial/uiswing/lookandfeel/) i hope this helps!
May I ask you what kind of requirements were not met with other existing libraries (and which libraries you did investigate)?
In a similar spirit, I quite like this one: http://kevinsawicki.github.io/http-request/
I found that the [jasmin user guide](http://jasmin.sourceforge.net/guide.html) is short but workable - I used it to create some tests to fuzz a byte code transformator. Note that Java bytecode is not quite machine code (unless you usually work with stack machines). Think of it as machine code for a stack machine with additional named memory compartments (fields, locals, etc.) and strange opcodes for calling stuff. But let me ask the question: Why do you want to learn Jasmin? It's quite outdated and misses some important additions to the class file format in the last few java versions. If you want to be close to the metal but stay current, you may want to look at [ASM](http://asm.ow2.org/), which as of version 5 supports all Java 1.8 features.
Late, but also a suggestion: Look over at /r/ProgrammingPrompts there are plenty of suggestions.
How cordova works: http://ishanaba.com/blog/tag/how-cordova-works/ It deploys a webkit browser with your application in it. Not native. But anyway why are we having this discussion? I thought I said apples and oranges way back. You seem to think Angular is the greatest thing and it would be if it weren't for the fact that you have to develop using JavaScript.
You seem to be confused. This is deploying as a plugin - like an applet which no one does anymore - and has no relation to a normal HTML5 web application.
Yes. It's a built in feature of Java so you won't have any external dependencies. Here are some examples: https://stackoverflow.com/questions/6248495/how-to-read-a-properties-file-in-java 
By user input, I didn't necessarily mean giving it to someone else. More often than not, the user is the programmer when learning or even writing pet-projects. The way I looked at it. The natural starting point is Hello World. Usually step two is to make it say "Hello, &lt;name&gt;". I didn't see it as a large step to add the use of console input to read in the name. It's possible to skip IO, with the exception of console output, and learn everything else on that list because IO is more of a tool rather than a core subject. File IO is a bit premature at that point. I tacked it on and said maybe File IO mostly because it's generally pretty similar to console IO.
 I start the role in about a month so what can I do or where should I start to prepare myself.
If you want to do a lot of interface customization, I would suggest looking in to JavaFX. It has CSS support for every control in the interface an lets you do pretty much whatever you want. You can even use swing components in a special frame inside it if you need to. I'm pretty sure Oracle is trying to get some traction behind it as a swing replacement too. And for good reason!
Ooh, then can we have guava-jdk5, guava-jdk6, guava-jdk7, and guava-jdk8? Edit: I realize the AMA is long over. Just wanted to comment nonetheless.
Have you looked at JQuery theme roller. They have default themes that are close to your image and you can also create your own. http://jqueryui.com/themeroller/ Not sure what frameworks you are using. If you are using JSF than just download a PrimeFaces theme and be done with it. Even if you are not you may be able to grab one and use the CSS and images as a starting point. http://www.primefaces.org/themes 
That article is barely comprehensible
I'm guessing: * Fluency * Testability * XML and JSON out of the box * Immutable All nice features! Thanks for more choice!
So are you. What's the point?
JAX-RS client API isn't bad and can be used easily outside of Java EE.
With the huge push for better documentation on the Spring.io website, there is a ginormous lack of middle-ground examples. Every project has a crappy "Quick Start" (build a REST service you can't use), or *The Reference Guide* (fantastically in-depth, but jesus, can't I just see how to *build something useful*). The creator/maintainer of Spring By Example needs an award. Getting started with Spring is STILL no easy task.
That script looks pretty vanilla. I'd suggest running a profiler against Gradle.
Wow, what a great opportunity! I would focus on learning some basics of Java or SQL separately. JDeveloper is just the tool to help write this so I wouldn't necessarily focus on learning how to use that (disclosure: I am a developer on JDeveloper itself) as you'll be able to pick that up during your training. If you know a bit about the basics of databases then SQL will be easier to learn. A month isn't a long time, but as they've offered to train you then I wouldn't be too worried. Perhaps spend some time clearing other things in your life out of the way so that when your training starts you can focus on it with less distractions. Have a look on YouTube for some guides to databases, SQL and Java. Have fun and don't stress out. Sounds like you're on the start of a great journey.
All of these features are available in other libraries. That's why I'm asking more precisions...
Did you try Jersey Client or JAX-RS client API?
Fluent APIs and Java go together like peanut butter and null pointers.
Really? You're saying that if you buy the license directly if won't be allowed?
It's not allowed to buy a personal license and then have a company reimburse you. 
Can someone explain the aliasing part? The comment is confusing because it uses the word in the definition and the diagram looks more like multiple references to the same object instead of some alias functionality. Aside from that, I'd say Exception and Collection class diagrams are the most useful ones that aren't easy to just know. 
My go to technology for this is JAXB. Lars Vogel has a decent tutorial on [Vollega JAXB tutorial] (http://www.vogella.com/tutorials/JAXB/article.html) (among a million other Java tutorials). He is missing the step I would have shown, that is the way to setup your xml/schema file. The schema file helps produce the model object (in Vogel's tutorial, the Book class). Build yourself a solid schema file [example] (http://www.w3schools.com/schema/schema_example.asp). You can validate your XML file using the schema (in the schema you can set bounds for your values, data types, enums, etc.) With a schema file and an XML file (the data), you can use the "xjc" command (found in the JDK1.X.X_XX/bin directory, Windows or *nix). The xjc command generates the model data (as stated before). That you can drop right into your project and use. I'd recommend using an IDE like Eclipse, and using ANT. It's another neat tool that will help you produce executable jar files. It's the makefile of Java. Its a very powerful tool. You can do a ton with it. I mention it, because I use it to run the xjc command and since it is in my IDE it automatically puts the generated data model classes in the right part of my project. Every time I update the schema, I build that target (a word you'll be familiar with using ANT) and my data models are updated.
&gt; Historically, the java community takes an extremely long time to upgrade Can confirm, still use Java 6 at work. 
Thank you!
Great list!
I'm still working on my undergrad degree, so I could be missing the point. It seems like he wants arrays to do something that they aren't designed to do. System.out.println( list ); // -&gt; [foo, bar] System.out.println( array ); // -&gt; [Ljava.lang.String;@6f548414 Anyone who has successfully completed a beginning programming course would know that using an array's default `toString` method gives the ~~memory address~~ hash code (thanks /u/pgris!) . As such, the Arrays class provides a way to print the contents of the array without the user explicitly iterating over all of the elements: System.out.println( list ); // -&gt; [foo, bar] System.out.println( array ); // -&gt; [Ljava.lang.String;@6f548414 System.out.println( Arrays.toString(array) ); // -&gt; [foo, bar] In that same block, he says: &gt;By using an array, you define where the data is stored in memory. By using a Collection, you define what users can do with the data. It feels like he's shooting himself in the foot with that comment. Arrays are not supposed to be a data structure that comes with a ton of bells of whistles. If that's what you're looking for, you just use a different data structure to suit your needs. If I need a data structure that works based on FIFO queuing, I *could* use two stacks by popping one stack onto another, accessing the "bottom" element, then popping the second stack back onto the first. Or I could save everyone a headache and use a queue. Use the appropriate tools for the appropriate jobs, yes?
But array has the best performance. How do I know: I wrote tons of matrix algebra code at work.
Yeah, example 5, *Java synchronization*, is totally useless for understanding without any further explanation of analogy.
&gt; Anyone who has successfully completed a beginning programming course would know that using an array's default toString method gives the memory address As far as I know, this is wrong. It shows the hashcode, that may be the memory address, but maybe not.
That's for implementation. For the interface, use something other than an array.
To elaborate a bit further on this, once the garbage collector runs, the object isn't guaranteed to be at the same memory address anymore, but the hashcode is going to remain the same.
You're right. I thought something was off about that statement. It is the hash code.
Yes, and because array is a low-level data structure than other collection data types.
https://github.com/FasterXML/jackson Jackson is a suite of data-processing tools for Java (and JVM platform), including the flagship JSON parsing and generation library, as well as additional modules to process data encoded in Avro, CBOR, CSV, Smile, XML or YAML (and list of supported format is still growing!) Just follow the tutorial and you will get it.
1. Don't you mean musicLibrary.loadArray ? 2. I'm not sure what you mean. It is using an array? 3. Was saving that bit for later, I just want to test out to see if the user's input can be found in the array or not for now, trying to do one thing at a time so I don't get too ahead of myself... 5. I have no idea what this means haha. Point me in the right direction, like a youtube video or something? 7-10. Was going to work on that later, just trying to test the input with the pre-loaded array for now. Thank you so much for your detailed response! I truly appreciate your help.
Pop quiz: seeing only the diagram, could one determine the title of the section? Maybe with 3 and 6. 1 doesn't demonstrate immutability, just a variable being assigned a new object. I think 2 is trying to hint at a hashtable? But it has nothing to do with the contract between hashCode() and equals(). 4 becomes more clear *without* the diagram: Collection is an interface, Collections is a class of static utility methods for Collection instances. 5 is so useless that it inspired me to write up all this sourness. I would argue that 7 does not represent what it claims. 8 is incomplete and fairly useless to developers anyway. A diagram of the Java's heap/gc strategies would be better, but those are just a google away anyway. This really feels like it was written by a student with an infirm grasp of Java concepts. I hate to be so negative, but I dislike even more that this half-information-half-confusion mess is now findable on the internet by Java novices wanting to learn. 
I'd note that you don't *have* to use Object[] as the generic type - you can use another class, including your own. I would recommend this if you have a lot of parameters, too, as it can be tidier. Here is an example: http://pastebin.com/cZp4uJk8
ArrayList?
Point taken, but I don't really think Java is comparable to HTML. As for Python 3, it was intentionally designed to be incompatible with previous versions. This is not the standard the java community wants to set for itself.
This is a bit convoluted. Just try storing those pixels in the image in a collection instead of an array and see what happens!
Something I have found in the field is that people who uses JDeveloper are often trained in a "wizard oriented style". I have found people with more than 3 years of experience in ADF with no idea on how to do obvious JSF stuff (but they were masters in drag-and-drop), and I have seen people modeling with BPEL who is incapable of reading a hello-world bpel-ws source and figure out what it does (but they loved color boxes). When they had to develop something that wasn't in the script the trainer gave them, they were SOL. In practice, you only use JDeveloper if you intend to work with Oracle propietary technology. So the advice I wish I had when I was in your position is: Please give some time to understand the underlying technology in what you are doing, because it really makes the hard stuff much easier. Other than that, mean people in the internet will tell you that JDeveloper and eclipse are terrible and you really should be using netbeans or even better, intellij idea. Everybody is entitled to an opinion, but you can disregard this one, it's just one of those internet holy wars.
This is perhaps a bit odd. But in my mind Arrays have come to mean "an integer indexed data structure, that doesn't change size" and I use it to convey that meaning. I suppose it would be better to create a ConstantSizedList interface or some such, that doesn't have any add methods, etc..
On the contrary they have variable size 
OK, but wouldn't you code a grid based board game using arrays? (e.g. Battleship) What about a text adventure game. Wouldn't all of the rooms be in a one dimensional array?
I'm already using the daemon, it doesn't make much of a difference with tomcatRunWar. Upgrading to 1.11 didn't have any noticeable effect on speed, it's still slow.
In other news, I have spent nearly five hours trying to get `reloadable` to work properly with `gradle tomcatRun` but it would not work for me. I ran into issue after issue (`Illegal class loader binding error` and `java.lang.LinkageError: loader constraint violation: loader (instance of org/apache/catalina/loader/WebappClassLoader) previously initiated loading for a different type with name "javax/servlet/ServletContext"`).
Board games: there's some interesting things you can do by keeping them as arrays, so I agree definitely on that one. However, I've written a couple text based adventure games. The ability to treat them as links, allows you to do some interesting things with what is "next door" to a room, and I guess it depends on what you want to do.
Oh, jeez! That's J2EE numbers. Yikes!
Bitmap is not a (java.util.)Collection class and looks to be backed by a native array or Buffer that is array based. https://android.googlesource.com/platform/frameworks/base.git/+/master/graphics/java/android/graphics/Bitmap.java
is there something like this for java desktop applications it sounds like this is something for web applications only.
You should put your Reddit name on your resume.
In Raleigh, NC, You can get a job 60k/yr with a BS and around 70k/yr with a MS. GPA will matter a little, but mainly just keep you being filtered out by HR. Once you get an interview, GPA matters much less.
75 in Seattle, unless it's at one of the big CS companies then it's 90+ Don't let anyone fool you, GPA opens doors and boosts resumes I got my BS, and am working on my masters while working 
Don't stop school until your masters is done, or it'll be hard to start back up. 
Oops. For some reason I read array lists
Y u no collection? 
Good advice. Thanks!
with http://www.jython.org/
http://courses.cs.vt.edu/~cs1204/XML/htmlVxml.html
Every impl. extends java.util.AbstractList anyway (List is just a nicer name ;-P)
&gt; The first "reason" is a bit backwards. If you have the data in an array already, just returning that array will be the fastest option. Not if you want to protect it against outside modification. &gt; Of course, you may want to use a unmodifiable wrapper anyway (or at least a JSR308 @ReadOnly annotation). Or even better keep the array to yourself and provide getters that take an integer index. There is no such thing as an unmodifiable array in Java, so if your interface declares an array you must do a defensive copy. "Keeping the array to yourself" is exactly what the writer is saying to do. Read the title, "avoid arrays in Java interfaces".
But it doesn't expose those arrays to the interface, because doing so while preserving immutability is expensive. This is the point OP is making, not "never use arrays, even internally".
Yes, but they should be encapsulated in a better interface, like List, Table, or a custom one that does exactly what you need.
http://www.h2database.com/html/changelog.html
 ReentrantWaitingRoomLock
I was thinking of accessing the room by array index. e.g. if you're in room 4 and you go north, it connects to room 12. It might be better to use a unique name (ie key) for each room. Then you could use a list or something and just search for the key. Eg. going north from "kitchen" puts you in "hallway1"
Sorry, I don't understand. Can you elaborate w.r.t. a board game?
Odd, I had massively improved performance in 1.7+. Try profiling the build: http://www.gradle.org/docs/current/userguide/tutorial_gradle_command_line.html#sec:profiling_build
Wtf is this and why should I care?
exactly, Can the op please elaborate ?
I get what you're saying, and that makes sense in a grid layout. But if you use links instead, north doesn't always have to be truly north. One example is a central courtyard surrounded by rooms. There may be 3 rooms which "north" is that courtyard, and simply setting the node's "north" link to the courtyard is easier than attempting to compute whether it's within the bounds of the courtyard. Additionally, this makes it much easier to make rooms which have dead-ends, but aren't the furthest in their direction. There's some fun to be had by treating the rooms as a list (or at the very least, a collection of nodes). Names can be useful in both cases, though.
H2 is an all java in memory database similar to HSQL. It's very useful for unit testing (or just locally testing your app) in that you can have it imitate different DB vendor types like SQL Server, Oracle, MySQL, etc. So you can test your application or database calls against it instead of actually having to connect to a real instance. I don't work on H2, I do however use it at work for testing.
I responded to a comment below describing what H2 is
Both of your examples could use a List instead of an array. For your battle ship example you can use a List&lt;List&lt;*&gt;&gt;. Why do you think it would be better to use an array?
&gt;&gt; Of course, you may want to use a unmodifiable wrapper anyway (or at least a JSR308 @ReadOnly annotation). Or even better keep the array to yourself and provide getters that take an integer index. &gt;There is no such thing as an unmodifiable array in Java, so if your interface declares an array you must do a defensive copy. [...] Since Java 1.8 you can declare an array as @ReadOnly. So you'd declare e.g. int @ReadOnly [] myFunction(...); Checkers can then validate correct usage. Of course, that won't keep malicious users who don't run checkers from changing the array contents. But at least you can state the intent
Collection is a subset that List expands upon with more specifics. Set and List and Queue are supersets of Collection. List is ordered, Set has unique entries. Collection and Set are not the equivalent of String[] in this way whereas List is.
Not sure I get this.. the Eclipse XML editor is the best one I've seen: tree navigation, xml syntax errors shown at right place, schema support (both validation and auto-complete), multiline commenting, reformat, collapsable trees, and even movable trees. I honestly not sure what else you want! ;)
So every editor will need to support every sdl. The idea of xml is to have the syntax sorted and worry about the tree structure instead. If I make my own sdl I have to build/compose/configure my own parsers and rules, e.g. for escaping and nesting.
Normal while or do-while loop would be less code and more readable..... unless there's a potential usage I'm not seeing. 
The source could use some documentation and cleaning up. When you try to squeeze so many declarations and methods onto one line, it makes it a bit difficult to see what's going on in some places. 
Apparently I can just use [`Runnable`](http://docs.oracle.com/javase/7/docs/api/java/lang/Runnable.html). This solves my problem, although I dislike that it has connotations of concurrency, since I'd be using it for non-concurrent APIs. ...and yes I answered my own question. This way if someone else gives a better answer it can get better visibility than me grafting my answer into my question. :D
Agreed, the title implies these are beginner concepts but IMO there are much more important ones to focus on. I've been coding java almost exclusively for 15 years and have rarely if ever run into an aliasing issue, for example.
I believe that there is a way, but only if the web page is the one that launched the applet. You can interact with the java applet via JavaScript calls to the HTML object element that is responsible for launching the applet. This may be a place to get started: http://docs.oracle.com/javase/tutorial/deployment/applet/invokingAppletMethodsFromJavaScript.html Best of luck
Documentation is indeed truly missing. I'll try to complete as much as I can in the next days.
Basically, when you get down to just sublists of length one, start with the first two, and put the smaller item first. Repeat until you're left with only sublists of length one or two. At this point, because those sublists are sorted, you need to combine those together, until you have only one list remaining. Basically, given two sublists, you need to counters, your position in list one and you position in list two. While they're both smaller than the list they're looking at, determine which of the two current indexes contains the smaller item. Take that item, and stick it into a new sublist, and increment the counter for the list it was in. When one of the counters becomes bigger than the list it's looking at, you can just shove the remaining items from the other list into your new list. When both counters are bigger than the lists they're looking at, you're done with that iteration. Does that make sense?
I think this is the best option here. Going with the Runnable, I really think the maintenance options down the road lead to some confusion, but it's very clear with your own function interface.
You may prefer to avoid Web calls to make it a lot easier to debug. 
Just thought it was neat that the software is a few kilobytes (300) bigger than the user guide. Bottom of the users guide is a little blurb about contributing. There is a in PDF link to a feature request list. Sadly, it *DOES NOT* work. I did manage to find the [road map] (http://www.h2database.com/html/roadmap.html). Maybe I'll take a look and help out.
Totally agree with most of what... and i'm not typing out that username... said, they are spot on. One exception I have though is that scaling is a valid concern for very, very few sites. It's definitely good to be aware of, but unless the exercise is purely academic, you can generally (for the most part...not getting into db transactions and concurrency issues) just ignore it. The servlet 3.0 spec, and most modern java app servers/servlet containers support async requests now a days (iirc with simple annotations even). While there's certainly nothing wrong with mixing technologies, you might prefer to stay all java while learning.
That's what I have been doing, but I've already done it in a few places. I figured, ideally, there would be a JDK interface, so it will be more obvious to users that all the interface wants is a callback function. The Consumer and Supplier interfaces are a good set of general purpose interfaces; I wish there was one that took no arguments and had no return type.
Well, for now I agree, but I have a feeling that if Runnable is the only interface in the JDK with a no argument `void` method, that it'll start becoming more popular outside of threads.
Yes this is much clearer than how my professor/textbook explained it. Thank you very much!
It looks nice and all, but you really had not time to write a single line explaining what it is, how it works and why we should use it? If you posted it here I assume it is with the expectation that others will use it, so I wonder if you think people should read the entirety of the code base to learn how to do so. Also fungsi.org seems to be a parked domain, do you own it? It is usually recommended to use something you control as root package name.
&gt; Anyone who has successfully completed a beginning programming course would know that using an array's default toString method gives the memory address hash code (thanks /u/pgris!) And having it return the `hashCode()` is probably useful a grand total of 0.003% of the time. In my own experience it has been useful 0% of the time, where having it list the contents would've been much more useful. The point is it's a poor default, whereas the collections classes have much friendlier defaults. &gt; If I need a data structure that works based on FIFO queuing, I could use two stacks by popping one stack onto another, accessing the "bottom" element, then popping the second stack back onto the first. Or I could save everyone a headache and use a queue. This comment is essentially, "I could use [convoluted implementation] or I could use [abstract interface where the reader assumes a simpler implementation]." Which illustrates the point of this article. By having an array in the return type of an interface, you impose harsh constraints on classes that implement that method (namely, they *must* return a chunk of RAM with the interesting data. If the interesting data is large, this will be bad. If the interesting data is frequently changing size, it is probably not efficient to store it as a continuous array, so you will need to perform a probably wasteful conversion). Using an interface instead of a primitive array type will allow the method to choose the best implementation behind that interface, while keeping the users of the method blind to what the actual implementation is. This concept is 'encapsulation' and is fundamental to controlling complexity, which becomes more and more crucial as the program size increases.
Thank you, I'm sorry for my vagueness. I'm just on a tight time schedule and thought someone in here might be able to help. I'll try your suggestions and go from there
Just run the profiler against a build.
If you're really going after the equivalent structure won't iterables be more accurate to a set. The whole point of the blog post was that (array)list is not equivalent to an array. It's better. 
Actually, I'm just a french junior student studying software programming. fungsi is one of my toy project and I like to share what I'm doing with others. I'm just seeking feed-back from experienced programmers, not any kind of spread. Having that said, I don't have enough money to own a domain.
Yea i had a look at that already. Unfortunately they are not on the same page or process :(
&gt; The servlet 3.0 spec, and most modern java app servers/servlet containers support async requests now a days (iirc with simple annotations even). While there's certainly nothing wrong with mixing technologies, you might prefer to stay all java while learning. Thanks for the clarification... I thought that was the case but haven't worked with it in Java land so I wasn't positive. And I agree 100% that the scaling issues are almost purely academic, but that's the fun of side projects!
You could register a protocol in the OS.
because the board is a 2 dimensional grid with fixed dimensions exactly like a 2D array. Why complicate things ? It's a direct correlation and can be visualised easily. I'm sure that someone could write it directly in assembly language, but there a reason why we don't normally do that.
I'm not sure iterability is the defining feature of sets. Uniqueness of its members is probably its defining characteristic, and it builds on hashmap to do this. LinkedHashSet has an insertion order guarantee, btw. 
&gt;The most notable change is a fix for LANG-992: NumberUtils#isNumber() returns false for "0.0", "0.4790", et al - a bug that was introduced in 3.3.1. Well that's embarrassing. Looks like some tests were added : &gt; @Test public void testLANG992() { compareIsNumberWithCreateNumber("0.0", true); compareIsNumberWithCreateNumber("0.4790", true); }
What's a SDL? SBT build files are standard Scala files, no need for any special editor support. 
What kind of exceptions?
Well, there's two kinds of exceptions you need to handle, depending on how your app works. 1) If the runtime exception renders your app inoperable, you should in fact, crash and be off. Like say your app needs an index to be in a file location and it's not there. 2) Silly things like index out of bounds exceptions. Ways to predict? Hard to say, good coding prevents lots of these. But as is the nature of software, it happens and when it does you'll likely say "wtf that shouldn't happen". In some cases, with developer experience, you will surround obvious places of danger with try catch blocks, and some sort of recovery code like trying again, displaying nice error, flagging &amp; logging it. It's always the non-obvious bugs and it's hard to predict and I'm not sure there is a way. Static code analysis might be able to provide some hints, but you can probably predict most of those. Like, any resource I/O is obvious. But array out of bounds are usually not cause people usually think they write the code in a safe way.
If the app had been launched from the same page, yes. Otherwise though the java app is running as a full application separate from the browser. You can have the link call a javascript function to put a java applet on the page, which normally has restrictions on it that would make it difficult to do what you want. However, if you sign an applet it will have additional permissions. Perhaps allowing you to open a socket or launch an application (this would have most of the same steps to the protocol idea except actually registering the protocol). So to do the launch an application idea what you would need to do is launch java.exe with the parameters to select your jar or classfile and the information you want to pass to it. Then inside your program you need to catch the parameters passed to it and then pass it to the instance that is already running. To do the socket idea (I assume it will let you if its signed but haven't tried). You have to set up a socket on your application that will listen for input. Then the applet will write the information to pass to it.
Simply catching all unhandeled runtime exceptions provides a false sense of security. Typically the handlers don't do anything useful and only serve to hide bugs. Catch Throwable is frowned on for a reason. So what you're really asking is "how do I prevent bugs?" Unexpected exceptions are simply a symptom of some kinds of bugs. And the main approaches to prevent them are to adopt coding practices that reduce the risk of bugs, and do a lot of testing. There are no silver bullets here.
Not blogspam. Thanks for the post. 
It's fine to not have a domain, but at least put a brief description in your README as to what the projects goal is and how to use it. A lot of people would love to give you feedback, but if you don't even provide them a basic "Hello, this is what this does and this is how to use it" they aren't even going to bother cloning your repo. EDIT: Also, as far as not owning the domain. Rename your package, like urquan said fungsi.org is taken so you shouldn't be using that as a package name. Since you have a github account com.github.blackrush.fungsi would be an appropriate package name.
the [] indicate it is a JSON Array, not a JSON Object. In that case it is simply a list of values.
&gt; Hence System.out.println( Arrays.toString(array) );. &gt; The point is it's a poor default, whereas the collections classes have much friendlier defaults. I am very familiar with the `Arrays` library. It doesn't change the fact that primitive arrays have several inconveniences, of which one is the poor default `toString()`. &gt; But isn't that the point of choosing the correct structure for the job? I understand that using the collections framework will give you much more flexibility, but if it is not needed, then why bother? This is not really a case of "correct structure for the job." An interface is not a structure (unless you're talking about a Java language structure, where I'm talking about a data structure). The whole point of an interface is it isn't concrete. An interface *hides* the structure. If your interface has a method returning a primitive array, it will *leak* structure. You should avoid using primitive arrays in interfaces because it defeats the point of using interfaces, which is to shield clients from your implementation, and give you flexibility and room to optimize or vary your implementation. &gt; using the collections framework will likely be the better solution Keep in mind the real point here is *an interface* instead of *a primitive array.* The collections framework is used because it happens to be a nice pre-built set of interfaces that are fit to replace these types of data structures. &gt; If and only if you are working with a fixed size data set of primitives, arrays would be the better choice over an ArrayList. It still takes much more criteria to establish that a primitive array is the best solution to your problem. The size of your data and the ways in which you use your data can still cause a primitive array to eventually become a hindrance, and if your interfaces all specify primitive arrays, it's going to be painful to change all occurrences in your code, whereas an interface would allow you to change it transparently. Perhaps there is some rare corner case where using anything but a primitive array in your interface will cause too much overhead. But you'd have to be working on some well profiled and performance critical code to **revert** to using a primitive array. Any other interface using a primitive array I would consider either premature optimization or simply poor programming style. Also, if your program is extremely small so the cost of switching your type signature is trivial, then perhaps the choice between an array primitive and an interface that shields your storage choice is moot. In that case, ...well, do whatever you like, I suppose
God, I hate these stupid homework questions. 
How do you iterate through an array? How do you compare 2 strings? You probably want a while loop rather than a for loop.
random suggestion, could AOP (aspectj) help?
Um, I know how to iterate through an array: It would be something like: for (String g: grades){ System.out.println(g); }
Uh no. You definitely want a for loop. I mean, even before you could for each on an array, you wanted a for loop here.
/r/javahelp How are you not done this. I basically did the entire "hard" part for you in an older post... This isn't even hard, man. Pay attention in class.
I am haha, actually had tutoring today with the teacher so I'm getting there. =) My program is coming along quite well just have a hiccup here and there.
I found it really hard to follow the code in this article. Luckily the text does a good job of explaining what the code does, so I barely needed to follow it.
pretty easy :) use an enhanced for loop and check to see if you find that string for (String currString : songLibrary) { if (currString.equals(combinedName) { //do whatever you want to do //perhaps return currString; } } 
1) , yes I did mean that. I was trying to make the name different everywhere to avoid scope confusion for you and I forgot to rename one. Sorry. 2)An arraylist and an array are not the same thing. 3) just do it now 4) because of the way you designed the class, your validator needs a reference to the library in order to validate that the song is not already there. Fix those first.
Refer to the other post. You still need to switch out that array for an arraylist. They aren't the same thing and an arraylist fits the requirements better.
My teacher actually told me specifically to use array, she said to only use arraylist only when I don't know how many indexes the array will hold?
So, you have a string, g, for the current element. Compare that to the string you are checking. 
I hope I'm not coming across as petulant but I have my reasoning for the while loop as follows. We are doing a linear search, we want to be able to stop when we have found the string, or at least so I would assume. int index = 0; bool found = false; while (index &lt; songLibrary.length &amp;&amp; !found){ if (songLibrary[index++].equals(combinedName)){ found = true; //whatever else it is you want to do with the string } } 
Guava Throwables also has things to help with these kinds of problems. https://code.google.com/p/guava-libraries/wiki/ThrowablesExplained
Thanks! I just had to realize it's actually two arrays, one with 1 element containing the other. /* Parse the outer array first, this will get rid of the outer set of []'s Basically, get the 0th element of the array returned in order to get the array with the actual data. */ JsonArray outerArray = new JsonParser().parse(response).getAsJsonArray(); JsonArray elementArray = outerArray.get(0).getAsJsonArray(); /* elementArray should now be parsable using 0-based array addressing. We need the 5th element for coin difficulty. */ Double diff = elementArray.get(4).getAsDouble(); // Returns difficulty
What language is used for program 1 and 3?
Part of the point of the article is that Java Collections have advantages to arrays. Maybe you aren't making an interface and exposing the arrays that you use for your board, but List's still have advantages over arrays. For example the stream api? &gt;I'm sure that someone could write it directly in assembly language, but there a reason why we don't normally do that. That doesn't help your argument at all. Nothing that you replied with suggests why arrays are better than lists for this instance.
Deserializing objects that any old user from the web sends you may not be the best security situation. That said, if you had to do this, I could think of two ways to catch the undeclared exception, either an instanceof check within a general catch(Exception) block, or adding a wrapper function that declares the ClassNotFoundException. The latter solution will result in a warning, I think, that the exception is never thrown, but it should still compile. So, either try { doSomethingThatMightCrash(); } catch(final Exception ex) { if(ex instanceof ClassNotFoundException) { handleCNFE(ex); } else { throw ex; } } Or void doSomethingWapper() throws ClassNotFoundException { doSomethingThatMightCrash(); } void main() { try { doSomethingWapper() } catch(final ClassNotFoundException ex) { handleCNFE(ex); } }
I'm not sure what you're researching here, but the survey seems very strange. The programs do the same thing, but achieve them using different algorithms. The second uses a list of numbers and a nondescript `operation`, while the first performs the calculation in a far more straightforward manner. The fourth uses an inline swap and some sort of `flag`, while the third, again, performs the calculation much simpler.
*we want to be able to stop when we have found the string* That is really ugly! Just write a method, *return true* if there is a match *return false* after the loop. public bool contains(List&lt;String&gt; hayStack, String needle) { for (String hay: hayStack) if (hay.equals(needle)) return true; return false; } Add curly braces if that's your style :). Exercise for the topic starter: change this into *int indexOf(...)*. Even if you wanted to use your style, I think this is still better: bool found = false; for (int i = 0; i &lt; songLibrary.length &amp;&amp; !found; ++i) if (songLibrary[i].equals(combinedName)){ found = true; //whatever else it is you want to do with the string } } It's more idiomatic and you don't have to find loop logic (the index increment) in the body. Of course, the even better answer is to use the *contains* method as defined in the *Collection* interface.
Why is that a problem? The signature of #doFilter does not declare a ClassNotFoundException. So this is not an error by the compiler. It is the programmer who did not get the concept. [That's the correct solution.](http://www.reddit.com/r/java/comments/22wdbb/how_to_catch_a_classnotfoundexception/cgr4e2a)
Handling a lot of exceptions may be a sign of defensive programming and that never leads to good quality. Maybe you should look into having clearer contracts between the modules of your system and expect those to be followed. Try to use exceptions for IO, and find ways to avoid needing them as much as possible ( by avoiding reflection, casts, etc ).
To me, this looks like an attempt at making java look bad, by comparing good code of some other language to some bad java code.
Doesn't the commercial features flags cost like 5000 USD per CPU, which is over 10x more than YourKit, which is licensed per simultaneous developer?
Check out the unit tests, but I agree about the readme example being useful.
The Runnable interface has been around since JDK1.0 and people haven't started using it outside of threads. Such use would be explicitly against the intention stated in the javadocs: "The Runnable interface should be implemented by any class whose instances are intended to be executed by a thread." And therefore using it would be non-idiomatic and confusing. The best approach here is to define your own functional interface with the form that you want, or use one defined in a library like org.apache.commons.functor.Procedure.
Read up on Joda-Time and the new ``java.time`` package in Java 8. Don't touch the old Calendar or Date classes.
&gt; Doesn't the commercial features flags cost like 5000 USD per CPU That is indeed the listed price, for use in production. (Though it is likely that you will be able to negotiate a price, it will certainly remain expensive.) Note that Mission Control is free to use before production, for example during development, testing, qualification, load tests, etc.
I'm curious, it appears that you are manipulating a DOM tree structure and keeping everything in an XML format. I also use XML quite a bit as well, but only as a representation of data for persistence or transmission. I prefer to work with Java objects so I generally transform between XML and Java (using tools like XStream) which would allow me to simply add a new Account object to the list. I can see where your approach would be better suited to working with an XML document that you don't have an object model to support, but I haven't found that to happen very often. What are some of the use cases where you've found this approach to be a better approach?
I assume 'Data Structures' will cover Generics. Some extras you will want at some point: * Exceptions * Concurrency * Annotations * Libraries * Build and Dependency Management * Javadoc * Testing Some areas you might be interested in (order not important) * Database Access (JDBC) * Graphics (JavaFX/Swing/AWT) * Networking (java.io / nio) Here's a few tutorials: * https://en.wikibooks.org/wiki/Java_Programming/Topics * http://docs.oracle.com/javase/tutorial/ (Trails Covering the Basics)
But who would make their development and testing environments purposefully different than production in such a way that reconciling them later would mean costs realistically in hundreds of thousands, when there is no need to? You'd really need some sort of an agenda which doesn't have anything to do with your customer's or employer's.
Why wouldn't you reconcile the environments by going back to running non-prod without the commercial flags after you're done profiling? 
Thanks for the input! Very helpful.
Makes sense. Thanks a lot.
I realise title is kind of misleading, I meant drawing/repainting, not loading.
There is nothing to it, they can drop all the required files into the resources folder and you can do everything in Ember. Then they should just have to expose a simple rest api for you to call. That is it. The changes on the Java side are going to be that it will do no HTML generation using JSP's or whatever framework you currently use. It can be stripped away to just expose an API. You might want to have a look here to see how to use SpringSecurity wtih Angular JS and it should be the same for Ember. https://github.com/philipsorst/angular-rest-springsecurity
Use opengl with [lwjgl](http://lwjgl.org/)
Yeup. This blog is addressing the symptom, not the actual problem.
everything I've read about GSON and Jackson want the class's instance variables to be named the same as the key. In this instance, there is no key. 
Use a profiler and see for sure where the memory and cpu time is being spent. 
Sorry if this is not the correct place for posts like this but you don't have to be an ass about it. 
Ill have a look at that. Thanks!
Thanks this points me in the right direction.
Yeah, but this saves you the hassle of having to get the current system time, writing your timeout logic, and your looping logic, and then having to unit test that logic. Now the logic is nice, clean, easy to use, and it always works the way you expect it to work out of the box. No need to write the while loop + timeout logic. Not as much room for error now. Now you only need to know the method names, and the timeout, and of course the concept of interfaces and anonymous inner classes. Simplified.
I don't see how I would be able to use the concurrent package to continuously execute 1 void method followed by 1 boolean method until the boolean method returns what I am waiting for it to return or the timeout has been reached. I would love to learn though if you can provide me with an example I will love you for ever.
There's a couple of ways to do this. Think about what operation youre performing on the closed set? I presume you a) put an element in and b) ask if an element is in. What would be a better choice than a list for this datastructure? Try replacing it first and testing, before you use something exotic. Another way is to mark the nodes themselves. I used a 16bit counter on the node itself. Each search incremented a global value. If a node was less than the current value then it was open, otherwise closed. Every 64k searches I would iterate over all nodes and set them to 1. 
You could put a method in the Calculations class like so: public class Calculations { public boolean isValueGreaterThan1(int value){ if(value &gt; 1){ return true; }else{ return false; } } } Then, in your program, you can pass a value like this. public class SomeClass{ public void someMethod(){ // If its not static, you might need to "new" it (create a new instance of the class) Calculations calcs = new Calculations(); // Now you can use the calcs class to do something // Here you are passing 3 to the calcs class if(calcs.isValueGreaterThan1(3)){ System.out.println("The value was greater than 1"); }else{ System.out.println("The value was not greater than 1"); } } } If the isValueGreaterThan1 method in the Calculations class was static (public static boolean isValueGreaterThan1), then you wouldn't have to create a new instance of Calculations before calling the isValueGreaterThan1 method, you would only need to say "Calculations.isValueGreaterThan1(3)". 
Are you allowed to start at n=1 and calculate all of the fibonacci sequence up until the starting point? If so, that is easy, if not, then you are probably in for a real headache. A simple formula is n = n *_-1_* + n *_-2_* , but that assumes that you know what n-1 and n-2 are.
Do you have examples for more deeply nested XML files?
Cull your render calls. That's the cause of the performance drop. Render only visible entities. I've written an isometric engine over java2d and it performs fine. Cache your bufferedimages with soft references and don't duplicate their existence in memory. Two tiles using a.PNG should only cause one PNG to be loaded into memory.
Is this satire? Are you having a laugh?
I've done lots of networking for an isometric game engine written in java, but there's no way I'm going to read this sea of code. Focus down the issue and present it more cleanly.
Sorry about that here is where I think the problem is coming from class Tank implements Ball { double locX, locY, radius, angle; int self; // index of this tank in WarPanel.tanks public boolean turnL, turnR, forth, back, fire; boolean prevtL, prevtR, prevfo; Color color; Image image; public static final double twoPi = Math.PI * 2.0; public static final double turnRate = Math.PI / 8; public static final double speed = 4.0; public static final int RELOAD = 8; // delay between bullets int count; // timer for reloading public static final int MAXBULLETS = 7; // max simultaneous shots Bullet bullets[] = new Bullet[MAXBULLETS]; AffineTransform saveAT; // place to hold current affine transform public Tank(double x, double y, double a, int index, Image im){ locX = x; locY = y; angle = a; self = index; image = im; radius = 22; // create bullets for this tank for (int i = 0; i &lt; bullets.length; i++) bullets[i] = new Bullet(self); } public double getX() { return locX; } public double getY() { return locY; } public double getRadius() { return radius; } public boolean isAlive() { return true; } void update(Boolean local) { if (turnL) turnLeft(turnRate); if (turnR) turnRight(turnRate); if (forth){ moveForward(); // Check for rocks if (WarPanel.hitAnItem(this, WarPanel.rocks) &gt;= 0) backUp(); } if (local){ if (turnL != prevtL){ WarPanel.send("turnL "+turnL+" "+locX+" "+locY+" "+angle); prevtL = turnL; } if (turnR != prevtR){ WarPanel.send("turnR "+turnR+" "+locX+" "+locY+" "+angle); prevtR = turnR; } if (forth != prevfo){ WarPanel.send("forth "+forth+" "+locX+" "+locY+" "+angle); prevfo = forth; } } if (fire){ fireBullet(); } // Update all of our bullets for (Bullet b: bullets) b.update(); } public void processMove(String s){ // Update movement parameters based on s Scanner sc = new Scanner(s); // Get the flag change String command = sc.next(); boolean value = sc.nextBoolean(); if (command.equals("turnL")) turnL = value; else if (command.equals("turnR")) turnR = value; else if (command.equals("forth")) forth = value; else System.out.println("Unexpected move: "+command); // then unpack position update locX = sc.nextDouble(); locY = sc.nextDouble(); angle = sc.nextDouble(); } void paint(Graphics g){ // Use the affine transform feature in Graphics2D // to easily rotate the tank's image. Graphics2D g2 = (Graphics2D)g; saveAT = g2.getTransform(); g2.translate(locX, locY); g2.rotate(angle); g2.drawImage(image, (int)(-radius), (int)(-radius), null); // Reset the transform (this is important) g2.setTransform(saveAT); // Then draw bullets for (Bullet b: bullets) b.paint(g2); } void fireBullet(){ // If it has been long enough since the last shot... count--; if (count &gt; 0) return; // ...and if all the bullets aren't currently in use... int slot = getAvailableBullet(); if (slot &lt; 0) return; // ...then launch a new bullet bullets[slot].setLocation(locX, locY); bullets[slot].setDirection(angle); bullets[slot].reset(); // Reset the timer count = RELOAD; } int getAvailableBullet(){ for (int i = 0; i &lt; bullets.length; i++) if (!bullets[i].isAlive()) return i; return -1; } void turnRight(double a){ angle += a; if (angle &gt; twoPi) angle -= twoPi; } void turnLeft(double a){ angle -= a; if (angle &lt; 0.0) angle += twoPi; } void moveForward(){ locX += speed*Math.cos(angle); locY += speed*Math.sin(angle); } void backUp(){ locX -= speed*Math.cos(angle); locY -= speed*Math.sin(angle); } }
When I get one of these I just do a 'clean and build' on my project and that fixes it.
Well, to be fair, it was a **random** suggestion.
Could catch and handle that exception using AOP? Not entirely sure it's practical or can be done for this case, but AOP is a good tool to consider when things like this pop up. [Something along this vein perhaps?](http://stackoverflow.com/questions/10947933/aop-exception-handling)
Do you know what a "array index out of bounds" error means? Did you google it?
In general (95% of the time), I find that these issues are down to firewall rules. I always check the firewall side of things first, but you might also want to look at network/routing issues and ensuring that MySQL really is listening on 3306. A couple of things to try.. From your own machine, try and telnet into the server on that port, e.g. `telnet fdb7.runhosting.com 3306` If you get a `connection refused` here, it's most likely going to be a firewall issue. If you have ssh access to the server, connect to it, and make sure you have something listening on 3306, e.g. `netstat -an | grep :3306` If you get an entry back you've got something listening on the port. You should also check your MySQL config to make sure that it is MySQL that is listening on this port.
Yes it means that it's trying to reach an index that doesn't exist in the array.
I think it's a firewall issue. I tried using the telnet command, I got this: Connecting To fdb7.runhosting.com...Could not open connection to the host, on port 3306: Connect failed Not sure if the fact it says "connect failed" and not "connect refused" makes a difference though. I am using a university connection right now on my laptop. Is this issue fixable and any advice on how I would go about fixing it?
Okay I fixed it by making a separate for loop for the newLibrary when it prints, yay!
What's that for?
Connection failed/refused can be down to a whole range of things. I would start by checking the following: * Server is up and running * MySQL is running * MySQL is configured to use port 3306 * Something is listening on 3306 (see netstat) * Firewall rules allow connections on 3306 It's probably worth contacting runhosting as they probably have access check to check more stuff than you can. You may need to open a ticket with them, if so, you may as well do this now just to get the ball rolling (unless your plan limits the no. of tickets you can raise). As a long shot, it may be worth trying this from a non-uni network in case something funky is going on with the network side of things. Is this a plain-vanilla configuration that you've got from runhosting, e.g. have you made any tweaks to it yourself, or do they expect you to do some of the configuration?
Debunking? WTF.
What? People still are using WebLogic?
Would the problem be that Im not painting the fired bullets to the warpanel?
It gives the ability to post code to share. Its almost what imgur.com for pics is, that is for code. Like this: [test] (http://pastebin.com/8YphQ82G) 
Just curious, what are some better alternatives? 
People that have passed the Java Certification Exam, can you kind of do an AMA. My questions: 1. Was it tough? 2. How much did you study for it? 3. How many times did it take you to pass it? 4. Do you have a professional job using Java? 5. If yes to 4, was it before you passed, after? 6. If in 5 you said after, did it help you get the job? 7. If in 5 you said no, is it helping you in your current job? 8. If yes in 7, how is it helping you? Ok out of control with question. Maybe I should make my own post with this(?)
1. No, but I test very well 2. I had 6 years of experience at the time. Read the course material casually over the month prior to the test. 3. Passed SCJP 6.0 the first time 4. Yes 5. when I took it and currently 6. I think it may have helped get my future jobs 7. It also helped marginally in my job at the time. 8. Coupling/cohesion really gets drilled into you as well as odd cases you don't usually use, like asserts. I'd also add that you should consider the follow up practical certifications.
why ?
Because it's an epically shitty blog post. You're either an idiot or a marketing shill, and I was wondering which.
I too am *very* curious. (on Weblogic for close to 15+ years now)
Answers 1. It depends on the course you chose . Basic courses are bit easier when compared to advanced courses . 2. Approximately 3 to 4 moths . 3. With proper preparation , you can pass in first attempt . 4. No , I don't have a professional job using Java . But around 15 friends of mine have a professional job in good MNCs using Java . 5. Not Applicable for me . But for friend after passing . ( Got their first job after passing it ) 6. Yes 7. - 8. -
I've been a professional Java Software Engineer since 2002 (went to school for comp sci in 1991). I have thought about getting certified, but never thought it would be useful, except to say that I am certified. I didn't realize how many different categories there are for these certifications. The certification even include 3 previous versions of Java (maybe they are phasing out Java 5 SE certification since they released Java 8). Why do you recommend the practical certifications. For my money, I would think those are the actual tests I would want to take. I do wish they were more meaningful in our profession (they don't really seemed to be talked about at the 2 companies I have worked for). 
Thanks for the information. I am a 10 year veteran of software engineering in Java. I thought many times about taking them, but never thought they would get me salary, "better" job/position. So with your answers, I feel like I'll keep thinking the same way and pay no attention to them. That's too bad, seems like a solid way to qualify a good engineer from a great engineer.
why don't you have a professional job in Java? Were you just taking the certs for fun?
&gt;Why do you recommend the practical certifications. It's probably just my personal preference. It's just a bare indication of solo ability with the tech in play. The practical answer is that almost everyone I've worked with has their own side projects/github history which is just as good IMO 
Sadly, the JCSE tests a little higher than fizzbuzz level of programming skill. I don't know any certs that are worth a damn.
I post contents about Free online courses in the [http://www.freeitonlinecourses.com/] (http://www.freeitonlinecourses.com/) . Here you can find plenty of free online courses on various topic . I thought this article would be useful so made it .
WebLogic user, reporting in. Beats WebSphere.
Every one of those bullet points seem to be in check...MySQL is running on my computer on port 3306. The server is working. I've made firewall rules that allow inbound and outbound connections on port 3306. I've tried on my home network and still did not get it to connect. I used netstat and did not see an entry for &lt;my_IP&gt;:3306, is that a problem? Also, using telnet, is there a website I should be able to connect to to make sure it's not just connecting to runhosting that's the problem (e.g. Telnet&gt; open www.facebook.com; though this did not work either)? I guess the next step would be opening up a ticket with runhosting, but I feel like it's something related to my computer or firewall.
It's part of the spamming scheme, check the comment history of /u/jero25.
First I'll specify that I passed the OCJP for Java 6 in October of 2012. 1. After grueling preparations, it was actually a lot easier than I thought it would be, but only because of the preparations. 2. For about 2 months, while balancing job responsibilities as well. Prior to this, I had only significant school experience in C, C++, and Assembly. I actually had a pretty strict road map for myself. I first read through the SCJP 6 book once in its entirety, without doing any of the included tests or quizes. I then read through this book: http://www.amazon.com/SCJP-Certified-Programmer-Platform-CX-310-065/dp/0470417978/ref=sr_1_5?ie=UTF8&amp;qid=1397451532&amp;sr=8-5&amp;keywords=ocjp+6 which actually does a pretty good job of breaking the subjects down for you in a way that assumes you have no experience(the book does have some glaring errors though), and I took all of the included quizes, for better or worse. I then made another pass through the SCJP 6 book, this time taking the quizzes, highlighting, and going over in depth anything that I missed. I started a sample java project on this pass through the book, and actually programmed anything that I had problems with, until I had a full understanding, especially threads. When I was finished, and satisfied I had learned enough, I then started taking the java 6 quizzes at whizlabs. They are actually quite harder than the actual test. At the end of each one, they give you a detailed breakdown of what you missed, and I would study each of those. I never retook a single quiz, and I saw a steady improvement in my grades, up to the point where I was consitently in the 80s. I then as a final test, took the tests in the following book: http://www.amazon.com/Java-Programmer-Practice-Exams-310-065-ebook/dp/B004C44KIS/ref=sr_1_2?ie=UTF8&amp;qid=1397451922&amp;sr=8-2&amp;keywords=ocjp+6 . They are much, much harder than the actual test, and other than the first test, which was super easy, the rest I was making between 60 and 75. I pretty much knew I was ready and scheduled the test. I finished in about an hour and a half, with an 85. 3. First time 4. Yes, I am a software developer that mostly uses Java 6 or 7, depending on the project. 5. Taking the test was actually a requirement upon being hired, I had to pass it within 6 months, with the company paying for the first attempt, and if any more were needed you had to pay for it out of your own pocket. 6. See above, I still currently work at that same job. 7. It does help, in teaching you the tools you need to be a good developer. I wouldn't be half the developer I am now if I didn't have those tools. However, knowing these tools does not make you a good developer, as the test has nothing to do with problem solving or actual coding solutions. 8. Googling can get you out of most situations, but if you really know what you can do with java, you can spend your time designing good solutions, as opposed to searching for how to do the basics. I would say I've retained quite a bit, though a lot of what you learn may go to the wayside depending on what kind of projects you work on. One topic that sticks out that I learned, and that comes up quite often in my work is Hashmaps. They are such an efficient solution to so many problems, that you can kind of go overboard with them, sometimes using them where domain objects would be more appropriate. I absolutely love them. 
Certification: [Java SE 7 Programmer 1, 1Z0-803](http://education.oracle.com/pls/web_prod-plq-dad/db_pages.getpage?page_id=458&amp;get_params=p_track_id:JSE7Prog) (November 2013) 1. A little (for me :) ) 2. I started long before the exam, but spent a weekend to properly go through the material, cross-referencing JLS7. 3. 1 4. Yes 5. Before 6. - 7. Yes 8. It made me focus on the smaller things that I did not pay attention to in the past. I am more confident in making changes because my understanding improved a lot. (Based on the knowledge required for the exam, not the exam itself as pointed out by others before me).
To confirm, you did check all of those points on the server, not your laptop, yeah? For some of those points, you'd need ssh access to the server (netstat). So, when you say you made a firewall rule, did you mean that you logged into the server and added a rule to iptables? Or, did you mean you added a rule to Windows firewall or some other software on your laptop? If you have a local firewall, I would suggest that you completely disable it during your tests. To test telnet, you can try it against any web site, e.g. `telnet google.com 80` or `telnet facebook.com 80` When you say that you did a netstat, again, did you do this on the server? You should expect to see one or more lines returned that say "LISTEN". I would urge you to speak with runhosting, as I suspect that you may not have access to perform some of these tests.
Sorry - I said Dispatch.invoke(), but looking back at your code you're using Dispatch.call() (which will call invoke for you after getting the required information via getIdsOfNames()). What's in the variant returned by Dispatch.call()?
Can you share your Bank source code?
You're right that when you have a mapping from XML to Java Xembly won't be needed. But I experience many situations where I'm not interested in parsing and understanding the entire XML. All I need is to add some data to an existing file. Another example is a simple building of an XML document. Instead of making a Java class for it (or a number of them) and polluting my code base, I just build the XML with Xembly, in a few lines of code. Much more compact.
The reason it prints bob dylan twice is because when you try to add a new song you are instead adding an already existing song. newLibrary[index] = candidate should be newLibrary[i++] = combinedName Even after making that correction, your method of checking if a song already exists will not behave as you intend and needs to be rewritten. The current way the else is written defeats the purpose of the search. You can do without the else clause and when it does find a song set a boolean to true (boolean define outside the loop) and break and after the loop if the boolean is false then add the song as written above otherwise print the Sorry statement. You want to add the song to an unused position meaning you will need to keep track of the current position to add to in the array which I did here by using i. i++ is the same as i=i+1 except the increment happens after the statement it is contained in is executed. You may want to consider adding an extra loop to check if an entered song is already in newLibrary before adding the song if you feel like nitpicking. As for adding the desired number of songs, you already put most of the music adding code in the Music class so just let the totalSongs calculation be in loadSongs instead of Main and that way you can easily add a loop to your loadSongs code. One other problem that needs to be taken into consideration is if you try to add a number of songs greater than the size of newLibrary, which is solvable by using a list instead and rewriting some of the code.
1. *Was it tough?* Meh, average. 2. *How much did you study for it?* Had a few months working experience, studied every other day, read stuff on JavaRanch and the fat book, do the tests in on the examples CD. 3. *How many times did it take you to pass it?* First time, I think my passing grade was 80, or 85% 4. *Do you have a professional job using Java?* See 2, yes for a few months. 5. *If yes to 4, was it before you passed, after?* I got a job in may, worked with ejb 2.1, JSPs and GWT, whatever normal Java things, took the test in October and passed, while still working normally, then passed the test and continued like nothing happened. 6... 7. No its not helping find new jobs. 
This is the pull method, assuming that's what you meant. The list 'allnames' is just a String list that contains the reference names of the images, and it connects to the 'all' list (which is a list of BufferedImages) through indexes, because the name and the image are added to their respective lists at the same point, making their indexes the same. public static BufferedImage pull(String s){ for(int i = 0; i &lt; allnames.size(); ++i){ if(allnames.get(i).equalsIgnoreCase(s))return all.get(i); if(allnames.get(i).equalsIgnoreCase(s+".png"))return all.get(i); } System.out.println("Could not find image "+s+" (Even when we added .png to check!)"); return Bank.error; } I've also included my addImage method here: public static void addImage(String s){ all.add((BufferedImage)Filestream.getImageFromPath(s+".png")); allnames.add(s); } Filestream is another class that has 'getImageFromPath(string)' which just loads an image as a resource and returns it. Here is the code for that: public static Image getImageFromPath(String s) { try { return ImageIO.read(Filestream.class.getResource(s)); } catch (IOException e) { System.out.println("Image file not found @ "+s); } return null; }
Use the [Reddit API](http://www.reddit.com/dev/api) instead to get the links as JSON e.g: http://www.reddit.com/r/java/new.json Then use [Jackson](http://jackson.codehaus.org/) or [Gson](https://code.google.com/p/google-gson/) to extract the links.
Interesting, thanks. But I'm curious. What were the reasons to build your own storage solution instead of using an existing one?
I wonder why Lock doesn't have a few defaults to permit this, or even implement AutoClosable. Be aware that in most of the examples given that the lambda results in an object create per execution (I think... but why if the only side effect is on "this") In order to craft an idiomatic / clean looking synch which doesn't allocate I would recommend something like: lock.exec(this,(it)-&gt;{it.increment()}) Tho I might need to look at the memory implications of: lock.exec(this::increment) EDIT: the instance method reference allocates a NEW lambda every time it is assigned!
same. granted, i think our company has a "if it ain't broke don't fix it" mentality, but i still have only had good experiences with Weblogic.
I took the SCJP 5 exam in 2007, so things have undoubtedly changed: 1. not tough after studying 2. probably about 40 hours total, made lots of little note cards 3. passed the first time 4. yes 5. yes 6. N/A 7. not really 8. N/A To elaborate, I learned some stuff about generics and threading that I might not have studied otherwise, but at this point in my career it isn't helping anymore. And for what it's worth, when I was looking for a new job in 2010 (still had my old job, wanted to move states), I didn't even put on my resume that I had the certification, didn't want to be seen as one of those "certification guys" who just seems to know things on paper.
Part of what /u/tRfalcore is talking about is "Doing the Right Thing" or "Law of Least Surprises." Writing software is--in some ways--very much like writing for business. You have to think about your audience (who will use the software) and their level of understanding and ability. In some cases, you want to handle errors (like the missing index mentioned above) by recognizing and fixing the problem. In other cases, the best thing to do is fail (in an obvious manner.) In any case: the best approach is to take appropriate steps (based on requirements, resources, your patience, etc.) to limit unexpected behavior when unexpected states are reached. This is more about planning and software development than pressing buttons.
How do you know &gt; professional java development is underpaid, grunt work Have you been employed as a Java Programmer? Also it is your opinion, so I guess if you *say* they are underpaid, than that is going to always be true. How much underpaid do you think? The trouble I am seeing is, a supervisor suggested that I don't get raises so that when its time to make cuts they don't see me as a "threat" to the budget. Gee, sounds like a good excuse not to pay me more.
&gt; didn't want to be seen as one of those "certification guys" who just seems to know things on paper. I am going to take the initiative and start making a portfolio. Seems like all the cool engineers are doing it.
I'm not saying what I did was right or wrong, or smart or stupid, but it was a choice I made three years after I took the cert and I ended up getting a job, so I don't want to make it sound like I'm big-headed or anything for not including it. Maybe at the time I was though.
Wait... I am saying I actually agree with you not including it. I was reading a blog (by the guy that runs Stack Overflow) and he was perplexed when he gets an interviewee and they haven't a single piece of code to present. He says its great to be able to write adjectives and the such to describe your past work, but show me the code. What have you done, sort to say.
Yeah, I know you were agreeing, but I also wanted to put a footnote in there, haha, sorry.
If you take it slow and read, the test isn't too bad. If you are like me and tend to not look at the whole question, the test is a total bitch.
12c R1 integrated with EBS, can't go into a lot of detail beyond that. :-/
It is an operational management problem, but I work in a large enterprisey environment and the new java 8 features are inticing us to skip java 7 and go straight from 6 to 8 
Why not use Hazelcast/OrientDB/MapDB/... what advantages does Ganesha has? And BTW: why should I use a GPLed project ;) ?
http://codingbat.com/ and http://www.spoj.com/ This sites were recommended to me for the same reason. I've been too lazy to try them though. :(
Why are you holding your game state in the thread? The game state only changes when someone makes a move so that is all you need to keep track of for each "game". You want to accept requests to make a move with a player ID and a game id, and the move, and return either success or failure in the case of an illegal move. Are you using socket connections or is this running on an Http server? Basically you want to accept a move, retrieve the appropriate game state from a hash table and, assuming everything is kosher, change the game state to reflect that move return to the caller. You'll also want to notify the other player that the move has been made and that it's their turn.
Even though the other answers here are better, and [you really shouldn't parse html with regex](https://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags/1732454#1732454), I'll throw in a quick and dirty regex solution. Mostly because I enjoy regex. String html = "some html string"; Pattern p = Pattern.compile("href=\"(http.*?)\""); Matcher m = p.matcher(html); while(m.find()){ System.out.println(m.group(1)); }
&gt; A buffered image still attempts to be loaded into dedicated memory Only if the acceleration hint is set from what I could find and I could not find its default value for BufferedImage. &gt; It tries a few times The 1.5 release notes (all I could find on it) had the check slightly reverse to what you say - it will only try after several iterations of non accelerated rendering. Depending on how the images are used this may be suboptimal. &gt; What you describe was how buffered images used to work a couple years ago. Couldn't find anything stating that the BufferedImage would use an optimal representation for drawing so the createCompatibleImage may still be relevant. Since I could find barely anything beyond the original release notes and the less than complete documentation on it any concrete information would be nice. 
SPOJ is fun for challenging yourself, but definitely not a learning site for beginners. SPOJ is all about algorithmic challenges.
Same submission again? Was the other thread not good enough?
Is that why OP is open sourcing it, possibly?
That's 12.1.1 right? That one still had an amount of bugs in it. 12.1.2 was definitely more polished.
I initially tried Cassandra and used it for a year or so with DrawCast. Unfortunately, I experienced issues with heavy load spiking, tried unsuccessfully to update Cassandra, and then decided to abandon it. In late 2012 I searched for another NoSQL DB to transfer the existing data to. I decided on RIAK and nearly went with it except for a couple of shortcomings: it didn't balance data across servers of different storage capacities, and it didn't provide a way for inserting into sorted lists. 
It seems pretty obvious to me that this is a key-value store with some convenience methods for generating lists and other simple structures.
I'll be the first to admit that I'm not an expert on the current NoSQL field as I've been focused on Ganesha for the last year and a half. Hazelcast looks to be an in-memory database. Ganesha is at its core a persistent DB with data written to physical storage. I created the in-memory features of Ganesha when I realized that News Feed functionality was very demanding (one share with 10k followers would mean 10k+ writes) and could be moved in-memory without too much sacrifice. In comparison to other robust NoSQL DBs, Ganesha has an extremely compact code base. It's fairly easy to get your head around how things are actually working, and because it uses no external libraries you can see everything. As this is my first open source project, the license stuff is a bit of drag. Is there some negative connotation attached to GPL projects? 
That may well be. What would be the features required to classify it as an Object or Document oriented DB?
http://projecteuler.net/problems is really good for problem solving skills. Admittedly it's not java specific but it's a good start 
2 part b: &gt; You must cause any work that you distribute or publish, that in whole or in part contains or is derived from the Program or any part thereof, to be licensed as a whole at no charge to all third parties under the terms of this License. All derived work must use the same license. Only GLP licensed programs can use your program.
Thank you! 
Once you become more experienced you should check out /r/dailyProgrammer. It has many different small apps you can attempt
i like the clean api for byte buffer storage, but i don't like how the object storage works. object definition looks clumsy,, much of it could be handled throu annotations. Expecially limiting is the need to extend a base class (i don't know if it's indeed mandatory or not, but looks like it form the sources). But the basic byte storage looks super easy. I have a couple of questions: * can i put a list into another list, actually creating a tree? * can i specify a key myself instead of having it autoassigned? (also, some more specific key such as a string?) Thanks!
I see that all over their documentation.
In other words: no commercial use.
I would suggest reading the documentation for the `writeUTF` method: &gt; Writes a string to the specified DataOutput using modified UTF-8 encoding in a machine-independent manner. &gt; First, two bytes are written to out as if by the writeShort method giving the number of bytes to follow. This value is the number of bytes actually written out, not the length of the string. Following the length, each character of the string is output, in sequence, using the modified UTF-8 encoding for the character. If no exception is thrown, the counter written is incremented by the total number of bytes written to the output stream. This will be at least two plus the length of str, and at most two plus thrice the length of str.
Thanks for checking out the code! Can you explain a bit regarding annotations to make the object/attributes mechanism cleaner? As it stands, extending the base class is necessary to allow direct attribute referencing such as: int age = user.getInt( User.age ) Yes, you can build trees. Lists are composed of long ids (or strings), so the list can be a list of anything (objects, byte arrays, or other lists). Internally, lists are represented as byte arrays and referenced like anything else by a long id. Yes, you can create objects referenced by a specific string. Named objects employ a workspace/table/name mechanism to generate a unique key. Objects are added to the DB using the Ganesha.addObject call. Check "OBJECTS ACCESSED BY A NAME-BASED KEY" in the README for more details.
www.talentbuddy.co
This is why I use NetBeans.
I just started using JSON myself, and I really like org.json API for dealing with them. I'm using JSON to store Book data in an inventory system that retrieves data from Google's Books API.
Thanks for replying. the main thing I am worried about is how to get the adverts on because i have start some of the YouTube tutorials but i can't not find how to add them when i have finished the game or program. I have sign up to Admob by Google and still can not find anything. 
They must've hired some Emacs developers.
I don't know dagger at all, but Spring provides all of the features that you say you like about dagger (annotation-based entity configuration, JPA support - works with QueryDSL too). I write server-side software so I may be totally wrong here, but Spring Boot seems like it might be a nice fit to get a GUI app up and running with dependency injection and JPA support.
/r/ProgrammerHumor 
/r/softwaregore 
Hi there, I work in corporate IT project teams, but not as a java developer. I find that developers generally within these environments have a very significant amount of structure around their day to day coding activities... this limits their freedom to explore a coding domain. Project teams have little regard for code quality, only functional quality and coverage. Once, a junior developer on another team implemented a bunch of features and enhancements into the product he was developing. It was all fantastic, useful stuff. But what was the reaction of the organisation when they found out? Well he was terminated, and all the code he had checked in was painstakingly removed. Admittedly, he was working on a financial application that had federal regulatory requirements. But that organisation effectively punished passion, drive and creativity; and terminated arguably their brightest developer. In terms of pay-scale, I find that java developers compete heavily with offshore resources. Organisations unfortunately tend to rank their pay-scales on managerial loftiness, and don't care or measure technical ability. I know this isn't as true in smaller organisations...but java developers aren't generally as well paid as low level managers.
You can't just google them? Are they even related to Java?
Why aren't you using maven/gradle/ant/etc? Why would I choose a commercial ide when there are striving communities developing _free_ open sourced ides? 
GFY
I wouldn't bother with Swing, unless it's still on the certification exam and you're going for that. Most Java development is done either on the server-side -- J2EE -- or Android. Swing is mostly a relic. A book I would recommend is "Effective Java 2nd Edition" by Joshua Bloch. 
Wow thanks for the gold!! I feel so special now.
because Eclipse is the biggest piece of shit software ever to be shat upon by the ass of man?
You're writing Java. Java is not *free*. I use IntelliJ because I like it. I don't give two shits if an IDE is *free* if it is atrocious, bloated, and full of so many glaring inconsistencies and oversights that it's almost unusable.
Apache is free/open enough for you? http://www.jetbrains.org/display/IJOS/Download
This. I was a diehard Eclipse fan for a decade. This year I finally took the plunge and got an IntelliJ Ultimate license. Haven't looked back.
You should probably clarify that you meant "Apache 2 license".
Thanks, I'll check it out! :)
You use NetBeans because the most oddest key combination to convert an Eclipse project to intellij project? I think the IDE you like and use and are comfortable with is great, but don't say you like this or that IDE because the other 2 are having a pissing match.
Given 2 separate maven projects A and B, where B depends on A, is it possible to set up an intellij environment such that changes made to A are seen by B without having to install A first?
JIRA
Love the idea, the cleanliness, and the name... but the license makes it no good for my project... :(
A big caveat on this, too -- the stock writeUTF() method can't write large strings.
This is why you have Maven. Don't use a different process for dev.
&lt;IntelliJ user reporting in&gt; ....my fingers hurt.
I didn't mean to at all imply intellij wasnt open source. I know that it is. Features are blocked behind a paywall though. 
That is the most wrong/loaded/biased post to ever be written. Not to mention it attempts to counter an argument without actually addressing its points. &gt;You're writing Java. Java is not free. What is meant by this? Life isn't free, that doesn't mean we shouldn't try to develop healthy open-sources common wealth software. Seriously, why the fuck would I patch a bug in intelliJ when I could patch a bug in a software organization with a better vision that isn't going to make me pay to use it? Its mind blowingly ignorant for you to be comparing intelliJ to eclipse. Eclipse is heavily plugin driven and more more abstract, allowing various different toolchains and implementations without needing for some central repo to support it. Eclipse is also a tool to software developers to implement an idea for their toolchains (ie arduinos ide being based off of eclipse.) I've seen vhdl/systemic/etc plugins. These are things we won't ever see in intelliJ. You cannot do that with intelliJ.
Java itself is not free. [Oracle has been exercising more strict licensing policies on Java since they bought Sun.](http://www.cnet.com/news/oracle-ceo-larry-ellison-i-dont-know-if-java-is-free/)
Anyone here will help. Just be sure to ask specific questions, not generalizations.. 
haha dude just take your quiz on your own
Uh huh. What school is it u go to. If ur trying to promote programming why aren't u writing the program instead of asking people to do ur homework for u. You can easily find examples of javas capabilities online already if that was the real intenton
This article is overly ambiguous. Java is an open and free standard. There are licenses dictating the use of the term "Java JVM" but the platform is open sourced.
The point is in supporting and developing the right tool. Eclipse has a powerful vision but the abstraction makes it significantly more difficult to reach. Is intelliJ the better tool? Maybe -that's incredibly subjective. My decision is based around which ide I want to support as well as that ides functionality. Eclipse isn't bad in one area per se - IntelliJ is just uniquely spectacular in that area (as per subjective opinion held by some individuals.) If we could make that distinction that would be great.
Are you sure that isn't just because you're using TFS?
No. Well, maybe. Some ides/plugins (m2eclipse) will actually parse the maven pom and model the project after it (keeping them in sync). In that case, yes. However if you start using ant maven tools, they'll require the project to be installed. There might be an alternative, but not one I've discovered.
Did you get that from reading this post or did you browse the source? I think it should have been clear from reading this post.
He is open sourcing it because it is not immediately clear which kind of data is stored? You have me confused!
Let me let you in on a little IntelliJ secret. IntelliJ is addictive. You try a little bit because your friend uses it, and he is sooo productive, you think to yourself, "Geez, I wonder if I would be a superstar if I used IntelliJ." So you download the trial. Everything goes smoothly. You import a maven project. Your friend comes over, and teaches you a few shortcuts. Your productivity DOES improve! You go back to eclipse for a little, and everything feels so *wrong*. With a sinking feeling in your stomach, you power through eclipse until you can't take it anymore. You're back in IntelliJ. You click through the hints and memorize a few more shortcuts. Alt-Enter is working on *everything*. You black out, and five hours later, wake up in a puddle of sweat and drool. You've written the code for the project that was supposed to take you a week. Your hands are trembling. The next few weeks you feel like a god. You get more respect from your team than you have gotten in your entire life as a programmer... But the free trial is almost up! You decide to have a conversation with your boss about buying a license, and he says he'll speak with his boss as soon as he has time. But the trial expires *tomorrow*, you think, and check your bank account. $7. In the last few weeks, fueled by IntelliJ, you've spent $7000 on doritos. But you have an idea... That night, you break into your friends house through his second story bedroom window. You know he usually passes out on the couch downstairs, so you should be good. His laptop is on his bed.. locked. Good thing you know his password. You open his gmail, and search for a product key... Success!! Now you just have to put it on the thumb drive... **BANG!!!** Your friend, thinking you were an intruder, shoots you in the face. **TL;DR:** IntelliJ is awesome and addictive. 
Pull is called constantly, pretty much wherever an image is called. I know I should probably have it called once per entity/object and just store the BufferedImages within the objects, but I don't know if this is the cause of the drop. E.g g.drawImage(Bank.pull("image"), x, y, w, h, null);
What? You're comparing build tools vs. IDEs. Does Maven/gradle/ant give you auto-completion? Refactoring shortcuts? Quick javadocs while editing? Apples meet oranges. Oh, and IDEA is open source. 
Sorry, I call BS on this for several reasons: &gt;in beginner languages (In this case java) Java is nowhere near a beginner language, Java is a globally used Enterprise scale language. &gt;Please make the program runnable in Eclipse Ahem? Eclipse is just an IDE - as such it does not "run" code Sounds pretty much like somebody trying to offload his homework here. Probably, OP should better try /r/domyhomeworkforme 
In addition to the above, OP has a zero-day account with an "I_Am_So_Great" name - throwaway...
I'll help to the extent of my knowledge and time
By reading the Readme.md on the linked github repo.
Mainly two things: Complex Nested Objects (transparent) storage, and a Query Language.
PEBKAC
That wasn't my point at all? What are you talking about? I asked "Why aren't you sing maven/gradle/ant" because there is no reason for you to be tailoring your project configuration to a particular IDE. I didn't say it wasn't open source? Congratulations, your comment makes no sense.
Just started using it in this situation. Play 2 support *seems* to be on par with Eclipse, and the rest of the IDE blows it out of the water. Dear boss, buy licence please? 
Everybody's so angry in here
Objects and lists can be nested as needed. Query-wise, data is accessed by methods within the Objects. Here's an example: // Store Gob sun = new Gob( "universe", "stars", "the sun" ); Gob earth = new Gob( "universe", "planets", "earth" ); Gob mars = new Gob( "universe", "planets", "mars" ); sun.append( "planets", earth ); sun.append( "planets", mars ); earth.put( "star", sun ); mars.put( "star", sun ); // Retrieve Gob earth2 = new Gob( "universe", "planets", "earth" ); Gob sun2 = earth2.getGob( "star" ); Queue planets = sun2.getGobs( "planets" ); for( int i = 0; i &lt; planets.size(); i++ ) { Gob planet = (Gob) planets.elementAt( i ); System.out.println( planet.getString( "name" ) + " orbits around " + sun2.getString( "name" ) ); } // Output earth orbits around the sun mars orbits around the sun 
Also: where are the (unit) tests??
Well, that's an entirely separate type of pain. 
Short (simplified) answer: As long as you're not coding back-end software, you'll be fine
Saw this a couple of years ago. Pretty funny. Through SOAP! Through SOAP!
Looks interesting, but the demo returns an error. Is this similar to spockframework ?
GRAAAAH SO AAAANGRY!
Except that [CE](http://www.jetbrains.com/idea/features/editions_comparison_matrix.html) has most of what you need for day to day. Do you have concrete reasons why you feel more productive with Intellij? I can never really come up with any. There are similar features in both Intellij and Eclipse. I just feel Intellij's are all slightly better, and the slightly better add up into a lot better. Also the vim plugin for Intellij is much better. Though the stupid multi-selection stuff in 13.1 broke visual block mode :( EDIT: I am not trying to argue guys, I just want to understand why I like Intellij more because I have a hard time figuring it out.
And... Maybe i should switch from eclipse... If intelliJ doesn't use the mouse too much, then you've convinced me. 
Negative, have pondered my bellybutton. Eclipse is to blame.
&gt; Probably, OP should better try /r/domyhomeworkforme Or maybe /r/quityourbullshit.
Ultimate Fatality shortcut in MortalKombat4J
I know it works in eclipse. I just import both projects into a workspace and eclipse recognizes the relationship between the projects. The dependency inside eclipse is actually to the other project in the workspace as opposed to the one in a repo.
There are reasons why projects/modules are structured the way they are. Modifying the structure to get it to work with a particular IDE is not an option...
If you can't register your own URI scheme, consider having your java applet run a simple webserver on a fixed port, and point the links from the webpage to that server. 
Although you dont want to take the test i would recommend you to read the book, as others states below, it might connect some dots. I do think a cert will give me a leverage if they are looking at others candidates without certs or lower certs. But a cert is worth less without experience
It's just a LOT of little things. Strings of colors, are colors on the side-bar. CTRL-click a string containing a file name and it jumps to that file. CTRL+click model-strings (SpringMCV) and it jumps to the XML definition. Unused public methods &amp; fields are highlighted. Code completion across several languages. Why is it better? Well, I'm not really into arguing that much, I'm just going to use it and be more productive.
Register with a free course and wait for the discount notifications. You can save up to 80% on discounts and they are very frequent.
Thanks, will do. I am mainly interested in Spring and Hibernate anyways. 
I am not trying to argue. I love Intellij and feel it is much better than Eclipse. I am just trying to better understand why. I like to understand my tools and what benefits I am getting from them, so that I can fix little problems in the way I use them, or become more efficient. It is a mindset that comes from being a vim user for a very long time I think. Sorry I came off as trying to argue. I thought I was clear that I think it is much better.
Thanks, there turned out to be one available now that brought the price down to 11.
Hmmm... well this version makes more sense. Your first version doesn't ask the same thing at all. Compare: &gt; Why aren't you using maven/gradle/ant/etc? Why would I choose a commercial ide when there are striving communities developing free open sourced ides? to: &gt; I asked "Why aren't you sing maven/gradle/ant" because there is no reason for you to be tailoring your project configuration to a particular IDE. That bit about 'tailoring' helps it out a lot. Secondly, you didn't say IDEA wasn't open source, I agree. However, you emphasized the word "free". Why would you emphasize it unless you were trying to highlight the fact that IDEA is not open source? &gt; Congratulations, your comment makes no sense. Really, if you just powered down the snark engine and diverted your energy to your communications skills, I think you'd have an easier time on reddit. Your comment history is littered with self-righteous spewing and clarifications borne of others misunderstanding you. 
Great! Congratulations ;)
Whoever wrote the tutorial seems to have ballsed up the formatting as none of the examples actually show the "generic" types
You can do everything with a keyboard. It's hot keys out the wazoo. And if you are a total fanboy there is even a vim plugin to map bindings to that
Many Thanks for pointing out that formatting issue. It is corrected. 
Hey buddy I recently changed my domain name to the one above :) If you have any problems you find interesting send them my way and I'll try to solve/explain them.
Nosir. You can specifically resolve the version dependence that eclipse originally asks for and it will turn around and tell you that you actually need an older version. After you go get that old version, it will tell you that you need the newer one. There are times that you literally cannot resolve all dependencies because eclipse does this circular bullshit.
You are most likely thinking of JTrac but I'm pretty sure that it is a dead project. 
I emphasized free to emphasize the fact that it was free, and easily contributed to. Saying intelliJ is open source is a half truth. Contributions to community version is limited and very tightly regulated, the purpose of this regulation? Because the commercial version is closed source and must always have an advantage over the free version. I don't agree with the core concept of the ides distribution is all. I think calling it open source is almost lieing. Especially if you say it in light of eclipse. Thanks for finding me interesting enough to read my comment history. Take it with a grain of salt though, because I fuck around a lot on this account. I would definitely consider the subreddit they're posted in as well. I can see how what I said could've been misleading, and I apologize for that. I'm not a fast smart phone typer so I usually opt for as few words as possible.
Tru story bro. I have tried and failed to argue this so many times.
At the bottom of the page: &gt;Note that PDE API Tools have not yet adopted the new language constructs. This will be completed in the Eclipse Luna release available in June 2014. Javaâ„¢ 8 support will also be available in the Eclipse Luna M7 packages expected to be available on May 9, 2014. Meanwhile Netbeans and InteliJ have full support.
Travis and Docker-using Travis clones like Drone are kind of the next step in CI and CD. Mostly because of the convenience of setting up your build in a simple text file in your repository.
A little slow coming from Eclipse... ^^^^^^Intellij ^^^^^^master ^^^^^^race.
The java 8 support patch for eclipse has been available for months tho
Does IntelliJ include its own compiler, and thus fall under legal restrictions on when they can claim support? http://eclip.se/380190#c8
Yet another troll trying to smear intelliJ users.
Eh, no biggie. I have to wonder how the JetBrains folks would react if someone got fed up with their process and just forked IDEA. ? Could be entertaining. I see what you're saying about their control issues though; it's not quite as "open" as one could hope. On the other hand, I think a lot of other famous FOSS projects are just as controlling and autocratic when you get down to it; at least for purposes of quality control. I have to assume the IDEA team has similar concerns as well.
Best thing I ever bought (as far as learning as well as exercises and examples) by far was *Head First Java*.
Not being an up-tight programmer doesn't make me smear anyone. Why do I need to be a hard-ass?
IntelliJ: The newest update ships final support for Java 8, extending coding assistance to the new language features. Netbeans supports it as well. Neither is "kinda mostly sorta".
It's just how some people are. They take their IDE choices too seriously. It's just like people with Android/iOS who vehemently hate the other for their mobile OS choice. 
if you don't have to use while loops in your assignment, use a for loop for ( int i = 0; i &lt; 4; i++ ) { try { data[i] = in.nextFloat(); } catch ... } This ensures that the counter always gets incremented whether you throw an error or not. 
I'm a professional developer year into learning Java but I had 2 previous years as a .NET developer (VBA, VB, C#) and development experience as a hobby on a LAMP stack over the past 3-4 years. I'm all self taught so I can probably give a little insight. At my 10-12 month point of learning I had built 2-3 Php applications and had just started using Php frameworks. I was also coding at work in VBA and VB and was just starting to pick up C# MVC framework. Explain your web app a little more; if you built something from scratch just referencing tutorials that's pretty decent. If it's a copy of a tutorial you may want to revisit it. MySQL, Maven, Spring are all good technologies to learn. One thing I've noticed about a lot of self taught people is that they like to do things from scratch, the fact you're using these other technologies is a good sign. Game programming goes a bit over my head, so don't be discouraged that it's difficult. The more time you spend coding the less often you'll have the compile errors and other issues, just keep at it. You really haven't given a lot of information about yourself. If you're worried about job prospects with what you're learning go to /r/cscareerquestions. Try and get some type of office job on a computer or some type of entry level IT or development job and just apply. 
Uh oh, I put that in and got [this](http://i.imgur.com/IAfqh6O.png).
**In**telliJ **ty**ped most **o**f **t**his **C**omment for me.
I just started learning tonight, and thanks to background in other languages (and a teeny bit of google ;P), I managed to make a crappy rock paper scissors. So naturally, I see what you're doing right now, and you've probably gone a long way.
Swing has an undo/redo system [built in](http://docs.oracle.com/javase/7/docs/api/javax/swing/undo/UndoManager.html).
Fix the catch block : tempPlaceHolder[i] + ... and decrement i like this i--;
Still doing the same. Why do I need to change the name of input to i?
Okay thank you very much! It finally worked! I'm going to look at it closely and see what the differences are compared to what I have, and learn hopefully what I did wrong. Thank you again so much!
why would you mix the two? Both are equally capable and both are equally terrible. Just pick one and succumb to its failures. Or upgrade your life and go with Gradle :) or Buildr
Honestly, it doesn't matter much the time it takes to mature this distribution as long as its reasonable. The implementation will be light years ahead of the slow transition and adoption of its features. That said, it will be neat to play around with.
Codingbat is really nice for beginners ; it has super simple programs (usually you just define a function) and works from your browser, so you can do it from any machine. Try it.
Out of curiosity, why are you using Ivy?
I wouldn't do that. Properties aren't serializable I'd use the default collections classes and use FXCollections to convert it to ObservableLists in the JavaFX app. This thread discuss it as well: http://www.reddit.com/r/java/comments/22a53s/understanding_javafx/
I'm a little green with Java dev. Why is something being serializable important?
The problem here is that I'd argue 90% of programming is learning proper code design and the unique problem solving skills that come along with programming. The rest is understanding your environment. I wouldn't compare myself to people who've been programming professionally and decided to pick up java because this isn't a fair comparison at all. Anyways - no book will cover all the little problems you're going to run into. The best thing to happen to you when you're programming a project is to be stumped (assuming you aren't nearing a time-critical dead-line) because it means you're about to learn something and experience something you've never done before. You can read a million books - but the best way to learn is to experience problems and discover\learn solutions (even if that means going online to solve your problem - this is something a lot of professionals tend to do as well. Just checkout stackoverflow.)
I am using JavaFX for this project.
&gt;I think it's nothing when you think all the things you have to know if you want a job. I don't know where you are from, or the state of business at your location. But my experience is that knowledge about certain frameworks means very little to employer. So I would put to much thought into it. Actually I know several people that are scheduled to complete their masters in comp.sci this spring that has never used Maven or Spring. If I were you I would probably skip Spring at this point, and focus more on core skill. That being said, I had several years of programming behind me when I started uni. And therefore learned Java pretty easy, but I was certainly not playing around with Maven/Spring when I completed my first year. After the first year I felt that I had a good core knowledge of Java syntax and semantics, but I was at no point close to be proficient in Java. But close enough that I was able to google things that I did not know. As for some tips: keep programming... If you ever think of something that you might want or need, then write the code. Yes, somebody has probably done it before, probably better than what you and I are able to do. But the point is to *keep programming*. It really doesnt matter what you are creating, but the experience you gain from actually writing the code is priceless. As you become proficient you can include more and more libraries/frameworks, but allways try to understand what is happening under the hood. TLDR; I sucked, but keep programming and things will get better. 
Aren't Travis and Drone cloud services? Many companies don't want to hand over their builds to another company, they want to run them in-house. We use Teamcity for that, but Jenkins fits the bill too.
I actually wrote something extremely similar to what you are describing during my internship last summer. We ended up with a single osgi module, but that mostly because of how the external core application was structured, and that our mentor wanted consistency. That being said, we didn't run into any major obstacles related to using that model. And I don't really see any major benefits of writing it as two separate application, since keeping just one of them alive would to a large extend negate its utility completely. I would probably recommend to structure your module that same way as the external application if possible, just to keep in line with the conventions throughout the system. 
Actually, it's just their user's manual that's borked. It tries to be helpful, trying to show you the appropriate keyboard shortcuts, but sometimes it just collapses and leaves you with ALL keystrokes for ALL the platforms. Aside from that, IntelliJ IDEA is awesome - it's the only IDE that can handle big multi modular projects with over 20K classes. Eclipse can't even load these properly in one go, not to mention the "user experience" when it succeeds. 
There's a fork of Eclipse made for developing everything Spring-related, but I suppose you don't need it anymore :) STS is like equipping people on crutches (Eclipse) with high-end runner shoes - cool, but still slow. 
They have cloud services, Travis is a bitch to install locally but Drone is fairly easy to set up inside your firewall.
IntelliJ spoils me. Switching to Visual Studio for C#, I always start my code with half finished key words or variable names because I'm so used to IntelliJ autocompleting with the space bar.
You don't have to, just replace the i variable in javajoe's for loop to input if you want to maintain the name. Instead of trying to catch exceptions and deal with them at runtime perform all the tests on the input and log your errors as required. Also, in enterprise software it's bad practice to import using wildcards. This makes it harder for other developers to read exactly what resources are actually being used by the code.
I think MyEclipse is tailored more towards mobile development, and has integrated cloud services. [Here's a comparison from the website](https://www.genuitec.com/products/myeclipse/compare/?__hssc=147514216.1.1383695022515&amp;__hstc=147514216.9ee0881a01727712fcfbc4ab7056f395.1373992525914.1383676549003.1383695022515.224&amp;hsCtaTracking=a3377ab4-3168-4d16-935a-6dac8536011b%7Cba111d2b-c300-4cd8-9d82-a4d301c000cf)
In case you haven't found it, here's a comparison of the Community (free) and Ultimate (paid) versions: http://www.jetbrains.com/idea/features/editions_comparison_matrix.html For me, the free version comes with everything I need for personal use. A free, editable dark UI (white is hard on the eyes at 2AM), Android IDE for weekend projects, GUI editor, Git, and of course the awesome hand-holding context-aware editing helpers. The only thing I really miss that's only in the paid version is support for SQL.
Ah, nice. I wasn't aware that they had released an [open source version of Drone on Github](https://github.com/drone/drone).
Lambdas don't generate class definitions, they wire their method calls using Java 7's `invokedynamic` bytecode instruction. Without `invokedynamic`, lambdas would indeed have been a very inefficient addition to the JDK.
Helper/Utils class? public final class PasswordUtils { public static String hashMyPassword(String password) { //Implementation } } Then in your controller you can use something along the lines of PasswordUtils.hashMyPassword(&lt;incomingPasswordVariableName&gt;)
&gt; it will be looked at much sooner than in a reddit post ;) Depending on the mood of the Hibernate team I wouldn't bet on that. Hibernate is known to just close issues because Hibernate passed the TCK and therefor can't possibly do anything wrong :X Some issues have been open for years(!) because of that. Sometimes shouting a little at public places DOES help more. 
Even in Java 6 you can do: Map&lt;String, Object&gt; map = ImmutableMap.&lt;String, Object&gt; of("bob", 5, "TheGimp", 8, "incredibleKoolAid", "James Taylor", "heyArnold", new Date()); Using [guava collections](http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/ImmutableMap.html). This is superior in that it allows maps with non-String keys. Unfortunately Guava doesn't provide a method for creating mutable maps in this way, but you could write your own, or just do a `Maps.newHashMap(ImmutableMap.of(...))`.
I'm from hibernate team. Please just open with reproducible testcase :) this though look like a javavm bug that hibernate is triggering but let's get that testcase before putting judgement, ok ? Once that is done you can public shame away. 
Serializable is not Java specific. It means the ability to write a disk representation of your data structures that can be recreated just by reading it again. Only if a class is serializable your will be able to read it at a later time from the disk, network, db, ... and get the same data representation back.
We all Learn everyday :) anyhow - runnable testcases speaks louder than anything. 
Cute. but this falls apart if someone compiles your code without debug information, doesn't it?
I don't use the PDE tooling, I believe I'm fairly representative of how most devs use eclipse, then again, I'm no fan of OSGI.
The syntactical advantage I see with the lambda example is that you do not have to take care to have an even number of arguments.
Add your link into the text post: reddit is text xor URL.
Wouldn't char[] be preferred over String in this case?
I work on a UI team using Eclipse RCP at work and deal with undo/redo all the time. Your approach is very similar to how undo/redo is implemented by Eclipse RCP. All of our [EMF](http://eclipse.org/modeling/emf/)-based domain models have public set methods. All of the shipped EMF commands (SetCommand, AddCommand, RemoveCommand, etc.) have public doExecute(), doUndo(), and doRedo() methods. If other programmers will be using this, they just need to be educated to use commands to edit models if they want them to be undoable/redoable.
????? Are you trying to run a Java application called "euclid" and with parameters of 54 and 69? If so, you just open a terminal/command-prompt (CMD on Windows, Terminal on MacOS/Linux/UNIX) and do the following: java euclid 54 69 
Notice that the vast amount of open source code used in Java shops are Apache 2 or a BSD/MIT style license.
been there, done that -- oh wait - I'm currently doing that :) We're just now lobbying to remove jar files from SVN (oh, and to move to git too)
Thanks for the info. I actually went with Dropwizard, which seems to be doing the job wonderfully as a runnable JAR - running a couple threads to handle other issues, and it's also responding to REST service requests.
Either way the compiler will enforce that.
&gt;How does ML gets linked with Hadoop ? The ideal scenario for Machine Learning is when you have all the data for a given problem instead of a sample. That way you can build a complete model. Typically that means Big Data, and Hadoop is the accessible, inexpensive, distributed pipeline for big data that has the most community support. &gt;How are they used together? Not all machine learning algorthims can run in a distributed fashion. But those that can, can be implemented as a Hadoop Map-Reduce job. Java is the standard for implementing these, and there are libraries of select algorithms like Mahout. &gt;Do I have the wrong understanding of these things? That description is accurate. 
Thanks for this clear explanation.
FYI, Mahout will not base on Hadoop in the near future. They are migrating to Apache Spark.
Yes, this is definitly worth it, the trainer is a very good trainer. And 67+ hours of content, damn thatÂ´s a lot.
It might be an issue with OpenJDK (and maybe also Oracle) JVM (in LInux maybe) due it doesn't store the parameter name for lambda functions (I made my own versions to test the problem https://gist.github.com/galdosd/10823529 and when it works https://gist.github.com/luan-cestari/10902418 ). I was discussing in the IRC channel that, I'm also sending an mail to openjdk about that (I read the language specification and that doesn't define an exception for Lambda expressions)
You can implement functionality to enable and disable undo registration in your UndoManager. If you do so, you can conditionally register your undo/redo commands directly in your model methods (e.g. in Person.setName() method). The only trick is to temporarily disable undo registration while undo or redo operation is in progress. Here is some pretty good documentation about undo/redo: https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/UndoArchitecture/UndoArchitecture.html https://developer.apple.com/library/mac/documentation/Cocoa/Reference/Foundation/Classes/NSUndoManager_Class/Reference/Reference.html#//apple_ref/occ/cl/NSUndoManager Although it is written for Objective-C, it should give you general idea what good Undo/redo framework should have. 
I see stored arg names in *.class file (javap -v) but I can't read it using reflection (parameter.isNamePresent() returns false). Maybe I missed something? ;)
jComboBox.setEnabled(isNewGamePressed());
isNewGamePressed returns a boolean correct? 
You would write the method to return a boolean, correct.
Thanks a ton! I've been looking for that setEnabled function for forever now, it's so hard to find answers on Google for programming. (for me atleast)
Look into JavaDocs and your IDE. With Eclipse you should be able to read them while coding.
http://mail.openjdk.java.net/pipermail/lambda-dev/2014-March/011938.html Basically it's too much work for not enough benefit, especially considering Guava's collection factory methods are very nearly just as good as collection literals.
Collection literals are **way** nicer than factory methods, but I can understand if they feel they can't get enough return to justify the investment right now.
What makes them way nicer?
Comments like yours make us Eclipse users look professional in comparison. Master race my [insert expletive here].
Would I accomplish that using a break? I like the press enter thing better, I just didn't realise that was an option. 
break is used to terminate a loop early, so you wouldn't really need that here. Try to take small steps based on what I suggested before. Change your print statement to say what you want to say, and then you can reuse the Scanner to wait for input before continuing the loop. The press enter thing is easier than "enter C" because in this step you don't have to worry about what they actually enter. You can always build upon that later if you want.
https://java.net/jira/browse/GRIZZLY-1535
They're ridiculously more concise. Look at tuple/list/map/set literals from Python (or most any other scripting language), and then look at the Guava code to do (roughly) the same thing. The literal notation puts the information front and center, while the factory approach has all sorts of (essentially) boilerplate front and center.
I don't understand how this is a terrible hack? Would it be difficult to retool it to work with more than simply strings?
It still doesn't give the relational feeling that the solution in the Gist does. It is much easier to see a relationship between key, value pairs when you have syntax that accurately conveys that relationship. key -&gt; value does, where as key, value doesn't. 
Basically, if you know how to read from a file and how to write to a file, you got all you need. + Declare the input reader + Declare the output writer + read from the file + process your data + write to the file + close the input reader + close the output writer Both operations can be combined. Only separate variables for reader and writer are needed.
Awesome thanks!
How does it support multitouch?
[java api docs](http://docs.oracle.com/javase/7/docs/api/)
Yeah this isn't a complete implementation, just conceptual :)
I'm mot sure if this helps. Addactionlistener(this) and implement actionlistener. In the loop where you add the buttons i would recommend you add the actionlistener and set an actioncommand for example btn and i so you will be able to recognise the pressed button. And watch out becuse of &amp;lt;= 79 and &amp;lt;= 80 you could use a constant . Then you will have only one actionperformed method for all buttons (cleaner code, my opinion) 
You're trying to access the **buttons** ArrayList inside the inner listener, which, as it tells you, you can't do unless **buttons** is final. Alternatively, use the [**getSource** method](http://docs.oracle.com/javase/7/docs/api/java/util/EventObject.html#getSource\(\)), you'll need to cast it to a Button though. 
Why do you have 22 threads? What are the doing? Synchronization is also expensive. Without any details though all I can say is to run it through a profiler.
I don't use a Mac so don't know typical performance but CPU and memory sounds sufficient. Depending on what ur doing to this array list, some operations may be making copy of data, ie if u create small array or default size initially and keep building, I believe each time the array expands capacity, it makes copy in memory. It may be cheaper to just do new arraylist(10000) to set a large capacity on the start. (Or maybe im getting this confused with string buffer). Also u may want to try setting the jvm memory via the command line flags so the app has plenty of memory reserved on start up. As for threads, no clue what all of them are doing. Array list isnt thread safe so if ur creating the threads and trying to divide up work, there may be some blocking going on. If u have jdk, look for a program that comes with it called console, which can show thread dump and good diagnostic data.
Ok, seriously, how have you created that many threads? Have you personally created any threads? As in new Thread().start()? Or perhaps using some sort of ThreadPool?
Glad I am learning javafx.
First time I have ever heard of "hazelcast"
Oh, I'm not the original author. It uses JavaFX packager, which you could use to wrap up a JavaFX application into an executable, whether Windows, Linux, or OS X. [Source](http://docs.oracle.com/javafx/2/deployment/self-contained-packaging.htm). As far as I can work out, you shouldn't need a compiler from Java to Objective-C to work on OS X. You just have to go through the steps of signing everything via your Apple's developer keys to prove you are who you say you are. Which is about 1/3 of what the article was about.
Be careful. It still has a couple of inexplicable rough edges. For example, there is no standard way of limiting text input in a Field, such as minimum or maximum amounts allowed, nor disallowing certain types of text, say letters or numbers. Annoying.
Apache amath commons needs a revamp.
Thanks for the heads up! Will have to be careful with that since Im building some data tools.
Rather than guessing, profile your app using VisualVM. You can inspect all the running threads and the heap at any point.
Don't just go with what I say since I am very new to programming as well (freshman), but it sounds like instead of checking the value (comparing) and then working based on that (setting or waiting/retrying/changing stuff), it instead stores the information (delta) that it wanted to set to the counter and then moves all the deltas in all at once when needed. Maybe. In my mind it goes kinda like this: Atomic Integer: a += b: get a get b add a and b into c check c against a (I guess it checks if the new value is less than the 'old' value?) and set if it passes or otherwise return that it didn't set and act based on that. All in one instruction so it doesn't deal with races, or something. LongAdder: a += b; get b push b to an 'internal cell object' Then, later, when you want to get a it does: a += sum of cell object; return a; Something like that. Longadder can be slower for single thread working on a because it has to do all that writing to the cell object and what not, while it is much faster when multiple threads are working on a because they don't have to be like "OH SHIT OUR CHECK FAILED" constantly.
What type of Java programming do you want to do? If you're just looking to do business application development all you need is to understand agile development, test driven development, and have a decent understanding of object oriented design. (Knowledge of design patterns and heavily used frameworks like Spring help as well.). Source: I am a software engineer with a physics degree.
If you use Netbeans you can run it with the profiler and see where in your program the CPU time is being spent (and where those threads come from). It's a very useful tool.
I am looking for basically anything Java that pays well including business application development. Most of my familiarity with design patterns/object oriented design comes from the book Effective Java by Joshua Bloch and I try use what that book taught me in my code. I am not very familiar with agile development or Spring. How did you enter the industry? Did you just walk in with a physics degree without programming experience? How can I move forward from here?
When a large number of writers try to access the same value, they all contend to update it. `Atomic&lt;T&gt;` handles this by having the thread compare, and then swap or fail and retry (`bool compareAndSet(T ex, T up)`). The more writers there are, the more contention (`n` pigeons, only `m` pigeonholes), and the time that's spent on compare fails and retries. `LongAdder` handles the contention by keeping a list of failed updates for each thread which eliminates the contention. When the value is requested from any of the threads, it will add any pending updates. So, updates effectively never contend, which means updates generally take a constant amount of time. However, reading the value can take a longer time since any threads' pending updates must be read, in addition to the actual value. In general, it's not a good idea to replace every concurrent addition in code with `&lt;T&gt;Adder` since using it isn't *free*.
put your projects on github. put github on your resume along with some other buzzwords. start applying.
LongAdders are all nice and stuff, but where are the BlackAdders?
It should be noted from the Javadoc: &gt; This class is usually preferable to AtomicLong when multiple threads update a common sum that is used for purposes such as collecting statistics, **not for fine-grained synchronization control**. I haven't looked into this in detail, but the Javadocs (and the article) are not clear on if/how/when a change is made visible to other threads in case the CAS fails.
This one not RoboVM right? Anyone here has the experience developing production app with RoboVM? How was it? 
That screen shot is a small amount of CPU use, the number of threads is completely normal when using any GUI framework. Most all of them create a handful of threads to do work. The amount of memory use in that screen shot is normal for anything with a GUI. Everyone here is just guessing. No one can give you any useful feedback without seeing code and, if the code amount is significant, likely running/ profiling/debugging themselves. Learn to use profiling tools and find out for yourself. [VisualVM](http://visualvm.java.net/) is a good starting point. 
This code looks pretty harmless. It's filling in a 16x16 grid of rectangles within a canvas of about 500x500 pixels. Drawing 256 solid-color rectangles should be child's play even for a computer from 20 years ago. Basically, I'm saying something else is probably the bottleneck.
uhh... based on your education, the problem solving part of programming is pretty much there. all that's left is for you to learn the syntax of everything. agile is easy, its pretty much just a workflow method to make sure everyone is doing SOMETHING everyday/2weeks so that your project managers dont waste money on you. i meet everyday with my team and have to say i did something so its not like on tv where they just hand you a task and you have until the due date months from now to deliver it. agile lets you deliver something small bit by bit so thats all that is. spring is easy but im saying that as a programmer who's never been in charge of anything, ive just had to implement it into classes here and there as a newbie when told to. based on your experience, youre a damn shoo-in for an entry level position. i live in michigan and ibm hires people with WAY less credentials than you have, send them to programming bootcamp to learn ibm's standards and practices, and then theyre making 40k+ right away on top of room for movement. additionally, there are a crap ton of insurance companies by where i live and they hire ANYONE who can do math / physics to become java programmers. theres a running joke amongst my friends that if you drive too close, you'll get hired by them. (the insurance companies here start at 50k+. the headquarters of jackson national and auto owners is here, theyre always looking for programmers) i am a programmer, and i probably would not even be near as good of one as you would ever be, but my advice would be to just throw youself into it, send resumes out, and get your feet wet. your first few tasks will involve you reading a shit ton of documents to understand all of the custom libraries with all the buisness logic you will probably be using. youre just going to be a cog in the machine at first, you don't need to reinvent the wheel, so most tasks will just involve you asking for what you need, and figuring out how to implement it into your task (which will probably just be fixing up someone else's old code). on top of java, with web apps, you'll need to probably know html/css/javascript/xml also. again, with your experience, a simple google is probably enough for you to figure it out. if you don't like it, quit and figure out again what you like. with your background though, im sure you'll move fast and become an architect in no time. otherwise, you can always become a cobol programmer and never ever need to learn a new language again on top of all the money you'll be making rain. this is just my experience being in the entry level programmer position for 7 months now. EDIT* i walked in with barely an associates in computer science working along side computer science bachelors degree/java certification holders. starting programmer/analyst is 40k range. honestly, im not the brightest, i didnt have to take a million calculus classes either. uh... i just can do my job with my little experience and class knowledge. the real kicker in being a programmer is being able to learn fast and still deliver. you'll be fine if you throw yourself out there
You needn't be using NetBeans - just fire up VisualVm (included in the JDK) and connect to the VM of interest.
Run your application. Open Terminal. Type in "jvisualvm". Find your application on the left and double click it. On the right go to Sampler and click CPU. That should give you first hints where your bottleneck is. After that you can read how to use the profiler effectively.
Good luck :) On project I work with, the jar files are kept in svn (no hope to change to git) AND when you add a new jar, you use maven (of course via Perl script) to download it and then add to svn. It's a clusterfuck of technologies, but there is some method in this madness.
I'd recommend one of you connect through a proxy. You should be able to set a proxy for the JVM to use (something along the lines of http://stackoverflow.com/questions/120797/how-do-i-set-the-proxy-to-be-used-by-the-jvm). This does of course require access to a proxy service somewhere 
Nope, not RoboVM. Just plain ol Java and JavaFX. 
No native Java is exceedingly fast. The Developing Games in Java book even describes how to write your own 3D engine with native Java. Try the samples you'll see how fast it is. http://www.brackeen.com/javagamebook/ 
 task("compile", "Compile all java files", function() { var src = "src"; // root dir of .java files var out = "out"; // root dir of .class files var found = $EXEC("find ${src} -name *.java"); var paths = found.trim().split("\n"); var join = java.lang.String.join(" ", paths); print("compiling ${paths.length} java files to dir: ${out}"); $EXEC("mkdir -p ${out}"); // create dir if not exists $EXEC("javac -d ${out} ${join}"); if ($ERR) print("[ERROR] ${$ERR}"); }); Remind me again why this is better than native shell scripts or Ant or Maven or Gradle?
It's not meant to be better than everything else. It's just an alternative way of doing things.
We're issued laptops for school that are almost exclusively used for gaming, honestly. Command prompt is disabled on them, but almost anything java related works perfectly fine. If I was able to turn batch files that start up certain games into executable jars, then a whole lot of games would start working. Thanks for the link though!
I think the latest one was sitting in his galactic space throne.
After 25 years as a professional programmer, I have learned time and time again that my own code is by far more likely to be the source of resource problems than the hardware, the language, the underlying software, or really anything I didn't do. I suspect this rule is in effect in your application as well. A simple while(true) {} will use 100% CPU time. You can use a lot more code and accomplish the same thing. Figure out what your program is doing (hint: its probably *not* what you think its doing or what you wanted it to do). If you can't find it by re-reading the code, you can try an automated profiling tool as suggested by others. Once you understand what the program is doing the solution will probably be obvious. 
I totally agree with this comment, and it probably saved me a lot of typing ;-) I am a software developer with a lot of experience (C/C++/Java/PHP/Lua/Perl/etc) have hired many programmers. Syntax is fluff. I look for someone who can understand the problem and design the appropriate program to solve it. Polish your apps so they aren't buggy. Put them on a website. Put a link to the website in your resume. Include code excerpts on the website and discuss them. You'll knock the socks off of a knowledgeable hiring manager... and you don't want to work for any other kind.
I got about 12 out of 15 right and I don't even use Spring. Some pretty crazy names in that bunch though.
Without knowing the problem they solve, you can' tell that they are bad names?
do you get to keep the versions on the filenames? Because my CTO specifically does not allow it. There's a method to the madness there as well; however, it's a pretty poor method.
Yeah, it doesn't seem too bad. Is the program calling repaint() a lot? Try to do that only when something actually changes.
I'm an engineer who moved into application development and you clearly have the technical skills and drive you'll need to get a development gig. It may take a couple years but it sounds like you're on the right path. Here are some tips. 1) You may already be well positioned to grow into a dev role at your current company. On complex software projects more than half of the knowledge you need is industry domain knowledge and how to configure and run your company's application. If you can get a job inside your company on a bug/ maintenance team you'll start to build the coding skills that you'll need to take the next step to a new development/ R&amp;D team. If you get on a bug/ maintenance team try to get into a new product development role within 2-4 years to avoid getting stuck as a bug squasher. 2) Although there are a small number of opportunities at larger companies as 420SmackACat mentioned, the number of slots is limited so although they're worth looking for at the same time you should be searching for a route that will allow you to work your way up to a dev role. Again, the opportunities that I've had have all been due to my domain and industry knowledge and a willingness to show that I wanted to learn to code. 3) There are a lot of positions for people to write and maintain scripts or small applications for QA, DevOps, data conversions, data analysis, etc... they may not be true application development roles but they can get you into a software company and provide you the domain experience and opportunities for light coding that will position you for a true development role. Again, it's not always easy to move up but if you work your ass off and prove yourself opportunities tend to eventually just drop into your lap. 4) In the meantime keep coding and get on github and/or an open source project. 5) Attend local user groups, code camps, etc... it'll keep you on top of what's current and give you critical networking opportunities 6) Go to job/ tech fairs to figure out what technologies and skills are in demand. This is really important because you do not want to end up in a dev role in a dying company using dead technologies. I've interviewed too many unemployed developers with decades of experience in outdated technologies and the sad fact is that if you're not current you're probably not going to get the job. 7) Take a couple comp sci classes. You've got a solid math background which is awesome but a couple of key comp sci classes will make you a better programmer and will help you with the puzzles that are so popular in today's programming interviews. Start with data structures and algorithms Good luck man! 
Good work :) Thanks
Congrats, if you don't mind me asking why the name?
Exactly, plus most of these classes are ones you will never use and part of the internal plumbing. Without the domain knowledge behind how everything meshes together, of course they'll look dumb and too long.
BTW $40k for an entry-level programmer seemed low to me (I got $32k in 1985, albeit with a M.S. in Computer Science). I looked it up on http://www.salary.com and it looks like the median salary for "Programmer 1" is $56k, with the 25th percentile being at just over $50k. "Software Developer 1" is $58k with the 25th percentile at $51k. Obviously the region you're working in affects your salary, so maybe the $40k you're referring to was in a place with a low cost of living.
Exceptions are for developers (eg. to tell them they misused a function) , prints for users (simplified, may not apply everywhere and could be explained further if needed, I'm just lazy atm) 
I'm just asking because Exceptions are just a convenient way to not having to worry about a bool value when you can just throw an exception once and be done with it. EDIT: I forgot to say that I would of course catch that exception and print the message to prevent the program from crashing.
any of the spring projects are great. Personally I'm a big fan of spring social which has wrappers for oauth and popular sites (facebook, google, etc).
Exceptions are expensive. When you throw, in most cases the JVM will construct a stack trace and then unwind the stack. Exceptions should be used in exceptional cases, not common cases, because the common case should be fast. Checking a boolean is incredibly fast. While you should not prematurely optimize, you should also exercise wisdom and not choose the heaviest weight option if you can avoid it. Only use exceptions for exceptional cases is common wisdom.
Yes, its bad practice. Exceptions are to be used only for exceptional conditions and not for process flow. Although it may be used successfully for your purpose, its more frowned upon because it is not something to make a habit of. If you begin using exceptions for flow control, you lose the ability to control the flow of your programs. Making a habit of this may come to bite you in the future for reasons such as code extensibility and re-usability. What you want is a state-testing method to test the state of an object, or your isValidValue(boolean) method.
This is the wrong way to think about getting into open source. It's difficult to just pick some unfamiliar open source project and start making meaningful contributions. You need an itch before you start scratching. Think about the open source software you're already using and familiar with: libraries, applications, frameworks. In what way could these be better than they are now? 
Well, it's kept nice and orderly in proper folder structure, with folder/version (perl script makes sure of that). Like maven repo but in svn. Jar names are kept intact, so that's ok.
Aggregation usually refers to a "has-a" relationship and is related to Composition, but a little looser. In Composition, a given Object lives its entire life within another Object and is not accessible to the outside world. Aggregation has an Object contained within another, but it can be modified and/or accessed by outside callers. 
See, this is the kind of thing that comp sci professors don't tell you. Of course, it is a balancing act with us not having to worry too much about our memory use and computers becoming faster. But I had no idea that booleans were THAT much faster because to me it all seems lightning fast. Thanks!
Experience in a language helps to get an implementation of that idea that doesn't suck though. Syntax is a bit fluffy, but really knowing a language is not really about syntax in my opinion. Honestly though, this guy seems to have a great foundation though. I think he should just get out there and try.
Performance reasons aside, using exceptions as a method of flow control is an anti-pattern. Exceptions are, by definition, an exceptional case. They should be unexpected. Handle them fast, and as close to the source as possible. Only throw exceptions in your code if they are truly unexpected, and prevent your code from executing correctly. Creating that sort of asynchronous flow logic in your code also results in very confusing and unmaintainable garbage that future devs will curse. See this useful blog post: http://c2.com/cgi/wiki?DontUseExceptionsForFlowControl
Good suggestion. Thank you. I have seen it in places but I guess it is time to grow up from sysout and use logging.
Hmm, well that seems very odd then. I'd recommend you do what the other guys have suggested and profile it, try work out where the other threads are coming from/how long they're lived and if they're actually doing anything useful. The snippet of code you posted doesn't seem too suspicious as /u/adrianmonk said. 
My first reflex was the java.util.Logging, but whicj one directly supports outputting a logfile without explicit file IO operation.
When downloading the Java SE Development Kit 7u55 jdk-7u55-windows-x64.exe I get. . . This Connection is Untrusted You have asked Firefox to connect securely to download.oracle.com, but we can't confirm that your connection is secure. download.oracle.com uses an invalid security certificate. The certificate is only valid for the following names: *.akamaihd.net , *.akamaihd-staging.net , a248.e.akamai.net (Error code: ssl_error_bad_cert_domain) Very reassuring. Is it a problem with their CDN not having the right oracle cert? 
I prefer log4j just because I find JUL logging configuration to be overly complex and verbose in comparison. Additionally - and this may not be a concern of yours - you can flex logging with log4j (and other logging implementations) for different applications on the same JVM. I'm not even sure that's possible with JUL.
Neither. If you can catch wrong user input, inform the user via the UI.
* Code reuse and less work on your part * Don't reinvent the wheel - other people have dealt with this problem before, and likely have considered scenarios you haven't and rolled them into a reusable library * If anyone has to maintain your code, there's less of a learning curve since they could take knowledge of logging in another application and apply it to yours * There's a wider base of knowledge and public communal support for things like log4j, as opposed to anything you roll yourself
Udemy's generally pretty good, but depends heavily on the instructor.
Work on something that you have business with, for example if you work with web java, then you might want to contribute to your favorite framework. This will keep you motivated, because you will actually use stuff you write.
&gt; Exceptions are expensive. When you throw, in most cases the JVM will construct a stack trace Just pass generateStackTrace = false in the constructor, no need to do unnecessary micro optimizations.
If you are a math geek, I'd check out [project euler](https://projecteuler.net) 
A reddit search of this subreddit, /r/learnprogramming and /r/javahelp and their corresponding FAQs and wiki pages.
&gt; using exceptions as a method of flow control is an anti-pattern. That sentence is pointless as it basically translates to never ever use exceptions - as exceptions are by definition a form of flow control. &gt; They should be unexpected Again a never use exceptions, at the point you write the code to handle a case you expect that it can happen. &gt; Handle them fast, and as close to the source as possible. That is again fully contradicting the purpose of exceptions, which is to get the error to a point in the call stack where it can be handled sanely without the if(errorCode...) chaining used in C. &gt; See this useful blog post: http://c2.com/cgi/wiki?DontUseExceptionsForFlowControl It starts of by calling exceptions a non-local goto, the claimed breaking of the principal of least astonishment is also false (add a finally clause and you will see that the example breaks out just as expected) and if you start micro optimizations during the initial design you get worse problems than exceptions (we call it unmaintainable code). The jumbled mess of badly formated opinions (at least in my browser - who designed that page) makes it hard to get something useful out of that link. TL;DR: These arguments can be reduced to don't use exceptions unless you encounter a paradox which is kind of pointless (if(2 ==3)throw ...).
Kristler, I just thought I'd browse this subreddit because I'm a software developer that's interested in learning Java and I sorted by top. I know I'm 5 months late but good job. More people need to take this approach to answering questions, rather than giving completed code that they just copy paste without learning. Ironically you put most of my university professors to shame in that comment thread. There's a good chance you'll never see this but you get an internet high five from me. :)
Decision is still pending. Depends on Oracle but they are not close to officially include it in Java EE 7.
[Head First Java](http://shop.oreilly.com/product/9780596009205.do)
What a tremendously uninformative post. You should probably start by reading some books I guess. I recommend Head First Java to complete beginners. Also you could try [code academy](http://www.codecademy.com/) which doesn't use Java but is a good way to learn how to code.
Beautiful explanation; thank you very much. 
&gt; my experience is that knowledge about certain frameworks means very little to employer Uhhh... where are you looking for jobs? Knowledge about explicit frameworks isn't TOO important, but knowledge about frameworks in the language you're applying for is a big deal. &gt; I know several people that are scheduled to complete their masters in comp.sci this spring that has never used Maven or Spring This must be why I feel like most compsci grads don't know what they're doing. 
Hey there! Thanks for that, always great to hear people like what I do. If you ever have any questions about Java or programming in general, feel free to PM me about it!
programmingbydoing.com Possibly the best site ever for Java. 
Here you will find a sample project with Hibernate 4.3.5.Final working: https://github.com/averri/jpa-lambda-integration-test There is also the same test with Eclipselink, which fails.
Couple of things - First, I'm not a NetBeans guy, but you should try to isolate your code from the generated GUI code if at all possible. Just to make things cleaner overall. I recommend moving your code into another class, and providing getters and setters where necessary. Second, your Map and List properties should be declared private. Leaving them at default visibility is considered sloppy coding and is frowned upon in the industry. Third, you should have your variables declared as the abstract versions of their data structures. What this means is they should look like this: private Map&lt;String, String&gt; hashMap=new HashMap&lt;String,String&gt;(); private List&lt;String&gt; array = new ArrayList&lt;String&gt;(); The reason for this is that you should avoid coding to a specific implementation of a class, when all you really need is the functionality of the abstract version or interface. If you want to change the type of those variables in the future (to a LinkedList, for example), it is much easier to do if you declare and treat the variable as a List. Lastly, I don't understand the root of your actual question ... what specifically are you having trouble with? What functionality are you stuck on? Do you understand the problem and just have an issue coding it, or are you running into a conceptual issue? 
Alright thank you very much, I'll have to change those, and yes I've heard using NetBeans weakens your understanding of the actual code behind it. My professors say that is the software we are using though. I believe I understand the problem, but just am not sure how to code it. So I have it to where when the user enters the Country and Capital, it will record that to the map, but how do I get it to display in the list? I just need the Capital they entered to display in the list. 
Thank you very much! 
Yeah, just don't write your own, you'll discover why eventually, or take jrh3k5's reasons.
To add to this comment: - Separation of concerns. Unless you are making another Log framework :) - With a proper logging framework, you can do all sorts of other interesting things such as: automatic log roll overs, aggregation, filters, send logging info to a variety of other end points (files, console, network, email, SMS, Asterik, JMX, etc etc) - Some frameworks (ex: logback) can do some crazy things such as rate limiting, advanced log output evaluation (ie: only log if the object you are logging contains field X and X is a string and X contains 'blah', only log if the object is convertable to some interface), log output conversion, duplicate message filtering. With all these options, you can control the flow from input (initial log event) to output (2nd point) - Most of the popular frameworks provide implementations to hook in to the other logging frameworks to centralize everything It is totally worth your time to investigate and learn a good logging framework combination such as slf4j + log4j or slf4j + logback. You'll probably only use 25% of the capability, but it allows you to do pretty much anything. Plus it scales well!
http://docs.oracle.com/javase/tutorial/ Use this.
Yup I know about the god, but that's a great analogy. Thanks 
Use Spring 4 and you're free from this kind of server incompatibility issue!
I assume by Java and Android, you mean RESTful web services aka JAX-RS for the Android apps to interact with. If so, read the Oracle Java EE 7 docs/guide.
Cool
Java and Android are owned by for-profit companies, so they actual have (nice) documentation and tutorials that are native and approved. In contrast to W3schools, which actually has no affiliation with the W3 consortium and has repeatedly refused requests to rename themselves. I don't think you'll find it too hard.... you'll just have to get used to a more strongly-typed mode of thinking. Object oriented code is much more robust, but it's also more of an investment, so try to focus on the design ideas. Much more important with backend than frontend code. 
++i exists.
What's the difference between i++ and ++i?
++i is pre-increment and i++ is post-increment. http://www.embedded.com/design/programming-languages-and-tools/4410601/Pre-increment-or-post-increment-in-C-C- This article will explain it better.
Almost everything beyond the language. There are a ton of amazing frameworks out there like Spring Framework. We had a brief introduction about them at school but I really got the hang of it when I started working at a professional level.
I learned this is Programming 101, probably 2-3 lectures in.
When I was in school Java 1.2 was just out, and it was 1.1 we learned about. Also first years working full-time we stuck to Java 1.1 because 1.2 was considered to unreliable for production use. So everything added to the language since 1.1 I had to learn about (remember 1.1 didn't even have Collections; it was a much smaller and simpler language). But over time I also learned to like other languages better. In particular most Java frameworks and libraries are extremely over-engineered and over-generic. The language itself is OK I guess, I just found other languages I like better. Java is superior for paying my bills though, so as long as someone is paying me to use it I am not complaining too loudly.
Sorry, kid. I mistook you for someone who poses as a kid to make others look childish by association. Given the enterprise orientation of Java, it's far too easy to forget that we're in fact not all hard-ass professionals, and that this is entirely fine. Carry on and code things that rock.
People are inherently evil.
if you use linux, you'll never have issues like this. 
i was almost sure this would be a break/continue joke
You didn't learn that in your introductory programming class? It's kind of important sometimes. 
dude, move your variable declarations to the top of the class rather than bottom, for fucks' sake
Why would you assume that? oO [Here you go OP](http://developer.android.com/training/index.html)
**Tooling!** If find it incredible that there is so little importance given on tooling during your cursus. I am not even talking about version control or continuous build system, but all the other aspects such as mastering you IDE, using proper testing libraries (and learn to automate your tests), learning dependency management (Ivy, maven, gradle, you name it) and having consistent project structure. My cursus was mainly focused on conceptual OO programming, algorithms and low level stuffs (sockets, memory management, network stack). When I have to look at how most of the project on lower level languages (C, C++, Perl, ...) are managed, I wonder how much energy is lost in maintenance and integration due to the poor level of tooling they have.
I beg to differ. They are quite good names actually. You see, Spring is not a final product, it is a generic framework to build product using well established patterns. One way to identify a pattern is to name it, and that's what they do. On the other hand, if you, as a product maker, are using name derived from those, then you are doing a terrible job at naming your business.
People are still running Java 6u3. And can't upgrade because reasons.
I think that the job of a university is to teach you the act of learning and to provide you with a solid foundation in a field. IDEs change, tools change, etc. and it really doesn't make too much sense to teach these to students who will learn them on the job anyway. Apart from that I've made the experience that professors aren't even capable of teaching these things because they've been out of the industry for years.
Our teacher is awesome in this. The pc's at school run netbeans 7.3 with java 7, but our teacher told us to use java 8, to get used to it. Now she makes multiple netbeans starter projects for every lesson.
I agree that it does not make sense to teach you about a *specific* tool, but giving you no insight at all about the fact that those exist is, IMO, a huge mistake.
i++ returns i+1 after i is used and ++i return i+1 before the value is used so, basically: private int var = 0; System.out.println(var++); // console prints out 0 private int var = 0; System.out.println(++var); // console prints out 1 same applies for i-- and --i ___ EDIT whoops, replied to the wrong person
I accidentally replied to the wrong person before :P http://www.reddit.com/r/java/comments/23c8bq/what_have_you_learned_from_working_with_java_that/cgvlsm8
Unit testing and continuous delivery are two topics I wish my school touched on more. 
It's entirely possible to write a functioning large scale program with only static methods. à² _à² 
à² â—¡à² 
Unit tests. Not even mentionned during courses, and yet it's a huge part of the job.
Control flow by exceptions is less visible, and makes debugging and maintenance difficult. Exceptions are avoided for the same reason GOTO is. Exceptions do offer an advantage sometimes when you want to return something along the lines of "any signed integer or error". Also when some error in the bottom layer of your application needs to be immedeately communicated to the user via the top layer of your app, an exception will bubble up without having every single method on the way check for error messages. So by all means, use exceptions where they make sense, but they are a slippery slope and it's better to avoid them when possible. The way you currently think about code and exceptions is one thing, and it will change. If you force yourself to not use exceptions, you will soon enough find that you naturally build code that handles things well without them. If you start using exceptions a lot, you will find yourself later on being unable to write sensible code without them, and your best "sensible" code will still be frowned upon by others. 
Hi Tinker... I cleared OCPJP using Kathy Sierra and this mock test site... www.cybermocktest.com/scjp/
When it's good to use a while loop instead of a for loop.
Agreed but the link I gave uses java software rendering. 
http://docs.oracle.com/javase/tutorial/
Weird, because all my professors told me that. Guess it's all in the luck of the draw. 
Not while retaining your dignity..
javaranch.com
&gt; extremely over-engineered and over-generic Although maybe I wouldn't use the same words, there certainly is a lot of um... let's call it inertia. Look how long it took to leave behind the old EJB model. And general misunderstandings at the abstract level, let's call it a paradigm, definitely lead to AbstractFactoryFactory monsters and such.
Design &amp; architecture. 
I agree with almost everyone here about the concepts they're mentioning, that it would be nice to have been introduced to them previous, etc, but I do want to make the point that I haven't seen mentioned here: You absolutely do not want your CS professors teaching most of this stuff. The reason is that they don't use this stuff frequently and many of them have NEVER had to write and maintain even a small-scale product that had to be tested/deployed/documented/etc for multiple versions, adding new features while making bugfixes, etc, etc. For most of that stuff, you're better off talking to a strong software engineer. Academics don't consider much of that kind of stuff as interesting problems and thus don't spend much time doing or thinking about any of it. They write code to get results to put in their papers -- sometimes numeric results, sometimes a quick proof of concept of some VERY isolated algorithm. Occasionally you'll find a professor who really does keep up with software engineering and understands things, but it's pretty rare in my experience.
It's generated code, cannot edit it.
CLASSPATH. Read about it, understand it. Learn everything you can about it. Knowing you CLASSPATH and how it works is the biggest step to Java nerdvana.
Design patterns and build tools
If you're waiting for a condition to come true instead of iterating over something? Sure sometimes you can go either way, but this is still pretty basic stuff compared to generics or implementing design patterns.
My middle school teachers always told me that it's impossible to put two or more equations together and use the same variable values for both (just like you can in java) got to high school and they began teaching systems of equations. Suffice to say, it was quite an easy class. Tl;dr: learned systems from Java. 
If your school didnt teach you hashmaps you should question your entire education. 
The closest to "industry applicable" knowledge I was taught in school was the basics of the agile programming methods from a dev POV and I didn't even realize there were a half dozen other team members involved until I got a job on an agile team. I didn't learn anything about frameworks, build tools, or deployment tools until I got to work. It would have been nice to have had a head start on learning these things before I got here, but even in the short time I've been here, I have seen programs written using 3 different build tools and 2 different frameworks, with a third framework in plans to be used on the next project. You're right that these things change quickly and picking one to teach would perhaps be a bit presumptuous (maybe the wrong word), but the idea of them is relatively similar and just teaching the basics of what they DO would be extremely useful. Though, I realize most of the people I knew in school just wanted to make games, and who really uses a MVC framework making a game? :-P
&gt; There are a ton of amazing frameworks out there like Spring Framework The Spring Framework is ok, and it does have some very good APIs, but don't limit yourself/your organisation to it. 
So much junk. If I had to name two things in specific I would say object oriented design and junit testing. OO was maybe covered as a day-long lecture, but like, all the assignments would still be one big class. What the fuck? And if you don't write good JUnits you're not a team player.
I think a lot of people working in the industry rely greatly on Google. Don't know how to solve the problem? Google it. Can't think of a better way? Google it. Although it is helpful to have a community out there to help with problems, I think a lot of programmers/developers (that I have worked with anyway) don't even try to solve a problem and just Google it instead. Frustrates me, especially when I work with developers who don't know "the basics" and can't discuss an issue properly to resolve a problem. Grrr.
So with Spring 4, if you have a Spring app you can magically assume that every target stack is Spring 4, even when the stack is an ancient Spring 2 one? Okay, just tried to run some Spring 4 code on a Spring 2 one. Guess what? I didn't run!
Is that something more than JUnit?
Now that is a great question!
If that is really your concern just include whatever version of CDI or any other Java EE library in your application. It is just like Spring except you can actually just grab the Jar file you want without a million dependencies.
G-Unit
Not just JUnit, but knowing how to write a *good* JUnit, and doing it for *all* your code (or at least the non-trivial parts).
So many things that are not specific to Java, some examples. * Source control i.e. Branching and merging * Designing for testability * Unit testing * Coding for readability. Java specific Basically the most common APIs and application servers that you will encounter in the workplace. * Spring * Hibernate * JBoss * Tomcat * Maven * Ant * JPA * JMS 
If you put them as a single statement, absolutely nothing. However if you were to use the value they return, such as int x=i++, then there is a difference. i++ increments i and returns the old value (so if i is 2, i++ will return 2 and the new value of i is 3) whereas ++i returns the new value (so ++i would return 3 in the previous example)
You guys were taught programming in school? 
&gt;my client requires it in my CV
If they are anything like the database ones then it will be really bloody hard. A lot of questions you will have to infer the right answer and only if you know the language inside out can you truly be confident.
Sounds like his employer wants it though; to prove OP is qualified? 
I learned that the garbage collector doesn't run on a regular basis.
I don't have to write getters and setters by hand!?
Is it considered stylistically acceptable to use post- or pre-increment operators within larger expressions?
It just wasn't covered in Grade 11 CompSci. From what I can remember, we mostly focused learning the basics from basic flowcharts to OoP, and some computer history. Writing plugins for Minecraft opened my eyes to a fair amount of things.
Given that symbol tables (maps) and hash functions are one of the most important concepts to computer science I would say his education was a waste of time.
Not sure if sarcrasm, but in any case; for Eclipse it's alt+shift+s -&gt; Generate getters and setters. For IntelliJ it's alt+insert.
Ah that makes more sense I had thought you finished a college degree with no knowledge of maps Kudos to learning by doing with minecraft
Your intuition is correct. You should encapsulate the socket layer of the code so that `Player` doesn't directly interact with it. By doing this, you can use stub implementations that don't depend on a specific transport protocol. Additionally, if you define your interfaces properly, you can have two players complete a game without using a socket connection at all. Mockito is a helpful framework for creating these types of stubs, but you are going to run into trouble when your `Player` constructor tries to create new instances of a class using one of the arguments. Instead just pass in an instance of the communication interface, using that directly in the class.
Just wait when you learn how immutability is often applicable and desirable, and how you fuck up your codebase by inserting getters and setters everywhere needlessly.
Fuck.
I'd love to, but alas I use Glassfish and it's not officially supported (yet). Plus I've found countless bugs when I tried to upgrade to the nightly, anyway. It makes me think even when Glassfish does officially support Java 8 we won't be able to upgrade. 
It wasn't sarcasm. This is awesome to know. The shortcut you gave for Eclipse didn't work on my Mac, but if you right click the variable you can go to source-&gt;generate getters and setters.
Oh ok, glad to help then. As a sidenote, you can right click anywhere. It doesn't need to be on the variable.
There are all kinds of garbage collectors. None of them runs all the time of course, every one of them (even the concurrent ones) requires pausing the threads for at least a small amount of time.
Thank you very much for taking time to look through that mess. Could you elaborate on what you mean by two players completing a game without using a socket connection at all?
I want my testers to be able to break my software. Well, at least capable enough to be able to come up with situations I never thought about testing for. I'm not perfect.
we've talked about this kind of thing at work as well. Having gone through the CS program I understand that its more about theory and fundamentals, all that jazz. But ONE class on software engineering, that would take you through project inception (reqs, design, code, unit test, test, bug fix, etc) to completion, with the whole class, or groups, working on the project like the real world. Forcing good design/programming habits, learning about source control, testing, etc. As mentioned teaching specific tools might not fit, but the ideas are there. Just like (in my case) we never were "taught" java specifically, but all of the courses still used it to teach their concepts. The class wouldn't need to "teach" to the specific tools used, but get across the importance of them, why and how they are used.
Just out of curiosity, can you give me an example where it is important? Maybe there is something I'm missing. I've always been leery of using ++i anywhere because it can be unnecessarily confusing. Other than normal java/c++ tropes like for(int i; i&lt;var; i++) i rarely even use i++ except on its own line. Something like: j = j + i++; This can be hard to spot when skimming through code. Maybe there are some process cost associated with it, but j = j + i; i++; is just so much easier to read and understand.
Part of this is probably just bad timing that the GoF Pattern book and XML were extremely hyped back when Java was growing up and many (me included to be honest) got carried away, there were no limits to what could be solved if you just made sure everything had an interface, a factory, a factory for the factory and add a few layers of XML configuration to set things up. Most of it isn't strictly a problem with the language itself, more a cultural thing I guess.
Also the first time you look back at the code you just wrote, all the little classes full of little methods, and the interfaces Eclipse extracted for you etc, and you realize Eclipse doesn't come with many features to help you *read* that mess you just created using a few key-strokes.
Thanks for reminding me. That was actually the first thing I learned at my first job. Luckily the first thing we got to work on was to rewrite the program to not be like that.
But you can barely write Hello World in Java without having to worry about your CLASSPATH one way or the other? OK, Hello World is possible, but to do much more they have to teach you something about it, or you will pick it up in some lab when you try to debug your code?
Yeah, given how recent this release is, I've only been using it on greenfield and personal projects. It does seem promising tho, and parallel streams with map/reduce is awesome.
Unless your JVM runs fully interpreted that difference gets optimized out when it ends up in a execution hotspot (where it counts).
You don't write new programs, you only fix ~~bugs~~*features* left by others.
&gt;which represents the most significant advance in the language since the 1990s Except, you know, Java 5. 
Also lombok will let you do it pretty easily
Hello xamdk, don't get confused. Sorry if I was not very clear. My intention with the related sample was to test both Hibernate and Eclipselink with Lambda expressions. I know that this post is related to Hibernate, so let's talk about it. I didn't find any problem with Hibernate and JDK 8, even using Lambda expressions inside the JPA entities. I am using the following artifact: &lt;dependency&gt; &lt;groupId&gt;org.hibernate&lt;/groupId&gt; &lt;artifactId&gt;hibernate-entitymanager&lt;/artifactId&gt; &lt;version&gt;4.3.5.Final&lt;/version&gt; &lt;/dependency&gt; Thank you.
&gt; H2 is an all java in memory database similar to HSQL. Actually, it's not an in-memory database by default, but it does have that as an option. I use it for temporary storage of ~3m rows of data, on disk. It's an amazing little DB engine, performance is so much better than sqlite (for example).
Humbly disagree. As someone who has hired many a developer, I can tell you that a recently certified developer definitely is more likely to get a call. It communicates succinctly "understands java". When I decided to go back to slinging code, I went directly out to get my cert and it indeed helped to unlock many a door. When next I jump into the job market, I'll upgrade my cert. To OP's question, learning style is most important. Recognize if you're a classroom, book, or video learner. I found grabbing a book and writing a stack of flashcards helped me with the trivial errata. 
Self-taught :)
You would be surprised (maybe not) how many Java students on Stack Overflow find out about the class path when they have to add an image or an external JAR to their project.
I know about generics, but what were some other improvements?
Generics were probably the single biggest change, but Java 5 also added: - Enhanced for Loop - Autoboxing/Unboxing - Typesafe Enums - Varargs - Static Import - Annotations
Do certifications help you win freelance work?
I got a certification a long time ago and I agree. I was looking into getting a new one, I find that the questions are trying to trick you, they do not make you a better programmer. They make you look into features you may not have looked into by yourself if you don't need them, but the questions are horrible. We live in a time where the IDE will take care a lot of the basic compile time error, let's not test whether a programmer could code in notepad.
&gt; professors aren't even capable of teaching these things because they've been out of the industry for years. Most of my professors where never \*in\* the industry...
Cool, that looks awesome.
Os x has more readily-available modifier keys (shift, control, alt and command), which makes many of the shortcuts in IDEA more pleasant. I don't think the Linux version uses Super/Hyper, even though they're supported by the environment. On Windows, Windows key seems to be mostly reserved for system shortcuts and the keyboard shortcuts require more chording.
While Linux is the best OS for almost all (see .NET) development, Java is actually pretty good at making development not horrible on Windows, so for this case it probably doesn't matter. I use IDEA 13 btw.
Used to use Win7 and Eclipse (with a dash of Netbeans/IntelliJ and Notepad++) on a company notebook. When changing jobs, I got free choice of OS, so I choose Lubuntu (and replaced Notepad++ with geany). Works like a charm.