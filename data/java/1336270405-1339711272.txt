Spring MVC. Its all annotation driven and very flexible.
Spring MVC is very flexible and stays away from the front-end stuff. There's spring based tags you can import and use, but it's all optional. 
why would you want to get this hardware, and waste it running some java crap...
what's wrong with struts? the backend, 'xwork' i think its called?, is surely presentation-neutral... it depends what you expect from a framework - Spring MVC, for example, excels at giving a flexible *foundation* for a servlet-based app. If you like javascript, take a look at something like extjs... 
&gt; This also mean your data is always loaded asynchronously, which is not the best thing What's wrong with that? Unless you need your web site to be indexable by search engines...
Might I recommend some example code to go with the jar: http://arduino.cc/playground/Interfacing/Java
Yes, but generally speaking GWT controls the front end for you and OP mentioned "I'd like to avoid a framework that tries to write the frontend code for you.", I'd say springMVC + jQuery would be his best bet. Then some jackson integration for JSON an hey ho - web app.
I think JSF 2 with Java EE 6 is one of the best MVC frameworks around. There are other good choices, but it's hard to go wrong with Java EE 6. At any length, it's the basis most other (web) frameworks in Java are build on, so getting to know it if you're starting with Java is absolutely the recommended thing. &gt;I'd like to avoid a framework that tries to write the frontend code for you. JSF might be one of the best choices than indeed. Like all web frameworks it abstracts certain things for you, but you are still in control and you're still writing HTML pages. This is in contrast with frameworks like Vaadin and GWT, who try much harder to give you the "desktop experience" and attempt to hide HTTP and pages (request/response) completely for you. This is a very basic getting started example for Java EE 6: http://jdevelopment.nl/minimal-3tier-java-ee-app-xml-config A somewhat more extensive example is this one: http://balusc.blogspot.com/2011/01/jsf-20-tutorial-with-eclipse-and.html followed up by this: http://balusc.blogspot.com/2011/09/communication-in-jsf-20.html A complete CRUD example can be found here: http://jdevelopment.nl/sample-crud-app-with-jsf-and-richfaces (the code can be see at http://code.google.com/p/javaee6-crud-example and a live demo is here: http://javaee6crud-beginning.rhcloud.com). I also blogged about a CRUD example. Although its main purpose was to contract with another implementation, it might still be useful by itself: http://henk53.wordpress.com/2012/04/15/jsf2-primefaces3-ejb3-jpa2-integration-project
Ok, so it's not a solution suitable to your needs :)
Too bad Play has become a Scala framework. If Scala is your thing, sure, but if you're into Java forget it.
I would advise you to go with JSF 2 and PrimeFaces. JSF 2 is the best MVC framework at the moment and PrimeFaces is the best component set for it. A winning combination! Your jQuery knowledge would also come in handy, since PrimeFaces uses a lot of jQuery for its components.
Thanks a lot! :) I didn't know about /r/reviewmycode I'm still new here.
Maybe Apache Wicket? I started 2 months ago and love it.
Yes! :)
Wonder what made you consider Stripes. It's not really used a lot and you'll have a hard time finding help and other developers to join you. IMO the actual View part of Spring MVC has always been piss poor. Now that they've adopted Thymeleaf it's arguably a bit better, but nowhere near the richness you'll get with JSF 2. As far as templating goes, Facelets (from JSF 2) is just an overall better solution. JSF 2 also has lots of third party components available (PrimeFaces, RichFaces, IceFaces, Trinidad, OmniFaces, etc), and creating your own (via composite components) is a breeze. 
There doesn't seem to be a reason to pass capacity to fillWithRandom. just use array.length
I've used Stripes in the past and liked it, but it's a pretty niche framework so I'm hesitant to use it here. I agree that Spring MVC is pretty bare bones, it's really better as a platform for other MVCs to build on.
Do you play a hunter?
omg you saw the small shot pouch in my bags? freaking holmes
I also make out distracting shot volley (maybe)arcane shot on te actionbar Also I've played way too much wow
lol you can see through the icons on my toolbar? impressive. haha
Well only cause I knew what to look for
Just use some jax-rs implementation as a backend for... say backbone.js. Super lightweight. Rest backend don't care about JavaScript(or Coffeescript) frontend in any matter.
Play is really just Scala respin of good old Rails(and maybe Stripes, Struts and Spring MVC) with some syntactic sugar :)
i guess these are not able to locate the files you ask for, check for null.. theme = Applet.newAudioClip(getClass().getResource("images/theme.mid")); laser = Applet.newAudioClip(getClass().getResource("images/laser.wav")); bang = Applet.newAudioClip(getClass().getResource("images/bang.wav")); i.e. if(theme == null){ System.err.printf("cannot find theme music.."); System.exit(1);} or something similar.. when you say: theme = Applet.newAudioClip(getClass().getResource("images/theme.mid")); the file `images/theme.mid` have to be placed below the directory where your source-file is located inside the zip/jar file, if you put them all in one directory before you zip, you can access them using the filename, since `getClass().getResouce()` will return the directory of the `.class` file i think..
I can put it on mediafire or something, or if you pm me an email, I can send you all my files. 
ok i'll do that
Variable naming just takes practice and experience. And in modern IDEs renaming is super trivial. So knock yourself out! :)
&gt; I still need help on my checkCollision if anyone is able. First, a few general suggestions: - Your `getBullets()` method's return type could be better. Instead of `ArrayList&lt;?&gt;` it should be `List&lt;Bullet&gt;`, or perhaps `List&lt;? extends Bullet&gt;`. This suggestion comes from two rules of thumb: First, avoid using concrete collection types anywhere except when actually allocating -- fields, parameters and return types should be interfaces. Second, using `?` (or `Object`) for a generic parameter and then turning around and casting (as you do when you call `get(i)`) is usually a sign that your type parameter could be more specific. (There are cases this isn't true, but I'd be surprised if a method called "getBullets" was ever supposed to return a collection that contained non-Bullets.) - Avoid using meaningless variable names. In *really* short functions I think it's okay to use meaningless names like "x", and I generally think "i", "j" and "k" are okay for loop counters much of the time, but this is kind of absurd: Bullet m = (Bullet) bullets.get(i); Rectangle m1 = m.getBounds(); Even "b" and "r" would be better than "m" and "m1". - Use new style for loops when you can. For example, instead of: ArrayList&lt;?&gt; bullets = Player.getBullets(); for (int i = 0; i &lt; bullets.size(); i++) { Bullet m = (Bullet) bullets.get(i); do this: for (Bullet bullet : Player.getBullets()) { If you follow either of those last two suggestions you'll probably discover some bugs in the second loop. Basically, every place you use `i` after line 143 looks suspicious. `i` is your counter into the bullets array, yet you're using it to index into `baddies` (and also `rect`, which parallels `baddies`). I'm pretty sure you want to have a second nested loop to loop over "baddies". As an aside, this make your routine O(n^2). There are tricks you can do to improve this, though don't bother investigating those until after your code is working and even then only if you actually discover that the brute force approach has unacceptable performance.
No, they're not.
Rather, pass the Random instance as a parameter. That way you get deterministic use in test cases.
Good idea! Personally i would use a separate package-visible constructor for that, edited!
I've done that, new errors, it wont let me paste my entire code its only placing some in the coding area.
Fixed, thanks ! Eerrrors on line 8 and 16.
Your switch block will give a compiler error because it is unreachable code. Your try/catch: try { return valueOf(str); } catch (Exception ex){ return NOVALUE; } returns from the method no matter what, so it will never, ever get to your switch statement.
So delete it completely? What do I do?
I don't think you understand what I need to do. I need to take what they enter and make it equal to a number given to the colored. I'm not displaying anything yet just creating data for later math. I just want the user to enter a value and the program understand the string.
You don't need a break after every `case`. Switch statements work differently than other branching statements (like if). The `case`s look like independent blocks, but they're not. Each case is a "label". When the program enters the case statement, it jumps to the first label which matches the given value, then it executes every statement until it reaches the very end of the `switch` or it hits a `break` or `return`. Here's an example (I'm going to use numbers instead of colours here): switch( VALUE ) { case 1: System.out.print( 'a' ); case 2: System.out.print( 'b' ); case 3: System.out.print( 'c' ); case 4: System.out.print( 'd' ); case 5: System.out.print( 'e' ); case 6: System.out.print( 'f' ); case 7: System.out.print( 'g' ); break; case 8: System.out.print( 'h' ); default: System.out.print( 'Z' ); } In the case where `VALUE = 3` it will print this: `cdefg` It starts at case 3 and keeps going until it hits the break in case 7. In the case where `VALUE = 8` it will print this: `hZ` Make sense? Because `switch` statements are so unusual (they have many of the same problems that `GOTO` has), you should limit your use of switch statement as much as you can. Normally whenever a switch statement is used, you can replace it with polymorphism.
Instead of telling us the lines your getting the errors on, tell us the exact error that you're getting. Also, as obvious as it sounds, Google the error message you get - you won't be the first person in the world to hit the issue, and in real-world programming Google's an invaluable tool.
Both the Mojarra and Myfaces implementations are really good now. What are you missing in them in terms of implementation?
In that case, just do SpringMVC with Thymeleaf. It'll be a LOT simpler. And JSF only *pretends* to play nice with Spring. You'll lose lots of JSF2 features because you'll need CDI for some of the scopes and so on. Or you'll have to put Spring Webflow, which will be kind of overkill.
Just search for "World Wide Wait" on devoxx and see if both are really good. Particularly myfaces.
It shows some interesting things indeed, especially that JSF is faster than Wicket in nearly all cases (despite popular claims made by Wicket fans that Wicket is faster), and that JSF is faster than GWT as long as the server is not saturated. The GWT comparison in a way doesn't really measure GWT itself, but just the server-side machinery (which is comparable to JAX-RS), and doesn't put any emphasis on post-backs, or in general sending any kind of input back that the user provides. The particular version of MyFaces that was used shows some performance degradations for sure under high load, but a number of them has been addressed since. It's not as if any of the other frameworks don't have issues (related to performance or not). A team I work with uses GWT (much to my dismay, but that aside), and they complain a lot about bugs that are open for a long time and doesn't get any attention from Google at all. Even worse, they deploy it on GAE which has thousands of open bugs and feature requests of its own that don't get any attention either. tl;dr; JSF implementations have bugs, just like any other web framework. 
No idea what your saying :( My teacher doesn't really help us, he just gives us work. This is the only place I can ask questions. I learn my people helping me with my mistakes. Because the learning environment is not present in my class.
Apart from the fact that you won't be a second class citizen, isn't learning Scala one of the best investments a Java developer can make?
This seems like more of a ICEpush/Vaadin problem rather than Java specifically. Try their forums/irc?
Forums didn't get any replies or irc. I was hoping to maybe catch someone else who had the problem. I think I'm just going to solve it by having the logout also close the browser window. Its a hack but o well.
If more and more of the idioms in the framework take advantage of Scala features, then eventually a Java programmer will be a second class citizen. Even if not done on purpose, then it's just a matter of fact. Scala IS a different language. If you use Scala with JSF today, then Scala is the second class citizen. There are some very interesting examples out there (do some googling) of how Scala can work together with JSF, but since the framework itself is strongly Java based you'll have to write tons of little bridge utilities that make it feel more Scala like. &gt;isn't learning Scala one of the best investments a Java developer can make? Apart from the fact that learning almost any extra language can be a good investment, this may be seen as insulting by some. By the same token, would you say that learning C# is the best investment a Scala programmer can make? Or is learning PHP the best investment a Scala programmer can make? What about VM languages then, is Clojure or Groovy the best investment a Scala programmer can make? Or is Scala the top-of-the-bill and does it only pay out for others to learn Scala? 
I don't see how J2EE, and Glassfish, will be affected by the Oracle/Google thing. Oracle may get a cash settlement. It's not going to stop development of Java. 
 numplayers = scan.nextInt(); int[] score = new int[numplayers+1]; Creating the score array as shown lets the rest of your code proceed further.
This won't affect you as a user of Java in any way. The only exception could be if developers started migrating to other languages because they have the same fears that you have. The Oracle/Google-case is, the way I understand it, all about the implementation of Java on Android. Google decided to only take parts of Java when creating Android and so created a product that competes with Java. They copied the syntax and API but made their own compiler/bytecode and VM, meaning that the compiled classes can't run on a real Java VM. So unless you are thinking of creating a new language and just copying Java's syntax and/or API you shouldn't have anything to worry about. 
Please, don't feel dumb! When you've been struggling with fixing some code it can be easy to overlook the simple things. I think it's a form of "blindness" where people will naturally tend to focus on the trickier parts of the code and skip the "simple" parts. Also, glad to help! :) 
Easier because if you had an array of Player and each value had a subclass of player, you would be able to still call the method evaluate, and it would run that subclass' version of the method. Extremely useful stuff. 
Yes, I noticed that when I was looking up examples of other people's work. My teacher is really bad at teaching java, so my classmates and I are always so confused with the assignments she gives us. I understand it can be difficult to teach so I don't hold it against her. It's only my first semester with it so I know I'll get better.
Try and think of it as more of an "is a" relationship. Say we have an abstract class Shape. It has abstract methods calc_perimeter() and calc_area(). Different shapes will calculate perimeter and area differently. So if we have Circle extends Shape, and Square extends Shape, we can have both Circles and Squares in the same list. ie: ArrayList&lt;Shape&gt; shapeList = new ArrayList(); //add different Squares and Circles to the list //calculate area for each shape. for(int i=0; i&lt;shapeList.size(); i++){ shapeList.get(i).calc_area(); } shapeList.get(i).calc_area(); will get the i'th element of the list of Shapes and call the calc_area() method. Shape.calc_area() is abstract though, so during runtime, it checks to see if the i'th element of shapeList is a Square or a Circle or whatever and calls the appropriate calc_area() method, whether is be Square's calc_area() or Circle's calc_area();. Do not use it as a debugging tool, I want all shapes to have calc_area() and calc_perimeter(), so don't even leave it up to chance, force it to be implemented. A circle 'is a' shape and a square 'is a' shape, but they calculate certain properties differently. A method should be abstract if all subclasses will use the functionality (like calculating an area and perimeter), but the means to do it are different in each subclass.
Alright. This makes a lot more sense now. Thanks!
The Play developers provide an idiomatic Java API for Java developers. If you encounter yet-unknown missing functionality I guess the Play devs will be glad to get your bug report. Apart from that ... isn't a Java developer already a second class citizen by the mere fact that his main tool is still stuck in the 90ies, while we currently have 2012? I think Play developers can't be blamed for that. I'd say having a look at PHP makes sense as a strong negative example on how not to do things. Apart from that, http://me.veekun.com/blog/2012/04/09/php-a-fractal-of-bad-design/ applies. Clojure is worth a look too, but Scala already took most of the good parts, see http://clojure.com/blog/2012/04/19/take5-daniel-spiewak.html. So it really depends on whether you like Lisps. Groovy isn't that worthwhile imho ... they still lack crucial parts like a language spec and I don't see a lot of development or progress happening there. (Yes, there has been the Groovy 2.0 stuff and the added static typing ... but seeing the glacial speed of development I really wonder how much people still work on the language.) It is certainly weird ... the language was created when dynamic typing was still cool and now they basically try to go back to static typing as much as possible. It feels like a solution looking for a problem. C# is interesting because it shows how hard it is to add functional features to an imperative language while still trying to be reasonably backward-compatible. Apart from that, it is really a kitchen-sink language. Every feature seems to have at least three different implementations with slightly different semantics. I can suggest looking at Haskell which makes one a better programmer, regardless of the language. Additionally, this is the language everyone gets a lot of his ideas and features from. Another suggestion could be F#. F# is a bit like a remote cousin of Scala running on .NET. While I prefer Scala's language design, the better unification of OO and functional paradigms and the seemless interop with Java, F# is backed by Microsoft and supported officially in Visual Studio. If Java developers want to stay competitive with the offerings of .NET (and the rest of the non-COBOL world) I frankly don't see much alternatives to learning Scala. I hope I could help a bit.
Read axlor's other post.
An abstract class has one or more methods fully defined, while an interface has only method signatures (no method bodies.) Subclasses can *implement* as many interfaces as they want, but may only *extend* one abstract or standard class.
As far as practice tests go, Google is your friend. I am taking it tomorrow as well, but my teacher had me take a full previous exam earlier in the year so I could test out of the actual AP class. I can tell you that the tricky things are short-circuit evaluation, recursion, and pass by value versus reference. Recursion is probably a little late to be getting in to if you don't already know it, but the other two I would definitely recommend reading up on. Also, the GridWorld case study is featured in a few free-responses. Our teacher said that the cutoff for a 5 was at about 68% though, so you needn't worry too much.
God damn do I hate grid world!!! There is other stuff I would so much rather be learning. But yep there will be 5 multiple choice on grid world (out of 40 total M.C) and 1/4 frqs will be grid world. 
Your question is not really specific enough, but start with running tomcat. http://tomcat.apache.org/ 
To be honest I've never done this before, and I've only had some experience with glassfish (which im not sure if that applies here)
glassfish is a full blown application container instead of just a web-container. Meaning it comes with all of the Java enterprise stuff, as well as web stuff. What do you want to do? Why not start simple and focus on the web? Pick a web container. Most likely you'll want Jetty or Tomcat. Then learn about servlets and JSPs (I'll assume you understand HTTP). If you really want to learn about java and the web, I would suggest staying away from frameworks until you understand servlets. Most frameworks are built on top of servlets and filters, so how could you really understand the frameworks, if you don't understand what's going on underneath. 
GlassFish is fine. Any servlet container/app server will probably work, and the vast majority these days end up embedding Tomcat anyways. I'll assume you know how to run glassfish standalone (i.e., not inside your IDE) and deploy your projects to the server. You'll probably need to set up some port forwarding on your router to get incoming requests sent to the server, and you're done. Send http://&lt;your IP address&gt;:8080/&lt;path to your project&gt; to friends and family and see if they can access it. Your home IP is probably portscanned numerous times a day (mine certainly is) so be careful deploying something to the root context, as people will find it and mess with it. They may find other stuff you deploy too if the path is easily guessed. If memory serves, glassfish allows applications to be deployed from the console, by uploading .war/.ear files. It would obviously be an enormous security hole to allow the outside world access to the admin console, as they could deploy whatever arbitrary code they wanted. The admin console is (I believe) on a different port, so don't forward that one. And don't use a weak password, just in case.
Do you still have to do that stupid GridWorld thing?
Eh. It's not so bad. I sort of had fun with it. Made a portal class so that my bugs could teleport. The key is to get away from the boring stuff classes have you so and make it interesting.
Are you supposed to memorize the methods or just understand the gist of it?
GRIDWORLD
IANAL, but the way I see it, if you are developing an API, and if APIs are ruled to be not copyrightable, competitors can reimplement your API and the consumers of your API could move to those competitors at zero cost. But if this API is consumed in-house, there should be no problem. I don't see this case as having a chilling effect on alternative languages. It will however have chilling effects when using unlicensed, alternative implementations of APIs (Harmony and Wine would be probable victims). 
Great job. For an added challenge you could try and figure out a way to score the aces correctly. I struggled quite a bit before I found a solution to that particular problem.
What are you trying to share - desktop applications that are written in Swing or SWT, or Web applications that run in a browser and use Java on the server side? If it's just desktop applications, I'd go with [Apache *httpd* ](http://httpd.apache.org/) and use Webstart to package your applications. Webstart doesn't need a web server that runs Java, and *httpd* is a lot easier to set up than most Java-based Web servers. If you're talking about Web applications, I'd set up Apache *httpd* and modify the config to pass some requests to [Tomcat](http://tomcat.apache.org/). That gives you the best of both worlds and there's a ton of documentation on that setup.
Java Web Start is a system to run java applications from a browser without having to install anything but a Java runtime. Java Webstart files can be served from any Webserver that can serve the inital .jnlp file that initiates the app as "application/x-java-jnlp-file". Then there are servlet containers. The Servlet API is the Java standard for serving websites. The user of such a website just needs a browser. (Examples for a servlet container would be [Tomcat](http://tomcat.apache.org/) or [Jetty](http://jetty.codehaus.org/jetty/)) Glassfish also contains an servlet container but is more than that. It is a so called Application-Server which is meant to run larger, maybe multiple-systems involving java applications. Unless your hobby is toying with such architectures, you don't really need an application server.
&gt;but didn't matter at all anymore for the rest of the world. OMG... not another Java is the new COBOL debate please. In 2002 COBOL was already completely gone from all popular literature, news and articles. Java on the other hand is still the talk of the day everywhere. There are big announcements of companies moving towards Java (Twitter, Facebook, the Dutch Marktplaats which is owned by Ebay and many more) and you'll find articles, news etc being posted about Java daily. &gt;but didn't matter at all anymore for the rest of the world. Which "rest of the world" are you talking about then? Those few Scala and Clojure developers have yet to make a dent into anything. The only languages I see massively gaining in popularity are C# and Objective-C. Amidst that the C language remains as strong as it ever was. C# is surely nice. It started as an almost perfect Java clone, but has since wandered a bit in its own direction. Almost by definition, everything that's in C# can be added to Java, since this is exactly how C# has evolved. With Java getting lambdas that are based on the C# implementation, they will be a bit closer again. As for Objective-C, it's an interesting language, but as Mike above points out it's not chosen for its modern features but because it happens to be the default language on iOS. As you probably know it's much older than Java and has barely evolved (ARC is a recent addition and is rather nice though). I think there's hardly any discussion on C's modern features and age necessary. So this supposedly huge amount of people making up "the rest of the world" that are flocking en masse to whatever new language is hyped today, sorry, but I think that's nothing more than a pipe dream.
That's not true. Of course JSF does scale! We're doing this all the time. Scaling means you can add another server as your load increases beyond that what a single server can handle, and then with the extra server you can handle more load. **This works perfectly with JSF.** What the particular benchmark mainly indicated is that with GWT a single server can handle more requests of the kind that the test uses before it saturates, simply because a part of that load is on the client. Individual page response time as experienced by the user is correlated to that, but as the author mentioned, the comparison is not completely trivial as for the full response time you need to **take the client rendering time into account**. In GWT this can be significant, as at some point the abstract data in JSON or XML format needs to be transformed into HTML and/or DOM operations and with GWT this happens at the client. So for the user experience, and that is really all that counts in the end, GWT can be much more sluggish with a slower response time than JSF, even though your server-side monitoring tools say otherwise. And again, the benchmark did not put any particular emphasis on postbacks. Requesting data from a JAX-RS or Google-RPC service is one thing, but posting it back, processing it, validating it etc quite another. With JSF you have a trivial protection that what is not rendered can not be posted back, closing an entire subset of security problems. By calling web services from the client, YOU have to manually do this. Or you could of course not do these kinds of validations and claim superior performance, but be open to various attacks. Pick your poison. &gt;Tell that to Twitter, Facebook or Amazon. The thing is, we're not all Twitter, Facebook or Amazon. We use JSF 2 for our public site and this gets thousands of hits on a single box, yet the load is barely any to speak of and pages get served in mere milliseconds on average. You really would have to be Twitter indeed to get into the range where this stuff really is going to count, and is Twitter using GWT? 
I think a lot of people will recommend Tomcat, but I actually find Glassfish to be easier to use (in addition to being more feature rich). So if you know how to use Glassfish, you might as well keep with it.
Hmm from what I've read in this thread, it would appear that Glassfish is a much bigger picture so maybe I'll do some research on Tomcat just to see what its like. Thanks!!
Will definitely do that, thanks! 
Thanks for the tips!! I'll be sure to use that instead :D
Definitely something to consider on this, thanks for lending me your brain!
Like SavTheCoder pointed out you should create a new class for storing each line as an object. You should then create a custom compare function that returns the order of two individual objects and then use this in your sort function.
Sorry, I assumed from your question that you did not already have an app server running. Yes, any servlet container would be fine, if you're looking to run servlets.
Does your assignment allow you to use the Comparable interface?
Maybe a LinkedHashMap with the keys being the names and the value being a List&lt;Integer&gt; object? 
He can't use Java's built in methods for sorting so that wouldn't work foe him.
Theres no value because the use hasn't inputed it yet . ugh im so lost. what can i do?
Also, if somebody says that the first band it colored "shut up you can't tell me what to do" then it would fail in the same way, even with correct string comparison.
You can't compare strings in Java with "==", as this only compares if the two object references point to the same String object. Also, whenever you want to access a variable, it must be declared AND initialized(aka not null). You declare band1, but never assign a value to it.
got it !!
All I had to do was put band 1 = 0. got it all working
Actually, they can learn about the Comparable Interface and implement their own (e.g.:) bubble sort using the compareTo they just built...
Well the way im doing it at the moment is getting the ascii value of the first letter of the name, then i check if one is greater than the other, if it is switch them. So if they equal each other it wont switch. Im using a selection sort for it.
Arrays.sort(Object[]), done!
If Java is a beach, OO is the bucket you use to build your sand castles. Design patterns would be the features of most sand castles have in common. You won't necessarily use an interface, abstract, and concrete class for everything. POJOs are a good example of a case when you don't really do that. Using interfaces inside your own code make it easy to swap out implementations of functionality. Take java.sql.DataSource for example, there are probably hundreds of implementations of DataSource to interact with different SQL databases. Some of those implementations will be based on an abstract class that implements DataSource, some won't. It just depends on the scenario. I mostly use them DAOs and similar "services". Use interfaces when you know *what* you want and don't care *how* you get it. For example, with a DataSource you might want a ResultSet, you don't really care how that ResultSet came to be.
&gt;Of course JSF does scale! We're doing this all the time. Scaling means you can add another server as your load increases beyond that what a single server can handle, and then with the extra server you can handle more load. Hum... Ok. So you spend more money on servers just because you want to use the cool new Oracle framework. I suggest you never let your boss see this thread. Again, you "forget" to mention SpringMVC. With SpringMVC you get all the same functionality as with JSF with even *less* slugginess then JSF and better scalability.
I don't think oracle will be able to patent the language. I would keep on learning java, once you've got a good grasp of it other OO languages will be easy to pick up.
JSP is pretty much legacy technology now, new projects rarely utilize it. Get "Head First Servlets and JSP, Passing the Sun Certified Web Component Developer Exam" by K. Sierra. Chapters on JSP, Taglibs and EL can be understood without extensive Java knowledge. However you should have some experience in Java to start doing web development. Otherwise it would be hard, because JVM and application servers might be tricky to debug.
"What if Oracle wins the case, and are able to patent Java." and in Europe it has recently been [ruled that you cannot copyright a programming language](http://www.groklaw.net/article.php?story=20120502083035371) 
It's funny how right you are. I was really making a big deal out of nothing. It was surprisingly easy.
Wow that test was easy. I can't believe a 5 is 68%...
&gt;Arrays.sort(Object[]), done! Except for this little sniggle from OP: &gt;note, we are not allowed to use javas own sort method, we have to make our own Still, a bubble sort after you've already implemented compareTo should be simple. Ain't abstraction grande?
If Oracle wins than Google will have to pay a license fee. Oracle will be a little richer, Google will be a little poorer and the rest of us will continue to live our lives.
The boss is concerned with many factors, not just server load. He first and foremost looks at what the customer is getting, and the total time this customer has to wait from click to rendered response includes time spend on the server and time spend on the client. For quite a lot of use cases this can be better for JSF than GWT. The boss is also concerned with developer productivity. The majority of companies never deploy more than a dozen servers at most, and just a few servers is quite typical. Buying this one or two extra servers for 10k each is peanuts if this is needed to increase developer productivity. But for the majority of real business applications, it's not the web layer at all that saturates a server and it's not the web layer where most of the time processing a request is spend. These are the business layers and the database respectively. Compared to many web frameworks, JSF is absolutely not slow, and in fact it's faster than Wicket, Grails, RoR, PHP and Play for instance. Still people build sites in all of these, even in PHP which in its plain version is not rich at all and comparable to bare bones JSP. And Spring MVC will not give you the same functionality as JSF 2 does, not by a long shot.
&gt; But if Oracle wins this case, what does that mean for all of us? This means war ...or faster and fully compatible Java SE/JVM on Android platform ;-)
Oracle has done lots of great things for java by investing a lot of resources into it and keeping it free. Google on the other hand has also done some nice things, like creating window builder pro. The effect of this case will only hinder Google's generosity to the project, but with the extra cash oracle might just put it back into java. In the end for us we will see no real difference. 
My friend is in the same room as I am while he is in AP comp sci (I am in a work-solo kinda class) and to this day, he doesn't know shit about java, the teacher at my school knows his stuff pretty well, but he doesn't teach anything. Naturally I'd like to assume preparedness is based more on the teacher, and attention given, than just sittin in a class. 
window builder pro wasn't made by google, they bought the company that made it. Anyway, there's no chance oracle is going to win
The majors will reach a co-licensing agreement quickly, as they have in the past. They're not the ones that would be affected by this so much as smaller companies (like mine) that make a business out of creating software that integrates with external systems.
You know, once upon a time, companies would take good people and invest in them because good people are harder to find than skilled people and even if you train up someone and find out they they aren't going to be quite as good as your ideal, at least you know they won't screw you over. Really, all it takes is someone hungry for a little success who can think; most of us aren't doing rocket science after all. Give someone like that that hasn't had many or any chances for advancement a chance, and you may have some serious talent there. They win a new marketable skill set and you win some employee loyalty for a while. Just a thought... but seriously, we're in the same boat here in MN and I really can't stand all the whining employers do; even my own. They want employees to take all the risks, do all the education, take all the classes, accumulate all the debt, and then MAYBE, just MAYBE they'll let you into their little club of developers they like (and god help you if you need a visa these days). Really, it's just too much to ask and I suspect a lot of talent just votes with their feet. But hey, why should I complain? I'm already "on the island", and the job security is nice!
I think your main problem is that you are not describing the company and the role very well. List of skills should come last and it's more or less just a sanity check so people who are not qualified don't apply. But unless you are well known sexy company people know about you will have to spend some time explaining who you are, your culture, your people, your physical environment, your tool chain, how much creative freedom people have etc. In fact this should be the majority of your job posting. You need to sell yourself to the top 1%. Great people want to work on interesting/hard problems with other great people. The money and benefits are more or less assumed, but some great people are willing to work for less if they can be surrounded with other great people or if the problem is really interesting to them. 
That's probably true; sad, but true. I prefer to imagine the scenario I painted instead. :)
If I just saw the listing I'd assume it was some headhunter looking to pad his resume portfolio without having an actual position lined up yet. 
Two suggestions. 1) Find yourself an open source project and contribute some bugfixes or add a feature. 2) Learn other languages. Learning new languages contributes to better understanding of all of them.
"For the past year I have really struggled to find decent Java developers in the Baltimore/DC area. " I hate the whole "good developer" thing. It is very subjective. At least from what I have seen, hiring managers should put out a job posting that captures many aspects of the actual job. Mention the technology used at the company. Describe the environment. Go into an amazing amount of detail, maybe even mention what version of the software you are using. The whole generic programming thing is a flawed strategy. Edited: OK I looked at your job posting. It is very specific. http://www.reddit.com/r/forhire/comments/tdqj0/hiring_javajava_ee_software_developer_engineer/ Go to real-world Java programming groups. Most people that try to find time on the weekend for a Java job normally have a strong interest in the technology. Notice if a person shows up more than once. Are you being too critical? And disqualifying them because they aren't 100% getting your questions right. Java takes a deep memory to remember all of the Java API and what not. You might go over abstract concepts and match them with a specific Java concept. Virtual Machines, garbage collection, stack vs register machines. And if they aren't Java savvy or demonstrating that they are Java savvy, can you get a feel for how component they are. 
Why would the top 1% go to this person's (her?) company. I would say seek out people that are fluent in the technology that the company uses.
&gt; good compensation will keep him there. Nope. Good compensation gets the butt in the seat. What will keep him there is opportunity to grow/challenge, recognition, respect, and properly balanced work environment that doesn't burn people out. Sorry to nitpick, but that's the facts.
People do this?! UGH! I just graduated and I'm already starting to not like recruiters. 
I believe that most of the "good" java developers don't apply to a lot of job listings because of the requirements. Companies have a bad habit of making every IT job require a virtual hodgepodge of different technologies, frameworks, methodologies, tools, etc. The average developer only has enough hours in a day to become "good" at about two or three things. I know for myself and many others I've talked to, a lot of requirements fall into the category of "I know what that is. That's about it." I wish other professions worked like this. I would love to see a listing like, "WANTED: Car mechanic. Must have 7+ years of experience repairing Ford Model T's, hybrid-electric cars, a M.S. in structural engineering, and must be learned in interpretive dance." That's about what I read from most job listings I come across. Another thing; Good talent demands a high salary. 99% of "good" developers are all happily employed with competitive salaries. Either keep looking for a diamond in the rough, or offer some incentive to lure the talent of other companies. If you're not willing to pay, you're going to have to play the hit-or-miss hiring game.
Lack of details usually gives it away. This listing doesn't even have the company name. Most of the time when the company is looking to hire direct, they'll make themselves known and expect you to have at least looked at their website. Recruiters, on the other hand, have an interest in keeping the company name hidden to keep people from applying direct (assuming there is an actual position). I'm not saying this guy is a recruiter, just saying the listing has that feel to it.
All us good devs have nice challenging jobs with competitive salaries and benefits. And really what you want is someone that can learn quickly and is dedicated to the craft of software engineering. Not just a code monkey. We've had similar problems here in NC because of this. The truly good software engineers are at a stable job where they can grow and learn and be challenged. Everyone else just bounces from job to job because they don't really care. 
I really don't understand why they're so desperate to get resumes that they have to trick people. Seems like if they did their jobs right people would be happy to give their resumes up. 
Let me help you out a bit. To preface, I've got about 10 years of professional development experience, with varied languages. I've worked in startups mostly, from 8 people up to 100. I'd pass your listing over. First, you ask for 2-7 years of experience. This is code to us developers as "we're not going to pay you a lot, since we're classifying this as a junior-to-mid level job right off the bat." You say mid-to-senior, but you just aren't a mid-to-senior developer with 2 years of experience. That's a red flag. Then, this is how we parse your description: "Candidate must be a highly motivated" (willing to work lots of overtime. No family people here!), "self-starter" (we don't have competent managers) "who thrives in a small team environment." (we aren't going to hire testers or IT personnel. Also, you'll be carrying a pager.) "The candidate will be responsible for leveraging cutting edge technology" (we are going to bite ourselves in the ass with the latest cargo cult trend, and then have to put in some long hours to dig ourselves out) "to develop mission critical public safety systems." (government involvement. bureaucracy, documentation requirements but with a small team environment meaning you'll be writing a lot of it, code auditing, and service contracts for problem resolution. Remember that pager thing? We weren't kidding. Also, cut-rate bidding on projects means tight deadlines, corner cutting, and a lot of up-front planning and specification writing with onerous spec change processes. Which conflicts with the scrum/kanban description) Then, in your requirements, you ask for java, java ee and spring, jms, activemq, rest/web services, lucene, solr, jsf, ajax, jquery, html, css, javascript, ci and deploy system management, and several scripting languages. I have more than 10 years of experience, I'm compensated quite well, I'm a senior developer in almost every sense of the word, and while I know most of that, I certainly don't know it all. You need to pick the 2-3 biggest things and make those the requirements, and then list the "nice to have" things. Is JSF really such a big deal if I'm more familiar with spring mvc or tapestry? Or what if I deal with ajax applications with backbone/spine, jackson, and resteasy? Lastly, what's the draw? Why would I want to work on this project? Java EE/EJB sucks. There's message queuing, but no indication if it's for scale reasons or because it was overarchitected. There's all this architecture, but no talking about your challenges. Too much data, data is too complex, data needs a ton of processing, whatever. I want to *solve something hard*. I don't want to make a webapp out of what could have been an MS Access database. Developing webapps *is* the thing that I do well, I've turned down offers from Google and Facebook. I'm at a startup now. I'd pass this listing over without a second thought. 
US of A
This is discouraging. I'm still learning, but I now know I have to contend with some potentially obscene expectations of me. :-|
Whenever I see a job posting for software, I always have to guess whether they mean that you must have all of those skills, or if they're only hoping that you have all of those skills. If you require them to have all of those skills, I think you may be asking for too much.
When the bought Sun, Oracle also got OpenOffice.Org (which mattered so much less than Java). They mismanaged the project so much that a fork was created (LibreOffice) and most development activity went there. Oracle then found itself with a somewhat empty shell, and gave it all to Apache because they had no use for it, in sharp contrast to Java.
Absolutely agree. Let's spin the table around. If you got a resume where the candidate lists all their technologies/keywords without mentioning their experience, would you give them a second look. Imagine you got a resume that contains this: &gt;Objective: Find a good paying job where I can program and spend time with my kids. &gt;Knowledge: &gt;Spring 3 or Enterprise Java Beans 3 (EJB 3, 3.1) &gt;ORM Frameworks (Java Persistence API/JPA, Hibernate) &gt;SQL &amp; Databases (PostgreSQL, H2, MySQL) &gt;Distributed Computing Technologies (Java Message Service/JMS, ActiveMQ, SOAP/REST Web Services) &gt;Searching Technologies (Apache Lucene, Solr, Hibernate Search) &gt;Java Server Faces (JSF 1.2, JSF 2.0 a plus) / Facelets &gt;AJAX component frameworks (PrimeFaces, RichFaces) or JS frameworks (JQuery, YUI) &gt;HTML, JavaScript, Cascading Style Sheets (CSS) &gt;Testing Frameworks (TestNG, JUnit, Selenium, EasyMock, Mockito) &gt;Web &amp; Application Servers (Jetty, Tomcat, JBoss, Glassfish) &gt;Continuous integration and build management (Maven, Jenkins, Bamboo) &gt;Scripting Languages (Python/Jython, Batch/Shell/Bash, Perl) If I saw that resume, I'd throw it out thinking that they were just padding their keywords or lazy. Even if they did know all that, what level of expertise are they in each? They can't be 10s in all those. When they mention GlassFish, do they have experience in administering it, developing on it, or contributing to the open source repository of Glassfish? You surely, do not use Postgres, H2, AND MySQL concurrently. And what are you looking for? A software engineer, DBA, or database programmer? So, when a candidate looks at this, two things can happen: 1) Qualified candidate has some of the skills but not all and think they are underqualified for the position. 2) Great candidate sees a whole slew of technologies and think the company is not focused, does not understand the technology and not a good place to work. Secondly, a job posting is fundamentally an advertisement. You don't put in your advertisement only what YOU are seeking, you put in an ad what THEY are seeking. Imagine if Coca-Cola advertised: "Drink our soda because so we hit our revenue mark next quarter." If you're trying to attract good software engineers, give them a reason to want to work there. The only bait that you put on this line is: "The candidate will be responsible for leveraging cutting edge technology to develop mission critical public safety systems." Elaborate on that.. that is your key selling point. To be honest with you, this job posting reflect laziness. The only people that you will attract are lazy or desperate people. No wonder you aren't able to find qualified candidates.
Just hire university students with zero knowledge from third world countries and train them up on the job!
It is because it allows to decouple business, control and presentation logic which is usually a good thing. There are other patterns that do the same like MVP or MVVM, and even MVC has two "main" versions. Furthermore each of those might have different implementations (i.e. Front Controller with Filter or Servlet, Model with DAO or ActiveRecord). My point is that nothing stops you from creating a good code without applying any design patterns. Some of them are more widespread than other, however a lot of times they are used poorly creating more problems that they solve. It's bad to use a pattern just because you have seen it used somewhere else, it should serve a purpose.
For my first few jobs, I found that if I could not get a raise - especially after working there for a year - my motivation levels slipped greatly. I'd show up 2 minutes before 9:00, leave 2 minutes after 5:00, never volunteer, avoid staying late like the plague, etc. I also stopped contributing freebies, such as software and art assets I created on my own time. I still more than earned my salary, but the longer it went on, the more I felt cheated. Since then I've done my research, and am ready to climb off of any "escalator going nowhere" at a moment's notice. The more successful and experienced I have gotten *(as well as researching business)*, the less I stick around at any company that fails to offer growth opportunities... or at least a good enough salary up front that I don't need a raise. Stagnation may work on those who lack ambition and experience, but for someone like me? Not so much...
Wrong. Remember they made their own VM (Dalvik) and they use Apache Harmony Java libraries. The lawsuit has chizzled down to mostly copyright questions about some of the APIs they are using. Even if Google lost it would mean nothing about the incompatibility with the standard Java compliance. (thankfully)
the OP obviously didn't understand that part either. The copyright disputes are on some Java APIs. Its confusing because a large majority of the complaints issued by Oracle were thrown out because they were without merit.
&gt;Oracle has done lots of great things for java by investing a lot of resources into it and keeping it free. After Oracle purchased Sun (the company that made Java) they ran the community into the ground, all the lead developers were forced out or left Oracle and we all know Oracle has some snotty plan to charge enterprises for Java down the road. The latest major release of Java had mission critical bugs that prevented optimized FOR LOOPS FROM WORKING until the 2nd patch. (That means most people couldn't run any sort of big program)... Please, show me where this "investment" by Oracle is, other than purchasing Java and throwing mud on it.
This is more or less what I see - it's not so much whether or not *"APIs can be copyrighted"* but rather when you release your API for wide public use without an obvious and rock solid license agreement that this starts to fall under a "public domain" and "fair use" kind of thing. If java becomes tyrannical with their I.P., and what can be built ontop of their I.P., it makes Java far less useful and attractive as a programming language. Worse, it's a bit of a bait and switch, as many persons have been using it without an awareness that Java intends to control this I.P. in this a way. Perhaps most importantly, it pushes Java towards a proprietary solution, meaning those of us seeking to spread our software (code, syntax, etc) across as many platforms and applications as possible are likely to run into a variety of problems. Also, from a legal perspective, if Java can claim any significant damages, this could open up another can of worms, patent/copyright trolling, etc. I'm a huge supporter of copyrights / patents, but this is one of those areas where it's taking it too far. I'm speaking in very vague terms here, but this is more or less my perspective/analysis of what is likely to happen. Even as a result of this litigation, I am considering moving onto C++ or a similar language after I use of the usefulness of the game engine i am currently coding in Java.
&gt; Oracle has done lots of great things for java by investing a lot of resources into it and keeping it free I think you mean Sun. Since oracle took over stewarship they have managed to alienate just about everybody that loves java. Just look at the whole hudson/jenkins fiasco right at the start. This courtcase is just a step further down that path. We are fortunate to live in a time of true tech pioneers, Larry Ellison however is just a suit with a wall street attitude.
I have used Scriptella to load big csv files (1GB uncompressed) into a database
My point is that the $ gets them in the seat and is the minimum barrier to getting talent in the first place, but ultimately that's a game everyone can play. Offering a great environment in addition to that is what will ultimately keep them from being sniped by the competition.
Well, I agree that growing a team that quickly can be difficult if you "grow your own" so to speak. Whether or not you should build a team that quickly is a question only you can answer for yourself in your environment, but I haven't seen good things come out of that most of the time. In every case I can recall, clients would have been better off in the long run opting for a more organic growth curve. The urgency behind quick growth is almost always based on false premises.
thanks for your reply. Do you know how fast it is? I'm around 10min for 500k of data entries (around 37,1 MB). With BCP / SQLNCLI I'm at around 25-30MB/min 
Apologies if the following sounds rude, but, your advert is awful. Think about it from a job seekers perspective. When he/she looks at your advert he sees this: * A very long shopping list of "knowledge" and "requirements" - are you really expecting all candidates to know all of these things in depth? * The following bit of text about the job itself - " The candidate will be responsible for leveraging cutting edge technology to develop mission critical public safety systems". What the hell does that even mean? What about the company? What is it? What do you do? What's the company culture? * I have bills to pay. How much are you paying? Oh, you don't want to say? Screw that, then. * I have 9 years of Java development experience. Your job ad requests between 2 and 7. Oh, well. Guess it's not for me, then. Moving on. Moreover, anyone who equates a Junior level programmer (2 years) with someone who may have led a small team (7 years) doesn't know his bum from his elbow. Your advert is a whole load of stick, with not much associated carrot. You're not selling yourself, you just assume you're going to get a bunch of great developers walking in the door for interview without even putting any work in. That speaks volumes, and is very off-putting. 
I'm no legal expert but from what I have gathered I don't think the issue is using other peoples API's, but rather implementing them. That's what google has done with android, offered many of the same API's as standard Java. The trouble with Oracles reasoning here is that an API in its most basic form is basically a set of function signatures, which is pretty essential to all of programming.
I actually think vermicin's assessment is far from harsh. If you have four openings then why are you listing them all under the same advert? Surely you can't require all the same things from your junior developers and your senior developers? Are the junior developers going to be paired with senior developers so they can learn more quickly? Are the senior developers going to have the junior guys working for them? You could mention that they'd be doing tier 3 support only too.
Man oh man, how many upvotes can I give to vermicin? Alas, I have but one. The guy has you dialed in, that's for sure. Reread your own second paragraph, "Most of the other conclusions..." What in the goddamn hell is so hard about simply writing down the exact truth of the four jobs, the exact skills required for each one, and the work environment? And here's another big hint: if, at the end of any sentence, you feel compelled to put in a winky-wink smiley emoticon...THEN YOU ARE DOING IT WRONG. 
&gt;When phone screening I usually get 2 types of people - the guy who has a 3-5 second pause after I ask him the question Wait, when I'm being judged on my performance I damn well take a couple of seconds to judge what you're really fishing for and to formulate a good answer.
No offense toward you, but usually the pause is usually accompanied by some low typing sounds. Thinking is one thing, but some things a java programmer should just know. I'm just speaking from my experience phone screening. It could be different elsewhere, and if someone had a thoughtful answer that couldn't possibly be found on Google in that short time then I know that person is a candidate worthwhile of a face to face.
Kee-rist, seriously that's a whole lot of talk before a candidate can get to an offer. If I had five phone interviews before the site visit, I'd seriously bow out after phone interview #3 on the idea that you are so damn picky that I wouldn't fit in anyway. And then a dozen interviews for the few who do make it on site? Do they have at least the idea that these are the "we need to see you to make sure you bathe and aren't a total liar" tests, or is every one of the 12 people they talk to a potential dealbreaker? If you're in the business of actually, you know, hiring, you might consider lightening up and making it a lot easier to get to the job offer. Pick people who have an open-source project to look at, or a geek blog, or a few interesting positions on their resume, call them for two phone interviews (personal and technical), and then bring them on site to speak to their potential manager and a couple potential team leads. Keep the on-site at half a day so they can claim it's for a dentist appointment with their current employer. &gt; And we still have a high turnover with people leaving after 18 months. This can't be fixed with a different hiring process, this is a fundamental problem with your company's culture. Change the culture and you'll get 25 years out of someone. Otherwise your plan to teach both java and the industry means your turnover goes to 24 months but the first 12 are even less useful to you - lose-lose. You've got any one of sociopathic managers, absurdly low pay for duties, a culture of apathy, religious nuts in charge, libertarian nuts in charge, right-wing or extreme left-wing nuts in charge, no flex time, no quality control team, no first-level support helpdesk, too many architecture astronauts, a shitty high-deductible medical plan, no technical advancement ladder, no went-way-beyond-expectations reward structure, nepotism, no source control or build system, no backups, no internal mentors, no funds for staff development, or no actual paying customers. The next time someone leaves, give them an exit interview and _beg_ them to tell you how to make things better for the next person in their shoes and _listen_ to what they say. 
&gt; And we still have a high turnover with people leaving after 18 months. And we pay really well. If people are leaving of their own volition after 18 months on a regular basis, then one or more of the following is probably true: * You don't pay as well as you think you do * The work isn't interesting * The environment (management, processes, on-call responsibilities, office space, toolsets, etc.) is poor. * Developers don't have enough latitude in how they do their work (design/architecture is dictated to them, for example). * **Someone else in your area is offering a better overall package**
&gt; If I had five phone interviews before the site visit No, it's one call per candidate. About 20% get an in person. &gt; This can't be fixed with a different hiring process, this is a fundamental problem with your company's culture. Someone true. Tech people are seen as a cost center, not a profit center. Contractors are treated poorly. H1Bs are treated like office furniture. I am not going to be able to change that. I hope to find people who can deal with it better. We have a number of people here for 5 years plus. At the 5 year mark you get 6 weeks paid vacation plus 8 personal days. And your year end bonus can go over the 10% mark. 20% isn't unusual. &gt; no technical advancement ladder, Sadly, advancement ends with team-lead. I have yet to see a team lead tapped for a VP spot in my six years. There are people hired at the associate level on the business side when I started who are now on the VP track. Doesn't happen on the tech side unless you move to a BA or Business side job. &gt; give them an exit interview and beg them to tell you how to make things better for the next person in their shoes and listen to what they say. I've been asking to be part of the exit interview for three years now. I ask every time someone in my dept leaves. No luck. I know they do it but I half expect they are using it to see what is the absolute minimum we can pay and keep someone for a full project life cycle. 
A very lightweight MVC is SerfJ. http://serfj.sourceforge.net
I agree with this, I try to keep the resume pretty concise and only list a handful of bullet points specific to what I'm working on or want to work on. Other than that, you'll have to ask me if I've played with a specific library. At the same time, if you were to ask me what I am very confident on (be able to write you compilable code or application using these technologies) the list would be larger although not many of these are listed on the resume. From the flip-side, here's an example of the position we're filling for at the company I work for: Excerpt form the pre-amble before we even list the requirements: If you’re passionate about • Working with business, quality, and ops teams to deliver real customer/business value • Learning about and using new technologies and taking on new technical challenges • The ability to choose the OS that’s right for you as a developer (Windows, Ubuntu or OS X) • Working on cutting edge technologies Then this might be the right job for you! Requirements we list: • BS in Computer Science or related technical discipline (or equivalent) • Experienced in Java development • Expert grasp of object oriented software development • Enjoy tackling new problems and can produce quality code • Self-motivated and able to work independently • Strong understanding of parallel programming • Proficient with Unix/Linux • Experience with some or all of the following a plus: Scala, PostgreSQL, Hibernate, Spring, OSGi, Maven, Grails There's also a section for what kind of things you'd be likely to work on and the environment of the company. In other words, make the job attractive to the person, you're trying to get them interested first, the skills are secondary and can be taught so long as they have solid fundamentals. 
I'd actually prefer it if this subreddit stayed on topic. Isn't [/r/forhire](http://www.reddit.com/r/forhire) enough? It's mostly techy positions anyway. Just my 2 cents.
In properly designed java apps, the jsp is just for the view. If you don't know what this is about, read up on http://en.wikipedia.org/wiki/Model_view_controller - programming doesn't really belong in there, unless it's just related to display logic. 
Pick a system. Implement it. You could come up with your own idea or use someone else's. Universities often have a list of suitable final year projects. They're not all what you're looking for, but some might be. Here's one. https://local.cis.strath.ac.uk/teaching/ug/cs4projects/Proj_Offerings_2011.html
Hey would you mind taking a look at the updated version?
The LibreOffice folks led by Michael Meeks in particular were well on their way to forking from OpenOffice even before Oracle bought Sun. Also, as you say, Oracle didn't care about OpenOffice in the slightest.
Easily believable, between smartphones (all Android phones), set-top boxes (many of the newer video on demand products), web servers, etc.
I recommend reading GoF - traditionally the canonical text for design patterns. http://www.amazon.co.uk/Design-patterns-elements-reusable-object-oriented/dp/0201633612
the link has disappeared, but I would if you link me to it :)
The first thing you need to do is to let everyone know how to reach your home computer. Some internet service providers allow you to have a static IP address for a small monthly fee. (Mine charges $5/month) You may also look into Dynamic DNS if this is not an option with your provider. If you have a static IP address, you may optionally decide to register a domain so that your friends will not have to remember the address. The cost of registering a domain is about $10/year. Since you're hosting all the content on your own computer, you do not need to buy a hosting plan (which is where most registrars charge the big money). The next thing you need to decide is what kind of technology you need to support. If all you care is about supporting are HTML pages and other static files, then a HTTP server is all you need. Apache HTTP server is free and very popular. I recommend going with this approach unless you find a need for something more. If you want to support "dynamic content" (e.g. JSP) then you need a web container at the very least. Jetty and Apache Tomcat are both free and very popular. If you want to support a full blown enterprise level n-tier system, you need a Java EE container (e.g. Glassfish), however I personally think this is overkill in most cases, especially for a simple home server. **Important:** Opening up your computer to the internet is a huge security risk. Make sure you only open the ports needed, and take extreme care in controlling access to your file system.
Sorry for taking so long to reply to you! My projects fall into the category of the web site of Java.
I completely agree. Its the whole definition of "good". Good is being the go-to guy for a technology. Good is being an active contributor to projects using that technology or the technology itself. If software was a war, these would be the weapons you'd take to battle. Being motivated about something usually makes you good at it. These are the things you list on your resume.
Android runs Java because Oracle says so? Is it enough to run a language whose syntax is the same as Java or if you will a Java in another virtual machine?
I dislike them. The ones I have seen usually mislead in some way- such as "What makes it so difficult to find competent Java devs? By the way, we're also hiring."
Much better! If I saw this, I'd give it my time. Your previous one, I'd think would be either a recruiter or someone that doesn't understand technology. Only critique is this section: &gt;All of our developers have the freedom to pick the best tools to solve the problem at hand. Some specific technologies we like to use include Java 6 (soon to be 7), Spring, JPA/Hibernate, EHCache, PostgreSQL, H2, Web Services (SOAP and REST), Asynchronous messaging, Apache Lucene, Java Server Faces 2, Primefaces, HTML 5, CSS 3, WebSockets, JQuery, Android, Swing, TestNG, Selenium, Maven, JasperReports, Jython, Bash, Geoserver, OpenLayers. You've gone back to just listing some keywords. Just tell me your technology stack and not just a list of keywords. Don't try to oversell. In addition, some of the technologies are contradicting. Html5, Android, Swing -- Are you building a web app, mobile app, or desktop app? Something worded like: Our current infrastructure is built on Java 6, Spring/Hibernate, yada yadda. We also enable developers to contribute to the technology architecture design, yadda yadda.
Yep, I just nuked that one, it was screaming of a recruitment scam.
It was a related question other that fact. I agree with Is_At_Work to provide a link to /r/forhire on the sidebar.
Do you feel the update has carrot?
Add that to the description. That is a pretty key part of the job description. Also, since job postings are effectively free, why not try A/B testing on them. See what would get you the most responses and iterate.
The second revision is *much* better, it sounds like you actually know what you are talking about this time around! 
Wheres the link gone?
Haha thank you so much!
Agreed. I'm not subscribed here for seeking a job (I already have one), if I were searching I'd go to /r/forhire. And as a sidenote: I'd moderate the "help me with my homework" posts more strictly, too (and move them to /r/javahelp).
Still: your post was not about Java, but about hiring people, or how to find them - i.e. how to phrase a "for hiring" ad better. I actually found the discussion quite interesting, but nonetheless: it's not Java centric (even if it was for a Java-dev position), and doesn't belong in /r/java.
Yeah I suppose I agree with you. Probably more of a /programming thread if anything. Well I'm off my throwaway and back on my normal contributing to /java name. See you guys around.
it seems you're looking for java*script* not java, regardless I think it's not possible by default but according to google there seems to be some workarounds (in your case it might be easier since it's for personal use not a generic approach).
I'd suggest recruitment posts aren't allowed but posts that are about recruiting Java developers in general should be allowed (e.g. today's post but without advert). Also I'd day reasonable, on topic recruitment in comments should be allowed.
Much, much better.
What do you mean by "chart"? Pie graphs, XY charts, bubble charts? Take the new JavaFX tutorials. 
[JFreeChart](http://www.jfree.org/jfreechart/). For the price, I don't think you can beat it. 'Nuff said.
shouldn't it be /javaForHire ?
This new version is positively *exciting*. I'd apply if I were in the right country.
&gt; The truly good software engineers are at a stable job 200 OK. This describes me currently. &gt; where they can grow and learn and be challenged. 404 Growth and challenge not found. I for one may just be contacting Mr. needjava in the very near future.
relevant: http://docs.oracle.com/javafx/2/charts/jfxpub-charts.htm 
Also, something similir would be to have a char switch, where the cases are 'N', 'E', 'S' and 'W'.
You say "the URL" and "the bookmark" as if there's a unique url or bookmark somewhere that can unambiguously be referred to as such. Do you mean you want an application which had a button which, when you pressed the button, would open a new browser window directing you to a specific page whose URL varies depending on the contents of the clipboard?
My recommendation: do it in javascript. http://d3js.org/ EDIT - yeah great, children, downvote a legitimate suggestion. If the browser is the client (as in the majority of Java apps) then d3 is a much better approach than server side chart generation.
I don't care what other sub-reddits you have for Java jobs, but please keep this about interesting and new java things. That's the only reason I like it here.
^This, excellent API, just used it in a service desk program, can be used with itext to create excellent reports 
Doing it on the client side is not an option. That's why I posted it to /r/java... 
Interesting... Are these classes meant only for display to the client or do they work well with AWT or similar?
Some good stuff here, refresh on access especially.
RCP 4.2 is sexy. They simplified the stack and made the interface look a lot nicer. Once the documentation is up to snuff it will be a very attractive stack for application dev. Also the RAP advancements are making it look like you can write once for the client and the web.
Jfreechart man
Good man.
It will all become very clear once you realize that you don't really need Mockito to verify any output that your code might have. For example let's say you have a servlet that takes in a HttpServletResponse, does some computation and writes the output to the response. One way to test this servlet would be to mock the response object and pass it to the servlet, verifying the output once it finishes. Example code follows: HttpServletResponse response = mock(HttpServletResponse.class); HttpServletRequest request = mock(HttpServletRequest.class); ByteArrayOutputStream buf = new ByteArrayOutputStream(); PrintWriter writer = new PrintWriter(buf); @Before public void setup() throws IOException { when(response.getWriter()).thenReturn(writer); } @Test public void testStuff(){ // call servlet, get output String result = new String(buf.toByteArray()); } As you see in the above example you don't actually need Mockito to verify the output. You only need it to create the dependencies that the code under test has in order to execute the code. One other utility of Mockito is Mockito.verify(). Let's say the code under test does not have any effects other than calling some other method under some conditions and you want to verify that at the end of execution the correct method has been called: @Test public void testOnSave() { System.out.println("onSave"); CustomerDTO customer = new CustomerDTO(null, "name", "surnam", "email", "tel", factory); CustomerActivity instance = new CustomerActivity(factory, CustomerPlace.newShowCustomerPlace(1l)); instance.onSave(customer); verify(customerRequestManager).persist(customer); } Verify does exactly what you expect it to do. It verifies that the method persist() in the mocked class customerRequestManager has been called with that exact argument. All of the above are pretty [well documented on the project's site](http://docs.mockito.googlecode.com/hg/latest/org/mockito/Mockito.html). I'd advise you to work the other way around and instead of reading documentation blindly, start writing test and look for answers for each individual thing you stumble upon each time. I'm sure the documentation will seem a lot clearer that way. Hope that helped. Good luck on your project, degree, career, life etc.
http://www.thejavahub.net/index.php
News: Nasty 10 year old bugs still not fixed! Solution: Eclipse is open source. Why don't you fix it yourself?
Awesome. Seriously. Thank you.
Well you do have the best national anthem.
If you just go on the homepage you can see the examples straight away. It's so easy to pick up. http://code.google.com/p/mockito/ http://docs.mockito.googlecode.com/hg/latest/org/mockito/Mockito.html Just scroll down slightly. Mockito is great if you are doing London style TDD (Coding top down from the most high level classes, defining interactions usining interfaces). Obviously this isn't all that it's good for. 
KISS - Keep It Simple Stupid is all you have to know. Structure your code so it is easy to understand, if your projects grows big create "modules" or what you want to call them to group functionality, areas or whatever makes sense and then you can de-couple those from each other with facades, services or whatever works best for you if it is needed. Sometimes we have facades and those returns an interface that is instanciated behind the facade by a concrete class that sometimes is a implementation of a abstract class.
Any for hire post is irrelevant to 99.9% of the community, generously speaking. So no.
Because of the lousy way the code was written, some bugs are too dangerous to fix.
The first thing I thought after reading "Java" and "lego" was: "Minecraft?" :~&gt;
Learn a new language.
There are Swing components to embed javafx in a desktop app. I haven't tried them personally.
I am really just a beginner and not doing anything great, just looking for people to help me learn/able to ask questions.
I have heard this time and time again, yet don't really know what that is. Is it just files with some guidelines that anyone can edit?
Ah, i see. Makes sense.
literally, [http://www.reddit.com/r/everything](http://www.reddit.com/r/everything)
o.0
Example: Look up a project on Github like this one: https://github.com/Bukkit/CraftBukkit . Find something you think needs fixed/changed/added and write it up! Submit the code for review and if it holds up they accept the change.
What I mean with 'more complex': Stuff like throw exeptions, the ? thingy, GUI's, ...
What about creating simple thresholds? Any color average in a certain range gets turned into red, blue, green, etc. 
You could use a threshold, either set manually or learned, and then compare the pixel value against the threshold and then then set it to pure red (or whatever colour) if its in that threshold.
That sounds fancy, but I'm honestly not sure what it..is. I'm pretty new to programming, mostly self-taught(read: not good).
For instance, you should read the FAQs before posting, as well as this: [What Stack Overflow is Not](http://meta.stackoverflow.com/questions/128548/what-stack-overflow-is-not). Essentially, it boils down to making sure you've put in effort yourself, both in trying to discover the right answer (search first - you're probably not unique), and in the effort to write a well composed question. If you've got a problem, then the way to post code is to make a [SSCCE](http://sscce.org/): a short, self-contained, correct example. I browse SO during the Australian waking hours, and have found that the community is really helpful if the person asking the question put in some effort. For a great majority of questions, answers are posted within minutes - so hang around after posting so you can answer comments that people pose to you.
[The New Boston](http://thenewboston.org/tutorials.php) has a couple of fairly thorough Java tutorial series.
There are java workshops and exams you can take on a site called javablackblet. Ill post the link when I'm on my desktop at work. We use it as an interview exam. We also get people to use it to learn java. 
Java/JSTL/JSP and HTTP are very expensive when it comes to memory resources. In particular if you use javabeans a lot and users don't close the session. To be honest I am not surprised. Also I have run WAS8 on CentOS *grumbles that x11 is needed*, Windows and OS/400 (which has AIX in the back somewhere - strqsh). However the sysadmin in me will tell you that you are an idiot if you run mission critical application on Windows servers. 
It sounds like you want to do a [color quantization](http://docs.oracle.com/cd/E17802_01/products/products/java-media/jai/forDevelopers/jai-apidocs/javax/media/jai/operator/ColorQuantizerDescriptor.html).
read head firsts java it covers a good range of topics and its good for new devs
Ternary operator is pretty cool. ? : its like an if statement. Did u possibly mean &lt;E&gt; &lt;?&gt; generics? 
 public class LearnMoreJava extends FillMyBrain { protected int stuffLearned = 0; public LearnMoreJava() { } public readSomeGoodJavaBooks() throws RuntimeException { Book b1 = new Book("Effective Java by Josh Bloch"); if (b1.didntUnderStand()) throw new RuntimeException(); stuffLearned++; } public writeSomeCode() throws RuntimeException { Program p1 = new Program(" write hello world, adding new features from book"); if (p1.didntUnderstand()) throw new RuntimeException(); stuffLearned++; Program p2 = new Program("write something useful, using your engineering studies to solve a problem "); if (p2.didntUnderstand()) throw new RuntimeException(); stuffLearned++; Program p3 = new Program(" Join an Opensource Project"); if (p3.didntUnderstand()) throw new RuntimeException(); stuffLearned++; } public Integer getHowMuchLearned() { return stuffLearned; } public static void main(String []args) { LearnMoreJava yourBrain = new LearnMoreJava(); try { yourBrain.readSomeGoodJavaBooks(); yourBrain.writeSomeCode(); System.out.println( "I know more, by doing "+ getHowMuchLearned() + " basic things\n"); } catch (Exception e) { System.out.println("my brain hurts\n"); } } }
I would suggest maybe start working on something open source and see what kind of work you excel at before committing yourself to a client. It could be risky* to make yourself independently financially liable for the success or failure of a project so early in your career. My 2 cents. edit* phrasing
Thanks for the heads up about javablackbelt, going through their exams now :)
&gt;it boils down to making sure you've put in effort yourself as it should.
Oh, man, you spoiled the ending.
 public LearnMoreJava() { } Is redundant, a public constructor without arguments is created by default
Yes, yes... fully qualified for beginners. 
It would be fun to write a videogame, but I think my knowledge is way too small... I haven't got any experience with GUI's and such. But I'd like to try ;) What do you suggest for starting with?
Are you using lego mindstorms with lejos? Could you just have a variable which keeps track of the number of degrees turned from the starting position. Lejos has some function along the lines of turn(X) I believe so you could just have direction=direction+X.
Not only did you do the pointless exercise of writing out a patronizing response but your syntax is ugly as all hell! Oh, and your error handling is god awful, you're going to throw Exceptions without any message!
If you know how to print to the console and read in from the console, you can make a text-based adventure game. 
It's not really that big a deal to me, I can do it with 2 replaces using the case sensitive option, it just seems to me that this would be common enough to have a feature added for it.
It stands for "Advanced Placement". It is a test available to high school students which tests college level knowledge and many colleges will give you credits towards graduation for it. There is more information [on the wiki](https://en.wikipedia.org/wiki/Advanced_Placement_Computer_Science).
&gt;It's not really that big a deal to me, Probably why they didn't implement it.
I'm a bit confused. Where is the com.demo.screens.dynamic located? It looks like you are creating a variable in action.java, and then want to create some new variable in the com.demo.screens package, which you can't do. Instead you might look at creating a field in action.java that the other classes can access using public static String dynamic; then any other class can access it using String val = com.demo.controls.action.dynamic; I feel like there is a better way to do what you want, so if you provide more info on what you are doing I might be able to help you come up with a better solution.
If I understand your problem correctly, you need to keep the type as a common type (TopComponent I believe) rather than looking for a dynamic subtype. TopComponent element = WindowManager.getDefault().getRegistry().getActivated(); Now that you have the element, you can call the setters for it. element.setName("name"); 
Actually, I challenge anyone to write this as a plain regex solution, because I can't figure it out. (Not that I'm any sort of regex wizard, but I want to know! It's a good use-case sometimes.)
Now I'm more confused. Get the name of the screen and put it into a conditional to do an action based off the name. You want to keep a reference to the screen itself, not the static field that you're trying to increment. --EDIT-- Ah, I think I see where you're getting stuck. The static variables you're using. Class myClass = myScreen.getClass(); if(myClass.getName().equals("com.demo.screens.screen1")){ screen1.myVar++; { Or another way: if(myScreen instanceOf screen1){ screen1.myVar++; }
Unchecked for extra goodness.
Challenge refused! 
Tried that in a sense, but didn't really work. Here, I'll provide the skeleton of what I have: public final class Screen1TopComponent extends TopComponent { public static int myVar =0; public Screen1TopComponent() { initComponents(); setName(Bundle.CTL_Screen1TopComponent()); setToolTipText(Bundle.HINT_Screen1TopComponent()); FillForm(); } public static void FillForm() { //Calls to entity classes, populates fields from databse, etc } } Second screen class is identical. Then I have my action.java (in reality called NextRecord) which is really a button with a single actionPerformed class. public final class NextRecord implements ActionListener { public void actionPerformed(ActionEvent e) { com.demo.screens.screen1TopComponent.myVar++; com.demo.screens.screen1TopComponent.FillForm(); } } That code works perfectly. Every time the button is clicked, it iterated myVar in screen1 and then calls fillForm which displays the next record as per myVar value. How would I implement your proposed code into this? Thank You for your help and patience! My last option would be to hard code a 100 IF statements. I do know what screens I will have, but that will result in a very bulky class.
Definitely, that was my first solution. Problem: my application will have hundreds of screens. =( Cause yes, ultimately I'd say: if (WindowManager.getDefault().getRegistry().getActivated().getName().equalsIgnoreCase("screen1")) { com.demo.screens.screen1.myVar++; } repeat for screen2.
Does myVar and FillForm() have to be static? That is what is causing you all the trouble. I see that you're trying to count your button clicks. You're going to need one static field to do this, but rather than trying to determine what type every instance is, why not just make every component have a method to increment it's own static counter? public final class Screen1TopComponent extends TopComponent { public static int myVar =0; public void incrementCounter(){ myVar++; } public Screen1TopComponent() { initComponents(); setName(Bundle.CTL_Screen1TopComponent()); setToolTipText(Bundle.HINT_Screen1TopComponent()); FillForm(); } public void FillForm() { //Calls to entity classes, populates fields from databse, etc } } This way, the instance itself can increment it's class' static counter. public final class NextRecord implements ActionListener { public void actionPerformed(ActionEvent e) { myComponent.incrementCounter(); myComponent.FillForm(); } }
You are definitely right about the static variable. I should change that! The problem still remains in a sense that I have over a 100 screens. That means in my NextRecord.java code for the button I will end up with: public final class NextRecord implements ActionListener { public void actionPerformed(ActionEvent e) { String screenName = WindowManager.getDefault().getRegistry().getActivated().getName(); if (screenName.equals("screen1"){ com.demo.screens.screen1TopComponent.incrementCounter(); com.demo.screens.screen1TopComponent.FillForm(); } else if (screenName.equals("screen2"){ com.demo.screens.screen2TopComponent.incrementCounter(); com.demo.screens.screen2TopComponent.FillForm(); } } } I guess I am basically looking for a way to avoid the giant amount of IF statements (even though its mostly a copy paste).
you're my hero
You could implement your ActionListener as an anonymous inner class of your component itself. That will allow you to access the instance members of your component. Your component: public final class Screen1TopComponent extends TopComponent { public static int myVar =0; public void incrementCounter(){ myVar++; } public Screen1TopComponent() { initComponents(); setName(Bundle.CTL_Screen1TopComponent()); setToolTipText(Bundle.HINT_Screen1TopComponent()); FillForm(); } public void FillForm() { //Calls to entity classes, populates fields from databse, etc } } Your implementation: public static void main(String[] args){ TopComponent component = new Screen1TopComponent(); component.addActionListener(new ActionListener() { @Override public void actionPerformed(ActionEvent e) { component.incrementCounter(); component.FillForm(); } }); }
IDEA's rename refactoring does this for you automatically - it'll change parameter names, variable names, even fixing other classes in the hierarchy which have a similar name (It even gives you the option to either individually review or automatically apply the renames of instance variables) 
Welcome :)
You just became my quote of the day on Twitter. :-)
I was happily reading your message then you said "work wit." :(
I usually have a compiler checking my spelling ;) -fixed
Before you get into actual internships, do some freelance programming, and I stress the 'free'. When you finally apply to a company, they'll see you've done programming for free, which shows motivation. Find some small startup companies, and write programs to manage database stuff. I've been doing that for awhile, and I think it was that that helped me land an internship at a local ATM company (I'm 16 now.) The more practice you get, the better you'll be appreciated at a professional company.
Unfortunately because of your age im not sure if there are many companies that can/will hire you. I also live in the Columbus vicinity though and luckily the industry here is booming right now and there are still job openings in some places. A few places that do programming internships that I know of are ICC, Microcom, TechColumbus, CallCopy, HMB, Manta Media and Roseta(cleveland). I did take a few of these from my schools job postings as well so I know some of them are hiring now.
All the interns at companies I've worked for we unpaid interns, and they were in their twenties. Maybe an HR person would know the particular legal issues involved, but an unpaid 16 year old intern sounds like a serious can of worms to me. Honestly, though, the single biggest lesson you will learn even if you do score an internship is that corporate work is drudgery, unless you get in with a great startup, but those internships tend to be very competitive. I'm in my mid thirties and programming was hard when I was your age. A relative bought me my first compiler, and from there I had to save up for programming books, BIOS references, etc. I would have to call IBM or Microsoft and ask for programming information for new features in their OSes or products. A few weeks later a big envelope filled with photocopied API docs arrived. I only say this to point out that in 2012 you have a ridiculous number of opportunities to build up your skills, and you definitely do not need a corporate environment to do it. You mentioned open source projects, and I think that's a great direction to go. If you become a meaningful contributor to a well-known open source project, it will look great on a resume. Also their coding standards are often far higher than corporate work. You can work towards getting a good reputation on stackoverflow. Employers love that. Or just start reading craigslist looking for people with good ideas for a startup, and work on that. (But please watch out for scammers/narcissists/jerks, etc. There are tons of people out there with "great" ideas who are looking for a techie partner to do all the work for them while they send out berating emails about how you're not working fast enough.) I admire your attitude, but internships are rarely fun. Corporate life is rarely fun. You're 16 - do something enjoyable.
I think what really sets Spring apart from the equivalent Java EE 6 options is documentation and community/support (spring forums, stackoverflow). Oracle documentation is like something straight out of the 90's. The features seem to be limited on the Java EE 6 side too. I'd love to see a detailed side-by-side comparison of the features/capabilities, especially against Spring 3. More than likely my own curiosity will take me on an investigation to find out!
/r/forhire
**Arquillian**
Funny, I've always found the community support for Java EE 6 at StackOverflow to be plus point for Java EE ;) Especially JSF, EJB and JPA questions typically get very good answers there. A few of the overall top StackOverflow users are clearly Java EE users (of those, some of them are Spring users as well). Java EE is very well represented by books and articles as well, so all in all I think documentation and community support is quite good. One source of documentation that I do detest is the Mojarra JSF tag docs and API docs. Those are written with the implementor of the spec in mind, not or far less with the programmer in mind who uses these tags. You are right that the Oracle forums (previously Sun forums) aren't that hot either. There is moderation to regulate things a little, but it's still lamer galore. &gt;I'd love to see a detailed side-by-side comparison of the features/capabilities, especially against Spring 3. I think overall Java EE 6 is nicer, it has a more lightweight bean model (no XML, and emphasis on convention over configuration) and a better dependency injection (type safe and contextual). Spring has just began with addressing the no XML issues, and folks think @Autowire is also type-safe, but it's not. That's the next step that Spring has yet to make, and the contextual injections after that. So Spring is a bit behind here. And although Spring does offer no XML or less XML these days, this is a recent development and many Spring developers are still somewhat in the mindset of "code is configuration" and "configuration should be externalized". It'll probably take a few more years until Spring projects in practice are mostly XML free. Spring's own web framework, Spring MVC is a bit poor too. Java EE 6 has a much richer and powerful web framework with JSF 2, for which there is MUCH more community support and third party availability of components and utilities. And if all you need are REST end-points, then Java EE 6 has JAX-RS for that. Personally I don't see a place for Spring MVC in this space. There are some areas where Spring is ahead. They have their caching annotations now. For Java EE the JCache JSR has been there for like forever and it finally seems to be implemented in Java EE 7, well behind Spring. Security configuration is another plus point for Spring. Java EE application servers have powerful configuration as well, but it's all AS specific and not in the Java EE platform itself. 
Is that all your code? or did you put the main into a class?
Are you able to get Hello World working in Eclipse? http://www.youtube.com/watch?v=Ft0oD_F6-ac
Also, a main method must take an array of Strings as a parameter. Yours takes a String (not an array of String) and an int, thus it is not really a "main method". See http://csis.pace.edu/~bergin/KarelJava2ed/ch2/javamain.html
But I need an input string an an input integer.. How do I do that?
in the class but outside of the main, type... main&lt;CRTL-SPACE&gt;&lt;ENTER&gt; That is the valid main structure that will run and only that. 
Using scanners to read textinput?
 public class Example { void main(String[] args) { if (args.length != 2) { System.err.println("Remember: One string, one integer"); System.exit(1); } String aString = args[0] int anInt = Integer.parseInt(args[1]); for (int i = 0; i &lt; anInt; i++) { System.out.println(aString); } } } Of course, this will thow a parse exception (who's name I can't remember) if you don't give it an integer as the second argument.
Okay, I implemented this piece of code, but when I run it, I can't input my args...
Under Run menu item, bring up Run Configurations, find the launcher for your code, add arguments under the Arguments tab
I always used Scanners to read user input (java.util.Scanner). Are BufferedReaders better?
Use Forte. Eclipse is a pain in the ass.
Spring MVC + ThymeLeaf.. I was just looking for a lightweight MVC, and this fits the bill perfectly.
I used BlueJ, that worked nice, but I heared Eclipse was far more powerful. What about Forte? Can't seem to find any info about it
&gt;I think the bottom line for me is Spring is a vendor specific framework. Not exactly. Java EE is a full stack *platform*, going all the way from the application server to the client side with JSF or Swing with EJB remote calls. Spring is just *a framework* (as the name says). Which one you use depends on your needs and constraints. For cloud computing for example, having full stack application servers may be a lot of overkill. And costly also, because most application servers require much more machine resources then a simple Tomcat. And that's not counting the (lots of) classpath issues you might have with such a full stack. Now if you're doing enterprise applications with lot's of service classes (aka EJBs) reused across applications, maybe with some Swing clients, JMS queues, etc., then it might make sense to use JavaEE. There is no *one size fits all*.
I cruised through the documentation for the others. JSF seemed a bit daunting, especially for my time frame, but I liked the PrimeFaces module. I would have gone with Grails except the learning curve would have presented an issue for the team.
It's pretty old. It's pretty barebones, which I like; it's like coding in Notepad, except it tells you where errors are.
Spring is not lightweight.
While this is a *very* bad idea and there are far better ways using inheritance etc. as some other comments explain, if you wanted to do it exactly as you are trying, if I understand you correctly you could do it using reflection like this: try { Field f = Class.forName("com.demo.screens." + dynamic).getField("myVar"); f.set(null, (Integer) f.get(null) + 1); } catch (Exception e) { } Note that this is almost certainly a terrible, hackish idea, and should be avoided unless absolutely necessary.
&gt;(must be huge improvements since a few years ago... when it was pretty horrible) You are not serious, are you? Under which rock have you been living? Yes, JSF was pretty horrible before, but now it's super good. Just Google around for what's new in JSF 2.0 and/or look at what PrimeFaces is currently doing on that foundation.
Interesting! I wonder how this compares to @PostConstruct/@PreDestroy methods on application scoped (CDI) beans. One issue I've been having with those is that they may be called before the EJBs are initialized (or after they have been destroyed), so they can be difficult to use when EJB calls are required.
This is really quite interesting. In addition to the method here, there's only this one in Servlet spec: http://docs.oracle.com/javaee/6/api/javax/servlet/ServletContainerInitializer.html Of course there's also this one: http://docs.oracle.com/javaee/6/api/javax/servlet/ServletContextListener.html
Have you tried using a BULK INSERT statement?
What do you mean by "too late" are you referring to ageism or some kind of change in the computer sciences?
Working for a government contractor should be your last option. I've done it, and it's a miserable experience. On the plus side, they pretty much take all comers as long as you can get a clearance. I've worked with people who by all rights shouldn't even have a job in CS, but they had a clearance, so good enough.
If you know of any good examples, please share.. not that I'm too lazy to search, but you would be better to judge
While i enjoy codingbat, it's not really going to help you learn the language as much as it'll help with problem solving and be easier if you *already know* the language.
I'd say look into learning Java-based REST interfaces. There's a lot of work going on in the corporate world regarding REST systems and Java is backing a lot of these systems.
 I am not familiar with Dr. Java. I recently switched to Intellij. The free community edition is great, but the full version is awesome if doing J2EE stuff. For OpenGL, grab the free version. If that isn't your cup of tea, both Eclipse and NetBeans are top notch. 
I personally love eclipse, I find it's tools and it's UI make the most sense to me. 
Gotta love eclipse.
Someone in my family has worked for both an agency and a contractor. They say the contractors pay more, but are extremely stressful, while the agencies are a little more easygoing, but don't pay top-dollar. Also, my BS will be in Computer Science.
experience wins over advanced degrees in my opinion since you already have cs undergrad.
i have no idea what dr java is like but apparently it has an eclipse plugin
So...it's an IDE written in Java, and it supports some sort of "functional java" thing that's like a modified Java. I hate it, and the logic my prof uses to justify using this IDE escapes me.
yeah, just use eclipse. are you using jogl for opengl?
did you see [this](http://timelessname.com/jogl/lesson01/) ? unfortunately, my only experience with jogl is through libgdx since i'm working on a desktop+android game edit: I think all you need to do is add the jar file and link it in the build path libraries tab
&gt; A new beta release of DrJava (drjava-beta-20110822-r5448) is now available (...) The latest "beta" build is now nearly one year old.
The [java tutorials](http://docs.oracle.com/javase/tutorial/) are pretty good and you can go as deep as you need, for a start.
Instead of posting anything about the merits of these structures, I googled it for you. http://www.cs.uaf.edu/2009/fall/cs311/lectures/cs311_20091118_heap.pdf And it has them all outlined. To paraphrase Michael Abrash: Don't spend a day optimizing something unless it saves more than a day.
I learned java using this book many years ago: http://www.wrox.com/WileyCDA/WroxTitle/Ivor-Horton-s-Beginning-Java-Java-7-Edition.productCd-0470404140.html The new version isn't bad either. It is a big book but it takes time to explain everything and the reasoning behind the various parts of the language. I often find myself dipping back into it now and then. 
perfect thank you. you're obviously a better googler than i
What are you using to display the image? Could we see some code?
My dislike of Eclipse is best demonstrated with images like [this one](http://wiki.eclipse.org/images/3/33/New_class_wizard.png). Like all mainstream IDEs it has a lot of power, however it seems unable to keep that out of your way in the UI design.
I agree, fuck that shit. Use Netbeans, Eclipse, or IntelliJ, all are great. Yes, they can be a pain to learn and configure, Eclipse has a bad reputation for this, it's pretty solid these days. Drjava looks like a hack. Edit: it looks like worse than a hack, CS programs seem intent on prescribing very specific ways of learning, Drjava is a tool for this sort of behavior, from the Drjava site: &gt;Because each level is a restricted subset of Full Java, instructors must be careful when allowing their students to use library functions. For instance, at the Elementary level, "null" is not a valid keyword, so functions that may return null should not be used. Similar caution must be exercised with arrays. Arrays are not introduced until the Advanced level, so library functions that rely on arrays should not be used until then. Also, although we do not allow the mutation of fields or variables at the Elementary and Intermediate levels, we do not prohibit the use of library classes with their own mutation methods such as java.util.LinkedList. Because of this, the students and their teachers must be careful to not use mutable datatypes. Arrays are advanced? Mutability and returning nulls are certainly bad code smells. Get a copy of Effective Java. 
IntelliJ is awesome. I switched from Eclipse Helios to the IntelliJ 11 and I couldn't go back.
It certainly does. Thanks for the input. :)
I recently made the switch to IntelliJ. I like it, but one thing I cannot stand is how IntelliJ handles incremental compilation. Eclipse constantly rebuilds and enumerates project-wide errors/warnings. IntelliJ underlines/notch-marks these, but there is no running enumeration. Also, it seems to want to be smart about lazily compiling resources, and often missed changes which have caused an error. Maybe my workflow is wrong... Have you experienced this?
The links do not even work. That is really embarrassing for Oracle. JSF is a great technology but it will be hard to get new people interested when you click on the get started link and find a page that does not work. Update: I sent them an email about the problem and got an immediate response that they would fix it. It was clearly not a form response so hopefully this issue will be taken care of soon.
If you're already familiar with another language like .NET, I would say focus on learning the specific API's for MySQL and J2EE and so on and so forth (the underlying principals should be the same). What it's important to realize is that unlike something like .NET, Java has about eight billion different frameworks and ways to do things. This means that yes, you need basic Java skills but you're also going to need to be familiar with the frameworks specific to the domain you want to work in. Just my two cents.
Sounds like you want to scale using [AffineTransform](http://docs.oracle.com/javase/6/docs/api/java/awt/geom/AffineTransform.html). Hint: private AffineTransform coordTransform = new AffineTransform(); public static final double DEFAULT_ZOOM_MULTIPLICATION_FACTOR = 1.2; public static final int DEFAULT_MIN_ZOOM = -20; public static final int DEFAULT_MAX_ZOOM = 10; private int zoomLevel = 0; private int minZoomLevel = DEFAULT_MIN_ZOOM; private int maxZoomLevel = DEFAULT_MAX_ZOOM; private void zoomCamera(MouseWheelEvent e) { try { int wheelRotation = e.getWheelRotation(); Point p = e.getPoint(); if (wheelRotation &gt; 0) { if (zoomLevel &lt; maxZoomLevel) { zoomLevel++; Point2D p1 = transformPoint(p); coordTransform.scale(1 / zoomMultiplicationFactor, 1 / zoomMultiplicationFactor); Point2D p2 = transformPoint(p); coordTransform.translate(p2.getX() - p1.getX(), p2.getY() - p1.getY()); targetComponent.repaint(); } } else { if (zoomLevel &gt; minZoomLevel) { zoomLevel--; Point2D p1 = transformPoint(p); coordTransform.scale(zoomMultiplicationFactor, zoomMultiplicationFactor); Point2D p2 = transformPoint(p); coordTransform.translate(p2.getX() - p1.getX(), p2.getY() - p1.getY()); targetComponent.repaint(); } } } catch (NoninvertibleTransformException ex) { ex.printStackTrace(); } } private Point2D.Float transformPoint(Point p1) throws NoninvertibleTransformException { AffineTransform inverse = coordTransform.createInverse(); Point2D.Float p2 = new Point2D.Float(); inverse.transform(p1, p2); return p2; }
In my experience with EasyMock, it's too easy for some developers to only test process instead of results, leading to VERY brittle and (sometimes) useless tests. For a lot of my unit testing, what randvar said above is all I need.
Yes.
That seems exactly the kind of solution that I was thinking of. This is probably off-topic, but why is using reflection a bad idea?
How precise does it need to be? Does it just need minutes and seconds? milliseconds?
minutes:seconds
http://docs.oracle.com/javase/1.4.2/docs/api/java/util/Timer.html http://docs.oracle.com/javase/1.4.2/docs/api/java/util/TimerTask.html These two are all you really need, especially if you're not using GUI
I would actually like to see one in a GUI if anyone can help with that. 
A simpler and more accurate way to do it instead of using timers (which do not have a guaranteed runtime) is to simply make a loop that sleeps for some interval, and prints the current time after a second has elapsed. If you slept for say, 1/10 of a second (100ms) you'd have 1/10 second accuracy, and minimal code. I can include a snippet if you need help!
The classic example for 2.0 is this one: http://andyschwartz.wordpress.com/2009/07/31/whats-new-in-jsf-2 What they more or less did is reading all the "I hate JSF" blog postings and addressing nearly all issues one by one. The most influential change was perhaps dropping JSP for the alternative templating language Facelets (in cooperation with the original author of course). Maybe not everyone realized it, but a lot JSF's problems were due to JSP just not being suited for JSF. On the surface both Facelets and JSP look like "pages with tags", but the underlying technical differences are huge. Another major change was recognizing that the majority of custom components 'regular' developers create, are just a composition of a few existing components, so they introduced composite components which make this really easy (just put a template file with components and markup in an .xhtml file in some dir, and voila: it's a component). Also very important was fully supporting GET parameters. An often heard and valid complaint was that JSF 1.x was POST only. From 2.0 on this is a thing of the past. Another huge improvement was something that actually is quite simple: the view scope. This addresses the ever returning pain in JSF 1.x of how to preserve data between postbacks. Making clicks on rows in datatables or clicks on buttons that are conditionally rendered are incredibly painful if you don't know the state before and after the click. There was Tomahawk's t:saveState tag that addressed this in JSF 1.x, but if didn't read BalusC's articles from that time you might not even be aware of this. The Tomahawk guys themselves didn't really went out of their way to scream what a huge life-saver their tiny little utility tag was. Implicit navigation is also a huge win. In JSF 1.x users felt they were forced to use a mechanism called "navigation rules", which meant verbose, REALLY verbose XML files, where you matched logical outcomes to views (pages). You could specify you wanted navigation by redirect, but there was no option to include parameters here. Not technical you could always use the Servlet API directly to issue redirects and use plain hyperlinks on your page, but not everyone knew this and even if you did it felt wrong at many places. In JSF 2 those rules are optional, and you can return the desired page directly from action methods, including a directive to do a redirect with parameters. Facelets, using master pages and composite components, combined with view parameters (GET) and the view scope and navigation using GET directly or the POST-Redirect-GET pattern, makes for a really light programming model.
Minor nitpick: '%' is an operator, not a function. In fact, in Java, functions are actually just methods. While in practice there isn't much difference between: 1 + 2 and int plus(int a, int b) { return a+b; } plus(1, 2) ... but different compilers may optimize these two ways of doing things into different machine code. Now, to me, there's a difference in readability between 1 + 2 * 3 and times(plus(1, 2), 3); but I don't hold it against the first one. (I love clojure)
Well, I mean, it doesn't do things even for this project very well. It's a great teaching tool (because our intro CS class is for non-majors) because it's simple and has like no extra features for people to accidentally activate. However, I'm not sure I can really use it for JOGL
whoops. Lemme fix that, For you. import java.util.ArrayList; public class string { public static void main(String[] args) { String n1 = "That"; String n2 = "is"; String n3 = "a"; String n4 = "BOSS"; String n5 = "Zefron"; String n6 = "poster!"; ArrayList sentence = new ArrayList (); sentence.add (0, n1); sentence.add (1, n2); sentence.add (2, n3); sentence.add (3, n4); sentence.add (4, n5); sentence.add (5, n6); sentence.get (0); sentence.get (1); sentence.get (2); sentence.get (3); sentence.get (4); sentence.get (5); } } 
Lines starting with four spaces are treated like code: This is a code block. Surround text with '\`' characters to indicate `inline code`. The "formatting help" link was presented twice; once when submitting the topic and once when submitting this comment.
&gt; Trying to make a sentence using Strings and StringBuffer. I don't see a single string buffer anywhere. What exactly did you think was going to happen?
I've had a great time learning Clojure, it gives me a different appreciation for functional languages.
Use stringbuilder StringBuilder sb = new StringBuilder(); sb.append("A").append(" ").append("sentence.");
Clojure took me a bit to get beyond it's nature. Some of it acts like a "scripting" language where everything gets evaluated. Also the immutable stuff was tough to combat with the project I was working on.
What do you mean "won't run" ?
thanks a lot for the info, will check it out
 StringBuilder text = new StringBuilder(); text.append( "That" ); text.append( "is" ); text.append( "a" ); text.append( "BOSS" ); text.append( "Zefron"); text.append( "poster! " ); System.out.println( text.toString() );
This will do it, but I'm not sure how helpful it will be... import java.net.URL; import javax.imageio.ImageIO; import javax.swing.ImageIcon; import javax.swing.JFrame; import javax.swing.JLabel; public class GUICopy extends JFrame { private static final long serialVersionUID = 1L; public static void main(String[] args) throws Exception { GUICopy gc = new GUICopy("http://i.imgur.com/NRUFp.jpg"); gc.setVisible(true); } public GUICopy(String url) throws Exception { setUndecorated(true); setDefaultCloseOperation(EXIT_ON_CLOSE); ImageIcon img = new ImageIcon(); img.setImage(ImageIO.read(new URL(url).openStream())); JLabel label = new JLabel(img); add(label); pack(); } } It's late and I couldn't resist, sorry. But in defense of my assholery, clear specification of requirements is fairly important. 
As the two previous posts have obliquely pointed out, StringBuilder is preferable to StringBuffer in most cases. Most of StringBuffer's methods have synchronization calls built in, which are great if your sharing a StringBuffer between multiple threads, but as 99.9% of the time that's not the case, so it just wastes time. StringBuilder is functionally identical except for the lack of synchronization, so it'll run faster. Probably not a significant concern here, it a good habit to get into.
it feels like a toy, honestly
Just check against the system clock and do an update every it increments a second.
Lines starting with four spaces are treated like code: import java.util.Scanner; class Calc{ public static void main(String [] args){ etc.
So you're saying to put four spaces before typing each line, I assume.
We aren't mind readers, put some code here for us to look at.
edited
This should produce something similar: import javax.swing.*; import java.awt.*; public class demo { public static void main(String[] args) { JFrame frame = new JFrame(); frame.setLayout(new BorderLayout()); frame.setSize(500,500); frame.setTitle("frame"); frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); JButton button = new JButton("Button"); button.setSize(50,50); frame.getContentPane().add(button, BorderLayout.WEST); JTextField textField = new JTextField("textField"); textField.setSize(100,50); frame.getContentPane().add(textField, BorderLayout.NORTH); JTextArea textArea = new JTextArea("text area"); textArea.setSize(100,100); frame.getContentPane().add(textArea, BorderLayout.CENTER); JLabel label = new JLabel("label"); label.setSize(100,100); frame.getContentPane().add(label, BorderLayout.SOUTH); JCheckBox check = new JCheckBox("check box"); frame.getContentPane().add(check, BorderLayout.EAST); frame.setLocationRelativeTo(null); frame.setVisible(true); } }
What is money initialized to? If money is null the System.out.println method may print nothing at all.
Put a sting in it and see if it prints System.out.println("Test");
it previously had "2" in it, that did nothing either
What happens if you put a System.out.flush() call after it? Are all print calls failing? What about System.err?
yeah, this is all in a method that the main method calls
"money is a variable" doesn't tell us much -- what is the type? Make a toString() method in that object's class if you really want to make sure it's returning a string: System.out.println(money.toString());
money is an integer. I've tried replacing money with "test" and it hasn't printed that out either, other system.out calls in the program are still working
 Is the code in a main() class? 
it is in a class that is called by the main class, all the main method does is call this other method
All classes inherit toString() from java.Object, which, if not overriden, returns the type and hash of the instantiated object. Also, toString() is automatically called, when an object is given as a parameter to println().
Something is royally fucked up with my code, I'm running it with the debugger and it is somehow executing lines of code without ever going through them according to the debugger.
Is the program terminating? Or does it run forever? If it's not printing to the console with a simple string (make sure you're including quotes), then it must be getting stuck somewhere. My guess is a loop that isn't terminating before you call println(). Without more code to look at, check out your drawGameMenu() function for an infinite loop.
Try this System.out.println("test"); d.drawGameMenu(); System.out.println(money); allLevels[levelNum-1].drawMap(); Would tell if drawGameMenu's the issue (blocking or something homehow)
I don't believe you. I doubt the function is being executed at all. If you really want to test it, put something like if (true) throw new RuntimeException(); there, or even a System.exit(99); and check that the exit code is in fact 99.
Actually I believe that if you look, the primitives are not Objects, and do not have a toString method. Instead the println method has overridden method parameters that print the actual primitives in the logical non-hash form.
Yeah, the wrapper classes automagically wrap if the compiler detects that the very specific wrapper has a method specifier and that the primitive type is not used in the method declarations as overloaded. In the case of Printstream.println() the primitives will never be considered anything other than primitives, because the compiler will prioritize the provided primitive methods over converting the primitives into the generic Object subclass wrappers. EDIT: Source is Java Language Specification 15.12.2.2 tl;dr I realize primitives aren't classes, but I was only being specific enough to relate to this problem's scope.
I am guessing this is an applet? I think I used draw for text, not System.
yeah i didn't look over it very closely, sorry. [this](https://jogamp.org/wiki/index.php/Setting_up_a_JogAmp_project_in_your_favorite_IDE) has much more up to date info. did you get it working?
Declare x and i as longs, and then you don't have to worry about integer overflow. Here is an example: long x = 123456789123456789l; long i = 1234567890l; long result = x % i; System.out.println(result);
You can rewrite any for loop as a while loop. for (int i = 0; i++; i &lt;=10) do stuff is the same as int i = 0; while (i &lt;= 10) { do stuff i++ Loop types are just syntactic sugar - while, for, and until are all equivalent. Use whatever's easiest
I'm not sure about an unsigned applet, but I recently wrote a library to proxy JMS and RMI over Websockets that worked quite well in a **signed** applet.
Use Capital L, man. &amp;#3232;\_&amp;#3232; EDIT: 123456789123456789**L**
I was just nitpicking. While a long is not an int, it is an integer.
Actually, don't. Long is the object (well, it's the class, but you use the object), long is the primitive. You can use the object thanks to auto-boxing, but the code runs much slower that way. EDIT: I misunderstood Thomas1122, he is right about the trailing l/L. 
Really?
build automatically was on but unavailable external jars, even though they were in again and available there stopped it building.
Basically what I am looking for is a way to make the normal java application ServerSocket and Socket work for applets. Without any other language involved.
You do understand that you have to run the server and not just host it right? I can assume that with a ServerSocket app all you really have is a Java SE command line or AWT/Swing program. Running a Java application means you need at least a JRE installed. To my knowledge DropBox doesn't provide for application execution, just file hosting. You need to host the applet on a web server (it will be downloaded and run on the web browser machine). On the same machine hosting the applet you need to RUN your server application. You'll probably also need to open up the network port so the applet can talk to the server app. You can do this on your personal machine. Usually you would setup Tomcat for the web server. If you want other people to be able to use the applet you'd have to deal with making your Tomcat install visible on the internet. Usually a matter of setting up dynamic dns, forwarding the ports from your router, and seeing if your ISP allows you to do this with your personal internet account. If you really want to be running something with a ServerSocket on the internet you probably would end up paying for a Virtual Machine from someone like Linode. Depending on your application type, you probably want to replace your ServerSocket with either JAX-WS or JAX-RS web services. These technologies run in Java Web Containers (like Tomcat). I think Google's App Engine has a free tier that supports web services.
&gt;I'm much more interested in new developments in the Java langauge and JVM, and would like to see this subreddit take a turn in that direction. That's nice... However, my understanding is that this subreddit is for: &gt;Anything related to JAVA !
why would anyone use eclipse when there is a free version of IDEA now? http://www.jetbrains.com/idea/free_java_ide.html 
Or, you know, you could just ignore the posts that don't interest you. 
Generally, I would agree. However, there are other subreddits specifically created for my concerns.
&gt;I'm tried of seeing self posts from this subreddit on my front page where people are asking for help with their homework, or for code reviews, looking for career starting advice or CS degree questions. &gt;... &gt;Mods: please start filtering out these and other posts that can be answered with a simple Google search. That's an... ...annoying way of offering suggestions.
You omitted my suggestions from your quote. &gt; There are dedicated subreddits for exactly this purpose: * /r/JavaHelp * /r/reviewmycode * /r/AskComputerScience I'll admit that I could have expanded a bit more, and will edit the OP to be more verbose.
Banana and Apple could both inherit a common interface IAudited, which defines the three setters in question (and probably the three getters for those properties as well). Then the external class would simply have the signature: AuditUtils.setCommonFields(IAudited audited, Date date, int changeNum); And it would just call the setters with the appropriate values.
20 out of 9,454 subscribers isn't many.
I was going to ask a java related question here, probably still will. This subreddit is about everything java, it has 9500 subscribers.. the most any of those other subreddits has is 2000.. That means if I ask the other subreddit, I miss out on 80% of people that might be able to answer my question. The problem with generic subreddits is you can't make everyone happy. Whether you like it or not, this is the best place to ask Java related questions. If all you want is java news, maybe you should get a /r/javanews going instead of trying to conform this subreddit to your tastes. Also /r/reviewmycode, is arguably the biggest subreddit to be asking programming questions, problem is, just by looking at it you can tell it's basically dead.. lowest submittion on front page is from 7 months ago.. that's so old you can't even up/down the post
Honestly if you got rid of all those things this subreddit would have like two stories a month. Then people would just like post it in r/software or something.
I'm pretty evil.
I've often wished questions like that would just be posted on Stack Exchange instead. I'd prefer to see Java news, tips, blogs, etc.
You are correct, I was was just trying to illustrate that I may not necessarily be the only one with this complaint.
It could be that poor moderation has let this evolve into this state that we now know, and have come to accept as normal, when the intent, and other complementary subreddits, indicate that this should not be the case. The issue I have is is that "Anything related to JAVA !" is too broad, or I am grossly misunderstanding what the intent of the subreddit is, and should never subscribed in the first place.
...and people would x-post it here because of relevance. I'm certain I'm not the only one that expects there to be daily stories about Java as a language and tool. The biggest issue I have is that this has become a forum for help with homework. 
This subreddit will become shockingly awful without those posts. The amount of other things I discover through so posts is insane. On a semi related note, can we stop this 'Stupid question, Downvote' stuff. Just because you may be Mr JavaDevOfXNumberOfYears doesn't mean somebody else hasn't come up to a hurdle.
My vote is that the homework posts are fine. Using your logic, how would you justify any JVM related posts being allowed here as opposed to /r/jvm
erm... yeah. thanks.
&gt; On a semi related note, can we stop this 'Stupid question, Downvote' stuff. Just because you may be Mr JavaDevOfXNumberOfYears doesn't mean somebody else hasn't come up to a hurdle I think that is the mentality that has emerged here: a majority of regular readers don't want to see homework help posts, so they do exactly that. I'm all for helping emerging coders overcome issues, but this subreddit seems to be the wrong forum for it.
There's a subreddit search tool for a reason. Is 2 seconds of your time really worth polluting this subreddit with irrelevant posts?
To be completely candid with you, no one will take you seriously. I've been incredibly bored with the curriculum at my middle school and I've been using programming as a supplementary outlet for years. I have however, been looking to get some real world experience. Any company I've contacted wants years of prior work experience and a CS degree. The sad part is that with all of the experience I have teaching myself about programming and algorithms, I probably could do better than a CS undergrad. Unfortunately, us teenagers have it bad. The second they see you're under 20 the resume is thrown in the garbage. My advice to you is: start contributing to open source projects. It's an incredible way to gain experience with development cycles, working in a team, and programming, By the way, I'm 14 and I live in Cincinnati, Ohio (woot same state!) just thought it might help you to know you're **not** alone.
While I agree with you, having a separate subreddit for homework will only result in fragmentation. I wonder how many would start subscribing to /r/javahelp if homework topics were banned from /r/java . I think it would be reasonable to implement a tagging system, much like /r/buildapc has done. More details - http://www.reddit.com/r/buildapc/comments/igntx
Since they made it a point to mention their authentication system in the question, I'm guessing that you would first ask the user to log out and back in again. Then you'd ask to watch what the user is inputting into the form fields.
Yeah it's not meant for real work. It's meant to help bridge the gap between the scheme variant taught at Rice and the other PLT schools (NEU, my alma matter being one of them) and java. We used Dr.Java (Used to be called professor j) for 3 weeks and then switched to full on eclipse.
I'm not above helping people. I'm against doing people's homework for them or "helping" them with a job interview. We're doing no one a favor if the employer hires someone not really qualified because of us. I feel stackoverflow does a much better job with this sort of thing than /r/java http://meta.stackoverflow.com/questions/10811/how-to-ask-and-answer-homework-questions
Applets died in the early 2000s. Also, this looks like a comprehensive web app, you ought to monetarily compensate whoever makes this for you.
That's the problem nowadays, everyone expects years of work experience. But that's difficult to receive if every company requests it.
Maybe I should just post in /r/technology because it has 1,152,381 readers. I'm sure at least a quarter of them know programming. Problem with those subreddits is that they are too big, and too generic for getting Java programming help. In this subreddit I have an almost guarantee that someone here, has experience doing what I'm trying to do.
Upvoted for evilness
because the word "method" is reserved in java, just like how you cant make a variable called string, but you could make a variable called string2.
Pretty sure that's not it. `method` is not a reserved word.
Yeah, that counts! Eclipse has the console built in to it. If you were to run your code outside of eclipse, it would show up in an actual console.
How about generating a sequence of strings using a regular expression?
String and string have different bindings.
Oh..well then that's just a bunch of if statements and printing text. The only thing I don't yet know how to do, is have an if statement that you can type a string of text into, instead of a simple integer.
I will be using regex for going through the content. That I already know how to. But the problem lies at the IP algorithm. Now, going from 1 to 100 in 4 diffrent indexes means A LOT of combinations. 100 times 100 times 100 times 100. 100000000 combinations. So, how would that algorithm look like. How would I go about to get every combination possible and search it. That is the real problem. I'm not that great with math which makes it even worse haha...
Yea for sure there would be compensation. I was hoping someone could point me to resources to do it myself as well. I said "applet", thanks for correcting me. If I knew more about java I wouldn't be posting for help. Regardless, would you think it would be tsomething appropriately done with Java?
You might be better off getting 4 random int's, 1-255, and 0-254 * 3. Once you generate it, push it onto a list to keep track of what you've crawled. Next one you generate, check against that list. You could then dump it to disk into a text file to re-read for the next run of the program. After you have an ip address, check to see 80 is open, then run your crawler. You should spend the time here: http://en.wikipedia.org/wiki/List_of_assigned_/8_IPv4_address_blocks and look at blocks you probably don't want to crawl, and ones that you simply can't crawl. You can build a blacklist pretty easy and match the quad above against it.
Thank you very much for your answer.
Upvoted for recognising evil.
Yeah, everywhere I work, people seem to be on different pages on the whole IBlah and BlahImpl. I really hate IBlah, and I find BlahImpl to be only annoying.
Thank you very much. The simplest solution is usually the best I guess. I was too much into doing some super formula when I actually just had to look at it another way. Thank you a lot!
I will go for the random generated IPs with blacklists and used Ip check. I am well aware of the risks and how it's behaviour can look like worms. Now, this is actually just for fun and for learning. The greater the challenge the better. The more I will learn. I won't be running this on doing over 4billion ip combinations. I will be using a certain amount of IPs. For an example, I will go for 100 IPs to check out then it shuts down. My intentions is only to learn and improve myself. Thanks for everything!
It annoys me more when someone feels it necessary to create a single implementation of an interface and then they have the audacity to name it SomeInterfaceImpl. 90% of the time, you could have made JUST ONE CLASS. AUGH! How do we feel about AbstractSomething? Good? Bad? Indifferent?
How often do you need it? When I see SomethingImpl, I assume that it is the ONLY implementation of the interface Something, and interfacing something for a single implementation is usually code smell (unless you're doing some older-school J2EE, but some consider that a code smell as well.) 
Which is why DefaultXXX is better.
Really? Coding to implementations is crazier. 
Just start with the basic tutorials that they offer. http://www.lwjgl.org/wiki/index.php?title=Main_Page lwjgl is just a wrapper for openGL, so any tutorial you find will work.
You could try the youtube channel "thenewboston" He has good, basic and intermediate Java tutorials.
I agree - the space invaders tutorial is a good one that goes step by step, quite simple. OP, have you tried any of these?
Since LWJGL just wraps OpenGL, you may want to get the Big Red Book (google it, on my phone, too lazy to find link:-). Its the best way to learn opengl
First program to interfaces: List&lt;Component&gt; c = new ArrayList&lt;Component&gt;(); c.add(stuff); Have you used a debugger? Look at some [examples](http://www.java2s.com/Code/JavaAPI/java.util/ArrayListtoArrayTa.htm) of how to convery arraylist to array 
This is the approach I would take as well. Having it thrown/re-thrown all the way up will allow the GUI to know about it and keep itself in a consistent state if the error does occur. 
Yeah, I realized using a List almost right after I posted, haha. Didn't get a chance to delete the post. My final solution is this: List&lt;Component&gt; c = new ArrayList&lt;Component&gt;(); c.addAll(Arrays.asList(ToolbarPool.getDefault().findToolbar("AddEditDelete").getComponents())); c.addAll(Arrays.asList(ToolbarPool.getDefault().findToolbar("Navigation").getComponents())); for (Component component : c) { component.setEnabled(false); }
If you don't want to have to handle the exception as it bubbles up the stack to the UI layer then you might want to consider an event listener based design. Your DAO layer, upon getting a certain exception, handles the exception and does not propagate it but fires a specific event when that specific condition occurs. Listeners registered to listen for that event receive the event and act accordingly. Also I'm not sure what you mean by Java not supporting callbacks. They are actually quite common.
It's just not something I've seen around I guess. Java callbacks require defining an interface (assuming you want to pass parameters). Not supporting was a poor choice of words, it just doesn't seem to flow with java's overall design. I could definitely be missing something here.
Why not just use several for loops to iterate the array? You're allocating memory to create an ArrayList and then spending processor cycles iterating over those arrays to copy the Component objects into the ArrayList, just so that you can iterate over them all over again in the ArrayList. Seems very wasteful to me. Also, protip: An ArrayList comes in a default size if you use the default constructor. When you add to the ArrayList and there's not enough room left, the ArrayList will create a new internal array to make room and copy everything from the original array into the new array. So, don't use the default constructor - provide a reasonable initial size to prevent waste.
Here's another thing you can do that isn't so wasteful: for(Component[] c : new Component[][] { ToolbarPool.getDefault().findToolbar("AddEditDelete").getComponents(), ToolbarPool.getDefault().findToolbar("Navigation").getComponents() }) { for(Component component : c) { c2.setEnabled(false); } }
Your explanation for doing that makes sense and I agree that performance is indeed important. Could you help me understand how I would incorporate the above solution into an IF statement? The code I currently have is this: List&lt;Component&gt; c = new ArrayList&lt;Component&gt;(); c.addAll(Arrays.asList(ToolbarPool.getDefault().findToolbar("AddEditDelete").getComponents())); c.addAll(Arrays.asList(ToolbarPool.getDefault().findToolbar("Navigation").getComponents())); c.addAll(Arrays.asList(ToolbarPool.getDefault().findToolbar("ListFind").getComponents())); c.addAll(Arrays.asList(ToolbarPool.getDefault().findToolbar("SaveCancel").getComponents())); c.addAll(Arrays.asList(ToolbarPool.getDefault().findToolbar("Close").getComponents())); if (mode == 0) { for (Component component : c) { component.setEnabled(true); } c.get(13).setEnabled(false); c.get(14).setEnabled(false); } if (mode == 1) { for (Component component : c) { component.setEnabled(false); } c.get(13).setEnabled(true); c.get(14).setEnabled(true); } So basically what I trying to do is add all the Components into a single array. Then based on the mode, I will either enable or disable all components, except for 2. With your approach, would it be something like this? :: for(Component[] c : new Component[][] { ToolbarPool.getDefault().findToolbar("AddEditDelete").getComponents(), ToolbarPool.getDefault().findToolbar("Navigation").getComponents() ToolbarPool.getDefault().findToolbar("ListFind").getComponents() ToolbarPool.getDefault().findToolbar("SaveCancel").getComponents() ToolbarPool.getDefault().findToolbar("Close").getComponents() }) { if (mode == 0) { for (Component component : c) { component.setEnabled(true); } c.get(13).setEnabled(false); c.get(14).setEnabled(false); } if (mode == 1) { for (Component component : c) { component.setEnabled(false); } c.get(13).setEnabled(true); c.get(14).setEnabled(true); } } } I haven't had a chance to try it in the application yet, but let me know if that looks right. Thanks!
I agree. I think TomEE will eventually replace Tomcat. I do not have experience with JBoss but Glassfish is also a great app server.
Yea that definitely seemed like the right way to do things. So my only issue with it (and hence the question) would be that for the most part the upper level components that receive the exception will handle it similarly. Essentially they'll allow the user to retry the operation or fail. I imagine this will amount to a while loop attempting to do whatever needs to be done until it's successful, if there's an exception we prompt the user and retry (loop) if they want, otherwise we exit. This makes for a good deal of duplicated code throughout the program, or some sort of complex Runnable/anonymous inner class usage to try to generalize it (remember that this is any operation within the gui, so I need to be able to wrap any operation in this while/try/catch loop). I can sense that it's getting complicated, here's a pastebin with some sample code: http://pastebin.com/LYrASCLn . Looking at it, I get an off feeling, which makes me think I'm going about this whole process wrong.
I responded to the post you commented on here: http://www.reddit.com/r/java/comments/tt6za/best_practices_for_user_notification_and_jdbc/c4pmjpz Just in case you had any more insight as to the specifics. Regardless thanks for the reply.
In that case, you should create a small service layer above your DAO to abstract the data retrieval retry from the GUI. Maybe something like this? public class DBService() { public getThingy() { bool retryFlag = true; while(retryFlag) { try { //DAO call goes here } catch(WhateverException e) { retryFlag = onError(); //Optional: Re-throw the exception if the user gives up, to allow the caller a chance to handle it if(!retryFlag) throw e; } } } private boolean onError() { //Error notification goes here //Return true to retry, false to terminate } }
ArrayList&lt;ImageIcon&gt; icons = new ArrayList&lt;ImageIcon&gt;(); icons.add(new ImageIcon()); Something like that?
Am dumping EVERYTHING to do with Java.. Dead now that Oracle OWNS it.. 
Thats because it is SHIT.. 
Not evil, but very Visual Basic 6. Microsofties love IBlah 
I got my Masters but only went back after 6 years of career. You mention money, a Master's degree in software isn't going to make you more money, but it may open up more opportunities and definitely will open your mind up to a broader range of programming topics. I got a lot out of my degree but only because I had real experience under my belt going in. Get a job and get some experience. Find an employer who has a program that will pay for your additional schooling. I had one of my two years of my Masters program paid by my employer. Your GPA sucks (mine was barely any better, came out with a solid 3.0 way back when). Masters programs can be lenient (they'll take your money) but having a few years of work under your belt will help them look past your GPA. Right now that's all you have and it ain't much. &gt; There hasn't been a whole lot of CS that hasn't interested me aside from the high-level maths, so I'm fairly sure I'll enjoy (or at least be able to tolerate) whatever I do. You don't like CS so why are you confident you'll like a job in it? Didn't you just say the high-level math courses were your problem areas GPA wise? If you really are good at math consider getting onto statistical analysis programming of large datasets. Huge growth in that area and some pretty tasty paychecks. Check out the R programming language, map-reduce algorithms, and get really good at databases. Please don't go into the workforce looking for the big paycheck. Get a job and work on your career and skills and the money will come. Your early years should be all about networking and getting good at what you do. I guarantee it will be at least five years of hard work before you can start describing yourself as a good programmer. 
Scary but not surprising.
Yes, you can: [Jave SE 7u4 Download](http://www.oracle.com/technetwork/java/javase/downloads/jdk-7u4-downloads-1591156.html)
Explain?
What is the surprising thing? Apple dropped Java a year or so ago. They don't do anything with it, only Oracle. 
Can't download it?
Try it now. Changed it to public. I'll put a copy on dropbox but it was saying the upload time was around 45 minutes.
ok cool. Do you have any recommendations or ideas of simple programs that serve a purpose that I could work my way up to? 
Good call. I knew about that setting but completely forgot that I hadn't changed it. It's on dropbox at the original link above.
Thanks.
Most Android applications are written in Java.
Thanks guys for the response! I'm off to venture into a few problems I can work on.
What do you mean, it's not enterprise? Every single large company I've seen from inside has used it.
Damn skippy I disagree. Swing works quite well, thank you very much. Maybe you can get some flashy effects in WPF or whatever the fad is this week, but good luck writing a robust cross-platform app with that.
You are amazing thanks 
Are you referring to Swing or JavaFX or something else? My initial impression of Swing around 5-6 years back was that it needed work on native look and feel, and while that did improve, it still felt tacky - SWT still appears to be a better choice from the POV of users. I havent tried JavaFX, and I'd like to know if it's time to start looking at it in earnest.
Well, GTK+ applications also have a long and distinguished history of clashing horribly with KDE. Can't really blame Swing for not being an exception—writing a Qt L&amp;F implementation is theoretically possible, but probably really hard. Back when I used KDE, I usually had Swing apps use the Metal L&amp;F instead. It's not flashy, but it works.
Well put One of the main problems that exists in enterprise spaces is legacy software. Banks in particular have lots of software running that was written in Cobol, Delphi, C++ or just plain native plsql. What java excels at currently, is gluing these things together and wrapping them up in a pretty web interface. Java talks to everything. There are drivers for every database and web service under the sun. The idea is of course to eventually transition everything to java, but allowing enterprises to slowly introduce it without immediately subbing out their existing systems is the key selling point. That and the many java devs available
I'm currently doing a Google Summer of Code position in which my project involves writing an image processing software package that allows image archivist to easily analyze large numbers of images very quickly. The entire project is in Java, including the GUI, which is being written with the aid of the Vaadin environment.
What stfm was probably referring to when he talks about Tomcat not being 'enterprisey', is that it doesn't support the whole stack of JEE - JTA, EJB, JMS, JAAS etc. Tomcat has always been a simple ServletContainer and pretty good one at that, that can run web applications comprising JSP and Servlets but nothing else. So, if your application needs to use EJBs, needs JTA to manage transactions etc., then Tomcat is not for you. 
Different from what? Swing? What's your point?
It is not an Enterprise application server. It does not and has never come with EJB, clustering, failover, security etc like actual enterprise application servers like WebSphere, WebLogic and JBoss. Just because it is used by enterprises doesn't make it an Enterprise Application Server. It is a lightweight servlet and JSP container.
The Java Tutorials at [Oracle.com](http://www.oracle.com) are good -- to start. After about five lessons, the tutorials become over complicated for a beginner. After you've mastered the basics, they can be helpful for learning more advanced, obscure topics. A good book is *Learning Java*, by Patrick Niemeyer.
In reality, many enterprises don't tend to use the one-size-fits-all application server clustering or failover very much. Security is usually done over simple LDAP and NTLM. Apps that really need clustering, often buy a separate solution like Coherence. App servers are used as glorified servlet containers, most of the time, sold on the brand much more than the value, which is OK in good times.
Thanks for the reply! My fault, I shouldn't have used double-negatives. The quote meant the exact opposite of what you took it as. I love my CS courses, not really a fan of my math courses. I'm actually TA'ing for the intro to object-oriented programming course here, and TA'd for the intro to procedural programming course last year. I'm not a perfect student, but I'm definitely a people-person. As far as work experience goes, I've been interning at a small company over the past two summers and winter breaks writing some of their billing software (easy VB6 stuff) and doing some web apps utilizing C# and MySQL. I'm obviously putting this on my resume, but is there anything in particular I should be stressing to learn while I'm interning here? I've always been fixing their bugs, writing an add-on or two, or maybe separate programs altogether, and updating the site, but it gets a little old after a while. There's so much out there and I want to expand, but it sounds like I'm most useful continuing with the repetition.
What does framework ajax support have to do with the cloud? Also, the example html looks like they've been lifted from the 90s. 
Judging by this reddit that would indeed be the main purpose. Is there are r/javapro? 
Simple: a language should do its best to preventing you from doing something that abysmally stupid. This particular page is a piece of legacy code, and was written by some sketchy contractors (whose presence in the code is still felt in them over-designing simple solutions). Just because you shouldn't use something a particular way (here, Java logic in JSPs), doesn't mean it won't get used in that way. And yes, HTML is not a programming language. But adding it into the mix of that particular page makes things even messier. 
Thanks for the clarification. The last thing we need is another programmer who is only in it for the money and has no love for the job. Sounds like you are at the point where interning is a dead end. Unless the company is a non-profit charity I'd dump it since they should be paying you for your skills. After the first summer they should have offered you at least some hourly pay. You need to move away from dead technologies like VB6. .NET is still valuable as is SQL work but as I advised if you like statistics and math I'd move toward analytic programming. I'm in that field, my company is a startup called Clario Analytics and the field is booming. To give you a hint, IBM bought SPSS for more than a billion dollars. There's gold and an interesting career in statistical analysis. In fact, with your programming and math background you're half-way there. Screw a MS in CS. If you have to stay in school go toward a MS in Analytics. But I still suggest looking for a company that will pay for any further schooling. There are hundreds of big corps that use .NET so that will help. Do you know any Java? The kiddos on Reddit don't find it sexy but the JVM platform is still one of (if not the) best generic programming platform out there and you'll never go hungry. You have to learn Java and it's main libraries because they are important but after that, like .NET, you can pick more suitable languages that target the JVM like JRuby, groovy, or some other more modern lang. If not Java then C is another fundamental systems programming language that will never go out of style (as long as there are real-time systems or algorithms that need to be close to the metal or use the latest hardware). Lots of C-based careers out there including smartphone apps. Learning a whole web stack from front to back like Rails, Grails, .NET, will get you jobs. If you want a career you need to think about specialization. Again, I'm pushing you toward analytical programming. One, because web developers are a dime a dozen and two, because writing UIs gets old quick. The kids shun Flash but love HTML 5 but you know what? It's all the same old shit. UI dev hasn't changed much since the 80's. You can do more because the tools have gotten easier but the steps are the same and it gets dull unless you are also part of the creative team and are good at design. If you want to be more trendy and make some solid cash in the next few years then get a Mac and get familiar with Objective-C programming. Demand for OC programmers is booming and will for the foreseeable future. Even if you hate Apple (some people are irrational) they've created a hugely lucrative market for independent programmers. I guarantee you well-paying gigs if you know how to cobble together an iOS app. That's my advice. But stop doing stuff for free unless you are actually getting to work on something new and are given access to tools and techniques that aren't from the early 90s. Interning another summer doing monkey-programming is a dead end. You'd be better off hanging a shingle on Craig's list saying you'll program for $20 an hour. 
But using this logic, any front-end will "mix" HTML with whatever you put up there. Php or whatever. That is inevitable. I really dont think you have a point there. "Doing it wong" is not a very good valid argument against a technology. 
Actually, Swing development is my daily bread and butter. I haven't tried Java 7 yet, but I can spot a Java 6 Swing application a mile away, because extreme familiarity with both Windows and Java UI development. There are subtle differences which make Swing applications *different*. Swing is serviceable, don't get me wrong, and it's pretty cool that you can get a Swing app to work the same way across all platforms supported by the JVM. As Gosling said about SWT, SWT reproduces all platform bugs, so an SWT app won't necessarily behave the same way across platforms. Swing abstracts away the platform differences, so while a Swing app may stick out in subtle ways, it works the same everywhere.
Oh, well that says a lot
Start with [The Java Tutorials](http://docs.oracle.com/javase/tutorial/). But if you're not interested in programming, you will fail. It's not something everyone has the knack for. Read [Teach Yourself Programming in Ten Years](http://norvig.com/21-days.html).
The videos you're watching look fine. As someone mentioned, you can also look at [The Java Tutorials](http://docs.oracle.com/javase/tutorial/). As a suggestion, maybe also think of a finance program you would want to right. The best way to learn programming is to get to know the basics and then to actually write something useful. If you need ideas for an app to write then forward me some links to the job listings you would be interested in. I have a sneaky suspicion I could recommend some apps to get started on.
I'm actually working on an installer right now. We use [install4j](http://www.ej-technologies.com/products/install4j/overview.html), though not the cheapest option.
[izPack](http://izpack.org/features) is a widely used installer generator.
Haven't tried the others, but we've been using this freeware for several years now. I like that it is simple to use but flexible enough to make a complex installation (registry changes, permission issues, etc.) easy on the end user. [Inno Setup](http://www.jrsoftware.org/isinfo.php)
Also, [Travis-CI](http://travis-ci.org/) does it fine too.
Not a recommendation but a warning: enterprise organisations usually want .msi-packages. 
I don't see what any of these features specifically have to do with cloud computing but nice little JSF tutorials nonetheless.
This will print out something like "HTTP/1.1 200 OK" for you. HttpClient httpclient = new DefaultHttpClient(); try { HttpGet httpget = new HttpGet("http://tinyurl.com/2tx"); HttpResponse response = httpclient.execute(httpget); System.out.println(response.getStatusLine()); } finally { httpclient.getConnectionManager().shutdown(); }
Not sure if this is better or worse than the other post, but an alternative method would be something along these lines: private int getStatusCode(URL link) // Returns the numerical value, such as 200, 404, etc. { int statusCode = -1; // Default value HttpURLConnection connection = null; try { connection = (HttpURLConnection)link.openConnection(); statusCode = connection.getResponseCode(); } catch(IOException e) { JOptionPane.showMessageDialog(null, "Error reading status code.\n" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE); } finally { if(connection != null) { connection.disconnect(); } } return statusCode; } or private String getStatusCode(URL link) // Returns the full code, such as HTTP/1.0 200 OK, HTTP/1.0 404 Not Found, etc. { String statusCode = null; // Default value HttpURLConnection connection = null; try { connection = (HttpURLConnection)link.openConnection(); statusCode = connection.getResponseMessage(); } catch(IOException e) { JOptionPane.showMessageDialog(null, "Error reading status code.\n" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE); } finally { if(connection != null) { connection.disconnect(); } } return statusCode; }
I use Launch4j. It is pretty simple to use and is free. http://launch4j.sourceforge.net/
I also use installanywhere. Not bad, but a little complicated and not cheap.
&gt; One of them will be to maintain current status about virtual machines. So, I need some method to handle long-running threads. I don't follow. Your first sentence makes it look like you need some method to cache data in the web app. (There are many ways to do that.) Is your second sentence a separate requirement, or a misguided conclusion?
Okay to clarify, I am not coding these programs myself, and it seems that the things I am coding are running fine as long as JGrasp is still running to run them. I re-installed the JRE and it seems like the programs are running a little better. This was to ensure that it is the 32 bit version. I do not do anything special when running these programs, I have a .exe which launches a program previously coded in java.
[Nagios](http://www.nagios.org/) does great info gathering. Based on what I understood of your post, it was quite vague about what you were trying to do specifically.
thank you very much. this is a very confusing matter for me as i am very confused about everything right now. I am in finance but not really interested in it. Also i don't want to keep being a burden on my famiry after i graduate. This is why i want to learn Java and be more fruitful and accomplish. Consultancies I hear give u a fake resume and put a 5 year experince in Java programing and send you to mega companies like VISA and Motorolla who have hired vendors to get them sub contractors. The total pay for the year comes out to be around 65000 WITHOUT health benifits or insurance. For working around 60 hour weeks that is pretty good I think. Thank you
Yeah, nagios isn't really what I'm looking for. I changed my post to try to make it more clear. 
Use something like JBoss and EJBs that maintain connectivity and persistence of the data gathered from the VMWare API. Have the deployed beans act as the long running threads you mentioned or just start a thread inside the webapp container (JBoss or whatever) that does all the work and stores it in a global synchronized static object.
[Seems there's a free version (v3.0.3)](http://launch4j.sourceforge.net/changelog.html) [And the paid one linked above \(v5\)](http://www.ej-technologies.com/products/install4j/overview.html) Are these the same?
The size of the jars doesn't bother me as much as the number of jars. It isn't the size of any one library that increases the long-term app maintenance costs, it's the number and possible conflicts. Besides, that's a straw-man argument. Who are "people"? Certainly not me and I use Tomcat every day as my go to container when I need one. It's not the container's fault when the programmer doesn't take into consideration jar-plosion when picking their stack. Remember that Java EE is just a spec, not a specific implementation. The whole point is to have the choice of implementation that works best for your project yet adheres, to some degree, to a standard in case it needs to be swapped out. If I need web services I have my choice of implementations but am not forced to have an unused Java Server Faces impl thrown in too. Standards are great, but they are not the be-all end-all of how technology should be compared, selected. Monolithic app servers are great for corporations more because they give you a all-in-one-box solution (even if some of that box is inferior to another impl) and more importantly offer service contracts when things go wrong. When you have a lot of developers coming and going, letting each one pick new tech is a problem. Better to just go with some standard app server and config and force new development to adjust to it instead of the other way around. I don't work for a big corp and I'm more interested in pure performance/reliability, simplicity, and less maintenance. For me to pick the technologies that work the best for our needs and then slim the install down makes a lot of sense. I'm able to throw out one part of the stack if/when something better comes along. I don't always use Tomcat for web services. For certain projects I can get away with a simple HttpServer created inside a main method of a startup class. Talk about simple and quick startup. 
Sorry, don't take it personally. I just see that a lot of people do this stuff for the wrong reasons lately and that creates neither a benefit for them nor for the society as a whole. Those people suffer, because the hate their job and society suffers because of their shitty code. Ask yourself: Do you love to fix things which aren't broken? If not, there might be other jobs where you will be happier/more efficient/more successful.
izpack (works on all platforms, but has windows-specific features like adding to start menu, etc) + install4j (builds windows exe with icon)
we use it with no problems here. but it doesn't answer the poster's question, he wants a desktop-installable app. However, JWS apps can be saved as a shortcut on the desktop and re-run locally, which isn't too bad .....
I think at this point the whole Java eco system might just be too big to start learning everything just for the sake of completion. If you want to do flash-like rich internet application stuff, learn JavaFX. If you want to do mobile development, learn JavaME (Not sure if that still is enough of a large market though? Hasn't JavaME lost out to Android and iPhone?)
JavaEE is where it's at. All that other stuff is "meh". air0day has it right, learn Spring, JMS, JPA. SpringMVC is okay now, but I bet it's dead in 5 yrs. GWT wouldn't be horrible to learn, but I hate it with a passion.
learn Java EE. Spring is still common but not the best choice for most new applications. I would focus on Java Server Faces with JPA or hibernate for the Model layer.
If you are looking for the latest and greatest then learn Java EE 6 (Primefaces3/JSF2/EJB3.1/JPA/JMS) using Netbeans 7. 
Maybe JavaFX 1.x ? http://www.oracle.com/technetwork/java/javafx/overview/index.html
A colleague of mine is still working on it, so no.
Depends a lot on what you want from it. Many people recommend JavaEE. If you only want marketable skills it's a safe bet, but personally I consider everything enterprise-related to be soul sucking. If you want to be a better programmer focus on simpler stuff that gives you the best bang for the buck, and avoid the mammoths. Personally I'd suggest learning how to use the following without any framework (the knowledge will be useful no matter what you do): servlets, sql, mail, xml. In order to be able to do full web programming you also need an html template engine. The most used is JSP, but honestly it's far from good. Pretty much anything newer would be better - my cup of tea is Apache Velocity, which has the advantage of being really easy to learn and very powerful. After that learn Android.
I really like Play!
Don't bother with FX.
I would like to know this as well. I picked up programming at the start of this year and have been steadily increasing my skills and experience. Learning JavaEE would be a move in the right direction for me.
Check out the official Java EE tutorial, it's pretty good
The consultancies you refer to are people farms and I would **NEVER** suggest going that route! It won't take long for the companies to realize you don't know what you are doing, and you will end up having wasted your time by interviewing and then working there for a week or so at which point the company will probably refuse to pay because your resume was clearly forged and you wasted *their* time. $65k/y without insurance for 60 hour weeks is **horrible** Please *for the love of God* do NOT go that route. You will suffer, companies will suffer, the people farm you work for will possibly profit. **WTF is wrong with you!?**
Java EE is were most of the action is now. Learn about JSF, CDI, JPA, EJB, JAX-RS and Bean Validation and you almost can't go wrong.
You're printing out x and y each time, instead of row and col.
EJB 3 in Action edit: 2nd edition is coming out spring 2013... not sure if you want to hold off on buying till then http://www.manning.com/panda2/
Oh my god. I can't believe I missed that. Thanks!
Now to figure out how to use IntelliJ's debugger, then. (I'm writing this code as part of teaching myself how to use IntelliJ after having used just Eclipse)... I tried before in the process of debugging this already, but it seemed to just skip past all the breakpoints. Anyway, thanks again.
Make it a runnable Jar. I've only used OneJar before, but there are other systems that bundle your dependencies nicely into one runnable jar. 
http://ocw.mit.edu/courses/civil-and-environmental-engineering/1-00-introduction-to-computers-and-engineering-problem-solving-fall-2005/lecture-notes/lecture22.pdf Everything you need is on those slides. The .java files are at Lecture 22 http://ocw.mit.edu/courses/civil-and-environmental-engineering/1-00-introduction-to-computers-and-engineering-problem-solving-fall-2005/lecture-notes/
There are always multiple solutions. One way I have seen is to annotate a entity for Hibernate ORM, plus also annotate it for JAXB for purposes of XML marshalling/unmarshalling via a web service. 
You might try [safari online](http://my.safaribooksonline.com/). I know it's online, but you can sign up for a free 10 day trial and look through books. It sort of depends on what you're looking for. I've found some books that [are the same](http://www.amazon.com/Program-early-objects-Edition-Deitel/dp/0132575663/ref=sr_1_1?ie=UTF8&amp;qid=1337718140&amp;sr=8-1), only with [different titles](http://www.amazon.com/Programmers-Edition-Deitel-Developer-Series/dp/0132821540/ref=sr_1_7?ie=UTF8&amp;qid=1337718140&amp;sr=8-7). And they're the same as [other editions](http://www.amazon.com/Programmers-Edition-Deitel-Developer-Series/dp/0132618206/ref=sr_1_6?ie=UTF8&amp;qid=1337718140&amp;sr=8-6).
Thanks for your input.
Have you tried using jama or the cern colt linear algebra libraries? If you want to do systems of equations, linear algebra is the king. The cern libraries can have matrices with objects as well as doubles. Then you can just have an extremely simple equation: Ax=b. To solve it, do solve() or invert(), get determinants etc.
JMX is so much cleaner with spring. http://www.mularien.com/blog/2007/11/09/5-minute-guide-to-spring-and-jmx/
I'm not really a Play! fan. It's like PHP in Java. Using all static methods to accomplish what you want is "meh". It works though and it's a nice framework, but it's not for me.
Some people hate JSF with a passion as much as I hate GWT with a passion. I've never heard of ZK. I recently read the PF 3.3 announcement and I plan on giving Prime Faces a second look.
So, I went to ZK... yea, um - no. Here's why: http://www.zkoss.org/zkdemo/grid/inline_row_editing go down, click on "XML and Java Source" -- yea, no way that "framework" makes my life easier. I can do it all with Javascript and Servlets with less lines of code and less time.
The ones who hate JSF with a passion are mostly people who came in contact with version 1.1 and earlier, or with 1.2 and never found the tutorials (hint BalusC) and tools (Facelets, Seam, Tomahawk) to make it tolerable. With JSF 2 it's a whole different game and it's a shame people still hold a grudge against something that's nothing but a distant memory.
well, why don't you take a look at Grails or Play framework?
LWJGL is pretty good IIRC, and so is JME3.
Coming from a Spring background, JavaEE is just about as simple as it gets. (i.e. they took *a lot* from Spring). It's really simple (at least I thought it was) to pick up, and it integrates easily with other Java standards/buzzwords (JSF2 and JPA in particular) making it pretty easy to stand up a well rounded stack in just a short time. With JSF2, Facelets became the default view technology for JSF, and it is as straight forward to use as any other templating language I've seen. I'm still trying to find the time to learn android so I can't comment on that.
I personally have found Safari Books Online to be indispensable. My day job is java EE and SOA. 
Did you actually understand what he wrote? This doesn't make sense - at all. Or is this just some childish "they moved on to a better language for their implementation, so they are not part of the Java family anymore" of people who assumed Java-the-language would be the only language they will ever need and need to show their hurt feelings now?
Android or JavaEE. If you go for JavaEE, take some time to learn the tooling, too: Maven, git or Subversion, server configuration, IDE integration, etc. While not formally part of J2EE, you can't really call yourself an enterprise developer without it.
It's canceled like 5 years ago
I didn't know about these... Thanks!
Congratulations Oracle. You wasted millions of dollars, you sued the company responsible for the most successful implementation of client side java ever, you're exposed for not giving a rats ass about the future of software development, and developers HATE you. You'll get nothing and like it, you greedy litigious fucks.
Wow, Groklaw is really tooting his own horn there. :-P
I'm betting that AT&amp;T is waiting in the wings on this one!
It's allowed when one is correct. It just plain annoying when one isn't.
TIL. Thanks! Seriously though, think of the possible legal repercussions of that. How many new (i.e. since the late 80's) languages are pretty much based on C? 
Oracle devs should probably already know the contacts. But I'm socially inept, so it's just a guess.
:'D
I was expecting "fuck you" by Cee Lo 
Well... family always comes first. And yes people make a lot here, but everything also costs a lot more.
I have used Launch4j as well but it isn't really an "installer." It lets you run java applications as .exe files. Works great but if you are looking for a thing like install shield wizard or something, that's not what launch4j is as far as I know.
And you stole Khan Academy's graphics?
Somebody "stole" something on the Internet!?!?!
It's clearly obvious OP is not trying to make money on this site either. 
That was sort of my guess as well. My next project will be a PrimeFaces project.
Unfortunately Oracle will still go on and on. Their enterprise footprint is bigger than ever. I am just as astonished as anyone at Oracle's attitude to the single biggest thing to happen to Java in its lifetime. No doubt they want to be at the driving seat of t but this surely isn't the right way. Perhaps suing is the only creativity in their toolset (besides acquisition)!
Yep.. that's pretty obvious to anyone following the case. Next you'll be explaining how android doesn't actually run java byte code.
Why don't you actually check stuff instead of writings paragraphs about things you like to believe? :-) This “OMG it's not 110 % Java-the-language”-hate is really annoying. Get over it, it's not a religion.
Well, I did check the stuff. Play! appears to be a Scala framework, not a Java framework. Nothing wrong with either, but that's just the way it is. What else is there to say?
The [official Java tutorials](http://docs.oracle.com/javase/tutorial/) are actually very solid. There are a lot of crappy/outdated Java intro books out there, so hopefully you didn't get any of those. You'd definitely be better off with the online tutorial in that case. Once you have the language understood and know the basics, read *Effective Java* to learn good practice and then *Java Concurrency in Practice* to learn how to properly use threads -- two books every Java developer should read. 
Thanks! I always have a hard time following online tutorials but I'll probably look at those if I run into any troubles. I got one that covers 5 (second edition) and one that covers 6 so between the two I should be up to date. I'm adding those to my amazon wishlist now so I don't forget. thanks!
Why is there so much space?
&gt; the only way out I'm seeing is implementing 1 object for each Hibernate object, copy the attributes and return the other object. I think what you're referring to are [data transfer objects](http://en.wikipedia.org/wiki/Data_transfer_object), which are widely considered an anti-pattern, and should be avoided if possible. I'd try what seppyk suggested first, and just add the JAXB annotations along with the JPA annotations, and return it as JSON or XML.
Nice. Some wasted space in your dialog though.. try shuffling some of the components around to see if you can get more efficient layout.
Well, the universe is expanding at an accelerating rate and only about 4.2E-21 percent of it is actually matter.
Unlike many other environments, Java is pretty strict in upwards compatibility, so pretty much everything you learn about Java 6, translates up to 7, although 7 has some new features you can add to your repertoire after that.
I've always been interested in interfaces for the disabled, maybe research a specific disability and go from there?
Java 7 has just minor improvements on Java 6. Read the book and learn Java (not Java 6, but Java). After that you can find a web page on what's new in Java 7, read it, and you'll be all up to date. As the others say, Java is backwards compatible. Personally, I try to stick to 1.5, to be sure that my code will run everywhere. I only use features from 6 or 7 when I really need them.
At the company I work for, we've only recently decommissioned a service that requires Java 4 to run - Java 5 came with newer versions of some XML libraries that caused problems... So yes, Java 6 will be relevant for a while in the corporate space at least...
...and actually died 5 years before that.
We're still on Java 5, but we'll be running on 6 in prod by April next year
Dunno why you're getting down-voted, this is probably the situation in a lot of big shops, especially when you start talking about legacy JEE apps. Plus, 5 is much better than 1.4 :p
You could modify it and host it on your school's server, so it's actually useful for people. Might take a bit more work, but shouldn't be too bad
It is ready to go on the school server, but we're waiting for it to be okayed to be put on the website...
Most people still run Java 6 so yeah. Also Java 6 and Java7 and not entirely different.
Try one of * /r/reviewmycode * http://codereview.stackexchange.com/ * http://refactormycode.com/
&gt;Java 7 was only very recently made the default downloadable version on java.com. Just short of one month, actually. That means Java 7 has *really* only officially been out -- i.e. regular users having it installed -- for less than a month. So saying Java 6 is irrelevant is ridiculous. 
Also /r/learnprogramming
Syntactical Sugar, haven't heard that since school
OH SNAP! You called him a bot.
Anybody else noticed this issue with Eclipse? Any suggestion on how to stop it? Normally i just have to re-type the space, and the error gets removed, but it does start to get a bit annoying.
ooh, there`s a subreddit for everything ;)
I'm truly, truly sorry for you. With some exceptions I strongly feel people who decide that working on such ancient technology is a good thing should not be in IT.
I had a fun time reading a really old *Thinking in Java*, then realized that most of what I had spent the last few days reading over didn't apply due to the introduction of the Collections Framework. Most of what I'd learned still applied, but it was pretty out of date... I figure if nothing else it's nice to know what's going on under the hood.
Without bothering to read it. Since is rubysouce my guess is they think Ruby is better. But they'd be wrong.
Java isn't really a scripting language. Your request is kinda vague too.
Damit, I tried.... I was talking to someone today who said that a lot of companies like to see scripting experience In The testers they hire, mostly in java, php and selenium. Selenium for q.e, the rest for q.a... Now, sorry if I was vague. I'm really just asking where I could find a good online university or similar to learn some scripting/coding. Basic at first, to get into it, and maybe more later on.
Yes, this is a paint point in Java EE 6 at the moment. For the moment, Apache CODI has a CDI based ViewScope solution, but of course such a vital piece of technology should be in Java EE directly instead of being available from some third party. I think CDI itself should not provide the ViewScope (as it's very strongly JSF-tied), but JSF should totally drop its own managed bean facility, assume CDI is available and provide a ViewScope implementation that works with CDI. For Java EE 7, steps are taken in this direction. New JSF features like Faces Flow are using CDI from the outset, and the JSF RI tests have started using CDI beans for a while now. See also http://java.net/jira/browse/JAVASERVERFACES_SPEC_PUBLIC-1087
"Big Java Concepts" by Cay Horstmann and "Head First: Java" by Sierra/Bates. Since you already know some C/C++, some of the OOP concepts shouldn't be too difficult to understand...especially for a beginner.
Thinking in Java by Bruce Eckel
What a joke. For 90% of the use cases, dedicated servers, private hosting or private clouds is where it is. This is the best value I've discovered so far, but I would welcome tips for credible competitive hosts: http://www.hetzner.de/en/hosting/produktmatrix/rootserver-produktmatrix-ex
Don't waste your money on introductory books, the official tutorial does a better job for free, these days.
My favorite, and the one I buy for all of the junior developers I hire, is Head First Java. It is a little basic, but provides a great and fun way to get the basics.
Core Java, Volume I - Fundamentals by Horstmann and Cornell. Read it some time ago and I really liked it.
Wel...
At work we're using 6 and it doesn't look like it will be different even after 8 comes out. Time will tell. One of the coworkers seems a little intetrsted in 8.
Hey, I'm actually no where near capable of making apps or writing code in Java, BUT I do have a path. After doing lots of research, I hear that sam's Teach yourself Java in 24 hours is going to be the very final book I get when I'm at least some where near intermediate. Also, TheNewBoston.org has over a hundred vids on Android development. Hope I helped, GOOD LUCK!
I looked around for a good integrated solution a while back and the only one I could find that was working is JProfiler, which cost money. My solution is to use JConsole, a separate executable that ships with the java sdk (should be in the bin folder of the java sdk install directory). I then add a breakpoint at the beginning of my code so I can attach the profiler.
So, I went to Barnes and Noble and looked through their selection and found *Sams Teach Yourself Android Application Development in 24 Hours*. It seems to be just what I wanted, except for being written by Rogers Cadenhead. The one mentioned in the original post only had one chapter of 24 devoted to Android, while this one is much much more in depth and is for people with some experience in java.
Im not sure if i understand the question correctly, so please forgive me if I am off the point. But you could make the method static and then call it from the class as such : ClassName.methodName()
Essentially that is what I am doing. But I don't understand why I can't just create an instance of the inner class, without using the outer class's name at all. new PhoneDirectoryTreeMap() instead of the whole: controller.new PhoneDirectoryTreeMap();
there we go! :D
As one to avoid, I've got O'Reillys Programming Android and it's not very good.
Could you write some pseudocode showing how you wish it worked, or expected it to work? Like for example how you'd use it without giving it a name. I'm interested in beginners' intuitions about programming because I'd like to make languages better.
I tried to migrate from Spring to something else (I choose Ruby, hey, have to choose something), and boy it was a *lot* of work. I tried to migrate from Java EE (JBoss AS) to another Java EE implementation (GlassFish), and hey, it was quite doable. Not painless, as the login modules and data source definitions were different, but overall it was done in a week or so. &gt;don't dependend on anything in the server. **BUT YOU DEPEND ON AN ENTIRE EMBEDDED APPLICATION SERVER THAT YOU TUCKED AWAY INSIDE YOUR WAR --&gt; SPRING** It's that (embedded) server you can't easily migrate away from!!!!!!!!!!!!!!!!!!!!!!!!!!!
Honestly, I'd go with http://www.amazon.com/Learn-Java-Android-Development-Friesen/dp/1430231564. It is a Java book, NOT an Android book, but you should realize that the Android development landscape is changing quickly enough that books will tend to go out of date - this is a Java book with an eye towards the particular things that will matter in Android development. It's a quick review if you've covered much Java before, and if not, it'll make sure you've got the groundwork down well enough. Then, start working through the tutorials on the Android dev site.
No, this is the opposite of what I wanted. It literally has no focus on Android, and is beginner.
Thank you graciously, exactly what I was looking for.
Upvote just for this paragraph: Excessive use of Guava's functional programming idioms can lead to verbose, confusing, unreadable, and inefficient code. These are by far the most easily (and most commonly) abused parts of Guava, and when you go to preposterous lengths to make your code "a one-liner," the Guava team weeps. 
I started working through [Android for Programmers](http://www.deitel.com/Books/Android/AndroidforProgrammers/tabid/3606/Default.aspx) yesterday. I made it most of the way through the first application. I like the style of this book, since it assumes you have intermediate java/programming skills, and it's really just teaching android. At least so far. You can get a 10 day O'Reilly Safari account for free and browse through books there. Depending on your needs/use, might be worth paying for a month or two of that vs buying some actual books, since you get unlimited books.
I never used it. Was it any good? I remember Borland also working hard on a Java IDE at the time. 
Thank you very much, that clears it up. 
Haha, that brings me back. To 1995.
It was a great IDE, very fast and feature-rich, until they re-wrote it in Java and it became a slow, unusable mess. VisualAge made the same mistake. Leave it to Borland, master of the Pascal/Turbo C IDEs, to beat them all. I used the first two versions of Visual Cafe for years, then moved off to Borland's JBuilder Enterprise. That was also a great IDE, until they were bought out (can't remember the name of the company but it was before Embarcadero) and they shut down their license server, essentially forcing you to upgrade your $2,000 IDE (Enterprise v7). Been using Eclipse ever since.
Borland tried to sell, but found no buyers. It had to spin off its entire IDE division [JBuilder &amp; C++ Builder, among others] to CodeGear in 2006. So CodeGear was actually a spin off from Borland. Embarcadero bought out CodeGear 2 years later. 
That was what I was thinking of, yes, but it was their sale to CodeGear when they shut down their licensing server and forced your to re-purchase.
You are right that "knowing Java EE" is indeed a somewhat questionable phrase due to the sheer size of the platform. Most people would probably refer to the most well known and popular technologies in the stack, among which at least Servlet and JPA, and increasingly JSF, CDI, EJB and JAX-RS. Most of this is in the Web Profile. In some cases people will also use JMS and tiny bits of JTA (mostly just the UserTransaction and commit/rollback methods). Then there are a slew of APIs that are rarely used by developers, but which many containers and vendors use internally, like JCA, JASPI, JACC, etc. Finally there are APIs you should avoid at all cost, which are deprecated, on the list to be pruned, expunged, obliterated and which even the biggest Java EE fans hate. There are first and foremost EJB2 (NOT to be confused with EJB3) and CORBA, but also JAX-RPC.
maybe ... java ... sucks
Interesting theory at least... it does seem pretty petty but what would Oracle get out of it. Unless Oracle is paranoid of Google and it's more of the enemy of my enemy is my friend strategy. Not sure Ellison would just do something out of spite or friendship unless there was a profit motive.
Just a clever user friendly way to launch a file.
It should look like this: Scanner input = new Scanner(System.in); String read = input.nextLine(); Now, the variable read has the contents of the last full line (ends with a newline character), which can be used for input processing. It really isn't all that complicated, it just looks like it. [Scanner Class in the Javadocs](http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Scanner.html)
Wow, thanks. This looks promising!
At http://opengameart.org you can fined some free things. It's also visited by a lot of artists.
You don't want to be doing the old style picking by colour any more. I would highly suggest picking based on ray and your actual geometry. Write some intersection tests between rays and triangles, quads, or whatever you need. There are many resources on this. If you need help with the model matrix and transforming to/from screen space, I can probably hook you up.
Java makes (made?) strong money in the mobile phone market, there is no way Oracle would let someone step in that market using loopholes and other interesting legal tactics to avoid paying Oracle royalties. Steve Jobs friendship has nothing to do at all with this decision.
It's not a book, but this online tutorial is quite well written. It certainly helped me a lot when learning swing. http://docs.oracle.com/javase/tutorial/uiswing/
I was just talking about how much I despise mocking out HttpServletRequest.... Looking into this.
[/r/gamedevclassifieds](http://www.reddit.com/r/gamedevclassifieds)
Thanks!
A recent college grad here, but feel free to sort of mess with things like Netbeans' GUI Builder or WindowBuilderPro for Eclipse. You won't get the amount of customization and options available to direct coding, but you can always switch over to code "view" if you need them. I found the GUI builders to allow me to envision an application a little bit easier. Plus, it shows you your options visually(instead of having to wonder through Content Assist/etc or documentation). Keep in mind you will have to direct code some things. For example, WindowBuilderPro, atleast to my experience, doesn't have an easy setting for rows/columns in GridLayout. I had to go into "code view", and add the rows/column as parameters. 
Have you declared the arrays? If you have, then just use: foo[3] = 9; that would set the 4th element of the array foo to 9. Is that what you're wanting? Also, /r/learnprogramming or /r/javahelp would be more suitable subreddits.
Heheh, just wait until you get to GUI input. Not so bad... unless you want it to accept keystrokes when the application is not focused. And yes, Jt98 has the right answer. woo!
I want the input value to pull the same position in the array. I just tried what you said, and it came up with an error saying "cannot find variable MET". Here's what I entered: MET[scan.nextInt()] = scan.nextInt(); That was my guess as to what I was supposed to do...
Ah, my bad. You will need to declare your variables with the "static" property in order to use them in the main method. ie.. static int met[] = new int[10];
No, I want it like this: User is prompted to input a number between 1 and 10. User enters 5. Program grabs that number, goes to the same number in the array, and returns the number that is in element 5 in the array list. I don't want to replace or change anything.
Ok, fine. - First check if the number is between 1 and 10, and save that number to a variable (for example, input). - Then you just get the number from the array by doing MET[input - 1]. 1 has to be taken away from input, because arrays are zero indexed.
Maybe post some code, or at least the errors you're getting...
Everything works, except when I type in output = MET[input - 1]; it comes up with an error for "MET", saying that "variable MET cannot be found", even though I made the arrays "global" by not putting them in a method. Here's a screenshot of how my arrays are: http://imgur.com/LxXuY
Here's the Pastebin link: http://pastebin.com/sxCfeDrS
**You can use an interger array** public class NewClass{ public static void main(String[] args) { int Array[]; //calls the array Array = new Array[10]; //states how many indices are in the array Array[0] = 10; //sets a value to each index of the array. Array[4] = 200; } } **Similarly, you can declare arrays of other types** byte[] anArrayOfBytes; short[] anArrayOfShorts; long[] anArrayOfLongs; float[] anArrayOfFloats; double[] anArrayOfDoubles; boolean[] anArrayOfBooleans; char[] anArrayOfChars; String[] anArrayOfStrings; 
Thanks so much. Problem solvered.
[Filthy Rich Clients](http://filthyrichclients.org/) by Chet Haase and Romain Guy is another great Swing/Java2D UI book. 
BDD is great but how is this not just another BDD tool? I haven't read the article in depth but from what I can see it's no different from Cucumber JVM. There seems to be a lot of choice these days as BDD gains traction. 
There's a follow up to this post at http://www.opengamma.com/blog/2012/05/31/testing-java-code-in-maths-libraries on testing Java code in maths libraries.
Hey, I take it your fairly new to programming. In any event, when I started out I had the same question. Arrays at first seem like tedious pointless things... until you get to iterative programs. Think about it this way. You have a list of related items. Lets say an array of strings containing book names: 0. Ender's Game 1. Ender's Shadow 2. Hitchikers Guide to the Galaxy 3. I, Robot Now let's say you wanted to search your array to see if "Foundations" is in there. With each in its own string, you would need to explicitly test each variable to see if it is in fact the value "Foundations", but with an array you can just do: for(int i = 0; i&lt; bookNames.length; i++){ if (bookNames[i] == "Foundations") //do something useful } Does that make any sense? i can elaborate more with real world examples I have needed if you like.
I would like more real world examples. =)
ya i saw that after the fact. but as you noted, its quite irrelevant to the point so i didnt bother editting. == compares locations in memory for strings for the OP so dont do that
I prefer doing it this way, life is too short for null pointer exceptions. if ("Foundations".equals(bookNames[i]))
It doesn't always. == can correctly compare Strings sometimes depending on how they were initialized, but you shouldn't rely on it. [See here for more information.](http://www.xyzws.com/Javafaq/what-is-string-literal-pool/3)
&gt;Or are they just shortcuts instead of typing out different names for variables? That's their purpose, but it's a very useful one! Imagine typing out a separate named variable for every pixel of a 10 megapixel image. Then write the code to perform the same operation (invert color or something) to all of those pixels/variables, one by one. Or if you stick the pixels in an array, a single short loop can operate on all of them, each addressed by a calculated numeric index rather than by individually chosen names. Technically, you don't require arrays *in the language itself* for this, since a [linked list](https://en.wikipedia.org/wiki/Linked_list) can also be cobbled together to emulate the same thing (addressing many elements from a single named variable by a numeric index), but arrays feature fast [random access](https://en.wikipedia.org/wiki/Random_access) performance that linked lists do not, which is useful in many cases.
Could you explain a little bit as to how the rand function worked within these arrays?
Also, there is http://code.google.com/p/easyb/
String interning makes this a bit more complex, but it doesn't really matter. Short story: never use == for strings. 
He's using rand to pick a random number for the array's index so a random string can be created.
Related question: Could you always use LinkedLists instead of arrays? I guess Strings still have a char array in them so you can't avoid arrays completely. This is theoretical of course.
Yes they are necessary when you don't know how many things you'll want when you start. For instance if you have a pizza that always has five toppings you could make toppingOne toppingTwo... etc It would be foolish, easy to make mistakes, and slow but you could. However if the customer tells it how many toppings he wants at runtime you'll need to use an array to hold that many toppings. Iterative stuff especially you will want to use arrays though in theory if you knew the size to start you could just have the number of variables preprogrammed.
I used to do this as a standard idiom, but now I try to ask myself, "Should this string ever be null?" before I use Yoda notation.
Yoda notation. That made me chuckle.
yes, at initilization, but not compilation. So inmy example you'd ask the customer how many toppings they wanted then initialize the array. 
Oh my dear god, the navigation on the jnario site just gave me a mild case of motion sickness. I'm not kidding.
Thanks! That plus finding a couple other bugs and I've got it all working.
For the record I didnt downvote you, but I will upvote you if you provide a reference :-)
[This](http://www.amazon.com/Swing-Second-Matthew-Robinson/dp/193011088X) book by Robinson &amp; Vorobiev is my favorite.
Well, you can just look into the class and count it. 16/8 bytes per instance overhead + 4/8 bytes for every reference field + the size of numeric primitive value fields (boolean takes 2 bytes, afaik). Then just round up to the next multiple of 8. A nice presentation about it: www.cs.virginia.edu/kim/.../memory-efficient-java-tutorial.pdf
You probably could, yes. But linked lists have a larger memory overhead and can be much slower than accessing an array.
That is what it looks like. Could it be possible that this is intentional? Do you have the rest of the source (I looked online, but couldn't find this one).
I will I'm not at my coding computer. But this is the whole remove method. After the place in question it says If (curr != null) { prev.next = curr.next; count--; } Prev.next = curr.next seams useless...
I am fairly new to programming, and have never read a line of C++. I also don't know what a repo is. So, yes. Please.
i made a nice one recently- trying to bang pixels with javafx- non-fx i'd just use BufferedImage, but fx only has its Image class, which can only load from a file- so i did what i thought was a clever hack &amp; coded a class that would fake a bmp file in a byte array, wrap that in a stream, then wrap that in an Image- that much worked. the catch, it has to do this repeatedly, emulating a raster display. since there is no way (that i could find) to force an image to reload, i create a new image every time, though the stream is the same. within a minute, all of my system's 6 gigs of physical ram is exhausted, thrashing sets in, then it gets very difficult to kill the program. and the weird thing, this is ram being allocated by java, but outside the heap. bah.
Thanks, I'll check it out.
If you really want to use raw JTextArea, call append("New text to be added") then repaint().
awesome! thanks, grabbing version 1.8 to test now.
Thanks for using sensible iteration.
Although this is javascript and not Java... option.selected = true That will make whatever option you want the default. If the first option is always blank, your plist at index zero must be blank as well. 
This is Javascript, not Java, but you might want to try something like this: var firstListElement = true; for (var i = 0; i &lt; plist.length; i++) { var option = document.createElement("OPTION"); option.text = plist[i]; option.value = plist[i]; option.selected = firstListElement; PrintersCtrl.options.add(option); firstListElement = false; } 
It's a [doubly linked list](http://en.wikipedia.org/wiki/Doubly_linked_list).
paint(g) delegates to paintComponent(g) as part of a process that also includes some clipping stuff, drawing borders, and drawing child components -- which is why you weren't seeing JLabels when paint() was overridden. See the full source here http://hg.openjdk.java.net/jdk7/jdk7-gate/jdk/file/e947a98ea3c1/src/share/classes/javax/swing/JComponent.java. And yes if you want to put text directly on your drawing canvas, I would probably use drawString rather than a JLabel.
Thank you!
You can concatenate the text itself inside the JTextArea with something like this: jtextarea.setText(jtextarea.getText() + something_you_need_to_include_in_the_text_area + "\n"); With that, you will have a different line of whatever you need to have in there every time you need to put text on the JTextArea. Hope this helps you, im not a Java expert, but I try to help everytime I can.
For a quick-and-dirty approach, you could try the [Java Serialization API](http://java.sun.com/developer/technicalArticles/Programming/serialization/), though I believe this may be frowned upon in some circles. Where did you get your source data for the pokémon, by the way?
The Java Cocoa Bindings have been deprecated for years and some of them are even broken, I wouldn't recommend using them in the future.
While this may be true, its the only solution I've found that doesn't require wrapping your code inside a .app file or issuing special command line arguments. Plus, if it fails, it does so silently. May not be great, but its better than nothing.
I see your point, but when it's finished why wouldn't you want to deploy it inside an app bundle?
Yeah I figured it was something like that.
Avoid Null Pointer Exception Part 2 
I thought, just for the sake of correctness, I should say that this example is not a doubly linked list. I don't think pinkemma read it well enough.
http://code.google.com/p/snakeyaml/
Set up a Maven project, and your modern IDE will help you automatically resolve the dependencies.
Little bit late.... If you already know how to code than all you really need is developer.android.com, stackoverflow and the samples that come with the SDK. You just start coding and learn by doing. You can message me if you need something explained along the way. I will try to help you as good as possible. Have fun coding. (Also if you want to make a fun project, let me know:)
When I'm saving stuff I usually just write a string with the properties seperated by a '#' to a txt file. When I want to open it I just load the file into a string, split it at the '#'s and get a String[] with all the data in it. Correct me if you know a better method, this seems to be very inefficient, but I don't get proper google results.
I guess this is my starting point: learning Maven!
Thanks for taking the time to write all of that out. I'll give it a try and see how it goes.
Sleepycat JE is a different format than the native binding, so you can't mix and match the two. If you're using an existing DB you'll need to use the JNI wrappings. You'll want to follow the [Berkeley DB links here](http://www.oracle.com/technetwork/products/berkeleydb/downloads/index.html?origref=http://www.oracle.com/technetwork/products/berkeleydb/downloads/index.html) if you're working with a pre-existing DB. The Java edition won't work with non-Java-edition databases. See the [javadoc](http://docs.oracle.com/cd/E17076_02/html/java/index.html) for more info. If you're making a new database, feel free to use the Java Edition. Be warned, though, that it scales very poorly beyond 10 GB and high amounts of writes. Its an append-only format, so large databases that are write-heavy can actually outpace the compactor. We ran into this problem in a production system at one point.
And while we're at it, you may find the [Berkeley DB at Yammer](http://nosql.mypopescu.com/post/23788140141/berkeley-db-at-yammer-application-specific-nosql-data) talk helpful.
Well, if you hand-roll your own serialization code it will get better performance, but I did a quick google search to see if my memory served me and it turns out there is not as much criticism as I thought. It's hard getting old.
Yepp, sorry, I skimmed the OP, and noticed the prev in the comment, so yes :)
Except when the string is not supposed to be null, and you end up going down an incorrect branch or not executing some piece of code. It is always better to explicitly check for null.
I have been using it, well to be more accurate FXML. It was intended to be a contender for flash as a RIA(Rich Internet application) platform, JavaFX 1 although fun to play with was just horrible to code as bad as swing if not worse. FXML now that's how you do interfaces semantic, simple to code, simple to read even when generated. So in my opinion it's probably going to move from a RIA platform to replacing swing. Obligatory : "Will it be the year of Java on the desktop?" well no but it's a lot better than swing. 
can you elaborate? please.
except for missing something like BufferedImage, for when you just need to bang pixels...
disclaimer- i am a fx noob it seems more thread "safe" in that it will throw exceptions if you tickle it from another thread. swing says "don't do this!" but if you do by mistake, it might work every time you test your code, then gremlins attack when you release it. 
How would you make a queue when you only have access to stacks?
To be honest, I don't know :/
Think less in terms of syntax, and more in terms of data structures and their abilities/limitations. I would put money on your question being based off that.
Wouldnt that simply be take two stacks, one for enqueue and one for dequeueing. Whenever you enqueue something put it in the enqueue stack and when you need to dequeue unload everything in the enqueue stack into the dequeue stack (thereby reversing the order). remove the thing on top of this stack and then push everything from this stack back onto the original stack. Though it is O(N) complexity which is quite bad for a queue I feel
Probably FTP, if it doesn't need to be secure. I've never tried to FTP with java, but I'm sure there are libraries out there if you google for them.
There is [JSch](http://www.jcraft.com/jsch/) for SFTP. Also, [Apache Commons Net](http://commons.apache.org/net/) is fairly popular for FTP.
why is Bulbapedia so slow?
/r/shittyadvice is that way -&gt;
HTTP.
HTTP 1.1 sort-of has the ability to do resumes, with FTP has it built in. Also, FTP is designed to transfer files, http is designed for web pages. While no one will deny HTTP is effective for transferring files (after all, in the days of old web pages were files), I think that FTP is the better general-purpose choice for file transfer. If security is a concern, then SFTP is a solid choice.
Web pages are still (collections of) files. HTTP is not web-page-specific. It's fully binary capable, is ubiquitous, has no unsolved firewall issues, supports resuming, encryption, compression, and authentication out of the box, is far easier to implement correctly and to secure than FTP, and has far less protocol overhead. FTP is obsolete and should no longer be used.
Isn't that Flash/JS rather than Java?
Yeah, Its flash. I am still trying to find a way to do that.
Thanks for helping me out! :D
What OS are you running?
doesn't need Bittorrent a server, which gives you the IPs of the seeders/leechers? When I only connect 2 devices to themselves, it seems to be a little "too much". Or is it possible to just use the bittorrent protocol without torrents itself?
BT isn't applicable when sending from server-to-client. Any time you have a two-party transfer, you're better off with something like HTTP or FTP that just send the bits. BT is for distributed peer to peer sharing where the server itself isn't hosting the entirety of the content. Instead small chunks of the file are served from various distributed peers.
Nah, that's not getting you encryption, authentication, compression, metadata, or the ability to suspend/resume transfer for free. Re-implementing all of the above is shitty advice.
it works perfectly. thanks a lot for the help
Windows 7.
It's got some real gems in it. The exception handler is probably one of the main attractions in the lib. It solves a major issue with JSF and exceptions that happen during an ajax request. I like the fact that this lib is clearly not another PrimeFaces or RichFaces, but seems to focus more on the utility aspect vs the rich/visual component aspect.
Well, the machine that initiates the transfer is the client, and the machine that listens for incoming transfer requests is the server. If either machine can initiate the transfer then both machines are both clients and servers. Technically FTP can be used in this case, but so can simpler/superior protocols such as HTTP. Edit: I may have misunderstood your question. To be clear, you will need both the server-side implementation and the client-side implementation. This will almost certainly involve two separate libraries. For HTTP, both sides are build into java. Look at com.sun.net.httpserver and sun.net.www.http.HttpClient.
Oh cool. I understand threads and the basics of how to loop them, but I'm not really a pro at it right now, so this will help.
Whenever I see a question like "how can I learn LWJGL?" I always feel I should warn people that knowing Java alone is not enough to understand LWJGL. The LWJGL library is only a Java abstraction layer on top of OpenGL so that you can program Open GL based graphics in Java. You really need to understand the Open GL specification first regardless of what language you then choose to use to code your application. If you don't understand what the API's do, you are going to be looking at LWJGL scratching your head going "I know java but I don't understand what any of this does." How much graphics programming background do you have? I second rtperson's recommendation for JMonkey. It can alleviate you having to know a lot of things (but not everything) to get your game off the ground and can allow you to choose JOGL or probably LWJGL and maybe Java3D too as the rendering engines. You'll have a lot more fun learning the graphics programming stuff and it'll stick better if you can see it working and learn as you go along making your own product. It's more fun that just poring over Open GL documentation and Vector math lessons.
So, your opinion is that the OP should "use the whole thing" before relying on a game engine. Bear in mind that "the whole thing" in this context is: * The entire OpenGL spec, including probably GLSL, * Enough Linear Algebra to model movement, rotation, collision detection, etc., * All of OpenAL (including, I would guess, hand-packing PCM buffers in stereo from a variety of formats), * Enough college-level physics and programming know-how to hand-craft a physics engine, * How to import Blender/Maya/3dMax models into the game (or is that cheating? should the OP hand-code and surface his in-game actors using hand-written vertex specifications and hand-crafted binary parsers?), * Enemy AI, path-finding algorithms, etc. * His own input processing code, complete with Observer pattern and multi-threaded, concurrent message processing logic. Then my response is *"Are you out of your fucking mind?"* Games programming is fascinating, but there is a cubic fuckton of material to learn if you insist on building every wheel from scratch yourself. I say this as someone who has spent more hours than are healthy building wheels, in Haskell no less. There's no shame, given the sheer scope of the endeavor, in relying on an engine in the short term before you dig into the internals, especially if you are, as the OP says *"not really a pro at it right now."* Besides, last time I saw Notch code (on his opencast for Ludum Dare), guess what he was using? JMonkeyEngine. 
Am I terribly forgetful, or was there a time when some programs parsed Java comments to essentially pull out pre-processor or code generator commands? If so, that comparison would work?
If you use JavaServerFaces validation on the server side is a snap. The framework will handle all the ajax calls with simple tags. There are specific classes called validators as well. Here is a simple example. &lt;h:inputText id="age" value="#{User.age}"&gt; &lt;f:validateLongRange maximum="120" minimum="0"/&gt; &lt;/h:inputText&gt; This is a standard validator but you can also do custom very easily. JSF greatly simplifies front end development. I would hate to have to develop without it.
What does the IDE have to do with it? What video format are you using? Is this a desktop application?
Netbeans is good for free. IntelliJ is the best IDE out there. Eclipse kind of sucks. 
Our current system is similar, we support primarily h.264 encoded mp4 and mov
Not really, I'm just trying to expand my knowledge after doing so many euler problems and golf code. I can barely set up a MySql server without encountering many obstacles. So just making a really bad stock management system would help me a lot. 
I have never made a complete application. From what I've learnt it would be much easier to make a simple CRUD using factory forms and make it connect to a local DB. Making a web application and using all that magic from creating dynamic pages looks impressive, but I really wanted to start with something really **really** simple. NetBeans EE with Glassfish and Tomcat are already installed on my machine, since **it is** my object to eventually make a web app, but I'm really intimidate by various concepts. I don't even want to make a complete CRUD application, I just want to retrieve information from a local DB and then, maybe, slowly implement the creation, update and delete parts. I'm currently running Windows 7 in a corporate network and the installer broke - it couldn't get the configuration part running correctly. It keeps telling me it is unable to configure service. I tried to skip this when I first installed, but then I couldn't get the server up. 
HTTP has resume - see the HTTP range headers: http://vikku.info/codesnippets/http/resume-download-and-http-range-header/ All the major web servers support it (Tomcat, Apache, IIS, etc) No need to write any custom software on the server side at all. You do need to implement it on the client side, but that shouldn't be too hard. You might even find a library which already has it implemented for you. Checksums are also supported by HTTP - see the "Content-MD5" header: https://www.ietf.org/rfc/rfc1864.txt Some web servers already support it, and if not, adding support is pretty easy. And implementing this client side is more or less trivial as well. Don't invent wheels that already exist; not only will it cause you headaches, it will cause the next guy headaches. Always design and develop for the next guy - maintainability should always be a (if not the) top priority.
&gt;IMO to get started on a new language/framework/... it's better to follow (and understand !) a tutorial than browsing through some real-world code randomly, as the tutorial will explain not only how to do things, but why. Thanks for the tip!
The simplest possible way is to use JDBC. You'll only need one extra JAR file, which is the JDBC driver for your database. Here''s some sample code to do CRUD type operations using JDBC: http://www.techmyguru.com/JDBC/index.php?section=5 Notice, that this is just using standard SELECT, INSERT, UPDATE and DELETE statements directly. A lot of people are suggesting JPA, which is a lot more straightforward and more "industry standard". You'll need quite a few more JAR files to make that work. Here''s some sample code to do CRUD type operations using JPA: http://examples.javacodegeeks.com/enterprise-java/jpa/jpa-crud-example Notice, that this is creating an "Entity" class to which database columns will be mapped automatically for you. The EntityManager allows you to work with the database through "high-level" operations on the instances of the Entity class, instead of through "low-level" row operations on the database. In addition to the JDBC driver JAR file, you'll need to get the JAR files for JPA and the JAR files for the JPA provider. A common choice is Hibernate, which you can download here: http://sourceforge.net/projects/hibernate/files/hibernate4/4.1.4.Final Or you can use Maven to download all of the JAR dependencies. You can also use a container like Glassfish, but at point you're departing from simple applications you can run from the `main` method just for playing with the APIs. I suggest learning the JDBC first so you understand the fundamentals, and learn JPA second for a more "convenient" approach you might use in "real-world" applications.
If you're a UI developer and you're developing a standard GUI, I suggest looking at Sencha Touch and PhoneGap. If the application you're writing is going to be doing things that are similar to what you've done in PHP, you don't need to learn the Android API. You can write your app with the Sencha Touch framework and use [phonegap](http://phonegap.com/) to generate apps for iOS, Android, Windows Phone and Crackberry from a single code base. You can continue to use PHP for your backend. Communication with the server can be handled through standard requests. I personally love Java and Android's tool set but if I'm developing a standard app that is mostly web based, it's much easier to build the app traditionally with HTML, javascript, JSON backend and use phonegap to generate an app for all platforms.
Thanks for the resources =)
You wouldn't. And you probably wouldn't want to name a class with a single letter. Or put it in the same package. etc... That's not the point. But aren't you interested in how the JVM handles that situation? 
That's understandable, the site is pretty terrible blogspam. To understand the value, see http://static.springsource.org/spring/docs/current/spring-framework-reference/html/mvc.html#mvc-ann-requestmapping
&gt;I don't feel that I fully understand them. Could someone give me a kindergarten tutorial. The internet tends to explain stuff in a very basic manner. Which is why I asked for a better explanation i.e. How you would know when to use one, instead of just sending a variable through an object. What common uses are for them. etc.
I learned Java by coding for the Android platform. Be sure to read the Dev Guide, as it explains topics/concepts instead of just documenting the code like the Dev Documentation does.
Sounds cool. I've tried working with GUIs in various situations, but it's been pretty confusing, until now (because of thenewboston's tutorials). I'm excited to learn more about it.
I don't think so, the compiler would complain about "6 *what?*", just like how it can't tell what you mean with if( x &gt; 0 &amp;&amp; &lt; 10 )
Thank you for actually answering my question :D Edit: Already, this is 10 times more useful than the JMonkey tutorials. Yes 10 times. I counted.
A real programmer would have brought home 7 bottles of milk.
/r/programmerhumor
A good programmer would have clarified. just sayin' /me walks away with rain cloud
That would be sooooo fucking nice.
This joke is older than original sin in the garden of eden and the story has been told as many times.
Behold, Python! &gt;&gt;&gt; 10 &gt; 5 &gt; 3 True
I suggest you freshen-up on your Java skills before jumping on to the Android API. Getting the grips of Android dev is pretty much a pain (especially installing it). If you feel confident with your Java, you'll have little problem transitioning to Android
Expect questions like "what is the difference between a stack and a heap?" and "is Java pass-by-value or pass-by-reference?"
This article focuses on comment annotations rather than more useful ones that have more impact on code such as @Inject and @ManagedBean and @SessionScope.
http://developer.apple.com/library/mac/documentation/Java/Reference/JavaSE6_AppleExtensionsRef/api/com/apple/eawt/Application.html Not all are deprecated, and these calls are certainly not deprecated.
...And described what type of collection it was and how it should be used.
Well, it's true in C/C++ too, but for all the wrong reasons.
I just meant the form of the grammar is more similar to python ternary idiom than java. 
ye sure about C? I don't use C myself, but isn't it the case that 10 &gt; 5 == 1 1 &gt; 3 == 0 false
I'd much rather have better Functional paradigms, Map literals, and a pure Object environment (ie no primitives)
But it looks so much better!
In the about dialog (in eclipse), "installation details" button, "Configuration" tab. "-launcher" parameter (and in other places)
I agree, but it all boils down to the problem that the JVM depends on how the file system underneath is implemented. I don't think it's a JVM issue at all. In his case (if I understand it correctly), it is a compiler issue. It creates A.class and a.class because it expects the FS to treat them differently.
 if(0&lt;x &amp;&amp; x&lt;3) versus if(0&lt;x&lt;3) is 5 keystrokes, versus... I can't even explain how often closures and functor literals come in handy. Try using Scala, Groovy, or Fantom for a month, you'll see.
Perhaps starting somewhere more basic would work better?
SQL has between, which lets you do "x between 2 and 7". It's roughly the same idea. Oracle style: select x from ( select level x from dual connect by level &lt;= 10 ) where x between 2 and 7
For JPA you normally don't need any extra jars, as most Java servers already include it by default.
Hey look at my kickstarter page, see how stoned I am!!!
I don't understand this man. After taking a concurrency course with him (one of the best courses of my undergrad, by the way), and knowing his stance on Oracle's treatment of the Java community, plus his well-publicized departure from the JCP last year, he continues to professionally code the Java concurrency package. Amazing devotion. If you ever get a chance to talk to him, do it. He's wonderful.
Makes sense..but let me see if I got this right. You can still run a program without a constructor, and it will run fine, but a constructor tells your code specifically what class and method to go to, and what to do with an object?
I can't see how that would be a useful IDE. I'm sorry. At least Light Table makes intuitive and practical sense, particularly with larger and/or touch displays.
http://platform.netbeans.org/tutorials/nbm-crud.html 
If you're creating an instance of a class (object) you are *always* using a constructor. Now, it all depends on whether you have defined your own constructor or not. If you have, the compiler will create a new instance based on your constructor. If you haven't, then the compiler will use a default constructor to create the object. Now in the case you aren't creating an instance of a class (say, for example, to access a static method) then a constructor is not needed
So, anytime I create an object to refer to another class; I always create a constructor. And that constructor is either defined by java automatically, which has empty parameters by default. Or you can send it to a specified method and class with empty or full parameters?
Odd that you would mention touch displays. Light Table never even mentions them. At least in Zeta you'd be able to do some things without typing. As for larger displays, I made the demo mostly at small scale to improve visibility. It scales quite nicely to large or small screens.
Most likely you need to call "revalidate()" or "repaint()" after setting a new icon. Also think about what you are doing with the numbered gif names and the number on the die. You can change this: if (newRoll == 1) { dieFace.setIcon(new ImageIcon("die1.gif")); } else if (newRoll == 2) { dieFace.setIcon(new ImageIcon("die2.gif")); } else if (newRoll == 3) { dieFace.setIcon(new ImageIcon("die3.gif")); } else if (newRoll == 4) { dieFace.setIcon(new ImageIcon("die4.gif")); } else if (newRoll == 5) { dieFace.setIcon(new ImageIcon("die5.gif")); } else if (newRoll == 6) { dieFace.setIcon(new ImageIcon("die6.gif")); } To this: dieFace.setIcon(new ImageIcon("die"+newRoll+".gif"); dieFace.revalidate(); Or turn it into a switch statement.
 public void(){ m = 3 } public void(int m){ this.m = m; } public int(){ return m; } I believe this is one of the formats I saw. 
That looks really enterprisey - a bastardization of getters &amp; setters, with a twist. Unless someone can come up with a explanation of why this is a good way to code, I would suggest ignoring it.
I want to say that Bukkit/Minecraft server run on 1.6 though. This thread gives instructions to use 1.7 http://forums.bukkit.org/threads/howto-upgrading-your-server-to-java-1-7-jre-7-for-windows.71767/ 
http://netbeans.org/kb/docs/web/jsf20-intro.html http://docs.oracle.com/javaee/6/tutorial/doc/bnaph.html 
Yeah. This really should have been the given URL: http://jodd.org/
good deal .. thanks.
Very good presentation. I'll give it a try.
Can I ask the obvious question? Why not use a 64 bit OS? Most OSes will want 0.5-1G to be happy. Plus leaving some space for buffers/caching will means that you're going to top out at 2-3G anyway.
Its quite overwhelming the amount of (Web) frameworks available for Java. As a developer I love trying new things but in the enterprise the inertia is too big and you often find tried and true Spring/Hibernate/Struts that they won't ever let you port it to something more fun and versatile.
Most likely he's running a server that doesn't have a 64 bit CPU.
I thought that was my problem at first too, but I have called the repaint() method whenever the button is clicked and it has not had any effect.
If you operating system has [PAE enabled](http://en.wikipedia.org/wiki/Physical_Address_Extension#Linux), your JVM process may use up to 4Gb of RAM. However, this is a hard limit on a 32bit application. See also : * [can a 32-bit OS machine use up all 8GB RAM + 20GB page file?](http://superuser.com/questions/367490/can-a-32-bit-os-machine-use-up-all-8gb-ram-20gb-page-file) * [Ubuntu 32 bit maximum address space](http://stackoverflow.com/questions/51093/ubuntu-32-bit-maximum-address-space) * [Enabling PAE - Community Ubuntu Documentation](https://help.ubuntu.com/community/EnablingPAE)
That makes sense. I didn't realize I was creating two instances of the Health class. I changed it to add( hListener ); as you said and now my program works. I didn't need to clear the background though. I had my health variable to determine how much of the rectangle gets filled. Thanks for your help.
One way to get around this limit would be to use multiple JVMs, but since you have a Minecraft server in mind it might be a bit more difficult.
This is a longshot, but you could see if you can run it using [Terracotta](http://terracotta.org/). Edit: As a background, Terracotta allows you to link multiple JVM's together (even on different machines) so it seems like a single JVM to an application.
Ah right. I can only suggest trying a linux kernel with bigmem support to try to make use of the ram for cache. Won't help the single process limit unfortunately of course.
/r/learnprogramming
I know of that subreddit. Since i was trying out java i oddly decided to ask in r/java .. I do think the subreddit can survive my java noob question
So it's like spring, but different? I was waiting for yet another Java framework.
SavTheCoder has probably answered it, but I want to make it clearer. * A constructor is called automatically whenever you create an instance of a class. It is generally used to initialize the data members of the class. * It has the same name as that of the class and does not have a return type. * You have the option to not define any constructor, in which case the compiler will create a default constructor for you. This constructor is parameter-less. * If you define your own constructor, with or without parameters, the compiler does not generate a default constructor. * You can overload constructors. My knowledge is mostly based off of C++, but I think these points are applicable to Java too.
If you have a specific question I will help you. My final project a few months ago was to create a space invaders app in java. Many of the game mechanics are exactly the same as pong (paddles moving, balls bouncing off paddles and walls, etc. My advice is to start very small. Pick one thing to start with such as making it draw one paddle. Then program in very small increments while compiling and running the whole time. This will help to avoid creating so many errors that you want to just give up. Once you program as much as possible and hit a wall then ask for help. If your goal is to learn to become a better programmer, than do these things. When you get stuck PM me and I will help.
exactly
I only needed to know the general direction i needed to go in, so thank you.
All the fun of Java with the scoping issues of javascript!
That sounds right, but I don't really know. Here's the main page: http://docs.oracle.com/javafx/index.html Looks like you download the SDK (probably like a Java library), and it looks like you can build the with Java code (like Swing) but I'm pretty sure you can use some kind of scripting too. I don't know if it works with Android or not. Good luck!
As long as you practise TDD then you should be fine as all your code should be tested up front right? ;)
Groovy++ is the way to go.
if(&lt;(0,x,3))
Most common reason - the application was developed by parties who don't fully comprehend the basics of concurrency. Less blogspam, please.
I don't have a link... on my cell, but Google jsf 2.0 ejb dzone. There's a really good tutorial on making an ejb/jsf application.
In my experience, it's usually better to use @Nullable (i.e. this might be null) for return types and method parameters. Parameters and return values are assumed to be non-null by default. 
You can't dereference `null` in Java. What wizardry is this?
I don't disagree for a project that's written that way from the beginning, but if I'm trying to retrofit existing code that's been written with a lot of null checks, I'd start with @NonNull.
Honestly, if you ever use ANY threading in ANY of your java, you owe it to yourself to read Java Concurrency in Practice. It's extremely easy to read and understand and really is a great resource for threaded programming.
Iv'e always been fond of the Null object.. where passing an object or value produces a null action or applies an identity which returns the original value... but there can be a lot of overhead in it. 
Just kidding, that's how I did string comparison, not null checks. I'm obviously no java expert 
One key thing is that syntax can be a personally emotive thing. Some folks care a lot about it while others don't. What i am trying to say is that try it for yourself in a semi-serious project. if you like it, good. if you don't, try something else. I personally believe that my code is cleaner, smaller, and more expressive with groovy and java, in comparision, is pretty verbose. There really is no comparison. But i should also point out that many groovy features are slowly being added to java. However, both languages embody two different philosophy: typed vs dynamic and fundamentally untyped ( though it's possible to use types in groovy and static type checking is now available ) also be sure to read Groovy in Action. A wonderful, wonderful technical book to get up to speed on groovy. You won't regret it. EDIT: Spelling
My bad man, it does seem it's 305 and not 308. Not that it's hard to get the two confused, they do mostly the same things (although 305 was abandoned in favor of 308, wasn't it?).
its ok, i found a way to do it, thanks a lot anyway :)
Here you go: http://docs.oracle.com/javase/tutorial/java/data/numberformat.html
Are you sure you want to nest those if statements like that?
To start with, you're going to replace println("State Tax: " +State) with printf("SOMETHING", State) You just have to figure out what the "SOMETHING" is. Also, notice how the plus in the original changes to a comma, because println just takes one string, but printf takes multiple arguments: * First, the thing you want to say plus some placeholder variables that tell it the type and format of the variable to plug in. * Then, the variables to use to put in place of the placeholders. Here's an example of how you use it. int jny = 8675309; System.out.printf("The number is %d, if you really want to know", jny); You just need to replace jny with state and %d with the format you want your number in. Note that "%2d" won't work for your number, since it's a whole number. For floating point numbers or doubles, you'll want to use an "f" instead of a "d". Also, to start a new line, you use a special sequence of characters like \n or \r\n. Your teacher may have told you what to use, but if not it's safest to use \n. For example, to add newlines between every word, I would change my code to: System.out.printf("The \nnumber \nis \n%d, \nif \nyou \nreally \nwant \nto \nknow", jny); 
&gt; and if you are going to fail anyways why are you adding crap to tell you just that Because there's a thing called "informative error message", and end-users usually prefer to see those instead of a "java.lang.NullPointerException" and a stack trace.
p1...p3 are defined as class variables, so not strictly necessary.
I don't think null should ever be a valid response. It represents an empty memory address and simply doesn't make sense in a language where you're not doing manual memory management. The problem is, you'll probably work with coders that insist on using nulls as flag values. If you can get your team to wrap null values in [Option-objects](http://www.codecommit.com/blog/scala/the-option-pattern), it goes far to alleviate the problem, because at least you're communicating where null value might be expected.
at the start of your program type: DecimalFormat df = new DecimalFormat("0.00"); then in your println System.out.println("State Tax: " +df.format(State)); that will format it to 2 decimal points
You may say it's a failure to read javadoc but how many of your colleagues know that ? Maybe it's a premature optimization, or maybe it was smart at the time and the author (was it Gosling?) didn't think that Java would be used by people so different from the C coders (who had to know what their code was doing and where the memory was). 
Check this out. Not really what you're asking, but may be of use in the future. [GTGE](http://goldenstudios.or.id/products/GTGE/)
You have to consider the surface of the applet/canvas/whatever you're drawing on as not the entire game world, but just a viewport into it. You draw the world fully, but move the viewport to follow your character's progression in it. I would not be using JApplets to start learning games programming. In fact, I would not be using JApplets for anything at all. Try [Slick](http://slick.cokeandcode.com/). Its all Java code, but its built (indirectly) on OpenGL and has tons of utilities for 2d games programming. It is built on LWJGL, the Java binding of OpenGL that is used for Revenge of the Titans and Minecraft, and both actually use slick for portions of their code I think. Notch didn't want to write his own graphics importer. Either way, what you'll want to do is use Graphics.translate(x, y) to move the viewport. Translate moves the origin, (0, 0), by however much you specify. For a right moving sidescroller, you'll end up with a steadily decreasing x translation, because you want 0, 0 to move further and further off the left of the screen. Funnily enough, both the Graphics class for Slick and the Graphics class for AWT have the same translate( x, y) syntax, except that Slick's takes floats instead of integers.
Or you can use the slightly saner QueryDSL.
O_o Too hard? It certainly beats AWT mate.
I gave reasons in both paragraphs. 
&gt; then null is what the method should return That doesn't explain why you feel null is an appropriate return value. You're simply saying, "It's ok to return null." Why is it ok? From there you're explaining what course of action to take when you're getting a lot of null return values, and how empty lists are no better than nulls. You essentially said nothing.
No, maintaining anybodies code in this case is not a bloody problem. You get a null exception, the exception literally tells you the variable is null and is not valid--all you have to do is take one single look at the code. That's not even laziness, it literally tells you when the exception happens. What is difficult to understand there? Clear maintainable code is not adding bloat that does absolutely nothing that the code doesn't already do. It's redundant, will only ever appear when something goes wrong, which you're going to have to look at the code to fix anyways. Null checks, when you start to go crazy with them, make code bloated and harder to read. It's absolutely a code smell that the programmer didn't care to actually think about what his code does, to realize that the null exception is going to be thrown already. There is absolutely *no scenario* where this would be hard to figure out. The implementer doesn't have to "consider" null entries, that's backwards, if a method requires a variable it should always be considered to need to be actually valid (not null) unless noted otherwise. If it was optional, you could just overload the method. But even then, the null input was bad case closed. "Well did he consider if null was bad?" "Well, you got a null exception didn't you? So no duh it was bad."
For platform-specific line separator you can use **%n**
I used Slick as a beginner, no problems here.
I am also a beginner programmer in APCS and our final project was creating a game. I highly recommend downloading Greenfoot. It is designed by the University of Kent and is designed for making games on a user friendly beginner platform. The website has countless tutorials on how to use all of their built in methods. After you finish, you can post your game on the website and see how many people play it. My game using Greenfoot is my greatest programming accomplishment, and Greenfoot is a great program
[The New Boston.] ( http://thenewboston.org/list.php?cat=31) 
There are a large number of websites to start learning Java. [The Official Java Tutorials](http://docs.oracle.com/javase/tutorial/) [Java Beginner](http://www.javabeginner.com/) While I started learning on Java Beginner, the Oracle tutorial is commonly accepted as much better, and it's (almost) always up to date.
I liked the Dietel book. [Java How to Program](http://www.amazon.com/Program-early-objects-Edition-Deitel/dp/0132575663)
I only had a quick look, but why use Vector? 
&gt;no begginner should use OpenGL Then slick should be perfect because Slick abstracts away all the OpenGL
I started with VERY limited experience in programming, and after many tutorials that ended too soon, I began to just start a project, and if I hit a roadblock, google it. Eventually I got to the point where I understand a lot of the API, and can write a lot of stuff on-the-fly. 
&gt; I've rarely, if ever, encountered a situation when an empty list was buggy or problematic. ... &gt; If you feel it's that bad, then throw an exception. You're not reading what I'm saying (again). I state both why you'd want to treat an empty list as a special case and why an exception is not a valid response in the given case. You seem to be in a hurry to state your opinion. &gt; I would return an object that implements a isEmpty(), or length(), or count() method. Now you could argue using if (obj.count() == 0) is no different than if (obj == null) but this point isn't really the crux of my argument, which is nulls represent errors. Wow, I'm glad we're not on the same team. getPersonById(1523522) should return a Person with isEmpty set to return true, if 1523522 doesn't exist? Is that really what you're saying? &gt; However you are contradicting yourself. You are agreeing that a null return value represents an exceptional situation that shouldn't happen, and at the same time advocating the use of null as a return value in non exceptional situations. No, I'm not agreeing that a null value represents an exceptional situation. I'm saying that a null value should be used when, semantically, the meaning of the response is "nothing". getPersonsWithLastNameWhoAgreeWithMe("headzoo") -&gt; null. getPersonById(531351235) -&gt; null. Two different cases (which is why I started with two paragraphs. One is an exceptional circumstance, one is probably a special case that your application should handle. The lower levels of the application should enforce business logic. &gt; An empty result set from a database is not an exceptional situation. It's predictable. If you're doing an id lookup, it's exceptional (but not _necessarily_ an error). If you're doing a search, it's predictable. &gt; Not even when querying by id, which by the way is a fringe case. Querying by id is in no way a fringe case. 
Thanks. You out of Rockville, MD?
Thanks mate
http://higherorderfun.com/blog/2012/05/20/the-guide-to-implementing-2d-platformers/ /r/gamedev
I also would like to learn but I learn best by watching things anyone got a long video series?
The Head First Java book is excellent.
From completely clueless to everything you need to know to do everything!
Are you using the Swing framework or just the AWT? I think that Swing might let you make a JFrame with rounded corners, which you could use to make your dialog. I don't know of any default dialog box methods for making one with rounded corners otherwise. Good luck with your search, though.
I think that you may need to look into the Look And Feel specification to see if it allows the reskinning of non-client areas like the window border. As far as I remember it does. Also this may be of interest: http://www.curious-creature.org/2007/08/01/rounded-corners-and-shadow-for-dialogs-extreme-gui-makeover/ EDIT: Also I found this, which explains the quite complicated process of making a custom Look and Feel in Java- http://java.sun.com/products/jfc/tsc/articles/sce/index.html
It's my understanding that Vector is considered obsolete or deprecated (though not marked that way in the docs). Regardless of if you want to continue using Vectors, I would suggest using the List interface in the API; List has a method for removing an object at a specified index. Then, you could keep using Vectors for the time being, and if you ran into trouble later you'd be able to switch to some other List implementation (like an ArrayList) without having to change your APIs. One example: In Row.java, you have private Vector&lt;Column&gt; column = new Vector&lt;Column&gt;(); ... public Row(Vector&lt;Column&gt; columns, int index){ ... public Vector&lt;Column&gt; getColumns(){ I would change that to private List&lt;Column&gt; column = new Vector&lt;Column&gt;(); ... public Row(List&lt;Column&gt; columns, int index){ ... public List&lt;Column&gt; getColumns(){ I'd also recommend you look at using ArrayList instead of Vector. This might be a good place to start: http://stackoverflow.com/a/1386288/461317
I found this website very useful for practicing http://codingbat.com
I don't see any documentation? You might want to put that up if you want some feedback.
Disagree. Slick takes care of so many problems that a beginner would find discouraging. You're never exposed to OpenGL.
&lt;subliminal&gt;Post the article.&lt;/subliminal&gt;
Unless you WANT to be, which is perfect. Its a stepping stone.
This has to be the most akwardest way to build a SQL AST ever.
Java 6 Update 10 - http://today.java.net/pub/a/today/2008/03/18/translucent-and-shaped-swing-windows.html Note that AWTUtilities.setWindowShape is not available in older Java 6 updates, so [invoke it via reflection](http://weblogs.java.net/blog/joshy/archive/2008/06/java_doodle_fad.html) Java 7 - Window class contains [new API to set shape and opacity](http://docs.oracle.com/javase/7/docs/api/java/awt/Window.html#setShape%28java.awt.Shape%29) On Linux this requires composite extension and AFAIR does not work with KDE :(
I could have written this post about 6 months ago. Now I've written a few classes in Java and am finally feeling good about the basics of Object Oriented Programming. I started with code academy. It is Javascript but it's still useful, not confusing.
This may seem beside the point, but do you have an Android phone you can use? The emulator is a pain in the ass and sloooooooooooooow. It's really only useful when you need to see how things look on screens that are a lot different than what you have to work with.
This is the sad, sad truth! The emulator is (or at least *was*) painfully slow. [Androidx86](http://www.android-x86.org) is a great alternative though, I recently wrote a blog entry on [setting it up in a virtual machine](http://demonastery.org/77/the-perfect-android-emulator/) for Android development. The VM route makes for some really quick code/compile/run turnaround but it is always good to have a physical device to fall back on for testing.
Sorry, I'm working on it. I haven't had much time to work on anything this weekend. I did provide a bit of documentation in Test.java, but I understand that I need proper documentation. Edit: I uploaded the source to my website [here](http://www.kashewgaming.com/lwjdbl/src) Edit II: I began working on the documentation, I have the first class finish I believe. You can [check it out](http://www.kashewgaming.com/lwjdbl/doc) if you'd like.
This.
Please don't spam this sub.
Any particular reason you want to learn Java? There's better alternatives for learning programming.
Not in all cases. I have a pretty slick JSF (Primefaces)/Spring/SpringData implementation that doesn't require EJBs. 
Thank you very much for your helpful links!
Thanks for this, I think my biggest problem was having a d instead of the f.
I'm not the one asking questions.
Yes, JSF indeed works pretty decently with Spring beans so I agree with you there. But there's little to nothing in Spring beans that can't be done with the same ease or even easier than can be done with EJB and CDI. Since the majority of Java servers these days already support EJB and CDI, there's often very little reason to use Spring beans instead.
Good points about other implementations, and my screwup on the name. Thanks.
Can you name an organization that is less responsible than Oracle in its maintenance of open source projects? It mismanaged Hudson and Open Office to such an extent that it drove most developers away. Both Hudson and Open Office are shadows of themselves, being replaced by Jenkins and LibreOffice. And attempting to sue the company that has been the most successful with Java, for what exactly?
Works with Java too.
I'm not sure how new you are to java/programming... but you should look into Frames/Applets for displaying stuff. For clicking just google some 'java clicking' or something.
so many headaches with Glassfish, never again.
Just for the sake of sanity: never, ever create a class named "Object". Also, if you're trying to create a program with any kind of graphical interface, you need to read up on how to use AWT or Swing. 
I would work a little more on the basics before drawing graphics to the screens. As mentioned before, naming a class 'Object' is a bad idea. Also, I would think about why your .move class has to take a Board object? I would think you would want to have a Piece that you add to the board. then you can move each piece and it should know what board it is currently on.
I am not going to bother reading your code. The answer is simple. Make each piece responsible for drawing itself. Then when you use the mouse event listener have the piece at the cords clicked on continue moving until clicked again, then attempt to draw itself in the nearest valid position.
Nice, thanks - I would have killed for ViewActions and FacesFlow 8 months ago. FacesFlow actually addresses the very things that were a pain with that project.
Look up how to use Java 2d sprites.
There's the official x86 system images for the emulator that support virtualization now and hardware accelerated graphics I believe (though I mostly develop on real devices) that make it much, much more bearable. 
Sounds more like a graph drawing problem than a Java problem. You should ask in http://cstheory.stackexchange.com/questions/tagged/graph-drawing
thanks! the totalHeight simply put me on the right track! I'll go from here :) I really appreciate your time and kinda worship your mind!
thanks will look at it
I think it's more a statement on the blanket distrust on Oracle, not on the quality of Java EE.
Create an interface called Piece. Your board consists of Pieces (board = new Piece[8][8] - something like that. A piece can move, so you need a method for that. A piece might have a draw-class or can draw itself (=&gt; draw()). And every Piece must know what valid moves are. boolean validate(startPosition, desiredEndPosition) Now the King is a Piece, etc - implement those Pieces. Maybe you want the Board to be a class on it's own (to hide the board data). 
There are different GC that can be used: check slides 38-41 here: [http://www.slideshare.net/aszegedi/everything-i-ever-learned-about-jvm-performance-tuning-twitter](http://www.slideshare.net/aszegedi/everything-i-ever-learned-about-jvm-performance-tuning-twitter)
Thank you!
Not exactly Java.
Using char[] instead of String for passwords is (IMHO) a bad idea for a few reasons: 1. That's going to massively complicate things. Strings maintain information about character encodings - char[] (obviously) does not. So if you use char[], you have to be very careful to always use the same encoding. This is critical if you support non-US English users (and you should always do that!). 2. If a malicious user gets access to read core dump files in /tmp, it's game over anyways. At that point, it means that not only has a malicious user gained access to your server, but he's also gained either root or application user access - so he's fully compromised the system. 3. char[] are not pinned to RAM. The OS swaps char[] data just as easily as String data, writing it to disk in the swap file. 4. Strings may be immutable, making it more likely that they hang around for a while in memory due to string internment, but char[]'s aren't guaranteed to be removed from memory either due to the uncertainties of garbage collections. You can never be sure any memory is cleared in Java, nor can you tell Java to clear any memory. Using char[] instead of String makes your code buggier, harder to maintain, harder to write, and only more secure in a totally impractical sense.
It doesn't take an expert to check for null comparison, bro.
HotSpot uses [compressed ordinary object pointers](http://download.java.net/jdk8/docs/technotes/guides/vm/performance-enhancements-7.html), so the memory won't blow up on 64-bit systems. 
If you can find a source for arithmetic operations being handled more quickly than bitwise operators I'd like to see it, as I'd consider that highly counter-intuitive. In Java though I'd avoid using them in general - code readability is normally far more important than any gain this could get, plus I'd be amazed if JVM/hotspot magic doesn't make this optimisation automatically (if it really is an optimisation).
I have the SCJP. It's done nothing for my career. Don't waste your time. BTW, the certs are named differently now that Oracle is in charge.
No. That's the point.
If you have nothing else, it's something. 
javinpaul, I'm wondering why this article seemed worth posting here?
Where I work we would rather see you spend the time on a worthwhile FOSS project then cram a bunch of knowledge you won't ever use again into your head.
&gt; I haven't downvoted you at all, so I don't think I'm alone in my opinion Sorry, I missing where I'm being downvoted like crazy, and quite frankly, if the only other person who shares your opinion is the other replier to me you aren't gaining any credence saying nonsense like that. I should clarify here... I don't really care about the imaginary point popularity contest... and if the arguments against my posts only consist of yours and the other guys, well I'll take being right over being popular any day as well. Now, let's get to the actual argument shall we? &gt; I think maybe you are getting at a different issue that the original asker might be having but isn't asking about directly. Excellent argument, except this is because *that is the argument* **you** decided to deal with. I, along with nearly *every* other poster correctly identified the two most common scenarios and covered them. While we are at it, your responses aren't helpful at all because they are absolutely wrong, and as we are going to go into here--you know it too. If you cared to actually listen to me, you'd figure that out. Also, rudeness is relative, there was nothing inherently rude about my post. &gt; I think what you're getting at is protecting every method you ever write with null checks for every parameter is overkill. I agree with that BS. You *don't* agree with that or you would have never posted. What about that additional information, the whole spiel that you gave earlier about intentionally throwing null exceptions (or equivalent statements) instead of letting the code throw null exceptions naturally gives *extra* information that is necessary? This is the part I was talking about you knowing your argument is bunk. Here, right here, your excuse that it gives more information but don't "overkill" it! And holy cow! No sooner then you make this grand argument that you aren't saying to go overkill and do such nonsense, you later again assert that checking for nulls and throwing other "informative" stuff is the goal! Can you keep your argument straight here please? You can't have it both ways! Checking for null and throwing an exception when the code would throw an exception anyways if it is null is completely redundant. Let's go into the statement I made for your whole series of posts here: &gt; If you use a != null to throw a null exception if it's passed, don't, just have it throw a null exception when it's used. This is what I said, this is what you spoke out against, now, let's keep this in mind while we read your next statements: &gt; but somehow you're getting to: never check for null, it's plainly obvious when it happens. I clearly gave the context for such my statement. YOU are the one who can't seem to understand it, so you seem to want to create a strawman of my argument. As for the "plainly obvious" aspect, you seem to be also creating a strawman even at that! Yeah, when you get a null exception, it is pretty obvious that the variable IS NULL. What the hell do you think a null exception is anyways? You ever see one of these beasts? It tell you basically: "variable was null at line x" How much more obvious can you get? Not only that, but you do know how to read a stack trace right? &gt; "It's obvious, don't use them" doesn't really add anything enlightening. Apparently it's enlightening for you, who thinks that checking for nulls, then throwing an exception, instead of the code simply throwing out a null exception when the variable is used will somehow give you more information. Furthermore, I did give another point, you know, about when null is used to make variables optional.... overloading methods. You didn't touch upon that, but we want to keep in mind that that was one of my original points, so don't act like it doesn't exist. &gt; No, don't check everywhere for nulls. But, but, that added information! &gt; But at some point, somewhere, a null is introduced--whether you're writing an API, or you are parsing a file, or something else that might generate a null. If your going to check to see if that's a null, and then throw an exception because it's null, and it's going to cause a null exception anyways if you don't but in the check, don't bother creating the redundant check. What's so hard about that? Is it confusing? *Because that is what I'm saying.* Furthermore, it is incredibly rare for a null return value to every be useful information. In most cases, when a null is returned from these API calls, it is an error, something that was not expected, but many novice programmers will throw in a check and then just neglect to finish the action. If null is not valid for your process, IE, shouldn't happen and you don't know what to do with it, just let the null exception happen. Otherwise you'll create bad state. But this has nothing to do with what you or I was saying, and that is, adding a redundant check for null just to throw an exception doesn't do anything. Further, the conditions when null is returned is often documented. The conditions can be checked before calling the method, which would lead to clearer code and better case handling should that condition be a valid condition at runtime... also forcing the developer to specifically handle said condition instead. &gt; fail early in a way that is informative. How you handle it is maybe throw an IllegalArgumentException, ParseException, use Assert with a helpful message None of that is more informative at all. I'm not joking. You're specifically ignoring the exception that will happen, to throw a different exception? A null exception is specifically intended FOR EXACTLY this scenario, when a variable to be used is null instead of a valid value. You can't get more informative than that! How is that not informative? It conveys EXACTLY the issue at hand, that the variable was null and needed to not be. I mean, what exactly are you going to say in the illegalargumentexception? That the variable was null? Huh. If only there was an exception specifically for that case... We also need to go into something here. I didn't touch upon this earlier... but if you want to try to get downright dirty with *information*, using an assert is absolutely wrong to spec. Asserts are not meant for run-time checking of stuff, asserts are for testing correctness of algorithms and functionality. So since we are getting down to the small stuff here, no, throwing an assert to cover errors/exceptions is not correct. Yes, that's right, asserts have a time and place and a proper use, and using them as exception handling is not proper! Now then, do you have anything else? And next time deal with both points instead of creating a strawman because you didn't like how the conversation was going, remember, the second point in my *original* post that you didn't cover?
I've never even seen those certifications required for government contracts, which often care about little more than credentials.
I have a BS is Computer Science, and a BS in Math. Do you think it will add to make me a better candidate?
ur wrong budy it shuld be if( null.equalsIgnoreCase(&lt;obj&gt;))
Unfortunately this post is rather vague on how to encrypt passwords. To be more specific, passwords should be hashed (which is a one way operation whereas encryption usually refers to a reversible operation) and passwords should always be salted. See http://www.jasypt.org/howtoencryptuserpasswords.html or https://www.owasp.org/index.php/Hashing_Java. 
Jelastic is free or why are there no prices anywhere?
Saint Bucky.
I already have the "source code". The first thing I did was check with a program that lets me look at the classes as source. The transition between versions and/or standards for programming languages is often a slow process. I don't remember if there is an updater, but only the people who go and get it themselves will have Java 7 for a while now.
Are you looking for entry level work? Then that is fine. 
Alright, switched everything over to ArrayList, thanks again for suggestion 
java should be pre-installed on your mac. open a terminal window and type in"java -version" to see if java is installed and "javac -version" to see if the java compiler is installed. Apple distributes java through internal software updates, so you normally wouldn't download it yourself.
It is not the most recent Java version (Java 7 is out), but it is the one most heavily used in production environments now. You'll be just fine with that version.
It's another way to get more knowledge, so it's worthwhile I think.
Quote: "We look at the worst regex you can possibly come up with, although it looks innocent and simple. You will learn about this backtracking trap that let’s you easily wait for 10^30 steps, as an example of an errant email regex will illustrate. One possible solution we investigate is the use of possessive quantifiers."
Use DOM to parse the XML if it's not too big and you don't have too be to tight on memory or processing speed. DOM will parse the XML and create a Document object, which provides convenience methods for navigating the XML. You can also pass a Document object to XPath for more advanced queries. SAX is a streaming, event-based API that does not load the XML structure into memory and leaves it up to you to create whatever data structures you want to store the XML data. It's much faster and memory efficient, but harder to use. I would recommend moving the XML data from the Document object into domain-specific and lighter-weight Java classes for greater flexibility, and you don't have to carry the full Document object around if you keep the Node objects. You can use any collection type you want, as long as you do not share the collection references between threads. The share nothing approach provides maximal safety in a multi-threaded environment. Don't use Hashtable or Vector, because every method is synchronized, which can lead to bad results when multiple threads are involved.
Minecraft is a (quite popular with a niche/cult-like following) commercial game originally written in Java but there are also open source/modified Minecraft servers derived from the original floating around out there that are run by enthusiasts.
I found [this article from H-Online] (http://www.h-online.com/security/news/item/Oracle-update-of-Java-closes-critical-holes-1616681.html) to add some helpful explanation. 
There is already a great api out there for working with telnet. [commons-net](http://commons.apache.org/net/), maybe check out the source code? If you are interested in learning more about sockets and what not, I would suggest you check out [O'Reilly's IO book](http://shop.oreilly.com/product/9781565924857.do) on the subject. It definitely helped me get a hold of the subject. 
Writing a CLI app that does stuff in a 'scripted' manner over telnet is relatively easy. Writing a GUI terminal application that implements even just say vt100 emulation is relatively hard.
That's all it is. It is the bare bones API to use telnet or nntp or whatever. There isn't a GUI that I know of
Do you have a schema for the document? If not, can you create one? Once you have a schema, you might want to look at [this](http://www.oracle.com/technetwork/articles/javase/index-140168.html).
Switching to .NET?
Hey man. If you would be willing to shlep them to the post office, I would put some money in your paypal for shipping. They would be going to [this great organization](http://upliftdc.org). PM me for an address.
Where are you looking for a job? PM me and maybe I can help. 
Sounds like you've been stuck in 2007 for the past 5 years, and it's definitely time for you to spend some time catching up on the tools that companies actually use to build applications these days. I'm not even sure what "How exactly does one gain experience in enterprise Java and still be taken seriously as a contractor?" is supposed to mean. How would gaining experience with the tools and frameworks that most companies are using to build Java software hurt your ability to be taken seriously? Working on open source projects is a simple way to gain real-world experience, and nobody can stand in your way. :)
that's Redmond, not Richmond
JavaFX 1.0 was indeed a separate scripting language with its own compiler, but JavaFX 2.0 is implemented as a java library, so the code compiles with the rest of your program. It's supposed to be the replacement for swing in term of gui designing in the future.
Java User Groups around the globe have banded together to work on Java Standards (JSRs) in order to improve their technical quality and usability by developers (avoiding the creation of well-meaning but not very useable standards, like the EJB 2.0's of the past). We have ~100 folks working on a number of JSRs, making some real positive difference to the standards that millions of developers will use going forwards. This initiative is a great way to dive into some core Java, JavaEE and JavaME technologies as well as giving something back to the ecosystem! See http://adoptajsr.java.net for further details
"JSF is a complicated beast with severely different implementations (being an expert in JSF is not enough, you have to be an expert in a specific family of implementations)" JSF greatly simplifies developing applications. It offers simple tags to build complex front end components. The MVC model is superior to Spring in both power and simplicity. My guess is your JSF experience is with version 1.2. It was almost unusable. Version 2 is absolutely fantastic.
This is often a problem. I always find it annoying because a half decent developer can pick up a framework very quickly. I think you just need to study up on some books and learn some basics about EJB, JSF, Hibernate and Spring. I would be much more impressed with someone who taught themselves than someone who appeared to have no interest in picking up new skills.
Good guess concerning the JSF version. I don't find 1.2 to be "unusable", but it sure has difficulties. I reserve my opinion on 2.0 until I have to significantly work on it, but I'm glad to be reminded it has improved.
O RLY? On my machine they're actually slower than the emulated ARM images.
Not in the area, but I would certainly be willing to pay for shipping.
Or using BigDecimals.
Making an application at home is probably the best way. Enterprise technology is pretty simple once you go through it once. I think it's a blunder that companies have been so stuck on rating engineers based on this technology though. Typically engineers who are talented and have a feel for the language can make the right decisions and learn quickly with these tools since there's so much documentation out there anyways. Managers should know that design and language knowledge over tools should be key and let their senior staff decide who's awesome based on those attributes. Like someone else said in the thread, you've probably dodged some bullets by not getting stuck with these companies. My first job was at a company that used the Enterprise technology and the first boss was cool and decided that they were going to mold me, despite being a C++ programmer, still in school, and not having experience in Java (Java is pretty easy compared to C++...I think anyways and the syntax is very similar), he liked me as a cultural fit and was impressed by my programming test enough to give me a try, but after he left and they brought someone else in and I still wasn't quite trained in all of the Enterprise architecture and this guy had the same stick in his ass about being and Enterprise guru as the other companies that you've ran into. Despite being named the number one developer for releases several times, mainly because by that time every one else more Senior left because the previous, awesome boss left, he would generally denounce any suggestions that I made and would instill his own agenda no matter how stupid or inefficient...such as using Microsoft Excel for project management rather than using the tool we already had, Jira. The web development industry has definitely taken a turn for the worse since all of these hiring managers and project managers are getting stuck on these buzz words without really knowing anything about programming. These are awesome technologies with really good, online documentation that anyone can learn quickly, especially industry vets. I'd say it's ultimately up to you, Oracle has some good tutorials on building Enterprise applications, some of it's actually pretty cool, I really enjoyed working with Hibernate and web services. If you feel that it might get you somewhere you don't want to be, that's perfectly fine too. You just might have to get away from web development for a while and try to get into a different area. There are lots of jobs in LA, the last time I checked, mainly Enterprise stuff, but there's others as well. **TL;DR:** Enterprise is cool, managers who get stuck on buzzwords usually aren't. Enterprise is easy to learn on Oracle's website, if you don't want to possibly get stuck with a lame corporate culture you might wanna branch away from web development. Best of luck.
I dont think one can really compare JSF and Spring MVC. One is component based the other a typical responce/request framework. I preffer the latter because until we get websockets everywhere the internet is request/responce. Just mho
They are worth the *learning* effort, maybe not the money for taking it :) I learned java 'on the go', so my knowledge was pretty uneven; studying for the programmer cert helped me get a much deeper knowledge of areas I never touched; but I never took the exam, since it wasn't valuable for me :)
Hibernate is not as extensive as the others, I think (can't comment on JSF). And you could probably pick up some struts and Spring knowledge as well with a sample project involving all three. Enterprise frameworks are very extensively used in Java, so knowing them can't hurt. Especially JPA (Hibernate) because most of the SQL that people do is of the trivial variety.
I'm assuming your new hire is a full-time employee. Employers are generally much more willing to train their own team members on these frameworks. However, as a contractor, this isn't the case. I can't really say I blame them because clients often expect a contractor to hit the ground running when brought on site. Who would want to pay a contractor $60/hr and still have to train them? Nobody.
&gt;being an expert in JSF is not enough, you have to be an expert in a specific family of implementations That's nonsense. There are only two implementations; Mojarra and MyFaces. There is no "family of implementations". If you are a contributor to an open source library like PrimeFaces or OmniFaces you'll have to be aware of some of the subtleties of each implementation, but for the regular application programmer this is barely the case. &gt;JSF is a complicated beast No it's not, but since you seem to have such strong opinions I wonder if you can explain to me what's so complicated then.
JSF 1.1 and before were terrible (content interweaving anyone? blergh!), 1.2 was out of the box unusable, but if you knew the right add-ons (Facelets, PrettyFaces, Tomahawk/savestate) you could make it useable. JSF 2.0 is nothing short of awesome! Out of the box it's very useable, and it flies with component libraries like PrimeFaces or RichFaces. Note that PrimeFaces for the most part doesn't "fix" JSF, but merely delivers the graphical components for which the core JSF implementation facilitates an environment.
A few off the top of my head: * http://www.jboss.org/ * http://glassfish.java.net/ * http://grizzly.java.net/ * http://jersey.java.net/ * http://mq.java.net/ * http://activemq.apache.org/ * http://jetty.codehaus.org/jetty/ * http://geronimo.apache.org/ * http://myfaces.apache.org/ * http://openejb.apache.org/
This. Certified _____ is an instant disqualification when I see it on someone's resume.
And you can always just start your own project. :)
In the title or simply listed as a achievement?
Ah, and I now gather you're wishing to remain a contractor. Yes, in that case, we'd expect you to hit the ground running and start working pretty quickly. Frankly, if you have experience in *any* enterprise framework, though, we'd consider you. After all, our standards aren't just "use struts and the DAO design pattern" - it includes package/namespace naming and hierarchy and where certain files go. Even if you spent the last 5 years doing struts, it wouldn't be just like us. Edit: tl;dr: even a contractor is going to get some mentoring on their first project. I have contracted 4 times (and been offered permanent jobs on all - accepted the positions twice and was a happy employee for many years both times) and it was this way every time.
Have you considered a startup? My previous employer was a more "corporate" environment and focused heavily on frameworks. The startup I'm at now could care less about what frameworks you know and more about "can you actually code" - this is far more rewarding than a shop that only cares about J2EE or Spring or such. I'm a big fan of Spring, I've used it heavily, but it's not always the right answer. :)
Foo will point to different locations in the heap with each allocation. Remember, those old instances are technically still reserved in memory until such time as the garbage collector gets around to reclaiming them. *edit: Incidentally, if you really have your heart set on holding on to a specific memory location (I don't know.. maybe you are doing some device IO), then probably the best strategy is to make a static reference in C/C++, then accessing it via the JNI. 
Off the cuff, I would say different locations. Mostly because the old object won't be garbage collected immediately. One, just because the JVM doesn't always do that immediately, and two, consider the case of: static public String foo = null; foo = new String("Hello"); // I could have dropped the new for String, but keeping to the question String bar = foo; foo = new String("World"); The location of the object that holds "Hello" will still be there because there is another reference. Thus the variable foo will now hold the location of "World" in the heap which is a different location. I believe, but would need to test that if you removed the assignment to bar, it would still act the same because the JVM doesn't clean up till later. When GC happens, it will look for objects .... wait a minute, I forgot about generational heaps. All new objects go in the young generation. Always. Then GC looks through and cleans up young frequently and promotes things to the next generation after an object has lived a certain amount of time. God this stuff is complex. 
First of all, strings are immutable in Java. Any time you create a string, the JVM checks if it already exists, and if it does, it points to the already-existing instance. Secondly, there are two parts to `foo`: the declaration and the instantiation. The declaration is a reference -- what in C++ would be called a pointer. It belongs to the class, since it's static, and space for it is allocated only once in PermGen space. When you say `foo = new &lt;type&gt;`, then, assuming `foo` is not a String, it will be allocated on the heap. The next time you create a new object for `foo`, it will also be created on the heap, almost certainly in a different location. `foo` will point to the new object, and the old `foo` object will be detected as an isolated reference (or as an island of isolation) and garbage collected.
Not with Strings, they're all created in the String pool I believe.
What's the reason for wanting to do this? I've been a Java developer for awhile, never seen any reason to care about something like that.
&gt; Am I overreacting to these interviews or am I discovering a legitimate trend? I see the same trend. BTW, these frameworks are often horrible piles of crap in my experience, so don't fret too much about what you're missing. :P
&gt; in truth USA is a land of mystery I've never outright disqualified someone for listing a cert, but I do notice if its one of the first things they list on a resume, and then go on to list 10 contracts with ten companies, all lasting about a year each. That and I hate when someone says "I know X" on a resume, and then in the tech screen says "we used X on that project". Using X does not necessarily mean you know X. -Not a hiring manager, lead dev that screens incoming teammates.
You don't sound like you would have trouble learning an enterprise framework if hired. If anything, having strong fundamentals is preferable to having people that only know how to use X.
&gt;Supposing I declare a method of the form: static &lt;type&gt; &lt;name&gt; foo = null; That's a variable/field, not a method, but okay. &gt;and then later within my code do the following [multiple times]: foo =new &lt;type&gt; (); &gt;Does doing the above multiple times save the location of foo in different locations in the heap? The **location of foo** is in the class's static fields somewhere, and although the garbage collector can move things around for its own complicated reasons, the short answer is no, that particular 4 or 8-byte pointer variable is not moving about just because you're pointing it at different new objects. But I think what you mean is, do the newly created objects assigned to be pointed at by `foo` end up in different places? Yes they do. &gt;or will it use the location initially allocated for the static declaration? Space is allocated for the pointer `foo` (which is initially pointed at `null`) when the class containing that static field is loaded. No space is allocated for any particular &lt;type&gt; object until you create one with `new`.
Ah, good catch, and my bad. Thank you for the clarification.
Correction, while not entirely relevant to the thread, it's worth noting that only interned strings are in PermGen.
It seems like you're suggesting that usage of frameworks like Spring and Hibernate needs to be limited to big enterprise projects and not 'new stand-alone tools'. If you're doing a lot of work with JDBC and Servlets I would highly suggest you try to learn more about Spring MVC and Hibernate. It will probably change the way you program. You'd be amazed how much cleaner your code in your web projects can be when you're not implementing a dozen HttpServlets and mapping every request parameter by hand.
Re-thinking the question I'm wondering if the OP is instead asking where the actual pointer 'foo' lives on the heap, not what foo is currently assigned. I imagine that the location for static fields are set when the class is first loaded so their location wouldn't change on reassignments. For example the field foo might live in a class loaded at location L0 and point to a reference that lives at location L1. Reassigning foo to a reference that lives at L2 wouldn't necessarily change where the class that contains the foo field lives. Of course, the JVM reserves the right to unload/reload classes or even a guarantee that only one instance of the same class is loaded in a JVM (could be optimizations for multi-core, etc). The beauty is that developers (almost) never need to care about any of this. I hope the OP is asking out of intellectual curiosity and not because they're trying to do something clever/crazy.