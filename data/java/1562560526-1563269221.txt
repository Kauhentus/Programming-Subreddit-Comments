How about Kafka and Spark implementations of reactive streams standard?
[removed]
They should spend the time merging Android/Dalvik into OpenJDK instead
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Wanted to recommend this as well. There is a good tutorial from spring where you build a spring web app with react frontend so you can use what you already know and learn java via backend.
Such questions are better suited for /r/learnjava as is clearly stated in the sidebar.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Thank you for clarifying the role of Spring Boot in the Spring ecosystem! &gt;As for how to learn it, Udemy tends to be my favorite site for coding courses these days. I took a good one about Spring Boot before I started my latest job Which course was it and ? I searched for React and Spring in Udemy and came across this one: [Spring &amp; Hibernate for Beginners (includes Spring Boot)](https://www.udemy.com/spring-hibernate-tutorial/) &gt;As for JavaScript, it's come a LONG way in recent years. On some levels it still has its standard defects (== is still broken due to type coercion, dynamic typing still sucks IMO, you only have prototypical OOP, etc). However, starting with the release of ES2015, JavaScript has been heavily overhauled. If all you're familiar with is the old JQuery-using JavaScript, I would recommend studying ES6/ES2015 (they're the same thing), because a lot of the old pain points of the language have been resolved. It's very interesting to see JavaScript rise to the level it has..although seeing a dozen new frameworks by the hour is quite something to see! Looks like more noise than signal in case of lot of them. Not worth the effort. Agree on ES6, lot of changes and new features, for reference, [https://www.w3schools.com/js/js\_es6.asp](https://www.w3schools.com/js/js_es6.asp) &gt;Add to that all the new frameworks and libraries, plus node/npm/webpack, and you have a development experience that is much, much more robust than ever before. I'm actually quite fond of it, and I used to be a big JavaScript hater. Sometimes I think JavaScript is trying to do everything from assembly language to mobile apps (well it does I suppose in case React Native), yeah no more looking down on JS. Never understood why it uses the word Java in its name, maybe it likes to be like Java :-) at least tries to. Who would have thought .. compiling JS code.. Kidding aside..All in all, good developments for sure! &amp;#x200B; &gt;learn React. ... &gt; &gt;It's really good. ... &gt; &gt;More job opportunities.... Yeah I was confused at first when I started looking at what's out there. I agree React is a the logical choice at this point. For the reasons you mentioned and that it looks like it's got decent following, Facebook's backing and more job reqs. looking for it. &amp;#x200B; Thank you for your detailed replies, you've pretty much laid out the plan .. only one has to follow it and they will be set for quite some time!
Thanks for chiming in! &gt;My personal favourite is spring cloud, as I write a lot of streaming producers/consumer architectures, and I can bootstrap I spring cloud Microservice in about 30 minutes now. I would like to ride the Spring wave to cloud as well. Do you find Spring cloud is sufficient for typical cloud applications? For example, how does it work with AWS? That's cool .. I would love to do that in 60 minutes and still be happy with that :-)
&gt;Hadoop is three things--HDFS, YARN and MapReduce. The first two are used heavily, MapReduce not so much. HDFS is pretty simple (the secret is you need to format a namenode if you want to recreate a cluster, that one was a nightmare to figure out). YARN is the scheduler and it gets used by Spark under some circumstances and also a lot of Cloudera tools like Hue, Oozie, Hive, HBase etc. as does HDFS. At this point most of working on that stack means working on the web interface of whatever flavor of abstraction someone really wants. My first reaction is ..that's all Greek to me! :-) I've not delved into Big Data so that's the reason it's all new to me! Looks like Big Data is here to stay and will only get more and more relevant. Not sure what progression towards becoming good at it might look like and if it makes sense to transition from dev background to Big Data? I for some reason thought, it's more in line with someone who has data warehousing and SQL skills! &amp;#x200B; &gt;Remember at a previous job interviewing someone who stayed at a place with bad tech too long and all he could do was VB and Coldfusion. It's unfortunate that there's such a huge disconnect between recruiting and engineering that they just do keyword searches on your LinkedIn, but at least there are tons of jobs finally. If I say FoxPro, am I still welcome here ..lol ..:-) &gt;The big thing with spring is dependency injection, if you know that phrase you'll get hired probably. Yeah, I know the buzz words by now, need to brush up on a little project for proof of concept and should be good to go on Spring! At least enough to engage in a conversation and not come across totally lost! &gt;AWS is extremely useful and it doesn't take a lot to become familiar with it. EC2 are VMs, Security Groups tell you which nodes can talk to each other, IAM roles serve the function of SSH keys along with read/write privileges for users. I've a general aversion to vendor lock-in and earning certs (and even more on renewing them) but AWS cert. is quite in demand and does give a great overview of the architecture on big scale. I'm seriously thinking of preparing for the certs (maybe Solutions Architect Assoc. and Pro), it forces lot of learning as part of the preparation. &gt;Good luck, I'm sure you'll find what you're looking for soon! Thank you for your kind words and sharing your thoughts on the topic!
To me Kotlin doesn't really add much. I like package level functions but as soon as I converted some of my code to Kotlin it didn't compile anymore. Most stuff in there just seems like compiler sugar and some guy scratching an itch. Removing semicolons for example, this doesn't really make my code better, its just a change for the sake of change. Introducing the 'fun' keyword is cheesy. I don't like putting the variable name before the type; again just unnecessary change. And I don't like that I now have to put a colon in there, just more syntax. Groovy I like because it allowed me to write a simple script without too much ceremony. I really love the way Grape works. I previously worked with Perl and Python and both are really bad when it comes to dependency management. Python in particular is horrible at it. You have to keep a list of libraries and their versions in a separate file and then install a whole new instance of python in a virtual environment to prevent clashes. Grape is a breath of fresh air, just declare your dependencies at the top of the script in a single line, and you're done. I'm actually really impressed with the stewardship of the Java language architects. They seem to get it completely right so many times. The way they introduced local type inference for example was spot on. One thing I don't like is how Python deals with type inference; you have strict typing but at no point does the code tell you what type you have. This is bad enough for your own code and horrible when you want to use a library. I was afraid they were going the same way with Java, and then they didn't.
Spring Reactor
Yes, I work with mainly AWS, with some GCP. So it took about 4 hours to get Spring batch + cloud to write service to poll a database, run some calculations/transformations queue the result onto Kinesis, and a consumer to pick it up to further enrich/process/save into that microservices database. Doing anything in chron/windows task is a massive no no for scale out cloud, so batch has got rid of that for us. It’s tolerant of failure, you can rerun jobs etc and has saved my bacon from bad releases more than once.
Great work! These are very interesting and fundamental architectural changes. I guess these articles left me with a few questions though. One is why it wasn't done this way originally, if this new barrier type is so much better and easier. What's changed since Shenandoah was first designed - is it that implementation of the other approaches led to better insight into the nature of barrier and GC design? Another is how Shenandoah with the new design compares to ZGC. I had previously assumed both GCs were architecturally stable and we'd start to see some benchmarks to help people decide what to use. But it seems we're not there yet and there are still major design changes occurring that would invalidate prior benchmarks. I used to feel I could articulate, at least crudely, the different designs and tradeoffs made between Shenandoah and ZGC but having read these new articles I no longer feel I can really explain the fundamental different in design beliefs that distinguishes them. Clearly Shenandoah is still using a Brooks forwarding pointer vs coloured pointers, just in different places. But what impact does that have, really?
Sorry, I must have missed something, but how is "Yes" a valid answer to a question asking "How much smaller?"
Understandable, thanks for taking the time to reply.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
For the future, this entire thread really should have gone in /r/javahelp. There is [plenty of relevant information](https://www.dropwizard.io/1.3.12/docs/manual/hibernate.html) on the Dropwizard site, you need to spend some time reading it. The short version: 1. Make sure you've imported the `dropwizard-hibernate` module. 2. Add a `DataSourceFactory` property to your configuration class. 3. In your `config.yml` add the `database.url` property and set the URL to something like `url: jdbc:postgresql://db.host.example.com:5432/db-name` for a PostgreSQL database 4. In your application main class, add a new `HibernateBundle` as described in the docs 5. Use the Hibernate/JPA `@Entity`, `@Table`, `@Column`, etc. annotations to link your classes to database tables 6. Extend Dropwizard's `AbstractDAO` to create your own database access objects for working with individual tables.
No, the majority does not win. You’re the only active mod (or so you say) so it’s the voice of one that wins. Because you are fine with rulebreaking posts as long as something good comes out of them, and because you don’t browse the subreddit actively enough to remove them soon enough, we effectively have 3 subreddits dedicated to answering programming questions, and 0 subredddits that do what /r/java used to be for. Seeing as how it’s only the latter that I have any interest in, I have every right to be annoyed.
Reactor has some advantages over RxJava, like better testing support (virtual time for example) and a more stream lined API. Performance and features are more or less the same.
No. It's the same.
Play is much more specialized than libraries like Reactor. Its a bit like comparing engines with cars.
[Akka Streams seams to be really slow!](http://akarnokd.blogspot.com/2016/12/the-reactive-scrabble-benchmarks.html)
Here my HTML5 presentation slides from the Java Forum Stuttgart 2019 about all the Goodies and News since Java 8. *Hint:* Progress through the presentation using `Space` or `N` button to not miss any „downwards“ slides. Made with the love of of Asciidoctor and RevealJS
&gt; it'd save processing power making the client do most of the rendering work But is the work really saved, or just done by someone else (the client here) And is the client happy that his cpu cycles are being used instead of yours?
&gt; And is the client happy that his cpu cycles are being used instead of yours? Here's the best part: the client, 90%, won't even notice. While you have the ability to host more clients per server, 90% of the time, the client won't notice that it's his/her machine doing most of the UI work.
Why angry? Do you have the freedom to choose the framework you like? You should not angry if you have.
Link to the actual presentation? there was very little info on those slides
Good, but misses some performance features that may be important to users, in particular: * GC: The ZGC and Shenandoah low-latency collectors. * Startup: [Application Class Data Sharing (App CDS)](https://blog.codefx.org/java/application-class-data-sharing/)
It would be cool if I had time to actually read a slide or two before it decided to transition to the next large image of a woman in glasses scowling at a book.
Whoa, that second thing is awesome.
Yep. It's a previously paid Oracle JDK feature that's been open sourced in JDK [10](https://openjdk.java.net/jeps/310), and has been getting some love recently in JDK [12](https://openjdk.java.net/jeps/341), and [13](https://openjdk.java.net/jeps/350). Sadly, it tends to get lost among the other more flashy improvements and many developers don't know about it.
I mention[both of them briefly several times in the version overview section](https://bentolor.github.io/java9to13/#/_v10). This was a 40 Minutes talk so I really had to stick to the core and mostly focused on Developer-facing changes.
You can always pause/stop the presentation by clicking left on the pause button. It's just a "default" kiosk mode starting ;-)
You can read my speaker notes by pressing \`S\`. Until now I don't have a recording available to share.
Yes, features that actually require developers to change how they write code get most of the attention, but I actually like those features that are more transparent. Also, JDK 9 was huge (in comparison to 10, 11, 12 and 13) because it was the last ever major Java release. As the regular six-monthly releases (previously called "limited update" releases and now called "feature releases") now get a new integer version name (after some debate), in terms of content they haven't changed much (i.e. similar to previous feature releases like 7u4 or 8u20) but because of the new name some confuse them for major releases. Therefore, it is a bit confusing to say that Oracle only "supports" these versions only for six months, because, while true, these aren't major versions, and previous similar releases (like 7u4 or 8u20 were also "supported" only for six months). So the thing that is supported for "only" six months is very different from the thing that used to be supported for more -- it just has a similar *name*. So I would say that perhaps the biggest change is that developers now never have to do a major upgrade again as major releases are over.
Thank god that most devs are intelligent enough to not use them (or too stupid to use them).
i don't like it either (in fact, i hate it) but it looks like thats what he wants
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
This is a question for /r/techsupport and not for here. **Removed** Have you tried downloading the *offline installer* and installing from there?
I must have misunderstood the question, likely due to the word "Framework", and its multiple definitions. Example, there are Frameworks like Spring Boot and Play, and there are "frameworks" like Reactor and Akka, which are really Library Frameworks, not Stack Frameworks. Maybe the question might have been - Choosing a Reactive Library Framework for the JVM. Things are complicated enough, amirite?!?
Go check out Bloomreach! They have a free open source version as well and you don't loose any preview functionality in a headless setup: [https://developers.bloomreach.com/products/cms/headless-cms](https://developers.bloomreach.com/products/cms/headless-cms)
I wasn't aware that that section of the manual was what was useful Couple questions though: 1. The manual's "run" method in the Applicaiton class adds the resource to the Jersey environment by doing "environment.jersey().register(new UserResource(dao));". So what does that Resoruce class look like? It has a constructor which accepts a DAO object?? 2. For the URL, am I setting it to the Amazon Resource Name or just the actual URL itself on the page of the database? In addition, shouldn't there be other fields I'm entering in that database property like password and secret password? 3. So do all my CRUD operations live within the DAO class? In the manual, I think they're just calling on methods from the parent AbstractDAO class, but if connecting to an external DB, what are the specific AWS methods I'm writing? 4. Where am I adding the @Entity, @Table, @Column, etc. annotations? As in, which class(es)? 5. Are the Transactional Resource Methods and Transactional Resource Methods Outside Jersey Resources necessary?
&gt; Like competitor issues and memory leaks. [happens so quickly](https://blog.jooq.org/2014/12/08/dont-be-clever-the-double-curly-braces-anti-pattern/)
Yeet. I use them in unit test sometimes when im feeling naughty. But even then i get nervous.
Good post, did not know this.
great article, i've never seen this solution before. Thanks!
That beer background is ace...
8 is unsupported. couch it as a security and support issue. every org should be moving to openjdk anyway, unless you really want an oracle database in your team.
great tip, I've always used the "synthetic interface" for this and intersection types look like a superior solution.
True it is a high paying.
Kotlin is better in every metric
&gt;Therefore, it is a bit confusing to say that Oracle "supports" these versions for only six months, because, while true, these aren't major versions, and previous similar releases (like 7u4 or 8u20 were also "supported" only for six months). I also heavily emphasized, that Java 9 is and was the largest release by margin. The "unsupported horror movie" is more a "get you attention teaser" before I go into explaining the details. Nevertheless I think you comparison with 7u4 etc. is not perfect applicable. Actually the non-major releases never delivered i.e. any language changes, while Java 10 and probably 13 does. So IMHO there is a change in the release cadence, though a Java XX version is no longer in any way comparable in size to Java 1 to 9 release. I completely share you position here, too. &gt; Most companies should follow the default, cheaper, path of following the feature releases without ever needing a major upgrade. … I also recommend to stick on the _release train_. But I'm rather sceptic if the companies really will do that (though highly recommended. Upgrading your webbrowser only every 2-3 years is similar desastrous – nevertheless esp. done in banks…) I really assume that most companies will (unfortunately) stick to the LTS release chain …
I tell the audience that they can _"relax and I'm going to tell them all about the news in a TL;DR format_ Unfortunately the amount of content is so huge, that I heavily doubt that any beer will be helpful to keep up with the pace of the talk ;-)
I knew about this, but the JDK10 `var` update is interesting. The problem is that you still can't define a field or return type of an intersection type so this remains a quirk and is not really usable in regular code.
Great! Sorry if this is a dumb question but your whole setup including Spring Batch deployments are in AWS cloud, right? Re: streaming architectures, it looks similar to Message Queue type setups where you put data on the queue and subscribers receive the message (in Java world, it was MDB - Message Driven Bean) or IBM MQ Series product to manage the queue operations etc. &amp;#x200B; Yeah, aborted jobs in the Windows scheduler, lack of fine grained control and all those things are a mess to manage. Great to know that Spring Bath is handling them well and there're bound to be batch processes that would need to be tacked in most applications/setups.
Good post. Didn't know about this before. Interesting feature.
I am a little confused by your comment and I must not be picturing the scenario correctly. public class FlyerSwimerHandler&lt;T extends Flyable &amp; Swimmable&gt; implements AnimalHandler&lt;T&gt; { T animal; T getIntersectedType() { ... } } enables both fields and return types. If you only need a return type then: `public &lt;T extends Flyable &amp; Swimmable&gt; T getIntersection(){...}` I'm not certain what the use case is where you want to handle an intersected type but not create `interface FlyableAndSwimmable extends Flyable, Swimmable {}` but that seems completely doable, so is something going over my head here?
I knew about intersection type, but I've actually never realised the last bit using `var`. This also works for anonymous classes, actually: var anonymous = new Object() { void foo() { System.out.println("I could not be called from outside before"); } }; anonymous.foo();
Hmmm you're right I guess. I'm still having doubts about how practical this is, I'll have to try it again sometime. I'm always somewhat skeptical about tricks requiring generics in Java, since type erasure has prevented me to a lot of things in the past. What would be really nice to have would be Union types like Ceylon has.
Interesting trick, I'm always happy to learn something, but in what is it superior to the "synthetic interface"? The method as to be static? I am not sure my colleague will understand the code (I would have had to search for it 10 minutes ago). But nice trick!
Well, actually drinking beer is probably detrimental to reading about new Java features. (The brain might get reduced from its Object state to a Primitive)
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
.... that naming is confusing. An intersection would be a type only containing the same bits as two or more different types. This is surely a union.
i maintain kilim which provides continuations, fibers and message passing for java (using bytecode weaving like quasar). it solves some of the same problems as reactive. i'm interested in a benchmark that really shows off the strengths of reactive &amp;#x200B; i read through the source of this benchmark and it looks easy to implement. but i haven't seen much description about what the motivation is, or why it's considered a good benchmark for reactive. do you have any insight into what the underlying motivation is ? &amp;#x200B; from what i've seen of the code in the repository, readability doesn't appear to be the primary motivation. and using a for-loop appears to be the fastest implementation &amp;#x200B; [https://twitter.com/akarnokd/status/1085150338649411584](https://twitter.com/akarnokd/status/1085150338649411584) &amp;#x200B; ideally, i was thinking that there'd be a benchmark that was easy and fast to implement in reactive but slow and/or ugly to implement with a for-loop
This particular example seems like overkill when there are `mapToXXX` numeric stream types and `sum()`.
"Efficient" is a word that gets used a lot. How efficient is this really? What's the secret sauce? What are the data structures?
No question is dumb in my team 👍 Yeah we have the whole stack in AWS. Message queuing is a pretty standard way of decoupling components. The only real difference between queuing and streaming is the check pointing aspect of it. With a queue typically it’s received by one type of consumer, the consumer grabs an item of the queue and works on it. You may have multiple consumers, but each message is only processed once. With a stream, typically it can be consumed by multiple types of consumers, those consumers might be check pointing at deferent rates. For example consumer A is doing complex logic and might be running slowly. Consumer B might be simply storing the data in a data warehouse and runs quickly. Consumer A might be processing data that consumer B processed 5 minutes ago. The other thing I love about streams is the ability to reprocess it. Kinesis can store about 7 days worth of data, so if something goes wrong, you’ve got time to fix it and force the consumers to reprocess the data correctly. As you can tell I could probably talk all day about this kinda stuff, my day job is redesigning legacy systems to work in a more cloud friendly manner.
Cool feature!
Notice I used BigDecimal, which is recommended for money.
i insist. its for code readability. Its good convention. want to read an object? object.get CTRL+SPACE.. want to write an object? object.set CTRL+space Also setters allow for more parameters try looking for a writable field in SWIFT.. insanity Apple even kept its setters when you have several parameters. button.setTitle(String,Type) in SWIFT.. whereas they removed all other setters inconsistent!.. its not fun to use.
i don't like those tricks. Code is not readable. I would want a method with an explicit name for ``` java sale.getItems().map(SaleItem::getTotal).reduce(BigDecimal.ZERO, BigDecimal::add); ```
Yes, I did see that, sorry. I wasn't sure how relevant it was to the particular technique. My bad! It's a shame there isn't a native numeric `BigDecimal` stream type.
The type would have to explicitly implement your synthetic interface, so not an option if it isn't a type you control
 BigDecimal sum = BigDecimal.ZERO; for(SaleItem item : sale.getItems()){ sum = sum.add(item.getTotal()); } Do you think this way is more readable? I think that, at least, it's debatable. If you are used to java streams (introduced in **2014**) and functional programming (used by javascript) you should have no problems understanding a map-reduce statement.
Would a union type not be where the generic type could implement either A *or* B? Whereas this is the set of all types that implement both A *and* B, i.e. the intersection of the sets of classes that implement A and the classes that implement B
yes IMO its much more readable. I know about those reduce and stream functions. I never use them. and I will do this ``` public BigDecimal getSaleSum(Sales sale) { BigDecimal sum = BigDecimal.ZERO; for(SaleItem item : sale.getItems()){ sum = sum.add(item.getTotal()); } return sum; }
Depends how you think about it. I was thinking about the construction of the type. I.e given a set of methods in A, and a set of methods in B. Then the type T has a set of methods which is AuB. Therefore an intersection type would be a type that contained only the shared methods. But if looking at the set of all classes which could implement the interface, yes these types are the intersection. Thanks for pointing that out. :)
absolutely not. it breaks the paradigm of the language. they'd have to add generic operator overloading, and I *loathe* operator overloading.
I notice you ended TOO\_SHORT with a semicolon. Don't do that. End it with a comma. Then have a separate line of code which separates the enum elements from the rest of the enum class code: ; // ========== semicolon ends enum list ==========
 public class Foo implements Serializable { private static final long serialVersionUID = 2014_09_25_001L; . . . . . } For a "serialVersionUID", instead of some random looking number, you can date stamp it. With up to 999 changes on a single day. Hibernate entities for example, must be serializable. So that is an example of where it could be useful to date stamp your entity beans with the serialVersionUID.
Nice. Hope I will use java 11 soon...
when those filthy magic-lovers show up, they call it "convention over configuration"
groovy is a wavier name.
sorry, I can't eye roll hard enough at this noise.
Swing was used, and yeah pretty much
It does. The intersection of Flyable &amp; Swimable, contains all objects that are both Flyable and Swimable. It's the exact definition that you might know from basic set theory.
Please see my other reply. I saw it as the intersection of the type. Which would be the intersection of things that make up the type. Ie I was looking at the type as a set of things. As pointed out if you instead view it as he set of all possible implementations. Then yes it’s an intersection.
[This course on Udemy](https://www.udemy.com/course/spring-framework-5-beginner-to-guru/) is pretty good and they have frequent sales, no need to pay full price. John Thompson is a pretty good tutor and has a decent Slack channel for those who enrol in his courses. That said, while Spring has its uses, it’s worth being clear why you need it. Simply learning it because it’s in demand is a poor reason in my view because job checklist demands change all the time. For instance J2EE was all the rage once. Spring does take time to learn and it’s not clear to me that it’ll still be popular by the time a new learner today gets good at it. You don’t need it for DI — Guice works well, and newer frameworks like Micronaut do just fine without it. You don’t need it for Microservices (Spring Boot etc) — Dropwizard, SparkJava etc are pretty good. In corporate environments Spring Batch and Integration are still pretty popular but even there Airflow and Apache Beam are making inroads.
Spring framework evolved along the time and the team is always adding new functionalities to it, so that's why many job positions refer to it just as Spring. The Spring core dependecy started long ago as Spring mvc, migrated to spring boot and nowadays Dev team is putting much more effort on spring cloud. For a beginner I'd say that spring boot is a good starting point, also give a look into spring jpa, and spring security they usually come up together in most projects.
It looks like in your [submission](https://www.reddit.com/r/java/comments/carpwm/are_standards_becoming_a_thing_of_the_past_in/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
&gt; Actually the non-major releases never delivered i.e. any language changes, while Java 10 and probably 13 does. Right, the new feature release model is more gradual (and so cheaper) than the old one. In the old model, "limited update" releases sometimes contained major new features, but not spec changes; those had to wait for non-gradual major releases. &gt; I really assume that most companies will (unfortunately) stick to the LTS release chain … Perhaps at first. The mistake they'd be making is as follows: whatever the frequency of your updates, you can maintain those either with the LTS or the release train path. Ideally, you must update your JDK every couple of months if you want to stay up to date on security and bug fixes, regardless of the path you choose, but you can skip releases, too -- also regardless of the path you choose. The difference between the two paths isn't the rate of updates, which is the same, but whether you prefer gradual or stepwise ones. The mistake people are currently making is believing that there is a significantly higher chance that a feature release will break your code than a patch release. [This is false](https://www.reddit.com/r/java/comments/ba79hh/beware_of_computation_in_static_initializer_much/ekb4s3s/). Similarly, a full regression suite is absolutely required whether you're updating to a feature or a patch release, and skipping them is about equally dangerous. The reason is that the spec changes in feature releases are less dangerous (from a code-breaking perspective) than implementation changes due to bug fixes. While they may well require that you change your command line (class/module-path etc.) they very, very rarely require actual code change.
Thank you for taking the time explaining it! One more follow up question: so there’s no “developer machine sitting on the desk”.. do folks log on remotely to cloud for their day to day dev work? It’s very interesting architecture and I am interested in what kinds of legacy architectures can it migrate into the cloud? So in other words, it’s better suited in some situations than others. would you say more e-commerce oriented? I’m enjoying your writing so write away, I will be reading and learning with much interest!
Trying to view this on mobile was about as enjoyable as a root canal
nope! I guess php is.
For enterprise web applications probably. For regular old websites PHP is far more ubiquitous.
What all stuff u learned to make the game?
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
even today? it definitely was in 2005-2010, but today i have the impression that a lot of folks go to JS on the server for their server needs, since they don't want to learn another language and nodejs pretty much provides everything they need.
@Async is not appropriate when there are multiple calls that need to be executed asynchronously and get results
Probably at the enterprise level yeah.
I’m sorry?
I learned how to use BufferedImages Graphics KeyListeners Basic saints and Booleans Update Methods
Any time. "Big data" is definitely here to stay, and honestly it's a shame because data warehousing and SQL are tremendously useful and tremendously undervalued. Most shops I see doing "big data" stuff just want to be using the latest and greatest and are still operating at a scale where vanilla MySQL outperforms NoSQL, but they don't realize it. The progression is tough, and I personally look for a willingness to learn over dumping time and energy into personal projects, but sadly much of the industry isn't the same. I come from an advantaged position in that I am a software engineer, whereas a lot of places don't actually know what they're looking for and are just flailing in the dark to find someone who can do the job, so they have to rely on buzzwords and stupid coding interviews. I would suggest the following: 1) AWS. No certs, just sign up for a free account 2) Cloudera. This is confusing and I wish someone had explained it to me: the people who wrote Hadoop created an open source version, and then formed a consulting company that has its own distribution of the source code. That consulting company for Hadoop is Cloudera, but this is the exact same story for Apache Spark and Databricks, Apache Cassandra and Datastax, Apache Kafka and Confluent, and pretty much every other major Apache project. Cloudera DOES maintain a completely free version of all their stuff called CDH 5. 3) Take your shiny new AWS account and write a simple application that scrapes something from the internet and puts the data into some kind of data store (like HDFS!!). This is a really useful skill on its own for digital advertising and financial companies. BeautifulSoup is a useful Python library for this, I think the Java flavor is JSoup. You can use Spring Boot to make a simple Java EE application without dealing with Tomcat or Glassfish. 4) Use AWS EMR (this is AWS's managed version of Spark) or ElasticSearch to do something with that data. One thing I did was scrape some left-leaning American political forums and count the usage of the word "fuck" before and after Donald Trump was elected. 5) Don't give up. There are jobs eeeeeverywhere and like half of them are full remote. When I started this bullshit I was making $11.50 an hour as a data entry temp, and it was not that long ago. Again, good luck--I don't know if Reddit does PMs (I'm bad at the internet) but feel free to message me if you get stuck.
Okk
define popular. if you just mean what is out there on public pages, then PHP thanks to wordpress. if you mean what is a more employable skill with a well paying company, then java. that doesnt mean that you cant find a nice career in php either.
Ruby, nodejs, and Python are also popular. Not really sure which is the most popular, or if it even matters.
Spring MVC/Java is a great choice. Also excellent choices would be Django/Python, Rails/Ruby, Express/Node.js, or Rocket/Rust. It really depends on what type of application you're trying to create. If you're trying to make a shared todo application, you might be better off starting with something like Meteor.js. If you're designing an enterprise web application, Java is probably going to be a better fit.
Java is more serious
It looks like in your [submission](https://www.reddit.com/r/java/comments/caw1l7/how_to_get_input_line_by_line/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Its nice to see personal projects in the works. Why did you choose Netbeans though, no judgement? I’ve never met a developer who preferred it over either IntelliJ or Eclipse.
I'm learning to use BufferedImages right now it's pretty interesting.
Well done! Keep practicing your craft and you'll be a professional game developer before you know it.
Demand will depend on the area you’re in, but if you’re interested in his area, you really can’t go wrong with Spring and Spring Boot. I teach dozens of classes at companies big and small and none of them are using Dropwizard anymore (they’re being moved to Spring). I used to use Dw a lot (and hated Spring), but most folks have moved on. I disagree that the popularity of Spring will go away anytime soon. Companies from Netflix to Visa to EA (backend) and smaller companies have standardized on it, and its popularity is only growing. It is no longer the big, heavy framework that it once was. Sure, you can find alternatives to almost every piece of Spring, but why would you? If you have special and specific needs, then sure (I’ve worked with vert.x for perf reasons that were very special), but why not go for something that does the job well and improves on every release? Again, if you just need DI, yeah Spring is overkill. Or if you just need a fast web server app, then vert.x or similar would be good, but if you want web, database, DI, and so on, you may as well learn Spring. I don’t think it’s any more difficult, and I teach “just enough Spring” to new developers in a week and they get it.
Your insane man this is awesome!
As of July 2019: https://w3techs.com/technologies/overview/programming_language/all
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
From what i heard, python and node are most popular these days, not so much ruby. But i could be wrong
That looks really cool congrats. I also like your format on presenting your advancements day by day. Keep it up!
if you haven't already, please ping me. We'll get it sorted.
can i have a try? i m so interesting in your JAVA pm
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
That was actually really well put together, thanks!
Awesome! What I missed most from Rust and Haskell is this kind of capability. I didn’t know Java has this.
Why do you care what is popular?
My future company makes websites in PHP
Be careful distributing code with the title of “Pokémon”. A cease and desist wouldn’t be uncalled for.
For employment?
but the most popular language is not necessarily your best bet at employment. Most popular could mean highest supply of devs, which means more competition for each job. In principle you would want to maximize demand/supply e.g. ratio of jobs with language x to resumes with language x. But even this is problematic, do you limit it to a certain locale? how long do you want the language to be relevant for? what industries do you want to consider etc.
This is awesome mate !
We do tend to still develop locally, so there are two choices when it comes to that. Either we mock the service with an equivalent locally running service such using local stack, which provides a local equivalent of AWS tools, with apis that are compatible with amazon SDKs (this uses docker). Or we have “local” services running in the cloud. So the compute workloads such as your java applications are running locally, but the services they talk to, such as NoSQL data store, queuing systems such as kinesis/SQS are running in the cloud, and developers use their AWS creds to connect to them. This means that you have to have internet to work though, so things like working on trains/public WiFi is a bit of a nightmare. I’ve migrated 3 mission critical multi million £ systems to AWS and there is always some element of rewriting/re-engineering. The key things for cloud migration is to get rid of any state. Assume you have no local storage, or that the local store could be taken away at any time. Assume that connection may not come back to that server, that it might be load balanced onto another node. Any platform can be migrated though. I’ve moved a GPS fleet tracking solution, a power generation monitoring system, and a complete telecoms provisioning and management platform (millions of lines of code). Generally speaking they’ve seen return on investment in a year or so. I’ve been meaning to write some articles on this kind of thing but I’ve never got the time!
Fully agreed on all of your points &gt; The difference between the two paths isn't the rate of updates, which is the same, but whether you prefer gradual or stepwise ones. Companies start to talk about DevOps &amp; Agile. Both of them would enable &amp; promote more incremental steps. Your rationales are all valid and well chosen. In my opinion many companies tend to stick to common Memes and change is mostly a really, really slow process. As an illustrative example for example: How many password rules have you seen limiting the input to absurd lengths like 8 or 12 characters or requiring a change periodically. Since decades they should know better… Really looking forward to see how the market will adapt the new "upstream agile" impulse from Java ;-)
You can use @Async with a CompletableFuture, like in [this stack overflow thread](https://stackoverflow.com/questions/47351435/spring-async-with-completablefuture).
I've got nothing against intellij or eclipse I just like netbeans more and I've spent more time in it adding custom shortcuts and key commands and the such so it's just a nicer feel for me :)
&gt;ideally, i was thinking that there'd be a benchmark that was easy and fast to implement in reactive but slow and/or ugly to implement with a for-loop Speed is not the driving force to use function reactive programming. The protocol for the communication between operators (subscribe, unsubscribe, next, error, complete) leads to some overhead that doesn't exist in a for loop. But a for loop doesn't offer you back-pressure, splitting work on thread pools (easily), retrying in case of error, buffering, windowing and all the other stuff that can be found in Reactor or RxJava.
This counts every wordpress subsite multiple times.
&gt; Spring MVC/Java is a great choice. Also excellent choices would be Django/Python, Rails/Ruby, Express/Node.js, Laravel/PHP, or Rocket/Rust. One of these pairs is not like the others.
&gt; We do not consider subdomains to be separate websites. For instance, sub1.example.com and sub2.example.com are considered to belong to the same site as example.com. That means for example, that all the subdomains of blogger.com, wordpress.com and similar sites are counted only as one website. https://w3techs.com/technologies
I threw this together a while back when i got bored with the enum thing. https://gist.github.com/jimador/f95075b629f3960220afe0f793fb509e the usage would be something like: TypeHandler toDoulbe = TypeHandler.forResult(Double.class) .when(Double.class).then(Function::identity) .when(String.class).then(Double::valueOf) .when(Integer.class).then(Double::valueOf); // later on String someString = "2.0"; Double someDouble = toDouble.apply(someString);
what he/she probably meant was that it counts every wordpress installation, which would definitely skew the numbers towards PHP even though not that many people (79% wow) actually do develop in PHP anymore.
Just look at [this.](https://w3techs.com/technologies/details/pl-php/5/all)
I wish there was a better way to view this fabulous content. A pity....
Yes, same problem with the [Scala](https://w3techs.com/technologies/details/pl-scala/all/all) results - it counts every Wix site as a Scala site.
Thanks :)
Lol, those Nintendo
Go ahead bro! Just say like you got inspiration or something :)
Thanks!
Thank you so much :)
Thanks I really appreciate it
Indeed
[ZIO](https://zio.dev/)
I wouldn't start with a Udemy course. [Spring.io](https://spring.io/) has plenty of guides and tutorials for free. An experienced programmer would definitely only need those--maybe even a beginner. It's worth at least starting there. Another good free resource I've seen is [Baeldung.com](https://www.baeldung.com/).
&gt; Let's suppose we work for a betting exchange and some admin wants to see all current and past offers on a particular event where the offer object simply has a field with it's status in there (in a string for demonstration's sake). So we can simply filter on past or current. Why create a method called GetPastAndPresentOffers and then filtering on these 2 exact strings? Why not just call the method GetPromos() Yes. I fully agree. Get your team to read _Clean Code_ and agree to follow it.
[removed]
[removed]
This is great. I know "professional" programmer's who couldn't do this in a month.
\&gt; Speed is not the driving force &amp;#x200B; speed of a micro-benchmark isn't, but ultimately, the motivation has got to be the ability to process requests, and that comes down to throughput, latency, horizontal scalability and/or readability. the benchmark that i'm looking for is one that captures those real-world complications (high concurrency, errors, slow connections) that necessitate asynchronicity and back-pressure, etc. &amp;#x200B; ie, something that makes a for-loop fall over and die as the scale increases
Congrats! Keep it up
Agreed. Was just suggesting that perhaps OP was looking at it from a job perspective
oof it's down
AppCDS does not work with Spring Boot's separate classloader. AppCDS only optimizes the 'bootloader', not your application. There is something called spring-boot-thin-layout, but I haven't been able to get that to work properly, and it's still experimental.
Upvoted for baeldung.com recommendation. This website is really great source of information and most importanly it’s author (Eugene) always updates it so that it reflects up-to-date best practices.
I have heard about it but i don't know it support reactive stream spec.
There might be a bug in Spring, but AppCDS should work with custom class loaders (search for "custom class loaders" [here](https://openjdk.java.net/jeps/310)). Also, I don't believe it is experimental.
Popular yes, however may take more time to get started in comparison to something like node, express.
What’s down?
Thanks! Means a lot.
Thank you!
for me the video says error has occurred, so i assumed it got removed
Cool.. seems like this will only work with var. so this code is invalid in pre java10?
Charting in JavaFX is actually really nice. Check Java 8 in anger by Trisha Gee. https://www.youtube.com/watch?v=6_06zcDisNg
Also, the 'Parallel implementation' example is way more complicated than it should be. No need for a CountDownLatch. Without it, it does not look that bad actually: ExecutorService pool = Executors.newCachedThreadPool() public User getUserDataByParallel(Long userId) throws Exception { Future&lt;List&lt;Post&gt;&gt; posts = pool.submit(() -&gt; postService.getPosts(userId)); Future&lt;List&lt;User&gt;&gt; followers = pool.submit(() -&gt; followService.getFollowers(userId)); User user = userService.get(userId); user.setFollowers(followers.get()); user.setPosts(posts.get()); return user; }
Java has NIO classes if that is what you are asking. [https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/package-summary.html](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/package-summary.html)
You guessed wrong.
Huh, that’s weird I can still view and other people can.
Does that provide functions like: reactor.async\_read(callbackfunction) ?
I believe you are looking for AsynchronousByteChannel. [https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/channels/AsynchronousByteChannel.html](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/channels/AsynchronousByteChannel.html) That provides interfaces for invoking a callback function or returning a Future object
Yup. And afaik there's no other way to do that prior to java se 10.
I will be careful, thanks for the heads up :)
Yes (see comment by /u/kcirtappockets). You may also want to give [Netty](https://netty.io/) a look.
What is the most popular language for Web development is subjective, but Java has been around a lot longer than the other languages with which you can write Web applications, so I would say the API support is probably the richest. You can however, write perfectly capable Web applications using Node.js, for example.
If someone wants to try this and make their life easier, libgdx is a pretty fantastic framework that lets make games in java. Probably the best java game framework.
It does via [interop-reactive-streams](https://github.com/zio/interop-reactive-streams) module
OK! What is the correct answer?
Great, I will try to learn it.
What you did is great work. But you are also reinventing the wheel a lot, which is fantastic for learning, but If you want to ship something is not the best. Libgdx is basically the option for shipping a game with Java, unfortunately there aren’t many options from a game dev point of view. C++ has a billion options, and c# has quite a few like unity, Godoy, and monogame.
The torch lighting effect looks polished since the last video. I liked how much you progressed throughout your series and this game is starting to look a lot more alive.
I want to learn c++ but unlike java, you need to do 1,000,000 things just to create a window. At least a so I saw. I might be wrong. Anyways thanks for your advice :)
You’re not wrong. For C++ start with normal programming exercises then something simple like SFML for game dev. C++ might literally be the biggest most complicated programming language, and it’s changed a lot over the decades. It’s a big undertaking but essential in a few programming fields, like gamedev
&gt;Solid advice. Especially the points on Apache Kafka and getting involved in an Open Source project.
What are you looking for in such a framework beyond what java.util.concurrent offers?
Oh alright, I’ll try it out. Thanks for the tips and information.
Primarily, stability and future-proof aspects (i.e., if relatively inexperienced programmers introduce new code, or enhance existing code, using out-of-the-box APIs can potentially lead to problems that are difficult to troubleshoot). &amp;#x200B; Other potential benefit: better readability and brevity...rapid application development; things that a good framework should support.
Well done
Have you looked at Netty? https://netty.io/
Pretty much every web framework must have good concurrency usage. From non-framework you can look at akka, rabbitmq, elasticsearch, tomcat, wildfly
One vote for Akka. While Akka is a bit more complex than an Actor Model implementation should be, it's still solid, and it's the Actor Model. Can't beat that for concurrency.
wat
I don't mean to be rude but that's not how any of that works
Be rude; so, how does it work?
We’ve been using Project Reactor on my team for the managed concurrency aspects and it’s done wonders for us (in addition to the other benefits of using reactive programming). There’s a learning curve though with switching to reactive from imperative though.
Thank you :)
I write alot of Networking apps. I'd say either: Netty Apache MINA &amp;#x200B; Vert.x is really cool as well but I haven't used it enough to have an opinion.
Video has been removed
Thanks!
Not every problem domain invites the framework approach. Of course you can have all kinds of fancy collection implementations, but at the end, you're going to have to write concurrent code and avoid all the pitfalls (non-final fields etc) and design your program that way. Or you have to adopt a whole new paradigm like the already mentioned reactive programming.
Java language has build in concurrency support. You can use thread pool executor pattern, CompletableFuture for async code, parallel streams for parallel execution. All existing frameworks can utilize this functionality, so basically, your question make no sense. Frameworks do have some additional level of abstraction over basic concepts, but you can write concurrent code using pure java.
Yeah it's a great achievement but u probably shouldn't leave it up to download since you are even using Pokemon graphics and at least in my country u could get sued for a lot or money by doing so
O
Yeah dont know how it is in your country but if you want to leave it up u should probably consult with a lawyer first
My question must make some sense since you yourself are admitting to the value added by abstraction...
&gt; That said, while Spring has its uses, it’s worth being clear why you need it. Its on the first paragraph of the original post: Most offers I've heard in my city ask for spring, most places practice the acronym bingo when hiring, thus investing the time to learn spring could really help me switch jobs. Also, I don't doubt that most of the stuff you mentioned as alternatives are cool, but my time to learn this stuff (and interest) is finite, I'm not in position (nor I'll be in the near future) to choose technologies, and I don't really want to invest the time and effort in learning something that with luck one company in my area will use (which is more or less the case with our frontend stuff). Thanks for the link, though. I'll check the website frequently to see the sales (It's now at 11€, what a coincidence, hah) while looking for more alternatives.
There's any tutorial on spring.io on how to, well, follow these tutorials? As I mentioned on my first post, yeah, I know about that webpage, but even though I have strong doubts that I need to go though everything there, I have also doubts about what I should go through. The stuff in baeldung for spring looks like is priced at 197$ at the moment.
Thanks! I did a small assignment with spring boot for a position (took me too long, but at least put my feet on it), so maybe is the quickest place to start. I'll check out the tutorials/guides on spring.io for boot/mvc.
My company just featured you on LinkedIn ;). Awesome work. Can't wait to see what you'll be made of when you're 13! [https://www.linkedin.com/feed/update/urn:li:activity:6554460464292601856](https://www.linkedin.com/feed/update/urn:li:activity:6554460464292601856)
Skip the article, get the goods: [Github](https://github.com/BlueGoliath/GoliathEnviousFX) Please read the known issues before submitting any bug reports.
These are networking frameworks - I think OP asked for concurrency specifically.
Yes, they make heavy use of concurrency and plenty can be learned from them.
I really appreciate the support :) I spent a LONG time on these lights trying to make them look more normal and fit with the rest of the world better than they did before so I'm really glad it's noticed and appreciated :)
If you want to build massively concurrent systems in Java, Apache [Spark](https://spark.apache.org/) and [Hadoop](https://hadoop.apache.org/) were purpose-built for scaling apps across clusters of computers and are used pretty extensively in enterprise solutions.
Vertx was single threaded until recently when they adopted multi-reactor capabilities. Netty allows you to create and configure the thread pools it uses, but doesn't really allow for fine-grained control of how the thread model actually operates. And MINA is just the predecessor to Netty, written by the same author (Trustin Lee).
Java honestly has really good tools for concurrency built in. That's why you won't find many concurrent frameworks unless they serve the purpose of running code across clusters of computers.
Yup, thanks for the review. As I stated earlier, I develop software for backend systems using highly concurrent (C100K and up) systems. I'm on the MINA team (no super involved these days) and was around when Trustin was still with the team. I almost took a job at JBoss at the same time as him but decided against it so I could stay independent.
What sort of features do these frameworks provide for things like batch/job processing? As far as I know they are designed to be reactive to external input.
I hate to break it to you, nothing is going to be more reliable and future proof than the built in api's, what do you think your frameworks use?
java.util.concurrent If you need anything else, you need to specify the problem domain. java.util.concurrent is very capable library with a healthy set of tools. Google's guava has a few concurrent data structures that one may make use of, but, as before, they're specialized. Highly useful if you need them.
&gt; Java language has build in concurrency support. You can use thread pool executor pattern, CompletableFuture for async code, parallel streams for parallel execution. All existing frameworks can utilize this functionality, so basically, your question make no sense. That's quite arrogant. Oracle is pulling all its resources in adding a new concurrent API with green threads and messaging, continuations, but hey if they already have everything I better call them and save them their work, basically, makes no sense.
Threads used to be considered a good tool for parallelism, but not anymore. And the tools for concurrency are limited. This is why Oracle's Java team is working on a new Continuations and green threads (fibres) set of APIs. It's not the 90s anymore.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Something like [Vert.x](https://vertx.io/)?
&gt; *using out-of-the-box Java APIs can potentially lead to problems that are difficult to troubleshoot* What?
Thank you so much! I really appreciate it and gives me inspiration for the future. :)
If you click "Guides" in the navigation bar on Spring.io, you can choose from whatever Getting Started guides match your goals. Things like "Build a RESTful web service" or "Validating form input." It's really up to you. Baeldung has some stuff for sale and it also has some stuff for free. When I navigate around the site, I find a ton of free stuff, e.g. [Boostrap a web application with Spring 5](https://www.baeldung.com/bootstraping-a-web-application-with-spring-and-java-based-configuration) for example, a free article.
Simple; PHP is **not** the most popular language to create [a] web application.
[kilim](https://github.com/kilim/kilim) (i'm a maintainer) is a fiber and message passing framework that has a very simple actor model. all code is imperative and in addition to sending a message to an actor and asynchronously waiting for a reply, it also supports moving a task from one scheduler to another, eg one that runs on a single thread these two features greatly simplify concurrency
OK! Obviously it's meaningless to discuss further. :p
You are describing language evolution, and yes, there is always a place for improvement, and project "Loom" is good example. But I cannot see any contradictions with my answer.
I think that decision regarding frameworks should be based on the architecture of the system you're building(for example is it classical REST/CRUD, or it is message driven system, or maybe system for distributed computation etc.)
&gt;AsynchronousByteChannel at least with openjdk 8, this appeared to be implemented on linux using a thread pool and didn't actually use epoll (on windows it used ReadFile, which really was async). at the least, there's no guarantee in the javadocs about how it's implemented under the hood &amp;#x200B; unless you can verify that this has been fixed in recent versions, i don't think you can count on it
The traditional answer to your question is the app server, specifically the JavaEE kind. JavaEE lets you write components, EJBs, and manages concurrency for you, from managing and monitoring threads to controlling thread safety of stateful and stateless components. Full blown JavaEE app servers are somewhat out of style these days, but there are a large number of app server type frameworks out there, from humble web servers like Tomcat, to more exotic frameworks like Akka, Vert.X and Reactive Java.
Especially these days
Yeah threads are pretty heavyweight compared to modern solutions, but that doesn't necessarily mean threads are inherently bad. As it stands, multithreading is the _only_ way to take advantage of multicore processors in vanilla Java, and doing so can get you n-times speedup where n is the amount of cores you have available.
Wow.. what a superficial yet smug post. &gt; parallelism is very much not the same a concurrency. Continuations and fibers are usually not concurrency but certainly can be.
&gt; Yeah threads are pretty heavyweight compared to modern solutions, but that doesn't necessarily mean threads are inherently bad. As it stands, multithreading is the only way to take advantage of multicore processors in vanilla Java, and doing so can get you n-times speedup where n is the amount of cores you have available. Let me use your exact argument in a slightly different context: "yes writing machine code by hand is a bit low-level compared to modern solutions, but it doesn't mean it's bad. The only way to run a program is through machine code that runs on the CPU." I'm not objecting to the concept of operating systems providing threads. Obviously. I'm objecting to the idea it's an adequate API for parallelism / concurrency in 2019 (and actually... ever, but we didn't know well enough back then).
&gt; Wow.. what a superficial yet smug post. You should look at your post, buddy... &gt; parallelism is very much not the same a concurrency I realize, but everyone talks about threads and thread pools around this thread. And thus because I try to communicate with my peers, not just tell them they're *superficial and smug*, I read between the lines they refer to parallelism, which is what threads provide. Now let me point out the errors in your own superficial and smug post: - Concurrency is not parallelism, but paralelliism includes concurrency. - Continuations have their top use case for concurrency, especially as it's implemented in mainstream languages (async/await: that's continutations). - Fibers are actually *absolutely* about concurrency. Not just "unusually" but always.
...threads are the _only_ API exposed by the operating system for multiprocessing. Use the `ExecutorService` APIs if you don't want to manage their lifecycles yourself. Continuations are just state machines generated by the compiler, and will still be backed by real threads when more cores are needed to make things go faster. I'm not sure there are many paradigms that can ease the complications of multiprocessing.
&gt; ...threads are the only API exposed by the operating system for multiprocessing. I'm sorry, is this post named "Solid APIs for OS Parallelism"? No. Who cares what the OS exposes. This is r/java, and we're application developers, not platform developers. Using naked OS APIs because that's what the OS has only is nonsense. &gt; Continuations are just state machines generated by the compiler, and will still be backed by real threads when more cores are needed to make things go faster. I'm not sure there are many paradigms that can ease the complications of multiprocessing. Continuations and fibers are ones. Actor Model through async message boxes is another element. Yes, all of those are "just" things made up by the Java compiler, standard library and runtime. That's why we're using Java and not coding in assembler.
&gt; but parallelism implies concurrency In practice it often does, but it certainly isn't required. As a general rule, the less concurrency, the easier parallelism. Ray tracing, GPU operations etc work well because they're isolated operations a million times over. &gt; Continuations have their top use scenario in enabling concurrency (together with non-blocking I/O) Continuation are another threading model that is orthogonal to resource acquisition in the end. Again, for a lot of continuations you have zero actual concurrency, but that doesn't have to be the case. &gt; Fibers are actually absolutely about concurrency. Not just "unusually" but always. In what way? They're an alternative, cooperative *threading model*, again orthogonal to resource acquisition.
The `java.util.concurrent` package is about as far away from the POSIX API as possible, these are the packages I was referring to when I said "Java honestly has really good tools for concurrency built in" - I believe you either misunderstood me to begin with, or you don't know much about the libraries I'm referring to.
It is a powerful tool for writing concurrent logic however it comes with way too many other drawbacks to be useful in most situations. I prefer keeping type safety in my apps
You can have type safety, and treat Akka simply as an API you use to get the model and implementation of a few key concepts of the Actor Model. In fact, nothing can stop you from having type safety, or?
You can get type safety except for the parts that are inherently untyped (the actors)
You can either use jwts or centralized roles. Both have pros and cons. Both are not trivial to implement. Jwts are being the prefer to do it lately
Do you use this library? https://www.npmjs.com/package/is-even
Sorry bud, but it’s the opposite. Even the biggest frameworks have more risk associated with stability and future-proofing. Built in APIs usually last for years, and are as stable as they get. In addition, using outside frameworks makes code way more difficult to troubleshoot than a native API. That’s just wrong.
I don't know anything about Gemini, but here Spring Security has a framework and some practices that might help. Here's a [tutorial](https://spring.io/guides/tutorials/spring-boot-oauth2/). Basically, in the Spring Security approach, you set up an `/me` endpoint on your authorization server that has your user and roles database. The endpoint will return the users's roles, which will be used to fill out a `java.security.Principal` object. You can implement this as an interceptor in your your web framework or in a `ServletFilter` when the request path refers to a secured resource. The Spring Security OAuth2 framework provides these for you. Once the roles are loaded in a Principal, you can use Spring Security's ordinary RBAC mechanism. A slightly different approach is to encode the roles in the token itself, for example if you are using a JWT instead of an opaque token. You can decode the JWT token and fill out a Principal object accordingly to be used with the RBAC mechanism. Spring Security OAuth2 can help you out here as well. Warning though, Spring Security is really hard to hard to configure. The Spring Boot starter helps quite a bit. But there are plenty of resources online.
Is it possible to know if there are replies without subscribing to the mailing list?
I managed to get it to work, but what I did neglects the setRadius method. I cannot get it to work using setRadius. In my getArea method, I changed radius to double radius, and it worked then. If someone doesn't mind lending a hand about using the setRadius method, I would appreciate it!
Yes, you can look at the archives [here](https://mail.openjdk.java.net/pipermail/announce/). They are always up to date.
And yet there are all the frameworks referenced by the fine folks who understood my point all over this thread.
\+1
Thank you.
I've seen people fork netty and add batch processing. Spotify is one such group.
Superficial yet smug? Like the trap-ridden java.util.concurrent package? Where you have to worry about Volatile and Atomic with a fine tooth comb? Get real ...concurrency in Java is anything but inherently error-free. And you are pooh-poo'ing a forward-thinking upcoming JEP that Java veterans are working on currently ...your brand of rationalism reeks of Trump's brand of nationalism...
It's unclear if you're asking about how to use OAuth to implement a security model you already have in mind or if you're looking for advice on a security model for your application. Who are the actors? What are the resources being protected? What actions will be taken by whom on what?
Java 8 is the only jdk widely run and supported right now. I can"t even get above Java 8 with Tomcat on Amazon Web Services.
[lmax disruptor](https://lmax-exchange.github.io/disruptor/) might be of interest to you. It is used by log4j2
I think you are looking for something like [jcasbin](https://github.com/casbin/jcasbin)
Only targeting Linux. Fucking great... :(
Blame the OS, not Java.
&gt;Who are the actors? Users logged with username/password. They get a jwt access\_token. &amp;#x200B; &gt;What are the resources being protected? ALL Gemini Entities with all the methods (GET/POST/PUT/GET) &amp;#x200B; &gt;What actions will be taken by whom on what? Once logged users get data from the REST APIs but I want to protect some Entities (or methods). &amp;#x200B; I've already implemented OAuth2 password flow (with a jwt) and now the user can consume all entity methods with its acces\_token.
&gt;Spring Security is really hard to hard to configure Yes I know. But your suggestions are good. At the moment the principal object is the jwt access\_token (but I could extend it). Or probably the best way is to implement a completely new RBAC module specialized for my needs and integrate it in the Spring Security flow. What do you think about? I want to use Spring Security as little as possible.
I didn't know the library. Thanks.. I'll try it.
I already use jwts. The question is about scopes and roles? Should I decouple jwt from roles and handle them only as framework logic? Or I should use roles/scopes inside the jwt for example?
Really no reason to be not using a Linux distro these days. Dual boot something else if you really need to.
The point is that you shouldn't put things into a cross platform language that isn't supported by all architectures that the language supports.
Web application are the main use case for Java, Linux is the only relevant server platform, thus the only problem would be to develop it with another OS. Not a biggy nowadays. Graals MVP also only targeted Linux at the beginning, looks like a trend.
I started with spring boot, coming from Java EE. All i needed was the official documentation of the spring site and for some of the libraries they use. The provided example are small and easy to understand, the blanks are filled by the documentation. Just follow the usual path of trying to implement little programs/projects using Spring to really learn.
Digital Ocean is pretty good if you know how to work with Linux.
Depending on your location i would suggest some small virtual private server. I got serveral running at ovh -&gt; [https://www.ovh.co.uk/vps/](https://www.ovh.co.uk/vps/) || [https://www.ovh.com/ca/en/vps/vps-ssd.xml](https://www.ovh.com/ca/en/vps/vps-ssd.xml) Netcup also has some quite cool deals from time to time -&gt; [https://www.netcup.eu/vserver/vps.php](https://www.netcup.eu/vserver/vps.php) || [https://www.netcup.eu/vserver/](https://www.netcup.eu/vserver/) &amp;#x200B; Boot up a tomcat and mysql there, secure it all up and you should be good to go :-)
Thanks I'll check it out. Sounds like it might be a good fit, I use Linux personally and at work as well.
Thanks. I'm located in the US but will check out their site.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
In the Enterprise &amp; Big business world, definitely. In the private / small business world, PHP is also extremely popular, because it is so easy to set up and there is lots of free applications you can use (Wordpress, lots of CMS, bulletin boards, whatever).
PHP is still the #1 for private websites and very small businesses. I work in the field as freelancer, and its almost always PHP that is either already in use or needs to be used because the customers wants o use applications that are written in PHP as base for the site. I hate it, because PHp is shit, ut that is how it is. The bigger the companies get, the easier it is to convince them to use other techs. Java is an easy sell, because its mature, lots of stuff exists and its easy to find more developers to either take over or help out, so businesses prefer it over technologies that are not yet as big (because its harder to replace the dev or find new devs to bolster up the team). Ruby and python are also good sells, for similar reasons. Also, if the company is really big the likely already have some java infrastructure in place. Or COBOL (yes, seriously). But if you want to use new techs (and node.js still counts as that in the business world), startups are the best.
I disagree. There are tons of platform specific features in the JDK. Just look at the Desktop class. As long as the API is platform agnostic, other platforms can be supported later (if the platform eventually supports the platform in question) and binaries using this API will automatically start to work with the new platform when a supported JDK is used. If Java would only support the features provided by all supported platforms, it would limit features of the JDK to the lowest common denominator. This would severely impact the usefulness and (especially when it comes to I/O) performance.
"if you know how to work with Linux" ... i find this super odd for some reason.. I guess since 100% of my jobs in the last 15 years involves Linux, i'd assume most developers would know... probably should start adding Linux questions when I interview candidates
Linode, Google cloud, blah blah blah
Contabo
every distro is GUI-challenged to say the least. drag-and-drop is absolutely too much to ask. *script kiddies wanted. normies get out*
You can deploy fat jars on Hikari, which has db's you can use and has a decent free tier
I've used [Heroku](https://www.heroku.com/). Free tier gives you just enough hours to last you a full month of constant uptime. They will kill your app if no traffic is coming in, but you can create scheduled job which pings the app to keep it alive. They also offer free Postgresql db with up to 10k rows. There is also a nice integration with [GitLab](https://about.gitlab.com/) where you can create a build and deploy pipeline for your project and it's also free
Two Metal APIs (Swing and Java2D) may be confusing ;)
What might be cool is a compiler flag saying “this targets all platforms”, and if your code is using features like this it causes a compiler error
Many developers build and test on macOS and Windows. Not not a biggy.
**Rules:** &gt; Do not post tutorials here! **Removed**
https://hg.openjdk.java.net/jdk9/jdk9/jdk/file/65464a307408/src/java.base/linux/classes/sun/nio/ch Looks like it uses epoll in JDK9 (with a thread pool). I can't find it in JDK8 though, so either I just didn't look in the right place or it used a default implementation in 8.
That's exactly what I wrote - I develop on Win10 with WSL if needed.
I uploaded a "slide" based version at https://www.slideshare.net/bentolor/power-catch-up-everything-practical-and-important-in-java-9-to-13
I don't want to put the joy out of your root-canal-experiences, but does https://www.slideshare.net/bentolor/power-catch-up-everything-practical-and-important-in-java-9-to-13 work better for you?
I added a "classical" slide based version at [https://www.slideshare.net/bentolor/power-catch-up-everything-practical-and-important-in-java-9-to-13](https://www.slideshare.net/bentolor/power-catch-up-everything-practical-and-important-in-java-9-to-13)
Is this a tutorial? To me it is an explanation of how the JVM handles class loading. More of a technical discussion.
Calm down. &gt; Recent Windows/x64 releases do support the mmap MAP_SYNC flag. However, the goal of providing this capability for that OS/CPU combination (or any other possible other platforms) is deferred to a later update.
&gt; Recent Windows/x64 releases do support the mmap MAP_SYNC flag. However, the goal of providing this capability for that OS/CPU combination (or any other possible other platforms) is deferred to a later update.
Ha, forgotten my ass, I played the crap out of that game back in the day on my trusty old Sony Ericsson k550i! It was awesome, I must have played through the whole thing like 5 times, it was actually the first God of War game I ever played since I didn't own a console growing up. Together with the 3D ( despite terrible graphics ) Devil May Cry game and the Assassin's Creed one too, those were really, really awesome. Thanks for reminding me about this!
Lightsail isn't bad but support is weak. Linode is good, I hear DigitalOcean and Vultr are good, Google Cloud you can get a VM, I've not looked into whether they scan your VM for Ad related data mining though.
Linode
Definitely. Even when I was a only Java programmer I was so invested in Windows that I wouldn't know where to start on Linux. If that's a problem, you gotta ask.
I'm reviewing java games weekly at the moment so I will have a look for those ones!
The fact that this (\^) post is getting downvoted so heavily proves majority of Reddit is basically a pissy twat. Either way, I got some good information out of this post. Here is a big fuck you to all the downvoters who have no rational point to make.
Oh man, I'm sure I can remember a whole bunch of great games from back in the day for sure, hit me up if you want some titles or anything, great initiative and I'll gladly read about some I haven't played too!
&gt;seanprefect You seem to have a lot of clout purely for downvoting people, and I do not give a fuck about that. A downvote sans a rational explanation is just another temper tantrum - same goes for an upvote - group think without any rationale. &amp;#x200B; How about you explain why there are so many successful frameworks purely based on the Java ecosystem? If native APIs are so good, surely the Open Source community must be out of their mind to keep cranking out one popular framework after another.
Are you on facebook at all? Would love to have you in my review fb group and chat games with you
These concurrent GCs are really great. They simplify the life of Java programmers a lot.
I literally only remember the name "Sony Ericsson" from Juiced on my PS2 when you had to pick a cell phone (no reason for it, you never saw it again).
Much better
you misunderstand. Frameworks are great, when they're they right tool for the job. I use frameworks all the time for web applications. We're talking about frameworks for the purpose of concurrency. Just like a hammer is an inappropriate tool to cut wood, frameworks for concurrency aren't necessary. In that instance the native api's are excellent and any abstraction is probably going to be more harm than good. You specifically mentioned a framework as more reliable and future proof and that's simply false. The native apis are the most future proof thing there is. PS. I never downvoted you, nor do I believe anyone did so on my behalf. In this particular instance you're simply misinformed. I don't like that you were downvoted but it's not about clout or a single person. You were simply asserting an incorrect approach.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Downvoting for month old repost. C'mon man.
I had the Sony Ericsson walkman phone around that time. What ever happened to poor Ericsson?!
Yes, man, PM me the group and I’ll gladly join!
Cool! I actually flashed my phone with the Walkman firmware ( k was the better camera series, w was the Walkman so better music ) and I had the best of both worlds because the camera drivers stayed the same and I got the music capabilities. It was great!
There are a lot of Concurrency problems that manifest in the realm of standard Concurrency APIs. To name a few: .Livelock .Deadlock .Slipped Conditions .Code that was written before Multi-Core processors existed (and poses severe problems now) Programmer not knowing where the Critical Section is (this is a function of skill, but an issue nevertheless) &amp;#x200B; .Programmer not knowing when to use Volatile and Atomic (again, a function of skill, but in a large team, you will always have programmers that are at varying degrees of skill and knowledge) &amp;#x200B; The value of a potential framework would be to: Provide mechanisms (via a system of APIs) that allow for safeguards against well-known Concurrency-related issues. This could be accomplished via Annotations, for example, where the Critical Sections of logic are marked with specific annotations. These annotations can be processed (like in Spring) to generate final versions of code that aims at injecting concepts like Re-entrant Locks and Synchronized(Object) strategies. &amp;#x200B; This is by no means a comprehensive list, since I am merely illustrating what the value of a Concurrency framework could be, but you could also have Transpilers that accept Java artifacts as inputs and produce problem-free Thread-safe code. &amp;#x200B; While I admire the standard Java API that has a wonderfully rich set of features that has evolved over the last 25 years or so, it does not mean that those features are not easy to implement when they become a function of a programmer's skill. To take it to another level of abstraction, only for driving home a point; I could write perfect byte-level code that does everything perfectly, but the inordinate level of skill to get there more or less defeats the purpose of having a programming language that helps you solve computational problems. &amp;#x200B; A framework should never be ruled out as unnecessary.
shiro
&gt; At the moment the principal object is the jwt access_token (but I could extend it) What are you putting in the JWT? Presumably your auth server is creating the token, and should have access to the user and roles database for authentication, and you can store the user roles in the claims section. OAuth2 scopes and user roles are very different. Scopes are only meant to describe at a high level what the external client application is allowed to do with user's resource data (for example read only), while the role describes what the user is allowed to do (r/w their own data). Thus, Yyou need to provide both in the JWT so that the resource server can apply the OAuth2 scope to rule out write operations for a read-only scope, and RBAC mechanism can restrict actual reads for the authenticated user. &gt; Or probably the best way is to implement a completely new RBAC module specialized for my needs and integrate it in the Spring Security flow. You're using Spring Security, but not its RBAC? You shouldn't have to create a new RBAC unless you aren't using Spring Security at all. You should be using a security filter to translate the JWT claim data into a Spring Security compatible principal, so that Spring is none-the-wiser about where the authentication data came from. You could use the Spring Security OAuth2 module to let Spring handle the translation (which requires relatively complex configuration), or you can add your own security filters to do the translation yourself without involving Spring (which is pretty straightforward).
Bad management decisions and waiting far too long before investing into smartphones pretty much sealed their fate iirc
wow - good find ! i spent a couple hours looking 5 years ago and missed it: &amp;#x200B; [https://www.reddit.com/r/java/comments/29b3oz/bayou\_async\_http\_server\_for\_java\_8/cjapjq6?utm\_source=share&amp;utm\_medium=web2x](https://www.reddit.com/r/java/comments/29b3oz/bayou_async_http_server_for_java_8/cjapjq6?utm_source=share&amp;utm_medium=web2x)
Uh, what? “GUI-challenges”? What does that even mean? I’ve never had an issue.
Run from Hibernate - it's a mess. Dropwizard has a nice integration with JDBI which is much better/simpler than Hibernate. [https://www.dropwizard.io/1.3.12/docs/manual/jdbi3.html#man-jdbi3](https://www.dropwizard.io/1.3.12/docs/manual/jdbi3.html#man-jdbi3)
Well is this even needed if I'm connecting to DynamoDB? Like I'm not understanding the purpose of it, since JDBI/Hibernate seem to integrate with local SQL DB's
Why to run from Hibetnate? If so, what is your recommendation?
Linux GUIs are more stripped down than a holocaust victim. Are you honestly telling me you've never used `chmod` except for fun?
Not necessary for DynamoDB. Hibernate &amp; JDBC are for SQL DBs, which Dynamo ain't.
I’m sorry, but this isn’t 1995 anymore. Full desktops like Fedora or Ubuntu are great, especially when you add in the KDE plasma desktop like with Kubuntu.
JDBC is an API to access relational databases. Since Amazon provides their own data access API for DynamoDB obviously JDBC isn't necessary. Hibernate is an ORM. It allows you to run queries on a database and load the rows into memory as entities into a session. It keeps track of the in-memory changes you make, and when you flush the session, it will figure out the necessary INSERT/UPDATE/DELETE statements (and the order to execute them), to synchronize changes in-memory back to the database. A lot people think all of this is overkill, but a lot people find it handy. But, Hibernate as far as I know, relies on JDBC. You might be able to find a JDBC driver for DynamoDB which wraps the Amazon API with the JDBC API, which would make DynamoDB work transparently with Hibernate. Which is nice, if that's your thing.
It doesn't matter if your database is on your local machine or not. JDBI and Hibernate will work fine because JDBC operates over the wire.
Dynamo does provide a JDBC adapter though if OP really wants that route
Hibernate is a huge overblown framework that's far more trouble than it's worth. In my post above I mentioned JDBI - it's very nice.
Ubuntu default and KDE plasma are a tragedy. Windows, OSX, Android, and iOS are certainly not taking any tips from them. &gt;I’ve never had an issue &gt;except that Linux GUIs are so atrocious that memorizing obscure commands and typing file paths is easier
So what would the "run" method in my Application class for my DropWizard look like, in order for me to successfully register the resource and work with my DAO?
After reading the replies on this thread, I agree with them for the most part. What I am unclear on is once you have taken the beginner's level courses etc., where should you go for more advanced tutorials? I understand you should try on your own as much as possible, but is there a faster ramp up to more advanced concepts in Spring?
Sorry, but you’re just wrong. Knowing the command line isn’t obscure. For the sake of an example, let’s say I have a file ~/Documents/Project/img.png, and wanted to move that up ~/Pictures/project/. On any Os. using a GUI, that would be 5 clicks and a ctrl c + v. Or, I can just type that in terminal in a second or two. A terminal is just much quicker, as I don’t need to render a view. Why should I use the slower option?
You think wrinkley retired people give a shit about saving a fraction of a second here or there when they only use their computer an hour a week? Just think about how absolutely absurd it is to move a file with `mv`. In the real world when you want to move something, you grab it and take it to its destination. You don't issue a codeword (which is actually just two consonants) to a third party (your OS) and then assume it has been done as desired without receiving any sort of confirmation. I've never met anyone who wasn't a STEMlord who even so much as tried linux.
Thanks for talking about other, non-Springy stuff. After reading the replies on this thread, I agree with them for the most part. What I am unclear on is once you have taken the beginner's level courses etc., where should you go for more advanced tutorials? I understand you should try on your own as much as possible, but is there a faster ramp up to more advanced concepts in Spring?
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Pleased to see that Kilim is being maintained again! Thanks for taking on this work.
&gt;What are you putting in the JWT? Presumably your auth server is creating the token, and should have access to the user and roles database for authentication, so you can store the user roles in the claims section. Yes. The token contains the username claim. &gt; You should be using a security filter to translate the JWT claim data into a Spring Security compatible principal, so that Spring is none-the-wiser about where the authorization data came from, so that it can transparently apply its RBAC mechanism. Yes I already do this. Take a look here [https://github.com/h4t0n/gemini/blob/master/gemini-auth/src/main/java/it/at7/gemini/auth/core/TokenAuthenticationFilter.java](https://github.com/h4t0n/gemini/blob/master/gemini-auth/src/main/java/it/at7/gemini/auth/core/TokenAuthenticationFilter.java) Then the Authentication provider verify the token and create a UsernamePasswordAuthenticationToken (here [https://github.com/h4t0n/gemini/blob/master/gemini-auth/src/main/java/it/at7/gemini/auth/core/TokenAuthenticationProvider.java](https://github.com/h4t0n/gemini/blob/master/gemini-auth/src/main/java/it/at7/gemini/auth/core/TokenAuthenticationProvider.java)) Probably the best way is to retrieve also user roles in this step and add it to UsernamePasswordAuthenticationToken so in my controller (it is a generic parametric controller to map all my routes I can use it: [https://github.com/h4t0n/gemini/blob/master/gemini-core/src/main/java/it/at7/gemini/api/RestAPIController.java](https://github.com/h4t0n/gemini/blob/master/gemini-core/src/main/java/it/at7/gemini/api/RestAPIController.java) Or I can retrieve user roles in the [RestAPIController.java](https://github.com/h4t0n/gemini/blob/master/gemini-core/src/main/java/it/at7/gemini/api/RestAPIController.java) starting from the username and add there my logic to eventually Unauthorize the request. What do you think about? PS: I'm not a Spring Security (and OAuth) expert... so I could make mistakes... but I won't use the GrantedAuthority because I want to use the Spring configuration as little as possible...
If you don’t care about efficiency, that’s fine, the GUIs on Linux distros work just as good as they are on Windows and OSX. It’s not absurd to have a CLI for moving items. If you’re not a power user, don’t use it. You can still move items by hand. You can do the same on Windows and OSX. No one needs to learn the terminal, and I think you’re way off base here. Windows has a terminal, OSX has a terminal. Doesn’t mean you need to use it bud. Microsoft and Apple are rich for many reason beyond their promotion of cli tools.
it never really ceased to be maintained, but sriram (the author) wasn't interested in some popular use-cases so it at times appeared that way. i took over the day-to-day work, and it's definitely a lot easier to use now
Windows has GUIs for environment variables, file permissions, operating system flags, preferences, device drivers. Literally everything. Linux has pretty much none of that. Anyone that complains is told they should write their own (which will never be accepted into the main branch no matter how good it is, because pre-installed GUI features are considered fascist bloatware). Linux GUIs will always suck donkey balls because no one uses them and because there's no profit motive.
That name is a bit of a mouthful, is there a story behind it?
Linux environment variables are just done in your bash or zsh profile, so unless a notepad isn’t graphical... All of that dan be done in Linux. It isn’t the same as it was in 1995. And if no ones uses them, why were you asking for a recommendation for one in the past year?
If you click or double-click on something and it doesn't launch a GUI, it's basically a joke. Why should the user have to decide what program to open something with? And even then, you're basically editing a piece of software, not interacting with one. One misplaced character and the whole thing is unparseable. &gt;And if no ones uses them, why were you asking for a recommendation for one in the past year? Good question. I wanted to test my Java project in a Linux environment to make sure my gradle and maven build scripts worked flawlessly without modification. A graphics driver installation corrupted Ubuntu and I decided to reformat my disk with windows. If there was some sort of restore point feature it wasn't obvious.
I’m sorry, but you’re a nut. You really don’t have any idea what you’re talking about, and I can’t imagine you’re of any value as a dev if you can’t use a terminal. How can you run the gradle build scripts? How can you deploy to a remote? Ssh into an external server? That’s all done via a terminal.
Would love to watch a talk about some of the cool nitty-gritty implementation challenges and other interesting bits concerning concurrent GC! Has anyone come across such a YouTube video, perhaps? I love learning about some of this low-level stuff - even though I'm very thankful it's not me having to work on it xD not only it gives me a glimpse into an entire new world I don't get to see when dealing with high-level scenarios but it never fails to make me thankful for the people who work hard on any sort of tooling!
I use terminals all the time. They are necessary for running custom scripts, not everyday tasks. I must be a nut because no normal person would touch a terminal willingly. That's why I said Linux's motto is *script kiddies wanted, normies get out*
&gt; Probably the best way is to retrieve also user roles in this step and add it to UsernamePasswordAuthenticationToken so in my controller I'm assuming you would be doing this using a database call (or cache lookup) or a webservice call (to a `/me` style endpoint)? This is the default implementation of the Spring Security OAuth2 filter. However, this also defeats the purpose of JWT, which is to make the endpoint self-sufficient by encoding all authorization claims in the token. The reason why Spring Security does user endpoint call is because the default token format is a UUID. How are you generating the JWT in the first place? OAuth2 token generation requires authenticating a user in the Auth Code and Implicit flows, so you have the opportunity to add the role claims then, that way using the standard JWT extraction method you are using will automatically pick up the roles without a separate user lookup.
"Envy" and the color green is associated with Nvidia. "FX" comes from JavaFX.
Usually when we connect to DynamoDb, we prefer to use our own lightweight queries. DynamoDb tables are usually used for small microservices with simple query/datamodels. Using Spring, we just inject an AmazonDynamoDb client, and map objects ourselves, I imagine Dropwizard enables something else. If you are planning to migrate a complex database, maybe go with Aurora Postgres instead?
Evidently you’re not an engineer, if you can’t even handle a terminal without whining. Besides, I’d much sooner call those who need GUIs script kiddies. A “script kiddie” is someone who just copies and pastes code because they don’t know what they’re actually doing. Using a cli takes knowledge of some degree. A GUI doesn’t.
Yes I use the password flow with a DB lookup. But store the roles in the access\_token I think that isn't the best way for my purposes. I'll try to explain better: user roles are for example Bob can POST on CAR Entity. Or more fine grain, for example: BOB can modify only the name field for the CAR entity and can view all except the license plate. So imagine that I have 100 entity, each with a specific role for each field. It is better to maintain on the server a cache of roles and use it after authentication filter, but before the entity resource logic. Obviously I need a way to categorize/group by all the role: to share them across the same typology of user. And in this case probably if have a key for the role it is better to store inside a jwt claim. PS: Imagine also that I want that ROLE is an entity itself (in Gemini) with its POST GET PUT DELETE so I can use it on front-end to avoid unnecessary always unauthorized call. Obviously I need to protect it.. and in this case I can use simple specific roles.. Or role for the role entity... Ok this sounds like INCEPTION, but I think it is absolutely possible that a User (admin) has the ability to change enable another user roles (also for the entity ROLE).
It looks like in your [submission](https://www.reddit.com/r/java/comments/cbm3y1/jpa_many_to_many_and_many_to_one_for_one_object/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
&gt;Oh-my-zsh All the text is the same size. I'm pretty sure that engineers are paid to whine. &gt;Using a cli takes knowledge of some degree. A GUI doesn’t. That's my whole point. You're like a woman that brags about reading the manual. If it's well-designed, the end-user doesn't need a manual. Have you read the manual for your car? No.
And what does this have to do with Java? Was this written in Java? If so, where's the source?
You were [already made aware (by another reddit user)](https://www.reddit.com/r/java/comments/c2ujv4/the_club_mobile_java_game/ermmcg8/) that this is not the appropriate place for such posts. Even the post in question was removed because of reports of the community. Please, refrain from further posting such here, or you will face consequences in form of a permanent and irrevocable ban. Also, you need to be aware of the [**reddit rules for self promotion and spam**](https://www.reddit.com/wiki/selfpromotion) because what you are doing is heavily violating them. + submitting from a single source (yes, text posts with links to said single source also count against this) + over 60% comments in your own threads + spamming posts over multiple subreddits The potential quality and reception of your posts don't play a role in the **reddit wide rules**, only the plain data counts.
Partially, to use the fuse box, yes.
That makes sense. If you expect a large number of fine grained roles per user, that would indeed bloat the token. Sounds like a `/me` endpoint backed by a cache like Redis would be the best solution, and you can enrich your authorization data with data you get from that endpoint.
Thanks so much. It means that I'm going in the right way.
Thanks dude. You are a scholar and gentleman.
Would you mind if I linked you my DropWizard project and you just give me some pointers on where I'm going wrong? Because I can remove Hibernate, but once I try to do so, it gives me this long error output: https://pastebin.com/FCa0VsYC And I'm not entirely sure where to begin debugging with this because I'm not even sure if I set up my project correctly. Here's the link to the repo if you'd be generous enough to take a look: https://github.com/SixteenDollars/help Just cd into the directory, run "mvn package", then "java -jar target/my-project-1.0-SNAPSHOT.jar server config.yml"
For what it's worth, AutoValue's design center is "how do we address this problem in the least magical way possible." The simple idea we hit on was that you write an abstract class that has only one obvious implementation; then it simply writes \_that\_ implementation. The reality ends up a bit messier than that as you get into edge cases, but I still think it succeeds at being as simple as possible. Still, when we all have records, we can kill AutoValue with much death.
&gt; The reality ends up a bit messier than that as you get into edge cases, What edge cases can you run into? I haven't used AutoValue, as I worked with Scala and Kotlin. And yeah, records should be a great addition to Java.
By "edge cases" I just mean these sorts of things listed in the how-to: https://github.com/google/auto/blob/master/value/userguide/howto.md I think that most of the answers to those how-to questions end up seeming obvious in retrospect -- fitting that standard I mentioned ("you just write an abstract class that has one obvious implementation and it just does that"), but a few of them aren't quite as pretty as others.
Awesome :-) Thank you for your contribution.
Wouldn't *Ronin Duke* be more appropriate.... as OpenJDK has no master?
[removed]
Yep. [https://www.youtube.com/watch?v=qBQtbkmURiQ](https://www.youtube.com/watch?v=qBQtbkmURiQ) and/or [https://www.youtube.com/watch?v=VCeHkcwfF9Q](https://www.youtube.com/watch?v=VCeHkcwfF9Q) That said, [https://rkennke.wordpress.com/2019/05/16/shenandoah-gc-in-jdk-13-part-ii-eliminating-forward-pointer-word/](https://rkennke.wordpress.com/2019/05/16/shenandoah-gc-in-jdk-13-part-ii-eliminating-forward-pointer-word/), which talks about how they were recently able to remove the forward pointer.
With [SFML](https://www.sfml-dev.org/) it's quite a bit easier than just OS-specific 'native' windowing code.
Article read time: 5-10 minutes Pros: * Clear explanation * Beginner friendly Cons: * Too basic * Worst class name ever ( useJACKSONapitoConvertJavaOBJtoJSONstring )
My project has a library generated class named PIDPV1PV2IN1IN2IN3ORCOBROBXNTESPMOBXNTE
It looks like in your [submission](https://www.reddit.com/r/java/comments/cbven2/would_anyone_know_the_formula_function_for_the/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Please don't
Why not?
Java and its ecosystem (ide, libraries, tools) are way way more productive than Swift.
Hey I like Java as much as the next guy but that is simply not true, have you ever used Xcode, Swift and CocoaPods before?
I am always confused by the phrase "written in JavaFX", implying JavaFX was its own language. Way too many project use this phrase, just because they do something like: `public class MyApp extends javafx.application.Application` Maybe I am just too pedantic?
Nice.
You were so preoccupied with whether or not you could, you didn't stop to think if you should.
BTW, any form of running Java bytecode -- whether it relies on JIT or AOT compilation -- is a JVM, as long as it complies with the JVM spec (although "*the* JVM" normally refers to OpenJDK's JVM, AKA HotSpot). Graal Native Image (AKA Substrate VM) is not there yet, so it is not a JVM, but it may well be one day.
I’m interpreting this as protest art.
The following phrase is so overused, it nearly lost its meaning, but still: Java, but with Python indentation: Thanks, I hate it. Indented with 4 spaces. Apart from memes, I find the import statements to be cool nonetheless.
Why take the worst of Python (off-side rule)?
Thank you. We need more resources and support for continued development of Java on mobile platforms. I have never developed any mobile apps, but there is no denying of how important the mobile platform is, and how much more it will be become considering the technological improvements of handheld devices and their deep integration into our lifestyle. It's probably fair to say that Java has lost the mobile platform to Kotlin. Google &amp; friends have been pushing kotlin heavily. There is also kotlin native to watch out for. So, for Java to stay relevant, please do not forgot the mobile platform.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
I like little experiments like this that make you stop and think for a sec -- in this case, how much about what I love/hate about the Java/Python syntax is related to braces/indentation/semicolons?
What does enterprise mean in this context?
As someone who works all day in Java, Python, C++ and C# this is my nightmare. But just from a technical standpoint it is interesting.
Yet another useless python script.
That's Java**Script**, not Java. They are two different languages. You need to post in /r/javascript.
A discussion on C# on github is pretty interesting. https://github.com/dotnet/csharplang/issues/399.
I know, I just never learned it lol
A huge benefit would be the ability to use the same code on Android and iOS.
I don't think Spring would be an option on mobile. Neither is JPA/Hibernate, at least it wasn't last time I checked (a while ago, true). In order to keep mobile apps performant and with a small footprint, you can't use bloated frameworks (I LOVE Spring, but for mobile it would be bloated). Most cool Java frameworks are geared towards enterprise (web) applications. Haven't used Swift, so I can't talk about it.
I love this. I bet you learnt a lot about parsing and transcompilers!
I've been using Java for over 20 years, and still love Java, but if you want to have one codebase for both Android and iOs, there's already a solution: [https://flutter.dev/](https://flutter.dev/) Dart has a few tricks up its sleeve, and after you start using them, you'll wish Java could do that, too. Before I saw Dart, I thought Kotlin was an advanced, modern programming language. But Dart *might* have even Kotlin beat. The more I use it, the more I love it.
If used like in Kotlin Multiplatform, where you have a Layer of native code (for communicating with the platform, e.q. Camera, Permissions...), a shared Business Logic Layer (in Java) and a native UI layer, yes. The advantage of Java is the huge ecosystem and that there are libraries for everything. But I doubt that rendering the UI in Java is going to happen, this is a huge effort and I don't think existing solutions like JavaFX can be adopted to be used for mobile easily. Also, there are many competing solutions for this space (Ionic, React Native, Flutter), I doubt that already work well and have great tooling, it would be a huge effort to get to the same level.
There’s a few alternatives, including Xamarin, though the licensing is a bit pricey.
Uh, what the hell? Why the fuck would you try to put Spring into a mobile app? That just doesn’t make sense. You’d never use a web framework on a mobile device, there no value there.
Yesss! We need this!
What do you think does dart better than kotlin? Mind to share some examples? Would be really interested.
No, and it's nothing special handling the sometimes ad hoc nature of web development. But the static typing and tendency to be more formal helps when apps invariable start to grow. The biggest killer of productivity is the lack of hot-swapping/hot reload ( a sane, official, solid, correct, working one). Fast feedback loops are EVERYTHING when developing. It's not easy to make it happen, but the Oracle/open-jdk/etc. guys keep entertaining themselves with language features most people won't use and ignore something that would impact most developers, not just web devs.
I could not have said it better.
In the meantime, this is also an option: [https://gluonhq.com/products/mobile/](https://gluonhq.com/products/mobile/)
&gt; If you click or double-click on something and it doesn't launch a GUI, it's basically a joke. Never experienced something like that. If the desktop environment doesn't know how to "open" a file (a ridiculous notion since we are not dealing with a physical space here) it will ask. &gt; Why should the user have to decide what program to open something with? Because there are usually multiple programs that can do the job. Sometimes I want to look at a picture, other times I want to edit it. &gt; No defaults Of course there are. Every Linux desktop I ever saw had defaults, and dialogs to change them.
Libgdx with RoboVM theoretically works as well
&gt; Have you read the manual for your car? No. Actually, yes. And before you get a driving licence, you have to pass an exam. And many places require to take driving classes as well. Nobody is born a master.
nice shoot out to RoboVM at the end of the article. you could write an IOS application in Java as far back as 2013. Then guess what happened? Xamarin bought RoboVM. Then Microsoft bought Xamarin and the rest is history.
Xamarin bought RoboVM, Xamarin killed RoboVM, Microsoft bought Xamarin
&gt; Flexible interfaces that can be updated and improved continually without breaking scripts or brains. This flexibility is also a showstopper for scripting on Windows. Yes, there is cmd.exe and the Powershell, but they are just as hard to learn as Unix scripting languages. Also, not every update on the GUI is for the best - many system settings dialogs on Windows 10 were completely redesigned, and it was very annoying to get used to it.
The shared code would be in Kotlin, not Java (probably a typo?). Also: only Kotlin libraries that support Kotlin Native can be used with Kotlin Multiplatform on iOS, so the huge ecosystem of Java libraries unfortunately doesn't matter in the Kotlin Multiplatform scenario on iOS :-(
Are you sure you know what Spring is ? Spring is not a web framework. Spring core is inversion of control. Has NOTHING to do with the web. Spring core allows you to assemble applications by working with the interfaces and switching implementations as you see fit without changing the code. Spring Data also has nothing to do with the web. It's about persistence (as is JPA/Hibernate). Spring Batch is also not web. Spring Integration. Spring Shell. Spring Security - you could maybe use it in a mobile app. &amp;#x200B; Then there are Spring Mobile and Spring for Android. Never used them, but they exist.
You could rephrase this as &gt;I don't think lathes would be an option on cars. Neither are drill presses/laser cutters, at least it wasn't last time I checked (a while ago, true). and it would make exactly as much sense as what you first said.
All of which are way too heavy to ever use outside of a web app. Spring in a web framework because no one in their right mind would use it for anything else.
Never used it, only heard about it. But from what I read, Flutter is a much better alternative.
&gt;All of which are way too heavy to ever use outside of a web app. Do you realize there are other kinds of apps outside than web and mobile ? You think Spring Batch is used in web apps ? Or Spring Integration ?
I meant a possible JVM-based competitor to kotlin muktiplatform.
I wouldn’t say better. Xamarin uses C#, which is a much better version of Java, for all intents and purposes, and was first released in 2011. As of 2016, Microsoft has owned the company, and has continued to develop it. Flutter meanwhile is described as a UI toolkit firstly, and has only been around for a couple years. It has the backing of Google, one of the two phone OS companies, but it’s not a real cross-platform app development solution, as that’s not what it’s meant to be. Xamarin or the alternatives of it are what you want if you can’t be bothered to learn Swift or Kotlin, and want native apps. Flutter is very much in its own category.
I don't know if I've just been unlucky, but the UI of every app I've used that was developed using Xamarin has been awful.
Desktop, web, mobile. You can make a tool, doesn’t mean it’s relevant or useful. Neither of those are worth anything, just like a beginner’s “To-Do List” app.
Weird. I haven’t used it recently, but I can’t say I’ve ever had an issue myself.
I think these issues relate specifically to use of Xamarin Forms for a shared UI between platforms. I'm not totally sure, I haven't developed using it personally, just used apps that were developed using it. I have seen the same complaint online from developers that have used it.
&gt;Why would your mobile app need to open a direct connection to a database? I guess you never developed a mobile app. And maybe all the people working on these are just idiots, and you are the smartest person on the face of the earth: [https://www.sqlite.org/index.html](https://www.sqlite.org/index.html) [https://pub.dev/packages/sqflite](https://pub.dev/packages/sqflite) [https://www.couchbase.com/products/mobile](https://www.couchbase.com/products/mobile) [https://www.oracle.com/database/technologies/related/berkeleydb.html](https://www.oracle.com/database/technologies/related/berkeleydb.html)
You might be surprised to find out, not all applications have a GUI. There's a shit load of code running happily on servers that's not desktop, web or mobile. Again, Spring Batch. You don't seem to know what that is or does, or you would have understood my point and not have said "desktop".
This is what happens when somebody has too much free time :)
I was pretty sure you mistyped swing ... but I was wrong
And you’ll be surprised to know that GUI or no GUI doesn’t change anything. A web api is still a web app. A python script is still a desktop app.
The refactoring for java on IntelliJ are unbeatable - http://vimeo.com/33403686
&gt;was first released in 2011 How's that relevant ? It would be if Java hadn't evolved, which it did. &gt;As of 2016, Microsoft has owned the company Again, irrelevant. &gt;Flutter meanwhile is described as a UI toolkit firstly I don't care what it's been described as, it's a framework for building natively compiled apps for mobile (and other). &gt;and has only been around for a couple years Age is irrelevant. What matters is how good it is at what it does. Cobol has been around for 60 years. Do you use it over C# ? &gt; It has the backing of Google, one of the two phone OS companies, but it’s not a real cross-platform app development solution, as that’s not what it’s meant to be. You are talking out your ass here. &gt;Xamarin or the alternatives of it are what you want if you can’t be bothered to learn Swift or Kotlin, and want native apps. Flutter is very much in its own category. And again, talking out your own ass. And what if I can't be bothered to learn C# ? And I would rather learn Dart ?
Jython [https://www.jython.org/](https://www.jython.org/) was around for a long time.
No Node.js / JavaScript is
Sorry, a little late...you are absolutely correct.
&gt; How's that relevant ? It would be if Java hadn't evolved, which it did. Xamarin was first released in 2011, C# had had nearly two decades since release. I mean, compared to C#, Java hasn’t evolved. But it’s relevant when comparing frameworks to see the staging power and how mature a tool is. At 8 years old, Xamarin is far more mature than Flutter, and has a strong identity. Flutter is still up in the air. It’s cool, but whether or not it’s vaporware has yet to be seen. It’s also extremely relevant to know who’s backing what. If Xamarin was created by a no-name group of devs, well, it’s going to struggle going up against Google’s Flutter. But Xamarin is Microsoft owned, and most certainly had the resources to compete. &gt; I don't care what it's been described as Oh, you don’t care that Google calls it a UI toolkit, and nothing more? Glad to hear that you know more than the company developing it. &gt; Age is irrelevant. What matters is how good it is at what it does. #1 sign of a bad junior dev right here. When deciding on what tool to use, maturity is at least 50% of the equation, if not 75%. No point in using something today that’s deprecated tomorrow. But yes, I’m talking out of my ass by quoting Google’s documentation. Please. And what if you want to learn python instead? The answer is the same: I don’t really give a fuck what you do. What you do isn’t relevant to me in the slightest.
&gt;Number 1 sign of a bad junior dev right here. You are too fuckin full of yourself. I am wasting my time with you. Bye.
You know there are women programmers, right?
https://imgur.com/gallery/hk92p
lemme at them dicks
Uh, i feel like Windows is far more GUI-challenged than KDE for example. System level audio controls, e.g. play music from youtube from a browser and system media keys control it as expected, not so on Win and MacOS. Want to change audio volume, screen brightness, any other control with a large(continuous) range? Just use the scroll wheel on the tray icon, fucking bliss. Even the GUI makes more sense in some areas than the crap that became Windows 10 Settings. Just try to find something, instead of 1-2 clicks it's tons of subtabs and special links, whole settings pages filled with large controls and tons of padding as if i was sitting 15m away from my monitor. Not having to use the command line for stuff? Well, if the GUI actually worked. Just open up Windows Update, stare at it with intensifying intent and maybe it will pick up the clue to start finding updates and actually downloading them, not sitting at 0% for hours. I don't even bother with it anymore and immediately drop to powershell commands. So while i would have agreed 10, maybe even 5 years ago that Linux DE-s were shit in UX compared to Windows or MacOS, the gap has closed now, each with their strengths and weaknesses, but i do see Linux getting ahead soon, at least compared to Windows. Most games work perfectly as well so this year might be the last my desktop still runs Windows. I don't understand how it got so bad that the only way they figured would fix Windows Update was to turn it into a complete Windows reinstall that takes an hour sometimes and with multiple restarts, compared to Linux where only a kernel update usually requires one, but even that can be done away with.
None of the hybrid solutions work well.
You speak the truth and back up your arguments, but are getting downvoted because you're posting in a Java subreddit.
This is called a product type in PL theory. The canonical example being a vector, which has both a magnitude and direction (thus its type is of type Number * Direction)
Yesssss!!!!
The Wikipedia page on product type would suggest that a product type is actually more like a struct in C. Will need to brush up on my type threnody.
hmm I see how that comes across that way. I would think of "intersection types" as flattened product types if you went by that definition. A tuple (int, string) for instance is a product type String * Int. In this way it fits the bill of intersection type by reducing the cardinality of the tuple to 1
I can do pretty much the same thing in Xcode? And yes I know, I've used IntelliJ (and other JetBrains IDEs) for a relatively long time
Actually, I just noticed that GitHub seems to have added built-in functionality to do the same thing :). [https://i.imgur.com/LjKu3kN.jpg](https://i.imgur.com/LjKu3kN.jpg) They will likely expand this beta soon. So it appears that Lilit is getting overshadowed. I feel really bad that your hard work is getting duplicated by GitHub though. [¯\\\_(ツ)\_/¯
There is no language feature in Java that is platform specific . There are API level features that are platform specific (and there have been for a long time now). Generally, those don't really matter, because using them means you want to work with the platform in some highly integrated way. For example, you'd expect Swing to work with java when running on a desktop, but not when running on a server. On the other hand, lambdas, classes, and all the keywords work cross platform.
But that is full blown python. This monster is a type of java that uses python like syntax but keeps certain java stuff(like interfaces)
Thanks. This looks very good.
Python indenting can not be auto-reindented. As such it's a hard no from me.
I see you're using tab instead of space... this really don't follow the PEP8.
yeah, as much as Win sux, linux is worse. sudo and chmod are the standard for basic operations
jython gets an update
You don't know how GUIs work. moving a file up a dir is not five clicks and a ctrl-v. A good GUI would be *right-click on a segment of the current file path (1), release mouse on 'Open in new window', hold click on file (2), drag to other window and release.* Two clicks! Or better yet, drag and drop a file onto a segment of the current file path! ONE CLICK.
Sure, but with a terminal, I can move that file up, down, left, or right from anywhere in the file system. I don’t have to navigate to it at all. Actually, opening a directory takes two clicks, and I’m not sure why you need “ls -a”, as that just lists the sub directories. I can change just fine without it. But there real power is that I can also go 6 directories deep in a second, with no clicks at all. GUIs are simply inefficient if you know what you’re doing.
There are plenty of script files that will execute headlessly if you double click on them. It will run and work just fine, but without running them from a command line, you’re obviously not going to see any output.
It depends on what it is I feel like. If you need more video game-y type of feel I would go with python but if you want a clean looking web app I would 100% go with java
It’s not a web app. It will be more of a java or python script which will be running and storing some data locally.
If it's just a script, use Python.
Yeah then python
Yeah then python
Thank you.
Thank you.
Opening a dir does not take two clicks. You single-click on the file path segment and boom, you're there, looking at all the files and directories (including hidden and system files, depending on your settings). No, you're right and the entire tech industry is wrong. Your niche 6-directory-down Mavis Beacon use-case is why normies should switch to a tiny kernel made for servers with some buggy bikeshedded featureless hippie copyleft passion projects on top
That’s only if you’re going up in the directory part, so quite situational. Whatever. You’re delusional.
Sudo is not a problem. It’s just like windows asking if you’re an administrator. If you’re having to chmod things a lot, you clearly don’t know what you’re going, and should probably stop touching things you don’t understand.
&gt; Java Haha, no. &gt; IDE There's AppCode. I know you love Java, but let's be objective here, there's no way Java is more productive than Swift. *You* may be productive with it, but that's that.
for a GUI, swing in java is still really good and built right into the language. but it is a memory hog. a simple gui can use over 100mb.
But such scripts are rarely the default actions for, say, a PNG file. Yes, if you click on non-gui programs they won't show a GUI. But without arguments most of those are useless anyways. On some of them drag&amp;drop might work, but in general they are meant to be run from a terminal.
I totally agree with everything you’ve said, as the other guy is a nut. Plenty of great scripts don’t have GUIs, but it is important to mention that Windows won’t ask you how you’d like to open all files, like a shell script, as it will just run it.
What exactly are you trying to make? What platform? What API?
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Oh man, good luck. I remember developing an app with j2objc - which I am sure is still in production on some Google apps. That being said, if this delivers what it really promises, it could be amazing. There are some awesome Java libraries out there that could become iOS apps on their own.
This has already been posted 18 hours ago.
Derpy, read-only files are not some super-secret thing that only you and your clubhouse know about. &gt;Sudo is not a problem Okay, let's see how long it takes you to sudo one-handed when your password is 15 characters long. Let's see how long it takes you to explain why you're racist against buttons. Linux GUIs suck ass. They are the North Korean fake storefronts of the software world. That's why you don't use them and you never will.
Doesn't the jvms require dynamic class loading, which would be forbidden on iOS?
No IDE (including AppCode) comes close to Java IDEs. And there's still libraries and tooling.
People definitely use spring for mobile: https://projects.spring.io/spring-android/
With something like j2objc where you're transpiling to a different language and platform there's always gonna be an impedance mismatch between abstractions. Graal doesn't really suffer from the same problems, it's already a proven technology for AoT. This is basically just another compilation target for it.
AppCode is a Java IDE, lmao. Tooling is there for Swift, as well as libraries.
Programming help, even conceptual, should go in /r/javahelp. **Removed**
is it actually forbidden in iOS? I thought Objective C can already do this.
Hey, no API and all it’s just a simple script that stores the do things and all.
Ohh. Yeah like everyone is saying i guess Python will be better for me.
I think, just comparing the language, kotlin is way better than dart. But there are good reasons why Google chose dart for flutter. The main reasons are: * dart is optimized to support stateful hot reloading, which is a big deal for productivity , especially when developing user interfaces. Google tried to get something similar called "instant run" working, but it just isn't really reliable on Java/Kotlin, the language is not made for this. * Focus on UI performance. Since dart is single threaded (with parallelism through message passing), object allocation and garbage collection can happen without locks. * In Dev mode, dart is running on a JIT to allow for faster iteration, in release mode, it's compiled to machine code. Potentially, kotlin could do this, too, but afaik it's not production ready yet. * Some design decisions to ensure good performance and faster startup time, like not allowing reflection, but instead provide tooling to generate the code at compile time (like Dagger)
My understanding was that you're not allowed to have interpreter-style applications (VMs, JITs, ...) on iOS, but I have never worked with iOS, so maybe I'm wrong
Thanks, very interesting, i will take a look.
But what exactly are you doing in the script because if I don't know that, I can't make any recommendations on what language you should use. Based on the information that you said, I would go with python.
For AssertJ and Hamcrest users, there is quite a thorough comparison in the docs, reviewed by the AssertJ author: [https://truth.dev/comparison](https://truth.dev/comparison)
well python is horrible for GUI's. id go java swing is awsome. its just a memory hog if your on a system with low memory.
I believe they are mentioning GraalVM ([https://www.graalvm.org/](https://www.graalvm.org/)), which has a native mode. I've tried it for Java, and a couple of the other supported languages, and it works as advertised. The only issue is, in native mode, there are some additional limitations and hoops due to reflection not being supported. They have a limited form of reflection to support stuff like dynamic class loading, where a file if provided to the build step that causes the 'dynamically loaded' classes to be linked in to the native executable so that the Class.forName() type calls will still work. It is slightly painful, but there is another project I've played with, Quarkus ([https://quarkus.io/](https://quarkus.io/)) that automates a lot of the pain of using GraalVM. It seems to live up to it's claims. Although Quarkus is for enterprise web development, so it's not applicable to the use of Java through GraalVM on a mobile device, but it does show that the painful bits of using GraalVM native targets can be almost completely eliminated if you wrap some tooling and frameworks around it. In short, it's feasible, and one to look out for. I would suspect that coding Java on Android is going to be a non-starter, for various reasons not including resentment of Oracle's bullshit law-suit of Google back in the day, but as GraalVM trivially supports multiple languages (and interopt between them), such a project would opens up huge possibilities. (I must point out at this point that I am not affiliated with GraalVM, only an interested user, so the text below may not be a 100% accurate representation of the facts, it is just my evaluation based on playing with the project for some prototyping and being an interested observer of the community for a year or so.) However, according to my understanding, not only does this mean people could in theory code native Python, Ruby, Javascript on IOS and Android, which would appeal to many people right there, but the really interesting bit of GraalVM is the Truffle API, which allows new languages to be targeted at the platform essentially trivially (you just need to write the parser-&gt; AST part), and they all run with essentially the same performance, as all the optimisations are performed on the AST. GraalVM also links to LLVM, so the library of possibilities for that is even larger. I looked at one point with linking Rust to GraalVM, and it is possible, with the limitation of having to provide all the output files on the command line due to Rust not needing to track class linking as far down the assembly pipeline as GraalVM needs. However, it's doable. Also, going further than that, the SubstrateVM which is part of the GraalVM project, actually the most amazing bit, is not just a re-written JVM. It's a JVM abstraction layer, which allows different environments to implement modules that are currently part of the JVM (plus some other cool memory mapping tricks). I saw a demo of a prototype Oracle implementation of the SubstrateVM that allowed Java code to run as a stored procedure language, but using the Oracle DB memory manager, the Oracle DB process manager, the Oracle DB security scanner, etc. Literally, mind-blowing. So in the future, one may find that there exists an Android layer to the SubstractVM (I doubt Apple would go for it), that means the Java code running on the platform would run as natively as Davlik code, without relying on the native-c bindings in Android (the NDK) which I understand to be complete crap. Essentially, this would allow almost any programming language in existence to be used on Android. Google and Oracle should make up their tiff, reach out the the developer community, and move forward together constructively!
Objective-C is statically linked, but the function calls (the ObjC ones anyway) are dynamically dispatched, so it doesn't break Apple's own rules. Actually ObjC was a beautiful and elegantly minimalist language, I deeply mourn it's passing. Apple did a fantastic job of evolving it too, it's just that it never really had a chance of catching on in a post-python/ruby developer world, hence swift (blech!) I'm not an apple fan, although I used to be, and their rules around development make 100% sense. It results in a better experience on more sophisticated hardware. That's why Android devices need to throw more brute-force at running applications to keep up, and this is why Apple devices tend to spend their budget (or at least used to), on selected innovative technologies (display technologies, custom low power single core chip designs that run games with less power, etc) that take a while to show up with an Android equivalent.
Dear mother of god no!!! If you want to use Python then use Python.
&gt; However, according to my understanding, not only does this mean people could in theory code native Python, Ruby, Javascript on IOS and Android, which would appeal to many people right there, but the really interesting bit of GraalVM is the Truffle API, which allows new languages to be targeted at the platform essentially trivially (you just need to write the parser-&gt; AST part), and they all run with essentially the same performance, as all the optimisations are performed on the AST. GraalVM also links to LLVM, so the library of possibilities for that is even larger. I looked at one point with linking Rust to GraalVM, and it is possible, with the limitation of having to provide all the output files on the command line due to Rust not needing to track class linking as far down the assembly pipeline as GraalVM needs. However, it's doable. This isn't correct, you can compile the truffle program to native but you can't compile ruby or javascript or python to native, they are still interpreted/JITed by the truffle program.
For starting? I'd start with a simple REST API application. Start with Spring Boot, with Spring MVC (webstarter) to get the REST endpoints up. Then connect it to a database using JDBC or if you're feeling ready JPA with Hibernate. Include the H2 database for quick testing. This should get you set up on the @Controller, @Repository and @Service structure. Start with the basics, understand how to do injection and why. Read the official docs, it will help you understand the parts and structure. Read the Baeldung site's tutorials, they have well written tutorials. Then, you can consider Security. Look into Flyway and Quartz. And Reactive if you feel ready for it. And Integration if you must. Maybe an unpopular opinion, but skip the Cloud stuff (for now). You need the basics first. Don't jump into RestRepositories, Lombok or NoSQL before you understand why you might need it. Be careful of Actuator as you might end up exposing too much details of your application.
It looks like in your [submission](https://www.reddit.com/r/java/comments/cca7v3/mempoi_leverage_apache_poi_api_and_enjoy_your_life/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Google had the opportunity to own Java and decided it wasn't interesting, so.....
C++ did it first.
I'd create one method: * getOffers(Predicate&lt;Offer&gt; predicate) But I would also create the following constants: public static final Predicate&lt;Offer&gt; IS_CURRENT = p -&gt; [...] public static final Predicate&lt;Offer&gt; IS_PAST = p -&gt; [...] public static final Predicate&lt;Offer&gt; IS_UPCOMING = p -&gt; [...] Then, instead of calling `getPastAndPresentOffers` you'd call `getOffers(IS_PAST.or(IS_PRESENT));` Why use final variables for it? because it gives them names and makes what you are doing easily readable. Sure, you could use inline lambdas for it. But its not that easy to read. The above is easy to read af. If you are using a database backend and want to filter on the DB already, you can simply create an `enum` and create the proper query internally.
Oh dear God
I need the JRE for an application that requiere 64 bits JRE. I put the path to 64 bits JDK 11 (program files/java/bin) but the application (Remedy Console in a Server) indicate that requiered a valid JRE. How I found a valid JRE for newest version of Java. Thanks.
It looks like in your [submission](https://www.reddit.com/r/java/comments/ccbiid/requirements_fluent_design_by_contract_for_java/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
At first glance it looks similar to [valid4j](http://www.valid4j.org/)
This post is not about code help.
What's forbidden is generating native code, i.e. JITting. I am not a JVM spec expert, but I believe there are a few options: 1. You can run dynamically loaded classes in an interpreter. 2. I *think* that what's required is dynamically loading classes on the class/module path. In theory, you could AOT-compile all of those classes, and dynamically load the AOT-compiled versions (I think Excelsior JET did just that). If you try to load a class from a file (not on the class/module path), then hypothetically the operation of reading the file is allowed to fail, but I'm not sure.
It looks like in your [submission](https://www.reddit.com/r/java/comments/ccbn2c/requirements_fluent_design_by_contract_for_java/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Thank you for this. I wasn't aware of this library. Some differences that come to mind: * Ease of learning: with Requirements you can use the IDE's code-completion engine to suggest possible operations. With validj you need to static import the operators so you'd have to know what the operator is called ahead of time. * Readability: I find Requirements code reads more like English sentences than validj. * Aggregated errors: maybe I missed this but it doesn't look like validj let you aggregate multiple errors before returning feedback to users. Requirements uses `validateThat()` for this use-case. Overall still a very cool library I'll read more about. Thanks again!
Can you make a java library that allows me to write python using java syntax?
Hey this is really impressive! I really like your work and the attention to detail that you've put into this. This is high quality work
Either way, Google has regularly collaborated with Oracle on OpenJDK for the past few years, and has recently increased their contributions.
this has nothing to do with Java 11
[removed]
If a file is set to read only, there’s a good chance you shouldn’t be fucking with it. Especially because you don’t know what you’re doing. Why do I need to do anything one handed? I have two hands.
Reminds me a lot of the bean validation API. Curious though, why did you choose to use code inside the methods as opposed to annotations on parameters/method?
&gt; Ease of learning: with Requirements you can use the IDE's code-completion engine to suggest possible operations. How's that any different from *valid4j*? In your library, you have static methods in `org.bitbucket.cowwoc.requirements.Requirements` while `valid4j` has static methods in `org.valid4j.Assertive`. I don't see the discoverability difference?
In my experience, the expressiveness of annotations is very limited. This library focuses on readability first. Also, I think there is a lot of value controlling when validation occurs. Sometimes you want to validate parameters at the beginning of the method. Other times you want to validate postconditions later on in your code. I don't believe that annotations should drive runtime behavior, which is what this library does.
I had a look at the code. I like it. Couple of pointers if you don't mind: \- Having a clear README and examples can make a huge difference. Also perhaps hosting Javadocs can help understand the API better. Explaining if you've used this in previous, big projects or what kind of benefits this library offers over valid4j or bean validation. \- Have you got any methods allowing you to match using a predicate? Something along the line of \`requireThat(user, "user").matches(Predicate&lt;User&gt; predicate)\` as that might be nice to extend the API to thing you didn't imagine.
That part is the same. I was referring to the fact that operators (e.g. `everyItem` or `greaterThanOrEqualTo`) are statically imported. With my API you can invoke autocomplete on the result of `requireThat()` and you get a full list of operators, filtered to the specific type you are validating.
There is a Javadoc link at the top of the landing page, but I don't blame you for missing this. It isn't obvious. I'll try improving this. I used to have more examples on the landing page but it got very crowded. Honestly, the best way to pick this up is using your IDE's autocomplete engine and/or the Javadoc link I mentioned. Type `requireThat(value, name)`, autocomplete and you'll get a filtered list of operators specific to the type. I've always wanted to add the predicate approach you mentioned, but I couldn't find a way to autogenerate the exception message for this case. I really like the fact that messages are autogenerated... Any ideas?
The Android team seems to have other understanding though. So far they are only willing to go up to Java 10 desugaring of language features, as per Google IO 2019 session. Forcing Java developers that want to target Android to either create two version, or constraint themselves in what features gets used. So basically succeeding in what Sun prevented Microsoft to keep doing. It doesn't matter now, it is Kotlin First Everywhere from IO 2019 onwards.
I'm talking about the big parts of Google that use Java, and regularly cooperate with Oracle on OpenJDK. Android isn't Java and was never intended to be Java, regardless of what frontend language Android developers use (only Java-like enough so that they could make use of existing tools, developer knowledge and some libraries).
Looks interesting, the you take the single static import approach like assertj. Obviously assertj is a test framework but why wouldnt I just use assertj instead of your library?
Funny you should mention. I actually asked assertj to add the same features years back and they opted against it. Assertj is an excellent API. I'm genuinely a big fan. That said, you don't get most of the features I've listed above. It's very readable, but I aim to provide better output. Also, you can't aggregate multiple errors (`validateThat()` in my case).
Similar features in Google's Guava as well (aka Preconditions [https://github.com/google/guava/wiki/PreconditionsExplained](https://github.com/google/guava/wiki/PreconditionsExplained) )
Do you have 3rd parties accessing your API? Or is it just your apps?
Let me ask you a question since you seem to be up-to-date on this topic: do you think we are moving rapidly towards a point where concurrent GC will be roughly equivalent to classic stop-the-world collection? The last two updates seem to resolve the highest overhead in execution (read barriers) and the second eliminates the highest overhead in memory usage (forward pointers). From the talks, those overheads were fairly low already, in-between 10% and 20% compared to other JDK GCs, for most typical Java use-cases. I would love to see a new comparison of GC performance, like on the second talk but it seems to me that for the vast majority of non-critical use-cases, if they ever get down to a 5% overhead on average, that will basically balance out the gain in latency and Shenandoah might as well become the default JDK GC method (and by that I mean average users wouldn't notice the change). And while I do understand that in a world of heavily optimized cloud micro-services and containers a sudden 5% increase across all apps would be prohibitive, I'll reinforce I'm talking about average uses, not IBM or Amazon.
Yes. I've provided a comparison here: https://bitbucket.org/cowwoc/requirements.java/wiki/Features
Meetings, procrastination and talking about doing stuff.
/r/cscareerquestions
You just summed up every software developer job!
"When will you finish" &amp;#x200B; "August" - no year mentioned
My life lately seems like going from one Agile ceremony to the next and trying to squeeze a bit of development time in between. You have the daily stand up, backlog grooming, sprint planning, poker planning, PI planning, the retrospective, the sprint review where you give a demo. It goes on and on. Then you have non Agile meetings like just trying to help some team member with a problem they ae having, or a weekly staff meeting. Don't forget the company all hands meetings where you get to hear about sales result over the last quarter. If you're lucky you get and hour or two a day to actually work, at least where I am.
Reminded me of https://github.com/nomemory/mockneat
An August. (They hear: "In August")
It really depends on the company. I've done a large company where it is 90% meetings, test and production support, with only 10% coding time. My current job it's the reverse.
Monday through Thursday, 15 minute stand up. Friday, other meeting across teams. The rest of the time is trying to deliver on user stories and features. We do retro, grooming, and demos on Friday as well. On a given day, after stand-up I might work on a story (write, debug, test code), pair with a junior dev, work on pipelines for CI/CD, check app monitoring, etc... Each of these is predicated on the priorities decided by our product owner and the rest of the team during Sprint planning. Only senior team members deal with Project Increment and scrum-of-scrums meetings. Your product owner and scrum master should be doing everything in their power to shield you from all other distractions.
&gt; In the private / small business world, PHP is also extremely popular They don't use PHP so much as developers, it's just the language Wordpress is written in. If I'm using Postgres as a developer, I'm also not using C, am I?
Assertj has SoftAssertions for aggregates.
Your assumption that I am talking about Wordpress is wrong. PHP comes out-of-the-box on pretty much every cheap webspace you can rent for a few bucks per months. Also, PHp devs are usually cheaper then other devs, because lots of students also do PHP stuff. That makes it very attractive in the private and small business world. That you can readily integrate/interface with Wordpress is just icing on the cake.
I would have to disagree with "similar"; Preconditions is bare-bones enough as to be aaaaaalmost useless. (It is only because you end up using it so many times that becomes a nice thing in the aggregate.) We've long felt that something should fill this space too (that valid4j and this tool fill). One thing I wonder is whether there is enough justification for this library and your \*test\* assertions library (like AssertJ or Truth) to both exist and be different. They do such very similar things. Our experiences with Truth have taught us how valuable the automatic message composition is. Moving to this model for preconditions isn't quite a no-brainer though, because all the good APIs always end up causing a lot of allocation. That allocation feels especially bad since most of the checks are never going to fail IRL, so they feel especially unjustified. If any of this is already addressed in stuff written about these libraries I apologize for that - haven't really had time to learn about them yet; we have had this topic "on ice" for a long time.
This is why we've never accepted predicates in Truth; the value is in the smart message creation. I also think that it can lead to spaghettifying code a little; we prefer to keep "check stuff" and "do stuff" as clearly separate activities.
I struggle with this as well. Our open office seating arrangements don't help either. 😩
Luckily I don't work in an open floor plan office, but I have a good friend who does. He bought a pair of the ear protectors that people at airports wear when directing jets around. He pulls them out when it's loud and puts them on to make a point. I don't understand how anyone can be expected to be a productive developer in an environment like that.
Would be nice to have \`asUuid().isType1()\` (time) etc.
Varies everyday where I work. I have multiple parts of the job A collection of stand ups, maybe a meeting to create stories to add to the backlog or write scenarios for existing ones. We probably have a couple meetings with various people (ops/infra etc) to check if our scenarios work for them / if they have any additional requirements for a story. Then a meeting with the business to check the scenarios are ok /push back and say the feature is total bs. Some head down earphones on development time, and then code reviews on your work and peers work, mostly as a merge request, other times we'll have a meeting to demo code and pair to complete, sometimes if we pair from start then we generally just merge as soon as ready. Day to day is any number of the above, very rare that you could get a whole day of development. I'd probably say 50% is actual development. It's not all bad though because making sure a story or feature is right upfront is better than just doing it and having to spend double the amount of time rectifying it later when you realise its a poor design/requirement. Additionally I am part of 5th line support, so an on call every 2 weeks in 4. If any late ones, I'll generally get the day off following day.
Hi Kevin, I addressed the allocation problem you mentioned using `assertThat()`. If assertions are disabled, only the first statement allocates. All subsequent methods use no-op singletons under the hood. Have your cake and eat it too! Requirements API is made for you :)
I wasn't aware of that either. Very nice!
I'd be happy to add it. Please file feature requests at [https://bitbucket.org/cowwoc/requirements.java/issues/new](https://bitbucket.org/cowwoc/requirements.java/issues/new) &amp;#x200B; Thanks!
Yes, that would actually be way easier than this was.
Very apt.
There's no "day in the life" every company and every role is different. Back when I was a dev , I'd have a bunch of different things on my plate every day.
Coffee breaks and sometimes a little code in between
I arrive ar 8:00. PR reviews in the morning. Meetings till noon. Eat. Coding and testing till 16:00. Relax from 16:00 till 17:00. Sometimes PRs at night.
There isn't really a great solution to that because the whole point of a Predicate is to inject a test somewhere that doesn't know anything about how the test is performed but just needs to know whether it passed or failed. The only one who knows why the predicate failed is the person who wrote it. I'm not sure there is an *elegant* solution, but I might consider something like this: ```static public &lt;T&gt; ObjectVerifier&lt;T&gt; requireTrue(Predicate&lt;T&gt; predicate).orElse(String failureMessage) ``` That's not ideal because the error message and predicate are uncoupled -- the predicate could be altered without someone bothering to find and change all the error messages. And any attempt to combine the predicate and error message into an object defeats the use of lambdas. So I don't think there is any better solution.
I work in open space environment and most of the developers using some earphones or even headphones with noise cancellation. If needed communication happens in Slack so no problem with getting attention of someone
One of the things I've decided over the years is that this API isn't meant to capture all use-cases. Even in my own work, I always have a few checks that I code by hand they because cannot be expressed elegantly in a more general fashion. If you have a common use-case that you think could be useful for others, drop me a note and I'll happily add it to the API. Otherwise, there is nothing wrong with coding the check by hand.
First of all: great work! This is some really fleshed out stuff you show us :) &amp;#x200B; As you asked for criticism * I dislike the presence of `*Impl` and `*NoOp` of every validator and I feel like there has to be a way to work around this duplication * You have many public facing classes that don't seem to be of interest for the user, like all `*NoOp` classes. I would make all of these classes package private if possible (it seems it is possible, I may be wrong though). They pollute my IDEs importing assistance and my ability to traverse the user facing code as I myself should probably not work with the `*NoOp` classes directly. * You don't follow [PECS](https://stackoverflow.com/questions/2723397/what-is-pecs-producer-extends-consumer-super) in your public APIs which is a must for this kind of generic library code. To explain briefly: imagine your API would allow for a `Predicate&lt;T&gt;` when validating each element of a `Collection&lt;T&gt;`. If you just accept `Predicate&lt;T&gt;` instead of `Predicate&lt;? super T&gt;` I could not pass a `Predicate&lt;Object&gt;` (or any other supertype) as its bound does not match. This is only an issue if someone explicitly assinged a generic function to a variable with the exact type of `Predicate&lt;Object&gt;` method references like `Objects::nonNull` get automatically adapted even though their method signature would imply a `Predicate&lt;Object&gt;`. I know its cumbersome but you really should do it as every JDK standard library API makes use of it (see the `Stream` interface for example) which makes it quite surprising when stuff that works with the standard library doesn't work with your library I hope I don't sound snarky or something, great job :)
Look like you are doing work while the decision makers(whoever that might be on your project) iron out what they actually want you to do and rush whatever they can write out within a couple of hours. Then let the testers go insane and try to debug before delivery.
Is it like where if you shift your eyes a few inches you can make eye contact with someone across from you? I can live with the noise of a cube farm, but that would drive me nuts. I want to pick my nose sometimes.
Luckily I'm working in two research projects and not responsible for earning the company's income. We use these projects to expand our skillset. Last year I got my bachelor and got employed. So far I have learned a lot about pipelines, ci, cloud services like AWS or azure, docker, some message brokers, clustering, embedded/iot, sensors, actors and some more. In general I'm not in stress at work. About half of my time is actually coding. The rest is discussions with coworkers on current problems, learning about yet unknown technologies, internal meetings, meetings with project partners, documentation and architecture. In the beginning I thought I don't want to get involved those meetings with other partners, but actually they're not bad at all and everyone will be heard, because it's research. Meetings with actual customers are different, though. I have flexible work time and home office when I need/want to.
When it isn't a team planning/elaboration day. 1. Follow up on emails from previous day - as a lead, there's probably more of this for me than most team members 2. Pull Request Code review - helping devs get their branches mergeable. Everyone does this 3. Stand-up with the whole team (what're we working on, expecting to deliver today, any blockers) 4. The rest is a mix of - Feature planning - taking loose requirements and helping turn them into stories we can get on the backlog for planning. This is building out the project backlog from which we select stories (based on priority) and elaborate how we'd achieve them. - Bug triage - dealing with bug reports and ensuring they have enough information to progress. Maybe even reproduce and advise if there's a workaround that might deprioritise them. bumping priority up if we realise that it's something that could cost more with delays. - Cutting code - working on whatever cards I have assigned or pulling one from the queue of elaborated cards (work approved for the sprint). This also involves dealing with whatever brain-fart was picked up by people reviewing my PR and resubmitting. - PR review of work delivered earlier in the day Other days there are things like planning activities with the team (a couple of these every fortnight - though they're not often whole-day affairs) , deliveries to acceptance, executing a release. As we're a services company (providing consultancy, development and maintenance for other businesses), some days involve some or all of this over several projects in the development/maintenance phase and consultancy on others. Usually the focus as we try not to dilute productivity with too many context switches.
Which do you prefer?
This is pretty much how my day goes too, as one of the non-lead team members with the exception of: * Not much emails. Lead takes care of that shit * Personally for me writing a lot of documentation
Every day I go to the office is like this. When I'm remote I can write some code.
Arrive. Fill coffee and water. Finish leftover work from previous day. Code for a while. Sometimes a stand up. Code until lunch. Eat lunch, read a book. More code. Sometimes a sprint plan on the fortnight. Finish what I can and try to leave something just near completion so I can jump right back into things the next morning. I'm fortunate that I'm currently on project work so my duties are pretty clearly defined. Also found a good set of noise cancelling headphones helps me keep my head down and get on with it.
Please use egyptian braces.
I think you’re missing a big point, maybe THE point in the difference between messaging and streams. It’s ordering. Streams have order, queue items and messages do not. If you don’t need order, that’s great- you have options and those options don’t need to synchronize to any single clock. It scales and each message or event is independent. Sometimes you do, and then queues will not suffice.
You forgot browsing the internets.
Hi roookeee, &gt;I dislike the presence of `*Impl` and `*NoOp` of every validator and I feel like there has to be a way to work around this duplication (especially for the NoOp variant) I would be very happy to find an alternative as it would save me a lot of development effort :) The goal of the `NoOp` classes is to ensure you pay a low overhead if assertions are disabled. If I were to eliminate these classes, you'd end up paying a very high overhead in terms of execution time and garbage collection. &gt; You have many public facing classes that don't seem to be of interest for the user, like all `*NoOp` classes. I would make all of these classes package private if possible (it seems it is possible, I may be wrong though). They pollute my IDEs importing assistance and my ability to traverse the user facing code as I myself should probably not work with the `*NoOp` classes directly. I suspect there is a misunderstanding here. If you take a look at `java/src/main/java/module-info.java` you will see that the classes in question are not exported. They don't show up in the Javadoc either. Your IDE's auto-completion engine shouldn't be showing these classes. Is it? &gt; You don't follow [PECS](https://stackoverflow.com/questions/2723397/what-is-pecs-producer-extends-consumer-super) in your public APIs which is a must for this kind of generic library code. I'm familiar with PECS though I admit I've rarely used it in practice. I believe the only place I've used PECS is in `ExtensibleObjectValidator.isOneOf(Collection&lt;? super T&gt; collection)`. It's quite possible that I've overlooked a method where it should have been used. Can you please point to a concrete class/method in the API that you think should be using PECS and does not? &gt; I hope I don't sound snarky or something, great job :) You don't, and thank you! :)
I get a ticket to do a bug-fix/feature request. There is almost always a server component and a client component, so I start work on the client. If I'm lucky, the code follows some sort of common (not best) practice and I can look at how similar things are done elsewhere. Sometimes, though, I must delve deep into the minds of my forebears -- a truly terrifying proposition. So I get widgets created and modified and placed, and then move on to the controller. Then it gets really fun because I have to go back and forth between the client-side service delegate and the actual service. This is where it all goes to hell, because I probably do need to do some database work. The table is no problem... But Hibernate? There are at least a dozen ways to get data or of it, most of them are deprecated, and we use *all* of them. Raw SQL? It's in there. Detached queries. Criteria queries. HQL. We have annotated *and* mapped entities (pro-tip: an annotated entity apparently can't have a mapped subentity -- learned that the hard way) No matter what I need to do, it's either not been done before or it's deprecated and I have to redo it using JPA, and everything I search covers part of what I need to do in one technique, but then I can't find a way to do the other thing except in a completely different way. I spent a chunk of several days trying to figure out the magic syntax to match an entity only if one or more subentities matches a given value. Then I spend a bunch of time documenting what I learn because I know damn well I won't remember next time. So now my stuff is done and I have to merge to the dev server -- and that's horrible because it has been weeks and a bunch of tickets have been merged in and some of those files are touched a *lot*. So I spend the better part of a day just trying to resolve merge conflicts and try to remember if a particular change belongs to me or someone else. And also I have to figure out why my local build inevitably stops compiling because of some incompatible change in one of the 30 or so projects that compose the application. Then it's off to code review and I grab a new ticket... But not so fast there because code review probably turns up some cleanup I've forgotten. Commented lines left in. Hardcoded value that need to be lookups. Ambiguous naming. So finally I make my changes, merge to QA and get to work on my next ticket. But not so fast because requirements were not communicated well, or I've broken some thing I had no idea was related -- or that it was even a thing the app could do. So I do some bug fixes, maybe go a few rounds with QA with just enough time between to forget everything about this new ticket, which I'm probably working concurrent to the big fixes which will be fun later when I somehow commit the wrong thing under the wrong ticket. I'm proud of some of the stuff I've done and mildly embarrassed by other stuff. I bitch a bit about the shitty parts of the codebase, and wonder if I'm on the verge of getting fired because a thing I expected to take less than a week took a couple of months. Finally, I start working on the new ticket for real, even though it's been a week or more since I've "started" it, so I probably already have more time booked against it than my original estimate.
My team just adopted Agile last year. It baffles me that management thinks it's better than what we had before. I guess at their level they see more status points which makes it seem more productive.
You have feet, too. Only noobs use a computer without both hands and feet. Keep telling yourself that I don't know what I'm doing. Eventually it will be true. When I'm 97. Then you'll jump up and say I told you so.
Depends on the team and projects really. Currently I'm on a team that's building a new system. So there's a lot of development work with very little operational work. We have a couple design reviews over the week and a few other team meeting. All other time is spent on developing software and doing code reviews. A lot of time also goes in testing and refactoring, even in a new service. I'm also actively mentoring some software engineers who are starting out so a couple hours of meeting and brainstorming with my mentee every week. However, on my old team, we spent maybe 20% of our times coding. Everything else was spent on operational work. Both teams in the same company but quite a few differences there.
More looking at code than actually coding. Also meetings
The point of agile is not to have more or less meetings, but defining requirements in bits and pieces as you get to them, as opposed to defining the requirements in a separate phase at the beginning of the project. Being swamped by the meetings is not the intent of Agile, and is something that the management is supposed to correct if they are worth anything.
It seems like they have implemented Scrum quite well in your company.
My first job had me working remote 4 out of the 5 days of the week. Software was written in a language called clarion. My project manager kept me busy and I learned so much from that job because it was all work work work... i loved it, now I'm hearing how software devs basically attend meetings all day... I'm at a bootcamp right now because I thought it would be better for me to be learning newer and more current technologies. I'm hoping I can find a similar job that doesnt make me feel lazy.
According to Gosling interviews, it was pretty much supposed to be Java, had Sun allowed it free of charge. Instead we got Android J^++, and now good luck using any of the nice modern Java features, including what you are working on, on Android.
 I had to leave my last job that was an open office layout. Too much noise - we all just wore headphones and tuned each other out rather than "Collaborating", which was the alleged intent. I think it's just Mgmt's lazy way of keeping an eye on everyone. Collaboration in open office layouts is a pipe dream.
Cocaine, women, expensive cars and business trips with first class. Wtf? Did you expect when asking this question? You'll be staring at the monitor like everyone else.
He's wearing a dress.
0. Go to my office 1. Log into computer and check email 2. Open my time tracking excel sheet (We are required to log our hours at work accurately because different projects have different budgets) to remind myself where I left off yesterday 3. Eat Breakfast at desk while browsing Reddit or emails (if there are a lot / requires my response) 4. Continue from yesterday be it bug fixes, replicating bug issues, implementation for new feature. (Using Java EE and Eclipse IDE) 5. Lunch 6. Continue user story (Scrum methodology where I work) 7. Maybe some meetings here and there, always daily scrum though. 8. Continue user story work in Java 9. Log my hours worked and update sprint log if needed 10. Go home
Looks like the difference between AssertJ and Hamcrest. They each have their advantages and weaknesses. Namely API discoverability vs ease of extending matchers/assertions.
???
In my experience with working with Agile, it really depends on the scale of a project. Sometimes 50/50 is fine, sometimes you need to spend 70% of your time on meetings. Sometimes just 30% of your time. The meetings aren't always formal, sometimes they can be as small as just walking to someone's desk to talk about a specific function. Communication is important when coding in teams, so there has to be a balance. The bigger and more complicated a project is, the more it requires a team to communicate.
We also talk about how inept the customer is.
&gt; it was pretty much supposed to be Java, had Sun allowed it free of charge. ... and free of GPL, I guess.
I think a 75/25 meetings/developing is a good goal. It's more time doing what we all (should) enjoy, but doesnt sacrifice necessary planning.
I’m working on a greenfield project that involves experimenting with some new (to us) technologies, so there’s been a learning curve. My work days start with a daily scrum and then we put our heads down and code. Occasionally one of us has an issue so we collaborate to try to resolve it. Also we have some other meetings to discuss design and milestones. I used to be in a team that received a decent amount of support tickets so sometimes we’d have to triage it right away.
Brilliant work! I understand it's a research project, but have you considered integrating your SA tool into the [JMH archetype](https://hg.openjdk.java.net/code-tools/jmh/file/99d7b73cf1e3/jmh-archetypes/jmh-java-benchmark-archetype), so that each new benchmarking project performs the static analysis of the benchmarks on each build?
Brilliant paper, thanks! It might be even better to integrate your plugin with the [JMH archetype](https://hg.openjdk.java.net/code-tools/jmh/file/99d7b73cf1e3/jmh-archetypes/jmh-java-benchmark-archetype) that is recommended to be used to generate the benchmarking modules, as I doubt even the Spotbugs users add Spotbugs configuration to their benchmarking modules. This way each new benchmarking project generated with the archetype will have a proper SpotJMHBugs configuration and check the benchmarks correctness on each build.
It may be because I am on mobile, but at first glance I cannot find the difference between requireThat and validateThat. Is it that the former throws Exceptions and the latter does not?
Ahh I'm still in the Java &lt; 9 groove so I expect every public class to be public :D Will give your NoOp stuff some thought. Regarding PECS: I just saw many generic functions which only take T instead of ? super T and suspected there might be an issue down the line - but if you are aware I figure it's done where need be.
`requireThat()` throws an exception on the first error. `validateThat()` aggregates the failures and returns them all at once: https://bitbucket.org/cowwoc/requirements.java/wiki/Features#markdown-header-multiple-validation-errors The validation pattern is common on frontend form validation.
This game looks great. I would suggest adding keyboard shortcuts for the choosing items and actions available. That would help the flow while playing so it feels a lot smoother. It kind of looks annoying to have to navigate the menu with your mouse
Proof of concept, no requirements, domain changes monthly, notes I took 4 months ago are useless until all of a sudden they decide it’s relevant again. Rinse and repeat. Oh, and then i get asked why it’s taking so long.
Yup, thanks for that, true: https://www.graalvm.org/docs/reference-manual/aot-compilation/ &gt;&gt;&gt; GraalVM native-image supports JVM-based languages, e.g., Java, Scala, Clojure, Kotlin. The resulting native image can, optionally, execute dynamic languages like Ruby, R, or Python, but it does not pre-compile their code itself. Polyglot embeddings can also be compiled ahead-of-time. To inform native-image of guest languages used by an application, specify --language:&lt;languageId&gt; for each guest language used (e.g., --language:js). &lt;&lt;&lt; I hadn't tried it, thanks for correcting me. However, I think the really interesting but will be if they make a SubstrateVM implementation for the native Android OS. That's where the true power of the platform will be unlocked, and it won't matter what language you use. Here's hoping...
&gt;The point of agile is not to have more or less meetings, but defining requirements in bits and pieces as you get to them, as opposed to defining the requirements in a separate phase at the beginning of the project. It's much simpler than that. True agile means that you should find the simplest process that works for you / your team. It's not about bits and pieces or sprints it's about being as lean as possible and not more. People over processes. The original manifesto has been perverted by consults and companies since the bean counters cannot comprehend and control an organic way of achieving results. They always want to have a process, a ruleset to manage people. Competent people don't need managing. You only need to give them a task and they will find a best way to achieve the goals. They might even find better goals than were originally defined. &amp;#x200B; Here's the original agile manifesto: # Manifesto for Agile Software Development We are uncovering better ways of developing software by doing it and helping others do it. Through this work we have come to value: **Individuals and interactions** over processes and tools **Working software** over comprehensive documentation **Customer collaboration** over contract negotiation **Responding to change** over following a plan That is, while there is value in the items on the right, we **value the items on the left more.** [https://agilemanifesto.org/](https://agilemanifesto.org/)
Well, I'm still puking IBM didn't step in and offer... they were thinking of it, but took too long and assumed they would be in trouble with anti-trust laws. Oracle was the worst possible owner... i warned at the time, and it turned out exactly as I warned. IBM was in a battle with Microsoft (since then, ironically Apple cut Microsoft down to size), and Java was key to IBM staying in the fight against .net on the servers. Oracle just wanted Sun for Solaris, because Solaris was the only serious deployment platform for their DB, and they hated Java. They'd sat in the standards committee's sabotaging it for a decade, and it was leaked during that period that they planned to sabotage Java because they saw it as *helping* their competitors like IBM (IBM was competing against MS .net, and Oracle DB). IBM may be slow and ponderous etc, but they've been a great steward of open source projects. Unsurprisingly, what happened once Oracle took Java and a bunch of open source projects? They've starved them to death. If it wasn't for RedHat, Java would already be dead. All Java development is via OpenJDK, RH have kept the enterprise stuff limping along, and the Java roadmap is full of the most amazing things ever, but there is almost no project year after year as it's mainly done by OpenJDK members. GraalVM is the only visible part of the future JVM roadmap, the bit we're all desperate for is the Fibres, and that's no-where on the horizon... hence Java has lost heap of developer-share to Go, which is (sorry to say), one of the shittiest languages ever. At least AWS has stepped in to create viable supported OpenJDK builds now Oracle has started charging for it.
I believe at the very low level of swing, it is using windows api (on windows) to make a basic empty frame and then use java to draw everything (buttons, fields, other ui) over it. Lookup winApi. I assume it similarly uses either gym or some other toolkits to draw basic frame on Linux or other platforms and uses java swing to draw over it.
Afaik the latest swing code is using openGL for 2d. At one point it used direct draw, but I think the default is OpenGL now.
Has anyone used Micronaut in production? It sounds very very enticing
/u/uwutranslator
Try the javaws executable, in an JDK that still has it. I think it was removed in JDK 11. Might also only exist on either x86 or x64 builds, not sure. https://docs.oracle.com/javase/7/docs/technotes/tools/share/javaws.html
I get this: javaws -property os.name=Max uworldclient.jnlp selected jre: /usr/lib/jvm/default-java WARNING: package javax.jnlp not in java.desktop
Nice. Looks a bit like my [Hope and Doubt](https://github.com/martylamb/hope-and-doubt) library but richer. A change that I suspect would be simple for you to add is a way to retrieve the value at the end of your fluent chain so you can validate during assignment. I've found that to be a nice convenience.
You can get a `Graphics` object from a `Component` and paint on it whatever you like. I did make some custom-made GUIs doing that, like circular buttons (had to do the click detection using `MouseListener` rather than the usual `ActionListener` you add to buttons).
At some point the code has to drop into native implementation for the OS the JVM is running on, but Swing still lets you get pretty far down into the graphics pipeline. You can draw pixels into Rasters, and various other operations, and the JVM will still try to use GPU operations to keep things fast. Minecraft was originally written in Java FWTW. Here’s a good book https://github.com/rupali317/book/blob/master/%5BJAVA%5D%5BJava%202D%20Graphics%5D.pdf
What's your output of `java --version`?
Swing is so-called 'heavyweight': Virtually all elements draw themselves, (oversimplifying): Pixel by pixel. &amp;#x200B; Contrast to AWT which was lightweight: java.awt.Button is farming out the job of rendering a button to the OS and you'll get the OS's style for it. You can't change what it looks like either. &amp;#x200B; Swing, being heavyweight, lets you do whatever you like: You can install a look and feel to make the app look like, say, a candybar style mac os 10.2 variant whilst running on windows, if you really want that. Swing is drawing it all. &amp;#x200B; swing is in fact built on top of AWT. AWT's 'I wanna draw it myself' element is \`java.awt.Component\`. Just about every swing widget is a subclass of \`javax.swing.JComponent\` which is itself a subtype of \`java.awt.Component\`. You can write your own widget: Extend JComponent and implement the paint method. Or better yet, extend jcomponent and set the delegate that does the painting. There is A LOT to think about when making widgets (such as accessibility). &amp;#x200B; For example, look at the source of \[[https://github.com/openjdk-mirror/jdk7u-jdk/blob/master/src/share/classes/javax/swing/JComponent.java](https://github.com/openjdk-mirror/jdk7u-jdk/blob/master/src/share/classes/javax/swing/JComponent.java)\](JComponent) and check the javadoc, it has plenty of hints. Then have a look at some implementations of widgets, such as \`JTextField\`.
Minecraft is still written in Java.
Swing is built on top of the AWT. See [this StackOverflow answer](https://stackoverflow.com/questions/408820/what-is-the-difference-between-swing-and-awt) for a detailed explanation. To make a GUI of your very own devising, you can instantiate a window and draw to it via the `Graphics` or `Graphics2D` interface, as u/daniu suggests, or you could find another library, like [JOGL](https://jogamp.org/jogl/www/), and use it to create a window and paint to it. In the case of JOGL, you may still create your custom-drawn GUI components inside of an AWT Window or Swing JWindow, which would be the parent of whatever OpenGL surface you do your actual rendering on.
This. I built a map renderer using it waaaaay back when swing was new to java that is still in use today. Graphics2d has some niceties that you will probably want to use as well.
&gt; Swing is so-called 'heavyweight' Swing widgets are lightweight, AWT heavyweight
edited
Not that I am aware of right now, the tech is comparatively new to be picked up by businesses for production yet. Will update you on that.
Do the considerations change if the context is method precondition checking vs. unit test assertions? (Every time I see something about *Truth* I hear internally, "You can't handle the truth!!")
[It is, but it originally was, too](https://cdn1-thr-com.cdn.ampproject.org/i/s/cdn1.thr.com/sites/default/files/2018/06/gettyimages-74714565-h_2018.jpg)
Tutorialspoint or dzone. Names could be wrong but if you google them, you'll find those websites.
Cool library name! The feature you requested already exists. I just added some documentation to help others find it: [https://bitbucket.org/cowwoc/requirements.java/wiki/Features#markdown-header-getting-the-actual-value-after-a-verification](https://bitbucket.org/cowwoc/requirements.java/wiki/Features#markdown-header-getting-the-actual-value-after-a-verification)
I agree with those 2, just want to add javatpoint as well.
Such questions belong in /r/javahelp, not here. **Removed**
a guy named bucky, "thenewboston" on youtube thoughts, comments anyone? his java series is ok, kinda brief but its how i personally got into java. Also he has done a series on python and a few other languages.
I saw the same thing, but this could be a great opportunity for Lilit! Figure out how can you help the Github team doing this do it better (perhaps maybe they'd acquire you!).
Too bad he vanished
yeah.....terrible drawing
&gt;DECLARATIVE, REACTIVE, COMPILE-TIME HTTP CLIENT @Client("/hello") public interface HelloClient { @Get("/") Single hello(); } This is nice but what's the difference between this and [retrofit](https://square.github.io/retrofit/) on a technical level? Retrofit is very stable and pretty popular covering most if not all of http client edge cases.
openjdk 11.0.3 2019-04-16 OpenJDK Runtime Environment (build 11.0.3+7-Ubuntu-1ubuntu219.04.1) OpenJDK 64-Bit Server VM (build 11.0.3+7-Ubuntu-1ubuntu219.04.1, mixed mode, sharing) I've also read somewhere that Uworld uses jxbrowser?
Don't try it with JDK 11 or newer. Support for web start was officially removed from JDK in 11. Go for an older JDK.
Isn't this the one that's widely criticized for teaching bad practices?
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
\&gt; why? for the glory of satan, of course!
Tried OpenJDK 8 and won't open the jnlp file
Someone downvoted both of these comments but isn't saying why. I don't get it. I use all of these as well. I find myself on dzone all the time.
I have been using him through java and c++. The videos can be very brief but they get ya started, also pretty funny.
Just an armchair guess in the dark. One is a library while the other is a whole framework with various other features.
I'm really stoked they rolled this into grails
I tried using sudo apt-get install openjdk-8-jre and it will install but when I then install sudo apt install icedtea-netx it automatically updates java --version to openjdk11 When I open the jnlp file now, it opens....but then nothing shows. It's just a blank screen. I see the uworld splash screen but nothing else. It also auto-made this desktop file that says this [Desktop Entry] Version=1.0 Name=UWorld (JxBrowser) GenericName=Java Web Start Application Comment= Type=Application Icon=/home/alex/.config/icedtea-web/icons/uwicon.png X-Vendor=UWorld Exec=javaws "http://www.uworld.com/clients/17/UWorldClient.jnlp"
I expected an answer like literally everyone else’s answer. Simple. Didn’t mean to ruffle your feathers, guy.
Right on bro. Thanks.
That’s legit. How did you like working remotely? Idk if I could handle it tbh haha
Thats cool bro. Were you assigned that mentee?
I have heard that meetings with clients are very tedious in my past internships.
Haha shit. I feel for the testers
Sounds chill. You like it?
Sounds solid. Only if quality of coffee is good
The day off thing is a solid perk tbh but with the trade off of being called late at night. How long have you been in the business if you don’t mind me asking? Thx for answering bro
Sufficient coffee is good enough :) On my current job, I'm getting good coffee for free though :&gt;
Hahaha the notes thing bro. Haha. I’ll keep my notes saved. Thx for the tip.
Sounds like I kind of expected tbh. I’m glad your manager is not breathing down your neck. Thx for response dude
Interesting. But I guess that kind of helps understand the purpose of the code?
Yea of course but I was kind of hoping I could pick up on what it’s like for you guys with experience.
Of course yes. But regurarly you get frustrated by the shittiness of that code
Woah that’s wild bro. You’re a beast though. That’s a lot. I’m legit worried of that feeling at first of being fired for taking too long at something. How do you overcome that? Thx for response bro
It seems like the noise canceling headphones are a necessity and mentioned a lot in these posts. Is it really that chaotic? Thx for your reply bro
Thanks for the resp dude. Legit insights.
Documentation seems boring dude. But necessity.
How is it working with a junior dev?
Haha sounds like my life without the meetings. I should fit in.
Sorry bro. No idea, but thanks.
Damn that’s drastic. You think junior devs would be in these meetings or nah?
It seems open office is a growing trend
Thats a drastic change. I hope you enjoy it bro
We have it running several small apps in production without any issues
Derek banas on youtube
Dudeee you’re living the dream. lol Perfect balance
Haha fuckkkkk I can imagine dude
(context: nine employee company; we make a niche industry desktop erp; this company has been around maybe twenty five years, in various incarnations) 30 min morning meeting to decide on today's tasks. I'll work on these the rest of the day. Sometimes, both customer service are busy so I'll take a support call, or they'll kick it to me when it's something they don't know. If the owner is in town, we may get together more during the day in between each task so he can relay requirements. I take breaks as I see fit. As far as my tasks, sometimes I'm diagnosing unexpected behavior. This'll involve a conversation either with a client's employee or one of my coworkers to get an idea of what's happening and how to reproduce it. I'll walk the debugger to that point and see if I can figure out the divergence. Sometimes I'm changing a client's report designs. That'll mean sussing out requirements, even down to 'where on the screen are you saving this value?' changing the report, backing up the old version, deploying it, rendering a new example, and notifying the client that it's changed. A couple of times in the year, I'll be tasked with implementing a new feature. We'll have discussions about the behavior at various points beforehand. I'll be allowed time to write a spec, basically for meditation rather than team consumption. Then I'll have a week or month wherein I'm laying down infrastructure and reporting on progress toward the agreed milestones. As it gets toward the end to where visible behavior is evident, I'll probably go over it with the owner or customer service, to ensure my understanding of the requirements still ring true. Sometimes I'll update our client's copy of the software. That'll involve making an appointment for them to be down during lunch (or after hours, if we haven't updated them in a while), exporting new table definitions, prepping a bsdiff of the new version, checking for one off data scripts we've published since the update, backing up their table definitions, backing up the database itself, kicking out straggler users, migrating the table definitions, replacing the software, testing by hand for regression, notifying them that they can continue using the system. Rarely, I'll find something during the test - reports not rendering, records not showing up - and make a hotpatch version or send the expected, unpublished data. At the end of the day, I'll log my hours and update issue status, plus a debrief email for the owner. There are other aspects that come up more rarely. I'll do some IT in the office; my coworker and I may pair on some intractable problem; we'll have longer hr type meetings. If you're concerned about the actual mechanics of a coding task, I assure you that it's just like hobby, school programming. We use jira, git, github, ms sharepoint, various screen sharing apps, remote desktop connection, various dbms clients. The most intimidating thing I use is a code editor for Basic changing some of our code gen, as I only have minimal documentation for it. I use java and sql predominantly, a smattering of javascript, and basic, rarely. Presumably, with different policies and procedures, some of this would be different. If we invested more in some of our deployment and testing infrastructure, perhaps some of this would be automated. Some of that underinvestment is my 'responsibility' in the sense that I would need to advocate for time.
There's lots of resources that make working remotely just as effective. We used either Skype or zoom to connect if I had questions, and git for merging new features or bug fixes, into the software. I was comfortable with my home set up so I liked it.
There's lots of resources that make working remotely just as effective. We used either Skype or zoom to connect if I had questions, and git for merging new features or bug fixes, into the software. I was comfortable with my home set up so I liked it.
Is retrofit only for http client? From what i read in the article, micronaut is for http server, right?
That's probably intentional. :-) nah, I think in both cases if you can't make a good message automatically then there's no big advantage over just taking a plain old boolean a la Preconditions etc. imho.
Also - get requirements upfront. Having no requirements = pain in the ass
I think they're talking about the page logo. The man with the laptop opened. If you blur your vision it seems like a guy with a dress. Nevermind, good post
We’ve been making steady progress every day so I haven’t felt any pressure to get something specific done by a deadline. Of course, we have to deliver something eventually, which is why we had meetings to discuss what can be delivered as an MVP.
I wasn't assigned a mentee in the sense that it wasn't an official thing really. But I've been a mentor in other more official forums and women in software development groups earlier :)
I'm guessing the client is generated at compile time vs the proxy that retrofit and most similar libs implement.
This is not quite the right subreddit; as the sidebar says, this subreddit is for: News, Technical discussions, research papers and assorted things of interest related to the Java programming language NO programming help, NO learning Java related questions, NO installing Java questions, NO JVM languages! There's /r/javahelp which I think is the right subreddit for this.
Maybe not a necessity, but for those days that the background noise interferes with work they're a help. Especially if you're trying to focus and you get on a nice flow it helps keep me in the zone. I work well listening to music tho, in particular game soundtracks.
Thank you
I've been a developer for almost 20 years and I can't say that I've really overcome it. But I'm getting profit sharing bonuses and being given greater responsibilities and I know they wouldn't do that if they didn't have faith in me. I just switched jobs a year ago and to a degree I'm still getting up to speed, and I'm fortunate boss had a lot of development experience so he knows how difficult the code base is. Basically I just have to trust the evidence over my own insecurities.
Hi can you explain what the Scrum is all about? Is it just a team brief?
I feel you. In school I would listen to music while programming. It just got me relaxed and kind of put me in that state of mind. I listen to like chill step. Game sound tracks? Interesting.
That’s awesome man! Like fr. Thanks for taking the time to respond. Yea I would imagine the greater responsibility the more trust that people have on you. I get that. Trusting the evidence that you know what you’re doing over what that little voice says. Any tips for those of us just starting out?
That makes sense. I guess technically the pain in the ass would be that essentially you would have to scrap a oF your work if it doesn’t fit the reqs
That’s so awesome man! Props! Any tips you can recommend on finding a mentor in my line?
Why?
That makes sense dude. I guess maybe I’m just associating it with my at home work habits haha. I’d rather be in an office setting but maybe that’ll be different with experience
Makes sense. As long as you don’t stagnate your learning curve would be steady. I’m glad dude.
Yea dude. I’m guessing these guys would be able to give you more of an insight, but essentially from what I gather is it’s an informal meeting where you tell 1. what you’re working on 2. Any issues. 3. What comes next.
&gt; do you think we are moving rapidly towards a point where concurrent GC will be roughly equivalent to classic stop-the-world collection? Yes. I actually think we're already there as Azul C4, ZGC and Shenandoah are all available and stable enough for prod use (with a litle caution). &gt; resolve the highest overhead in execution (read barriers) Waaait. They did not (and cannot) remove the barriers. They simplified the implementation a lot so that the GC code and logic is now simpler, and they arrive at the most optimal generated code without much optimizer work. Execution time-wise, I believe the difference is exactly zero, or very close to it (compiler has to do less work, that's good). But we'll need to wait for a new talk from the team to set this exactly straight. &gt; eliminates the highest overhead in memory usage (forward pointers) Yup! Big win! &gt; Shenandoah might as well become the default JDK GC I personally do not think so. The reason is that G1 is nicely set in between pure-throughput GC (the Parallel GC) and pure-latency GCs (ZGC, Shenandoah). Therefore, it's probably a good default going forward (unless the implementation of ZGC/Shenandoah becomes so good to overcome their theoretical disadvantages). If you have a CPU-bound data processing task which does not care about latency, the Parallel GC is there for you. If you have a webserver with lots of free CPU, you obviously care about latency a lot and ZGC/Shenandoah might be a solid choice! By default G1 is good, but not perfect, for everyone. And, obviously, everyone's workload is different, and will respond differently. Give different GCs a try and you'll see.
Not much people write games in java, but i mean it works, especially with lwjgl or something similar
I don't know if I have any special wisdom you haven't probably heard a dozen times. Don't be afraid of challenge or to feel a little out of your depth -- if everything is easy your knowledge is stagnating instead of expanding. Frameworks and libraries make things easy, but it's worth spending a little time getting familiar with more primitive techniques to help you understand how they work so they feel less like black magic and more like something you could write yourself if you had the time. And work on the skills you need for the next job you want or the skills you need to do the job of the person who wrote the part of the code you hate. And try to understand the architectural intent and follow it instead of just getting the job done in the fastest or easiest way. Doing it the wrong way contributes to technical debt and makes the app worse for everyone to work on. And, sadly, much of that advice doesn't hold if you are a contractor who is going to deliver a project and leave. It would be nice to take pride in your work, but your boss usually wants to deliver the minimum viable product for the lowest possible price. It puts food on the table and experience on your resume, but that isn't a situation you want to stay in. Do the best that you can but sometimes you have to accept the customer isn't paying for quality.
It should be fine, but these days I'd probably dive into Unity. Depends what you want to do though. If you want to make a real old-school-looking roguelike with character based graphics that might not be the best way to go. I did start looking into making a roguelike around 2005 and started checking out JCurses for that, but I didn't get very far. There's also a well-known roguelike library called [libtcod](https://github.com/libtcod/libtcod) but I think it only supports C/C++ and Python. Hope that helps.
Thanks I'll check it out. Aren't all android app games written in Java or is that more android specific libraries? Would you recommend c++, c# or python instead? I figured Java would be the best fit as I know the basics, can get a window up, setup event listeners, variables etc.. And I could make an app to work in windows or an android phone(with some tweaking for gui).
C# for games is pretty popular to my knowledge, but u could check out some of the game engines that are pretty cool like unity and unreal engine.
Thanks, Ive used libtcod, years ago with learning c++, and life got in my way too, lol. Yeah it was a bit frustrating as that library was originally built for python and the documentation for c++ bindings weren't as rebust and some things were plain broken. Maybe that's changed, that was around 2010/1, that I tried that.
I think an introductory C++ book shouldn't cover GUI as the language doesn't include a GUI framework like Java does with Swing/JavaFX. Java is great for writing code quickly, but not great for writing quick code. If you're interested in learning Java, building an RPG is a great choice. If you're interested in game development, Java is not a great choice. I suggest learning frameworks/libraries via tutorials followed by exploring the APIs, Googling, and reading open source code. I also strongly recommend reading Joshua Block's Effective Java; it covers best Java practices that take a long time to learn via experience alone.
if you want to write a game that can run practically anywhere, and you are comfortable with C++, look into cocos2d-x it's awesome.
I think yours is my favorite response XD
Check out [LibGDX](https://libgdx.badlogicgames.com/), it's an actively maintained Java game development framework that's able to target PC, Mac, Android and iOS. Under the hood it uses whatever rendering and input handling backend is appropriate for the target platform, such as LWJGL on PC/Mac. It does a lot of the legwork for you so you don't have to reinvent the wheel and you can just focus on making the actual game. If this sounds interesting, you can join their [Discord server](https://discordapp.com/invite/6pgDK9F) too if you want a place to ask questions or look at all the amazing work people are showcasing there.
Yeah that was a long time ago. :) I'd definitely give libtcod another look.
&gt; They did not (and cannot) remove the barriers From the material you've sent me, my understanding is that they fully got rid of read barriers and are using on-definition barriers instead.
I am Very lucky that I don't have to attend meetings with costumers. That w Really sucks. But the work and meetings in research projects are really really chill
http://www.java-gaming.org/
Shut up shill.
yes
Thanks, will check it out.
Yes it would be fine. Check out LibGDX.
Im 40, I don't expect to get into AAA game dev, I threw that dream away a long time ago when I seen how cut throat that industry is with having to move and change jobs all the time. It's why I moved to web design html/css for years and then desktop support which I am getting tired of but it pays the bills. Really this is for fun and to see if I want to get back into serious coding. I wouldn't mind doing Android based games or hell even business stuff if it meant I didn't need to move all the time. That's far down the line though, and for now I just want to do it, even if it doesn't amount to anything but learning, as I have always enjoyed coding here and there for fun. I started back in 1989 coding simple graphical display patterns and games in basic on dos and always wanted to make a rpg/rogue like. Anyway thanks for the tips and suggestions.
Minecraft was written in Java using [Light Weight Java Gaming Library](https://www.lwjgl.org/)
To parrot a few other people on here, libgdx is a good place to look. I’m using it now for some lightweight game development, and while for me it has a hell of a learning curve, once you get moving it gets a little easier. Documentation though does feel a little bit harder to access than other things.
I love mentoring junior devs. I try to make sure they understand that you cannot learn it all in a day/week/year, and I try to parcel out work which helps to reinforce what I teach. We also follow the practice of positive code reviews, where people shouldn't use negative words or try to show off their obscure knowledge in code reviews. It's all very effective.
We are going to for our next service.
Checkout Zircon -- it's made for doing rogue-likes https://github.com/Hexworks/zircon
No problem and yeah my manager is very nice. I enjoy working with him.
It looks like in your [submission](https://www.reddit.com/r/java/comments/ccy03g/does_anyone_ever_wish_for_better_metaprogramming/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
However, if you use Unity, don't advertise you're using Unity. Conceal it, because Unity has a bad reputation among gamers as a platform that pumps out shitty games.
a language is just a tool, you can do it in brainfuck if you hate yourself enough
If you want to write a game use a game engine like Unity or Unreal engine. Why spend time reinventing all the machinery to make a game when you probably want to concentrate on the game itself. These things are easy to pick up, there’s a tons of tutorials, demos, assets, and forums. They are used by both amateurs and top teams. For unity check out “Brackeys” on YouTube, and watch a few of their tutorials.
The problem with this is that the numbers are incredibly skewed. Good applications don't advertise what they're build with. Any enterprise system where penetration tests are being done will have you advertising that you're running on Tomcat version X for example listed as a 'critical vulnerability'. There is no objective way to measure popularity.
&gt; PHP is still the #1 for private websites and very small businesses. Citation needed.
Definatly a great suggestion! I hadn't thought of doing this yet but now that its mentioned it makes a lot of sense! Thanks for the input!!
You didn't mention it, but libgdx can also target Linux and, the part I find particularly interesting, HTML5/javascript via GWT.
Happy to help
You can write games in any language. That being said. Java is a poor choice for a game engine because it's difficult to control the garbage collector to the degree required to not ruin real time rendering.
Java works and is definitely a viable option. I do think there is a reason tho, that makes most bigger engine use c++/cs scripts.
Stable, fast, rich ecosystem, mature frameworks with ready-to-use enterprise features, easy to hire experienced developers for, no OS/vendor lock-in, commercial support available if required.
It's also really easy to use as little or as much as you want. I found some of it's scene related stuff complicated or uninteresting, so I just ignored it and built my own.
I graduated/started work in 2013, I'm still at the same company but moved internally a couple years ago. All in all nearly 6 years of experience.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Android games are mostly using C/C++ or engines like Unity which compiles down to C++.
I don't think this is correct. Many applications don't need that level of optimization. Applying adequate software patterns and good practices goes a long way. Frameworks like lwjgl are a binding to lower level software. Its just a level of abstraction and comfort.
Personal work experience in the industry.
Absolutely. The company treats me well and gives me interesting work and good pay.
Or like libGDX. Gives all the advantages of using an existing engine that you mention, but in Java.
Maybe that person thinks it's not good as an introduction to Java. Who knows though. My suggestion to OP is to first learn basic Java syntax (which you can learn pretty much anywhere) and then pick a topic (like I/O) on any of the websites posted and go from there.
You could also check open source projects to see how other did it. I am thinking of Pixel Dungeon and all its forks, a rogue-like written in Java. [https://github.com/watabou/pixel-dungeon](https://github.com/watabou/pixel-dungeon)
Thank you for the great examples. I'd also like to add on that the tooling, as in editors and such, part of the ecosystem is also rich and mature with many different options.
I'm currently creating a roguelike not using any engine. It's going great
There's a really great (but not tile-based) dungeon crawler game called [Delver](https://github.com/Interrupt/delverengine). Its engine is open source and uses as the base LibGdx, so maybe you could look up the RPG-parts for some inspiration I guess? (Depends on the license, if you want to go commercial with it.) I have a very basic skeleton of a [game] (https://github.com/Karkoon/duncrawl) which is roughly based on tiles but from the first person perspective. (I can't say anything about the code quality or anything, because I have no professional experience.) LibGDX supports [Tiled](https://www.mapeditor.org/ ) editor maps so you can "easily" (I've never used it) create some maps for your game. There's [Ashley](https://github.com/libgdx/ashley), which made it easier for me to separate responsibilities of code when I wrote my game.
Have you tried Unity? If you can grok java then C# should be easy enough for you.
I am running it in production. It is part of a rewrite project we are going through in a space and cpu constrained environment. I am writing this business logic in Kotlin and the tests in Groovy using Spock. Overall I have been happy with it. Combined it with OpenJ9 and it has a really low memory footprint.
Students also all get Java, so I wonder how relevant that really is. PHP being used so much more is not really reflected in the multiple language rankings out there. Stackoverflow puts PHP on 8 https://insights.stackoverflow.com/survey/2019#most-popular-technologies Tiobe puts PHP on 7 https://tiobe.com/tiobe-index On GitHub it's around 4: https://technostacks.com/blog/top-programming-languages https://octoverse.github.com/projects.html RedMonk puts PHP on 4 as well: https://redmonk.com/rstephens/2019/03/20/redmonk-top-20-languages-over-time-january-2019 Of course that accumulates over all industries, but most development these days is web development, and for larger sectors the numbers typically correlate. Only for very small specialised sectors the numbers can be really different (like vhdl being used for hardware designs)
SwiftSpear specifically his statement as referring to "real-time games" which I think is accurate. if you consider any real-time game with high difficulty or a remote being played seriously (Flappy Bird, Super Hexagon, Super Meat Boy, Super Mario Run) a random 0.1s lag spike or 2 skipped frames could be the difference between perfect play and a random death. That said since OP specifically said he's interested in developing games like tile based rogue likes, this caveat is probably irrelevant
Those statistics all really do not tell you anything about the relevance of those languages in the different industries. The Enterprise sector for example is much bigger then the private sector, both in terms of revenue and manpower. In the Enterprise environment, java is obviously more popular then PHP by orders of magnitude. Furthermore, you should read those statistics right. JavScript/HTML/CSS/SQL are all supporting technologies for web dev. if you look for example at the SO statistics, you get if you only look at languages that can be used for we dev, Python 41.7%, Java 41.1%, C#31.0%, PHP 26.4% - and that is for professional devs. Add the fact that PHP is almost exclusively used for web dev, while python, c# and Java are also used outside of web dev, and you clearly see that PHP is even competitive *over all* industries.
Iirc this proved to be a controversial point for years.
Fair enough!
they haven't made a better C++ yet version, not for lack of trying
/u/shadowstar36 did you end up choosing Java?
Developers do like a whinge though.
Objectively speaking, Bedrock edition runs far better than Java edition. I hate the thing, but it run better.
At age 49 I returned to professional Java development after starting my career as a developer but then getting sucked into corporate mid-level management. I couldn’t be happier with the decision but you really have to find the right opportunity to jump into - a small, focused team doing full stack development is ideal in my opinion because you’ll get exposed to everything. The tooling - Maven/Gradle, Docker/Kubernetes, git, Jenkins, etc. - is as much of a challenge as the newer functional programming style and serverless lambda and no SQL knowledge. It was a tough first year back to be sure but once you get bootstrapped the learning curve is pretty conquerable. Personally, I made the change so that I could get on a technical track that would give me the option for a flexible semi-retirement in a few years - flexible time and location constraints that mean I could code while touring the US in an RV for example. One thing I’d mention - at the risk of mentioning this in a Java forum - is that front end development is in much more demand these days than the microservices API back end stuff I do. The jobs pay better for entry level, the learning curve is quicker due to faster iteration and immediate feedback and anyone who brings a real engineering perspective to front end development (as opposed to slinging script) - can progress fairly quickly to architect positions. Just food for thought.
It doesn't.
[it’s important to say I have an old version of java so maybe that’s why ](https://imgur.com/gallery/I508dik)
Isn't there a case when you access some FileIO that the system may require admin permissions to access files in protected locations?
Well if the program is executing administrator level batch commands, it might, other wise it doesnt. And its fine execute something in administrator...as long as u know it wont destroy your os
I scanned it was virus total, norton and Malwarebytes, nothing detected but I was just curious why
It's different statistics, looking at different angles. There's no One True way to determine absolutely in what programming language most developers are programming. That said, they do correlate, so if several different angles paint the same picture (do your own research and look at new books coming uit, books sold, jobs offered etc), then it's pretty much always the same outcome. And that outcome is that there's just no evidence to support that PHP is *much* more popular than any of the other languages in the top tiers. Sorry, I understand that in your bubble you see PHP everywhere, and that this naturally makes you think PHP dominates the entire world, but in other bubbles and in the world at large this just doesn't hold.
Nice, thanks. This looks like it could be promising, looks like a curses type terminal working in swing. It has support for tilesets and ascii, along with all sorts of other options.
What does anybody think of JMonkey engine? [http://jmonkeyengine.org/](http://jmonkeyengine.org/)
Oh, you mean Java installer? I think thats standard practice. Java will add some keys to Registry, will add path to java to system PATH variable, etc. etc. I think thats completely normal. Just make sure that you download it from Oracle site or other alternative legit sites.
java.com/en/download or something along those lines right?
Its not Java though
Yep
So it’s safe to run? Thanks
I believe, yes
That’s not really true though. They’ve made much better versions when it comes to the underlying systems. The only thing you can say is worse is the community.
C# isn’t too different. Unity is a far better environment than libGDX anyhow.
Unity’s reputation falls from asset flips on Steam more than anything.
If you can program in java than you shouldn't have much trouble with C# which is what unity mostly uses afaik.
Calm down Mr. Angry
Many applications don’t, but games are ones that do.
If you run java installer I believe that it needs admin to set environment variables like JAVA_HOME on the host system.
Just looked at libGDX's webpage. It's interesting that for a framework that targets (among other things) mobile game development, they've apparently never heard of the concept of a mobile-compatible site.
And what? Primefaces? Serverpages? Spring?
Looks like Java to me hoss: https://github.com/Hexworks/zircon#creating-an-application
Im in the same boat. Does that work for stuff like spring security too
The [Random](https://docs.oracle.com/javase/7/docs/api/java/util/Random.html) object has methods for Gaussian distributions, or for more in-depth statistics I'd recommend [Apache Commons Math](https://commons.apache.org/proper/commons-math/javadocs/api-3.6.1/index.html)
It's written in Kotlin but can be used from Java with no problem.
Thanks. I've actually looked at both of those and can't figure out how to add two "Gaussian" together. I'm imagining something like: Gaussian g1 = new Gaussian(1.0, 0.1); Gaussian g2 = new Gaussian(3.0, 0.2); Gaussian g3 = g1+g2; //OR Gaussian g3 = GaussianUtil.add(g1, g2); double probability = g3.value( 1.5); I might need to look for some examples.
&gt; And that outcome is that there's just no evidence to support that PHP is much more popular than any of the other languages in the top tiers. I'm not even saying that and never have. I have always talked about a very specific niche in which it is popular, while also mentioning another area where Java is by far more popular. Its pretty undisputed that Java is far ahead overall, and that other programming languages (python, ruby, c#, node.js) are also strong contenders for web dev, and depending on the concrete subfield are the most popular choices. node.js for example is extremely hip in startups. Please do not read something I haven't said into my statements.
Might want to check your sound levels.
If you want to get a taste for writing a roguelike in Java, check out [Trystan's blog](http://trystans.blogspot.com/2016/01/roguelike-tutorial-00-table-of-contents.html). It'll keep you busy for a while and is a lot of fun. Also, check out /r/roguelikedev. You'll find a lot of helpful folks there.
A short is 2 bytes in java. But since it's java it's signed so it's -32,768 to 32,767.
There is a `short`, which has two bytes, but it is signed, and therefore goes from ca -32k to ca. +32k. But must it be an 2 byte integer, because if not, just go with the normal `int`.
I'm not exactly sure what you're trying to do here. If you're looking to find probabilities from a distribution equal to the distribution of Z = X + Y where X and Y are independent Gaussian random variables, then you can just use a Gaussian distribution with: mean(Z) = mean(X) + mean(Y) var(Z) = var(X) + var(Y) stdev(Z) = sqrt( stdev(X) \*\* 2 + stdev(Y) \*\* 2 ) &amp;#x200B; eg. Using NormalDistribution, not to be confused with the Gaussian object for Gaussian functions: `NormalDistribution g1 = new NormalDistribution(1.0, 0.1);` `NormalDistribution g2 = new NormalDistribution(3.0, 0.2);` `double mean = g1.getMean() + g2.getMean();` `double stdev = Math.sqrt(Math.pow(g1.getStandardDeviation(), 2) + Math.pow(g2.getStandardDeviation(), 2));` `NormalDistribution g3 = new NormalDistribution(mean, stdev);` `double probability = g3.cumulativeProbability(1.5);`
That's exactly what I needed. I knew it was something straight forward, but I couldn't find the formulas. Thanks.
Games, or at least a solid chunk of most of the most popular games on the market, do require a high degree of optimization. At very least this makes the default java garbage collector a big problem (there are some alternatives that are less problematic, but swapping out the garbage collector can be a huge diversion down the rabbit hole). As a result most of the people seriously working on games are not working in Java. The long term effect of this is that the Java ecosystem for gaming (third party libraries etc) are way less mature and developed than for other languages (especially C++). A java programmer looking to get into game programming, I would recommend learning game development in Unity with C#. C# is quite similar to Java and unity is an industry standard game engine with a huge, helpful, and mature community and ecosytem that surrounds it.
In general, the sum of two Gaussian is *not* a Gaussian. Your example above seems wrong or is missing perhaps a constraint.
LibGDX 2D game will always perform several times better than a Unity 2D game.
I probably described it incorrectly but the formula that /u/DAVID_XANAXELROD gave me was the one I was looking for.
In Java char is 0 - 65535
A random variable which is equal to any linear combination of independent Gaussian-distributed random variables is necessarily also Gaussian-distributed ([proof](https://en.wikipedia.org/wiki/Sum_of_normally_distributed_random_variables))
Sorry, but I'm just not seeing that anymore. I'm based in The Netherlands and I've did a lot of consultancy / external dev, and I'm still doing that a little. I'm not saying it's *not* used, but it's not immensely more used than many other technologies, like indeed the ones you mentioned. It's true that around 2006~2010 the very small businesses / mom 'n pop shops used to be mainly PHP, and the somewhat bigger ones Java or C#. But the very small businesses who barely need anything special mostly moved to Wordpress or similar based things, there's very little Greenfield development in PHP there. There's some development away there from PHP to... Wordpress. Slightly bigger companies, but that can still be ones with 10 to 20 employees are very often using the other alternatives. Among small tech first companies (companies that have their web app as a product) PHP Greenfield development is incredibly rare these days, at least in my bubble.Python and Node.js is popular, and when there's heavy computation needed there's a Java or other JVM language backend (Scala, Kotlin, ...). Again, I'm not disputing PHP is there, and also not disputing PHP is in the first or second tier wrt usage, but just disputing that in the "web applications" niche PHP is in a tier of its own that's (way) bigger than the other contenders. It's just no true anymore. But maybe we do agree more than initially thought. Very small pop 'n mom shops may still be on PHP, anything bigger and startups (Greenfield) is mostly using something else.
Yes for random variables. But he talks about Gaussian distributions: exp(-0.5((x-m)/s)^2) /(s sqrt(2 pi)) The sum of two of those, with different mean m, is not a Gaussian.
Just to add to what everyone else has said, you (or others) might be interested in the Java language specification regarding types. https://docs.oracle.com/javase/specs/jls/se12/html/jls-4.html#jls-4.2.1
[Jexer](https://gitlab.com/klamonte/jexer) might be adaptable to your needs. Pure Java, does Swing and Xterm, with mouse support. It doesn't do custom tile sets though, it only uses Unicode. You would probably just take the backend and events, and build a new main loop rather than the windowing/widgets.
yes, though i found the documentation on spring security a bit more lacking (or unclear) in that respect. as a result it took a little bit more effort to get the hang of it.
I wouldn’t be worried, the tech world is littered with technologies that were once the latest and greatest but are latter considered outdated and legacy only. I remember when Struts was that latest and greatest. That doesn’t mean you shouldn’t keep up to date with new developments outside of your current stack though.
Throughout your career, it's unlikely that you're always going to get to work on exactly the tech stack you would prefer. My main advice to you would be to change jobs every few years anyway. Don't consider staying in one place too long as you will be more likely to stagnate (technically, and salary wise), and will be exposed to fewer different ways of working and different environments. You've only been there 4 months. If you can't entertain working on anything less than your preferred stack, or what you consider the latest and greatest, it won't help your employment prospects.
Especially for junior positions, job postings are more of a wishlist than a requirement list. When I'm looking for a junior developer, I want that has a general understanding of the core language, someone that's willing to learn, and that their personality would fit with the team. It sounds like you're on a good track so far.
Ok take it from a guy who's trained more devs than I can count. So long as you know basic flow control and I don't have to hold your hand on the stupid basics, I'm going to teach you how to code in the way we do it, every company has a house style. Junior dev's aren't really heavily relied upon and we expect you to be pretty raw.
Sure, absolutely. I have hired for entry level positions, and having a good grasp of the basics (and not lying about it) as well as being in general someone who seems like a good employee are all I really looked for. Don't be afraid to apply for jobs that have items on their list that are a bit more than what you know now. Read a little bit about each item on the list before going into an interview and express willingness to learn about it if it's something you don't have experience with.
For junior developers, most hiring managers are looking for someone who's willing to learn and who will vibe well with the team. So I think you're on the right track.
You may want to look into LaunchCode.org. LC trains people from scratch and then places you in contract to hire work for 3-6 months. If you show them you have the basics down, you can go straight into job placement.
Thank you
As someone who has also trained more devs then I can count, I don't think I agree with this sentiment. Everyone is different and the speeds at which they learn vary. There are also smart, yet destructive people out there. I've seen 1 "smart" person disappear and then the teams productivity double due to one less massive blockage on the team. I can't speak for OP, foundations are good, but I'd like to see indicators that someone is a team player, and that they can communicate/learn easily. There are plenty of people who know basic flow control yet could totally be a drain on a team.
My company is in a similar situation, where development on some systems us entirely legacy technology. Worse than Struts even. It's been a struggle to keep young developers on that team specifically for this reason. However, what I have noticed from the folks who stayed longer than one year, is that they continued to have opportunities to work on other projects at work that use modern technologies, or building modern interfaces for the legacy systems. Keep an eye out and jump on any of those projects.
I’m glad this is the case. I’m learning java and C right now. But all these prerequisites beyond the core languages for entry level positions, seem daunting.
That's interesting. I almost applied to Microverse some weeks ago but it'd be too tough to fit it into my daily life. How does Launch Code work? Can I apply even if I'm not from the US (I'm Brazilian)?
 Not many companies starting new projects with Struts 2 in the last decade, but lots of on-going maintenance projects. However, I wouldn't leave until you've been there a year, especially if this is your first job. You probably won't run out of things to learn in a year. Don't be afraid to relocate. Tech companies will move you. In the meantime, try and work with and add open-source projects to your work ( e.g., Jakarta, Hibernate) to expand your resume and show you've picked up a lot of new technologies. Of course you can pick what technologies you want to work with. The job market for Java is really strong. So, keep your current job and start looking for a job with the tech you want to use and learn. Chances are they can't find anyone in the current market with the skills needed, so many employers are willing to take on people who can learn fast and pick up the necessary technologies (e.g., machine learning). So, apply even if you don't have the experience if that's what you want to do.
I would suggest to use Unity for your exercises. It is well documented and relatively easy to start. It uses C# (which is very similar to java) as scripting language.
I'm shy but I'm humble and eager to learn. I don't know if I would be a drain in any way, hopefully not, but I'd try my best to help as much as I could and be of as much value to the team as I can.
What would you call "good grasp of the basics", exactly? Sometimes when I read people saying "basics" I think "variables, loops, conditionals, functions, mix it all together to make things happen", but it can't be that low of a bar, right?
The training they do is in person classes in select cities in the US. I don’t know all the specifics but the website should have more info.
Oracle JDK is not free for commercial use from Java 11 onwards. You can use OpenJDK and don't have to opensource your code.
Stay. Like others have said, you'll see all sorts of tech stacks. Learning one that you haven't seen before and may not be used as frequently isn't a reason to be worried. Instead, use this as an opportunity to 1) learn struts, and 2) learn *why* it might not be used as much ;) Right now you need to build experience. Stay for a couple of years, soak up everything you can, and if you're not happy, look elsewhere. What would interviewers think of a recent college grad rocking a solid 4 months experience who left his company because he felt their frontend (in which he has 0 experience in) was outdated? It might be frustrating for now, but it's still an opportunity to learn. This field is constantly shifting, so keeping up to speed outside of work is invaluable; make a public github account and link projects on your resume.
Thanks! I really appreciate it! Legal things get confusing lol
Shut up shill.
Experience is experience but struts 2 is certainly not the future. If your goal is to be marketable then you can’t do that long term. As you said it’s consulting work, which means you should be able to switch up clients relatively quickly. But if 5 years from now all you worked on is struts, I’d be worried. It’s not that you couldn’t get a job, it’s just that you would really be limiting yourself.
In this case it won't work for me though. Too bad.
There are those hotshots but they can be easily humbled
That wouldn’t remotely be my top priority in writing a game.
Java is capable of making RPG, but it's recommended to use libraries, online resources &amp; guides, and other tools. I personally wouldn't go full on in making a game with it without the use of libraries and other resources. But Java can make RPG, Rogue, or Title-based game.
&gt; mix it all together to make things happen This is actually huge, if you can make a program that does something on your own without filling a tutorial, then you are probably underestimating yourself. Knowing how to make an if, loop, class or what an ArrayList or hashmap are is one thing, but actually understanding then and when and how to use them and put together an actual program is another.
Well at least with Unity/Unreal you can easily target other gaming platform than PC which can be useful.
Absolutely yes you can. In fact I got a job at a mostly C# consulting company knowing basically only Java. I would say learn some front end technologies as well, unless you’re looking to go the mobile dev route.
In my experience, yes. But also be prepared to learn a lot of things specific to that job which likely aren't that transferable.
I know some simple HTML/CSS/Bootstrap stuff from the time when I tried to build a website for someone I know, but it was last year, I never practiced it much and most of that site is a template I found online and edited (terribly. It's super sluggish on mobile and I have no idea why. Compressing images didn't make much of a difference). But my idea really is working on mobile. But, as I said, I can only practice it on weekends, so most of the time all I can do is core Java stuff. Do you think there's any chance a core Java dev can get an Android dev job?
Just a questions, how serious are you when you say you only know Java? Do you know any SQL dialect (Oracle, Postgres, MySQL)? Do you know any frameworks such as JPA or Spring? Have you coded any web services? Knowledge of what a transaction is? You also need to know about Java itself and how the packages in the Java API work, the basics of the basics is definitely not enough.
You can work on McDonald's.
Who pissed in your Cheerios?
Mostly the "mix it all together" part. Do you know some things about common algorithms? If I give you a paper with some code can you identify errors or improvements? Do you know keywords for Java, or strategies for using Java? What projects have you done in the past and what would you improve about them?
I don't know anything about SQL (yet). I started learning it once, but the course I took on Udemy teaches it from a Data Science point of view, so I'm not sure how much of a help it is. My question stems exactly from not knowing stuff like JPA or Spring.
when it comes to mobile games, performance is a priority. Also, to some people (including me) it is much more satisfying to write a game from a lower level and have much more control and expression in code than drag and drop and dabble with ui in unity
As someone who sometimes has made hiring choices in his career, I care not one whit what language or APIs you know. I care whether or not you can basically program and whether you are someone who gets shit done. It doesn't matter what you know coming in, you don't know our codebase's API, and 80% of what you'll be doing will require you learn it. If you also have to learn some Spring or or Antlr or GWT or Hadoop, ain't no thing if you can program to begin with.
Too much grease, too few coding.
I wouldn't stop studying on my own anyway so I don't have a problem with that.
Dont worry to much, just work on your fundamentals and be nice. We have all sorts of personalities on our team. Its important to portray yourself honestly though. There is room for all sorts on all teams.
It looks like in your [submission](https://www.reddit.com/r/java/comments/cdbcud/eclipse_doesnt_recognize_javaxswing_javaawt/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
I know a guy who taught himself enough java to do his job during his induction week for his java developer job. He was a gun C++ programmer so that helped.
All I want to know is how you've bypassed the bot to actually get this post on here.
I don't understand. What's wrong with this post?
Yes no problem as long as you’re strong in the fundamentals and want to learn, you’ll be fine. It can take a while to land your first job, but stick with it, learn as much as you can in the tech stack you want to get hired in. Take as much as you can from failed interviews for improvement and keep working.
What you described is more or less where I'm at right now. I don't feel 100% ready yet, but I'm getting more confident. I know I have to improve my algorithms and data structures skills, for instance. And I'm getting familiar with some built-in Java libraries which is great.
Haha, yeah, you haven't met some of the egomaniacs that I've worked with. Humble is not a word in their vocabulary.
I would be wary if there are no other projects at this company you could switch to and there's no new projects upcoming.
egomaniacs are the worst
From my knowledge of Java, struts shouldn't be too bad. You still have Java on your resume at the end of the day. It may be worth your while to take python courses on the side and pivot into that though if you are looking to always be highly competitive. But I wouldn't say it's necessary. You do need to be a little more sensitive to the window of obsoletion at this stage in your career. Because if you're working as a junior in something really irrellevant to modern tech, and then you switch to a different company on really different tech, they may want to keep you at the junior level longer than if you already had 3 years of exp in thier tech. What you really don't want to be doing is spending all your time on a dying language like Elixir or PHP.
[removed]
[removed]
i'm really hoping to find an employer for my first developer position with a mindset like yours! The job postings are definitely scary in the beginning and getting rejected by pretty much all of them in the beginning makes it seem like those requirements are real. at least to me it felt like this. I've always realised to not let it stop me from applying tho so here's hoping :)
One thing I will raise that not too many people are aware of. Only about 40% of software engineers have languages they learned out of work hours on their resume. When I'm hiring people, and talking to others who hire people, candidates that have solid chunks of self taught technical skill outside of the 9-5 are super attractive. I'll credit a candidate with 3 months of self taught exp in a language with about the same exp as someone who worked that language a year.
You have a lot to learn in this place apart from the technical part, and maybe later you can be exposed to much cooler things. Anyway leave the company after 2-3 years (in UK is OK after 18 months, but the minimum acceptable might be different in your place) for a position that is better aligned with what you’d like to do and for a pay rise. Story time: last year I helped in the interview of a guy who had worked with Servlets/Jsps the last 7 years in a Government legacy project, technology that maybe had its peak 20 years ago. He got the interview because he was ultra-cheap, but he was unemployable as a developer. Don’t be that guy.
Try working through this series [here](https://www.youtube.com/watch?v=dEKs-3GhVKQ&amp;list=PLah6faXAgguMnTBs3JnEJY0shAc18XYQZ)
What about back to Java from JavaPy?
Oracle didn't stop anything, javafx is still good choice. I would consider swing as dead technology
Then I'll be blunt, if you don't know SQL, you are not ready for looking for a job as a Java developer, still quite far from it. You have to learn many more technologies and frameworks before you get to that point. I recommend you to look into the things I listed above, read into what object oriented programming is, a bit of functional programming and how it works, oh, and the books for Java certification. It will take some time, at the very least another year of learning, but you are on your way there. :)
At the moment my APIs are consumed by the Oauth2 user/password flow. But probably the will be open to other flows: client side for example. An in that case I have to decide the authorization to each client: so the RBAC is not only by user but it could be also by client. It makes sense? What do you think about?
JavaFX.
Look at the source code.
The OP wants to learn / do Java. Using a foreign language library in Java is not idiomatic and wonky to use. Even if its possible and Kotlin is a tad better than say Scala in that, you will have a harder time.
Yeah, solid advice: go in somewhere, and then leave before you are forced to maintain your own code.
Just look at it like this: you are learning to work with a framework in a professional environment. After a while you'll find out that a framework is a framework is a framework. They come, they go. What you think is hot today, will be despised in a few years (if it shouldn't be already). You are a CS Graduate, this means you should have sufficient intelligence to abstract
You can also tell your customers to install the JDK of their choice.
No sarcasm intended, but whatever happened to SWT?
pretty much agree that time to switch jobs is when you stop learning stuff
For every one junior job opening these days we get 400+ cvs If you only know Core Java you will never get even contacted. Why? Because you have to compete with guys with a few years experience also going for those same low payed junior/graduate jobs.
That’s not really true in most parts now. The job market has way more devs, and simply knowing the core part of a language is far from being enough. Anyone can pick up core Java and programming in general in less than a couple months. Even junior devs should know multiple frameworks across multiple languages, with sone front and back experience nowadays. It’s not like it’s hard to pick up languages.
Even front end devs need to know SQL. It’s ubiquitous, has been around forever, and it’s going away.
Yes, but for a dev worth anything, switching languages isn’t hard, especially when going from Java -&gt; sports car java (C#)
If you want to do mobile development, just learn that. Pick up Kotlin and Objective-C/Swift. If you want to continue Java, pick up Spring Boot and build a web app. Because you’re a beginner, you shouldn’t touch JPA. It’s only useful once you know what it does, and you only learn that by doing sql by hand. I know you mentioned Swing, but you’re not going to find a lot of employability with that. Web dev jobs are all over and way more profitable. Should probably pick up an SPA with it. I’d recommend Vue.
JavaFX. Actually the development accelerated since Oracle released it to the [wild](https://github.com/javafxports/openjdk-jfx). [openjfx.io](https://openjfx.io/)
If he's looking at Android so need of SQL because it's
I disagree, a competent Java developer could pick up SQL in a day and be decent with it in a week, it's not a barrier to entry. There's no point learning JPA or Spring if you're not going to use them, you can't expect a junior to spend at minimum a year learning every framework before they start applying for a job.
I wouldn't worry too much. Every company is going to have some legacy applications that someone has to mantain from time to time, so getting some experience in old tech could be useful. In my company we have web apps that range from a stack with Struts1-Java5(!!!) to a more "standard" Spring Boot on Java8 and in my time here (~1.5 years, Junior) I had to work on all of them. The most important thing is to keep up to date and keep studying/practicing with the new stuff on your own time if you can't do it at work.
Maybe you find something here: https://github.com/akullpp/awesome-java#machine-learning E.g.: https://haifengl.github.io/smile/statistics.html
SQL in a day? When he/she doesn't have an understanding of what db tables are, what are indexes, what are foreign keys, how to properly design a table and apply some basic normalization concepts to it? Come on, that's silly. S/He should learn those in order to understand what is needed to achieve an actual task, not just to play around with loops and variables and such, that's why the frameworks are important to learn. If he's returning hashmaps in object functions rather than using proper object oriented programming and not understanding a bit of the underlying workings of the Collection API, then he's not going to pass the interviews at any decent workplace and will get discouraged.
But it works
Isn't Vue a JavaScript framework?
i think swing is still good. as its included in every JRE by default. JavaFX is good but can lead to dependency hell or compilation errors.
A competent Java developer will already understand tables and indices which is enough to utilise basic SQL. A junior won't need to know advanced SQL anything because no company should be leaving that solely up to the junior dev. &amp;#x200B; I agree that understanding java basics is not enough, they must have some level of practical competence in OOP and debugging, I just don't think that they need to know lots of frameworks before applying for their first job. Personally, that's where I draw the line between a normal and junior dev, a junior has few if any frameworks under their belt where a mid-level dev will have accumulated multiple from working in several jobs/roles.
Well, based on his replies, he doesn't know anything about SQL at all. I'm not saying he needs to know tons of frameworks, but he should know enough to accomplish some task. Say, something simple like setting up an endpoint with a dto class, mapping that to an entity and saving that to a database. Doing something seemingly simple like that entails everything I described. Doesn't need to be an expert, but something workable. That way he can make use of this knowledge to figure out what the framework or tool is supposed to do. He can't expect people in his new job to coach him on every little basic thing, if he somehow manages to get himself hired he'll slow everyone down. That's what school is there for.
&gt;He can't expect people in his new job to coach him on every little basic thing, if he somehow manages to get himself hired he'll slow everyone down. Yeah I agree they shouldn't expect to be coached on simple things, it doesn't stop them learning it on-the-job though
/u/desrtfx You’re really on protest, aren’t you? Congrats, you’re now mod of 3 subreddits that all serve the same purpose.
This is all true, but it is possible to control GC even in Java. Simple things like object pools help tremendously. From personal experience, I have a basic OpenGL framework in Java that I use for testing and I have it so that it can generate a texture atlas from any Java available Font to use for text rendering. I was running some very simple code, the traditionally spinning cube, and I decided to display some debug text to the screen showing FPS, UPS and memory. I was getting in excess of 2000 FPS but watched as the memory would drain, restore, drain, restore as it ran. Doing some digging I discovered the bulk of the memory usage was occurring in the debug text where I was building output strings using approaches like String debugtext = String.format("FPS: %d, UPS: %d, Mem: %d", fps, ups, mem); textRenderer.drawText(debugtext, 10, 10); I did some digging in the Java source code and found that conversion of numbers to string, building of the output was creating many new objects. Having a frame rate in the high thousands meant it was whipping through memory. So I implemented a new class, **CharArray** that used an internal character array and provided various **append** methods, and I implemented zero cost functions to convert numbers to strings. I made **CharArray** implement **CharSequence** so I could use that as the argument type allowing me to switch between **String** and **CharArray** as needed. That changed my debug routines to //class member CharArray debugtext = new CharArray(); //in debug routine debugtext.clear().append("FPS: ").append(fps) .append(" UPS: ").append(ups) .append(" Mem: ").append(mem); textRenderer.drawText(debugtext, 10, 10); The **CharArray** will grow as needed but not shrink so overtime it should stabilize. Switching to this and rerunning my code, I still had same frame rates but my memory stop draining, refilling, draining. It became quite a bit more stable (there were other issues I eventually tracked down as well). I also use **IntArray** and **FloatArray** classes to do something similar with primitive **int** and **float** arrays to avoid auto boxing that occurs if you use a generic **List&lt;Integer&gt;**, so with proper testing and optimizations, using object pool patterns and fixed type containers versus generics, you can get GC under control.
That should be fine to do on the job. My team doesn't make the most efficient programs, we have deadlines to meet and if we spent more time on making things incredibly efficient and better to read, then we wouldn't make the deadlines. As long as it does the right thing and code purpose is legible, it's all OK.
yeah
It's still out there for Eclipse based UIs.
If your core Java is strong, you'll get a job with me without any issues. There's a lot of positions on the market, If a company has the luxury to decline strong candidates based on lib/framework knowledge, I'd say they're the ones doing it wrong.
I don't like shills. Why do you some job that actually makes the world a better place like being a septic tank cleaner or something? You know, instead of making the world worse.
Why Oracle doesn't include Java FX by default with the JRE?
that sounds like a system that collapses relativly soon
It looks like in your [submission](https://www.reddit.com/r/java/comments/cdgyk7/what_would_be_the_best_if_any_way_to_compile_java/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
I got a job doing java dev and I had never done java before save for a web scrapping program that I gave up on and finished using C#.
What do you mean?
I am on the same boat for now, but I just keep pushing myself, practicing online problems on codeChef as much as possible and I must mention that at the start of my college I just hated java, don't know, maybe due to my nativeness to C/C++. But when I started doing it, I feel so comfortable with it, even more than my native language and now I am also looking forward to join a team to learn more and give more. It's been 1 month since I started learning java from udemy and I am about to finish OOPS concept....
Yes, by SPA he meant "Single-Page Applications", which is sort of where the current front-end market is. I personally wouldn't obsess over the JS framework of the month - just grasp the basics of JS and be honest about it in interviews, if they like you they won't care about that sort of thing.
Correct. Minecraft was at start an experiment. There is a reason why not much games are written in Java.
Eclipse uses SWT which uses real underlying UI widgets when it can. Swing widgets are emulated. [https://www.eclipse.org/swt/](https://www.eclipse.org/swt/)
Agree, but definitely try to expand your personal project space. When I see a resume that says Cobol or struts and it takes up too much of the resume, I skip over it. I wouldn't even list it in your skills, just mention it in your per-employment responsibilities. Nobody faults you for working on an old tech-stack, but we question why you thought it was relevant to list in your skills for the new job.
upon further reflection, I should have said so long as they're willing to learn and willing to grow.
Here are my thoughts on your question: &gt;I've been studying Java for a while now and my skills are starting to get pretty solid now I don't know what you mean by solid or how you measured them, but if you haven't worked on real life projects, they probably aren't. Until you heat some real life situation, it's pretty much like training for a fight just by punching a bag, and never sparring with a real person. But **your skills not really being solid is expected, because you are a junior**. Good companies look for motivated and intelligent juniors with good personality, not knowledgeable juniors (those aren't juniors anymore). You want a junior who's willing and able to learn. &gt;But every time I see job postings online, they usually ask way more than core Java, even if it's meant for junior developers. Lots of companies have unrealistic expectations. They will ask for a ton of shit, but when faced with reality, they will hire the best people they find, and often those people are missing a bunch of the skills they ask for. **You should be ready and willing to learn on the job.** As a developer, that NEVER stops. You might not know framework X or tool Y, but if you can learn them, that's a big plus. Don't expect the company to send you to trainings for weeks, either. It's often that you have to learn on the fly. I learned Javascript, Apache Struts, Hibernate, Spring, Angular and a bunch of other stuff on the fly, without any company ever providing training for me. &gt;Btw, if it matters, I'm using [Hyperskill.org](https://hyperskill.org/) and Tim Buchalka's [Java Programming Masterclass](https://www.udemy.com/java-the-complete-java-developer-course/) as my main resources. I don't know if it's still fashionable, but when I learned Java, Bruce Eckel's Thinking in Java helped. And it's free. It teaches quite a lot of finer points of the language. IIRC at the time one such thing used to be the difference between Vector and ArrayList, and the difference between Hashtable and HashMap. &gt;So, summarizing, my ultimate goal is to work as an Android developer **Get a machine that can run Android Studio.** If you want to be a wood cutter, you must be able to use an axe. &gt;I know, I know, I'll learn Kotlin eventually Kotlin is cool, not just for Android development. You might want to look into Flutter and Dart. It's not Java, but Flutter allows you to build apps for both Android and iOs with a single, unified codebase. Flutter is new, and this means there are fewer experienced devs, so if someone's looking for a dev, they might be more willing to take on a junior. On the other hand, it means fewer jobs, too, at least for the moment. If it does catch on, it might replace Android in a few years. So keep that in mind, and keep an eye for Flutter and Fuchsia. &gt;or if I should invest in learning some Java framework If you're dead set on working on mobile apps, there's little reason to go into frameworks used for enterprise apps. But I think those jobs are way more numerous than the Android dev jobs. If you want to go the enterprise/web app dev route, here are a few things that will help: * I don't think Core Java includes servlets/JSP, so take a look at that. Be able to create a small web app of at least 2 pages, so you have some navigation * install a database (mysql or postgres) and learn basic SQL. be able to do the following in the console: create table, alter table, insert record, update record, delete record, create foreign keys (and understand what they are), create indexes, select (simple select from 1 table, select with join types: full inner, right/left outer), view, materialized views; this will allow you to understand JPA - which tries to hide the complexity of ORM (object to relational mapping: java is object oriented, databases are relational) * understand what a web server does - **understanding how network calls work will be necessary as an Android dev, too, as you will have to call REST web services** * read about web services; SOAP and REST * understand what JavaScript is and be able to write a small function and have it execute; it can be as simple as an alert("hello world"); if you make the popup show, it's good. * understand what Spring Core does - wrap your head around the inversion of control * **understand that modern frameworks are nothing but layers upon layers of abstraction, trying to hide away the complexity from the developers. They might look magical but if you understand what's happening behind the scenes, you will be able to work with them and avoid a ton of frustration** Basic understanding of databases, networks, servers and web services will allow you to evolve very fast as a developer. From there, you can: * look into Spring Boot - it's the magic part referred above * look at Spring Data JPA - more abstraction over JPA, hides a ton of boilerplate code * a bunch of other Spring modules, like MVC, REST, Batch etc. * learn Angular/React/Vue for the front end. Rarely will you just have to develop the backend. If you are a full-stack dev (meaning able to develop everything from UI to the database structure) you will have more opportunities than someone who's strictly a JS dev or a backend dev. Of course, there's more. Don't get scared, this takes years (and a lot of dedication) to learn. As long as you're motivated, you should be able to do just fine.
Yeah, I always thought learning JavaScript was kind of inevitable. I'll probably get to that eventually, but web dev isn't really my thing. I don't hate the idea, but I'd rather do something else. But who knows, I might have a change of heart!
Definitely Spring yeah.
I am not a security expert so take my advice with a grain of salt. However, if you don't have 3rd parties accessing your API on behalf of one of your users I am unsure why you would use OAuth2. OAuth is an authorization framework but the existence of the password grant type really muddies the waters between authentication and authorization. Sounds like you just need JWT.
Those are probably your two best- java and a c-syntax language will get your the most bang for your buck as a beginner. Throw in SQL and (maybe) Python or R when you’re ready and you’ll have a solid foundation moving forward in junior positions.
I understand your feeling. Unfortunately JS is a cancer on the whole industry - even mobile apps nowadays are often wrappers around a web view, to save money. On the other side, this means JS devs are in very high demand and can command impressive salaries.
If OP goes into interviews with the outlook of "I don't know them yet but I have been DYING to learn the technologies that you have listed on the job description" then he has just turned a mild negative into a meaningful positive. There is not a lot that makes Human Resources and hiring professionals happier than a highly motivated new employee. If anyone ever attempts to pull this off, you better be ready to back it up though. If the best you can come up with after the interviewers asks you "shy?" is "uh, i Head they're pretty good" then it's definitely not gonna look good on you.
I think a lot of the replies made on this thread are very valuable but I will also corroborate this: Java, maybe even more than most widespread languages nowadays, rely heavily on frameworks, especially when web is concerned (probably because it's a language that predates the Web as we know it, let alone Javascript, Web 2.0, etc). In that sense, anyone with experience on the frameworks a company works with will be placed in front of someone without when it comes to being considered for an opening. That doesn't mean that person will ultimately get the job over you and I don't know exactly what goes into that equation but if you're brand-new to those frameworks, you're playing from behind if even one other person with experience applies for the same job.
I’ve already learned C#. But I want something less Microsoft centric. To give myself flexibility.
Hardly, that's why JetBrains has it's own patched JRE.
Wow, this is na awesome reply! &gt;I don't know what you mean by solid or how you measured them, but if you haven't worked on real life projects, they probably aren't. What I meant is that I've been practicing almost every day and I'm getting way quicker to find out how to solve programming problems. I know building projects is essential, and I'm working on it, too. Right now I'm building a simple program that encrypts and decrypts messages (with a simple Caesar encryption). The main functionality is already done, it only needs a few final touches before I send it to GitHub. Later I'll tackle on some more complex projects. &amp;#x200B; &gt;I don't know if it's still fashionable, but when I learned Java, Bruce Eckel's Thinking in Java helped. And it's free. It teaches quite a lot of finer points of the language. IIRC at the time one such thing used to be the difference between Vector and ArrayList, and the difference between Hashtable and HashMap. Thanks for the recommendation, but I'd rather stick with what I already have. If I have too many resources to learn from, I won't know where to go next and freeze. It's happened a lot before and I'm trying to focus on going forward. &gt;**Get a machine that can run Android Studio.** If you want to be a wood cutter, you must be able to use an axe. I actually have a pretty good computer that runs it smoothly. The problem is, it's a desktop and because of how my life is structured right now, I stay most of the week in another city where I only have access to this simpler, weaker notebook that isn't even mine. Unfortunately I can only do Android stuff on the weekends. &gt;Kotlin is cool, not just for Android development. &gt; &gt;You might want to look into Flutter and Dart. It's not Java, but Flutter allows you to build apps for both Android and iOs with a single, unified codebase. &gt; &gt;Flutter is new, and this means there are fewer experienced devs, so if someone's looking for a dev, they might be more willing to take on a junior. On the other hand, it means fewer jobs, too, at least for the moment. I've been following the Android and Mobile development scene for quite a while now. I know about all this, and I've actually studied Flutter quite a bit (in fact, because a friend of mine who's been working with it since the beginning of 2018, I learned about Flutter and jumped in the hype wagon before many others even knew about it). I love it! The problem is exactly what you said. There aren't so many jobs on the market yet, so I chose to put it aside for a while and focus on Java for now. I tried to study both simultaneously for a while, but it didn't work out very well. Since I want to get a job fast, I decided focusing on Java was the best way to go for now. Once I get in the industry, I'll go back to Flutter. As for Kotlin, I want to learn it as soon as I feel I'm very confortable with Java, because I know how strong a relationship these languages have with each other. &amp;#x200B; About SQL and networking, Tim Buchalka's course includes sections on both things that are so extensive that they probably could be standalone courses on their own. The Databases section is almost 8 hours long, while the Networking section is 2 and a half hours long. I'm hoping the things he teaches there will be enough, because looking for good contente online that will satisfy my needs is tough. &amp;#x200B; As for Spring, that's something I've been wanting to try for a little while, but I haven't got the opportunity to do it yet. That's probably the way I'm going for for a while, so I'll be looking into that. I've studied some basic web dev stuff in the past so it's not like these things are alien to me (even though I forgot most of it) so, if I need to relearn JS and then learn some JS framework, I expect to do it in a few weeks' time.
What’s your problem? No one shilled anything.
Yes, it is.
Jes that's true
I'm working on a new project which will only extend the Java syntax, from imports are part of it.
Frameworks are a bit overhyped these days. It's quite easy to find developers who "know" Spring, Kafka, and a number of other stacks. But it is quite a challenge to find someone who understands core Java and a good grasp on how the JVM works. I think if you focus on that the frameworks and specific implementations will be easy to pick up, or at the least you'll have a solid foundation to understand them and critique them better.
Except that Minecraft is a very bad example because it is written very poorly. &gt; There is a reason why not much games are written in Java. You can write a game in Java just fine, but you need to know about and how to handle the Garbage Collector correctly. That includes not creating several megabytes of objects every frame which live for exactly one frame.
Yes, because it was written quite poorly.
 &gt; A cease and desist wouldn’t be uncalled for. Which is a nice way to say that this is both copyright and trademark infringement.
I'm not sure I understand, is this about having OpenJDK compile against `musl`so it doesn't have to use additional `glibc` on Alpine?
Yep. Making these projects for yourself is cool. Advertising it... not so much.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
As with almost every question in IT, the answer is 'It depends.' If you're wanting to pivot to new technologies, it may not be the greatest fit, that said, it will give you good experience dealing with less than perfect codebases. Once you see what was done and importantly understand why the code evolved in a particular direction, you have the chance to gain insights about the business that are not always obvious. Not every company is running the latest and greatest, as a result, you don't have always be chasing the new stuff. My advice is to get a solid footing, the discuss migrating to a newer framework. not that long ago, I migrated a Struts 1.x app to Spring MVC. It's not a huge leap conceptually, and makes your life much simpler. If the company won't allow that, consider moving on. -
Oracle mentioned some reasoning [here](https://blogs.oracle.com/java-platform-group/the-future-of-javafx-and-other-java-client-roadmap-updates) and [here](https://www.oracle.com/technetwork/java/javase/javaclientroadmapupdate2018mar-4414431.pdf). Some quotes: * With the Java Platform Module System in place since Java SE 9, it now more viable to decouple JavaFX from the JDK, in order to make it available as a separate download. This will make it easier for developers using JavaFX to have more freedom and flexibility with the framework. * with our focus on increasing the release cadence of OpenJDK, JavaFX needs to be able to move forward at a pace driven by the contributions from Oracle and others in the OpenJFX community * At the same time, the magnitude of opportunities for cross-platform toolkits such as JavaFX in the market place has been eroded by the rise of "mobile first" and "web first" applications * Increasingly they require desktop applications to be distributed through their own private "app stores." The notion of an application being distributed separately from a standalone JRE is, therefore, quickly fading. Also: * Unlike Swing, JavaFX is not standardized. It was never part of OpenJDK. Only OracleJDK included it. With the alignment of OracleJDK with OpenJDK they had to remove it. * An opinionated UI library should not actually be part of a JDK. Its also unclear what they are going to do with Swing. They are probably also going to remove it in the future.
Yes.
Cool! Other than portability and image size, are there any particular performance gains or losses from using musl? This might be useful even when not using Alpine.
Project Portola has been part of every EA release since Java 8 but unless I'm mistaken, there is no news as to when it will be ready for GA. Most people aren't going to run EA builds in production.
Oh, the client notices! Hot machines, fans switching on or spinning harder, and worst of all batteries draining. The latter is absolutely killing, and makes users avoid your site.
Yeah, Kotlin. ? This would work for a Java effort, no? It's worth a look.
How much do you gain in image size?
I've been using IntelliJ since 2002 and I've always removed the integrated JRE and used the default systemwide JRE. Mainly because using the same JRE to run both IntelliJ and the programs I was developing decreased startup times quite notable at that time. Since then I've done it mainly because of habit and I've never had any issues with default JDK/JRE Swing library.
The only thing missing from Swing is the multitouch support, and some windows integration details that are also missing from other UI frameworks that are not 'made by Microsoft'. BTW: If anyone knows a good library / tool / utility to get high res windows application / file icons, I'd be grateful! If it can handle those preview thumbnails, even better!
Please see r/javahelp
OS? First time hearing that, and I see no reason why IDE's JRE should have such effect. Do you have youtrack issue link?
Very nice! One thought on &amp;#x200B; \&gt; java.lang.NullPointerException: name may not be null \&gt; \[...\] \&gt; java.lang.NullPointerException: name may not be empty &amp;#x200B; Some folks might argue that such library shouldn't raise an NPE if the value is null but rather IllegalArgumentException. I'm personally not so hung up on this one, but NPE definitely seems not right for the value "only" being empty. After all, it's not null in this case, so this one should be IAE in my opinion.
YES
&gt;NPE definitely seems not right for the value "only" being empty. After all, it's not null in this case, so this one should be IAE in my opinion. Good catch. This was a (rather embarrassing) bug in the documentation. The actual code works fine :) So to recap, the actual behavior is: &amp;#x200B; \&gt; java.lang.NullPointerException: name may not be null \&gt; \[...\] \&gt; java.lang.IllegalArgumentException: name may not be empty &amp;#x200B; &gt;Some folks might argue that such library shouldn't raise an NPE if the value is null but rather IllegalArgumentException &amp;#x200B; Older versions provided the ability to override the type of exception that would be thrown, but in practice it was rarely used and complicated the code so I recently removed it. &amp;#x200B; I am open to bringing this back in one form or another if I see enough demand. In the meantime you are expected to catch the exception the library throws and wrap it in the exception type you prefer.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Great step in lowering the bar for community contributions
As much as I liked both systems, Git is the obvious choice now.
This. I think the replies here are a little too optimistic. At the end of the day, job hunting is competition and if you aren't on par with the rest of your competitors, you'll fall behind and not get hired.
I think hg is the least of openjdks problems when it comes to contributions...
He's saying, here's a really good subreddit you can post the question and get more of an answer than here.
Looks interesting.
Great that Red-Hat and AWS have contributed an endless amount of JEP implementations to OpenJDK, looking forward for the next ones they will be providing, because I hardly remember any JEP besides Shenodah. Devs that left Java for Go were most likely enjoying Java 1.4 max, or suffer from Google magpie Dec effect. Even Swing is better than any Go based UI toolkit, and in what concerns enterprise space there is nothing on Go eco-system able to match JEE 6 (the 6 is on purpose), Spring, AEM, LifeRay, SAP Hybris, ...
That doesn't mean it's not worth doing.
Totally. It's not just for new contributors after all :D
I genuinely was interested if you were aware of a better framework, i'd love to investigate it.
javafx menubar mouse behavior is broken, so for me swing is the current answer.
I predict nothing will change in terms of contributions. Oracle will still not allow public comments, voting on bug reports nor accept PRs. It might not be popular to say but Mercurial is not standing in the way of contributions. Anyone who can talk Git can talk Mercurial.
&gt; got rid of read barriers and are using on-definition barriers instead From what I understand, the resulting machine code is almost the same, but with less compiler work and less complex logic. &gt; The read-barrier was literally one CPU instruction on most architectures What I meant was that it allowed them to simplify the Shenandoah code. The GC itself is now easier to reason about. These concurrent GCs will still have a heavy throughput penalty on write-heavy workloads...
I am unfamiliar with those acronyms. What's EA and GA, and why would most people not run EA builds in production?
About time.
Early access and general availability?
Yea. And I’m saying I didn’t know. Thanks.
I think the move to git is a good decision, but what is the workflow? Is there a standard workflow for contributors (including first time)? I don't think the move is as important as the push for inclusivity.
Not having to use mercurial? That would be a dream!
Not at all. Innovation happens much faster on the Java version, only held back by the political influence of Microsoft riding rough shot over Mojang.
Prove it. libGDX and Java are fun. C# is brain draining.
I started a game a couple of years ago on libGDX. It's amazing how fast it runs on my old android phone. It runs fast in the browser on GWT. The same build easily targets all major OS's, it's a real achievement.
How can Java be fun, and C# “brain draining”? You do realize they’re almost the same, with the difference being that C# has followed modern practices for the past 25 years? It’s a sleeker, less verbose, Java. And runs way better.
Unity is only an engine. You’re just as able to only write code if you’d like.
Azul has openjdk builds for Alpine, are those using musl via Portola or something else going on?
Understood. Thanks!
what gwt is?
At the same time, support becomes more complicated. Your app is now exposed to an unknown JRE that might or might not work as expected. If a bug arises, it becomes more difficult to reproduce.
Correct, but you can limit that by recommending the JRE you used to create the application, maybe even test on two, and then let them download it anyways. Corporates don't mind, and it covers your backside (same goes for databases, drivers etc etc; if you do not ship it, you don't have to maintain it)
Sorry. Acronyms annoy me too so I should have known better!
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
&gt; It might not be popular to say ... Criticizing Oracle for stupid doing stupid things is unpopular now?
Because [JavaFX wasn't keeping up with alternate architectures](https://jaxenter.com/jdk-arm-without-javafx-end-javafx-embedded-114212.html) that Java supports. JavaFX is essentially [x64 only](https://github.com/javafxports/openjdk-jfx/issues/376). Compare that with [all the chip architectures supported by Java](https://adoptopenjdk.net/releases.html). If you want your GUI app to "run anywhere" then use Swing.
&gt; They are probably also going to remove it in the future. [Oracle will continue developing Swing and AWT in Java SE 8 and Java SE 11 (18.9 LTS). This means they will be supported by Oracle through at least 2026.](https://www.oracle.com/technetwork/java/javase/javaclientroadmapupdate2018mar-4414431.pdf)
It depends how you define "core". If it's just the syntax, then it's not much, but if you add the standard libraries (core ecosystem), then Java has a lot to know about.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
No, it really doesn’t.
I've never used mercurial. I was under the impression that the two were pretty much equal, though. What makes Git the better choice?
All of those things are not only allowed but encouraged, except there is a [process](https://openjdk.java.net/bylaws). The hardest part is getting started with the first few contributions, and GitHub could help with that by making things more familiar.
Probably just caching effects.
For one thing, its popularity. Anyone who knows any VCS almost certainly knows git. So it's one less thing for new contributors to learn.
Mercurial is simpler. Git seems better to do complex things. Git is much more popular
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Git has a published API, making it easier to talk to via tools. Mercurial doesn't have this, and tools have to reply on parsing output from the Python implementation, which is brittle.
This would also make it easier to just clone the source repo and play with, or just to get the sources in some cases. Especially usage of the forest extension has been weird for people, and you get to see all those nearly empty repos when you just browse the official source. Many people I know always tried to find some mirror on Github instead.
For anyone that bought into the heavily discounted package last year, just ask for a quote on the website and explain your situation in the text box provided. &amp;#x200B; I've just done that and I've got an adjusted quote for just Intellij Idea with the continuation discount. &amp;#x200B; Hope that helps
I want to believe this thread helped solve it faster for others :) Glad it worked for you.