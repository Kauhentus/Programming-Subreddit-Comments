I would go with Amazon Corretto, as they support all platforms (Windows, macOS, and Linux) and their JDK 8 and JDK 11 being used in lots of internal projects for production use. &amp;#x200B; &gt;Amazon Corretto is a no-cost, multiplatform, production-ready distribution of the Open Java Development Kit (OpenJDK). Corretto comes with long-term support that will include performance enhancements and security fixes. **Amazon runs Corretto internally on thousands of production services and Corretto is certified as compatible with the Java SE standard**. With Corretto, you can develop and run Java applications on popular operating systems, including Linux, Windows, and macOS.
No worries! When I refer to it as being a 2D I mean more in the sense that I'm not working in a 3d environment with 3 axis, everything I'm doing is only using the x and y axis. I do fully understand what you mean about it still being percieved as 3d and therefore becomes 3d and it was just poor wording :) Thanks for the support and the help in clarifying :)
Java is fine if you know what you're doing. But if you don't, you might end up doing everything in too difficult a way. That is a risk when going with Java, or creating project skeleton from something like Spring, or whatever framework-du-jour cool kids use today. In the past, I liked to say that Java is a great language, which is just used extremely poorly. I'm a DIY kind of guy, so I throw away all big things like Spring, Tomcat, or every kind of complex ORM, and so on. I just do SPA written in some simple front-end framework against 2000s-style JAX-RS API, implemented in latest version of Jersey. It's HTTP with JSON encoding for the data both in and out, but it's not REST, it's just method calls over HTTP, and method calls are tightly coupled to frontend needs. Whatever the frontend needs, there tends to be a hand-rolled method which provides just that data. To get something listening on port 80 to serve HTTP, I actually use the (deprecated?) built-in JDK HTTP web server, for which there exists a handy adapter in Jersey, just to save a few MB in deployment size. I once tested that I can actually start this "platform" in just 8 MB of heap memory. Most projects I work on have just me as developer, and I'm one of the owners of the company that I work in, so I basically just do whatever I want, how I want it.
I've recently done some stuff with JAAS in order to implement a custom login scheme. What I followed were these tutorials in order to get an idea of how JAAS worked. &amp;#x200B; Hopefully you'll find them useful. They are for Glassfish/Payara since that is the server I am using. &amp;#x200B; [https://computingat40s.wordpress.com/how-to-create-a-custom-realm-in-glassfish-3-1-2-2/](https://computingat40s.wordpress.com/how-to-create-a-custom-realm-in-glassfish-3-1-2-2/) &amp;#x200B; [https://blogs.nologin.es/rickyepoderi/index.php?/archives/48-Certificate-Security-in-JavaEE-Standard-Solution-Glassfish.html](https://blogs.nologin.es/rickyepoderi/index.php?/archives/48-Certificate-Security-in-JavaEE-Standard-Solution-Glassfish.html)
Keep in mind you're posting in r/java so yeah, most people here are gonna say go for it. I'm not really a web developer but I do develop full stack web applications; in my experience the web backend breakdown is as follows: * .NET is great for web apps if your entire stack is Windows/Azure/SQL Server and you're only ever going to use Windows, forever (i.e. the government and many large organizations); I really do like the Microsoft stack, but it's often simply not the right tool for the job; * Python/Django is great if you're a Python guy/girl, I don't really use it though because I work at a large company full of Java devs; * Node.js sucks because Javascript sucks and humanity will be better off when that language and its entire ecosystem is dead and forgotten; * Golang is fun, but there are some contentious decisions they've made with the language, its ecosystem isn't very mature, and if you're just trying to use it as Alt Java then you probably aren't using it for the right reasons; * C++ is great for web apps if you're a retarded shithead. Java is Java, if none of the above is super compelling then it's what you use.
Thanks but I need to use Tomcat server. Can you explain about that part about the callback which I asked in my question? I still can’t figure out why a callback is needed and how it link to the rest of the pieces...what is the flow?
This — it is more comprehensive than anything
Adonis.js is cool.
I use java 8, spring boot/security/data, hibernate, thymeleaf, postgresql, jquery, bootstrap for a simple inventory app deployed into aws for a small family business that i maintain. Not the latest or most elegant app but it gets the job done for about a year now.
I did look at scala and Play framework, but the documentation is okay but not great and there was too much friction given that I haven't spent a good amount of time learning scala specifically. For example, I had a type mismatch in a form mapping and the error message I got was incomprehensible - in no way helped me track down the problem, and I've used Haskell before. The amount of fighting I had to do just for the sake of strict type safety was not worth it, at least in this case.
Yeah, if I was working alone on a project where I wanted to use the Java ecosystem, there's no way I'd choose Java over Kotlin.
I suggest PHP, and Laravel for your use case. Java people don't kill me
Regarding the config/boilerplate, I meant specifically Spring MVC without Boot, in case someone were to suggest that. Regarding the Mkyong article, I've seen that and reached a similar point myself, but like that example and many others I've seen, those passwords are in plaintext. I've tried Grails once but it was practically impossible to find info from the community on Grails 3 (everything was about Grails 2 and didn't work for 3). and there was a definite limit after which the documentation left you in the dark. Has the situation improved? Also it looked like Micronaut is specifically a microservice REST framework.
Take a look at this: [https://www.byteslounge.com/tutorials/jaas-authentication-in-tomcat-example](https://www.byteslounge.com/tutorials/jaas-authentication-in-tomcat-example) &amp;#x200B; I believe JAAS and HttpServletRequest.login() both do similar things in different ways. The new link shows all the different pieces for JAAS on Tomcat. This is all if you need to make your own custom JAAS login. Tomcat probably has several already available. I'm no expert but this is what I know. &amp;#x200B; Here are my understanding of how all the pieces work. 1. Add an entry to the config file of the new login module 2. Add the new realm and login module files to the servers library 3. When the server starts it will now load the login module and realms 4. Set the new realm as the authentication of your web app to some constraint 5. Deploy the app in the web server 6. When the user tries to go to the constraint area it will be asked to login 7. The username and password as passed to the login module 8. The login module goes and connects to the realm or database or what ever it needs to validate the username and password or throws an exception if unable to 9. If no exception is thrown the user is allowed in the constraint
It's a layer of indirection that produces overhead and incidental complexity, and almost all these things can be supported with a monolith. In the case of a mobile app, there's nothing even on the horizon for that. But if it were to happen, then that would be the time to optimize the architecture for it.
I am a rails/php developer. I have been wanting to try out: [https://vaadin.com](https://vaadin.com) Watch some videos about it. It looks pretty cool
That boiler plate used to take 3 months before frameworks like Spring. Best tip is to use what you are comfortable with.
I'm glad to hear the Kotlin experience has been good. It's looked compelling especially with the client side support for it, but I was hesitant to try it until I dealt with the Spring complexities in Java first. I'll give the Kotlin support a shot. Glad to hear a concrete answer on my issue with the seeds though - ok, well I don't like it but I can be pragmatic and do it that way. And yeah the Adapter and UserDetailsService is exactly what I did, though I need to set up roles. I know Kotlin has stuff like Ktor, but sounds like you're happy with Spring.
Try Kotlin and Spring boot
I didn't mean to sound harsh, when you said you've got a background in functional programming scala popped into my head. I get that you may prefer something else though
Yes, because you don't need to code in Javascript.
You don't need to code in JS when you compile to JS, either.
This is an interesting perspective and I had heard some good things about Jersey. The simplicity of a REST/HTTP server is compelling, and I would consider a SPA, but the only experience I've had with them is AngularJS (1.x), which made me want to shoot myself in the face. React looked pretty nice. It just felt like a risky thing to try to undertake in this situation. Do you have a preferred front-end?
&gt; Oracle's licensing change for their JVM distributions This one is actually pretty simple and not a concern. [OpenJDK](https://openjdk.java.net/) is the way to go. Oracle JDK is forked from OpenJDK so they are equal with few differences and OpenJDK is considered the reference. Java Architect Brian Goetz explains this in [a recent podcast](https://www.infoq.com/podcasts/java-language-architect-brian-goetz/). &gt; The Spring security docs have like 1 paragraph on this and refer you to insufficient examples, despite the density of the documentation overall. Spring Security is indeed a beast but it supports many types of auth. [Baeldung guide on it](https://www.baeldung.com/securing-a-restful-web-service-with-spring-security) is pretty good and may get you over the learning curve. &gt; I'd appreciate any input as to how Java, whether it's JavaEE, Spring, some other framework, etc. are a good fit for me and this project I found this article to be a good quick fly-by overview of how Java has changed and become more modern and fast for rapid development of new apps: https://dev.to/stealthmusic/modern-java-development-is-fast
The main selling point for Spring Boot compared to Ktor etc for me is that Spring has a 10+ year legacy which means that for most common requirements there will already be a solution. And lots of stack overflow answers and blog posts. You don't get that with newer frameworks. Add Kotlin into the mix and you have the best of both worlds: A stable, battle tested and very mature framework that has almost everything you will ever need, and a very modern language to write your user code in. The Spring Boot guys are also very much into Kotlin which makes Kotlin support in Spring first class.
No problem, I didn't downvote you or anything. I even tried clojure as well, but unfortunately it does not appear to be well-suited for web development.
In all frankness, if at any point you have to "optimize the architecture" you're going to find out it's a thousand times more work than if you'd just done it right in the first place. Unless you make it harder than it needs to be, a REST API shouldn't introduce complexity--it should introduce a hard division between your view and the model and controller.
P rogrammers H ate P hp
You again talks about "string interpolation" but forget to add that you use Scala, not Java...
Lawyers. That's how Oracle does it.
May I ask why you did not consider Django? It seems ideal for your purposes. Well, I know you dont expect such advice coming from r/java but accidently I found your post and Python + Django seem more suitable for your needs if I understood them correctly.
Thanks, I had some people recommending Symfony and I got an environment set up to look at that yesterday, but I haven't dug in much. I've heard some negative things about Laravel, but by people in larger development settings. Also, not only do I find myself coming back to Java after running like hell, but also PHP is like a real language now. I feel like I'm in an alternate reality or something.
One day at university came this italian company that works in clojure and their main product is a webapp. I think it's one of those languages, as you said in your post, where you can't fastly setup a webapp and you need previous extensive experience. I messed a bit around with ocaml in this sense and I had the same experience
Thanks for taking your time to compile such a long post, I will try my best to answer every one of your questions ! :) &gt; Can you please give some code examples for each of the cases of the problem you are trying to solve and how it looks with your solution? Take a look at [USAGE.mds examples](https://github.com/roookeee/datus/blob/develop/USAGE.md#examples) which shows an evolving use case of datus that employs various features to adjust to new (made up) requirements. &gt; How is this more separate than using a normal mapper? Maybe the wording isn't as clear as I thought but I was talking about 'normal' factory approaches which more often than not combine conversion aspects with business logic in a single location &gt; There are multiple solutions for this. Use a mapper for this specific case and if you want to limit access to the other fields you can use a projection interface. I can't follow here. This point is not about limiting access but about using as little data as needed for a given businessful conversion step (e.g. there is no need to pass a whole object when you only want to uppercase something, but as outlined above many factories I have seen combine those logicful steps while converting in a single location) &gt; Those annotations are there in order to increase productivity. Json annotations, xml annotations, validation annotations, lombok annotations, they're all there to simplify an aspect that you want to handle fast. Coupling is a different issue and has to do with what you want to do with that "POJO" no coupling gets you either nowhere or to a over-complicated api that becomes its own programming language. Can't agree more with your first sentence :) But if you want full control about your conversion process and need some logic in between there is no compile-time checked way to accomplish this with annotations. Sometimes you have to convert external data objects so annotating their fields just doesn't work. I think this point is about personal preference and mine / datus approach isn't any better than your opinion. &gt;cleaner abstractions: programming against an interface instead of concrete classes &gt; &gt;Not quite sure what you mean by this. It's just an API to call getters and setters or a constructor. //offtopic: I was trying to keep the bullet points short but it seems like I lost some clarity, will improve if some other people have issue with these points. I am specifically talking about the `Maper&lt;Input,Output&gt;` interface as there is no conrecte `InputToOutputFactory`. Most people know introducing an interface is best but I rarely experienced it for simple factory classes. Note: this bullet point was not for comparing datus against other mapping frameworks. &gt; From what I can see mappings are imperative, binding is declarative, but I find no advantage to declaring a binding rather than actually doing the binding. [I think calling datus declarative is fine?](https://stackoverflow.com/questions/129628/what-is-declarative-programming) I think declarative programming for conversion is the best approach as you declare what happens and thus don't have to test mundane logic that 'just is'. I know my opinion is highly subjective here. I am just bored by writing the 1000th factory class that clutters my packages and IDEs completion :) &gt;I have not used MapStruct but Lombok is really simple, it's plain java for the mappers. The magic behind lombok is assumed and not that hard to get your head around in terms of usage. Meanwhile your API is rather complicated. &gt; &gt;The argument that plugins and build system are not required is not really relevant. Do you build your project using javac? Every compiled language in the world has a build system. Since java lacks the features for data classes or however you want to call them this gap has been bridged via compile-time libraries. Lombok is simple yes, but I think it's more of a language extension than a library. I won't argue here as I personally just don't like lombok as I favor explicitness over generated code / want full control over what I am doing and doing it myself. My argument here was about how straight forward and simple datus is, nothing more. I wanted to outline the shallow learning curve. &gt; How are traditional mappers not explicit? Naming conventions, annotations and heuristics are faster than writing a complex mapper using that API, not to mention the fact that it is an abstraction hence leaky by nature. This point was meant in comparison to other mapping frameworks so yes, traditional mappers (I call them factories in this comment) are of course more explicit. I don't think writing a complex mapping with many conditionals and businessful steps that are handled by other components of the application are faster than writing the mapping in datus API - how do you get to this conclusion? For simple mappings annotations might be faster but more magical and less explicit (and often not strongly typed, I just dislikeerrors while running an application that could have been proven wrong at compile time). More often than I want to admit I saw someone change a fields name which broke the JSON output and I think this is entirely avoidable by not relying on naming conventions in the part of your application that don't have to rely on it (don't get me wrong, using a fields name to generate its JSON is the right approach for me, it's just an example to elaborate what I mean). I can't quite follow your last sentence here. &gt; You write unit tests to be able to refactor later. Avoiding unit tests is not something to be proud of. Whether you write unit tests for mappers or not is your choice. If your team decides to not write tests for them just exclude them from your code coverage tool. 100% with you here - (unit) tests are the basis of any good software. Excluding stuff from your coverage tool might not be as easy and is very brittle as renaming / moving classes breaks it. Of course it's a choice, I just wanted to stress that you are no longer bound by your coverage tool to test a null check which might not be worthwhile to test (but you can still do it!). &gt;(about adding cross cutting concerns) &gt; &gt;This needs an example for me to see it, I haven't found any link to your api doc to check how you would do it either. Although from the looks of it you're just moving all those responsibilities to the declaration of the mapper, which doesn't really solve much. Please provide an example. //just pass the string through, slightly conflated example Mapper&lt;String, String&gt; constructorBuilder = Datus.forTypes(String.class,String.class).mutable(String::new) .from(Function.identity()).to((out, in) -&gt; in) .spy((in, out) -&gt; logger.info("Converted input {} to {}", in, out)) .build(); I will have to quit for now and will answer your other questions later. Thank you for taking your time to discuss my library with me, I greatly appreciate it and enjoyed your post! Have a great day
Here is the complete source code for Elasticsearch: [https://github.com/elastic/elasticsearch](https://github.com/elastic/elasticsearch) No need for obfuscation there. &amp;#x200B; If you are worried about this, use a compiled language.
Yeah the .NET thing - I agree, it's great if and only if you're going all in. I hope to have a good excuse to give Go a shot sometime, but yeah for a full-blown website it didn't seem well-suited. Please don't tell me anyone uses C++ for web apps. I don't even want to use C++ for the things it's designed for. Now I want to look for a C++ framework that operates entirely on template metaprogramming, in a grotesque curiosity sort of way.
How are you handling authentication? Do you recommend Hibernate?
Based on legacy code in my workplace, just write terrible spaghetti code with no Javadoc
Java is a compiled language.
Everything can be reversed engineered. You should not rely on security by obscurity
In the past I would use java/jsp/struts/jetty/jquery to roll my own web application. Now I use [dropwizard.io](https://dropwizard.io) for REST services and Angular 7 for front end work. This is mainly because we are starting to move to cloud datacenter/docker. It took me a little bit to understand Angular but things are moving along now.
I think compiled language in this context means compiling to native code. Java is compiled to bytecode, which is still very high level, making it easy to reverse engineer.
No problem, other suggestions are welcome. I haven't tried Django; Python is my preferred language for simple scripting, but I start feeling a lot of friction beyond that, between the language itself and the libraries. But I will look into it if the suggestions here don't work out for me.
You don't need to wait for Oracle to get String interpolation, you can use the [Manifold project](https://github.com/manifold-systems/manifold) for String interpolation in Java now. [Check out the demo](http://manifold.systems/images/string_interpolation.mp4).
You don't really want to use any of the Java stack for the web part. Just the clojure for your backend services. We do this with good success in out company.
I spent a lot of time with PHP, since the PHP 4 days, I would say PHP came a long way to PHP7, and it does the job very well. You will find everyone around you criticizing PHP but when you want to bootstrap an application quickly and deploy it quickly they choose PHP and a cpanel hosting. Cheap and Easy. And even if you choose Spring, there will be people telling you to choose Groovy, there will be people criticizing spring, etc.. etc.. considering the size of your app is not going to be really big anytime sooner, I would go with PHP, If you are comfortable
\+1 for Spring + Kotlin. Works very well, Spring is proven and mature and with Kotlin a joy to use. With time you'll notice that your coding style changes to a more direct (and clear) one with Kotlin. At least that was my experience.
java's not the right platform for obfuscation security. you have to accept that people can open up JAR files and get a decent approximation of the code by opening the class files up in any editor or decompiler. unless you're trying to hide something shady that you're doing, I don't think it's worth the effort of obfuscation. I have used commercial ElasticSearch products before. Often what you're paying for isn't the base software, it's the extra support that can be offered, and some of the extra management features. Other platforms that do this sort of free/premium model -- gitlab, intellij idea, cassandra... all of these have a free version with lots of features, and people STILL pay for the premium ones for the additional tooling and support. In theory, yes, you can buy the expensive version, reverse-engineer it, and bolt those pieces onto your free version. But given the cost of developers and the cost of software, it's almost certainly not worth the effort. Not to mention that you're forever maintaining updates. The only real way to do obfuscation like you're asking is with hardware support. PaaS/SaaS offering, encryption dongles, an encryption device, something that makes the code opaque to anybody except with the device, and the code enforces that the device is compliant. Hiding code is so 90s.
Can you share more about your back-end/Clojure stack please? What do you use for the web part at your company?
This is interesting. I admittedly remain skeptical of declarative frameworks like this, but then again I still largely prever Maven over Gradle. I will look into this in more detail. Does the free version cover everything I mentioned?
But why was it necessary to use the donation of Java EE as leverage to add restrictions to unrelated Eclipse projects? At first, the donation looked like a nice thing of Oracle to do, but now, not so much. The massive ecosystem is one of the biggest strengths of Java. Surely that's at least as important as enforcing the Java SE standard.
Thanks for taking the time to clarify this situation. One thing I don't understand is: Is Java \*EE\* free (if it was ever free) for commercial use, or only a subset of it such as the features supported by Tomcat?
Honestly, for a small project like this any web-enabled tech stack will work so do whatever you want. Choose the language/framework you're most comfortable with because that's going to dictate success, and not any functional or non-functional requirements.
Oh dear, it's so cute how you think more Javadoc would have made it better.
I'm not sure if I understand. Care to explain?
&gt; Even if you just need to null-check-then-use do you really need that type name so badly? Some people would forbid the usage of a hypothetical elvis operator because of precisely this reason :)
&gt; But why was it necessary to use the donation of Java EE as leverage to add restrictions to unrelated Eclipse projects? Jakarta asked for an extraordinary thing -- one that Oracle didn't even take for itself when it owned the projects -- namely, assuming over a Java standard while not being a Java standard, so Oracle asked for something important to Oracle in return, namely help in enforcing other Java standards (think of it as: you want to weaken one Java standard? Then help us strengthen another in return). &gt; but now, not so much You're free to think what you like, but I don't think that the fact Oracle did not agree to give an open source project the permission to pretend it's a Java standard, something that Oracle itself (and Sun before it) didn't even do, makes it "not so nice." It was an extraordinary request, it didn't work out, and that's OK. Jakarta is free to change the `javax` namespace just as Sun and Oracle have done before: through the JCP. &gt; Surely that's at least as important as enforcing the Java SE standard. As I said, people can debate the merits of Java standards, and there are certainly strong points to be made for either position, but both Sun and Oracle have been very much pro-standards. And I don't see how that affects the size of the ecosystem. I don't know much about Java EE, but I assume that one of the reasons Jakarta doesn't want to go through the JCP is that other open source project that don't, like Spring, are doing very well. If Spring doesn't get to pretend it's the JCP and it's doing very well, why would Jakarta being in the same position harm it?
I don't know much about Java EE, but as far as I know, it's a *specification*, not a project. Every project that implements the Java EE specification has its own license.
JavaEE is a spec for a set of components and services. The runtimes that implement the spec may or may not be free. WildFly is a JavaEE compliant container, and you can certainly use it in production.
I think spring boot for the API and React, Angular or Vue for the front end should do the trick. No point in messing around with anything else for the client imo. Unless you are thinking about static pages. I know that Angular and React supports server side rendering. I would assume that Vue does too.
Ah, that article even confirms the friction I felt with Spring Security. Glad to know I'm not crazy. But also good to hear that Spring Security is a particularly rough part and not just a tip of the iceberg kind of situation, which I was worried about. It's always hard to tell whether you're hitting a speed bump or beginning an uphill battle.
How long did it take you to learn Angular? I used AngularJS (the 1.0 version) and it was frankly terrible, but I heard it's at least better now since version 2. Any thoughts on comparison to Vue/React if you've used those before?
 /** * TODO */
This is a common meme, but obscurity can actually add some security to your product. Obscurity raises the bar to entry, making it more likely that someone will just give up and go attack something else. You should not rely on security *entirely* by obscurity, but it can be an important component of a broader security posture. For example, consider the colored hand stamps you get when you intend to reenter an amusement park. The security of those relies on you not knowing in advance what color and design is being used today. Nothing is really stopping one person from paying for a ticket and getting a stamp, then texting their friends the color and design for that day. But it's generally just not worth the effort.
We use angular for our web frontend. Though as most companies we are a bit behind on our stack as you cannot realistically change it often. We use angular 1.7. For our clojure stack I’m not the developer there so I don’t have the details there sorry.
Well, I think whether an app would make good use of a SPA framework depends on the level of interactivity required in the application. In this case there is not much. Websites like Wikipedia and Stack Overflow thrive without a SPA. If I'm just using a framework like this on the server-side, what does it offer over just templating that makes it worth incurring the cost of learning a framework for it?
Yes you're right, but based on how op's question was formulated I understood he thought obfuscation = security. Thanks for adding details
Security through obscurity is an older meme, but it checks out... Obscurity can be used to add security to something that is not really valuable. Anything that has actual value should be secured by design not by not telling others the design.
Kotlin = Java - pain
It should be both. Payments for amusement park entry is, of course, valuable to the amusement park. That's how they make their money. (One notable difference between that and software, though, is that it's not a one-and-done thing. Deobfuscating the amusement park entry only works today. Tomorrow they'll randomly generate a new one.) To take an example from people who know a few things about securing stuff, US military personnel are asked to [not allow people to photocopy or photograph their ID cards](https://www.militaryonesource.mil/military-life-cycle/new-to-the-military/getting-connected/department-of-defense-identification-cards). Similarly, it is [illegal to photograph or sketch certain secure facilities](https://www.law.cornell.edu/uscode/text/18/795).
It's not truly incomprehensible if someone's left evidence of what the abritrarily-named methods do! Most of the JD is copy and paste from the one basic method someone bothered to do correctly, though
There is no one-size-fits-all "right" way - the definition of what is right is always debatable and under continuous change, and highly dependent on context. I've seen way more project risk/failure out of naive adopting designs like nonblocking IO and kubernetes and microservices etc. that were overcomplicated for the requirements at hand than out of a project taking long too change according to new requirements. So yes you should design and design well from the start, but the design has to be tailored situationally. In this case, I have no need for two separate server applications, especially given that I'm a single developer. Once you have two people with split responsibilities, for example, sure, that design starts to have more merit. Otherwise, MVC already gives me that MVC separation.
You can AOT-compile your application (to platform-specific assembly-code). There are many compilers which can do this. One is: https://www.graalvm.org/docs/reference-manual/aot-compilation/
Java is compiled to JVM bytecode. There are some decent obfuscators. One technique is to require an "activation code" which the user needs to run the application in a usable way. This activation code would not be some simple short serial number, but a decent sized blob of base64 text. It would be signed by the developer, and the application would have one of several public keys which could verify the activation code. If it is at all possible, the customer's name and other information should be included in the activation code. If you find someone using a stolen activation code, you know where it was stolen from. Furthermore if the application prints the customer's name on reports, then that customer probably wouldn't want someone else's name on those reports -- especially in a business application. Imagine taking a report to the board of directors that has a different business's name on the footer of every page. Similarly if the customer's name appears on the screen while the application is being used. If the customer must change their name from "Joe's Shoe Shine and Domain Name Registrar" to "Bill's Bakery and Domain Name Registrar", then you would simply issue them a new activation code and they copy/paste that blob of text into the appropriate text box within the application. Furthermore you can control individual features in the activation code. Does the customer have the Whizbang feature? Did they spring for the Frobulator option? How many remote users are allowed to connect? The activation code could have an expiration date. The activation code also contains a number of warning days at which point the application begins warning that the activation code will expire and you should buy a new one by this certain date. The activation code could also include a number of grace period days, so that some customers could continue to use the application for XX days after the application indicates that the activation code has expired. Customers could buy activation codes for any preset length of time, or even forever if you want to sell those. As for obfuscation. You can use a custom classloader to load the class which verifies the activation code, or does some portion of the verification. This classloader is passed the binary of the classfile for this class. That binary could be constructed entirely in memory and handed to this custom classloader. That binary might be built by decrypting some encrypted compressed binary within a large string constant.
I first met with a CMS a year ago when I changed my job and loved the idea. I tought of mastering at a CMS and did quite some research on them but could not found a answer to what Java CMS to choose. But here is my researh: 1. Adobe Experience Manager(AEM). The biggest player in the market. Lots of Fortune 500 companies use it. There are a lot of jobs about AEM. It was first developed by a company called Day and the name of the product was CQ. The main developer was David Nuescheler. He also worked on JCR ( Java Content Repositiry ) JSRs. Most or of the underleying tech of AEM are open source. This is a big win cause you can master them apart from AEM. The worst part of the product is you cant access it without a licence which costs 300k euros I guess. 2. Magnolia CMS It is built around standardized java. It uses JEE and Spring. It uses JCR ( namely Apache Jacrabbit) as AEM does. It has free version. You can easly get started. It has good organized documentation. The development experience was much worse then AEM cause when you develop you do a lot of change code / deploy / test and because of the nature of underlying tech of the Magnolia it takes a lot of the time. I can't remember exactly how much time it was. In Aem it takes 5 sn if your project is small cause it uses OSGi. 3. Liferay I did not use it much but I know it uses OSGi and has free version 4. Hippo and DotCms I did install it and tried a few things but I don't remember much remarkable things about both of them.
It's like a client-side framework without the advantages of client-side.
deploy as a service
ok, my take on your situation. Java is very very good. Java ecosystem is best out there, maturity is best out there also. Use OpenJDK and you don't care about Oracle licensing crap, unless your client wants to pay Oracle money for support. Use Java+Lombok or Java+Kotlin bits if you want less verbose language. Scala sucks- too complex, and compile times are too long. Fuck Microsoft and .NET because reasons. Python/PHP/Ruby- weak typed languages, worse ecosystems, worse support, worse maturity compared to Java, but good in some cases. Especially Python for prototyping/science/AI work. Framework wise- Spring/Spring Boot is the "default" choice. For web front-ends, people usually use REST + Angular or some other JS framework. In such case, write REST services in Java, the web content in JS/static pages. Tomcat or Jetty are great. ActiveMQ if you need messaging is great. PostgreSQL is excellent! Maven is great to manage dependencies/builds/release packaging/etc. The rest- there's a library for everything in Java...
Is the AEM open source parts Oak and Sling?
The physical world offers more possibilities for security, mainly because the prize is so small and almost anything works because of that. Security does not come without cost so in this case the amusement park chooses a solution which will give them bigger profit than not doing anything. More comprehensive solution would most likely end up costing more than it would save them. &amp;#x200B; In software world the prize for 'breaking in' is usually much bigger. So the initial barrier erected by obfuscation doesn't really matter when you have something valuable to steal.
yes and apache felix
no he edited his message, he said that OP needed a compiled language Java is a compiled language.
Java is good but Python might be better for someone solo and for a small business. Checkout some of the frameworks for Python. You will write less code in Python.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Thank you for elaborating, it's nice to see another perspective on this. &gt;think of it as: you want to weaken one Java standard? Then help us strengthen another in return That makes sense. I guess it would mean giving up on new javax.\* packages in the JDK or risking disputes / conflicts. Better to have a clean separation. &gt;And I don't see how that affects the size of the ecosystem. I should have been clearer, sorry. I meant the libraries built on top of Java EE that will need to be migrated when switching to jakarta.\*, causing temporary fragmentation. But maybe there will be solutions like compatibility layers, who knows. The other thing are tools developed by Eclipse, potentially negatively influenced by the restrictions proposed by Oracle. Reading the [Minutes of a Meeting of the Board of Directors of the Eclipse.org Foundation](https://www.eclipse.org/org/foundation/boardminutes/2019_03_26_Minutes.pdf): &gt;\[...\] highlighted the potential negative impact of Oracle’s proposed terms on the Eclipse Compiler for Java (ecj). Mike noted that while the compiler has been shipped with the Eclipse IDE since 2001, under a literal interpretation of Oracle’s proposed language it would no longer be possible to do so. Since ecj is such an integral feature of the Eclipse IDE for Java, this would be tantamount of discontinuing distribution of the IDE. That might be overly alarmist though, I'm not a lawyer. &gt;If Spring doesn't get to pretend it's the JCP and it's doing very well, why would Jakarta being in the same position harm it? I believe the main problem is the migration phase caused by the compatibility break that comes with the new package name. Companies might re-evaluate if the cost of updating is worth it. If the migration phase goes over well, I agree, the package name should not make any difference.
I worked with Liferay and Hippo and I wanted to kill myself each time. Do I have a better alternative to suggest? Nope, sorry. I hate (and try hard to avoid) working with those big and complex black boxes!
People do use C++ for web apps and they are, most assuredly, retarded shitheads. Go is cool as a systems programming language, but to me, most of the allure is simply that it's something besides Java that is capable of doing what Java does--which is generally a bad reason to switch languages on its own. I've kinda cooled off on it after working with it for a few months just because it is, predictably, not as good as Java at being Java, and it's not as good as C++ at being C++. That's certainly not a knock on Go, because it isn't trying to do either one of those things, it's just that you'd need to have a solid use-case for what it's good at, i.e. channels and goroutines, for it to really shine. Otherwise I think the natural conclusion, albeit an unfair one, is just going to be that it's a shitty version of Java with structs and stupid error handling.
At work we use both Rails and Java for internal projects. These are mostly CRUD admin interfaces with light business logic sprinkled on top of it. The difference is extreme: what I can get done in Rails in a couple of hours takes days in Java. Admittedly I have more experience building server-side rendered apps with Rails than Java. I tried really hard to find a Java web framework that provides similar features to Rails but I failed to find any. In my opinion when it comes to building classic server-side rendered MVC web apps, especially when it is mostly CRUD, the most time consuming part is building the HTML views. Spring MVC's support for templating is laughable compared to Rails’. We used Freemarker and the tooling around it was really really lacking. Building forms is one of Rails' forte with a nice and readable DSL, for Spring+Freemarker we had to build out pretty much everything ourselves. I use a framework to reduce friction and not to add more. We also looked at Vaadin but without the UI builder it was quite a pain to create UIs and you have to pretty much give up all control over how your UI is rendered. I used to work with Wicket and I cannot recommend it. It is software architecture porn at its best but using is it pretty painful and it is a relic of an era when Java frameworks tried to port the desktop development experience to the web. JSF is pretty much the same, it was a really frustrating few months of my life. To me it seems that Java web frameworks solve the business logic part pretty well but rendering HTML is their biggest week spot and it hurts so much. In general I think using server-side rendered HTML and sprinkling a little bit of JavaScript on top of it is still the way to go in 2019 especially for a solo dev. Building a SPA is lot more hassle than it seems at first and I feel that it is more of a solution to an organizational problem than to a technical one. Personally I would recommend Rails as it is a mature framework with a big community and in recent years they caught up on all the frontend craziness if you ever need it. In Rails there is a gem for pretty much all the basic functionality of an app. The built in stuff for authentication is great but devise has everything covered and works pretty well. File uploads to S3 is also built into the framework. Rails is not perfect but it is still a lot better at what it does than any Java web framework I have tried.
I would advise against Hibernate. It is a humongous framework and it is super easy to get lost in it or run into something extremely surprising and frustrating. If you don't already a Hibernate expert I would go with a much simpler library. We had great success with [JOOQ](https://www.jooq.org/) and lately [Jdbi](http://jdbi.org/) become my preferred choice for its simplicity and focus.
You want a job in web development or 'Enterprise' Java? There are loads of them.. but you'll have to take a junior position without any real experience. To start, just find some recruitment agencies that operate in your area. Ring them and tell them you're looking for a job. They'll ask for a CV.. so make one.
i have a cv and ive been doing that with no luck so far , i applied to 3 jobs prematurely and fucked it up. java and web is way more popular here but i dont have a preference
Don't apply for jobs yourself.. get in touch with an agency. If nothing else they'll get you some interviews, which is useful practice.
thanks why i applied to those first few but i could have waited a bit till after exams. hm well alright
Don't worry mate.. stick at it. I mean, you can apply for jobs yourself, but use the agencies too. Once you have your first job, you'll be on your way.
go to the kotlin sub please kotlin is a google frankestien torpedo on the java community because they are losing the case. hopefully the supreme court makes a ruling against them. if not i will take apple swift api and port it verbatim in Java and call it swiftyJava lol verbosity is a feature. kotlin is a pain to read. no desire to use it.
Nope, not interested. For the same reason I don't like Lombok. This thing will break on every other version of Java because they chose to use internal compiler APIs instead of public APIs. They chose not to use the code generation API for compilation speed. I don't agree with that choice.
Kotlin was made by JetBrains, not Google. Google joined much later.
Getting spring boot passwords to be hashed is literally a matter of writing a single passwordEncoder method that simply returns whatever password encoder you happen to want to use.
&gt; But does it really matter who owns those specifications when they can't be meaningfully evolved without going through the JCP by Eclipse anyway? They can, just not under a JCP namespace. &gt; I meant the libraries built on top of Java EE that will need to be migrated when switching to jakarta.*, causing temporary fragmentation. They don't have to do that. They only need to migrate new/changed APIs. *A lot* of the effort we have when evolving the JDK is to maintain backward compatibility. If that's too much work for Jakarta I feel even better with them not having a standard-like namespace.
I would say focus on spring framework (or spring boot which is based on the framework but easier to setup) explore both Java config and XML config, dive into Web services ( REST, SOAP) move your way up to mvc ( don't worry about front end now if you want to work in java), use a logging library(I would suggest slf4j binded to log4j 1), learn spring integration. And of course with every project have a database. Most important is learn to follow Java writing conventions(it may seem not important at first, but I assure you it is when you work in a team) I assume you have a degree in CS and not software engineering( please correct me if I'm wrong) employers shouldn't expect you to know how to optimize but you should know what to avoid. **Most important thing, don't ever and I mean this learn by watching tutorials and reading only, do everything the tutor does.Code.Code.Code.** Remember you're a fresh graduate so employers are not expecting you to know anything these are just to get you in the "zone" so you can have confidence in an interview and show them you're willing to learn.
While I can understand why you might want `AtomicFloat`/`AtomicDouble`, String is an immutable reference type... and we already have `AtomicReference&lt;V&gt;`
There are worse choices. I would recommend Node.js, as you can reuse a lot of code between frontend and backend tiers tiers this way.
As a developer you should know better than to google in complete sentences :P
I haven't seen any discussion as of late, but it may be considered when inline classes are introduced.
Yep, JCR. We use jrebel as well. Personally I don't like it because it can cause hard to debug problems and most of my time is spent in integration tests. Then there's spring boot which takes 15s to compile and restart the server for another sizable project. I haven't worked a lot with it yet but coworkers don't want to use it for our next projects and some even quit the company because of it (others are threatening to leave should we use it for another project). Regarding WordPress: I used to customize it 6 years ago and was able to take a look at a recent code base: it's very dated (no PDO for instance) and plugins are a trap regarding security. Also lots of code and design shenanigans that have to be kept because of backwards compatibility I guess. The biggest issue though is performance: even a small company website will absolutely tank if you don't sink a lot of time into caching. The only upside is the admin interface which is pretty awesome.
Yeah, I'll definitely spend time drafting an email and attaching a resume for a nebulous "this can be a career opportunity" post. What are you, an ideas guy?
It wasn’t too bad. Maybe a couple of weeks to get the basics down. I really am more of a backend developer. I tried vue for a little bit and found Angular better in the long term. Also was a backend dev for a startup and the frontend guy was writing it in Angular. I ask him questions from time to time when I want to do something and don’t know how.
ive a degree which is a combination of network engineering/dev ops with software engineering. yeah the front end is a horror story, yeah i know about the tuturial trap thanks for the guidance
Spring is the most employable Java library imo
yeah its the majority of java jobs here along with being the highest paying ones too when you have 5-8+ years of experiance
[removed]
In my experience, the companies don’t care too much about your existing knowledge of a java framework/library. They care more about problem solving skills. You can later trivially learn any library/framework they use internally.
Checked exceptions are abundant in core JDK libraries and many productivity boosting FOSS libraries (e.g. Apache libraries).
Hi! Thanks for stopping by today. Now tuck the shit off. ❤️
It'll be like Facebook. Except different.
Microservices make the most sense when you do a lot of deploying and adding new features to a distributed system. The increased complexity is real; you need a messaging-based event queue that can be scaled while preserving order, you have to come up with pivot and compensatable transactions for commands, querying is it's own puzzle, etc. But for a small business with a handful of users? I think it's best to start with one http server with one db and go from there.
You can write your own with `VarHandle`.
In my opinion if you are a lone developer Java is overkill. Typing, constraints slow you down while something like PHP + Laravel has so much already done beforehand for you. Also compiling is a real time killer. Seeing some work arounds here like "writing their own seeds in a sql file while bcrypting using online browser tools??" seems crazy to me. Laravel makes all the usual cases very easy and fast to handle. Obviously I'm going to be hated for this comment, but I see one being 3-5x more productive, faster with Laravel than any Java framework.
For other folks that have not graduated, get an internship before you graduate.
*get a useful internship
Just cram answers from "top java interview questions" type sites. Tech employers believe highly in their interviewing methods, no matter how probably ineffective they mostly are, and most developers and managers are remarkably uncreative with the questions they ask.
Well put indeed, kind sir.
Learn spring boot, hibernate, and react or vue. Right now that's the hotshit tech.
Posting your private email address on a public forum. It's a bold strategy, Cotton. Let's see if it pays off for 'em.
Spring is the most dominant platform. It's huge though. Its primarily used as a microservice platform and/or a RESTful server in many enterprise applications. Don't waste your time on JSP. Java is a backend powerhouse. Learn the basics of some frontend frameworks like Angular or React. Angular is still the most widely used in enterprise applications.
Can I ask why you don't like Javascript? I rarely use it as I'm doing just fine with spring and Android for my current project but with the perceived universality of Javascript's use cases such as React Native for cross platform mobile apps, Electron for desktop apps and Node for web &amp; backend, it seems it would be easier and offer time savings using Javascript for everything. What would be the benefits of sticking to Java and only applying other languages when needed for non java supported cases?
Don't forget that Java is also big in mobile although it is no longer the preferred language for Android by Google.
So....first thing, ignore all the comments about spring boot, angular, react and any other "insert hot tech here", senior developers are going to be fighting for those and you don't stand a chance of beating them to the gig. &amp;#x200B; What do you want.....XSLT (Xerces and Xalan), JPA and EJB, SOAP, JSF, Servlets and Spring (injection and MVC really all that matters) and the usually helpers like apache commons, slf4j, basic annotations, injection and a bunch of other core libraries too numerous to list here (just look in the maven pom of your first project for a big list) &amp;#x200B; Why? Because the entire freakin' globe runs on java XSLT/EJB/JPA/SOAP/JSF/JSP/Servlet/MVC. As a junior programmer you'll be thrown onto legacy projects and help desk/support to build your real world problem solving skills and your core knowledge. There is no point preparing for projects you'll never get on and there is no point learning hot new tech if you don't know the basics. Yes REST is cooler than SOAP, but companies have a bucket load of existing SOAP services that need maintenance that their senior developers bitch and moan about working with because they want to work with the cool new tech (same story with the other tech I mention)...if you're "that guy" that just gets in and works on the stuff that everyone else complains about, and, most importantly, keeps it running, people will remember you. Greenfield projects are money sinks that are 'nice to have', legacy systems are run on pennies but entire companies shut down if they stop working which means every time you get it back up and running by debugging some crappy code no one else will touch, and do it with a kind and empathic smile, people OUTSIDE the dev team will be singing your praises to the executives...that's how you get remembered, that's how you get promoted. &amp;#x200B; And if you don't learn the basics first you'll end up a shit developer anyway....so it's win/win/win. &amp;#x200B; \-22 years enterprise java experience, certified scrum master, certified FDD, certified RUP, certified WebSphere (is that even still a thing?), sun certified programmer, sun certified web developer, sun certified web services developer, sun certified enterprise architect, certified in slapping people who respond "what's sun"
Hello static916, &amp;#x200B; I have looked at this article. However, there is this below which still confuses me : Here we validate the credentials against some // authentication/authorization provider. // It can be a Database, an external LDAP, // a Web Service, etc. &amp;#x200B; So, no matter what we still will need to store the password in our database for the above verification. However, if this is stored wouldn't it be very dangerous ? &amp;#x200B; How can one uses SALT to make it more safe ? And is there anyway for the authentication to hand over to somewhere outside the database so that there is double-checking of the identity? Another point is I can't find the location of the **$CATALINA\_BASE/conf/jaas.config** in my tomcat server. Could you advise on this ? &amp;#x200B; Thanks.
It's probably best to not tell someone new to the industry to avoid any and all modern technology, especially in favour those which are rapidly becoming redundant. Good if you want to spend the next 10 years on life support duty for applications as they get replaced.
The best alternative is to use the VarHandles introduced in Java 9. If you need Atomic Doubles or Float in Java 8 or earlier you can convert them to long or integer using the Double.[**doubleToRawLongBits**](https://docs.oracle.com/javase/7/docs/api/java/lang/Double.html#doubleToRawLongBits(double))() or Float.floatToRawIntegerBits() and store the results in an AtomicLong or AtomicInteger. As has been suggested, for String you should be using AtomicReference&lt;String&gt;
I saw a few other people mention working with recruiters or agencies. 👍🏻 If you’re intimidated, do this. They get paid when you get paid, so they’ll be motivated to get you working. It’s easy experience and it already sounds like you care about it. Run with it. Deep breaths :) Work hard (but not too hard!) and learn all you can on the job, even if it’s not what you really wanted to do. Take your time off seriously, because a you that works 80 hours a week is a you that works 45 unproductive hours a week and is too burned out to move forward getting to what you actually wanted to do. From your very first job, referrals mean a lot, so always be kind and helpful. Often this is as easy as paying something you just learned forward. Teach it to another new hire and you can make friends easily. Your reputation will go a long way in a business where people can be so blunt and harsh on each other. Future interviews with solid referrals can be so much easier since there is often some extra levels of trust. Hope that helps, been doing this over 10 years now and love (almost) every day of it. I hope you do someday too 🙂 Don’t stress too much about the things you don’t know - just keep learning and you’ll have the confidence to pick up anything you need when you need it. It’s an exciting time!
Re: job fair, just go around and ask lots of questions. Don’t stress about saying everything right. Have genuine interest in what they do, share what you know, and be honest about what you don’t (yet) know. Passion for what you do can shine through even a very shy exterior so don’t be scared to get excited when you hit something interesting :) Take lots of resumes. Like 30+. Try to make it one page (please please please). Even if you don’t like the company let them have one anyway. Don’t overdress unless you want to work somewhere that looks like that everyday. Don’t be afraid to go to a booth just for their loot. They bring that stuff because it’s amazing and they know it. I got a chocolate coffin (yes, a coffin) one time. It was amazing.
Spring is tough to learn. It probably took me a solid 3+ months on the job to really feel good at it and that’s after doing 8+ years of MVC style .NET and plenty of Node.js
There's definitely a ton of "automagic" happening behind the scenes. It gives you an appreciation for sensibly opinionated frameworks.
Yep! They will expect 6 months of ramp up time even if that sounds insane to you. Exceed their expectations and win. Even if you don’t, you still will do as well as they expected. :) Companies that don’t think this time is necessary are insane and you don’t want to work for them anyways. They will be harsh on deadlines constantly because they have a culture of underestimating.
Bingo! Absolutely spot on. OP's degree will show potential employers that OP has a brain, and has been able to use it when required. If, at interview, OP shows the sort of curiosity and humility I seem to detect from this post, rather than your usual "I'm an IT graduate, I am special" attitude, OP has a chance, especially if OP can sell Passion for Programming (nobody wants to hire a junior programmer that tells them s/he really wants to be a consultant/team leader/manager etc)
It’s beautiful once you get it. It’s horrible when you are staring down the barrel of it’s 400+ page reference guide......
&gt; IMO, it doesn't make much sense to build out a monolith anymore. Yes it does. multiservice application adds a level of complexity that if you don't need it you're always better off without it. never ever go full modularized bonkers from the get go. Design well and you should have no problems splitting it up if you need to down the road. Most of the time you won't need to. Keep in my 2 things: KISS and YAGNI.
What i did do once (and I would do it again) was to generate the boilerplate with a code generator. JHipster for example. Yes, I modified the hell out of it, and yes I knew what I was getting and I already knew how to use all the libraries and frameworks they were using. But man, it saved so much time on the shit that I didn't have to do again. I totally recommend it, but no, it's not suited for every app for every business and for every need. YMMV.
Of course - that was a silly oversight on my part. Can `AtomicReference&lt;V&gt;` refer to any kind of object (e.g. ArrayLists, HashMaps)?
1) I assume the OP is an adult, not a child that needs To be told the tech equivalent of “Santa is real” in order to tend to their career 2) replacement cost money and risk and as such they don’t happen unless there is a very good business case...if anyone ever insists I rewrite a legacy system that is currently working because there is some cool new tech available I fire them, they are about to cost me millions of dollars on a project that will never be completed 3) all the tech I suggested is still used for green fields work in some of the largest organisations on the planet...many more factors go into choosing tech for a new project beyond “I think it’s cool” such as “how mature is it”, “how supported is it”, “is it easy to hire staff for it”, “can my existing staff use it” etc etc 4) enough new work is being done in COBOL to support at least one specialist COBOL software company in every major city on the planet...freakin’ COBOL! So java XSLT isn’t going anywhere in the next 10 years 5) learning “cool tech” without learning the fundamentals turns you into a shit developer, so if you have a chance to learn the fundamentals while getting promoted faster than everyone else I say go for it...but you feel free to tell the OP how stupid the idea was as he/she drives past in his/her new Tesla
What part of: + **No surveys, no job offers!** Such content will be removed without warning. Did you miss? **Removed**
Depends if you're looking for a job at a larger or smaller company. At a larger company they're less likely to care what libraries you know and more likely to test you on algorithms under the assumption that you'll learn their stack during your onboarding. At a smaller company they might not have time or a defined onboarding process to ramp you up, so in that case just study for the job you want. Wanna do android? Make some apps, learn dagger, etc.
“Curiosity and humility” - thanks, I appreciate the compliment. When I was teaching (taught for 4 years) I had students regularly ask “what is the best thing you can do for your career in programming”, they always expected me to respond “learn technology X” But my response was always the same: “don’t be a dick” A good, curious, humble programmer who is empathic and honest and takes pride in their work will always have a great career.
I was told that only 1 in 7 job applications will get a response, and that response is usually "no". keep going
1. Not sure what you're trying to get at but okay. 2. Which is why decisions to rewrite or consolidate existing software into a new stack is usually on the basis of operational cost, maintainability, performance etc. Diving into new technologies headfirst is only as risky as living in the past and refusing to budge because you're scared of change and accepting that skillsets stagnate unless kept current over time. 3. Being used by large companies is in no way an indicator of quality. All of the worst technology projects I've worked on have been inside extremely large companies. Large non-tech companies are generally not conducive to good quality software development. Market edge on a product offering isn't gained by doing the same thing the same way and expecting different results magically. The new technologies exist because they take the lessons learned from previously technologies and using them to build on the success of their predecessors and circumvent their weaknesses. Look at the rise in popularity of Kotlin &amp; Scala vs Java as an example. Take the same concepts, just do them right, and don't try to retroactively fix the flaws in a platform. 4. The work is still being done in COBOL because of tech debt and people's inability or apprehensiveness to change, and a lack of ability to migrate away from the antiquated systems built on those technologies. That is in no way a selling point. 5. Fundamentals are core, I agree. I don't see why you need to use outdated unfriendly technologies to learn fundamentals however? All you gain from working with outdated stacks is the anti patterns and poor design approaches that have since been solved since these technologies first entered use. If you want to be a good fundamental programmer, running away from enterprise Java is probably the best first step possible.
Oh...and the one guy that knows how to keep the critical system running never gets laid off...so next time there’s a financial downturn and they’re trying to figure out which names to add to the 50 developers who are going to be crying “but, but, I know angular” in ten minutes time you can bet it’s not going to be the name of the guy who keeps the entire company running... ...and if it is, they’ll realise it within a week and you can then bleed them on charge back rates...I’ve been laid off once in my career, during the dot com bust, the next week I got a call “oh, it turns out you’re the only one who knows how that system works can you do some work for us for a few weeks just to fix these bugs we’ve found” .... “absolutely, $5000/day with a minimum 4 week engagement paid upfront” they had no option but to say yes and I spent the dot com just on a beach waiting for the industry to bounce back
All you're describing is organisations who clearly have no idea how to run a software development org. If one person has all the knowledge and it's undocumented, that's not a good thing. Honestly you're just coming off as obnoxious. If you want to do soul crushing mindless J2EE bs that's fine, but don't try to convince someone young and fresh who has the chance to actually have an interesting and intellectually stimulating career to throw that away and work on corporate Fortune 500 bs ERPs. It must be fun being a relic.
1. You suggest I not tell the OP something, I suggest tell OP everything and trust his/her ability to make their own decisions. 2. None of the nonfunctional requirements you mention inflict any of the technology I’ve suggested. 3. Apart from a small stint with a dot com startup back in the late 90s I have only worked for large corps and gov departments and your generalisation and stereotype is not reflective of my real world observations. Large companies have wide mixes, from cutting edge to ancient, simply because they have existed for so long and are so big...painting them with the “old tech” brush is self selecting bias. And while Scala etc might be hot in the pub or geek sessions, those tech that everyone said were going to be the next java just don’t have the jobs to back them up. Everyone thinks they’re cool but no one is hiring for those skills, there are easily thousands of java jobs globally for every one Scala job ...and for the same reason I mentioned, the non-technical cost and risks (HR etc) are too high....no one wants to have to find the skills to support some Scala app when everyone jumps to the next “cool tech”, the return on investment just doesn’t exist. 4. Those COBOL developers are making $200k+ per year and doing incredibly technically interesting work bridging existing COBOL apps that are too complex for a rewrite that suffer no technical issues to new tech. 5. Antipatterns exist in all tech and your thoughts on enterprise java are at odds with most of the global programming community. Let’s remember it is easily the most popular development platform ever developed in the history of our industry and most of the worlds enterprise software runs on it.
So you're confirming you've never worked in an environment conducive to actual interesting and/or challenging work? Gotcha. The companies who are actually driving a competitive advantage to rapid innovation and development are the ones using these technologies. I'm not surprised you've not seen any of it given the environments you're working in however. I'm not sure where you are in the world, but in my city right now people are crying out for skilled developers with experience in all the areas you claim aren't needed, Kotlin, Scala, Golang, k8s, you name it. And if you really don't think those limitations are an issue with any of the technologies you recommended, you should really actually take a peek outside your little corporate box sometime and see the amazing things people are doing daily. "Most of the global programming community" have never tried anything other than the dated Java or C# they were shown by out of date lecturers in universities. It must be really depressing to have not changed a single thing about the way you work in 20 years.
And you’re making sweeping generalisation about companies and industries you know nothing about. I’m coming off as obnoxious to you because I’m not agreeing with you which says everything about your personality I need to know. To the OP, one more piece of advice...if you ever meet someone that makes sweeping statements like “mindless J2EE” and suggests something being “new” is enough due diligence to spend millions of dollars rewriting existing systems ask to be transferred to another team. They will eventually get their wish to rewrite something and it will be a spectacular failure as they discover all the limitations of the new tech they’ve fallen in love with and all the undocumented bug fixes in the existing system they need to reverse analyse. You do not want that failure anywhere near your resume. Just sit back and watch them burn their CV to dust the move in after their done with a real solution.
If you're the kind of person who relies on their platform having been out for a long time to provide any stability or reliability to the work they do instead of realising that it's the people building it who do that, then I don't know what to say to you. I'd love to hear more about what you think I do and do not know about, what industries I have and have not worked in? Because wait, you don't. You act like no one has ever built a reliable software product in anything but Java when in practicality, any legacy codebase I see which has massive maintenance issues tends to be enterprise Java (either that or PHP). Have you ever actually worked in any other stack, or are you just drawing all of your conclusions out of thin air? I'd love to hear how you've given these "new" technologies that you hate so much a proper trial and seen how they've worked out for your team.
Developers who have never made it through the selection process of a tier 1 always make up stories about how large corporations are “outdated” to make themselves feel better about not getting hired...doesn’t make it true. As for all that other stuff you say about me, you might want to google what “projection” is...you’ve created an imaginary version of who I am in your mind to attack and make yourself feel better..:but that essentially means you’re now arguing with your own imagination which is hilarious.
&gt;If you're comfortable with SQL I'd recommend JDBC templates over JPA. **+10** just for that. As a matter of fact, straight JDBC - with SQL files directly in a dedicated folder. Full control in every respects (open your SQL file in IntelliJ and run them natively against your db, even parameterized) and it's not that much more work once you have your common classes/helpers in place. I'd even argue you're *more* productive.
Awww, it’s so sweet you love hearing about me. You should, you have a lot to learn. As for other tech, I’ve forgotten more languages than you’ve programmed (including the ones I was paid to design and write compilers for). I’d be more than happy to share my project inception due diligence procedures with you, my rate is $2000/day with a minimum 6 month booking and there is a 3 year wait list...I’ll let you know.
Yet to fail a selection process across all scales of company but that's a nice story? T1s are fine if you want to make good money whilst being bored out of your mind working with technology that is fighting back against you every step of the way, from the lowest level of platform through to the highest level development processes themselves. What do you think people mean when they call said technology outdated? Let's see, someone who has been working doing the same thing with the same tools the same way for the last 20 years and is scared to take a look at the industry around them and accept that times have changed? Sounds pretty apt to me.
More projection 🤦‍♂️
Wow you really are fucking obnoxious aren't you. I'm sure you have bud, I'm sure you have. Nice imaginary numbers, you must get so many internet points from your meaningless flexing to strangers online. I don't know if I'm supposed to be impressed, contracting is contracting what are you trying to prove to me exactly?
Oh fuck off you cretin, haven't you got a FactoryBeanConstructorBuilderModule to write some getters and setters for?
And finally insults :) Nice one, nice emotional stability there. P.s. this is why projection is bad, it creates emotional instability
More insults eh? Do you want a cup of tea petal?
Um, maybe clean up your written English.
/r/learnjava is for study materials. /r/java is for: News, Technical discussions, research papers and assorted things of interest related to the Java programming language
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
It can, but the important methods of `AtomicReference&lt;V&gt;` only work for immutable types: &gt; Atomically updates the current value with the results of applying the given function, returning the updated value. **The function should be side-effect-free**, since it may be re-applied when attempted updates fail due to contention among threads. Hence, `AtomicReference&lt;ArrayList&lt;T&gt;&gt;` would only work with functions that take an `ArrayList&lt;T&gt;` and produce another `ArrayList&lt;T&gt;`, without changing the original.
Some people are reluctant to hire someone who is still studying. I've had my boss complain about a student who quit after a few months because he needed more time to study
this is close to real life code, in reality it would have more fields but everything is here: https://pastebin.com/GkPwxRtx That's a normal mapper. What exactly do you mean by "normal 'factory' approaches". Factories are factories, mappers are mappers. Mappers handle transforming from one type to another, factories handle creating objects. &gt;&gt;Use a mapper for this specific case and if you want to limit access to the other fields you can use a projection interface. &gt;I can't follow here. Example included in pastebin. &gt;I am just bored by writing the 1000th factory class that clutters my packages and IDEs completion :) Then that's a problem of how you structure your packages, how you name your classes or functions. That's why I asked for a CLEAR SPECIFIC example of the code that your library would help improve. &gt; But if you want full control about your conversion process and need some logic in between there is no compile-time checked way to accomplish this with annotations. I already use Jackson, I would say that is a mapper too right? from byte[] or InputStream to my annotated object. I have never really had the need to use extra logging inside whatever Jackson is doing. If I want to do logging I can do it after or before anyway. What's the problem? I don't understand what problem you have to ever want such a feature? In fact imo it's a bad idea, mappers should be pure. A mapper that has side effects is both dangerous and unexpected, which makes it extremely dangerous. &gt;I know it is nitpicky but datus does not use any reflection at all How are you instantiating objects then? Java has no variadic templating so you can't pass an N parameter constructor reference and just use it. Also what happens when a class has multiple constructors? That case can fail at runtime instead of compile time? Also what happens if you want to change the order of the parameters in the constructor, from what I can tell you would have to change the order in all your mapper implementations too, otherwise you'd get them mixed. What happens when you give fewer arguments to a constructor than it requires. I highly doubt there is any viable way to do this without reflexion.
&gt; And you’re making sweeping generalisation about companies and industries you know nothing about. I’m coming off as obnoxious to you because I’m not agreeing with you which says everything about your personality I need to know. Nah, you're definitely coming off as obnoxious to me to.
I don’t understand the hate for Monolith in the era of Microservices. Consider the cost also which comes with microservices for small project and small user base compared to just a monolith application. I don’t understand the use case of Microservices when you are just starting out and have like user base of 1000. Doing microservices will not be cost efficient compared to Monolithic architecture But that’s just my opinion
You wouldn't happen to be looking for a poorly paid yet intesting job, would you? :D
ugh...is this still going? you get that making any type of judgement about an individual based on a couple of paragraphs of text says more about you than it does about them right? What you're saying to the world is "I'm willing to call someone who disagrees with me insulting names even though I know absolutely nothing about them...I am that fragile about being disagreed with". I mean seriously, get some self-confidence already.
The main issue with Spring Security is that it was created back when most web app back-ends were still spitting out HTML on the back-end. The current 'modern' approach, where you have an SPA that calls REST end-points, is not the default for Spring Security. It's a bit of a hurdle, but if you've done it once it's really not hard. Main benefit of using Spring Security over your own implementation is that you can then apply roles based access control on any method in any Spring component, that you have access to the Principal in all components and that it's really easy to configure which routes are and are not protected. But it's a bit more work to set up than just doing it yourself.
thanks...but I retired from programming last year...I'm a sculptor now. Sometimes I think about doing some part time work, I miss it quite a bit, but sculpting keeps me super busy I don't know if I'd find the time. Good luck with your project though! :)
&gt; I once tested that I can actually start and serve an application written with this "platform" in just 8 MB of heap memory, that is -Xmx=8m. Just FYI: A bare bones Spring Boot service uses 35MB, that's mostly Tomcat. I mean you do you of course; but reinventing wheels is generally not something clients are willing to pay for, not to mention these home-grown frameworks tend to get unmaintainable fast.
Did you check out Flask? It's a nice Python REST service framework, much smaller / simpler than Django.
&gt; Obviously I'm going to be hated for this comment, but I see one being 3-5x more productive, faster with Laravel than any Java framework - given similar proficiency. Can you then also explain how that would be possible? Because I can't really imagine a difference being ever that big with 'similar' proficiency. It's not like that with Java you need to type 3-5x as much.
1. To answer your question: You don't need to know anything else. Start applying for jobs rather than "grinding algs again". Either by yourself or through an agency (as others have suggested). You will learn everything else you need to know through paid (!) employment. European CS grads are highly wanted right now. Don't get one-itis (treating every job interview as a 'can't fail' opportunity), but rather try to get as many interviews as possible. 2. I don't want to get up in your business, but I can't help but notice a pattern here: &gt;like my usual self i started freaking out again because im very hard on myself and i cant help it (lists a lot of accomplishments) &gt; i feel like i know jackshit about anything. &gt; in dublin Ok listen. It seems to me that you are kind of panicky and 'can't help it' internally. One red flag: you're also in Ireland - my experience: the lack of sun isn't helping at all. And there's an epidemic of anxiety going on there (there are well established links between lack of natural sunlight and issues like anxiety). Here, read this: https://www.independent.ie/irish-news/we-need-to-talk-about-anxiety-irelands-silent-epidemic-35220165.html Please try to *calm down* one way or another, talk to your general practitioner.
&gt; kotlin is a pain to read. Anything you're unfamiliar with is a 'pain to read'. I've heard the exact same reasoning when Java 8 came out and some people had to learn the new lambda syntax.
If someone has the decompiled code, then what? There's no comments, no documentation and most importantly; no tests. They're probably better off writing 'the same' from scratch.
Yeah, those questions that you never ever need in practice )) They also copy them from "top java interview questions" type sites ))
&gt; you get that making any type of judgement about an individual based on a couple of paragraphs of text says more about you than it does about them right? No. I'm telling you that you come across as an ass. You're being rude in your communication. If you don't see that, then that is your problem.
It is an illusion that you get it: ``` bash# cd spring/spring-framework bash# find . -name *.java | wc -l 6752 bash# cd spring/spring-boot/ bash# find . -name *.java | wc -l 4232 bash# cd spring/spring-security/ bash# find . -name *.java | wc -l 2127 ``` Having so many classes to deal with (and a ton of magic) means it is new language (French, Chinese) and you need 5-10 years to master )) You may feel comfortable with micro-subset of Spring but get bitten if you step outside.
I wrote this at 2 am
lol....gosh, so much going on in your mind that you seem to be unaware of. Anyone that is so unaware of their own thought process as to allow it to assign labels like that after a spectacularly short interaction that contains no non-verbal or tonal component is not someone who's opinion means a great deal to me. You think I'm rude....I don't think you understand how you came to arrive at that label. I don't think you understand the affective and emotional processes that are going on inside you right now. I think your thought process is incredibly corrupted by the emotions you're feeling and if you were to honestly ask yourself how much information someone would need about YOU before you believed they could REASONABLY form an opinion upon which to base any labels you just might gain enough insight to realise why your opinion doesn't matter to me. Even your last line, desperately trying to make your interpretations my problems...nope, sorry, how YOU interpret things is YOUR problem buddy...have a nice life :)
Ah well alright
If you need to investigate content of returned collection you would need to call "Evaluate" on `getEmails(` and in remote debug complex calls with DB access tend to hang. That is why in production code returns from such calls are saved into variables and some times logged into debug.
This seems like the best approach to follow. I've been a junior java developer for 7 months now and I've been using these exact tools and techniques. For best practices I will suggest install SonarLint as a plugin. You can take udemy courses for spring boot which will get you started. Moreover spring documentations are very comprehensive too. In my opinion you should focus on web services.
&gt; then they can just look at the website itself so I'm looking for ideas And? The point isn't to be revolutionary, its to find something that demonstrates your skills as a programmer.
Are the coursera courses actually good?
Wrong subreddit. /r/javahelp is for such questions or, even /r/learnjava is better suited /r/learnprogramming has [extensive lists of project ideas](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_where_can_i_find_practice_exercises_and_project_ideas.3F) in their wiki. **Removed**
I have no idea about coursera courses. But I've taken a udemy course on spring boot by in28minutes and I found it really good as a starter course. I would recommend you to check it out. Along all these, please learn github too if you haven't already.
I have a github I try to do something every day and remain active
I can share with you 2 project I saw during my studies, the first is a forest fire simulator : you generate a 2d terrain of highly/lowly/not inflammable cell, you put some cell in a fire state, and you run an engine that change the state of a cell based on its neighbors and some probability. Basically the cell goes from flammable - &gt; high flame - &gt; low flame - &gt; embers - &gt; not flammable. You can also change the probability of inflaming thing with directional wind. Another project was a signature recognition program, not neural network based. Basically you sample points on a continuous line (the signature), you can sample by time or distance. Then you normalize it and you compare with the original. There is a lot of optimization and different solution at this problem to research. You can built a basic version of these project in a day of work, but there is a lot of improvement to do if you want
Thanks I didn't think about it that way
Is this what you're looking for: https://coggle.it/diagram/WqgTTNMJtPiHph_q/t/java-development-in-2018 ?
YESSS!!! This is it! Thank you very much!!!
Go forth and Java.
&gt;Go forth I'll march into the bytecode realms.
This is cool, but 90% of it has nothing to do with Java.
That pretty awesome. I believe it's a mindmap graph. Do you happen to know if there's other diagram for language like Python?
&gt;C++ is great for web apps if you're a retarded shithead. A bit over the top don't you think?
Spring and Spring Security are our major components for the infrastructure to secure web interfaces with declarative security. They also support integrating with various user stores (LDAP, AD, local). Other components include OWASP antisamy for sanitizing user input. In the tool chain, we use SpotBugs with the findsecbugs plugin. I've been impressed with what the combination finds. OWASP scanning tools can exercise your code after it's deployed.
Is it really necessary to learn multiple monitoring frameworks, i.e. zabbix and nagios? Or is this just a quick glance about stuff you should look for? Looks like a rather unfinished map, but a friggin great overview
Thanks for the overview. I really like it.
IMO The graphics give a nice overview about stuff you should watch out for. E.g. monitoring is necessary in big projects. Which tools may or may not be used are listened. Core stuff you definitely should know about Web stack stuff you should know and their alternatives. Reactive programming etc. Sure, nagios may not be Java, but incorporating your program with nagios is a really great opportunity to improve the stability of your service/app/server.
I understand... But all of that is true of your writing c#. All of those things are orthogonal to Java.
what's a coggle? a play on words?
This is a 50 minute talk from GOTO Chicago 2019 byGeorges Saab, Vice President, Software Development, Java Platform Group at Oracle and Mikael Vidstedt, Director of Software Engineering, Java Virtual Machine at Oracle. Give the abstract below a read before diving into the talk: &amp;#x200B; Java has changed more in the last year than in the previous five years”. Find out more about these changes and what they mean for you! This session will cover the changes to the Java Release cadence and licensing, choices and options available to you going forward, how to know what to expect and prepare for Java’s continued evolution into the future. In addition, we will cover specifics of feature work in Java 12 &amp; 13, and ongoing development projects in OpenJDK.
**Sidebar** -&gt; **Do not post tutorials here!** **Removed**
Sorry!
I think many people think they are doing microservices when in reality they are doing a rest backend and JavaScript (angular, etc) front end.
Try asking on /r/python.
Also, the OWASP dependency plugin for Maven. It tells us what dependencies are out of date due to published security vulnerabilities.
Yes, the core framework is all open source as we are committed to keeping it that way. We’ve built software to migrate a hospital and a state taxation system with &gt; 20k users if that helps with the skepticism. But feel free to evaluate your own, my opinion is biased :)
IDEs usually show method results in the debugger views
Code for the virtual machine is open sourced: [https://github.com/aionnetwork/AVM](https://github.com/aionnetwork/AVM)
Hola, There is much more simple to deal with front end. Take a look with jhipster. For the memory footprint I would say that in a near futur I am pretty sure spring will be compatible graalvm
Don't write your cover letters at 2am then
How do you deploy your solution? Cloud? Bare metal @ your client site? Because this is a critical aspect with SMBs. They don't have a "professional" infrastructure (and sysadmins) and don't have the money to. This is for me a blocking point when working with SMBs because I know that, at the end, I'll have to do the sysadmin work... and not only the dev.
There’s nothing wrong with taking classes. It’s sometimes easier getting feedback from students and teachers with topics. The internet can be hit or miss.
What part of: Fuck you Don't you understand?
What part of: • Fuck your rules Did you miss?
Learning Java is explicitly off-topic for this sub (see the sidebar), but you'll find lots of help and resources in /r/learnjava and /r/javahelp.
Demeaning a post trying to make something new and give someone else an opportunity to be involved. What are you? A slave?
You'll be a loser. Except different.
Classes are important in Java, you have to use objects.
&gt;I feel like it requires classes. Of course it requires classes, it is an object orientated language :-). I learned Java in college as part of a two semester "Introduction To Programming" class. Java was the language used to illustrate programming concepts. The text book of the time was written by Deital &amp; Deital. If they have a current or near current version of the book I would take the time to read it and practice the examples. Java is easier to understand when you understanding programming and Object Orientated theory. It will cost money ( heaven forbid ), but [Virtual Pair Programmers](https://www.virtualpairprogrammers.com/training-courses/Java-Fundamentals-training.html) makes excellent canned video classes. You also access to experts to answer your questions when you buy a class.
when I started on 2011, books helped me a lot, but I had to dedicate time on it, there is no shortcuts on learn programming, for now I can recommend you 'sams teach yourself java in 21 days', I think Is a book for starters.
Which is why I personally find this diagram helpful. It's a skillset a programmer should have, and which tools are necessary to fulfill this. :)
It depends on the size of the client. I always use Docker to package the app. In some cases its a Kubernetes cluster in an AWS account in their name. Some have a dedicated server on premises or on something like Hetzner. And for the smallest clients I host their service on one of my dedicated servers on Hetzner in a k3s cluster.
Dammit! miss type!
**Removed**, see /u/morningcheese's comment.
Thanks for this, I actually find myself losing track of these things. It may be out of scope, but I think linking actual docker repos would be useful as well. Thanks again!
tl;dr - "buy our product to scan for vulnerabilities"
Sling is missing from the list of web frameworks 😢
I'm not sure but he may have meant Java being statically typed.
I've never really touched PHP other than setting up a basic Symfony project the other day. I'll at least pull down a Laravel project and take a look. Thanks for the suggestion.
I really hope you don't treat any devs who work with you this way.
I'm not the parent poster, but Javascript is exactly what I have in mind when I think of poor ecosystems. Yes, there is a lot of support for it, but not only is the language pretty bad (though lodash helps a lot) and Node's asynchronous aspect only recently become sane with async/await (still with plenty of sharp corners), the ecosystem is the highest-churn, lowest-quality I have ever encountered. There are certain core libraries which are high quality and well-documented, like the Node standard library, Express, and Lodash, but I haven't seen another one that comes even close, and these days competitive software needs to be dependent on more than what those offer. You can find libraries on github with hundreds of stars on that are just terrible, and others that you only find out are terrible when you've invested time in trying to get them to work. Sequelize, last I checked the most popular ORM, has the most worthless API documentation ever. I wasn't even using it for ORM; I was trying to use it just to manage SQL migrations. Pretty much every method is documented as "returns Promise", because it's all auto generated and it can't tell much at all from how dynamic Javascript is. Nobody should ever have to dig into the source code to reverse engineer a dependency. I also think/hope soon we'll see WebAssembly seriously reduce JS's value proposition.
Indeed. Similarly, I feel that event sourcing is conceptually very compelling. In fact, I wish I would have (the benefits of) it for every project in the future. But there are so many strings attached that I would have to carefully consider whether to try adopting it even for a large / long-term project.
I work in an enterprise Java environment. We recruit both senior and junior developers depending on the need. When hiring juniors straight out of school, we expect to have to teach them pretty much everything. Maybe half don't know maven or gradle, hardly anyone has ever used anything other than Spring, they only have basic SQL and/or JPA knowledge. But that's fine. We don't expect them too. We expect them to have basic programming knowledge and pick up the rest along the way. And it usually works out just fine! So basically, don't worry about it! Expectations on junior developers are generally not very high. It might be if you apply to Google or AWS that probably see thousands of applications a week, but for any small to lower-end-of-large company, you're fine. And even for AWS or whatever, it never hurts to try. The worst thing that can happen is that you don't get the job. And at the fair, ask them what they're looking for.
i got pens and muffins , thanks for the advice also all the companies that were looking for graduate software devs use the microsoft stack which i really wanted to get into but there haven't been anyjob posts for people on my level, turns out these are full grad programs you apply for on their laptops during the fair for some reason but hey i did and the fact that i know c# helps ill see how it goes if i get a response &amp;#x200B; thanks again
* nginx as reverse proxy. The benefit of this approach is that SSL with LetsEncrypt becomes trivial * Firewall port forwarding * Run tomcat as root and bind it to port 80. There are security concerns with this approach
any scenario where a person would use jdk in production? I thought once you built the app, and throw it in a production server or end user machine, they would need only jre and not jdk?
Counterpoint, but a lot of companies using the MS stack can be kind of die hard about it in ways that limit innovation (DevOps and testing I felt was especially a real struggle). I worked on the MS stack for about 8 years and felt very locked in career wise when trying to get off of it. So just be mindful of your work experience as you select jobs along the way - golden handcuffs are real 😄
... or, if you are a Github user, just enable Github's automated security fixes :-D
Please explain what you need. A tool to check the security of your program? Or something to ecrypt/decrypt/sign stuff? Or something to prevent decompilation of your program?
Is there even any use for Blockchain technology at this point? From my understanding it's too demanding computationally (+the mutually distrusting nodes thing) to be beneficial on a larger scale, or am I completely wrong here?
There is a gradle and maven plugin for this to run locally without sharing your code with microsoft, [check out](https://b.agilob.net/gradle-up-to-date-and-secure-dependencies)
Hi Tangara888, Yes where ever it is stored it will potentially be dangerous. That is why you'd choose some system that you can trust. LDAP/databases that can be configured so they store the password in an encrypted manner that make it less dangerous. So you can then assume you can trust the LDAP/database to do authentication for you. I've not used SALT myself. My understanding is that it is an extra hash stored along with the encrypted password in order to make it even more difficult to encrypt. Sorry I don't know about the jaas.config file in Tomcat I've only done JAAS in Glassfish/Payara. Thanks, Emmanuel
Blockchain has a lot of use cases that could revolutionize and improve a lot of industries If you notice IBM, Microsoft, AWS etc.. are developing tooling for Blockchain as well: IBM: https://www.ibm.com/blockchain?mhq=Block%20chain&amp;mhsrc=ibmsearch_a Microsoft: https://azure.microsoft.com/en-us/solutions/blockchain/?cdn=disable Amazon AWS: https://aws.amazon.com/blockchain/ Example: VeriPart project building on Aion: Revolutionizing 3D printing, the 4th modality of logistics https://youtu.be/8rD-YEGTE24
Is there a good place to keep track of project loom? Questions such as will it be in the next java? (Preview or not) Please let the java gods bring us loom 🙏
Eventhough available at AdoptOpenJDK too, there's the [OpenJ9](https://www.eclipse.org/openj9/) OpenJDK builds by IBM.
thanks for the heads up , i was told id have a choice what to go into C# etc was just the highlight for me but i will always keep that in mind
Wouldn't it be possible to implement a composite key object from the two keys that you want to use, and implement a sane hashCode and equals for it, and just use the normal maps in the standard library (such as HashMap) with as high of performance?
Most corporate use cases are being filled by solutions like Hyperledger fabric our centralized journaling databases. Neither involve mining. Hyperledger is similar to Ripple and Stellar under the hood. Things like Amazon QLDB are just append-only DBMS'. Bitcoin, Ethereum, and similar mining-based blockchains aren't really all that useful in industry.
ive been to Google and was invited to google events in the past but the openings they had didnt fit what I studied or wanted to do so i never really interviewed there. for context one was where id need to go back to college after their training which i cant because i was starting my final year or move to another country which i also cant do for now Anyway thanks for the info ill take it onboard
Most modern Linux distributions have systemd. Like it or not. Write a systemd unit file that starts Tomcat. Tomcat does not need to run as root and can bind to ports below port 1024, such as port 80 or 443. Here is an obsolete example systemd unit file: [Unit] Description=Apache Tomcat instance tc01 After=syslog.target network.target [Service] Type=forking User=tomcat Group=tomcat UMask=0007 Environment=JAVA_HOME=/opt/jvm/zulu/zulu10.1+11-jdk10-linux_x64 Environment=CATALINA_HOME=/opt/tomcat/9.0.6/apache-tomcat-9.0.6 Environment=SERVER_BASE=/opt/tc/01 Environment=CATALINA_BASE=/opt/tc/01/CatalinaBase Environment=CATALINA_PID=/opt/tc/01/CatalinaBase/temp/tomcat.pid ExecStart=/opt/tomcat/9.0.6/apache-tomcat-9.0.6/bin/startup.sh ExecStop=/bin/kill -15 $MAINPID #ExecStop=/opt/tomcat/9.0.6/apache-tomcat-9.0.6/bin/shutdown.sh # allow binding to ports below 1024 AmbientCapabilities=CAP_NEW_BIND_SERVICE #RestartSec=10 #Restart=always [Install] WantedBy=multi-user.target The reason it is called instance tc01 is because I might run multiple Tomcat servers tc02, tc03, etc on the same machine, but bound to different ports. These would all use the same Java, and the same Tomcat software. But each would point to a *different* CatalinaBase. The CatalinaBase is a folder similar in structure to the Tomcat software, but is an "overlay" with a unique configuration, server.xml, certificates, applications, libraries, etc. Multiple CatalinaBase's, can "overlay" the same Tomcat software image. eg, you don't have to keep separate unzipped Tomcats for each instance of Tomcat that you run.
There isn't going to be one solution for all I think this post was mainly about being able write, build and run Java byte code on a public blockchain using the JVM compliant AVM
True but as a Java dev, you'll run into a ton of those in your career.
&gt;this is close to real life code, in reality it would have more fields but everything is here: &gt; &gt;[https://pastebin.com/GkPwxRtx](https://pastebin.com/GkPwxRtx) here is the datus variant: [https://pastebin.com/4gN4zM0u](https://pastebin.com/4gN4zM0u). You picked a recursive example which datus has no direct support for. That's why I used a delegate class I have described in my [USAGE.md](https://USAGE.md). And yes datus can only map from a -&gt; b without taking any additional data like your example (the mapping). I would normally expect the subCategories list to be filled though so I dont see the need for the map. datus main use case is for mappings that dont require addtional data although a simple \`Pair&lt;A,B&gt;\` could help here (though I won't say that such a fix would be clean). &gt; That's a normal mapper. What exactly do you mean by "normal 'factory' approaches". Factories are factories, mappers are mappers. Mappers handle transforming from one type to another, factories handle creating objects. Factories are the alternative when you don't use mapping frameworks (at least that's what I experience). Some of the READMEs argument target project which don't use any mapping framework yet or use a (subjectively, in my opinion) complex framework for simple mapping tasks. &gt; Then that's a problem of how you structure your packages, how you name your classes or functions. That's why I asked for a CLEAR SPECIFIC example of the code that your library would help improve. Having to convert a great amount of objects has nothing to do with how i structure my packages or how I name classes or functions. There should be one class responsible for mapping one entity to one dto, thus If I have 50 objects that need conversion there are most likely 50 conversion classes (factories, mappers). Especially when some objects are shared as subobjects between those. I have shown your example in datus, that should suffice? &gt; I already use Jackson, I would say that is a mapper too right? from byte\[\] or InputStream to my annotated object. I have never really had the need to use extra logging inside whatever Jackson is doing. If I want to do logging I can do it after or before anyway. What's the problem? I don't understand what problem you have to ever want such a feature? In fact imo it's a bad idea, mappers should be pure. A mapper that has side effects is both dangerous and unexpected, which makes it extremely dangerous. There are validation frameworks like Hibernate which could take advantage of this. But still: I have implemented the ability but you don't have to use every aspect of datus. You don't like logging in mappers? Don't do it. But I won't force an opinion on the users of datus and want to enable the user to do as much as possible, like every other mapping framework out there. &gt;your response to: &gt; &gt;I know it is nitpicky but datus does not use any reflection at all I pass a function reference to the constructor, nothing more. datus supports up to 12 constructor arguments which is accomplished by a little class duplication in datus. When a class has multiple constructors you have to choose which one to take by specifying the function arity like you would have to do with all other function references - but how many DTOs / entitys have more than a noarg and fullarg public constructor? These won't collide in the mutable / immutable API. &gt; Also what happens when a class has multiple constructors? That case can fail at runtime instead of compile time? Nope as outlined, it's statically determined which constructor is taken &gt; Also what happens if you want to change the order of the parameters in the constructor, from what I can tell you would have to change the order in all your mapper implementations too, otherwise you'd get them mixed Correct, its a known limitation of datus approach. &gt; What happens when you give fewer arguments to a constructor than it requires. This isn't possible in datus, it expects you to define a maping process for every constructor parameter when using the immutable API. You cant just omit stuff like you did in your lombok builder example (which is bad style imho). Nothing stops you from not calling every setter in the mutable API though. &gt; I highly doubt there is any viable way to do this without reflexion. Feel free to search datus source, you won't find a single import of usage of reflection. &amp;#x200B; Some closing words: You don't seem to have looked at datus code (you assume I have to use reflection even though I specifially told you datus isn't) or its extended documentation ([USAGE.md](https://USAGE.md)). Yet you seem aggrevated by how bad the documentation is and spend what I assume quite a bit of time to respond to my comments. I am sorry datus annoys you at all but I can't stress this enough: you don't have to use datus or all of its features. Feel free to use any other mapping library or none at all.
How did you choose the order? Are you affiliated with this website or any of the listed JDKs?
The top of my wish list - a build of openjdk-shenandoah-jdk8 for OSX. Anyone know of one?
have you looked at [http://sparkjava.com/](http://sparkjava.com/) as a web framework?
You can join the [mailing list](https://mail.openjdk.java.net/mailman/listinfo/loom-dev).
That's immediately addressed in the first sentence...
I tried Javarevisited and found it to be almost completely unusable because of the pop-up ads, the ads that keep shoving text around when they load late, the flashing ads on the side, etc. The content seemed good but it's not worth the headache of navigating around all the ads.
Did you download the Oracle JDK build?
I only see mention of using the [Pair class](https://docs.oracle.com/javase/9/docs/api/javafx/util/Pair.html) which isn't even what Pair is for. But I guess the assertion is that if you use an Object as the key in a map you use more memory? Are you guys aware of the [Value Objects JEP](http://openjdk.java.net/jeps/169) -- I think that's the community's way to address this issue. Maybe someone else can chime in as to when Value Objects might be available in the language because I haven't heard anything in awhile
Thanks a ton
Can confirm. When you get errors in spring they often aren't gonna be googleable.
The problem is not the use of a Pair class or the object with the information. It's the HashMap class. In the post I explain that in all benchmarks and analysis I am not taking into account the memory consumed by Pair instances to avoid this interpretation. HashMap consumes 32 bytes per entry in an optimistic case without collisions, while Bikey consumes an average of 7-10 bytes per entry (depending on the fill rate) See this chart of memory consumption difference among implementations: [https://docs.google.com/spreadsheets/d/e/2PACX-1vSQ28bJxu3RYU0WwBWKmm1\_d6sLM0I3aPvr5bctzsblGgHRvfvOSkczdoT-JXpAmXrD74DShTlzo1Um/pubchart?oid=2140734164&amp;format=image](https://docs.google.com/spreadsheets/d/e/2PACX-1vSQ28bJxu3RYU0WwBWKmm1_d6sLM0I3aPvr5bctzsblGgHRvfvOSkczdoT-JXpAmXrD74DShTlzo1Um/pubchart?oid=2140734164&amp;format=image)
Sorry, I just stumbled on it. Not the author. They didnt leave a social media handle or name otherwise I would of credited them.
Great Stuff!!
I'm not sure, I searched java, click on it and press the download
Can you experiment running your job with different configs? Is this job part of a.long running app? What max heap size are you using?
````-XX:MaxGCPauseMillis```` is for G1GC and I don't think it has any effect when you use ````-XX:UseParallelOldGC```` If memory footprint is a concern, do you set any max heap size with ```-Xmx````? I think it is better for performance to not resize heap all the time, but if you really want, try adjusting````-XX:MaxHeapFreeRatio````
If you have a "control panel", than you probably downloaded the non-free Oracle JDK. **You do not want to use this JDK, because you cannot use it legally without buying a license from Oracle!** Go to www.adoptopenjdk.net and download a free JDK.
Nice idea but SDKMAN.IO servs my need with most of jvm sdk's.
Well... you see I've already download it. I'm using it to play minecraft and wonder if anything changed in th years that I didn't play. Security issues back then for java etc
There is no such thing as an OpenJ9 OpenJDK build. The OpenJ9 JDK copies a large portion of the OpenJDK code, but it is by no means OpenJDK.
&gt; non-free Oracle JDK It's free for non-commercial use, including personal use. Despite the FUD, I also do prefer OpenJDK, especially now that AdoptOpenJDK has installers. :)
It's not a long running app. The process dies after it finishes (which is ~10 minutes). The heap size is 6GB.
Yes, the heap size is tentatively 6GB. I might change it later, but it'll be around 4GB to 10GB. I'm still experimenting. Just curious. Why would I set MaxHeapFreeRatio? Why wouldn't I utilize as much heap as possible?
&gt;Want an OpenJDK™ build that contains an enterprise grade, open source, Java virtual machine? Grab a pre-built binary for Linux, Windows, or macOS and try it for yourself...
It's not an OpenJDK build. It's not even close to being one. It's a separate project developed by a small team at IBM, and copies a lot of the OpenJDK code, but uses a completely different JVM from OpenJDK.
It controls how many percent of heap can be free after GC, and if it's more than that, it shrinks the heap. So if you set it to something low, like 10, it will release memory earlier. (doesn't work with every GC, me thinks) It is set to 70 by default, so the GC will try to shrink the heap only when more than 70% of it is FREE after a full GC But have in mind resizing the heap might be unnecessarily costly operation, and what then.. if it reallocates it again in a minute, it's a waste of time.
It's still an OpenJDK build even if it doesn't include every garbage collector or OpenJDK-implemented optimization. Notice on their download pages you can choose between HotSpot and OpenJ9 JVMs. Is this what you're referring to?
It is not even *remotely* an OpenJDK build (and the little ™ is a nice touch, as according to the OpenJDK trademark a JDK that's not built from the OpenJDK project is not allowed to call itself OpenJDK). It has a whole different VM, for one, not just "not every garbage collector". &gt; Notice on their download pages you can choose between HotSpot and OpenJ9 JVMs. That download page, quite confusingly mentions HotSpot and OpenJ9, but really it's OpenJDK vs the OpenJ9 JDK.
I find this stuff awesome, because even if you're a Java dev, you should know about a good portion of these, and you'll likely use loads of these technologies as part of the full stack to do your job. And for a more practical reason, companies will often ask about these technologies and tools as part of the interviewing process. I was asked about loads of these technologies in my last round of interviews. It can be a huge career boost to go through this diagram and become familiar with most of the stuff.
Yes, but that's all true for non-Java devs!
This isn't really what this subreddit is for, I think they're one called javahelp that might be what you're looking for. Regardless, if same you're money and see if you can't find an answer on stack overflow first
Maybe they just call it OpenJDK because it includes all the OpenJDK tool programs like javac, jar, javap, jlink, etc. The actual download file structure looks pretty much the same as any other OpenJDK build. It's basically functionally equivalent.
If you're curious, the petroleum diagram you reference, where the width is as important as the connectivity, is called a Sankey diagram.
Aw, no bytecode analysis or manipulation (that I saw). I use that for various things, including finding all possible connections between classes, for help in automatic documentation generation. I don't see any aspect-oriented programming either, which typically involves programmatically rewriting classes.
What is AdoptOpenJDk? Is it different from the one I download by searching up java official site and downloading it from there
Thank you for the silver, kind strangers!
You type 2x as much at the very least. If you do things the typical Java way you create a bunch of more files as well. You have various typing issues that you need to solve and it is difficult to do things more dynamically and non-repetitively as it is compared to PHP. And compiling takes it's time, compared to PHP where I can see changes of my code pretty much instantly. I admit though that I have less experience with Java than PHP, but my estimates are based on how I've seen professional Java developers do things and what I know about Laravel developing.
Quoting AdoptOpenJDK's first paragraph on their homepage "AdoptOpenJDK uses infrastructure, build and test scripts to produce prebuilt binaries from OpenJDK™ class libraries and a choice of either the OpenJDK HotSpot or Eclipse OpenJ9 VM." Which to me reads as they are using the OpenJDK standard library with a choice of an interpreter of either Hotspot or OpenJ9. Hotspot is what as far back as I can remember Sun referred to their implementation of the JVM spec and according to the OpenJDK's own website they still refer to it as http://openjdk.java.net/groups/hotspot/ so referring to the originally Sun JVM and then Oracle JVM as hotspot seems to fit. I have been using Java long enough to remember when there were 3 separate probably entirely different JVM implementations one being Hotspot, another being J9 and a third that was called JRocket from Bea.
 &gt;Ex. Javascript in browser etc Yes, disable JavaScript in the browser. It saves you from all the flashy ads and tracking.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
First, switch to G1 and remove other options - ParallelGC is not designed for heap large than 4 GB. Second - turn on GC logging and check what GC phase concerning you.
This is going to vary based on your job. Best advice I can give is to test under various configurations. Code optimization is another avenue to pursue.
There's nothing really home-grown about it. As I said, it's vanilla Jersey, the http server comes from JDK because it has one, I use Jackson for json reading and writing, postgresql for database work, which wrapped by JDBI that provides the absolute minimal result set and java object mapping I needed.
I have been using Aurelia lately for frontend work. I thought it would take off a little better, back when angular 1.0 was transitioning to 2.0, but turns out it was a dud. I have not yet selected Aurelia's successor. Aurelia keeps things pretty damn basic, it's just component framework where you make templates that are two-way bound with routes, and the router selects appropriate route to instantiate for each URL. It doesn't need to check all of your route values every 40 ms or so to notice changes, it seems capable of directly observing pretty much everything. It will fall back to periodic checking if you don't provide enough annotated info, e.g. list of values that a variable gets computed from, and such. React is probably fine, but I haven't really used it yet.
Don’t underestimate the throughput cost of running G1
Java and JDK have been open-sourced recently, as OpenJDK. Oracle is now one vendor among many others to produce JDK builds based on that source, other alternatives including AdoptOpenJDK, RedHat, Azul, Amazon... Most other vendors have commercial licenses tied into their builds (although providing free versions, with varying restrictions), while the intent of AdoptOpenJDK is to be completely free.
Basically they all the same thing, but with some there are restrictions. Correct? I'm asking because the game minecraft, I can use anyone of them right?
You must have missed on using things like hot code replace. Compiling is one of the parts of java where I don't have a problem. I save a file in IDE, and it gets sent over debug link to running VM instance and it's just there, right afterwards. I just press reload, or in case of desktop application, the code gets replaced on the fly and the application behaves differently without restarting it. But there are limits to how well it can work. Hot code replace can replace method bodies, not method parameters, return values, or the fields of a class. You also can't change the method that is currently executing. A lot of the time it works very well, however.
It's missing design patterns?
That's highly dependent on your the data you are processing and how efficient the batch was implemented. Have you tried the newer GCs like **EpsilonGC, ZGC or Shenandoah**
I'm going to throw a bold suggestion here, but I think EpsilonGC might not be ideal for this scenario
I think Jakarta EE and MicroProfile should merge. Thus, drop the focus on microservices from MicroProfile, but *also* drop the app server focus of JEE. I.e. JEE9 or whatever should require compliance for specific subsets only, not the complete package. That way, the same API specs can satisfy the needs of both e.g. Jboss that will implement the full spectrum, and e.g. Payara that will only implement the few necessary things for a microservice.
The books are very good. Spend as much time as you can reading the theory and trying to solve the exercises. Online blogs and tutotials are a waste of time.
I think that using MicroProfile as a fast track for new ideas and specifications is a good idea to try new things without breaking compatibility with enterprise grade software.
sdkman is limited to Linux Mac OS. This is not the case here
That's a good point, actually.
You're arguing with an Oracle employee on the Java team. Just because AdoptOpenJDK made the build available doesn't make it an OpenJDK build. OpenJ9 is a separate project with a separate JVM from a different source repository.
If you are using JDK 11 or higher, try ZGC. It is supposed to be highly performant
Enthuware is the best thing you can get to practice
As a someone who taked OCP this is the best comment.
Specialized solutions are missing at least: - PTC, Aicas, Ricoh, Gemalto, Websphere Real Time Although I think they are only available via commercial channels
I totally agree, Enthuware is a must have.
There were always more than 3 Implementations available. https://en.wikipedia.org/wiki/List_of_Java_virtual_machines
CoinNess App--the Asia's largest cryptocurrency and blockchain news platform, Download for up tp 500 CNNS (=$3.5)
CoinNess App--the Asia's largest cryptocurrency and blockchain news platform, Download for up tp 500 CNNS (=$3.5)
Is there a special way the encrypted password is stored in the database? I only know the normal way of creating database scheme and once you have the tables the tables and the data are there to be seen - it is not like you use another password layout b4 u can open it. Do you guys out there put the database in another host location?
I'm afraid you are out of luck.
Ok, I think I understand. That seems a bit pointless to be honest, because it would mean that you can't really maintain a Collection as an atomic variable (or at least not efficiently).
I support this. Recently passed OCA and learning for OCP now. Its easier then books. Comments really do help.
If you are not expecting lots of traffic, put everything on the same host. You can move the database to a beefier host later. That said, your business plan sounds a bit half baked.
Should it? Totally up to you and the business requirements. Can you? Absolutely. You’ll likely need some sort of authentication/authorization pattern for data retrieval with the API. Also - searching thousands of records will not be an issue if your database is properly indexed.
There are tradeoffs either way. Depending on your REST client (usually, the front-end), using different hosts for your client and your service will free-up resources for your back-end. If your front-end is client-side app (say, Angular), that point is rather moot as the client will use very little processing power on your host (it will use network bandwidth though). If your REST client uses a heavier, server-side technology (like a Java App), It might be something to consider. Using different hosts will be costlier. More infrastructure, more money, more configuration. That cost can be mitigated by using virtualization, but virtual guests still need actual processing power on the physical hosts. Using different hosts might also bring response time between layers of your app (Database &lt;-&gt; REST service &lt;-&gt; REST client &lt;-&gt; User Interface) above what you would consider acceptable. In the case of an Angular App, the REST client and the UI are both running on the final client, so there's no worries here.
Ok. Thanks. U r right. I am struggling with an ailing business and now desperately trying out things. It seems it is going to take ages for me to build things since I am not highly expert in programming...wat do u suggest?
It's made by Russian guy, here is his blog post about this on main Russian language it website: https://m.habr.com/ru/post/450992/ If you want to contact him he provided his email inside 'oleg@jdk.dev' (as it available there I hope I can post it). Even though it's all in Russian, I'm sure he would be able to answer on English as well.
There is only authentication/authorisation for log in. And then the ‘customers’ can then proceed to the rest of module....will this suffice?
Honestly? Don't do it. Leaning this stuff is a full time job. Building a business and learning by doing? Not in this field, sorry. That's like opening a repair shop without a mechanic. The times where a single guy can start a successful IT business in his garage are long gone.
U r right. I think I am having burnt out but I need the skills to apply for a job and since I already have some experience I thought I just use it as a portfolio project if the business side still doesn’t work out. Wat do I think?
Code that was written to just work, with a deadline ahead, while learning how to do it, is most likely not the code you want to show anyone. Writing nice and maintainable code takes time, discipline and patience, which you won't have if you are fighting against market pressure. A failed attempt to start your own business is not particularly appealing to an employer, either. Knowing your own limits, and not burning out, is. Take a deep breath. Think about the big picture, not how you deploy an application that is not written yet. Your problems are not technical.
Oh. This business started a few years ago but I feel that the site needs to be injected with some functions so I need to build them, since I don’t have the money to hire someone either.:( Since it is an online thing I started I have to continue with it cos I really don’t know wat to do to make money. Or do you know any resources I can rely on ? The things I am trying to do I bet will be very easy for someone with a few years of experience.
&gt; Which to me reads as they are using the OpenJDK standard library with a choice of an interpreter of either Hotspot or OpenJ9. Yes, but the OpenJDK standard library is not OpenJDK. The JVM is the very core of the JDK.
Maybe, but whereas to call something Linux you need to get a license from the Linux foundation, to call something OpenJDK it just needs to follow the rules [here](http://openjdk.java.net/legal/openjdk-trademark-notice.html), and this one doesn't even come close.
The best advice I can give you then: * There is more to learn than anyone could in a lifetime. Even experts won't be able to pull this off without googling. That's fine. The challenge is to focus on the important topics, and to know where to look if you need something. This means: reading. A lot. Blogs, tutorials, documentation, articles, everything. I spend a good 20% of my professional career reading, not coding, and my employer is paying me for it. But for a start, don't bother with details, just get an overview. Only invest time in topics that you know you will need. Bookmark the rest for later. * If there is a library or framework that solves your problem, use it. Don't code anything yourself if you do not have to. Spring boot for example has tons of tutorials and modules for all kinds of typical problems, and a huge community. It's complex, but you don't have to understand it all to use it. If you have a problem, someone probably wrote a howto already. This is your best change to get something actually done. * Plan for failure. Do not bet on success. IT projects are risky, and yours is even more unlikely to succeed. Have a backup plan. Accept failure and move on, before you burn out completely and loose even more. Depending on your country or insurance, get help.
Np, I'll try to update this site in a month or so with a bunch of new features.
Thanks 0x256. I think programming is hard but with persistence it can be learnt. But, I wish I can get to do real world project cos I am now groping in the dark using whatever free tutorials and of course open source libraries. Now, only thing is that I can’t get a job in IT because most companies here just want to use Node.js which really puzzled me...cos I started with Java and I don’t have the energy to learn another language. And Java has enough for me to learn....
I've learned that what may be trendy/popular in software engineering has very little bearing on what actually works efficiently. Fads will come and go, wheels will be reinvented. Java/JVM is sticking around because it just works, and it is very amenable to refactoring over time. Don't let anyone tell you "it's hopeless"... plenty of self taught entrepreneurs bootstrapped hugely successful businesses, because they didn't let people tell them it was impossible. (of course, plenty went broke too... so your mileage may vary) Good luck!
I'm the author. I'm not affiliated with any of these companies. The whole idea is not to be affiliated, or at least to stay away from big politics and concentrate on really free and/or open solutions. My current employer organizes conferences, and I'm just a tech blogger and a member of the program committees of some conferences like [Joker](https://jokerconf.com/en/). Java architect in my past life. Nonetheless, I have a lot of friends in these companies and know *different things* about Java world that someone else would prefer not to know. You can ask me anything btw
yep, one of the top ideas is to bring a port of sdkman for Windows and use jdk-dev as a package browser. But it may take some time, maybe for a month or two or so.
Could you please provide a correct link to IBM builds? The page you provided (that is already mentioned on the jdkdev) leads to Adopt downloads.
I'll add them asap, thank you
&gt;Sankey diagram Didn't know that. I always learn something new on reddit. Thx!
No, it's supposed to be highly concurrent and very latency-focused. Low latency actually comes at a cost to throughput, that's a hard tradeoff. If the machine has free CPU, then running a concurrent GC can actually be okay throughput-wise, but that's a risky assumption to make and varies with the load a lot. &amp;#x200B; For batch tasks, the Parallel GC (also known as the Throughput collector) tends to work best if both memory and CPU are actually constrained.
That depends entirely on your business and data model. Having a thick outer layer and no walls on the inside is good for a quick start, but eventually you will have to do something about it. Access models are very hard to get right at the first try, so if you can wait with it until you know what you need, that's fine.
I downvoted this because I disagree with \_"ParallelGC is not designed for heaps larger than 4 GB"\_. You're probably coming from the fact that the pause time of the Parallel GC tends to increase linearly with the heap size. This is true and for laaarge heaps this begins to be a problem ... if you care about GC pauses. That said, I do not believe you'll see any problems for heaps the size of OP's working set. For batch tasks, the Parallel GC (also known as the Throughput collector) tends to work best if both memory and CPU are actually constrained. If there's some free CPU, a different (partially or fully concurrent) collector might be a better choice because it's capable of running concurrently with the application. It still depends on the workload, though, because different GC do different tradeoffs in different places.
Did you mean access models via REST way is difficult? What if I direct them to another servlet again after log-in ?
No, I mean that access models in general are hard to get right.
You shouldn't use ZGC or Shenandoah for batch jobs.
10 years experience
If you’re feeling lucky, there’s a build script at https://github.com/stooke/jdk8u-xcode10 that’ll do all the work for you. The resultant JDK is completely untested and may cause your machine to explode, etc.
😀 
So not skills, but frameworks. Skills are things like being able to work with people, or to learn new things quickly. Both of which are way more important than knowing every popular framework on the planet.
Especially since [there will just be another popular framework in three years](https://xkcd.com/927/), despite everyone's insistence that *this* framework is the last one we'll ever need. Nobody believes me when I say that reactive programming is the XML of 2019.
U mean the POJO? Can u let me know what are access models? Or do u mean the log in part?
Use `-XX:+UseParallelGC` instead of `-XX:UseParallelOldGC` this also configures parallel GC for minor collections. Parallel GC will give you the best throughput &amp; the least amount of time spend in GC compared to all other alternatives. There aren't a lot of parameters to play with, besides `-Xmx`. You'll get crashes if you don't assign enough memory, a different collector will not help, it's your live set that's too big, you can only reduce the live set by making the batch job less memory hungry. A bigger `-Xmx` value means the GC has to run less frequently and the job will run more efficiently. If your job runs in the cloud &amp; you only have one core you should use the serial gc.
that's not javadoc
It has two stars, of course it's a Javadoc!
&gt; Nobody believes me when I say that reactive programming is the XML of 2019. Why do you say that?
well then it's that, but it should be mentioned as OpenJ9
Try /r/learnjava or /r/javahelp instead
There are OpenJDK builds from Pivotal: https://docs.pivotal.io/pivotal-distribution-openjdk/index.html
That was when the language first launched. They need at least 50 now.
thank you sir
Are you old enough to remember programming in the late 90s / early 00s? Before XML, apart from actual databases, data formats were pretty inflexible. If you needed to add a new field to your data, you might have to restructure every record in an entire fixed-length file format. When XML came along, suddenly, data could be *human readable* and had a *flexible but verifiable schema* and you could *process unknown fields on the fly*. Everyone from Microsoft to universities were advocating using it *everywhere*. If you weren't using XML somewhere in your application, you were outdated, outmoded, and obsolete. XML was clearly and unambiguously The Future of data processing. Whole frameworks were created featuring XML as a major selling point. Courses were taught at universities on XML and its associated tech (like XSLT). Think about stuff like your WAR file's web.xml or Spring's XML formatted configuration. That's all from that timeframe. Well, after a few years, it quickly became clear that XML was not ideal in a lot of use cases. Those older data storage and transmission formats were more compact, easier to validate, and quicker to transmit. Human readability was really only necessary in a minority of cases. JSON worked better for interaction with Javascript. XML required shipping with multiple libraries (e.g. xalan and xerces) for proper handling, which simply was not going to work on low-memory devices. In short, XML was too big for most programs. Yes, it was an incremental improvement over existing data formats, but there were a lot of cases where it was simply too much.
Now, this is what I'm actually scared of right now. I have 2,5 years of experience. I got my first job straight out of college, paid fairly well, I took it. I thought it will be Spring/Hibernate stack, ended up developing platforms on Adobe Experience Manager, which doesn't even use relational database. You have OSGi, Apache Felix, Apache Sling, which are all very niche technologies. I worked on several big projects, got very good pay raises, but I feel like this stack is not for me. There is less and less Java as more and more things are done on front-end. All I see for weeks, sometimes, is XML. And I'm starting to look for new job opportunities but it's Spring and Hibernate everywhere, and honestly I don't know if I'll ever be able to learn it myself to a degree that will satisfy potential employers. The only way to really get to know the technology is to work on a big project using one. I've used *some* Spring in my commercial projects (external services integration, some beans management). But I know it's not enough and I don't know where to start learning, honestly. Most tutorials stop at the point that I already understand, and memorizing docs is not the way to go, I think, because on a job interview, you have to show that you understand the topic, not that you know some definition. Can anyone provide some advice for me? Maybe some of you were in my situation?
Make a side project using Spring Boot. Something as simple as a search engine aggregator is a worthwhile project to pick up the basics of the framework. I've used both AEM and Spring in my career and while the latter has a lot of intricacies, if you can pick up one, you can pick up the other. You got this!
Dude Spring is like the easiest thing in the world to learn. 90% is annotations. You can pick it up in no time. SpringBoot is even easier. I can poop out a web application in about an hour with SpringBoot.
Yeah, I used Spring Boot many times, for side projects, and at work sometimes. I know how to create Controllers, services, how to fetch data from external endpoints, etc. But I feel there is so much more to the framework. So many bean factories, different settings that are everywhere. Just like JPA... I know how to make a simple entity, persist it, etc. But in real-life, big projects, I think it's much more complicated and there are so many things I don't know about. And I'm not sure if it's possible to learn about these quirks just by making side projects. For example, I only know that Spring's @Cacheable won't work on a static method, because it creates a proxy. But I only learned that because I had this issue in a piece of code I wrote. And I don't know how many things like this I don't know... probably a lot.
Honestly just get stuck in on a personal project, spring is so easy to use most of the time, sometimes though you'll want to do something that isn't obvious and isn't so well documented so you just dive through the source code and whilst it can be frustrating I've learnt a lot about some of the spring libraries from doing so. Hibernate, same just use it for something, alongside spring-data it should be pretty easy (haven't used hibernate for a few years as we now use couchbase). Hibernate can generate some rather interesting queries If you don't already it's definitely worth learning how to use a build tool like maven or gradle, I've found it is also a must have
Thanks. Do you still use AEM? What is your opinion on this CMS/ecosystem?
What do you have in mind when you say Clojure is not well suited for web development? Of all domains, that's where Clojure is strongest. I'd take a look at either using Ring directly or Luminus, which gets everything set up for you and has good documentation.
I haven't worked with it in about 6 months, but I think AEM is far and away the best enterprise CMS on the market. It's just a hard sell for some companies as it is expensive. But I don't see it going anywhere soon and I do get head hunters approaching me about AEM positions on occassion.
I haven't worked with it in about 6 months, but I think AEM is far and away the best enterprise CMS on the market. It's just a hard sell for some companies as it is expensive. But I don't see it going anywhere soon and I do get head hunters approaching me about AEM positions on occassion.
You mean Spring Boot.
I have been curious about this. If I understand it correctly, ParallelGC uses CMS for old space, right? If I don't care about long GC pause, would Parallel GC is better than CMS for old space? Could you elaborate more on this point? Thank you! (This topic is vast and fragmented, so I don't think I have learned enough.)
Yes, After reading a lot about GC, modern GC seems to be more and more better for microservices because it focuses on giving better response time.
&gt; But I feel there is so much more to the framework. So many bean factories, different settings that are everywhere. I don't want to just memorize annotations, I want to know what's going on underneath - I think that's expected of a mid-level developer. Chad Derby's udemy course on spring explains all of this stuff.
&gt; ParallelGC uses CMS for old space, right? If it were it's the other way around, CMS may use ParallelGC for old space. (I think it is, collecting old space in CMS is stop the world afaik) Anyway I don't think there is a reason to use CMS anymore and it's going to be deprecated, G1 has improved to a point where it is better than CMS for almost all cases. ParallelGC is simple, if we run out of heap, stop the program and cleanup garbage with all the threads available. From a throughput pov this is the best thing you can do. CMS, G1, ZGC and Shenandoah try to collect garbage while the program is running, this reduces latency but it also means that barriers &amp; synchronization mechanisms need to be added in the code in case something is touched that is being processed by the GC and that has a throughput cost.
I don't know much of this. I believe the application inserting the data in the database encrypts it before storing it in the database. So it is a regular database but the application puts the password through an encryption algorithm and then saves the data to the database. Then on second login the application has to encrypt the password and checks it matches the password stored in the database. &amp;#x200B; For production databases generally are in their own host but for development they can be on the same machine.
Where is Docker?
Ah well typing on phone is hard...
I think you are more or less answering your own question subconsciously, without realizing it; the more you DO, the more you will uncover and I hope you don't get offended, but it sound like you could draw a little more confidence from what you already know. &amp;#x200B; \+1 for the Chad Darby comment below - he is one of the best instructors around.
I spent the last few weeks learning EDI and integrating it into our stack. A schema as 60+ page PDF that no one follows and ambiguous ways to parse the same data (e.g. due to no termination on collections). I didn't understand why XML was so hyped then until now, I think for enterprises they hoped to get off EDI somehow. The same was with blockchain, which never solved those problems, in the hope that paperwork &amp; weird formats would have a magical solution using a new tech fad.
Oh damn. I misunderstood this by miles. I thought we had to choose one or the other. From what you explained, would you be in favor of using both XX:+UseParallelGC and XX:+UseParallelOldGC?
For the love of all that is holy, know version control systems. I've seen junior engineers spend weeks figuring out a few basic git commands.
No, I mean on a conceptual level. Access models tend to get complex at a certain point, and if that does not meet your future needs, it will be painful to correct.
Yet on that list the majority, especially those at the top, are donkeys old
... I don't know what "donkeys old" means.
aka Donkey's years old
&gt; you can't really maintain a Collection as an atomic variable (or at least not efficiently) There are special immutable collections with surprisingly good performance, e.g. `clojure.lang.PersistentVector` and `io.vavr.collection.Vector`. Those are referred to as "persistent collections", meaning they never change, but new versions can be created with acceptable performance. ("persistent collections" has nothing to do with database persistence.)
Yeah for sure. There was definitely a need for more flexible data solutions. At the same time, until about the XML timeframe, disk space was scarce enough that XML seemed absurd. XML and JSON sometimes use more bytes for metadata (like field names and structural syntax) than the data itself. That's still bad for network throughput, which is why Google ended up creating low-metadata structured formats like protobuf and successors for its own products. And it's not like EDI and fixed-width type formats didn't already have programs built to handle their quirks. Developers had been dealing with these issues since the 1940s. Everyone expected and knew how to handle them, but you had to solve them anew in every project, which is why XML was considered such an advance.
the icons for java also dont have the coffee cups
lol blockchain bro... blockchain is so hyped.. a 'real' blockchain is a trustless decentralized database. Blockchain solves a trust problem. It has a bright future for those applications that require it... like money. but most people don't know it yet.
Ignore his statement about license. You're a user not a developer.
I've had a lot of thought on this because I really like the little I've learned so far of Clojure and Rich Hickey's talks have been huge for me, and I've even thought about engaging the Clojure community about this since everyone seems thoughtful, but I wasn't sure if I'd be stirring the pot more than anything else. But since you asked... sorry for the wall of text. I strongly disagree that Clojure is strong for web development. At least not for the kind of development I've done. Rich Hickey very clearly made Clojure for heavily concurrent back-end applications on the JVM - or "information-driven apps" - and described the previous systems he built that led him to make it. He was in an entirely different (more exciting) world from mine. In even the back-end web I've done, both concurrency and persistence responsibilities were offloaded to a database. Or if there's a cache, it's offloaded to a cache server. The web stuff itself is pretty stateless, and not even concurrent/parallelized in the span of 1 request. Most web work in the app tier I've done is plumbing - coordinating I/O, connecting integration points, etc; I'm rarely doing series of transformations / computations. So I would be rarely getting the benefits of what Clojure was designed for at least in the work I've done. I get nice metaprogramming and immutable data structures on top of the JVM, sure, but I've never even had a situation where for example Rich's recommendation to use the in-process java.util.concurrent queues extensively even seemed to apply. Or I'm just not understanding how they could be applied to my work. The other side of this is the ecosystem. I could go into far too much depth on this. Basically, way too much churn, one-man shows (I think even Ring is all James Reeves now, and Luminus is all yogthos), dead libraries, and alternatives to fulfill the same purpose and the resulting fragmentation of the already small community. The same seems to hold for ClojureScript. Having to wade through all these libraries and try to grok the ecosystem was incredibly exhausting for me. Fragmentation is a huge, huge problem in general in my opinion, and its something I never see people talk about, and I can go into more detail on if you would like. I feel that if the Clojure community cooperated more instead of so many people writing things from scratch or making alternative libraries, the Clojure ecosystem would be much more powerful and much closer to the stability of Clojure itself. So as it is, it's safer and more responsible for the sake of my clients' success to fall back to the Java ecosystem for most things on the JVM, and at that point why not just use Java. This is an outsider's perspective evaluating Clojure, so I fully admit my understanding is limited, and I know these points are debatable, but I believe these are genuine problems. I'm open to correction/counterpoint.
Either one of those will operate normally right?
This post literally means nothing. You're not being specific enough for people to help you.
I am familiar with Swift. my junior collegue is writing an IOS app with me. I wish he was writing Java so I could read his bloody code. object?.method is cancer IMO. All those fucking variables have a mix of ? ! It increases the reading complexity immensely, especially when code is written by noobs. ooooh and don't get me started with the bloody inferred types... I HAVE TO INFER THEM MYSELF NOW.... you can't except people to choose perfect variable names.
ill post a picture of the files
Either one of what? Java versions?
This guy needs some milk.
thx for reminding me lol. but Kotlin owns its popularity to Google for pushing it on Android. Even Microsoft praised Kotlin... everything against Java is good for evil MS. Kotlin is fine but i am tired of the infinite spam about it.
Please don't. Please read the sidebar before posting.
Please read the sidebar. This is not a sub for programming help.
Sound like an OS problem maybe? Try running your jar with `java -jar`
Sweet thanks
&gt; I don't know if I'll ever be able to learn it myself to a degree that will satisfy potential employers Believe me, you will. Besides of being easier than it looks most employers just want you to know your way with the framework (if you don't have professional experience just create some project in your repo and attach it to your CV), they don't expect 10+ years of experience with every piece of Spring (Boot, MVC, Data, Integration, etc). &gt;The only way to really get to know the technology is to work on a big project using one No, it's not. Just look for Spring and Hibernate tutorials and start coding, most of those tutorials teach using a small project as an example. And that's more than enough to get your feet wet.
But why would you consider reactive programming the same?
Like adoptopenjdk and java from the official site
You're welcome!
Maybe you should advise them to install Sourcetree or something like that?
That's usually where I end up. I hate to use GUI tools because then you never learn the basics like you would on the command line. Call me old-school but that's how I learned.
Maybe green threads rendering the need for explicit non-blocking I/O irrelevant? It would still have value for managing parallelism, though, as well as being a useful abstraction for streaming data.
It has the same properties: 1. It's a fad. Everybody is advocating for rx as a solution to a bunch of system architecture problems. You're outdated if you are writing a certain type of application that doesn't involve reactive (or at least async) programming. 2. There were *already* solutions to those problems that reactive programming solves in an incrementally better or more easily represented way. To some extent, it's a repackaging and rebranding (and incremental improvement) of architectures that developers have been using for decades. 3. It adds an enormous amount of bulk that isn't appropriate for many smaller projects. 4. In 20 years, you're going to hate maintaining it.
Generic problems require generic solutions... Have you tried installing linux?
This subreddit is not for *tech support* - that's what /r/techsupport is for. This subreddit is for: **News, Technical discussions, research papers and assorted things of interest related to the Java programming language** Not even /r/javahelp would be suitable for your question. Also, when asking, stop rambling and form a *coherent and informative* post that includes all details. **Removed**
OK a java developer is expected to know "Java SE". This is new! /s
[removed]
You really are the worst bot. As user Labubs once said: &gt; Piss off bot *I'm a human being too, And this action was performed manually. /s*
They should all work.
Fake it till you make it! You already have work experience, and seem at ease with learning new skills (which is capital). So get a hold of the basics of the techs you feel will be required, then learn them more in depth, as required, on a real-life project. Don't let your feeling of inadequacy (imposter syndrom is widespread in our profession) censor yourself out of interesting jobs!
No wait you’re not young enough
&gt;imposter syndrom Wow, I just looked it up and it's unreal how much I can relate. Thanks for your advice!
Promotion from YG to OG depends to heap size, also scanning and accessing large heap has its own penalty. So appropriately tuned G1 (that partitions heap and benefits of modern VM features like per-thread safepoints) gives you on a large heap better throughput than ParGC, especially if you have enough CPU cores. I.e. ever if you don't care about response time it's better to start from G1 and only if you really understand why G1 doesn't satisfy you needs go to Parallel Scavenger. In some special circumstances (e.g. embedded platform) you may benefit from less sophisticated ParallelGC, typically in this case you reduce number of threads that scan OG. But as far as I understand we are speaking about typical PC
Understand proxies (AOP) and you understand most of Spring...
They are right... 10 yrs experience and you by default know::: Java Python Bash Ruby Perl etc etc... you get my point?
My head hurts @~@, I some what get half of it, right now I am using AdoptOpenJDK (vers 8u 212 b, can't remember) Thanks for explaining this!
Aw, man. I misunderstood this flag by miles (again). I thought it meant the free heap space that the JVM would ensure (which would make no sense).
That would be the other one ````-XX:MinHeapFreeRatio````
I kind of had 10 years experience, I started C 10 years ago at college and I'm very familiar with javas spring framework and a few other language. My job is with spring rest api's and automation testing in fintech, this is my first coding job, I haven't even been here a year, already one of the best coders in the department which is surprising. Maybe second or third best, depending on strengths vs weaknesses. Not the first for sure. But I feel I'm the toolkit guy, everyone is always asking me to fix things for them so I barely have time to get outside the coding box. This is think is my employability downfall, being too good at coding while the people who do not the best java coding skills who worked an equal length of time have found out more about context of the api's. I don't know what to do to combat this.
M'kay, I may stand corrected. Thanks for the memo, will actually consider G1 again.
*Everyone* knows it and have rejected it. It’s a solution without a problem because real banking doesn’t usually have a trust problem in the first place.
Place breakpoint in debugger and step in if you can reproduce issue. Investigation of stack frames may help understand what's going on. Also trace/debug logging with filtering of useless messages may reveal early reason for failure. Anyway troubleshooting Spring magic issues is like adventure through jungle, never know where you end.
"Easiest thing in the world" ok...implement hot reloading for properties then... Ill wait
&gt; I've seen junior engineers spend weeks figuring out a few basic git commands. waitwutsrsly!?
Ok, but this has to do: /** * Constructor. * * @param id The id * @param name The name */
ha! I see! I didn't get the joke /r/woosh
[restapitutorial.com](http://restapitutorial.com)
As much as I wish most of my work required heavily concurrent applications, I'm in the same boat -- a lot of my time is spent doing plumbing. However, I've found Clojure to be faster for this kind of work than other languages I know, including languages I've spend many more hours in (JavaScript/TypeScript, Python, Ruby, to a much lesser degree Haskell and Java). There are two reasons for this. First, the tight feedback loop I have with the REPL is something I cannot get in the other languages I know. Second, the baked in immutable data structures mean that code tends naturally to be referentially transparent. Even when I'm using a function from another library, I rarely have to worry about objects mutating on me. On the library situation, many libraries are simply complete or require very little maintenance. The problem is that there's often not a way just by looking at the repo to tell whether a library is done or abandoned. I wish there was a better answer to this. Sites like Clojure Toolbox could help to solve this if they curated for quality more. But this really boils down to a problem arising from unfamiliarity with the ecosystem. None of this is to deny there's a problem in identifying maintained libraries for people getting into Clojure. I remember looking around at first and being too proud to just ask somebody. Worries that Ring could become abandoned and no-one steps up (e.g., the other active committers or clj-commons) are extremely unrealistic IMO. The library ecosystem has been way more dependable for me than Python, JavaScript, or Ruby, and doesn't seem worse than Java. Java projects are better resourced, but in my limited experience, breaking changes are more common in Java ([which seems to have empirical support](https://arxiv.org/pdf/1801.05198.pdf)). Plus, any Java library is readily available in Clojure.
There are 20+ 'skills' mentioned in the chart. If you have more than 5 years of experience, you should be an expert in all of them.
Done it many times....
B h
I suggest using compete words.
Yessir. Haven't met alot of students that were ever taught version control. Those that knew it learned on their own.
Project Loom's lightweight threading/ co-routines in JDK 13 ?
No, you can see the targeted JEPs \[here\]([http://openjdk.java.net/projects/jdk/13/](http://openjdk.java.net/projects/jdk/13/)).
I disagree heavily with the notion that reactive programming is a fad, especially since async has been popular since node.js and event driven programming has been used in erlang since forever. Other older examples are Akka and twitter's finagle. If anything, other languages and frameworks are finally catching up, and I'm glad for that since event driven architectures make encapsulation so much easier and usually come with performance gains too.
Hello, can u share abit more what is compete words about? In any case, I wonder how salted passwords can combine with JDBC realm?
How many threads will the batch job be executing on and how many cores are available to execute on?
This seems to be using Javascript. Am I right? So how can this be integrated with servlet and Tomcat? Hope to hear your opinion? And I would also be interested to know how the token or salted password is sent over the http for verification via Java API please. Thanks.
so much this! it baffles me how the industry can praise some technology/framework as if it was the "new best religion", and time and time again we (developers/programmers) still fall for this fairy tale that we should do everything with that specific tec otherwise our products won't be as valuable... so now we have thousands of people searching for the next big thing, using all of the latest tec on softwares/websites/systems that in some cases don't even need the latest tec, all for the sake of "being trendy", "following the hype", etc
Sadly the exact same thing as 6 years ago. Companies are terrified to innovate and try new things. The world is still running on java 8. :rage:
The original paper on actor model paper was like 1973 too and is well backed up by research.
I wouldn't worry about it. Do you really want to maintain legacy systems? I've always just viewed frameworks as tools and not ends which is probably why I usually get assigned to green field projects and left to use whatever tools I need wither it's Netty, Spring, Ktor, or Golang or whatever. Like the quote from Halt and Catch "Computers aren't the thing, they are the thing that gets you to the thing." If you understand the basics of how these tools work like AOP, http, or how a web server router works you can use pick up any framework. I also see Spring being disrupted by microservices which are gonna depend on GraalVM which hates runtime reflect which is what Spring is all about.
Understanding concurrency/thread-safety, designing software that uses distributed microservices, automation by continuous integration (git workflow, dependendency management, automated testing, artifact repositories). Learning the intricacies of the utilities you use and looking at the source code to gain a deeper understanding of how they work under the hood. You will be surprised by the number of neat software design patterns you can learn simply by looking at source code. IntelliJ is your friend.
Cool. &amp;#x200B; (still using 6 and 8 on my machines.)
Not to be nitpicky, but Haskell has another L in its name. It is named after the logician [Haskell Curry](https://en.wikipedia.org/wiki/Haskell_Curry).
Donkeys is cockney rhyming slang for "years". Donkeys ears, years
The tutorial is held language-agnostic - these are basics that apply to any REST API. But of course you usually need a programming language and a framework to implement one. You can use RestExpress, the framework to which they provide a link to on their "Resources" page, or just plain ol' Spring Boot.
Damm it! https://media.giphy.com/media/l0IyqcmcX79rnGpxu/giphy.gif
I can’t integrate Spring Boot with servlet since most of my stuff are using servlet with jEE4. N RestExpress is it some kind of Javascript framework again?
You neglect to say why knowing the command line matters. Who cares. This isn’t the matrix .
It’s because the leadership in the department probably insists everyone pretends it’s the matrix and use command line when any number of modern GUIs will do. It’s what happens when you have top tier dorks running your department who lack common sense.
Yeah the big problem here is this guys confidence.
Nerd alert.
Your GC tuning efforts really ultimately correspond to your workload and how your implementation carries it out. Things to consider: * What is the estimated average (and/or expected) maximum retained size of a single unit of work based on the logic? * Does your job process units of work in series or in parallel? * How tight is the application architected with regard to variable scoping and held references? (I.e. what is your minimum heap compared to the largest data structures you must work with?) If your job performs tasks one at a time then your heap should be sized appropriately towards your largest job with some leeway for the supporting memory requirements, but if you need a heap that vastly exceeds the size of your data for a single work unit something is likely wrong with the implementation. This is harder to gauge with applications that work in parallel, since with a truly random workload you can't really know what your memory usage for a given concurrent set of work units will be (unless you can thoroughly manipulate the workload).
Nope, RestExpress is Java. Not everything is JavaScript yet.
So you’re saying you want to create a web service with only a tex editor, jvm and javac?
If possible.
Definitely possible, I recommend using javax.servlet.http.HttpServlet
Thanks! Is there any doc I refer to for building with that?
[The Javadoc](https://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServlet.html)
I’m really sick of people that have Git on their resume but don’t even realize there’s a difference between Git and GitHub.
Does anyone know when the next LTS version will release? I couldn't find any info in Oracle's site.
I did that. My teacher knew ide were easy so he insisted us to do it on notepad++ Apache Tomcat 9, notepad++, MySQL 5 and tested it on ms edge. I created entire projects on it and still work like this, but only edit java files on ide. Doesn't seem something that would reinvent wheel. Either that or I didn't understand the question.
There will be one every three years, so 2021.
17 iirc
Nah ur right. And can u share the resources that helped you do this?
I just wrote down the code teacher used during class and used it at home. Whenever i create a new one, my past projects are my reference resource. I can't provide any books, just my java projects from whom you can see the code snippets.
Ok, this makes me scared: JEP 353: Reimplement the Legacy Socket API OwnerAlan BatemanTypeFeatureScopeJDKStatusTargetedRelease13Componentcore-libs / java.netDiscussionnet dash dev at openjdk dot java dot netEffortSReviewed byBrian Goetz, Chris Hegarty, Michael McMahonEndorsed byBrian GoetzCreated2019/02/06 13:49Updated2019/06/01 08:08Issue[8218559](https://bugs.openjdk.java.net/browse/JDK-8218559) Summary Replace the underlying implementation used by the java.net.Socket and java.net.ServerSocket APIs with a simpler and more modern implementation that is easy to maintain and debug. The new implementation will be easy to adapt to work with user-mode threads, a.k.a. fibers, currently being explored in [Project Loom](https://openjdk.java.net/projects/loom).
I was expecting a general API writing guide but this seems to just be an indirect advertisement for jOOQ. It basically boils down to: -Make the API easy to work with and -Name methods and objects so that they do what they say on the tin. using jOOQ as an example.
I mean, what could go wrong? At least give us an option to keep using that legacy code that hasn't failed us even once over 15 year period. (In our case)
Agreed, that was a pretty useless article
For example, do not write: public User findByEmailAndPin(String pin, String email); Because I will hunt you down and hurt you very badly.
Argument order?
Yep, it's a small thing, but it can be frustrating when argument order doesn't follow the obvious pattern. It's worse when you have multiple similar methods that use different argument orders. (I'm looking at you PHP's MySQL and pgsql modules)
I've been using Guava for years, still my #1
I mean neither was I, I had to learn git all by myself mainly because of necessity but it still boggles me that version control, one of the most important elements in sw development (desktop, web or otherwise), and people still tend to overlook it
I guess it could depend on how much RAM you can spare and if you can kill the JVM after that.
There is such an option.
- And, provide a single, easy to discover and use, mechanism for extending the API. Sure, he uses jOOQ as an example and why not? It has a good API. Designing an easy to use, extensible API is simple in principle, hard in practice.
&gt;If you have more than 5 years of experience, you should be an expert in all of them. I think I've used maybe four of these technologies... And I've been working in Java professionally for seven years.
It looks like in your [submission](https://www.reddit.com/r/java/comments/bxthh9/responsesendredirect_uses_client_ip_to_send_a/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
&gt;If you have more than 5 years of experience, you should be an expert in all of them. I think I've used maybe four of these technologies. I've been working in Java professionally for seven years and spoken at places like JavaOne so I don't think I'm not doing something wrong.
&gt; From what you explained, would you be in favor of using both XX:+UseParallelGC and XX:+UseParallelOldGC? I think you're looking at old documentation. You only need `XX:+UseParallelGC`, from the documentation provided by Oracle for java 12: &gt; If (a) peak application performance is the first priority and (b) there are no pause-time requirements or pauses of one second or longer are acceptable, then let the VM select the collector or select the parallel collector with -XX:+UseParallelGC. https://docs.oracle.com/en/java/javase/12/gctuning/available-collectors.html#GUID-9E4A6B11-BB94-424F-90EF-401287A1C333
So something like: Java SE/Java EE Junit CI Maven And nothing else? No git/sql/jpa/hibernate/rest/spring/microservices/soa/tdd?
CI, Git, Java SE, TDD. I've used Docker, but only cobbling together one Dockerfile by copy and pasting. You don't need to have used all these buzzwords to get stuff done and know what you're doing.
what the fuck
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
No but it’s quite interesting, to me at any rate, that in 7 years of professional experience with java that you’ve never used maven/junit/rest/sql/git etc. What area do you work in?
No I listed Git. I've run Maven commands but never written a POM. I work on interpreters and compilers.
I was kidding, mostly. I also have 7yrs of experience in Java and am currently really struggling to get a new job, so not a complete joke either.
**Atomic** and thread safety are very different things. An atomic instruction is in itself atomic. Two atomic actions executed after one another still need synchronization. Also atomics in high contention don't perform that well. You can use readwrite locks, where simultaneous reads are allowed, whereas write is exclusive.
You mean [what the friar](http://www.phespirit.info/cockney/taboo_english_to_slang.htm) Fun fact better suited for r/etymology than here, but "blowing a raspberry" comes from cockney rhyming slang as well. Raspberry tart, fart
with a 6 month release cycle we should be fine till at least 2019
I recently installed Call of Juarez game and now I also have Java 1.4.2!
What do you mean by "fine"? It's an improvement, but it may take some time to make sure there aren't any regressions. Once there aren't any regressions, why do you care if an internal implementation changes? And what do you mean by a "6-month release cycle"? Internal changes like this -- and bigger -- have *always* been a six-month cycle.
Php in general
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
 public User findUser(Pin pin, EmailAddress email);
Hardly any content. Good for the superstitious people.
Pre-generics? Oof.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
&gt; We have been able to secure a good part of the required funding From whom? And for how long?
Good luck!
I really don't understand why so many devs insist on putting the arguments in the method name.
They get used to JPA way
This actually looks quite cool!
The "From whom?" part is presumably answered by https://openwebstart.com/sponsors/ .
 public User findUser(String s1, String s2)
This is good to see. Java Web Start was a great way to deploy internal or B2B desktop apps.
JOOQ.
Won't Oracle sue like they sued Google over Android reimplementing code keywords?
Similar idea, although not as polished: [https://github.com/mainstringargs/FunStart4j](https://github.com/mainstringargs/FunStart4j)
I'm usually not _that guy_ but I'm starting to think that a lot of this stuff is getting out of hand. Are we really trying to avoid writing "this.x = x;" now? And to do that we're going to convolute the constructor method signature like this: public MyClass(this int x) { // ... etc What are we really gaining by having the constructor declaration have this new syntax? We saved a few characters and that's all. I do think records are a good idea, but the tradeoff in this case isn't apparent to me. We add a whole second set of syntax that we all have to carry around in our mental stack when reading classes and only gain the "convenience" of not having to write so much the first time.
It looks like in your [submission](https://www.reddit.com/r/java/comments/by0syo/how_can_i_pull_the_input_from_a_variable_to/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
In what ways, beyond potentially corporate, were people using JWS? To me it was always like most of Java on the Desktop. Really close to being completely awesome, but not quite there.
We use git for our projects in university. So we have to learn it.
i did use spring (not boot) with embedded activemq, camel and tomcat and my jar was 40MB+
Between 40-60mb seems the average for ours, depending on which starter you pull in.
This is confusing. On disk size of a jar is not directly related to memory usage during execution. I have a pretty intense pet peeve about people confusing disk usage and memory usage. Especially software developers. Which are you referring to?
Do you take permGenSpace / metaSpace into account? Because I would expect the volume used in these to be somewhat proportional to the size of the jar.
"Reading code is more important than writing code" is something I see Brian Goetz (the author of the linked e-mail) often state, and I think it applies well here. We can all agree that Java would be considered a *better language* if we were able to write less code while maintaining readability. One goal of Project Amber is to introduce productivity-oriented features (like this) while simultaneously eliminating unneeded ceremony/boilerplate. Like every new feature, I think it will just take some time to get used to. Also, keep in mind that the syntax in the snippet is only an example, and is subject to change with further discussion. I encourage you to contribute to the discussion on the `amber-dev` OpenJDK mailing list if you would like your grievances to be heard :)
Yes... &gt; is not directly related to memory usage during execution I agree there might be some correlation. Though classes available on disk is again only loosely related to classes loaded at runtime.
Any thoughts on https://icedtea.classpath.org/wiki/IcedTea-Web ?
Currently you have to spell the field name four times, with the new syntax it's only two. Having classes with many fields of compatible types, it's less opportunity to get it wrong. I think that's worth the added mental overhead, especially since records can be explained in terms of this new syntax, so it all hangs together.
Consider using vert.x instead of bloated spring
Yes I do because even if generally other language support is less complete than for Java (mostly for the number and accuracy of inspections and quick fix), an IDE still offers many benefits in my workflow. The first big one is that all my tools are here, ready to use, in a familiar and easy to use GUI. The second reason is that support for other popular languages is generally very good and using completion, analysis, navigation and refactoring is very useful and help being productive and focus on my task, something I don’t feel when using a text editor. In general the support for other languages, you can try it with the ultimate edition of IntelliJ.
Nothing beats straight JDBC calls with full control of SQL. Have your helper classes / boilerplate base classes as needed, and your off and running.
I use the best IDE for each language. I don’t constrain myself to just one
Lol
Yes I do. IntelliJ with the python plugin (which is basically turning it into PyCharm) for python, java and kotlin
Stop , it's illegal
Why do all the job descriptions I see say Hibernate and not JPA? I've used JPA with EclipseLink which seems equivalent. Are there any particular features of Hibernate outside JPA that I should know about?
I use IntelliJ ultimate edition for pretty much everything.
The two things (size on disk vs memory usage) have absolutely no relation. Using too many libraries just willy nilly that consume memory? Sure, that will definitely impact your memory footprint. just embedding libraries because you can and not actually importing them and using them? it will have an effect, but it will be minimal.
In my side project, there are the following technologies - all of which I use, completely seamlessly, in a single multi-module Gradle project with IntelliJ IDEA (commercial edition). # Infrastructure * Groovy - Gradle - core plugin - with specific, comprehensive support for both editing and running Gradle scripts * HCL - Terraform - 3rd party plugin - specific support for editing and launching shell script - Bash - 3rd party plugin - specific support for editing and launching * dockerfile - Docker - 1st party plugin - specific support for editing and launching and managing local docker containers for development # Code * SQL - postgres - core plugin - including comprehensive support of PG features, editing SQL, running SQL and viewing DB structures * Java - Spring - core plugin - obviously, comprehensive support for editing, debugging, launching * Typescript - React front end - core plugin - specific support for editing Typescript and running Node.JS for local development, including step-debugging Typescript in the browser from within the IDE, comprehensive support for JSX/TSX too * Typescript - AWS Lambda - 1st party plugin - only basic language level support, no real support for the lambda concept built-in to IDEA yet, but I've no doubt it's coming * HTML+CSS - static website - 1st party plugin - Comprehensive support for HTML / CSS and majority of attributes. # Testing * Scala - Gatling - 1st party plugin - specific support for editing and running/debugging Scala. * Groovy - Spock/Junit - core plugin - with specific support for editing and running Spock constructs. &amp;#x200B; Ironically, I initially forgot to put Java on this list &gt;.&lt; &amp;#x200B; Yesterday, I realised IDEA Typescript support didn't understand refactoring discriminated unions, so I raised this: [https://youtrack.jetbrains.com/issue/WEB-39285](https://youtrack.jetbrains.com/issue/WEB-39285) Same day turnaround (I wouldn't count it as fixed though until I can test it). They're not always that responsive, but it's still pretty impressive.
That tech was DOA. I've yet to see a jws deployment that worked properly. Someone mentioned corporate environment, there are simpler and more reliable ways to deploy apps on corporate environment.
&gt; We've been told they are the cause of memory problems on OpenShift. I don't know who's telling you this, but they're probably not being honest with you (or you're not being honest with yourself). As others have noted the size of your Spring Boot JAR has almost nothing to do with RAM usage. That's all on what your app code is doing. You could have a 30MB jar that loads 16GB of data into memory if you're careless enough about it.
I know Oak was initially aimed at Sun set-top boxes. I thought that by the time the language developed and became Java that those plans were long gone. This article feels like another low-effort click-baity attempt to drum up some angst about the new release cycle. Hasn't that topic been done to death. Yes, we're all pissed at the short support windows. No we don't yet know whether the open-source community will be able to fill the gap and reliably provide some suppport for previous LTS and non-LTS Java versions.
Vertx is based on netty, so this applies: https://javachannel.org/posts/netty-is-not-a-web-framework/ Though so is spring reactive nowadays...
I suggest taking a look at the wiki for [Project Loom](https://wiki.openjdk.java.net/display/loom/Main).
In practice, is there any noticeable difference at all between PyCharm and IntelliJ + Python plugin?
Anything else to disable in the java control panel?
I have to agree here completely, although I'm excited this feature will be in java some day, it doesnt look like it fits nicely into the language. Kotlin did a better job here with primary constructors and data classes, but i think it's easy without the legacy Java hast to carry^^" Would be nice for the simplest case nonetheless i think, which is what you often need.
Though keep in mind that while co routines (continuations) are needed, they may or may not be available in the public API. TBD.
Yep!
Sure, like, Javascript and shell scripts in bash and xml-ish things. So yeah. Most IDEs have plugins for making it easier.
You missed the sarcasm... Java isn't JavaScript.
I would respond to that question by mentioning the kind of things I've done with it. Saying that you've f.ex. implemented a REST service with authentication or a message board where users can create accounts and leave messages tells a lot more about your skill level than a simple Yer or No would. I doubt any employer expects you to know the whole Spring framework like your own pockets.
&gt; We've been told they are the cause of memory problems on OpenShift. You need to solve the "being told bullshit" problem before trying to solve the non-problem of the size of far jars.
The most important interviewing skill you can develop is not answering questions, it's asking them. I almost never just give yes/no answers on these kinds of questions because, even though I've been using Spring since we were doing configurations in XML, there's loads of areas I simply almost never use (like JPA for example). So I would ask which parts of Spring they use and then explain what of these bits I do and do not have experience with.
I have IntelliJ ultimate and I use it for anything there's a decent plugin for.
Naturally. My first IDE was Turbo Basic 1.0 for MS-DOS back in 1990, have been using IDEs ever since. Except for the time I was forced into UNIX world without access to IDEs, vi (vim wasn't born yet) and Emacs. Became a Emacs Jedi as workaround for lack of IDE tooling like Borland ones. Thankfully those days are now gone, with vim and Emacs only being used when I either quickly want to change a text file, or have been dropped into foreign environment without my beloved IDEs.
&gt; Our main conclusion is: the demand for Java developers is big. I mean, really big. If you type ‘Java’ in LinkedIn’s search bar, you will get 370k vacancies. For comparison, there will be 249k job listings for Python and 278k for JavaScript. Please don't make the mistake that Tiobe does in thinking that 'hits' mean anything. That just shows you don't know how text indices work. Those hits on "Java" will have a lot of hits on "Java Script" as well.
I would be happy with fibers and support in most blocking methods. Today, writing event driven code is way too much work in Java (and debugging is a pain). Full coroutine support would be nice, but there's a risk that this introduces extra complexity. Then again, Python like generators would be a nice feature to go alongside streams.
&gt; Haven't met alot of students that were ever taught version control. Not having done it in school is fine. But then taking 'weeks' to learn something that basic is a strong indication something is wrong.
IMHO junior devs should first and foremost learn to use the commandline version. You should be able to SSH into a server and use git on there, just like you need to know the VI basics.
&gt; I thought it will be Spring/Hibernate stack, ended up developing platforms on Adobe Experience Manager So? Switch jobs if it doesn't match with what you want. Companies bait and switch people into 'niche' (/deadend) stacks all the time. I worked for 6 months at a company using Coldfusion for example.
IntelliJ is so good. I am coming from writing C++ in VIM, and then switched to write Java code. At first I hated it, but then someone suggested IntelliJ and I am not looking back. I use it for everything now and I can't imagine working without it. What really sold me is the refactoring tools. It really changed how I write code.
What memory problems are you seeing?
IntelliJ has more features, and the way you manage projects is different, but the actual python editing and debugging is identical as far as I know.
Probably because that's the exact library they're using. It's all well and good being familiar with other ORMs but hibernate can start to get rather complicated with larger sets of data and needs some specific optimisation, for us we ended up writing a load of queries in HQL rather than letting it auto generated queries.
I use Eclipse at work for a massive project composed of Java and Python. I've also used Eclipse for PHP. I have a proprietary multilanguage IDE called Visual SlickEdit I've used for about half a dozen language ( it gives good support for all ). I find it useful to useful to learn 1 interface really well, rather than use several IDEs/editors learning each UI less.
I agree with this one
Saved you a click: &gt; 1. Feature releases will be disruptive for past releases — not true. Mark Reinhold said, "The rate of innovation has not changed, the rate of innovation distribution is changing." &gt; 2. For removing an old feature, it must be deprecated three years in advance. “Not true, for removing a deprecated feature, it requires a production-ready build that issues a suitable warning at either compile time or runtime because a working build, after all, is the ultimate release method.” &gt; 3. Your support will end for any non-LTS release after six months and not more than three years for the LTS release. "That's not true; it depends on what the non-Oracle members of the JDK community decide to do. Oracle has a proven track record and is already discussing how best to support JDK 8 and JDK 11 for the long haul.” &gt; 4. Non-long-term-support releases are just another name for a beta. “No, the only difference with an LTS release is that it has a longer support timeline,” Reinhold said, “You can still use a non-LTS release in production if you like, but you’ll have to update it in six months or find someone to support it or support it yourself.” &gt; 5. If you maintain an infrequent migrated system, you can ignore non-LTS releases, " Reinhold claims this is also not true, claiming, "if you test with each feature release, then you are ready to migrate to the next long-term support release.”
Thanks -- I might give IntelliJ a try for Python then. Somehow the thought never occurred to me before, even though I knew it had a Python plugin...
I've found reactive frameworks like reactor or Rx really easy to use, for consuming and creating events. Saying that I'm not familiar with kotlin and it's models.
Yep how many times have you written: ... this.field1 = field1; this.field2 = field2; this.field3 = field2; this.field4 = field4; ...
Kind of homebrew solution i tried [https://captainduckduck.com/](https://captainduckduck.com/) and for other small project just a simple docker-compose up and few makefiles can go a long way with git hooks
The most important things are understanding the basic bean and injection mechanism, the configuration via annotations. The rest of the technologies you might need or not. Spring WebMVC very popular, Hibernate/JPA integration with @Transactional etc. The rest you learn if you think you need them.
Never. I declare all attributes final and then let IntelliJ add them to the constructor automatically.
I came to Emacs after I left a company in 1990(?) that provided an editor called BRIEF and I didn't have a copy of it. Interestingly I've stayed with Emacs ever since and use it for all the work I need from note taking in meetings (Org mode) to coding in Java/C/C++/JavaScript/etc.
I would suggest jhipster https://www.jhipster.tech/ has predefined herokubscriots and docker compose, can choose db and generate all code from schema (front end and backend) and then edit it as you want.
Hosted PCF sounds like the best solution for you https://run.pivotal.io It takes care of a bunch of the containerization so it's less flexibility and options but much easier to get going. It also has autoscaling options. So while you want to focus on just business logic this is a good option because it takes care of a bunch of stuff for you. When you want control over the knobs and dials to find tune how it runs and business logic is all good you can look into moving out to kube or iaas. It's also built with Spring Boot as a first class citizen, so service discovery, circuit breaking etc you can do pretty easily and have it be annotation driven. It's marketplace has MySql (I believe) that it installs and manages so that should work for you too. Good luck!
Can I ask what would you want to do with continuations beyond fibers?
Honestly I would just start it all on a small EC2 Linux machine. Install JDK, Tomcat, NGINX, and MySql / Postgres. Once you need to start scaling, AWS makes it easy as hell: use RDS for the database, bigger EC2 for Tomcat and NGINX, add on things like elastic cache, CloudFront, etc. to speed things up.
When you have gone through the entire source code and understood it.
I've done quite a few similar setups with java on Heroku. I don't use SB, but there is an [official tutorial](https://devcenter.heroku.com/articles/deploying-spring-boot-apps-to-heroku), so it's most likely widely used. When you get your hello world running, the additional services are provisioned as one click "add ons", such as [sql]( https://www.heroku.com/postgres). Heroku has official plugins for IDE's as well, so the deployment is pretty much one click action after the initial setup. I'm currently using the Mongo Atlas as nosql, nothing to do with heroku per se, but it's super simple to set up and connect as well.
step one: dockerize your components. put your react app in a container running nginx or apache which also could serve as a reverse proxy for your backend step two: get a vps, install docker, pull the images. step three: use a docker compose file to describe your higher level architecture. step four: docker-compose up + profit does not get much easier than this. no provider specific terminology, configuration UIs which hide what's going on under the hood etc. sure it's a bit of overhead regarding the ops stuff but it helps to build a fundamental understanding of all the components involved if you have the need for scale later on then consider using pcf/aws/whatever.
I also do that, but it only helps with writing the code, not reading it. But can you guarantee that all your coworkers do the same? And that such errors are always found in Code Reviews?
The syntax is not final, this was just the introduction of the concept. We could very well end up with something similar to a primary constructor if the powers that be decide so. Goetz makes this very clear in this post.
Library developers can use them
For what?
Idk but providing it won't harm anything.
Well Java had coroutine implementation before go-lang went public (or about the same time). This was done as a research project on the Da Vinchi machine by Lukas Stadler. Last year Alibaba confessed that they use this 'prototype' implementation heavily in production every day. They call it Wisp engine. And of course there is also project Loom. Alibaba said they will open source as much as they can, but there is probably also politics involved. So you will either get Loom or Wisp. The only question is when. As I understand it, Kotlin coroutine implementation is done in bytecode in a same way as Quasar from Parallel Universe. I may be mistaken but I think JetBrains guys also consulted with pron who is the lead of Loom (prior to him joining Oracle?). So that is that.
How do you know that?
Consider that all the handcrafted lambda mess can be generated automatically via CPS transform with out any need to throw the imperative paradigm out of the window. When using reactive libraries, you are essentialy doing a compiler's job. Also once any of the coroutine implementations lands, servlet app from '97 will have similar performance characteristics as state of the art reactor based hand crafted microservice....
If you want to go this route and don't want to write those helpers yourself, take a look at [fluent-jdbc](https://github.com/zsoltherpai/fluent-jdbc). This also adds named parameters, might avoid some errors with the default `?` placeholders.
public User findUser(String[] args)
From what I understand features come to PyCharm before they get released in the Python plugin. But they do get released.
IMHO you have two options: either going for Docker and getting a small hosting GCP. Or looking for Cloudfoundry and getting an account on pivotal, SAP l, whatever. Do NOT Host it on your own taking care of infrastructure. Put this away as much as possible.
Ah. Nice. Proposed the same. K8s on GCP or CF. Guess no app developer should care about infrastructure these days anymore.
Personally, I would go with managed services so that you do not have to maintain things yourself. Maybe aws API gateway, aws fargate with aws aurora serverless mysql. Aws dynamo db as the nosql. Most of these things are pay as you go, while your traffic is growing. Alternatively, going pure serverless for the application with aws lambda might be an interesting choice. Probably that google gke or azure managed kubernetes are option, but I am less familiar.
This project pops up every few months here, but I still see no progress in their website. For having "Open" in the name of their project, they seem to a pretty closed. Where is the github page or something similar? How can the community help?
Can you answer my reply? Maybe??
Guessing you mean at an interview? If you have ever used it, say yes. It's the *interviewers job* to probe deeper and ask questions to figure out how well you understand it.
Totally disagree. You can have a solid grasp on how to use it and have experience using it without going through the entire source code. It would be silly to say 'no I don't know it' when you have used it a lot but haven't gone through the entire source code.
`public Optional&lt;User&gt; findUser`...
Once you REALLY need to start scaling, make sure your app supports multiple instances of itself running at the same time and just have multiple EC2
&gt; I was expecting a general API writing guide but this seems to just be an indirect advertisement for jOOQ. For that, [see my talk at the end of the article](https://www.youtube.com/watch?v=CYniPcoiI5g) (far less indirect advertisement, but obviously, I can never resist).
&gt; Designing an easy to use, extensible API is simple in principle, hard in practice. Simple != Easy
I'm not familiar with coroutines so cannot comment, however I like the level of control you can have using reactive frameworks. I can be lazy and treat them like Java streams (which we use a lot), making entry easy, and a good number of spring libraries support it (we use spring data for couchbase). We then just use method references if a lambda gets to big (pretty standard refactoring), which are just the same to debug. If I want to be more specific / tune I can, I can specify executors to suit (we have an application that writes to a queue but asynchronously to responding to the client, so we can specify a single thread for queue writes, IO thread pool for database calls) , and thread hooks (we use them to transfer correlation IDs across threads etc). Works nicely for us, sure if this compiler can do all that sounds awesome.
Generators maybe? I take it internally you're leaning towards *not* opening that can of worms?
Did I receive a down vote because I wrote something factually incorrect?
Thanks, I'll definitely take a look at that. Truth is, I have 2 generic, DB agnostic utility classes that I reuse (compatible all the way up to JDK 11 .. should be with 12 as well) that has always served me without issue on multiple projects.
React is a JavaScript framework. Hibernate is an ORM tool that comes with spring. So yes spring is a good option to learn
I don't believe they can in this case. The Network Launch Protocol, which is what Web Start is in large part built around is defined by JSR 56. Sadly, there was never a reference implementation made available for this (which kind of goes against the whole original idea of the JCP) but the IP is made available through the spec. This project just uses the spec for JNLP so there should be nothing for Oracle to sue over.
Thanks for the info! Where can I learn spring?
That might well be true but, from talking to a number of customers, there are enough people still using Java Web Start out there to make a project like this worthwhile.
Apart from the transactional annotation , Transaction isolation/propogation levels(which is considered very important), I usually keep it simple while interviewing someone and ask them about Beans, and which all spring annotations they have used when writing code, and what they were trying to achieve with said annotation.
I recommend the official spring guides https://spring.io/guides
Tons of resources. Documentation, articles, Udemy, pluralsight, coursera etc.. just google “how to learn spring”
Correction: Hibernate ORM has nothing to do with Spring. They are completely independent projects. Of course, you can use Hibernate with Spring Data, but Hibernate doesn't come with Spring.
Ahh sorry about that, I guess I’ve seen so many companies using hibernate with spring I figure it’s built in, thanks
Heroku is nice for easily running spring boot apps. It can pull down your repo from github, run gradle build, and have it up and running pretty quickly. You can scale out using multiple instances. If you don't use github, you can use their CLI to add a new git remote and push it instead. You can serve the React app from the same spring boot application if you want to simplify things. As you scale, you could separate this part out to nginx or something else.
This is what I did...simple Vue cli app that lives on EC2 and just use NGINX to serve my index.html
Are you an intern? I can't believe you got hired without knowing frameworks.
You could also check out [jdbi](http://jdbi.org)
Do note that data classes [will be coming to Java](https://cr.openjdk.java.net/~briangoetz/amber/datum.html). The architects just appear to be exploring if some of the ceremony can also be lifted off general classes.
[amber-spec-comments](https://mail.openjdk.java.net/mailman/listinfo/amber-spec-comments) is likely a better place to provide feedback. amber-dev is really more for the development of features, but sadly some people still bikeshed there.
Same here and I'd recommend docker as well. I'm not entirely happy with docker-compose, though. Control of startup order is limited, \`\`\`depends\_on\`\`\` often isn't sufficient. The recommended entrypoint-scripts often aren't enough either. At some point you might wonder, if the applications/services you're trying to run are actually developed properly, and sometimes there's a clear NO. However, I don't always have control about those, as they come from other teams/projects, so I have to write custom entrypoint-scripts quite often and when your startup-mechanic is 99% bash, you're starting to wonder, why you're still using docker-compose instead of doing everything in bash in the first place.
It should work with anything upwards of JDK 8, the documentation mentions 8 explicitly because it uses lambdas internally. There is no magic code in there, so it should run fine on JDK 12, but I haven't tested it yet.
How do you think people get their first jobs? Most CS graduates don't know any frameworks (at least not to any degree that they'll be useful for business). It's generally well accepted that graduates will basically know very little of value in software development terms going into junior/graduate developer roles.
When will loom hit? JDK 13/14/15?
Definitely not 13, as Rampdown Phase One is next week. If you asked the architects, I'm sure they would say "when it is ready" haha.
Look at C++, C# or Scala. The feature creep is showing harm.
ask greeks, venezuelans, argentinians... Bitcoin is an insurance against badly managed economies.
Where can we get information about Wisp?
Found the guy who hasn't ever looked at Spring's source code
i'm also a backend developer who's feeling pressure to become full-stack, which i'm resisting. who is writing the react portion ? how did you arrange the risk/reward split ?
https://github.com/kilim/kilim has supported fibers in java since maybe 2006 (i'm a maintainer, but wasn't involved at that point). quasar is a similar library with more magic (both use ASM). several forms of invocation are supported, eg `Task.spawn` will run an async lambda Project Loom will add some similar features to the jdk itself, with a different set of trade-offs
Which feature creep in C# out of curiosity? (The comment you were responding to was deleted, curious as well to what it was saying).
Would recommend it as well
What kind of application are you working on?
[This](https://docs.paralleluniverse.co/quasar/) has been around for ages.
JHipster Yeoman Generator. You will be up and running a local React/Spring/Postgres app in under 20 minutes. There are deployment options that are also auto generated. It comes with user management and the database tables for those users. Deployment options are Google App engine, kubernetes, AWS, Heroku. I would go with heroku for the easiest deployment.
Stadler's papers are here http://ssw.jku.at/General/Staff/LS/ . All the PDFs are available in full. They are a very very good read. Lots of background information and conceptual frameworks to learn from. He went on to work on the Graal compiler, so the newer papers are related to his work on the Graal. Alibaba Wisp by the words of Alibaba JDK architect https://m.youtube.com/watch?v=94eTZsNYYBEAlibaba Da Vinchi machine at OpenJDK https://openjdk.java.net/projects/mlvm/
And, Vert.x relies less on "magic" like DI which can be very difficult to debug. Oh, and did I mention it's the [fastest thing out there](https://www.techempower.com/benchmarks/#section=data-r17&amp;hw=ph&amp;test=DB)
AWS using Fargate + ECR + Route53/Cloudfront etc
You may watch tutorials on Udemy if you want to watch tutorials based on a project.
I doubt the size on disk of the jar matters much, but I have seen several issues from people launching the jvm in Openshift improperly and not being aware of the pod resource limits. In environments like Openshift you can apply memory and cpu constraints to the container and pods. Older versions of Java (java 8u131 and earlier) do not respect the container or pod limits and instead will scale the heap/memory sizing off the host. These are often much larger than the memory constraints applied in Openshift and will lead to OOMKills after some amount of time. [Good Stackoverflow question](https://stackoverflow.com/questions/53451103/java-using-much-more-memory-than-heap-size-or-size-correctly-docker-memory-limi) I would not recommend starting a java application in openshift using "java -jar blah" and instead trying something like the [fabric8 run-java project](https://github.com/fabric8io-images/run-java-sh) to help with jvm configuration.
[Repost.](https://reddit.com/r/java/comments/bxwrix/java_web_start_is_dead_long_live_java_web_start/)
vert.x isn't a web framework either so I don't really agree with that article, considering that you can do more with vert.x than just setting up a http server
I've also been trying to find this.
Only free sites or would you consider paid as well? Baeldung.com comes to mind but the more project oriented parts cost money
Interesting, I might give it a try, if nothing else than to see what it can do.
I would recommend Udemy, too. Even though almost all are paid courses, you can easily find coupons online. I haven't paid more than $10 for a course since I realized coupons were so easily googled.
Java: How to Program, 9th Edition (Deitel) https://www.amazon.com/dp/0132575663/ref=cm_sw_r_cp_apa_i_jJe.CbEVEGRM4 Yes, it's a book. You turn pages and you actually read off of paper. The How to Program series by Deitel &amp; Deitel are almost always "project based." They walk you through the creation of a pretty complicated project, building small parts to learn about each different aspect of a programming language.
C# is considered by some as a more and more complex language. Not on the level of C++ but still... plus what else is in the plans. Look at all those "[Proposal Champions](https://github.com/dotnet/csharplang/issues?q=is%3Aissue+is%3Aopen+label%3A%22Proposal+champion%22)". &gt; (The comment you were responding to was deleted, curious as well to what it was saying) Along the lines of the more features in a language the better.
thanks
Try Baeldung.com
I love the Simpletron and Knight's tour projects in chapter 7. There are some really good exercises throughout the text. I might recommend 10ed as it added a chapter on lambda expressions.
I was gonna also vote for heroku. For pure simplicity. After that's good and stable and you need to scale and shit do all the other suggested things :)
Yeah, that is my go to place
[Maven by Example](https://books.sonatype.com/mvnex-book/reference/index.html](https://books.sonatype.com/mvnex-book/reference/index.html) might count. It's a little more focused on the tool than the Java language, but it might also give you a good idea of what professional Java looks like.
There are tens of video lectures including exercises and assignments as well as full stack web projects and what not on Udemy. For instance check [https://www.udemy.com/courses/search/?src=ukw&amp;q=spring+fullstack](https://www.udemy.com/courses/search/?src=ukw&amp;q=spring+fullstack)
I used to think not then I switched from a java team to a python team at work. Intellij with plug-in is ok but not quite the same as pycharm. I've actually just switched to vscode instead for my development.
Look like [the project](https://github.com/AdoptOpenJDK/IcedTea-Web) is well active.
How many language subs are you going to spam this same post to?
If you want to develop your object-oriented programming skills then the following website may help you. It makes you build 3 games namely Roullete, Crap, and BlackJack by using OOPs principles. Also a Python version of same is also available. &amp;#x200B; [http://buildingskills.itmaybeahack.com/book/oodesign-java-2.1/html/index.html](http://buildingskills.itmaybeahack.com/book/oodesign-java-2.1/html/index.html)
&gt; ITS HUGEEE!!
I took the exam, and I had to go to a Pearson View testing center (depending on where you live, there may be one close to you). The exam was administered on a computer, and the test was all multiple choice. Each question gives you a snippet of code and asks you to determine whether it compiles. If it does, then you need to determine if any exceptions are thrown at runtime. If not, you need to determine what the correct output is. I think the test was 77 multiple choice questions with a 90-minute time limit.
First of all to get rid of the `test-1.0.0` you can name your WAR file `ROOT##1.0.0.war` before deploying. Then setup an Apache reverse proxy for tomcat.
As a sysadmin, I am happy to have some hope that Java Web Start stuff will continue to work. For those that don't know, a number of hardware server vendors have used JWS and Java stuff to implement their remote video console support ('KVM over IP') in their management interfaces. Some of the management web interfaces even have modern enough versions of SSL that you can (still) talk to them without digging out an ancient version of Firefox.
You're right, but since this post is about spring boot vs vertx it seems like web is the focus. The reality is that there are a lot of people using vertx that will only use it for web stuff.
As of now it stands at 25. Wow. (I know that was a rhetorical question)
The technology needed to get async performance from old synchronous code is fibers, not coroutines. Coroutines in e.g. Kotlin are an ugly mess of coloured functions and shitty async code.
Udemy : Java master class by Tim Buchalka.
Username checks out
Plot twist: it's the same project!
The latest Hotspot build of AdoptOpenJDK 8 includes IcedTea-Web 1.8.1 in the installer as a selectable component. As far as I can see on the IcedTea-Web github project, the Karakun devs have become heavily involved in it in the last few months, so my guess is that OpenWebStart will be (or at least, based on) IcedTea-Web 2.0
You're [late to the party](https://redd.it/bxwrix). Instead of just plain posting, you should also sometimes read through the subreddit. **Removed** as **repost**.
Yessir... one point of edification: it is Pearson Vue, at least where I live. To the OP: I'm deep in throes of studying for the OCP which by my understanding requires successful completion of 808 and 809. I'm studying for 808 now. It can be frustrating because while I can program in Java and what I think is somewhat advanced software, well, the exams seem less about that ability and more about sorta theory, how the JVM interacts with the CPU and its memory heap, than about writing actual software. But hey, whatever it takes to get certified, I'll make happen. And test questions seem tricky, not reflective of how code gets written in the real world. 808 seems a lot about how/whether primitive data types play well (or not) together in a line of code to compile.
People still do these? How is that working out with the new release schedule? You get certified every time there is a new LTS release?
LTS is a service offered by companies for arbitrary OpenJDK versions of their choice (it's not even the same versions for all companies). OpenJDK itself does not have a concept of LTS, and all versions are created of equal quality and attention.
I raise you with java.nio/java.io...
This post ignores code generation approaches. Dependency injection e.g. is possible without reflection, see Dagger 2.
And I raise you with java.lang . ;)
... to avoid. And sooner or later the mentioned frameworks will wake up to the reality of the screaming unnecessity of going through the whole class tree at every application startup to find annotations on classes that will never, ever change, after that JAR has been packaged, and that information could just as well be gathered as a part of the compilation process.
It's a language feature, wit an API rather than an API, hence why i has to be implemented by the jdk. Personally, I think sun.misc.Unsafe is the most important one.
Just pass an object. Everything but passing primitives is being passed by reference in Java. idk if you miss references to naked primitives maybe you should reconsider your model and if you really want there are the wrapper classes like Integer for int and so on.
Just spent half a day tracking down a unit test failure caused by a private attribute being changed to final in a core java class between versions. Turned out someone was modifying it directly via reflection. o_0
What if I want a function to return a reference?
Return an object from your function instead of a primitive.
In particular I'm havving an issue with generic classes where I have to make both a getter and a setter. If the getter returned a reference, I wouldn't have to make a setter too.
Well, Micronaut framework is trying to use reflection and proxies as little as possible and will see how will that work out.
Depends on what you want to do. Generally I would pass the object that contains the primitive I#d want to change. You wouldn't pass the refernce to an intin an object but you'd pass the reference to that object and then change it via a method of that object.
BTW you didn't answer the original question, why aren't there references to primitives?
I wish these posts would die. Nobody cares about people's opinions.
It depends on how you have the object you returned set up. When you return it, you are returning a reference. This doesn't mean that you will necessarily be able to mutate it. Take String, for example. String cannot be mutated so that would be a reason you would have to use a setter.
Thinking of buying their C++ book. Any word on that?
/u/nidrach is incorrect. Nothing in java is pass by reference. Everything is pass by value. The value of a reference type variable in most JVMs is just a memory address. That memory address points to your object storage in memory. So in java, when you are passing objects, you’re actually just copying the value of the reference variable (which is usually just a memory address) to the parameter variable. This is the definition of pass by value. If java was passing object by reference as /u/nidrach asserts, you would have to dereference your reference types before you could use the dot operator on them like so: (*variable).method(); People are claim java passes objects by reference are explicitly wrong by definition.
Come on, you can't be serious. Who ever refers to the java.lang API?
There are, sort of: Boolean will be a reference to a boolean, Integer to int, Long to long, etc. If you were actually taking C-style references to primitives you'd allocate more memory for the pointer than the value it references in memory. Objects are always passed by reference in Java. That's why there's no explicit pass-by-reference: it's the default.
interesting, for reflection to get into our codebase, gotta have a really good reason
Give us an actual use case please.
This is incorrect. Objects are not passed by reference in Java. But it is a common misconception. The reference is passed by value.
I have a linkedlist&lt;T&gt; class and have a method public T get(int n) to get the element at index n. This doesn't return a reference of T data of the list. It returns the value.
Which means there's no way to pass by reference and return a reference?
Java was designed to be type safe, thread safe, secure, and platform agnostic. The reason there is no pbr in Java is security. It ensures that regions of memory cannot be inappropriately accessed by illicit code.b in c++, we can pass an object by reference, which them must be dereferenced to access the object stored at that reference. In Java, the reference is passed by value, which means the object is automatically dereferenced, meaning we never have access to the memory address, only the object. This way we cannot use the address as a springboard to access forbidden regions of memory. The drawback is reduction in performance.
Finally an actual answer to the question I asked.
But when injecting you still need reflection to use the classes/instances that dagger2 generates and annotations used in code generation are used via reflection. Your statement is not accurate.
Yes. Still C people are regularly confused, when coming to Java, because from their perspective it is both or neither. When you hand out a memory address in C it is just that (+ type information). In Java you hand out an address and - boom! - there is the object. And while I know that in theory I'm regularly confused, when I need to use C, because: Why would I ever want just a memory address? So apparently just repeating the definition is not always helpful. I like the term Pass by Sharing for Java's approach. It describes really well happens in Java for all intents and purposes: As soon as you pass me something, we both share ownership of that same thing, and can manipulate it, if that thing allows it.
Do you use annotations?
&gt;The drawback is reduction in performance. Java is slower than C++ In certain situations...
How is passing the "refernce variable" not passing by reference? Just beacuse refernces in java do not work like pointers in C means nothing. Underneath a pointer in C and a reference in Java are basically the same thing +/- VM.
Correct. You may as well code all your parameters as `final` since changing them doesn't really do anything. In fact some places do that as a standard so developers don't make this mistake (there's save actions in Eclipse that automatically adds this).
Honestly I already started to hate the language.
Seeing as you can apparently implement one on top of the other, they seem to be equally well suited to provide the performance gain (http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4024.pdf section Relationship). And whether Kotlin's implementation of coroutines meets you personal criteria of beautiful code or not is no valid criticism of the concept of coroutines.
Dagger2 evaluates the annotations at compile time
Tbh it is confusing and it's more confusing if you don't have a strong C background as pass by value and pass by refernce are more relevant there.
&gt; The reference is passed by value. Yeah I got confused but honestly I blame my weak C skills.
It's ok, it's a very common misconception that almost everyone (including myself) gets wrong the first time around.
But then we end up with a lack of consistency. Pragmatic codebases change dramatically based on each programmers taste. Being very concise about when and when not to use reflection pushes us to be better designers. Building systems is in almost every way a philosophical Enterprise
You need to box a value if you wish to accomplish something like passing by reference. But let’s say you have a single value type int that you Box to Integer instead. You’re actually going to lose performance over if you just copied the int, did whatever, returned the int and then reassigned the initial value, because boxing can be pretty expensive.
That's when you should use `git blame`, if for nothing else than to make sure that it wasn't you.
Hahaha there's always a chance the idiot was me, though in this case, it was not.
Thanks, do u know of any good practise material or anything?
&gt; screaming unnecessity of going through the whole class tree at every application startup to find annotations on classes Thats when you tell it to scan everything instead of single packages.
That's how AP CS implies how Java works.... KEWL... xD
```public Optional&lt;User&gt; findUser(Optional&lt;String&gt;... args)```
There aren't references to primitives because the value can be directly stored where it is used. Reference types point to values stored in the heap, so what is stored is the reference, which is dereferenced to get the actual value from the heap. There are boxed types, which wrap a primitive value with an object wrapper so that they can be stored in generic collections. This is a consequence of the fact that generic types are all subtypes of a reference type, ultimately `Object`. A primitive array `int[]` has much better performance than `ArrayList&lt;Integer&gt;`, but the latter is significantly more convenient than the former.
There are very few "facts" when it comes to programming practices. There isn't often one "right way" to do something. Techniques, languages and styles come into fashion and then get replaced by others.
A linkedlist&lt;T&gt; always returns a reference, because generics don't apply to primitives, which are the only value types currently available in Java. Note, reference here means a pointer type to a value which itself is a value, not a reference to an outside variable whose reference is passed to the function.
I don't understand. Say you have a linkedlist&lt;Integer&gt; a. Doing a.get(1) = 2 for example throws an error and basically doesn't work. That's what I mean.
Unrelated but I really hate how Linus named it 'blame', it's so confrontational and makes me so much likely to use it than if it were something more neutral
That's because `a.get(1)` isn't a proper l-value, that is, what is allowed to be on the left hand side of an assignment. You can only assign to variables. Languages like C++ would allow it because of operator overloading, since assignment is a method call. The closest you can do in Java is something like this: LinkedList&lt;AtomicReference&lt;T&gt;&gt; which would let you do this: a.get(1).set(2) This isn't assignment, but a method call. The only way you can get "call by reference" in Java is with an object wrapper type.
Java is pass by value only. A reference is a value type, which is copied in a method call. Java doesn't support anything like C#'s `out` parameter type, which is an example of pass by reference.
I agree, it's not great semantics, but truth be told, that's the most often use case I see of it. Although intellij calls this feature "annotate", which I like better than blame.
&gt;If java was passing object by reference as /u/nidrach asserts, you would have to dereference your reference types before you could use the dot operator on them like so: That's not what pass by reference means. A better example is a swap method with a C# method like this: swap(out int a, out int b) { int tmp = a; a = b; b = tmp; } Which lets you do this: int x = 1; int y = 2; swap(x, y); // x = 2, y = 1 This is impossible in Java.
I appreciate that you didn't clickbait your title as "This is the most insanely important API of all Java", and nothing else.
I would go so far: if you think you have to use reflection, something is very much wrong in the initial idea already. To me reflection is something exclusively being used for/by application server method dispatching and very advanced language features, like code coverage analysis, of which both use cases have been successfully glued into public libraries, so there is absolutely no need to reinvent the wheel.
If you read the articld, the author is not suggesting that you use it directly, but simply that the reflection API is responsible for many of the frameworks that are a core part of the modern day Java ecosystem. Also, I'm fairly sure spring *does* do it's scan at compile time, during the repackage goal? I dint remember my applications searching for beans on startup.
Pretty sure you can't build fibers on top of Kotlin-style coroutines because of the coloured function problem, that's exactly my point.
It's talking about how Reflection has been a key part of creating the ecosystem Java developers enjoy today. That doesn't mean it wouldn't be made obsolete in the future.
I wouldn't say "important", but it _is_ somewhat unique, and certainly very powerful (with all the standard caveats applying). That being said, if you find yourself needing to use the Reflection API in your day-to-day work, it's a good opportunity to ask "Why?". Maybe it's a legitimate purpose, or maybe it belongs in /r/thereifixedit
That is an example using value types, which is not at all what I was talking about.
Annotations are useful beyond just reflection.
My example doesn't have anything to do with value types. You can throw in reference types as well. I'm talking about calling conventions, which is what pass-by-reference is. The `int` is not the important part, but the `out`. You can just as well do this; swap(out string a, out string b) { string tmp = a; a = b; b = tmp; } In C, you can pass a reference to a primitive, simply by passing the storage address, so the above can become: swap(int *a, int *b) { int tmp = *a; *a = *b; *b = tmp; } int x = 1; int y = 1; swap(&amp;x, &amp;y); This is also impossible in Java. I would call this pass by value, since you are passing a pointer value, but the pointer value lets you directly manipulate memory, acting as pass by reference, which is forbidden in Java. C# reference types work the same way as Java reference types, but C# has additional calling conventions that allow manipulation of caller variables. That is pass-by-reference.
&gt; The reference is passed by value. That is just another way of saying "passed by reference."
Again, incorrect. When passing by reference, the memory address is accessible in the local scope of the called method. To access the referenced object, you must then manually dereference the address. When passing a reference by value, the local scope of the called method never sees the memory address, only the object, which is automatically dereferenced. This is why there reference is passed by value, it's a security measure. Passing by reference less you know exactly where in memory the object is being stored.
&gt; When passing by reference, the memory address is accessible in the local scope of the called method. Says who? Passing by reference just means you're passing a reference to the object instead of the object itself. It doesn't matter at all if you have access to the underlying memory address. That is a totally separate concept to passing by reference. If anything, this is just Java re-inventing the meaning of a concept for no reason.
I used reflection to replace RMI with my own lightweight, fast and super easy solution. Good times.
Well that sentiment falls within the realm of design philosophy. I'm not interested in defending the design as that is a subjective matter to which I am completely indifferent. I'm merely explaining to the best of my ability why Java is not pass by reference
Guava has an AtomicDouble class. This doesn't answer your question, but it may be useful for some people.
There's a study guide that you can buy which provides example questions. Just search "java 1z0-808 pdf" on Google.
Thanks for the clarification :)
Pass an object array size 1, then modify arg 0 if you really need that functionality. Better to substantiate a new special object and pass multiple values.
You are just twisting the meanings of words. The only way to pass things in computers is by value. There's no other magical way of doing it. You either pass an object, or a reference to that object. There is no way to "pass a reference" besides passing it by value... This has nothing to do with design philosophy. You are just confusing the meanings of words. I've thought this ever since I first heard of this "pass by reference" vs "pass reference by value" more than 5 years ago.
Slight correction: references are pointers to the heap, which is sort of like virtual memory. I also feel like sometimes people misunderstand and think that entire objects are always copied. In Java there are primitive types which are copied, such as numbers. And reference types which themselves are not copied, but their references. So if you pass a reference to a list to a method and the method adds an element, that change will be seen by all future methods using another reference to the same list.
In Java, the most used integers (I think it's the short range of -128 to 127) are interned anyway, meaning there's always just one element in memory of something like '0'. If you do new Integer(0) you might get a new reference in the heap, but not an actual new memory object. So using unboxed versions is much more performant since those lower values are never copied in memory.
No I'm sorry, you're wrong again. If you pass by reference, you must *dereference* the variable before you can access the object. Otherwise you just have a number that represents a memory address. If you pass the object by value, you must copy the entire object to the stack, and any changes you make to the object won't be reflected in the calling scope. If you pass the reference by value, you don't need to dereference the variable, *and* the changes are reflected in the calling scope, *and* there is no need to copy the object to the stack. Moreover, you never see the number that represents the memory address, since it is automatically dereferenced, which is a security measure. *Everything* is pass by value in Java. It was intentionally designed that way.
&gt; Does C# double dereference for you when you reference a reference type? Yes.
C# and VB before disproves that argument. They both allow by-reference parameters (`ref` and `ByRef`) respectively without any risk of illegal memory access.
&gt; If you pass by reference, you must dereference the variable before you can access the object. You keep saying this, but you're wrong. What makes you think this is the case? That is not what "pass by reference" means. &gt; Otherwise you just have a number that represents a memory address. No, you could have a reference. "reference" doesn't mean: "a number that represents a memory address." It just means "something that refers to the object in the context of the language." &gt; If you pass the reference by value, you don't need to dereference the variable, and the changes are reflected in the calling scope, and there is no need to copy the object to the stack. This is just semantics. Let's say I "pass a reference," in another language. What do you think is happening in that context? Let's say in C++. The "reference" is a pointer, right? Well... it is passed by value into the function, right? So - it is passing the reference by value? C++ has "references," too. In that case there is no pointer, but rather an abstraction that represents a pointer, but without access to the memory address. In this case, these too are "passing the reference by value" because the pointer is copied. There is NO WAY to pass a reference BESIDES passing it by value. You must copy the pointer, that's just how computers work! What you are talking about is having access to the underlying pointer or memory addresses, which is a totally different concern. &gt; Everything is pass by value in Java. It was intentionally designed that way. Everything is pass by value IN COMPUTERS. Do you understand how computers work?
They simply use a different method to solve the problem. This disproves nothing.
Some relevant terminology: 1. Pass value by value 2. Pass reference by value 3. Pass value by reference 4. Pass reference by reference * Java supports 1 &amp; 2. * VB and C# support all 4. * No. 2 and 3 can be achieved in C using a pointer. * No. 4 can achieved in C using a pointer to a pointer.
It disproves the claim that Java doesn't have pass-by-reference because of security reasons.
No it doesn't, those are completely different languages with different designs
At the core the designs are so similar that modern Java can run on C#'s runtime (with the help of IKVM). While they have diverged over the years, C# 1 was essentially Java 1.1 with some VB features tacked on. They even had J#, a Java clone that was released as part of NET 1.0.
Can someone give me examples of what they're talking about with Spring and reflection? I'm not sure I even understand what *reflection* is in this case. I was under the pressure that most of Spring's magic was done via Java's ability to proxy interfaces or classes (with CGlib).
So when you dereference a variable in say c++, you have to access it like x = *myPtr, instead of x = myPtr, otherwise you get the memory address instead of the value stored at that address. So yeah, you have to manually dereference it. You'll never get that memory address in Java, since the dereference is automatic. I'm sorry you dislike the term "pass reference by value", but it has no bearing on the fact that Java is not a pass by reference language. Saying everything is pass by value is a moot point: We simply say "pass reference by value" because saying "pass by value" implies that the entire object is copied to the stack and not altered outside the scope of the called method, which is absolutely not the case. So yeah, it's "pass reference by value" (sorry you don't like the semantics) for security purposes.
thanks god its impossible
It will he really interesting in the server less spaces. I've been messing with the Micronaut with GraalVM native binary images. It's a bit kludgy for right now, but it's really impressive to take a framework similar to a hello world Spring Boot and have it start in 15ms and on 15mb ram. Overall, it's closer to 55mb disk space (bigger than a Spring Boot hello world), but you don't need a JDK so you can pair it with a 10mb Alpine docker image.
I raise my eyebrows when I see blanket advice to avoid reflection. The reflection API is massive and usage is so varied that it's impossible to treat it as one thing. I have seen clean and well encapsulated code that uses reflection for things such as automatic serialization, sample data generation and type-safe eDSLs. OTOH code doing stuff like getClass, proxies, Class.forName, classpath scanning etc is fragile and error prone.
Yeah but at that point it's bytecode and not Java. Just because you can get a reference in language x doesn't mean you can just assume the same for language y, nor can you assume that getting a reference in language x means language y won't let you do it for reasons other than security.
&gt; won't let you do it for reasons other than security. That's my whole point. Whatever the reason is for not supporting ByRef, security isn't it.
You do not have to pay Oracle unless you really want to. Look on the sidebar for where to download Java for free.
It has most likely already been described way better elsewhere on the internet, just Google it and you will find a perfect tutorial for how to build a OSGI REST service. Now on to the real question: why would you want to build an OSGI REST service in 2019?
But the issue isn't about why Java doesn't support ByRef, it's about why Java is pass by value and not by reference... You are confusing the issue...
I didnt know any language actually had the feature of changing caller variables without explicitly passing a pointer to these variables. I am intrigued are there any cases where this is preferable over passing a pointer?
First of all, please stop explaining to me how C++ or Java works. I already know how they work, it is just wasting time. You should focus on your point. I am only talking about the semantics, here. You say that C++ is not a "pass reference by value" language. Yet, in C++ pointers are copied. They are passed by value into functions. Pointers are values. When they are passed into functions they are passed by value. Understand? So, do you just accept that the semantics don't make sense, but you stick with them anyways? Or do you disagree? Please be more coherent otherwise I think we should stop discussing.
ByRef is an abbreviation for pass by reference.
The point is that you cannot obtain a memory address in Java ever, for security reasons, because the dereference happens automatically. "Pass by reference" means you explicitly obtain the address and must manually dereference. "Pass by value" means you copy the entire object to the stack. "Pass reference by value" means you don't pass the entire object to the stack, nor do you explicitly obtain an address which you must manually dereference. Don't overthink it.
If you'd take C for example and pass a pointer to a function. That would be 'by reference' in your definition right? But this pointer's value is passed by value to the function. You can reassign the pointers value without affecting the pointer outside of the function. Only changes to the location pointed at will be reflected outside. This is the same in any language I know. Java decides to not let you read the pointers value (and forbids doing arithmetic with it, which is the real safety mechnism in my opinion) but it is exactly the same mechanism.
Ok, but you are assuming that these languages all have identical design goals. It's a false analogy...
Yes, but that is a moot point. "Pass by reference" means you have access to the memory address. "Pass by value" implies that the entire object is copied to the stack, which means it is not altered in the calling scope. "Pass reference by value" simply means you can't ever see the address, but still can still alter the object in the calling scope, and have the performance benefit of not copying the entire thing to the stack. Don't get hung up on the semantics, they are merely just that.
Ive attempted to find a decent tutorial but all end up with it shitting all over itself. And I only want to build a OSGI REST service because of a project at work, we are creating an endpoint along with bundles to interact with legacy software that uses OSGI.
Obtaining the memory address is independent of passing objects into functions... Anyways, you've basically admitted you're not thinking, which I guess is why you're so incoherent and nonsensical. My opinion is not changed at all. Goodbye.
No, my point is very salient, really you just tried to to trip me up with semantics, but whatever
OpenJDK
No I'm not. All I'm said was that security isn't the design goal that led Java to decide to not offer pass by reference.
But you never said why.
Yes, for certain kind of customers they require a specific amount of devs on the company offering services with those certificates, regardless of what we think of it, they are a must at this business level.
A reference in C# is essentially a safe pointer. It is guaranteed to always point to a valid memory location.
You’re using value type to demonstrate that I was “wrong” about reference types when reference and value types have different semantics and therefore greatly matter in examples about how creating a reference to said variable works. If you refer to a reference type, you are two levels of indirection away from the value. If you refer o a value type, you are one level of indirection away. I did not say anything about value types and nothing I said goes against why your swap method works in C# and isn’t possible in Java.
No, that's "passing a reference by value". Passing a [reference | value] by reference means you have access to the original variable itself, not just what it pointed to.
https://adoptopenjdk.net/
&gt; If you pass by reference, you must dereference the variable before you can access the object. In languages such as C# and VB, the compiler does that for you automatically. Consider this example, x.y = 5; The variable `x` may be: * a local variable holding a struct * a local variable holding a reference to an object * a local variable holding a reference to a variable holding a struct * a local variable holding a reference to a variable holding a reference to an object It's a detail that the developer usually doesn't have to be concerned with.
Yes, and it is done automatically in Java as well. But why would you rule out security based on this? And what does any of this have to do with ByRef?
I chose “in memory” over “on the heap” because, as I also said, java can create objects on the stack of it so sees fit. StringBuilder created and used locally in a toString method is one such case where the JVM will often opt to stack allocate the StringBuilder.
&gt; when reference and value types have different semantics Reference types and value types don't have different semantics *in Java* in the *calling convention*. Because a reference *is* a value in Java. The difference is that value types store the value on the stack, while reference types store the value on the heap, require reference types to be dereferenced. That's why `==` works the way it does on reference types, and why you need to use `equals` for actual object equality. Interestingly, C# has *actual* value types, namely `struct`, in which `==` actually does memberwise comparison. &gt; If you refer to a reference type, you are two levels of indirection away from the value. If you refer o a value type, you are one level of indirection away. That has nothing to do with *pass by reference*, which is the entire point. The distinction between value types and reference types is irrelevant, because you can pass either by reference in C#. Because pass by reference refers to a different kind of reference.
I am trying to criticize the semantics. So what are you even talking about? Seriously...
That just means you don't like the semantics, it doesn't mean I'm wrong about why Java is not pass by reference. It's important to make that distinction from languages like C and C++.
The fuck do you mean it doesn’t matter? Referring to a reference type would allow you to perform a swap of reference type variables in the caller. Hence, two levels of indirection away from the object. You’re highly, exceptionally confused about reference and value types. I suggest you read a beginner level book about it.
I don't think that quite answers OP's question, because it would probably be OP's clients that would decide if they want to run Oracle's JDK or OpenJDK. OP would not have to pay any money to Oracle to sell an application written in Java. There no licensing fee for selling your own Java desktop application. (If OP bundled Oracle's JDK with their application, then that might be something a different situation. Does Oracle's JDK even allow redistribution?)
Do I need to use it, or can I stick to the one I'm using now? It's just that I'm finding it difficult to get Intellij to work with it.
I see what you're saying. It might be best if OP bundles the runtime using a tool like jlink. If they do, OpenJDK should be used. They could use Oracle JDK, but they would have to pay.
&gt; Referring to a reference type would allow you to perform a swap of reference type variables in the caller. Hence, two levels of indirection away from the object. A reference type in Java is a special type of value, which gets copied onto the stack, thus two reference values pointing to the same heap value. Java has no mechanism to refer to a reference type any more than a value type. Java doesn't have anything like the '&amp;' operator in C, and Java doesn't have anything like 'out'. Either of which lets you refer to a reference type or value type from the caller. Thus it makes no difference *from the calling convention*. &gt; You’re highly, exceptionally confused about reference and value types. I suggest you read a beginner level book about it. You're confusing two different definitions of the word "reference" in the context in which we are having this discussion. Java only defines a reference as value type. That is why Java is pass by value *only* and *never* pass by reference, even though Java has references. Just because the same word is used, doesn't mean it means the same thing. Context is key.
Development is fine. You just got to be careful what version you bundle with in your deployment and where you deploy it.
When I say "semantics," I don't mean the semantics of the language. I mean the words "pass reference by value." &gt; it doesn't mean I'm wrong about why Java is not pass by reference That is not what I am discussing, though. That's why I'm saying you're off topic and incoherent.
Obviously you don't mean the semantics of the language. Obviously you mean my choice of terms. But the semantics are irrelevant to the underpinning subject, which is op's question. In fact *you're* off topic, because your'e so preoccupied with the semantics. And my point has been very coherent; I've repeated it like 3 or 4 times.. do you want me to repeat it again?
In honesty, Oracle have done a terrible job of explaining themselves, and this is not your fault. Futhermore, it's not your job to try and work it out for yourself when there are alternatives. Use OpenJDK, and you'll never have to worry about whether a license applies to you. Sorry Oracle.. but you did this to yourselves.
I’m not Confusing anything which is why I know that referring to a reference type is two levels of indirection and you don’t.
Yeah I think it's best to bundle a JVM with the application, if only to ensure that the client is running a known-good JVM.
To clarify, I'm expecting to bundle things, so that the only thing I'm giving to clients is .exe files, or whatever the equivalent is for mac and linux.
&gt; why I know that referring to a reference type is two levels of indirection and you don’t. No, you're missing the point. That is irrelevant to the topic at hand, which is *pass by reference*. In pass by reference, *both* value types are reference types are referred to indirectly, because a reference *in that context* is a reference to the memory location *in the stack of the caller*. It doesn't matter where the reference value of the reference type itself points to, because the reference value *itself* is being changed. The distinction is irrelevant.
There are free bundling tools for Linux (and I believe MacOS) that bundle using OpenJDK. I’m not sure about the legalities of this for commercial tools. I’m sure someone has established a precedent regarding this on StackOverFlow.
Have you used Gradle before? It compiled everything as you go and uses pools to execute your build updating the files that have been changed/added.
OpenJDK is GPLed. Oracle have said that they do not consider running bytecode as linking (because that would pretty much stop all commercial Java applications).
So, yes, look at jlink and use an OpenJDK build rather than Oracle's JDK and you will not need to pay anyone any money.
You don't create REST services with OSGi. You use it to modularise and bundle the software.
Thank you! This is probably the most concise and least confusing way to explain this.
I don't like it either. Personally, we use it to find out who to talk to about an area of code. I also use it to identify reviewers for the code I'm changing as they are normally the best equipped to review that.
Here's the real reason, as stated by James Gosling himself: &gt; Some people will say incorrectly that objects in Java are "pass by refernce". The term pass by reference properly means that when an argument is passed to a function, the invoked function gets a refernce to the original value, not a copy of its value. If the function modifies its parameter, the value in the calling code will be changed because the argument and parameter use the same slot in memory. If Java had pass-by-reference parameters, there would be a way to declare halveIt so that the preceding code would modify the value of one, or so that commonName could change the variable sirius to null. This is not possible. Java does not pass objects by reference; it passes object refernces by value. Because two copies of the same reference refer to the same actual object, changes made through one reference are visible through the other. There is exactly one parameter passing mode in Java - pass by value - and that keeps things simple. TL;DR to keep Java simple. Same reason for no unsigned values and no operator overloading.
Dependency injection is also perfectly reasonable with no framework support at all. Just declare all of your dependencies in your constructor and guess what - you’ve done DI.
That's objectively stupid. I mean, every tool has it's risks. Removing them doesn't make it *simple,* it does quite the opposite*.* Removing operator overloading makes the code more difficult to read and using methods makes the code more complicated. Removing pbr really gets you into trouble sometimes. You can't even make a swap function in Java and that's a shame, not simplicity.
¯\_(ツ)_/¯
Damn, I wish my AP CS class taught me actual Java, but my teacher was not fit to teach a real CS class so we couldn't get to OOP in time for the test.
Are you in a AP CS Principles class? That is different thing entirely if I understand it correctly the traditional AP CS A class is required to be taught in Java since the whole test in Java and tests for OOP.
osgi does indeed suck. I'd honestly try to avoid it if possible. if there's a way to interact with the legacy code via an API and write your other stuff in a normal REST setup I'd go that route
Or you can use `MutableInt`, `MutableObject` etc. from Apache Commons: https://commons.apache.org/proper/commons-lang/javadocs/api-3.1/org/apache/commons/lang3/mutable/package-summary.html
It looks like in your [submission](https://www.reddit.com/r/java/comments/byr4pk/difficult_syntax_in_java_8/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
It was blame in Subversion and other VCS since long before git.
I'm in my second year of college now, but back in high school I was in Computer Science A. My teacher was just very bad.
&gt; And sooner or later the mentioned frameworks will wake up to the reality of the screaming unnecessity of going through the whole class tree at every application startup to find annotations on classes that will never, ever change, after that JAR has been packaged, and that information could just as well be gathered as a part of the compilation process. https://blog.payara.fish/hk2-the-hundred-kilobyte-kernel which is recent link in this subreddit, supports compile-time scanning (my only familiarity with hk2 is this post)
“This business level”? I have contracted for some pretty big players, and not once has anyone asked for a certification. Sounds more like a common practice at places you would not want to work at?
As a side note, no one should ever want to pay Larry Ellison. Sun Microsystems invented Java. He is just a schmuck with loads of money who bought it.
At this point, there is really no reason to use Oracle's Java distributions other than IT departments and software teams being comfortable with Oracle, which from a technical standpoint is mostly a bad reason. OpenJDK is the official reference implementation for Java SE since Java SE 7. Simply put, this means that Java as we know it is OpenJDK. This has been the case for the last 8 years. Previously, OpenJDK was maintained by Oracle, and we had all gotten used to downloading Oracle's distribution of Java. There really wasn't any reason that we could not have downloaded another organization's distribution of Java, but why would we download it from someone other than the organization maintaining Java as we know it. We (developers) had linked Oracle and Java together because it made sense at the time. However, now Oracle neither maintains the OpenJDK, nor provides their distribution for free. Instead Oracle takes the OpenJDK source code, makes security changes to the code and other minor changes, compiles the code, verifies the compiled distribution works correctly, releases the distribution as Oracle JDK. This same process is also being performed by other organizations (Amazon, IBM, Red Hat, SAP, JetBrains, etc...). In particular, Red Hat (who is known for Red Hat Linux and is now owned by IBM), has taken over as the official stewards for OpenJDK. This means all of these other companies/organizations are doing the exact same thing Oracle was doing and releasing their own JDK. With the exceptions of a very, very few changes that Oracle made to their JDK that are not in the OpenJDK source code, you should be able to take any of the other compiliations of the OpenJDK source code that these organizations are distributing, configure your IDE to use that JDK instead and compile and run your code without ever using any distribution of Java that requires a licensing fee. So why would anyone pay Oracle for the license? 1. Lack of awareness of other options. The simplest path for many companies is to pay Oracle a small licensing fee and not change where they are getting their JDK from. 2. Security updates. Oracle makes their own security updates. Prior to Oracle handing off control of OpenJDK, Oracle would make the changes in Oracle JDK and release the updated JDK before making the changes to OpenJDK. Oracle will continue to make the security updates on their paid version. I do not know whether Oracle intends to continue to port those changes over to OpenJDK, 3. Commercial support. The paid versions come with commercial support. So you could contact Oracle directly to assist with issues with Java itself. So unless I am a Fortune 500 type company or creating software for a Fortune 500 type company whose IT department is paying for the Oracle license, I would use one of the OpenJDK distributions from another organization. With that said, when choosing which distribution you are going to use, you do want to look at whether they will provide Long Term Support (LTS) versions. Most organizations are taking the same approach Oracle is with their paid versions where every third major version will be supported long term (ie. if you use versions 8, 11, etc... you can skip the 2 major versions between long term support, since the organization will continue to support LTS versions with security updates until it is time to transition to the next LTS version).
[Spring definitely does runtime reflection](https://dzone.com/articles/spring-annotation-processing-how-it-works)
What a crazy point of view. Reflection is a HUGELY important part of Java, and most of the ecosystem couldn't exist without it. Spring uses reflection at runtime, as does a ton of other frameworks. People can write stupid code no matter what it is, but blanket assertions about a really powerful tool is silly. Hibernate for example uses runtime reflection to figure out annotations unless you use instrumentation, which can be done at compile time.
Does anyone know what variant of Java IntelliJ uses under the covers?
This is sort of like saying you don't need Executors or RxJava or Akka and you can "just" use threads directly for multithreaded work. It's true in theory but not in practice, at least not in anything but small doses. In general your statement is the right approach regardless of whether you're using a DI framework or doing manual DI. Inversion of control enables reuse and testing and simplifies long-term integration and maintenance.
Yeah and Linus doesn’t seem like the type to want to not use that term.
I’m not saying don’t use libraries. I’m saying don’t use frameworks that do magic shit at runtime and can’t be statically verified (which is true of any approach that uses reflection). The difference between DI frameworks and what you mentioned is that the behavior provided by concurrency frameworks is notoriously difficult to write from scratch. If you do, your implementation will likely be less correct and less performant than the framework. DI is just good code style. There’s nothing difficult about it. All you have to do is declare your dependencies in your constructor and you’re done. I’ve honestly never understood what these DI frameworks provide, other than a way for people to feel better about using global static initialization because it’s in a framework. Spoiler alert: it’s still a terrible idea.
Your constructor is creating a new local variable, it isn’t setting the class variable
I'm sorry but can you explain that to me a little more in depth? I don't really know what that means? Also thank you for being so quick to help!
[Java is Still Free](https://medium.com/@javachampions/java-is-still-free-2-0-0-6b9aa8d6d244)
What do you mean by type-safe eDSLs? Type safety and reflection are mutually exclusive.
On line 12, remove the first ArrayList&lt;student&gt;. It is creating a local variable and not using the one you defined on line 5
Oh my gosh... I'm so silly. I just realized what you meant! Thank you everything is working now!
Yup just did. Thanks so much! IT WORKS!
This would fall into a gray area. First, like everyone else, let me suggest that you use the openjdk. It is developed for individuals in mind. The Oracle jdk se subscription was created to profit off of businesses that have hundred to thousands of employees using the oraclejdk everyday, requiring much more support than most average users, and Oracle wanted to make a buck off them. You can still use jdk8 and lower for personal use, but newer jdks should be met with a license. If you are developing an app that you KNOW you'll be selling, and are using an oraclejdk, then yes you need to buy a license or choose the openjdk. If you make an app for fun but someone offers to buy it from you unexpectedly, then the time between personal use and non-ownership is too small to require a license. Again, this payment plan wasn't created with these scenarios in mind, it's focused on, say, LG using java in all their products. That's oracles target market. But again, just use the openjdk. It's supported by Oracle, up to date on all security patches and jdk versions, and it's what you want. I found their explanation confusing, but their faq cleared it up a bit https://www.oracle.com/technetwork/java/javase/overview/oracle-jdk-faqs.html
Check out some standards of java as well, your class names should be Capitalized. E.g. student -&gt; Student. Helps distinguish between a class and a variable.
Okay, will do. I usually am in accordance with standards but I forgot this time.
What do you mean variant of java? And what do you mean what it uses under the covers? Intellij was built on jet brains' own jdk, which as all jdks, was originally forked from openjdk. The 2016 version uses java 8, the 2019 version uses java 11. If you mean what does it compile your own programs with, that'd be whatever you configured it to.
https://openjdk.java.net/jeps/343
In Java `Class&lt;T&gt;` can be statically checked at API boundaries because it has a generic type parameter. Generic types are more awkward because `Type` is not parameterized so something like [TypeLiteral](https://google.github.io/guice/api-docs/latest/javadoc/index.html?com/google/inject/TypeLiteral.html) is required. Admittedly the scope for statically checked reflective code is limited in Java compared to e.g. Kotlin where method and property reflection are fully statically checked and type safe interfaces using reflection are common.
What's the advantage of this compared to Hyperledger Fabric which has a Java API?
We use intellij here but via oracle's jdk-8u121. I've know that intellij has it's a jdk baked into the app itself but didn't know what it was... now I know that it's based off openjdk..
Whatever you choose, the run configurations are, well, configurable.
Jetbrains bundles its own version because they found it necessary to patch it. I guess bugs in the Swing implementation would have been a showstopper otherwise. Knowing this, it's rather pointless to try to make IntelliJ run on another JRE, nor should it be necessary. You paid enough for the IDE after all. This also means you *have* to use another JDK for development as you are likely not supposed to bundle IntelliJ's internal JRE.
Yeah, boring old me, giving the answer directly in the title :-)
Anything by Josh Long. I know it's a bit advanced for a beginner but here's a video on Spring Boot. [https://www.youtube.com/watch?v=sbPSjI4tt10](https://www.youtube.com/watch?v=sbPSjI4tt10) It took me a minute with Spring to wrap my head around dependency injection, @Autowire and such but hang in there. Once it clicks oh man is it fun. I can't think of writing any serious application without Spring, more specifically Spring Boot.
I disagree. Every now and the you need ipinions to steer our practices in the right direction. I'm generally pragmatic, as most of my blogposts are direct tips, but I value the ipinion bits just as well
And then you need to upgrade a plugin in your build scripts and find out since you last touched it Gradle’s “moved fast and broken things” from 2.x to 5.x and the new plugin version requires the newest Grafle, so you have to fix a big pile of gratuitous build errors to upgrade your build, except the you find out that breaks *another* plugin you have and which is no longer maintained and then you just say fuck it and spend three days switching back to Maven because it sucks less than Gradle does.
That was the first book of theirs that I read. I liked the book way more than I like C++. But it was the most tolerable C++ book I have ever read.
I would look at their [guides](https://spring.io/guides)
I see that is pretty nice to have. Thanks
That makes no sense to me and the boost authors from the paper I link disagree. So please provide more evidence than "I'm pretty sure"
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
I got started with [Spring in Action](https://www.amazon.com/Spring-Action-Craig-Walls/dp/1617294942), can recommend.
Until you've moved on and someone needs to make sense of it without the ability to Google what the error means. If you're using it in a library for personal projects, that's different and you can ignore the first part of my comment. :)
Recommend learning Spring without Boot first; books like Spring in Action, Pro Spring, Spring Recipes will get you going, then move to Boot with Josh Long's Cloud Native Java, Pro Spring Boot, Spring Boot in Action.
DI allows you to keep dependecies isolated without them affecting every caller/user as well. It also allows to decide at startup or runtime what the constructor parameters will be when multiple implementations are available. It allows you to use different implementations during integration tests for example, without having to duplicate all the setup code in your tests (which would need to kept in sync) or make provisions in the code specific for testing. It also allows for much easier evolution of your code. Need a database suddenly in a class? Inject it. With constructors it will also affect every user of your class, and their users and so on, and all the test cases. No longer need it? Just remove it, no major refactoring needed.
Many Fortune 500 companies when dealing with service agencies. Those requirements tend to be part of the RFP process.
Reflection API is the language extension point in Java. And it's usually used as a powerful tool to add missing language features in a form of some frameworks. From AOP to properties and data classes. It usually adds new concepts to your code that should be learned by new team members before they can work with your project. That's why such code should be isolated in a well-documented, well tested (and preferably widely used industry-standard) frameworks, so effectively it becomes a "new language feature". And common application code should use it as rare as possible, because it makes app development/support way more complex and error-prone. Overall, it's not "good" or "bad". It's just a powerful tool that sometimes could be (and is) abused.
The paper doesn't deal with *Kotlin* coroutines, mate. You can't implement fibers that will run old code with Kotlin coroutines because "suspend" functions in coroutine are coloured, and don't support normally-blocking methods like Thread sleep.
Several things wrong with your post: + Wrong subreddit - programming help goes in /r/javahelp + Never *ASAP* - if you need something ASAP it's your mess up - we don't care + Never *screenshots of code* - had you posted in the right subreddit, you'd seen rules on the *sidebar* on how to post code **Removed**
Download CoinNess App for up to 500CNNS (100CNNS=0.8USDT)
In my mind, that seems a very narrow, inflexible and unscalable approach. The beauty of dependency injection (in my mind, I'm still kinda new) is that you have some sort of global context, or multiple contexts, where you store your shared resources (like a database, a dataprovider of any sorts, something that has sense). Then you can create all sorts of things, that don't require any of that. But when you do make something that for one reason or another requires something from the context, you just inject it, no refactoring required. This still requires good design and life-cycle management, but if done correctly, it's all of the things I've mention that your approach is not.
Personally, I do see use-cases for reflection, but never for manipulating fields. Right now we use a framework which allows us to contribute data models from one plugin to another, without creating hard dependencies between them, because these data models are optional and the application is designed to be modular. Remove a plugin, data isn't being contributed anymore between them, but everything runs smoothly, you're just missing some features (buttons,tool items, menu items, dialogs, tables, etc). I find this approach, when done well, extremely effective. And ofc, it all works through reflection. But I also hate reflexion with a passion and if anyone in my team ever uses it, they'd better have a darn good reason.
C++ references are dereferenced implicitly when used and cannot lead to illegal memory access. Basically they're the same as Java references. You're thinking pointers.
&gt; If java was passing object by reference as /u/nidrach asserts, you would have to dereference your reference types before you could use the dot operator on them like so: Why are you using pointer syntax to explain properties of a reference? Because you arbitrarily claim that only manual dereferencing counts as pass-by-reference. It's all pretty much word-twisting.
It's also a really common interview question. For additional fun; imagine the interviewer thinking it's pass by reference.
&gt; Removing operator overloading makes the code more difficult to read Coming from C++, I strongly disagree with that. The overload of operator= (assignment operator) does not make the code neither more readable nor simpler
and how do you deal with basic types like int, long, double ?
Yes thank you, this is true. In this context though by pbr I really mean that you can get that memory address in C++, even though semantically its a pbp.
Do you think seeing a[1] = 2 and a.set(1, 2) both look equally the same readable?
I admit that operator overloading in C# (where I used it) is rather neat. And I can have `ComplexNumA + ComplexNumB` and it just works. But to say that it doesn't make it simpler or more clear is bananas. It is objectively simpler and clearer. Albeit more verbose.
Except the people who work on Java at Oracle today are largely the same people who worked on it at Sun, and support for Java is what pays for OpenJDK's development, which is more than 90% funded by Oracle.
I am sorry, just like the other guy, but you are 100% wrong. No amount of shouting and wining will change that. In java when you pass a primitive int to a method, that method takes the value of that into int i = 4; test(i); public boolean test(int i) { // i is the value 4 } When you pass an object: public void test(List&lt;Dog&gt; dogs) { dogs.get(0).bark(); } The object dog you simply pass an number 0x3EF. That number does represent a memory location (a reference) __but it isn't by any definition an actual reference.__ In c++ you could manipulate that reference, not access it with get, but do pointer arithmetic and select the 0th dog without using `.get(0)`. In java you can't do that since you don't have access to it. Java takes that number, treats it as a reference (again, you can't do this), fetches the corresponding object for you, but gives you no access to the memory. I know you'll just come back with a line going like "a rose by any other name is still a reference" ... but it's quite literally not. It's just a plain number that the language manipulates for you.
This is a rather complex issue in java, in the sense that it is confusing and non intuitive. I would skip it for now if I were you, but the simplest I can put it is this: ##Primitives int i = 1; // this is just the value of 1, a simple number. Integer integer = new Integer(1); // this is an object. i is nothing more than a value. integer is a full fledge object that has within itself, somewhere, the value of 1. When you call a method `test(i)` and `test(1)` are the same exact thing. But for an integer you'd need `test(new Integer(1))` since primitives and objects aren't directly comparable. On the other end of things: test(1); ... public boolean test(int i) { // i is just the number 1 } ... test(new Integer(1)) public boolean test (Integer integer) { // integer is a number that looks like 0xE24F. // It is a location in memory // that location houses an object // that object is of type Integer // the object of integer contains a value // that value is "1" }
&gt; Some people will say incorrectly that objects in Java are "pass by refernce". void f(std::string&amp; mutate_me) { mutate_me = "mutated"; } What do you call this then? This code has the same meaning as changing a (would be) mutable string in Java through its reference. And it's called pass-by-reference. The only difference between C++ and Java here is explicit reference notation, because it is possible to pass object value in C++, unlike Java (note distinction between passing object's data as value vs. value of a reference to an object).
It's 'Show Revision Information' in Eclipse but i still call it 'blame' to use the common short term.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
The Java Web Development track at Treehouse helped me a lot: https://teamtreehouse.com/tracks/java-web-development
The Pluralsight Core Spring path has decent courses.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
O'Reilly courses are my favorite ones about spring basics
&gt; What do you call this then? That is calling the assignment method on `mutate_me`, which replaces the internal buffer with `"mutated"`. C++ strings are mutable. &gt; This code has the same meaning as changing a (would be) mutable string in Java through its reference. First, strings aren't mutable in Java. Second, the meaning is completely different. You can't overload assignment in Java. Assignment is always reference assignment. The caller reference value would be copied into `mutate_me`, and thus the assignment in `f` will not be reflected in the caller. &gt; It's all word-twisting at this point, caused by the fact the "object value" doesn't exist as an entity in Java Object value is completely irrelevant. C# references work exactly the same way as Java references, but C# has "pass-by-reference" lets you change the caller reference: void f(out string mutate_me) { mutate_me = "mutated"; } C# strings are also immutable. This works because C# passes a reference to the caller string reference value and assignment modifies that reference value such that the assignment is reflected in the caller. This is not possible in Java, because the reference value is always copied, because Java is only pass by value.
Way to address all the things that are irrelevant to the discussion. void f(std::string&amp; mutate_me) { This declaration is called pass by reference. It achieves the same results as when passing references in Java.
If you are _only_ comfortable writing applications with Spring I can only strongly recommend expanding your horizon and learning other technologies. There is no such thing as one tool that fits all problems. But when all you have is a hammer, everything starts looking like a nail.
&gt; It achieves the same results as when passing references in Java. But the meaning is completely different, and the comparison is completely irrelevant to languages like Java and C#. There are three ways you can write the declaration: 1. `void f(std::string mutate_me)` 2. `void f(std::string &amp;mutate_me)` 3. `void f(std::string *mutate_me)` 1 is pass by value. 2 is pass by reference. 3 is pass by pointer. But what C++ calls pass by reference is not what C# and Java would call pass by reference, which is closer to 3. C++ is a completely different language.
Honestly, probably you are still actually quite on the beginner track. 2 years experience of only Android apps has most likely hardly tought you things about server side technology. Try starting with some simple Spring boot tutorials. Once you’re a bit more comfortable, write some playground applications for yourself in different ways. Learning more than just one way helps you to learn what is useful in which situation.
It is a JetBrains' fork of OpenJDK (swing patches) supported by BellSoft. More details here [https://bell-sw.com/announcements/2019/02/13/JetBrains-BellSoft-Liberica-OpenJDK/](https://bell-sw.com/announcements/2019/02/13/JetBrains-BellSoft-Liberica-OpenJDK/) And BellSoft's Liberica JDK itself is free for distribution with desktop apps. [https://bell-sw.com/java.html](https://bell-sw.com/java.html)
There are only few frameworks for scientific plotting in Java and I have not seen a single one that can plot contour/iso lines or bands prperly. Also quiver (vector field) plots are seldomly realisable in these frameworks. So here's mine https://github.com/hageldave/JPlotter Its still at the beginning but I think for ~5 weeks of work, quite usable.
I always use this https://www.baeldung.com really good content and very instructive.
Spring in action is good
Spring boot is super intuitive. Follow their tutorials and make some applications
I'm reading this right now. If you're trying to code along with him, there are a couple of spots where the code in the book is wrong. If you get the source from Manning though, it is fixed.
I don't care about your game, but it makes me happy to see you so proud xD continue your project, it's an invaluable learning experience!
Small edit if I may: “~~I don't care about your game, but~~ it makes me happy to see you so proud xD continue your project, it's an invaluable learning experience!”
This is a public blockchain, meaning sharing the same chain as others. While Hyperledger is for private use, aka corporates.
Dread it, run from it, java still arrives
Spring is a very powerful framework. You can make a career just with spring. I wouldn't suggest spreading yourself to thin at first. Lean one, if at that point you are hungry for more then by all means learn more. Technologies like angular are freaking awesome but not the easiest to learn concurrently with something like spring as a beginner. But this was a question specifically about learning spring, not other technologies.
I mostly responded to the following part of your answer. Your suggestions for learning Spring boot are sound. &gt; I can't think of writing any serious application without Spring, more specifically Spring Boot. To me this reads a lot as “you don’t need to know anything else than Spring boot”. That I think is very much wrong. But I may have misinterpreted, so sorry is that’s not at all what you indended :)
Nothing but programming love here buddy.
Would have mentioned jhipster but that's a bit much. Spring boot plus angular... That's programming Nirvana
Had to Google this but 'Bael' is another word for demon. They literally called their site 'demon shit'. I've been learning from them for years and never knew that.
The moon on a stick. From a quick look, you're expected to know &lt;breathe&gt; * Java SE * Spring * JPA * Webservices * Frontend (Html/Css) * React / Angular * Reative programming * Functional Programming (Scala) * Scripting (Bash etc...) * Testing * Devops (AWS, Azure) * Docker * NoSql * SQL * Mind reading
It was/is heavily used in corporate environments. That is where it shines. It is great for deploying internal and B2B apps.
Commendations on people at Oracle who elevated the stature of Java with the enhancements over the years, but Larry Ellison is still a dick.
I have used it successfully for 10+ yrs. Works great and trouble free. Just need a code signing cert and you can get those quite cheap these days.
I only had issues trying to use other people deployment... They were probably not done properly but the experience was always shit.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Don’t burden your app with hibernate. Use a JDBC helper library. The accepted answer on this SO post lists several options: https://stackoverflow.com/questions/7137929/lightweight-jdbc-helper-library-alternative-to-apache-commons-dbutils
I am not the one to argue with the well-informed scholars of Reddit, but I am hard-pressed to find founders of Silicon Valley companies of similar size that are lesser dicks.
I’m tired of people spreading the misinformation that Oracle has either withdrawn from Java or closed source it or whatever. You read a crazy new misinterpretation every week. The new situation around Java is better than it was before I think. Having a clear and separate-from-Oracle OpenJDK with many major stakeholders is an advantage. Glad that this post calls that out.
Actually it’s just a name of a character in a video game or something: https://www.quora.com/From-what-language-does-the-word-baeldung-come-from
Thanks, I'll check it out! I'm still trying to find setup the whole architecture (MVC)
You have 3 options: [1] pay money to oracle. [2] Use adoptopenJDK 8 as a thing to redistribute to clients. Use tools like exe4j to attempt to make a nicely packaged up '.exe' variant for your users. [3] Embrace JDK11 and use openjdk11's jlink tool to produce redistributables. Whilst jdk11 is LTS, oracle's openjdk11 is already end-of-lifed (oracle's openjdk distro doesn't 'do' LTS releases at all), there is adoptopenjdk's distribution which is supported for a good while forward. I have no personal experience with jlink.
billions and billions of devices...
Yes, this has definitely been one huge communication blunder. And to some extent still it, considering the number of licensing questions coming up on /r/java. But I do really hope we can soon put discussions about the new release schedule and licensing issues behind us.
Java..... finds a way!
I still love it
The main issue is that Oracle (as well as any OpenJDK suborganization) has failed to make it clear how developers should proceed in an unbiased manner. Generally speaking, developers now have 10 different options that are all effectively the same thing and the 1 option they were used to now is no longer free. Since they're all essentially the same, we now have to each do research into which one we should use for something that will provide us no new benefits over what we're used to. So I can choose 1 of 10+ different OpenJDK distributions, but how do I know it will be supported long term and patched quickly. How do I know that my distribution will be the same as everyone else's distribution down the road and won't cause me to rewrite code on my end. I get it. I've done a lot of that research, I can now choose which version I'm using, who distributes it, whether I want one using LTS in their cadence, free security updates, etc... and they should all be effectively the same unless I pick one that specifically includes additional libraries. But this isn't a choice I was asking for. Its like going to a car dealership and getting presented with 17 different transmission options on a commuter car. Y'all are the ones designing it and knowing the ins and outs of the matter. Y'all make the informed decision. I will trust you to do it right. Now let me go back to making my business run.
/r/Java is for discussing Java, rather than asking for help. Javascript was invented by Netscape and was originally called ECMA script. It had/has nothing to do with Java, a full featured OO programming language. The syntax is *similar* so Netscape thought they would ride the buzz of the then hot new Java language.
Oracle didn't leave Java, they just outsourced manufacturing for higher profiits. Open sourcing is a smart move, you get free labor but still sell the product.
Should of not said Java Script, I mean simply Java
Same deal, you want /r/javahelp not /r/java Many web hosts don't offer Java or charge more for it. Get together with your team 1. Decide on the technology you will use 2. Make a list of requirements 3. Design the site as much possible ( measure twice, cut once ) 4. Make decisions about costs and find a host.
C++ references are not manipulatable via pointer arithmetic.
The solution has been in use since 2004. The software can be categorized as OLAP/PLIM (Multitier client-server with web/mobile) but it handles a much wider range of tasks. Web/Mobile part uses mostly JSON but the vastly more complex client-server RMI is handled by aforementioned impl. &amp;#x200B; It is both fast and extremely effective. Custom serialization optimized down to the bone. Besides, using RMI is much more complicated (at least it was in the time I designed the solution) and the time and money saved with my solution is way bigger than any possible drawback caused by someones ability to understand well written code that performs a clear and defined function. &amp;#x200B; When I started with the 'project' a friend of mine suggested CORBA. Totally overblown and antiquated solution even back then. At least RMI made sense... &amp;#x200B; Almost everything about our product is unorthodox, so I get that 'your solution won't work', a lot if I try to explain some of my design decisions. I understand your concern, but you don't get to challenge bigger (and global) players with a team of just few coders if you are doing the same shit they are.
There are only few frameworks for scientific plotting in Java and I have not seen a single one that can plot contour/iso lines or bands prperly. Also quiver (vector field) plots are seldomly realisable in these frameworks. So here's mine https://github.com/hageldave/JPlotter Its still at the beginning but I think for ~5 weeks of work, quite usable.
What is the point of putting 25% of his comment in a strikethrough?
Laughs in Carl Sagan
If they really are "all effectively the same thing", you don't need to do any research. Just pick one at random, and if you discover later that your choice was suboptimal, it should be easy to pick a different one and use it as a drop-in replacement.
The point that I'm trying to make is that this is an opinion piece, and these types of articles steer new devs in the wrong direction. Stop referring to things as "the best", "most important", "what every dev needs to know" click bait articles.
Looks great!
That's easy to do if you're working alone or on a very small team. If you're part of a midsize company, you want as much consistency between your projects as possible. This turns into someone doing some research, picking a distribution for the entire organization, selling the organization on that version, making the change on all of your projects and then hoping that the organization providing your distribution doesn't let you down forcing you to redo everything above plus make decisions on how to handle your applications deployed onto servers maintained by customer's IT departments. I have no qualms about saying my company has some internal devops issues, but shit like this is a pain in the ass.
And if you miss Vim, [there's a plugin for that](https://www.jetbrains.com/help/idea/using-product-as-the-vim-editor.html).
I love how this headline can be read in two ways: * Java continues to evolve, whether you love or hate Java. * Java continues to evolve, whether you love or hate the direction that Java is going.
It looks like in your [submission](https://www.reddit.com/r/java/comments/bz00gh/java_helloworld/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
We have an app, used by thousands of non-corporative users, for signing pdf files, that uses java web start. It is an interstitial (jsp -&gt; JNLP -&gt; jsp ) html wizard. Seems a little cumbersome, but it is a nice compromise, given that the alternative is to use a dektop app, upload the signature and back to web app. Overall it works pretty well, with automatic update of jars and a good UX, considering the circumstances.
&gt; and the 1 option they were used to now is no longer free This is a bit inaccurate, because prior to the recent complete open-sourcing of the JDK, the Oracle JDK wasn't really free. It contained both free and commercial features. &gt; this isn't a choice I was asking for. You were, at least indirectly. People were asking for the JDK to be completely open sourced and for a faster release cadence. This means that the way in which OpenJDK is funded had to be changed. Once the JDK is fully open sourced and the recommended deployment option is of a bundled custom runtime (made with jlink), prior funding options were no longer relevant (like the much-hated search toolbar or reliance on the JDK's field-of-use restrictions, both are gone now that Oracle freed the entire JDK). I think that at least part of the confusion has to do with the impact of the new release cadence and that the various commercial LTS, at least in part, benefit from that confusion. The new feature versions are roughly as disruptive as the old "limited update" releases, like 8u20 or 7u4, which, similarly, were only supported for 6 months; perhaps a little more but probably not by much. I do, however, agree that we at Oracle could have done a better job communicating the meaning of the new releases, but with such a large ecosystem, and everyone chiming in whether they are giving an informed judgment or one based on a misunderstanding and fear -- that task is quite hard.
Azul has been putting out a bunch of marketing blog posts disguised as community benevolence FYIs. The are making the situation worse.
IntelliJ ultimate provides pycharm as a plugin. There is no difference in functionality. The only difference is how projects are setup (pycharm project management is aimed specifically at python)
Thanks for pointing this out. Reflection should be used sparingly, and preferably in low level, predictable code, that doesn't change according to business requirements.
I don't see the point of the use case driven design. `api.route("/", request -&gt; { .. }` Is simpler and easier to follow and doesn't break IDE navigation. Let the path describe the "use case". I don't see the relevance of the term - it's just mapping calls to another class? I'd rather see some interface or annotation processing, if need be some de-serialization under the hood. There are thousands of REST frameworks out there. The use case API looks cumbersome as well. Sorry to come across negatively, maybe it just doesn't fit my use case. I'm using vert.x, jax-rs and a framework I've built on top of vert.x which separates the transport from the API.
Still no value types, still no Valhalla. They should bite that bitter apple for the Java 1.5 release when they decided it was time to introduce generics. They took the easier route instead and now it seems that type erasure is written in stone for all ages and we will never get value types.
What?
I think you're comparing apples and oranges here mate, namely the concept of fibers/coroutines with their particular implementation in a concrete language and JVM. Of course you can implement fibers on top of coroutines in Kotlin right now and of course those require suspend functions for parkable code. But that's a limitation imposed by the JVM which doesn't support continuations or the necessary stack unwinding mechanisms to implement them. Thus Kotlin is forced to do this on the compiler level and that obviously only works for code that's compiled by the Kotlin compiler - thus distinguishing the two is necessary - thus suspend functions. If you allow changes to the JVM and JDK like you allow project loom to make: sure you can make Kotlins coroutines interoperable with existing code. Loom can only provide interoperability with existing code because of such deep changes, e.g. adding stack unwinding primitives to the JVM and changing Thread::sleep to park a running fiber instead of blocking its thread. It could just as easily suspend a coroutine. So saying fibers with interop with existing code are impossible to implement with Kotlin coroutines is true if you assume today's JVM - but then so are Loom fibers. And its entirely possible with a potential future JVM that Loom requires because that basically turns every function into a suspend one, thus making the coloring meaningless.
Hi, b0zho, I'm sorry if my comments sounded antagonistic. I didn't know that you were the one that wrote the article. I thought it was merely a copy pasta, and as much as I find your article well written, maybe you should change the title? You make valid points in your write up, however the title is very misleading. Perhaps change it to something like, "Why it's important to know reflection."?
Dependency injection existed long before Guice and the rest of its cousins. It simply describes passing in dependencies to an object, rather than constructing them inside the object itself. Honestly I’m surprised it’s even considered a “technique”, it’s just a logical consequence of separation of concerns.
Oracle funds &gt;90% of OpenJDK, and other companies get to sell the product, too.
The problem with this is that you are ultimately going to run into the same problems that you always run into when using global static initialization - it becomes very difficult to trace the actual dependencies between objects. You will almost definitely end up with circular dependencies. You won’t find out about these until runtime because your dependencies aren’t actually checked until runtime. Compile-time errors are useful, run-time errors mean you lost the game.
Then you and up with morons who revert commits with compromised credentials rather than revoke them immediately, or solve twice as many conflicts as they should.
IMHO, Oracle's biggest mistake was killing Swing and Abandoning FX. About the only thing lacking from Swing was support for multitouch operations. Solid foundation, solid everything and the looks are still easily updated. Ou Swing based client app looks and feels as modern (if not more) than anything out there. We've had 4k support years ago and I finally found the time to finalize our dark theme option that also was started years ago. Totally dynamic layout system that could utilize all available screen estate since 2004 thanks to JGoodies Looks &amp; Forms. Full DPI aware. I had high hopes for JavaFX. A modern UI framework with everything one could hope for. Err, no. Half baked, not as MVC oriented as Swing, but still it was new and it would be the next big thing. Dropped by Oracle, after I already had implemented new features with FX. Damn. &amp;#x200B; So that's two UI frameworks killed by Oracle. Everything else has been good and still seems to be continuing along a pretty good trajectory. But Java needs and deserves a future proof UI library.
&gt;MutableI Agreed if you've already loaded it; wish this was built into java. I use AtomicReference or AtomicLong to avoid 3p dependencies.. But if you look at all the java stream stuff, the sun/oracle guys just use int\[\] and long\[\] to pass mutable values back and forth.. The Jit optimizes it out - and avoids namespace pollution. (also, typo substantiate == instantiate) &amp;#x200B; In general, I hate pass-by-reference (modify caller stack) because it's too surprising when doing code-review, static-code analysis. Prefer python, and friends tuple-return and deconstructing. Let the right be the ins, and the left be the outs.
well that's sad, sometimes investing a bit to learn how to use a reflection based framework can help you massively increase productivity. There's no magic in it, it's there if you read the documentation, just as how it's there when you learn how to use if's and else's and how the stack works etc. You wouldn't be able to write code without that, but when you do you can. Same goes with libraries and frameworks etc., sometimes reflection is used and you do that to get rid of what otherwise would take too much boilerplate code. Making hadouken functions doesn't make `if`'s bad. Why would reflection be considered bad? Not to mention it is sometimes irreplaceable, it's not like goto's
Despite the quick popularity of Kotlin for Android and I still use Java for it. Java code is easier to read, easier to express your intention and is much more structured that is more important than being able to avoid null-checks or being able to make smarter loops or being able to write shorter and faster code. I have tried to work in a Kotlin project with 3 different people and it was a hot mess of funky code features and styles, because Kotlin as a language allows it. Further more you gain more career opportunities by using Java than Kotlin if you later on want to work as backend, embedded/Iot or desktop software developer.
Complex features like Valhalla take time. It involves deep changes to the language *and* the VM. We will be getting inline (value) types, as well as generics over inline (value) types and primitives. Just be patient. If you would like to follow the discussions, you can subscribe to the [valhalla-spec-observers](http://mail.openjdk.java.net/mailman/listinfo/valhalla-spec-observers) mailing list.
Ah I get you!
Ah I get you!
Ah I get you!
By the way, there's a [long discussion forming](https://www.reddit.com/r/programming/comments/byuoel/linus_torvalds_thinks_java_is_a_horrible_language/) in the general topic of r/programming related to Linus Torvalds' criticism of Java.
looks beautiful - java is definitely in need of this type of functionality. esp with jshell, the terrible plotting tools are an achille's heel for the jvm
It would be great if you could briefly explain here how the statement in your blog "building the world’s first JVM-compliant Blockchain virtual machine" relates to these projects which I have been working with for a while \[pantheon\]([https://github.com/PegaSysEng/pantheon](https://github.com/PegaSysEng/pantheon)) and \[EthereumJ\]([https://github.com/ethereum/ethereumj](https://github.com/ethereum/ethereumj)). &amp;#x200B; Reason being I believe they have implemented the VM in java. \[EthereumJ VM\]([https://github.com/ethereum/ethereumj/tree/develop/ethereumj-core/src/main/java/org/ethereum/vm](https://github.com/ethereum/ethereumj/tree/develop/ethereumj-core/src/main/java/org/ethereum/vm)). \[pantheon VM\]([https://github.com/PegaSysEng/pantheon/tree/master/ethereum/core/src/main/java/tech/pegasys/pantheon/ethereum/vm](https://github.com/PegaSysEng/pantheon/tree/master/ethereum/core/src/main/java/tech/pegasys/pantheon/ethereum/vm))
&gt;This turns into someone doing some research, picking a distribution for the entire organization That implies that Java is not *intended* for smaller projects and/or teams. If that's the case, then Oracle should state so, so that smaller teams/projects can pick a different tool that's "small-friendly", such as Python, instead of doing tedious "product research" on Java's sub-releases. &gt;Just pick one at random, and if you discover later that your choice was suboptimal, it should be easy to pick a different one and use it as a drop-in replacement. \[parent quote\] That sounds messy because changing from one distribution to another may take away multiple features that you need, or require spending money for features you don't need just to get the one feature you do. When it's not clear, one risks falling into a "fee trap". Some claim this is an intentional marketing gimmick, but I'll apply Hanlon's Razor here for now, as a courtesy. Clarity is a good thing.
Who said Oracle killed Swing? It still ships with the JDK. As Mark Reinhold says [here](https://youtu.be/YR7ulGzerMQ?t=2836) Swing is a mature technology at this point, and is unlikely to get a massive amount of updates. JavaFX also hasn't been killed either.
Really, learn something wildly different. Write some low level code in pure C. Look at different paradigms, maybe learn a bit of Haskell or elixir. If that's too much and you want to stay comfortable within JVM, just look at Scala and Akka.
Looks like you’re confusing Ethereum EVM smart contracting language (Solidity) with languages of Ethereum protocol implementations (Go, Rust, Java, Ruby, etc...) https://i.imgur.com/tCeazuc.jpg EthereumJ is just a Java implementation of the Ethereum client, but for smart contracts to be executed on Ethereum EVM, they need to be written in Solidity. Aion AVM is built from the ground up to let you write &amp; execute smart contracts in Java end to end.
Oracle very much did this intentionally, in order to scare the risk-averse into paying them a bunch of money for something they used to get for free.
Swing was fucking torture; it badly needed to die.
Kotlin is better! *runs away mockingly* Seriously after trying Kotlin I will never go back to Java