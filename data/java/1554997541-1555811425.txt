Man ! i'm still getting the extra hour :( Thanks for your help, i appreciate it.
Do you have any idea what's the issue ?
Pop (and Push) considerably predate java
&gt; As I pointed out, the API used to be stable between releases, which was years. Now there can be breaking API changes every six months. You made bad faith attempts to dismiss that fact. It's right there for everyone to read. I dismissed it because the question was misleading. The only breaking API changes ever made were to methods that virtually no one used. If you can point out to an API change that has actually broken someone's app, I could respond. &gt; Zero interest in technology or its users, and only interest in making money. Well, as Oracle has turned me into a billionaire, I am no longer really interested in making more money, but am interested in technology. But when you ask questions like why is 1 + 1 = 3, and I say that it isn't, and you respond that I'm not answering your question as to the *why*, I don't know what else I can do. &gt; Answer me this: Why would Oracle purposefully stop pushing upstream their bug fixes to older versions of OpenJDK? Because you care so much about open source? It's hard for me to answer a why question to an incorrect fact. Oracle has not *stopped* pushing bug fixes to old feature releases -- it never has. Oracle didn't push changes to 7u2 or 8u20 when 7u4 or 8u40 came out, and those are the closest things to today's fearture releases. It used to backport releases to old *major* versions, but major versions *no longer exist*. If someone wants to know why Oracle isn't backporting to old feature releases that correspond to the versions for which it offers a paid LTS service, then the reason is twofold: 1. We want to encourage people to use the new gradual, cheaper process of feature releases, rather than the new non-gradual process (which is *not* the same as the old process). 2. Oracle must somehow fund the development of OpenJDK and the hundreds of full-time OpenJDK developers it employs. Every company that produces an open source project of this magnitude creates a income channel that funds it. This is true for Chromium, .NET, Android, Swift, and OpenJDK. As previous income channels, some from the Sun days (field-of-use restrictions and licensing to embedded/mobile and the annoying toolbar) no longer exist, and because Oracle doesn't control an ecosystem that generates indirect revenue for Java through ads, app stores and runtimes, like some of the other examples I listed, this was found to be a reasonable income channel. It generates income from companies that prefer a very non-gradual update process, and those are usually very large, rich companies, while keeping the preferred easier update process free. Nevertheless, all fixes to the current mainline are open, and anyone in the OpenJDK community can backport them if they like.
I want to write code that I can verify at compile time is correct. All of the things I mention above are cases I have run into while writing real code. In most cases it means I have to replace a compile time check with a runtime check (i.e a cast) and this makes my code worse. As a quick example try writing Optional.orElse without contravariant type bounds on the method type parameter - you can’t do it in a sensible way without a cast.
It looks like the underlying FFT implementation wasn’t written by OP, so the algorithm implementation might be better than you expect. I believe FFT is a noisier algorithm than others, but with OP’s use case, a little noise might not be too bad. The wrapper, however, is very specific to audio files. Further abstraction possibilities aren’t very great for it.
I have a few criticisms. Most have to do with the fact that the library is not suitable for precise work. * The output of FFT should be just the Complex object, not processed values such as dB. Post-processing is something you can provide, but you shouldn't assume that this is all someone wants out of a FFT. This limits the utility of the library. * SampleWindowExtractor appears to recompute the window function each time. It should definitely cache it, instead. This would save a little bit of performance and in general makes more sense. * SampleWindowExtractor loses precision in using int\[\] as the fundamental datatype. You should only read the samples from int\[\] and then immediately use double and double\[\] everywhere else. For instance, the stereo averaging to mono introduces noise due to loss of bits, which is detectable with FFT. Also, it is another policy decision this library is making for user: what if the user wants each channel's FFT separately? * InPlaceFFT appears to recompute the transcendental functions each time, despite these are same in every iteration. While it is not necessarily true that precalculating them to e.g. an array will be a win, it is probable that it is because transcendentals are painfully slow to compute. However, this kind of thing needs benchmarking to prove that it is actually effective. * Java is likely able to elide most of the object allocation that happens in InPlaceFFT, so all that "new Complex()" stuff probably compiles to good code. Should be verified somehow, though. * The -100 dB floor assumed in logarithmic scaling is in practice sufficient for most use cases, largely because the library is hardcoded to assume 16 bit audio. However, it would be better if it also worked for 24 bit audio. Additionally, some audio may have been prepared with noise shaped dithering, which can lower the noise floor at selected bands to less then -96 dB, e.g. something like -120 dB can be reached with aggressive noise shaping. The cost is that noise floor is higher elsewhere, though the noise is usually around the ultrasonic band. My point is that it would be better to set the floor lower, to say -144 dB, or leave all such processing to end user. I am obviously just splitting hairs here, though.
Usually, aiming at invariant is the way to go, if you want all the possible state to be as low as possible.
Mariadb. What's pb?
Just trying to figure what’s annoying you, there a few options that are good beside jdbi, and understanding where you frustration came from might help recommending one or the other
It's getting started. I'm not familiar with Maven, Spring or Java. I would like to get better at it.
Umm. Sorry in advance if I am wrong but I think the upper bound (? extends T) is allowed and not the lower bound (? super T). Anyhow forget the terminology, the "? super T" is now allowed because it does not make sense to have a method taking above a type. For example, `void print(? super CharSequence param)` does not make sense because there is no useful information about the param for you. This basically said that param can be CharSequence and its super which include Object so everything can be given in as everything extends Object. It can be an object which you have to cast it down to make use of it anyway. &amp;#x200B; `void` is more complicated but even in Scala, Unit extends every class not the other way around. &amp;#x200B; I do agree to a point that Java type system is far from perfect but I think it is more of an "initially short-sight and then forced to ensure backward compatibility" rather than "They have no idea what they are doing". &amp;#x200B; Just my 2cents.
I'd love to see the generated assembly, to see where the remaining optimization opportunities still are.
Each one of those points has practical implications. For example, that intersection types are allowed on method type parameters [lets you enforce static guarantees that can be quite helpful in a flexible and modular way](http://iteratrlearning.com/java/generics/2016/05/12/intersection-types-java-generics.html). Unfortunately, that returning intersection types isn't supported prevents you from providing similar static/compile-time guarantees about what the return value of a method satisfies. There's also the general engineering principle that exceptions and corner cases should generally be ground down (if possible and practical) to avoid bugs and weird gotchyas. But that's more for the language designer's benefit, so with us it's mainly about not being able to do useful things in certain contexts for no clear reason.
No. It's about the sound the plastic cap makes when you pop it off.
Thank you for taking the time to take such a close look at the library and provide so much feedback! * It's true that the raw output of an FFT operation is a sequence of complex values. I have intentionally narrowed the functionality of the library by converting these complex numbers to their modulus value. I agree that it limits the utility of the library for certain use cases, but simplifies the output significantly. Simple output was a high priority. * Good catch, SampleWindowExtractor is doing a lot of unnecessary work! I'm surprised I missed that, it's a very obvious optimization, thanks for pointing this out. * I've considered separate channel FFTs as a future feature, and I like your suggestion of how to implement it. I might add this. * That's a good potential optimization to make. * I'll take another look at the Complex object creation and see if there's any excessive allocation. * For some reason I was having trouble getting Java to read 24-bit audio files. Normalizing the audio data is an option but it's already normalized to a fixed 16-bit range because 8-bit audio streams are converted to the 16-bit format before processing. * I admittedly set the dB floor pretty arbitrarily. It would make sense to set it lower to prevent any loss of information. I understand why you wouldn't use the library, it does have a pretty narrow focus and prioritizes simplicity over scientific accuracy and flexibility. You're correct that I built it with audio frequency spectrums in mind (not just to draw but also to process the data). I was hoping that this library could be useful in many general situations, but after reading your thoughts it definitely has some shortcomings that limits it to relatively basic use. However, I still think it can have a lot of utility for someone who doesn't have signal processing experience but needs an easy Fourier transform. &amp;#x200B; Thanks so much again for your thoughts, I certainly have a few changes to make!
I certainly don't have anywhere near the signal processing knowledge as the author(s) of JTransforms. I wrote this library to solve a problem I had and provide a layer of abstraction. For more general use cases outside of computing the FFT for an audio file, the JTransforms library isthe way to go. As TheHoratian mentioned, I didn't write the FFT implementation, I instead wanted to provide a sort of "wrapper" for it to hide implementation details that require knowledge of signal processing concepts.
Correct, this library is basically a wrapper for the Fourier transform algorithm. Since I'm aiming for a high level of abstraction, so the input to QuiFFT is a reference to an audio file rather than pure time-domain sampled data, as JTransforms or Apache Commons Math would use.
Ignore the non-constructive criticism - nice work solving a problem you had.
Switch to using `java.time`. It's fairly easy to switch back and forth beteeen the APIs and it's very hard to do the wrong thing in the new API.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
I’m referring to a method like: class Optional&lt;T&gt; { public &lt;S super T&gt; S orElse(Supplier&lt;S&gt; alternateSupplier) {} } This comes up more often than you might think now that we have first class functions. You are correct that I got my upper and lower backwards. As for void - I have not heard any cogent argument as to why void shouldn’t be covariant to every type. That is if I have a method that returns void, it should be perfectly fine to override that method with a method that returns any type. Maybe there are implementation issues, but there’s not a correctness issue.
You can with these command line options: `-XX:+UnlockDiagnosticVMOptions -XX:+PrintAssembly`
First of all confirm that you are running exactly the same Java version as they are. Then ask if there are any initialization parameters they use to run the application such as -Xmx and use the same parameters.
Hmm yeah, but: `List&lt;? extends Joe&gt; joes = new ArrayList&lt;? extends Joe&gt;();` gives a compilation error `required: class or interface without bounds`. So I'm wondering why use of `&lt;&gt;` is allowed.
You can control heap size of a jvm: java -Xmx1024m &lt;filename.jar&gt;. You can also instruct jvm to dump the heap when OutOfMemoryError happens: -XX:+HeapDumpOnOutOfMemoryError and inspect the dump for memory leaks and find which are the issues.
That seems to have improved it. A bit early to say so but i'm optimistic that this solved the issue. Why is it that my machine defaults to such a small heap size while others do not?
I'm pretty sure he knows that, but was asking for the assembly so that he wouldn't need to repeat the benchmarks. The author published the assembly output for one of the benchmarks [here](https://github.com/ionutbalosin/jvm-jit-compiler-benchmarks-reports/blob/master/19_04_report/hotspotvm_graal_jit/MethodArgsBusterBenchmark_asm.out).
I see what you mean. Thanks for the link!
Wildcards are used for matching. They do not make sense when instantiating, you have to specify an actual type and "? extends Joe" is not a type.
Right but the `&lt;&gt;` operator is used for inferring type when instantiating. So I'm wondering why it can be used when type contains a wildcard. Maybe I'm really misunderstanding how the diamond operator works.
Thanks, will do
Heap params are set during java initialisation and it can be different for every .jar you run based on config. Xmx or Xmn or Xms defaults will be machine dependent. Generally everyone sets it based on the requirement.
This can also be caused by different IDE settings, different versions of server if you’re running locally in something like Tomcat, etc.
use \`ZonedDateTime\` instead of Calendar, it's a lot simplier to use.
Looks neat. I've always been intimidated by FFT. Have you considered a JavaFX (or similar?) app to play music and let people tinker with the FFT output? Hopefully people will use it and post some sample apps. Good job.
The QuiFFT repo actually links to a separate examples repository where I've written a program that plays a song and shows a synchronized frequency spectrum (with JavaFX) as it plays. I'd encourage you to try it out if that sounds interesting to you! You can use any MP3 file with it.
Nice! Exactly what I was looking for. I should have RTFR. (Read the F'n read-me) git clone https://github.com/mileshenrichs/quifft-examples/ Hey, not to nitpick, but on the green spectrum analyzer chart, what is the blob of green on the far right side? &gt;10khz noise or ??
The attached photo 😂
You can configure these parameters for your operating system as well, so you don't have to call it each time. How that works depends on your system obviously.
I didn't see any heap size options in the basic java options, where can I examine it?
Do they predate Pringles though, that's the real question.
if in IDE ， &amp;#x200B; if you can not solve your problem, you need to know which java objects occupy the all heap memory, it is recommended that you use jprofile to debug
Did you mean to post a C# article to /r/java?
it is EF Core, I thought it might be also interessant for Java developers, but if no one like it I will remove it.
Then maybe ask your questions instead of mentioning them in the post without asking them at all?
r/java isn't a questions sub.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
(Even without individual bias and with 100% participation (all developers of the world taking the survey objectively) you could have an average where more ppl are above it than below.) &amp;#x200B; Does someone know why java (and related frameworks) is so underrated on these stackoverflow surveys?
It's not the "hot" or "cool" thing. newbie devs have some hate for java because it's older and more verbose. that being said, it's still the entrenched power in the enterprise world.
Keep making your own projects. Decide you want to do something, then build it. You'll run into problems that won't be detailed directly in any book, and by learning how to solve them you'll get much better. &amp;#x200B; In the long run, you'll want to learn Spring/Hibernate and start making server apps that expose APIs. That's one of the biggest areas for Java. You don't see much in the way of professional JavaFX projects these days, as Java is mostly a server-side language and isn't used a ton for building UIs. So I really wouldn't waste a ton of time on JavaFX.
r/java rule #1: /r/Java is for News, Technical discussions, research papers and assorted things of interest related to the **Java programming language.**
Did you ask because you had different advice to give depending on the answer? If so, why not go ahead and give it in the form of: * if A, then X * if B, then Y * if C, then Z
Well, you could argue that kotlin is in fact "related to the java programming language"... :D
I don't want to have to subscribe to r/kotlin to read this.
You don't want to subscribe to kotlin to read about kotlin? Logical /s
Why should somedody prefer Kotlin over Java 12?
Because it can do everything java can in a simpler mannet, and also many things it can't
Nope I was just curious. Why do YOU ask ? Do you have x,y or z reaction based on my reasons for asking ?
I was just looking for advice on something new to try.
This is not a useful answer for anyone interested in the language.
As Clojure, Groovy and Scala. So... r/jvm.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Okay, show me the Kotlin version of this: public static int getInt(byte[] buffer, int i, int len) { boolean negative = (buffer[i] &amp; 0b1000000) != 0; int shiftAmount = 0; int val = 0; switch (len) { /* cases 4 through 1 fall through */ case 4: val = buffer[i+3] &amp; 0xFF; shiftAmount = Byte.SIZE; case 3: val |= (buffer[i+2] &amp; 0xFF) &lt;&lt; shiftAmount; shiftAmount += Byte.SIZE; case 2: val |= (buffer[i+1] &amp; 0xFF) &lt;&lt; shiftAmount; shiftAmount += Byte.SIZE; case 1: val |= (buffer[i] &amp; 0xFF) &lt;&lt; shiftAmount; case 0: break; default: throw new IllegalArgumentException("len out of range: " + len); } if(negative) { // sign extend switch (len) { case 0: val |= 0xFF; case 1: val |= 0xFF &lt;&lt; 8; case 2: val |= 0xFF &lt;&lt; 16; case 3: val |= 0xFF &lt;&lt; 24; } } return val; }
Mac OS
Linux
Windows
Programming MacOS, but any deliverables run inside Linux containers. Write once, run anywhere works nicely, with so many environments supported, but who would have thought there would only be one environment one day: JVM inside Linux containers.
Linux. Mint at home. CentOS and RHEL at work.
Linux
What is a "Linux Container" and why would you need one with MacOS is Unix?
This.
Fedora Linux.
Why not. You can always open the wonderful kotlin vs java differences page on kotlin site.
Windows, so I must not be a real programmer
Now telling them to go to that website is at least semi useful, but just "kotlin &gt; java" doesn't really tell anyone anything.
Linux/macOS.
Kotlin fixes a lot of Java's design problems - types are by default non-nullable, variable references are by default immutable (great for reasoning about the code and also e.g. concurrency). Kotlin code is null-safe. NPE can happen only when interacting with Java code. Typical Java code will be shorter and clearer in Kotlin - e.g. typical example of Java POJOs which spans multiple tens of lines can be done in Kotlin in less than 10 lines. Shorter code is usually easier to read. Kotlin has coroutines which (similarly to async/await) make asynchronous programming sane. I guess there are more examples, but this would be a start ...
Develop on MacOS, deploy on CentOS
Doesn’t really matter really...
**Removed** as both irrelevant and a *survey* which is strictly against the rules here.
With the caveat that I don't think any tool is the right tool for 100% of jobs, and that I still write Java code regularly, here are some things I like about Kotlin in my day-to-day work. * The obvious big one: Nullability is handled as part of the type system. If you're writing pure Kotlin code, you have to bend over backwards to get a `null` in a place your code doesn't expect it. (Getting a null where it's not allowed is still possible to do, e.g., using deserialization. But in the vast majority of code, "I declared this as a non-nullable type, so therefore it can never be null" is a correct statement.) * Extension functions make it cleaner to provide convenient APIs on top of existing classes, even ones you don't control. They are just syntactic sugar for static methods, of course, but they're a big readability win for me. For example, Kotlin's standard library provides extensions to the Java collections classes to do stream-like operations without requiring the `.stream()`/`.collect()` dance you have to do in Java. * Kotlin's coroutines are, in my mind, the best design of async/parallel operations in any mainstream language. They crack the tough nut of error propagation in concurrent code in a really elegant way. In Java, it's kind of nightmarish to spawn a thread that throws an exception and have that exception bubble up to the code that spawned the thread; in Kotlin it's taken care of more or less automatically, though you still have plenty of control over exactly how it's handled. * You can define DSLs with strong type safety in Kotlin pretty easily. See, for example, the Gradle Kotlin DSL. The closest you can get in Java is fluent APIs like jOOQ, which end up being very complex under the hood. Now, like I said, I still use Java often. I'm not here to bash Java at all. But hopefully that helps answer the question.
Perhaps /r/logic would be relevant?
&gt;typical example of Java POJOs which spans multiple tens of lines can be done in Kotlin in less than 10 lines. Shorter code is usually easier to read. Java 12 has records: `record Point(double x, double y);` Coroutines are not the only way to make asynchronous programming sane, and [there is a Java Implementation of coroutines](https://github.com/esoco/coroutines). There isn't enough functional programming in Kotlin. You can find a lot more functional programming in Clojure, Scala and Eta language.
Have you ever used Docker? I can really recommend learning all you can about it. Pretty much all production code I’ve written since switching to Java, about 120 years ago, has been server side. That used to be AIX, OS/400, Solaris, Linux, even windows. Now it’s Linux containers, and I don’t think this will change again.
Nothing regarding Kotlin or Java per se, but I always wondered: how do you handle API resource through endpoint where null indicates that this particular field should be ignored/not updated/not patched while non-null field/empty collection is already a value itself. For example: Image an ice cream vendor who has preconfigured ice creams. For example: { "id" : 1 "name": "vanilla", "topings": ["toping1", "toping2"] } Now, he sees that he made a mistake in name for example, and he meant "chocolate" not "vanilla". He wants to update that particular field without updating toppings. So simply: { "id" : 1 "name": "chocolate", "topings": null } If, he would pass an empty collection, that, by itself indicates that he wants to remove topings and override with empty collection. So how does one solve this issue when nullability is restricted? **Just a question, no hidden agenda.**
Didn't records get delayed to a later Java version? I thought they were originally planned for JDK 12 but didn't make it. https://openjdk.java.net/projects/jdk/12/
Why would you include the toppings field in the update if you aren't updating that field?
It'd depend on the application, but I'd probably do something like have the "update a record" API accept an ID (to identify the record to update) and then a partial list of fields with just the ones that need to be modified, like { "id": 1, "name": "chocolate" } Any fields not included in the update request would be left alone. Does that make sense? Like you pointed out, this isn't really a language-specific thing, more of an API design question.
For example when you're PATCHing a resource. Making partial changes to an existing resource
So if you aren't wanting to update toppings - why pass it in at all? In your example I would expect it to patch/update to null if that's what is passed in. I'm open to seeing a better example, but if your API makes you pass in null so it doesn't update a field - there are some design issues with it. Why not just: ``` { id: 1, name: chocolate } ```
You can omnit a field or you can pass null explicitly, "topings" will still be null. { "id" : 1 "name": "chocolate", "topings": null } vs { "id" : 1 "name": "chocolate", } Exactly the same if you have an object to which deserialization happens.
Correct. Records didn't make Java 12.
It's poor design to allow passing in fields as null if they aren't going to be updated to null by the API. The top example should be setting the toppings to null in the database/api if that's what the user is passing in. Your second example how you would update without modifying toppings.
Java 12 is already out and it does not have records. I don't think 13 will either
It seems the example does not load on Reddit. Well, that's strange.
Why is JavaEE not cool anymore? Spring isnt alot more advantegeous
You will have two classes to represent request. One with toppings and one without?
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
This should do it (maybe some off-by one errors or edge cases, didn't test it): &amp;#x200B; fun getInt(buffer: ByteArray, i: Int, len: Int): Int { if(len &lt; 0 || len &gt; 4){ throw IllegalArgumentException() } val uint = buffer .sliceArray(i until i + len) .fold(0.toUInt()) { acc, byte -&gt; (acc shl Byte.SIZE\_BITS) or (byte.toUByte().toUInt() ) } println(uint) return uint.toInt() &amp;#x200B; } Although is think ByteBuffer::getInt would be sufficient in most cases and achieve native performance.
No need for multiple classes. You could do something like public class DessertUpdateRequest { private int id; private String name; private boolean namePresent; private List&lt;Topping&gt; toppings; private boolean toppingsPresent; ... public void setToppings(List&lt;Topping&gt; value) { toppingsPresent = true; toppings = value; } } Then you can check the `present` flag for each field to see whether or not it was present in the request. It just requires that your serialization library calls setter methods rather than directly updating the underlying fields; all the JSON serialization libraries I'm aware of can call setters. This design gets a bit unwieldy if there are lots of fields; in that case you'd probably want something like an `EnumSet` to keep track of which fields were in the request.
ALGOL is also related to the Java programming language, but posts about it don't belong here unless they exist to explain the lineage of Java's design decisions.
That's awesome! Here's an example URL: [https://jitpack.io/#jitpack-io/android-jitpack-library-example](https://jitpack.io/#jitpack-io/android-jitpack-library-example) \-&gt; [https://img.shields.io/jitpack/dw/github/jitpack-io/android-jitpack-library-example.svg](https://img.shields.io/jitpack/dw/github/jitpack-io/android-jitpack-library-example.svg)
na, ByteBuffer always reads four bytes. i'm sure slice and fold and such have bad performance but they do look convenient
Glad you liked it. 😊
Thanks for the intersection types example
record types will be great, once they arrive (and once they are available in LTS release). We've been waiting for them for years (decade?) Coroutine library is just not comparable to language level support. If I have an app which is all asynchronous, then I don't want to write .first(), .then() for a thousandth time. Kotlin is not fully functional language, but I think it offers a good, pragmatic mix of features. Clojure and Scala are totally different beasts with different focus and their share of problems too.
Thank you. A valid alternative. My current approach is: public class DessertUpdateRequest { private int id; private String name; private List&lt;Topping&gt; toppings; ... public Optional&lt;List&lt;Topping&gt;&gt; getToppings() { return toppings; } } That way I can take advantage of functional Optional syntax.
 fun getInt(buffer: ByteArray, i: Int, len: Int): Int { if(len &lt; 0 || len &gt; 4){ throw IllegalArgumentException() } val negative : Boolean = (buffer[i].toInt() and 0x80) != 0 var uint = buffer .sliceArray(i until i + len) .fold(0.toUInt()) { acc, byte -&gt; (acc shl Byte.SIZE_BITS) or(byte.toUByte().toUInt() ) } if(negative) { when(len) { 1 -&gt; { uint = uint or ((0xFF shl 8).toUInt()) uint = uint or ((0xFF shl 16).toUInt()) uint = uint or ((0xFF shl 24).toUInt()) } 2 -&gt; { uint = uint or ((0xFF shl 16).toUInt()) uint = uint or ((0xFF shl 24).toUInt()) } 3 -&gt; { uint = uint or ((0xFF shl 24).toUInt()) } } } return uint.toInt() }
1) JEE is as broad as the term Enterprise Systems is. 2) People tend to say java is verbose, but what that people doesn't understand is that's the way java overall was designed \*on purpose\*, take a look at this python code: if len(string) &gt; 10: return str(string)[:10] + "...?" and it's java equivalent if (string.length() &gt; 10) { return string.substring(0, 10) + "...?"; } while it requires more keystrokes, it also provides a more natural reading for developers unfamiliar with the code and/or the language itself. If i'm new to python and read that piece of code I'll asume that len means length and str means string, and try to interpret what \[:10\] does... but with java I don't have to make any assumptions, it just says length and string. While this sounds simplistic and borderline stupid to some, keep in mind that these are english words and not every developer in the world is fluent enough in english. Requiring more typing doesn't mean the language is verbose, that depends more on the developer. typing *string.substring* is not being verbose, typing *string.cutTheStringFromThisIndexToThat* is. &amp;#x200B; Regarding web apps, the common procedure today in the enterprise is java for backend and angular/other js framework for front, is a proven formula that works in the majority of the projects. Not that java is not capable for webdev, but there's more choices of web frameworks for javascript than for java. 3) Spring is steadily taking over JEE, it's not going to replace it 100% but makes sense for oracle to loosen up a bit on it because, basically, there's no reason to keep working in something that's loosing popularity. &amp;#x200B; But Java Enterprise is a **very broad subject**, if you have questions about it please narrow them a bit so we can help.
Yeah, it's probably not the fastest thing. &amp;#x200B; \&gt; Looks like your code doesn't sign-extend negative numbers. &amp;#x200B; I think it does? println(getInt(byteArrayOf(-1,-1,-1,-1), 0, 4)) &amp;#x200B; \-&gt; 0
0.12 private static final int THREE = 0xFFFFFF &lt;&lt; 8; private static final int TWO = 0xFFFF &lt;&lt; 16; private static final int ONE = 0xFF &lt;&lt; 24; public static int getInt(byte[] buffer, int i, int len) { int shiftAmount = 0; int val = 0; byte leftmost; switch (len) { /* cases 4 through 1 fall through */ case 4: val = buffer[i+3] &amp; 0xFF; shiftAmount = Byte.SIZE; case 3: val |= (buffer[i+2] &amp; 0xFF) &lt;&lt; shiftAmount; shiftAmount += Byte.SIZE; case 2: val |= (buffer[i+1] &amp; 0xFF) &lt;&lt; shiftAmount; shiftAmount += Byte.SIZE; case 1: val |= ((leftmost = buffer[i]) &amp; 0xFF) &lt;&lt; shiftAmount; break; default: throw new IllegalArgumentException("len out of range: " + len); } if((leftmost &amp; 0b1000_0000) != 0) { // negative // sign extend switch (len) { case 1: val |= THREE; break; case 2: val |= TWO; break; case 3: val |= ONE; break; } } return val; }
try val ba : ByteArray = byteArrayOf(0xFF.toByte(), 0xFF.toByte(), 0xFF.toByte(), 3) var v : Int = v = getInt(ba, 0, 3) I get 16777215 instead of -1
&gt;Oi, ya got a loisence for them boolean database fields? Oracle
wat
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
If only there was some sort of **Open** **J**ava **D**evelopment **K**ey we could use instead!?
are you seriously comparing java to python? dude... :|
Still waiting for a reply...
Weird... That would really be something amazing... Do you think they could bundle it with the major linux distributions? If it used the GPL with classpath exception?
&gt; This Critical Patch Update contains 5 new security fixes for Oracle Java SE. All of these vulnerabilities may be remotely exploitable without authentication, i.e., may be exploited over a network without requiring user credentials. &gt; The highest CVSSv3.0 Base Score of vulnerabilities affecting Oracle Java SE is 9.0. Yikes. Get yourselves ready to update!
get rid of GIL (it means killing Python) then compare Python with Java.
/u/eatstrawRespect\--;
Stop fearmongering. Java is in a better position than it's ever been in.
ah, true
I bet it could get some large businesses to back it. Possibly a bunch of smaller ones too providing support.
faster version: inline fun getInt(buffer: ByteArray, i: Int, len: Int): Int { return when (len) { 1 -&gt; buffer[i].toUByte().toInt() 2 -&gt; buffer[i].toUByte().toInt() shl 8 or buffer[i + 1].toUByte().toInt() 3 -&gt; (buffer[i].toUByte().toInt() shl 16) or (buffer[1 + 1].toUByte().toInt() shl 8) or (buffer[i + 2].toUByte().toInt()) 4 -&gt; (buffer[i].toUByte().toInt()) shl 24 or (buffer[i + 1].toUByte().toInt() shl 16) or (buffer[i + 2].toUByte().toInt() shl 8) or (buffer[i + 3].toUByte().toInt()) else -&gt; throw IllegalArgumentException() }.let { if (buffer[i] &lt; 0 &amp;&amp; len != 4) it or (0xFFFFFFFF.toInt() shl (32 - len * 8)) else it } } const val times = Int.MAX_VALUE fun main(args : Array&lt;String&gt;) { val bytes = ByteArray(10000).map { Random().nextInt().toByte() }.toByteArray() val kotlinTime = measureTimeMillis { for (i in 0 until times){ getInt(bytes, 0, i % 4 + 1) } } val javaTime = measureTimeMillis { for (i in 0 until times){ GetInt.getInt(bytes, 0, i % 4 + 1) } } println("$kotlinTime vs $javaTime")
&gt; Oracle Java SE, versions 7u211, 8u202, 11.0.2, 12 Yay. Oracle end-of-lifes their Java for commercial use unless you're on a subscription and then discovers critical vulnerabilities...
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
I am a little confused. How can vulnerabilities in Java SE be remotely exploitable, although Java SE isn't necessarily server software? Well, the module "com.sun.net.httpserver" contains an http server, but this module is extremely rarely used. Or maybe this vulnerability is in the class "ServerSocket"?
A senior java developer is whatever the person hiring or manager decides it is. Nothing more, nothing less.
You say you're a CS professor; I hope your lectures contain more useful content than the fecal pap you've provided us with here. If you like Python, go to /r/Python and stay there.
as a senior developer with imposter syndrome I feel unqualified to answer this question
Chances are it's yet another Java applets vulnerability, i.e. nobody cares. But this will be seen later on. 9.0 may seem scary, but it probably doesn't affect most Java applications.
the path if you want to keep on the technical side of thing is usually senior -&gt; tech lead -&gt; architect -&gt; maybe cto ? now, on topics, all the things you mentioned definitely help, I'd also start focusing on team leading skills, try to mentor the juniors in the team (but don't be a dick). From this point soft skills start to get more important. Understand how to write documentation properly, and how to diagram systems (it's an art by itself), it will help with your architecting skills. Reinforce your knowledge in the areas where you don't have much experience (threading? exception handling? lambdas?) . If possible, try to get involved in things that are not part of your day to day job like architecture design and testing strategies. If you can find a tech leader or an architect to mentor you, even better. It's expected for a senior to **understand how java works**, rather than googling for stack overflow answers. Learn to work independently (but don't stall) once you reach the tech lead position, there won't be anyone to answer "what api should I use for x ? ", you will be the one providing answers. Being a senior in my opinion is the last step between being a simple coder and become a full professional, so use this stage of your career to **solidify your knowledge** on whatever thing you consider you need to.
Mostly experience in years, everyone assumes you're a god, sad reality (at least where i live)
we all suffer that )=
Nothing really, unless you want to target Android as well and don't feel like using their constrained version of Java SE. Platform languages always win.
[https://www.oracle.com/technetwork/security-advisory/cpujan2019-5072801.html#AppendixJAVA](https://www.oracle.com/technetwork/security-advisory/cpujan2019-5072801.html#AppendixJAVA) 1. This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. 2. This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator).
Thank you very much for this reply.
Good, CDI and microprofile is much more usable than spring-boot.
Bro. Imposter syndrome is real af
It's plain and simply experience, there is no one thing or group of things that'll make you senior, just more experiences. Years is a rough approximation but isn't always accurate, I've been programming for 10, 3 in industry and I consider myself a junior. &amp;#x200B; The thing with knowledge is the more you learn, the more you realise how little you actually know, this graph does a pretty good job of categorising it [https://i.pinimg.com/originals/96/9b/91/969b918cae56d5292a96a3b98b305efc.jpg](https://i.pinimg.com/originals/96/9b/91/969b918cae56d5292a96a3b98b305efc.jpg)
\&gt; I assumed that JEE was mostly for creating and serving web apps. Sure, but a huge part of it is message based with JMS. \&gt; I was always attracted to dynamically typed languages for web apps and frameworks Fair enough, but as I said above, lots of it is writing asynchronous message driven beans that respond to messages posted on a message queue. Normally by doing a bit of processing that requires looking shit up in a database and posting another message on another queue. That can literally describe most of the stuff I've written in the past 15 years. \&gt; I assumed that JEE was losing support from oracle The big problem with JEE originally is that it required a big application server and used the service locator pattern for resources, which doesn't sit well with dependency injection and modern frameworks, so yes it's lost favour. But that doesn't mean the techniques you learn for writing decent server side code aren't transferable between JEE and something more lightweight.
Hi there. Senior software architect here. I can boast 20 years of professional software architecture and programming, including hands-on and leadership positions. What matters most, is independence in your field. The ability to make and defend your decisions, and at the same time to accept other people's choices if they lead to the expected results, too. Over time you will incorporate other viewpoints and you will be able to reflect on your previous decisions: are they still good, or do they need adapting? And you will adapt if you find it necessary. Apart from that, a senior developer has the experience required to estimate how long a task is going to take, approximately, based on experience of themselves, but also on the experience of their team members. That means that you either have a decent understanding of all the steps involved in fulfilling the task, or understand your own lack of knowledge enough to add research and testing time to your estimates.
&gt; It's expected for a senior to **understand how java works**, rather than googling for stack overflow answers. Stack overflow is a time-saving tool like any other. A senior understands how java works, then uses google to find the answer faster than they can type it.
Java applets don't exist in Java 11. So can't be that.
it is, I agree, specially when you have to remember dozens of annotations or the 20 steps to write an xml file, but several times a week I find myself looking for information that no one asked before in stack overflow, or it's way outdated and no longer applies, and a "i'm late cause I didnt find the answer in SO" is not the kind of excuse you will like to hear from a senior
The vulnerability scoring 9 might not necessarily be the one affecting Java 11.
Four affecting Java SE and one Java Advanced Management Console (this is the first I've ever heard of it). Those four apply "to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8)". All in all better than expected.
Typically it's in applet-related machinery, as others pointed out - stuff that gets downloaded and automatically executed. Good thing all this is going away very soon.
Yes, of course, it's not a silver bullet just a single tool among many. The way you worded it suggests it's realistic for a senior developer not to use google, while not impossible, it'd be slow, highly impractical and unrealistic for an aspiring senior developer to be learning to do everything from memory.
Hah! That's a great way to get people talking! Have a thumbs up!
Showerthought: People who complain about Chrome memory consumption have never used Eclipse
Senior web dev here. I usually plan on getting fired during every project.
I didn't get around to writing up a reply the other day to ways I see unintentional agism in the hiring process, but this is one of them. You get "senior" in your title and suddenly a new manager is asking all kinds of crazy stuff. "Can you apply the gang of 4 principles?" "I...don't even know what those are." "But you're senior" "Yeah, that means I was doing on the job work. I wasn't spending my time taking academic classes and farting around reading blogs on the internet. I was actually working at my previous job." "(looks pissed and offended)"
&gt; They know core concepts like Type Erasure, Garbage Collection behaviour, Generics? They should know this. &gt; Know how to optimize the JVM? The modern JVM requires nearly 0 tuning. There are specific cases where you can pull and knob or lever to get better performance, but by and large the only tuning you really need to do is picking the right GC and a good heap size. I don't know that I would disqualify someone from being a senior dev if they didn't know these options. Java defaults are all really pretty good. &gt; Have used several frameworks for either client or server side technologies and can explain their benefits? Maybe, but I expect that it wouldn't be a good metric to measure "seniorness" there are so many libraries and frameworks out there with their own fan bases that I couldn't imagine how you would gauge someone as being a senior dev. For example, Would you disqualify someone for not working with Springboot or JavaEE? Probably not, there are lots of other alternatives that are passable. &gt; Knows core features of each Java version (7, 8, 11 etc.)? Nah, not even really sort of required. I'm not going to fault someone for not knowing about new NIO apis added in 8 or Optional methods added in 11. The JDK is vast, I still discover hidden nuggets added in 8 and I've been working with it for years now. &gt; However I am interested to know what you guys think makes a Senior level Java developer? The same thing that makes a Senior level developer. That is, the ability to learn, evaluate technologies, anticipate short comings of new tech, and to write clean code and a clean architecture. Being senior is much more about being bit in the ass 1 too many times by sloppy code or bad architectures. It is about seeing bad architecture patterns and realizing "This will be inflexible or will cause problems in the future". It is about anticipating current and future requirements and writing extensible code to be able to handle those in the future (without too much gold plating). Junior devs will rip through code and spit out solutions uber fast. They will also get bit in the ass over and over again with bugs and long hours refactoring their code. Some devs never learn or see the problems around them or in their code.
&gt; What matters most, is independence in your field. The ability to make and defend your decisions, and at the same time to accept other people's choices if they lead to the expected results, too. Over time you will incorporate other viewpoints and you will be able to reflect on your previous decisions: are they still good, or do they need adapting? And you will adapt if you find it necessary. I agree with you 100%, but I'm reminded of a recent reddit comment. They said someone came into to interview and the person had apparently been reading to many "take charge" books or something, and they started off saying that they (the person being interviewed) would sit at the desk and ask questions. The commenter said they just found it funny, but the hr person was so offended they called security on them. People doing interviewing tend to be super uptight over who has "control" in the interview making it effectively impossible to have a conversation where you "defend" something without someone getting offended and insisting "no hire".
I'm not a fan of Oracle either, but what's your reasoning OP?
Gang of Four principles are not the holy grail some people like to boast them to be. Over application of certain rigid standards is what made us end up with ObjectProxyBridgeAdapterFactory classes. But you should be able to debate about them, pros and cons.
Type erasure and annotations is something thay I only had to touch professionally this year, after 10 years as a Java developer. A lot of what these people call seniority can only be achieved through serendipity, or by being a consultant or working on a software house that has a wide range of projects. Don’t feel bad. Keep going.
If I'm honest, the listed examples I do expect from a Junior or even entry level. How generics work or understand and apply design patterns should even be taught in school and pretty early on. A senior has mastered these. If you don't know the core features of your jdk after a year, I'd wonder what you've been up to the last year. And also keep in mind: Time flies. JDK 11 wasn't a thing few years ago and how to optimize the JVM has changed over the years, too. If I were to set up a list, I'd put things such as "Software Design": Being able to create the best design for the problem. &amp;#x200B; Another thing to mention: Depending on the department, the company, the project, and so on, requirements differ. For instance, if you're working in a large team with a dedicated project manager, leadership skills aren't as helpful. If the backend is provided by another service provider, probably another department, you don't need to know the DBMS by heart. Basically: You can't know everything and you can't have done everything. &amp;#x200B; It's probably easier if you ask the question differently: Why do the seniors earn more money than the juniors? If you compare job descriptions of juniors and seniors of the same company, there's actually not a huge difference (well, except for the salary, I guess) - you could even end up in the same team and do more or less the same work. It's simply productivity. And probably past success. So what makes a senior more productive? Gets shit done faster and better. If we treat software development as solving problems and figure out how to solve problems it is: Knowledge and Experience (and common sense). Since we work in IT, knowledge from a few years can be simply outdated. So knowledge is probably the mastering of timeless principles, such as design patterns, but also the continuous learning. So, the more you know, the more experience you have, the more productive you are. &amp;#x200B; Now, what do I expect from the product of a senior: * The code runs, is well written, runs its tests and it can be extended easily. It's simply a pleasure to work with. To get to that point, all of your listed points help to achieve that and are either very helpful or a necessity. * Another part is, how to do implement a feature in existing code: Read and understand the code, know how it interacts with other parts. Reading code can sometimes be most of the work. &amp;#x200B; And then there's also the all "non-IDE"-Time: Requirements Engineering is essential. The ability to define, negotiate and validate requirements with the customer and bring it to paper. Read and understand the code where the feature has to be implemented and detect other probable parts of the code which have to be changed, so the estimation/offer is precise. To produce a paper from which another developer can implement the feature without frowning, and QA can test the feature. &amp;#x200B; And there's the "personality traits" and abilities...: * Always learns and is always up to date with the technologies he's using and can learn new technologies with ease. Is open for new ideas * Knows what he does not know and doesn't have a problem with it. * Teaches, guides and pushes the juniors. * Communication skills in general. Being friendly, understands, getting feedback, asking the right questions. Being a guy, no one has a problem to send to the customer. * Is a good troubleshooter (based on knowledge and experience): Can often give you hint at what part of the code to look at * Tendency to be a perfectionist. A simple thing such as being strict on giving things a good name. Or being pissed, when production code has no tests. &amp;#x200B; If you've been working longer on a project: * Can self manage the project, in the sense of: Can implement every feature in every part of the project with close to no help. Has a deep understanding of the software he's working and the API's of the peripheral systems. * People ask the senior, how the job should be done.
1. This is exactly how it's been since even the Sun days. 2. It's been a year since end-of-public-updates has been announced (after a rather standard 5-year support term), and a year and a half since the last major release you'd have to upgrade to then get perpetual free updates with no more major ones, ever.
BTW, OpenJDK is the Java implementation that Oracle develops.
Nah, Oracle ruined Python, too, back in 2017. And Game of Thrones.
I'm not junior anymore, but I still don't know how to learn something fundamentally new, and design a clean architecture without multiple refactors for at least, the first half of a project I'm using to learn tech I need to in addition to building functioning software , in the beginning of a given project. I rarely have problems with bugs, but, refactoring is something I don't think I'll ever know enough to say I can one day reach a level to not have to do it for something new. One reason is probably that I enjoy refactoring, that's the time I devote to indulging my almost-so extreme-it's-maladaptive pedantry. Another is, you can't predict if, during the course of learning, you learn something fundamental that completely surpasses every facet of the way you did things initially. Even if what you did initially is clean, is nice, is organised, makes sense, is good enough. Discovering tools that blow your previous solution out of the water and ignoring those tools to avoid redoing an implementation, that winds up costing you over the course of multiple projects, rather than a single instance of writing code you can brag about writing once and never having to rewrite. Refactoring many times does not mean your design was garbage. I could just as easily say people who don't refactor are the types to create brittle, fragile, overly complicated code that yes - works, but sends a clear message that says 'it works don't touch' Being able to refactor more than once means you at least have the overall architectural design organized intuitively enough to be able to swap out components for better ones without weeks of time wasted (hours is nothing, honestly). Refactors that take more than a few days are often representative of poor design, because it often implies part of the goal of refactoring is to untangle the spaghetti dependency architectures the entire project is built around, where refactoring one thing has consequences on everything that isn't it. Refactors that take hours aren't this kind. They are often the result of ambiguously defined or perpetually changing requirements, or the discovery of solutions objectively, measurably better. If you had to accommodate for everything that prompts refactors, in order to avoid them, you would likely have to settle for designing a programming language capable of implementing all potential requirements. After you've built that, hopefully you wasted a lot of time building the only thing you could guarantee you'd absolutely need with enough detailed definition in spec to avoid requests for redesigns. And hopefully all the time you wasted was enough for the people who want the software to know what they want. Of course, that's a lie. I wouldn't be surprised to learn that the more senior a dev is, the better they are at convincing clients into keeping what's been built, and instead frame their requests, requirement changes and architectural concerns as specialized configuration, rather than a replacement. Refactors are replaced with plugin style architectures, for every component that is defined ambiguously or should be implemented in tech no one knows anything about due to a lack of use cases in production.
/r/learnjava Google.com
wow, that is much improved. i think java may be at a disadvantage when called from kotlin because i'm still seeing a clear advantage in my test: val ba = ByteArray(1004) val r = Random(Long.MAX_VALUE) r.nextBytes(ba) var v = 0 for (i in 0..999) { v = getInt(ba, i, 1 + (i % 4)) } val start : Long = System.nanoTime() for (i in 0..999) { v = getInt(ba, i, 1 + (i % 4)) } val end : Long = System.nanoTime() System.out.println("" + v + " " + (end - start) / 1_000_000.0) // 1053092857 0.235449 byte[] x = new byte[1004]; Random r = new Random(Long.MAX_VALUE); r.nextBytes(x); int v = 0; for (int i = 0; i &lt; 1000; i++) { v = getInt(x, i, i % 4 + 1); } long start = System.nanoTime(); for (int i = 0; i &lt; 1000; i++) { v = getInt(x, i, i % 4 + 1); } long end = System.nanoTime(); System.out.println(v + " " + (end - start) / 1_000_000.0); // 1053092857 0.137986 public static int getInt(byte[] buffer, int i, int len) { int shiftAmount = 0; int val = 0; byte leftmost; switch (len) { /* cases 4 through 1 fall through */ case 4: val = buffer[i+3] &amp; 0xFF; shiftAmount = Byte.SIZE; case 3: val |= (buffer[i+2] &amp; 0xFF) &lt;&lt; shiftAmount; shiftAmount += Byte.SIZE; case 2: val |= (buffer[i+1] &amp; 0xFF) &lt;&lt; shiftAmount; shiftAmount += Byte.SIZE; case 1: val |= ((leftmost = buffer[i]) &amp; 0xFF) &lt;&lt; shiftAmount; break; default: throw new IllegalArgumentException("len out of range: " + len); } if(leftmost &lt; 0) { // if negative // sign extend switch (len) { case 1: return val | THREE32; case 2: return val | TWO32; case 3: return val | ONE32; } } return val; }
A senior dev is a senior dev, the language should be mostly a secondary consideration.
Can barely answer some of those. Java architect reporting in, imposter syndrome is real. I got here by being on a few high profile projects using niche frameworks based in Java.
Being senior has nothing to do with language. I'm a senior developer who primarily works with Java. If my company put me on a Ruby project, I would still be a senior developer, even though I've never used the language. I've has junior developers on my team who were better at JavaScript than me but that doesn't mean that they then became senior JavaScript developers. A senior developer should be capable of doing their research, confident enough to make their own decisions, and mentor others when they need help. A lot of that comes down to experience, attention to detail and good soft skills than technical ability. I know good developers who struggle to get senior roles because they are awkward people and developers with great technical knowledge but constantly make the same mistakes and can't be relied on to work unsupervised.
Someone who knows a lot about the subject matter, but isn’t afraid of admitting ignorance, isn’t afraid to take responsibility, and is willing to continue learning with humility. You can try to get specific if you’d like, but to me, the above is what makes one a senior at most things in life.
It looks like in your [submission](https://www.reddit.com/r/java/comments/bcnod6/are_there_any_plans_to_fix_chars_and_string/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
I'm a 4 years Java developer(and Kotlin). I might change the job this year. Should I keep working as a Java(Kotlin) dev or try something different(still programmer though)?
Obvious troll post, but seriously Python 2 vs 3 is a bigger fiasco than Java's ever had.
Mat I suggest studying the fundamentals a bit when you have time? I would be concerned if a Java architect didn't know about generics, the important/useful things in Java 8-12, roughly how the GC works etc.
This was exactly the info I was looking for. Thank you. In terms of messages, is that what is called a "reactive" programming model? I've been working with vertx and it is message based. So now I wonder if, for web apps, if JEE is a wise choice today.
You're not necessarily supposed to know every acronym and principle as a senior, but if you don't know what a factory or a singleton is, that's a red flag. Being a senior is often related to experience, but it's possible to work for 10+ years and still not have the knowledge expected of a senior developer.
None of the above, imo. &amp;#x200B; Imagine asking that question about a pilot. What makes a senior pilot? \- Can fly in rainy weather &amp;#x200B; Or a doctor What makes a senior doctor? \- Understands the latest scalpel developments. &amp;#x200B; The truth is, you would expect a senior developer to know all these things, but most of what you mention is syntax. For me a senior developer is the sum of experience. Dealing with customers, teams, difficult situations. And most of all, knows how to handle pressure from the business, putting code quality above the whims and wants of his direct management.
I wouldn't have a clue how to optimise the JVM, and I've been doing it for 23 years. I also only have vague ideas about frameworks... OTOH I do understand the complexity of the data structures I use and write, so I naturally write performant code, and I have written several frameworks of my own.
Kotlin is a wonderful language and you would do well to stick with it.
Oh god! I'm a senior dev, and off the top of my head I probably couldn't answer questions about many of those points if asked. Sure, I'll get there when researching a problem, but to say I 'know' them is a bit of a stretch. I've done things to optimize the JVM in the past, I've looked at how garbage collection is handled in certain projects too, I use generics a lot, I use design patterns all the time, but I constantly reference back to them to verify the structures. Sure I've used lots of different frameworks too, and languages, for various things. But, Looking at these bullet points, if I was in an interview and asked detailed questions about those topics I'd say I'd probably have about a 50% success rate. On the other hand, I could go deep into conversation about why I needed to look at garbage collection behavior for a particular problem, or how I used a Strategy pattern to manage complex decisions and so on, but to remember all that technical detail up front - forget about it. I definitely wouldn't be up to speed on the core features of each version of java either. When I'm starting a project I'll look at it then, or if I'm taking over a project I'll check out the features of the java version it's running on at the time. So I've done everything you mention in your post, multiple times, for many projects. But reading your list now I'd have a hard time defining a lot of that stuff off the top of my head.
This is what the HTTP PATCH method is for. In my projects I typically implement patch at the JSON level and then invoke PUT under the hood. When a PATCH request comes in I load the entity by ID from the database, convert it to a JsonNode (Jackson), then I use the JsonPatch library to merge the existing JsonNode with the request JsonNode, convert it to the the full DTO used for put and invoke the underlying PUT logic. (Which will run validations on the full object and eventually save if fully validated)
It's not reactive in that sense, it's just that in most of the applications that I've developed are OLTP - Online Transaction Processing - which makes the world go round. There normally isn't a tight coupling between the user interface (if there even is one) and the processing that needs to get done. The advantage of using asynchronous messaging is that it's very easy to scale it up to millions of transactions simply by adding more consumers of the message. You don't have to worry about threading issues as each individual consumer does it's own thing in it's own thread. Nowadays, it's easy enough to do this in Spring, but you have to be careful with transactions. A decent JEE application server will let you do two phase commits, meaning that you can have multiple resources enrolled in the same transaction (The JMS queue and two disparate databases for example). Not that you can't do this in Spring, but it's more "Out of the Box" in JEE land. For a relatively simple webapp? I likely wouldn't use JEE and would just use Spring Boot.
I see Kotlin as the next evolution of Java. It makes a lot of things more ergonomic and safer while retaining compatibility with existing Java code and libraries. Moving from Java 12 to Kotlin feels similar to moving up from older Java versions Java 4 to 5 -&gt; generics Java 5 to 7 -&gt; Files io, try with resources Java 5 to 8 -&gt; optional, lambda, functional interfaces, streams Java 8 to 11 -&gt; var keyword for type inference, optional &amp; stream improvements Java 11 to 12 -&gt; new switch syntax Java 12 to Kotlin -&gt; safe nullability, data classes, extension methods, when clause
From "The Software Craftsman" by Sandro Mancuso: &gt;Over the years, I learned that seniority is transient and relative. It is transient because clients will demand different types of systems as technology evolves. Having fifteen years of experience with Clipper in a traditional waterfall fashion will not get me a senior position in a modern company developing mobile applications in an Agile fashion. Seniority is not a badge we can wear for the rest of our lives after completing five years in the industry. Seniority is also relative. When trying to identify how senior a developer is, we need to ask ourselves the following questions: senior compared to whom? In which technology? In which context? From my side, I would add that there is still some core that you are gaining with experience. This core may be attributed to seniority. This core is both somewhat technological (because of spiral technology evolution) and related to craftsmanship (everything else required to deliver quality software).
What, it makes perfect sense for me for this List&lt;? extends Joe&gt; joes = new ArrayList&lt;&gt;(); to compile to the equivalent of this List&lt;? extends Joe&gt; joes = new ArrayList&lt;Joe&gt;(); because `Joe` is the only known type.
He's a Python developer. He has no reason.
Since you're a part-time Computer Science professor, can you back that statement up with some evidence or data. Otherwise it's just more FUD from frustrated Python weenies.
I generally agree, but I would expect a senior dev to know about nio or the new date api or Streams/Optional. I wouldn't let someone on my code who still uses the old api that I consider deprecated and very error prone. (Unless there is a very good reason for it, like compatibility with old android devices.)
I wouldn't say it's any specific feature I know. It's just .... experience. When a new request comes in I know instantly how to implement it. When a bug arises I know what's causing it or how to debug it quickly. It just takes time to build up these intuitions. When younger Devs come on, that's what makes them say, how'd you know that???
why use kotlin when scala exists
Did you try switching the java and kotlin version, or running the loop 1000 times before measuring it? Microbenchmarks are not that reliable, especially on the JVW. It takes some time until the JIT kicks in and that makes a lot of difference.
Yes, and I take many samples and compare the best times. I would use JMH but I don't know if it plays nice with kotlin.
For faster compilation time. This is why reasonable Scala exists. https://github.com/twitter/rsc
I found it pretty funny though: https://youtu.be/3vI_7os2V_o
&gt;Gets shit done Not necessary faster/better. The most important part is to be able to make things **DONE.** Regardless it is troubleshooting, implementation, design, negotiation, etc. Juniors concentrate on task completion, not a project success, they don't think about critical paths.
23-year senior is a meme in Ukraine, where most IT industry is about selling staff to West (outsourcing). Senior title means higher income and has nothing to do with person skills (at great degree), most valuable skill is to be able speak English. Local market lacks of bodies for selling.
There are 3 classes of security leaks in JVMs. 1. When running code you do not trust inside your VM, in theory that should be okay, _IF_ you have a securitymanager in place to stop this code from doing evil things. There have been tons and tons of security issues of this kind, and they are completely irrelevant unless you actually run untrusted code on a VM and are relying on securitymanager to do so in a secure fashion. You should go through life assuming that this is never safe. Applets rely on this mechanism to stay safe. If it's a leak like this, you presumably don't care about it, and it's not going to actually affect very many deployments written in java. 2. The big warning bells security leak. For example, if the JPG parser in the java runtime can be abused: A specially crafted JPG causes a buffer overrun in the native part of this code which then lets the crafter of the evil JPG load whatever code it wants, to be executed directly by the VM, effectively letting the attacker run any code they want at the same authentication level on the hardware hosting the VM, as the VM itself. This is really really bad and warrants immediate updating, but it is still possible that your deployment of java on a server environment is not affected. For example, if you run a website on java and that website never reads JPGs, you'd still be fine, but if you read JPGs even for something as simple as profile account pictures or whatever, you must IMMEDIATELY fix things or you're bound to get p0wned by a hacker. 3. Hacks in rarely used libraries. For example, in the built-in http server which is rarely used, or a hack in the serialization mechanism (these have happened multiple times. It is a problem if you use java's built in serialization mechanism (bad idea) _AND_ the data you toss at it is manipulatable by untrusted entities. For example, you have a java server with a save game concept where your users can download (and offer) a backup of a save game. Think, for example, minecraft, where its possible to download a full snapshot of the entire game as a file, AND, crucially, you can offer such snapshots to a server (and that snapshot is based around java's serialization mechanism). The general solution is to just not use java's serialization mechanism. If you are running a java server, this security issue will be irrelevant for you unless you ARE using one of these exotic / non-recommended things. Still, of course, always keep your JVMs up to date: Maybe you don't do this now, but perhaps a year from now someone adds a feature request to implement a settings screen, you decide to do it with a quick simple little HTTP based server, unless you have perfect memory and remember that 'oh crap this is the VM where using the built-in HTTP server thingie means my box gets owned', it's gonna blow up in your face. But it does take the edge off. If this is a #2 type leak, yeah, everyone, hold on to your butts. But I doubt that. In my experience, it's #1 80% of the time, #3 18% of the time, and #2 2% of the time.
I always find it interesting how every senior have the imposter syndromn and when you leave school as a junior, you think you can produces the best code and takes the best decisions
\&gt; kept blowing up with Hibernate Validator (With native-image) Would be interesting to learn more about this; can you provide any details? In any case, Hibernate Validator works very nicely in GraalVM applications by means of optimizations done in the context of Quarkus.
[removed]
[removed]
It is an article in the spirit of: "all ideas have something good", implying that almost everything has the same value. Yes, looking at a few other languages is good, but learning a lot of languages doesn't have much interest. It is much better to focus on the languages (or often the) that we particularly like in order to know them very well and to put into perspective the concepts that we are proposed.
You never really learn a language until you use it regularly. I can't tell you how many times I've reread the same Python tutorial. Yes, it is good to keep an open mind, and *look* at new things.
I am interesting in Golang. Friend told me that it has threaddump / heapdump tooling and requires less boilerplate for modern WEB stuff (10 lines of core code to make REST call instead of 10 deprecated frameworks like in Java). &amp;#x200B; Anything that has debugger, probing / tracing profilers, thread/heap dump tooling is worth learning because you can survive with chosen stack when you are in a PROD env. &amp;#x200B; Python 2 doesn't have chaining of exceptions! Java up to 1.3 too. That mean you need to set breakpoints in debugger to unwind chain of exception and iterate debug session until you get to the root of cause! WTF?? How Python could get attraction with broken exception chaining??
I've learned Haskell three or four times now. I love the language, but damned if I can find a use for it as a day job.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
poothon can't even spawn a thread
It was a problem with some part of the build process, I think it was about a recomputed static field, I think it had to do with some sort of premature optimization and caused the build to fail. I'm not a fan of CDI, JAX-RS, JSON-B/P, or Microprofile. The one saving grace, I have been able to at least get Spock to work [https://rapidtransit.github.io/quarkus-spock/](https://rapidtransit.github.io/quarkus-spock/)
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
'as long as my key card keeps working and the checks keep clearing, I'll keep showing up...' - me, lol
yeah. I'm not a 'rock star' or 'code ninja' (lol) but I do know a lot and I've been doing it successfully for quite a while (7 years or so), so I must be doing something right
I felt like this even as a computer science student when the were people there who had been programming for years prior, whereas my experience was a high school Visual Basic course and having made lots of Starcraft custom maps
Yeah, that is maybe because the company is not functional focused. I really like functional languages, I know a bit of Haskell and Scala (the functional part :D). Maybe as freelance you can get some work to be done with Haskell, have you looked at https://functional.works-hub.com, they offer “full time jobs” I think but maybe you can contact the companies, always is good an extra hand :)
^ If the situation was reversed, I would say that a tech lead who thinks that factory patterns and singletons is important, is a red flag because it suggest their tech knowledge is extremely out of date. This is what I mean about the unintentional agism, you're asking "what did older professors talk about 20 years ago?". But those topics are completely out of date.
You've taught me a lot. Thank you.
It's definitely not :) . Java is my first love, and my bread and butter. Been doing it for years, and I'm old and set in my ways. lol. I've checked them out, but I've got too much other stuff going on right now. I appreciate the info.
See AdoptOpenJDK.net to get the same CVE patches (we will release 24-48 hours after)
Who is porting the patch to openjdk 8? I was under the impression Oracle is not doing so.
I want to give you 3 separate but equal answers. First, the peer angle: I want someone who can make strong design decisions. Someone who helps enforce the quality of the code, as well as making sure we don't code ourselves into a corner. Should know nearly everything JVM-related. GC tuning, common runtime params. Knows the basics of enterprise messaging patterns. Knows how to design and build a horizontally scalable system. Knows how to use the best tools for the job, not just coding a new wheel or using some esoteric framework. Knows how to design a full ci/cd pipeline. Knows how to do rock-solid automated testing. Involved in most upper-level conversations about the tech stack. Second, the hiring manager angle: I'd say 8-10 years of experience is more baseline senior to me. Then, I'm looking for someone with some specific experience areas. I'm looking for someone with good communication skills: can we talk about tech? can you explain a difficult concept to a non-techie? Can you write clearly, concisely, and accurately? Can you coach and tutor lower-level devs? Can you drive a project from inception through to maintenance? Can you drop into anywhere in the stack and help un-block teams? Can you help keep our quality high enough to maintain or increase velocity? Can you reasonably debate features in a cost vs time vs quality perspective? Can you reasonably identify how to add a large feature? Third, the person who wants to be the senior engineer: literally any company that will put that as your title and pay you. The title "senior" is so freaking wide and misused that it means almost nothing. It can be something such as a guy who's been at the company the longest. It can be a title to placate a person who is otherwise threatening to leave. It can be a person who would be an architect at any other company. It has relatively small correlation with the actual quality of the engineer at a macro scale -- but every company is different.
Engineers from Red Hat, SAP, Amazon and others
21 Million downloads and counting at AdoptOpenJDK so far - I think we failed 😉
Thanks! That is exactly what I was looking for. Nice work!
there were attempts, problem is efficiency- without GIL python is slower than with GIL
Yea i know the reason is they have to put mutexes all over objects.
_"Fake it till you make it" and "I hope no one notices I don't know what I'm doing"_, are my career mottos.
Gotcha. I guess oracle is sharing the info with them but not the patch itself
&gt; generate my DB from @entity models with hibernate.hbm2ddl.auto I wouldn't recommend doing this outside of dev environments. &gt; I don't like the "copy paste" ddl's myself part of flyway :( Not sure what you mean. If you're expecting to change you data model and auto-generate flyway scripts I don't think you'll have much luck. You'll need to write out your migration scripts for flyway or liquibase.
I've done this with the liquibase-maven-plugin and hibernate. Liquibase can diff your entity updates and your schema. I don't trust it, personally. Could just be that I'm old. A quick Google found https://www.exoplatform.com/blog/2018/06/20/safely-manage-the-database-for-your-exo-add-ons-with-liquibase-maven-plugin/. Hope that helps.
There's 3 main ways: - ad-hoc scripts - flyway - liquibase Have encountered all 3 and only liquibase was bearable. DB migrations are still always a huge pain in the ass though. Just that liquibase makes it slightly more tolerable in my experience...
I assume your strategy is to come in here, ask questions and then use that as a conversational entry point to push your app you made. I've answered questions for you before that imply you are near graduating with a degree and interviewing for jobs, but then you post questions like this and don't even include what exception the compiler is throwing / don't use any of Eclipse's tools that tell you where the build exception is occurring.
haha nope, I wasn't even going to mention the app. There is no compiler error, the error is just an error when I add the import [java.ws.rs](https://java.ws.rs) line, I dont compile anything. Last time I added the appropriate external jar the error went away but for some reason this one is not.
Here is another picture if it helps. As you can see I have added the appropriate jar files but still cant import the files from them [https://imgur.com/a/2RsQG2H](https://imgur.com/a/2RsQG2H)
Build it. If it works then great. Now you've got to figure out what your IDE doesn't like about it. If it doesn't compile, then your compiler will let you know.
https://www.liquibase.org/documentation/generating_changelogs.html
Seconding Liquibase. It has its deficiencies and rough edges but writing your own schema migrations with it is the way to go. You do need to go in with an understanding of your database engine(s) though.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/u_thearjunadhikari] [What makes you senior Java Developer ?](https://www.reddit.com/r/u_thearjunadhikari/comments/bcyyha/what_makes_you_senior_java_developer/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Ive used both liquibase and flyway. Both have their positives and negatives as with most things in life. They have configuration files that run on application startup that run. They are versioned so they wont run again..etc. There is documentation on using Flyway with Spring boot, Spring recommends Flyway in their documenation, why I dont know. Currently we use flyway with our microserives and liquibase with our monolithic application.
We also use Liquibase, it isn't bad but any migrations are always difficult and require a lot of effort to get right.
There is a shared vulnerability group and yes Oracle is being really good about disclosing CVEs that are reported to them. Everyone pretty much collaborates there 🙂
The auto DDL thing is fun for quick demos and short projects but I would not use that in a deployed application. I always use flyway because it runs and applies migrations on app startup (in Spring Boot) and it allows you to write migrations in SQL or Java. I like to write migrations by hand because they force you to think about the attributes of every column.
It looks like in your [submission](https://www.reddit.com/r/java/comments/bd0vkd/enjoy_work_again/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Your described fear of fragmentation would only be a constant, wouldn't it? So I would go with yes, O(1)
Big Oh notation is supposed to abstract away the details of the hardware, operating system, virtual machine, and even programming language used to implement an algorithm, with the ultimate goal being so that you can compare different algorithms regardless of what language they're implemented in, or what hardware they're running on, etc. so in a sense your question "doesn't type check" correctly. There are lots of unstated assumptions when performing a Big Oh analysis of an algorithm. For example, it's commonly assumed that incrementing an integer can be done in constant time, but there are situations where this is not the case (in which case, you should probably state that in the particular analysis you're doing, you're assuming that incrementing an integer is O(n) where n is the bit-length of the integer, or whatever actual assumption you're making about the execution environment that your algorithm is running in). Similarly, you can perform your analysis with the (explicit or implicit) assumption that allocating memory for a new object is O(1), or you can perform you analysis with the (probably explicit, to avoid confusing your readers) assumption that allocating memory is O(n) for some n you define (or O(n\^2) or whatever assumption you want to make for your analysis to be useful to your readers.
Well... it’s complicated. Firstly the operating system splits up memory into pages. So it doesn’t allocate to a per byte level. The used pages are probably stored in a linked list; so traversing this free list could be N where N is the number of pages. However Java will attempt to allocate first from the Eden generation. If there’s space it’s as fast as a stack allocation. If not then a minor garbage collection is performed. If the object is large. Then it will allocate directly into the older generation. This might or might not need a o/s alloc call. (In G1 it will try and chain blocks together etc) Java itself tries to allocate from the operating system infrequently to avoid performance penalties. Not sure I can put a O() value against all the cases.
To be pithy, the difference between a junior and a senior developers is that when handed an assignment by their boss the junior asks "how are we doing this?" while the senior asks "why are we doing this?" A senior developer is someone who is able to work independently on a problem.That's not "work independently" as in "holed up alone in their office, not talking to anyone else" and not needing assistance or help, it's "work independently" as in not needing further guidance and oversight. Hand an assignment to a senior developer (or a well-functioning team containing a senior developer) and the assignment will either get done or you will be given a well-reasoned argument why the assignment can't or shouldn't be done. As such, much of the additional skill of a senior developer lies not in the technical minutiae of software development but in knowledge of the problem domain and the ability to evaluate and analyze problems, solutions and requirements.
You're looking at this question in very much the wrong way. Big O notation represents and upper bound how time or space utilization increases with larger inputs. And often times we are talking about the "best case". There is also worst case and amortized cost. For example, consider a hash table. Insertion is considered O(1), because in the best case all you have to do is compute the hash value, modulo size of the backing array to find the index, and append to the end of the bucket chain at that index. All of which are considered constant time operations for the purpose of the analysis. But, computing the hash value can be O(n), for example for a string. But, for this analysis, we are concerned with the how insertion performance fares as the number of entries in the table grows. Hash tables have at least two worst case scenarios that I can think of. First, a bad hash function with poor distribution can lead to O(n), a linear search, if all the keys have the same hash value. Second, a hash table might have a load factor, and when exceeded causes re-hash, as the hash table is reallocated with double the size and all the entries re-added, another O(n) operation. For example, in garbage collected languages, memory allocation is often said to be "best case" O(1) because the garbage collection *algorithm* organizes the heap to make free blocks immediately available, through use of a "free list" and reorganization of the heap during garbage collection (compaction). Underlying cost of using the memory system is not relevant to the analysis because it does not say how well the garbage collection *algorithm* performs as the heap size grows.
This is a great example of premature optimization.
Mh, ok. If you run into this again, can you please file an issue with the respective projects? We need some actionable info in order to improve things. That said I reckon it's no longer an issue due to the recent work done for Quarkus.
Firstly, what is N? If you mean allocation cost is not proportional to heap size, then, generally, yes, that’s true, Then memory allocation is roughly amortized O(1). Initially, every thread allocates its own TLAB in Eden space and then allocates objects by bump pointer allocation inside that TLAB. But it could cause young gen garbage collection. Young GC could be stw or not. For any gc collectors other than Shenandoah or Zing it is stw copying collection. But that’s how ‘regular’ size objects are allocated. Also there is notion of humongous objects like array of primitives, and each gc allocates them differently. Actually, there is a great book about everything related to memory management in modern languages - The Garbage Collection Handbook: The Art of Automatic Memory Management.
I currently use liquibase in spring boot microservices without a problem.
&gt; flyway Can you share any specific problems you had with it? We're using in a couple of projects for last 2-3 years without a problem, but would be nice to know potential pitfalls.
Nothing wrong with flybase since it can rollback migrations.
You are absolutely right but no one in his sense going to learn more than 5 programming language :-) It's just about expanding your knowledge. I think learning one language form one paradigm is good like OOP, FP, Scripting etc. Here is [my list](https://javarevisited.blogspot.com/2018/08/5-programming-language-every-programmer-learn.html) which is based upon the same principle.
We use this at work. I think it's cool and easy. Just enter your changes within a xml and liquibase will generate the code platform (database) independent... It's pretty easy. I think you can also include it into spring and spring will execute liquibase for you.
Thanks for your comment! I think if it can generate sql’s, we can adapt the output with a second automated step to use it as a migration in our code (Play/Django).
It's as good as flyway, except it's free and you can use rollbacks out of the box. Integration can be cumbersome, especially when it comes to integration tests. &amp;#x200B; What I don't like in any Java migration framework is that they are very needy. You can't change anything in the migration files (not even a comment or the file name) because it will fail the checksum tests. It would be nice if they would be smarter than that, for example check the db state if the checksum changed and if they are the same, update the checksum. They could even detect if a new change was breaking or not. Development would be much more pleasant and easier than now. &amp;#x200B; [Rails for example, has a much simpler model](https://stackoverflow.com/a/8236416)
Liquibase &amp; Flyway are mostly equal (in feature set and popularity). &amp;#x200B; Honestly I've spent 2 days to "grok" Liquibase. You can see results here: [http://tips.defun.work/liquibase.html](http://tips.defun.work/liquibase.html) &amp;#x200B; Most annoying thing at time was using local absolute path to file as a key which is kept in DB as a part of migration checksum/state. Total bullshit. Check my article how to avoid this. &amp;#x200B; I am in daily use of Flyway (via Gradle). Flyway applies SQL instead of XML like in Liquibase. So it is impossible to define "rollback". Paid version of Flyway allows to undo changes via defined "U"-prefixed files. &amp;#x200B; Django South and Ruby ActiveRecord generate DB migration path from model changes. With Liquibase &amp; Flyway you need to write changes manually. Undo is impossible with any tool.
We have tens of apps with shared DB schema. Only one app keeps Flyway files and try to make upgrade on app start. &amp;#x200B; Try to avoid such design. I'd better apply migration manually. Recently we had broken upgrade because you can't change size of field in Postgres if it is used in some view which I wasn't aware (Stage != Prod xD). &amp;#x200B; It looks cool to autoupdate schema on app start but that means you are not managing DB state, you are playing with toy. &amp;#x200B; Design schema changes to be non-destructive. Instead of backups just copy data to new tables: TBL =&gt; TBL2, TBL.COL =&gt; TBL.COL2. It is relatively easy with Hibernate &amp; Spring JpaRepository. After several versions you can drop TBL or TBL.COL. It is important to be able to switch back to previous version of DB just by launching previous version of app! I can tell you, especially in 3 AM ))
Not sure about "generate sql". Probably you are forced to do it manually with Liquibase.
For Postgres - OK. For MySQL - how? DDL in MySQL is not transactional. There is no way to roll back DDL in MySQL without manual intervention. &amp;#x200B; Also you ended in some intermediate broken step Vn Vn+1, ... Vk. &amp;#x200B; Shouldn't Vk-1 be committed as it was succeeded?
Depends on your use case, I guess. In the company I work, we do have to deal with monetary values which are invariably in Euros (B2B) and our upstream provider already does treat them as long values. If anything we choose to wrap it in a value class, but that's it.
Just imagine the cost to fix an application in which all the memory allocation was haphazard and suddenly you need to fix all the garbage it's creating. Sometimes thinking about these things before embarking on a project is appropriate. However this seems more of a question for deeper understanding of the process, then anything else.
&gt;Most annoying thing at time was using local absolute path to file as a key which is kept in DB as a part of migration checksum/state. Total bullshit. That logical file path bullshit is one of the most annoying thing I've ever seen from a framework. Seriously, why would the authors do that? There are no upsides in making a primary identifier generated two different ways. Once we only did migrations manually, then went to run the migrations from maven and code - then this "feature" complained that none of our migrations have been run ever. &amp;#x200B; Dear authors, the developers using your framework would probably want to spend less than a second using your stuff in an ideal world, so don't put so much fucking work in running all this.
Good to hear
You could also keep the database up-to-date with the [CLI of Liquibase](http://www.liquibase.org/documentation/command_line.html). Then you don't need to manually use the sql ([Link to get the sql](http://www.liquibase.org/documentation/update.html)) But if you want database versioning in python maybe you could look for a wrapper (just searched and found some). Then you could use liquibase directly in your code and you are not required to manually write wrapper code.
Nice, we can sync database with cli and then update our models in both projects, thanks!
You are so right, rolling back is so important! I think this is not completely possible since some data in a new scheme with heavy use can be inserted and missed if you rollback but is a really good point, is also anyone should consider when implementing this kind of tools, thanks for sharing!
I can share it via giving the link however now I'm worried the code is saved on your servers. Is the code saved or just the information UML needs?
You are right, we are working right now using Django migrations, any change we made it with the Django project (similar to Rails) and after that update other projects.
You get plenty from flyway's free community edition. Not rollbacks though.
We use flyway because it uses sql scripts rather than xml files. We generate these using sql and data model design tools - when we were on MySQL we used MysqlWorkbench, now on Postgres we use pgmodeler. A good diagram really helps everyone understand and if it's not up to date it's useless. We edit the single model and CI generates diffs which become the migration scripts. As an aside we've chosen to apply the changes manually (not built into the startup of an app) because we have many apps which get deployed at different times and it seemed harder to manage that way. That can be done with either framework AFAIK.
No, this is a great example of learning your tools before it becomes a problem.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Alembic is worth looking at since it's written in Python, like Django.
I'll add my vote for liquibase... not perfect, but gets the job done.
The memory allocator doesn't "search" all memory looking for open space, it keeps a kind of index of free space it can use to find free space very quickly. Exactly how quickly depends on the exact allocator you are using, so I can't say in general what algorithm is in use, but it is typically an essentially fixed amount of work. Or log (the different sizes of objects) perhaps.
Also I think you are confused about virtual memory, it doesn't really help that much with memory allocation, it's there to allow multiple processes to run without interfering with each other.
Available with no support ™
Thanks, I didn’t know about Alembic.
Yes, Flyway is slightly better from this viewpoint, but it's still way too overcomplicated than it should be.
Nice article. Generic of mutable objects is the real reason for this mess. I've just want to point out that there is a way to simulate variance type in Java by using @Choice in [FunctionalJ.io](https://FunctionalJ.io) . Check out this [blog post](https://nawaman.net/blog/2019-03-28#ChoiceType) or this [VDO](https://www.youtube.com/watch?v=JWKl2cfkVrw). For example, this code will create a variance called `Term` with 4 possible values. @Choice interface TermSpec { void Bool(boolean bool); void Num(int num); void Str(String str); void Nothing(); } Then you can use `Term` as the type.
You should fix your website css... layout... or both: https://i.imgur.com/ZDGBqXj.jpg
That's the best answer: the amortized complexity is in O(1)
Certainly not. Considering the cost of allocation/deallocation management is not a premature optimization because if you need to manage the object in a different way this may impose to change the architecture of your code.
/r/iamverysmart
When it walks the list of available spots looking for one that's large enough, that's called "searching".
Go with Flyway, it's extremely easy to use, already integrated with spring boot and seamless to use. Liquibase is much more complex and horrible
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
I think most (Java) projects do too little numerical calculations and with only a few units, so nobody bothers to do it strictly with units. Moreover, in applications that do lots of calculations, their performance tends to matter more and boxed values with types would have unnecessarily overhead. Compared to other languages it might also be the lack of possiblity to have the units directly with the numeric constants since there isn't operator overloading.
Why built your own instead of using an existing one? Same reason people roll their own StringUtil libraries -- Not Invented Here syndrome (or company policies that restrict external libraries). Why prefer or not prefer one in the first place? It can certainly help avoid stupid math mistakes (see., e.g., [TimeUnit](https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/TimeUnit.html), but lots of projects may not have many magic numbers in them, or they deal in units already native to the JDK (`long`s, for instance), so bringing in an external dependency (especially when there's no clear standout, like `commons-lang` for Strings or `commons-io` for I/O, doesn't seem worth it.
I am using liquibase right now in a 3 year old project (constant work is done on it with regular releases). There wasn't anything that I couldn't do, though I did have once to roll my own liquibase operation.
What was so hard about learning it in java? Or was it just easier bc you already knew half of it the 2nd time?
Good going [u/Lovelifeandliver](https://www.reddit.com/user/Lovelifeandliver), those skills will stay with you for the rest of your career. It's better to have failed now than to have barely passed and then spending the rest of your academic career playing catch up.
I think it’s because when u learn more than one language at a time you do comparisons that help you remember stuff. For me, doing one thing again and again gets tacky
Roger that 🤟🏻
&gt; ... revised my basics and ... I performed well Yep.
dijkstra's algorithm*
bad typo :)
&gt; Now I know surveys aren't allowed here but You know you're doing something wrong but you're going to go ahead and do it anyway?
liquibase is awesome! If you can hold to it's standard XML, then your DDL can come out the other end tailored to the database in question. This works great for most standard stuff. Once you get to triggers or procedures it doesn't work. So then you can drop back to "SQL". BUT, you can write change sets which are only run if the type of DB is correct, so you could write a trigger which works for Postgres and another for Oracle. (for example ) WRT Integrations. I do the following. 1) I have my app check and apply the DB migration on startup. If the migrations are all caught up this has no effect. 2) I use testcontainers to start and stop a postgres DB in docker. Super cool once it's all working For years I used a "real" DB in production and H2 for test. And that works up to point, but the point seems to be always reached, so I prefer having my tests take just a bit longer and run on a "real" database. A super key thing to is to understand how liquibase works. it's like a journaling log. Once a changes is applied you MUST not change it. Once you get this behind you things get a lot easier. And it keeps you from doing something you do not want in production.
What have you tried?
Disregarding other factors, memory allocation time on the JVM is proportional to the size of the object, because it gets zeroed out before getting passed to application code.
&gt; doing one thing again and again gets tacky LMAO. Well, Godspeed in your other courses....
Hell yes dude
I actually just used this algorithm for finding the best routes to take on a map. What are you using the algorithm for? I’m asking so we can get an idea of how you want to prioritize the output.
Nothing like having to build the data structures from scratch to help it sink in.
&gt; Stage != Prod There is your problem. Tools like Flyway or Liquibase (or any such tool which relies on a series of db migration scripts) require that you **do not** apply any manual changes to the DB which bypass the automated process. In other words, if you have 2 DBs (for example staging and prod) which have had the **exact same migrations applied** (according to the changelog table) but their structure is different, it means that you have violated said requirement, and you will get unexpected problems during DB deployments. Read the "All database changes are migrations" section of this article if you want to know more details : [https://martinfowler.com/articles/evodb.html#AllDatabaseChangesAreMigrations](https://martinfowler.com/articles/evodb.html#AllDatabaseChangesAreMigrations)
ntg so far i didn't want to start anything till i get the full idea about what the algorithm.
i kinda wanna visualized it using swing for example i wanna draw a window full of squares ,and when i mark a start node it should reach the end node
Bruh, that's not how you react when someone appreciates you or gives you a suggestion.
I’ve only implemented it once, but from my understanding the nodes would need some elements that you can differentiate between for the priority queue. For example, when I used it I used the distance stored within each intersection (node) to determine which nodes to search next. I think the first thing to do would be to write the algorithm out in pseudo code so you get an idea of the logic behind it.
We're going through this process at work now with an application that has suffered a lot due to general project mismanagement. Particular codebase culprits are gratuitous exceptions (versus explicit error case handling), overuse of heavyweight primitives, and clear signs that feature accretion was prioritized over refactoring to take new requirements into account. In our current environment I am not sure how we even begin to fix these problems without overtime of some sort, because they are endemic to the project.
&gt; If you have any reasons why people don't usually consider UoM libraries in their solutions The lack of operator overloading in Java means that a UoM library will necessarily be quite "intrusive" and cumbersome in use. In general, from what I've seen, UoM libraries all tend to break down at some point if you're doing more complicated calculations between units, so there's a fairly narrow range of code where they're actually useful. In addition, the main problem area when it comes to units is usually in reading data from external sources, and a UoM library can't really help you with knowing what units you're reading in. Mostly you tend to have a use-case where the use of united values is either too simple to be worth the added weight of using an UoM library, or it's so complex that any given UoM library is unlikely to be a good fit for your requirements. The "Goldilocks zone" is pretty narrow.
Pointers!
I was only thanking you
I found Liquibase to be unusable. Even with manually defining all of the filenames to try and get the checksums to match regardless of how they were run, it still tries to run some of the migration scripts every time when I tried it again a month ago. I don't understand it for the most part, it acts like a black box and won't let me understand it, and the parts I do understand seem obtuse. Flyway has worked for me for many years, and I just switched back to it and it worked fine first and second time.
&gt; Try to avoid such design. I'd better apply migration manually. Recently we had broken upgrade because you can't change size of field in Postgres if it is used in some view which I wasn't aware (Stage != Prod xD). This doesn't make sense. Being unable to modify a column because it is used in a view doesn't stop being a problem if you run it manually. You did actually test your SQL script? &gt; Design schema changes to be non-destructive This should be a given regardless of what you are working on. Today we are talking about databases, but the same applies to APIs, or anything else that can be consumed by more than one thing.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
I advise you figure out how the algorithm works on paper first. Once you have that down learn swing basics. Then it should be simple to connect both. If you're going to use a grid, then each square will be a node, etc.
What's your problem he wasn't even responding to you. You're acting like an ass
Find a mesh of threads, lay it on the table. Pick any node with your finger, pull up the mesh and see Dijkstra happening.
I thought he can be little more courteous, clearly, I didn't get the message other people got, that's my bad. Judging by the downvotes, I got nothing against him. Thought he could reply with a "Thank you" and a roger that. Idk I am wrong.
I guess it is up for interpretation. I thought he was polite, but it's all just opinion I guess. Have a nice day
Good job !
Programming help should go in /r/javahelp. **Removed**
You can supply allowed checksums for the changed XML files but it's still a PITA.
Idk I did pretty well during my degree and I had the similar philosophy.
I use Flyway, mainly because it doesn't pretend the database is an abstract implementation detail. Conversely, I avoid Liquibase because it prefers for you to buy into that illusion.
You could make a Batch/Bash script calling the Java -jar command, make it executable from your part?
With Java 11+ it's easier than ever due to JEP 330. It allows you to invoke java with a single java file (that contains a main method) without the compile step. It is trivial then to add a shebang and have a working java script (ah ha ha). Do a Google search and you should easily find what you need.
It looks like in your [submission](https://www.reddit.com/r/java/comments/bddahs/introduction_to_jbpm/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
you mean writing java applications that don't require a system install of java or...?
Java programs must be run in a java virtual machine, this is what allows them to be executed on any system capable of running a java virtual machine. Thus, any command line execution must use a program that starts a JVM and executes the program within it. This is most commonly done with the “java &lt;program&gt;” to which you refer. If you want, you can create a shell program that checks to see if a JVM is installed, and attempts to install it if it isn’t, and then executes the java program in the JVM if a verified install is detected.
Congrats dude
ok this works, I just have to find a why to run it without calling .bat now xD
Programming help should go in /r/javahelp **Removed**
No, when you open your command line and type code it opens visual studio code. Because there is a folder with a load of scripts called bin that's in your system's path. I want to do this. :)
&gt; I thought he can be little more courteous Publicly calling out what you perceive as bad manners isn't very courteous. Like, when a friend's fly is down, I don't say "HEY EVERYONE, LOOK AT BOB'S CROTCH, YOU CAN TOTALLY SEE HIS UNDERWEAR!", I wait until the right moment and discreetly let him know so he can fix the problem without everyone seeing it.
Have you added it to your $PATH? If so, have you restarted your console, you need to do this to pickup changes. You should then be able to just type YourBatName.bat at the cmd line, or use the bat file as a shortcut
Have you added it to your $PATH? If so, have you restarted your console, you need to do this to pickup changes. You should then be able to just type YourBatName.bat at the cmd line, or use the bat file as a shortcut
`mvn liquibase:updateSQL` generates a `migrate.SQL` file with all the SQL code that would be executed by `mvn liquibase:update`, without actually updating the DB. The downside is that it doesn't update the DB, so `DATABASECHANGELOG` is not modified and Liquibase won't register those scripts as already run. Nothing stops you from including the necessary SQL statements in the generated .SQL file to modify `DATABASECHANGELOG` yourself, though.
Yes, you can generate SQL with `mvn liquibase:updateSQL`, but then you'll need to update `DATABASECHANGELOG` yourself.
I think awareness is a major issue. I hadn't heard about it up until about two weeks ago. I'm still trying Indriya out but I'm not sure that the application I had in mind would benefit from it. I could still go either way but right now I'm leaning towards unitless measurements and keeping track of the unit in some sort of Sensor class.
The fact that I can `mvn liquibase:rollback` most changes without actually having to write the rollback code is pretty nice.
I couldn't say this better myself. I'm approaching 13 years and this hits it on the head.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
It looks like in your [submission](https://www.reddit.com/r/java/comments/bded7z/announce_zip_library_tinyzip_100_released/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Make sure you don't swallow the exceptions in PathZipper (by only printing its stacktrace), or don't just rethrow them as plain RuntimeException. Last thing the user wants is to some stack traces to appear on the std err magically, or runtime exceptions thrown without expecting it.
&gt; If there were no Virtual Memory, the memory could be fragmented It doesn't work like that on OS level. Virtual or not, malloc (or anything similar) will try to find the gaps. JVM on the other hand puts another layer on top of that. IT allocates memory beforahand, so in most cases it can append new objects at the end, without looking for gaps. Only during GC it shifts everything to fill in the gaps. This is also when it can expand or shrink the heap size.
If you try to learn details of data structure implementation in Java, knowing only Java, then there will be a lot of abstract terms. If you pass through a lower level language beforehand then those abstract terms will make more sense and you will often be able to draw a parallel.
WARNING: This code has a security leak in it. ZIPs can contain relative paths. Specifically, you can craft them such that they contain "../../../../../../../etc/passwd" for example, as path. It can even use absolute paths and have "/etc/passwd" as path. Your tool calls `destDirPath.resolve(pathTakenStraightFromZipFileWithoutCheckingIt)` which means it will write to where-ever the zip file wants it to write to. `somePath.resolve(Paths.get("/etc/passwd"))` returns '/etc/passwd' (try it!). This can lead to nasty surprises in the best case, and to security leaks in the worst. Yes, you rarely meet zip files that do this, but then, I assume you rarely come into contact with zip files that are explicitly crafted to hack your system. I'm pretty sure java's own zip library can make these hacky zips with absolute paths / relative paths with double-dots in em, if you need some for testing purposes. Suggested fix is to check if the resulting path (the return value of the `resolve` call) is still a sub-path of your target using `filePath.startsWith(destDirPath)` and if the answer is 'no', to either just abort (and state that you do not support unpacking zips with absolute paths / escape-target-via-double-dots paths, so throw an IOException here), or, alternatively, just get the last bit of the path (`filePath.getFileName()`), and throw that at `destDirPath.resolve`. Thus, if I want to unpack a zip into `/tmp/unzipHere`, and I have a zip with `/etc/passwd` in it, I end up with `/tmp/unzipHere/passwd` which seems fair enough. It is possible that a zip file contains the same filepath twice (and it becomes easier if you treat /etc/passwd as just passwd to have this occur), but I doubt you need to take any special action there. If you attempt to use this lib to unzip a zip with a duplicated entry in it, the last time that entry shows up, is the file you get, and all earlier entries will not be there (they will have been unzipped, but will then have been overwritten by the later entry). Also filed as [issue #1](https://github.com/bitstorm/tiny-zip/issues/1)
[removed]
I suggest going one level deeper (https://giphy.com/gifs/inception-inceptionedit-nolanedit-k0JqBeO3xTDsA) and reading this book too: https://books.google.com/books/about/Computer_Organization_and_Design.html?id=DMxe9AI4-9gC
That's great and confirm my belief that learning C++ makes you a better programmer. I also come from C/C++ background to Java and I know coming from difficult to easy not only makes learning Java easier but also you already know a lot of stuff and how they work in Java.
Well, that's how the courses were organized at my university, Systems, maths, algorithms, Ada/C/C++ during the first year. High level languages, assembler, and more project oriented courses during the 2nd year. Seems like in case of OP it was not the case.
Great tutorial! Looking forward to part 2
This is not specific to any language and there's an RFC for it called JSON Patch: https://tools.ietf.org/html/rfc6902 Also here: http://jsonpatch.com/ And here: https://github.com/flipkart-incubator/zjsonpatch And here: https://github.com/java-json-tools/json-patch
Micronaut is the most promising. Oracle's helidon suite looks pretty cool as well. Can hardly not still recommend Spring Boot though, for the sheer value it's ecosystem brings. But you said out of the question so.
I see arguments for not using spring, but I have a problem understanding what your problems with annotations are? If you want to work in modern java web environment I think you should use spring (to start learning it), because it is quite a standard in modern java
&gt; This should be a given regardless of what you are working on Generally yes, but... &gt;Today we are talking about databases Databases are controlled environment. They are not exposed directly to customers and so can evolve even with breaking schema changes. Pain is on your side. &gt; same applies to APIs If API is public the only way to change it - **keeping strict backward compatibility** or exposing new endpoints. We consume some travel SOAP WS where provider supports endpoint versions starting from 2009 (with generally 4 releases per year!!)!
I don't think Java really clicked with me during my undergrad until I took a C++ course on my own time. It helps a lot knowing the building blocks before you dive into a higher level language
vert.x &gt; these dinosaur frameworks
&gt;This doesn't make sense. Being unable to modify a column because it is used in a view doesn't stop being a problem if you run it manually Exact error from Flyway: `Message : ERROR: cannot alter type of a column used by a view or rule` `Detail: rule _RETURN on view finalized_x_view depends on column "initials"` `Statement : ALTER TABLE agent ALTER COLUMN initials TYPE varchar(16)` In Oracle you get broken few. In Postgres you get SQL error. Good to know ))
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Same experience. With Flyway you get V1\_\_nameX.sql, V2\_\_nameY.sql, etc and know order of application and deal with pure SQL. Liquibase comes with own XML + apply "logical" named chunks which you can define several in one file...
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
well if you're looking for a "backend" framework (not sure what exactly you mean by that) then in fact spring would be your best bet. javalin and spark, jooby are micro frameworks for quickly setting up some rest APIs. they have no notion of DI, tx mgmt etc. micronaut boasts a Feature Set similar to spring (but far less extensive) and AOT compilation for certain things. none of the frameworks have the flexibility to allow you to just pick and choose like spring does. without more Details what exactly you're looking for itll be hard to give solid advice. This advice I can give with certainty however : don't roll your own DI. why reinvent (and end up with a rather wonky) wheel? All the tooling you could ever want is out there, just use it. I am however not exactly sure how you want to use DI while avoiding annotations..
I wrote about this in my tip: [http://tips.defun.work/liquibase.html](http://tips.defun.work/liquibase.html) Liquibase can even more: to capture difference between current DB state and new JPA schema. Check my tips site...
&gt;liquibase:rollback Is that new feature? I looked to Liquibase 4 year ago and somehow missed it ((
Jooby meets all your requirements and comes with some nice things. You can run it with hot-reloading which gives you a nice development cycle. It has decent Kotlin support if you ever want to try that. It has a good number of simple modules to integrate with. Spark is a lot smaller. Their docs don't have information on DI or connecting to a database. That's fine, but the ball is in your court to handle that. Javalin seems similarly small. Micronaut seems really interesting (I hadn't heard about it before), but it looks like it's annotation-based. Jooby allows both a JAX-RS annotation-driven style and a non-annotation style. Micronaut's focus on compile-time annotation processing rather than runtime reflection is nice, but I haven't used it.
Thank you for your advice. However since PathZipper implements interface **Consumer**, I'm forced to wrap IOException into an unchecked one. Do you have in mind a better exception rather than RuntimeException?
[UncheckedIOException](https://docs.oracle.com/javase/8/docs/api/java/io/UncheckedIOException.html), or just declare your own runtime exception type.
Any reason for choosing Zuul over Spring Cloud Gateway?
&gt;Spring is out of the question I would advise you change you look deeper into Spring, especially Springboot. Massive ecosystem.
Languages come and go. I remember when Scala was the Second Coming and, before that, when Groovy was the second coming and on and on. Stick with Java folks - within a few years it will have more features (supported deep into the JVM) than any of these boutique languages.
Thank you!
I've used Spring MVC with xml config and Boot with with webflux and annotations. The sheer integrations and resources are great to be sure. However the amount of annotations is staggering, basically any solution to your problem is slapping some annotation, adding some default annotation, disabling that. I'm fine with annotations for things like route mapping, di, etc but it quickly gets out of hand with Spring. Also startup time is a factor for me.
Java developers often have no experience with pointers, memory layout and bit arithmetic. Data structures often relays on pointers, memory layout and bit arithmetic ))
I was tinkering with this architecture a year or so ago, ended up going with something slightly different. But from what I recall Spring Cloud Gateway was a newer entrant and was significantly slower than the competition [Older Comparision](https://engineering.opsgenie.com/comparing-api-gateway-performances-nginx-vs-zuul-vs-spring-cloud-gateway-vs-linkerd-b2cc59c65369)
You can compile to a native executable, but using tools that are somewhat complicated. Java is mostly used for web applications and web services. If you want to create a Windows App you can using Swing (the old way) or JavaFX (the new way).
If you hate the Spring annotations, then *don't use them*. If you're using Spring Boot, you can get by with `@SpringBootApplication`, `@Configuration`, `@Bean` and `@Controller` (along with `@GetMapping`, `@PostMapping`, etc). `@Transactional` is also nice if you like AOP, but even that isn't strictly necessary as you can use `TransactionTemplate`. The "magical" Spring annotations are auto configs that come with Spring Boot starters. They do things like notice that you have a Postgresql driver in your classpath and that you haven't already defined a `DataSource` bean, so it creates one for you based from the standard configuration parameters in `application.properties`. You can create all the beans you need by hand. Also, you can let Spring Boot magically configure Spring MVC for you (the web framework), or you can use handy Java-based builders like `WebMvcConfigurer](https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/servlet/config/annotation/WebMvcConfigurer.html) if you don't like magic.
Just pinging in to say it is not compiled to a native executable, it's compiled to byte code which is interpreted by a runtime (JRE) which is available on pretty much all platforms.
Whenever I consider using a framework in a project I like to ask myself: "What problems does adding this solve?" I have found that while adding frameworks to a project typically solves the problems that the frameworks were designed to solve, the additional frameworks also add unforeseen bloat and/or problems of their own. (i.e. in your case, the framework is solving the problem of handling http requests, but with the cost of adding annotations all over your code.) &amp;#x200B; If you just want to respond to http requests with html, then HttpServlet + JSP is more than sufficient.
Plenty of stuff. Here are things I've worked on (in a professional setting, not an academic one). Web applications: lots of them. I worked on a train tickets booking app, an event planing app or a client's account management tool. In all these cases, the architecture was was: running on a server (respectively: tomcat, glassfish and payara), interface in JSP or JSF (think ASP, but Java-oriented) and backed by a database. Complex web applications: I recently worked on a very complex application that is used to draft legal documents. The architecture was quite complex as it involved java on the server to handle all the grunt work; and javascript, custom browser, and .NET (VB and C#) executables on the client to interface with MS-Word (why in the world didn't they choose C# on the client side ? I can't say). The interface was a bit of a mix and match with mostly JSF for the user interface, and REST to allow the .NET part of the code to directly exchange with the server. Desktop applications: in the same company as the above, I have worked on desktop applications (using JavaFX) for various back-office tools intended for us developpers, but also for the IT crew dealing with 1st and 2nd tier customer support. Web services: I worked on an application for emergency medical care assistance. The architecture that was chosen was of a java back-end providing REST services to an Angular front-end. As the interface between them was purely REST, we could have, theoretically, chosen any REST compliant interface. Yay. Currently, I am working in the banking industry and the bulk of my work involves web services.
You can use swing or java fx for desktop applications , and then use something like launch4j to create a native exe file by bundling in a java runtime enviornment (jre)
Quarkus looks promising, but haven't tested it. It is made by Red Hat so is sure to get some future traction. Micronaut I have tried, and whatever comes out of the box feels well done and properly integrated, but it is made to feel somewhat similar to develop against as Spring. Vert.x is always the framework/library I return to when I want something that just works, and I need something event based or reactive.
Oh, I meant to reply to one of OP's comments. CC: /u/Lovelifeandliver
My Liquibase installation dates from 2016, version 3.5.0 I think (maven plugin version 3.2.0). I don't know when the feature was introduced, but the `rollback` target is mentioned in StackOverflow answers as old as [this one from 2012](https://stackoverflow.com/a/11145866/6404321).
He didn't say it was always compiled to a native executable only that it can be. Which is true. GraalVM as well as a few other solutions support native executables.
To add to the list provided by other people: embedded systems. A colleague of mine worked on an embedded project and everyone knew Java, so they went with Java over the usual low-level languages like C++. It is actually possible (though not recommended) to get access to low-level memory access methods with the Unsafe class to gain performance. Netty uses this stuff internally, and probably many other libraries that need to provide high performance. He also told me that they were using quite complex multithreading code to eek out performance gains, but I don't know the details of that.
&gt; HttpServlet + JSP is more than sufficient. Technically, it's not, because what is going to run the servlet? The app server is a framework of its own!
&gt; Just pinging in to say it is not compiled to a native executable I think s/he is trying to say that it *can* be compiled to a native executable by using tools that are somewhat complicated (i.e. not only the standard javac/jar but some native packager, Graal, maybe Excelsior, etc.)
Kindly stop spamming your website, please. With this and any other of your alt-accounts. Neither with saif_sadiq nor with heliumsingh nor with LazyWillingness (that one didn't get much traction, didn't it?) nor ValuableTreacle nor AgileBother nor any other ones I might have missed.
Java is mostly used for backend services, like web apps, web services, distributed systems, batch processing, etc. It is also used on the frontend (applets, Webster, swing, javafx, etc.), but the startup time has traditionally been an issue, as well as sticking out like a sore thumb compared to native apps. James Gosling defended this design because Swing works the same on any platform, while native applications will behave differently on different platforms. Java rocks on the backend because once the JVM has had an opportunity to warm up, it is lightning fast.
We use Java for all our services. Ranging from web services to data processing and analytics. We don't distribute software, but you can do that. With Java 9 we got the Java Module System which allows you to distribute your application with a JVM which has only the parts required. That will hopefully change the landscape for distribution of Java desktop apps- no more need to download a JRE
Should I look into JavaFX. Or rather is it worth the time investment? Will it be obsolete at a certain point?
Swing is the better choice if your primary consideration is employment opportunities. While Swing development has stopped in favor of JavaFX, it has kept it's popularity. That said, desktop Java is much less common than say Java for the web or cloud. I prefer JavaFX over Swing and would develop a desktop app in my own time using it but I'm not sure I could recommend JavaFX for most people looking to improve their job opportunities.
A senior developer, the language is irrelevant, can explain to the stakeholders why the solution is the way it is. Can talk to the business in their own language and make estimates that are in the ballpark of reality. They are able to dissuade less experienced developer from using whatever is fashionable (Gradle, Reactive etc...) in environments where it doesn't fit. After all, there's more to a system than the tech stack it's built on. Maintainability is king unless you work in a start up, then again, if that's the case, you're probably using Node. :-)
I think a lot of people would be shocked to see how much backend stuff is ran on Java. I’ve got Java processes that have been running for months, some much longer. It’s all just data processing, nothing web related.
What would be your alternatives to annotations? Everything I can think of would be worse (e.g. XML) or equivalent (properties) or dubious (even more autoconfig or removing features entirely to avoid "too many annotations").
Sure, you can label the app sever as a framework, but you could also call the OS, JRE, hardware drivers, etc. "frameworks" as well. All of the frameworks being discussed also need an app server. So, given an environment that would run Spark, Javelin, Jooby, Micronaut, etc... "HttpServlet + JSP is more than sufficient." is still a true statement.
Learn to love the annotations, heh. There is some magic to them that might seem frustrating, but they really are nice to work with once you know what you're doing.
I appreciate that it is simple and straightforward enough, but I fundamentally don't like this. One of the advantages of working with java is that something like InputStream/OutputStream is the fundamental abstraction. These streams can originate from pretty much anywhere, from memory, disk, be composed on the fly, whatever. This provides them with flexibility, unlike having files on disk. The bad, old Unix way used to spill everything to files on filesystem, requiring a temporary location on disk, and some code to clean it up when you're done, which must happen even when exceptions get thrown or you risk running out of your temporary space eventually. And it is rife with security risks, such as overwriting files that reside elsewhere, or you may create files with highly annoying names such as one composed of newlines, unix option names like -rf, and so on. In general, we should be moving away from using files as much as possible.
Java can be used for everything C# can be used, but it's not limited to Windows. (C# isn't really limited to Windows, either, but it practice it's much more Windows-oriented than Java...) Java is often used as website backend, for example I don't know for sure what for example Amazon uses for their shopping website, but Java is very likely. Java is also used for writing various other server applications. And a big thing is Android apps.
&gt; All of the frameworks being discussed also need an app server Not quite true... spring-boot can (and does so by default) produce a self-contained jar that contains an embedded servlet container. So it doesn't need a 'app server' to run your app. I guess you could say it contains its own app-server. The important thing though is you don't get to deal with all the complexities of managing a separate app-server to run your app. Your app just runs all by itself.
Appropriate https://blog.cleancoder.com/uncle-bob/2015/08/06/LetTheMagicDie.html
&gt; Sure, you can label the app sever as a framework, but you could also call the OS, JRE, hardware drivers, etc. "frameworks" as well. Note the difference between a library and a framework. You can't label the OS or the JVM as a framework like an app server. In an ordinary J2SE app, you're using the JDK *class library*. In a native application, you're calling into the platform C library. With an app server, you are implementing a variety of interfaces which you configure the app server to run, either in the web.xml or with the new servlet annotations. Unless you're developing a Model 1 app based only on JSPs. But those get compiled into servlets by the JSP processing filter. How is that different than Spring? &gt; All of the frameworks being discussed also need an app server. Right, in each case the app server is bundled into the app, loaded as a library, rather than a separately maintained server.
Yeah, no worries!
I think Java isn't heavily used in those industries, to be honest. With Java (and any C/C++/etc language), you have to put a lot of thought and design into the floating point aspects of your tools. compounding loss of precision can lead to dramatically wrong results. You can always work this in Java with BigDecimal, or with one of the other libraries out there like [apfloat](https://github.com/mtommila/apfloat) and [jscience](http://jscience.org/) Languages like Python and R have, by default (if I remember correctly) arbitrary precision flops built-into the language. It's the reason Python 2.7 continues to stick around despite 3.x being out forever .. the scientific libraries.
&gt;some distributed computing concepts Sounds like [http://vertx.io](http://vertx.io) is at least worth a look.
I'm not sure how this appropriate, unless you're taking Uncle Bob's advice literally and are advocating writing your own DI before you use an existing one. But I do wholeheartedly reccomend not taking Spring Boot's magic annotations at face value and actually look at how the auto config is implemented. In most cases, it's really not that complex. Spring Security however is something else, although I'm convinced that's due to the complexity of configuring Spring Security (which you absolutely should not take at face value).
If you are open to using Kotlin, you could use functional bean registration: [https://spring.io/blog/2017/08/01/spring-framework-5-kotlin-apis-the-functional-way](https://spring.io/blog/2017/08/01/spring-framework-5-kotlin-apis-the-functional-way)
Pivotal and Gradle kicked that into touch when they announced first class support for Kotlin a while ago.
I’m a huge fan of Dropwizard, simple and flexible.
But if you ran it manually, does it work or does it fail due to a view being dependent on it? This is an issue with a dodgy script rather than the migration tool
It's less about writing everything from scratch and more about seeing the man behind the curtain and deciding whether to use the framework or not. This is also in a similar vein https://sites.google.com/site/unclebobconsultingllc/blogs-by-robert-martin/dependency-injection-inversion
Vert.x
If distributed process of data is a firm requirement something like Akka or Vertx. They both have great mechanisms for distributing work among a cluster. Although I am curious, you can achieve DI quite successfully through vanilla java (constructor injection). If you want more than that generally you enter annotation land so ya...
I've been strangling out an old etl app with SCG/Netty+WebFlux/Spring Data Redis (stream) /and Kotlin, and performance has been excellent and the development experience has been amazing. SCG is definitely different though.
I work with REST services made with Spring and outside of the rest controller itsef there are hardly any annotations.
I'm very anti XML/annotations/magic myself. I've avoided heavy-weight containers/frameworks like Spring in favor of light-weight libraries that allowed me to simple transform HTTP requests into responses with functions and map URLs to said functions in order to create RPCs - a simple, functionally composable approach. &amp;#x200B; I first tried Spark - and then Javalin (because of its great leader and cleaner API) - but there were still API issues that I didn't like. For example: the lack of immutable requests and responses; the fact that the main function signatures took both requests and responses as arguments and returned void (meaning everything was a side effect); and the heavy usage of god-objects that contained too much mutable data. &amp;#x200B; Then one day I stumbled on the answer: Spring! Youtube suggested a video about building a light-weight, REST API using Spring - "Webflux.fn": [https://www.youtube.com/watch?v=upFFlGq5-NU](https://www.youtube.com/watch?v=upFFlGq5-NU) &amp;#x200B; So far's it's been **great**. I've been able to create and describe services using nothing but values and functions. The only downsides I've encountered are 1) The performance of one of the main, underlying backend (reactor-netty) doesn't look great 2) Not all Spring advanced functionality seems easily (i.e. non-magically) accessible from Webflux.fn - like OAuth2 &amp;#x200B; And, finally, if you don't like/need the layer of reactive streams they've added, they've recently added WebMvc.fn.
It looks like in your [submission](https://www.reddit.com/r/java/comments/bdjy0s/stop_wasting_time_relearning_what_you_already_know/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
I think school’s should trach C first then C++ and then java probably
Using pointers helps u learn in deep how referencing works. Java doesnt have this depth in it
&gt;kicked that into touch It will never be mainstream. Love the footie reference by the way.
I disagree with C since you can roll OO principles in with C++ a lot more readily, but yeah. It's cool to know what C#, Java, and Python abstract away from the programmer.
Why do people keep suggesting Spring when OP specifically said it is out of the question? Take a look at vertx
A library to hold my data that has only 5 unit tests? Nope, not happening.
I expected this. Spring is the defacto framework in thy JVM ecosystem.
&gt; Before you commit to a framework, make sure you could write it. Do this by actually writing something simple that does the basics that you need. While I agree with this advice as a general principle, in practice I know I'm going to need certain things, like dependency injection in certain types of projects. I could waste time hand rolling it to prove a point, or I can apply some *judgement*. Of course, you really shouldn't blindly apply frameworks, and it's always a good idea to poke around the source. &gt; Dependency Injection is just a special case of Dependency Inversion [Dependency Injection is not the same thing as Dependency Inversion](https://lostechies.com/derickbailey/2011/09/22/dependency-injection-is-not-the-same-as-the-dependency-inversion-principle/)
https://github.com/spring-projects/spring-fu/tree/master/jafu
&gt; in C# I developed Windows exe applications or services, but what do I do in Java? This is one of the most annoying things about Java. There really hasn't been a perfect tool for creating native executables for Windows, macOS, and Linux. There are programs like Launch4j and other paid ones that are OK, but they're inconvenient to use for simple applications. Unless you need to distribute an application, you should probably just use the java.exe program found in the bin directory of your JVM (the best version to use is [here](http://jdk.java.net/12/)) to run your program from the command line using `java &lt;class name&gt;` or `java -jar &lt;jar file created by IDE or jar command&gt;` or just use your IDE's runner. It used to be that desktop Java applications would require the end user to install a Java "JRE". However, that is being phased out and you're better off just giving end users a copy of the JVM. If you really want to create a nice .exe for people to use, you'll have to use C or C++ to write a program to call Java Native Interface (JNI) functions to start the JVM and call your main method. You can then compile your C/C++ program to an exe. Otherwise, just use the java command with the proper arguments.
This is /r/java, not /r/javahelp. Challenging the OPs preconceptions makes for interesting discussions, as both points of view are debated, even if it has nothing to do with what the OP asked about.
I'm not sure I even know what you're arguing at this point... But yeah the _judgement_ is the entire point, which you're minimizing. In other words understand shortcuts before you take them, like writing using the mvcconfigurer like you suggested vs using annotations.
&gt; I'm not sure I even know what you're arguing at this point... I'm directly referencing the link you posted. &gt; In other words understand shortcuts before you take them, like writing using the mvcconfigurer like you suggested vs using annotations. That's fine, you should always learn pure Spring Framework without the auto config of Spring Boot, but there's no need to waste time with WebMvcConfigurer in an actual project just to prove the usefulness of the Spring Boot autoconfig, as Uncle Bob was suggesting.
Thanks for this, being waiting for this update quite a long time now.
The subreddit doesn't matter. The discussion so far has been less about challenging OP's preconceptions, and more about people recommending what they're comfortable with. I would wager that most people in this post recommending Spring have never written a relatively complex Java without using Spring.
I'm taking data structures and low level programming in c/assembly and I hate c and assembly.
**Jaybird** is a JCA/JDBC driver for Firebird. Jaybird is the way to access Firebird databases from a Java application (or any other language running in the JVM). [github wiki](https://github.com/FirebirdSQL/jaybird/wiki) **Firebird** is an open-source SQL relational database management system. [wiki](https://en.wikipedia.org/wiki/Firebird_\(database_server\))
It looks like in your [submission](https://www.reddit.com/r/java/comments/bdltqi/composition_interface_polymorphism_what_design/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
I use Java Spark in Production. Works well. Simple. Use it on several personal projects. Easy to get going. Cons: I can’t find a way to support web sockets for a sample chat app with multiple rooms such as Slack clone. And can’t find a way to use typed routes. The routes are defined as long strings. Ideally I would create a route object and then append another route to that so the parent route is reusable. I’ve been bit by typos in my routes. This is minor. Been meaning to try Javalin too.
Many years ago, I went in on a Saturday to get an early start on the weeks work because I knew I'd be taking the following Friday off. My key didn't work on the door. Made for a stressful weekend. Long story short - &gt;50% of the company let go on Monday. Those of us that survived told to come in on Tuesday.
Thanks, this was really helpful.
I have. I have several Dropwizard applications in production right now, and a smattering of apps using other backbends. I now recommend Spring Boot for any new start at my company. Nothing available today gives you the same bang for your buck. As a rough estimate, I'd say a Dropwizard app has between 5 and 10 times the line of code count as the Spring Boot equivalent. Spring devs also grow on trees, so if I need to staff up (or hand off maintenance), finding manpower is trivial. Unless there is a *very* compelling reason, Spring Boot is the go-to, and I think it's earned that position.
It looks like in your [submission](https://www.reddit.com/r/java/comments/bdmu1u/reoccurring_pattern_in_reactorwebflux_is_this/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Two of the things I use most run on Java: IntelliJ IDEA (written in Java + Kotlin) and my Sony blu-ray player. So, with that being said, Java can be used for Desktop and embedded applications in addition to what most people have said already -- server/backend applications.
It looks like in your [submission](https://www.reddit.com/r/java/comments/bdnv9c/how_can_have_do_something_after_all_tasks_given/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Spark?
It's generally better to ask beginner questions at r/learnjava but in short you want an IDE like Eclipse, NetBeans or IntelliJ. You also have to install the JDK to be able to compile Java programs.
First: you are in the wrong subreddit. /r/learnjava is for learning related questions and /r/javahelp is for programming related questions. Do a good course, like the MOOC [Object Oriented Programming with Java](http://mooc.fi/en) - the getting started page there tells you what tools to use and how to set them up. There are 3 major Java IDEs (Editor + Compiler + Debugger): + Eclipse + IntelliJ (Community Edition is free) + Netbeans
What's wrong with the `java.util.zip` API?
I've written a spring boot autoconfiguration before. There's really nothing special about them. You list the class name in a well known property file in your jar and Spring just adds it to the list of configuration classes for your app context. You can take advantage of the conditional annotations that add beans based on the presence or absence of beans, classes, properties etc, but you don't have to.
Can anyone recommend a platform that can do virtual service subscriptions as a service? Billing, users, emails, list of products that can be subscribed, levels (free, expired, paid), etc? Free or low cost. I’d prefer spring. But haven’t found anything that lets me sell a virtual service for $xx/month or $yy/year. Thanks in advance!
have a look at [http://ninjaframework.org](http://www.ninjaframework.org/)
Spring is the way to go, I mean if you look for experience in the future.
You should switch the language if you hate annotations. You do not want to avoid them in Java.
Another tool to package a Java application or create an .exe wrapper is [http://launch4j.sourceforge.net/](http://launch4j.sourceforge.net/) which works quite well.
Saying that "Spring is out of the question because annotations" is like saying that Java 8 is out of the question because streams and lambdas: **you're discarding the best tool because of a feature that you don't even have to use if you don't want to** (but it would make your life way easier if you did).
&gt;./java -version \-version must at the end. For example: ./java -version -XX:+WTF -XX:WhatEverParam openjdk version "12" 2019-03-19 OpenJDK Runtime Environment (build 12+33) OpenJDK 64-Bit Server VM (build 12+33, mixed mode, sharing)
Machine learning. See Weka, JCLAL, DeepLearning4J for example that are written in Java.
To be fair, while Streams and Lambdas are some of the best features in Java 8, they're actually pretty shit compared to what you'd get in Scala or Haskell, for example. So if someone DID say "I really hate Java 8 'cause of all the Streams and Lambdas", there are some decent alternatives to point them towards.
Nowadays C# is used for cross platform development also, so there's almost no difference from Java, except Java being more dominant in the majority of the world and C# having more features. If there's plenty C# jobs in your country/area I would personally prefer sticking with C#.
Java is used to power a lot of the underlying architecture of enterprise applications and "web" applications such as apps or web sites. Java's ecosystem makes it especially well suited for backend stuff which communicates through web services such as REST or even SOAP. It sits well in the middle between persistent storage such as a database and some user facing stuff like a web site or app.
Is a possible way, but uncommon. [UML](https://en.wikipedia.org/wiki/Unified_Modeling_Language) is the commonly used standard. However, your post is not really fitting for /r/Java as it is not about "News, Technical discussions, research papers and assorted things of interest related to the Java programming language". It would best fit in a general programming subreddit, like /r/learnprogramming.
I'd rather advise you to go with backend web development first it's a much larger market
Unfortunately Minecraft will not work on JDK11 at the moment (they use some classloader internal magic that was changed around java 9). And these programs probably too. You can still use [Java 8 from Oracle](https://javadl.oracle.com/webapps/download/AutoDL?BundleId=236888_42970487e3af4f5aa5bca3f542482c60) for that - it is free.
You don't need to switch to OpenJDK 11 to run Minecraft. This whole stuff with migration to OpenJDK 11 and so on is for the programmers to do. These launchers you talk about don't work with JDK11 because they search for Java entries in windows registry, not enviromental path variable. You can still use [Java 8 from Oracle](https://javadl.oracle.com/webapps/download/AutoDL?BundleId=236888_42970487e3af4f5aa5bca3f542482c60) for any programs that require it. It is free.
Minecraft uses some internal classpath magic that changed around java 9, so I don't suppose it will work on JDK11. Use Java 8 for that, wait for them to fix that. Just for the info, official Minecraft comes with oracle jre8 and it works on that.
https://www.reddit.com/r/learnjava/comments/bdaust/is_javafx_worth_learning_in_depth_still_in_2019/
Great reading! Great article and interesting ideas about something I never thought about before. I wonder if some of your findings could make their way into the jvm, combining your improved algorithms with access to String internals. Also, I was thinking about how well your algorithms could perform of the text and pattern where heavily utf-8 based, like a long Chinese text. You tried with random bytes, but utf-8 is full of surprises. So nice out you to put your time and effort in sharing this detailed analysis. Thanks you!
&gt; spill everything to files on filesystem you know named pipes aren't really files on disk? Like java streams, they can originage from memory, network, be composed on the fly, etc.
You seems to agree with most of the philosophy behind [Spincast](https://www.spincast.org). Have a look! * [Dependency Injection](https://www.spincast.org/about#dependency_injection) * [Plain Java code over annotations](https://www.spincast.org/about#annotations) * [What about Spring Framework? ](https://www.spincast.org/about#spring) Spincast goal is not to be the fastest though.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
awesome work, as always, thanks a lot for sharing @mraible !
A web framework is a front-end framework surely! It should not interfere with your application code. Probably why we use Ratpack. Nothing of it is used past the web layer.
Thanks,. As I said, I don't think I invented anything new, and JVM designers are very likely to know more about text searching than any of us. As for UTF-8, that is an interesting topic. The structure of UTF-8 allows all the mentioned algorithms to work with it - you can search UTF-8 just as a byte blob. The performance, however, is another story: the multi-byte nature of characters will affect shift tables and trees. I'll try to run a test, as soon as I find a long enough Chinese text.
You also need to deal with unicode normalisation, so that combining characters match their single glyph counter parts.
I highly recommend using the Java Micro-benchmark Harness when testing the performance of various options, because it deals with all the work to make sure you get representative results.
This is what I would do in your situation. Pick one of the may University resources for java [heres a good one](https://introcs.cs.princeton.edu/java/home/). Find a secondhand university bookshop and get some used inexpensive comp sci text books that would support such a course. Also I would get a good Linux book and a good comp sic text book for operating systems(difficult but worth while subject). [The classic opp systems](https://www.amazon.com/Operating-System-Concepts-Abraham-Silberschatz/dp/0470128720). To work as a java dev you tend to need to know everything
Screw everybody else Latin-1 or nothing :D
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
I found some long enough Chinese text and ran a study in UTF-8 (see the Update in the article). The last-byte and its family performs the best, then the suffix-based ones.
It looks like in your [submission](https://www.reddit.com/r/java/comments/bdxifl/play_framework_java_dependency_injection/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Thanks. There is also one from Eclipse https://www.eclipse.org/openj9/ From our internal discussions (just a small company and we have no clue about environments - we just write Java code): Amazon or Redhat seem to be the best options (for us). Amazon is probably to big to fail, I guess. And it might have if its benefits if you switch to AWS. Looks pretty solid, IMO. There is also release cycle. I think having 8 and 11 - who wants to update every 6 month? We don't really need the option to have 8,9,10,11 and 12. Just run LTS versions - updating Java on all servers is always a hassle for nothing.
If you really need to compile into exe, the Excelsior JET (https://www.excelsiorjet.com/) is as easy to use as just about any other native compiler, such as GCC. The clear disadvantage is platform-dependence: the exe will only run on the platform it was compiled for, and the number of platforms supported is smaller than those where JVM works. All that said, I really don't see the problem. Typing "prog.exe" is as easy as "java Prog", and installing JRE these days is quick.
Plain old Java EE?
Well written and extensive.
Famous [https://www.coursera.org/learn/algorithms-part1](https://www.coursera.org/learn/algorithms-part1) &amp; [https://www.coursera.org/learn/algorithms-part2](https://www.coursera.org/learn/algorithms-part2) won't hurt and prepare you to the industry &amp; interview.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
?????
Check your path. I think the installer automatically adds it to your path.
Very nice article! I have experimented myself with many of the approaches over the last decades. Here are a few first thoughts: - You may have given up on the hash approach too early. Use xor and shift for the hash and mask out the overflow chars. This gives a tight inner loop with linear memory access and a single branch that only causes a prediction miss on a match for short patterns. This performs especially well in programs where most of the work is done elsewhere with occasional quick string searches in between. - The Java JIT does not like switch instructions a lot (both tableswitch and lookupswitch), even for tightly populated number ranges. In generated code you can typically outperform a switch with a unrolled binary search either as if/else cascade or a nested ternary expression. - The infamous unsigned masking of bytes in Java (`arr[idx] &amp; 0xff`) is unfortunately not free. I often got better results working with the signed values directly (this is neutral for the hash). - Benchmarking suites like JMH can produce rather misleading results. They basically measure in a perfect environment where all CPU resources can be dedicated to the tested code. This makes solutions that occupy a lot of cache look more favorable than they are in real world applications where they would kick other stuff out of the cache. I don't think there is a impartial benchmarking environment for Java. I prefer to test various alternatives in the environments that they are meant for and compare the execution time of complete application use cases to decide which approach works best (this is also where the hash shines). - For actual general purpose indexOf implementations I typically use a mixture of your FirstByte and LastByte (Boyer Moore) approaches depending on the length of the text to search. Your results are encouraging to experiment with the various suffix approaches. So far I usually only use them for lexers and parsers. - Working with raw byte and char arrays generally performs best. Use explicit checks against 0 and array.length directly in loops to allow the JIT to detect the bounds checks. You have confirmed my experience that the access of String chars through charAt is very expensive. There used to be a decent String representation from Java 7u10 until before Java 9 that was based on a plain char array. For that implementation it was possible to improve the performance of real world applications substantially with various hacks that allowed direct access to the internal char array of a String. This is the one I use: package magic; import sun.reflect.MagicAccessorImpl; public class StringAccess extends MagicAccessorImpl { public static char[] getChars( final String str ) { return str.value; } public static String create( final char[] chars ) { return chars.length == 0 ? "" : new String( chars, true ); } } - With specifically tuned libraries this resulted in at least twice the performance compared to regular String access in pretty much all my use cases especially in code that uses all CPU cores. You need of course make sure not to alter the contents of the char arrays that are referenced from String instances. It even gives massive boosts in applications for which the profiling data seems to suggest that String access is not a major issue, probably due to lower GC pressure and other less obvious factors. The Java 8 JIT seems to love that code and in comparison it dwarfs all improvements since Java 9 where the the String representation got botched again for a measly memory optimization that mostly benefits bad code. - Have fun comparing this to C and C++ implementations. I have done a lot of text processing in both environments. The Java JIT often turns out to be quite competitive with a few tweaks. Sometimes a C implementation can be a hint that there is still some room for improvement in the Java implementation and vice versa. Sometimes Java outperforms even decently optimized C code. I.e. my SHA-1 implementation in Java that is not much fancier than the official spec with all macros inlined has beaten all C/C++ libraries that I have tested, only the assembly implementation from Intel has been faster so far.
hahaha get it we talk like children about pets!111!!11111!
Path? I'm not the most computer savvy so I will need some explaining
Normally either *C:\Program Files\Java* or *C:\Program Files (x86)\Java*. Like most programs. Also the environment variable %JAVA_HOME% should have been set and added to %PATH%. So you could `java -version` on terminal.
Nothing new. Just get the OpenJDK (also Oracle but still).
But the JDK has now been completely open sourced for the first time ever, there are no more commercial features, you don't need to sign in or even check anything to download, and the Java license has been greatly simplified: OTN for those who want to buy support, GPL+CPE for those who don't. So, things are moving in the right direction, no?
Java itself is not a program that creates a desktop icon and you simply open (like Excel for example)
No, no, you don't understand : Java BAD
If the wizard says it's finished than it's ok, install is complete. Nothing should pop up, java is not a program you can run by double clicking an icon. May I ask why are you installing it in the first place if you're not tech savvy?
Lol
Java devs have plenty of experience with pointers. Java just calls them references and it confuses people. Java references are much closer to a C pointer than a C reference. The only real difference between a Java reference and a C pointer is that the C allows for arbitrary pointer arithmetic in the memory space. Think about what a non const C pointer would be without the pointer arithmetic. It is pretty much a java reference. Just like a const C pointer without the pointer arithmetic is essentially a final Java reference. Everything in java is pass by value at its core. We essentially pass references by value. This is the reason we can do things like assign a new object to a method parameter without changing the reference that was initially passed to the method by the calling code. If Java references worked like C references, assigning a new value to a method param should also change the object the reference in the calling code is pointing at, which it does not. Also, very few data structures actually rely on explicit memory layout. Specific implementation techniques may rely on it, but the abstract details mostly do not.
You could abuse https://docs.oracle.com/javase/9/docs/api/java/lang/invoke/MethodHandles.html#byteArrayViewVarHandle-java.lang.Class-java.nio.ByteOrder- to compare multiple bytes at one time. I don't think it'd be faster yet though. I don't like your loops. Generally the JVM can only properly understand or best optimize very, very simple loops. As much as possible I'd have multiple simple loops over one complicated one. In the same vein, that also better lets you rely on standard library methods. I can't quite see if it's possible to use Arrays.mismatch or similar somehow though.
&gt;Java JIT does not like switch instructions a lot I have noticed this. Only time I seem to get good performance is with something like this: switch (len) { case 8: val = buffer[i+7] &amp; 0xFFL; shiftAmount = Byte.SIZE; case 7: val |= (buffer[i+6] &amp; 0xFFL) &lt;&lt; shiftAmount; shiftAmount += Byte.SIZE; case 6: val |= (buffer[i+5] &amp; 0xFFL) &lt;&lt; shiftAmount; shiftAmount += Byte.SIZE; case 5: val |= (buffer[i+4] &amp; 0xFFL) &lt;&lt; shiftAmount; shiftAmount += Byte.SIZE; ... I assume `break;` is just a jump instruction but it seems to be a killer. Better to use L1 cache lookups and do some out-of-order execution while you're waiting. Is latency about 3 cycles either way?
I wanted some mods for Minecraft I'm not a little kid I'm just not experienced in installing wizards and stuff to phrase myself better
I gotta admit I only skimmed the article, but did you not try the [Knuth-Morris-Pratt algorithm](https://en.wikipedia.org/wiki/Knuth%E2%80%93Morris%E2%80%93Pratt_algorithm)? That seems to be a good choice for this problem, especially if you're searching for the same pattern in multiple strings.
I've read this with great interest, and after giving it some thought I wrote a matcher that beats all of the matchers so far. It relies on a hash table of configurable size, where it stores hashes of pairs of bytes. With a table of 16 kB it beats both LastByteMatcher on any size input as well as all the SuffixMatchers. Numbers on my machine for "text": test type: text Test: LastByteMatcher LastByteMatcher: 4: 1292 1309 1303 ; count= 1910271; bytes=750640000; ns/byte= 1.7212 LastByteMatcher: 8: 759 750 754 ; count= 38937; bytes=750640000; ns/byte= 0.9991 LastByteMatcher: 16: 473 485 475 ; count= 15000; bytes=750640000; ns/byte= 0.6301 LastByteMatcher: 32: 322 324 325 ; count= 15000; bytes=750640000; ns/byte= 0.4290 LastByteMatcher: 64: 246 245 242 ; count= 15000; bytes=750640000; ns/byte= 0.3224 LastByteMatcher: 96: 208 207 208 ; count= 15000; bytes=750640000; ns/byte= 0.2758 LastByteMatcher: 106: 177 176 175 ; count= 15000; bytes=750640000; ns/byte= 0.2331 Test: SuffixMatcher SuffixMatcher: 4: 1487 1490 1524 ; count= 1910271; bytes=750640000; ns/byte= 1.9810 SuffixMatcher: 8: 1046 1032 1010 ; count= 38937; bytes=750640000; ns/byte= 1.3455 SuffixMatcher: 16: 577 579 596 ; count= 15000; bytes=750640000; ns/byte= 0.7687 SuffixMatcher: 32: 357 358 356 ; count= 15000; bytes=750640000; ns/byte= 0.4743 SuffixMatcher: 64: 224 220 224 ; count= 15000; bytes=750640000; ns/byte= 0.2931 SuffixMatcher: 96: 160 157 156 ; count= 15000; bytes=750640000; ns/byte= 0.2078 SuffixMatcher: 106: 88 87 87 ; count= 15000; bytes=750640000; ns/byte= 0.1159 Test: TwoByteHashShiftMatcher TwoByteHashShiftMatcher: 4: 1218 1212 1248 ; count= 1910271; bytes=750640000; ns/byte= 1.6146 TwoByteHashShiftMatcher: 8: 544 542 543 ; count= 38937; bytes=750640000; ns/byte= 0.7221 TwoByteHashShiftMatcher: 16: 265 263 265 ; count= 15000; bytes=750640000; ns/byte= 0.3504 TwoByteHashShiftMatcher: 32: 140 140 138 ; count= 15000; bytes=750640000; ns/byte= 0.1838 TwoByteHashShiftMatcher: 64: 88 88 89 ; count= 15000; bytes=750640000; ns/byte= 0.1172 TwoByteHashShiftMatcher: 96: 72 70 71 ; count= 15000; bytes=750640000; ns/byte= 0.0933 TwoByteHashShiftMatcher: 106: 64 64 64 ; count= 15000; bytes=750640000; ns/byte= 0.0853 For "random" it performs very well, beating or closely matching the best values. For "big" it performs similar to LastByteMatcher, except it is much faster on the smaller patterns (8x faster on the 16k pattern, same speed on the 1 MB pattern). I can send a PR.
After reading that wiki, that sounds like what the LastByteMatcher (and derivatives) are doing -- they skip an amount of characters based on where the mismatch occurred using a pre-computed table.
I think you're looking for /r/indonesia
yeah - just trolling
This infographic summarizes licensing and support options after Java 11.0.2
I want to see evidence of extracurricular activities. Back in the day, before it was popular, Google looked for Python experience in their Java developers. Since it wasn’t popular yet, having experience with Python suggested someone who loved coding enough to teach themselves to do it on their own time. I can teach you how to do a project. I can’t teach you how to solve problems and learn technologies you haven’t seen before.
Something that builds and is "deployable". I want to be able to do a `git clone` and then `mvn package` and `docker-compose up`. It doesn't have to be great, but I want to see the application run. With `mvn package`, it shows understanding of the build system. Far too often I see projects that are checked in with eclipse settings files and specific links to other projects in those files. The way the apps are deployed is "export runnable jar" from Eclipse. Nope. `docker-compose up` implies that there's other parts to the application. There's a mysql or postgresql database sitting along side the application. Its not just a "this is something I wrote" but rather "this is something that I wrote that works with other things." It also shows understanding of how to build a container and that "IT work" isn't something that is icky and no self respecting developer would touch (all too often seen in /r/cscareerquestions ). If the application goes beyond this, with a front end written in react, that's even better. The key thing is that the application should be deployable with those three commands... if its not deployable with those three, at least buildable with a `git clone` and `mvn package`.
So, I have done plenty on my own and haven't ever had the opportunity to present that in an interview and am discouraged from putting it on a resume. I've had about 1.5 years professional experience but, I have a website, a couple of android applications, a pretty deep and wide attempt at a web application using a collection of libraries, testing, you name it (it's incomplete but, the code can speak for where I was at the time). How do I sneak the mountains of solo stuff into an interview because it seems employers say they want independent work but, give you no channels for proving/presenting it?
How many points do you lose if you use something like jhipster to make the react/angular front end if the back end has a problem that deals with complex polymorphism and fancy math with good unit test coverage?
Just anything. Maybe you tried to make a mobile app for fun, or a backend for your website, or some rudimentary old school Swing app. Also most college kids worked on a group project that they list on their resume. I usually ask a lot of questions about their role to get a feel for what they did. If they don't have a solid answer it's probably a bad sign. Now.. ideal would be a spring boot project managed in git, dependencies managed with maven or Gradle, with some rest controllers and some basic unit tests. That'd be great but I wouldn't really ever expect it.
None. Its about the parts working together. The front end could be anything. It could be a open api yaml file that I could plug into postman (or any other similar tool) that would allow me to cleanly fetch the json that the app spits out. It just needs to be complete and deployable.
Other day I noticed this [https://www.reddit.com/r/java/comments/avsjp2/what\_is\_some\_beginner\_java\_backend\_work\_i\_can\_do/](https://www.reddit.com/r/java/comments/avsjp2/what_is_some_beginner_java_backend_work_i_can_do/)
I know A LOT of companies that would hire somebody as an intermediate if he can use java/docker/react properly. OP is asking what you need to be hired as a junior developer, if a guy ask that much from you I wouldn’t recommend joining his company, because he will fire you as soon as you ask a question that he consider to be simple....
Who’s discouraging you from putting, say, a link to your website or Github on your resume? I agree that tech interviews leave a lot to be desired. Some of that is just company policy at large companies or government agencies. For legal reasons, they may have to ask everyone the same questions in the same order, that sort of thing.
&gt; How advanced should his knowledge be that you would consider to hire him? Literally anything. We've hired people who did not have a portfolio at all, so even "absolute zero" is good enough for us to *consider* hiring you. &gt; What kind of projects would tell you he is good enough to be hired as a junior/associate programmer? No such project exists, both because (1) we can't always be sure you really are the author of the projects that you claim to be the author of and (2) there other skills than just the ability to write code that are necessary to be a successful software developer. Even if you have a spectacular portfolio, we're still going to interview you, and you may still fail the interview.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Newbie programmer means newbie ... why should he have an extended portfolio as he will have to learn from you ? It's crazy now to see that companies accept junior developers but with a portfolio but with expertise in W, X, Y, Z techno / languages, but with the ability to work without being mentored, but etc etc. He will have a trial period anyway, and you won't be able to see if he can solve problems and comes with solutions without testing him.
I literally have all of that plus adding spring security and applied for a junior dev position and still didn't get it. Not sure what I did wrong. How else should someone go about show casing this?
One Never really knows why you don't get an interview. Doesn't mean you did something wrong.
Not HR, but I do conduct technical interviews for Java positions at my company. I look for a couple things right off the bat: -- Communication skills. Talk to me, sound interested, ask questions, have a conversation. I want to feel like I could go to a bar with you and not be embarrassed. -- Non-school-related experience. Show me you want to and are able to learn on your own. GitHub accounts are a huge plus, as well as being able to talk intelligently about your pet projects. -- Testing and edge case examination. I give thumbs ups a **lot** more often to candidates who showed me that they will try alternative inputs, that they can write unit tests, and that they understand what might break their solution. Additionally, every interviewer ever wants to hear you explain your solution. Tell me and everyone else who interviews me about your approach and why you're doing it that way - ideas speak louder than code sometimes. Finally, **listen**! If an interviewer suggests something or asks why you did something a certain way, consider your approach and if something they're hinting at gives a better solution. The hardest no's I give to candidates are the ones who think they're the smartest people alive and will absolutely not listen to what I'm trying to say.
Upvote for this because i'm a beginner java student and i want to be a better programmer. I'm starting to get curious about how back end and front end is develot
The penalty will be gone when Value Types roll around [https://simonbasle.github.io/2017/11/whats-next-after-java-9/#value-types](https://simonbasle.github.io/2017/11/whats-next-after-java-9/#value-types)
For me, I’m just looking at the high level technologies you have worked with and stuff you are interested in. If you pique my interest I’ll do an intro phone call to get a better picture of who you are and what you’ve worked on. I’ll probably ask more in depth questions about the things you listed to make sure you aren’t just fluffing up your resume, and if you pass the first smell test you can move on to our coding exercise. I’m not the type to judge a junior dev based on what’s in the their repos
Yeah I second this. I put my GitHub on my resume and it usually just came up. Either they took a look at it before or were asking me what kind of projects I had on there. Just make sure you write a little explanation on each of your projects.
From new programmers, I am frankly not looking for anything skill-wise. I am looking for passion: passion to code, passion to learn, passion to learn from the experience your colleagues have to offer. If you can display your passion by showing me a VB project you wrote, or even a list of "things I've always wondered about", wonderful. Otherwise, just be cheap :D
There are a thousand reasons completely outside your control for why you may not be selected. If I came across your resume you would get an interview, but HR screens you first and I don't get to tell them what to look for. Most companies don't have an HR as innovative and advanced as their IT department.
I haven't looked at the details of it and the usual a Point example doesn't answer it: can a value class contain a non-value member that would be needed to store the unit (assuming such library would allow custom units besides a limited fixed set)? Also, it doesn't solve a deeper issue that the units actually don't need to exist at runtime at all. They only need to exist at compile time to check them and generate the correct conversions with their multiplier. C++ allows for such unit libraries with zero runtime cost, value types still wouldn't. It makes a massive difference in memory use if every one of the millions of numbers has an equally sized field for its unit which is the same.
you have to sign in to download jdk 7
 &gt;sudo mkdir /m1data/programs &gt;cd /m1data/programs &gt;sudo nano HelloJava.java // Compile the program sudo javac HelloWorld.java // Execute the program sudo java HelloWorld Has the author even used Linux before? Why on earth do people create a directory with root permission, create a "HelloWorld" java program inside it, and run the program with root permission?
&gt; I'm not the most computer savvy Tell us why did you install Java and what are you trying to do
Because `/tmp` would be too convenient. /s
Nice, they managed to squeeze out the update for the new Japanese era before it started -- Oracle JDK 8, 11 and 12. AdoptOpenJDK isn't updated yet, nor Oracle OpendJDK, but at least Azul Zulu (tested latest 8, 11, 12) seems to support it as well.
If that's the case, installing mods is probably not a beat idea. You could unknowingly install some malicious software or break something
It looks like in your [submission](https://www.reddit.com/r/java/comments/be5036/is_it_possible_to_propose_new_java_keyword/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Can I ask you honestly how often you download a junior candidates project from their github build it and run it? Most I’ve ever done is looked at the github and had a glance at the code/context so I can ask them questions about it in the interview. There are too many candidates and so little time, plus I’ve got an actual day job to do.
It looks like in your [submission](https://www.reddit.com/r/java/comments/be58tu/confusion_regarding_new_licensing_policy/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
The Oracle OpenJDK isnt getting a 11.0.3 release. The Japanese era change made it into 12.0.0. We did get advanced warning of the era change. Usually you don't.
Japanese era changes are in upstream OpenJDK [11.0.3](https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html) and [8u212](https://mail.openjdk.java.net/pipermail/jdk8u-dev/2019-April/009115.html). It is expected that downstream builders would pick it up "soon". I don't think Oracle publishes OpenJDK builds for 11.0.3, or anything later.
&gt; The Japanese era change made it into 12.0.0. Not the one with the correct name (using the placeholder 元号 instead of 令和), as it was only revealed to the public on 1st April. It's a busy month for many Japanese companies pushing the era fixes out within a month, although, like with JDK 12, the main logic could be done well beforehand.
Ah, okay. I just remembered the era change being in the release notes.
That sounds interesting, please do (I never fully understood the mechanics there, I thought everyone could commit into public repositories, but if PR is needed, please send one). Could hashing of bigger sequences be an option, too (triplets, quadruplets of bytes)?
I'm mostly looking for evidence of being able to learn fast, and be autonomous, e.g. teach the job for themselves in period that isn't like several years. We are a small company and everyone tends to be very busy, so that's just how it goes. So, if candidate does things they weren't taught in school, that's a huge plus. If they have formed thoughtful opinions of the technologies they are using, that suggests they probably have autonomous capabilities and some critical thinking skills. The final assessment I do is the quality of the work, e.g. is it sophisticated, straightforward, elegant, that kind of stuff, and the degree it appears to be copypasted from stackoverflow answers without changes, or the learning materials endemic to their school. In my experience, simplicity of implementation is most of the time a plus, so, if the purpose of a REST api endpoint is to, say, save a record to database, I'm OK with even a naked INSERT written in Java string, which may raise a few eyebrows here. However, I think that this level is fine for a beginner, and generally probably better way to go than bringing in large libraries for every single task, because at least you end up learning some of the low-level way things work, which is also important even if not necessarily very productive.
&gt; I thought everyone could commit into public repositories How would that not lead to complete disaster?
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
It looks like in your [submission](https://www.reddit.com/r/java/comments/be5nmv/java_fx_scaling_on_linux_on_a_4k_screen/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Honestly, I don't think it really matters. If you have no prior work experience, your side projects are not really going to make that much of a difference in your output. I know many people say that if they see this or that in your CV/portfolio then that shows a particular inclination for foo or bar but, although I respect their opinions, I don't think there is any evidence to support such claims. Besides, I don't think it's fair to expect candidates to do loads of programming in their spare time because it doesn't promote a good life/work balance: some people may have commitments or family situations that prevent them from having spare time, which means no personal projects to show off... but that doesn't mean they can't be good professionals. My personal opinion (and I accept many people will disagree with this) is that you should avoid the companies that expect you to have loads of side projects, because that's usually the type of company that expects you not to have any life beyond the company. It doesn't matter how many perks they offer or how good the name of the company looks in your CV, I consider it a selfish and unjust approach on their part, and we shouldn't encourage them by falling prey of their tactics. If you're inexperienced, you're inexperienced. Look for a company that is willing to recognise that fact and invest in you.
Good point. Referencing &amp; indirection are basic building blocks. They are everywhere, even in Brainfuck. &amp;#x200B; In reality typical Java programmer worries about pre-built libraries and frameworks. Some ogranizations (I worked with one) forbid any hand written "algorithm". They should be only from well supported 3rd party library (from Apache or Google). It is doesn't matter how smart/educated you are, the most important is how smart/educated a person is after you ))
Thanks! Regarding the hash approach: I liked the idea of a symmetric hash (the same or similar procedure for add and remove), to simplify code. If we don't perform complex bit manipulations (such as CRC32) but just shift old bits left, this can be ralaxed by just shifting the removed bytes left appropriately. The problem I see there is limited number of bytes the hash depends on, unless we use a rotating shift, which is not as cheap in Java). However, it's worth trying, ans for short patterns and 64-bit hash it can work. &gt; In generated code you can typically outperform a switch with an array lookup or a unrolled binary search either as if/else cascade or a nested ternary expression Makes sense, I'll try. &gt; The infamous unsigned masking of bytes in Java (`arr[idx] &amp; 0xff`) is unfortunately not free Why, by the way? When byte comes out of array it must be sign-extended anyway, so it is just a matter of using `movzx` instead of `movzx` &gt; Benchmarking suites like JMH can produce rather misleading results I would say this is a feature not of JMH or any other suites, but of a benchmarking as a concept. However, I don't see a tragedy here. Textbooks are full of algorithms that were benchmarked on the MIX machine if on any. Standard and custom libraries are full of code that was tested, tuned and optimised in isolation. Obviously, using this code in real-world projects mustn't be blind. A programmer must be aware of various features of the implementations, such as memory consumption, memory locality, etc. And the chosen implementation must be tested together with the production code. This doesn't mean that measuring its stand-alone performance is a completely useless exercise. I suppose any solution that uses up all the cache is probably bad for practical use together with other code, unless searching is the primary function of that code (very unlikely case, but who knows?) &gt; There used to be a decent String representation from Java 7u10 until before Java 9 that was based on a plain char array I didn't even know they changed that. Now I do (looked at the source of Java 11 String). Maybe, it makes Latin-1 strings more efficient, as long as one sticks to using built-in String methods? I also didn't know about `sun.reflect.MagicAccessorImpl`, thank you for pointing to that one. Using it looks like a very dirty trick, but sometimes we need exactly that (just like using sun.misc.Unsafe).
It's unfortunate. One of the best features of Java was that it was free. A colleague of mine who teaches at a university contacted Oracle about continuing to use Java for academic use, for free. The response was to switch to OpenJDK. I suggested they consider Python too.
I don't have app deployed, so I can't say for sure but I believe oracle jvm 8 is still free to use, but it will not be supported for a long time. Starting with 11, the oracle jvm will be licensed. OTOH, the openjvm will remain free to use and share 99% of the code with oracle's one, but there will be no LTS with this one and you will need to migrate to newer version to benefit from patches and improvements. Visit adoptopenjdk for more info
Why?
Others can propose new files, but not edit the repository directly (unless they fork it, but then its a copy of their own they can edit). I made a PR that you can take a look at. I think it can be extended to hash larger sizes too, it's just a matter of calculating the hash over more than 2 bytes. It shouldn't be too hard to make it configurable or to derive different size matchers from this.
If your customers are installing Java on their system to run your software, it is their responsibility to either switch to OpenJDK, or stay with oracle and pay, or simply not update. There are several free and well supported distributions for OpenJDK available, most notably https://adoptopenjdk.net/ and https://aws.amazon.com/corretto/. If you are shipping OracleJDK with your software, which was never a good idea in the first place, then simply stop doing so and bundle OpenJDK instead. In the long run, develop your software against a recent OpenJDK and use jlink to bundle a minimal JVM with your application. Not that confusing, actually.
This is GUI tool written with AWT/Swing? Difference between your PC and the dev might be in graphics card and how Swing/AWT uses hardware acceleration on these. Maybe some bug, maybe he does something very wrong that only works if acceleration is disabled.. Try this option: ````-Dsun.java2d.d3d=false```` (if its on windows) and tell the dev
I don't know that certifications carry much weight in the industry. College degrees still rule. But if that is not an option for you, take a look at Coursera. Start with Java,Python, or web development. There's lots of demand for those skills. Then learn cloud computing. Practice and learn them well. Build an online portfolio to showcase your skills. Use GitHub or some other website. Most of all, be able to comfortably discuss your programming projects and write code in an interview. This approach is way more effective than flashing a certificate on your resume.
You do realize that Oracle's JDK and OpenJDK is [*the same software* but with a different license](https://blogs.oracle.com/java-platform-group/oracle-jdk-releases-for-java-11-and-later)?
Not sure if someone already said this as I'm not reading the comments. Upload ever college project that you worked on to GitHub or source control of choice. Put the link on your CV. In the interview, if they ask about any work that you are really proud of, talk about it and refer to where it is for them to look at. Final note, if you upload a group project, take all the credit. Your class mates aren't in the interview with you and they should do the same in their interviews.
Yes I realize that. But there are differences, particularly from an Enterprise perspective (https://stackoverflow.com/questions/22358071/differences-between-oracle-jdk-and-openjdk). That affects companies. Switching is a bit of a pain. It affects the tools you use too.
The link you posted basically says "no difference," which I also know because I work at Oracle on the JDK (i.e. OpenJDK). I know that change could be painful, but in this case the change is in favor to make the JDK more free than it's ever been, so companies are happy.
So if the JDK is freer than it's ever been, why is Oracle imposing a commercial license on the it now? Sorry, I'm still trying to understand this change fully.
It looks like in your [submission](https://www.reddit.com/r/java/comments/be6gt7/apache_wicket_900m1_released/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
No sign in required to download the Zulu version of JDK 7 :-) [https://www.azul.com/downloads/zulu/](https://www.azul.com/downloads/zulu/)
Absolutely nothing :-). Indeed, TinyZIP used it under the hood. However the package itself doesn't provide support to work directly with files.
As a newbie, a simple clean (code wise) web application that shows your understanding of things like Controllers (a simple but correctly implemented REST API), how to connect to a database properly, A web front-end that allows you to save information to a database. Unit tests. one of those projects you did in college is fine, you know, the video store app, or the bookstore app. That type of thing. If you can write one of those in a clean object oriented way (speaking as a java developer), and show understanding of things like extending a class, interfaces, stored procedures, etc... you'll be fine. Bonus points for building a java desktop application that uses the same API. It doesn't need to be complicated, it just needs to show understanding.
So the Oracle JDK used to be OpenJDK + commercial and free proprietary features. It was licensed under the BCL, which was only partly free (*and* had field of use restrictions) -- you had to pay to use some features. Now Oracle open sourced (or discontinued) all the commercial and closed-source features, so that the entire JDK is open. Instead of a mixed license, you can now choose to use the JDK under a commercial OTN license, which includes a support subscription -- this option is now called the Oracle JDK -- or, you can use the JDK under a completely free and open source license, under the name OpenJDK builds from Oracle.
What 0x256 said; however, the devil is in the detail, and I'd heartily recommend testing your entire application before certifying it for another JDK (open or not). We are grateful we did, so we discovered we have (ancient) dependencies that access com.sun classes explicitly and will therefore not work on non-Oracle JDKs... until we redevelop them
If I was hiring a photographer, I want to see the prints. I would like to see the final product. I don't want someone to be handing me negatives or slides and saying "see what I can do?" I wouldn't be overly impressed with contact prints either. I wouldn't want a painter that shows me sketches or a cook that shows me the ingredients or just the dough for some bread. My GitHub is littered with half finished projects, forks with a single commit that I've added and such. But if I want to show something off, it is to be complete. I would be happy to have something where I can do `mvn package` and see it. I would be extatic to be able to run it. The key thing is I want something that is finished. We don't get paid to write things that never get completed - we are paid to end up with completed applications. I understand that the final product of a junior developer isn't likely to be the highest quality... but if it isn't something that has a final product, then it isn't something that I would be trying to show off. The minimum for something I would want to spend time on is `mvn package`. Adding docker is 5 lines. If the application uses a database and I don't see the instructions for how to set it up, there's no point in trying to build the application in the fist place.
Oh, you know what? This was something I entirely missed. I should move all of my stuff to GitHub and just put the GitHub on my resume. I'm shaking my head at myself. Thank you both.
OP. This post is a goldmine and I desperately needed these insights. So happy you posted.
Getting back into producing video content. I noticed that an article I wrote awhile back [How to Test Logging in Java](https://billykorando.com/2018/07/31/how-to-test-logging-in-java/) gets pretty consistent traffic, so felt this was a good place to start making videos for. Haven't made a video since my [Pluralsight course](https://www.pluralsight.com/courses/effective-testing-with-spring), know it's not perfect, but had this on my to-do list for too long. Love to hear feedback!
I've tested with ` MethodHandles.byteArrayViewVarHandle(int[].class, ByteOrder.BIG_ENDIAN)`, `(text[i] &lt;&lt; 24) | ((text[i + 1] &amp; 0xff) &lt;&lt; 16) | ((text[i + 2] &amp; 0xff) &lt;&lt; 8) | (text[i + 3] &amp; 0xff)` and with `ByteBuffer.wrap(text)`. What I found is that `ByteBuffer`'s `getInt` and merging bytes yourself performs equally well, and using the `VarHandle` is about 30% slower. I guess the merging of bytes pattern into an int is something specifically optimized (or the CPU just doesn't care, as memory accesses are dwarfing this shift/or-ing overhead).
Show me you can use a git repo and a build tool and an ide. If you can sit down, make a new project with dependencies, and push it to a repo, you have my attention. If you can deploy it, then you are a God among newbies.
It's fixed in [12.0.1](https://jdk.java.net/12/release-notes)
&gt; Not sure what I did wrong. What makes you think you did something wrong?
Having some projects better than having none. Having projects that I can investigate -- on github, or on some website of their own -- is better than a line on a resume. "Investigate" means that I can go read the docs, play with the app, look at the code, or anything else. Having projects that have customers is best. If you make a program to catalog your VHS tapes, that's great. If you've made a program to catalog your VHS tapes and everyone at the anime club loves it and uses it, and you're listening to your customers and adding features, then that's awesome. Note that "having customers" doesn't necessarily mean "making money".
AFAIK OpenJDK 11 is identical to OracleJDK 11 software-wise. The difference is the business support you **can** get for OracleJDK. For Java 8, the difference between the two JDK distributions is bigger, although if you and your dependencies don't rely on JDK internals (`com.sun.*` and friends) you should be fine. The only notable API missing from OpenJDK is JavaFX (which was never technically part of a standard Java SDK/JRE).
For sure, they said someone came by that was better. I was just really excited about their coding stack. The job I ended up getting primarily works in angularJS, I learned on angular 7 so I guess I'm going to be decent and code migration in the future
openjdk release 11.0.3 by jdk11u team: https://adoptopenjdk.net/upstream.html
Everybody who still has a job, step forward. Not so fast, Johnson!
 [https://medium.com/@javachampions/java-is-still-free-2-0-0-6b9aa8d6d244](https://medium.com/@javachampions/java-is-still-free-2-0-0-6b9aa8d6d244)
Oracle what are you doing T_T
Define stewardship. Does it mean that Oracle will give away openJDK?
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
No, they won't be giving away OpenJDK. RedHat will just be in charge of maintenance and updates for OpenJDK 8 and 11.
Under new release cycle, openJDK is supported only for six months for free by Oracle. Then, you can choose a commercial support yourself. There are already free options like correto and adoptopenjdk. Does this mean that openJDK 11 will be supported official (by RedHat) more than 6 months?
That's what it looks like. Might be a gew days before it's clear exactly what that means.
&gt;dship. Does it mean that Oracle will give away openJDK? Yes. Open JDK is LTS release. It will be supported for long time by different distributor. You can also check out [Zulu](https://www.azul.com/downloads/zulu/) from Azul, which provides tested, certified builds of OpenJDK.
If that's the case, then it's fantastic news! Too bad we had to go through "java is no longer free" period chanted by less aware people of other \[mentioned\] options.
That was a nice read. I enjoy using the Java ee security api way more than spring security. It's easier and integrates nicely with the rest of the stack. Making custom authentication mechanisms is also very easy.
The leadership transfer actually happened mid-February, when Red Hat's Andrew Haley was assigned as the Lead Maintainer in the [JDK 8u Updates](https://mail.openjdk.java.net/pipermail/jdk8u-dev/2019-February/008503.html) and [JDK 11u Updates](https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-February/000450.html) projects in OpenJDK. While Andrew is the lead whose job is to accept backports, the actual people who do the backporting work span multiple companies: Red Hat, SAP, Oracle, Amazon, Google, etc. You can get the feel for it from OpenJDK JIRA, and here are the automatically-generated reports for pushes done: [8u212](https://builds.shipilev.net/backports-monitor/pushes-openjdk8u212.txt), [11.0.3](https://builds.shipilev.net/backports-monitor/pushes-11.0.3.txt) (you can see my name there, that's not a coincidence). The last two months of work gave us complete [8u212](https://mail.openjdk.java.net/pipermail/jdk8u-dev/2019-April/009115.html) and [11.0.3](https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html) source trees yesterday, with security patches on top (those are developed through a separate [OpenJDK Vulnerability Group](https://openjdk.java.net/groups/vulnerability/)). The next 8u222 and 11.0.4 releases already seen a lot of work. Many downstream OpenJDK distributions build from those update repositories, including the ones who are committed to support their 8u and 11u distributions for years to come. While working in upstream is not compulsory, many vendors share the backporting, reviewing, testing work. OpenJDK 8u/11u Update Projects is where that collaboration happens, and Red Hat is leading that collaboration. Hope that provides some context here. *\[Disclosure: I work for Red Hat, doing the 11u and 8u backporting work, among other things. This is why know all this, against my will and better judgement.\]*
Thank you for the information! And for Shenandoah!
That sounds right. These releases have a community (and some top-class engineering) behind them and we're working together.
brb, gonna go commit System.**exit**(0);
Just to remind yet again that one cannot compare the free support period for 11 or 12 with the period for, say, 8, because 8 was a major release, whereas 11 and 12 are not (9 was the last major release ever). In the past, releases that are similar to 11 and 12 (like 7u2 or 8u20) were also only supported for about 6 months. The recommended, "default", path to JDK upgrade is to follow the feature releases, which is meant to be the most graudal and overall cheapest update path ever. Sticking to LTS releases -- a *less* gradual process than that of the old model -- should be done if you have a good reason *not* to follow the gradual default path.
Fair enough. However, as I work in corporation, we mainly rely on RedHat's official images. And correct me if I'm wrong, but last time I checked, they will only provide LTS releases' images.
I don't know if that's the case (I work at Oracle), but if so you must know that the LTS+patch path should be accompanied by at least testing on the current JDK release, or you risk upgrades that are more jarring than ever before.
That's a really good advice. I will propose this solution to my team tomorrow. Thank you!
I've added your matcher and updated the article (see [Update 2](http://pzemtsov.github.io/2019/04/13/searching-for-better-indexof.html#Update2))
An important update has been added to the article: http://pzemtsov.github.io/2019/04/13/searching-for-better-indexof.html#Update2
So does that mean IBM will have an even bigger impact? That's no bueno.
/u/shipilev also for the JVM anatomy quarks! Your blog posts and presentations are really informative and interesting! ( [https://shipilev.net/jvm/anatomy-quarks/](https://shipilev.net/jvm/anatomy-quarks/) )
Those articles are great, I fully agree!
Super, well written :)
Yes a value type can contain a reference. It may even be possible to specialize a generic value type over a specific reference, meaning the memory footprint of a quantity would be identical to the underlying numeric type. Which could very well lead to the same zero-cost libraries as you can find in C++, or at least something extremely close.
 &gt;It may even be possible to specialize a generic value type over a specific reference Values for generic arguments instead of types (primitive or not) are an orthogonal feature to value classes. Where is that even mentioned or specified?
It's mentioned extensively in the mailing lists. Of course it's *way* too early for it to be specified. And yes, generic specialization *in general* is orthogonal to value types. But it *is* required to facilitate the use of value types as generic type arguments (if you want to keep all the benefits of flattening etc.) That is most certainly one of the goals of Valhalla. And with the way they're approaching specialization, with pluggable holes in the constant pool, it turns out specialising for non-type arguments might not be much extra work. Even if it's never a Java language feature, the way they're approaching it at the moment is certainly general enough to facilitate such a feature in other JVM languages.
I recommend switching to OpenJdk 8. It's maintained and in the repos.
Senior dev that never used the language? Not buying it. If you don't have the hard skill, yet use your "seniority" to guide others, what do you actually make them develop? The best what you can do for the first year after switch to Ruby is stay quiet and learn.
Frankly, I think your finding has a universal value and must be published somewhere or otherwise made available to the public. Here, in a distant corner of reddit, it will be lost.
This is not something I would ask while having the interview, but I will invite him because that way he is a lot more attractive than some other candidate.
&gt; If you don't have the hard skill, yet use your "seniority" to guide others, what do you actually make them develop? Well for a start, you don't "make" them develop anything. A senior developer is there to make difficult decisions, support juniors and keep up technical standards but the are not giving orders. Not knowing a language doesn't mean you can't support someone who does or make decisions on software written in it. If a junior developer is using language X and comes to a senior with a problem, the senior will go away and research a solution. Not knowing the language is no much of a barrier to that. &gt; The best what you can do for the first year after switch to Ruby is stay quiet and learn. I have no idea what this sentence even means.
&gt; you're discarding the best tool because of a feature that you don't even have to use if you don't want to Highly questionable. The most enterprisy? yes, the best? in what regard? * performance? no, hell no, not even close. * statically compiled ? no (you know java is a statically compiled language for a reason) * Clarity of errors ? no * Easy ramp up ? highly questionable (I have yet to find a "spring developer" that knows how to do anything besides the trivial tutorials) * Predictable builds ? nope, here comes classpath scanning to ruin your day when you try to update your libraries. Without taking anything from that they do well, you can see there are a lot of downsides that make it worth exploring alternatives (and thanks to that we have a rich ecosystem of them).
not really, as they didn't take ownership of openjdk in general, nor any of the standards bodies. that would be a much bigger deal.
Well, yes, that's what I was hinting at in my first message, too; works correctly now in the latest 8, 11, and 12. Only a couple weeks to go until the era starts now.
And looks like AdoptOpenJDK is to follow soon, as they have this message in the header of all their pages now: "16th Apr 2019: AdoptOpenJDK 11.0.3 and 1.8.0_212 release binaries will be released in 24-48 hours."
&gt;I have no idea what this sentence even means. It basically means don't be an imposter. Senior guides the team. Junior follows. If senior needs to suddenly research all the answers, then junior is lost, and will make errors. Two juniors don't add up to a senior. Not knowing the language is a huge barrier. It's not just syntax. It's entire ecosystem: libraries, documentation sources, database APIs, server/ui frameworks etc. I have seen senior folk researching MongoDB schemas, and suggesting token cleaning microservices. Had to slap him in the face with TTL index. Or my friend experienced principal software development that wanted to use Hungarian notation in an Android project. They all pretended to be senior mentors, bla bla bla, while in practice had little to no practical skills and would not admit to just not knowing the answer, or how to look for the answer. On the contrary the few good ones I have seen stayed quiet for the first 12 months after language switch, just so they could catch up.
The download is authenticated now. They'll either need to collect a username/password as part of the install or the repo may just be done.
Yeah, if it's good enough for Amazon, it's good enough for us.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
How do you think you are running Minecraft in the first place? You don't need to install java
It’s better than it was but I want real pattern matching.
In time. They’ll be starting with [JEP 305](https://openjdk.java.net/jeps/305).
Can you provide some links that talk about the recommended update path?
Correct me if I am wrong, but isn't Zulu only supported for 6 months per release for free with longer support requiring a commercial subscription?
I follow the Amber mailing list. The code for records is already checked in and being tested. Pattern matching will come very soon.
Still not working. We moved to OpenJDK.
They're deliberately delivering that a little bit at a time, so they can receive feedback separately at each stage. This is just the first step.
I get it. But they're asking if it's useful and if we use it, and until there is pattern matching, I'll probably still be staying away from switches as they don't add much benefit over [vavr's match](https://static.javadoc.io/io.vavr/vavr/0.9.0/io/vavr/API.Match.html) for exaple.
They check exhaustiveness, are much faster, and don't pull in a library dependency for a simple feature.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
They check exchaustiveness in a small portion of cases, speed matters very little 99% of the time and I already have vavr in my app so I’m not pulling in anything extra. I didn’t say there was nothing they didn’t do better. The language switch statements also are much more succinct and are better understood by the majority of java developers. I’m not saying everyone should agree with me, I’m just explaining why this matters/doesn’t matter for me
I need it to install the files for the mods
That depends on what you mean by "support". Azul is offering free builds of zulu for longer than 6 months, probably as long as they offer commercial support, but you obviously can't call them up when you have problems if you're not a customer.
- this is just the leadership position that manages the backports of patches to the lts versions, so it's not really a driver for java's future, except that it helps ensure that there will be free lts versions - honestly, java is owned by oracle, ibm can't be worse than that :D
Could we be looking at records preview in 13?
It is certainly possible. Rampdown Phase One is on June 13th. Currently no JEPs are targeted to 13.
Oracle JDK 11 is an LTS. OpenJDK makes no claims to an LTS. Various commercial distributors are committed to supporting 11 for long time and while people do so and work upstream, OpenJDK 11 will get regular updates.
How does it behave I'd the expression results in null.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
https://youtu.be/HqxZFoY_snQ?t=834
Skimming this, I think your problem lies in conflating 2 different issues. One is not using a simple finite state machine, such that there is no actions/transition/edge that lead from after-has-run state(s) to before-has-run state(s). I suggest a FSM because I expect that before long, you'd be trying to daisy-chain boolean values, and get into a mess of truth tables, while a FSM would be cleaner &amp; the general solution. The other is concurrent viewing &amp; locking of state, ensuring that such state transitions are seen as atomic and instant, so that no two threads both see before-has-run and attempt to transitions to after-has-run, which would cause the transition to be executed twice.
&gt;... One is not using a simple finite state machine, such that there is no actions/transition/edge that lead from after-has-run state(s) to before-has-run state(s). I suggest a FSM because I expect that before long, you'd be trying to daisy-chain boolean values, and get into a mess of truth tables, while a FSM would be cleaner &amp; the general solution. Yes but isn't a bit overkill if I just need one method? &gt;The other is concurrent viewing &amp; locking of state, ensuring that such state transitions are seen as atomic and instant, so that no two threads both see before-has-run and attempt to transitions to after-has-run, which would cause the transition to be executed twice. In my idea there was no "knowing the state of the function" (to know from the outside if the function has already been called or not). Yes one could program a check on the default return value but that's was not the point of my idea. I was just focusing on getting something to executo only once, with less overhead as possible (no sync once the first call has been done), ready for concurreny (that AtomicBoolean do the trick), and withouth leaving garbage around (once the first call is done I do not need anymore that AtomicBoolen, changing "ref" to a "nop" class/method will later make the GC take care of that unused AtomicBoolean).
&gt; I was also surprised that we can't implement static classes when they're not nested. "static" class in Java is just a nested class that doesn't want it's instances to be a child of a parent instance. Static class in C# is a class that has just static members... Different concept. &gt; How does this relate to projects? I mean in C# I just develop the application or service as a whole, but how do Java projects work in that regard? You still have to choose which class is main in C#... But also you get your app wrapped into a windows executable that "does everythig for you". In Java that was never a default concept... you have to start JVM yourself and tell it where the classes are and which one is your main class. IDE can do that for you. You can do that in a script. You can even build a windows executable that does that, resulting in the same thing that c#/.net does
&gt; Yes but isn't a bit overkill if I just need one method? What happens when something cares that A() has executed, but B() hasn't? It calls A(); B() and the A() will no-op via your proposal? So then when something wants to run C() once after B(), what happens? It has to know the whole sequence and try A(); B() C();? That's what I fear would be a common scenario and where defining the sequence as an Enum-based FSM is far better. Worrying about optimising out a single object reference isn't something you need be doing. Fundamentally, in OOP if you want a method to run once, you define it as a part of a class, and an instance of that class holds internal state to know whether to return early/throw IllegalStateException, or execute the guarded (possibly private, possible via method reference) method. Could this not be simply `synchronized` on a private boolean of such an instance?
P.S. Fundamentally, to propose changes to Java, you go via the Java Community Process, and Java Specification Requests.
&gt;What happens when something cares that A() has executed, but B() hasn't? It calls A(); B() and the A() will no-op via your proposal? So then when something wants to run C() once after B(), what happens? It has to know the whole sequence and try A(); B() C();?That's what I fear would be a common scenario and where defining the sequence as an Enum-based FSM is far better. Yes of course in that scenario my keyword should not be used, because its not were it should be used. The idea is that if you need something that needs to be called only once and you do not care if later calls (if any) fails or return dummy value you may use the keyword "once". &gt;Worrying about optimising out a single object reference isn't something you need be doing. Why not xD? Its not that like I did an advanced trick that may cause confusion. The "nop" version does not have condition check and or &gt;Fundamentally, in OOP if you want a method to run once, you define it as a part of a class, and an instance of that class holds internal state to know whether to return early/throw IllegalStateException, or execute the guarded (possibly private, possible via method reference) method. I could make the "nop" version to throw that exception, in the main example, and the "keyword" version may simply throw that exception if nothing is specified between "()" in "once()" (also "once void" function that has to do nothing withoth launching the exception could be written "once(void) void", yes i know thath the brackets idea looks bad). &gt;Could this not be simply synchronized on a private boolean of such an instance? Would not work since I need the evaluation of that boolean and set of a new value to be atomic, that why I used AtomicBoolean... so anyone may call that function infiinte times at the same moment and still only one thread will run "CODE TO RUN ONLY ONCE".
 public class RunOnce implements Runnable { // Perhaps Callable&lt;V&gt; is a better base? private boolean alreadyRan; Runnable toRun; RunOnce( Runnable r ) { alreadyRan = false; toRun = r; }// RunOnce() public synchronized void run() { if( alreadyRan ) { return; } else { toRun.run(); alreadyRan = true; } }// run() }// RunOnce
Yes but with that code if toRun.run is slow and run() is called multiple times, each thread will wait for the first one to finish. Removing syncornized, switching alreadyRan with an AtomicBoolean and the check inside run() with a compareAndSet(false, true), makes the first thread (running toRun.run ) takes as much times as it wants and the others threads can exit asap.
OK I re-read the OP more thoroughly, you're basically proposing what I'm deriving, but wrapped in a class static association between method and guarding instance, which is where it gets ugly fast. public class StartOnce implements Runnable { // Perhaps Callable&lt;V&gt; is a better base? private AtomicBoolean alreadyStarted; Runnable toRun; public StartOnce( Runnable r ) { alreadyStarted = new AtomicBoolean( false ); toRun = r; }// StartOnce() public void run() { if( alreadyStarted.compareAndSet( false, true ) ) { toRun.run(); } }// run() }// StartOnce Trying to manually out-optimise the JVM for that one `if( alreadyStarted.compareAndSet( false, true ) ) {` does not seem worth it, as who knows how efficient that is on a real CPU, it could be a single instruction and no real AtomicBoolean object rather than just a register baked into the opcode. As for wrapping each instance of each method you want guarded in such a feature, I don't think a class-private static ref is the way to go, or a new keyword (though don't forget you can do some crazy things with annotations &amp; Reflection). As for cleanly creating instances, I think this example might work (am rusty with Java8 features), using the fact that Runnable is a FunctionalInterface, and that a lambda will be determined to be suitable: public class Creature { StartOnce death; public Creature() { death = new StartOnce( () -&gt; dieOnce() ); }// Creature() public void death() { death.run(); }// death() private void dieOnce() { ... }// dieOnce }// Creature
#1. You run an application with the Java Runtime Environment (JRE), whether you do so from the command-line or indirectly from within your IDE. When you run the `java.exe` command, you pass it the name of the entry point, or "main class" (which must have a `static void main(String [])` method. Newer or upcoming versions of Java MIGHT support running `.java` source files directly as shell scripts. However, in virtually all typical cases, you are executing compiled `.class` files. Which may be sitting there on your file system as-is, or may be bundled together into one or more `.jar` file ZIP archives. A component of the JRE, called the class loader, pulls into memory your "main class" as well as all other classes that it directly or indirectly references. Including the Java standard library, there may be thousands of classes *available* to you. But only the ones referenced by your main class and loaded by the class loader are really relevant to a given runtime execution. This is probably why your teacher was showing you a sample project with multiple `static void main(String[] args)` main classes in it. That's not so common in real-world development, but is certainly possible. When you run `java.exe`, you tell it which main class to use, and the other examples are probably not referenced during that run. #2. Either you are really confused, or I am. To my knowledge, there is no such thing as a top-level static class in Java. You declare a class as `static` when it is nested within another class, yet you want the ability to declare a standalone instance of that nested class from somewhere outside of that outer class. #3. From my limited exposure to .NET, I believe your project ("solution") builds an `.exe` file that knows where its entry point is. This is typically the same in Java. The difference is that your build system (e.g. Gradle or Maven instead of MSBuild) builds an "executable JAR" archive, which is run with the parameter `java.exe -jar &lt;name&gt;.jar`. An executable JAR is a just regular archive, with an included `META-INF/manifest` file that says which "main" class should be the entry point. The JRE knows to look for this manifest file.
There's just no hope with certificates for most people. I've been working with PKI for over 15 years now with Netscape (now Red Hat) CAs, and some Microsoft along the way. I've written a OCSP client, I've contributed to Bouncy Castle and JSS, I use OpenSSL and NSS command-line utils on a weekly basis, I've written software that uses almost every PKCS standard, CMS, CMC, CRMF, DER, PEM, ASN.1, blarg....all that to say that I ***still*** get frustrated setting up apps/servers with certificates at times. Take a Microsoft CA. You get a PKCS#10 certificate request generated by some random app/appliance and try to submit it through the GUI...guess what? No worky. Why? Cause it doesn't have the special MS proprietary "Certificate Template" attribute. How do you get past that? Using the command line certutil utility...Yay! When PKI works, it's like fucking magic. It's so nice to pop in a token/smartcard, type a pin and you're in. But getting to that point is a fucking up-hill battle and just about no amount of "how-to" is going to help the normal day-to-day user *understand* the process.
That clears much confusion I had with java. Thank you so much (same goes to u/gitPullOriginMaster comment).
i'll try that and see if the flickering is fixed, thanks
Okay but that's not a problem with java, you have the jre just look up a tutorial on YouTube
Which version of the OpenJDK did you install? I am not sure if anything past Java8 will work correctly with the Minecraft Launcher.
12.0.1
It looks like in your [submission](https://www.reddit.com/r/java/comments/belnue/basic_java_exercise_help_required/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
You can always check if your java is installed by going to a bash and typing "java -version"
Windows is a bit meh when setting system variables. If you've done in through it edit system variables menu you need to close out all the windows associated to it. Then open a fresh CMD and type Java -version. There is a pretty neat tool call rapid environment editor which makes the process alot less painful.
Tried that in CMD, it gives a response. So the system variables are indeed set. But maybe it checks for something else, like something in the registry or some specific path.
Java -version gives a response.
Try installing Java 8 instead. The error for wrong version can look like like it can't find it at all. If Java -version works in the command line then Java is installed. Some apps also depend on the `%JAVA_HOME%` system variable to be set as well so check that variable. (`echo %JAVA_HOME%` to check)
&gt;Nearly every program includes some sort of logic that combines testing if an expression has a certain type or structure, and then conditionally extracting components of its state for further processing. For example, all Java programmers are familiar with the instanceof-and-cast idiom: &gt; &gt;if (obj instanceof String) { String s = (String) obj; // use s } The "instance-of-and-cast idiom" is a code smell that arises from nobody knowing how to use overloads/dynamic binding or generics properly imo. I have a very hard time contriving a situation where you'd absolutely need to use this if your application is designed properly.
A bit late to the game, but we use PlayFramework, a bit of an old version (1.5.x) but it just works like a charm. Seriously, it just disappears into our stack and just makes doing our job so much easier. We get a lot of external developers that are blown away that they can get up to speed and making meaningful contributions to our code base within a few hours (not days or weeks or months). Yeah there are a few annotations, but I think the way the PF devs went about designing the framework they followed the "convention over configuration" concept rather well. PF also has really good support for hot reloading (no bouncing the server in dev mode). There's also a very active community around PF (more so the recent versions, which we will get to at some point, we just have hundreds of controllers that would all need to ported -- and since PF is just working without a single issue in the last 6 years of heavy production use, it just isn't a priority) Some other key features that are massive time savers: * Before and After request/response interceptors (which is great for authenticating API endpoint requests) * MVC for sending emails * Excellent support for JSON, and other types of response encodings * Minimal configuration (that just makes sense) * Java 8 and up support * Sensible routing * Controller hierarchy (having controllers extend other controllers makes implementation code very very clean) Yeah these features aren't really unique to PF, loads of other frameworks do this kind of thing. I just call them out because these key features and they way they are implemented in PF have just saved us loads and loads of time and frustration. The thing just works and like I said, the framework just disappears, you aren't terribly aware of it as you do your work.
I don't know if anyone else had this feeling, but `break`ing with a value feels kinda weird. `return` seems like it would be more consistent with lambdas and whatnot but I'm sure there's a technical reason why they chose to use that.
You need to make the distinction between OpenJDK (the source code) and OpenJDK distributions (built from that source code). Oracle is only updating the source code of the OpenJDK for whichever is the current release (today that's JDK 12). Andrew Haley of Red Hat is the project lead of the OpenJDK 8 and 11 update projects. He is also the lead for OpenJDK 7, Andrew Brygin of Azul is the project lead for OpenJDK 6. Various people are backporting the update code from JDK 12 and upstreaming them to the older repos. There are several binary distributions created from these repos (Azul Zulu, AdoptOpenJDK, etc). The concept of an LTS for the JDK came from Oracle, who decided to have one every three years (starting with 8 then 11, 17, etc.) Currently, all other distributions are following this but there is no requirement to. Azul (who I work for) will also provide (commercial) extended support for other versions (13 and 15), which we term Medium Term Support (MTS).
Lol, that's the exact thing I thought when I looked at the original site, I don't want to have to squint, and move my eyes all from the right to them left, just a simple margin would make it far better.
It looks like in your [submission](https://www.reddit.com/r/java/comments/bemb4o/may_have_discovered_a_socket_leakage_bug_in_jdk/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
and also , Intellij has VisualVM plugin, you can run directly from Intellij IDE &amp;#x200B; [https://plugins.jetbrains.com/plugin/7115-visualvm-launcher](https://plugins.jetbrains.com/plugin/7115-visualvm-launcher)
You can get commercial support from OpenJDK providers, e.g. [adoptoipenjdk.net/support.html](https://adoptoipenjdk.net/support.html) (IBM and jClarity)
[adoptopenjdk.net](https://adoptopenjdk.net) will have the updated binaries in the next 2-3 hours for 11.0.3
You went totally off-road there, mate. I was comparing using Java 8 (lambdas and streams) to using say Java 7 which does not have those features. Never said Java 8 is better or worse than other _languages_. But hey, if the shoe fits...
Programming help should go in /r/javahelp. **Removed**
That's the JRE, you're talking about the JDK so probably want to check on javac. In my case, I have `K:\Zulu\zulu-8\bin\` in system Path, and `K:\Zulu\zulu-8\` in system JAVA_HOME.
What if you wanted to return out of the method inside the `switch`? They did consider it, but felt that `break` was more familiar and natural.
The problem is that custom Windows app launchers for Java look for entries in Windows Registry and OpenJDK IS NOT THERE. You can add them manually with a .reg file like this Windows Registry Editor Version 5.00 [HKEY_LOCAL_MACHINE\SOFTWARE\JavaSoft\Java Runtime Environment] "CurrentVersion"="12" [HKEY_LOCAL_MACHINE\SOFTWARE\JavaSoft\Java Runtime Environment\12] "RuntimeLib"="C:\\Program Files\\AdoptOpenJDK\\jdk-12.0.0.33-hotspot\\bin\\server\\jvm.dll" "JavaHome"="C:\\Program Files\\AdoptOpenJDK\\jdk-12.0.0.33-hotspot" "MicroVersion"="0" [HKEY_LOCAL_MACHINE\SOFTWARE\JavaSoft\Java Development Kit] "CurrentVersion"="12" [HKEY_LOCAL_MACHINE\SOFTWARE\JavaSoft\Java Development Kit\12] "RuntimeLib"="C:\\Program Files\\AdoptOpenJDK\\jdk-12.0.0.33-hotspot\\bin\\server\\jvm.dll" "JavaHome"="C:\\Program Files\\AdoptOpenJDK\\jdk-12.0.0.33-hotspot" "MicroVersion"="0" obviously change the paths to your installation, i just took mine as an example. Also modded minecraft will not work on Java 9+ because the launcher uses some internal classloader magic. If you want to use old modded versions of minecraft just download [Java 8 from Oracle](https://javadl.oracle.com/webapps/download/AutoDL?BundleId=238729_478a62b7d4e34b78b671c754eaaf38ab) like usually, it's free.
&gt; javac ````javac```` is compiler
&gt; if your application is designed properly. i.e., "within the artificially tight constraints that make me look like a master software God, and where I get to handwave away all the real-world issues that would prove me wrong" Fortunately, reddit allows unbounded space on the blocked users list. 'Bye.
This works, thank you for the great answer.
No shit, that'd be why I said &gt;you're talking about the JDK so probably want to check on javac. Unless you don't actually need the compiler.
&gt; I have a very hard time contriving a situation where you'd absolutely need to use this if your application is designed properly. Its the FP people.
When compiling java code, you get a bunch of .class files. Since people don't like to deal with man small files, this is put into a zip archive together with some metadata, and then renamed into a jar file. &amp;#x200B; When you then execute the application as "java -jar test.jar", it will look into the metadata, and load the main method defined in the default class. If you start your program as "java -cp test.jar main.MainClass", it will "skip" processing the metadata, and directly execute the main method in that class
Nested static classes are not the same thing as a static class in c#. If you want the c# equivalent of a \`static\` class in Java, just declare a class with only static members. For a static ctor, you can make a static initializer. The only difference will be you could have non-static members, but just don't add non-static members.
Hi. I've just rewritten the builder (v0.1.73). If you don't mind, please take a look and any feedback is appreciated. :-) Thanks.
&gt; It's written in TS, aimed at Javascript denizens And you post it in /r/**Java** because..?
javascript == java like carpenters == carpets
.java files compile to .class files you can run .class files using the java command you can archive.class files into .jar files (along with some meta data) and execute the .jar
Thank you kindly for that! I was near my wits end trying to figure out why my CA Spectrum was trying to open a link to BMC Remedy Maintenance Tool and a SharePoint v5.Master file. Very bizarre!
Namespace from C# is kinda like Package in Java. A package in Java is the directory where the .Java file is located. In Java one file should only contain one class. You can have multiple nested classes though. The main entry point into the program is the main method, it is public and static, returns void (or int) and has a string array as parameter. You can have multiple main methods in a project. Because of that for executing a Java program you have to configure somewhere what main method to execute. In an IDE you just right click on a Java file and select execute or create a run configuration manually and select the class and main method you want to execute. (Both Intellij and eclipse have this)
Not an OP, but there are quite some gRPC services written in Java. Postman for sending HTTP requests is also written in JS, but is used by everyone.
I'm really surprise it was still "incubating"... I mean, It has been "one of the big three Java IDEs" for a while, no?
`public Foo doStuff(SomeObject obj) { ... }` `public Foo doStuff(SomeObjectSubclass obj) { ... }` behold, I am a software God
Yeah, it's one of the big three Java IDEs. What happened was: Oracle owned Netbeans after buying Sun, but didn't really know what to do with it. Rather than just letting it die, they eventually transferred ownership of it to the Apache Foundation. "incubating" is a specific term that the Apache Foundation uses for projects that are fledgling in their ecosystem, and it's still possible for an "incubating" project to be jettisoned. This news means, happily, that Netbeans is now a true first class citizen within Apache.
Let's try this one more time, with data. First, speed - Running this - https://pastebin.com/WiFRPbp6 you get the results: MyBenchmark.ifMethod avgt 0.022 ± 0.001 us/op MyBenchmark.switchMethod avgt 0.016 ± 0.001 us/op MyBenchmark.vavrMethod avgt 0.051 ± 0.002 us/op You can see that the performance of Vavr's match is, yes, 3x slower. But this translates to a .03 *micro*second difference - something the majority of Java applications don't really care about (and certainly not web servers and android applications, where we measure in milliseconds). Now, on library dependencies - The nexus vavr dependency clocks in at a whopping 23kb - compared to, say, apache common's 610kb. Not that dependency conflicts are never an issue, but usually not for web and android work (and I'm guessing some jobs like government doesn't like third party dependencies just for the hell of it). A small dependency for a huge wealth of productivity is (to me, anyway), not a huge negative. And on exhastiveness - here I take the most issue. Because in that code above, if Java checked exhaustiveness, I should be able to write @Benchmark public void switchMethod(Blackhole bh, MyState state) { TestEnum sample = TestEnum.values()[state.r.nextInt(values().length)]; TestEnum result; switch (sample) { case A: result = B; case B: result = C; case C: result = A; } bh.consume(result); } But here I get a compiler error, because I don't have a default. What this means is that when I inevitably add a TestEnum `D` - my compiler thinks everything is A-OK. But I really want to update this method to do something new for D, and I want my compiler to do this dirty work. Java doesn't check exhaustiveness so much as it enforces exhaustiveness. While Vavr is strictly less powerful in this regard, at the end of the day I still have to think about what I'm doing, and can't rely on my compiler to help me out of a fairly simple jam. I don't really consider's switch's exhaustiveness a feature so much as a crutch (for Java - not the developer).
&gt;Newer or upcoming versions of Java MIGHT support running `.java` source files directly as shell scripts Java 11 already supports this.
You can have zero or one main method per class. Since a project can have many classes, a project can have many main methods -- but each main method is in its own class. Java classes are organized in packages, similar to C# namespaces. When starting up a Java program, something specifies which class contains the main method to execute. The `java.exe` program is how you start a program. It can take arguments which add various .class and .jar files to its "classpath". The classpath is the collection of all location where compiled binary classes can be found. On the `java.exe` command you can then specify the fully qualified package - class name of a class containing the main method to start. A JAR command is easily launched like: `java.exe -jar MyFoobar.jar` In this case, the Java runtime looks inside MyFoobar.jar for a manifest that says which class contains the main method to run. (Even though multiple classes could have main methods -- they go unused. The manifest says which one to launch.) Here is a trick: You could form a different `java.exe` command, and NOT use the `-jar` option, but rather put the JAR on the classpath, and then specify the fully qualified package + class name for a different class in the Jar to run its main method. Thus a single JAR command could come with several short *dot-bat* scripts (or .sh on Linux / mac) that could run the Jar file as completely different commands, by invoking the main method of different classes within the same JAR. On any OS, but I do this on Windows all the time, it is not necessary to have Java "installed". Or even if it is installed, you can use a different Java as the runtime for your project. Unpack a JDK or JRE as a folder. Have a start script which first sets environment variable JDK\_HOME or JRE\_HOME to the path of an unpacked JDK or JRE folder. (Maybe a JDK packaged and delivered with your program.) Then run the `/bin/java.exe` within that JDK\_HOME or JRE\_HOME. An installer (setup.exe) for example, could unpack a folder under "Program Files", including a java runtime of your choosing, and a startup script (or using something like Launch4J, an exe) that will launch your project using your choice of Java runtime -- whether or not one is already installed on the machine. &amp;#x200B; A .java file is source code. It contains one *or more* classes. Each class is compiled to a .class binary file. Thus one .java file may result in multiple .class binary files. It is bad practice to put multiple top-level classes into a .java file. But a single top level class may have more classes within it -- whether static or not -- and each of those classes result in another compiled binary .class file. A JAR file is really a ZIP file with your .classes, and a Manifest. Among other things in the manifest, the manifest indicates which single class is the one whose main method should be launched when the JAR is launched. (Even though other classes in the JAR might have main methods.) Think of a JAR file as a platform-neutral "DLL" or "EXE". A Jar can serve as both. On many platforms, you can run the JAR by double clicking it. This results in running the JAR as if it were run using the command: `java.exe -jar YourApp.jar` &amp;#x200B; I hope that helps explain some things.
I’m curious to know if anyone here is in a company where NetBeans is the dominant IDE.
If anything, adding a delay to your process is the opposite if improving performance...
Since the game renders at 60fps, wouldn't it be beneficial to use Thread.sleep() between frames?
If you're trying to cap your framerate so you don't use up all of the system resources or drain the user's battery, then yes, Thread.sleep is how you want to do it. Be sure to compute your frame time and subtract it from your sleep call.
Alright, thanks for your reply. I am already subtracting the computation time.
Be aware that Thread.sleep is not always precise. Due to scheduling woes, it could be off by a few ms in either direction. Make sure you're checking the time after you sleep, too.
My group uses it for angular front end/java back end. We're a team of 5 developers.
[Big](https://blogs.apache.org/netbeans/entry/what-s-happened-to-my) three indeed, &gt;NetBeans is extremely large (it will be by far the largest project in Apache, once everything has been donated) Glad to see it all working out so smoothly.
Just tried to download it using wget at a customer's site and ran into this with the JRE. What a stupid decision.
The "incubating" doesn't mean that NetBeans is a young project -- it means that it's only (relatively) recently been transferred from Oracle to Apache. It entered the incubator in late 2016, and due in part to the huge volume of code involved and the licensing due diligence involved in the transfer, it's taken a while to get it all running smoothly as a fully conformant Apache project.
I worked somewhere where it was. Don't work there now though.
I'm on a team developing a NetBeans Platform based application so we use NetBeans. I think Eclipse is still the dominant IDE though.
So, I don't work with JWT but StackOverflow (and the JWT docs) says you don't want Basic Auth but Bearer, right? ([https://stackoverflow.com/questions/33265812/best-http-authorization-header-type-for-jwt](https://stackoverflow.com/questions/33265812/best-http-authorization-header-type-for-jwt)) The OAuth RFC says WWW-Authenticate is correct for Bearer [https://tools.ietf.org/html/rfc6750#section-3](https://tools.ietf.org/html/rfc6750#section-3) &amp;#x200B; To your second question, isn't that exactly what 403 is for? The creds are valid, you've been authenticated, but you are not authorized, and should not retry: [https://tools.ietf.org/html/rfc7231#section-6.5.3](https://tools.ietf.org/html/rfc7231#section-6.5.3). I would prefer this to the empty 200 because it sounds to me like the sales people are committing a client error, whereas the empty 200 would imply that the response was, well...ok.
Well, this has been announced half a year ago. If you don't want to licence OrcaleJdk pick one OpenJdk provider like Azul, adoptopenjdk or Amazon corretto.
A lot of focus is shifting from Eclipse to Jetbrains though. Personally I'm a fan simply because of understandable keyboard shortcuts.
Sometimes I am just missing low level programming. It was fun to deal with bits and tiny amount of memory. It was a real challenge. And now it looks normal to just to add more memory if we see OOM in Java program.
Thx! Yeah I did find the stackoverflow link to - but I wast just wondering why there are these discussions at all. It should be a really simple thing. 2 - Our internal discussion lead to using 403. There are 2 scenarios though: 1. A certain user might have the rights to download sick notes, but the app config doesn't support/allow it. 2. A certain user might not have the rights to download sick notes, while the app config does support it. So probably throw a 403 in both cases and explain the reason in the message?
First question: * 401: *Unauthorized, he basically tries to enter your door without a key; here: he is missing the Auth Header* * 403: *Forbidden, he basically tries to enter your door with the wrong key; here: he has an invalid Auth Header Value* Second question: I would go for 200 with empty results. Every sensible result is just filtered out and that's just how it is.
That's assuming it's a realtime game. If it's turn-based, you can just drive a repaint after update events that'd invalidate the display. Of course, animation would then bring back in a need to run some sort of timer-based system, at least until the animation is finished and things can park again (until game event, mouse event, w/e).
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
IntelliJ is currently clearly the best IDE at the moment
Well guess who just made me the hero at work lol... We don't develop the Java product we work on, but we depend on it.
&gt;401: Unauthorized, he basically tries to enter your door without a key; here: he is missing the Auth Header K. But the issue is not missing the auth header. What if the auth header (tenant-id) or body (login+ secret) are wrong - while the HTTP request is fine?
Right. /u/thatsIch is saying that 401 does not match your situation, but 403 does match. The request is not missing a key, the request has the wrong key.
Question 1 should return 401. From the RFC: &gt; If the request included authentication credentials, then the 401 response indicates that authorization has been refused for those credentials. The user agent MAY repeat the request with a new or replaced Authorization header field ([Section 4.2](https://tools.ietf.org/html/rfc7235#section-4.2)).
I would highly recommend not rolling your own authorization using JWT, but rather use an authorization framework like OAuth 2.0 using JWT as the token type. That way, you can take advantage of existing implementations like [Spring Security OAuth 2.0](https://projects.spring.io/spring-security-oauth/docs/oauth2.html). On authentication failure, you should return a 401 error with a WWW-Authenticate header instructing the client how to authenticate. See this example from [OAuth 2.0 error response.](https://tools.ietf.org/id/draft-ietf-oauth-v2-bearer-22.xml#authn-header) &gt; So what if the App tries to download all sick notes? It's actually not a authorization question, because the app configuration defined by the customer admin was configured this way. Isn't it though? You're using the configuration interface to restrict access, which is an authorization concern. This situation is also already handled by OAuth 2.0. OAuth defines the concept of a scope, such as "sick-notes", which can be granted or not granted to different apps based on configuration. You can define two clients, a sales client and an admin client. One is assigned the scope and the other is not. If the client app tries to access a resource requiring a scope it does not have, [you return a 403 response](https://www.oauth.com/oauth2-servers/scope/defining-scopes/).
True but what's that got to do with this news? Bedides, the more optons the better.
&gt;I don't really understand the second question. Are you saying that the user has permission to see all the sick notes from the web, but does not have permission to see them in the app? Sort of. We do have an app configurator. So it might be possible that the user might have the rights to see all sick notes in the www portal. He would have the same rights in the app - but you can configure it - so for instance the employee role might get an app where it is only possible to upload sick notes (not download them). So this is independent of authorisation it is a feature of the given app config. So authorization (CRUD) in portal and app are the same. But you have to configure an app first. Display and certain rules and then there is sync strategy. So with sick notes (it's just a use case here) it might be reasonable that you configure the app that you hust can insert/create.
Authorization/Authentication in my experience is never a basic thing, not even basic auth :-) &amp;#x200B; It also seems like I misunderstood you. The user/password is wrong? I'll be a bit longer here... &amp;#x200B; Note [https://tools.ietf.org/html/rfc7235](https://tools.ietf.org/html/rfc7235): &gt;Upon receipt of a request for a protected resource that omits credentials, contains invalid credentials (e.g., a bad password) or partial credentials (e.g., when the authentication scheme requires more than one round trip), an origin server SHOULD send a 401 (Unauthorized) response that contains a WWW-Authenticate header field with at least one (possibly new) challenge applicable to the requested resource. &amp;#x200B; &gt;A server that receives valid credentials that are not adequate to gain access ought to respond with the 403 (Forbidden) status code ([Section 6.5.3 of \[RFC7231\]](https://tools.ietf.org/html/rfc7231#section-6.5.3)). &amp;#x200B; Finally, 7231 says about 403 &amp;#x200B; &gt; If authentication credentials were provided in the request, the server considers them insufficient to grant access. The client SHOULD NOT automatically repeat the request with the same credentials. The client MAY repeat the request with new or different credentials. However, a request might be forbidden for reasons unrelated to the credentials. &amp;#x200B; Which is, I think, why you'll see pages that request passwords 3X with 401s, then give up and give you a 403. &amp;#x200B; \--- I agree that the literature on response codes is sparse at best, and I think that that means that there is not often one right answer. My group has a standards document that we use to enforce internal consistency, but beyond that, it's either looking to more popular APIs for what expected behavior should be and/or a healthy reading of RFCs. \--- &amp;#x200B; So as to your two situations and if they are the same or not, a good rule is don't tell your users any more or less than they need to know. Note the RFCs say stuff like "don't give a 403 if the user is forbidden if giving away the fact there is something there is sensitive, give a 404 instead." I've used this logic when people try URLs that are for the wrong account. So, in your case, if you don't have credentials that are valid at all, that's probably a 401, but that would be for any resource. If your credentials don't work for a particular resource, that sounds like a 403. If then there is a tenant-wide configuration that blocks the resource...does your end-user need to know that? I think it's a 403 either way, but you'll note that @thatsIch disagrees with me here and that's fine, it's a semantics question. So think about it that way, Which is it? &amp;#x200B; I have a resource called /records , then /records/1, /records/2, /records/3, etc. If I have no rights to read the collection doing a GET on /records, I personally think thats a 403. However, if what's really going on is I can't read any of the records (so /records/1 etc is a 403) but it's possible there could be one I could read if so configured, then maybe a 200 with an empty records array makes more sense.
In my company we develop mostly backend with spring and desktop clients in Swing with lots of custom components. In this field, Netbeans is king.
**No.** As much as possible you want to avoid direct use of Thread.sleep(). It may be useful at a low-level but you usually want to use high-level APIS like [https://docs.oracle.com/javase/7/docs/api/java/util/Timer.html](https://docs.oracle.com/javase/7/docs/api/java/util/Timer.html) or https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ScheduledThreadPoolExecutor.html#scheduleAtFixedRate-java.lang.Runnable-long-long-java.util.concurrent.TimeUnit- . Even then at a low-level you might prefer something like [https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/locks/LockSupport.html#parkUntil(long)](https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/locks/LockSupport.html#parkUntil(long)) instead of Thread.sleep() as absolute time is almost always cleaner to use. Something like: ~~~ public static void sleepUntil(long deadline) { for (;;) { long now = System.currentTimeMillis(); if (now &gt;= deadline) { return; } // remember spurious wakeups LockSupport.parkUntil(deadline); } } ~~~ Also you'll might want to set the time slack which is platform specific. https://hazelcast.com/blog/locksupport-parknanos-under-the-hood-and-the-curious-case-of-parking/ discusses Linux but other platforms have the same concept.
Well yeah I prefer IntelliJ too, but don't mind working with Eclipse. Should've clarified that Eclipse is dominant in the company I work at. That being said, I still think its a bit annoying how IntelliJ is brought up every time someone mentions Eclipse in this sub. Like the most voted comment on the new Eclipse announcement thread was something like "but IntelliJ". Its good to have alternatives and people have preferences.
Basically, if you need to pause until a certain time is reached, you can use `Thread.sleep` or you can enter a loop and "spin" until the time interval is reached. When you use `Thread.sleep`, you're basically saying that I'm giving up my turn right now, let another thread get a chance to run. This lets other work happen while you're waiting for the next opportunity to draw. The downside is that the JVM has to save its place on your render thread and restore the state on another thread, which can be relatively expensive. A tight "spin" loop will hog the processor, preventing any other thread from doing any work. But, if you know you'll be done really quick, you save time by not having to tear down your thread when you go to sleep and restoring your thread when you wake up. This is significant for apps which require really low latency, where the cost of a thread context switch is actually significant, for example high frequency trading systems. `Thread.sleep` is the most straightforward approach that is fine for most apps. Use spin wait to maximize performance, if you are absolutely sure how long you have to wait and you're really quick about it. TL;DR your game isn't an HFT, you're fine with `Thread.sleep`.
So basically the server has two rules? * David - sick notes - allowed * David's app - sick notes - not allowed I think if the server knows about both rules, it should 403. The first rule passes, but the second rule fails, and you need to pass all rules to gain access.
&gt; its a bit annoying how IntelliJ is brought up every time someone mentions Eclipse in this sub Or any other IDE. I swear it must be astroturfing. I mean, look at [this](https://old.reddit.com/r/java/comments/beoeqz/netbeans_is_leaving_incubating_to_become_a/el7zvlo/).
More FOSS options, too. I use IntelliJ, but I'm not a fan of it not being FOSS.
The stuff you are learning in CS class is definitely important, but it's orthogonal to the things you will need to learn in the industry. Read "Code Complete" to get a head start on this stuff. - https://www.amazon.com/Code-Complete-Practical-Handbook-Construction/dp/0735619670 As far as some fun interviews with famous programmers, another great book is https://www.amazon.com/Practice-Programming-Addison-Wesley-Professional-Computing/dp/020161586X
Ran into a dude on the train yesterday who said, "Hey I saw you were using IntelliJ IDEA. Best fuckin' IDE ever dude!" ... Just a random guy saying that to me. Like yeah it's very good but it's a bit much.
or literally a magnetized needle and a steady hand
Exercise more.
Thank you will definitely look into these!!
That was very insightful thanks a lot.
Question - does Apache NetBeans supports java 8? I cannot tell in their website if they support it. I'm still using the Netbeans 8.2 because of that.
&gt; Which leads to a philosophical question: Should you include application logic in HTTP responses or rather stay agnostic? You're looking at this the wrong way. HTTP responses are not about your app, the are about *client expectations*. The client uses your response codes to decide what to do next. If you return a 200 OK, that's a signal to the client that everything is okay and they can move onto the next step. 302 Redirect tells the client they have to go to the URL in the Location header to continue, such as a POST returning the URL of the created resource or sending an unauthenticated user to a login page (instead of a 401) What the client expects very much depends on the type of client. For a traditional web app, you might return 200 OK for everything, because that's what a web browser expects by default. If you are providing an API, your client apps will have more sophisticated expectations.
&gt;yes
Print out the vales of all the variables to debug. Learn to add error printouts or logs so you can figure out why it dies silently halfway through.
Even with all the great features IntelliJ has, its font rendering on Windows is kinda painful to stare at all day. Netbeans has always just looked really good to me.
To go back to the very beginning. To start at the very lowest level of abstraction. Read [Code: The Hidden Language of Computer Hardware and Software](http://www.charlespetzold.com/code/)
You are mistaken: https://github.com/JetBrains/intellij-community (and PyCharm community edition is in the `python` subdirectory)
Indeed, totally missed the right comment to reply to :/
The guy who told me this was talking about electrical hardware, but I think the same thing is true of programming... You see people who seem to be really good at design or troubleshooting or who just seem to know a system well, and you think, "Damn, that guy is so smart, I could never do that." What you don't see is the endless hours of work that go into being that guy. It's not about being the smartest guy (although smarts help), it's about being willing to spend time with the problem. I can't tell you how many times I've been working on a technical problem, and I'm just out of ideas and poking at it, when suddenly I notice something I hadn't seen before... There's this moment like... "hey... that's wierd..." and then you start pulling on that string and it leads you to the solution.
Use , instead of ; which looks like a statement. int numLetters = switch (day) { case MONDAY, FRIDAY, SUNDAY -&gt; 6, case TUESDAY -&gt; 7, case THURSDAY, SATURDAY -&gt; 8, case WEDNESDAY -&gt; 9, // last , optional. }; Mix of : and -&gt; for fall-through. int numLetters = switch (day) { case MONDAY: case FRIDAY: case SUNDAY -&gt; 6, case TUESDAY -&gt; 7, case THURSDAY, SATURDAY -&gt; 8, case WEDNESDAY -&gt; 9 // last , optional. }; Allow default -&gt; value when nothing matches.
My company has two major communities of Java developers. The larger group is predominantly NetBeans, the smaller use eclipse. I have all three installed in my desktop. While I like all other jetbrains products, I find that NetBeans swing gui builder is sufficiently compelling that I end up using NetBeans for all Java projects. Eclipse is hands down the worst ide for all things.
I would assume "case COND -&gt; Expression" turns the switch into an expression and not statement and thus won't allow return in the middle of the case expression.
&gt; Mix of : and -&gt; for fall-through. They felt that this did not lead to readable code, and so they do not allow it. If you want fall-though, you'll have to stick with colons. &gt; Allow default -&gt; value when nothing matches. They already have this in the preview.
Yes, that is correct. They were mostly concerned with readability. If `return` can be used in switches, it may be hard to discern a switch's return from a method's return. Other keywords, such as `break-return` and `break-with` were considered, but they ended up choosing `break`.
Great advice, and so much truth in it. Thanks!
It's exhaustive if you use it as an expression, you're just using it as a statement. It would have to be TestEnum result = switch(sample) { ... }
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
I didn't know switch could be used as an expression - it seems like this is new in JDK 12? JDK 12 isn't an LTS release so I'm not familiar with it or this. I still can't find detail that this causes the switch to be exhaustive, but that would be a welcome feature and I'll take your word for it - but it's still not good enough. It still means you have to support all your old code and consider the differences between expression switches and the old kinds, and of enums, ints and Strings, between expression and statements, you get exhaustive pattern matching in 1 of the 6 cases.
"Best" is a really ambiguous metric. AdoptOpenJDK (hotspot, not openJ9) would be the most standard though.
What's the story with OpenJ9?
It got the best gui designer and it's very organized ide.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Apache NetBeans supported Java 8 right from the start. After all Apache NetBeans 9.0 was essentially the same code base as (Oracle) NetBeans 8.2 Only support for Java 9, 10 and 11 came later.
i heard the other day a c# guy waling about the "static classes". wtf is that all about? they are, in the best case scenario an anti-pattern. useful sometimes, usually not, and don't let me catch you doing that during code review . wtf is with you c# people and static classes? are you all that that dumbstruck? has nobody taught you how to write code?
Thread.sleep() works fine. In a game loop you don't need anything more complicated than a sleep call. Also, from my limited experience, game physics and rendering happens on a single thread.
Corollary: learn to use a debugger, so you can step through your code and don’t have to spend days adding print statements
How to store access token in browser?
[removed]
Make you code not only understandable by a computer but also by human.
You're missing [Zulu](https://www.azul.com/downloads/zulu/) and no doubt others.
Why openJDK is not an option? http://jdk.java.net/archive/
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
The language does not matter, neither do the syntax or the IDE. Its' the Design that is important. Coding is about putting together a machine made of self contained components that work together. Meet this thing called "Design Patterns"...
The Java exhaustiveness rules are different with the expression form iirc so that's what you probably need to check, there's extensive discussion about it on the mailing list. It's not a "crutch" so much as it is held back by concerns about things like separate compilation and evolution of API enums... Speed matters in some situations. Yes it's easy to come up with some examples of where you don't care, but if it's done repeatedly in the hot path of something repetitive and performance critical that might be different. Wanting to stay away from libraries for simple things isn't just about their size. Introducing dependencies adds maintenance burden and increases the barrier of entry for new devs to the team. Obviously I'm not saying libraries are always bad. It's fine that it works for you. But it's not a given that they're always fine in all situations. Java evolving to make more and more of Vavr obsolete can only be a good thing for all of us. As has been said, this is only the first step down the road to pattern matching etc. :)
[removed]
Copy/pasta leads to spaghetti code. CTRL+C / CTRL+V -- not even once!
I went for the Azul one, because I like them better.
This one absolutely. I can't count hours I've spent on implementing and debugging errors which taught me how to avoid most common problems (typos, undefined/null variables, common concurrency problems). This is something you simply have to learn hard way but then you can quickly spot issues when reviewing code of less experienced devs. So OP - when fixing bugs in your code, try to figure out what's the root cause of a problem, or you may end up fixing symptoms otherwise
Learn to use debugger and proper IDE. I remember I've spent nearly 200 hours on 12 tasks from C++ programming 2 course in the first year of UNI. Had I used debugger with proper IDE and built in compiler and static code analysis (compared to debug logs with sublime text and manual g++ compiling via command line) I could cut it down to maybe 100. This skill will pay of big time in the future for you.
Is Azul free of charge?
Yes, their OpenJDK is free and open.
There are fanbois willing to do the god's work for free (I count myself in).
I never heard of Azul company. Will Amazon Corretto will more reliable, since Amazon is a Giant company?
We switched to AdoptOpenJDK some time ago and they do offer a Java 11 runtime only (JRE) for Windows: [https://adoptopenjdk.net/releases.html?variant=openjdk11&amp;jvmVariant=hotspot#x64\_win](https://adoptopenjdk.net/releases.html?variant=openjdk11&amp;jvmVariant=hotspot#x64_win) &amp;#x200B; Amazon Coretto does offer a JRE for Java 8 but not for Java 11, maybe they plan to do so later or not, I don't know.
Thread sleep (note i'm talking about general OS concept, not Java method) is unsuitable for precise timing, such as required in game loops. It's somewhat of a classic game development problem that arises regardless of language or runtime.
I don’t think reliability is in any way related to the company size (ex: Microsoft). Azul has more people dedicated to and specialist in JDK than Amazon, though.
Thread sleep is unsuitable if you aim to have a stable frame rate. Sleep time is only the minimum time, OS isn't required to wake the thread up immediately.
It cannot be in either direction. OS removes thread from scheduling until the specified amount of time passes. Then, it will schedule it after an arbitrary delay. Because of this sleep calls are unsuitable for making stable frame rates/simultions.
Context switch is the minor downside in this application. The major downside is that your thread will continue with arbitrary delay after the sleep time has elapse. The OS is not required and probably cannot schedule it immediately.
Yes but on a different team. Mostly because the team leader doesn't use anythings else or hasn't tried.
JDK11 does not have a JRE and won’t have one. You are supposed to build a tailored executable from your code. https://medium.com/azulsystems/using-jlink-to-build-java-runtimes-for-non-modular-applications-9568c5e70ef4
You should not use Oracle JDK unless you are paying for a license. The default license only covers private and dev use. Use any of the other builds instead, e.g. Amazon, RedHat, etc.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Might want to look into [OpenJDK](https://openjdk.java.net/). Worth noting that JavaFX was removed from JDK 11 so will have to be [imported separately](https://openjfx.io/openjfx-docs/)
Keep in mind that OpenJDK builds are no longer being produced by Oracle for free.
If you are developing desktop application using Java I highly highly recommend using NetBeans RCP as framework and NetBeans IDE for development. We have done that in a large scale application and the modularity enforced by the NetBeans RCP is a blessing to have. Shipping such application is very easy since you can use the same installer as netbeans itself or any other free installer.
It looks like ORACLE is making further distance between ORACLE and Java on a daily basis :-).
Turn it into web app/sass.
AdoptOpenJDK provides a JRE for Java 11 : [https://adoptopenjdk.net/releases.html?variant=openjdk11&amp;jvmVariant=hotspot#x64\_win](https://adoptopenjdk.net/releases.html?variant=openjdk11&amp;jvmVariant=hotspot#x64_win)
One caveat to consider is that AdoptOpenJDK 11 is not JCK certified.
I read this as "Netbeans is leaving"
You can use jlink and java native packaging to create apps executable for mac, linux or windows. I found a tutorial on cross platform Jars with Java 11 https://www.youtube.com/watch?v=w_PsCNqqcE4 To use jlink etc... https://www.youtube.com/watch?v=2fWyhJ2nhjw
Java is most closely associated with Oracle. But from the very the beginning back in the late-90's, IBM has roughly just as invested. There was the Oracle JDK, which was most commonly used by the general community. But there was also the IBM JDK... which was optimized for IBM's midrange and mainframe hardware offerings, and/or the types of use cases most common for large IBM customers. HotSpot is basically the open-sourced heir to the Oracle implementation, and J9 is basically the open-sourced heir to the IBM implementation. Generally speaking, it doesn't much matter which one you use. J9 seems to perform much better under some benchmark tests, but HotSpot seems to perform better under others.
All of those solutions delegate to OS thread API and thus aren't precise enough for rendering loops.
I suggest using RedHat's builds.
The recommended practice is to bundle the runtime with your application (use jlink). But why use JDK 11? The easiest (and overall cheapest) update procedure is the gradual feature releases. Staying on LTS is for those who have a good reason not to use current JDK versions, and prefer a very non-gradual upgrade process (less gradual than the old one).
I am still not sure what steward means but i read the article. The author is saying that red hat and ibm will be able to provide updates and support with openjdk8 and openjdk11 so developers can keep using it without worry. The author also states that there are a lot of companies jumping to support openjdk but the author feels only a few companies can actually help. I don't think thats very accurate. There are really talented people in companies that are not redhat or ibm.
Not "best" but most popular are Oracle's OpenJDK builds at [jdk.java.net](http://jdk.java.net/)
Not "best" but most popular are Oracle's OpenJDK builds at [jdk.java.net](http://jdk.java.net/)
&gt; But, we notice that there are no JRE for Java 11. I plan to use jlink in the future. Meanwhile, I just bundle JDK with some stuff excluded (src.zip, jmods, etc.) - works exactly like old JRE
This isn't a subreddit for javascript. Try: /r/javascript
So true and for new Startusps which are interested to work on Java stack, Oracle seems to be unwelcoming and daunting.
There is a post about it on this subreddit, I'll just paste the [link to my comment](https://www.reddit.com/r/java/comments/be91du/leadership_of_openjdk_8_and_openjdk_11/el46pz5) there.
\&gt; I am still not sure what steward means but i read the article. See [here](https://www.reddit.com/r/java/comments/be91du/leadership_of_openjdk_8_and_openjdk_11/el46pz5/).
You can use the [jpackage](https://jdk.java.net/jpackage/) tool. There is a [Gradle plugin](https://github.com/beryx/badass-jlink-plugin) that allows you to create a jpackage application installer with minimal effort. (Full disclosure: I created this plugin.)
Just a reminder, in the late 90's Oracle did not own Java, they hadn't yet purchased Sun.
It can, though. I've seen it happen. I don't think Java relies entirely on the OS for these things.
Hmm ... AWS hired James Gosling some time ago.
That’s true, just checked it. This indeed makes my argument invalid.
Yea, NetBeans Swing integration os Just too good.
I am a bit worried about the rate that ORACLE is distancing itself from Java (JavaEE/GlassFish/NetBeans) considering that most of the investment on Java platform (JVM and classpath) is coming from oracle. Looking at the chart [https://imgur.com/lYnMJ3u](https://imgur.com/lYnMJ3u) 75% of investment in Java 12 came from ORACLE and that is hundreds of people. I am thinking if ORACLE reduces the investment would other actually commit to invest such huge capital on developing Java? Note that source for the diagram is coming fro this blog post: [https://blogs.oracle.com/java-platform-group/the-arrival-of-java-12](https://blogs.oracle.com/java-platform-group/the-arrival-of-java-12)
Read carefully. Read the compiler errors and warnings. Read the stack traces. Read the documentation. Just fucking read. Most problems disappear when you take the time, step back, read whats happening and then go back in.
Thanks
Oh really? Never knew that
&gt; It seems like a bad thing, to require users to download entire JDK, to run our app. The thing with OpenJDK etc is that you can modify it freely and delete whatever you don't need.. and then ship it with your app. jlink is built-in way of doing that Also Launch4J is very old, it will not find your AdoptOpenJDK installation because it is not in Windows Registry.
Note: The article says nothing about OpenJDK 12... aka the current version.
True. 12 is not LTS. So it won't be updated/supported for more than 6 months if I remember correctly.
Of course the best quote from the article is this: &gt;Despite Java's continued popularity, some believe the programming language's best days are behind it. &gt; &gt;"While still important and definitely not legacy, Java is not one of today's growth technologies," said Torsten Volk, an analyst at Enterprise Management Associates in Boulder, Colo. "All of these traditional Java vendors should be focusing on pivoting toward today's fast-growing stuff, such as Python, JavaScript and Node.js."
If this guy has not mentioned GoLang I would dismiss his the above statement as BS.
Oracle are all about reducing costs to the minimum. They are not abandoning Java, just leveraging the ecosystem for free labor as much as possible and trying to monetize some of their work. Their PaaS services are all about Java, they ain't going anywhere; but why bust your ass if others can do it for you?
I don't feel Python and JavaScript are real competitors to Java, especially in enterprise. I want to stay away from Java too (mainly because of Oracle), but it's hard to find a solid alternative...
&gt; Their PaaS services are all about Java, they ain't going anywhere; but why bust your ass if others can do it for you? Large chunks of expensive software they license out is also written in Java, it's something they actually rely on internally pretty heavily - it's not going anywhere.
Internally, they use Java 6 and 7. Weblogic is barely is to the point to run on Java 8. And you know how long it takes to migrate any of the behemoth they sell to newer Java versions. I hope redhat, IBM now, get more active rule. Smae goes to Pivotal, and maybe Google. They have good skills and ideas.
Game loops dont necessarily require precise timing depending on how you write them, right? If you’re using ‘delta’ game updates at least.
LTS doesn't make any sense when taking about OpenJDK. The various binary distributions of the JDK haver LTS versions, but the project itself doesn't commit to anything. Obviously the various commercial offerings are likely to commit their changes back and various branches will continue to get updates as long as there will is there. Java 6 is still getting updates for example.
By support, I meant the duration of time that Azul would be providing $free to use LTS releases/builds of Zulu. I had misinterpreted the [roadmap](https://www.azul.com/products/azul_support_roadmap/) website, thinking that they weren't going to be providing free/open source LTS releases after the initial 6 month window requiring a commercial license to get the LTS releases. But, upon looking at the [JDK comparison matrix](https://www.azul.com/products/zulu-enterprise/jdk-comparison-matrix-2/), it looks like they're offering LTS Zulu releases for longer. How they're separating the OSS vs Commercial Support offerings is really confusing.
I tried netbeans and intellij both recently, honestly I like netbeans better. And its GUI builder is unmatched. I also suspect some astroturfing is going on in favour of Intellij.
Assuming astroturfing is like denying something's good. We all have our preferences man, it doesn't mean it's astroturfing.
Yep, the whole thing is a bit of a mess. OpenJDK is now the reference implementation of the JDK. In fact, The Oracle JDK is the Oracle generated binary of Open JDK. However, Oracle is only producing binary releases of Oracle OpenJDK for a 6 month window after it's GA release. Once the GA for the next version is release, support for the previous Oracle OpenJDK is dropped. Oracle is still maintaining the code for the LTS releases (e.g. 11). But, they are not producing binaries for those versions after the 6 month window.
It was sad when Oracle beat IBM for the steward job of Java from Sun. That came at a time when IBM devs were doing some great work with Java, making it fresh and alive. So I am not surprised by IBM being the steward for OpenJDK 8 and 11, it just means we'll be in good hands. But maybe one day IBM will fully take it over from Oracle...?
Do TDD and you will rarely need to use a debugger anyway.
“Barely”? Weblogic 12 has been running on Java 8 [since 2014](https://blogs.oracle.com/weblogicserver/weblogic-server-1213-on-jdk-8-v2). For java 11, I suspect they will support it first on their “Java Cloud Service”, and then much later for on-premises versions. This seems to be the *modus operandi* for all their product lines at the moment.
JDK 12 is not a LTS release, and any features in there are subject to change - we generally don't talk about features of a language until they're in a LTS. &gt; Yes it's easy to come up with some examples of where you don't care, but if it's done repeatedly in the hot path of something repetitive and performance critical that might be different. If speed matters in the matter of nanoseconds, Java is not the language for you. You're unable to see the forest from the trees if you believe that 20 microseconds is your bottleneck, and should be considered as a first priority. &gt; But it's not a given that they're always fine in all situations Exactly what I said! I still think you're arguing from a point that "there's never any reason to use switches", which is very far from what I've said. I'm saying that you almost never need to use switches. Yes it's easy to come up with some examples of where you do care, but if you repeatedly ignore better constructs for non existent use cases, you're crippling your own productivity.
 My bad about the severity of my comment. Java cloud service is weblogic packages and running on iaas. (oci or oci-c). So as long as weblogic itself does not run on Java 11, JCS won't. Unless Oracle try this technique to sell it on the cloud.
I think the above person was being sarcastic - those languages are great at what they do, but are not Java killers. The person quoted is likely on some hype train and is not able to see the massive limitations those languages have compared to Java &amp;#x200B; I found that quote a bit funny - an analyst at Enterprise Management Associates sounds like they might be just a little bit full of shit
As a Mainframe COBOL developer and distributed Java developer I would like to tell the source of that quote, "Good luck with that."
is there a better sq version?
&gt; Unless Oracle try this technique to sell it on the cloud. Yes, that's what I meant: I bet they will make it possible to run java 11 on JCS first, and then release the underpinning weblogic instance much later - if at all.
I like the if at all part.
God, this so much.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
&gt; JDK 12 is not a LTS release, and any features in there are subject to change - we generally don't talk about features of a language until they're in a LTS. Not true, if a feature is in the language then it's there for good, regardless of whether or not it happened to land in an LTS release. If something is a *preview feature*, however, then of course it's subject to change or removal. But that is entirely orthogonal to LTS. &gt; If speed matters in the matter of nanoseconds, Java is not the language for you. In the situation I described the time for doing it once is irrelevant... You could be doing it millions of times and little else, who knows. A three times speedup is not insignificant. Obviously in the majority of cases you *won't* care about performance, I was just pointing it out. And I disagree that Java is not an appropriate language for performance critical applications. &gt; if you repeatedly ignore better constructs for irrelevant use cases, you're crippling your own productivity Exactly my thinking. And why I would recommend using switch expressions *when they are appropriate* rather than deliberately "staying away from them" ;). In the case that it's a choice between a switch expression and the exactly-equivalent Vavr construct I'd go for the one that's a language feature. And while switch use is fairly rare, it'll surely get far more common with this and upcoming pattern matching. &gt; Exactly what I said! Okay great :). &gt; I still think you're arguing from a point that I'm just clarifying my own opinion, not trying to start an argument. As you have pointed out our opinions do seem to have some overlap.
RemindMe! 3 days
I will be messaging you on [**2019-04-22 19:17:55 UTC**](http://www.wolframalpha.com/input/?i=2019-04-22 19:17:55 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/java/comments/bf27m8/creating_a_readwrite_io_fe_with_java_which/elagumt/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/java/comments/bf27m8/creating_a_readwrite_io_fe_with_java_which/elagumt/]%0A%0ARemindMe! 3 days) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! elah9p2) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
What a great write up, thank you for creating/sharing.
I don’t think so. I was wondering the same thing.
It looks like in your [submission](https://www.reddit.com/r/java/comments/bf3a7q/a_simple_standardprogrammer_calculator/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Brilliant post. Many features of Maven I did not know about are shown. Thank you!
If you work in a "Java house", find out what framework the other Java developers use and use that one.
happy cake day
I’m not talking about app servers, Oracle know they are on the way out as does everybody else - Kubernetes and fat jars are the new app server. I’m talking stuff like massive ERP systems, etc.
good post. other than lombok, things look good. But the website itself that's a PITA to navigate. One link click and it did 10 redirections. The back button is not a thing they want to work on their website. :(
Because we almost exclusively work with back end applications. &amp;#x200B; The only front end is legacy code with JSF - that should make it clear why I've asked.
Thank you!
If you aren't going to follow the standards of your shop, why not use php? It doesn't really matter which framework you use. Use the one you want to learn the most.
I (and the rest of my team) use it at work on a daily basis. Both for desktop and Java EE.
OK, I'm fully assuming at this point you don't know the difference between a framework and a language
You are the one that wanted to use php: &gt;I've been tempted to use PHP
...ok, so also now assuming you cannot read, considering you've cropped the rest of the sentence that followed it.
You want to be an ass, OK, be an ass.
i'm certain hardware acceleration is the culprit but sadly this does not fix it :(
As igotthis1too said, it really doesn't matter which framework you use. They all can do the job. Go ahead and use spark if that's what you want to use.
You're not wrong, but I think you're being intentionally misleading. AdoptOpenJdk is now and will always remain free. Amazon Coretto is now and will always remain free. There are at least six, professionally maintained, 100% open source versions of the JDK available at this moment with LTS. So, sure Oracle isn't supporting LTS builds after six months, but there are plenty of other companies doing so in their absence.
I was looking for ideas/advice, not permission though. There are a variety of frameworks that have different strengths, some of which I may not have even heard of. This is all very 'stackoverflow'
Thank you! That helps a lot.
Sorry, your post said you were looking for a framework to use and it looked like you are asking if spark framework was OK. Good luck.
No - this is the equivalent of asking for restaurant recommendation on a restaurant thread, and getting responses like "it doesn't matter where you eat" and "use the one you already use".
OK, you could use the Spring framework. That would do the job.
Red Hat provide a Windows build of OpenJDK over at [their Developer portal](https://developers.redhat.com/products/openjdk/overview/). Their contributions and commitment to the project make them a pretty safe bet when it comes to support as well.
Take a look at [Red Hat’s OpenJDK offering](https://developers.redhat.com/products/openjdk/overview/) if you haven't yet made a decision. Given their contributions and commitment to the OpenJDK project, they're a pretty safe bet IMHO, and a solid alternative to Amazon.
NetBeans shill detected /s
Moved to grade, no regrets at all.
OpenJ9 is oriented to run Microservices, with a low memory-print and fast startup times. It's garbage collector is very agressive. It very-slightly slower than Hotspot in most cases.
If I was to migrate to OpenJDK 11, would you suggest going with Adopt or Zulu? They look very similar, and beside an installer, more tests, and optional tech-support, is Zulu really that different? Can we trust them to not fidget with the original code-base?
Nice! The final code I came up with is: public abstract class RunOnce&lt;T&gt; implements Callable&lt;T&gt; { public abstract T doOnce() throws Exception; public abstract T repeat() throws Exception; private final AtomicBoolean HAS_RUN = new AtomicBoolean(false); @Override public final T call() throws Exception { return HAS_RUN.compareAndSet(false, true) ? doOnce() : repeat(); } } And as you said yes probably Java's JIT is smart enough to optimize that AtomicBoolean once it become useless. I went for "implements Callable&lt;T&gt;" and kept some of the nice things that comes with it compared to Runnable (that "throws Exception") but nothing stop us to write it with runnable (but taking care of return value could be a mess).
Azul makes the Zing low pause JVM. They're not IBM big, but they have a stable of Enterprise accounts that aren't going anywhere overnight. Also, unlike Amazon their core business is the JVM. The team sizes behind each JVM may be more comparable than you think. Azul may well have the bigger team by a large margin due to their focus. Corretto is also a brand new entrant to the space with no track record at all. That's not to say they won't do a great job, but there's no history to judge them on. Zulu (Azul's OpenJDK distro) has been around many years.
JVM is driving so fucking much.
Python that’s laughable
Nice writeup. Some features not mentioned, but I really like: [dependency-check-maven](https://jeremylong.github.io/DependencyCheck/dependency-check-maven/) plugin to scan your dependencies for vulnerabilities. I tend to get a lot of false positives with this plugin, but when it points out real issues, I'm grateful. While tools like Nexus Pro or Artifactory can do this, a free option that doesn't require a separate server is quite nice. [pgpverify-maven-plugin](https://www.simplify4u.org/pgpverify-maven-plugin/) to verify cryptographic signatures on dependencies [license-check-maven-plugin](https://github.com/mrice/license-check) to verify you aren't doing something like including GPL dependencies in your MIT licensed project [license-maven-plugin](https://www.mojohaus.org/license-maven-plugin/) to generate your projects license file from your project and dependencies Also, [Maven profiles](https://maven.apache.org/guides/introduction/introduction-to-profiles.html) are really handy for full featured pom files. Generating all these reports, licenses, code scans, etc can take a lot of time. In development, fast turnaround is desirable. Profiles let you omit some of the more time consuming parts of the build during dev, and then run them in CI where the full build cycle is desired.
I will suggest you to go with what Spring provides you, since you already selected it, there are a lot of subprojects from Spring to achieve anything you want [http://springtutorials.com/spring-ecosystem/](http://springtutorials.com/spring-ecosystem/). You mentioned Hibernate + JPA, this two are kind of the same, hibernate is an implementation of JPA and it can be supported by Spring Data JPA: &gt; **Spring Data** &gt; &gt;Spring Data, like Spring Cloud, is another umbrella project with many wonderful offerings. &gt; &gt;Think of Spring Data as a common API to do CRUD operations for different databases. It has support for all the popular SQL as well as NoSQL databases. &gt; &gt;With Spring Data, It is possible to swap your database with minimal code changes. Especially if you don’t do anything database-specific with your code. &gt; &gt;If you use Hibernate, you could use Spring Data JPA underneath it. You will cut down your boilerplate code to a great extent. &gt; &gt;You won’t be writing CREATE, READ, UPDATE and DELETE (CRUD) implementations now. &gt; &gt;You won’t be implementing ANDs or FindBy methods anymore. &gt; &gt;What will you do with all that extra time? &gt; &gt;If you take Spring Data out of your project, you do all the boilerplate coding.
Consider afterburner.fx for dependency injection. Lightweight (3 classes) and easy to use. I use it in practically every JavaFX application I touch.
Have you ever considered .net core?
Frameworks like Spring and JPA/Hibernate are used in professional software development, and it is important to know them, but they won't teach you proper ways to architect your software. They are only tools, not substitutes for understanding and judgment. I would suggest stepping back and learn patterns like [Clean Architectures](https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html). There are plenty of books on this subject. My favorites are [Growing Object Oriented Software Guides by Tests](http://www.growing-object-oriented-software.com), [Agile Patterns, Practices and Principles in C#](Agile Principles, Patterns, and Practices in C# https://www.amazon.com/dp/0131857258/ref=cm_sw_r_cp_apa_i_6SNUCb5V0XBYR) (the book has very little to do with Agile), [Clean Code](Clean Code: A Handbook of Agile Software Craftsmanship https://www.amazon.com/dp/0132350882/ref=cm_sw_r_cp_apa_i_qUNUCb602AHEX), [Clean Architecture](Clean Architecture: A Craftsman's Guide to Software Structure and Design (Robert C. Martin Series) https://www.amazon.com/dp/0134494164/ref=cm_sw_r_cp_apa_i_XUNUCb4N5TRBN), [Patterns of Enterprise Application Architecture](Patterns of Enterprise Application Architecture https://www.amazon.com/dp/0321127420/ref=cm_sw_r_cp_apa_i_QWNUCbZNTGWNZ). Martin Fowler's [website](https://martinfowler.com/eaaCatalog/) has a lot of good stuff about all architectural topics, from the stuff you're asking about, to microservices and big data. Uncle Bob has a lot of videos on YouTube that are well worth a watch, like [this one](https://youtu.be/Nsjsiz2A9mg). Skip past the first five minutes or so unless you want a physics lesson, too.
&gt;You're not wrong, but I think you're being intentionally misleading. That's the thing, because of the whole new licensing situation I was being very careful with nomenclature. The state of the Oracle (Open) JDK is confusing to someone who hasn't done the research on it. It's specifically why I called out the *Oracle* OpenJDK. I wasn't trying to mislead. I was trying to be concise. You are right though, I should have mentioned that there are vendors that are offering builds of OpenJDK past 6 months. &gt; &gt;So, sure Oracle isn't supporting LTS builds after six months, but there are plenty of other companies doing so in their absence. That is absolutely true. However, each of the "flavors" of OpenJDK comes with their own caveats which requires analysis when considering using them. (I'm very open to corrections about any of my info. Please feel free to do so) * Oracle Open JDK: Reference implementation, but no builds for LTS releases after 6 months after GA. * AdoptOpenJDK: This looks promising, but the JDK 11 builds are not TCK/JCK certified nor do they have a JDK patent agreement. * Azul Zulu: Great LTS build release lifespan, but trying to determine what is free vs what is covered under their enterprise license is very confusing. Additionally, they state the that there's no guarantees of how long they'll produce builds of Zulu Community. (I actually have a "sales" call with them next week to try and wrap my head around what's free and what's commercial). Redhat OpenJDK: Great LTS support, but requires a RHEL commercial subscription to get LTS builds past 6 months. * Amazon Corretto: Truly free LTS! But, Amazon Linux centric and official docker images are Amazon Linux based only. * IBM: Requires commercial license. Trying to figure out which OpenJDK distro met our needs was non-trivial. Ultimately, we decided on Corretto because of the JCK certification, promised support / distribution lifespan, and permissive open source license. I'm also really curious about Azul but need some clarification there.
I don't use the failsafe plugin myself for integration tests, I coerce surefire into a series of executions - https://github.com/BuildRadiator/BuildRadiator/blob/master/radiator/pom.xml#L142. In that case unit followed by 'service' followed by selenium. The last two are but integration tests.
I wish I read this, when I started out as a java developer.
I landed on AdoptOpenJdk because after 4 months of trying to find a solution to the new licensing terms it was the only build that was "plug and play" with our current infrastructure. I didnt want to switch linux distros, and I didn't really care about certification. I just swapped the Java binary in staging to make sure the servlets were functional, ran a battery of tests over 2 months and flipped production onto AOJDK without a hitch. The only issue was some weird serialization bugs with mariadb that I was able to fix in a few hours. Everything else was totally painless.
We were in the same boat as well. We even started transitioning to AOJDK. But, that's when I learned that they weren't going to be able to get JCK certification for their builds. That was a deal breaker. Corretto has been essentially plug and play for us, and setting up alpine based Docker images has been painless.
Fair enough. Is James Gosling on board Amazon a good indicator?
Red Hat has builds for Windows?
What does "Supplemental (no support)" mean next to the MSI installers?
That's a stellar indicator, and the fact that Amazon and AWS have been using their tweaked version of OpenJDK for years. They also publish their rationale for their changes.
So what happens with Red Hat's OpenJDK and IBM's OpenJ9 JDK? Are they going to merge?
Do what you love and not what you think you should be doing.
Microsoft was forbidden from bundling an incompatible implementation of Java on Windows. No problems with bundling a compatible version of Java on a separate application. Also, there wouldn’t be restrictions on a wholy owned subsidiary.
I'm just wondering because Microsoft said it was modified specifically to run better on Windows.
Lol, do you know anyone who has actually *read* all of the Art of Computer Programming? I've studied maybe one or two chapters in depth and that alone took several months of evenings. &gt; refactoring [is] not programming What the fuck are you talking about?
The JVM Microsoft used to bundle with Windows is not the same that is bundled with Minecraft today.
Not sure what you mean, It’s a free open source download, with an open development process via the JEP.
I wouldn't `final` call(), subclasses might want to overwrite/wrap it in logging/for mocking, it's fine to leave it to them to not break the contract. Don't you need to make doOnce() `protected`? Else people could call it directly instead of call(). Similarly if repeat() is only to run after doOnce() has, you need to protect it if you're not trusting those with references to instances (similar but different to not trusting those writing subclasses).
AFAIK, Zulu's certified by the rigorous Java/Sun standard for proving an implementation conforms to the language spec, so they'd have no significant incentive or potential to start deviating from the normal. And it's still Open, so you should be able to see their changes, &amp; stick with a fork you favour in the worse case.
Programming help should go in /r/javahelp. **Removed**
Well, who was really paying for support to it, specifically, when it was embedded in the JDK ? Imho, JavaFX will benefit from having decoupled release cycle from JDK's one. The guys from gluon, tornadofx, JFXtras, TeaVM etc will able to submit patches without "waiting" for Oracle response...
Yeah but that's pure bs :)
keming error?
Yeah, it's for development purposes (as they say say it).
The dispute with Sun was because they bundled an incompatible version of Java. Code written for it would not work on the Sun jre. At the time they were accused of 'embracing and extending' standards: making an implementation of an open or competing standard with changes and improvements that would only work properly on windows, with the plan to use their dominance on PCs to gain de facto control of that standard. They are free to make an implementation of the JVM that runs better on their product, as long as it doesn't break the standard. [Many companies do this.](https://en.wikipedia.org/wiki/List_of_Java_virtual_machines)
What version (complete java -version) is bundled with Minecraft?
🤣, I am actually thinking to go back to intellij, as I want to learn Kotlin!
JVMs can be modified to perform in different ways without breaking conformance with the specification. IBM has a clean-room implementation of the JVM (OpenJ9) and Azul (who I work for) have a commercial JVM called Zing that uses a different garbage collector and JIT compiler to provide much better low-latency characteristics than Hotspot. Both of these pass the Java SE TCK. As others have pointed out, the dispute with Sun was due to Microsoft adding and removing APIs in the java and javax package namespaces. That broke compliance with the spec, thus the lawsuit when they tried to call it Java.
About 80% of any real-world programming job is reading, not writing code. About 80% of the code you write is basic plumbing, not problem-solving.
There’s a knight of new that just really prefers c#.
why did you link a rant about radical feminism, equity, diversity, and inclusion on a Java forum? of all the timestamps, you picked 2603
`java version "1.8.0_51"` `Java(TM) SE Runtime Environment (build 1.8.0_51-b16)` `Java HotSpot(TM) 64-Bit Server VM (build 25.51-b03, mixed mode)`
Not sure if it applies to you, but when I first started CS, it seemed like all of my classmates knew so much more than me. Then it came time to do the assignments and tests and it turned out that most of them were just full of it. Be self aware of what you need to learn and learn it. Don't worry about what others appear to know and stress out about it.
Or even just so you still understand it 3 months later
Mental health is just as important too.. go home. Leave work at work. Burnout is very real and keeping that work/life balance doesnt make you any less of a developer
I’m going to stop discussing most of this because I believe I’ve made my points clear. But for the first part, about the LTS releases being the only ones with backwards compatibility promises - I’ve looked everywhere and can’t find mention of it. I swore this was a feature they were looking for, I thought I read an article about oracle wanting to have users play with the features for a few months before committing. But with no evidence of that I have to admit you’re right and I imagined the whole thing, so I apologize.
The "Custom" java runtime is just a old version with some optimizations for Intel HD graphics drivers, there are some that dont run pass v81
The Microsoft edition of Java added things like P/Invoke and delegates to their version of Java, which produced incompatible bytecode which could not be run on any other JVM, violating WORA (write once, run anywhere). This violated Microsoft's license agreement with Sun, and Sun sued.
You can look at Liberica JDK (https://bell-sw.com)
Liberica JDK https://bell-sw.com/
You can nest more classes within a class if you really need to, but why are you looking for an online compiler? Even for learning, an IDE like eclipse would be way more useful.
I agree with /u/0x256, but supposing you really need to do this, could you just nest the classes and compile it that way? class A { ... } class B { ... } class Main { public static void main(String [] args) { var a = new A(); var b = new B(); } } becomes: class Main { class A { ... } class B { ... } public static void main(String [] args) { var a = new A(); var b = new B(); } }
Oh I have Eclipse and IntelliJ for writing code, but I need a site where I can run it while at a friends house, school, etc(where they wouldn’t have an IDE installed). My bad, should have clarified.
Not only can you meet classes, a single file can contain several top level classes, as long as only one of them is public.
I haven't tried it, but maybe [AWS Cloud9](https://aws.amazon.com/cloud9/) is what you're looking for? You need an EC2 instance but a t2.micro instance is free for the first year so you'll have plenty of time to decide if it's useful enough to pay for after that.
Try https://repl.it
Repl.it
Id be very suprised if whatever computer your using doesnt have java installed. You can compile / run all your files from a terminal. Eg. https://stackoverflow.com/questions/20365885/how-do-i-run-java-program-with-multiple-classes-from-cmd
you need jdk for compiling? jre is installed on most PC's only.
Thx - this was a big help!
Thx. OAuth is nice - but we would have to change authentification in our www portal first. Which needs to be done at some point - but this is out of the question right now. But thanks anyways. OAuth error response does help.
It doesn't really mean much though, in practice. Andmore, for example, has been languishing soon after leaving incubation: https://projects.eclipse.org/projects/tools.andmore/
So the windows specific version that is faster and runs on machines faster isn't some C++ / C# rewrite, it's Java?
If you can't buy into an OAuth 2.0 framework, at least study the OAuth 2.0 specs not only for examples of responses, but also the design, particularly security considerations, so you know the pitfalls, especially of token based auth.
There's still a java version available. Maybe we're still talking about that one.
I'm struggling to find a job right now too so take my advice with a grain of salt I suppsie: I'm not sure how your resume looks so it could come down to simple formatting. I'd place your java projects under the "experience" category
if you aren't working in an IDE you probaby shouldnt be coding anyways. I used to think this way, being prepared for anything but it's not worth it in the long run
I'm in the exact same boat as you except I'm still in college. I'm majoring in economics and started studying computer science but only have time to complete the minor. My current strategy is to find a software development internship because there are less requirements than an entry level position however you may be past this option at 25. If you haven't used hacker rank, you could start making progress there and use it to help find a job. you could also look for startup jobs on angel list as startup's tend to look more at your skills as a developer as opposed to your formal education. &amp;#x200B; Note, I don't know what recruiters like to see when looking at GitHub repositories, but I find it really convenient when someone deploys their projects using free hosting and has the link on their repository or website. &amp;#x200B; Best of luck in the job search and if you do find a really successful method to getting a job with an economics major and computer science minor, I would love to hear it!
I am junior java backend dev with similar background like yours, i looked at your repository, lots of good stuff. I guess you are looking for a job in a highly competitive area. In my country you'd be hired immediately. I am not sure that you need a internship though, as you have covered most of the stuff taught at an internship with those projects.
Your stuff looks good for an entry-level position (I, for one, like to see a portfolio like that -- it shows me that you can actually complete a project -- even if it's a twitter clone). Maybe try looking outside of your area for entry level jobs? I'm in Austin, TX and the job market here is very hot. We're not hiring for any positions at the moment; however, there are MANY available. I know Atlanta, Boston, Chicago are also cities with many programming jobs available.
Well if op did those projects in hope to get some experience for a future job, isn't that wrong to put under experience
Take out the word. "crappy" in the bond section. 😄
I personally like codiva.io also
&gt; if you aren't working in an IDE you probaby shouldnt be coding anyways. What do you mean by that? That seems a bit radical - I often use an editor for a quick edit and compile from my terminal.
&gt; my degree is in Economics with a minor in Computer Science. &gt; [...] searching in Los Angeles and Orange County. My feeling is that you are in the wrong cluster; your degree + Java say "Enterprise", and LA is not exactly a hotbed for that, afaik. I bet you would get calls if you were on the East Coast or Chicago, or even just San Francisco.
Don't worry about the experience requirements so much, most of the time they're bullshit. Most juniors are hired with no experience. However, most of those juniors have stronger relevant educational background than a minor. So if I were you I'd be asking myself, "What do I have that might make them pick me over a CS major?". If you can't answer that question, how do you expect hiring manager to give you serious consideration? I don't know what kinds of jobs are available in the area that you're looking, but maybe with your background you could focus on financial employers who are hiring devs? Your domain knowledge could give you that edge you need to beat out all the CS/CE new grads competing for the same jobs. Or at least get you past HR and looked at by someone technical. I could be that "someone technical" having progressed to the Senior level in my own career, below comments are more from that perspective. I'm not really in the Java world anymore (although I wouldn't rule out coming back), but I spent about 6 years as a primary Java dev before moving into webdev and eventually more into Ops/DevOps, just so you know where I'm coming from. Having some stuff on your github helps. Couple red flags that I picked out there, after spending more time that I normally would if I was really evaluating a potential hire: I didn't examine your whole github account but at a glance it's all just stuff you did by yourself. I'd hope to see evidence of collaboration. That could mean teaming up with a couple of friends on a project, convincing randoms on the internet to contribute to your projects, or contributing to existing open source projects (the last one would honestly be best, because chances are then you've been receiving feedback from more experienced people). If I'm looking at junior resumes, I'm not gonna check out your code, try to run it, or review the code quality. I don't expect much there, if you haven't yet had the opportunity to do real work and have mentors helping you along. But it'd be awesome if there were some juicy PRs with some discussion that would help me see your way of thinking about problems, or how you communicate with others. Stuff like that would be much more worth my time to skim over. There's a couple things that I'd call "sloppy". Committing binaries like class and jar files is kind of weird. I didn't see LICENSE files in any of the projects that I looked at. And in one place (I think it was some bash wrapping around mvn executable?) it looks like you copied existing code that originally had a license header in comment at start of file, but part of that license header didn't quite survive your copy/paste. The parts that did survive indicate license terms that you're not in compliance with. All of this adds up to "not only am I gonna have to teach this junior our stack, our internal style, our internal best practices, but I'm also gonna have to teach them basic things about using version control to collaborate and how to avoid getting into copyright disputes". How to avoid me coming to that conclusion: make small commits that are each useful on their own, don't commit things to version control that don't need to be there, and get real about licensing if you're using other people's code in your projects. I hope this wall of text helps! I kinda tried to pick you apart as much as I could, don't be discouraged.
I'm pretty much in the same situation here. My advice would be to start reaching out to people on LinkedIn, especially small startup companies that may be able to mentor you a bit, especially if you get along with the person really well. In Arkansas, there's a couple companies that work with people like that, but assuming you don't want to relocate, I can completely understand it. Another thing is on your projects, I would add screenshots of your projects. Recruiters (a lot of times, not always) don't know how to get code running, but like to look, so if you can insert screenshots into your repositories, then that'd be super helpful. Business cards as well, get some made with your GitHub and your own website on them as well as a LinkedIn if you have one. And same with another comment below, if you can find a way to host your projects so people can click around on them and play, then do that. It can definitely help.
Man I haven't played that game in years. I only remember about two years ago they released a windows 10 version, which I got a free license to because I bought the original full version from Mojang. It worked better on an Atom core tablet, so I'd give that with a USB keyboard and mouse to my nephews rather than let them use my machine (I know, so mean)
So here is my experience. The tl;Dr version is study hard, spam resumes, and brace yourself for lots of rejections. But you can get in the door, I did. I got the OCP certification. First of all, employers won't care about it. But it forces you to be very, very good with the language. And that's important, because without experience you need to be on your game in a big way here. I continuously worked in projects in my spare time. I studied Java and SQL, and I started to get into HTML a bit prior to getting my first job. The skills matter here. Also I started filling up a GitHub with projects to show off my work. It's better to have an app deploy d somewhere that an employer can download or visit on the web. I did not do that, however, but in hindsight it's something I would still recommend. Lastly, take what you can get, but don't let yourself get taken advantage of. There are plenty of what I would call "farms" out there that will grab anybody and ship you out where they need you. They're pretty bad places IMO, there are better options out there (I found one). Still, don't be picky. Experience is a huge thing. Even if you get a crap job, after a year there doors will open up to you that weren't before. I took a mediocre coding job with a decent salary, stayed there for 3 years because they treated me real well, then got a great new gig with a much better pay/benefits as a full software engineer for a fortune 20 company. I can say that after a few years on the job every door that was shut to me opened up. But getting that first job, I got rejected a TON. It was an awful experience, I'm not gonna sugar coat it. But it's all a numbers game. Programmers are in high demand, so there are options out there. Hope this helped.
What differentiates you from other candidates is actually your background in economics. A monkey can code (at a junior level), so entry level positions aren't about your technical prowess but rather your fit for the position, for the team, for the organization. Highlight how your economics background might be relevant to the positions you're applying for and gives you a competitive edge. Perhaps target financial institutions where possible. Be flexible with where you're applying too. Might need to target other markets.
Java is so established that I think it will be hard to find something no one has solved yet. Maybe you could find a new and popular API (like [GitHub's API](https://developer.github.com/v3/), and build a client for it?
If you're just sending your resume through the normal channels, you're going to get weeded out a lot. It's extremely helpful to know someone. 1) Go to meetups. You should have a JUG near you. 2) Talk to recruiters. There are billions of them. I get calls from OC recruiters down here in SD all of the time. 3) Find a company you're really interested and figure out who the hiring manager is and send them an email directly. There's a fine line to harassment you need to walk, but if you can show that you're very motivated and are incredibly interested, that could get you to the interview step at least. LA/OC is a huge market with a lot of applicants. If you know someone, or you find some other way to stand out, you are way less likely to get thrown in the bin.
That's a good idea. Also, I think a Java wrapper for GitHub's API already exists [here](https://github.com/eclipse/egit-github/tree/master/org.eclipse.egit.github.core).
I highly recommend you Checkout the [Cracking the Coding Interview ](http://www.crackingthecodinginterview.com)book. There is a lot of helpful information provided in the book. I’m taking a crack at it and so far I’m enjoying it. Let me know if you have any questions or concerns.
The only concrete thing we have to go on with respect to that is speculation. However given that IBMs stated goal is to run Red Hat as an independent business unit, I would *speculate* that Red Hat's OpenJDK build won't be going anywhere anytime soon.
I have my projects listed under 'Projects' at the top of my resume. Even if it puts me at a disadvantage in the screening process, I'd rather be fully honest in my resume and make it clear that they are just side-projects. Thanks for the advice though!
Thanks! Most internships I've come across are geared towards students still pursuing a C.S. degree, but I'll start asking companies if they have an internship-to-full-time hire program for post-college grads. Could be a win-win since the company takes on less risk and I can get a some experience working on a team.
disregard my last post. I forgot I about talking about what I did when I thought I wasnt going to be lazy and code at my friends house/etc... I downloaded the portable version of visual studio code [VS code portable](https://github.com/garethflowers/vscode-portable) Then moved it in its own folder in my Onedrive. I then made another folder to store my coding languages Then kept whatever I was working on in "working" folder. VS code is super light and easy to run on any computer, there are thousands of extensions you can download and add(make sure to save them to you onedrive to make them permanent) that will meet whatever needs you have. It's so great. *wow I feel like a salesman* Now you can access a powerful lightweight IDE/Compiler anywhere
I got a major in Computer Science and Econ with a minor in Math from a top university, but it was still a pain in the ass until I got my first job. Just keep at it.
&gt; maybe with your background you could focus on financial employers who are hiring devs? Your domain knowledge could give you that edge you need to beat out all the CS/CE new grads competing for the same jobs. this. focus on financial sector jobs, write cover letters, maybe write a web frontend for the Portfolio analytics tool? I don't have any CS degree, I basically took a bunch of CS classes online and did a lot of self-teaching to learn the fundamentals. I was in a similar position and it took a combination of targeting the right market for my skills, and a lot of applications to get my foot in the door.
Your website is so nice dude. I’m in a similar situation as you so I can’t offer any great advice, but I really like your projects. Good luck!
Your free to make you own call, you said you weren't familiar with Azul, so I described some of their background. Even with Gosling there today, I don't think Corretto is a slam dunk over Zulu. Azul also has a significant team of talented JVM engineers, and as mentioned a much longer history. If there is a slam dunk, IMO it's Red Hat. They are the ONLY billion dollar company with a serious team of JVM committers AND an extended history of both project stewardship and shipping/supporting an OpenJDK distro in RHEL. They don't have prod builds for Windows, though, so if that's what you need you're going to have to make tradeoffs. Both Corretto and Zulu are reasonable choices, but neither is risk-free.
Step 1, link to your LinkedIn from your website.
The person that comes to me with a well written service that DOESN'T use any open source frameworks gets the nod. I've had plenty of folks wince drive all kinds of things with this or that framework, but are completely clueless why everything ACTUALLY works under the covers.
Thanks for going over your thought process on how you evaluate juniors — very insightful. Your comments on collaboration make sense, that's a huge weakness for me right now, and I'll have to start looking into how I can contribute to open source projects. And I'll make sure to clean up my repos and commit habits. I'm not sure how that line for the Apache license in the batch script got snipped out, good catch. For this side project, I was mainly focused on learning how to design and build an API using Spring, so I didn't think too much about licensing. I appreciate the detailed feedback!
True, I really like this bit of advice. I need to leverage my background in finance more.
Check out the cracking the coding interview book. You can have a section that lists 2 to 4 technical projects.
That's a tool in the eclipse ecosystem, not Apache. And to that specific case: There's an excellent IDE for Android, supported and funded by Android's first-party, based off an IDE that's generally considered, nowadays, to be superior to eclipse. So ... that particular datapoint doesn't especially concern me.
 &gt;And I'll make sure to clean up my repos and commit habits. &gt;I was mainly focused on learning how to design and build an API Heh, for sure. Learning is good! In your career you'll write a lot of throwaway code as you learn. Or if not quite throwaway, code that ... isn't in a very good state to share haha. It is good that you are at least putting it into git! You have to start that before you can be doing it skillfully. But habit is a good word, doing things while learning the way you would if it was 'real' code can help build good ones. For a personal developer portfolio, especially for someone looking for backend work, how you do things can be more important than what you do. Consider focusing on a project or two that you find truly useful and making them more useful, rather than trying to show all the things you can do. Github now has private repos, right? You don't need to show code from all of the things you dip a toe into. :) &gt;I appreciate the detailed feedback! NP! And good luck!
I agree. Four years ago I was in OP's position. I was 45, but trying to get a job in software development for the first time after doing 20 years in the military. What got me the job, finally, was three things, I think. First, as you said, my non-programming experience, i.e., my military background. I'd spent a lot of time doing Missile Warning stuff, and I applied for a job in a related area. Second was my portfolio of projects, which OP has. The other thing was my attitude. See, I *love* programming, and I let it show in the interview. I literally told the interviewers (who are now very good work friends), "if you hire me, you aren't hiring someone who is just doing programming as a stop along the career path, like a lot of people I've known, you're getting someone who eats and breathes code and will look forward to coming to work every day." And I totally meant it and still do.
These are all really great. I'd also recommend the [git-id-plugin](https://github.com/git-commit-id/maven-git-commit-id-plugin), which pulls get commit, tag, and branch info. It makes it really easy to verify exactly which commit got built. If you have a Spring Boot app, it will also show up in the actuator /info section.
Why not combine finance and coding? Traders need a lot of software.
If you're willing ti move to austin and pass our test(s)...pm me
Something to resize images easily pls
Make connections. The best way to get a job is to get in good with your local tech community, show your passion and make it known you're looking for work. You may still not land a job a bigger company, but a smaller firm will 100% take a chance on you if they like you. You probably won't even have to apply. I've never actually got a job by applying for it. It's always been about networking and being involved. Also, don't be too picky with the language or library. They're just tools and if you know one, you can learn another. You just need your foot in the door and if you're honest about your experience, it will be fine and you will get training.
Thumbnailator does this : [https://github.com/coobird/thumbnailator](https://github.com/coobird/thumbnailator)
How do i find more of this git java libraries?