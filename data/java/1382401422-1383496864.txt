Obligatory "GTFO this is /r/java". there's nothing wrong with a teensy bit of self-promotion. It's especially small compared to the amount of Real Work (tm) that gets done with it. Do you go into the /r/haskell or /r/lisp or any of the other communities that actually have a strong tradition of advocacy and tell them to knock it off? Didn't think so. As for cool uses of Java, I'll just says "runs the freakin world" is a pretty impressive accomplishment. There's a very select group of languages that can credibly claim that to a degree and Java is one of them. Although, to be fair, if you reduce several entries on that list to "Cult of the Curly Bracket", you get a much shorter list.
Hi there, thanks for replying. I've got a very simple java server which hosts a website on my localhost. It's just waiting for a request from the client and serving up web pages(html). However, I want to display, say, a name on the webpage "bob". I could put this in the html, but I want it to be a variable that I can change from my server code. So I'm looking for something which lets me go if(condition = bob) then display Bob on the page else display john These conditions which I'm checking for exist in my java code, and I am not sure how to put in these things into the page from this java code when it's serving up the web page. 
got it. Thank you so much
a language should not be augmented by an ide. If you can't write a complex program without an ide, something is seriously wrong. 
No problem! As said before, converting to string is also a viable solution: (new Integer(number)).toString() Then you can take substrings and get your individual digits.
Why? It's 2013...
&gt; a language should not be augmented by an ide. If you can't write a complex program without an ide, something is seriously wrong. Who said anything about not being able to write a complex program? You can write complex programs in Java without an IDE, but why should you? One of the awesome things about java is the fact that it has good tooling, so why would you throw that away. For me, one of the worst parts about languages like javascript, python, and ruby is the fact that they have pretty much no IDE available.
Read this: http://codahale.com/what-makes-jersey-interesting-parameter-classes/ It's pretty old, but it's still very relevant. The main point is you want to stop taking in things like 'String command' and instead create a higher level param class that handles the validation for you
As someone who was in the same situation a few years ago, I very much enjoyed learning Java first. I found, because it is such a very structured language, that it was good for learning the general concepts. I also liked how forgiving it can be to the uninitiated :P I've heard some people criticize it for being very verbose as a first language (compared to something like.. I dunno Python or other 1st year languages) but I found that it helped me visualize the structure of the program I was working on. If I had to do it again I think I'd stick with Java as opposed to C or C++.
Verbosity is the inevitable consequence of specificity...besides I personally can't imagine working without an IDE (and believe me, I used to write _everything_ in a text editor) so kind of a non-issue for me.
how did I not know about double brace initialization after doing java professionally for 15+ years?
Java was my first language, too. The verbosity definitely helps. 
Did you find it was easy to adopt other languages after learning Java? i.e bad writing habits? Its good to hear that it helps with visualizing other languages.
I'm glad I learned C first, I feel like I have a better understanding of what memory is because of it. Still I think Java is fine to learn first.
It's not a great first language, but it is an OK one. If it's what's being taught then no reason to deviate. I learned it as a first language and honestly found the verbosity frustrating. I felt like it hid the actual concepts behind a layer of syntax and made it much harder for me (as a beginner) to get clear grasp of any given program. C++ is somewhat convoluted but actually exposes a great deal of information, and Python is straightforward, no unnecessary fluff. I think I would have learned more quickly with either of them. But that's just me. If Java works for you then great. Once you become reasonably skilled your first language won't matter anyway. You can always break bad habits and pick up good ones as you go.
Ehh, Java is very accommodating. After learning java I took a course in C that was meant to highlight that fact. For example, in Java, working with character Strings is downright pleasant but in C, it's tedious, confusing, and nightmarish for the uninitiated student. But the point was to show how Java works behind the scenes, etc etc, blah blah blah. I don't think I picked up any bad habits per se. After learning a language, making the jump to apply what you learned in another language is always going to be difficult the first time. It gets easier after the first though :P I have nothing bad to say about Java as a first language, I still use it for personal projects, it's my comfort code :P *EDIT:* I didn't really answer your question lol, yes, I did find it easy. If you can wrap your head around the fact that Java takes care of a lot of the nitty gritty behind the scenes, and can realize when it's doing so, then you'll be okay.
I prefer Python. Then C. And after that, C++. I would save Java until you absolutely need it for job reasons. It's relatively easy to pick up, especially after having previous experience with other object-oriented languages.
IntelliJ
There are quite a few nuances and gotcha's to Java. For example: * confusing the usage of `==` and `equals()`, they do two different things * having to check for `null` almost **everywhere** (a lot of API operations that return an object will return `null` if they fail) * dividing an `int` by an `int` will produce an `int`, even if you assign the result to a `float` * operator precedence. For the most part, it follows PEMDAS but there's more operators than in PEMDAS. * ~~primitives are passed by value, objects and arrays are passed by reference~~
Might be some char encoding fun.
This is the basic outline most universities follow. start with lower level programming languages and work up java, c#, sql, D, and the like. Since they are easy to pick up once you know what is happening. 
Java was my first language. It's mostly what we learned in school. It's a great first language. One thing though, if you are pursuing a software development career I would recommend switching to a CS degree.
On the other hand terrible Java software: Early versions of IBM WebSphere Portal. So very badly written.
&gt;dividing an int by an int will produce an int, even if you assign the result to a float This caused me so much pain in the past.
Java is good, it is fun, but it's like c/c++ with training wheels. It makes some relatively complicated concepts easy/inconsequential. When you get on to harder stuff like memory allocation, pointers, garbage collection, and recursion (with pointers) you will be way behind the people who learned all of that with a C type language first. All of my intro CS classes were in Java and it's really the only language I know (other than some Haskell and OCaml) because I started my CS at a community college. The only disadvantage to this was that the people who went to university for their beginning classes typically learned a few languages (typically involving a C language or one that doesn't baby you). I didn't learn pointers/pointer recursion until Computer Organization (assembly class) where the teacher wrote his own 32 bit computer emulator and his own assembly language to run on it, also his own notes and it was brutal beyond belief. It was definitely a "weed out" class.
An OS course in Java? Whut.
Good job then! I'm 35, and I still answer these kinds of questions on job interviews. The experience is worth putting up with a stuck-up interviewer.
Are Groovy stacktraces still gigantic and nondescript? Been a while since I've tried it.
Hmm, I'm not positive about the issue you are referring to, so I think it might be fixed. There is occasionally a fair amount of junk from metamethods etc, but generally the top of the stacktrace is very relevant / useful. 
See books like "Operating System Concepts with Java"
Learn C. You too must suffer as we once did.
I know Swing and AWT. Not JavaFX. 
I was considering taking comp organization next semester as an elective. Guess I won't be doing that
My class covers all the OCJA topics and most of OCJP ones. 
Odd that it's not required. It's honestly been my least favorite cs class by far as of yet, and I'm almost done. 
&gt;primitives are passed by value, objects and arrays are passed by reference Wrong. All method parameters are pass by value. Even objects. The references are passed by value. public class Main { static void ifPassByRef(Square square) { //If Java was pass by reference for objects this would work square = new Square(); square.setLength(12); square.setWidth(13); } static void thisWorks(Square square) { square.setLength(12); square.setWidth(13); } public static void main(String[] args) { Square square = new Square(); square.length = 10; square.width = 10; System.out.println(square.toString()); ifPassByRef(square); System.out.println(square.toString()); thisWorks(square); System.out.println(square.toString()); } } Output: length=10:width=10 length=10:width=10 length=12:width=13 
Hmm. We started with python for the first intro course. Then we did C# for the next course (data structures and algorithms). Most of the classes beyond that were mostly language independent but we definitely had to use C for a pretty big chunk in comp architecture and OS related classes. We did have a specific lab/course for C/C++. Java specifically was never taught (although is was in previous years).
If you instantiate it statically, you can just follow up with a static block. static Map&lt;String, Integer&gt; testMap = new HashMap&lt;String,Integer&gt;(); static{ testMap.put('test1', 1); testMap.put('test2', 2); } 
Java is the first language I'm trying to learn. I also tried to learn C++ at around the same time and decided Java was easier for me because of the verbosity.
I don't have much experience with C++, but IMHO, it's not a good first language. I still find it daunting, and I've spent my fair share of time picking through it. It's just too much at once for a beginner. I think the most difficult part, besides learning the language itself, is getting a build environment up and running. Even Microsoft Visual C++ takes a boatload of configuration to build any sizable project. With Java, you just need the JDK, and optionally have it on your PATH. `javac` is so much easier to invoke, and it's essentially effortless if you're going through an IDE. It produces much more readable output, too. Fixing build errors in an MSVC project is a nightmare. `javac` points you right to what's causing the problem.
I'm EE. :-P
The problem is that `/` can mean one of two different functions, depending on the types of its inputs (that is, `/` is overloaded). There's no need to do that. Python uses `//` for integer-division and `/` for floating-point-division. Similarly, racket uses `quotient` for integer division and `/` for actual division. I really wish Java had chosen to use different names for these two different functions... 
\^\^\^this\^\^\^ (as somebody who has taught programming for nearly 20yrs) Java sends the message 'programming is about getting these magic words and all this scaffolding just right', whereas programming is actually about simple, clear thought.
It does not apply to C or C++. Personally I think it's silly to have `//` (which is also common comment syntax). This perceived need is a new thing.
Technically it passes object references by value.
Yes, this has been covered and that's why I struck it out.
Whoops, missed the comment explaining the actual behaviour... Anyways I upvoted your comment as it's a decent summary.
If a language doesn't completely infuriate you and prevent you from ever wanting to program again then it's a good first language. Just remember that languages are like cults and the deeper you get into them the weirder things become. Also when you've completed the course read [this](http://www.amazon.com/Little-Java-Few-Patterns/dp/0262561158/ref=cm_cr_pr_product_top) 
There are so many great languages out there to learn. It really doesn't matter which one you learn first. You wouldn't ask if you should learn to use a hammer or a saw first. Oddly enough, the first language I learned was Ti calculator basic. Just remember a few things: 1) Different languages are suited for different tasks. 2) Every language has issues. 3) To become a great developer you will need to learn a lot of languages eventually. 4) Try to have a pyramid shape knowledge base. Learn a little bit of a lot of things but have a few things you become really good at. Good luck, you're taking the first step on a hard but amazingly rewarding journey.
Bah, you're an engineer. You can handle it. You will learn a ton and they're not all as brutal as the professor I had. There is another professor that teaches it and actually teachers ARM and it's supposedly way better. 
Nope. The _reference_ to the object is passed by value. Therefore the object itself is being passed by reference. If the object was passed by value, then your thisWorks() method would not work. Contrast this with C++, where objects really are passed by value by default.
Do you mean sadly as in they teach only in Java or that they teach Java in general ?
Well there's a few ways to teach Java. Some focus on the "simple, clear thought" and wait on introducing objects until later on. Some come right out and talk about objects. There's benefits to both ways.
Can you imagine if all java objects were passed by value? *shiver*
correction, web version is 1.6. Project will build against whatever java is on your system.
Anonymous classes are quite common, especially in UI code, and if they are short I personally think they are the right solution. With lambdas in Java 8 we will see code like this even more often.
pointers... ohh god I thought I suppressed those memories.
C++ Is the worst language to learn first because it tries to shove OOP and OOP hacks down your throat plus the controversial operator overloading (C++ doesn't FORCE you to overload, but a lot of the standard library does operator overloading leaving a newbie asking "Why the fuck am I using a bitshift operator on an IO stream?! What does that even mean?") as well as the manual memory management &amp; unmanaged (I know that word is hated by a lot of Java developers...) computer environment. Debugging C++ code also required a pretty thorough understanding of the computer's raw architecture. The two languages I would suggest someone learn as a first are either Java\C# or C. C because it doesn't force the concept of OOP on the programmer while also familiarizing them with the computer's raw environment. Java, obviously because it does a great job teaching OOP, and it is also a much simpler language than C\C++. I actually started with C++ (a terrible idea) - stayed there for a couple of years, did some C, C#, and eventually Java. Coming from C++ you really appreciate the beauty of Java. I think it is technically inaccurate to say one programming language is generally more difficult than another (maybe for a beginning programmer it makes sense, but as you mature in either language the language is more of a preference.) Usually the problem is abstract and the solution is thought-up outside of the language's construct and then adapted to that construct. The solution it-self is the difficult step. Writing the code is easy. C++ is just tedious most of the time. I can't imagine why in the hell anyone would use it if they didn't _have_ to use it. But like I said, preferences. Even if I was interfacing with various native libraries, I wouldn't dream of popping open my C++ IDE, I'd just wrap them with the JNI - god knows it'll save me many many hours.
What makes you think objects inhibit "clear simple thought"?
1. Create a github account 2. Contribute to other open-source projects (maybe create your own) 3. Do this throughout your programming career (esp. if you're still in school) 4. Hand your github username over to your next employer, they'll really appreciate it.
My game engine uses the Rhino Script engine for loading processing entity scripts. The reason the behavior of entities are delegated to scripts is because they are usually _way_ way to concrete to have any reusability to the engine executing them both in terms of code and in their actions.
Gross.
Try to run the tool in your project (the standalone report for example), and it's often the case that there are many duplicates, it's quite surprising. Sometimes they are all the same version, more often they are not. Recently I had 6 WARs with between 300 and 600 duplicate classes to deploy to a new server, and these duplicates caused a lot of problems. I check all maven projects with this tool, and I have yet to find a project without any duplicates at all. There are already plugins that abort the maven build in case of duplicates. They are not very often used at least in the projects I've worked, I believe it's because they don't make the difference between harmless duplicates (where the different versions are all the same). 
Teaching about objects while they are still learning about variables, loops, and logic can be overwhelming. Many intro courses wait a bit before introducing them. 
Well, yes. I fail to see how this is relevant though. The post you replied to was about Java specifically, not OO concepts. 
Java's scaffolding has nothing to do with objects. Almost every modern language is OO to some degree. It's the syntax and language design that makes it a poor choice for beginners well past the point of learning what objects are.
You won't be able to do this with static HTML files. If all you're doing is displaying a name, then templating with Velocity or FreeMaker will be fine - Google for their Hello World examples and I'm sure you'll find some walkthroughs to get you started. For anything more complicated look into JSF; Oracle provide a [Hello World example](http://docs.oracle.com/javaee/6/tutorial/doc/gjaam.html) which doesn't actually substitute in any variables, but you should then be able to modify this using some of the information from the [MKYong page](http://www.mkyong.com/jsf2/jsf-2-0-hello-world-example/). JSF uses the [Expression Language](http://docs.oracle.com/javaee/6/tutorial/doc/gjddd.html) to substitute in values. There's also Spring MVC as an alternative to JSF - it's not a technology I'm familiar with though, so I'll let others provide details for that.
[Java](http://www.eclipse.org/downloads/moreinfo/java.php) or [C#](http://www.microsoft.com/visualstudio/eng/products/visual-studio-express-products#2010-Visual-CS) are good first languages. I would choose C# because it is better on desktop and Windows environments. Although, for fun and quick learning you might also want to try some virtual world scripting languages like [Second Life's LSL](http://wiki.secondlife.com/wiki/LSL_Portal) or [Skyrim Papyrus](http://www.cipscis.com/skyrim/tutorials/beginners.aspx). After those I would recommend either [C++ or C](https://netbeans.org/features/cpp/) to get bit deeper knowledge about computers. If you really want to know what is going inside computer - then look [Assembler](http://www.skynet.ie/~darkstar/assembler/) (even if you never actually going to need it to anything). Then you can take a look to other kind languages...
This isn't what this subreddit is for. 
Java is probably not **the** right language to learn first, but it's perfectly fine to learn first. However, I would probably recommend a language where you do not have the compile step, like Python, because you get to try things in a console and the shorter feedback loop is a plus when you're learning. But that's no big deal.
Don't scare the fella/lass. The basic stuff is straightforward. I found that visual diagrams helped a lot (esp. with regards to pointers). Luckily there are tonnes of tutorials on the web. Side note: GLib takes a lot of the pain away (no need to re-invent the wheel).
&gt;I don't have much experience with C++ Well then this is why you're wrong. I know both C++ and Java, the differences are minor, the differences (to a beginner) and just a case of calling the same functions with different names. OP: Just choose a language and stick to it, all the underlying logic is the same, at the end of the day you're not learning a language, you're learning how to program.
You should still have them as an object and use songs[1].SongTitle for display and songs[1].filePath for storing the file path. It's good practice.
It looks promising, but a bit buggy (at this stage)
I second this, a library should NEVER return null unless it's a sensible indication of "nothingness". If something broke then don't return null, that just means that someone will need to spend time tracking where it came from in order to fix it. Throw an exception, *that's what they are there for*. My personal bug-bear is returning null to indicate an empty list. WTF?
If I could choose I'd choose Python before Java. It's has less grammatical nuances (in my opinion) and it doesn't force you to go OOP all the way. This will allow to learn basics in programming without the language getting too much in the way. I remember my first program ever: a hello world in java. I was asked to copy most of the code in the little program and believe it as "this works" (for example forces you to name the class and the file with the same name, the main method with args, etc), the only line I knew what was doing what the pint statement. In contrast, in python that program would be only print "Hello World!" After learning the basics you can always switch to java or other languages to learn about OOP, memory management, functional programming, or any other concept that it's better understood using another language. Remember that languages are tools, you shouldn't choose the same one for everything.
I'm currently learning Java and can safely say I'm happy that I had to miss 1 year in university, to get to learn it, as in my first year they were still teaching Ada...
I will now use "highfalootin'" as java class
I learned java first, definitely taught me about strong typing and OOP. However, I hear python is also an excellent starting language, and am dabbling in it myself now. As others have said though, in the end it really doesn't matter what you learn first as long as you have fun and keep at it. An experienced programmer probably knows a dozen languages or more - so just have fun and keep coding!
+1 for reminding me if JGoodies. 
This is good to hear. I want to avoid bad practices but this seemed most logical. Haven't any experience with threading but think ill do a bit of research on that.
So that's why our professor taught us how expressions are being parsed. It really helps to predict what type comes out of an expression if you type one.
Yeah the problem with C or C++ is that the standard API isn't as powerful as Java's one and that causes big frameworks to define their own String classes that are incompatible to each other. Never saw a Java library reimplementing one of the basic types (well, there's different implementations of collections but there's always the base interface like Set, List or Map which those usually use as base).
* closure * can be dynamically or statically compiled. If I want to create simple deployment script I can simply use Groovy's dynamic nature. When I want to create portable, huge, multi-core, and high performance application I can use @CompileStatic to statically compile groovy. * as mentioned by Kgreene2343: syntactical sugar ( spread operator, elvis, null-dereferencing operator, spaceship operator, operator overloading, getter, setter, implicit constructor, etc...), sane default (property is private by default, method is public by default, etc...), less verbose, more compact and readable code. * Enhanced standard library: range collection, nice file api, etc ... * Gradle * Natively supported by Spring Framework 4 (We don't really use Grails, we hate magic) * Zero effort integration with Java codebase / libraries * other: map as object, don't have to implements all of the interface's method, etc ... * Create DSL easily (support both type-checked and dynamic DSL) * zero initial learning curve for existing Java programmer. This help a new programmer to catch up with our codebase faster. You can imagine Groovy like Java plus Google's Guava and Project Lombok but with those features built into the core language. 
Yep.. Hello World! in java.. public class HelloWorld { public static void main (String [] args) { System.out.println("Hello World!"); } } But nevertheless I'm happy I'm learning it :) I like it.
When used with @CompileStatic, the stacktrace is much more sane (quite similar to Java).
The former
I went to an average state school in the USA. First 3 courses in java (Intro to Programming, Programming 2, Data Structures and Algorithms - the focus was less on java here, but still required). There was then a course on assembly and a course on C. These courses were isolated and nothing really built on them. There was a software engineering course (java), and operating system's course (java). Beyond that most courses were language independent, but the default language was java.
&gt; That is hilarious and I understand, now, why they named it such. Been a long time, but every time I had to use eclipse it seemed like the world was a darker place (random hangs, broken plugins, broken projects, non-random slowness). Best feature of eclipse: lots of plugins available Worst feature of eclipse: using lots of plugins
Please see http://javadude.com/articles/passbyvalue.htm to understand why the statement "Therefore the object itself is being passed by reference" is incorrect and why davincisbeard is correct.
See http://javadude.com/articles/passbyvalue.htm.
for sure NOT JDownloader
The key is that Checked exceptions are a good thing, when used properly. The logic that "you can write robust applications w/o them" is pointless. You can write robust applications in C or assmbly language, too. The question isn't whether you **can** write without them, the question is whether or not they add a useful tool for writing better code. As with most such questions, the answer is "yes, if you use them well". 
1. If you want to be someone who writes good, clean code that works, is adaptable, and easily modifiable (most software engineering professionals), Java is your best bet. It has the cleanest object orientation of any language out there. 2. If you want to be a hardcore optimizer, writing code that needs to run fast with less thought to the code structure, C is for you. 3. If you just want to hack out basic programs to parse/manipulate text, make calculations, etc. - go for Python.
Short answer unlike most people: YES. Yes. yEs. Knowing Java will never hurt you in any way as a programmer.
[Adding to the other links provided](http://stackoverflow.com/questions/40480/is-java-pass-by-reference). Java is pass by value. If Java was pass by reference then the "ifPassByRef" method above would work ... I even have a comment pointing that out. Pass-by-value vs. pass-by-reference can be confusing. But nonetheless, Java is in fact pass by value. It's in the JLS. Edit: The "Old Comments from Blogger" section of [this](http://blog.christoffer.me/post/2010-07-07-java-is-pass-by-value-language/#.UmajNyRHyi8) article explains it better.
Yeah pointers are the same in Java. Oh wait...
I honestly don't blame them for making this move. So what if your terrible webapp still requires the java plugin? The fact is, most web pages don't require java. Those that do are either really old, an internal tool, or some page trying to exploit a security hole. With a shockingly large portion in the last category. The hard truth is, these complaints are expected. After all, microsoft got flack for disabling activeX by default, why wouldn't firefox for doing essentially the same thing. The thing that is dumb about this? They aren't disallowing java. Chances are, most users that need to use some arbitrary java plugin can enable it for their site of choice (covering the "internal tools" problem pretty effectively) The people that really suffer are those that maintain crusty old webpages which rely on the java plugin (Which, lets be honest, a public webpage using the java plugin should have re-evaluated that position a LONG time ago. Certainly no new developments should have used the java plugin).
IMO, C and C++ are for situations where low memory is a major concern like in an embedded system or video games. For everything else, hardware is so advanced that letting the inefficient garbage collector of Java handle all the headches is fine with me. Why waste time in syntax and memory management when you can focus on design patterns and quickly building complex systems with less of a headache?
You are putting C and C++ in the same bucket. C is a very small language, C++ is not, and you don't have to use pointers in the beginning. Learning C is quite easy until you start dealing with more advanced use of pointers. I don't know why I got downvoted since I said there is nothing wrong in starting out with Java (I started with Perl) to gain some confidence in what you are doing. 
Yep, I would even go so far as to say that future version of the JVM should drop the pretense of being a "secure sandbox" It isn't, it won't be, and it is just WAY too easy for future JVMs to be vulnerable to security holes.
Better yet, Oracle should just fix the freaking security holes. 
Ant and maven can be complimentary. You're making big assumptions about the environment. Maven requires support infrastructure in a controlled setup like artifactory. For open source and fast bootstrapping it's a good choice though. 
I learnt C++ first and it was the correct choice. If your program works in C++, you KNOW how it works and WHY it works. In Java many things are just voodoo stuff and the term "memory" isn't used at all. If you really care about your program, don't use Java.
What about signed, trusted code? Because our signed, trusted app is broken now, and unless the users recognize a small 16x16 red box, and click on it, they simply assume that our app is broken. There are already security layers both inside java and in Firefox to prevent auto-run. The real problem with u45 is that the end user can EASILY get messed up because there is no "Would you like to run Java" message for them to click.
Strictly speaking, all method arguments are passed by value. But strictly speaking, it is impossible to pass an object to a method. See the javadude article: "There's no way to actually pass an object itself as a parameter." You claimed objects are passed by value. This would mean a copy of the object is made, and the method receiving it could make changes without affecting the original. This is not the case. Both you and the christoffer.me article are inappropriately interchanging "object" and "reference to an object". 
I'm a beginner programmer and I'm starting with Java, and I haven't had any real issue with starting there. Though, I did have experience with HTML, SQL, and PL/SQL before taking this class, so I wasn't 100% new to computer languages.
&gt;Strictly speaking, **in Java** all method arguments are passed by value. Exactly. &gt;You claimed objects are passed by value. I did no such thing. Please go back and read again. I don't think you are really understanding what pass-by-reference/value is (it's OK, most people don't). "There is exactly one parameter passing mode in Java -- pass by value -- and that helps keep things simple." -- James Gosling You can argue with him if you want. I'm done.
File abstracts away operating system specific conventions, it also takes away some of the boilerplate you would otherwise need when concatenating paths (like in your example). Passing paths around as Strings is just asking for trouble sooner or later. It results in lots of boilerplate, like code checking whether a directory path ends with a / and then adding it if it doesn't (in the best case, in the worst case the code just fails with a FileNotFoundException), oh, and of course, some guy will have written a path somewhere ending with a \. Resulting in an escaped slash in your path, oops...
As said by theBlackDragon and in Javadoc of the File class, it is an abstraction of the full file name (i.e. the path of a file), not an actual physical file. Naturally you could use Strings (e.g. "location.txt") to represent file name, but that would be system specific (for example directory separator varies between OS's). File class is there to take care of all that mess. Just as we can have a String "location.txt", even if such file doesn't actually exist, we can also have a File object pointing to that non-existent file, so there is no direct link between the physical file and its name, until you do some read or write using the name (with e.g. FileWriter). FileWriter is a convenience class that makes it easier to write to an actual physical file. It is not a representation of file name, but uses such representation to perform the write operation. You point to the file by its name, either as a String (FileWriter's String parametrized constructor) or indirectly with an abstracted file name (FileWriter's File parametrized constructor). *"because the FileWriter or any other class or library that wants to work with OS physical files needs a representation of the file being modified. This is achieved using the File class"* means that while it's not strictly required to have this abstraction layer on top of file name's String representation, it's generally considered worth the small convenience overhead, as it makes it easier to construct software that works correctly on different platforms and makes typical use cases (e.g. concatenating file name to a directory path) easier. Also not all libraries dealing with file names necessarily have String represented file name parameters, but rather just force you to use File instances.
Alas, no love for them for loops without bodies.
I know that it used to be. Is this still the case? Java seems to be getting lots of bad press about security concerns now while PDF and Flash no longer do.
&gt; Now, If You have some alternatives to proceed with the normal logic, you could do that, other wise you should catch these checked exceptions and throw and Unchecked exception. This way the method signatures will be clean also, we are stating that if the XML is invalid we are can not do much, and we are stopping the processing. Let the error handler written at the top layer take the appropriate decision on what to do. This might be the correct approach in some occasions, but not always. To follow an example similar to one in article, if your class uses DOM parser to parse an XML input from UI (using custom InputSource, which never throws IOExceptions), you'd probably want to suppress IOExceptions and throw an AssertionError (as the situation should never arise), which is an unchecked exception. The input could still be invalid XML, which is clearly a recoverable (by e.g. pointing the error in UI and asking for a valid XML string) expected exceptional situation and a perfect use case for a checked exception. Depending on the abstraction level of the our operation, it might be ok to just pass on the SAXException, but in some cases a higher abstraction level custom checked exception might be more suitable. There is no hard and fast rule for using (or not using) checked exceptions, but as long as you use them for unavoidable (typically meaning environment dependent or user input related) exceptional situations, you won't create new problems with them.
man this really cleared things up, thanks. For some reason i only understood it in ur explanation of system specific paths, even tho others have mentioned it 
OK, I might look into those. Thanks!
I can't believe you posted this, you totally stole my 4 karma!!!!
Well, I have it doing the validation, and returning a 400, but still can't get the damn thing to use my own error object though. Keeps returning the default JBoss html page (just bitching, don't expect that you'll be able to help:-)) Hopefully I'll get it one of these days.... IDK if maybe its b/c I'm using RESTEasy and not Jersey...
You deserve it for removing all the taglibs i loved.
Probably because it's no longer considered news when PDFs or Flash exploits are found/discovered! Every update they have seems to list "security update" prominently.
I too thought it was a silly point to be made. It doesn't matter what other languages do or how large the application is to implement a feature specific to a language correctly.
&gt;Those that do are either really old, an internal tool, or some page trying to exploit a security hole. Unfortunately, it's more common than you think. Especially in Norway, where almost all online banking is authenticated with a Java applet ([BankID](http://translate.google.com/translate?sl=no&amp;tl=en&amp;js=n&amp;prev=_t&amp;hl=en&amp;ie=UTF-8&amp;u=http%3A%2F%2Fno.wikipedia.org%2Fwiki%2FBankID)). It may not affect *you* personally, but we are still talking about 2.9 million BankID users, with a wide spectrum of technical literacy. I also understand there's a similar situation in Denmark. I'm all for phasing out Java applets - they're inherently insecure due to a tacked on sandbox model - but we have to remember that there's a balance between usability and security. And honestly, I think they could have mitigated a lot of the disruption by designing a better UI. 
I started my CS education with C++ 12 years ago. I fell in love with it. I got away from IT for a while, and now I am back in it, but looking to get into Java (more opportunities and some friends are Java developers, so more human resources available). It is really helpful to know one language to learn another, because there are many similarities. I remember one of my favorite parts about C++ is being able to "return" multiple variables from a method (pass by reference parameters), but pointers are initially a pain in the ass. I would become friends with the second year students you know, and hopefully they can help you with pointers. They can be overwhelming. 
I think most Java apps are enterprise things, but some normal consumer apps I know of and which are written in Java are: * Vuze(Bit torrent) * JDownloader(Download Manager) * xmind(Mind Map stuff)
You can't trust https this days because of possible MITM. You can't trust the delivery method. Compromised JS is one thing, malicious applet is something totally different. Why would I want to increase the surface area and potential severity of the hack?
Considering JavaFX is the future of Java desktop GUI apps you might want to look at the samples: http://www.oracle.com/technetwork/java/javafx/samples/index.html
JEdit and Scratch are some more user-sided apps made in Java.
The point is simply that it's damaging to advise novice programmers to start with C. Some might actually listen to you :)
Seems like hive mind think versus a consistent application of requirements.
ahmmm.... no.... lots of vpn plugins are java based. F5. Juniper. I can't think of one that isn't...
They did do that if your Java version was out of date no?
&gt; Adobe Flash is far worse for security holes and far more common. Are you sure about that? No question Flash is a vector for attack, but Java seems to be particularly bad. 
[ATaskBucket](http://ATaskBucket.com) a productivity tool to manage your tasks (Swing/JavaFx)
You don't need Artifactory if you're happy with a local repository.
Dat Java library passion, so religulous
Thanks!
What you are seeing is not really an error, it is more of a warning (but it could cause errors at runtime). The warning tells you that your call to the JComboBox constructor is not type safe and might cause problems at runtime. If you are not familiar with generics in Java have a look at the tutorial here: http://docs.oracle.com/javase/tutorial/java/generics/ It will do a much better job at explaining generics than I could here.
So would that explain why when I use the combo box a lot to switch between frames the other objects get jumbled and overlaped?
No
Do you know what could cause an error like that?
Because during runtime the name of the pointer in use is not the name of the variable you declared in your code. The best you could hope for is a memory address which is useless when attempting to debug bytecode in a VM. 
Not sure why the objects get jumbled and overlapped. I don't have much experience with GUI construction in Java so I really have no idea. The only thing that the warning tells you is that the call to the generic constructor needs to be parametrized. You need to give it a type which is what the &lt;E&gt; thing is. I'm not sure what your code looks like, or what exactly you are trying to do, but a line creating a new JComboBox might look something like this: `JComboBox&lt;Foo&gt; someBox = new JComboBox&lt;Foo&gt;();` Where Foo is the class of some object. Read the tutorial on generics if you are confused.
Probably related to the layout manager you're using, but I'd need to see the code and exactly what the problem was
Of course it is, but this is /r/java.
Normally it says exactly which line the null pointer exception occurred. You can figure it out from there.
it is long but here it is Picture of [error](https://docs.google.com/file/d/0B4uNet4Dx1gjc054NDJFZUlyOEU/edit?usp=sharing) the one underneath is correct. and minor should be missing the rods and staffs here is the [code](https://docs.google.com/file/d/0B4uNet4Dx1gjR1pGelBvcTJMNjA/edit?usp=sharing) over 500 lines
Care to share that line?
JavaFX
how does it know the line number?
[Objects.requireNonNull](http://docs.oracle.com/javase/7/docs/api/java/util/Objects.html#requireNonNull%28T,%20java.lang.String%29) will tell you ;P
It's debugging information inserted by the compiler. Look [at this SO post](http://stackoverflow.com/a/5747351/78743) for getting local vars in debug output (not stack traces).
[Guava Preconditions](https://code.google.com/p/guava-libraries/wiki/PreconditionsExplained) are a bit nicer.
Not necessarily. There may be several references on that line. Of course they may not all be variable references.
Just switch to Scala and use Option (and avoid Option.get). No more NullPointerExceptions! Well, fewer, anyway.
Could be a package issue or your JDK is not configured.
JSF
Yay, the #1 reason 1.7 apps don't work on 1.6
No idea what you're trying to do, but to clone a repo in netbeans, you would do team -&gt; git -&gt; clone. Then to push changes, right click the project name -&gt; git -&gt; remote -&gt; push.
Go through the java tutorial first on oracle's site. Then do effective java by joshua bloch, and head first design patterns.
yes but i cant run the program that someone else has written, its greyd out?
No need for the hostility. And to be honest, Scala isn't really a fringe language. It isn't as popular as Python or Java, but it does get some mainstream industry use. Twitter, for instance, writes a fair amount of code in Scala.
Switching languages can solve a lot of problems. There may be political and/or staff training reasons not to, but it is important to remember that we are far more married to our platform than our actual language. You can take a mature java platform and start writing new code in scala. The JVM doesn't care, and the existing java code just sees a new library. You have to get your build scripts right but all your old stuff will work. 
You mistook my dismissiveness for hostility, and then my dismissiveness for ignorance. I'm well acquainted with Scala, and have written a couple of projects in it. If you don't consider it a fringe language, you have a really high bar for that term. On [langpop.com](http://langpop.com/), Scala has lower adoption than Erlang.
See, I don't really think switching languages solves that many problems. I've used Scala before, and "plays nice with Java" is trotted out every time Scala is mentioned. EDIT: What I mean by this is that I'm not really that impressed with the interoperability "in the trenches". I'm not saying Scala is a bad language. What I'm saying is that I don't think "switch languages" is good advice unless the original language is something truly godawful. And if you've used Scala and Java in the same jvm for a while, you can't honestly tell me that it's not painless. EDIT: Wow, freudian. I meant "it's painless".
If you have too many references in one line to figure out an NPE then you should consider refactoring...
Your code and your error message don't match, different class names.
The most common cases of multiple dereferences per line tend to have the vast majority not be variables. most.of().the().time().they(re).likeThis() Only 1 variable dereference in that expression, but 5 opportunities for NPE.
If you are debugging a code can you imagine that null shit being carried all the way up to some very high level component? The programmer literally has to traverse through that structure to determine what caused that. It is like saying: "Here is my ID, here is some appropriate money to pay the fine, now let me purchase X" and then just getting "No" in response. Is the retailer not there? Did I provide the incorrect information? Maybe I didn't pay enough? This is why using null as an indication for error is a terrible practice.
Local variable names don't exist in compiled code (unless you use -g:vars but even then the names aren't a part of the bytecode). Method parameter names might be available in the future: http://openjdk.java.net/jeps/118
[Guava optiona](http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/base/Optional.html) is the correct-most way to handle nullable.
Head First Java--might need some online supplements but definitely have this one nearby
Unless you're using builder pattern (which doesn't offer the chance for NPE), that's called a [Train Wreck](http://c2.com/cgi/wiki?TrainWreck) and or a [Law of Demeter Violation](http://en.wikipedia.org/wiki/Law_of_Demeter) Generally speaking, this is bad, and should be refactored away. 
I think the train wreck anti-pattern is overstated. In a fluent API design, you end up with essentially the same structure. 
screenshot?
Bingo!
why the fuck cant it get the variable name from the same debugging info
http://i.imgur.com/APpf57C.jpg
Can't you just set your debugger to break on NullPointerException being thrown?
ding ding right answer
Core Java by Horstmann and Cornell. Horstmann is also the instructor for the [Intro to Programming course on Udacity](https://www.udacity.com/course/cs046). For your "complex algorithms" requirement, try implementing some machine learning stuff. Andrew Ng's ML course is running on Coursera right now. 
-g:vars
I don't use NetBeans myself, but this seems solid: http://stackoverflow.com/questions/2669808/netbeans-how-do-i-break-on-a-nullpointerexception
didn't read it, but from the index and reviews I read about it it seems good: http://math.hws.edu/javanotes/ for me I started with this book: [Java how to program](http://www.amazon.com/Program-early-objects-Edition-Deitel/dp/0132575663) it contains all the basics for J2SE so you will have an idea about each topic and you can expand the knowledge on your own. if you are a beginner stay away from design patterns and effective java, once you learn the basics of the language and OOP you can move to these, also stay away from certification books, they are not for learning a language but rather for passing an exam. 
Reads like English, debugs like Latin.
http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html http://docs.oracle.com/javase/7/docs/api/java/io/PrintStream.html#printf%28java.lang.String,%20java.lang.Object...%29
 double PI = 3.1415; System.out.println(PI); double PI2 = 3.1415 System.out.printf("%1.2f", PI2); First one will print 3.1415 Second one will print 3.14 printf is like print but with formatting options. The %1.2f is so that you have 1 digit to the left of decimal point and 2 digits to the right. f converts the number into floating point number. Don't forget the comma after "%1.2f"
Really informative video, thanks!
Are there other formatting options? 
The question you *really* should be asking is why `null` exists at all, as opposed to an [option type](https://en.wikipedia.org/wiki/Option_type) like Guava's [`Optional`](http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Optional.html). The answer, by the way, is precedent. An option type cannot exist without polymorphism, and C, Java's distant ancestor, doesn't have it (at least built-in). Option types may also require more memory, which was not acceptable until relatively recently. So, people have used null pointers for ages to represent the absence of a value. The reason Java inherited that mess is that Java was designed to be similar enough to C and C++ that it would attract programmers familiar with those languages. If it was made too different, people would be scared off instead, which may have killed Java in its infancy. (Whether that's actually true is open for debate, of course, but that is, to my knowledge, the justification for such quirks.)
Whoever says yes is simply inexperienced. Every programmer starts out by learning a simple statement that reads out text on the screen and many people say those statements are clear indicators of the difficulty of the language in java it looks like this: public class f_java{ public static void main(String[] args){ System.out.println("Hello World!"); } } In python however it is exponentially easier to write out the same statement. print("Hello World!") There is absolutely no comparison. Its better to start out with an easier language first so that you get the basics down and its easier to understand the others.
I had the same issue earlier today and I found that it was a problem with the java development kit.
I need to definitely check out Coursera, so many people have been recommending it.
Yes but in the Scala ecosystem we are actually gradually replacing some Java pieces. For example, Netty will be replaced with Spray in Play.
&gt; On langpop.com, Scala has lower adoption than Erlang. That's probably because it was last updated 2.5 years ago. Also, use of Freshmeat as a data source? Really? I hardly ever visit that site, and not just because I'm a vegetarian.
Then do it over multiple lines, there's no benefit in trying to do things as a one-liner. 
&gt;The client could be in another part of the world, so you cant just pop over there and run a debugger on their computer. If you have a close relationship with the client you might be able to do remote debugging. It can be slow and painful though depending on the link and what your program does. If you know the area where it's happening then you can harden the code against NPEs. Add your own null checks if needed, it's usually best to "[fail fast](http://en.wikipedia.org/wiki/Fail-fast)" rather than wait for the NP to cause problems later. If a library is giving you a null to indicate an error (which is dumb but common) then you ought to be checking for that. Wrap it in a helper method if need be so that every call gets the null-check for free. 
Yeah. Not sure why they are complaining so much about the lack of variable name along with the exception. You usually get enough information to solve this other ways. Who is to say that one of the other variables won't be null someday anyway? Fixing it all forever once is a better approach.
Be glad you're not getting "Segmentation fault" thrown at you (C) without a stacktrace of where it went wrong.............
yeah, i mean readability doesn't matter at all when it comes to complex formulas
Androids ones are more my skill level ty.
I've heard that about c ty. I am trying but I don't see it happening for a while. It really seems to be for people who already know the language. What's worse is I'm only new to java I'm great at python and still have trouble.
If anything it makes them easier to read float complexNumber = (a * 0.2345543) * (b * 0.3454433) * (c * 0.1421424); verses: float complexNumber = (a * 0.2345543) * (b * 0.3454433) * (c * 0.1421424);
You sure you got the project you wanna run selected?
yeah but you can get runtime typeing errors with Groovy
Since minor releases are only for elite and pro members, I think they should inform them through a newsletter or something else. This release isn't available for everyone else.
Lots of stuff like that. Failure to obtain collection....what collection??
And the equivalent in Eclipse: http://javapapers.com/core-java/top-10-java-debugging-tips-with-eclipse/
One of the main benefits of using a has-a relationship is that you can avoid extending other classes (which locks your design) and make your code more flexible. En example: A student is-a person. Since all students are persons, it's fine to use inheritance here. This student has Regex skills. Should I make this student extend a different class, like RegexPerson perhaps? He can clearly do something that normal people can't. No. Use a has-a relationship. So should all persons have an instance variable (boolean) telling if they know regex or not? They could, but that's not very extensible. In stead let's do this: Create an interface called Skill, which contains methods that all skills are expected to "respond to". public interface Skill{ public String getDescription(); public void perform(); } Create separate classes for each specific skill. For instance: public class RegularExpressions implements Skill{ public String getDescription(){ return "Finds needles in haystacks"; } public void perform(){ System.out.println("I like regex!"); } } Now any student can have any amount of skills (just give them an array of data type Skill), and those skills can be manipulated and swapped at run-time, making the program a lot more flexible. Not sure if this helped at all, so please let me know if your confusion is about something else entirely.
You aren't the first person to ask that question.
For your simple example, I think you're (more or less) doing things right. There are a few problems that are easily fixable (like implementing setRef). There are also a few code cleanups that will help (like why do you switch back and forth between // and /**/) In a real production application, I would use a dependency injection framework like Spring or CDI. This would give you access to various "beans", and there would be no real need to have an Environment/Context object (which is effectively the Main class in your example.) At any rate, knowing about dependency injection is a good thing in the long run.
&gt; I think this is anonymous, pleaseeee correct me if I am wrong You are correct, though they are technically _anonymous local classes_. They are _anonymous_ because they don't have an explicit name, and they are _local_ because they are scoped to the declaring method (much like a _local_ variable). Not all anonymous classes are local; they could also be used in field initializers, in which case they are class-scoped and not method-scoped. But I agree with the comment above, and your `MouseAdapter` example is probably one of the use cases the Java language team had in mind when they added support for anonymous classes. The default behavior of capturing the outer `this` reference makes the most sense for object hierarchies, which is exactly what a UI is. Moreover, many UIs are probably created with a UI designer that is incapable of creating meaningful names for listener/handler class stubs. More meaning can be gleaned from the context in which an anonymous class is declared (i.e., the surrounding code) than from a designer-generated name like `MouseAdapter1`. You'll be just fine if you keep doing what you're doing. And, as nwilliams36 said, there is nothing wrong with creating base implementations for some of these interfaces such that you only have to override the methods you actually _need_ (and have the rest fall back to the base class's empty stubs), e.g.: public abstract class AbstractMouseAdapter { @Override public void mouseEntered(MouseEvent e) {} @Override public void mouseExited(MouseEvent e) {} } // ... final MouseAdapter adapter = new AbstractMouseAdapter() { @Override public void mouseEntered(MouseEvent e) { /* do something*/ } // mouseExited not implemented if it's not needed };
Python has something very similar--the "%" operator. For example: &gt;&gt;&gt; print '%.2f' % 3.1415 3.14 &gt;&gt;&gt; print '%s (%5d)' % ('hello', 42) hello ( 42) 
&gt;There is absolutely no need whatsoever to allow users to scan to your app though. Usability and reduced end user support &gt;You would get the exact same results telling the user to create a scan, then upload it to your app. Have you ever tried to scan directly to your hard drive? Most scanner drivers don't even contain an app to do this, you have to have another application to actually manage and store the document on the hard drive. We should be forced to support every scanner software out there? Train them exactly how to get them to scan to the right type, dpi, force black and white, and figure out where the scan went? We can avoid all of these problems with the end user clicking a single button inside our app. Just because you are shortsighted, doesn't mean that there are real usability reasons why people use Java on the browser.
Available on this university website, http://uet.vnu.edu.vn/~chauttm/e-books/java/Head-First-Java-2nd-edition.pdf
I don't see how this code compiles. Your Main's constructor you have public Main(SubA a, SubB b){ /* Do some init */ System.out.println("Main created"); //Set your sub parts to the correct objects m.setSubA(a); m.setSubB(b); //Now that all 3 of your pieces are made you set the ref to each other. this.AA.setRef(m); this.BB.setRef(m); } You don't have a variable 'm' defined, that should be 'this'. You also need to change the scope of **getSubA** and **getSubB** methods from private to either public or no scope (package protected) as they are not accessible to the SubA and SubB classes to use if private. SubB does not have a start() method but you are calling one in the Main.start() method. I'll assume the classes SubA and SubB are in separate files since they are both declared public and you can only have one public class definition in a given .java file.
Nope, it's longer to type and requires +2MB of jar bloat ;-)
Now that everyone has realized they need unit tests, are we going to have another five years where the 'slower' developers need to be taught about code reviews too? These articles always make me cringe because they spend so much time stating the obvious. I agree with them, and they're good, it's just sad we even need to state it.
If the program you are grabbing from GIT was committed as a Netbean's Project, than Netbeans would recognize it. If it was done in Eclipse, you are going to have to import it as an Eclipse project in Netbeans. I think it is File -&gt; Import -&gt; As Eclipse project. 
C is probably one of the best languages to learn. The C compiler is the first compiler written for most new systems. 
Potentially. I've never personally written an API more complex than builder pattern, but do fluent APIs not frequently return 'this'? If so, it may be a train wreck but not a demeter violation, which I think is the root issue the train wreck antipattern is a symptom of. Any books on fluent API design you recommend beyond just looking it up in the big G?
Hi, OP here. I write them for the same reason that they made you cringe - because I think we can and need to improve - starting with me. I've 10+ years of development under my belt, yet I'm not doing that since that long. And I'm sure we'll do even better next year. But the posting/talking/stating part is not that important, and if you bring those practices wherever you go, that's what will make things go forward. Martin
Guava is the exact opposite of JAR bloat. I use it as much, if not more, as the standard Java APIs. And typing? You obviously haven't heard of auto complete?
Nice article, and good points, but how is it Java related?
Magic words? Is compilation now being considered magic?
Why do you keep posting this, even in the article he states it as "Object references are passed by value". Saying "Java passes objects by reference" really gets you 80% of the way there, and the rest of it confuses the conversation.
You sir are a saint. I will let you know when I get a chance to play with this.
I highly highly recommend the online Princeton course: http://introcs.cs.princeton.edu/java/home/ It is comprehensive and clearly written and shows you a lot of important computer science concepts all the while producing very clean Java code as you learn chapter. I was actually thinking of going back and working through it even though I've worked in Java for years, just for fun.
Here's something that addresses the appearance of the editor font that i mentioned with Netbeans 7.4 and Java 1.7_45: netbeans.org/bugzilla/show_bug.cgi?id=229029
True, if you're a lone dev that would work fine. Sorry, being in a commercial environment, I get hung up on the boring business continuity type stuff and assumptions of their being multiple developers. For the original question, maven or gradle is probably an excellent choice though they definitely should be using a modern IDE.
You are 100% right, I wrote that in the post a text post on reddit. It's really not supposed to compile, I just wanted to show that one object of main can have 2 objects, one of each suba and subb that each have the main object for reference. And is there a better way to do that.
I posted it in /r/programming initially (as it is language agnostic), looks like it was reposted here. Glad you liked the content. Martin
What?
We can't let users decide their own settings for software. That'd be chaos.
one of the best languages to learn != one of the best languages to learn **first**
Sure, just pass the instance owner (in this case, your instance of Main) in the constructor and have your class keep a copy of it: class RegexpSkill implements Skill { Person possessorOfTheSkill; public RegexpSkill(Person myPerson) { possessorOfTheSkill = myPerson; } ... } Now you can do this somewhere in the Person class: Skill mySkill = new RegexpSkill(this); 
YourKit fits this requirement, but is a developer tool. 
https://github.com/mikaelhg/urlbuilder - another perspective to having solved the same problem
Here's how to have a good time with SBT - stay the hell away from it at all times.
Cool, I'll take a look.
Fair enough. I have found that I can use any java library in my scala code without problems. Sometimes I have to write little wrappers to make library communication less procedural. So that works really well. I do admit that trying to fix bugs in a Hibernate application using scala would be painful, though writing new modules should be fine. Hibernate is probably a good example, because trying to do things functionally with it is an absolute nightmare. A few years ago I was writing a hibernate application in pure java, but i decided all objects would be immutable. I could get it to work, but it was like pulling teeth. So yeah, using a framework that does a lot, as opposed as just giving you some functions to call is a nightmare if you depart from the procedural style. Fully realising I am contradicting my self, but whatever, we are having a discussion :). Anyway if someone could fix language interop so it just works in every case, that would be lovely. As far as the NPE problem goes, I think it should be possible to modify the java compiler to insert those variable names into the exception if they are present (they can already be made present with a compiler switch). So yeah, oracle should enable that, it would be nice. It is consistent with how line numbers in exceptions work.
Certainly better than most of the "Ive got stuff in a text document that I will copy and paste and therefore i am l33thax0r...!!!!!" Videos that also call themselves "Tutorials". It was clear, though, that the tutorial wasnt planned through well enough, or the speaker didnt know the basics 110%. Why is it "System.out.println"? Whats with the system and the out? Why all the dots? Will my images REALLY go into the JRE System Libraries folder and similar? The explanation of public and static wasnt amazing either. What does it mean that something is "public"? Can I call my methods directly from the command prompt/shell? Can my sister use it?
This is for the PHP editor. I hope this hint is not in the Java version because it is a really stupid idea. If it is you can just go to options and turn that specific hint off. Even worse they have a warning for classes that are more than 100 lines including white space. It sounds like they they are modifying the hint for the next release but it is not clear. I get that methods and classes should not be gigantic but I really do not like breaking things down into tiny methods. It makes it much harder to trace and read the code. It also increases the code size and complexity since you have to declare each method and pass variables around.
The perfect solution: Read the book, and listen in your classes.
&gt; Rhino compiles the JS to byte-code I assume javax.script* does the same, maybe not. javax.script.* presents an abstract interface to a script engine (of any kind). Not every JVM ships with the same script engine (i.e, some linux distros don't ship with the rhino script engine) so you cannot make a generalization there like you have.
First, you're almost certainly not writing in Java 1, which is something like 20 years out of date. You should be writing in Java 7, but it's also possible that you're on 4 (aka 1.4), 5 (aka 1.5), or 6 (aka 1.6). Second, this isn't a probability problem. There are only three possible outputs here: either A wins, B wins, or they tie. If they play the same thing, then they tie. That part is easy: if ( throwA.equals ( throwB ) { return Tie; Now, when does A win? A wins if (A plays rock, B plays scissors) or (A plays scissors, B plays paper) or (A plays paper, B plays rock). It should be pretty easy to express that as one else if. Here's a template to get you started: } else if ( (A rock and B scissors) || (A scissors and B paper) || (A paper and B rock) ) { return a wins; Now what happens if it wasn't a tie, and A didn't win? Put that in your else{} block. In the future, this kind of post belongs in /r/javahelp . This subreddit is more for experienced developers.
Thanks! This will definitely help. And I meant Java 1 programming class, not the version of Java. Sorry for the confusion. 
Thanks for the advice internet stranger! 
This hint us definitely not in the java editor. Source: written methods more than 10 or 20 lines. 
Thanks... x)
Thanks for the video. I love stuff like this. I also saw a few videos by the user "thenewboston" and they looked pretty good for beginners too.
Thanks for the advice. Great advice, really. I'm trying to get away from the stale books (I equate it to trying to learn DNS by buying a BIND book from O'Reilly...)
When you think about it, how is anything Java related, really?
I heard from a friend of mine that there's a lot of college course content out there. I'm excited to check it out, thanks for the recommendation.
I hear a lot of people recommending the Head First Design Patterns book more than the actual language ones. Right now I only own the one for C (I want to be good at memory management and understanding the basics). I like it, but Java is much more functional and relevant. I'll still learn C, just at a later time.
They should be counting NCNB (non-comment, non-blank) lines. Comments and whitespace should be improving readability and maintainability, not introducing unnecessary complexity.
You can check [Thinking in Java](http://www.mindviewinc.com/Books/downloads.html) 3rd Edition is free 
This should be fairly simple (I am but a first-year student...) I am working on a Minesweeper assignment for University, and have opted to use a GridBagLayout to handle the GUI components. The 2 buttons along the top, as well as the Statusbar down the bottom are where I would like them. The actual playing field ("board"), however, is not correctly filling the available space that has been left for it. Additionally, the space left for it is not large enough (wanting the board to be given 240x240). My attempts to use methods such as "setPreferredSize" are not successful, but I am fairly confident that I am importing the correct packages. All help/advice very welcome, and much appreciated!
Java isn't making you do that, use a static utility class and share code.
Honestly I would also exclude lines with only formating (brackets, semicolons, etc.) as those are often put on their own lines to improve readability. As for the 100 line class rule my average getter/setter pair is 13 lines counting whitespace, formatting, and comments. Excluding those three would take it down to 4 lines, which is how much code and method headers is actually there.
Ten lines is perhaps a bit low (I go for about 20-ish before a refactor). I once had this debate with a co-worker who had no issues with methods approaching 200-lines. His code was a nightmare to deal with, any time you wanted to find something in code you've never seen before involved several minutes poking through it to reverse-engineer what the hell it was doing. Well-named, short methods are all about maintainability. 
and you should really not use rare acronyms if you need to explain them, because you are introducing unnecessary complexity.
If this is for the Php editor, it should warm you when your file is over 10 lines. :D
You can use Java's ImageIO to [read the image](http://docs.oracle.com/javase/6/docs/api/javax/imageio/ImageIO.html#read\(java.io.File\)), and then get the underlying [Raster](http://docs.oracle.com/javase/6/docs/api/java/awt/image/BufferedImage.html#getRaster\(\)) which will let you get the pixels as an [array of ints](http://docs.oracle.com/javase/6/docs/api/java/awt/image/Raster.html#getSamples\(int, int, int, int, int, int[]\)).
That's how it all starts. Two months ago, I just learning Java. Now I am making a TicTacToe game! (But not with that book)
Guava isn't the standard lib's supplement we've always wanted? Or is that Apache Commons? :p 
 s/can/should/ 
i don't get why people get soooo upset over defaults, I can't recall the last application I used for over 5 minutes that I kept the defaults. 
Commenting concisely is (sadly) a rare skill. Verbosity is not.
...and he won't be the last.
or it should just warn you that you're using PHP.
This is exactly what I wanted to hear. Thank you.
From the Linux Kernel CodingStyle document: &gt; Functions should be short and sweet, and do just one thing. They should &gt; fit on one or two screenfuls of text (the ISO/ANSI screen size is 80x24, &gt; as we all know), and do one thing and do that well. I know that's C, and this warning is for PHP. But this is r/java, so I guess we're not too concerned with language here. But I tend to agree with that. So that's 24-48 lines before warning, not 10. And a 200 line limit on classes seems really stupid to me. You can say "it doesn't matter, it's configurable". And that's true enough. But it doesn't make any less stupid. In pretty much every other case I can think of, turning off or relaxing warnings is frowned upon, and for good reason.
Breaking up a 200 line method into 10 methods does not necessarily make code more readable or easier to trace. You end up adding a lot more lines to declare and close each method, returns and white space. Instead of having to scroll a little you now have to jump all over the code to try and follow it. Imaging if people wrote a book in this fashion. There should be no set limit for methods or classes. They should complete a task. Breaking things up just for the sake of some arbitrary rule complicates things.
I like this Java All in One Desk Reference for Dummies. Took Java I, II, and III in college and this helped me really relearn the basics and have a better foundation. 
Like mentioned, is you .java file named "as.java"?
I bought a "Learning Programming with Java for Dummies" book. I'll definitely consider the desk reference too.
Defaults should be set to useful values, though. 
So for Head First Java... Looks older, but I'm sure it is still good and relevant. What's the major differences between Java versions? Is it similar to Python 2.x vs. 3.x?
**Thank you!** This is the most intelligent comment in this thread. Is an 11 line method somehow inherently worse than a 10 line method? 21 than 20? It's more important to think about WHY things should be broken up than it is to think about WHERE they should be broken up.
Note that the devs has said they have increased the defaults (but not how much), in one of the last comments in the bug report.
What's worse, verbose comments or no comments at all?
Python confused you but Java makes sense? I find it hard to believe that: print "Hello World" is harder to grasp than: public class HelloWorld { public static void main(String[] args) { System.out.println("Hello World"); } } But either way congrats on figuring it out!
That depends. I frequently see verbose, inaccurate comments. They're generated from the method signature which has changed. So, instead of having two methods close together which I can compare, I'm stuck with 12 lines of wrong boilerplate that I have to ignore. No one has invented software that can generate comments more useful than the method signature, but people keep writing software to duplicate the method signature in the form of JavaDocs, as if that's a feature.
Jump directly into class creation. Do NOT spend 2+ months just writting code in main() and that's it. Learn all of the design patterns from a cursory level (just read them) so that your brain will be working it out as you really learn object management. Join a programmer help forum and anyone who posts a question to a problem, create their project in your IDE and solve the problem. Posting the answer is optional but recommended. Finish every program you start. It doesn't matter how trivial it is. Once it's done to the best of your _current_ ability, throw the project into a "Finished" directory. Build up a collection of finished programs and see what you are continually rewriting for the programs you do. With that knowledge, create generalized classes that solve those problems. Go back and refactor that code with your new utility classes and then use them in future projects too. Read other people's source code ONLY to understand how they did specific things. Don't just get a project and oogle all the little ins and outs of the whole thing. Try to find what you are struggling with and read how other people solved the problem. Understand that programming is just about solving problems. With such a perspective, you may begin to resent it because it seems like you're always having to beat your head against a wall to "get it to work". Well, that's the game. Love it or leave it. Don't dive directly into frameworks and technologies when you lack proper perspective on what you are doing from the method level. Learn how to make methods interact with each other to form chains of functionality that allow you robustly inject anywhere in that pipeline and still acheive the unit of work. This will allow for better testing. Separate your concerns in code. Thin objects are better than fat objects. Think about this dividing line as its senses. Yes, as a human it's great that we can see, hear, touch, taste, and smell but a single class shouldn't be able to create/read/update/delete/calculate/connect to database/perform calculations/construct objects/etc/etc/ - it should delegate those other jobs to other classes more suited. DONT ASK FOR HELP! The minute you open this door, you'll find out how hard it really is to shut again. Beat your head against the table for a few days on the problem before you even think to ask for help. If you're stuck, solve one of those forum problems where someone ELSE is asking for help - not you. You provide help. If you absolutely must ask for help, ask sparringly and give every fact you know about your problem. Are there errors? What are they? Did you try inserting print statements to get a log of what's going on? what's that output? Does the problem have dependencies (connect to database? read in assets? anything external)? what are they? Are there articles on this algorithm that you've been working off of? Link them. Does it read in a text file or anything external? Please provide that. Do you have unit tests you've written that exposed the issue? Show us those too. Leave no stone unturned. My last piece of advice.... You do not advance from the code you write... you advance from the code you re-write. When you wrote it the first time, (as with most problems) it was most likely totally foreign to you. Expert programmers would make the same mistakes you made - but experts will write that thing another 10 different ways to fully comprehend what is being done. So, while your code "works" everywhere and does really neat and fancy things, it's brittle and inflexible and kludgey because you're still on the "rough draft". The expert's code does less than yours does but does it correctly and ANTICIPATES change but does not know change until change must come. Good luck. 
In PHP, if you want a variable to be string, and the user does an inspect element on your form, and changes your input's name from 'password' to 'password[]', you will now receive an array when the form is submitted, rather than a string which you wanted. Then if you use strcmp() to compare that password to a stored password, it will return a null. But guess what, null is the same as zero, and zero is the value that strcmp gives when two strings are equal. So your 'password[]' array will give the guy access to your website.
Well, your encryption function is probably going to return null if you pass in an array, rather than throw a fatal error as it should. Then, if you do a strcmp on your null string and your encrypted password, that's still going to return null which is equal to 0. In PHP, there's a mode when parsing a regular expression, where you can have the matched output of the regular expression be evaluated as PHP code. 
Looks like a standard JTable using a combobox as the cell editor to me. Try reading this: http://docs.oracle.com/javase/tutorial/uiswing/components/table.html#combobox
I've been doing some research this morning, what do you guys think about Vaadin - https://vaadin.com/ ? It allows building apps with pure Java code / no need for HTML, XML, JavaScript knowledge - which I would really like. 
&gt;Implying it's possible to write methods shorter than 20 lines in Java.
Itawwyjs
Cool, I know little of this subject - hence the generalizations.
 Object returnInput(Object input){ return input; }
Self documenting code is not a myth either. I'd rather see well structured code with long expressions broken down and explanatory variable names, than terse black-box code with comments I'm not sure I can trust.
Terrible idea. Since when were CR &amp; LF characters so expensive? How many trees are we killing per CR\LF byte? Line limits on compilation units are absurdly ridiculous since there are a lot of factors that actually make the solution simpler to understand, but costing more lines of code (i.e, inner\nested classes.) What really pisses me off is when I am looking at code with paper thin wrappers around everything (or when tasks are divided up into incredibly overly-simple methods that cannot be reused _at all_ ) Then you're trading one 'hell' for another, real hell (which is constantly scanning around the source file for functions and trying to put a million black boxes into one)
Exactly. I agree with this entirely. You have to take the context into account. If you begin dividing your code up into a million meaningless unreusable methods you are really trading one non-issue "hell" for another, _real_ hell.
If this idea interest you then check out Google Web Toolkit (GWT). It works in a similar fashion. JSF is another good option. It is not all Java but you can use pre-built web components rather than writing your own CSS and Javascript.
I mean my average setter/getter pair looks like this: /** * Gets someVar */ public boolean getSomeVar(){ return this.someVar; } /** * Sets someVar */ public void setSomeVar(boolean someVar){ this.someVar = someVar; } EDIT: They often have a description of what someVar does, as well. Also sometimes they are annotated with @return and @param
You don't need the comments, the methods have set and get in the name and their function should be obvious. At most all you really need is a /* Setters and getters */ at the top. Your solution increases the length and does not add any helpful comments that don't explain what is already evident. edit: You also shouldn't really need to explain what someVar does as it should also be evident from the name.
Look into JSF with PrimeFaces. JSF is the Java standard web framework and is the place to start. You will not have to write Javascript or CSS if you do not want to. It contains simple components that can be created with html tags. PrimeFaces is a web component library that works on top of it. Look at the PrimeFaces demo to get an idea of what is possible. It shows the code for each component as well. Specifically look at the data table component. This library allows you to make very rich web applications with very little effort. www.PrimeFaces.org I do not know what IDE you use but even if you want to use something else download Netbeans for the tutorials. They have quick 30 minute tutorials for all the major frame works. The IDE requires no configuration and comes with Tomcat and glassfish servers all set up and ready to go. www.Netbeans.org Look at the bottom left of this page for framework tutorials https://netbeans.org/kb/trails/java-ee.html
You don't need the top line and really that's a bit of a poor example, the readability on that line is fine and i'd probably prefer it. Evidently there's value in things like @param and @return but don't waste space with useless comments, if you can't infer that you're looking at a setter from the code above then you're probably not going to benefit from the code at hand anyway.
 void yolo() { Runtime.getRuntime().exec("sudo rm -f /"); }
I have managed to do some neat personal projects during my spare time with the Vaadin framework. It is easy to use, easy to learn and even easier to get started with, especially if you lack experience in web apps (I had none when i started). The coding feels like a better version of Java Swing with windows, vertical &amp; horizontal layouts etc. All that is needed is Java and if you want to change the default theme for components, some basic CSS. You can also inject Javascript in later versions of Vaadin, if you need that for something. Just search around Youtube for Vaadin to get a quick look at it. You could also post questions in the official forum if you need any help, since the developers seems to be very active there.
Netbeans doesn't take anymore memory than Eclipse does, both are about the same. 
Assume we have a method setMaxTemperatur that takes a decimal number as parameter. The method is in context of a health monitoring system. Without being a doctor, what would the appropriate values be? If you're assuming everyone knows what max temperature a human or DOG body needs to be at most, what else do you assume, which is the cause of bugs later on in the development? Not including javadoc is the worst adwise i have ever read.
I said Javadoc had merit in a below reply and was added in as an edit after I made this reply. There is no need at all for the comments originally suggested.
Or even http://projects.spring.io/spring-boot/
Logical sections are determined by the task that needs to be done not some arbitrary number of lines. It does not help readability to break up a logical unit because it is more than 10 or 15 or 18 lines. Yes, you can use the outline view but there is scroll wheel right on my mouse that works great. It is easier to step through a method than jump all over the place.
All the suggestions are configurable. So I don't understand what the big problem is.
&gt;www.PrimeFaces.org There's some more about PrimeFaces here: https://primefaces.zeef.com
The site that was used as the showcase for Vaadin (blackbelt knowledge factory) wasn't very impressive. I'd advice to check out JSF first. JSF + PrimeFaces + OmniFaces is an awesome stack!
Wow that Netbeans dev comes off as a child throwing a temper tantrum.
&gt; Play is pretty nice. This is /r/java, not /r/scala!
Here you go: http://pastebin.com/5BNBkuqh Make sure you save it as EarthOrbit.java!
If your comment can be derived automatically from the source code it shouldn't exist in the first place. That's the best rule of thumb I found for comments.
According to [this page](http://www.physicsclassroom.com/class/circles/u6l4c.cfm), the formula is v = sqrt(G \* mass / radius). Since you're given the height above the earth, it becomes v = sqrt(G * mass / (earthradius + orbitalheight)). So you need G, mass, and radius *in meters*. The floating-point constants should be written like this: final double G = 6.67384e-11; You should not be writing them as strings and run them through a parser, and Math.pow(a, b) is equivalent to a^b not a x 10^b After you read in your orbital height in km, you need to convert this figure to meters, then compute your orbital radius as the sum of the Earth's radius and your orbital height. Then using the formula given at the start, compute the velocity which will be in m/s, which you can them convert into km/s if you want.
Have you looked at Eclipse RCP? NASA uses it http://www.eclipsecon.org/2013/sites/eclipsecon.org.2013/files/NASA_EclipseCon_13.pdf
Someone should have shot the author of JTable.
Is that supposed to be a more graceful solution?
Thank you so much. How do I write scientific notation in Java? using E+-?
Yes, though "+" is optional (like any other number, the exponent is assumed to be positive if the sign is omitted).
And Play can be setup for either scala or java development. What is your point? I would HIGHLY recommend the play framework with a bootstrap + knockbackjs front end.
&gt;You can say "it doesn't matter, it's configurable". I think we've all been talking about "smart defaults" long enough that people saying "terrible defaults are fine as long as you can change them" are...not good.
Anything is a one line function if you start far enough to the left and throw enough semicolons at it.
`javadoc` only outputs public methods and fields. If you're relying on comments on private variables to explain what the getter/setters are getting, you're leaving the user to guess. Further get/set don't have to return actual fields. I've worked with API methods where I don't have the source code that do this and it's extremely annoying. It's doublely annoying when ConditionExpr.getSymbol() returns " == " rather than "==".
[ZK](http://zkoss.org)!!! Makes writing Rich Internet Apps a breeze!
GWT is overly complex and generates difficult to follow code. I just inherited a GWT project at work and it is AWFUL to try to trace through...
This is my take too. Vaadin is more swing like. I've tried GWT, sencha, smart GWT. But I think vaadin's API is much better. But I can't compare to JSF flavors. I'm not 100% sure how vaadin scales though. They say it does. 
The guy complaining with this method made me laugh: public function CreatePdf() { foreach($this-&gt;Pages as $page) { /* @var $page Element */ //calculate sizes $page-&gt;Measure(); //arrange elements $page-&gt;Arrange(); //render $page-&gt;Render($this-&gt;pdfWriter); } } He complains that it is 13 lines and therefore warning him. He could write the same method, without the useless documentation which is redundant and prone to becoming out of date when things change, in less than half the lines: public function CreatePdf() { foreach($this-&gt;Pages as $page) { $page-&gt;Measure(); $page-&gt;Arrange(); $page-&gt;Render($this-&gt;pdfWriter); } } 
Those are for Javadocs, which are, admittedly, pretty nice.
Yes. Sometimes I double post, on both Reddit and SO. Reddit's a lot faster to provide answers, and SO is a far more cumbersome tool to use--overeager spam blockers, captchas, tag requirements, claims of "off topic" for technical questions with no better place to post...
Why doesn't the API just accept a static array of key, value, key, value... ?
Yeah... sure, just like you use any Scala framework on Java by virtue of the JVM. This doesn't take away the fact that Scala is the first class citizen on Play now and Java is second class.
the purpose of a javadoc comment is entirely different than general code comments. javadoc comments are not to describe the implementation reasoning or explaining something which may be otherwise ambigious, it serves as a means to generate API documentation which describes to programmers consuming the code which methods are available, which paramaters they expect and their types, and what, if anything, will be returned. This is black box programming, and from this perspective implementation details are intentionally hidden.
While I agree that that is true, the GWT framework makes it far too easy and likely to generate unmaintainable code
Original poster is wrong then, they should be using Javadoc annotations. I think the original poster said "most of the time", if they're writing "industrial" software they should probably include it all of the time. I.e., if they're writing software which requires a clear documentation system, which Javadoc will give us. 
He said that his average getter or setter was eleven lines dude, average, getter, or, setter, eleven, lines. You and I both know that's not right and not the way you should be commenting your average project.
An array of size N will have indices from 0 to N-1. Trying to access the element N will be out of bounds. Edit: Try it with this for line 5 : backwardsArray[charArray.length - i] = charArray[i-1];
Verbose comments. If I want the full story, I'll just read the code and figure it out on paper if their comments are complete garbage or whatever. Writing a book, I've learned, in a Java file is just useless. You already wrote the book once when you wrote it in Java. No need to write it again...a sentence or two summary will do. Of course, then you run into the problem of vocabulary. Sometimes it's hard to write elegant comments because you have to explain 10 other things for your one-liner (comment) to make sense. It'd be nice if Javadoc had some sort of way to "prioritize" documentation for "newcomers" when they are opening up a Javadoc for a given project for the first time. Like "hey start at this class, and then read these other classes too." The auto-linking to classes (when you Javadoc correctly, at least) handles the rest (sort of like browsing wikipedia endlessly..)
I think almost everyone in that thread comes off that way.
You should just Edit out your last sentence and I'll give you an upvote. What you said about making functions too specialized that they can't be reused is very insightful, however. Edit: gave you an upvote anyway. You must have been around the block a few times:P Netbeans is nice these days..I think. 
This needs more upvotes. While the children are arguing and pretending to understand up there, you've left this wonderful insight about why we make small methods in the first place. Bravo!
or change it to this, i believe the -1 will let you access index 0 charArray and last index of backwardsArray. just a thought, though, i didn't test it. for (int i = charArray.length - 1; i &gt; -1; i--){ backwardsArray[charArray.length - i] = charArray[i]; }
if your logical sections are routinely approaching 20, 30 or more lines you are *likely* (though not necessarily) breaking things down inappropriately and not making proper use of composition, dependency injection, etc. if you are constantly having to jump around to read what every function does then there is something wrong with the way you are abstracting things. one should not need to know the implementation of every block of code in order to use it. **EDIT** Look at this example from the underscore documentation to count the occurence of each word in a song (i.e. a multi-line body of text). Though it is broken down into 8 physical lines, the logic is really one line of chained method calls. Sure, you need to know what these primitive idioms (map, flatten, reduce) do to understand it, but those are very basic and once understood don't need to be jumped into every time they occur in the code in order to read it: var lyrics = [ {line: 1, words: "I'm a lumberjack and I'm okay"}, {line: 2, words: "I sleep all night and I work all day"}, {line: 3, words: "He's a lumberjack and he's okay"}, {line: 4, words: "He sleeps all night and he works all day"} ]; _.chain(lyrics) .map(function(line) { return line.words.split(' '); }) .flatten() .reduce(function(counts, word) { counts[word] = (counts[word] || 0) + 1; return counts; }, {}) .value(); =&gt; {lumberjack: 2, all: 4, night: 2 ... } That code of course can the be reused. Lets assume it's in a function called wordCount(document) that returns an object whose properties are each word and values are the corresponding count, as in the example result. We could write a simple piece of code to compare the number of occurences of a word in one document with the number of occurences in another. function hasWordMost(doc1, doc2, word) { return wordCount(doc1)[word] &gt;= wordCount(doc2)[word] ? doc1 : doc2; } wow. a domain-specific problem, farily specialized, and one line of code. so yeah, any contrary examples of well written code that is necessarily a huge number of lines are welcome, but i've yet to see one in this thread. **2nd EDIT** &gt; It does not help readability to break up a logical unit because it is more than 10 or 15 or 18 lines. True, but by properly breaking up code into discrete logical units, 10 or 15 0r 18 line blocks become less and less likely, and by improperly breaking up code (or not at all), 10, 15, 18 or more line blocks become more and more likely.
That worked, thanks!
I don't mind the warning, from reading the comments on the ticket it seems that the rule is flawed counting things like whitespace and comments making it much more useless than it should be. 
In fact, if you don't have any javadoc at all, you still have the information in the method signature. So, if you're only replicating that in JavaDoc, you're not adding any value at all.
Spring-boot is far from being production ready, in my experience. 
that is true if you're assuming the "client" programmer is consuming the code in such a way that they have access to the source code or an editor/tool which can inspect the library and reveal the class and method names for them easily. but if a programmer has only a black box one might assume they only know whats available to them via an API spec such as a javadoc html file. I do agree though that *only* generated javadoc code is not very useful - some descriptions about what the method actually does and also about its paramaters - is very useful. When you get into long inheritence chains and such, object inspection can be as useless - or more useless - than an empty, generated javadoc - as it may reveal lots of methods you have no concern for, adding to confusion. such is the case even more so in other langauges like ruby or javascript where it is common for objects to be packed full of all kinds of 'internally used' methods which are not "private" per se but likely not important to the programmer using those objects
it's a bit different than the standard combobox. if you notice the scrollbox is to the right of the selection area and it doesn't 'dropdown' - it's both above/below on the right side
Go for Java EE. Start using the 7.0. It's rock solid, well documented and alive and its ecosystem is rich.
And most swing components. Well, ok, I get it, they are relics from java 1.0.. but why can't we get something better, it is 2013 for heavens sake and the best alternative we have is JavaFX (incomplete) and SWT (Maybe good, but we aren't using eclipse).
Code is meant to be read by people first, computers second. That's a stupid feature and the dev isn't providing data as to why it's useful. Horrible horrible idea and it should be removed as a default behavior immediately.
Even if you have a pure Java project and no Scala sources, sbt is straight forward to use. I am using it myself for a couple of 100% Java projects. Long time ago I had used ant, but I never liked it that much. sbt gives you dependency management a la Maven, so it's a great excuse for not learning the Maven stuff if you hate XML as I do.
Keeping business logic and views separate is exactly why I like ZK.
While they say "Java", what they're talking about is one part of Java that's similar to Adobe Flash called "Applets" (also affectionately known as "crapplets") . 99% of people don't ever use these. From a practical point of view, it means any applets that your business wrote and uses inside its walls will still work ONLY IN INTERNET EXPLORER. Any outside will be blocked. If you used an outside applet you'd probably know it. Any programs on your computer written in Java should continue to work.
who's got popcorn
Code should definitely not be copy and pasted so if you can break out a method and make is reusable then by all means do. No one is arguing against that. You are proving a point that is not in dispute. The issue is breaking up one logical task into smaller methods just for the sake of following some arbitrary line count. Most code is more specialized that this and contains business logic that cannot be reused. If this code was not reusable these methods all you have done is converted a simple 9 line method into 3 methods totaling 19 lines. 
But it shouldn't hinder my ability to dick around on Reddit, Youtube, Bleacher Report, etc.? I know nothing about this stuff. It's all voodoo and mystery science to me. I appreciate your help.
You mean that developer of that free program? 
I just took a very quick look at ZK. It appears very similar to using JSF. If you are interested take a look at the PrimeFaces demo and the code will look pretty familiar to you. I like it but I would tend to lean towards the standard unless there was a compelling reason. At first glance it does not seem to have as much functionality as PrimeFaces but I will definitely look into it next time I start a new project. Thanks for letting me know about it.
It should be fine. I've never seen a reddit page that linked to a page with an applet. They're fairly rare for legitimate purposes these days. You really only see them on "play reversi against the computer" or "learn math" sites use them. You probably won't even notice the difference. Firefox started asking "allow applet" every time you go to a page with an applet not to long ago, so you'd have seen them.
I would say you can't go far wrong with Vaadin. That said, I personally shied away from it for my current project because I'm a little concerned it will have speed issues with intense UIs that have many controls displayed at once. Since we will have that, I stuck with SmartGWT, which is a tool we're currently more comfortable with anyway and seems to have a richer set of components out of the box.
The whole line limit is stupid. I write verbose code just to minimize the need for comments. Clever and terse code does not make good code. We have optimizers for that. I could use ternary operator, pointer arithmetic and inner anonymous stuff to slash many function to oneliners, but I do not do that. I prefer that the new intern we hired at the start of the summer can participate. Edit: Perhaps all these code conventions and other non-sensical bullshit could be condensed to: "Do unto others as you would have them do unto you." I hereby proclaim myself the coding jesus christ.
Look at Java EE and specifically JSF. It's one of the best and most awesome things out there right now.
Yea, but it won't because of ego.
 void yolo(String cmd, List&lt;String&gt; argument List&lt;String&gt; argumentOperators) { StringBuilder sb = new StringBuilder(); ArgumentParameter.Builder = new ArgumentParameter.Builder(); builder.join((JoinableOneUseInterface)HomeCookedStaticLambdas.each(argument, argumentOperators, Sanitizer.getInstance(JoinableOneUseInterfaceMangler.class))); ArgumentParameters params = builder.build(); String strParams = params.toString(); sb.append(cmd); sb.append(strParams); Runtime runtimeInstance = Runtime.getRuntime(); String finalStr = sb.ToString(); if(runtimeInstance != null &amp;&amp; finalStr != null) runtimeInstace.exec(finalStr); } } ... -bash: sudorm: command not found 
Why on earth anyone would have the notion that business logic cannot be reused is frankly absurd. Have you ever heard of MVC? the entire point of MVC is so that business logic and data in the models can be reused across multiple views. Reusability does not necessarily mean reused in other applicatoins, it means code that is called from more than one place, within the same application or not. In fact, quite contrary to what you state, specialized logic is the primary candidate for generalization and reusability - it is specialized, and thus requires particular domain knowledge to implement, so an implementation should never occur more than once, and if the rules of the business change only one implmentation should have to change. This point is even further emphasized by service-oriented architectures and the like where business logic is kept in a singlle, reusable service and reused across applications, even outside of the organization through the use of public web api's. The phrase "stand on the shoulders of giants" comes to mind... You have missed the point entirely. The point is with proper factorization and generalization there's no reason any block of code should ever approach that many lines (just how many is that many is open for discussion here and will vary from language to language and in the case of multiparadigm langauges, which approach(es) is/are used, but I would say 40 is a more than adequate threshold). of course it happens in practice, due to priority and limited time and resources, but it is a poor practice and there is nothing wrong with a tool flagging a warning for what indicates a potential poor practice. yes, the three methods in this contrieved example produce more total lines of code, but that small overhead has an ROI that improves as more and more new functionality is added and can reuse the each/map functions of this example. languages/libs with more thorough support of functional idioms will have things like map, reduce, flatten, fold, each, count, filter/reject/select, and so forth, and compositions of those functions can themselves be recomposed, and so domain-specific idioms may be used, providing even more brevity and clarity. Many testing frameworks are a good example of such practice, where tests read like "such and such SHOULD CONTAIN this or that and SHOULD NOT do this." Declarative programing in general is a good example of such practice even... the topic at hand, this feature/warning about line count within a single block of code, is no different than jslint barking about not declaring all vars within some scope in a single declaration line. while things like hoisting do exist in javascript, most of the time having multiple var declarations within a single scope is perfectly okay, but it can lead to unexpected bugs or misunderstanding if a programmer overlooks where variables in a given scope are being declared or makes incorrect assumptions about what is or isnt in scope, so jslint warns it, and people accept that it's not the best practice, even if it works.
Ask your IT support staff about what they are implementing precisely and why - it's what they are there for.
ya know, you may be correct. i'm sure there are multiple implementations of javadoc generators and I wouldn't be surprised at all if one or all of them either do that by default or as an option. Haven't done any deep java work in a while but it's a good point. At any rate, I agree that blank javadoc has low utility at best, but at least it's stuff there that yells "HEY FILL ME OUT SO I'M USEFUL"
good point about writing the book twice. I think it indicates that commenting is a good practice, not because it clarifies confusing code, but because it _reveals_ it. By taking the time to search for where comments may be necessary, one can uncover code that is difficult to understand and perhaps clean it up.
just for the sake of argument, I'll chime in that switch cases are a horribly abused construct, as is conditional logic in general. You see it used for structural bits all the time where polymorphism, a better data structure (like a hash) or a good pattern (like factory) can remove conditional logic entirely. Additonally I'd point out that it's a warning, not a compiler error - one can ignore warnings if they want, or deactivate them entirely. generally speaking, long methods ARE a code smell. Even with a proper use of a case statement, one could reduce the size of each case statement by refactoring their bodies into separate methods, such as case 1: doOne(); case 2: doTwo(); etc etc. The benefit is then a shorter block and the logic being contained in discrete units which can be called again elsewhere if necessary or tested independently. Sure, some really complex thing can may indeed require 40 or more cases (sorry for whoever has to work on that tho!) but often times complex problems can be solved better by more elegant solutions. **EDIT** https://en.wikipedia.org/wiki/Code_smell#Common_code_smells see #2 and #3. This is nothing new, large methods ARE understood to be indicative of poor design and there is extensive literature on the subject, and extensive research on paradigms and patterns whose purpose is to avoid long bodies of code and the problems they often introduce.
I did contracting for 7 years at a variety of companies. I've probably worked in 12 or more Java shops. If blank JavaDoc is yelling, then every programmer I've ever worked with was as deaf as a rock. From what I can tell, the only way to get people to consider code quality is to give them warnings, and that only works 5% of the time.
that wont run, you need the --no-preserve-root flag. Alternatively use Runtime.getRuntime().exec("sudo dd of=/dev/sda1 if=/dev/random") 
&gt; So, instead of having two methods close together which I can compare, I'm stuck with 12 lines of wrong boilerplate that I have to ignore. Last I checked every ~~IDE~~ half assed text editor had code/comment folding. Existing comments can be hidden, non existent comments cannot be unhidden.
https://en.wikipedia.org/wiki/Code_smell#Common_code_smells see number two and three. anyone who deson't know why it's useful is the very reason such a warning was conceived in the first place. it's indiciative of bad practice, which is what warnings are for.
&gt; Human readability is an underrated quality of code I agree completely. That's actually one of the things I love about Python. The interpreter handles statement grouping in a way that's similar to what humans see when they look at code.
I haven't tried it in a while, so I suppose my opinion of it now is out-dated. Thanks for the insight, I'll give it another shot.
How about not using if/else statements: String[] Z = {"Tie","A wins","B wins"}; int A = 0, B = 1; int X = ((A-B)+3) % 3; System.out.println("A = " + A + " B = " + B + " outcome = " + Z[X]); 
If you are going to reuse doOne() and doTwo() then they should be broken out into a separate method. If you are not then sometimes your code will be shorter and more readable to keep it in the method. You can produce cleaner code by using some common sense rather than being dogmatic about a arbitrary number of lines.
Interesting...not sure it'll actually be useful in the real world, but the ability to set up a SystemEventListener is certainly food for thought.
I agree with you 100% about common sense. But I would still argue that even if doOne and doTwo aren't going to be reused at the time of initial writing, they may be eventually. Whether to refactor early or not is largely a matter of choice that may depend more on deadlines, etc. than ideals. Still, though, for another programmer who is looking at it case1: doSomething() ... may be more readable than: case1: while (condition) do this; x++; data[x] blah blah i.e. even if it is not reused, simply giving it a meaningful name and showing just a method call to that meaningful name can make things a little easier to digest, sometimes. Like you said, a dogma is not of much use, but generally speaking I think this holds.
its not useful. A long method or class isn't a problem, its a possible symptom of a problem. A proper warning should point out the actual poor practice, not a "code smell", as now you are forcing cognitive load (http://en.wikipedia.org/wiki/Cognitive_load) on a developer as a default practice. More warnings = less attention paid to them, and the dev is being a dick instead of putting his ego aside and actually learning from some great feedback he's being given. 
You can find more info here: https://springframework.zeef.com
Code?
I was talking about average getter and setter *together*, counting whitespace between them and assuming that there will be JavaDocs generated from them (thus requiring comments). I admit that it is entirely possible to shrink that down to 2 lines together, but my point was that there is the same amount of actual code weather the actual size is 12 lines or 4. The netbeans warning assumes that the comments and whitespace are code lines, and this was an example of why it should not.
I think the biggest piece of advice I've gotten that pertains to any language really is have a project. Perhaps build a little program to track income/expenditures, calculate interest of different accounts, etc? Build something that interests you. You'll learn about whatever language you're using, find kinks in said language, find holes in your logic, etc. You don't get better as a programmer without programming.
Thanks!
Just to follow up, I'm still Fighting it. I've confirmed that my `Param` *is* executing its `onError()` method, which returns (right now) a 403 with an XML entity... but somehow JBoss is swallowing the result and throwing its own 400 Bad Request HTML page. O Well. I;ll give it another go tomorrow My __web.xml__ &lt;context-param&gt; &lt;param-name&gt;resteasy.providers&lt;/param-name&gt; &lt;param-value&gt;com.example.apps.myApp.WebExceptionMapper&lt;/param-value&gt; &lt;/context-param&gt; WebExceptionMapper.java @Provider public class WebExceptionMapper implements ExceptionMapper&lt;WebApplicationException&gt; { private static final Logger logger = LoggerFactory.getLogger(WebExceptionMapper.class); @Override public Response toResponse(WebApplicationException exception) { logger.error("OMG ERROR@@!!!!!!"); // never logged return exception.getResponse(); } }
Consider the first weeks of a intro Java class: "Just start your file with the word 'class' because all code needs to be inside a class, but we're not going to call any constructors for a while, so don't worry about what 'class' means quite yet. Then inside the curly braces, say 'public' which will mean something once we start using more than one file for our projects but that won't be for several weeks, and 'static' means that this is code that doesn't actually need to be in a class after all except that Java says it still does, and `void` means this function doesn't return a value -- we'll talk about returning things later; our book only has void methods for the first few chapters -- and you need to say `main` because I just say so, and &lt;insert vague statements about parameters and arguments and calling functions, when the idea of a function is not well understood by most students&gt; ... and this `String[]` means an array of strings, but it will be a while before we talk about arrays, and this parameter named `args` -- well that's a parameter you have to have but we will never ever use in this class or the next one; maybe when you learn unix and the command line then maybe you'll write a program that pays attention to that parameter." Student's response: "I'll forget most of what you just said, but I *have* learned that programming is about getting words I don't fully understand into the right place and hoping". ...you know, that sort of magic words! 
First you need to think of a project, something that will interest you. It does not matter if someone else already has a solution. It is best if you have no idea yet how it will work, that means that you will be learning heaps as you develop your project. Second work out the main screen display. Code this up as a framework where everything looks good but does nothing. Here I would look at learning something new, if you are comfortable with Swing, code this in JavaFx. Third go through each of the actions one by one as a user would and code up the back end so it works. This can take months and it is not important whether you know how to do it yet, learning as you go is the point of the exercise. Keep coming back to it and improving bits. You will probably end up rewriting the whole thing a number of times. The whole point of the project is not to produce a finished product, but have a reason to code and increase your own knowledge.
[Code](https://drive.google.com/file/d/0B4uNet4Dx1gjallyRmRnY0lpOVk/edit?usp=sharing) 
I can't compile this, but I think the problem is that public void itemStateChanged(ItemEvent event) is being called twice in the Events class; once when a radio button is toggled *on*, and once when the previous selection is toggled *off*. So you're getting two events for every click on a radio button.
Ah, I love Swing, it is so flexible. The biggest drawback is that is has a huge learning curve, we're talking years and years. JTable must have 200 or so methods to understand, most of which are irrelevant or distracting. Eg I found developers in my org naively using updateUI() to trigger a repaint. 
1). Comment out the action preformed method 2). How does that explain my error?
If that's what's happening, the window you're trying to hide will be un-hidden when the second event fires, but because it's been disposed, it will be empty. Again, I can't compile your code, so this is just my best guess.
How would I fix this?
Try checking the state of the button before the switch statement. I think the call is isSelected() or something.
Ah. Well, I don't think I can help. Sorry.
That's alight. Thanks for the help.
I should specify that I want the code to simply tell the first letter in your name.
I got it to work. I needed to declare the JFrame in the class, not in the method.
You have a syntax error. What are you using to code with? every IDE would catch that Name is undefined at compile time. Just change *N*ame to *n*ame. Also you don't need to initialize the name String, get rid of new String. Also theres a colon on line 8, a space after charAt on line 10. Also theres a mising space,typo, yada yada Spend the 10 minutes it takes to learn this introductory content. Or install an ide and paste the code into it, every ide will catch these compile time bugs.
Yeah, turns out that doesn't quite work so well on paper.
Every time I mention Play in this sub-reddit the downvotes rain in, so I guess /r/java has something against it in-case you couldn't already tell.
I hate to be a total twat about this, but I wasn't using an IDE, just Notepad. I see some the typos now yeah, but I'm also unsure on a few other corrections. Could you clean it up so I can look at the difference myself? Edit: Actually, if you could recommend a good IDE for beginners like me, that'd be great too!
Object
Well you could use Object type and then return a Boolean or an Integer then downcast and unbox it. But it's verbose and ugly. Why do you need return null as well? public Object someMethod(boolean a, int b) { if(something == something) { return new Boolean(a); } return new Integer(b));}
just off the top of my head for explanation reasons but thanks
[TextPad](http://www.textpad.com/) is what we used in school. Easy to do gives general errors and can compile and run from it. It gives syntax highlighting but not auto-complete so it lets you learn a little easier without it giving you the answers. Plus it is free. Edit- missed it was homework removed code.
Oh poo, I didn't get to peak. Anyway, I got it working. I know it can be shortened, but I couldn't the print out lines well. import java.util.Scanner; public class Exam1 { public static void main (String[] args) { char firstLetter; System.out.print ("Please enter your name: "); Scanner keyboard = new Scanner(System.in); String Name = keyboard.nextLine(); firstLetter = Name.charAt(0); System.out.print("Hello, " + Name); System.out.print(". Your name begins with "); System.out.println(firstLetter); } } Edit: Much hate for this dirty, dirty code. Right? It complied though, so this is what I'm turning in. Runs correctly too. How would you guys doll it up?
Yeah, normally you would use `while (running) {}` in this case. Edit: *for `for(;;)` vs `while(true)`,* the bytecode is exactly the same either way.
Not actually, both will work the exact same way. But I'd say you shouldn't use neither of those, a good practice to avoid threads from stopping properly when they should, even in a single threaded application, is to use something like this: while (running &amp;&amp; !Thread.currentThread().isInterrupted()) { // Do something if (any == condition) { running = false; } } This way, when you tries to terminate your application, the loop will stop running and you don't have to force the shutdown of your application killing its process. And if your application needs to wait some time after each iteration, another good practice is to do the following: while (running &amp;&amp; !Thread.currentThread().isInterrupted()) { try { // Do something if (any == condition) { running = false; } else { Thread.sleep(10 * 60 * 1000); // You don't need to sleep if you're shutting down } } catch (InterruptedException e) { // Save actual state so it can continues latter on, close any open resources, log, ... Thread.currentThread().interrupt(); } } In this case, you need to interrupt your thread (line 7) because before the exception is thrown the "interrupted" flag is cleaned from your thread and your loop would continue to run, this way on the next iteration your loop will "see" the flag and stop running. I don't know exactly shy "interrupted" flag is cleaned but you can see more in [JavaDocs](http://docs.oracle.com/javase/7/docs/api/java/lang/Thread.html#interrupted(\)), I'll really appreciate if anyone with more information about this could share it with us. Hope it wasn't way too much away from what you asked and hope it helped. **Edit:** Including /u/Shankster1839 suggestion to use a boolean in the case the loop knows when it should stop. **PS.:** I haven't really tried any code, it might not compile due to any typo
Just cloned it. Code seems relatively readable and clean. Could you briefly explain what this does? 
I think the readme is pretty concise about it. Is it not detailed enough?
It's a bit concise, but I read through the code and I think I get it now. I don't really get the point of the input GUI. Apparently it is used only for terminating the program?
Well, a for (int i = 0; i &lt; 1; i--) would not run forever, the int value will eventually underflow and go back to its max positive value and the iteration will stop generating unexpected situations, he could just remove variable decrements and set it to a positive value whenever he wants, like: for (int i = 0; i &lt; 1; ) { // Code if (any == condition) { i = 42; } } Not being mean, just pointing it out.
that is correct. it's the only thing I could think of that would work while it was looping.
OP asked about while/for's, I just gave him an option. Obviously there are other options like Executors but I think it's way to far from what he asked. **Edit:** BTW, your reply is not being constructive to the discussion in any way.
You can use jdb with JavaKit to solve the debugger issue. Everything else I agree with you on though. EDIT: You can do some of refactoring as well. For example I want to change the name of a class, property, or whatever and I want to change everywhere it's referenced.
I have no idea what your intention was in the second snippet. I think it's equivalent to while(any == condition) { doStuff(); if(!(any == condition)) Thread.sleep(10 * 60 * 1000); } But what are you trying to accomplish with interrupts? 
For example, you have a Web application running with some parallel services running, generating cache or whatever it might need, if you ever need to restart your application server it will try to interrupt any running thread, if you don't handle this situation the thread will keeps on running until it finishes by itself or you kill the process.
No reason to get the first letter and store it in a variable. just get it right in the print. Also, no need to do 3 prints in a row just make one line. System.out.println("Hello, " + Name+". Your name begins with "+Name.toUpperCase().charAt(0));
You might also look at twillio. I believe you can make calls through them via any sip client. EDIT: Are you wanting this to use the cell phones data plan or is a wireless network okay?
No difference just a matter of taste
Add - 1 after the index for it, since the index ranges from 0-backwardsArray.length-1 anyways EDIT: also if you didn't you would get backwardsArray.length - i = 1 when i is at it's highest.
After talking with my professor, all I need to do is send audio thru sockets from Android device to PC. Guess I was starting too big.
Using for(;;) for an infinite loop strikes me as code smell. The way I was taught it is that: * For loops are used when you know how many times your loops will run. * While loops are to run the loop zero or more times. * Do-while loops are to run the loop one or more times.
Why not create your own asynchronous queue using [`PipedInputStream`][1] and [`PipedOutputStream`][2]? You write to the POS on the thread you don't want to block on, and then create a new thread that uses the PIS to write blockingly to the `SourceDataLine`. Since you can control the size of your buffer in the PIS, you can keep it large enough that you don't block when writing to the POS. And since the buffer in the PIS is `protected`, you can write a subclass that can resize it on the fly if need be. [1]: http://docs.oracle.com/javase/7/docs/api/java/io/PipedInputStream.html [2]: http://docs.oracle.com/javase/7/docs/api/java/io/PipedOutputStream.html
No need to do the boxing yourself, you can let autoboxing do it for you: public Object someMethod(boolean a, int b) { if(something == something) { return a; } return b; }
It matters because the idiomatic ways in which you interact with the library and API will be optimized for a specific language. An annotation heavy framework for instance will not be ideal for Scala users, but will work pretty well for Java. Scala is obviously the first class citizen on Play. Java, JRuby, Groovy etc will be able to work with it, but they are all a second class citizen. If a new API in Play can make use of a specific Scala feature, they WILL do this without any kind of hesitation. But consuming this API from Java will then require some workarounds, some ugly hacks and verbose code. But they don't care about that anymore. Their ONLY care is about Scala and if it happens to work nicely on Java, good! But if it doesn't happen to work nicely on Java... well too bad, just change to Scala!
Thank you so much. I didn't know you could simplify the doubles that way. 
And that's a good example of what should not happen. A person has skills, the skills have no use in knowing what person they belong to. 
&gt; You can't trust https this days because of possible MITM Signed java applets are called this because they come with an electronic signature attached (a signed hash of the jar), unless your MITM has the private key to the signature they cannot fake in a realistic timespan (&gt; 100 million years?).
Could you use a second thread dedicated to filling the SourceDataLine? Then it's okay for it to block.
Swing (JTable, etc.) was actually part of the huge GUI overhaul that Java 2 (aka. 1.2) brought along. 
I've recently pulled J2EE Paterns Best Practices and Design Strategies from the shelf and it seems okay, but I'm not in love with it. The version is also older. I've been back and forth on EJB: Head First, but I don't see how EJB alone is big enough to be a Head First book and feel like some EE topics might be good. I'm also looking for a book that does a better job than the oracle docs I usually reference: http://docs.oracle.com/javaee/6/tutorial/doc/gexaf.html They kind of give you an idea of what exists, but not great on how to use it. 
I'd format it like so: import java.util.Scanner; public class BasicIO { public BasicIO() { String name; Scanner in = new Scanner(System.in); System.out.print("Please enter your name: "); name = in.nextLine(); System.out.println("Hello, "+ name + ". Your name begins with "+ name.chartAt(0)); } public static void main (String[] args) {new BasicIO();} }
I'm not a Java user, so I'm just asking - total ignorance here. Do you preinstall those public keys (that are used to verify the signature) yourself? Or are they delivered using PKI? If it's the first one - you are fine. In case of latter - you are not fine. PKI is ok for some threat models, but not all of them.
My game has a timer and a gui. the timer has to update the gui. how do I best accomplish this?
Sorry to be a spoil sport, but what's the point of Java Enterprise Edition / Enterprise Java Beans? What does JavaEE offer in terms of development tools that JavaSE can't provide?
How surprising, the Java subreddit reacts negatively to a feature opposing verbose code!
Seems like a troll, but I bite. What about a web framework, injection, an ORM, transactions, connection pooling? You can't really build a web app on just Java SE without inventing at least a hundred wheels, poorly...
Haven't tested this, but this might be more fun. enum Throw { Rock(Scissors), Scissors(Paper), Paper(Rock) Throw iWinVersus; private Throw(Throw loser) { this.iWinVersus = loser; } public String playAgainst(Throw opposed) { String winner = this.name(), loser = opposed.name(), operator = "beats"; if(opposed == this) operator = "ties"; else if(opposed.iWinVersus == this) { winner = opposed.name(); loser = this.name(); } return String.format("%s %s %s!", winner, operator, loser); /* Alternatively: String winner = (opposed.iWinVersus == this? opposed : this).name(), loser = (winner == this.name()? opposed : this).name(), operator = (opposed == this? "ties" : "beats"); return String.format("%s %s %s!", winner, operator, loser); */ } } public static void main(String[] args) { System.out.println(Throw.Rock.playAgainst(Throw.Scissors)); // "Rock beats scissors!" } 
&gt; it did everything automatically Interesting. Eclipse installs Java, but which version? Could you paste the output of `javac -version` on Reddit?
You can learn how transactions work by learning MySQL, and JDBC, neither of which require Java EE.
Where is Java 6 installed? Where did Eclipse download it from?
Eclipse doesn't install Java. OS X determined that Eclipse needs Java to run and propose to install Java 6 for you. Assuming you already have Java 7 installed and don't need Java 6 at all but these fancy dialog windows still nag you about it you can fix that instead of installing Java 6 or symlinking Java 7 to 6's location. The fix essentially boils down to editing the Info.plist located in /Library/Java/JavaVirtualMachines/jdk1.7.&lt;…&gt;/Contents/ . Simply open it and add the following capabilities in the array below JVMCapabilities: JNI, BundledApp, WebStart, Applets, CommandLine
Kepler doesn't need Java 6. In short Oracle kind of forgot to specify the correct JVM capabilities for Java 7 (see my answer below). It works just fine with Java 7, if correctly set up (either my way or by symlinking Java 7 to the intended Java 6 location).
I upgraded so I kept my old java installs - but for some reason the new android studio auto downloaded java - not sure why.
Nice call, forgot about that
When i did this, macos said java 1.6 was not available in the software catalog. i ended up having to futz with getting it manually.
He wanted to know how to reference a parent object, so I told him using the example someone else spelled out... I make no judgement on the appropriateness of the relationship.
Hey I appreciate the advice. Just going to through this out there and see what you think about the project: Like you said, maybe a income/expenditure program. I could have inputs of my check from work every two months and every time I spend money I can input that amount into a category (gas, groceries, clothes, bar/social) and see where I am spending the most money. The problem is I need a place to go to further my knowledge of Java. I think I could start one of these projects, but when I don't get how I would do something where would I go? Where can I go to see how others have started something like this to get an idea? I guess thats my main concern.
Hey man thanks for the tip. I wrote in my other comment to the guy up there about which project I might want to try and start just to get things rolling. The thing is I want potential employers to see that even though I may not strictly be a CS major or software engineer, I have projects that can back up my knowledge of financial/accounting software. And I see what you mean by just getting started. Its been a whole summer since I last really got into a Java project in school, so my skills aren't where I think they should be. I know you said to learn as I go, but I want a place to learn first and get my knowledge and skills down. Like you're talking about Swing which I used in class, but I just dont think I would know where to start if its not a program that a teacher is specifically assigning how we get started. I just am looking for a place where I can excel my use of Java and the GUI programs
I think it's a lot easier to find specific answers rather than blanket 'how do I use this language'. The monetary tracker should be fairly simple. Asking for an input, simple math, a little branching perhaps for different categories of expenditures. Hell even some I/O and send it to an excel form or something. I would start with writing down on paper what the program should do in somewhat plain English. From there break it down into individual steps and plan out how you want the logic to go. Then start filling with actual code. When you get stuck on a specific *that's* a great time to ask questions. When you have a specific question it's a lot easier to find an answer rather than trying to interpret what you might be working toward. Google, forums, etc all want enough info to be able to answer the question rather than a family of answers. If that makes sense, I tend to ramble. Just don't get too frustrated. Work just outside your comfort zone and reinforce what you already know. We're all learning.
because `i` isn't incremented after the first loop, so it will stay forever at 20 while the second loop loops. Furthermore please note: * questions like this belong into /r/javahelp * please use a meaningful title * please properly format code segments
The same happened with me when running IntelliJ.
After your first loop your i=20. In the second loop i is never incremented so it is always 20 and always (infinitely) i &lt; 40, so it always prints 20
In the second for loop, there is no i++, so i never gets incremented. Therefore i is always less than 40, and the loop will always print out the value of i.
Thanks for the answer, didn't know that sub existed but thanks for telling me
My experience with applets is also rather limited, however signed applets will request permission to run the first time that key is encountered (or until you ask it to always trust that signature). On debian sid the dialog lists the owner of the signature and optionally full details on it. If the signature is not backed by a CA recognized by your browser it will show a dialog warning against executing applets from an untrusted source with the same options and details as the trusted applet. It looks like you can use the import certificate option in Firefox to install trusted certificates. 
Spring MVC is servlet based, but most of the other pieces don't rely on jee.
ow come on, stop it already. He's talking about transaction that cross the database boundary or that work at the orm/object level ... extended transaction and things like that. 
How would that be measurable in practical projects, and costs over project lifecycle?
The first time I fired up Eclipse, it told me that I needed Java 6, and gave me the option to install it. Worked like a charm. 
That just moves the problem over. `PipedInputStream`, and `PipedOutputStream` suffer from the same problem as `SourceDataLine`.
A better idea would be to decouple the Skill from the Person (A Skill shouldn't be aware of the person performing it, it should only be aware of those things it needs to be in order to be performed. So let's say we have a Programming skill, which might also be interested in a TouchTyping skill or a SymbolicLogic skill. Instead of making Programming aware of the person performing it, it should have its *own* references to the TouchTyping and SymbolicLogic skills. class ProgrammingSkill implements Skill { TouchTypingSkill touchTypingSkillOrNull; SymbolicLogicSkill symbolicLogicSkillOrNull; public ProgrammingSkill( TouchTypingSkill touchTypingSkillOrNull, SymbolicLogicSkill symbolicLogicSkillOrNull) { // ... } @Override public void perform() { if(touchTypingSkillOrNull != null) { System.out.println("I'm programming using touch typing!"); } else System.out.println("I'm programming one finger at a time."); } } public static void main(String[] args) { Person john = new Person(); TouchTypingSkill john_ttype_skill = new TouchTypingSkill(); ProgrammingSkill john_prog_skill = new ProgrammingSkill(john_tts, null); john.programmingSkill = john_prog_skill; john.programmingSkill.perform(); }
i figured that I was missing something based on the title because it sounded so trivial. nope, just what i thought it was.
No. Your homework is there to teach you how to (a) use Java to (b) build algorithms that (c) solve problems. Try again at doing it on your own.
That narrator's voice sounds familiar.
Probably reading source code the whole time.
I only looked at Brain.java and Neuron.java. Some quick notes: In Brain's nextFile() method line 109 the file limit should probably be a constant defined somewhere, and some extra feedback should be provided other than just a System.exit(0) (e.g. print a message saying the maximum number of log files has been exceeded). Also, the method should be broken into multiple try/catch blocks, each with their own error handling. As it is now, any failure will leave the class in a transitional state. For example, if bw.close() throws an exception, the file number will never be advanced and it will never be able to open the next file. It needs some more thought on how to handle an exception creating a new file (should it move on to the next file? terminate?) The loading and saving of neurons should probably be consolidated into a single file, rather than a file per neuron. The finalize() method can not be relied on to clean up resources. You should instead have an explicit to close resources. Were this a bigger project, I'd suggest moving the logging out of this class, but it seems fine for something of this scope. There are quite a few magic numbers scattered throughout the Neuron class that should be collected as constants. More specific to the neural-network concept: The problem would probably be better modeled if the structure of the network (number of neurons and their specific connections and peaks) were separated from its state (action potential of the neurons). I'm not sure whether isValid is intended as structure or state, or something else. Related to this, the order in which neurons appear in the brain affect how it updates. Ideally, all neurons would effectively update simultaneously, and a network with an identical structure but with the nodes held in a different order would exhibit the same behavior. The reason the implementation doesn't is because when a neuron pulse()'s other neurons and updates their potential, this updated potential is used to determine how the neuron behaves if tick() is called on it in that same update() cycle (as opposed to using the value that was present at the start of the update() cycle). If the neuron had already been tick()'ed, then the updated potential does not affect it. Thus, the neuron order affects the behavior of the network. I'm not sure of the intent, but the comparison in pulse() should probably be "actionPotential &gt;= THRESHOLD" in case actionPotential managed to exceed THRESHOLD before pulse() is called. A simple approach could be to keep a second field containing the updated potential and copying it back to the regular potential field at the end of the update cycle. A much conceptually cleaner solution would be to separate the state of the network out into its own class, and then update() would return a new state based on the old state. EDIT: clarifications.
I can only speak from my own experience, and those of new devs in the shops I've worked at. But typically, on day one, you probably have no computer set up for you yet. So besides filling in your HR paperwork, someone from the team might give you a book or binder of their documentation. Probably about 10% of which is relevant or current. Oh and it will take at most an hour to go through, leaving like 6 hours in the day with nothing to do. So go to any meetings that happen to be scheduled that day. So your job on day one is just not to annoy anyone and to maybe ask a question or two, to show that you are paying attention. That, and to learn the office routines. Then sometime on day two or three they'll get you all set up, and can stop pretending to be working. Your IDE, logins to various tools (bug tracking, servers, repositories, DBMS). If you can actually look at code on day two, that's great. When looking at source code, take note of what technologies and frameworks they are using (Spring/Hibernate/etc) and what versions. When you get home, spend an hour or two each night familiarizing yourself with this tech until you can at least ask intelligent questions. What works best is to make a tiny little app that uses some of the stuff you'll be using at work. I've found that on a new project, examining their database schema typically gives a much better leg up then just reading code. If you know what entities they use and the relationships between them, the code will make a lot more sense. At some point, the dev team will give you really easy ticket to work. Some low hanging fruit that no one else has felt like fixing, but that they can be reasonably sure you won't mess up. Probably something the team lead could do in 15 minutes, but will take you all day. The most important thing with this task is learning how to make code changes to this project. Where do you deploy your change to, make sure you can check it in, how to update the bug ticket, etc. If you don't screw it up, they'll give you a slightly more difficult ticket. And so on. Fixing the issue correctly is most important here, not how fast you can do so. Its better to take two days on your fix and have it pass QA than to do it in two hours and have it get rejected. Also, be damn sure that your change doesn't break something else. Too often I've seen new devs fix the defect described in the ticket, but their fix introduces a much bigger problem than the initial reported problem. Ask questions, just make sure to do your homework first so that they are intelligent questions. (And good luck!)
Two things: 1. Java isn't Javascript. 2. You are clearly abusing Reddit to advertise your shitty YouTube channel. 
Filling out paperwork, setting up your environment, grabbing projects from github and building them and perhaps by the end of the week you might even contribute something small back! Source: We just hired a java dev who started on Monday :)
In all honesty, it'll take you a few months before you really begin to understand how everything works and feel like you're contributing.
fix bugs, usually on a swing gui app, we actually have a couple of those where i work. 
same here, usually it's about 2 weeks, waiting for clearance to be able to see prod data and stuff. Usually just have to get them setup with all the software the first couple days. Read some design docs next few days, then look at the code for some stuff until they have actual access to run the software.
This might be a great moment to look into a development concept called "Inversion of Control" or IoC. This concept entails other subjects such a dependencies, encapsulation, inheritance versus composition as has been discussed in these comments, testability, single use, separation of concerns, and more; it can be a little overwhelming but I found it helped me a lot to be exposed to many of those concepts while I was learning. Generally, as many of the great comments here have pointed out, when you have an object that wants to share functionality with another object, it is recommended that you allow one to be passed a reference to the other, literally "inject" an object into the objects that depend on it. You make accessing the functionality of your injected dependent object easier through the use of interfaces, essentially telling your application what an object can do if it implements that interface. This is establishing a contract if you will with your code; if you claim to implement an interface, you can depend on the functionality defined within it to exist 100% of the time. By programming to an interface, and composing objects through establishing contracts and dependencies you can be sure that those dependencies you inject will be 100% compatible with you application and create very reusable code.
Thanks for your input. I've made the changes and updated the repository
No to jobs nor places of employment are the same. Most places I was hired had me doing more non-Java than Java so far.
&gt; Setting up your environment. Many places have guidelines on what tools/software they allow and even more strict guidelines on what you can install. Want that text editor you love to use? Fill out an IT request form for it to be installed and wait a week ಠ_ಠ .... Like to use Intellij sorry we only use eclipse here.. we also wrote a custom eclipse plugin that is required so... tough luck using any other IDE. Run.
Paperwork.
There is nothing in that loop that stops to give the user the chance to change the text in qtyText. Get rid of the loop, and if that exception is thrown show the message and return from the listener. Otherwise, continue: http://pastebin.com/FvbYTuUv
I always ask about the dev environment on an interview. I have turned down good (money wise) job offers because of lack of freedom to use the tools I am most effective with. Of course, when you are fresh from school you can't be picky.
&gt; Probably something the team lead could do in 15 minutes, but will take you all day This makes me feel slightly more comfortable. In my mind, I figured they expect a programmer to be hired and expected to know everything about everything. 
day one: setting up your working environment (things on your desk, software in your comp, paperwork...) day two: same as day one unless it's done; then you will code something that does not require you to be familiar with the core codebase such as fixing some specific test or enhance the GUI. Few days later, you might develop something new using a technology which the team is not using yet, assuming you have previous experience with it.
Generally it's a day of in-processing at the contractor office doing standard new hire stuff. Then you head over to the post/base/yard and spend the rest of the day getting visitors badges, parking passes, etc. So next day you actually show up at the work site, and.... you sit there. The shortest time I've ever seen for the physical PC to show up at someone's desk was three days. The longest... 6 weeks. Yes, 6 weeks *just* to get the physical machine in. ( By the end the average delivery time was just under 2 weeks from start date) Of course, this is a secure facility, so you can't just bring in your own laptop and plug it in to the network (wired only). Nope, has to be government issued. So yeah, let's say for the sake of argument, two weeks you sit there and read documentation, attend meetings, meet the people, figure out who is on reddit, and so on and so forth. We had a *really* talented guy leave because he just couldn't stand the boredom (he was the 6 week guy). So once the machine is in, you get to request access and go through the whole credentialing process (since lord knows you couldn't start it without a pc), and getting software installed. I won't necessarily say that it is 100% wasted time, because learning the domain knowledge is usually the hardest part of transitioning, but it's like a 60% thumb/ass ratio.
First 3 months at Google is like trying to drink from a fire hydrant. You're surrounded by people smarter than you are, the build and dev environment is like nothing you've ever seen, and you have access to more hardware than you could imagine (we count in terabytes and thousands of cores). Impostor syndrome kicks in hard your first week. You feel like you just eked your way through the interview and people will find out that you're not as bright as everyone else and get booted out. Then after a couple of weeks, you start to get it. Then you can't imagine how you programmed prior to all these amazing tools. You can compile tens of thousands of lines of code in under 30 second. If you find something annoying, someone has built a tool to eliminate the annoyance. The entire code base is accessible by everyone. No need to reinvent the wheel. You can push your changes to thousands of machines worldwide with a single command. The testing framework is simply amazing. The production infrastructure is so robust and abstracted away from you that you don't need to worry about maintaining hardware. Cpu, storage, network, memory can be increased on the fly due to demand. Someone cut the power to East coast data centers, the system automatically routes all your data and applications to one of the many on standby without human intervention. Tl;Dr your first week you sh*t your pants; 3 months later, you feel like God. 
As the only "new guy" in my understaffed team, this makes me feel a bit more comfortable with where I'm at.
I assume you are asking how to print a variable within a string: System.out.println("My name is " + myName + "."); Replace myName with whatever you want to change in the string. For more information on this you may want to look up concatenation. 
Me too. If they try to dictate your IDE, tell them to pound sand. A good team of smart people will produce IDE-agnostic products, code, and environments.
/r/javahelp
Oh my bad! Cheers 
Here is an issue with scope. When you declare a variable, as in the line: &gt;String Choice2; You are making a variable inside of the main method, and it is **only** available from within that method. Since you are referencing it from the leftCave() method, Java doesn't know which variable you are talking about. What you would need to do, is put the variable above the main() method. The thing is though, you aren't even using the Choice2 variable in the main function. Instead of declaring String Choice2 in your main method, and assigning a value in leftCave() method, just do it all in the leftCave() method: &gt;String Choice2=input.next(); A few more points, usually you want to use [camelcase](http://en.wikipedia.org/wiki/Naming_convention_(programming)#Java) for variable names. Instead of MyVariableHere, the first word starts with a lowercase letter, resulting in myVariableHere. Just [standards/conventions](http://www.oracle.com/technetwork/java/codeconventions-135099.html), but is probably easier to fix now rather than later. Also, be careful with random indentations. If you move to other languages, such as Python, indentation is used to organize methods/classes, and could cause some problems. Also looks a lot nicer. Feel free to ask any more questions. Keep in mind that while text based adventures are fun to make, it is very easy to find yourself down a rabbit hole of ugliness and complexity. Make sure you have a clear plan of the whole project before getting too deep. (Source: I have made many text based adventure games that I gave up on early)
&gt; But typically, on day one, you probably have no computer set up for you yet. TIL we are usually better than most Java shops. &gt; leaving like 6 hours in the day with nothing to do. This is absurd, we would never let this happen. Also, no mention of an induction? Showing new people around the place? A talk about how things work at the company?
By the end of the first week we might have issued you a password. Unfortunately your password started with a "special" character so you will have to choose a new less secure one and wait another 24 hours. Also paperwork. Lots and lots of paperwork.
Things I wish I knew before starting as a java dev:- knowing how to code is about a third of what you need to know in a small development team. My other jobs have either been in HUGE corporations where I had build,test,release and support teams, so I didn't need to know other facets apart from code; or where I have been the sole dev and I didn't need supplemental tools. I recently joined a small dev team. There are 2 devs and a dba for a company of 90ish people. I've needed to learn build tools(maven), ORMs(Hibernate), extreme familiarity with source control tool of choice (Git), CI Tool (Jenkins) and intellij IDE to name the basics. Best to contact your future employer to find out what you need though. 
Good for you. Could you elaborate? :)
Every place I have worked has started just like everyone described. No computer, piles of forms and then sit around and read documentation all day. I almost left a job based on how poorly I was treated at the start. It turned out to be a good job though. I do not understand how management at companies can be so poor. You have someone who is eager to get started and just crush them.
At my workplace first few days are mainly for you to learn. You set up development environment, install all the software you need, acquire all the access privileges required to do what you are going to do and so on. Then you start with patching some basic things to learn the development and deployment process. In the meantime you read documentation.
With JDBC only you can sure learn about transactions, but it's incredible tedious to pass the connection instance to all your service methods and have code everywhere to do rollback/commit and check if a transaction is in progress or not and then join the existing transaction or start a new one. With a simple and lightweight EJB bean all that complexity just goes away. You'd be absolute crazy not to use EJB and instead stubbornly resort to tedious, error prone and low level JDBC, just because of an ancient believe that hasn't hold for over half a decade.
But people do not in general run web apps with just Java SE! That apen guy should just have said upfront he was a Spring fanatic and not start babbling about things that needed to be done in Java SE. And just because there are alternatives to JPA and JSF and such doesn't mean that there's no point to Java EE. That's just silly... There's no point to c3p0 since there's BoneCP? Or is there no point to BoneCP because there's c3p0???
What's jee?
We do the same. The supported IDE is a custom Eclipse installation, but every one can use what they want. And they do.
You would wish you never chose software development as a profession. Everything you thought you would be doing, dodging bullets matrix style, hacking gibsons through ssh exploits...writing software that does meaningful stuff. nope none of that. you'll be drowned in paperwork and management who haven't a clue of whats going on. ENJOY! :)
Where I work, your first day of work is actually stage 2 of your interview. You are given a 1-day paid contract, and you get "thrown into the pool" so to speak. You are paired with two of the existing developers (one in the morning, one in the afternoon, we do 100% paired programming) and you immediately dive in to whatever task the client has laid out. No messing with new login credentials, a new PC to set up, figuring out where your desk is (nobody has their own desk), you just GO. If after that one day, the team decides that you work &amp; play well with others, you get invited back for a 3 week contract. The first day of the 3 week contract is almost exactly the same as the 1-day. You find your partner for the week, study the list of tasks you have need to accomplish for the week, pick a PC in the room (no cubicles), and start working. On day 2, you might find yourself presenting the work you did on day one to the entire team and the actual client. Day 3 might be iteration kickoff, where everyone on the team changes pair partners, gets together, and discusses all the tasks that everyone will be working on for that week. Day 4 might have some kind of (optional) interesting presentation during lunch, involving anything from a talk by an orchestra conductor to how to be better at having difficult conversations. Day 5 might be a Friday, and if it's the last Friday in the month, you might decide to dress in something oddball or fancy, and if everyone votes for you (same judging rules a Cards Against Humanity .... ie none) you get to decide what kind of cookies I bring to work for everyone on Monday. (Did I mention I love my job? Also, on Day 1, I didn't know jack about Java, my pair partner(s) taught it to me)
Setting up the environment, and then write unit tests! There's always spots in our coverage that need help, and writing tests can be very effective in understanding the codebase, and how and why we do certain things. Plus you feel like you actually accomplished something early on, and everyone likes the guy who writes tests.
If you guys are interested in the development environment that we use at Google, check out this 4 part blog by our engineering tools team: http://google-engtools.blogspot.com/2011/06/build-in-cloud-accessing-source-code.html?m=1 Behind search algorithm, the internal development environment is probably the most important invention to Google's success. This enables developers to be a lot more productive and build cool things really quickly. Update: Looks like a former Google is building an open sourced version of our internal build system: https://github.com/chrisvana/repobuild/wiki/Motivation
"Sorry, the brigade SSO is on emergency leave, so no badges until we find out who has the credentials to take over. They *should* be back in about two weeks. Sorry for the inconvenience!"
This sounds terrible. 
Day 1 is orientation. Presentations from HR and office managers on timesheets, where to find snacks and coffee, how to not commit sexual harassment, policy on dogs in the office. IT will explain their policies and hand out laptops (latest macbook usually) and walk you through email setup, intranet, passwords. Lunch with team, beer appears. Find your desk waiting with a 27" monitor, mouse, keyboard, notebooks, candy. Day two, join your project team. Read specs, local build process, look at backlog items. Perhaps 2-3 days of getting code checked out, built, deployed, jrebel, IDE (your choice, licenses for whatever are usually approved same day). Maybe first commit by end of the week.
Uhm I'm sitting here going through the Java7 course aimed at getting certified... and now there is a Java8 AAAAAAAAH??!?! Sorry, I just have a few weeks left so I'm kinda freaking out. 
Didn't gain anything much new from that, but then again I'd already read similar coverage before! Is it time to start taking bets on which of the items in the Java 9 feature list will bleed through to Java 10 yet?
I've gotten really far, now my only problem is that the JOptionPane comes up no matter whats in the qtyText. http://pastebin.com/siBmUXKP I have all the other code debugged, just this isn't done. 
Java 8 is expected in March 2014, but you can use your Java 7 knowledge for years, as the migration is a slow process. 
Hopefully not a double post: Here is the list of the jsrs of which the java ee 6 standard is compositioned of. Especially import is the Java Connector Architecture (JCA) JSR, which really helps to understand transaction boundarys, container managed transactions, two phase commit, shared Persistence Context in the same transaction, connection pooling etc. http://www.oracle.com/technetwork/java/javaee/tech/javaee6technologies-1955512.html And for techniques and best practices how to compose an application out of those specifications, adam bien has some pretty good books: http://press.adam-bien.com/
Can you inform me as well? Google sounds like a great place to work.
Come in to work with your new laptop (Retina MBP or a very nice Dell) that you received when you signed your offer letter. Instructions for setting up your environment are on the internal wiki and are actually kept up-to-date. Feel free to buy any monitor/keyboard/mouse/software you need and expense it. Our CEO will probably come by, introduce himself, and jokingly tell you to get your ass to work already. Spend a day or 2 checking out the code in the area you'll be working on and reading up on some of the tech you're not familiar with. By day 3 or 4 you'll get started fixing bugs or working on new features. 
that's not typical of the entire government.
Do you really want to waste money on certs?
Don't worry about it. You're expected to keep up to date regardless which version of java you got your cert in.
Play Framework
For my teams it depends entirely on the role you were hired for. Juniors tend to get hand held, extra training where gaps are and we start handing you smaller jobs with increasing complexity till we understand where you are at and what you can handle. If you are a senior we typically throw a somewhat complex task at you that can be done in less than a week and watch how you preform. You will receive training/assistance for any knowledge gaps but you wont have your hand held. If you are a principal that means you are leading a team, you will be given a lower priority feature that we know should take 2-3 weeks to complete and watch how you run the team, communicate and delegate authority, we EXPECT your code to be nearly impeccable as a principal so we do some through code review on any work you do and seriously test your knowledge on any weakenesses we find. Essentially, the more skilled the role the more we throw you directly to the wolves as you SHOULD be able to handle it. If you cannot then we either train, re-evaluate your role or let you go. 
Indeed, it will typically take at least a year before some 30, 40% is on the next Java version.
It's definitely not for everyone. Why do you think it's terrible?
Can't tell if serious....
Ever use Guava? TLDR: Write more stuff better with less verbiage by using Functions, Predicates, and Iterables. 
Showing new people around the place and a talk about how things work at the company is typically done at interviews (or second interviews) in most of the places I've interviewed at.
just a shorthand for JavaEE
If its a sytrinhg variable just put thhe var name e.g. system.out.println(varName); if its a number you can convert it though there's an easier way e.g. system.out.println(numberVar + "");
So, first it's "Java is as relevant as ever", and now "Java is back". Which one is it?
I'd like to think that it wasn't, what was your experience like?
Maybe you could perform dark classloader wizardry and serve your PApplet a custom Toolkit class? Just an idea Also, in which line in the Unsafe code did you get an exception? EDIT: when you say that "the unit test fails because there is no default Toolkit"… does that mean that `Toolkit.getDefaultToolkit()` is `null`? Because in that case, you'll get a NPE as soon as you reference the class, and you won't be able to use it anyways.
I don't know what the specific issue is, but you're probably better off using a framework specifically built for performing these type of operations in a unit testing environment. I've used PowerMock in the past and it's `Whitebox` module is _incredibly_ powerful. I highly recommend giving it a try. https://code.google.com/p/powermock/wiki/BypassEncapsulation 
But what's wrong with the current java?
Assuming Toolkit has a setDefaultToolkit method, you could substitute the default toolkit for a mock which returns whatever value you want when the getMenuShortcutKeyMask method is called. That's how I would probably approach it, based on the little info you've provided.
I use Mockito and PowerMockito. It gives you the ability to mock static. Mock the Toolkit and have getDefaultToolkit() return a real or mock toolkit. https://code.google.com/p/powermock/wiki/MockStatic
Maybe I'm not understanding the question well, but in Java, the final property tells the compiler that any variable with such property will not be overwritten.
I cannot believe people agree to this. Every time I have switched jobs I have multiple offers. A one day contract and having to share a computer is not a very competitive offer.
It is "relevant as ever" in the real world and "back" in tech journalism world.
&gt; I tried Unsafe It's probably better for you that it didn't work. I can't imagine working with a codebase that relies on Unsafe or engineers who think it's an acceptable thing to use in any situation.... *shudder*
&gt;But people do not in general run web apps with just Java SE! Says who? You? &gt;That apen guy should just have said upfront he was a Spring fanatic and not start babbling about things that needed to be done in Java SE. What? &gt;And just because there are alternatives to JPA and JSF and such doesn't mean that there's no point to Java EE. That's just silly... When did I say anything close to what you said? Did you read the last line of my post? &gt;There's no point to c3p0 since there's BoneCP? Or is there no point to BoneCP because there's c3p0??? ... What? They both do the same thing ... I just listed the options. 
Sorry for the poor formatting it should read: static char [] charArray(char [] stToChar){ int i =0; char [] finalChar = new char[stToChar.length]; do{ if(Character.isLetter(stToChar[i])){ finalChar[i]=stToChar[i]; } i++; }while(i&lt;stToChar.length); return finalChar; }
Here's my code. Be gentle! [http://www.codesend.com/view/2db024329210228882913e0ca97c4023/](http://www.codesend.com/view/2db024329210228882913e0ca97c4023/) The roomCount counter doesn't work since I haven't figured out how to pass by reference. In the same regard, inventory and points gets erased after exiting each room.
Thanks, this worked but i still have a couple questions: - Is there a way to do this with the .isLetter method? - And what does the (char ch : array) do and why does this not endlessly loop since there is no restriction?
I think you may have misunderstood? The one day contract is basically them offering to *pay* you to take a 2nd interview. Aside from that, I quite enjoy sharing a PC with another programmer, working on the same thing. Both people usually learn something, and you get stuck less often, IMO.
the compiler optimizes constant static final fields (Strings and primitives), not those that need a runtime to do calculation, as with the OP's code.
Not helpful not but in java 8 you'll be able to do it like this: List&lt;Char&gt; chars = Arrays.asList(stToChar); chars = chars.stream().filter(c -&gt; c != ' ').collect(Collectors.toList());
Static final fields cannot be reassigned (unless you go native, but I'm not getting into that). Personally I would either mock out the return call of `Toolkit.getDefaultToolkit().getMenuShortcutKeyMask()` as [stevebakh said](http://www.reddit.com/r/java/comments/1pa13t/howto_overwrite_static_final_field/cd09qt5), or refactor all access of `PApplet.MENU_SHORTCUT` to use a static method, and remove the `final` constraint from the field.
Thank you, i will definitely look into those tutorials.
You need two separate ints, one to keep track of where you are in the input array, and a second to remember what position the next valid character will go in in the output array. 
How about you don't and look into ways to refactor so you don't have to use static? Static things other than basic constants are generally untestable due to reasons you are seeing.
As tazzy531 said; It's just so incredibly unique you end up with a massive learning curve. When it finally clicks you can do some truly amazing stuff and I feel like everyone should be allowed to work with tools like this. But since everything is custom built, nothing can really be open-sourced =\
never tried, I'm a developer of many things, but Java I know mostly from training a few adhoc apps, I need to go deeper before I go wider. 
I think i have little bit different experience than typical. We use XP style of agile development and use pair programming a lot. No time was spent on setting up environment, reading documentation and other such activities. Just other developer explained domain and environment and we started coding. I actually contributed in a day one and wrote some unit tests and production code myself. It was intense day.
I'm also a little skeptical to going of course because there is more documentation and google results for a base-java issues. 
You can still overwrite it with reflection. If you've declared it final, you probably wouldnt/shouldnt in any kind of production code, but in tests you might want to set it for testing purposes. Specifically if you're testing some kind of legacy code you can't immediately refactor.
Sound like your lecturer has a really exotic favorite tool, which nobody in the real world uses.
Interesting. I guess I learned something new today.
if you are planning to work in software development after graduation then you'd better use Eclipse, it's one of the most used IDE's in the real world, try to use it instead if that's is ok with your teacher. IntelliJ is also a very good IDE and has a free community version, but if the course has any web development material then look for something else, the community version has no support for JavaEE. finally if you still new to the language and not mastered the syntax, I'd suggest you use a normal text editor with minor auto complete and stuff like that, it will take you more time to write code at first but it will teach you the syntax better, once you master the syntax and you start to care more about productivity then switch to your favorite IDE. 
I Meant if you could be more specific.. :)
Yes, thanks guys that did the trick, together with the @SuppressStaticInitializationFor("processing.core.PApplet") annotation. 
^ This. Please stop with all the class loader and reflection suggestions. The design is wrong for testing.
Essential Java by Joshua Bloch. It's for people already familiar with Java, and teaches lots of 'do' and 'do not's in a series of easy to read items. I love mine so much I took it on my honeymoon and read it by the pool!
In my experience that's perfectly normal.
That code is so poorly formatted...who is going to take time to decipher the mess to read it? Post it formatted properly and then you may get some help with your homework. 
Same with us. We have some sexy equipment that geeky candidates find impressive.
At my first job I spent the first two weeks writing unit test input and reference data (not source code).
If(result=0) is also wrong. Needs ==
If you need an infinite loop, use while(true). It's a little clearer that you're intending to have a non-terminating loop.
Worse, Yahoo! has mangled the code by shortening some lines. Ideally, when posting more than a few lines, people would use sites with good hosting and highlighting for code - e.g. http://ideone.com/
I actually tried flag==true but it didn't work so I changed it to this, however once I rewrote the whole thing it worked so I must have made a mistake somewhere else, anyways what do you mean by it being an overkill? is there is a more concise way to do it? thanks btw
thanks this is much easier :D
Right , effective java is more for intermediate, advanced java users who alreayd know how to program in java, but want to write better code.Its not for learning the language . More like the cool professor who walks in to the classroom and says, now that you know the theory (takes intro to java Orielly book or whatever) now its time to see how to actually use it (professionally) in practice (throws intro book in trash) 
My college uses [Introduction to Java, Comprehensive Edition](http://www.amazon.com/Introduction-Programming-Comprehensive-Version-Edition/product-reviews/0132936526/ref=cm_cr_dp_synop?ie=UTF8&amp;showViewpoints=0&amp;sortBy=bySubmissionDateDescending#R3GCKUYIXZKQ59). We'll be using it for 4 full semesters, and I think there will still be a chapter or two we don't cover. It has 34 Chapters in the book then 16 online chapters that covers a lot of topics covering Java EE, JSP, etc. It starts at the beginner level and goes from there. However, despite its size it still doesn't go too in depth in many topics. For example, I'll be taking Java concurrency class next semester. We'll be starting with the concurrency chapter in the Intro to Java book and then we'll be moving to Concurrency in Practice by Brian Goetz. This os only the second of two Java books I have exposure to, so I can't really rate it against any others, but it seems pretty good overall, though slightly vague on a few topics. 
Awesome, thank you! I will be implementing this today.
Your thread title doesn't describe anything about your problem, and that is bad form. You're also neglecting to include relevant excerpts from the specific code you're having difficulty with, which makes it very difficult for anybody to help you. For example you don't give us any clue as to how the "logic" you're writing is invoked. Is it turn-based so that your "function" gets called every time the robot has performed a move? Anyway, forget that this has anything to do with java or any particular programming language. Pretend the robot is a mildly retarded person you need to give instructions for following that path. You've apparently given him an instruction that says : If the tile ahead is yellow, he should continue in that direction. If the tile ahead is white, he should turn right. All right. So suppose those are the directives - the program - he goes by. What happens at the first turn? The tile is white so he turns right. Now he's facing that direction and the path "ahead" is yellow. Then he gets to the next turn. Then what happens? Why do you think he stops there? What would be the correct set of general directives that would let the robot navigate not just the first turn, but any turn, every turn? 
I could not agree more. If you are a former C++, it is the equivalent of Scott Meyers's book.
There is no such thing as an OutputStreamReader. You probably mean OutputStreamWriter. The [javadoc](http://docs.oracle.com/javase/7/docs/api/java/io/InputStreamReader.html) explains it fairly simply : &gt; An InputStreamReader is a bridge from byte streams to character streams: It reads bytes and decodes them into characters using a specified charset. The charset that it uses may be specified by name or may be given explicitly, or the platform's default charset may be accepted. &gt; An OutputStreamWriter is a bridge from character streams to byte streams: Characters written to it are encoded into bytes using a specified charset. The charset that it uses may be specified by name or may be given explicitly, or the platform's default charset may be accepted. You can also read the Java tutorial [chapter about I/O](http://docs.oracle.com/javase/tutorial/essential/io/index.html) for detailed explanations about streams.
I'm sorry to be that guy, but this has been discussed [a lot](http://www.reddit.com/r/java/search?q=books&amp;restrict_sr=on)
Immediate, unequivocal answer: [Thinking in Java](http://www.amazon.com/Thinking-Java-4th-Bruce-Eckel/dp/0131872486/ref=sr_1_fkmr0_1?s=books&amp;ie=UTF8&amp;qid=1382910391&amp;sr=1-1-fkmr0&amp;keywords=thinking+in+java+bruce+eckel+8th+edition) by Bruce Eckels.
Are there any sample of source code I can look at to try to understand?
Paul Deitel has an understanding Java Textbook that you can find online. Anyways, it has a program similar that you could modify. The big hurdle is a the visualization which is usually done in Swing. 
As an FYI - JavaScript and Java are not the same things. There are similarities, but the differences between the two are quite significant. Perhaps your question would be better suited in /r/JavaScript (I assume there is one).
&gt;I don't think that there is a program that I can just enter a command (JavaScript based) As it has already been pointed out, Java and JavaScript are NOT the same things. If you're going through with JavaScript, then there is a program, your web browser! You just need to create your program inside an HTML file and any recent web browser will run it! There's even browser extensions like Firebug (for Firefox) that have an entire scripting interface (they're intended more for web development debugging, but they can work with JavaScript). If it's Java you're working with, then any decent IDE like Eclipse will let you type out a small program, hit the run key, and off it will go with minimal configuration and knowledge. If you're having errors and can't get a program to run, it's probably from typos or not having the syntax entirely correct (goes for any language, really).
You had other mistakes as well. I was on my phone so I just glanced over your code. if (flag == true) { // do something } is overkill, because it evaluates the same as if (flag) { // do something } If you want the equivalent of "flag == false", you can use "!flag" instead. This might seem picky, but it makes a big difference when you use better variable names. In this case, I think isPrime would've been an appropriate variable name, giving you if (isPrime) { // do something } This is much better code, because it's short and sweet and *carries meaning even out of context*. Anyways, I hope you finished your program successfully.
Java: How to program by Deitel &amp; Deitel. That's about as good as they'll get.
If you enjoyed the Android project, keep doing that.
The apps you make *are* your experience. All the degree gives you is a third party declaration of moderate competency. With a good, productive portfolio you can *demonstrate* your competency and the employer won't have to guess at how successful a candidate you will be.
If you can get involved with an open source project, that might lead to some job opportunities. If nothing else, it could provide a good experience to talk about during an interview. Another option is to find some local meetup groups such as a Java Users group. The JUG in my area seems to usually have more people looking to hire than there are people looking for a job. 
That the exact same book I learned from. If you're looking for a good overview of the language that is the place to start -- especially if you're starting from a beginner's stage. Even though my day-to-day life is with other languages now, I still keep that book on hand as the latter half has excellent coverage of the more complex algorithms and data structures. 
Except what do you do about your existing job? You might just use a vacation day. But what about the three-week contract? If I'm out on Week 2, great, I already gave up my permanent position for you guys. This is not a position some people would want to be in.
I've have never asked a prospective hire what grades they got. Experience is very important but others have already gave you good advice.
You still have time in school. I think the most obvious thing is to try to get help to get better grades!!
Open source - Not just your professors' projects. As someone who is regularly involved with hiring I could give a rat's ass what someone's grades are. I want to see their code and their personality. If you have hobby projects, dump them out on gihub and slap a link to your github on your resume. Start a developer blog where you discuss the things you're working on or write beginner tutorials. In short, don't wait for someone to give you an opportunity, go out there and create your own.
**Disclaimer:** Don't read into my comments what's not there. I don't think you are a bad programmer because honestly I don't have enough information about you one way or the other. ----- I will echo what a lot of other people are saying. As a hiring manager, I've read a lot of resumes in my career and honestly GPA is not the most important thing. Experience is key. And specifically **relevant** experience. (For example, if I'm hiring for a telecommunications Java position, I might be impressed with a VOIP java app you did as a side project.) Do lots of side projects and be willing to share your code. But, taking a step back, you might want to be introspective about why you are getting B/B+ marks. Honestly, it doesn't sound like bad grades to me, but I do find it weird when you say the majority of your peers are getting As. That's a really weird bell curve. Are you maybe judging yourself too harshly? If it is true that you are behind your peers, then maybe there are some fundamental concepts you are missing out on? I will recommend office hours as the single best resource for learning concepts. A one-on-one discussion with your professor or TA will help you: 1. ask specific questions about the coursework and get custom-tailored answers. 2. discuss any questions you might have about your future in programming. They will (probably) give you better answers than anonymous Redditors. Also, personal connections are really important in getting jobs!
I got a job recently and the fact that I knew how to use C++ in a specific framework called Qt was a major factor in me getting it. My point is try to get really good at one thing (java isn't a bad idea), but to get as much exposure to other things that you can list on your resume/cv so that an employer scanning though it has a better chance of finding the things he wants.
I personally don't continue interviewing if the company asks for my GPA. I had a 2.9 GPA and it has not stopped me from getting good jobs. I also don't care what a persons GPA is when I interview them. Your first job is probably the hardest to get. Stay in contact with friends from school you never know who will be able to recommend you for a job. After you have 2-3 years of experience if you are a mediocre programmer and live in a good area the tides turn and companies start looking for you. I also have several friends who are software engineers without CS degrees and even with no degrees at all. &gt; Is there any advice you can give (other than studying more because I spend most of my time studying) or any experiences you can share that will help me get an internship or a job or something without having to rely solely on my marks? Be careful here, make sure you spend a lot of time programming also. Algorithms and theory are important, but if you can't actually code it you are pretty much useless. Lots of employers like to see public work in GitHub or any other code sharing sites. This lets them see your programming style without even bringing you in. 
I agree with getting very good with at least one skill. If you know 10% of 10 languages you can probably only write really basic programs in all of them. If you know one language very well you can utilize some of the ideas and concepts when learning other languages. Most of the companies I know of will hire you for a position even if you don't know the language at all as long as you are proficient in any single language. A good developer should be able to pick up a new language fairly quickly. They will not be an expert for a while but they can still be very productive.
Where I work, you'd go through orientation, go to Security to get your employee badge and a parking tag, and meet your team. You'd settle into your cubicle and get your PC set up: logging in to Windows for the first time, making sure Outlook connects to the Exchange server, make sure ClearCase and ClearQuest are installed properly on your machine, etc. A mentoring software engineer would take you through the paces of getting an Eclipse workspace set up and ready to work with whatever project you'd be working on. Likely you will have some downtime as something will not be working right, so you'll read through some tech books while the bureaucratic gears spin to get your PC fixed. Eventually you will be assigned a few simple tasks like updating content in *.properties files, HTML in a JSP file, etc. to get used to the codebase, source control, and process. Probably things have changed since I started as a junior-level developer several years ago, and the company's IT strategy has become more aggressive.
&gt; Who would learn Java web development with JEE? It's a legacy skill for those waiting for retirement. I wouldn't call it a legacy skill, there is a lot of new projects written using JEE
I think the most important thing for a kid coming out of school is to have a project you've worked on that your can talk to them about, something that demonstrates you actually know something. In school, 90% of the stuff you do is just some small assignment for learning; like go sort a linked list. And you look really stupid on an interview If you can't point to a real project you've worked on from start to finish, highlight obstacles you ran into, talk about the tech stack. Also these days most interviews will give you some sort of quiz or test, so make sure you know your vocabulary. Basic stuff ... You'd be surprised how many people don't know... And to some extent interviewers don't care, but if you know the answers it looks good. But as others have suggested, keep working on your android app. Have it available to show off during an interview... I'd be surprised if they don't hire you. 
yes I did, thanks for the tips!
I'm still in school, but am doing compsci as well. My advice, or my thoughts on matter: Stop stressing over the marks, find an application you enjoy, and make a habit of it. My second year I decided I wanted to get into web development so I started toying with Bootstrap, which led to jQuery, which sparked my interest even more - so I learned to do things with simply javascript. I got good at that, so I started into Node.js.. I think grades are dwarfed by your actual ability to *do*. It's like doing bad in school, but killing it on the LSAT and getting into a top tier school .. 
Concerning working at Google or what I do at Google? Google has a custom build system, custom servers, data stores and deployment system. Hardly any third party systems are used, everything is hand built and tested for bugs and performance by incredibly smart people. You can forget all your Maven, Hadoop et al knowledge pretty much. We have better alternatives :) Your first months are just intensive training and then trying to get a handle on all the custom bits of tech. And there are no easy answers for you on Google.com or Stackoverflow either.
I'll go one step further... I don't have ANY degree! I started out in networking and systems administration and taught myself everything I needed to know to become a Systems Architect for the past 5 years. What it will really come down to is your passion for the work....
This cannot be stated enough . . . Get yourself a GitHub account, contribute to projects (yours and others), put the GitHub link on your resume! This is going to get you more traction than anything else.
Do a placement/internship! Spend a few hours each week applying to as many as possible. If your course offers a placement year/year in industry, do it, otherwise look into summer placements. Regardless, start applying now as your in second year. Also,,don't set your sites on being a developer forever. Look into other careers too. Even in one company there'll be a huge variety of jobs available for CS. Think project management, design, test, research, consultancy, sales, and so on!
If you're interested in games development , look into c# and unity. 
I second this. I interview people every now and then at my current company and after I check for technical skills, I ask what side projects they have done. This shows me their willingness to learn on their own which is useful in an industry when a new technology or framework comes out every 6 months.
There or an app store.
Your marks are fine. What they'll be looking for most aside from technical skills are people skills, sense of self direction, a capability to lead, and what you can do to set yourself apart. 
Getting hired is *far* more about selling yourself vs grades/marks from school. Those can help get you some interviews, perhaps, but you should really be working on building a network of people in the industry you want to serve as well as doing school work. * Volunteer at some tech conferences if you can. * Speak at local user groups on the Android dev you've done. * Speak to local business groups about how mobile app development can help their business. * Commit to doing one social event per month in the industry/scene you want to work in (education, finance, real estate, manufacturing, etc) and get to know that industry and players. People who can demonstrate an ability to communicate effectively with others on a team (marketing, business, support, sales, etc) will generally stand a much better chance of getting hired (or opportunities finding them) than the 4.0 'guru' who can't look people in the eye or can't talk to non-tech people without sounding like a condescending jerk. I realize that's a false dichotomy - I've certainly met a few brilliant 4.0-level gurus who were also awesomely nice people who went out of their way to work effectively with everyone. They're also rather rare. I can almost guarantee the primary places that will give great importance to whether you got a 2.9 GPA or 3.2 GPA are places you probably will not enjoy working at for very long. Source: I've got a 2.9 GPA with a degree in Philosophy and have been doing professional software development for 18 years. I completely failed my math class twice (got a 1.0 the first time and a 0 the second as I withdrew too late). Bad grades will not prevent you from being employed. They *may* prevent some opportunities from appearing, but I've found those opportunities are far more dependent on the school you went to, with grade being a secondary signal.
My grades never came up. Got jobs fine.
&gt;I didn't do a CS degree, and I've been working as a java programmer for 15 years, and since 2012, an architect. My advice is the following: Get a dot-com boom going so companies will hire anyone, even people without CS degrees. I mean, get over yourself.
Contributing to open source works too. I actually like the volunteer idea though because it's not just programming, it's working in a team environment with managers and such.
Like most comments here experience, even from the hobbyist perspective will help you. Mainly because it will help you interview better, also being able to show critical thinking skills during an interview will be invaluable. Work on convincing potential employers that you can use technology to **solve problems**, also show enthusiasm and confidence (don't be cocky though). Hard to imagine all of your relatives having such a hard time finding work, unless they are in a small job market where the language they know isn't used at all or they interview poorly. I had a sub 3.0 GPA and I had no issues finding a job when I cam out of school in 2012. Good luck Vortex.
Highly recommend you continue working on Android applications. Potential employers (for internships or otherwise) are much more interested in knowing that you are capable of programming. Your marks have nothing to do with your experience, because you experience is in the programming itself and not necessarily how well you can recite information from memory. Learning the information related to concepts and being able to apply it are much more important. If you end up having multiple well-written and polished Android apps, it will look much better on your resume going forward, and you may be able to land a job based on those alone. It is my impression that employers are placing much less emphasis on marks and much more emphasis on ability and experience.
Are there student developer positions available at your school? If so I would try and get in on that. Student positions have very low hours required and will let you schedule around your classes. Plus you get real world experience. I worked at the University my entire career so by the time I graduated a already had good experience. If you graduate with a 3.0+ GPA you will be just fine (use those easy Humanities courses to boost your GPA). Some places have a GPA requirement for graduates. Most places don't. I got a job offer right before I graduated. But, I had a baby due a week after graduation so I was quite motivated to find a job, fast. That plus the experience working at the University really helped. Make sure you talk to career counselors at your school your senior year to help polish your resume. And remember that a resume will ONLY get you an interview. The interview will get you the job. And don't get frustrated if you get turned down. Make sure you send follow up letters/emails to thank them for the opportunity. Also, I had companies that turned me down and later on ended up offering me a job. Put your resume out ... everywhere you can. Get as many interviews as you can. The more interviews you do the better you get. Start working on getting interviews during your last semester. Don't wait until after you graduate. And remember it's not just technical skills they are looking for, but personality as well (probably more so). They want to find somebody who will fit well with the team.
Write a blog as you create your apps. Short entries showing the different stages of development, and entries if you solve a tricky problem or do something unique. Employers can look it over, prompted or unprompted, and see your enthusiasm for work.
GPA generally doesn't matter. I don't even have a degree but have been working as a senior dev for the last 4 years. Hired in at entry level and quickly moved up. Just build stuff, release stuff, contribute to other projects. Put it all up on github. Even if it is just a small experiment with another language or technology.
Like killinghurts said, selling yourself (not like that) is going to really get you the job. What helps A LOT with that is having a nice body of work you'be done to show off. Your experience doesn't have to come from a job. Projects that you've done, code you've written, all of that is experience that you should hypothetically be able to show off. Marks don't matter, showing what you know does.
What reports? The made up reports that no one but click-whore articles keep referencing? I'm not so worried.
I'm not sure where your relatives live but here in the Northwest nothing could be further from the truth. Tons of jobs everywhere. If you're willing to move, you wont' have any problem finding a job. 
Write a little blurb (2-4 sentences) with what problem you solved, some key technologies you used and of course a link to the repo. You'll stand out compared to everyone else that doesn't have any code samples available, which is a lot of people. In an interview, be ready to talk about your projects, why you did things certain ways, trade-offs, difficulties, etc.
This, this this this. I've interviewed *many* candidates, and I can tell you a dozen times over, that the way you answer questions in the interview is *FAR* more important than a grade point or whatever university you came from (usual exceptions might apply such as stanford or MIT). I have no idea what happens at a university, but when you're sitting in front of me and can explain what code does, I'm going to feel much more confident in giving you a job writing code. Did I just say that being competent in your interview is more likely to win you a job moreso than anything you've done in the past four years. Yes. Yes I did.^* ^^your ^^schooling ^^hopefully ^^contributed ^^to ^^something ^^to ^^answering ^^interview ^^questions ^^compentently. ^^^:) So be prepared for your interview, and everything will be aok.
You don't have to be less introverted. Think of an interview as a performance. A performance that will drain energy from you. You can recuperate after the interview.
Do your own homework.
I second this if you are into Java already. The transition for you will be much smoother and Unity is used in a lot of game industries already. If you really want to go C++, look into SDL. 
I failed my CS degree and still got a Java job no problem. I did have to do a java programming assignment as part of the application process tho.
Seconding this. On my first few jobs I just listed my hobby projects as "past experience", seemed to work great. Make sure you share your enthusiasm about some of those projects (don't fake it tho, make sure it's something you are truly enthusiastic about).
EDIT: sorry I removed the previous post and added this one with a new title that explicit better it's about benchmarking in java.
I'm not convinced annotations are better/more elegant than XML. Also in terms of management(especially in terms of management). If i'm working on a fairly complex piece of software with hundreds of Spring beans interacting with each other, i find it hard to believe that using annotations makes it more manageable. With XML i can look at a files (organized by functionality or whatever you choose) and get an overview of how they interact. Also declaring transactions in XML gives me the flexibility of viewing all transactional beans/methods etc. in one place. In case of any changes - say i want to change my transaction boundaries - all i need is to update the bean configuration and restart, as opposed to recompiling my classes. This is important in a production environment sometimes. I kind of understand the arguments that readability of the code improves etc. Also the argument against XML configuration that the number of files increase. But in a team where there are 10-20 developers spread out in different locations, working on different projects with their development overlapping, i'm not convinced that annotations are far better than XML configuration files. Maybe there is something i'm missing here, and if you can show me/explain to me the benefits of annotations i can better see why it's considered that much of an improvement. 
Seems to be a new usage of the term 'elegant'. @Bean public LocalContainerEntityManagerFactoryBean entityManagerFactory() { LocalContainerEntityManagerFactoryBean entityManagerFactoryBean = new LocalContainerEntityManagerFactoryBean(); ... AbstractAnnotationConfigDispatcherServletInitializer ... o_O
I dont really get your question. The if will always be true because a SoldCar is always instanceof a Car too. (And anyway, you are using a foreach with type Car) Why did you put a for into the foreach of the same array? Basically now you foreach Car c in tempA, check that if c is a Car (always true), then search for a Car from tempA where c.getIdNumber == the actual.getIdNumber in the for loop, and that will be the same as c. So you already have your Car c and you search again. Then you create a SoldCar temp (this is understandable), then you put it into the same list you are foreaching. And when you create the SoldCar temp, it is not always true that c is a SoldCar so you could get a class cast exception. I'm not sure but the foreach may be infinite loop because you always add an item to the list. I think you need to think about the problem again. 
What's sad is that you didn't apparently even Google it.
1) The 'instanceof' on Line 3 is unnecessary. From line 1 we know that tempA contains only Cars. 2) The double looping (lines 1 and 5) provides O( n^2 ) speed. Assuming each car has a unique id number, you should optimize this to O(n) speed by first indexing your tempA cars by idNumber. Something like this: Map&lt;Integer, Car&gt; idMap = new HashMap&lt;Integer, Car&gt;(); for (Car c : tempA) { idMap.put(c.getIdNumber(), c); } 3) You are casting c to SoldCar on line 9. Is that what you meant to do? The rest of your code looks like you are assuming c is a Car, not a SoldCar. Did you mean to cast tempA.get(i) to SoldCar instead?
Sorry I changed it back to instance of SoldCar. I was just trying various things to try and get the code to work.
 for(Car c : tempA) { if(c instanceof SoldCar) { for(int i = 0; i &lt; tempA.size(); i++) { if(c.getIdNumber() == tempA.get(i).getIdNumber() &amp;&amp; tempA.get(i) instanceof SoldCar == true) { SoldCar temp = new SoldCar(tempA.get(i).getDealerCost(), tempA.get(i).getIdNumber(), tempA.get(i).getDateArrived(), tempA.get(i).getModelYear(), tempA.get(i).getMakeModel(), ((SoldCar) c).getPrice(), ((SoldCar) c).getCustomer(), ((SoldCar) c).getDateSold()); carA.add(temp); System.out.println(c.getDateArrived()); } } } } I revised the code, but it only works when tempA.get(i).getIdNumber instanceof == true. I think the SoldCar is only finding itself. The data file I read in creates a car first before it later becomes sold. So, I'm guessing in the for loop it gets passed over and SoldCar never finds the Car IdNumber associated with it.
I'm trying to pass the instance variables of the superclass Car to the subclass SoldCar Constructors so I can make one complete SoldCar Object. A SoldCar and Car share the same IdNumber but have different different variables that need to be combined into one object. Hopefully, that makes sense. edit: I tried looping through the list backwards but that did not work. I still return null values.
I get what you're trying to do, but the instance variables have to be set somewhere. When you call &gt;System.out.println(tempA.get(i).getDealerCost()); and see null, I think you might not be setting dealerCost correctly somewhere, either with its setter or the call to the Car(...) constructor. What if you output c.getDealerCost() in line 2? Does it have a value there?
Even with multiple developers you don't need artifactory. You would just end up rebuilding (or redownloading) all the modules that need to be built. It's less efficient, but it's not a requirement. One other disadvantage would be that if there is some library that didn't use Maven's dependency package format (which would be a bad sign), everybody would need to run the command line argument to put the naked jar in the local repository in the right format.
Yes! I get all the dealer costs of Car to include the 0 values of SoldCar. If I print "get(i -1)" in the if statement bracket then the output will return a value. I think c.getIdNumber and tempA.get(i) are the same object so there wouldn't be any values for the instance variables of the Car superclass since the SoldCar constructor only updates instance variables of its subclass. Does that make sense? edit: I tried looping through the list backwards, but I still return null values.
I do not think you are missing anything. It is really just preference. In my opinion it is much easier to read, code and understand when everything is in the Java file. 
&gt; Car superclass since the SoldCar constructor only updates instance variables of its subclass. Does that make sense? Ah! Do you call the Car constructor in SoldCar? The first line in your constructor SoldCar constructor would be a call to super(dealerCost, idNumber, ...); [Using super](http://docs.oracle.com/javase/tutorial/java/IandI/super.html)
Make two apps and have them on a device. for one, have it play an animation when you hit the button. for the other, a sound. bring it in, let them know that's what you've done in the week since knowing you'd have the interview. programming isn't about effort, it's about results - get some. this is what will set you apart. im recommending this course because from your post it seems like you've already identified two important sticking points other than that, all typical interview stuff: dress nice, smile, be enthusiastic, etc. make sure to keep your breathing real deep before/during the interview so your body stays calm, even if your mind wont
 public SoldCar(double a, int b, Date v, int mY, String m, double p, String c, Date ds) { super(a, b, v, mY, m); price = p; customer = c; dateSold = ds; } public SoldCar(Integer id, double p, String c, Date ds) { //makeModel = m; idNumber = id; price = p; customer = c; dateSold = ds; }
Having not yet started Java, I'm wondering what the difference is between the Javas in these books and Java 7. Is it enough to warrant ignoring them? Or, could I still start with them (as they are highly recommended) and move to Java 7 later?
You can start with them. Java is very much backwards compatible, you just won't be familiar with the latest additions to the language.
i had a full desktop computer and the computer was hooked up properly to my workgroup's server space on day one. i had an email address under the department's domain. i had all my security credentials in place, they weren't all that high, but they were there. i had my badge and my keycard. i still didn't do any real work for a while since i had to get up to speed on the work i was assigned, but the office was managed well enough to get me all the tools i needed from the start.
Which constructor do you use when creating the objects that fill tempA?
Your nested loops are so untidy. I've no idea what they're trying to do, and the variable names don't help. (You can do better than "tempA", "temp", and "carA".) This line should be banished: SoldCar temp = new SoldCar(tempA.get(i).getDealerCost(), tempA.get(i).getIdNumber(), tempA.get(i).getDateArrived(), tempA.get(i).getModelYear(), tempA.get(i).getMakeModel(), ((SoldCar) c).getPrice(), ((SoldCar)c).getCustomer(), ((SoldCar) c).getDateSold()); &gt;I'm trying to create a new object of Sold Car by passing arguments from the superclass Car's instance variables Okay, that makes sense. But move the work into SoldCar's constructor, and out of that loopy loop. You can reduce the above line to just: SoldCar temp = new SoldCar(c); Then you won't need to pass the variables individually to SoldCar or worry about getting them in the right order. public SoldCar(Car c) { super(c.getFoo()); this.bar = c.getBar(); ... ... } &gt;the get Methods only return null values You haven't posted the relevant code (the Car and SoldCar constructors, their fields, and getters), but I can give you some general advice: 1. If your constructor parameters have the same names as your fields, make sure you're using `this` to assign to the field. public Car(int foo) { this.foo = foo; // &lt;-- assign to the field } public Car(int foo) { foo = foo; // &lt;-- completely useless } 2. Don't duplicate your fields in the subclass. If you have something like this: class Car { int foo; } class SoldCar extends Car { int foo; } ...then you have a class with *two fields of the same name*. Assigning to one field won't affect the other. That could explain why you seem to be reading nulls, if you're assigning the duplicate fields in the subclass constructor, but the getters from the parent class are returning the uninitialized original fields, or vice versa. 3. Some IDE operations fill in default method return values of 0, false, and null. Make sure your getters actually return the field they're supposed to return. 4. Enforce sensible values in your constructors to catch problems early: public Car(String makeModel, ...) { if (makeModel == null || makeModel.length() == 0) throw new IllegalArgumentException(); ... } 
Have any of the Spring fans even taken a look at Guice? No XML, much simpler annotations...
That is some confusing code! That would take a while for me to step through. 
I have a few suggestions that should help you figure it out: Give your methods and variables clear, concise names. This will ease the process of running through the code in your head. Usually variables should have a noun name, because they *are* something. Methods should have a verb name, because they *do* something. For example: public static int countLetters(String word) { int letterCount = 0; for(int i = 0; i &lt; word.length(); i++) { if (Character.isLetter(newWord.charAt(i))) { letterCount++; } } return letterCount; } public static int countValidWords(String paragraph, int minWordLength) { int wordStartIndex = 0; int wordCount = 0; // you get the idea } Add some simple logging to help understand what's happening. For example, just inside the **for** loop in countValidWords: System.out.println("paragraph["+i+"]="+paragraph.charAt(i)); Inside the following **if**: newWord = paragraph.substring(wordStartIndex, i); System.out.println("found new word="+newWord); int wordLength = countLetters(newWord); System.out.println("length="+wordLength); if(wordLength &gt;= minWordLength) { Do the same in your **else** block and anywhere else you'd like to know what's going on. If you have access to a debugger (in any modern IDE such as Eclipse, IDEA, NetBeans), use it. You'll be amazed at how easy debugging becomes when you set a breakpoint at the start of the problem section, and just step through, watching how your variables change value as the program progresses.
I highly suggest looking up String's [split() method](http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#split(java.lang.String). First step, run split to get your String[], then loop through with your length criteria.
No error conditions or invalid strings, you've just made a simple mistake. It should be clear using the sample string and length suggested, if you print out g and newWord.
Ill test your code in a bit and see if i can find where the problem lies and give you some advice. But you may want to look into String.split(). It seems like it could be beneficial to you here. I'm on mobile, so forgive me for not linking to a javadoc. 
* functions generally begin with a lower case letter. * g is not a very descriptive variable, how about wordStartIndex * "space" is not the only whitespace character. * p is not a very descriptive variable, how about sentence * Can you explain what you are doing with the else if statement in validWords * Can you explain why you are re-assigning newWord when it is longer then the defined minimum length
I'd split the string into an array then check the validity of the substrings. docs.oracle.com/javase/6/docs/api/java/lang/String.html#split(java.lang.String)
 @Test public void stringSplit() { final int max_length = 4; final String sampleSentence = "Hi there, here is a test of the program."; final String strippedSetence = sampleSentence.replaceAll("[^a-zA-Z ]", ""); final String[] sentenceArray = strippedSetence.split(" "); final int numberOfWords = countWordsMeetingCriteria(max_length, sentenceArray); System.out.println(numberOfWords); } private int countWordsMeetingCriteria(final int maxSize, final String[] words) { int count = 0; for (int i = 0; i &lt; words.length; i++) { if (words[i].length() &gt;= maxSize){ count++; } } return count; }
My bad. Just taking my first CS course this semester.
thank you for your help. i can no see where things are going wrong. Ive made some corrections, this is what ive came up with for the countLetters() method. public static int validWords(String paragraph, int minWordLength){ int wordStartIndex = 0; int wordCount = 0; int wordLength; String newWord = paragraph; for(int i=0; i &lt; paragraph.length(); i++){ System.out.println("charAt["+i+"]="+paragraph.charAt(i)); if(paragraph.charAt(i) == ' '){ newWord = paragraph.substring(wordStartIndex,i); System.out.println("found new word="+newWord); wordLength = countLetters(newWord); System.out.println("wordLength:" + wordLength); if(wordLength &gt;= minWordLength){ wordCount++; } }else if(newWord.indexOf(' ') == -1){ newWord = paragraph.substring(wordStartIndex); wordLength = countLetters(newWord); if(wordLength &gt;= minWordLength){ wordCount++; } } newWord = ""; wordLength = 0; } return wordCount; } my "found new word" outputs are adding the strings (e.g. 1st found new word = how, 2nd new word = how are, 3rd new word = how are you) also, the wordLengths are being added to each other as well.
[http://wicket.apache.org/](http://wicket.apache.org/)
As has been stated this isn't really malware of any sort, I advise you to keep these little projects to yourself. However if you're interested in improving your java skills int a = 4; int b = 5; while (a &lt; b) { /* do this*/ } Is the same as while (true) { /* do this */ } There's really no point in defining a variable if you aren't going to change it, unless it's for simplicity sake. (if you need to be able to modify multiple constant values at once just assign a final value to them) But in this case you defined two variables that remain constant with only one reference each. No need for variables, and no need for that check either since it'll always return true 
Spring for restful api's, and js for your web app. (I'm partial to angular but it has a steep learning curve) 
No worries. First time code is always hard to read. Besides code comments (which you probably don't need here), I would recommend changing your variables to make a little more sense. "i" is safe in that everyone knows it's used for loops. But "p" and "g" are quite confusing. It's a good habit to get into, even when the only code maintainer will be yourself. I sometimes look at my old code and have no idea what I meant!
Do you already know how to program?
I'm a developer who does tech interviews. If I were interviewing you, I wouldn't give much of a crap about your GPA. I look first for people who can communicate well. If you don't get what I'm saying, can't explain what part of what I'm saying you don't get, and can't explain your ideas clearly, I'm not interested. If you aren't interested enough in the technology to educate yourself, I'm probably not going to be interested. I'll ask you things like what is your favorite programming-related website, who is Joel Spolsky or Jeff Atwood. What was a language feature you recently looked up just to see what it was for? If you have apps to show off instead of previous job experience, that's cool. On your resume describe what the app does and what technologies you used to make it happen. Include a link to the source so I can see if you put your curly braces in the right place (just kidding, but there damn well better be useful comments in there). Be able to speak about the design of the project, problems you encountered, how you solved them, and what alternative approaches you considered (you didn't just implement the first thing you could think of, did you?). Finally, we interview a dozen shit programmers for every mediocre one, and we end up giving those guys offers. I've interviewed maybe three people in 5 years that I thought were really good. Point is, you don't have to be amazing, you don't have to know everything. You just have to be a great communicator, be interested in your field, and know the in's and out's of the projects you've worked on well enough to carry on a technical conversation about them. If you can do that, you can get a job.
Crappy devs being argumentative about someone calling them out on their habits. What else is new. 
So? Who cares that they're showing something new. I think it's a nice feature. If you don't like being told that your god-classes are a bad practice just disable them :)
What great feedback? I only see some people complaining about a feature you can either adjust or disable instead of being grateful for the free feature in the first place. I think the dev handled it's very well, I have a lot less patience with typical nay-sayers.
Never used it before, but looks pretty interesting. [Apache Tapestry](http://tapestry.apache.org/) 
I agree I've never been a big fan of annotations for Spring. Sometimes it does feel like I'm coding in XML but annotations pollute the code base very quickly. 
There's nothing named jee, never use that name! https://java.net/projects/javaee-spec/pages/JEE
&gt; because the per-user state is not particularly light What are we talking about here exactly? 1KB per user? 10KB? 1MB?
&gt;Not that I have a problem with using JEE solutions for these (actually I prefer it). But people make Java web apps all the time without JEE. Quote from my original post. Reading is a bitch. Magst du liest? Ich mag lese. Ich habe viele Computerprogrammen auf Java geschreiben. Wie mit dir? Edit: [here is a relevant discussion](http://www.reddit.com/r/java/comments/zirt8/spring_3_vs_java_ee_6/)
&gt; Reading is a bitch I guess that goes both ways, as the original remark was: "You can't really build a web app on just Java SE without inventing at least a hundred wheels, poorly..." And then you went on listing a large collection of things that are NOT in Java SE. &gt;Magst du liest? Ich mag lese. Ich habe viele Computerprogrammen auf Java geschreiben. Wie mit dir? I have no idea what that means. 
&gt; Now, fuck off. Sorry, but I don't think that last one was necessary.
It might help if you break down the problem into its simplest case first. How would you search for 3 or 4-in-a-rows horizontally, on the top row only? Maybe something like this: int threeInARows=0; int fourInARows=0; for (int x=0;x&lt;4;x++) { if (board[x][0] == COMPUTER_TOKEN &amp;&amp; board[x+1][0] == COMPUTER_TOKEN &amp;&amp; board[x+2][0] == COMPUTER_TOKEN) { threeInARows++; if (board[x+3][0] == COMPUTER_TOKEN) { fourInARows++; } } } If you can solve that simplest case, next try expanding your solution to search for horizontal matches across all rows. And then you can try modifying it to include vertical matches, and diagonal matches.
I am currently learning my first year of java but other than that i am fairly new to programming 
I'd be willing to bet that you are developing better work and study habits than they are because you have to work harder than they do since they've seen it before. It'll pay off in the long run. My advice is, do your best, and don't stress out. The best thing you can do is make sure you attend every class, and start working on assignments and studying for tests a week before they are due. There's no substitute for seeing the material early and often. Also, the best thing I can suggest for your job hunt, is build some little projects. DO NOT let it distract you from your school work, but build stuff. Build a little web site, or a little iPhone app, that does something that you find interesting. When I'm interviewing entry level programmers, I always ask if they have any little hobby projects. What problems did you run into, how did you resolve them, why did you choose that technology, and so on. It shows you're eager, enthusiastic, and take initiative. I'm more impressed by that than by great grades. It can be anything, a web site to track your hockey pool, a little iPhone tic-tac-toe game. Anything. And if they don't ask you about your projects in the interview, just tell them about them anyway. :) It will give them a little glimpse into you are a go getter.
What others said, especially about the value of [participating in an open source project](http://blog.smartbear.com/careers/leveraging-open-source-experience-in-your-job-hunt/). People do want to hire someone with experience, and they usually don't care how much you were paid; in fact, your willingness to do something for free demonstrates enthusiasm and a good attitude. That experience, even if "just" in an open source project, trumps good grades. And it's something you can do without being nervous about your introversion. 
Horrible article. While the title says 2013 if you read the article all the research is from 2011. For example the author avoided JavaFX because it wasn't available on Mac which is no longer true.
A *wrong* one!
Thanks for your help! But doesnt this take quite a while to check everything if there are lots of tokens on the board?
I tried this at first, but that uses arrays, correct? We haven't learned that yet and I would be able to do even less troubleshooting.
The official tutorial is available as a [book](http://www.amazon.com/The-Java-Tutorial-Course-Edition/dp/0132761696). It's very straight forward and easy to understand.
I have re-written the code a lot more organized and clean. Everything is running fine but the last word in the program. I'm using &gt;else if(paragraph.indexOf(' ') == -1) to recognize that it is the last word in the program, but this if statement never runs. Any help? 
Would not have considered Swing for a cross-platform GUI application a year ago, although my own experience is from over 10 years ago, but after learning Clojure and seeing what Swing applications can look like with a more concise syntax (eg with threading macros or [seesaw](https://github.com/daveray/seesaw) Swing is definitely something I would consider now. EDIT: This is not really saying I thought Swing was bad a year ago. It would simply not have entered my mind given all the other options there are.
 (-&gt; (frame :title "Hello", :content "Hello, Seesaw", :on-close :exit) pack! show!)
I used the free [Apache PDFBox](http://pdfbox.apache.org/) to do exactly this.
Appreciate that man. I do get frustrated easily so thats something I have to work on and get started on this.
I'm not sure if you can modify PDFs with it, but IcePDF has an Apache 2 licensed version. I used it once and was very happy with it.
I do the same thing. Truth be told I'm pretty green to the programming world, definitely not some sage elder. Just started looking into Java myself for the purposes of building some native apps and whatnot. It's a long process, but you gotta get started somewhere. Best of luck to you.
Like what?
Play and Lift were what I was thinking about.
If all you need is the highest score you could use a string and int variable like highScore and highName which you only change if the read score is higher than the saved one. 
I actually just solved the score problem on my own by adding an if statement into the for loop like this. if (highest &lt; score) highest = score; Now I'm trying to get the program to match the name with the highest score and output the name with it. EDIT: Nevermind, I solved it! I forgot to add {} to my if statement, so it wasn't executing my highName = name; Thank you for the help! 
I don't want to just give you the answer, so you will need to give me scouts honor that you will make every attempt to actually understand what I am doing, and why. Of course, feel free to ask me to clarify. Scanner input = new Scanner(System.in); int students; String name; // Declare the variables out of the for loop String topStudent; int score; int topScore; System.out.print("Enter the number of students: "); students = input.nextInt(); // now you need to get the first data point here, and the first data // point is by definition of a one element set the top score System.out.print("Enter a student name: "); topStudent = input.nextLine(); System.out.print("Enter a student score: "); topScore = input.nextInt(); // now do your for loop, pay attention to the indexer // defintion and the logic at the end for(int d = students - 1; d &gt; 0; d--){ System.out.print("Enter a student name: "): name = input.nextLine(); System.out.print("Enter a studen score: "); score = input.nextInt(); if(score &gt; topScore){ topScore = score; topStudent = name; } } My formatting is coming out really weird, I hope you can follow it.
I actually solved it on my own just a few minutes ago, so I understand it, I really appreciate the help though!
I guess I was too optimistic. The problem is back after short while :(. 
New code, [highlight=java]package changedispenser; public class ChangeDispenser { private static int quarters, dimes, nickels, pennies; private static int penniesLeft, nickelsLeft, dimesLeft, quartersLeft; private static int pennyRollsAdded = 1; private static int nickelRollsAdded = 1; private static int dimeRollsAdded = 1; private static int quarterRollsAdded = 1; public static final int PENNIES_PER_ROLL = 50; public static final int NICKELS_PER_ROLL = 40; public static final int DIMES_PER_ROLL = 50; public static final int QUARTERS_PER_ROLL = 40; public static void main(String[] args) { public String makeChange(int amount) { if (amount &gt; 99 || amount &lt; 0) { System.out.println(""); } quarters = amount / 25; amount = amount % 25; dimes = amount / 10; amount = amount % 10; nickels = amount / 5; amount = amount % 5; pennies = amount; do { if (quarters != 0) { System.out.print(" Quarters: " + quarters); } if (dimes != 0) { System.out.print(" Dimes: " + dimes); } if (nickels != 0) { System.out.print(" Nickels: " + nickels); } if (pennies != 0) { System.out.println(" Pennies: " + pennies); } //Fix this so that it outputs the appropriate change IE: 23 cents is 2 dimes 3 pennies System.out.println("Coins Left:"); System.out.println("Quarters: " + quartersLeft); System.out.println("Dimes: " + dimesLeft); System.out.println("Nickels: " + nickelsLeft); System.out.println("Pennies: " + penniesLeft); System.out.println("Rolls Added: "); System.out.println("Quarters: " + quarterRollsAdded); System.out.println("Dimes: " + dimeRollsAdded); System.out.println("Nickels: " + nickelRollsAdded); System.out.println("Pennies: " + pennyRollsAdded); } while (amount &gt; 0 &amp;&amp; amount &lt;= 99); return "Quarters: " + quarters + " Dime: " + dimes + " Nickels: " + nickels + " Pennies: " + pennies; } public int getPenniesLeft() { return penniesLeft; } public void setPenniesLeft(int penniesLeft) { this.penniesLeft = penniesLeft; if (penniesLeft &lt;= 0) { pennyRollsAdded = pennyRollsAdded++; } } public int getNickelsLeft() { return nickelsLeft; } public void setNickelsLeft(int nickelsLeft) { this.nickelsLeft = nickelsLeft; if (nickelsLeft &lt;= 0) { nickelRollsAdded = nickelRollsAdded++; } } public int getDimesLeft() { return dimesLeft; } public void setDimesLeft(int dimesLeft) { this.dimesLeft = dimesLeft; if (dimesLeft &lt;= 0) { dimeRollsAdded = dimeRollsAdded++; } } public int getQuartersLeft() { return quartersLeft; } public void setQuartersLeft(int quartersLeft) { this.quartersLeft = quartersLeft; if (quartersLeft &lt;= 0) { quarterRollsAdded = quarterRollsAdded++; } } public int getPennyRollsAdded() { return pennyRollsAdded; } public void setPennyRollsAdded(int pennyRollsAdded) { this.pennyRollsAdded = pennyRollsAdded; } public int getNickelRollsAdded() { return nickelRollsAdded; } public void setNickelRollsAdded(int nickelRollsAdded) { this.nickelRollsAdded = nickelRollsAdded; } public int getDimeRollsAdded() { return dimeRollsAdded; } public void setDimeRollsAdded(int dimeRollsAdded) { this.dimeRollsAdded = dimeRollsAdded; } public int getQuarterRollsAdded() { return quarterRollsAdded; } public void setQuarterRollsAdded(int quarterRollsAdded) { this.quarterRollsAdded = quarterRollsAdded; } } [/highlight]
I'm not seeing this.
One loop controls the total number of lines. The other loop controls the number of stars on a line. You should be able to easily figure out which one is your outer loop and which one is your inner loop. You might find it easier to make this shape first * * * * * * * * * * * * * * * then refine the triangle after.
Fun challenge for op: figure out the formula to generate the number of white spaces needed regardless of the width of the pyramid then have the user choose the width themselves. Tip: the pyramid always has as many stars going down as it does going across. Edit: also, before you come here with a homework assignment, check all of the resources out there. The best is easily google, followed by stackexchange. http://lmgtfy.com/?q=pyramid+algorithm+java
Ok I clearly messed up the highlight, here it is on gisthub. https://gist.github.com/anonymous/0152c0d1ac68ecefee6d
I think by "open spaces" you need something more, but if you just need to populate PDF forms with data, you can use the [XDP format](http://en.wikipedia.org/wiki/XML_Data_Package) with your PDF. You just fill the XDP file with the data you want and Acrobat Reader will auto-fill the forms when you open the PDF.
Dock does show the app as active (there is "light"). Also, the app listed in "Force to Quit" list and you can see the icon in app switcher. At the same time, there is no process running. And there is nothing in "command center". It seems that this behavior is specific to java apps only. It does not seem to be specific to any particular JKD update (I tried 45, 40 and 25). So far, switching to another account and than killing loginwindow process from original account is the only way to "clean up" these fandom apps. 
You should try cross-posting this to /r/learnprogramming. I'll be blunt, this type of massive assignment code (Which is of no fault of your own) tends to go unanswered in the more general subreddits, but the more dedicated people in /r/learnprogramming might be willing to give it a shot.
* Stuff like that goes into /r/javahelp. Also please read the submission guidelines there, particularly about how to ask proper questions. * Did you debug your code? Stepped through it? * Why do you have two `main` methods? The one in `ChangeDispenser` won't produce any output as it never calls any methods that could change the value of `pennies`, `quarter` etc., so they will always be zero. 
iText enables you to stamp content pretty much anywhere you want on the PDF. Not only the open spaces you mention (by which I presume you mean blank space), but to do things like stamp an owner's name across the page footer, etc. An easy-to-use package. 
Effective Java is still not out of date, since Java evolves very slowly. Java 7 was not a big change. Hopefully the book gets a new edition for Java 8.
Yes, that's right. Another technique would be to calculate the amount of 3 or 4-in-a-rows which were created or broken each time the board changes, and maintain a running count. So in a 600x700 board, if someone makes a move in square (305,402), you only check the ~28 matches revolving around that square. This would be vastly more efficient for a large board which was only being changed one-move-at-a-time.
I worry about the direction of Spring these days. They are definitely trying but moving old spring 1 and 2 code bases to 3 is a nightmare.
Spring is not incompatible with play (there is more than just Spring MVC in Spring...)
I think you may have misunderstood the comment, angular and knockout are browser side frameworks, and work fine with Play!
As far as I can tell, there's no such thing as "Adobe Professional". There's "Adobe Acrobat", which has a version called "Adobe Acrobat XI Pro". I'll assume that's what you meant. In any case, the integration that your boss is referring to is probably the "Interapplication Communication" discussed here: http://www.adobe.com/devnet/acrobat/overview.html . Because it uses OLE/DDE or Apple events / AppleScript, it's a per-platform solution. Java libraries tend to be written to be cross-platform, so you're unlikely to find anything that targets "Java but only on Windows". You would probably be better off trying to find a Java library that does what you want. As far as I can tell, you don't have any real need to integrate with (or even use) Acrobat itself.
My *point* is that JavaSE is sufficient.
There are nonEJB Java libraries that do the same thing.
Yay, for IntelliJ and Eclipse users. Completely useless for anyone using a different text editor.
By "Adobe Professional" do you mean Adobe's technology (and a good thing it is that you included even a brief summary of what you actually want to accomplish) for filling out PDF forms and stuffing the results into a database? http://www.adobe.com/devnet/acrobat/fdftoolkit.html http://www.datalogics.com/products/pdfjavatoolkit/formsdetector.asp Or maybe XML forms? http://partners.adobe.com/public/developer/xml/index_arch.html http://help.adobe.com/en_US/livecycle/9.0/programLC/help/index.htm?content=000185.html
Ah, was his comment meant as Play Framework advocacy?
Yes, "Adobe Acrobat Professional". Like I wrote, I barely know what I am talking about at this stag. My boss, who also doesn't know what she was talking about was impressed with what some .net developers showed her about .net/adobe integration with embedding editable PDF forms, collecting the data from the forms and digitally signing documents. My boss didn't have more than those features in mind, just being able to have in a webapp whatever Adobe Acrobat has to offer, with visions of fast/easy integration. Hopefully I will be able to sell her on a "what exactly do you want done and it can be done with Java?" approach
Yes, Adobe Acrobat Professional. I barely know what I am talking about at this stage. My boss was impressed by a meeting with .net developers who gave her the impression that .net webapps could EASILY have whatever adobe products have to offer and she asked to research if there were already resources for bridging Adobe and Java Thanks for the collection of useful links. It is a start. I think I have to find a diplomatic way to shift the conversation with my boss to specific wish list items. Thanks again.
Maybe your boss meant Adobe Pro on the client side? http://www.adobe.com/products/acrobat/create-pdf-web-forms-builder.html Adobe also have a SaaS service for collecting PDF form data, if it's not actually TOP SECRET. https://www.acrobat.com/formscentral/en/landing/axifcpricing2.html https://www.acrobat.com/formscentral/en/features.html Also, http://forums.adobe.com/thread/767872 and http://itextpdf.com/themes/keyword.php?id=250
You asked, and I answered with the solution that worked for me. Don't sarcastically reply if it's not the exact answer you were looking for.
Thank you. I appreciate the help!
I was able to do the first step easily, but was stuck on the 2nd part. Thanks for the help!
Sounds like you're well on your way. That question was a killer for me too in 1st year.
And not from the article, but from googling "java iot", I found out that IoT probably means "Internet of Things".
Thanks for the useful links!
Yep, my boss kindly narrowed down the issue to embedding a PDF form in a JSP and then collecting the data server side. I will make another thread about that. Thanks.
I didn't ask for a solution for Eclipse. I asked for a solution for *Mavericks*, regardless of editor. I didn't ask for a solution that worked on Mars, or a solution that worked underwater. I asked for a solution that worked *generally*. Also, Eclipse may grab Java 7, which is not what I want. See original post.
You probably have a very small max heap size. try increasing the heap max heap argument -Xmx1G (1 gig of ram). If thats not the issue it could be with your code. 100 Threads is not very many.
\u0085 is a next line character in Unicode so I'm guessing it's picking up that 85 as a separate char rather than reading it as \uc285. If you look at the LINE_SEPARATOR_PATTERN regex in Scanner.java it looks like this: \r\n|[\n\r\u2028\u2029\u0085]
My understanding of the Erlang threading model is incomplete at best, but I'm fairly certain that an Erlang thread is generally a lightweight or user-space only "thread" and may or may not be backed by an OS level thread. Threads in Java are heavyweight, meaning that threads are actually native threads (there may be some support for green threads in some JVMs but they would be the exception). The JVM itself does not impose a limit on the number of threads so there should be no problem with running 100 threads; many application servers, e.g. Glassfish, will run that many or more. Threads can be capped by the OS, however. For instance, Linux caps both the maximum number of threads and the maximum number per user (this limit is likely veryl arge, however). Without seeing the exact error message you're getting I can't tell you exactly what the problem might be. Most likely you can resolve the problem by increasing the size of your heap using -Xmx1g (for example) or by reducing your memory footprint. Your threads may also be exhausting the native heap (unlikely). See [this](http://www.ibm.com/developerworks/library/j-nativememory-linux/) article for more information.
Interesting one would think that \u0085 and \uc285 would be regarded differently
Please post the error message, your JVM configuration and a MWE if possible. 100 threads should be really easy to handle, although I find it hard to think of a program that would benefit from this many in commodity hardware (ie, &lt;= 8 cores).
It might be possible, but I don't think this is a good idea. You can embed a PDF document in an HTML page. PDF supports [embedded Javascript](http://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/js_api_reference.pdf) (but this may not be universally supported outside the official Adobe Reader!), which can invoke SOAP web services. You can make a SOAP call to a service implemented in something like [JAX-WS](http://docs.oracle.com/javaee/5/tutorial/doc/bnayn.html). You can create a PDF document using [Apache PDFBox](http://pdfbox.apache.org/), which has the ability to embed Javascript code into a PDF. It's not too difficult to create a PDF document using PDFBox. They did a good job wrapping up PDF objects into Java objects, and there are recipes you can follow. That should be enough for you to try it. If you really need to...
0xc285 is the UTF-8 encoding of the next-line character NEL (\u0085). Did you specify a charset in the Scanner constructor? I think making it UTF-16 (if that is the encoding) would fix this.
Related to this question; At university we were taught how to write a chat server in Java that creates a new thread for each client. Would this be the way a regular server handles clients? What about a MMO game server that had 2000 people connected at once. Is having a thread for each client an ok thing to do?
0xC2 0x85 decoded as UTF-16 is "슅", i somehow doubt this is what op wants.
The old (still?) default stack size for Java thread is 400k, so thats at least 40 MB in 100 threads just for the stacks, not to mention the extra stuff in there. Pilling your own code ontop of it, you are probably breaking the 64 MB default heap size easily. &gt;Is this normal Running out of memory for creating 100 threads? Yes. Creating 100 threads? No. &gt;In Erlang, 100 threads is par for the course. 100 green threads maybe, I doubt you were creating 100 *real* threads on a normal machine and having it perform as expected. On that note, unless this test runs on a big box- or you are specifically testing how the code behaves with too many threads, your probably testing your code wron. 
&gt; 100 Threads is not very many. I suppose that's true if you happen to have a few dozen CPUs.
&gt;Would this be the way a regular server handles clients? No. Creating / destroying threads is relatively expensive, and you can't actually use more than N threads at once if N is the number of CPU cores in your machine. The standard way is to use a Threadpool - where you keep a collection of threads that get reused. There are different ways to make sure each thread gets work to do. A common strategy is to use a job queue - where each thread tries to take jobs out of the queue - and then run the jobs. &gt; What about a MMO game server that had 2000 people connected at once Still, you don't create (too many) more threads then you have actual cores to do something with. For a game they may have to add special code to make sure no one job takes up too much time (if 1 of your threads gets stuck on one job, it can't process any others). However, a big MMO game is probably run on several larger computers - not just one single machine (ever wonder why you have to load a new instance - even if your computer is fast enough to stream the data / it seems to load almost instantly anyway? You are being moved from one server to another). If you are on a popular server, you may occasionally get a message that an "Area" is full - and get put in an overflow copy of the same area. This is to avoid having more people connected to a single machine then it can handle. 
For a large number of clients, I would probably use non-blocking I/O and socket selectors. Probably one thread (or a small group of threads) constantly selecting sockets that are ready for read/write, then handing those sockets off to a pool of worker threads when messages are actually ready for reading. A separate thread per client is probably overkill if you have thousands of clients connecting. But really, it depends on how steady the flow of data is; if each connection is transferring lots of data, maybe you do need dedicated threads (assuming you have enough cores to make a difference).
Or you know, you could just go back to Mountain Lion...
Sweet
Similar, or even harder in the case of Play! but we had a dedicated effort to migrate from Play! 1 to 2. In my current work they have not made this effort and have bits and pieces of Spring 2 and 3, and Jersey, and GWT and Angular, and velocity, and thymeleaf, and doclets and jaxb, and xstream, and xcf, and... So my comment is probably a bit biased because of the general "diversity" that is present in the system,
Fact is As, Bs, Ds, don't matter, you won't actually learn anything applicable to working getting a CS degree. They just don't teach real world skills. In 30+ years of hiring I have never once interviewed a college grad that was taught what version control was much less anything else about code quality or the things that matter in working a real job. You are screwed no matter what your grades are if you don't have demonstrable skills, as in a git hub account with lots of projects and code people can actually look at, and pull request for fixes or enhancements to someone elses project. Those things count more than a piece of paper that shows you can show up and listen and reguritate what you have memorized. Programming is about creating and problem solving, things that CS degrees sadly still don't focus on.
Unfortunately, Java does not natively support green threads. Usually one would use a bytecode weaver like Kilim to implement them, or program in a callback driven style. The callback style I'm talking about (although usually one would program in a style less directly related to the green thread model). class Yield { public Yield onWake() { } } Yield myAsynchMethod() { System.out.println("Before yielding"); return new Yield() { public Yield onWake() { System.out.println("After yielding"); } }; }
The videos are annoying. It's like attending lecture with Stephen Hawking after he learned a little bit of Java.
That's entirely based on your workload. If you have significant IO delays, then 100 threads is not very many at all because the cost of IO is much higher than the cost of a context switch.
http://blogs.opcodesolutions.com/roller/java/entry/solve_java_lang_outofmemoryerror_java Heap errors most certainly are a JVM output.
Frankly, it's as good a guess as any...
I have done this... I used xsl-fo and apache Fop. unfortunately the code is locked away in a proprietary library that a large company owns and will most likely never see the light of day. 
[SelectableChannel](http://docs.oracle.com/javase/7/docs/api/java/nio/channels/SelectableChannel.html)?
I can create 100,000 go routines in golang in 400~~k~~M of memory. Do I win?
please post questions like this in /r/javahelp. Note its [posting instructions](http://www.reddit.com/r/javahelp/comments/1ohr0r/metasince_its_getting_out_of_hands_a_message_to/). &gt; I get a "string index out of range" error. I believe that the problem lies within my while loop. which line causes this? I shouldn't have to guess this... is it line 27? the problem obviously is that you're trying to access a letter that doesn't exist, i.e. you "run over" the bounds of your string.
redirected from where? here's the official link: http://www.oracle.com/technetwork/java/javase/downloads/index.html
&gt; It's not showing my asterisks, so I'm using @ in their place... Don't replace characters.. learn how to properly format your text. There's a "formatting help" on each comment field on reddit. Because it's easily possible `to do this with * characters, too`. or even better on a separate ** line like that.
I'm not going to buy a new MBP and put ML on it. Although to be fair I would consider putting Win7 on a new machine. But if I'm going to spend that much, it's gotta work out of the box. 
But it isn't... there's is very little in plain Java SE that's needed for a full fledged web app. Please don't tell me that you install just the JDK **and nothing else* and build a web app on top of that with nothing but your own code???
Paying for JEE (Java EE?) backend licenses??? At various jobs I've used JBoss, GlassFish, TomEE and at one customer even Geronimo. Never paid a single penny to anyone for a license. What are you talking about???
Don't forget about JSF + PrimeFaces in that list, it's pretty cool these days!
SOLVED: (sort of ) I end up downgrading back to Snow Leopard. This issue with java (and host of other issues I have suffered from over last few days) have totally disappears. 
Yeah. This user has only been posting links from this blog.
I will have to do this soon. I originally stuck with thte JSF @ManagedBean because CDI lacked a view scope. This has now been added to CDI. Anothing things brought up in the comments of the article is the conversion of @ManagedProperty to @inject. It seems like @inject does not work well unless you are injecting a bean. It is possible but requires several additional annotations. This is probably not an issue for me because I do not think I am using @ManagedProperty for anything except beans. Below in a link discussing this. http://stackoverflow.com/questions/9934458/cdi-replacement-for-managedproperty I currently use Tomcat. Does anyone have any experience using OpenEjb.jar vs TomEE?
Thanks for your reply. If I were to migrate to oracle and try it out there, how much effort and time would it take to export/import the database. It has 14 tables, but they're empty atm. I have also read that oracle express edition does not work on Windows 64-bit versions. Is that true? I'm also considering your second option on setting the UserId to auto increment using java. How would I accomplish this?
Yeah I was able to figure this out, but wasn't sure how to correct it
&gt; Anothing things brought up in the comments of the article is the conversion of @ManagedProperty to @inject OmniFaces has an answer for this when it concerns request parameters: http://showcase.omnifaces.org/cdi/Param It's even much better than @ManagedProperty since you can optionally attach converters and validators to it. 
I had problems with Oracle Express on my 64 bit platform but did not research it to try and get it running. I am guessing SQL Server has similar functionality it is just a matter of finding out what they call it. To do it in Java simple select the Max ID in the database and increment by 1. Remember if there are no records you will get null initially so you will have to check for that. If the numbers do not have to be sequential you can use java.util.random to generate the numbers.
100 threads is not good for the simple reason that the CPU has to switch between the threads, each time the CPU switches to a different thread it has to load the stack of that thread. Its very ... time consuming to go through many threads, its BAD. 
&gt; Don't. This is what HTML forms are for. It isn't what I want, it is what my boss wants. &gt; AcroForm and Java on stackoverflow Good tip, thanks.
&gt; You can create a PDF document using Apache PDFBox, Can I create one with a submit button? The version of acrobat that I have doesn't have that option and I am trying to find an alternate way to create such an acroform.
What's wrong with organizing them as modules instead of projects? An IntelliJ 'project' is equivalent to an eclipse workspace, while a module is closer to what eclipse considers a 'project'. Hell, if you use git then using git submodules to get this behavior if you can't have them in the same repository is a great solution as well.
&gt; My recommendation would be to avoid pdf unless you absolutely have to. I completely agree, but as with "I want to do something non-optimal" questions, it isn't my choice, it is what a boss/customer wants despite informed advice.
This might have been updated recently, but I couldn't figure out an easy way to make 2 separate maven projects where one depends on the other work smoothly in a single IntelliiJ "project" For example if I'm developing log4j and a separate project that uses log4j for logging. If my project depends on the snapshot version of log4j that is currently being developed, I can import both projects into a single eclipse workspace and open stuff defined in the log4j project from the code in my project. In eclipse dependency connection between projects is made automatically. In IntelliJ, you have to mess with source locations to get it synched up. Even then, you can't develop multiple maven projects from a single intellij "project". Maybe I just couldn't figure it out, but I did google it and it looked like it was a known problem.
The `Enterprise` label is often an indication of software bloat, maybe not the best solution to any given problem.
Callbacks are useful, but they're not applicable here. I want to distribute work across independent workers. Callbacks *might* be used in a for-loop sense, but the underlying implementation for invoking multiple events surely relies on threads anyway.
Nope, just starting 100 threads, each with their own Jedis connection. *Should probably use DB connection pooling, though I don't plan on actually using more than 10 threads in practice.*
Yes, your analysis seems correct on all points.
I'd rather not force the user of my software to tweak their JVM configuration. Best to "just work" in vanilla JVM environments.
I don't keep unrelated modules like that in a single project personally, but I do regularly work with multi-module builds using both maven and gradle and intellij has no problems tracking the dependencies between the two. You need to ensure you import both 'projects' as modules in IntelliJ and then make the proper relationships between them in your pom.xml. After that IntelliJ should see the relationship between them automatically. To be honest though, you really shouldn't be keeping unrelated projects like that in a single workspace. When I do work like this I just publish to a local maven repository and have anything else I'm working on point at that.
Yes that is definitely true. It always depends on the use case though. If the IO operations take a decent amount of time the context switching wouldn't be very expensive for 100 threads. It is very simple to make an ExecutorService with 100 threads. However if you are doing tons of very fast operations non blocking would be better. Sometimes its not worth over complicating code just to squeeze out a little more performance, sometimes it is.
The newer Java versions have a pretty high max heap space. Mine is set at 2Gigs right now. If you are running out of heap space with that it is not a threading problem, whatever your threads are processing may be too large. I assume you are using an IDE (Eclipse, Netbeans, ...) Most IDEs have their own settings and are usually very small (128 or 256 megs) in which case you can be running out of memory. EDIT: realized you said mvn, you can also add command line args in maven to change the heap size. &gt; I'd rather not force the user of my software to tweak their JVM configuration. Whatever your deploy process is either a script running java manually or, an executable jar both have access to changing the max heap size as command line args. You would be setting the heap size the users do not have to tweak anything.
I didn't say they did.
Depends on traffic. A common pattern is to have multiple server hosts sitting behind a load balancer that routes requests, this way you can some what scale horizontally rather than relying on a single/few server hosts. But in general a single server can't take an infinite amount of traffic (via threads). Threads, at least native threads in Linux, take up stack space and so there is a very hard limit there. But waaaayyy before that limit is reached you will run into other problems because most servers are doing computation, reading/writing IO, etc... in those threads. Chances are you'll become CPU/IO bound before you reach a max number of threads the kernal can handle which means that even though you can technically open more threads most of the time it's not a good idea because late cites of whatever operations you're trying to do will go up exponentially.
Cool Idea. I would suggest that you consider spending some time editing your post to explain what exactly you intend to do with the game. All anyone know's reading this is that it's a text based Java game. It seems you've spent much more time on explaining that your open to beginners than explaining you goals and the game's concepts! I hope this doesn't offend or discourage you! Good luck! :) edit: I didn't check out the link. It contains everything I asked about!
&gt; The newer Java versions have a pretty high max heap space. Mine is set at 2Gigs right now. If you are running out of heap space with that it is not a threading problem, whatever your threads are processing may be too large. Agreed. 100 * some_objects is probably the cause of the error. &gt; I assume you are using an IDE (Eclipse, Netbeans, ...) Hell no! Using raw `mvn ...` commands from `bash`. I happen to use Emacs to code, but I don't even use `eshell` as my repl; I prefer a separate terminal application.
Gradle is an established mature way to go.
Gradle is an awesome tool and I highly recommend it. It has a lot of the sane-defaults you get from maven when you apply the appropriate plugins, but allows for a lot more ant/make-like flexibility with custom tasks (sure, you can write a plugin for maven, but that's 10x more work than writing a gradle task).
Wait... But then... Java SE is not sufficient after all is it? Otherwise you wouldn't need those frameworks on top of it...
Try to explain to your boss that you can use an HTML form and generate a PDF. Using a PDF for the actual entry is probably going to break in a lot of clients (e.g. tablets, screen readers), as well as be needlessly complicated. Using a normal web form to generate a PDF is both easier to do technically and more "compatible."
Check out "PDFBox Cookbook" on the left hand side under Documentation. There are some tutorials there to get you started, but to do advanced stuff you will have to dig around the API.
I have been looking for an open source project to work on in my free time. Could you message me more details about this project?
Just use Makefiles and call the command line utilites like javac, jar etc? Other Java developers you work with may not feel at home with a make-based solution, but if it's just for you and you don't need the dependency management of Maven I don't see a problem with it. Then again dependency management is a nice thing to have in a Java build system. Recently I have used ant together with [Ivy](http://ant.apache.org/ivy/). Ivy uses the Maven repositories without forcing you into Maven project structures. Then again if I'd start a project from scratch today I'd also give Gradle a shot like most of the people here are suggesting. 
+1 for SBT and Gradle
I prefer Maven, but no question, Gradle before Ant.
Go with Gradle if you don't want to use Maven before make or Ivy + anything.
Wish the title mentioned this included Omnifaces - as someone stuck developing in a portal environment (for the time being at least) it sadly rules this out, and worse reading the article reminded me of all the lovely helper stuff I'm missing out on.
Porbably not. Is it open sourced? If I recall, he changed the license after coming into some tax issues with his goverment. Who was using his software for free so He changed the license a few years back &gt;Versions of iText through 4.1.6/4.2.0 were released under the MPL and LGPL licenses, which allowed them to be used in closed-source software projects. At the end of 2009, with the release of iText 5, the license was switched to the Affero General Public License v3. Projects that do not want to provide their source code may either purchase a commercial license to iText 5 for an undisclosed price or continue using previous versions of iText under the more liberal license without any changes.[32][33] However, developer Bruno Lowagie has warned that versions prior to 5 may have included code that was not legally licensed under the LGPL, so that closed-source users of previous versions may be liable for copyright infringement.[34] The AGPL license is not compatible with the GPL license, although an AGPL library can be linked to a GPL program. (http://en.wikipedia.org/wiki/IText) 
The AGPL is viral like the GPL, with the additional clause that using it in a web application constitutes "distribution" for the purposes of the license. That is, you write some fancy web app and use AGPL code in it, the AGPL means that your code must also become AGPL, free software. So, in a nutshell, it's a very bad idea to use it unless you're working on another open source/free software product, and maybe even then, depending on your goals. If you're working on a government site, you should consult the appropriate lawyers. I have a hunch they will say no way unless you buy a license.
I am a little confused about your question its not really fair to compare operations from a sorted collection to an unsorted collection. Also did you actually mean array or did you mean ArrayList.
Version 2.1.7 yes ... After that there was a huge issue because of taxes due in Belgium because there were Ads on the website or something stupid. Stick with the old version 
Gradle is what the cool kids use these days. (I still like Maven)
I think he was just wondering why it's said that random insertion and deletion is less expensive in linked lists than it is in arrays.
the html uses &lt;per&gt; and for loops nested
Actually it isn't, depending on whether you need to preserve element order or not. First, to find the position of the element you need to remove, you have to search through all the elements up to that one. Then to remove it: * For a linked list, you can simply rewire the previous link to point to the next one, which is a cheap operation. You don't need to even look at the rest of the elements. * For an array which is expected to be exactly the right size for the data, you have to make a new array (since arrays have a fixed size after creation), containing all elements except the one removed, so you have to process the rest of the elements too, which was not necessary with the linked list. * For an array which does not need to be exactly the right size for the data because there is a separate variable for the element count (e.g., an ArrayList), you don't need to make a new array, but you still need to move all the subsequent elements of the list up by one position to cover the gap where the removed element was, so you still need to process the rest of the elements. * For an array which does not need to be exactly the right size for the data and also does not need to preserve order, you can simply move the last element over the top of the removed element. This is as fast as linked list removal.
5thing Gradle!
This is not java... 
Yeah, but if for some reason gradle isn't the right tool, then ant + ivy is a great second.
It should be noted that the "is it faster" is a solid "It depends". For example, if you are working with an ArrayList (not raw array) and you want to remove elements from the end of the list, the array list will be faster than the linked list because no copying will occur, no updating will happen, the value will be nulled out (I think? I'm not sure) and the size variable decremented (Really, the size variable just needs to be decremented to get the same effect). On the other hand, if you are going through the list and removing elements based on some criteria, then a linked list can be faster as it does less copying. That said, that depends on the size of the list. ArrayLists can still beat linked lists in this sort of an operation because of caching and faster access times. And of course, there is the entire access time. If a list is constantly being read but rarely modified, an ArrayList will beat the pants off of a linked list. If, however, the list is constantly being changed and mutated, then the question of which is faster depends completely on the access patterns. For 90% of applications, all of this stuff is pointless anyways without proper profiling and analysis. After all, usually (USUALLY) you aren't slow because you are using an arraylist or a linkedlist in the wrong place, you are usually slow because of some deeper algorithmic problem.
It's asking for a JavaScript program. JavaScript is not Java in the browser. It's a separate language. It's also not a good idea to post questions like this asking for folks to help you out on your homework or take home exams. Your instructor might be on reddit too, you know.
There is a java-help only subreddit: /r/javahelp, perhaps they'd be able to help you better?
Ok I just coded this up... My tip: Remember that you only can use one parameter so it must be the only variable mentioned in the question. After that think in terms of printing something as you fall down the recursion hole, and printing something else as you climb back up out of it.
It depends on the nature of your xml and json. There is an impedance mismatch and if you want to be able to round trip arbitrary documents, on one side or the other you'll end up with a tangled verbose mess.
How about you say what you actually want to do? Json and xml are not mapable 1:1, eg considering namespaces, attributes, dictionaries and native types.
What you're asking for isn't quite that simple. The following should get you 80% of the way though. The steps for this process are: 1. Generate an XSD from your XML file 2. Generate corresponding Java classes from your XSD (these Java classes represent your XML) 3. Use JAXB to read your XML file as Objects 4. Use Jackson to write out JSON More detail: - if you don't have an XSD use [Trang](https://code.google.com/p/jing-trang/downloads/list) to generate the XSD from your XML file (you want trang-20091111.zip) java -jar trang.jar -I xml -O xsd yourXmlFile.xml generatedXsdFile.xsd - now that you have generatedXsdFile.xsd you need to create Java classes that represent them xjc generatedXsdFile.xsd -p your.xml.package - now that you have Java classes read them in via JAXB File file = new File("/your/input/file.xml"); JAXBContext context = JAXBContext.newInstance(YourRootXmlElement.class); Unmarshaller unmarshaller = context.createUnmarshaller(); YourRootXmlElement rootObject = (YourRootXmlElement) unmarshaller.unmarshal(file); - now write it out to JSON using Jackson ObjectMapper mapper = new ObjectMapper(); AnnotationIntrospector introspector = new JaxbAnnotationIntrospector(); mapper.getSerializationConfig().setAnnotationIntrospector(introspector); mapper.writeValue(new File("/your/json/file.json"), rootObject); References you might find useful: http://www.mkyong.com/java/jaxb-hello-world-example/ https://github.com/FasterXML/jackson http://wiki.fasterxml.com/JacksonJAXBAnnotations
Unless you're building a very high volume website, or some other hi-thruput app, the performance question is negligible. Also depends on the size of these documents. You could introduce Groovy or some other JVM language to your app. It might seem overkill at first but I find jar-spoliation shrinks because a scripting language replaces many 3rd party java a utility Apis. Groovy can move between XML/json I think in one step. 
True, but use ISO typing and that issue falls away. While JSON can't handle the entire XML stack, if bet most XML messages don't really take advantage if much more than elements and attributes. But yeah, I can give 10 answers off the top of my head depending on what the app is supposed to do beyond transformation 
I'm not an expert but I'm fairly sure it has to do with the fact that 0.4 and 0.9 are approximated number values and not exact to begin with. And so when converted to machine code to complete the operation it's two approximate values being operated on and ends up resulting in an extremely minor error. Again I'm not an expert so I don't know what to do to help out with this. :(
Floating point error. Copied the following explanation "Floating point numbers use binary fractions and not decimal fractions. That is, you're used to decimal fractions made up of a tenths digit, a hundredths digit, a thousandths digit, etc. d1/10 + d2/100 + d3/1000 ... But floating point numbers are in binary, so they have a half digit, a quarter digit, an eighth digit, etc. d1/2 + d2/4 + d3/8 ... Many decimal fractions cannot be expressed exactly in any finite number of binary digits. For example, 1/2 is no problem: in decimal it's .5, in binary it's .1. 3/4 is decimal .75, binary .11. But 1/10 is a clean .1 in decimal, but in binary it's .0001100110011... with the "0011" repeating forever. As the computer can store only a finite number of digits, at some point this has to get chopped off, so the answer is not precise. When we convert back to decimal on output, we get a strange-looking number."
The short answer is that [some values cannot be represented exactly](http://en.wikipedia.org/wiki/Floating_point#Accuracy_problems) using a floating-point representation (using a `double` or `float`), so an approximation is sometimes used. If an approximate answer is "good enough" for your particular case, then just use `double`s, and when displaying the number, limit the number of digits shown. If you need an exact answer, then either change the way that you're representing values (for example: use `int`s to store the number of cents, rather than a `double` to store fractional dollar amounts), or use something like `java.math.BigDecimal`. 
Thank you, though I do not claim to understand. To me, these values are as exact as they can get. Do you think this depends on the CPU, maybe this would have not happened on someone else's computer? 
Sack up and tell him that PDFs are terrible for anything other than read only documents. Write a web form. Not hard.
If I use BigDecimals and do BigDecimal a1 = new BigDecimal(0.4); BigDecimal a2 = new BigDecimal(0.9); System.out.println(a1.multiply(a2)); The output gets even more bizarre (0.3600000000000000288657986402540705440524891334937065073303533017413935457540219431393779814243316650390625). All I need is a simple .36 The Windows calculator does it correctly. How does it do it?
Read the below posts. To you these numbers are exact but the way your computer handles them is anything but. This is a floating point arithmetic error, the bane of many a budding programmer. Common solutions include formatting the output to a certain number of decimal places or (more commonly in a production environment) treating floating points as integers instead. Ie, instead of saying you have $0.02, you have 0 dollars and 2 cents.
distribution though, if it stays internal its fine. edit: yep my misunderstanding :( Should definitely not use this!! 
You can do it manually by converting the decimals to integers and remembering how many decimal places there were, doing the multiplication of ints and then putting the decimal back in.
Thanks, I can work with that.
To add on to this, Java has its own solution for this problem, called [BigDecimal](http://docs.oracle.com/javase/7/docs/api/java/math/BigDecimal.html).
The Windows calculator isn't really "doing it correctly", not in the strict sense of things. The calculator just truncates and hides the decimal dust from you, but Java tries to convey as much information as it can to you.
&gt;Still, you don't create (too many) more threads then you have actual cores to do something with. You shouldn't use 2000 threads sure but you can also use more than *roughly* the same number of threads as cores.
Nope, not with AGPL. If it's *totally* internal, maybe, but I don't remember precisely. I would not risk it, personally.
MOXy is a JAXB impl that also supports JSON so you should be able to use it.
It's not really an error, it's just that floating point numbers can be/are imprecise by nature.
&gt; Do you think this depends on the CPU, maybe this would have not happened on someone else's computer? No, it's not a problem with your CPU. Your CPU is probably behaving exactly as mandated by the [IEEE 754 floating point standard](http://en.wikipedia.org/wiki/IEEE_floating_point). (Or doing something very similar.) Look at it this way... when you type in a program, you type "0.9", but those are just characters, they are not a number. You typed a "0", then a ".", then a "9". It is up to the computer language to assign meaning to those characters. Just like "for" and "while" and "println" don't mean anything on their own, putting "0.9" in your program only means what the programming language says it means. When you compile the program before you run it, the compiler sees that "0.9" and thinks, "Oh, because I am a Java compiler, I recognize that as what I call a 'floating point literal', so I must convert that into a floating point number." (A literal means a value you typed in as a part of your program, as opposed to a value that the computer came up with.) &gt; To me, these values are as exact as they can get. Well, you have to think in terms of what the [Java Language Specification](http://docs.oracle.com/javase/specs/jls/se7/html/index.html) says the string "0.9" is supposed to mean when it occurs inside a Java program. (Specifically [this section](http://docs.oracle.com/javase/specs/jls/se7/html/jls-3.html#jls-3.10.2).) Now, it *is possible* to make up a programming language that does what you are expecting with the numbers. However, most programming languages are meant to let you write programs that run efficiently on the computer. The main "problem" here is that the programming language doesn't use decimal like you do as a human, because it wants to use a number base that works for the computer. Imagine I told you to write out 1/3 in decimal. You'd have to write something like 0.33333, right? Which isn't exact. Because when you work in decimals, you can't cope with an exact value like 1/3. It's just not mathematically possible to write 1/3 exactly in decimal. This is exactly what's happening with the computer, except that you gave it a number in decimal and told it (because you used a `double`) to "write it down" in binary. (I say "write it down" because actually it is building it into your program in binary, so it needs it in a binary format.)
The US Postal Service uses iText to print the address slips and barcodes when you mail a package online. Right click on the PDF, go to Document Properties, and you'll see iText. So, yes, I think so. 
Are you by chance testing to see if d == 0.36? If so, don't. You have to test float equality with some tolerance: make sure the difference between your value and the desired quantity is less than some appropriately fixed number, like 0.00001 (or whatever makes sense as a *close to zero* value).
Yes, always use the String constructor for BigDecimals :) See e.g. http://docs.oracle.com/javase/6/docs/api/java/math/BigDecimal.html#BigDecimal(double)
Two tools that you will find very useful: 1. JSONML - I've used this before to generate JSON documents in JavaScript, which then get transformed quickly into XML on the server. 2. The [json.org reference implementation](https://github.com/douglascrockford/JSON-java) supports JSONML-XML and back.
&gt;But I find that some people gasp when I say I'm using Java/Spring... I feel like I should be going with Scala, and I'm actually doing some Scala contracting now and realizing I just don't like it.. Sounds like you are trying to please the hipster. Don't. It's a battle you can't win. I know of one company that is actually too large to get involved with this crap, but the development team changed their web framework 6 times over the last 4 years, constantly trying to be cool. It's a bit like the oatmeal's iPad comic (http://theoatmeal.com/comics/apple), but then instead of the latest iPad it's with the latest framework. Guy goes to conference, watched dazzling presentation about framework X. The crowd cheers, everybody talks about it. Back at the office he's sure, we have to use THAT framework. Next year, guy goes to same conference again. Not a word about X, but there's an infinitely inspiring presentation about framework Y. There's no silver bullet, but if anything ever came close to being one, it's Y. Everybody cheers again. People using X are even publicly called out to be dinosaurs and "not having seen the light yet". On the way back home guy quietly cries... but at the office he's sure. Throw out X, start using Y at once! No delay! Not even a year later, guy goes to another conference and ... [you can guess what happens] 
&gt; The Windows calculator does it correctly. How does it do it? My guess is it doesn't do it correctly, it just figures that when it gets 0.xx00000000000yy it can pretend that's 0.xx and nobody will complain.
He used "error" in the mathematical sense of the difference between intended and actual value, not in the sense of a mistake.
very well written. I'm guilty of #3: Suffering with project-specific StringUtils and #10: Misusing or misunderstanding dependency injection. Well for #10, I just never use it. I'm just not yet convinced I need it. 
&gt; always use I must disagree. BigDecimal(String) is delightfully convenient but bad for performance. 
Yes, just use Makefiles. I would stay away from all the non-deterministic dependency management like Maven repositories. *The* most important feature of a build system is determinism.
They are in legal trouble then unless they've open sourced their entire code base.
That's why you supply a startup script or similar that sets the correct JVM configuration. It's perfectly normal to increase the JVM memory.
True, though if you have that many concurrent IO operations going, there are often better ways to scale than to simply spawn more and more threads just to have them block. For instance, it's possible for a single thread (or small group of threads) to perform a `select()` on many sockets at once, and then return when just one of them is ready to read/write, at which point the read/write operation could be handed off to a worker pool to continue processing. &gt; the cost of IO is much higher than the cost of a context switch One could use that very argument to uphold my previous point: the cost of context switching is negligible compared to IO, so little is lost by breaking it up into multiple read/write operations using a model like the one I described above.
Well then you're not guilty of 10... not reaping the possible profits of using a certain technique is a completely different thing from misunderstanding and abusing it.
Ow, I didn't know about that, for me it always was more a "better safe than sorry"-thing. And apart from performance reasons you're also right, my "always" is incorrect, you also have constants like BigDecimal.ZERO and BigDecimal.ONE and you can of course use ints safely. 
I've seen reflection (ab)used to "metaprogram" Java. One example I remember from years ago was binding methods (identified by strings) to buttons, to make things "cleaner". So instead of this: JButton b1 = new JButton("Foo"); b1.addActionListener(new ActionListener() { public void actionPerformed(ActionEvent e) { onFoo(); } }); JButton b2 = new JButton("Bar"); b2.addActionListener(new ActionListener() { public void actionPerformed(ActionEvent e) { onBar(); } }); panel.add(b1); panel.add(b2); or this: JButton b1 = new JButton("Foo"); b1.addActionCommand("foo"); b1.addActionListener(this); JButton b2 = new JButton("Bar"); b2.addActionCommand("bar"); b2.addActionListener(this); panel.add(b1); panel.add(b2); // elsewhere public void actionPerformed(ActionEvent e) { String cmd = e.getActionCommand(); if("foo".equals(cmd)) { onFoo(); } else if("bar".equals(cmd)) { onBar(); } } you would do this: JButton b1 = new JButton("Foo"); b1.addActionListener(MySwingUtils.bind(this, "onFoo")); JButton b2 = new JButton("Bar"); b2.addActionListener(MySwingUtils.bind(this, "onBar")); panel.add(b1); panel.add(b2); public void onFoo() { // No args? Takes ActionEvent? Who knows! } public void onBar() { } I would love playing the game of "who uses this method?" and finding no results with find usages, and having to resort to find text like a savage. At least in Java 8 you can do this: JButton b1 = new JButton("Foo"); b1.addActionListener((ActionEvent ev) -&gt; doFoo()); JButton b2 = new JButton("Bar"); b2.addActionListener((ActionEvent ev) -&gt; doBar()); panel.add(b1); panel.add(b2); 
Correct, you test floating point with ranges not exact values.
most likely they do like everybody else: using an old version that is still under mpl/lgpl.
To add to what's already been said, search for "What Every Computer Scientist Should Know About Floating-Point Arithmetic". [Here's one copy of this document.](http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html)
Really nice post. 
Wouldn't be easier/more optimal to do something like: HashMap&lt;String,ActionListener&gt; actionMap = new HashMap&lt;String,ActionListener&gt;(); actionMap.put("doFoo", new ActionListener(){ @Override public void actionPerformed(ActionEvent e) { //doFoo }}); actionMap.put("doBar", new ActionListener(){ @Override public void actionPerformed(ActionEvent e) { //doBar }}); JButton b2 = new JButton("Bar"); b2.addActionListener(actionMap.get("doFoo")); JButton b1 = new JButton("Foo"); b2.addActionListener(actionMap.get("doBar")); Than to use your example? I always thought any reflection was going to be much slower because its less optimizations/predictions the jvm can make about the flow of the program. I do use reflection to do stuff but there are many ways to get the same functionality and make it much easier to debug.
I meant "safe" as in can I use iText without buying a license
Thankyou.
I've heard that PDFBox isn't that great of an alternative for processing PDF forms.......is there another alternative?
I'll try to contribute! This sounds fun! I'm currently in a java class at my university, and I'm still learning, but I'll apply what I know to here. It seems like it'll be a good learning experience
Now this is a surprising and interesting new use for Solr :))
First: there is nothing stopping you from using Spring MVC and Scala. The API may not be much scalaish, but otoh with Scala you may not have to use much of Spring API anyway. And if Spring MVC suits your needs just go for it. As hank said don't try to please the hipsters
You make a valid point, but he wasn't talking about bad exception handling logic. You're arguing a different point than he was addressing. =)
Why put a map between `addActionListener` and the `ActionListener` instance? If you're going through all the ceremony of creating the anonymous inner class, why bother with a middle man? It's an unnecessary map lookup for what can be specified directly. The purpose for using reflection in this case is to reduce boilerplate for a simple method binding to an action, not really for performance. In this case, constructing a UI, the overhead of reflection is minuscule. My problem with the approach is not because of overhead, but because it defeats static typing in Java.
Going off your example, I would have assumed you would have expected more than 1 button to use the doFoo method. Perhaps the buttons would be constructed in a variety of locations throughout different projects. For example, exit functionality to dispose of the current window. But we don't want dozens of different classes with different names for small functionality. The example reduces the lines of code and makes retrieval of the actionlisteners simple without using reflection. Maybe we have a method to for retrieval from the map that is public, otherwise we could assign them all to variables and make them public, but we can also do things like not initialize functionality unless it is used if we use a getter to retrieve from the hashmap instead. I just don't like using reflection in circumstances where it would make it appear that the methods weren't being used or couldn't be discovered through code analysis tools.
You dont need admin rights to install JDK and eclipse. Just: * download the compressed version of JDK (not the installer) * extract to a directory * create a JAVA_HOME enviroment variable (you can create only for your user i guess) * put JAVA_HOME on your PATH variable At this point you should be able to open a shell and type java -version and see the java running. Eclipse you can just download and execute once your PATH had been updated with java. 
You shouldn't use a map for that. There are better approaches to code reuse. You could promote the anonymous inner class to a real class or share the reference through a field or method. These are static, map keys are dynamic. You lose the benefit of the compiler being able to help you and reduce the effectiveness of tooling in IDEs. I also don't like this approach because it breaks static analysis, but I can understand why someone would want to do it, because anonymous inner class construction syntax is an incredibly clumsy way to wrap a simple method binding. Java 8 wraps SAM types nicely, though.
default could do default: return new BasicAnimal();
Yay, another advertisment-link to zeroturnaround from toomasr! \o/
Metaprogramming in Java always uses reflection. And it almost always breaks the ability to find references and detect unused code.
The problem is still the string switch because it turns what should be a compile time error into a runtime error. Sure in this simple example, it might be caught in development. Maybe. Code gets more complicated than this though, and even if you perfectly test all your code, your consumers may not. So why not catch the problem early? 
I disagree with many of these being pitfalls experienced developers fall into. 8 and 9, for example, are not just straightforward, but very symbolic of an *in*experienced programmer. 7 was the only item on this list that I thought made a good point from a development standpoint, specifically "A well-built application has a clear lifecycle of its main constructs." I think this is something that developers, including myself, don't think about nearly enough, but tracking down the starting point of an object can easily get needlessly frustrating.
The syntax for creating action listener objects sucks. It's extremely heavyweight. Especially, when all you want to do is have the button press call a method. I suck it up, because for me not breaking static analysis beats reducing boilerplate. At least Java 8 finally fixes this problem.
I think he gives too little leeway on 3. I'm not going to import all of apache commons instead of writing one string helper method; I also find Date's to be so cumbersome in Java, and so varied in practice, that there are many times your app does things so specifically, a DateUtils class is necessary. It's a good tip, I just think that every project that isn't using commons or guava either is too small to need it, or isn't done by experienced developers.
layman's terms?
Having concentrated on Java for several years now, I'm going to actually start a fairly large project on Go to hedge against Oracle's handling of the JVM.
Headfirst Java is *highly* recommended by almost everyone. Also try codingbat.
Right. I'm just pointing out the difficulty involved in "creat[ing] a stable, fast, and maintainable enterprise Java application WITHOUT using reflection".
Tsk, seems like someone stopped short on the reflection-abuse based refactoring, you've got a clear duplication of "Foo" and "Bar" in the button's label and the method name! public void doMagic(String godStrings...) { for (String godString : godStrings) { JButton button = new JButton(godString); button.addActionListener(MySwingUtils.bind(this, "on" + godString)); panel.add(button); } } public void setup() { doMagic("Foo", "Bar"); } Think about how much time you'll have saved when that panel needs to be expanded to 100 buttons! And how many developers who inherit the code will want to hunt you down and see you hung, drawn, and quartered!
Looks to me as though number 8 has a bigger problem throughout in that the obtained Discount object is never actually used, thereby making the call to get the object completely redundant in the first place. Of course the correct OOP way of doing things means that the bug's easier to track down and fix, so if I'm being generous maybe the author's subtly trying to make that point too...
You need dependency injection. Trust me. Give it a serious try. It has changed my coding style and I won't write anything without it now. It should be a part of the Java language IMO, not just the JEE spec, but every program should have it available.
What you have to remember is that floating point numbers on computers are variations of your_number = sng * ( a0 * 1 + a1 * 1/2 + a2 * 1/2^2 + a3 * 1/2^4 + ...+ an *1/2^n) * 2^(exp) where sng = +/-1, a0..an = 0/1, min_exponent &lt;= exp &lt;= max exponent. This... isn't the same as a real Real number. You have limitations. For example, this will never properly express 1/3. You can get close to 1/3, but not exactly. You can have even scarier violations of real numbers. For example, a+b = a. with Real numbers, b must be 0. But with floating point numbers, if a is sufficiently large, and b is sufficiently small, when you do a calculation, matching their exponents, you wind up having b' only having a non zero value at a100 for example. So the addition does nothing. One of the generic rules is never compare for equality with floating point numbers. Always do |a-b| &lt; epsilon, where epsilon is a properly small value. For example 1e-6 ( this is really dependent on task) But really, look at that previous post about reading: "What Every Computer Scientist Should Know About Floating-Point Arithmetic"
Can you explain a bit more, you want to see if it contains all the stuff around 0,1 and 2 and you don't care about what 0,1 or 2 are? I imagine you want to look into using regex anyway.
Oh-ho! A smart person is saying out loud that patterns/GOF should not be a mindless religion. Well, we'll see if he gets a job ever again...
what? can you re-word that. It kind of confused me.
lol
I am familiar with then and how to use them. I was just wondering if there was some sort of formatted string system I could use. 
did you search the subreddit? 
I never said it was
I have been reading some of the manual, reading stackOverflow entries, the tutorial on birt-exchange, the help in Eclipse, and Birt videos on YouTube. I was considering getting another detailed manual
I have BIRT: A FieldGuide...some of the features have already changed since the manual came out. I tried selecting a group, selecting properties and no "Group Editor" window came up like it does in the manual.
&gt; exceptioning 
I'm currently starting a new spring mvc app, and it doesn't really feel old to me compared to Play - it's also hard to argue that Play is lightweight. It seems to me to be just as much as a framework as Spring and others, the difference being that once you get the initial project boiler plate done, spring more or less stays out of my way. For more modern I'd look at something like Vert.x and Spray, but they didn't quite fit my needs this time round. 
I'm keeping an eye on Go and have really liked it in my light experimentation. Unfortunately this app needs to be Java to make best use of existing human resources. 
To be clear, I wasn't endorsing or recommending Go to anyone else at this point. I don't have enough information to even consider whether I could at some point say yea or nay.
You must be thinking of DI containers/frameworks. Since DI is a coding style, JavaSE programs can have it (as well as any other OO language) as long as the programmers use the practice. But I'm guessing what you meant is you want DI containers outside of Java apps. You can use e.g. Apache Weld in JavaSE programs. Do you just want something like Weld to come bundled with the SE JDK?
Too much code to post but can you speak further regarding ExecutorServices and Executors
http://docs.oracle.com/javase/tutorial/essential/concurrency/pools.html I'm on my phone, but essentially: ExecutorService e = Executors.newCachedThreadPool(); Thread t1 = new Thread(); Thread t2 = new Thread(); e.execute(t1); e.execute(t2); e.shutdown(); while(!e.isTerminated()) Thread.sleep(1000); Or whatever http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/Executor.html http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ExecutorService.html 
&gt; Testing private methods is simply wrong. Just test the public method that calls the private one. Remember: in no case you should expand your API with more public methods only because of unit tests. No, not testing your private methods just so you can be dogmatic about keeping them private is wrong. Mark those methods as protected or package private and put the unit tests in the same package name. That way you can test them too if you think it is appropriate.
"Other users," as I've had it explained to me, means people outside the corporation. In other words, if you use it internally for an app accessed only by your employees, you're fine. If it's exposed to parties other than the corporation (such as customer-facing apps), then you need to buy a license. 
I don't see anything terribly bad about writing your own *Util classes that wrap calls to the third-party libraries you use, because you get the ability to easily override parts that do not work exactly as you intend, and the work of migrating from apache.commons to Guava to next-great-think should be much easier. In theory. In practice I have only seen the #3 problem described in the article, so I can't say I have tried the wrapper approach in this context.
I'm referring to Maven downloading the dependencies from online repositories which are not under your direct control. That makes the build process non-deterministic, you have no guarantees what (if anything) comes out of it.
Try posting here: http://www.reddit.com/r/javahelp/
Trying to, 1 post every 10 minutes.
How would I go about checking the wins? I can't just make a counter and check for x4 of the same piece in a row or column, they need to be adjacent to each other.
You've got the right idea. Just loop through the pieces, and adjust your counter according to the following rules: * If the current piece is the same as the previous piece then increment the counter by 1 * If the current piece is different then reset the counter to 1 * If the current piece is not set then reset the counter to 0. If the counter every reaches 4, then you've got a win.
Do I need to store the value of the previous index in a variable to check it against the current one?
That's a valid approach.
There are few absolutes in software development, and this certainly isn't one, but as a rule of thumb I think it's valid to say that there is probably something wrong with the design, if you need to test implementation details of a unit. Perhaps the most common reason why I have seen this happen is, because people tend to create overly complex classes with various responsibilities, so testing them through the public interface becomes too complex a task. To fix this, you can extract some implementation details to separate classes and test them through their public interface. This not only improves testability, but (if done correctly) also can also help with coupling issues and readability of the code. So, not saying you're completely wrong, just that it's good idea to understand this kind of "rules" and reasoning behind them thoroughly before you start breaking them. I personally can't remember a single time when a need to test private functionality in code I've worked with wasn't solved better (from the end result quality if not schedule point of view) by rethinking the class responsibility division, but that doesn't mean there are no such cases.
What would cause this? I am using Eclipse for a java class. I have had this error for a while and get it whenever i open up a applet.
Are you perhaps suffering from a mild case of [Mojibake](http://en.wikipedia.org/wiki/Mojibake)?
It only affects Java though. I also reinstalled.
This is very useful, you can usually see peoples coding styles change over time as new or more efficient libraries are developed. But just remember as the person who committed the code might not be the person who developed it.
What this person stated is probably the easiest solution imho. MOXy makes mapping POJO's to JSON and vice versa as painless as possible.
This person is right. It's the same as using a bedsheet to haul huge rocks instead of using a wheelbarrow or a pickup truck. Yes, you can use the bed sheet to contain the rocks, but you risk tearing it when you drag it along the ground. You're using the bed sheet for a task that it can technically be used for, but you're going to run into a lot of problems. Do yourself, your boss, and your company a favor bybuding the right tools for the job. Create a simple web application.
I am trying to create a program that converts morse code into digits. So far, I have: import acm.program.*; public class MorseDecoder extends ConsoleProgram { //~ Instance/static variables ............................................. //~ Constructor ........................................................... // ---------------------------------------------------------- /** * Creates a new MorseDecoder object. */ public void run() { String morse = readLine("Please enter the morse code: "); for (int i = 0; i == morse.length(); i += 5) { } } } } I am confused as to how to use if statements inside the for loop to convert the morse code.
int counter = 0; for (int i = 0; i &lt; s.length(); i++) counter += 5; Warning: I haven't coded in java in months, but that should work
Parsing morse code consists of two parts: * Split the input into single letters in morse code (which may be multiple characters in your input), and * map the morse code letters to normal letters. Done.
I think you need to go read the question again, your goal doesn't match the title. While you are at it read the textbook too.
I just listed 4 ways maven grabs dependencies, 3 of which are under your complete control. Which makes everything you wrote pointless..... I.e. they would have to hack into your servers to backdoor your app. And saying your own remote repository is down breaks your build, would be the equivalent of saying your source repository is down so you can't build. That's why I said FUD.
I would divide each "bill" into its own method. This increases readability and simplifies your main. 
Well you could just go back to your Int division now i realize you are trying to get the numbers individually. but for the getting just a double entry from the user with out asking for one side then the next you could do this. String gas; System.out.println("Enter the gas bill "); Scanner scanGas = new Scanner(System.in); gas = scanGas.next(); int decimalPoint = gas.lastIndexOf('.'); String sDollars = gas.substring(0, decimalPoint); int iDollar = Integer.parseInt(sDollars); String sCents = gas.substring(decimalPoint+1); int iCents = Integer.parseInt(sCents); that should work on getting the dollar amount and cent amount separate 
The syntax for a method is: modifier returnValueType methodName(list of parameters) { //code } Here's an example: public class Bill { public void runPhoneBill() { //asks for input then calculates phone bill } public void runMiscBill() { //other code. } public static void main(String args[]) { Bill.runPhoneBill(); Bill.runMiscBill(); } } Methods help with the readability in that it divides up your code into reasonable portions. Writing everything in the main can be an eye sore, so methods make it easier to be able to come back years later and still be able to follow your code (but commenting also helps). Generally methods have a purpose and are clearly expressed in their name like calculateCost or printResult. When you write a method, the code isn't run until you call it. It is the exact same idea as when you create a Scanner Object and call the nextInt() method from the Scanner class. I hope this helps a little. 
/r/javahelp
"Hello world" is not the simplest program.
Any recommendations what could be simpler for beginners?
I also attempted test-driven development, and started with the following unit tests: [ControllerTest.java](http://pastebin.com/kvW3CtxA) [ParticleTestHappy.java](http://pastebin.com/K3TtkzJ7) [ParticleTestSad.java](http://pastebin.com/PRSrBYW5) If you have any critique of my testing methodology, I'd love to hear that too.
Catching and rethrowing core exceptions like NumberFormatException is a bit weird. You're better off declaring your own type of exception and throwing that.
*Controller* * Names aArgs and bArgs are misleading, as they don't communicate the distinction between String and String []. * Lines 21 and 22: Don't do redundant initialization of aArgs and bArgs (empty String). This way compiler keeps track that they actually get assigned. * Line 25: Is it intended behaviour to have the program throw an ArrayIndexOutOfBoundsException, if args length is 1? If not, then condition should be `args.length &gt; 1`. And preferably more in line with the intention: `args.length &gt;= 2`. * From the design point of view, it might be better to have the actual logic in separate method and the user interface (printing and reading input) in another (if not even in separate classes), which are invoked by main. This also helps with testing. * Line 36: Are the arguments planned to be input "within quotes"? If not, aArgsArray always contains a single item. * Lines 37 and 40: Inconsistent capitalizing of identifier. * Line 42: Introducing local variable `repulsion` doesn't add any readability value. * Line 55: If there are always exactly three properties, then you shouldn't be using an array, but rather a dedicated Properties class to represent them. This way you can get rid of some error checking, as it is done compile-time and also variables such as aMass become redundant. *Particle* * There is redundancy in the class comments. Think of which class is responsible of input ranges and validity and document that only once. * Line 18: *Upper bound* would be more concisely expressed as max(imum). Similarly lower bound could be called min(imum). This also communicates the inclusive range better. With that change, perhaps word order should be changed too, i.e. MAX_MASS instead of MASS_MAX. * Line 48: Why are you doing input validation twice? It's probably better to keep validateState (with perhaps less general method name, e.g. validateInputDataRanges), but then you could just delete lines 34 - 42. * Lines 55 and 59: Capitalized letters should separate words in names, i.e. getxPos should be getXPos. * Line 70: What is the value of local variable thatMass? `that.getMass()` is only marginally longer, but communicates the intention just as well and let's you see, what is actually happening there. * Line 71: Again redundant error handling. You've already established (twice), that each Particle is valid after its creation (and that doesn't change, as it is immutable), so there is no need to check it once again. * Line 85: Once again, redundant local variable. * Line 87: You can read `that.mass` directly. For consistency, either use `x.mass` or `x.getMass()` for both. Same goes for lines 96 and 97. * Lines 93 and 94: Redundant error handling again. * Line 102: Runtime exceptions shoulnd't be declared in the signature. You can use @throws Javadoc tag, if you want to document the unchecked exceptions thrown. * Line 114: It is a convention to name this kind of boolean methods with prefix is, so name isMassValid is perhaps a bit better than massIsValid.
Catching and rethrowing is probably not a good idea here, unless it's a requirement to have a custom message, but replacing NumberFormatException with custom exception type just makes it worse. If there is a perfect standard exception type, it should be used.