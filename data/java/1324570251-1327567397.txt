Also "Thinking in Java" by Bruce Eckel Meant for people with programming experience and the author is nice enough guy, who lets you download the electronic version for free. http://www.mindview.net/Books/TIJ/
http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=7103725 Update to 1.6.0_30.
I just wish they'd move FindBugs, PMD et al. to GitHub where people could practically send pull requests...
If your recursion was infinite, you'd get a 'StackOverflowError', not heap space exceptions. However, you could be recursing too deeply, causing superfluous data to be stored in memory, but not deeply enough to blow the stack. Heap space means you have too much data in memory. Are you storing everything in global variables or something? Do you let your non-essential data fall out of scope using local variables as appropriate? Otherwise, just increase the JVM heap size with the argument: -Xmx2048M [AwesomeLove's suggestion](http://www.reddit.com/r/java/comments/nmmmv/javalangoutofmemoryerror_java_heap_space_what_is/c3a9mnk) of circular links is also a good candidate to check. 
[This chart](http://mindprod.com/jgloss/ascii.html) may also help the OP understand the relationship between integers and chars. Column 2 has the integer values of chars listed in column 1. When cast a char to an integer, increase it's value, and then cast back to a char you cycle through the alphabet in the order listed.
You can try adding tracing (I like SLF4j with the log4j adapter) to try and figure out how were it's blowing up and how it's getting there.
thx 2 days full of rage and anger :) 
I think it's happening because calling a function recursively, as opposed to using a loop, can have huge memory overhead because the data never scopes out.
I'd rather have a tail-recursive function than an iterative function, but that's just my inner lispy nature taking hold. Doesn't Java handle tail-recursion optimization?
No.
Well, there you go, then! Don't listen to the functional programmer.
As a response to your edit, if you google on the themes "executorservice queue future callable", you'll get a bunch of tutorials on the subject of how to execute your restaurant-producing jobs in a thread pool. One that seemed reasonable from that Google search might be http://www.baptiste-wicht.com/2010/09/java-concurrency-part-7-executors-and-thread-pools/
&gt; Can anyone give me any ideas on how to implement multiple threads for a program that reads a sequential file? You won't need to create threads directly. Look at java.util.concurrent.*. You'll want to create an ExecutorService from the factory Executors. Your main thread will read from the file and create a Callable for each job, handing it to the ExecutorService. To effectively recurse, a Callable could submit another Callable job to the ExecutorService. To gather results, use an ExecutorCompletionService on the ExecutorService to grab the Futures of completed Callables. Edit: here's an example, the [main method here](https://raw.github.com/gist/1494076/29d732cab79eacf978f722c14dd61ae301e9e383/src/rumor/Launcher.java).
**Ctrl K** to search forward, **Ctrl Shift K** to search Backward, **Ctrl J** for incremental search, **Ctrl Shift G** for searching through references in workspace **CTRL+Shift+P** to jump to the matching bracket/parenthesis, **Ctrl Shift X** (selected text becomes UPPERCASE) similarly **CTRL+SHIFT+Y** selected text becomes LOWERCASE **Ctrl O** (Outline view), **Ctrl Shift E** (Open all active files in a non- modal screen), **Ctrl F6** (Navigate file last open) **Ctrl F8** (Navigate Perspective) **Ctrl Q** (Last edit location), **Ctrl L** (Go to line) **Ctrl / (Comment)** **Ctrl Shift /** (Multi line comment on) **Ctrl Shift \** (Multi line comment off) **Ctrl-.** Take you to the next error or warning line **Alt + shift + L** (extract variable), **Alt (Up Arrow)** ( move one line up), **Alt s r** to generate getters and setters **alt s v** to insert method signatures for overidden methods from superclass or interface **Alt (Up Arrow)** ( move one line up)(move one line Down), **Ctrl Alt Down/Up** (Copy line in a buffer(works synergically along with clipboard copy) *Note: You need to chk hkcmd.exe if Intel Graphics driver is active, or else it will catch this keystroke and invert your screen* 
Here is a hint: you will need to have a method in the class for each interface method in order for it to compile. Think about what it means to implement something. Is there another choice?
My first idea was abstract methods, but I'm not sure if that's the answer they'd be looking for (contextually it would make sense). My second idea, which I only just through of, was if a class implements an interface but also extends a superclass, if the superclass has the method that the interface requires... Maybe? If either one of these is the answer, my problem is that I simply don't know what they're looking for.
You can certainly create an abstract class, but I'm not sure that is what they are looking for. That is certainly useful if you intend the subclass to implement it. But what if you don't want to implement that method or haven't gotten around to it yet. Think about compile time vs. runtime.
To answer your second question, you can pass in an argument to the constructor of your class that implements Runnable, and store that as a class-scope variable which you can reference later. There is no way to pass in any arguments when calling run() - it has to be there already. 
If you haven't gotten around to it- my first idea would be a dummy method ({ return null; }). But I *think* that's not what they're looking for (since I assume they wouldn't want to teach me to leave public dummy methods in a class). Aside from that I really can't think of any obvious solutions. Either I'm missing something, or there's simply something I don't know. :|
Well, returning null might lead to unexpected behavior down the road. And what about for methods that return a primitive (boolean, int, etc)? Of course you will want to document that the method doesn't do anything, but can you do anything that will make it fail fast so that somebody using your code will know that they shouldn't use it?
I'm curious now, and the other guy hasn't responded for 12 minutes... Would you just implement it and raise a NotImplementedError or similar?
If you're referring to throwing an exception or anything like that, we haven't gotten there yet so I'm pretty sure that wouldn't be it. Past that, really I have no idea. :( Either I'm simply too tired, or it's something I simply don't know yet.
If you don't think it is exceptions, then I would say making the class abstract would be the correct way to go. They may be looking forward a bit. Just note that you will want to throw a subclass of RuntimeException, since throwing an Exception will mean you will need to change the interface and cause the caller to deal with it explicitly. You could use java.lang.UnsupportedOperationException, or extend it or give a descriptive message as to why it is unsupported (not yet implemented, won't implement). 
I think you guys are doing this the hard way. Eclipse has a Tomcat plugin where you can run it embedded in Eclipse and attach your Java Web Projects to it. All changes to your classes or WebContent resources are published automatically. If you start Tomcat in debug mode and set reloadable="false" in the server.xml you can make code changes in real-time without restarting anything. You will still have to restart however to pick up changes to class level information like fields or method signatures.
Thanks a ton for the help, and for avoiding giving straight up answers as well. [/r/java](/r/java) always baffles me with how helpful they are- and how quickly you seem to get answers. You guys rock!
I think you and he have given the two answers I was thinking of: throw an exception (esp. an UnsupportedOperationException) or make the class abstract. I can't imagine he'd get points off for knowing both of those options.
Even with the real advantage DVCS offer, it can indeed be tricky to get your team moving. Inertia is usually big and some teams/companies/organizations don't like change at all (in which case you either look for a job elsewhere or accept your self-chosen path). The key to convincing your team is clearly preparation. Research the DVCS, get up to speed in it so you can answer questions and deal with the usual fears. Offer to train other developers in using the DVCS etc. It might take a while, but in the end it is totally worth it. The whole process took like a year for our team, YMMV.
This! This is so useful.
I think you guys are missing one tiny point. Making the class abstract will make the class unusable. Now you could go to a smaller unit and just make that abstract and not the whole class and that would make the class usable while not implemented the piece you do not want to implement. Good exercise in trying to draw out answers here.
I can't believe I had not discovered this one, yet. Thank you and have an upvote!
Are you saying all abstract classes are unusable?!? They're not directly instantiable but that doesn't make them useless - they're used by sub-classes.
Programming is one of those things that's really tough to teach. You need to be mindful of what people already know, because there are definitely stepping stones in learning to code. A little bit like learning derivation in calculus. Teacher wants you to learn first principles first, but you already know the adaptations so can skip a bunch of work. Teacher can't mark you wrong, but they usually put explicit instructions in the question (solve this using first principles). In programming, they won't tell you what method to use (that's part of learning to code), so you can use what you feel is best. In this case, an exception would work best, and I guarantee some people in your class know about exceptions.
http://docs.oracle.com/javase/7/docs/api/java/beans/Introspector.html http://docs.oracle.com/javase/7/docs/api/java/lang/reflect/Proxy.html http://docs.oracle.com/javase/7/docs/api/java/lang/Class.html#getDeclaredFields%28%29 http://asm.ow2.org/ http://cglib.sourceforge.net/
The goal is to prevent the compiler error. Simply make the class abstract. If the goal was to build a useful implementation of the interface, you would have to implement the missing methods.
It's been said un the thread, you can create an abstract class (or just a class) with methods that throw an exception when you call them. Sometimes it actually makes sense to do a method that does nothing, depending on what you're trying to achieve. But when you start working on real world projects, that live for months or even years of maintenance and evolutions, you'll learn that compiler errors are good, they're your friend. They tell you when something needs to be fixed eight away rather than blow at your face during runtime (sometimes when a user is using it). Same goes for the method not implemented error: the compiler kindly tells you you forgot a method. If you get rid of the compiler error, you will discover that mistake much later. 
Fantastic! Thanks.
nice insight guys! ill just continue learning java then :D
I also prefer to develop Test-Driven code (using Visual Studio's unit test framework and Moq in C#). Are there any good testing frameworks in Eclipse that you know of?
You mean, like JUnit and Mockito? If you're a pro from C#, you'd better use Maven as your build tool, and use one of the simpler archetypes to build your first project. In, say, NetBeans and IDEA, it's as simple as create a new project -&gt; Maven project. That'll take care of your dependencies, and create a standard, idiomatic structure for where your code goes, where your tests go, and so on. While I use all three for different projects, IntelliJ IDEA is currently probably the IDE you'd want to start with. If you create a Maven project, you'll be able to easily switch IDEs later, if you wish, since the project structure will be Maven standard, which they all can use, with Eclipse requiring a separate plugin.
Thanks, that sounds like a good place to start. I'll have to investigate the different IDE choices more. I've heard of IntelliJ, but that's about it. I'm not certain yet what our customers are going to need for a project structure, but if Maven is something all IDE's can use, that's great.
Seeing as you all helped me earlier on today, I thought I'd let you know how it went. The Head of IS popped in, I suggested using a different package like GIT and he's going to look into it! We also as a byproduct managed to get Linux development boxes as well. So I'm getting regarded as a bit of a messiah at the moment... :D Edit: I also linked them here so they could read all your reasons. So say Hi! :)
* Debug statement by statement rather than line by line. * Allow easy typing in of expressions. There's a "Display" window for this, but it could do with improving, such as adding a CLI-like interface to it. * Add "inspectors" for common data types, e.g. Strings, collections, etc to easily visualize them. It's great seeing the internal structure of a String, but I don't want to see that; I just want to see the String's contents. 
I don't know about NetBeans, but Eclipse allows you to trigger a breakpoint on exception.
But the OpenJDK sucks immensely. It can't run Minecraft. :&lt;
The question's author was probably fishing for 'abstract', but I don't think that's the best answer, nuance-wise. I'd say just "delete the `implements` clause" -- because your class *doesn't* implement it. Sure, making the class abstract will also make the compiler error go away, but abstract tends to carry extra meaning: "this class is built *only* for subclassing; you can't make any instances of this class directly" (wikipedia "the composite pattern"). (Also, abstract classes can be used to share code -- whereas interfaces are used to share functionality.) So in general, I'd just remove the 'implements' rather than make it abstract, if I didn't have one of those meanings in mind.) 
IntelliJ IDEA. Just learn to use it properly.
O'Reilly "Head First Java" (2nd Edition, Dec.2007) is the book that gave me my "Ah-ha" moment with OOP. Simple to follow, written humorously. I flicked between that and Ivor Horton's "Beginning Java" (2011). Best of luck.
The Head start Into Java book starts out right away into OOP and has some of the best, easiest to understand explanations for beginners I've seen.
Your SHIFT key is broken. OOP is actually pretty simple once you have the "ah-ha!" moment. If you know C, you'd be familiar with a struct. Now imagine if you could add functions to a struct. That's basically what an Object is. Now, instead of calling functions and passing structs as arguments, you pass structs around and can call functions "in them" to do stuff. If you really want to learn Object-Oriented programming, read this: http://pharobyexample.org/ and the software is at http://www.pharo-project.org/. It is a programming language called "Smalltalk", and it is a million (*) times easier than C to use. (*) Orders of magnitude are approximate. 
Head First Java and Head First Design Patterns are so full of a-ha!s 
What kinds of application domains are you familiar with, in the C world? I would find OO applications from those same domains, and compare the way the problems are broken down.
Some might have heard of exceptions (I'm guessing &lt;10 out of 150+), but the majority definitely won't have. We started the topic of java about a month ago with students being expected to have no prior knowledge of or experience with programming aside from some basic groundwork in PHP in the previous semester. With that said, this was one of the bonus assignments for extra points, it's not entirely impossible that they'd expect us to use something that hadn't been explicitly taught to us yet.
They are not instantiable. They cannot be used at runtime as is, so they must be subclassed. What I was trying to get at is you can just make a method abstract and have the whole rest of the class be instantiable, usable and ready to rock and roll as is. The problem is I was try not to spell it out and just lead the OP to the answer, and since it has been hours now, I am Ok with just saying it.
You don't need to read anything. OOP is easy. They just use different words for concepts you already know. You have the idea of an 'object', which is a structure that contains various variables. Only they call them 'members' or instead of variables. So in C you have a variable that is specific to your whole program or a particular function, in Java you have a variable that is specific to a particular object. Objects can also have their own functions, called 'methods'. The functions of an object usually only apply to its own variables. You have a 'class', which is just a definition of an object - a blueprint for what the variable names and types of data within an object will be, and a definition of the functions of that object (just like a C program, right?). You make an 'instance' of an object from a class blueprint. You can make multiple object instances from the same class. They all have their own set of variables and their functions apply only to their own data (usually). Objects interact with one another and with main loop of the program they're created in. You can almost think of them as mini-programs within your program. There you go, that's the basic idea of OOP in a nutshell. If you want a good overview, I highly recommend [the MIT 6.00 lectures](http://www.youtube.com/watch?v=k6U-i4gXkLM&amp;hd=1). Don't do the work, just watch the lectures. You don't need to understand Python. They helped me 'get it' when I was starting out. Good luck.
&gt; What I was trying to get at is you can just make a method abstract and have the whole rest of the class be instantiable, usable and ready to rock and roll as is. Not in java you can't. From [the docs](http://docs.oracle.com/javase/tutorial/java/IandI/abstract.html): &gt;If a class includes abstract methods, the class itself must be declared abstract Which makes sense. How could you instantiate a class that has an abstract method. What would it do when you called it?
As far as i can see the OP got the answer with his/her first reply - use abstract methods.
http://www.youtube.com/watch?v=Hl-zzrqQoSE
I'm not sure if that's possible. I have yet to encounter many five-year-old programmers.
The Head Start book is most suitable if you want to learn like you're 5.
&gt; OOP is actually pretty simple once you have the "ah-ha!" moment. A thousand times this. When I started computer science I really couldn't wrap my head around it for quite some time. Just stay persistent, keep on reading and try to remember stuff even though you don't fully understand it. I guarantee you that the famous "ah-ha!" moment will come and everything you've read before will fall in to place.
I upvoted you, because for some reason a group on this board downvote requests for help. We all have to start somewhere Guys.
I've managed to teach my 7-year-old some fundamentals of programming, but 5 is stretching it.
thanks man, the first person who deleted their reddit name fixed the problem, in case anyone wonders, I needed to flush the outputstream and simply close it, and presto. 
Now work on closures.
Here are some [configuration settings](http://www.javagyan.com/useful-tips/usingeclipseeffectively) and [keyboard shortcuts](http://www.javagyan.com/useful-tips/EclipseKeyboardShortcuts) and other [tips](http://www.javagyan.com/useful-tips/hottipsoneclipse) worth reading.
http://sites.google.com/site/gson/streaming
Daniel Yiang's Introduction to Java Programming is excellent.
Since your next questions were likely to be: where do I put my unit tests, and how do I run them, I skipped ahead one beat.
Imagine you're living in 1995 and go from there. java.lang.model is better than C#'s equivalent though.
College
When I was 5, we did [BASIC](http://www.rarityguide.com/articles/content_images/1/academyfreshman/list1.gif) on the [Commodore PET](http://www.commodore.ca/products/pet/commodore_pet.htm). And we liked it! Kids these days .... /me shakes a fist in the air
&gt; O'Reilly "Head First Java" Came here to say this. I learned quite a bit from this book as did a colleague of mine.
I remember in college I took an intro to java and it pretty much went [like this](http://memedepot.com/uploads/1000/1148_1253230725640.jpg). I then took the same course again, not even knowing it at first (I even bought a book I already had!) several years later, and it was not a problem for me then. OO took a bit for me to grasp, but once I got it I had that "ah-ha!" moment.
I bought the desing patterns for a cours at univeristy, clearly it was too advanced, and I dropped the class. I started to study at a business school - business analyst course.
Think of programs as conversations (messages) between actors, and each actor has their own typical way of reacting/responding to messages. 
is that the book which uses comic sans serif font? (i'm serious)
Head First Design Patterns has the better cover.
on a different note, kathy sierra's(creator of the head first series) podcast titled 'how to kick ass' on itconversations, was awesome. informative and motivational. 
Not too keen on this style of blogging, presenting a specific problem and elaborating on a solution, not providing any real insight. Something which takes a more general approach to the advantages/benefits of using Jackson for processing JSON would have been a better read. There are plenty of SO questions re: Jackson which would help improve understanding.
I can't remember. I'd have to check. It wouldn't surprise me if it uses it on some of the side bar stuff. It uses lots of cutesy jokes and drawings and cartoons. I'd be surprised if they used it for the main text of the book. Comic sans doesn't burn my flesh like it apparently does to so many other people so I generally don't notice it.
Your smart, informative, and relevant comment is certainly a different note than my dumb comment.
While you have some point there, I would say that OOP is in practice much more complex concept to get than just understanding objects are structs with functions. That is basically the (language agnostic) syntactic level of OOP understanding, which is not nearly enough when doing actual programming. I'd say I've had several critical a-ha moments after acquiring said syntactic understanding; first when reading about certain key design patterns, then when critically thinking about dependency directions, especially understanding dependency inversion principle gave some insight. Some languages (e.g. Smalltalk) gave some further understanding and reading about OOP principles and patterns have strengthened the understanding even more. Head First Design Patterns mentioned earlier in thread is a very good book to help understand OOP beyond basics, as is Martin's Agile Software Development, Principles, Patterns, and Practices (even if you dismiss the agile side of the book). This is not to discourage OOP newcomers, just to bring up that "getting OOP" is not a boolean flag, it's more like a long process of learning and understanding.
Try out Lynda.com I'm doing some of the classes there while on break.
no, i meant on a note different than OOP/Java. The podcast is about how to get world class at something.. btw, i liked the hfdp cover too ..!!
I found using the Jython repl or possibly jruby (either is fine) is the best way to learn the API. Noodling around and getting realtime feedback is invaluable. You can get used swing books for pretty cheap. Best singular book is jfc tutorial by the women. I wish they would write more books. I'd follow it up with filthy rich clients.
I'm not sure what you are looking for, but I have been going over the one at oracle: http://docs.oracle.com/javase/tutorial/uiswing (I hope I transcribed that from my work desktop to my phone correctly). In the past I have mainly just used a GUI builder and looked up specific items as needed ( or asked here when I couldn't find the answer), but I am trying to do some more involved things with my home project GUIs, so I have also been looking for good references. So far, the above is probably the best I have found. Oh also there are tons of packages out there for things like visually displaying and modifying graphs (the nodes and vertices type). I mention that one just because that is something I need to do and just found a nice package that ( I think) will make things way easier.
Lesson 1 is free: it is Java not JAVA. 
Noob here - To me OOP is seems kind of like Rold Playing Games, where classes are like distinct kinds of characters (elf, wizard), and any specific instance of the character could also have their abilities customzied (level up, colors changed, bearded wizard versus hatted wizard) and their actions complete things (steal gold, swing hammer). In a program, you accomplish whatever task it is (calculating temperature conversions) using these distinct wizards and knights doing different tasks for you. I'm NOT familiar with procedural programs, but I *think* a procedural program is more like one wizard that incites a bunch of spells while doing a task, instead of a variety of characters working together to do a task. 
&gt; the immense mass of bad java developers who couldn't code in harder languages That's exactly what I meant, to be honest. Sorry for any misunderstanding... it wouldn't fit in the memegenerator textbox otherwise. :P
Explain what you've tried and what's failing. I'm guessing you want to run it from command line (cmd).. if so this is how: Make sure the directory "C:\.. etc" is changed to where your file is. Then type: javac name.java (obviously to whatever your .java is called. And then to run it just type: java name Let me know if you've got it yet :)
well heres the thing... 1) i want to be able to run it in java, its a hello world thing. 2) when i put that into my command line it says "javac is not recognised :(
im following this tut but i cant do the thing which it asks me to put javac into command line? http://docs.oracle.com/javase/tutorial/getStarted/cupojava/win32.html
It's not the way you're compiling it. Make sure you have the JDK installed which you can get from [here](http://www.oracle.com/technetwork/java/javase/downloads/index.html) and then you have to change your environment variables.
Nope, just some ideas of what I could design. Although I have a request now :D
Step 1: Download Eclipse IDE: www.eclipse.org Step 2: Use Eclispe Step 3: ??? Step 4: Profit.
Check this for the file extension handling. https://www.google.com/#q=how+to+change+a+file+extension
You need to look up your "Environment Variables" (either use Vista/7 start menu search, or go to Computer-&gt;Advanced Settings-&gt;Advanced tab-&gt;Environment variables). You should see "PATH" somewhere in user variables. edit it, and add something like ";C:\Program Files\Java\jdk1.6.0_23\bin" to it. The entries in there are seperated with ';'. The path should lead to where your JDK is installed. Then you'll be able to run java commands in command prompt. Or check [this part](http://docs.oracle.com/javase/7/docs/webnotes/install/windows/jdk-installation-windows.html#path) of your tutorial.
http://zetcode.com/tutorials/javaswingtutorial/ Really easy
I think you misunderstand implicit types.
YOu can try java for kids, it's free http://myflex.org/books/java4kids/java4kids.htm
yeah you're right I was thinking of implicitly set variables/objects. My mistake.
This is not how we ask questions. 1. In the title, give us a summary of what your problem is. "Compiling Question" would be fine. Your title is useless. 2. We need a better description of what you've done and what is happening. 3. You can use \` (next to 1) to make `monospace types`. Also, you can put 4 spaces at the start of a line to make the whole line that way. Now, compiling, where is your problem? 1. Can you open a command prompt and get to the right folder? 1. Did you set up your path? if you type `javac` what happens? 2. If that succeeds (for instance `javac Main.java`) does `java Main` work? Make sure you use the same casing both in the classname, the filenames, and all the commands.
A few things are amiss with your code: --- 1\. Never manipulate Swing components from outside the event dispatch thread. Swing is not designed to be used from multiple threads, and doing so is likely to cause problems. Wrap all of your GUI-manipulating code in an `java.awt.EventQueue.invokeAndWait` or `java.awt.EventQueue.invokeLater` call. The exception, of course, is code that's already running on the event dispatch thread, like event listeners. --- 2\. Don't use a separate thread to schedule animation frames. You *can,* as long as you use the `EventQueue` as described above, but it's inefficient and not useful. Use `javax.swing.Timer` for this. --- 3\. Don't `setVisible(true)` until you've finished adding components and otherwise initializing your window. The `setVisible` call is when Swing actually does the layout and first puts the window on the screen, so initialization will be slower and your window will probably flicker if you `setVisible(true)` it before you're finished initializing it. In your case, `setVisible(true)` should appear right before the `for` loop (or before starting its `Timer`).
Understanding them as Structs with functions lets you get your foot in the door and start programming OO at a basic level. As he programs more, he'll get more refined and reach these other a-has.
point 3 fixed the visible problem, but I don't know how to use the other methods/calls (i'm new to using eclipse). Could you give me an explanation of what you mean by using those classes?
MAR http://en.wikipedia.org/wiki/Math johnny DEPP
thenewboston.com This guy gets into some basic GUI work using Swing
He has alot of good tutorials on java such as basic java intermediate java and game development I often link to him as well.
Sadly his game development tutorials got cut short. So hard to find good Java game tutorials.
I would recommend posting these types of questions on stackoverflow, so at least the person helping you can get something (?) out of it. Not surprisingly, reddit is awesome and you did get some help here.
Why would you want to learn Swing? Why not an RCP framework like SWT? Not trying to be a dick, just curious.
For more information, please consult the Javadoc for the mentioned classes and methods.
Some of these are difficult some are easy. Right now Im currently stuck on one of the new ones #123
If you want to use Swing, I would highly recommend looking into using Groovy and its SwingBuilder DSL. It allows you to build your GUI in a more declarative way, which is much more elegant and less verbose than the normal way. Of course you'll still need to be familiar with the toolkit itself, but I don't know which tutorials are particulairly good.
well its fixed now so...
So, next time you know what to do.
Or anything else, for that matter. I can't run PyCharm on it, either. On the one hand, I hate that the distros are doing this, but on the other hand I understand why.
Yeah. I know they want to be totally open source and all, but this really isn't the way to do it.
Looks like a copy of http://projecteuler.net/problems to me, what's different about this one?
http://codingbat.com/ An easier all set with online compiler
I could be wrong, but the later ones seem to be significantly easier than the newer Euler problems, and it seems to be less popular.
You can use the Quick fix in the problem view to fix several similiar problems (like implementing an interface)
**Alt + Down/Up** - Move current line to line above/below
I don't get it
call invalidate() on the component to cause it to be redrawn asap. Regarding your second question, just make the statusTextPanel a class field. (i.e. not a local var)
You know nothing, John Snow!
to much AsoIF that night :p
There's a ton of various tools for handling XML. What specifically do you want to accomplish?
The JVM is, in fact, a pretty amazing feat of software engineering and - if not the, then one of - the fastest virtual machines out there. There's no way the JVM is what it's holding Java back :).
&gt;Release 11.0 was released on December XXX, 2011. Uhh
http://repo1.maven.org/maven2/com/google/guava/guava/11.0/
I had reformat everything on save turned on briefly but turned it back off because of the huge diffs that resulted. That can create a major headaches when trying to do things like branch merges later. Didn't even know about the only-edited-lines option, thanks for pointing that out.
Apache Karaf is a small OSGi based runtime which provides a lightweight container onto which various components and applications can be deployed. If you're wondering what OSGi is, then please see the description from http://www.osgi.org/About/Technology: "OSGi technology is the dynamic module system for Java™. The OSGi Service Platform provides functionality to Java that makes Java the premier environment for software integration and thus for development. Java provides the portability that is required to support products on many different platforms. The OSGi technology provides the standardized primitives that allow applications to be constructed from small, reusable and collaborative components. These components can be composed into an application and deployed." This release of Apache Karaf is based off of the 2.2.x series branch, representing an update to Apache Karaf 2.2.4. It contains bug fixes identified in the prior release, and introduces improvements including; multiple JAAS support improvements, better support for Linux systems with certain versions of libc, SCP support, and demos for extending Karaf's console commands and using Karaf Archives (KARs). Several dependencies were also updated, bringing Pax Web to version 1.0.8, Jetty to 7.5.4.v20111024, and Jasypt to 1.8. 
I want to use xsd for validation, but I also want to use something a little more advanced than XPath for parsing.
&gt; then do Tree.updateUI(). I guess you probably need DefaultTreeModel.reload() + tree.repaint() It should be called after model/node change to update some cached tree info and update its view. http://docs.oracle.com/javase/7/docs/api/javax/swing/tree/DefaultTreeModel.html#reload%28javax.swing.tree.TreeNode%29
Wow, this made my day. I answered the StackOverflow question, so proud to see it linked on reddit. Thanks! Note that while I'd still choose Guava over Apache Commons any day, because of the library's awesomeness, Apache Commons 3.x was released a few months ago, with many improvements, adding generics and other Java 5 features...
Why not use the autogenerated classes as data transfer objects, and implement your logic elsewhere?
Thanks. I eventually got it. Sometimes java comes really easy and other times it's like I just get stuck!
This is simpler and works. The GridBagLayout should be taken out the back and shot through the head... import java.awt.*; import javax.swing.*; public class ScrollTest extends JFrame { public static void main(String[] args) { new ScrollTest(); } ScrollTest(){ JPanel panel = new JPanel(); JButton nf = new JButton("New File"); JButton save = new JButton("Save"); JButton load = new JButton("Load"); JTextArea text = new JTextArea(); JScrollPane scroll = new JScrollPane(text); setResizable(false); setSize(600, 500); add(panel); setTitle("JTextEditor"); setDefaultCloseOperation(EXIT_ON_CLOSE); panel.setLayout(new BorderLayout()); JPanel buttonPanel = new JPanel(); buttonPanel.add(save); buttonPanel.add(load); buttonPanel.add(nf); getContentPane().setLayout(new BorderLayout()); getContentPane().add(scroll, BorderLayout.CENTER); getContentPane().add(buttonPanel, BorderLayout.SOUTH); setVisible(true); show(); } }
thanks dude, you are my new god of the minute :)
~~..one teensy weensy problem though...the buttons don't do any thing anymore :(~~ nm, fixed
they didn't before :p
yeah...realized that after like 5 minutes :)
It would create more coupling in the system. Also it would be less elegant. It had already been suggested to me as an alternative, and I feel that it is so ass backwards to violate the basic principles of software design just so that you can get the functionality of a tool that will validate/generate your data. It seems to me like there should be a better way.
Would it even be possible? Since Java runs in a VM, it can't hook directly into the operating system?
Hey, you could use java.awt.robot and the capturescreen method (check API) for capturing many screenshots, thus creating a "movie". Hope it helps
Last I looked into SWT, it is more like C style programming than java. I was not a fan of the programming style. Also, it required different libraries for different platforms. At my last company we had to support obscure platforms like AIX and MPRAS which did were not supported by SWT. 
Performance wise, Jackson kicks GSONs ass: http://www.cowtowncoder.com/blog/archives/2011/01/entry_437.html
If you mean event handlers...I dunno I wouldn't call it C style, there are a lot of anonymous implementations for handlers, etc. AIX actually has an SWT binary, I don't think MPRAS does though. Anyway, I've implemented large scale java apps in SWT/RCP and they were great. The ecosystem is very mature and you get everything that eclipse has for free. This is huge: Dockable windows, a plugin infrastructure, awesome native widgets, editors, all sorts of stuff....I could never go back to swing.
There is a problem here. Whenever a GUI component will not refresh, the answer is always updateUI(), repaint(), reload(). It is not a good answer. The tree was not working, so I am concentrating on a table in another app. I have exactly the same problem with a JTable. Using System.out.printlns, I can see the following is happening. The code to update the data runs, the data is correctly updated. The following are attempts to update the display from the TableModel this.fireTableDataChanged(); this.fireTableStructureChanged(); this.fireTableChanged(new TableModelEvent(this)); fireTableRowsUpdated(1,10); newDataAvailable(new TableModelEvent(this)) ; for (TableModelListener listener : listeners) { System.out.println("Firing off an event to update the display to " +listener.toString() ); fireTableChanged(new TableModelEvent(this)); } Any ONE of these SHOULD work, NONE of them DO work. And yes, I have tried DefaultTableModel - should work automatically, doesn't I have tried DefaultTableModel newDataAvailable, insertRows etc I have tried AbstractTableModel fire TableDataChanged. I have tried firing off to each added listener in turn (and the console output tells me that the one and only listener is a JTable, and there i only one JTable in my source code) I can confirm this, because the table does not ask the model for data until is has been resized, or clicked on by the user. Only after some UI interaction does the table ask for data to fill the display newTableModel.getValueAt newTableModel.getValueAt newTableModel.getValueAt newTableModel.getValueAt newTableModel.getValueAt newTableModel.getValueAt newTableModel.getValueAt newTableModel.getValueAt So calling the JTable update/repait.invalidate seems the only answer - but it should not be so. Jtable asks the TableModel when it needs data. If I am in the TableModel, I have no reference back to the JTable - and supplying it creates all kinds of Swing thread dangers, breaks the Java design (because it's circumventing rather than using ) the JTable and TableModel interfaces. It sucks balls, and it sucks them hard. 4 very long days reading and trying, even rebuilding from scratch, and this does NOT work as advertised. So lets's get the solution here. I have expended best efforts, and a lot of time on this, and one of you has faced this (it's a common problem, google it) but no-one has the solution, only work-arounds formtheir particular circumstances. 
I've done this. It is incredibly slow, at least the way I did it (I was just dicking around so I am not an expert). My framerate was one, because the robot was taking full resolution images thirty times a second and saving them. I dunno. It has merit, but needs to be worked on by a pro.
I have an answer that fits nearly every case I've seen. It's very tempting to override the addListener method, but if you do, the internal default plumbing gets screwed up. The internal listenerlist remains unpopulated. So you fire off an event to nobody. Thanks for helping out - it's appreciated.
I have an answer that fits nearly every case I've seen. It's very tempting to override the addListener method, but if you do, the internal default plumbing gets screwed up. The internal listenerlist remains unpopulated. So you fire off an event to nobody. Thanks for helping out - it's appreciated.
Here is a link explaining the idea: seems reasonable http://stackoverflow.com/questions/6236119/how-to-develop-screen-capture-to-video-application
Have you run the tests on any other machines? Is there more info on the methodology, JITted library code sizes, and so on?
Good questions for practice. I also compiled some programming questions mostly asked in interview: http://javarevisited.blogspot.com/2011/06/top-programming-interview-questions.html. Only problem with these questions I see is they don't expose design ability or real world problem like designing ATM or traffic signal. may be those can be categories as software design questions but I think those are also programming.
Not my blog, just one I found a while back that actually did tests. I'd love to see more people do more tests, if you know of any, that'd be great to see.
32 points and no comment? :) Just finished watching the video, I found it really informative. As someone that has never really had to worry about memory usage in the JVM, it was a nice introduction to some of the basics of the memory layout of the JVM, and talking about different garbage collectors. Really nice presentation.
Data is not sent as one atomic operation, it is streamed - hence the loops, which collect the data until there is none left to read. Could you post your full code on pastebin?
It looks like the printwriter is not flushing on the server at out.write(REQUESTUSERNAME) because you are not feeding it a new line character (\n). use out.println(REQUESTUSERNAME) instead, since it will automaticaly flush, or if you dont want to include a newline character, just force it to flush with out.flush()
http://pastebin.com/4Ub87LV1 - server http://pastebin.com/bNq2zFEA - client NetCodes is a simple interface with some constants
This worked! Which is kind of odd, since the PrintWriter constructor takes an autoFlush parameter, which is set to true...
the automatic flushing only works when the newline character is found in the stream, hence which is why println works :)
Ah, it is slowly starting to make sense now.
&gt; This release of Apache Karaf is based off of the 2.2.x series branch, representing an update to Apache Karaf 2.2.4. I couldn't have imagined a more verbose way to simply state "This is Apache Karaf 2.2.5." :-)
As usual, posts with titles that are yes/no questions are answered "NO".
Very misleading title, which is unfortunate, because the article explains rather correctly how this move is set to reinforce the viability of the OpenJDK open source project, and why this is a good idea.
Do you have any performance/resource metrics comparing it to Spring's OSGi container?
And because Oracle is contributing to OpenJDK and implementing very nice features like closures, I have to say that Oracle is really doing some excellent service to the Java community.
Old Java version always turns into zombie: http://www.oracle.com/technetwork/java/eol-135779.html
Here is the console after a few tries http://imgur.com/weuKK I would like the randomNumber to change every time you play the game so it could be infinite, can you help me a little bit then I could try figure the rest out?
In other words, you'd like to set a new random value to the ``randomNumber`` variable, after printing out the answers? Find the place where the value is first set, and find the place in your materials where "how to set the value of a variable" is explained.
Well, you need to to put the randomizer before you ask for the number, then. Like: while (inputNumber != randomNumber) { out.println(); out.println("Wrong answer,"); out.println("Try again..."); int randomNumber = new Random().nextInt(10) + 1; out.print("Enter an int from 1 to 10: "); inputNumber = keyboard.nextInt(); numGuesses++; out.print("The answer was " + randomNumber); out.println(", You answered " + inputNumber); } That should work.
When I enter: int randomNumber = new Random().nextInt(10) + 1; it comes up with the error: Duplicate local variable randomNumber 
Whoops, remove the "int", so the line is just "randomNumber = new Random().nextInt(10) + 1;" (without quotes).
Thanks, that works perfectly now it is almost infinite :)
Interesting forum as most of the posts just appear to be people who should have studied, or done their homework sooner. 
You can exclude resources from the Ctrl-Shift-r search by marking them as "derived". In Package Explorer, right-click a folder or file and check Derived under the Attributes section.
I didn't really like "Head First -" books, as they are too "humorous" for a programming book
Of course. Better there than here.
I'm glad I watched that presentation, it's should help me justify my quirks when I knew something was good but couldn't explain it. I have a teammate that keeps on trying to do his own memory management...
It is possible. By default though the JVM will have locked off this functionality. So you would need to modify the java security policy file. http://docs.oracle.com/javase/1.5.0/docs/guide/security/PolicyFiles.html
If a subreddit consists entirely of people who didn't do their homework who answers questions? EDIT: grammar
I sorry but I don't have any performance/resource metrics that I can site at the moment comparing OSGi containers (i'd prefer to be able to offer you hard third party data than subjective 'i like this process more' style comparisons) :( Apache Karaf is a runtime environment that allows for different OSGi containers to be used at its core, typically Eclipse Equinox or Apache Felix, however its common to install spring-dm directly into karaf as well (it's a one line configuration entry to switch cores, spring-dm is installed as per usual procedure). Using one of these containers a developer can than choose to use Spring, Blueprint, or other wiring technologies to put together their application. Karaf provides the extra tooling, documentation, and services to help make the process of developing, and maintaining OSGi deployments easier.
Static means that the field or method can be accessed without an instance of the class. For example, Java's Math functions are static - you just call: Math.abs() instead of: Math m = new Math(); m.abs(); You generally want to make things static when it doesn't make sense to require an instance. This is generally when the methods are standalone, and don't depend on or alter any kind of internal class state. For example, if you have a class full of helper methods to manipulate strings called StringHelper or something, you could make its methods static.
If a method doesn't rely on any of its enclosing instance's methods or fields, consider making it static. In other words, if everything it needs to know it can find from its parameters.
Static variables don't need to be created via the new operator. Static variables are always accessable no matter if you created a class object or not. You should only use static variables/fields when it's necessary (and thats almost never).
It just means that it has it's own scope?
VLC has some Java API layer, you should be able to capture [0] from default screen. The main problem I foresee is distribute your software along with a standard VLC. [0] http://code.google.com/p/vlcj/source/browse/trunk/vlcj/src/test/java/uk/co/caprica/vlcj/test/capture/CaptureTest.java
Would this have all of the same functionality as public? public double someX = 5; public double someFunction () {return someX;} vs public static double someX = 5; public static double someFunction () {return someX;} I would go through and edit my program, but i want to make sure I'm not breaking anything first. I assume any calls would use any default values ------------------ EDIT: http://dadicy.wordpress.com/2007/10/29/what-do-you-mean-by-static-in-java/ Useful information in this article, which answers my questions. EDIT2: Fixed code.
&gt;public double someX = 5; &gt;static double someFunction () {return someX;} This example wont work unless you make someX static. the someFunction() method does not belong to an instance but someX does, so the method cannot access someX unless someX is static or someFunction() has access to an instance. 
tRY THIS LINK : http://www.dzone.com/links/r/static_keyword_in_java_with_examples.html
Thank you for the info, I edited my earlier post. I discovered that after Eclipse gave me a nudge in the right direction. I also discovered you need "public static" not just "static." it seems that "static" is designed for classes which you only need one instance in a program &amp; classes that are designed as method-only-classes (like a class that performs math functions).
My suggestion to you is to go talk to your TA and find out what type of answer they are looking for. Sometimes the question is not clear enough to decide what they want.
What helped me learn static was the phrase "There can be only ONE". For me it was Highlander. For you, maybe "One ring to rule them all" might be more appropriate. Other folks have more technical/useful answers, but remembering that association really helped me.
Just some additional info - The default scope is 'package-private'. So, anything marked as just 'static' would only be accessible to the enclosing class and classes in the same package. 'public static' will make the field or method available to all classes. 
Just like any other part of the program you are going to need detailed requirements. If you could be less vague it would be easier for you to answer your question. Is the program local to one computer only? What is the purpose of the login screen? Do you want it to be passworded? How would you do password recovery? How strong does the password encryption need to be? Are there java libraries out there that can help you so you don't need to write it from scratch?
For the login you can use an encrypted file with the data of the users who are going to access or since you have to put everything in a database anyways you might as well just access the database for the login clearance A way you can do this is to create a log in screen that calls the rest of the program after the clearance. I am a little rusty on the coding side but basically what i used to do is what i just said (I used windows instead of console as is was easier for me to work with the objects and what have to be done with each one. One window calls the other after that pretty much everything else its just database calling and showing on a table)
The inputs for VIN, color, etc are all on this "login" window? If so, sounds like you could do it with a single class extending JFrame.
The program would be local to 1 computer in our shop. The purpose of the login screen would just be to enter in our employee number so the cars we log would be booked under our employee number. A password is optional I feel like it look more professional to my boss. Password recovery isn't a huge problem since its just the 5 employees here, I would just assume whatever is easiest. Maybe just a reset button that would reset the password to "password"? The program wouldn't handle secure data so I feel like encryption isnt needed. No idea on the java libraries, I just finished my first Java class so I am not too in touch with the Java world. I just brought up that I was a CS major to my boss and that he was tired of having to write down cars and not being able to read handwriting of other employees so he recommend that I write a program. I just finished my 3rd semester of my CS major and just finished my software analysis and design class that dealt with Java so I figured I could take a stab at it while getting in some more practice.
Sorry about the formatting on that. You enter your employee number and password on the login screen, then the screen changes to take in those inputs. 
Might this help? http://docs.oracle.com/javase/tutorial/uiswing/components/passwordfield.html
I dont know anything about databases yet and since its just going to be a local machine I think I could just store the users and data in a text file perhaps. This is more just for learning with a real world purpose and if it happens to work out my boss will use it. 
Because you're not actually opening it? c.showOpenDialog(this); 
After reading the other comments, I gather that security isn't an issue here. For simplicity's sake you could just put the different employees in a JComboBox on the same screen that takes the other inputs. Since you aren't using a database to store data, are you using the Serializable interface? You could put everything into one arraylist and store that.
web or swing based?
1. Your program will absolutely have to support making backups, and the best case would be that the program makes backups automatically. 2. Does the machine you'll be running the program on, have Internet connectivity? Will your boss want the daily report in his email? As an Excel sheet?
....excel.
This isn't so much about efficiency of the program I was just saying I could possibly make a program and it would help me learn more about Java. Win win for me
- obviously need database with daily backups - login screen with employee number - input screen - receipt screen confirming input goes back to login screen need a controller class that will control which form are you accessing need data access class to record car info need data access class to record logins db: car user user table should contain login info car table should contain car info + user id so you can track every car to the mechanic that worked on it need either jsp pages or swing classes to display forms if you're using web: download tomcat http://tomcat.apache.org/download-70.cgi struts are usually easiest web framework or you can use straight servlets for db -both microsoft and oracle have a single user free db or use mysql 
1.) Backups wouldnt be needed neccesarily because my boss would gather the data and the end of the day each day unless the program crashes 2.) It would have internet access and he would physically be at the computer to access the data so no emails
Swing
Security isnt a huge issue. I was just kinda wanting a login screen to learn more about java. I havent started any coding yet, was just trying to gather ideas right now. Thats a good idea about the arraylist, ill take that into consideration thanks!
Ya I know, I just can't help myself. Anyway, don't be a pussy make it database backed (HSQL or something) and learn some SQL. I'm sick of college grads not knowing any SQL, quite annoying.
Don't make people learn struts...it's gross.
http://java.sun.com/products/jfc/tsc/articles/architecture/ look through this - should give you enough info to architect your app - in addition to my other post
haha - it's simple - I prefer spring mvc but if you're just starting out it may be a bit hard 
Ya Spring is a mindfuck sometimes, but really someone must stop this cycle of XML.
What year of CS do you learn SQL? I know nothing about it right now, I can start learning it over break but I was kinda hoping I could make this program in a couple of days
It's typically an elective class when you're a senior...depends on the program.
~~I might be wrong (very new at programming) but it seems to me like your loop ends when choice = 4 so shouldnt you have you "Goodbye" being printed outside and after the loop? Also you only reach line 59 if the input is &lt;=0, or &gt;4~~ Im wrong, sorry. Your loop runs once when choice = 4 and then ends. My bad (but still goodbye is printed if choice &lt;= 0 and &gt;4 I think) Edit: In case you actually wanted everything apart from 1,2,3 to do the "Goodbye" wouldn't it then be better to leave out the line 59 to 62 and have your "Goodbye" after the loop? I'm not trying to insult / teach you, rather I'm trying to learn some (sorry for highjacking, I guess :b)
In Java, an enum is basically a specialized class (you can add functions, variables, etc to an enum) If you're not new to coding, then just use enum's like you normally would (Java requires a bit more coding to accomplish some stuff in enum's, but in my experience it can also be useful to have functions tied into your enum's) Program into your language, don't program in your language. If you've not used enum's all too often, then start by using them when you would normally use constants. switch(var) { case 1: /* ... */ } // less readable switch(var) { case PROGRAM_IS_RUNNING: /*...*/ } // more readable 
 http://docs.oracle.com/javase/tutorial/java/javaOO/enum.html 
I would say that enums have eliminated the need for having classes which exist solely to define groups of constants. Back in the day (1.4), we used to use public static members in a constants class. The problem with this is that methods which need to be supplied one of the constants must be written to accept any value with the same type as the constants, e.g, public class Constants { public static final int on = 1; public static final int off = 0; } ... public void doSomething(int state) {...} This method can be invoked like this: doSomething(Constants.on); doSomething(Constants.off); Unfortunately it can also be invoked like this: doSomething(-123); doSomething(0); doSomething(100); A better solution would be: public enum States{ ON(1), OFF(0); int value; private States(int value){ this.value=value; } public int getValue(){ return this.value; } } ... public void doSomething(States state){...} Now, the method can only be invoked in three ways: doSomething(States.ON); doSomething(States.OFF); doSomething(null); This is a lot clearer and safer. 
What is the purpose of your program exactly if the boss would be gathering the data after each day? What is done with the data after it is gathered each day?
thanks dude :)
I took it second year, but it doesn't matter. You won't need to do anything complicated so go and read some tutorials on SQL (SELECT, INSERT, UPDATE). Basically you create a database, then a table to hold your data, when you add a new car the SQL will be something like: INSERT INTO cars (vin, color, make, model, mileage, job) VALUES ('ABCDEFG123456', 'Blue', 'Pontiac', 'Sunfire', 65000, 'Detail');
&gt;In Java, an enum is basically a specialized class Once compiled, it IS a class.
 url = new URL(sfPath); You're only giving it the path. Just use File.toURL(); e.g. public void newSong() { JFileChooser c = new JFileChooser(); c.addChoosableFileFilter(new mp3Filter()); c.showOpenDialog(this); File sf = c.getSelectedFile(); Applet.newAudioClip(sf.toURL()); }
well you can do that too. If it is for simple stuff there is no need to use a DB. Storing to files its rather easy, and if you are going to export it to excel or any other spreadsheet program you can store in csv(Coma separated values) file so it'll be easy to export it and store it. good luck and have fun coding 
Enums are like multiple-choice classes. You can't instantiate new options, only pick from the ones already defined. Each enumeration in the enum basically represents an instance of a class. They can do a few neat things: For instance, each enumeration can override a method declared by the enum in a different way. It's sort of like each enumeration extends the enum, except without tons of unnecessary classes: A primitive form of inheritance. enum Pokemon { BLASTOISE(Types.WATER) { //Instead of something like Pokemon BLASTOISE = new Pokemon(Types.WATER), the constructor arguments immediately follow the enumeration name public void thisMethodMustBeOverridden() {} //Some methods must be overridden. public void attack(Pokemon other) //Methods can also be overridden optionally. { if(other.type == Types.FIRE) { //Compare enums with == other.takeDamage(); other.takeDamage(); } } }, //Separate enumerations with a comma CHARIZARD(Types.FIRE, Types.FLYING) { public void thisMethodMustBeOverridden() {} public void doCharizardThings() //New methods can even be defined! {} }; //End the enumeration list with a semicolon //Here is where the body of an enum is actually specified. Types[] type; private Pokemon(Types... typing) //If an enum has a constructor, you invoke it with the arguments after the name of the enumeration { type = typing; } public abstract void thisMethodMustBeOverridden(); public void attack(Pokemon other) { other.takeDamage(); //Default implementation } public void takeDamage(){} }
tch has a point... skip the security for now and make the program save to an Excel spreadsheet instead using something like [JExcelAPI](http://jexcelapi.sourceforge.net/). You'll learn a lot about using 3rd party APIs and your boss will love you forever for it. Source: I've been a developer for 15 years, and believe me, managers LOVE LOVE LOVE Excel.
Just to elaborate a bit further a file url starts like all urls with the scheme. Web ones starts http: or https:, ftp with ftp: and so on. For files it is file: but for a local file there is no server name. So a local file would be: file:///c:/temp/tune.mp3 note the 3 consecutive forward slashes because of the lack of server name. As aperx says just use the toURL method on your sFileName. Also I would look at the javax.sound.sampled api. Using the Applet apis feels wrong to me. See here for an example: http://www.jsresources.org/examples/SimpleAudioPlayer.java.html
Yes, if it will be on freenode as is the case with the most of the subreddit IRC channels. 
Isn't the 'value' variable a bit redundant? I always use enums like this: public enum State{ ON, OFF; } And in some other class: private State state; ... public void setState(State state){ this.state = state; } 
Maybe for the OFF/ON Usecase...but for other you might want data associated with each entry
IntelliJ is the best general purpose IDE for Java in everything other than price and open sourcedness. There is a free (as in beer) community addition though. NetBeans is the best for WYSIWYG GUI building. Eclipse is the best for vendors to extend and republish with those extensions - hence it's popularity.
no IDE discussion is complete without the mention of emacs: [JDEE](http://jdee.sourceforge.net/)
:rolleyes:
Eclipse is generally the one I use most, unless I'm considering doing anything in Swing. Then I generally go for Netbeans.
Token vote for EMACS. That shit is *real* bro.
For IDEs in particular, people tend to favor the one they're used to, and notice the flaws in all the competitors. That said, I've switched from Eclipse to IntelliJ and haven't looked back.
Netbeans - I like it because it is quite pleasant and smooth to use, everything is integrated nicely. Unfortunately for me, almost everywhere in corporate environment Eclipse is used, not due to any rational reason or choice, but because it is the standard tool that everybody uses.
Yes, please!
All the IDEs have their perceived merits and flaws. The big three - Eclipse, IntelliJ, and NetBeans - are all free. So try them all. Use whatever you feel comfortable with. Retry them every so often. I've switched back and forth through the years as they have evolved. The only correct answer to this question is via your own usage preferences.
As a more or less lifelong (read: 12 years) Eclipse user, I'm going to strongly recommend you use **IntelliJ**. Only reason I've stuck with Eclipse is that re-learning everything in IDE-ville is almost more effort than it's worth.
Oh yes, there would be for me!
I thought it was ##java on freednode
Actually, while I use eclipse almost all of the time (with half-baked emacs key bindings), I occasionally open a file in emacs for a couple of things: * ediff * query-replace-regex Those are the two things that came off the top of my head... Oh, I also prefer NetBeans for Swing apps, though we're really a web app (struts) joint here.
That's the java channel but this would be a subreddit channel. so #reddit-java or something.
&gt; NetBeans is the best for WYSIWYG GUI building. These days, I'd argue that WindowBuilder (the GUI builder that Google bought and open sourced) has shot eclipse past NB in that department. WB is awesome. Unlike the netbeans editor, it doesn't rely on shadow files (the .form file that accompanies every class you build with it). Instead it just parses the source to figure out what the form looks like and then gives you a wysiwyg view you can edit. This means you can edit any part of the autogenerated code you want directly, and you can edit forms that weren't originally created using windowbuilder. Worth checking out for sure. It does Swing and GWT UIs.
 String employeeNumber = ( String ) JOptionPane.showInputDialog( null /*No parent component = central to screen . */ , "Please enter your ID number." /*Message &lt;&lt;SEE NOTE BELOW */ , "Employee number" /*title*/ , JOptionPane.PLAIN_MESSAGE/*Message type*/ , null /*Icon*/ , null /*Options*/ , "1234567" /*Initial value*/ ); &lt;&lt;&lt;&lt;NOTE - with this message parameter, it actually accepts objects. Like an array of things. Like, an array of input fields. Like, if one of the input fields was a password field...... Or, even more simply, String employee_identity = JOptionPane.showInputDialog("Please type in your number") ; I reckon you need to investigate around this area.
Try to add a try { Thread.sleep(5000); } catch (Exception e) { e.printStackTrace(); } after song.play(); and see if it's playing for 5 sec. If so you simply need to tell your program to keep running while playing.
sounds cool
Eclipse.
I figured out the problem was I wasn't using wav files :) but thanks!
Netbeans
Yes
For me its ECLIPSE. I use it and like it a lott. As I feel much better in it as compared to NETBEANS
I dunno, all it may do is dilute how much conversation can go on.
Definitely
There books like the people here have suggested. You can also try 'The Complete Reference to Java' and if you want online posts you can try for www.code2learn.com (this is the site i refer to). :P
&gt;You can't instantiate new options, only pick from the ones already defined. http://niceideas.ch/roller2/badtrash/entry/java_create_enum_instances_dynamically
bitbucket.org
What are your criteria for evaluating what's important and what's not? Without knowing the specifics, I'd say GitHub organizational account, for $50 a month.
I agree. Netbeans has really come far these days. I remember that it was really shitty a long while back. But now it has come to be my favourite IDE by far. For the exact same reason you stated. As a side-note: I used eclipse for about 5 years before I was forced to switch. I was blown away.... ;) I still use NB with eclipse shortcut settings though. Good thing they have that option in their settings ;) The only time I use eclipse now is to do Android development. And I *really* wish I had such a well integreated adb stack in NB... :/
Tourette? http://i.imgur.com/HEEq8.jpg
I don't have a favorite, the three contenders all roughly equivalent, with slightly different strengths and weaknesses. Whichever IDE you use, be certain to keep your entire toolchain up to date. Especially if you're on a Mac. The biggest contributor to a nimble development environment, however, is yourself. Learn how to write simple and testable code, then make sure that when you build new functionality, you can test that, and only that, with specific unit tests. That way, you can execute just the bits you're interested in, extremely quickly, with a simple Control-F6, Control-Shift-F10, or whatever combo your IDE uses.
YES. YES. YES. YES. YES. YES. YES.
assembla.com
As a long time (10 years) eclipse user who has occasionally tried IntelliJ there are two things (and maybe I can be corrected) that I just can't get over not being available in IntelliJ: Key Bindings for any action bindable to individual keys or key sequences (ie. I can have almost perfect emacs bindings in Eclipse, not even close in IntelliJ) and managing multiple projects in a single instance of the app (I remember IntelliJ only allowing you to have 1 project per instance of the app running). So, it's basically those two things, and the fact that there hasn't been anything that IntelliJ offers me that Eclipse doesn't do just as well that justifies the huge price difference. 
About Android development on NB, have you tried the [NBAndroid plugin](http://www.nbandroid.org/)? I can't comment on the problems or strong points since I haven't used it myself. Here's another website for the codenamed [Project Kenai](http://kenai.com/projects/nbandroid/).
&gt; a single instance of the app It's true that IntelliJ wants you to have a project _per window_, but they are the same app instance (aka process.) &gt; emacs key bindings I'm not really sure how comprehensive these are, but: http://stackoverflow.com/questions/2648342/emacs-shortcuts-for-idea-ide &gt; price difference You caught the "free as in beer" part, right? 
Also IntelliJ will allow you to have multiple modules in the same project which is essentially the same as what eclipse does. You can customise all the key bindings in IntelliJ too.
Will take a look thanks for the tip.
I guess the first point about the per window thing just irks me for some reason, I just want one window, and not having the option of doing it that way always turned me off. Accepted answer on that stackoverflow question is: A note from a long time Emacs and IDEA user - Emacs bindings in IDEA are simply mission impossible. This is what I always found to be the case despite my best efforts. I got the free as in beer part, but I do software development professionally, so I'd have to pony up for a license, and I'd rather use that money for something else given that i have Eclipse. So, I guess it's just a preference thing, I'm sure these aren't issues for other people, but I thought I'd throw in my $0.02.
Nope have not tried it yet. But as I currently have no active Android projects going it may still be some time until I get around to do so. Thanks in any case for the link. I'll keep that in mind!
File.toURL() is [deprecated](http://docs.oracle.com/javase/7/docs/api/java/io/File.html#toURL%28%29) Use file.toURI().toURL() :)
&gt; I guess the first point about the per window thing just irks me for some reason, I just want one window, and not having the option of doing it that way always turned me off. Yeah, it initially bugged me too, but I grew to accept (and even like) it. &gt; I got the free as in beer part, but I do software development professionally, so I'd have to pony up for a license, and I'd rather use that money for something else given that i have Eclipse. No you wouldn't. The community edition just lacks some features, but is gratis. http://www.jetbrains.org/display/IJOS/Ultimate+Edition+vs.+Community+Edition You are thinking about the open source license to the "ultimate edition". http://www.jetbrains.com/idea/buy/index.jsp &gt; Accepted answer on that stackoverflow question is... Right, but you also saw that there is an "emacs" keymap built in, right? It's worth the experiment at least. I mean if these are the only two things holding you back, don't be held back. It's a much better IDE than Eclipse (I say this having used Eclipse for 6 years and IntelliJ for 3). 
BitBucket is best for private git repos. For SVN repos, I really can't offer anything, as I stopped using SVN a while ago.
I've never asked this elementary questions in an interview, no matter how junior a position was going to be filled. I don't know in what kind of a culture these kinds of questions and answers would have any validity in determining the suitability of an applicant.
Have you seen https://github.com/eishay/jvm-serializers https://github.com/eishay/jvm-serializers/wiki
github
+free - bitbucket is what I'm using. If only github had a free closed source option...
Nice, a little naughty goes a long way. 
It does.
Check [this](http://www.reddit.com/r/programming/comments/nve58/core_java_interview_part2/) out - he even comments on his own posts without making a throwaway account.
Way to be perpetuating the stereotypes, spammer dude.
I thought you could only have open source projects on github for free?
No it does not. See: https://github.com/account/billing Number of private repos (Displayed with a "lock" icon) for free accounts: 0
I like eclipse. It has heaps of add-ons and plugins. In my experience it is the most widely used IDE.
Check your calendar. It's the 21^st century.
Enumerated are also useful to implement a singleton holder. See Effective Java.
Repositoryhosting.com $6/mo, unlimited repos and Trac projects. 
I use [project locker](https://www.projectlocker.com/) but I can't really vouch for it or anything because my requirements are pretty minimal and I have a plan that is no longer available, I think. It has SVN and GIT, plus Trac and some other things.
Very deep thought provoking discussion going on there - Fun!
I started the new accont on reddit... so i was jst checking...
Ok. will keep in MIND.
Check your sarcasm interpreter. It may be malfunctioning.
It difficult to understand how otherwise feature-rich text editing environments sometimes don't provide a regex search and replace. Or keypress macro recording and playback...
Ah ok, fair enough. However if you are a student you can get 5 private repos for free if you go to github.com/edu
Enums are great for almost everything that stays constant. I like use them whenever possible and meaningful, because it keeps my code nice and clean. It's also very handy that you can do things like looping through them in a nice and easy way: for (MyEnum myEnum : MyEnum.values()) { //do something with myEnum }
Based on the website, yes, it would likely be easy. Especially for a one-off where you personally control the hardware.
Can you reccomend any useful resources? As said, i have zero java experience and therefore have no idea what i am doing. If a kind redditor thinks they could create something that will do what i want, im sure i could paypal over however much a crate of beer is in your respective country as way of thanks.
Is this for personal use, or for business use? Do you have experience programming in any other programming language?
Personal use - it will be used with a car computer that runs on windows xp. Very little, i did an introduction to visual basic about 5 years ago, and not touched it since, and i can just about blunder my way through html and css.
Do you have a direct link to the example application you mentioned? Here are a couple of links which will get you off the ground: http://netbeans.org/ http://netbeans.org/kb/docs/java/quickstart.html http://www.oracle.com/technetwork/java/javase/downloads/jdk-7-netbeans-download-432126.html
I'll upload it somewhere, its in the installer for the USB driver for the device. Give us a few minutes to download and install it on my current machine.
Maybe not a good idea, if it's not public. Copy a list of the file names in the project root directory here. From those, we can see if you can open that project directly with some IDE, and do your modifications easily.
http://www.gcdataconcepts.com/usb_driver.html http://www.sendspace.com/file/yx52t6 I have included the exmaple app files, documentation, the lib folder and bin folder as I am unsure of how much of it you need.
Didnt see this post. All the files are available on their website, they are installed as part of the USB driver. If it is an issue I can take it down.
The /examples/gcdc-usb-accel/test.java file contains the code you need. Create a new project. Add the ``jar`` files from the ``lib`` directory in the example file, as libraries to your project. Add the ``test.java`` file to your project, and start modifying it. The only slightly tricky part is the Java USB driver, and its DLL. When you execute your project, you must have the DLL in the Java library path. If you Google for instructions using those terms, however, you'll find all you need to get you where you want to be.
Thank you, I will attempt to bumble my way through :)
Drjava anyone?
There's Linkedin's [Krati](http://sna-projects.com/krati/). The MemorySegmentFactory uses in-memory ByteBuffers to save the information. 
http://fastutil.dsi.unimi.it/ Fastutil uses primitive arrays instead of ByteBuffers, since array access is significantly better optimized than BB conversions would be.
The problem is the arrays are on the heap... and byte buffers are direct. 
The reason is that unless you're stuffing gigabytes of data into your stores, you're likely to do your project more harm than good screwing around with handrolled collection implementations. And if you are stuffing gigabytes into your stores, you probably want a whole lot more than just a simple tree or table. So it's a solution for a problem people don't actually have.
You could use a database, then you have quite fine control over the storage requirements.
If you're THAT constrained for memory, you have one of two problems: 1) You're creating waaaaay too many small objects and need to refactor. 2) You chose the wrong platform to write your software. You're trying to solve a problem that doesn't really exist for people.
In so many words, annotations come down to derivatives of http://docs.oracle.com/javase/6/docs/api/java/lang/Class.html#getAnnotations() and http://docs.oracle.com/javase/6/docs/api/java/lang/reflect/Field.html#getAnnotation(java.lang.Class) When looking at a specific class, you can apply logic based on these annotations. 
dr Java it may not be a fully fledged ide but it is lightweight and has project management features and JUnit integration.
I've been thinking of ways to solve the memory-efficient POJO array problem accessibly, and I doubt it would even be very hard, for entry counts of &gt; 100,000.
This is about memory, not storage. The implementation OP is talking about would be used in some performance-critical section of code where writing to disk, let alone to a DB is not an option.
Take a look at Spring's AnnotationUtils: https://github.com/SpringSource/spring-framework/blob/3.1.x/org.springframework.core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java
Enum are great if you have a variable which only except a predefined set of values e.g. WEEKDAYS which is natural enum but Enum in java is much more versatile than C or C++ and I have explored some of them in my blog post http://javarevisited.blogspot.com/2011/08/enum-in-java-example-tutorial.html, you may find interesting.
What is your usecase? Simulations, games, long lived processes? Is it the memory or the gc time? I think it would be important to show your case with code and reproable stats. Most of the time one hits this issue a packed struct of arrays can solve it (bench array of structs s well).
Also, probably the biggest factor would be his access patterns, which can be hard to intuit. If he's constantly dumping his caches accessing the kind of struct or large arrays when his data locality would be just fine with primitive fields close together...
https://gist.github.com/
Annotations just add metadata to java classes that can be inspected during runtime. Any annotation that "does" something in a particular framework, does something because that framework was coded to look for that annotation, and then respond in some way. The annotations themselves don't do anything. A simple example. I could make an annotation called @PickMe. I could then create a collection of various objects, and some of those objects classes might be annotated with the @PickMe annotation. I then could have a method that iterates through all objects in the collection, inspects their classes annotations, and returns a list of all the objects whose classes had that annotation. But, the annotation itself was rather meaningless, it was my method that looked through the collection that did something. This is a silly, but simple, example.
Git is a distributed source control system, which means you have a full-blown repository on your local computer at all times. You initially have one *branch* in your git repository, called *master*. You *commit* code to a *branch* (*master* in this case) in your local repository, then *push* those commits to GitHub or other central repository. That's the most basic workflow. You can push all commits to *master* if you so choose. A better workflow is to create other *branches* to separate development of different features, then *merge* them back to *master* once complete. You can *rebase* a branch to make it catch up with any concurrent development in *master*. EGit is a great Eclipse plugin to use for this. It includes [a nice tutoria](http://www.vogella.de/articles/EGit/article.html)l on installation, and even a [GitHub-specific tutorial](http://www.vogella.de/articles/EGit/article.html#github). [The Git Book](http://book.git-scm.com/) is good further reading as well. Note: All the things in italics have special meaning in Git, and are worth researching. 
Personally, I like to keep my git out of my IDE (Eclipse or Netbeans), simply because I feel they take away some of the control I have while using git the "old-fashioned" way (console or command prompt). For starters, let's say you just want to pull a project from git and mess around with it on your own computer. And let's take twitter's java text library as an example: https://github.com/twitter/twitter-text-java There are two ways you could do this, by using git, or not using it at all. * The simpler way is to just press the button near the git repo url, the one that says ZIP and you'll download the project, unpack it and it should be ready to use. * The other way would be to use git itself. Position yourself inside a directory where you want to download the project and simply type: git clone https://github.com/twitter/twitter-text-java.git Now, the things you would eventually want to look at is: **forking** (making another version (brach) of the code - either your own for your own purposes or simply editing someone elses project on github, for whatever reason you would want to) **commiting changes to remote repository** (in a nutshell, keeping your code on a server) For further reading, check these sites out: http://git.or.cz/course/svn.html http://schacon.github.com/git/gittutorial.html And a few more here: http://git-scm.com/documentation
Most of what you'll be doing with Git will consist of the following: - Either init git repository or clone project (these choices are mutually exclusive): git init git clone [URL of project on Github] - Hack on code (edit, recompile, test, drink coffee, etc.) - Check in code: git add myfile.java git commit -m "This is a comment" - (Optional) Push code back to repo (assuming you want to push your "master" branch to the remote repo called "origin," and that you have commit privileges to the project in question). git push origin master Learn how to do these from the command line, and you'll cover 80% of what your day-to-day work in git will consist of. Eventually, and when it makes sense to do so, you can tackle branching and merging etc. For now, don't worry about Eclipse integration. Here's the best online tutorial I've found for git: [Git Immersion](http://gitimmersion.com/). When you create a project on Github, they actually walk you through the steps to get you up and running. The hardest part will be dealing with SSH keys. But if you want to get involved with open source, you'll need to learn SSH. Sorry, I don't have enough time to explain this on a 5 year-old level.
Maybe it's worth having another look then, thanks!
I've been looking for a good Baby's First Version Control for weeks, now that my projects have been getting complex enough to call for it, but (and correct me if I'm wrong in interpreting what you want) I think that everybody's misunderstanding what you (and I) are asking for: We understand the fundamentals of version control: trunks, branches, shelves, etc and we know what a commit and a checkout are, we just don't know how to interface it with our code. I'm looking for a tutorial that steps me through exporting a project in eclipse, somehow committing that, and then how to check it out and then import it back into eclipse. How do I set up a folder I want to version? (For me personally it'd be ideal if I could just use my dropbox as a repo and do something like (I'm sure I sound like a total idiot here, but so be it) git register ~/Dropbox/projects 0.0 //The projects folder will now begin tracking versioning changes. The current version number is 0.0 git checkout ~/Dropbox/projects eclipse/workspace 0.0 //The code has been pulled from the repo and put in the workspace. Some changes are made git branch ~/Dropbox/projects ~/Dropbox/projects/ThisIsABranch // ThisIsABranch is now registered with git as a branch of projects git commit ~/Dropbox/projects/ThisIsABranch eclipse/workspace 1.0 // The code you changed is committed to ThisIsABranch with version number 1.0 git merge ~/Dropbox/projects ~/Dropbox/Projects/ThisIsABranch 1.0 // The branch version 1.0 is trunked. The trunk takes its version number //Uh oh, that code was broken! git revert ~/Dropbox/projects 0.0 //Trunk is reverted to version 0.0 but I don't know how to actually do that.)
These are two different questions. Either you want git/vc explained for a 5 year old, or you want to know how it works. Since you already grasp the fundamentals, I think you (and the OP) want to know the answer to the second question. First thing to do: stop thinking about easy ways to get there. Stop thinking about how you can tackle this like a 5 year old. There are no corners you want to cut here. Second: read a great tutorial, google is your friend here. The basics aren't that hard to understand, although git is a vcs for experienced users, in my opinion. What I don't understand is your remark about interfacing it with your code. The code is just a bunch of files on your disk, hopefully not in the same directory as the eclipse workspace. There is no "export from eclipse" necessary. The basics of what you want to do, using git: cd project // this initialises a git repository in the current directory, no need to register since there is no server (yet) git init ... do your coding ... // this stages the changes you made to be committed git add filename.ext // commit the changes git commit -m"comments" // git has very efficient branching, create one like this git branch new_branch // let's also switch to the new branch git checkout new_branch ... more coding ... // shortcut to just commit (almost) everything git commit -am"message" // switch back to main branch git checkout master // merge your new_branch to main git merge new_branch // you can now commit, but let's say you want to roll back instead git reset --hard HEAD There are loads more commands but this will do for now.
Thanks! That's very helpful. Just to set the record straight, I'll clarify what I meant about interfacing it with the code. I didn't mean literally have git interact with my source, interface in a programming sense, just integrate it with the project. 
Here is a talk called ["Introduction to Git"](http://www.youtube.com/watch?v=ZDR433b0HJY&amp;feature=youtu.be) by Scott Schacon. He explains how to use git in great detail and also mentions Eclipse/EGit.
Explain.
You are calling static methods on a bunch of classes. There is no really way to make this code more elegant unless you take a more Object Oriented approach and leverage polymorphism and object instances. Here is kind of the start of the idea. But without more knowledge of how the system works, it will look a little contrived. public interface MyObject { public void destroy(int i); public Object create(); public Object copy(int i); ... } public class Customer implements MyObject { public void destroy(int i) { ... } public Object create() { ... } public Object copy(int i) { ... } ... } public class Entry implements MyObject { public void destroy(int i) { ... } public Object create() { ... } public Object copy(int i) { ... } ... } public class Invoice implements MyObject { public void destroy(int i) { ... } public Object create() { ... } public Object copy(int i) { ... } ... } ... Map&lt;String, MyObject&gt; myObjects = new Map&lt;String, MyObject&gt;(); myObjects.add("Customer", new Customer()); myObjects.add("Entry", new Entry()); myObjects.add("Invoice", new Invoice()); ... // case 4 destroy(Integer id); myObjects.get(resource.objectName).destroy(resource.arg1); // case 5 create(); Object o = myObjects.get(resource.objectName).create(); // case 6 copy(); Object o = myObjects.get(resource.objectName).copy(resource.arg1); 
I've had good luck with Amazon's hosted Hadoop solution for my map/reduce needs.
I'm not a Java programmer but I think it may be to do with assigning the sound to a certain channel relating to the speaker setup (1-5).
I'm facetious about *evvvvvverything*!
Okay, but are you sure that your users won't be inputing something like "Wednesday, 4 January, 2012" or "Wed, Jan 4, 12"?
How is the Joda example any easier than using the JDK SimpleDateFormat?
For one, Joda-Time's formatting is thread-safe, and doesn't spuriously give you completely wrong answers when used non-synchronized, which I've seen contaminate the data sets of shitty apps.
You'll have an easier time finding good people, if you don't location-constrain your search. 
Well, I've been studying this stuff as a personal hobby, might as well share the knowledge. :)
Yeah I don't think finding good developers that live in Seattle will be a huge issue. You have a good point in general but it doesn't really apply to places like Seattle, Silicon Valley, Austin, or Pittsburgh. Their industries are so developed that you don't need to worry about relocating people so location constraints are hardly an issue, especially for a java developer.
How are you managing failover? Are you using the concurrency framework? Distributed caching?
That's what I was thinking - have the program read from an online database. It would be a desktop application.
Is this for product key registration/authentication or simple multi-user profiling?
Simple multi-user profiling. If the user types in "Account" along with "Password" as the password, the program will verify online (through a database perhaps?) and either allow access or deny.
Why would a desktop application be authenticating with an online service?
The program is going to be compiled as a jar file. I don't want it to be shared so I would like authentication. Obviously the person sharing could just provide their username and password, but I'm sure IP-logging would be able to take care of multiple users (that's a completely different issue, I just want to get authentication down for now).
As the others have said, make a database, but you MUST hash passwords before they are stored in the database for an online service. Some excellent Java security-related reading: https://www.owasp.org/index.php/Hashing_Java edit: Fixed link, had some god awful google redirect
Exactly what kind of "huge opportunity" are we talking about? A huge opportunity for what, precisely? Will we sleep on filthy piles of cash and get tumors from the toxic ink? Will we buy big cars? What kind of heaven are you offering here? 
I just started learning Java to develop Android apps, and I've been using Eclipse. I'd recommend it as it makes running your program and coding it much easier. It also gives you helpful suggestions while you're typing your code. Like someone else posted, there are alternatives such as NetBeans, but I'm sure everybody's opinion on which is better is different.
Check this out. Everything a beginner needs to start programming in Java. It should help you out: http://www.youtube.com/playlist?list=PLAFF55E55870752DA
If you don't want to mess with database, you could use an .ini file, perhaps? Something like; [user] username = password
I remember when I was tasked to look at JAAS for websphere. After 2 weeks I nearly ripped my hair out as I'd build a CallbackAuthentication module and could get it working on the console. It'd go off and check a db for the credentials etc.. but the moment I tried it on websphere I'd lock myself out of the application server. Was probably one of the most stressful pieces of work I've ever done to this day.
The most secure processing of passwords and sensitive things is to decrypt and persist to a processor's register's and do not even persist it in the computer's RAM. I am sure you can get more paranoid about this and well in today's day and age it is not really a case of if your a paranoid, it is more like are you paranoid enough?
I Don't know what OS you are running but its usually like this. * Right click on "My computer" and choose 'Properties'. * Choose Advanced TAB. * Click on Environment Variables. * find the PATH variable and 'Edit' it's value to include. ;c:\Java\jdk1.7.0\bin ; This is the install path so wear ever the JDK has been installd plus the /bin, add it at the end of the string. [/r/learnprogramming](/r/learnprogramming) is a better resource than [/r/java](/r/java) for "newbie" type questions. [lwjgl](http://lwjgl.org/) is the Minecraft "engine" have a look into that after getting to know some basics. 
Mixed two variables without noticing it, took me a day to figure it out. The program compiled normally, but it wouldn't do anything =/
I think I would just use a standard SQL database. Easy to connect to and it would do the job just fine. Hash the passwords before sending them to the server (on a secured connection) and it's pretty safe too. EDIT: Just realised that all the data/information is stored locally and the server would just authenticate, this isn't going to work then :)
[File Drop](http://iharder.sourceforge.net/current/java/filedrop/) makes file dropping very easy 
Having spent time demonstrating for an introductory Java module, I really think the OP could benefit from using the command line tools over an IDE. Until someone has at least some grasp on Java (unless coming from a similar language, which the OP is not), an IDE often adds several layers of complexities in other ways that obstruct the early learning. For example, those helpful suggestions can be both distracting and overwhelming at first. Thankfully, the Java tools are pretty easy to use when dealing with basic examples. Once you're into properly packaged software though, I totally agree with using ANT/MAVEN build tools, preferably with an IDE.
Just make sure you use a salted hash on the password.
I thought it was possible to protect jars from decompilation?
Your page layout needs some work. May I suggest a monowidth font for the code blocks?
I didn't realize there was such confusion about this... how horrifying 
This is something I am needing to learn in the near future as well. What procedure will be enough to stop the average person from sharing the software even if it won't deter 100% of sharers? What do people think of the way Minecraft does this? How exactly does Minecraft do it?
I think you have some great questions - unfortunately I can't answer them. Perhaps make a new thread?
Thanks!
No, not possible. The JVM has to be able to read and run the code, and if the JVM can read the code, anyone can. If there's any functionality you really need to protect, you need to put it online.
I have to agree that if you are programming in Java and get those things confused then you should stop coding. There is no reason that anyone should get confused between finally finalize() and final as they are all such different concepts.
What about float??? Also: Does it annoy anyone else when people call it JAVA as if it's an acronym for something? 
Junior developer here. I understood about 5 words in this post. Crap.
It looks interesting but I'm not sure how you tie this in with an ORM to get data from a database.
Remember to remove spam, I often clink approve by mistake .
My school's Intro to Computer Science class covers Qbasic for the first semester, which is almost over, and it's going to cover VisualBasic next semester. If I wanna get my Honors Tech Diploma I need 4 tech classes from them so...Caveman language it is :( but next year is C++ so...awesome.
Be careful-- if this thing breaks or doesn't work in the future, you don't want to get a call from your boss in 6 months when you're away at school or moved to another job or whatever. Just use an excel spreadsheet instead of hand writing it and there's no support/maintenance to deal with.
I was leaning towards netbeans, as it's one of the download packages on Java's site. How much of a difference is their?
I've not used netbeans, but I like eclipse a lot. You also might want to try Bluej and the book for Bluej-I think it's objects first in java. It's a HS java book and Bluej is built for students. 
Cool I left it because I thought that you'd approved it for a reason. ;) 
The hardest thing for me is just going to be learning without a teacher. I can probably borrow a book from someone, but that's gonna be all the help I can get.
Did you document how you fixed it? You should post to StackOverflow I am sure there are others out there ripping their hair out.
I would strongly recommend [Git from the bottom up](http://newartisans.com/2008/04/git-from-the-bottom-up/) if you intend to work with git on an ongoing basis. As for Eclipse, it's just a really fancy text editor that can call the Java compiler for you to make life easier.
[Because reddit loves pictures](http://imgur.com/EVMnI)
You should either create they Key Listener in your Main class (because there is the Frame where the Listener hast to be added) or you should create an own class for your Listener. I dont know why you think it's a good idea to put the Listener in the Player-class. edit: Even though I dont think it's a good idea this is how you could fix your problem quickly: add this.addKeyListener(new Player()); in your Main-class construtor edit 2: I just realized your Player class doesn't implement a KeyListener so what I wrote wont work. The easiest way would be to create a class that implements KeyListener and you would add your KeyListener like this: this.addKeyListener(new KeyListeningClass());
thanks dude :D
That answered my question. Muchas gracias.
No. It hasn't been terrible for a couple of major versions. 7.1 doesn't really bring much visible change to the table.
Upgraded, been using the beta on a laptop for a long time. A slight change on the code window, with a source/history button. Uninstalling the older version and installing the new one was easy as 1-2-3.
I'm hoping for something like that too. Although for this particular case I don't hold my breath. Additionally, Java 8 would also need value/property/field references. Not just for EL/JSF/CDI but also for the Criteria API in JPA etc.
That would be too much to hope for.
This is just a stab in the dark but are you sure you are doing everything (including updating the model) on the event thread?
It doesn't surprise me that you are having issues. I program in Java frequently and I've come to the the conclusion that Swing sucks. Without using some sort of GUI builder, I'd say that it takes nearly double the amount of time to make a solid, operational GUI than it does in any other language.
I can't remember but don't you have to fire some events on the tree model?
Look into the XmlAttribute annotation for your fields. That gives you what you want I believe... A better bet though would be to write an XSD for your XML document, or use an existing one if it's a standard schema, and get JaxB to generate the java code from the XSD. I know you can integrate this into a Maven build fairly easily, and you'll be able to with Ant easily too. No idea how to if you're using any other build systems though but I'd think it's fairly easy too... xjc is the XML to Java Compiler that is part of JaxB and will do this...
When I started working in Java development, the team I was on used Eclipse. I then moved from that to Netbeans myself, and the team I'm not on uses IntelliJ instead. For most things I prefer Netbeans though - except that what we work on has a fair amount of Javascript and Freemarker involved and IntelliJ has better support for those...
This. More specifically - Write the schema (xsd), then xjc it. 
You do indeed. A TreeStructureChanged event is pretty heavy handed but will handle most tree changes. You might need to manually expand nodes that might have collapsed.
Thanks for the answer. I am looking into getting the XSD, but until then I am trying to work the the XmlAttribute annotation, which I have added to my setter method. @XmlAttribute(name="user") public void set_user(String user) When the XML looks like: &lt;properties user="LOL"&gt;&lt;property user="test"&gt;&lt;/property&gt;&lt;/properties&gt; The value of user is set to LOL. So how can the element that the attribute belongs to be defined? 
It sounds like a monster of a project since you're still learning Java basics. To implement authentication (user/password system), you need to manage the data. Most systems use databases (you need to know SQL and JDBC), but you could probably get away with using a text file to store the information.
I did not learn SQL in CS. 99% of what I use at work was outside of school on my own time.
Amazon is your best bet. Make sure they don't charge you for uploading data. I think you can mail them hard disks now as well if you have a ton of data. 
Well, if it can't be opened, the JVM can't either. And thus it can't be run. If JAD crashes, it's probably because of a bug.
Except it does run. It's minecraft with a "special" launcher.
Well, then the jar can be opened. Or it's not a real jar, and the "special" launcher is not part of it? Provide more details please. Edit: FWIW, i can open the minecraft.jar from http://www.minecraft.net/download without any problems. 
I think they re from the model. Who doesn't know what's happening in the transferhandler. I think.
I had no idea what this meant. After research, do you mean (to remove the dragged node) something like ; Runnable doWorkRunnable = new Runnable() { public void run() { final topicTree tree = ( topicTree ) jComponent; sourceNode.removeFromParent(); sourceParentNode.remove(sourceNode); } }; SwingUtilities.invokeLater(doWorkRunnable); I tried it after your comment and my further research. It hasn't solved the problem - am I doing it right?
Typically null pointer exceptions can be avoided. This is the preferred method (IMO). For example, if(variable != null) { //do something variable } else { boolean = true; } 
1. you probably shouldn't be writing a web crawler 2. you definitely shouldn't be writing a web crawler in Java 
| 1.you probably shouldn't be writing a webcrawler What the fuck is that supposed to mean and who the fuck are you to tell me what kind of programs I should be writing? | 2. you definitely shouldn't be writing a web crawler in Java if you don't have good advice on what language I should be using then you shouldn't comment. 
great thanks.. this project has just been frustrating the hell out of me. Tried writing it as a multi-threaded and was changing all sorts of things around to try and get it to work.. its a hot mess at the moment and I am thinking about starting from scratch.
oh cool, i will try that as well thanks!
Same, Made one to save pictures from a manga website.
Let me know if it works, because ive wondered if that's what it actually does. Never got to use it. Breaking the code is good too. 
just replied to OP with essentially the same: use the right tool for the job. while i've never written a distributed crawler, i agree that java has good support for both distributed processing. but in the case of a crawler, i wonder what your bottleneck was: bandwidth? disk I/O? 
Windows/Linux... might be a Mac too. Tested with Windows. Why does it matter? Edit: oh you mean the listening device? Android, testing on Windows as a console application though.
Bandwidth by a long shot. Have a nice ssd disk array on zfs to remove most disk i/o limits. ~300 mil tweet/day crawler on 60Mb/s...doing NLP which is also done on java.
i agree that there is value in learning how the wheel works, but it's also important to know when to write something from scratch, and when to use something that someone else has written. 
i honestly wouldn't mind learning how to write this thing as a multi-threaded application but I tried for 5 or 6 hours with out any luck and feel it may be above my skill level at the moment. I was going to write it in php because I thought it would be easier but someone told me it would be to slow. I am trying to scrape yelp for business info and I have a list of about 33,000 zipcodes to run through. On the first run it took 72 minutes and I got an error at number 500. 
any advice for a young buck (with minimal experience) on how to go about learning and implementing a multi-threaded/concurrent/distributed something or other?
You might want to look up [UDP hole punching](http://en.wikipedia.org/wiki/UDP_hole_punching) and [STUN](http://en.wikipedia.org/wiki/STUN). Also take a look at [http://stackoverflow.com/questions/917385/nat-traversal-with-java](http://stackoverflow.com/questions/917385/nat-traversal-with-java)
Did try to manually send a packet, didn't work (did see packet going out on wireshark). I'll try STUN in a few hours when I'm at the computer. Thanks!
Yes, in some rare cases this is totally okay. Real code example: writing administration software for gameservers. The rcon library I'm using throws a TimeoutException when the gameserver doesn't respond after sending a command. This is appreciated in most cases. However map change commands always lead to a timeout (simply because the server won't answer commands while changing a map), so I'll have to catch the timeoutexception and ignore it for these kind of commands.
the website has some sort of pagination so I am just trying to make my way through each of the pages until i reach the end in which case at the last page there will not be a "next" link. 
Ahhh I see, so it wont be good to add the open in new window. Breaking the code will work.
&gt;you definitely shouldn't be writing a web crawler in Java Someone should tell Google that. According to the authorized book "Inside the Plex" Googles (current) web crawlers are in Java and C++, and a little dash of python but python is really just used as "glue" as they put it. To call the Java code and do small administration tasks. In fact, back in the begining all of Google, from the Crawler to the actual search engine, was all written in Java. If Google, who have undoubtedly the best crawlers on the market, to this day think Java and C++ are the best languages for making Web crawlers, then I'll take their word for it.
Yeah, absolutely. Restart. You'll find your previous work will guide you into a cleaner solution than you'd get if you just refactored your current code. Most the work in programming is in figuring out the dataflow of the program. The typing in and such are a small portion. 
The short answer: yes. Just understand that try/catch is a sub-optimal flow control mechanism; if the code can be rewritten as an if/else while maintaining readability/expressivity, then do that instead.
In code I've got that was generated by xjc, the @XmlAttribute is on the field not the setter. So here you would have: @XmlAttribute(name="user") private String user; public void setUser(String user); public String getUser(); There's also an @XmlAccessorType(XmlAccessType.FIELD) on the class as a whole, which tells it to look at the fields and not the setters/getters... I'm not sure, but it's possible you're having trouble with the naming of your setters and getters too, since typical bean convention would call it setUser and not set_user... Edit: It really would be far easier to just write the schema and process it with xjc than to spend ages fiddling with the details to get the exact right combination of annotations and field/method names...
If I remember correctly, you've posted about this several times, and each time most of the problem was connected to using HtmlUnit. Is there some specific reason you're so attached to HtmlUnit, instead of using a library which is built for your task, and not unit testing? http://jsoup.org/
The web.xml servlet-mapping maps either extensions or URL-patterns to servlets. To work with SpringMVC, the request has to be routed to the org.springframework.web.servlet.DispatcherServlet. This configuration is using the standard Servlet-API. The Spring dispatcher servlet now routes with the help of handler mappers and handler adapters to your code. This is the part that the spring framework adds to the whole. If you map the DispatcherServlet to e.g. /app/* and then use an @RequestMapping("/login"), the resulting URL will be http://server/contextPath/app/login 
I have tried to reload the parent nodes of the dragged node, and the parent node at the drop. I tried all four of the incantations. 4? Maybe 3. I don't recall. I appreciate you taking the time to offer an answer. 
Awesome! That worked perfectly!
I agree! The title and the content are reversed, but the author explains this later on it seems.
Since it's just the `null` potentially returned by `getAnchorByText` that you actually care about, you should check that explicitly instead of using `try`/`catch`. eg: anchor = page.getAnchorByText("Next"). if (anchor == null) { next = false; } else { page = anchor.openLinkInNewWindow(); } By catching `NullPointerException` you'll also be catching `NullPointerException`s caused by a bunch of other things, like page being `null` or either `getAnchorByText` or `openLinkInNewWindow` throwing a `NullPointerException`, any of which could be bugs that you're just sweeping under the rug.
Declare variables as the interface, not the implementation: ArrayList&lt;Object&gt; list = new ArrayList&lt;Object&gt;(); is bad IMO, should be: List&lt;Object&gt; list = new ArrayList&lt;Object&gt;(); Do the same with function parameters, try to be as generic as possible. Don't force a specific type of object unless you are actually using it. Too many times I've seen functions like this: public void doSomething(ArrayList&lt;Object&gt; stuff); should be: public void doSomething(List&lt;Object&gt; stuff); and if you don't need to index the stuff, it should be: public void doSomething(Collection&lt;Object&gt; stuff); This principle should be applied to all objects/interfaces, not just lists/collections
I hear that. I really wish Java was defensive by default (e.g. final by default unless marked non-final).
In my code, you can find the tricky bits by looking for non-final variables. If you have a problem with that, I can arrange for you to be working with a legacy system that doesn't follow these practises. It might be educational.
Indent code 4 spaces: ArrayList&lt;Object&gt; list = new ArrayList&lt;Object&gt;(); becomes: ArrayList&lt;Object&gt; list = new ArrayList&lt;Object&gt;();
- Use inheritance liberally when classes are similar. It saves on rewriting the same code and helps make more generic helper functions - If a function/method is used in more than one class, it should probably be in some utility class and definitely shouldn't be copy pasted somewhere else -Any time you think about copy/pasting a block, you should probably move that code into its own method.
Creating unnecessary variables makes the code a lot less legible.
I absolutely love the book "Clean Code", many tips and suggestions like this and the ones below.
I can tell you've never had to debug a 10-line string of func1( func2( func3( param1 ), param2 ) ) and operators that some asshole wrote and now you have to fix. After you do, you'll agree with digitalbreed.
In any case, whatever you do, document it!
Disagree, the second one is far less readable then the rather cleaner first.
In school, comment code was something I did to recive full credit. In school, I seldom touched code after I turned it in; I never touched it after the class was over. In the real world, you will be coming back to code down the road, and you probably won't remember what you were thinking when you wrote it, so comment for the sake of your future self.
You're right on ints and set. But this meant as an example on how to avoid large if statement expressions, especially those with five or more comparisons. 
I hear "copy/paste is the next best thing to reuse" at work more often than I care to mention.
Better yet, hit up [Apache HttpClient](http://hc.apache.org/httpclient-3.x/). IMHO, the easiest way to handle HTTP in Java.
Cannot upvote this enough. Seriously, if you want to differentiate yourself from the average, this book needs to be your bible/gita/quran/etc.
In #3 you're confusing unrelated things. Composition over inheritance has nothing to do with making everything static. It's sometimes implemented with statics, but there is absolutely no reason it has to be. They're completely separate and orthogonal concepts. 
not perhaps so useful when iterators are available, but counting backwards through a list can often make code simpler as you can remove the item without worrying about the changes after it. I find it can help when you have to break a list into smaller parts e.g. to send to database query
Actually use Sets instead of Lists from time to time, especially if the essence of your collection/return value is that you don't have duplicates and the ordering does not matter. Both of these can be implicit in Lists too, but why not communicate that clearly. Also: Use your own (or Google-Guavas) Optional-Type. Instead of writing "if no X is found, the return value might be null" and giving the user of your code the chance to miss that, return Optional&lt;X&gt;.
You're right. I was trying to make a short easy way to execute it but tripped.
What? It's still consistent...editors don't randomly make tabs within a document render at different widths. &gt;every person's editor of choice does have its own idea of how to mix tabs and space, and the result always ends up being inconsistent indentation over the code base ...which is why if everyone just set their editor to use tabs only we wouldn't have this problem. Only if you do so, each of us can now have the code rendered to our screens with tabs as wide or as narrow as we like, visually, *without it affecting the codebase at all*. Are you against using constants as well?
I've used icefaces before and its component suite (even the paid enterprise components) is no way near prime faces's offerings. I love the fact that primefaces also have mobile components. 
Thank you
&gt; editors don't randomly make tabs within a document render at different widths No, but some can be set up to use arbitrarily positioned tab stops. I think you can actually set-up Emacs so that it does randomize the tab stops. :) Anyway, the real matter is that most people mix tabs and spaces, some people actually have whole rationales for doing so (e.g. use tabs for indentation, then spaces for alignment). In that very common case, using anything other than the original tab width is bound to be problematic at times. In practice, there is always something wrong with tabs and spaces. &gt; if everyone just set their editor to use tabs only we wouldn't have this problem They would also be required never ever to put a space after a tab, which most people do, for example to align multiple conditions in a multi-line if statement. &gt; Are you against using constants as well? Wtf man?
&gt; Don't &gt; public Object someMethod(...) { &gt; ... &gt; } catch(SomeException e) { &gt; throw new SomeOtherException(e); &gt; } I'd say this is correct in many situations. You want to throw exceptions at the same abstraction level as your operation is, e.g. you don't want to throw SQLExceptions from your data access layer to business layer, because revealing implementation details (such as data access going through JDBC) breaks the encapsulation. Instead you should wrap the SQLException to some higher abstraction level exception (possibly RuntimeException as there's not much a business layer can do to cover from SQL related errors), rethrow and be done with it.
The project details are in .project and.classpath. They do have a tendency to use absolute paths though so the other posters import suggestion is the way to go at least for simple projects.
better yet, use generic methods instead of public void doSomething(List&lt;Object&gt; stuff) do public &lt;T extends Object&gt; void doSomething(List&lt;T&gt; stuff) This makes it a lot more versatile, and your instead of having 10 different methods to manipulate all your subclass implementations of a parent, you can have 1, with no casting required. Very useful for add/removing list entries and other general dataset manipulation. You also get the benefit of additional compiler time error messages to avoid runtime errors.
Document it? with comments? it should be obvious from the code what the intent is. If it's not then refactor the code so that it becomes obvious. 
**This is not a good tip.** Do not add comments to your code unless you absolutely need to explain why you did something in a certain way. It becomes harder to maintain and less readable. If you are commenting code to explain to someone what is going on within a method then they A. don't understand java B. will read the comment and not the code assuming they understand what the method now does. If you can explain code in a comment then why is it we don't write code in English? it's not as accurate or expresive as the code and never will be. Refactor bad code that you've commented so that you can understand it from the variable names and method calls. Each class has a name which should indicate it's function (It can only do a single task), expressive method names and variable names should be enough. Read clean code chapter 4 &gt;The proper use of comments is to compensate for our failure to express ourself in code. Note that I used the word failure. I meant it. Comments are always failures. We must have them because we cannot always figure out how to express ourselves without them, but their use is not a cause for celebration. So when you find yourself in a position where you need to write a comment, think it through and see whether there isn’t some way to turn the tables and express yourself in code. Every time you express yourself in code, you should pat yourself on the back. Every time you write a comment, you should grimace and feel the failure of your ability of expression. &gt;Why am I so down on comments? Because they lie. Not always, and not intentionally, but too often. The older a comment is, and the farther away it is from the code it describes, the more likely it is to be just plain wrong. The reason is simple. Programmers can’t realis-tically maintain them. &gt;Code changes and evolves. Chunks of it move from here to there. Those chunks bifur-cate and reproduce and come together again to form chimeras. Unfortunately the com-ments don’t always follow them—can’t always follow them. And all too often the comments get separated from the code they describe and become orphaned blurbs of ever-decreasing accuracy. 
Debugging is harder than programming so don't write code as cleverly as you can, because when it comes time to debug you won't be smart enough. 
In an hour, this has gotten three downvotes. Why? I could understand disagreeing with it, but it clearly adds to the discussion. It expresses a school of thought that's widespread enough that both myself and *DeliveryNinja* believe in it and that's described in detail in the book *DeliveryNinja* describes.
Try swapping getClass() for getClassLoader(). Then when you are getResource("foo/bar.png") or whatever make sure that "foo/bar.png" is relative to the root of the classpath. So if it is in a jar it would be in a folder called "foo" within that jar. Make sense? getClass is always a little risky because you don't know where that class may end up being loaded from in complex deployments. edit: speling
Why the second one? You're probably copping at least an order-of-magnitude performance hit for style? I don't see TOO much wrong with the if chain most of the time, but a better way of avoiding it is: switch ( x ) { case 1: case 4: case 7: .... } which should function almost identically to if-ing (essentially test 1, branch if true else test 4, branch if true else...) without the ugly.
Doesn't seem to be that Java specific.
Well, obviously everyone would have to reformat your code anyway, because aligning all of your assignments like that is ridiculous. Regardless, I was talking about indenting lines, not internal spacing within lines.
Forgot to address this: &gt;&gt;Are you against using constants as well? &gt;Wtf man? My point was that tabs are placeholders for an arbitrary (depending upon the editor in which the document is viewed and user preference) number of spaces, much like constants are placeholders for literal values. Both are much more flexible in the grand scheme than their counterparts, and in a similar way.
I recommend checking out [java concurrency in practice](http://www.amazon.com/Java-Concurrency-Practice-Brian-Goetz/dp/0321349601) to learn best practices for concurrent programming in Java. For distributed apps I mostly use Amazon EC2 service. They also have SimpleDB (a nosql database), SQS (message queue), SNS (push message service), and a relational database service. For most distributed non website apps those are all the building blocks you need. For webapps or web services I really like the Play Framework, which is very rails like except for being java/scala. My modus operandi is to set up a web service interface for each element of my distributed app because then you are down to simple http requests for the bits of you program to communicate. To secure these services I usually will limit requests to localhost then set up ssh tunnels to communicate over. EC2 has an easy to use Java api library for spawning up and monitoring instances. Once an instance is spawned I usually set up an ssh tunnel to forward commands to launch whatever I want to do. I use [ganymed](http://www.ganymed.ethz.ch/ssh2/) as a pure java ssh client. So in terms of a simple distributed webscraper that doesn't need to track state (e.g. logging) this is an example architecture: * Set up a program that reads a url from the SQS queue, downloads the page, extracts the links out that you want to visit, and adds each link back into the queue. * It then does any other processing you need on the page, saving the result to SimpleDB. * You can run multiple instances of your program across separate servers to scale horizontally. * Once that is all set up you could write a controller that monitors the load and automatically spawns up, shuts down ec2 instances according to demand. Also I recommend checking out Hadoop, which is the open source Map-Reduce implementation, if you are interested in more of a distributed batch type job. I also really like RabbitMQ as a message queue service (written in Erlang not java but they have a java client api library) if you want to use your own message service and not Amazon SMS. 
Use a souce code management tool. Github and bitbucket accounts are free and easy to use. Commit early and often.
Nice one ;) let me know what you think. 
Don't blame Java too much, it is bloated enough already :P And HttpClient is pretty good for what it offers, good luck!
http://lwjgl.org/projects.php
so what do you use??
When I have to deal with that sort of nesting I into the methods and it it's not the right one, I step out. 
Actually there are [quite a few](http://lwjgl.org/projects.php) projects using LWJGL, not to mention SlicK which is a 2D game engine built off of LWJGL.
Yeah, I tried that. System.err.println("This is my search path -&gt; " + appSetup.class.getClass().getClassLoader().getResource("")); Exception in thread "main" java.lang.NullPointerException It does not even do the System.err.println - the app just dies. I have Googled extensively, read the documentation, read the bug report from Oracle/Sun claiming this is fixed .... I have tried .....getresource("image.gif") .....getresource("/image.gif") .....getresource("package/image.gif") .....getresource("/package/image.gif") .....getresource("folderInJar/package/image.gif") .....getresource("/folderInJar/package/image.gif") .....getresource("folderContainingJar/folderInJar/package/image.gif") .....getresource("/folderContainingJar/folderInJar/package/image.gif") .....getresource("/folderInJar/package/image.gif") .....getresource("folderInJar/image.gif") .....getresource("/folderInJar/image.gif") and so on, moving the image resource as appropriate. As far as - .....getresource("~/discFolder/discFolder/folderContainingJar/folderInJar/package/image.gif") I have tried setting / unsetting the Class-Path in the Manifest to each and every one of the above. I have tried the resources in a separate, next-to, Jar and referencing that. I have tried setting the Class-Path in the Manifest to the classpath reported by my IDE I have tried setting classpaths through the command line. I have spent hours on this, I only ask questions when I am totally stumped, because I don't want to look an idiot. Whatever I do, the system.out (classpath) returns null when launched from a Jar. I am. Totally. Stumped. 
Thanks. Used it after you pointed it out. Same results, sadly.
a god among men. i saw something similar in stackoverflow, what is this boundary business?
Wurm Online.
Implying LWJGL is an engine?
http://www.ietf.org/rfc/rfc1867.txt
As long as it's meaningful. The following comments are completely useless as I could have figured it out from the code: public class Person { String name; // person's name int age; // person's age char sex; // person's sex }
an executable jar file should contain resources it needs within it, within the jar .. that is , and the manifest file should contain entries for these ..... would it be worth checking the manifest ? **jar xf &lt;jar name&gt; META-INF** should extract the META-INF folder and the manifest file alone ....
Huh, that explains why I was getting 19FPS on Spiral Knights when I get 50FPS in BF3.
[SO link - this is probably you ?](http://stackoverflow.com/questions/3718201/how-to-add-resources-to-classpath)
[Blocks That Matter](http://www.swingswingsubmarine.com/games/blocks-that-matter/)
Ah, not really, should've phrased it better. I just want one example of a Stripes Framework Implemetation and a Struts Framework Implementation. That'd make it clearer in my head. Though from what I gather Stripes is a bit crap anyway. No XML support seems odd.
1. make variable private by default. 2. make them final 3. use annotation specially @Override, help you to find mistakes like public boolean equals(String obj) which is not an overridden method but many do that way. 4. use generics on collection HashMap&lt;String&gt; not HashMap. 5. favor composition over inheritance
PrimeFaces and JSF 2.0 is really leaps and bounds above other Java Frameworks I have tried. It makes it very simple to create complex GUI with very little work.
New Dev here, does LWJGL stand for Light Weight Java Graphics Library?
Ah nice, Thanks Man.
When you run from your IDE, look at the command line arguments that run your application. Maybe you're forgetting to add a necessary variable? Have you tried creating a bat file or script that uses the same command line arguments to run the jar?
I use it myself. It's just an OpenGL wrapper (+OpenAL, input and misc utils), so you don't need to look for LWJGL tutorials specifically.
Issuing a HEAD should work just fine, and the code there should be good enough too. You could consider trying it with [HttpClient](http://hc.apache.org/httpcomponents-client-ga/), but I'm not sure if it will be faster.
I took AP comp sci last year, and I'm a TA this year, and I have to say that comments are useless. For the AP test, The comments are even worse because they aren't colored. I personally just scribble them out because they got in the way of reading the code. 
 public static void httpPinger(String address){ try{ URL url = new URL(address); HttpURLConnection connection = (HttpURLConnection) url.openConnection(); // Gets the status code from an HTTP response message. int i = connection.getResponseCode(); System.out.println(" Code from an HTTP response message is: " + i); }catch(Exception e){ System.err.println( "Fail"); e.printStackTrace(); } } 
[JGraphT](http://www.jgrapht.org) ? [JUNG](http://jung.sourceforge.net/) ?
this is why I love java. a library (or 2 in this case) for everything.
I'm using JUNG along with Processing as we speak. It's not perfect, but it's much better than writing your own layout algorithms.
I would, but not sure how large it would get.
Hmm... what about if it was an interfaces for the non-logical but programming loving people out there? I'm sure there's other versions of Swing for different languages.. Just have to market it right I suppose..
This looks amazing. 
I was looking at JGraph, but it seemed like it was commercial, from the webpage. After more poking, it looks like the simple rendering thing is open source, although they still request a pay-for license for... something? JUNG looks good. I'll try both, see if one or the other works better for me.
Swing is like JFrames Jpanels ect right?
&gt; Don't: &gt; if ( x != null) { if (x.equals("foo")) { &gt; Do: &gt; if ("foo".equals(x)) { I don't agree at all, your "corrected" example is much harder to read IMHO. The comparison is inverted compared to the natural language version, an anti-pattern commonly referred to as the "Yoda comparison".
Oh, I didn't know that... Should I be looking at pieces of OpenGL to understand it better then, or should I be able to learn enough with just LWJGL and no other prior experience with OpenGL?
You can start with some of the basic tutorials at LWJGLs wiki. From that you should be able to build a small simple game (like snake or tetris). If you don't want to deal with all those low-level things (like OpenGL), I suggest something like Slick2D.
If you haven't, take a look at the CS106A course offered in Programming Methodology on iTunes U. I found the beginners Karel exercises interesting as a starting point, and then went on from there to build their Breakout, Yahtzee, and Hangman games. Simplistic games, sure, but relatable and fairly quick to design and code.
[StackOverflow](http://stackoverflow.com/)?
It's hard to suggest anything without knowing more about where you are skill wise. However, a good way to learn some swing / java with instant gratification is to build something in a GUI builder and then just mess around and see what you can do. Most IDE's offer code completion, so if you are stumped you can just do a [object]. and scroll through what is available.
Some people are implying that LWJGL isn't the best to work with. Is there any particular reason, and is it worth learning? Are there better alternatives?
At JavaOne last year, Oracle made it clear that while Swing will continue to be supported, the future for coding client-side UIs is JavaFX 2.0 and later. So, just a heads-up to proceed with caution.
Oracle just released JavaFX 2.0, which was a significant rewrite. They just released Net Beans 7.1 with JavaFX support, and at JavaOne had about a dozen sessions on it. They're pretty committed. They want to get out of writing Swing code.
If the sites you're contacting are not your own, remember to check for robots.txt first.
Thanks. I'm using an Ant build, and creating the manifest myself from within the build script.. I have found the reason it wasn't working, however. I made a test program, and eventually found the IDE was not treating the project directory as it's base, root directory. It is treating the src directory beneath the project directory as the base directory - nothing 'above' src, although part of the project, is usable. So it was my stupidity, in looking at the project, and comparing relative directories against an irrelephant directory. I appreciate your help in helping me grope towards a solution. 
Thanks. Actually, I kept seeing this as the answer, whatever google turned up, this would be among the top answers. Your message was not irrelevant - it made me accept, finally, that this was the correct way to set about this. Getting the message from a Redditor woke me up to not ignore it - on the basis that machines, environments and usage vary so much, any given google-found answer has a built-in chance of being entirely misleading. Your direct reply to my direct question was motivational. I have found the reason it wasn't working. I made a test program, and eventually found the IDE was not treating the project directory as it's base, root directory. It is treating the src directory beneath the project directory as the base directory - nothing 'above' src, although part of the project, is usable. So it was my stupidity, in looking at the project, and comparing relative directories against an irrelephant directory. I appreciate your help in helping me grope towards a solution. 
Thanks. At first read, I thought your reply was what I had been doing anyway. As it turned out, you were pretty close to the solution. I have found the reason it wasn't working. I made a test program, and eventually found the IDE was not treating the project directory as it's base, root directory. It is treating the src directory beneath the project directory as the base directory - nothing 'above' src, although part of the project, is usable. So it was my stupidity, in looking at the project, and comparing relative directories against an irrelephant directory. I appreciate your help in helping me grope towards a solution. 
Try a HEAD request first, and if that fails with a 500-class error instead of 400-class or 200, try GET instead. Some web applications don't handle HEAD correctly.
.class gets the class declaration - name and properties. .getClass() actually (kinda) loads it - and that's the important thing. If your program has loaded a class, then it's reasonable to look where that class was loaded from in the search for related files. "You know the directory where you loaded that class from?, well look around there, and you might find....." barcodez didn't answer your question directly, his reply was talking about the differences between getClass() and getClassLoader() - which are the same thing, except for the little path manipulation he mentions.
I'd recommend [Slick2d](http://slick.cokeandcode.com/)
That was definitely *not* what I had in mind... as stated :)
As much as I use stackoverflow, isn't that just a question/help based community rather than sharing links and projects?
Yup! Exactly like that but the fancy stuff you can do with Swing.
I understand that, I mean the other language-specific libraries such as in C#. 
Ahh, well that would be .NET and WPF for C#.
I'm not sure what you mean by the visible part is part of the controller. Usually you set up your button within your view class and link the action listener to your controller class. That way the application logic remains separate and is managed by the controller.
This is what he said should be in 'controller' (roughly): JButton button = new JButton("Text"); button.addActionListener(this); container.add(button); Here's how I thought it would/should be: // View JButton button = new JButton("Text"); button.addActionListener(controllerClassObject); container.add(button);
I would agree with the second one. It would make more sense to me because you don't want to clutter your controller class with UI code and the button is a very simple example to set up. Think of more complex layout code. I'm inclined to say you're right and your teacher is wrong. However he did this maybe because it's a very simple example and he unified the whole pattern within one java class.
I'm afraid not, It's for an apprenticeship provider, who provide training for my apprenticeship, I'll share our finished project here though. :)
Although I understand the merits of Eclipse, I think it is a terribly complex IDE to start with. Netbeans is probably the easiest to pick up and learn. I would look for a GUI tutorial in netbeans and just have at it. It will auto underline any code that isn't formatted correctly so you have instant response on whether the code is syntactically correct. I'm not as familiar with C, but I know my first intro to java was essentially writing C++ code and looking up anything that gave me errors, they are very similar. 
Also learn the proper terminology. Know the difference between a variable and a field ;)
The [Heads First](http://www.amazon.com/Head-First-Java-Kathy-Sierra/dp/0596009208/ref=sr_1_1?ie=UTF8&amp;qid=1326208328&amp;sr=8-1) series of books is excellent for rank noobs such as yourself. Linked is the one for Java but there are ones for [Object Oriented Design](http://www.amazon.com/Head-First-Object-Oriented-Analysis-Design/dp/0596008678/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1326208418&amp;sr=1-1) and the [Design Patterns](http://www.amazon.com/First-Design-Patterns-Elisabeth-Freeman/dp/0596007124/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1326208447&amp;sr=1-1) as well. 
I just recently found that looking for such websites and that was one of the worst designed I've ever seen. I'm not doubting the website itself but it does look a mess. I'll still check it out though, thanks!
As clavalle said, the Head First series is a good first Java book. Online, there's the [Oracle Java tutorial](http://docs.oracle.com/javase/tutorial/getStarted/index.html). Once you get a good footing in the language, move on up to [Effective Java](http://www.amazon.com/dp/0321356683/) for an excellent analysis of the language features and best practices. Are there any specific concepts you don't understand? 
specifically, things involving inheritance, scope and in general features which object oriented design capitalises on. I did procedural python first term so procedural program im quite happy with.
Just throwing this out, but is it possible you misheard or misunderstood what the teacher said? A few of the things I've read about swing and mvc talk about Swing widgets themselves encompassing both the controller and the view portions. You as the programmer add a button to your panel. The controller part of the button is the API you use to mess around with it, setting the text or responding to an action. There is nothing that you as the programmer ever see about HOW that button is actually drawn on the screen. That is the view part of the code that you never really see. What it comes down to is your domain objects are your Model, The Swing Library and your swing code become the Controller, and the View is mostly hidden from you and takes your Swing Widgets and paints them on the screen correctly.
yes these have been great (im using eclipse already its very good), unfortunately my coursework deadline was today and I handed in absolute shit. Needless to say I'm very depressed about it but I have decided that the only thing I can do is learn from it and ace the programming exam. Thanks for replying.
We were basically shown a simple app looking something like this: [http://i.imgur.com/d55Ca.png](http://i.imgur.com/d55Ca.png) The 2 white fields are canvas type elements containing an image which represented a number that was stored inside the 'model' in different ways (The first displayed a number of blocks equal to the number, the second displayed a pie chart with the degree to which it was filled representing a number between 0 and 360). We were basically told that the 2 white fields were the views, the model class contained the number and a list of the view classes, and the controls were the buttons and their underlying code. It's not impossible that I misinterpreted what he said, but his explanations are generally remarkably coherent and easy to understand. I certainly did not feel as though I misunderstood anything.
I highly recommend [The Java Programming Language](http://www.amazon.com/Java-Programming-Language-4th-Arnold/dp/0321349806) by the creators of Java themselves. I learned Java over a decade ago from an earlier edition of it. That was after months of frustration trying to understand the language using a variety of other books (in particular, Java in a Nutshell by O'Reilly, which was really awful).
I second the Oracle Java Tutorial. The link above takes you straight to the "Getting Started" section. If you want to go farther, here's the link to the main tutorial table of contents: [Oracle Java Tutorial TOC](http://docs.oracle.com/javase/tutorial/). Definitely read through the "Trails Covering the Basics" section and links.
What would you say you are specifically having trouble understanding? Are there certain things you understand well and others you don't understand at all, or do you find yourself overwhelmed by everything? As one mentioned - learning your IDE (such as Eclipse) can be just as big a task at first as learning to code. This is precisely why some of my professors insisted that students first learn how to write code in a basic text editor and compile/run the programs from the command line directly. While I do agree with this way of thinking, I have found that Eclipse teaches beginners the strength of formatting code in a cohesive and structured manner, and the syntax highlighting, error highlighting and suggestions (which often link directly to the API classes with detailed information about them) are extremely helpful once the student has a general grasp of the basics in Java and OOP in general. I would reccomend you strive to understand the standard data types and OOP concepts and then start writing some very basic text based programs. Search StackOverflow for responses to questions that have likely been asked many times before you and note how others have written their own code to start comparing with yours. There are many ways to do the same thing when coding and no way is definitively THE way to do it - although there are definitely wrong ways to do things. Don't get discouraged - maybe other students who understand these concepts can explain things to you in a better way than your professor(s). If you stick with it, eventually it will 'click' and you will say "ohhhh NOW I get it!" 
This book is free and excellent: http://www.ibiblio.org/pub/docs/books/eckel/ Thinking in Java by Bruce Eckel
Let me take a crack at it, then. **Java Inheritance** Java classes may *inherit* methods and fields from one other class. For example, let's say you have a `Cat` class, and a `Cat` can purr. That class looks like this: public class Cat { //A Cat can purr public void purr() { System.out.println("Purrrrrr"); } } Let's *extend* that `Cat` class with inheritance, and create a `Tiger` class that can also *roar* in addition to *purr*: public class Tiger extends Cat { public void roar() { System.out.println("ROAR!"); } } The `Tiger` class *inherits* all methods and fields from the `Cat` class, since `Tiger extends Cat`. So, a `Tiger` can both *roar* and *purr*: Tiger tiger = new Tiger(); tiger.roar(); //Outputs "ROAR!" tiger.purr(); //Outputs "Purrrrrr" However, a `Cat` cannot roar, it can only purr: Cat cat = new Cat(); cat.purr(); //Outputs "Purrrrrr" cat.roar(); //Compile error! **OO Features** **Separation of Concerns** This is the key principle in programming, not just OO design. It is the idea that each piece of code should only know about things it is directly responsible for. For example, let's say you have to store a `Cat` in a database. You could add a method to `Cat` to do that, like this: public class Cat { //A Cat can purr public void purr() { System.out.println("Purrrrrr"); } public void store() { //Store the Cat in the database } } That is **wrong** - a `Cat` has nothing to do with a database. Instead, you could create a simple *data access object*: public class CatDAO { public void save(Cat cat) { //Stores cat in database } } This object knows how to store a `Cat` in the database, and would also be responsible for retrieving a `Cat` if we needed to. The `Cat` can concentrate on being a `Cat`, and the `CatDAO` can worry about saving the `Cat` to the database. The concerns have been separated! **Encapsulation** This gives classes the ability to *hide information* - the internal state of an object is hidden from other classes that don't need to know about it. Let's try adding a *private* method to our `Cat`: public class Cat { //A Cat can purr public void purr() { System.out.println("Purrrrrr"); } //This method is private - it can only be used within other methods of the Cat class! private void poop() { //Poop! } } Other classes don't need to know that the `Cat` can poop - it's not relevant to them, so we hide it. **Polymorphism** This is an OO idea that is related to *inheritance* - objects are also their subtypes. From the example above, a `Tiger` is also a `Cat`. Any method that accepts a `Cat` can also accept a `Tiger`, but methods that accept a `Tiger` cannot necessarily accept a `Cat`. This is because a subtype might not do everything that an extended type can do - a method that needs a `Tiger` might need the `Tiger` to `roar()`! Since a `Cat` cannot `roar()`, it cannot substitute for a `Tiger`. However, a `Tiger` may substitute for any `Cat`, since any `Tiger` can do everything a `Cat` can do (in this case, purring). 
You might want to take a look at [Java For Dummies](http://thepiratebay.org/torrent/6752878/Java_For_Dummies__5th_Edition). The author does some really nice analogies to help you remember, and it covers everything you should need. (The link is to the free download.)
I really like Bruce Eckel's book and still find it helpful as a reference and tutorial. Try making simple programs, and then try making the simple programs a little more sophisticated. For example, maybe you could re-implement the program using a specific design pattern, or maybe you can make use of a different class structure to do what you need, etc. That way you have two directly comparable programs - after all they do the same thing - but you can see where the differences lay in implementation.
I tried the coursework, I spent most of the time staring at a screen but did not know where to start. During the last few days I hacked out some code which could be used in a calculator albeit the wrong sort and still ran out of time before i could get anything working. Long story short I was swamped/confused and demotivated but still spent many many hours trying.
it is entirely possible that mine and your views differ from your teachers :). It seems like he is saying the white fields are purely views of the models, in that there is nothing in the field that can change the models. He is calling the buttons controllers because they do in fact change the model. I'm not saying he is wrong necessarily, but his understanding of MVC and mine are different. I think part of the problem is Java with Swing makes it hard to understand MVC because of how tightly coupled the VC is with Swing. I found it a lot easier to understand the three separate layers when i tried to do a few web dev type things. The Models are still models, the views were the HTML/templates, and the controllers were the classes that took the URL,Cookies,Inputs, etc figured out how to change the models if needed, and figured out which template(view) to show the user.
True... I usually put in a blank return statement to get that to disappear and then fix it later... like int myFunction(){ return null; } 
For an intro level course I am surprised that there would be such a demand on knowing more than the basics. You mention you have trouble knowing when it is right to create a separate class - this is where the concept of modular design becomes important. One way to approach this is to think of your main (driver) class as the center of your program such that it coordinates and uses all the other classes packaged around it. The goal is to make every *thing* (object) its own separate class. The end result should be a program that has many modules that can easily be recognized and each class can be altered without needing to change much if any code in the other modules or the main program. The idea of extending/implementing classes into subclasses is also important - for example if you create a class to define a sphere object such that it has a radius, a maybe a few methods ( getDiameter(), getSurfaceArea(), setRadius(), getVolume() to name a few) you can now implement this class as a sunglass to create specific instances of spheres (maybe one is a tennis ball, another could be a beachball). This allows you to reuse your sphere code across many applications. Let's say tomorrow they decide there is some totally new formula to figure the volume of a sphere - you make the changes to your single sphere class and it trickles down to each subclass implementing it. For these concepts I would recommend a book on Java Objects and Structures to help explain it - PM me if you want to discuss more as I have quite a few books at home but can't recall the names off the top of my head now.
&gt; things involving inheritance, scope and in general features which object oriented design capitalises on. Keep in mind that there are (at least) two layers of understanding for each of those topics: 1. The "mechanical" question of what happens when one class extends another; what the syntax for it is; what produces valid, compilable code and what doesn't; etc. 2. The high level question of when to use each feature under which situations. I'm not sure what's the best order for learning these two layers, but empirically, it seems like most people learn (1) first, and either learn (2) much later, or more depressingly, never really learn (2).
You need to setup ntp maintain time sync and accuracy over any significant time. PC internal clocks are pretty hopeless.
My pleasure :)
You can certainly always count on System.currentTimeMillis() or nanoTime() do accurately match the actual pc's time, so the real issue at hand is not a Java issue at all but really a system / system administration issue.
System.nanoTime() does not measure the current time. As the documentation states: &gt; Returns the current value of the most precise available system timer, in nanoseconds. &gt; &gt; This method **can only be used to measure elapsed time** and **is not related to any other notion of system or wall-clock time**. The value returned represents nanoseconds since some fixed but arbitrary time 
Copy/paste from my post on this elsewhere. I follow Java developments regularly and I don't see these points as being real issues. **Modularization**: Project Jigsaw is meant to bring a more simple module system when compared to OSGi. OSGi is a great tool, but overly complicated for many people. Also, having Jigsaw built into the JRE will allow Oracle to split the base JRE into modules and hopefully reduce the memory required on initial load of a Java app. (Java core libraries have some horrible dependency trees, which cause a large chunk of the base JRE libraries to load on even the most simple applications). OSGi could be used instead of Jigsaw, but Sun (at the time Jigsaw was started) I believe wanted to see if there was anything else they wanted to do to the modularization format and behavior that would work better for them. (See [this article](http://eclipse.dzone.com/articles/gosling-osgi-jigsaw-and) that slams Sun for choosing to do Jigsaw instead of using OSGi) **Java Licensing**: Sun started to push OpenJDK before it was bought by Oracle and that trend is continuing. The idea is that OpenJDK should be included with OS's like Ubuntu. OpenJDK is a GPL fork of a majority of the Oracle JDK, but some pieces could not be released as GPL because Sun originally licensed them from others (so those parts had to be re-written). I think it's better for everyone if OpenJDK gets more people using it so the bugs are worked out and it's a great open source Java implementation.
i really like this piece of advice thanks, youre right, I am thinking like a doctor not a programmer, this is an extremely new concept to me and i find it very unintuitive.
while i understand these when they are laid out for me i wouldnt know how to create a structure like this but i will try making basic ones like that then making them less obvious examples if, thanks for the offer, if you name titles that you can think of i will add them to my rapidly growing reading list.
ill look that up 
I believe [jMonkeyEngine](http://jmonkeyengine.com/engine/) is based off of LWJGL. Their website includes a [showcase](http://jmonkeyengine.com/showcase/) of games created using their engine.
A Big thing I found useful was the fact that with programming you don't really know what's there until you see it, for instance if you were trying to check a variable for multiple values like If(int1 == int2) //do something If(int1 == int3) //do something else You could instead use a switch statement (google is your friend) A good way to learn things for me was looking at small game code, I looked at source for asteroids to learn how graphics worked among other things. Javaboutique.com is what my high school teacher showed me and it synergies with my method of learning 
One way to learn is to write anything that works mostly well, and then make it better. "Better" means that it works for more inputs, or that it's easier to use with respect to the rest of your system, or that it uses a technique that your textbook and professor recommend. I don't know how it works in the UK, but in the US, this will at least get you partial credit in school and even in your career. People appreciate an honest attempt, and your professor/TA are probably desperate for you to come and ask them questions. You don't seem to be much of a book or lecture learner, so like many (most?) of us, you just have to learn by making mistakes and reflecting upon them. Luckily, computer science provides many opportunities for making interesting mistakes :)
Problem: There are only methods in codingbat, as far as I know. Which is why I said that, as you won't be writing classes at all while doing the problem, just working on the method and it's insides.
i think my exam will be stuff like that though, free hand writing code, so i need to learn how to do it in one go
I know what you mean for the exam, but ... I'm confused now about before. I guess you're working outside the browser on these codingbat problems, *and then including* the class along with the methods for practice? I want to clear things up foremost. If you're going to work on the problems in the text box provided on the site, **you will not see the class construction.** The only thing provided for you is a skeleton of a method, and you just work on the inside of the method, and maybe the parameters too if the problem calls for it. Which is why I joked that you not forget the class construction part, as you'll skip all of that while focusing on these problems. Because it's *not there*. 
ah lol i thought you just meant the public class Blah bit as im pretty sure its going to be a lot of syntax, i doubt ill have to write any classes in the exam i have next week although I need to improve on this anyway
I think it's entirely possible to do these things with loops and a bit of brute force.
And making small entry-level projects that interest you. Practice, practice, practice.
I'm using LWJGL to develop a game right now and it's wonderful and easy to use. Do you know OpenGL at all? LWJGL is mainly just a Java binding of OpenGL, so in order to use LWJGL at all you pretty much have to know OpenGL. The [main page on the LWJGL wiki](http://lwjgl.org/wiki/index.php?title=Main_Page) is probably your best resource. Go through all the tutorials there and you'll be using LWJGL in no time. The only real alternative to LWJGL is JOGL, but as far as I know LWJGL is much more complete and has extra nice libraries for getting input from keyboard, mouse, gamepad, etc. LWJGL is pretty much the current standard for game development in Java.
Profiled JIT is hard to beat by static compile.
I guess the problem boils down to this: Swing is not strictly MVC but something called *separable model*. I've been doing Java for almost 10 years now and I firmly believe that Java/Swing is the worst way to teach people about MVC. Check this: [A Swing Architecture Overview](http://java.sun.com/products/jfc/tsc/articles/architecture/), it really helped me understand how Swing *actually* works.
The real problem is, its a valid error- without a return it won't compile, so the error line should be there... However, marking a method immediately as an error scares those who aren't used to it and causes more experienced devs to ignore genuine errors at first, assuming they know what the problem is, when in fact they may have a different mistake. My approach normally is to create the return object first if possible (e.g. if its a collection of some sort) and write the return statement second. Useful, because it means you never return the wrong object!
As many others have pointed out, the best way to learn this stuff is usually by *doing*. Find as many small examples as you can, and try them through. If you get stuck for too long though, seek help- staring at a screen isn't productive. Others on your course are likely the best first stop, because they have had the same initial materials as you. Likewise, if you have access to lab demonstrators/TAs then contact them, because they will often be able to help you get past small problems, and indeed are often *expected* to provide this help. Obviously whether you have this help available depends on the UK University you attend, but I know during my undergrad help was available. If all else fails, try to come up with a minimal example that explains your problem and ask for help online, e.g. on [StackOverflow](www.stackoverflow.com). Good luck, and feel free to drop a link to any online questions in reply, and I'll get back to you. Having gone through a CS undergrad degree in the UK I can probably be of some help!
Oh it is absolutely a real error and I agree that IDE's can be a bit... overzealous about flagging things. That works as well, something like int myFunction(){ int returnValue = null; return returnValue; } then go about coding the function
&gt; On Linux/OSX it is very accurate within &lt;1ms. Not quite. The value you get in the JVM is very close to the OS value (&lt;1ms as you said), but the OS value can be completely wrong. PCs that are not synchronized by NTP can easily drift by 1 or 2 second *per hour* after they boot. Alternatively, you can use `hwclock --hctosys` to periodically read the hardware clock, which is more accurate.
Yeah, that is exactly how I try to approach it, although in Java your example wouldn't compile ;).. Sorry, got a habit of noticing things like that through troubleshooting/marking undergrad work!
Perhaps I'm reading this wrong, but it seems they dropped support for the "Swing Application Framework" (JSR 296), not Swing itself. According to the [Wiki page](http://en.wikipedia.org/wiki/Swing_Application_Framework), the "Swing Application Framework" is basically abandoned, so it seems like it'd make sense to remove support for it. Relevant changelog snippet: &gt;In NetBeans IDE 7.1 support for designing GUI forms that use Swing Application Framework has been discontinued. If you want to edit such forms, use NetBeans 7.0.1. &gt;Note: Support for Swing is not affected by the removal of Swing Application Framework in NetBeans IDE 7.1.
Since JIT is much better at custom-tailoring optimizations to your specific system it really can be much faster than statically compiled code (depending on what you're doing). Most of the time the benefit of JET is simplification of deployment and/or code obfuscation (in case you're worried about someone decompiling your project). If neither of those are needs you actually have it's highly unlikely that it's worth the licensing costs.
You've got your conversion inside out - [the parameter passed to Math.sin is in radians](http://docs.oracle.com/javase/6/docs/api/java/lang/Math.html#sin%28double%29) - not the return result (ie you need to convert the value you're passing in, not the the one you're getting back) Try Math.sin(Math.toRadians(53)) 
We hope to make it multiplayer, and looking at slick it looks like it could make a lot Of other ideas much simpler. I'll have to look at that graphics1D object though. Thanks
You seem to be under the impression that you need a special project type to make a Swing app, which isn't true. You can add Swing forms to any project just by adding a JFrame from the "New" menu, just like you would add an additional JFrame to a project that's already using Swing. All that the "Java Desktop Application" template did was set up an example project with a bunch of boilerplate code using the Swing Application Framework, which was abandoned and has been bit-rotting for several years now. It's worth noting that 7.0.1 actually shows a warning when you use that template, telling you that it's unmaintained and suggesting that you look into alternatives. As far as alternatives go, if you really need the hand-holding from the example template, you could create your project in 7.0.1 and re-open it in 7.1, or just keep using 7.0.1 until you have a firm grasp on Swing. You can learn Swing from any number of sources, but I'm partial to the [official documentation](http://docs.oracle.com/javase/tutorial/uiswing/). It even has a [segment](http://docs.oracle.com/javase/tutorial/uiswing/learn/index.html) that specifically covers Swing with Netbeans, which walks you through how to create a simple Swing app from "New Project" on forward. I think that if you complete that quick tutorial, you should be good to go in terms of creating new projects for Swing apps, there's not really much to it. As to why they haven't replaced it with something else, I can only guess, as I'm not on the Netbeans team and have no particular insight into their thought processes. My guesses are a combination of the following: * Nobody stepped up to transition the built-in support to a newer framework, or to maintain the code that was already there * JSR 296 as both a codebase and an idea were officially put on hold, which is an indication from on high that using it probably isn't the best idea, even if you have a fork that's actively maintained * Swing (and Java desktop applications in general) have become less and less popular over the years, and there's less of a pressing need to make it as easy as possible to write Swing applications as a core feature of the program like the first versions of Netbeans did * JavaFX is the new hotness, and they want to encourage people to use it instead of Swing * Large-scale code generation like that template is a little less popular nowadays, because it's a one-size-fits-all solution and most apps end up either being simple enough that you don't need it, or complex enough that the generated code gets in the way and you end up replacing most of it anyways Sorry that this ran a little long, but I figured you'd rather have a full answer than a bunch of short ones over the course of a couple hours.
I do this, but I go back and remove these comments when I finished the code. Otherwise these comments will be redundant.
I should add 3) for Backward compatibility. HTML5 discovered that you Don't Break the Web, was it's number one design principle. Why is Java making this mistake? 
"what" comments are the stinkiest of the code smells. 
A try-catch block, or any code for that matter, is not expensive until you have benchmarked and confirmed that it is expensive. If this search is done on a database, you have probably at least two orders of magnitude of performance difference between the search and the try-catch block. On another note, why are you catching `Exception`? You should be catching the specific exception you expect.
There is no duplication of this code in this project. But there maybe duplication of this code in other projects which also use the DatablockRequest object. I know that getSearch() is duplicated in the majority of calls to the request object so I could start with abstracting this away and work from there.
Thanks for the article. I've just given it a quick once over but I'll read it in more depth later after work. They seem to be saying instead of doing parse(something) catch ParseException do if(isParsable), I don't know if having an if statement at every part of the chain is going to be any better than just catching an exception. 
Not sure what you mean in your last sentence, i never implied that you should be processing your data twice.
I can't really give you the code unfortunately since I'd be breaking company policy. Do you have any contrived examples? or links on google to some examples by any chance? 
Thanks for the advice.
Well, basically it involves taking a more functional than imperative approach. I hope you're using something similar to [Guava](http://code.google.com/p/guava-libraries/) for working on your collections? If not you should.
You might find [Null Object pattern](http://en.wikipedia.org/wiki/Null_Object_pattern) useful in these kind of situations. It doesn't fit to every null related problem, but when it does, it makes the client code really smooth. If the Null Object cannot be applied, then just hide the ugly null checks behind a private method and forget it. If the code sample actually was a body of some private method, then I would just change the control flow to use conditionals instead of exceptions.
The next time I find myself using reflection I will try to keep this in mind. It's syntactically much cleaner.
Just remember that all upvotes must be done from the event-dispatching thread.
Hrm this is a really interesting (although completely impractical!) question. My only idea right now is to replace common words with a variable, like String a = "program"; String b = "understand"; Which will gain you some characters but perhaps not enough.
You need to get the paragraph into a smaller form, and then you'll have to base64 encode it.
Do the line breaks have to stay in any certain spot?
The problem with this is that there isn't very much repetition. Adding all those open/close quotes and comma delimiters adds 3 characters per word... Here's my frequency count (rough on punctuation and unsorted, please forgive.) Total Words: 125 Unique Words: 83 to:5 :2 programmers.:1 detail:1 but:1 understand:2 for:1 no:1 'F':1 otherwise:1 submission:1 by:3 every:1 Java:1 attributed.:1 academic:2 of:2 copying.:1 any:1 understandable:1 on:1 only:1 entirely:1 credit:1 facilitating:1 devote:1 consequence:1 fully:1 people's:1 be:3 copying:1 work:1 programs:1 attentive:1 uderstand:1 get:1 submit:1 or:2 Every:1 and:3 shall:3 not:1 present:1 that:5 efforts:1 program:3 will:1 myself:1 pledge:2 class.:1 own:2 programs.:1 other:3 writing:1 explanation.:1 includes:1 I:7 Code:1 dishonesty:2 unless:1 if:1 name:1 written:1 write:1 grade:1 me:1 work,:1 (and:1 similar:1 is:2 with:1 it:1 whatever:1 a:1 learning:1 the:4 past:1 my:5 co-authors,:1 strive:1 any):1 also:1 abetting:1 
char[] a = ['a','b','c',...] It's still adding a lot of overhead... you'll have about 30 characters... maybe 32. Then, you'll need a comma-delimited list of their sequence. I'm not seeing this buying us the compression we need. Edit: I have a nagging suspicion that I'm missing something about char encoding.
Just memoize the most frequent character phrases from the paragraph. 788 chars: class P{public static void main(String[]args){String[]w={" understand"," academic dishonesty "," program"," pledge "," other","that","ing"," shall "," submi"," my"," writ","ver"," the"," to "};String s="I35 e;y2 with9 name on it7be:ten by me (and9 co-authors, if any) and 5 i fully0&lt;2. E;y2 I8t7be entirely9 own work unless4wise attributed. I0 51not only includes copy64 people's work, but also abett6 or facilitat6 copy6. Code 5 is similar=any48ssion past or present will get no credit whate;&lt; explanation. I0 5&lt; consequence of1is a grade of 'F' for&lt; class. I3to devote9 efforts=learn6 Java by:69 own2s. I7strive=be attentive=detail and:e2s0able by9self and42mers.";for(int i=0;i&lt;s.length();++i){char c=s.charAt(i);if(c&gt;'/'&amp;&amp;c&lt;'A')System.out.print(w[c-'0']);else System.out.print(c);}}}
I think you could cut the size of that paragraph in half by encoding every other character as the upper half of a 16bit unicode char. So "I " (capitol I then space) would become whatever character U+2049 is when its printed out, since 20 is space and 49 is I. Then just bitshift by 8 one way for the first char and the other way for the second char. There are a few reasons this might work. 1. Java allows unicode characters [in source code](http://en.wikibooks.org/wiki/Java_Programming/Syntax/Unicode_Source). 2. A unicode char is 16 bits long. 3. All the characters you want to encode can be stored in 8 bits. You'd probably have to write a program just to encode the text in high-order unicode. But the print routine in your main program shouldn't take many characters to write.
I'd suggest posting this to StackOverflow. The people there are insanely skilled and knowledgeable and might be able to give you an answer.
Did it need to retain case? I would replace every words first letter with a capital then compress be removing spaces, then use a regular expression to replace all capitals with the lower case version plus a space.
Well, then we need something like this: rewrite the paragraph and abbreviate common substrings with single characters not otherwise used. For example, "program" = "%", hence we can use it in program, programs, programmers. We need a program to find the most frequent longest substrings.
It could work if replaceAll did not have such a long name .....
772 characters... (you could shave a few more by eliminating the line feeds). Unfortunately, the paragraph is actually only 727 characters - not 793 as indicated in the challenge; so I guess this fails too. import sun.misc.*; import java.util.zip.*; public class A{ public static void main(String[] a) throws Exception{ Inflater f=new Inflater(); f.setInput(new BASE64Decoder().decodeBuffer("eNptklFu3DAMRK8yf9sCyV6iSIHkFrREr4nKkivSdn37ULJTJEA+JY8fNTN8xZI4Phg2kYE3rgeW\nWh6VZuxiE+YDmWZGyRCDTpQSBsZexYwzhgP+8Qfl2JShPNNqU6n6BBlB+fiJ9qnDBeOa0oE1R65q\n5z1/TLvj5cvwV+g6zJ9Hcjap7AAfVPaMvdQ/DkusiuKkuosyyKzKsBrHuzO+zPI3UKDIswRE0alk\nVnN7xdydcyWHtEZWt7Eckh8nFQsXz+imfeATnA1KWkADm3VZxUhBkhj18/X7Hb9KvIIVhcosiSqs\ntFwudveoKp7uQmoNtVRWt+rpu+0Hm78PoXL0KHZHtYp6bvxvSZR9YsnfOW2SULLy35Vz8P7Gb837\nwwgeeOyK2+8bxnLyQyLVRv5YkILIWzFu+fPoMtN2mZhqbrbfaKO2D2012vmq6Sq0o84u1RvaOnDo\nfbVit2uAkaS+Mo3yfzn0kz0aEve1O5TT2LVXT6d2dt39HcbRCdI=")); byte[] o=new byte[727]; f.inflate(o); System.out.write(o); } } 
add a `throws Exception` to main, it'll be shorter.
for(int i=0;i&lt;s.length();++i) { char c=s.charAt(i); if(c&gt;'/'&amp;&amp;c&lt;'A') System.out.print(w[c-'0']); else System.out.print(c);} } This was the part I was missing. Can you expand on the meaning of w(c-'0')?
It looks up the word phrase corresponding to special characters. So when I encounter the char '3', subtracting '0' from it converts it to the number 3. That relies on the fact that in ASCII the chars '0', '1', .. are consecutive. I then use the number 3 to lookup a phrase from the array. So the char '3' will lead to the phrase " program" being printed.
A Winner is You.
Add it to other components in the navigator.
An unfortunate problem with StackOverflow. It's a great place to post questions, but only if they can be transformed such that they don't basically appear to say "do my homework for me". There's a nice community in there somewhere...
I suspect that rule was intended to prohibit the loading of data from files, rather than the use of standard Java libraries.
could you explain these lines? f.setInput(new BASE64Decoder().decodeBuffer("...")); byte[] o=new byte[727]; I am messing around with them and getting 'incorrect header check'
depressingly took me a few minutes to figure this out ;_;
once wrote an infinite loop to write to a file. well my laptop did NOT like that.
Get rid of "public static void main(String args[])" replace it with just `static`. End the `static` block with `System.exit(0);` to prevent the classloader from exploding. (or just let the classloader explode.) Also, no imports...
I did it in 782 total characters, but the code is really ugly because I stripped out all unnecessary whitespace. The program is based on the following: - I stripped out all unnecessary white space - I used no variables - "program" and "understand" were the only words worth substituting. - I chained functions when possible public class C{public static void main(String[] args){System.out.println("I pledge that every0 with my name on it shall be written by me (and my co-authors, if any) and that i fully1 the0. Every0 I submit shall be entirely my own work unless otherwise attributed. I1 that academic dishonesty not only includes copying other people's work, but also abetting or facilitating copying. Code that is similar to any other submission past or present will get no credit whatever the explanation. I1 that the consequence of academic dishonesty is a grade of 'F' for the class. I pledge to devote my efforts to learning Java by writing my own0s. I shall strive to be attentive to detail and write0s1able by myself and other0mers.".replaceAll("0"," program").replaceAll("1"," understand"));}}
Alternatively, add a line in the constructor that says something like yourFileChoser.setVisible(false); then do a yourFileChoser.setVisible(true); when you need it
I'm late to the party, but code with the knowledge that someone else may eventually maintain it. With some rare use-case exceptions, creating clean, maintainable code is the most important skill a programmer can have. Comments, readable variable names, and good normalization via refactoring makes it easier for future developers (whether it's yourself or someone else) to make changes and enhancements. As a related tip, leave the code in a slightly better place than when you found it. If you see a campsite littered with garbage, attempt to pick up and throw out a few pieces of garbage so it's a little nicer for the next person who arrives.
i did that in university, it was amazing! bit of competition :D
Thanks, very useful, I'll bookmark this as a good goto guide when I finally make the switch from 6 to 7. 
Not really. If the code is used for a lot of people, the comments are useful so others will understand what is happening in the code. Even for you, the comments will be useful in case for a long time you don't remember what the code does. I don't remove this comments, for me they are really useful and always helped a lot. They improve the time for code maintenance, etc.
This looks pretty nice and I'll remember this for later. If you want to do reflection even easier though, just write Groovy. You can do dynamic field name access stuff just as you would in js or ruby, even on private methods.
 new BASE64Decoder().decodeBuffer("...") converts a base-64 encoded string to a byte array. The byte array is the original string, deflated with the Deflater object. f.setInput(...) is simply putting the byte array into the Inflater. byte[] o=new byte[727]; is establishing a byte array to inflate the decoded byte array into. Think of it like unzipping a zipped file. I suspect that the error you are seeing may be due to a difference in JVMs between my machine and yours? (I am running 1.6.0_29 on OSX) 
clever.
No sorry. I use Eclipse.
You mean, select method, right click, call hierarchy?
Nice. Interesting, how are the String and char types for the true and false expressions of the ternary operator unified?
Variable c is a char, just like in yours. A char is not a string type, it's numeric, equivalent to the ascii value of the character. (Java shares this with C, though we rarely use it.) That's why I can compare it with numbers, which are fewer characters than quoted chars. If it's inside the range to be a token, the correct replacement string is fetched from the replacement array, just like in yours. String concatenation and print() actually treat char as if it were a String, but in almost all other contexts, it's just a number. The character range for tokens starts at slash, ascii 47, and ends at B, ascii 68. I *could* actually go lower and higher on that range. I think I removed periods from the compressed string in this version, so I could use them. I could do the same with C by mapping it as a token. Then I could use D and E as tokens too, if I needed them. There are two differences regarding the string array. For one, the first string in the array is not a dictionary word, but the compressed text. That saves me a variable declaration. Secondly, the array is constructed by splitting one huge string. This makes the overhead for each token 1 character instead of 3. By the way, I had an entirely different solution, much more similar to LZH, but my tokens were too long for this short of text. I could get them down to 3 characters, but your 1 character tokens are MUCH better.
Thanks very much, I'll have another look today!
Do you have it up on GitHub?
I do, actually. [This](https://github.com/MIRAvzw/adastra3-server) is the Java server, mainly open sourced in order to comply with the GPL (we are using one GPL'd library, JWt), but who knows it might be useful to someone else. It's quite a clean (although sometimes a bit over-engineered) and lean (merely 3KSLOC) codebase, but refactoring the core (interactions &amp; database format) did prove to be quite hard, which is why I'm looking at automated testing.
Thanks for your comments. I'm actually using UPnP through the Cling library. Initially, I was using XML-RPC (awaiting the decision to use Etch/Thrift/protobuf+custom rpc/...), but when I had to pick another discovery protocol in favour of mDNS (jmDNS, the Java implementation, was really unstable) I went with UPnP which provides a RPC mechanism through so called "actions". Your concern about thread safety sadly is appropriate, as a no more than average Java programmer I still don't fully trust my knowledge of the concurrency model (which is also why all RPC calls are currently executed synchronously, something quite unacceptable); I hope that a decent test suite might help uncover some of these issues.
This looks interesting to test the servlet-part of my applications, thanks!
I think this is one of the best solutions. Also it means I'm not parsing the whole xml structure when I only need a small subset of the elements. 
And here it is, a [quick description](https://github.com/MIRAvzw/adastra3-server/blob/master/README.md) of the main architecture. Thanks for your time looking at this, much appreciated!
definitely a tough thing to goolge but http://stackoverflow.com/questions/215076/whats-the-best-way-to-become-familiar-with-a-large-codebase http://www.reddit.com/r/programming/comments/be27h/how_do_you_dig_into_a_new_codebase/ http://stackoverflow.com/questions/3080208/how-to-pass-on-a-large-codebase ------------------------- Besides NWire, other for pay browser/profilers: http://www.sourceinsight.com/features.html http://www.javadepend.com/ http://www.semanticdesigns.com/Products/LanguageTools/JavaTools.html 
Then I'd say my 682 character solution (above) is pretty darned close. I gave some explanation below in another thread, but here's what it does: 1. The args parameter to main is named w, a single letter to save characters, and then overwritten by another character array, since we can't use actual parameters anyway, and I'd rather not type String twice. 2. The 551-character long string is composed of 20 segments separated by "!", because that's not one of the tokens I use later, and it's not in the original message. 3. The long string is immediately split into an array of 20 strings. The first one is a compressed form of the paragraph, 425 characters long. The rest is a dictionary of replacement strings. 4. The replacement strings are represented in the compressed text by a single character at each occurrence. The first one, "te", replaces every occurrence of "/". Each subsequent replacement string replaces a different token, in ASCII-order, all the way up to the letter "A", which is replaced by the two characters, " a" For clarity, here's the whole thing pretty-printed and annotated. class B { public static void main(String[] w) { // Discard any arguments to main w = ( // Parens omitted when the entire string is written as a single chunk. "I35 e;y2 with9 name on it7be:/n by me (and9 co-authors, ifAny)" + "And5 i fully0&lt;2@E;y2 I8t7be entirely9 own? unless4wiseAttribu/d@" + "I05A1not only includes&gt;64 people's?, butAlsoAbett6 or facilitat6&gt;6@" + "Code5 is similar=any48ssion past or present will get no credit wha/;&lt; explanation@" + "I05&lt; consequence ofA1isA grade of 'F' for&lt; class@" + "I3 to devo/9 efforts=learn6 Java by:69 own2s@" + "I7strive=beAt/ntive=detailAnd:e2s0able by9selfAnd42mers." /* dictionary starts here */ // ".", char 46, cannot be used as a token, because it's used in the compressed text. + "!te" // replaces "/", char 47 + "! understand" // replaces "0", char 48 + "!cademic dishonesty " // replaces "1", char 49 + "! program" // replaces "2", char 50 + "! pledge" // replaces "3", char 51 + "! other" // replaces "4", char 52 + "! that" // replaces "5", char 53 + "!ing" // replaces "6", char 54 + "! shall " // replaces "7", char 55 + "! submi" // replaces "8", char 56 + "! my" // replaces "9", char 57 + "! writ" // replaces ":", char 58 + "!ver" // replaces ";", char 59 + "! the" // replaces "&lt;", char 60 + "! to " // replaces "=", char 61 + "! copy" // replaces "&gt;", char 62 + "! work" // replaces "?", char 63 + "!. " // replaces "@", char 64 + "! a" // replaces "A", char 65 // token "B" is available for further optimization // "C", char 67, cannot be used as a token, because it's used in the compressed text. ).split("!"); // Now simply iterate over the compressed string, outputting each literal or replacement string. // The tokens all occupy a contiguous block of ASCII codes, to simplify the test. for (char c : w[0].toCharArray()) { // optional curly braces are omitted in the short form // Parens added around the Boolean portion for clarity System.out.print((c &gt; 46 &amp;&amp; c &lt; 67) ? w[c - 46] : c); } } } 
Which Java version are you using? Your code seems to work fine for me on JDK 1.7.0.
Valid point! Perhaps Java is doing some kind of autoboxing?
I am using eclipse, that may have the problem. What could be wrong in the class path? I am not using this for an actual game; it was from a tutorial. I normally use packages for my regular writing.
It does do that, [here is what I have](http://i.imgur.com/ubIwH.png), what you described. It doesn't work with it still.
That's really awesome, I wish I had know about that before I started working on multi-thread code.
Sadly, this project isn't a model project: a single student with 2 months to design the core architecture, 4 months to implement it (which is far too little) and after that only sporadically some hours in his spare time to finish the job. I'm sure I'll get there, ultimately, but it'll take some more time and most likely cause some expensive detours.
Thanks, I will definitely be reading through that. 
 java -version java version "1.7.0_01" Java(TM) SE Runtime Environment (build 1.7.0_01-b08) Java HotSpot(TM) 64-Bit Server VM (build 21.1-b02, mixed mode) I've added the rest of the stacktrace and the methods in it to the pastebin.
Thanks for the overview, much appreciated. I just started experimenting with some testing frameworks, mainly in a bottom-up fashion because that seemed easier, but it might indeed be better to create a tests strategy top-down and leaving the existing low-level classes for what they are right now.
couldn't agree more but I also add head first series for beginners because of there awesome style and useful information they present.
 public class StringCleanse { public static void main(String args[]) { String input = "ROME — As shaken survivors spoke of a mad crush to flee a sinking cruise ship off the Tuscan coast of Italy on Saturday, raising questions about the crew’s preparedness, Italian authorities arrested the ship’s captain amid concerns that the megaship had steered dangerously off course."; input = input.toLowerCase(); StringBuilder out = new StringBuilder(); for (int i = 0, len = input.length(); i &lt; len; i++) { // iterate chars char c = input.charAt(i); if (!Character.isLetterOrDigit(c)) { c = ' '; } out.append(c); } System.out.println(out.toString()); } } 
I think the issue is that replaceAll() takes a regular expression as input. So you're saying "replace all '.' with ' '". Well '.' means any character. In this instance you could use .replace(char, char) with some slight modification to your generic. Also, instead of asciiVal&gt;=97 you could just as easily do current &gt;= 'a'.
/r/javahelp
You're welcome, it happens to everyone. I didn't check to see if you had any other issues, but that should take care of that error.
Yeah, I recommend using an IDE but ignoring most of it's features until you are confident. Especially using the automatic fixes it suggests - they are often not what you want to do. (such as adding a throws to your main.)
No problem, you're welcome.
 String output = input.toLowerCase().replaceAll([^a-z0-9]+," "); It is important to remember that the first argument of replaceAll is a regular expression.
The client application is the actual user interface, deployed on the kiosks throughout the museum. The hardware is pretty simple: a LCD screen, and some buttons allowing minimal interaction with the presentation. I did consider those other architectures, among others, but after a thorough comparison (although impaired by my lack of experience) I dropped most of them: a thin client contract was too expensive and would tax the network connection too heavily (since most of the current content, which is to be reused in the new framework, consist of plain MPEG videos), and a web-only architecture would lack some flexibility (e.g. how to handle content upgrades, manage hardware configuration, administer the kiosks). In order to provide that much needed flexibility, I chose to use a web-based content format, but extend client software with an RPC interface.
grid is protected, and accessed exclusively through getter and setters.
He didn't create a new class; he created a new object. 
Easiest way is with polar coordinates. First, calculate the angle (theta) between the two points with atan2(y, x), then you can find the zombie's dx and dy easily. So, if the zombie was at (10, 10), and the player was at (0, 0), and the zombie had a speed of 2, then its theta would be: double theta = Math.atan2(0 - 10, 0 - 10) where the arguments are the difference between the player and zombie positions. Finally, the zombie's change in position would be: double dx = 2 * Math.cos(theta) double dy = 2 * Math.sin(theta) where you simply multiply the speed by the sine or cosine, as appropriate. 
Since you need to treat the grid, no matter the data type used in the generic declaration, as a character/string type you could take advantage of the fact all java Object's have a toString method. For example: if(grid[x][y].charValue() == filter) getNeighbors++; could be if(grid[x][y].toString().charAt(0) == filter) getNeighbors++; and if(String.valueOf(grid[x][y]).matches(regex)) getNeighbors++; becomes if(grid[x][y].toString().matches(regex)) getNeighbors++; If the grid is type Character, toString simply returns a string version of the Character.
So I'm assuming with this, that (space) is considered a "letter"?
Something like : String input = "#$%^ LOL, " $!#gg"; ... to ... input = " lol gg";
Right okay. I missed the fact that replace() does actually replace **all**, so I'm going to just fix that, but this is also interesting. I wasn't sure how to have multiple conditions for a regular expression. So thanks for that.
Why the unparameterized List and ArrayList? 
Ok, so this is built into Java as a pre-made function. final String output = input.replaceAll("[\#\$\^\.\!]", " ");
 &gt; I'm pretty much certain I never assign anything that's not a character. It doesn't matter. It's the cast from Object[][] (or T[][]) to Character[][] that's failing, regardless of what the array contains. 
sorry for not being clear, instead of being: 3.017071817071818, it needs to be, for example: 3.01707181707181803298476835467034 we have not learned about loops yet, but i do not believe we are supposed to use them in this assignment 
the question reads: &gt;3. (Complete Program) Modify ApproximatePi.java so that it approximates π using the first 35 terms of the sequence above. 
You are reading the problem wrong. It wants you to use the first 35 terms in the sequence: 1 - 1/3 + 1/5 - 1/7 + 1/9 ... The best way to do it in this case would to use a loop that loops 35 times. To do that, use a for loop: for(int n = 0; n &lt; 35; n++) Which is equivalent as doing: int n = 0; while(n &lt; 35){ //Do stuff n++; }
David Holmes (a Hotspot developer) posted [an excellent article](http://blogs.oracle.com/dholmes/entry/inside_the_hotspot_vm_clocks) that describes the differences between currentTimeMillis() and nanoTime() and their limits. You might also find this [question on StackOverflow](http://stackoverflow.com/questions/351565/system-currenttimemillis-vs-system-nanotime) useful.
Why not private static final Object NULL_OBJECT = new Object(); ... // for put if(value == null) value = NULL_OBJECT; ... // for get return (value == NULL_OBJECT) ? : null : value; Am I missing something else?
Would it work? yes... that is essentially what a for loop does anyway. I refuse to believe any professor would assign something so silly though. 
I think it's more likely that they were mimicking Hashtable's behavior. 
yeah I'm not to sure what the deal is, we even had a lab in which the TA went over the assignment with no mention of loops. Just read about them in the text book and i have no idea why this assignment wasn't held till later 
The title would more correctly be "Why does ConcurrentHashMap not support null keys or values". Neither supports nulls. The reason ConcurrentHashMap does not support null keys is that Doug Lea didn't want to include key masking, the use of a special value for signifying NULL such as NULL_OBJECT in zathar's example in ConcurrentHashMap. Null values are disallowed because with null values in the map the result of get() is ambiguous as to whether the key was not found or the mapping for that key is null, ie. you are required to use containsKey() to determine if there is a mapping for a key, get() is ambiguous because the mapping could be key -&gt; null For HashMap/Hashtable : Object value; if(map.containsKey(key)) value = map.get(key); else throw new NoSuchElementException("No mapping for " + key); For ConcurrentHashMap/TreeMap: Object value = map.get(key); if(null == value) throw new NoSuchElementException("No mapping for " + key); Generally, allowing null membership in Collections is regarded as a mistake. All future Java APIs especially collections will be null hostile. Null, if used in the API at all, will be used for signifying conditions (such as no mapping for a key being present) rather than as a value of the collection.
That makes a lot more sense. If you were to do containsKey on a ConcurrentHashMap, the value might not be there when you do a get(). edit: I guess you could return a pair (hasValue, value), but avoiding nulls alltogether seems to be a much better approach as you said.
Yes, exactly. Null doesn't belong in a collection (which is supposed to be a group of objects). If an application wants to store a value representing null, then it is welcome to wrap that value in an object and store it... but not null itself.
Because Swing and other ui oriented libraries are heavily based on a callback architecture which Java sucks at and unless you want to create a new class for every button handler that's what you do. Java 8 will make this less painful.
I've long said that java.util.Map ought to have a method with this signature: public Map.Entry&lt;K,V&gt; getEntry(K key); This would return null iff the key wasn't mapped to any value; if the key was mapped to null, then it would return an entry such that entry.getValue() == null.
I've seen this done for maps. Perhaps they just didn't want null values for design reasons. I like your way personally.
I've looked at JMonkey briefly, it looks like a good starting point. Just spend a week or two to see if it fits what you're looking for :)
Unity 3d?
If you want to learn a lot of java and opengl you could try LWJGL.
My concerns with Play so far: - You don't have access to any of the servlet spec classes and interfaces because Play builds its own http support from scratch. So... goodbye continuations (from Servlet 3). - Play's own continuations/async support works only with Play's own servlet container (the one that serves your app when you do 'play run'). Does not work with other servlet containers like Tomcat, Jetty, etc. - It makes lots of code instrumentation in your models and controllers that might affect your reflection code. Happened to me. I have code that read fields from one model but when in runtime there is no field with names that match the declaration. I also have problems with Mockito in my unit tests, having to restart the dev server everytime I make a change in some unit test. I fell in love with Play for a long time but when I started to realise the things above I decided that I will never use Play for serious projects again. Edit: added some more explanation on code instrumentation.
If you have no tests and you need to start, start at the top. Write some high level Acceptance tests in junit. These tests should be testing the wanted behavior of the application, the requirements. They should test the application through the high level interfaces. Once you know your application does what it should you can go and start writing unit/integration tests against individual classes. If you want to read up about testing legacy code then check this book http://www.amazon.com/Working-Effectively-Legacy-Michael-Feathers/dp/0131177052 
I have only looked at it a little, but I am quite sure it uses java to quite an extent. Also, www.3dbuzz.com Edit: could be wrong about the java part, please excuse me if so.
on the console do java -version Assuming you have your path variable set up correctly and pointing to the bin folder in your java installation.
Awesome, never heard of those second two, I'll take a look
That question is now closed, StackOverflow deletionists are still running amock, even though answers to that question would not be localized. (it is like if someone asked how you assign 5 to variable named a and complain that the answer would be too localized).
Alrighty then, First off, when declaring variables stick to one convention and use it throughout. percentFormat is a good name, DeductionsField is not (generally classes have the first letter capitalized so this looks like you are calling a static method on a class named DeductionsField). This method is called camelCase. Second, maybe I am missing something but you don't have a JButton declared anywhere. At some point you will need one, and you should have a line like yourButton.addActionListener(yourListener); then at some point you will want to have a line that looks like ActionListener yourListener = new ActionListener(){ @Override public void actionPerformed(ActionEvent e) { //logic code goes here } }; whenever the button is pressed, it will fire an event that will run the .actionPerformed code for all actionListeners attached to the button. *edit* sorry for crap formatting, dont have RES on my work computer atm 
why do you think its spam mikaelhg, I like the post and that's why I submitted. please let us know, I think there is an option of down voting so if something you don't like you can down vote. I do respect down voting means what is not liked here and can suggest what to submit or not but sorry I don't take your word on spamming.
the8bit, I want to start off with saying thank you for at least being kind enough to try to help me without being rude. Your comments were well noted and I will learn from this mistake. After spending a large amount of time on what I had, I decided to just delete it and start over. It turns out sometimes the simple things are the biggest problems. I re-worked it step by step and all went well. :-) Learning a new programming language is kind of intimidating. Especially when people talk to you like you should know better. I mean, gosh, we all start somewhere. Again, thank you for your help and your kindness in doing so. 
LWJGL is a good choice for OpenGL developers. Which means that you'll need to learn OpenGL. (Which makes sense since most video cards either support DirectX/Direct3D or OpenGL, and I don't see too many Java 3D implementations supporting DirectX/Direct3D).
Apologies for misinformation! As I said I have only looked at it a little, so I'm not completely familiar with it, I must have misread something. *I'll just move along now.*
No problem, I'm mainly on this forum to help since it is a nice break from work to knock out some entry level problems. I think part of the negative reception is that your question was rather vague. Try to focus more on "why does this small block not work" instead of "this is the entire program what's up". It makes it easier to give an informative answer. The simple things always end up being the biggest problems =).
yup. unfortunately one of my company's projects is still riding that horse. it's an intern developed software, thus no budget to convert it.
Are you sure the less time needed isn't from picking up required learning from LWJGL and Slick which LibGDX replicates?
Look into reverse polish notation. I used it during the development of my calculator for a school project. It will make coding so much easier as it is a parenthesis free notation. http://en.wikipedia.org/wiki/Reverse_Polish_notation
did you try using -Djava.library.path="path to your .dll" on your java invocation line? 
I was looking into your solution, nice work. Did you use any algorithm to determine which subphrases and how many subphrases to memoize, or did you just eyeball it? I was trying to write an algorithm that given the input string, comes up with the optimal substitutions under a certain number (say 20 or so).
You can also do the same thing programmatically to avoid always having to add the flag: try { Field sysPaths = ClassLoader.class.getDeclaredField("sys_paths"); sysPaths.setAccessible(true); sysPaths.set(ClassLoader.class, null); System.setProperty("java.library.path", "native/win"); } catch(Exception e){}
got a copy for the office, already 100 pages in and its a great read. Recommend it for any Java developer. Thanks!
Nothing clever. Once I decided on the algorithm (which is fairly basic) I just visually scanned the paragraph for recurrent phrases. I then just kept substituting phrases for codes (0,1, ..) until the java code was short enough.
basically I want to set up a calculator that is console only. I want it to at the start ask what kind of module do I want to use? ex + - * / from there ask me for 2 numbers to use with the module and than solve it. how do I set it up to ask at the start which module I would like to use? and from there link the modules.
You need to have your shim library in ./lib and the dll in the same directory as your jar file.
Perfectly good reason. Although I must admit, we chose Java and JMonkey for the same reason, and I wish we hadn't. We should have used it as an opportunity to learn another language. But I know that isn't for everyone :)
Yes, of course.
Hey I'm down. I am currently working on a java chat client. I have everything coded and can communicate with the server with the client class. It is done in Swing and I would like to add audio and video to the client so the users can communicate with a mic and/or webcam. Let me know if you are interested and I can add you on skype and send you the github link.
Ok I had this same problem when I first started. What happens is when you enter the "int" and press enter there is a "\n" and your String y = scanner.nextLine(); consumes that "\n" and puts it in y. What you need to do is take in your int...then consume that "\n" and then take in the user input. Like so: System.out.println("Int: "); Int x = scanner.nextInt(); // Takes user's input of Int scanner.nextLine(); // Consumes the "\n" String y = scanner.nextLine(); // Takes the user's input of String Let me know if you have anymore questions!
GAH it's so simple! Thanks for the tip. I'll implement it tomorrow. I'm confident it'll work though :D
I can't tell you how long I spent trying to figure that one out. Good Luck!
Just as something else, there is the method Integer.ParseInt() that converts Strings into int. 
Yup same experience with me, once its connected and running correctly though its quite nice
I will do it for $10000
I was also going to say to use split. It would simplify the process
Why not make your life simpler? String s = "foo\r\nbar\r\n\r\nfoobar\r\n\r\n"; for (String part : s.split("\r\n\r\n")) { System.out.println("&gt;&gt;"+part+"&lt;&lt;"); }
I recommend checking out the "Java Concurrency in Practice" book. 
I have been using Play for the past month on a project. The project I am using it for isn't too big, but is more complex than your basic crud app. Essentially it is a web service for scheduling/monitoring web scraping jobs that are run on various predefined servers and automatically launches/shuts down additional ec2 cloud servers according to load demands. Things I do like: * The way routes are set up. It makes since to me to have a static method as the entry point to an http request since they should be stateless anyway. * Most of the things you need for a webapp are included out of the box. * Nonblocking IO As a whole I like it but there are a few things that I wish was different. * Java had a pretty good concurrency framework already, felt like they needlessly re-invented some of it. * I wish they had just left hibernate alone and not wrapped it in their own persistence flavor * I don't know why they didn't use quartz for scheduling asynchronous jobs. They use the parser, why not let me have the whole thing, which if you include makes you lose the JPA context. * haven't messed around with it yet but my understanding is their websockets implementation is a not the latest proposed spec. * not a huge deal but it bugs me in their testing interface that I can't run a single focused test at a time instead of a class of tests at a time. I plan on using it more for other projects but as kodkrafter said I wouldn't use it for any really large projects. 
No they're not saying that your old app will work, they're just saying you don't need java at all, that would be like using a flamethrower to kill a moth. There are perl programs that can do that task already for free. This 'mammoth' application is really just a seventeen-line perl script with a good MS word library include. To get the graphs of your data, just export the relevant rows and columns as a csv, which perl does natively, because excel willingly opens csv (although you may find that a ~ makes a better seperator for the input) files- there are plenty of Excel graphing libraries as well. Literally seventeen lines of code- it would make a good challenge for an interview question no doubt. Perl is free. All perl programs are free, and their source code is also free. And it's been around since 1987, so there are lots of free programs.
This short program should do what you're after from command line arguments but beware of double precision when using numbers with decimal points -&gt; they will only be accurate to 12dp or so. import java.util.Arrays; public class SimpleCalc { private static final String[] operators = {"+", "-", "*", "/"}; public static void main(String[] args) { if(args.length != 3){ System.err.println("Usage: 'java SimpleCalc {operator} {number} {number}' - e.g. 'java SimpleCalc + 3 5'"); System.exit(1); } String operator = args[0]; int operatorIndex = Arrays.binarySearch(operators, operator); if(operatorIndex &lt; 0){ System.err.println("First argument must be an operator: " + Arrays.toString(operators)); System.exit(1); } Double first=null, second=null; try { first = Double.parseDouble(args[1]); second = Double.parseDouble(args[2]); } catch (NumberFormatException e) { System.err.println("Numbers must be provided in valid 'double' format"); System.exit(1); } if(operator.equals("+")){ System.out.println(first + second); } else if(operator.equals("-")){ System.out.println(first - second); } else if(operator.equals("*")){ System.out.println(first * second); } else if(operator.equals("/")){ System.out.println(first / second); } } }
Be extremely careful about using volitile. It is a gossomer thin barrier between one thread and another The article had a really good example in there in the section with the counter. Read it again, I even did just because it is good to drill this sort of thing into you. Also: When you can't use volitile but you don't want to synchronize check these out http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/atomic/package-summary.html read the docs carefully, they have small but deadly important details. Other than that have fun! I love to see people really thinking and working with concurrent programming! Too rare a skill these days (heck, good single threaded programing is rare!)
I'm a huge proponent of open-source, especially when it comes to the Java-based application servers, and build off of JBoss and Tomcat, primarily. That said, this infographic is very misleading. Having consulted as an architect to several "brand name" companies in the financial, banking and insurance industries, I can tell you that Websphere and Weblogic comprise more than just 2.16% of the install base. A big problem with this chart is that it doesn't identify who they were surveying, what type of user. If it's primarily developers then, yes, it is very possible that most are using one of the open source platforms in their development environment. However, their production platform is more likely to be one of the commercial systems. It's very common to use Tomcat or JBoss to develop against due to cost savings and Java's portability then ramp up to Websphere or Weblogic in production for its commercial support and brand name recognition. The fact that Tomcat comprises over half of the install base here leads me to believe this even more. Just take the stats with a grain of salt is all I'm saying.
Yes, the links at that site point to Jim Baers earthlink page. I have no knowledge about this space stuff, but googling revealed that this [library](https://www.orekit.org/blog/) uses at least similary named java classes in it's code. Maybe it is also sufficient for your needs? At least it seems to be under active developement.
Thank you very much. I should have posted stuff here on this question much earlier.
Good article, I was just recently working with ThreadLocal and created a performance monitor class with it. Works well but like it says in the comments you must be careful when using ThreadLocal as it can lead to memory leaks.
A shorter and simplified article on java (jvm) memory types. Gives simple, definitions about the different memories.
Working on it everyday for 5-6 hours, doable. How much of what the assignment is asking you to do do you understand?
http://blog.newrelic.com/wp-content/uploads/Death-of-proprietry-app-servers1.jpg
Data Structures classes tend not the best classes to start one's programming education. There are a lot of concepts that get thrown into the mix such as time and space complexities and some basic algorithm analysis that can often be difficult even to people who have taken previous courses. Personally, I really enjoyed my Data Structures class and didn't have much trouble but I've tutored quite a few students in the subject who quickly found out that they coasted a little too much in their introductory courses. I would suggest talking to the professor and getting his feedback on the subject along with some advice on how to get yourself ready. It also depends on what you want to do with your programming knowledge. 
It seems possible to me, but I've been doing this for a living for a while now. With almost 10 years experience I could probably do this in an hour or two. Take that for what it's worth.
Watching this hurts. With a loud voice it is posited, "Look how easy it is! See the simplicity!" Never mind that type safety seems to be gone. Ignore that we've introduced downright *magical* constructs to the language. Just ignore all the details that make this while thing work. **You don't have to declare your own return array!** wow. Heck, they even say that you don't have to iterate anymore, just recurse (and pass in filters, and have some extra arguments on your return and look past the addition operator being overloaded to concatenate strings) No. A simple No. This is programing, and it has its place, but this is not how worlds are built. This looks like how I'd write my code if I was crapping out a script of some description. Some single task thing. Most programs are Goliaths. Titans. Thousands of lines of code at the modest end and megabytes of code at the far end. I've got a saying, "I like things to be low magic" and that doesn't mean they aren't complex. That means that there is nothing that isn't exposed, nothing is any more delicately intertwined than it needs to be (e.g. a set of locks to make my YUI based JS include and compression system work. That required some delicate and CAREFULLY DOCUMENTED programming, but after that I just use it. From PHP no less.) The ideas that are being pushed here are elegant for some things. Nifty. They don't get gigantic systems written for business. I welcome criticism on this, but I tend to think that everything here is some sort of seductive smoke and magic. So much "We can do it better" or "Not invented here / in my generation" We *will* learn something from all this, surely, but this isn't the form the future will take. Mark my words.
http://www.docjar.com/html/api/java/util/ArrayList.java.html If array list uses an array of objects with cats so can you. Highly instructional and well documented. Just cast at every return and use getters. They are cheap.
I'm not sure what your point is...
When you double click it, do you get a very fast cmd.exe window opening and then vanishing? You don't want to use the java se binary [java.exe] to run the .jar file, you specifically want the javaw.exe binary [note the "w"]. What's happening is when you double click on a jar file, windows explorer is running "java.exe {thing}.jar". That's actually not correct syntax, it should be "java.exe -jar {thing}.jar". Windows explorer is ... shall we say "limited"... in what it can run by double clicking. Thus, there's a wrapper, javaw.exe, whose sole purpose is to launch java -jar.
Don't double post, we can help you just fine in your original if you would just answer some basic questions... http://www.reddit.com/r/Minecraft/comments/oo6hi/serverjar_wont_open_please_help/ EDIT: He fixed it
 http://projecteuler.net/ 
You've never done CS before or programmed and you will be immediately be required to work on BTrees? I'm not going on a limb to say aim lower. 
Well, there are more than a handful of things that use java. Android apps are built in java, Minecraft server plugins are written in java to name just a few. Take a look around at java apis, pick a fun one, and start typing :-)
My first CS course was an introduction to java class. When I took it I hadn't so much as written a line of html. I ended up getting the highest grade in the class with minimal effort because programming just clicked in my brain. On my recommendation a friend (accounting major not CS) took it as an elective the next semester and for her it was one of the hardest classes she had ever taken, even though she is every bit as intelligent as me. She got through it but it took a lot of time and effort. So I would say it is doable but be prepared to work really hard if it doesn't come naturally to you. 
I recommend checking out some of the java web frameworks. Start with creating Servlets to run in Apache, Jboss, Glassfish, then move on to check out Spring, JavaEE, Play!.
A really good resource for learning how to use various components can be found in the [java tutorials site](http://docs.oracle.com/javase/tutorial/uiswing/components/index.html).
Really good if you like mathematical challenges, but I'm not sure if it will sharpen your "java" skills.
[codingbat](http://codingbat.com/). I also recommend doing your own projects, learn the trade DIY style.
Misleading title...
The short answer is no. Using a switch statement and else ifs are basically identical when it comes to the compiled code. Also, unless you're using Java 7 (which is very new and thus you're probably not yet), Java doesn't support String switch statements.
You could try [Play Framework](http://www.playframework.org/documentation/1.2.4/home) which is a really easy to use web framework for Java. There are some good tutorials which should get you started building a content management system. Should be fairly easy even with just basic Java knowledge. 
I found: http://zetcode.com/tutorials/javaswingtutorial/ to be very good, ending with some nice 'real life' examples.
Feasible in a week or two? Sure... but that's a week or two where you spend a few hours a day reading and thinking and experimenting, not a week or two where you kinda read the book every few days. If you don't have too much else on your plate, I'd say go for it... but if you have a full-time job and hobbies that take up any significant amount of time, it might be better to start with something a bit more basic. If nothing else, just write a bunch of silly little programs that'll force you to get your syntax down.
I had this thought exactly. The whole "mutable-strings-as-a-security-issue" doesn't hold at all.
Oh, cool! Thanks for letting me know. Yeah, I'm not using Java 7 yet so I wouldn't know.
Is this blog written by a robot?
Misleading and rarely likely to be helpful.
There are no actual reasons on this "blog". He just names a few pros of String being immutable. No actual answer. We need a Java Architect AMA
I think the more important thing for me is that it would break the hashcode and compareTo contracts. If hashcode uses the content of the string, it would change when the string changes, breaking the contract. If hashcode doesn't use the content of the string, then String a = "test",b="test"; wouldn't be equal.
It's an old chat server protocoll. To use it you need a IRC chat program like xchat ( for [Windows](http://www.silverex.org/news/), linux users look in your repos). IRC is a line-oriented text protocoll like HTTP, but has persistent connections. Both between the servers and between a server and the clients. The servers connect to form networks, like [freenode](http://freenode.net/) or [esper](http://www.esper.net/). You connect to an IRC server and join a channel, which is what the chatrooms are called on IRC. You can also send and receive private text and in most clients also binary messages. The channels usually have one or two # in front, like #reddit-java.
btw I'm building this in netbeans
its just a text file I want to keep in the .jar and have it be editable 
You'll probably find people chatting about Java and about the posts made here.
yeah actually there was nothing going on. No discussion. So I was like, back to reddit.
I don't use Netbeans, but it should have something similar to Eclipse's "Export -&gt; Jar" functionality, which should work for you. Anything more complex than just including more files, and you'll need a real build tool like ANT.
That seems to work opening the file while running in Netbeans but once I create a JAR file the program can no longer find the file.
getClass().getResource(String name) gets a resource from the location next to the class you are executing it from, which includes from inside a jar.
You CANNOT keep a text file in a jar and have it editable. You can only read from inside a jar.
Like many of the other cases of final, String being final is very much a security issue. Otherwise you could subclass String to make a mutable version, or some other bad behavior, and pass it. 
&gt; If those arguments were valid, C's reliance on (completely mutable) char* variables would be folly. C doesn't have security sandboxes to worry about. 
I've found Eclipse's Jar exporting isn't very complete (you can't easily create a simple runnable Jar). ANT is much easier to use to generate a Jar.
https://github.com/kelroy/GUITools.java ConfiguratorJFrame does just that, creates a gui config file editor. add it to your gui to create persistent program settings. add the ConfiguratorJFrame and Configurator to your project directory or even add the entire GUITools package instantiate a new GUITools.Configurator like so: Configurator myConfig = new Configurator("myconfigfile.whatever"); instantiate a new GUITools.ConfiguratorJFrame like so: GUITools.ConfiguratorJFrame cjf = new ConfiguratorJFrame(myConfig); if a config file exists then it will be read in and fields generated for each config element. If no file exists one will be created with the filename given. you can call myconfig.setProperty("someKey" ,"someValue"); you can call cjf.toggleVisable(); clicking the save button will save any changes that were made to the config file. the configuratorJFrame appears as follows: http://imgur.com/bLu1U the properties are dynamically added so if you call myConfig.setProperty... then the property will appear in the jframe here is an example of a config file generated:http://pastebin.com/YtubrTsr you can set prompt messages also calling setMessage1,setMessage2 
It seems I misread and didn't see the exception. From the API: &gt; Whenever it is invoked on the same object more than once during an execution of a Java application, the hashCode method must consistently return the same integer, provided no information used in equals comparisons on the object is modified. I have to say, letting objects change their hashcode seems bad. Doesn't this mean that if you put it in a Hash[Map/Set] you'd never find it? For example: String a = "test"; String b = "test"; String c = "tester"; HashSet&lt;String&gt; set = new HashSet&lt;String&gt;(); set.add(a); a.append("er"); //if this were legal set.contains(b); //would be false, since now a.equals(b) is false set.contains(c); //would be false, since when inserted a.hashCode() wasn't the same as c.hashCode() Correct me if I'm wrong, but it seems like this would get easily lead to confusing bugs. 
http://www.reddit.com/r/java/comments/nw5ek/your_favorite_ide/ http://www.reddit.com/r/java/comments/nc4qn/so_which_ide_is_the_best_and_why_im_a_beginner/ http://www.reddit.com/r/java/comments/i2ve5/finding_an_ide/ etc
Which is the justification for having immutable strings.
Final makes sense, true, if they're immutable -- I was only refuting that the immutability of Java strings was done for security.
From what I can tell there are two things going on here at first glance. First, the condition on your while loop looks like it needs revision: message.getText() == ("") Try comparing strings with the "equals()" method: message.getText().equals("") The first statement is comparing to see if the String _objects_ are the same, while the second compares the _contents_ of the strings. Also, it appears you are always setting your i variables to 1 on a button press. Remember, only 1 line below an unbracketed if/else is actually inside the else. else space2.setText("X"); i2 = 1; Only the line `space2.setText("X");` is under the else here.
I love vim as much as the next guy but does vim have scope aware auto completion, compile on save for fast feedback, integrated scm, team tools linked to issue tracking, code generation, document generation, gui builder or even refactoring not based on regular expression ? I could go on.. Vim is an awesome text editor but a shitty IDE. Personally I grab the viPlugin (well worth the $15) and you can have both the better tools and the touch editing of vim! There's also eclim but I found it to run it in vim mode you lose most of the cool eclipse plugins. 
The check for win method is never called. Add it to the end of each button handler. 
Thank you for posting, but I have solved my problem.
Sure, you'll need a few listed plugins, and really it's only setup to work with Python, but [here](http://pastebin.com/n7jbXk6T) it is.
The best way to get started with a framework like Spring is probably to build a simple crud app. That will get you acquainted with templating, MVC, and using the ORM. You might also want to consider pickup up a book like [Spring in Action](http://www.manning.com/walls4/). Keep in mind that most employers will be more concerned about your general programming skills than your knowledge of a particular framework however.
Oh...
I see. So if my app isn't too web-centric (which it really isn't, the web interface is just nice to have) I better piece together functionality from individual libraries instead of going the JEE/Beans route?
Oh, hi there :) Yeah, you made me ~~doubt~~ think not only about the RPC mechanism, but the entire architecture of my application. Thrift (or another RPC framework) is still on the table -- having looked at some of them I understand that Cling's RPC mechanism is quite... labour intensive (due to manually having to write proxy classes) -- but I'm not sure about giving up on the automatic discovery of network entities, and having a single framework to accomplish both is of-course a plus.
Exactly. If your main operation is CRUD, then go with a framework because that is what they are designed for. I usually like to design my software more in terms of libraries with interfaces. So your main logic would be in a library, then you build servlets that map web requests to your interface methods. 
I were thinking of making a time zone converter since I watch a lot of starcraft 2 tournament and they usually announce their schedule in local times. Also Im gonna make a small calculator, possibly with some basic GUI but neither of those should take very long to make
it doesn't matter how much time you spend on any thing you create, its about writing and learning new things. you can even go back to an old project and do it in a better way. or add more functions to it. aslong as you learn new things, and practice it :).
Using multithreading for basic game objects creates a lot of synchronization trouble and if you have many objects even slowdown without really being nescessary.. Just have one big main loop where you update and paint your objects. 
Pretty nice overview, it could be even more useful if gc pauses were timed too.
looking for the hightest value in a single line is not enough, you need to 'triangulate' 9 7 2 1 4 you solution would pick the 9 over the 7, which is wrong. because 7 + 4 = 11 over 9 + 1 = 10 7 4
Why not use the assertTrue() function?
JEE frameworks provide the faculties for distributed computing applications. If you need the "-abilities" linear scalability, high availability, high throughput, sync and asynch processing distributed transactions across processing functions , then a JEE framework is for you. Writing these things infrastructure things yourself doesn't make sense. If you don't need these things, then you might want to look at another solution. Keep in mind that using one framework or another doesn't guarantee you success; start with a good design and design goals. This will get you a long way to making a decision on what sort of framework to use. As a reference, there are mgmt systems that do similar things that you are talking about that use JEE. 
Thanks, I picked up Spring Recipes after looking at a few different books (Spring in Action was my second pick). Spring Recipes is great so far, but you're right that understanding DI and IoC must be a huge step, since I don't "get it" even though I'm going through the text.
 6 7 1 1 4 5 3 2 1 -&gt; 1 1 4 5 3 = 6 3 2 = 4 2 1 = 6 =&gt; 6 7 6 4 6 -&gt; 6 7 6 4 = 12 4 6 = 11 =&gt; 12 11 
If you read-up on Swing and Events (keyboard/mouse clicks), creating your own Tetris game is within reach.
Make a rock paper scissors game. I made one today.
WHAT. My life is forever changed.
use it wisely, padawan.
Even better, you can make your own templates. I have them for Arraylists, Maps, my own loggers (eg. logdebug = log.debug(*enclosingType* *enclosingMethod* + parameters);) ... Very useful to code efficient.
Save the following as an xml and import the file at the editor templates window: &lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt; &lt;templates&gt; &lt;!-- utils and dirty logging --&gt; &lt;template autoinsert="true" context="java-statements" deleted="false" description="print current method to standard out" enabled="true" id="org.eclipse.jdt.ui.templates.systrace" name="systrace"&gt;System.out.println(formatter.format(new Date())+ " ${enclosing_type}.${enclosing_method}()");&lt;/template&gt; &lt;!-- collection templates --&gt; &lt;template autoinsert="true" context="java" deleted="false" description="ArrayList declaration" enabled="true" name="arraylist"&gt;List&amp;lt;${type}&amp;gt; ${name:newName(java.util.List)} = new ArrayList&amp;lt;${type}&amp;gt;();${:import(java.util.List, java.util.ArrayList)}&lt;/template&gt; &lt;template autoinsert="true" context="java" deleted="false" description="HashMap declaration" enabled="true" name="hashmap"&gt;Map&amp;lt;${keyType}, ${valueType}&amp;gt; ${name:newName(java.util.Map)} = new HashMap&amp;lt;${keyType}, ${valueType}&amp;gt;();${:import(java.util.Map, java.util.HashMap)}&lt;/template&gt; &lt;template autoinsert="true" context="java" deleted="false" description="HashSet declaration" enabled="true" name="hashset"&gt;Set&amp;lt;${type}&amp;gt; ${name:newName(java.util.Set)} = new HashSet&amp;lt;${type}&amp;gt;();${:import(java.util.Set, java.util.HashSet)} &lt;/template&gt; &lt;!-- initialisation templates --&gt; &lt;template autoinsert="true" context="java" deleted="false" description="Array declaration and initialisation" enabled="true" name="initarray"&gt;${type}[] ${name} = new ${type}[] {${cursor}};&lt;/template&gt; &lt;template autoinsert="true" context="java" deleted="false" description="Declare a list and initialise it using asList()" enabled="true" name="initlist"&gt;List&amp;lt;${type}&amp;gt; ${name:newName(java.util.List)} = Arrays.asList(${cursor});${:import(java.util.List, java.util.Arrays)} &lt;/template&gt; &lt;template autoinsert="true" context="java" deleted="false" description="Declare a Map and initialise using ArrayUtils.toMap()" enabled="true" name="initmap"&gt;Map&amp;lt;${keyType}, ${valueType}&amp;gt; map2 = ArrayUtils.toMap(new ${keyType}[][] { {${key}, ${value}} });${:import(java.util.Map, org.apache.commons.lang.ArrayUtils)} &lt;/template&gt; &lt;/templates&gt; 
Just don't use it for logging
Upvoted for following through.
Very basic shortcuts, mostly grabbed from the "Source" menu. Here's one not on the list that I was thrilled to find: Alt-Left. It re-opens a closed window. Really what it does is navigate back through the active window history but, if the window is closed, it re-opens it. Also, code templates. 
Just a small suggestion for future, try to arrange the files in a package. Also remove all .class files before checking in. Thanks. Other than that good job :)
I do Java on Vim, like everything else. screw you Eclipse!
Ten bucks says you've never used Eclipse.
Congratulations. You're a better programmer than some people who graduate with a B.S. in CS. 
&gt; I am sorry if this sounds really dumb, but how do I get the command line interface for windows shell? (I am on win7 64). Start -&gt; Run (or press the Windows Button + R) and type "cmd" and then press enter. &gt; So when (in eclipse) I press run (to run the program) it is basically the 'shell' as it is converting it to byte code correct? So this is doing the same thing as the javac myprog.java and java myprog inputfile outputfile correct? Well, generally Eclipse recompiles the java code each time you save the file, so pressing run usually only executes the already compiled byte code. Sometimes, if you have an edited file, it will prompt you to save it first, which will force a recompile of the project. (I'm pretty sure it's smart about which files actually need recompiling so that it doesn't spend time compiling files that haven't changed, but I don't know how that works.)
&gt; Almost 0 programming experience (outside of the generic loop/for/if/read/write etc. basics) You have more coding experience then many students at the end of my university degree! If you commit to learning Java, then yes, it's perfectly feasible. If it's something you just plan to work on in your free time, on the weekend, then no you won't succeed. Personally, I found Java to be the easiest language I have ever learnt. Most of it's concepts are trivial to pick up, and it's relatively difficult to do funky stuff.
If you want to use javac and java from the command line in Windows, you need to add the Java bin directory to the PATH environment variable. Google how to set environment variables if you don't know how to. After that is set up, you can just open a terminal window. A convenient way of opening a terminal window is to press the Windows Start Button, then enter cmd in the Search Bar.
[The New Boston on YouTube](http://www.youtube.com/user/thenewboston#p/c/FE2CE09D83EE3E28/0/Hl-zzrqQoSE) has a good series of tutorials on Java. My comp sci prof just recommended [this book as a nice and precise Java reference](http://www.amazon.com/Java-Precisely-Peter-Sestoft/dp/0262693259) to have on hand this semester. 
If I understand this correctly, your issue is something like this: You have a list of names, and a list of attributes for those names. (Example here is names and their ages) [Joe , Mark , Jim , John] [42 , 22 , 22 , 13] Then what you want to do to get the data together is follow these steps: 1 Create an array for each data set. 2 Read the sets, in order, into the array. Each element should be one element in the lists. 3 Create a data structure (in this case, it would be person), that stores the information, for example, new Person(String name, int age). 4 Instantiate these data structures using the pairs you're getting by iterating over the arrays. 5 Store the new instances on an ArrayList or new array of those data structures.
I think it's that every third number is skipped in the output file.
It's too late for me but I'll point out some obvious things: - Why are you printing the success message to stderr? You should be using System.out.println() and reserving System.err.println() to print error messages. - You can consolidate the FileOutputStream and PrintStream declarations into one line, like so: PrintStream ps = new PrintStream(new FileOutputStream("pstest.txt")); If nobody else has helped you by the time morning comes around I'll figure it out when I've got a more rested mind.
For the absolute beginners, use DrJava for simple compile and run.
this is just a small tidbit of what I have been working on which is why it is kind of messy, however I was having the same problem in the big picture and isolated it to this but I cant figure out what is wrong.
Well done. If you want to make that long message more aesthetically pleasing when it prints you could divide it up into four or five separate System.out.println(); instead of one long System.out.print(); You won't get the wrap issues where it's chopping words in half.
Notepad is the "wax-on wax-off" of programming. If you have never programmed in Java before it is recommended until you at least know how a program is made, compiled, executed. 
You have had too much internet when you read FMIS and translate it as "Fuck My Information System".
You could just declare `main` to `throws IOException`, you know.
This!
Some classes demand you not use an IDE so that you could walk through and understand what the IDE is doing behind your back to compile and execute your code. In my first course in Java if you were caught using an IDE for an assignment it was an automatic zero.
you'll have to open it as a System Administrator otherwise javac will always keep telling you that it can't write the bytecode file. but that too will only happen in folder and drives where you have not set write permissions
I too say that the use of any simple editor in the beginning is a must. It is quite essential that you learn all that the javac program and java program can do in an early state. Once swing is over and this guy moves on to JSPs and Java EE the server set ups will be totally baffling if he had been completely dependent on IDEs
You have no idea how helpful it is to make your assignments fun. I had something similar starting out where I had to alphabetize Strings. I alphabetized the Team Rocket introduction. When it came time to run it in front of the class, they all got a chuckle. It really helps you enjoy it and not get too stressed out when things don't come along; strengthens the creativity muscle.
Her, and thank you. Downloading now.
I've heard of such things, but consider them to be archaic. If you're taking your first course in java, it's probably difficult enough to understand assignment and for loops, let alone linking, classpath, etc. Things like that should be left for systems courses written in C that involve specific study of compiling and linking, etc. 
Hashtable is in the same situation as Vector. It's a pre-Collections legacy class that shouldn't be used in new code. 
if they are space delimited you can do something like this: Scanner scanner = new Scanner(yourFile); while(scanner.hasNextInt()){ int yourInt = scanner.nextInt(); } while(scanner.hasNext()){ String yourName = scanner.next(); } you might have to fiddle with this a bit if you have a different delimiter, but scanner has a .useDelimiter() function you can set. FYI: if you are personally building the files, this is not a very effective way of doing things. You are essentially building a database but maintaining your own parsing library. You could also grab a JSON library and write them as JSON objects and it will handle all the read/write for you.
 int n = ... do { System.out.println(n % 10); n /= 10; } while (n != 0); Remainder (%) after division by 10 takes the right-most (units) digit. Division by 10 strips it off to rotate the next digit into place. E.g., n = 12345. Outputs 5, then divides by 10 to get 1234 (integer division truncates the fractional part), and continues as long as there are more digits. (It's the standard trick for converting any number to a decimal string representation for output. It has the flaw that the digits come out backwards if you're appending them to a string buffer from left to right, which can be resolved by filling the buffer from right to left or reversing the string afterward. It's occasionally sped up by dividing by 100 instead and having a table of two-character pairs of digits.)
You must be lazy or out of time. Google is your friend. Try googling the following: - java Scanner - java string to int - java operators
 System.out.print("Enter a 4-digit number: "); int fourDigits = new Scanner(System.in).nextInt(); int lastThreeDigits = fourDigits % 1000; int lastTwoDigits = lastThreeDigits % 100; int fourthDigit = lastTwoDigits % 10; int firstDigit = fourDigits / 1000; int secondDigit = lastThreeDigits / 100; int thirdDigit = lastTwoDigits / 10; System.out.println(firstDigit); System.out.println(secondDigit); System.out.println(thirdDigit); System.out.println(fourthDigit);
If you want to do something special with the `IOException`, you have to `catch` it. However, the default behavior if an exception is thrown from `main` is for the JVM to print the exception's stack trace on `System.err`. The application will also terminate in this case, unless other threads are still active. If that's what you were going to do anyway, you may as well save yourself the trouble and say `throws IOException` (or `throws Throwable`). Note that this only applies to `main`.
Ah, wasn't aware of that. I always disable UAC and use the Administrator account whenever I reinstall Windows 7.
With the emphasis on"simple", I also recommend Head First Java.
Wibit.net Start with the intro to programming. Java is not like PHP and even further from java script. Learn the basics first before trying to jump into java as its not a beginners language
http://www.sorting-algorithms.com/
Oh wow, this is incredible. I've seen this before but I've always ignored it figuring it was the typical complex domcumentation that's usually on official language sites. I think I'll be using this as I'd much prefer online tutorials over a book. Is this comprehensive enough for me to go through for a couple of months and learn the language pretty well, or would I need to get a book to supplement it? Thanks!
there is no real binary sort, just a binary search on a sorted list, but maybe this helps http://www.geneffects.com/briarskin/theory/binary/index.html http://stackoverflow.com/questions/3074861/binary-sort-algorithmi
Java books designed for academia. See what the colleges are using.
This sounds like a pretty good use-case for Spring. It has lots of the cool stuff EE has that you can add as you go, but you can start with a simplified approach. Also you can deploy it on tomcat or jetty out of box. 
Yes, but you'll have to define your own service interfaces, since there isn't any generic way to represent them across technologies. http://static.springsource.org/spring/docs/3.1.x/javadoc-api/org/springframework/web/client/RestTemplate.html http://static.springsource.org/spring/docs/3.1.x/javadoc-api/org/springframework/jdbc/core/JdbcTemplate.html http://www.springsource.org/spring-data/jpa http://static.springsource.org/spring-ws/site/reference/html/client.html http://jersey.java.net/nonav/documentation/latest/user-guide.html#client-api
OK - given that, would you say in the long run it would be better to do it in Spring so I can flip them out quickly or just make multiple projects?
Could you formulate your question in more explicit terms?
Sorry, I read "JavaScript". *Hangs head in shame.*
If I understand you correctly, even in the short run, you should see the benefits of using Spring in this case. You can define an interface for your DAO (for basic CRUD operations and any other functionality you might need). This interface can have multiple implementations - one that uses JDBC, another that uses web services etc. In your configuration, you can specify exactly which implementation you need to be injected into your service layer code. This would be useful for writing simpler and cleaner JUnits as well - you can create a mock implementation of the DAO that returns mock objects.
The Stanford online resources for CS106A Programming Methodology are a pretty good starting place. * [http://www.stanford.edu/class/cs106a/](http://www.stanford.edu/class/cs106a/) * [http://see.stanford.edu/see/courses.aspx](http://see.stanford.edu/see/courses.aspx)
Play! is a great framework, which makes web development in Java actually bearable when not working towards enterprise scale apps. I'm surprised to see someone learning Java using it though- it would seem a bit 'heavy' for most people to (at least initially) learn with, but obviously that's what works for you :)
[Thinking in Java 3rd edition](http://www.mindviewinc.com/Books/downloads.html) by Bruce Eckel. The 4th edition is available but not free.
Can't talk about ConcurrentHashMaps without mentioning Cliff Click and his lock free HashTable! Firstly, [lock freedom](http://en.wikipedia.org/wiki/Non-blocking_algorithm#Lock-freedom) Then the [video](http://video.google.com/videoplay?docid=2139967204534450862) talking about it Then [it](http://sourceforge.net/projects/high-scale-lib/) If you've never heard of Cliff Click before you are in for a treat. Look up his talks, especially the [Crash Course on Modern Hardware](http://www.infoq.com/presentations/click-crash-course-modern-hardware)
I don't agree. It's better to say "10 Eclipse Navigation Shortcuts Every Java Programmer Using Eclipse Should Know". I use IntelliJ IDEA and I personally think Eclipse is a f*cking pain in the ass.
Yes. Your DAO should be an interface and have a JDBC and WS implementation. I'm not sure what the rules are for deciding which implementation to use, but here are some options: 1. Use a qualifier on each implementation to distinguish them and your service can bind to them where appropriate 2. Use environment profiles to designate which implementation is used for which environment 3. Just switch out the bean definition for the DAO at build time to swap implementations **Edit:** Formatting
http://www.dickbaldwin.com/tocadv.htm 
What is an important programming language? Is a saw more important than a screwdriver? Or a hammer? If you want to help your career, get good at programming and logic in general; then learn as many languages and new technologies as you possibly can in a part of the field that *interests* you the most. 
Do you plan on going to college? Maybe a trade school? You will get a lot more introduction to languages there. If you want to be self-taught, I'd start looking into some Java books. Head First Hava is always a popular one: http://amzn.com/0596009208
&gt; feel like VB isn't a great language *hands over programmers badge* &gt; Tell me please if it is worth learning I feel Java is worth learning, primarily because it's a good example of object-orientation, which is a generic programming principle which you can take to other languages But, having the ability to program a computer to do your bidding will always be worth it for me &gt; how much it will help me in my career It depends what career you want. * If it's Java programming, you probably want to learn Java * If it's programming in general, learning Java would at the very least be useful because it teaches you some form of programming. The ability to pick up another language for a new job you want is going to be immensely useful At least, that's my viewpoint as a 17-year-old who is about to go into some form of programming work next year. I hope.
Thanks a lot. Hopefully I can fin the books in my country. If not, maybe there are ebooks available.
&gt; I thought that some programming languages are better and more useful than others. It's OK to prefer one language over another for your own reasons, but learn to let go of the whole "better and more useful" thinking for your own sake. If you don't, you will be tempted to decide that a particular language is the best language for every need. And the reality is considerably more complicated. Java is great for a lot of things; maybe even most things. But C++ has it's niche. As does Objective-C. As does C#. As does Javascript. Etc. etc. And that's just considering languages which are very similar to each other. How would you decide how useful Lua might be to your project when you already think Java should solve every problem? Can you name the ways VB might be a better choice under some circumstances? If not, then you don't really know anything about it, so don't judge it. Always remember that every programming language out there that's still in use has a niche and is therefore sometimes the best choice given some set of circumstances. Anyway, have fun with learning programming and take on some small projects and finish them. Any finished project that stinks is better than a "perfect" project that you never finish.
A majority of US colleges use Java or C++ for most of their intro programming classes. You'll probably be safe with one of those 2 languages.
I was saying that VB isn't very good because in my HS we use VB 6.0 which is a pretty old language and if I try to write some code in VB 2010, I get errors because what I am being taught is out of date! Maybe I expressed myself a bit bad. VB 6.0 feels very outdated and unuseful whereas VB 2010 is a huge difference with a lot of functionalities.
My first language was Java which I started coding during mid high school and it is most likely one of the best languages you could start with. It dominates the financial market which happens to be the biggest employer of IT employees. If you are starting out, focus on learning the concepts of object oriented programming such as inheritance. Also, if you do decide to learn Java, look into BlueJ. It is an IDE built for beginners which helps visualize object oriented concepts. Hope this info is useful and the best of luck on your programming career!
A massive chunk of the enterprise software available today is written in Java. Oracle, IBM, SAP, CA etc etc all use Java. If you want a job in integration, system design or enterprise architecture then a little Java is useful to have.
Spring (AOP, MVC), JPA2, JUnit. Have fun!
Assuming that you're beyond very basic java: * [Thinking in Java](http://www.amazon.com/Thinking-Java-4th-Bruce-Eckel/dp/0131872486/ref=sr_1_1?ie=UTF8&amp;qid=1327456269&amp;sr=8-1) * [Effective Java](http://www.amazon.com/Effective-Java-2nd-Joshua-Bloch/dp/0321356683/ref=sr_1_2?ie=UTF8&amp;qid=1327456269&amp;sr=8-2) * [Hardcore Java](http://www.amazon.com/Hardcore-Java-Robert-Simmons/dp/0596005687/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1327456411&amp;sr=1-1) 
The differences between Java 5 and 6 (or 7) aren't likely to be noticeable to you as a beginner. You won't learn anything "wrong" from that book; go for it! 
Learn how to install Oracle Enterprise products then stand back and watch the money roll in
Thats a great point. I went ahead and finished the assignment with my String implementation because it was nearly done anyways. I may go back and see if I can use a doubly linked list where each node stores an integer of length 4 for a challenge though. Time permitting of course.
What you really need to learn is Object Oriented programming at first. All of the major development languages are Object Oriented, and once you're familiar with the idea of designing in an OO language, learning new ones is fairly easy. The only thing I would say in addition to that is that everyone should know C well, and be very familiar with pointers and memory management. Those are very useful skills that every programmer should have.
Does the name Joel Castellanos ring a bell?
Can you explain to me what OO programing is? I see that everyone tells me to focus on this, and I don't quite understand it. Thanks,
should have been a reply to VaginaLemur, but sorta works here, too
String is limited to just "int" length as well. And my method packs 2^31 values per block where yours packs 10 values per block.
Buy it. Read it. If your in the Richmond VA area (I doubt it), I have a TON of java books to give away. Threading, JMS etc etc etc
Thank you for the quick answer, it worked perfectly!
That is for assignment, not comparison.
Then, re-read it. Do this every year; you'll find something new each time.
I think you are confused. The main method doesn't declare a String[] argument to make handling strings "easier", it declares a String[] argument because the command shell passes strings into it (the command line arguments) and it needs a place to put them. It has absolutely nothing to do with "making a string object more like a primitive data type", whatever that means. The command shell wants to pass arguments in, that's where they go, and that's really all there is to it. If you have Java programs launched from places other than the command shell (i.e. web server components, applets, plug-ins, etc.) they may not have a main() method at all.
Strings are not primitives. A string is a char[]. The main method is just one of the many entry points java looks for, depending on the context.
It has more flavors of 'do my homework' than it does 'help me with a question', I suppose.
http://en.wikipedia.org/wiki/Object-oriented_programming The first things you need to cover, even before that article, are basic things, like assignment and control flow. There are lots of places to start. Some people will argue with me here, but I think this is the best starting programming book of all time: http://www.amazon.com/Programming-Language-2nd-Brian-Kernighan/dp/0131103628 However, it's not in an OO language or anything like that. As far as good starting Java books, you might try: http://docs.oracle.com/javase/tutorial/java/ Oracle tutorials are usually pretty good. But seriously, going through the whole C programming language will give you a solid foundation in the language that inspired all of the others syntactically and conceptually. Java is very similar to C in syntax, but much more modern. I think it's always good to start out with the roots and build from there. If you're planning on going to college and learning programming there, starting out now is great and will give you a big head start. You should also read something like http://www.amazon.com/Discrete-Mathematics-Applications-Kenneth-Rosen/dp/0073229725/ref=sr_1_4?ie=UTF8&amp;qid=1327513691&amp;sr=8-4. The bottom line is that if you plan on going to college, you're probably going to be studying Computer Science. Computer Science includes programming, but goes way beyond it too. It's a very good field with a lot of competitive jobs and interesting research to be done. Let me know if you have any other questions.
&gt;A string is a char[]. In fact you can substitute a String for a char[] in return statements. That's not true. A string may be logically thought of as a character array. Indeed, the String class internally contains a reference to a char[], but they are not the same type and you can't substitute one for the other (at least not in Java).
Thanks a lot! How does Discrete Mathematics help me though? Is maths an important part of programming? And I think I'll learn C a bit more so I know every important part and then focus more on Java. I'll be learning them simultaneously I think. Is it a bad thing that I start learning Java now even if I don't know a lot of C? As I mentioned before, at school we use VB 6.0 which isn't something very rich. So I may need to learn to write in the newer versions of C as well.
Math is a huge part of computer science. It's a part of programming, too, depending on what you're doing. It's fine to learn java without knowing C. Lots of people don't know C at all. That doesn't mean that they shouldn't, though. C is the language of Operating Systems and everything that goes on at the lowest level of computers (except assembly, which is even lower). I like C because it forces you to explicitly manage memory, deal with pointers, and think about the system in a much more engaging way than Java or C#, which both do a lot of the management for you. Learning C is also great because it exposes you to system calls and Unix-style commands (at least that book does), which is a great skill to have in the programming world. But the most important thing is that you go to college and learn how to program there. A solid CS degree will fill in all of the gaps for you and give you a good foundation.
No you can't. If you compile [this code](http://pastebin.com/axL8H4w5), you'll get this error message: StringCharTest.java:9: incompatible types found : char[] required: java.lang.String return text; ^ 1 error 
Another fun fact for Java programmers: in C, main is declared as **int** rather than **void**. The return value is used as the program's exit code if you don't call **exit()**. The causes a lot of fun when you forget to do a **return 0;** at the end of main() and then try to use the program in a shell script.
I use Eclipse, but sometimes I need to have to do something advanced, like editing one part of a file while looking at another part of the same file...
How exactly are you "replacing a String with a char[]" in that example?
Is that supposed to be a response? All you're doing in your 'example' is returning a new String...
I guess I would have benefited most by getting at least an introductory look at some of the more commonly used java (or development in general) related tools and frameworks. So, for today, it would be stuff like Spring, Hibernate (or any ORM for that matter), Maven, Hudson, jMock/easy mock/mockito, even Eclipse was something that was somewhat foreign to me when I graduated.
It's the closest thing you could find and it has nothing to do with your original statement/claim &amp;#3232;\_&amp;#3232;
Well, I went to school before Java was invented but I'm guessing the question still applies. I think a class that focused on dissecting open-source projects would have been helpful. Spending time discussing the structure, coding decisions, dependencies, technologies used, etc would have prepared me better for how to learn from the work of others as well as how to evaluate third-party libraries which, face it, is a large part of what modern development is.
To point out yet another thing you have wrong: &gt; The main method is just one of the many entry points java looks for, depending on the context. In fact it's the **only** entry point to your program from the JVM, and there are **only three** possible variants of the method signature: public static void main(String[] args){ public static void main(String args[]){ public static void main(String... args){ 
ERR! WRONG! Top of my head is init.
Version control
Hey! You **can** be right! Two whole places the JVM calls your code.
[Effective Java](http://java.sun.com/docs/books/effective/) and Design Patterns are the two things I wish I had learned earlier.
1. Version Control 2. Unit Testing 3. Working with a Debugger 4. Object-Relational Frameworks 5. Higher-end SQL queries Having said that, any decent Java shop can (and should) teach all of that in a 6-month apprenticeship.
Well its kind of hard to not do it that way with code. Anyway, I figured out what i was doing wrong.
On top of that, I'd add (in no particular order): * Dependency Injection * MVC/n-Tier development * Design Patterns / Anti-patterns 
Jeez, just somebody who can sit down and explain how Spring works/doesn't work, as opposed to spending weeks of trial-and-error with config files and annotations would have been amazing for anybody. 
I completely agree. though less important than those listed above I'd also include: 1. Knowledge of specific frameworks (like spring) 2. Maven 3. A strong understanding of how *all* the java collections work.
Nearly any PC that can handle VB 6.0 can also handle Python. Java, C#, and C++ are the most common languages for professional work, but Python will get you up to speed on programming basics, etc. I would stay away from whiz-bang IDEs like Eclipse and Visual Studio while you're just learning everything. IDEs should only be used by professionals who understand what the IDEs are doing for them behind the scenes. When you're just learning, it's better to start simple and learn how to do everything from scratch. 
I would defs second this, all the technologies mentioned here comprise my current project environment in work and I did not encounter any of them at University. Although saying that, the 5 points listed by BiscuitCrisps below were covered in some depth during my course. I can kind of understand a University missing out on relatively new CI or a project management tool but a CS/SE course which doesn't teach you unit testing or source control is seriously lacking imo. The big question is whether University should be providing you with the skills to walk straight into the industry, or whether they should be teaching you CS fundamentals and letting you "specialise" on graduation, calling upon these skills. Closer industry interaction with Colleges/Universities is never a bad thing, I think letting final year projects have some sort of industry mentoring would be useful and a wise investment in producing capable graduates. 
I am learning everything from scratch. We/I don't use any IDEs and build everything from scratch. Unfortunately I have no influence in what is being taught in HS so nothing to do there. I'm probably better off going to some extra courses and learn by myself.
I can see your point. I guess what I'm really trying to say is don't over-engineer stuff. I recently had to deal with some code that had WAY too many "moving parts" and was obviously written by someone that was either showing off their knowledge of OOP or knew they weren't going to support it. Sorry - was in a weird headspace this morning. 
Main is the only entry point. When you create an applet with an init() method, somewhere main is being called first and main calls init().
Keep it Simple
Solved it, might as well put in solution. Picture Caterpillarg = new Picture("caterpillar.jpg"); for (int x = 0; x &lt; width; x++) { for (int y = 0; y &lt; height; y++) { Color c = Caterpillarg.get(x, y); int grey = (c.getRed() + c.getBlue() + c.getGreen())/3; Color greyScale = new Color(grey,grey,grey); Caterpillarg.set(x, y, greyScale); } }
Actual problem solving skills. Businesses don't want software, they want their problems taken care of.
Was just about to say that. It is the overarching principle that I keep coming back to.
I've done some work in Perl. Been thinking about branching out to Python but I haven't been able to find the time to sink into it yet. I originally started programming in Java with textpad and a CLI. Later in College I did my stint with emacs and nano. I'm checking out the Project Euler problems now.
I'm probably just speaking too narrowly about my industry. I work in web dev and spring has pretty much become a standard (for java anyways). Of course this is just my personal experience.
wish i was taught the power of the pom. our framework (stuts 2) was pretty easy to pick up. i wish i was taught scala in school.
I don't know if this can be "taught", but over the years I've discovered one evident fact. 90% of developers don't know what the hell they're doing. If I knew that when I first entered the field, I could have saved a lot of time and confusion. Its not that they're always right, they just believe they are. Their code doesn't have n-levels of complexity, its just shitty. If you can read a class for 30 minutes and still be unsure of what the hell its doing, its probably poorly written and needs printed for use as toilet paper. For years I thought it was me. If I had only known...
Best way is you test the codes yourself. I think the first part is OK. For the second part, try setting the JLabel with jLablel.setText("\r"+timer.getTime()) or equivalent methods. The reason I didn't put the "real method names" because its an assignment and you should be doing more research on that rather than asking here.
For the first one, it could work, but you can easily run into some problems. A couple improvements you could make would be to convert the while loop into a do-while loop, or to modify the while loop into something as follows: while((s = b.readLine()) != null) This would remove the dependency on s not being null to start as well as getting rid of the need to remove once at the end. There is also another class, Scanner, that you could be used that's overall easier to work with. You can modify your code and make use of the hasNext() and nextLine() methods. For your second question, you could use Observers and Observables to notify the GUI when the timer has updated. Another way is to pass the GUI into the timer class in the constructor and store it so you can call the setText methods from inside the timer class.
Yea, overengineering.
That software development is a profession but programming is a hobby.
good call, this is what i did in a previous college project
Version control! My school taught me how to use SCCS. SCCS? Really? Also, everything I ever needed to know about SQL queries can be condensed into: 1. Prepared statement! Learn it. Know it. Live it. 2. It the indices, stupid!
Java is a great first language to learn, as it is not as intimidating as other high-level languages, such as C++. It's rather simple to learn the basics, and once you get better you'll realize that it is actually rather similar to high-level languages like C++, thus making those languages easier to learn.
what do you mean? :o
The error message is correct. The semicolon ends the for loop, and the compiler treats the following braces as another block of code. So the variable i is out of scope in the println statement, hence the resolution error. This is equivalent (gives the same error): for( int i = 1; i &lt;=5; i++) { } { System.out.println( i + " squared = " + (i * i)); } 
Passing by value basically makes a copy of the value of the variable you're passing into the function. This is useful for primitive types (numbers, characters) because the original is not changed. Passing by reference basically makes a copy of the reference to the variable you're passing into the function. This is useful for objects because it allows a function to change the original object instead of a copy.
A bit of advice, install the findbugs eclipse plugin. http://findbugs.sourceforge.net/manual/eclipse.html It will find and explain these sorts of errors for you at the press of a button.
How to effectiverly use an IDE Also: Read SCJP course material, Really helps even if you don't give the exam