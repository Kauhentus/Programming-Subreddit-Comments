Stripes -&gt; Stripernate -&gt; Hibernate -&gt; Postgres
That's what I'm using on our long-running project. For a new project I'd probably go for Wicket, Guice and Hibernate. I'd also consider using Hadoop rather than an RDBM+Hibernate.
I believe these are the droids you're looking for : https://sites.google.com/site/justinscsstuff/jogl-tutorial-1
You'd recommend using LWJGL instead of JOGL?
Thanks for the reply. I've followed the steps but when I try and run the following program: package test3d; import javax.media.opengl.*; public class test3d { public static void main(String args[]) { try { System.loadLibrary("jogl"); System.out.println( "Hello World! (The native libraries are installed.)" ); GLCapabilities caps = new GLCapabilities(); System.out.println( "Hello JOGL! (The jar appears to be available.)" ); } catch (Exception e) { System.out.println(e); } } } I get this error: Exception in thread "main" java.lang.UnsatisfiedLinkError: no jogl in java.library.path at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1754) at java.lang.Runtime.loadLibrary0(Runtime.java:823) at java.lang.System.loadLibrary(System.java:1045) at test3d.test3d.main(test3d.java:16) 
Could this be because I have some JOGL files in my "/Library/Java/Extensions" folder still and Eclipse is trying to access those rather than my User Library?
That error usually means that you're not passing "-Djava.library.path=/path/to/dlls/" to the JVM. EDIT: By dlls I just mean native dynamic libraries. Can be .dll, .so, .dyn, whatever.
Cleveland has a good mix of Java and C# opportunities
i think the only place where java might not be the most common language is seattle because of the enormous microsoft presence. if there are no java jobs somewhere there are probably no programming jobs at all.
Yeh I'd recommend LWJGL too, since it much better maintained and has a nice community around it.
Play is cool, unless you're deploying to GAE. Apparently there is such a thing as too much abstraction...
I second Wicket. I use it with Guice and MyBatis. : /
San Francisco has a fair amount of J2EE jobs. Check out the craigslist ads.
Maybe [Spring ROO](http://www.springsource.org/roo/why).
Omaha NE has a large Java/J2EE community. Between strategic air command, raytheon, Lockheed Martin, union Pacific railroad, first data, and Gallup to name a few there are usually no less than 60 open positions at any given time.
Boston has a pretty diverse spectrum of java jobs, from biotech to start ups to consulting/agency into financial services. Yeah we have a pretty thriving technology community here, where if you have skills, there's no reason you shouldn't be working. 
If you're doing this because you want to, not because you have to, you're going to have a LOT of fun. In fact, just because you posted this, I dusted off and fired up an old, unfinished JOGL project.
There are thousands of [Java jobs](http://jobsearch.money.cnn.com/a/all-jobs/list/q-Java/l-Reston%2C+VA) in the [Dulles Technology Corridor](http://en.wikipedia.org/wiki/Dulles_Technology_Corridor) (Washington, DC).
Boulder, CO (and just outside of it) has pretty much every kind of programming job. There's lots of J2EE for the older companies, and every other language you can think of for the smaller ones. I've even seen Common Lisp ads on Craigslist.
DoD is making a significant push to adopt SOA and Java. [This](http://www.soamag.com/I19/0608-1.php) article is a bit old but still valid.
Spring MVC with Sitemesh and JSP (Sitemesh is a MUST when using JSP). Hibernate/JPA for bigger projects and Spring JDBCTemplate stuff for smaller projects. I've written a port of the django template library to Java and Spring MVC, but I've yet to use it in production software. So my favorite stack would be: * Spring MVC * Django templating library ported to java * JPA/Hibernate * Custom built maven2 plugin that lets me do *mvn myPlugin:deploy -Dhostname=nameOfHost* and have my app deploy using SSH commands.
personally, I'm wary about using the ActiveRecord pattern with JPA. How has it worked out? I also find Play a hard sell to other developers who don't really keep up with modern web software practices. Also I don't like how everything is static in the web layer. I think it's great having stateless web code, but I'd rather have it like Spring MVC where your controllers are instances which can receive other beans through injection.
I would look at Tampa, FL and the SF Bay Area. Also, Raleigh-Durham NC and New York's Capitol region (central NY, near Albany).
Sydney, Australia and Paris, France. Lots of Java jobs.
Yes.
Raleigh-Durham is a good area, lots of tech companies and the cost of living is still pretty low.
Wilmington, DE for financial services.
Good point.
It's because your instance of Chaos is completely separate from the instance of Look that you're instantiating. They share no variable instances. If you want every instance of Chaos (or a subclass) to have access to FSW then make it static; but that's not really a good idea.
I agree with nil088. Also, (I may be wrong here...) could it have anything to do with extending Chaos? Possibly? Just throwing an idea out there (I'm still learning Java but I know a bit).
I would skip SF as housing costs seem to outstrip salaries pretty easily.
I don't know if I agree with using /r/java to help you debug very basic code when youre clearly a beginner. I guess I asked the same questions in irc forums when I was just starting out though
Just because you work there doesn't mean you have to live there.
I live in new orleans, which is like a techbology black hole. My company cant find java programmers to fill the jobs we have available.
I was certainly impressed with the screencasts of it that I saw yesterday. One of our guys is pretty enthusiastic about it as well, so I'll probably go that way. 
Google Web Toolkit. Yes, it isn't necessarily a complete web development stack, but what it does, it does well, and that is the web user interface. With GWT it is easy and simple to write an interactive and a dynamic user interface and make it work with back end services.
Yep, i'm with you on the docs...I made a blog post doing some interesting annotation based controllers last year because there was absolutely nothing on the web about them - http://www.weheartcode.com/2008/10/16/reusing-annotation-based-controllers-in-spring-mvc/
You can't have an array of E != an array of Objects. The simplest solution is to use something like ArrayList&lt;E&gt; to store E's. The reason for this issue is because generics only exist at compile time, and the array allocation is done at runtime, causing some issue. A much better description of the issue/solution is on stackoverflow here: http://stackoverflow.com/questions/529085/java-how-to-generic-array-creation 
I seem to get the same compilation error if data is defined: private ArrayList&lt;E&gt; data = new ArrayList&lt;E&gt;(); with: return (data.get(location++));
Ah bingo, that's an inner class. There is no garentee that the two E's are of the same type. So here is a simple fix... import java.util.Iterator; import java.util.ArrayList; public class MyDataType&lt;E&gt; { private ArrayList&lt;E&gt; data = new ArrayList&lt;E&gt;(10); private class MyIterator implements Iterator&lt;E&gt; { private int location; public boolean hasNext() { return location &lt; data.size(); } public E next() { return data.get(location++); } public void remove() { throw new UnsupportedOperationException(); } } } 
You're getting a compile error because MyIterator&lt;E&gt; is defining a new meaning for E. Change that class declaration to: private class MyIterator implements Iterator&lt;E&gt;
So removing the generic declaration of the inner iterator class fixed the problem. Thanks for that!
Exactly. You can think of that generic declaration as being only in the scope of that inner class. I guess an analogous situation would be: public class Outer{ int a = 1; class Inner{ int a = 2; public void print(){ System.out.println(a); } } public void print(){ new Inner().print(); } } When you call new Outer().print(), what should print? Why? Scope makes all of the difference :)
You should be getting a warning that the E in `MyIterator&lt;E&gt;` hides the E from `MyDataType&lt;E&gt;`. If you don't, get a better compiler.
I'm using eclipse. I've tried netbeans but didn't like it nearly as much. Are there any better suggestions?
My Eclipse complains with &gt; The type parameter E is hiding the type E In general try enabling all the warnings you can. If the compiler gives you a warning that you think is meaningless, figure it out -- there's probably something bad going on :-)
Why should you do this: 1. You are from 1995 and seriously believe that Java is slow / a waste of space. Your computer is unable to handle the 100MB install size. 2. You are bored and have nothing better to do. Why you shouldn't do this: 1. Nothing made with Java will run on your system until you install it again. 2. Nothing made to use the JVM, in languages such as Groovy or Jython, will run on your system. 3. The above includes a lot of IDEs, including everything based on Eclipse. This includes IDEs that aren't even used for writing Java. 4. This would be a waste of your time, my time, and everyone else's time, because you're just going to reinstall it in a few weeks anyway.
What common programs require java? No need for the condescending tone, legitimate question placed in the correct sub-reddit.
Thanks for the reply. I was able to get it working by properly setting the native libraries path in Eclipse.
Yep. Just doing this for fun and to expand my knowledge. Maybe I can relive my childhood dream of being a game developer!
Sorry, let me rephrase. By uninstalling the JRE, you're basically giving every Java developer out there a big slap in the face. You have almost no reason to uninstall the JRE, from a technical standpoint. Assuming you don't play games, you may as well uninstall DirectX: maybe it won't affect you, but the moment you try to run something that uses it, even non-vitally, you'll have to go back and re-install it. Assuming you're not a developer, your contact with Java will be fairly limited. Even then, however, a lot of educational applets will require Java to run, so if you're a student of science, you'll probably want Java. Beyond that, you can largely avoid Java in desktop apps if you want. My big point here is that there's no really good reason to uninstall the JRE. It isn't hurting you by being there.
Why is it Apache's fault for not caving and not vice-versa?
Honestly for the handful of nice ~~features~~ bug fixes in Java 7, after Oracle decided to move all the good stuff to Java 8, I don't mind waiting until 8 just comes out. Who really cares if we skip 7 entirely at this point.
Seattle has a fair number of java employers. It may not be the most common language, but there is a healthy presence.
People leaving because of Apache's withdrawl, misses the point. If SCP doesn't care if Apache leaves, why would there be any incentive to progress and support technologies by other groups? What kind of environment can you reasonably expect to exists, when the tenets of the organization are disregarded?
I've updated my Eclipse settings ealf to enable more warnings so I see the hiding of type E now as well. Thanks for the help! Didn't know Eclipse was so configurable.
It's crazy. Quick list of things you shouldn't miss out on; it's been a while since I used it so I probably missed a few: * Everything in the 'Quick Fix' menu (especially if you select 15 identical warnings in the Problems pane) * Everything in the 'Source' menu; the amount of boilerplate it can generate for you is amazing (oh, and autoformat!) * Everything in the 'Refactor' menu. * +3 ( = Ctrl on Windows, I think) to find any command by name if you don't remember the key combination * +2 R - inplace rename * +Shift+T - smart search for type names (TaMoL = TableModelListener, etc)
There is a dependency issue between GPL and the mobile restriction in the validation kit. Apache is not the problem, Oracle is.
Really enjoyed this video.
99 bottles of beer on the wall..
Erm, what? Both utilities can be downloaded and integrated with Eclipse for free, for some time now. Does this mean that this will be included by default in the default next Eclipse (Java) package?
nice!
so how did this book workout for you?
Pretty good, I did java in the early 2000's and needed to brush up. That book is working a treat so far. My only concern is it seemed to get into the OO stuff before even explaining basic datatypes, which was no problem for me, but complete programming beginners might be scratching their heads. This will be the chapter you are on, "know your variables". I would of expected that to be chapter one. Then again if they are a complete blank slate, maybe it isn't a problem which order programming is taught. Either way the combination of code examples mixed light hearted text/banter seems to work very well at keeping my attention. How are you finding it?
I know what you're saying, I think I'm on Chapter 5 right now. I had done some programming in the past but it'd been so long. However, I convinced a friend to pickup java and he coincidentally picked up the same exact book. He has no programming background at all, he's getting through it, but I've been helping him out quite a bit and just understanding some basic concepts. I've read some other java texts long ago, I do enjoy this format, it keeps you interested instead of feeling like just some course text book. what ch. are you on? what's your goal with all of this?
Don't be afraid to write something from the ground up for the right reasons with a simple idea and design. :-)
From the article: "Both projects intend to join the Indigo release train in June 2011."
Not knowing what data you are trying to show, it sounds like what you want to do is use a JTable with a custom table model. The table model manages providing the data for the "cells", you give the table the column header details, the JTable handles the headers and structure, then toss that into a JScrollPane.
TableLayout is awesome. I use it all the time, occasionally also using BoxLayout for those times I want a dynamic list of widgets. Oh, and [http://madbean.com/static/blog/2004/17/anim.swf]
The link in the post for CodePro is only pointing to documentation. The only link I found reagarding CodePro is [CodePro AnalytiX](http://code.google.com/intl/fr/javadevtools/codepro/doc/index.html). But that doesn't seem to match the features in the documentation (I wasn't able to find any profiling stuff). Could you share where you can download the CodePro Profiler?
Only thing I don't like about JTable (which is the reason I didn't use it in the first place) is that you can't dynamically add rows to it (which isn't technically true, since you have control over the TableModel that you use, and can add the rows to that). I dunno, it just seems to me like there should be something better in the native libraries, but I just feel like whining.
You need to enable the analytics for your project, right click on the project and then Enable Analytics (or something like that, I only used it once). After that you can profile each class, or multiple classes, etc., you get the results in a new View (a window, like the console or javadoc window at the bottom). [edit] Nevermind, apparently Analytix and Profile are separate.
Yeah now that I've actually started trying to do it, JTables are a pain in the ass. If your column happens to be a JButton or a JLabel, then you need to create your own custom renderer... JTables are great for some applications, but for the simple purpose of a table-like layout, they seem to be horrible.
Quite good article, forced me to think about Java's (over?)use of streams, and reminded me that I'm professionally weak on the NIO set. 
My take on the story is, the two most sophisticated guys behind JME started their own project: Ardor3D. You can tell, if you read the A3D source code, that the API is the result of everything they learned over the time: It is pure elegance IMO. Other highlights: The forum response times are very fast. It runs on Android. Many very very good procedural, endless Terrain examples. Very good Collada support. Ardor3D based UI System. Also check out the demos: http://ardor3d.com/portfolio/demos.php What others are doing with it: http://ardor3d.com/portfolio/ JBullet Physics Engine integration: http://ardor3d.com/forums/viewtopic.php?f=9&amp;t=76 MineCraft reimplemented in Ardor3D Java open source engine: http://www.reddit.com/r/Minecraft/comments/dv2wq/minecraft_reimplemented_in_ardor3d_java_open/ I recommend you write a little demo application with both and get a feel for the basics. Then just decide, what feels better to you. ( http://ardor3d.com/wiki/yourfirststeps ) ( http://ardor3d.com/wiki/gamebase ) 
&gt;So... is he with Google now? His Wikipedia entry and his blog seem strangely silent on his current status. Well what he said was that Google did violate patents, but Sun wasn't going to sue Google because they felt Google wasn't doing any harm. In fact they thought most of what Google was doing was positive. When Oracle took over they tried to translate that to them when asked why they didn't sue, Oracles response was "you fucking idiots!". So they had different point of views. Sun didn't want to sue because Google where doing something positive with the language, Oracle see the positives as irrelevant, because there might be money to be made by suing. Oracle see it more as a business transaction that would be better for Oracle the company, rather than what's better for Java the community. 
I just felt that I should mention why I downvoted you: the same piece of news is submitted one day ago in this very same subreddit. Moreover, you're not linking to any of the parties involved neither the article you mention does it...
Good explanations, but I've still yet to see any introduction to Clojure/Scala/FP for imperative programmers that arouses any interest in practical-minded people. The typical LISPy examples work if the reader already knows how to solve problems in terms of map/reduce/higher order functions, but if not they just seem like toy examples with no connection to the real (practical) world. Not to start a flame war, I totally appreciate FP since I've gone to school and (mostly) broken free from my Java/C/imperative mindset... I never understood those examples before I did though, and they sure aren't what convinced me. What convinced me was actually solving problems using functional languages.
Munich, Germany
Yeah, I listened to the presentation as well. I just thought it would be interesting to know where he's headed professionally.
The A, B, C, D variables can be declared static variables at the class level, so that they aren't instantiated every time the method is called. (assuming they are constants and don't change based on your parameters). http://download.oracle.com/javase/tutorial/java/javaOO/classvars.html http://download.oracle.com/javase/tutorial/java/javaOO/initial.html
This. For an NxM array of doubles, you're doing M+1 allocations. For each array you have there.
Are the arrays constant? If yes, make a large batch of A00, A01,...,A34 constants (static final double) with the actual values assigned to them at class definition time. Same for B and C. Use these constants directly. Also, make static method to square an cube a double (e.g. static final double square(double x) {return x*x;}) - they will get inlined automatically.
I shaved off about a a minute and a half using your suggestions. Creating the square and cube methods helped immensely. Using a bunch of doubles instead of double[][]s helped shave an extra few. THANKS!
Cheers! The relative difference in optimization effectiveness is interesting. Check what kind of JVM you're running, and see if it's the HotSpot Client or Server VM. Also, your code should run faster in 64-bit mode (more registers). Incidentally, see slide #53 of http://www.slideshare.net/dougqh/jvm-internals-key-note - it only works on objects, not arrays :-/.
and it doesn't have any security updates [either](http://blog.internetnews.com/skerner/2010/12/oracle-updates-java-but-not-fo.html) - no, not even one.
I usually go with Tomcat. Widely used. Lots of documentation. 
+1 to Tomcat. Also, database drivers aren't necessarily provided with application server, but are instead provided either via configuration of the server (putting it into the common libraries folder and modifying the server configuration) or including it into your assembly (WAR or EAR).
Agree, tomcat's my 'go to' server though for a few web-service projects I've gone with just using the Java SDK and instantiating a [HttpServer](http://download.oracle.com/javase/6/docs/jre/api/net/httpserver/spec/com/sun/net/httpserver/package-summary.html) Talk about zero startup time. I use Groovy and the Java JDK and I can demo up some impressive stuff right quick.
I use Jetty. Very, very lightweight. the database driver/mvc/etc are features of the app you deploy (libraries), not the app server. Jetty is great for development. move to tomcat or something for production. 
if you are just getting into j2e, i would suggest learning these tools in this order: 1) code up a couple old school servlets, deploy to tomcat or jetty. 2) write some JSPs (but not too much, they are evil). 3) in your servlets and/or jsp's, connect to your db with jdbc these are "simple" baby steps, and will give you background and reference for when you move to more complex frameworks. 4a) if you are looking for a job, learn spring and hibernate. (start with spring IOC a possibly spring MVC) 4b) if you are looking for something lightwieght and fun. check out apache click and mybatis (ORM) that should be enough to keep you busy for at least a month or 2.
use stripes on tomcat
Apache Tomcat - good all-rounder servlet container, easy once you get to know it (don't waste time with Jetty, imho) May also want to check out PostgreSQL in stead of MySQL (avoid licensing issues)
Wanted to add...If you are doing this to be able to build a skillset to allow you to take a job doing java web development, it's all about the frameworks, baby. Here's the list. 1. [Struts2](http://struts.apache.org) 2. [Spring MVC](http://static.springsource.org/spring/docs/2.5.6/reference/mvc.html) Are there others? Yes. But everything else is not very widely adopted. Pick one of those. I suggest Struts. And if you want to get specific, here's the tutorial to get you started. [Struts-Spring-Hibernate integration](http://struts.apache.org/2.0.14/docs/struts-2-spring-2-jpa-ajax.html)
Postgre FTW.
Is the property you're changing on the classpath? Have you tried with -D? 
Yes, and it gets set properly (I can check)... Furthermore, ClassLoader.getSystemClassLoader() returns the *correct* classloader that I specified! It just doesn't get used to load classes (unless I explicitly use it, of course, which isn't really an option).
Can you utilise the Proxy API instead? http://download.oracle.com/javase/1.4.2/docs/api/java/lang/reflect/Proxy.html
Is it even possible for a Proxy method created that way to be called instead of sun.misc.Loader$AppClassLoader.loadClass()? My understanding was/is that Proxy classes have to be explicitly created and used. I don't know of a way to just register a class somewhere so that a method gets automatically called when a method in another class gets called, which would work for me. The problem is I can't seem to overload the default userspace classloader, whether with a proxy class or a separate classloader.
What are you doing that restricts you from using the default classloader? If it's getting this complex you might want to rethink what you're doing; challenge assumptions etc. &gt;I don't know of a way to just register a class somewhere so that a method gets automatically called when a method in another class gets called, which would work for me. It's called AOP. Check out Spring &amp; AOP immediately.
&gt; I need some logic to be performed when a class is loaded It's hard to tell with that level of details, but maybe you can work something out with the [java.lang.instrument](http://download.oracle.com/javase/6/docs/api/java/lang/instrument/package-summary.html) stuff. It's the API used by profilers to dynamically insert code in all loaded classes to track calls. 
I've never used that property, though it sounds like it *should* work. I've an app where I have a stub class containing main which gets loaded by the default class loader, then in main I create the custom class loader and load the program's proper primary class from that, instantiating it via reflection. That custom class loader then gets automatically used for the rest of the program's classes. Maybe you could do that? (This method also means there are no properties to set and the program can be launched with an ordinary double-click of the jar.)
I'm aware of both of them, actually. I can't use Spring because this needs to be a very fast, standalone application, it's not a web application (which discounts a lot of Spring, but not all of it, I know). The overhead using Spring accounts for is too much for this particular application, a bittorrent tracker that needs to run with as little resources as possible. As far as other AOP implementations in Java, they seem to have the same problems - at least the ones I've seen. AspectJ might work, but I'd rather not have to change from the default compiler as this significantly raises the bar for custom usage and people compiling themselves (and thus contributing). However, there's other aspects of the application (objects representing network clients that time out and need to be periodically cleaned up) that would benefit from AspectJ, so I may wind up switching to it.
I'm adding observational logic to the class to update some things - object configuration values, some debugging information, that sort of thing. Mostly what I was doing was injecting configuration values into objects and being about to do that with *just* an annotation seemed attractive and I hate admitting defeat to a language when something **should** work and it doesn't. If it fails, I can restructure (or switch to AspectJ), but being as I'm not too very versed in the art of classloading (who is, really? :P) this was mostly an exploratory experiment.
You should provide more details instead of having people guess like this. If your build process for the project is solid then using things like AspectJ could end up transparent. 
Use Spring. Trust me on this one. As for Hibernate, I'd choose iBatis (or myBatis as it's called nowdays) over Hibernate in all situations except a few border cases (like where you have a lot of junior programmers banging out a huge quantity of complex models in a short time, and it doesn't have to be optimized for speed).
While we are on this topic that I know nothing about, what are some of the reasons why someone would want to change the way the classloader works?
There's a few: 1. You need to load remote classes - say you have your classes on a central machine and dummy terminals load them remotely (clustering, for instance). 2. You want to encapsulate class loading logic for particular components of your application, like webapps in tomcat, or plugins. Nutch, for example, uses separate classloaders for each of its plugins, so plugins can define their own classpaths, which makes developing them much more modular and contained (since the -classpath classpath doesn't need to know about required libs, the plugins exist almost entirely by themselves). 3. You want to have several different versions of the same class loaded at the same time (here be monsters!). 4. Automatic class generation or bytecode manipulation at runtime (here be monsters!). 5. Security. Every class loader can have its own Security policy, meaning you could create a Thread with, say, no filesystem access. I'm sure there's more, but that's off the top of the head.
I suppose that's true, I'll just have to add AspectJ to Ivy and hardcode some of the ant configuration (or rather issue serious warnings about changing it in properties file comments) and people *might* not notice. The problem I foresee, though, is people adding the project to Eclipse as a Java project and having to manually mess with Eclipse in order to get it to compile at all and then it still won't work correctly, thus requiring people using IDEs to 1) use eclipse and 2) use eclispe apdt, which I can see driving people away.
If you plan to use Tomcat, you should also consider [Spring TC Server Developer Edition](http://www.springsource.com/developer/tcserver). I've started using it a few weeks ago as my development server, following my colleague's recommendations, and I really like it. It's basically Tomcat (SpringSource is a major Tomcat contributor), bundled with additional Spring libs / configuration scripts. I really dig the ability to [create and manage multiple "instances"](http://static.springsource.com/projects/tc-server/2.1/getting-started/htmlsingle/getting-started.html#postinstall-create-instance) with simple scripts, as well as the notion of [instance templates](http://static.springsource.com/projects/tc-server/2.1/getting-started/htmlsingle/getting-started.html#postinstall-creating-instance-using-templates). I haven't yet played with Spring Insight, but it seems awesome too (there is a screencast on the TC Server page). BTW, to setup Spring Insight, you simply need to specify the "insight" template when creating your instance: ./tcruntime-instance.sh create fffuuuuuServer --template insight Finally, I like how TC server helps you configure Tomcat "correctly". For example, the default is to use the ["separate layout"](http://static.springsource.com/projects/tc-server/2.1/getting-started/htmlsingle/getting-started.html#postinstall-create-instance-layout), where you separate your instance's configuration (jars, wars, logs, conf/server.xml) from the Tomcat directory. It's a lot simpler to upgrade Tomcat when doing this. Note that you can (and *should*!) also do this with standard Tomcat, it's just not the default. Another cool thing: you can use properties in your server.xml configuration (add them to *catalina.properties*, and access them using the ${my.property} syntax). Note: while it's awesome for development, I am not sure if it may be used as a production server (I need to study the license / features). As I understand it, one of the goals of the free developer edition is to attract interest for the "standard" [TC Server](http://www.springsource.com/products/tcserver), which is Tomcat with added entreprise features (monitoring, and so on). This is fine by me. It looks like a good product, and I might consider it later on, but it is far from mandatory, since you can use Tomcat for production deployments (TC Server is 100% compatible with tomcat). I know the OP only needs a dev server, but I mention this for other redditors ;) TL;DR: I'm psyched about TC Server. I guess I'm a Spring fan-boy?
Yes, you are a bit of a Spring fan-boy. But then again, if you are going to be a fan-boy of something, Spring would be it. And yes, if it can't be done with Spring, it's not worth doing. 
*Interviewer :* There seems to be a growing interest in the JVM as a platform for multiple languages. What are your thoughts on this? *Joshua Bloch :* I think it’s a great thing. An immense investment has been made in the JVM over the years by many companies, whether it’s IBM or Sun, Apache, whatever. There are a bunch of VMs out there and you might as well leverage that investment. I’m also thrilled that it enables all of the language research that’s going on now. **I think everyone realizes that we’re going to need some new languages before too long** and I think it lowers the bar to be able to do experimentation in that area. ----------------- I wonder if this is related to Oracle's handling of the Java platform ;)
I recently did the same thing so I'll outline what I've got setup. For developing I've got Eclipse and it's setup Tomcat and deploys to it for testing. JDBC is really simple, I'm using Postgres but MySQL just means a change to the connection string and a different .jar in the /lib/ dir AFAIK. For the production/staging server I'm using Jetty because anything more would be overkill for this project. If I do more J2EE web apps in the future I'll stick them all in a tomcat instance I expect. I was going to use Winston but it proved difficult to get JSP/JSTL working TBH. So far my pet-project I'm doing to learn uses Servlets for logic/controler and dispatches/redirects to JSP pages in the WEB-INF folder. Because they're in WEB-INF they're only accessible via these controllers. So somewhat *septation of concerns* at least, if not strict MVC. In JSP I'm using JSTL and some custom tags for re-usable bits of markup. JSTL and tags make JSP just about bearable, things like &lt;c:foreach&gt; and &lt;c:out /&gt;. Without them JSP with little bits of Java in are IMO a complete joke and would bea nightmare to maintain. As I understand things this is all still under the *J2EE umbrella* and runs in a *Servlet Container* so it could be dropped into a J2EE app server like JBoss etc. If this isn't the case hopefully some one corrects this.
... or you could just use Maven. 
Oh, I didn't get that at all. I think he would've answered the same way Oracle controlling Java or no.
Yeah he cited multi-processor efficiency a fair few times...
Good point. There are indeed many good reasons to research new languages (and he even discusses some of them in this interview). Multi-processor efficiency is one such reason. Avoiding some of Java's mistakes is another. Exploring "new" programming paradigms, such as functional programming, is a third. That being said, seeing what Oracle is doing with the Java platform, I decided to look at other languages, and I'm really interested in the quest for Java's successor. Waiting for such a "political" wake-up call might have been dumb, because there were a lot of other reasons for me to look for better languages*... Better late than never, I guess. Since Joshua Bloch works at Google, and since Google is currently under legal attack for Android / Harmony / Dalvik, I thought he might feel the same about the need to find a better, "free-er" language, and that this sentence was facetious. I might be wrong. *: I must also stay lucid. Java is still there for a while, and that's where the pay check comes from. It has some flaws, but I still like it, and love the community / ecosystem, and plan to keep coding in it for a while. I'll keep an eye open for other languages, though (Scala, then Clojure. Maybe Ruby and Go, too).
Are you just trying to build a query string? String query = String.format("SELECT blocation FROM infrastructure.project WHERE bname LIKE '%s'", selectedLocation); Probably the most unsafe way to build a query but that's a whole different post.
THANK YOU! It worked! You have no idea how happy you just made me. I don't think I should be concerned with security at this point. Thanks again.
Yet another good Sosnoski article. 
no problem.
did /r/java just get trolled?
&gt; I don't think I should be concerned with security at this point. Famous last words...
http://xkcd.com/327/
lol "I'll just come back and tighten that up later"
again, famous last words.
This assignment seems advanced for what you seem to express is your level of knowledge at this point.
and strange that an assignment requires programming but no coding is needed.
I would say the best place to start is the [Java Trail](http://download.oracle.com/javase/tutorial/). Second red heading "Trails Covering the Basics" You can glance through the basic language structures pretty fast, but definitely check out the Generics and Packaging sections. Spend time on the Essential Classes since that's the big power of Java; not having to write everything again yourself. Also get familiar with the Collections section. You should definitely check out JUnit for unit testing and Mockito (IMO) for mocking/verfying in your unit tests. 
Start with the Java SUN/Oracle Tutorials: http://download.oracle.com/javase/tutorial/ Read whichever sections seem interesting to you. Don't be afraid to skip ahead if you already understand something. A lot of Java is a simplified form of C++, so you can probably puzzle out a fair bit of it on your own. To more directly answer your questions: A for loop in Java is similar to C++: for ( [init]; [condition]; [update] ) { [statements...] } You can also do for-each type loops. These use the Iterator defined for a Collection (see the Java API): for ( [type] [symbol] : [collection, such as a list] ) { [statements...] } Memory management is dead simple. New objects are created with *new ObjectName()*. Some more complicated examples: Foo f = new Foo ( constructor-arguments ); // a Foo created with some constructor arguments List&lt;Foo&gt; foos = new ArrayList&lt;Foo&gt;(); // a list of Foo objects Deleting objects requires zero effort on your part. Simply allow the object to be referenced no longer and it will be garbage-collected automatically. The one caveat here is that some objects, like IO-streams, need to be explicitly closed with a close() method or similar. A basic class is specified with: public class Foo [extends superclass] [implements interface[, interface[, interface...] { public Foo () { this ( default1, default2 ); // call other constructor with default values } public Foo ( int arg1, int arg2 ) { this.value1 = arg1; // initialize with given values this.value2 = arg2; } } But also note that there are inner classes, private classes, abstract, final and static classes. Then there are interfaces (like pure virtual classes in C++) and also anonymous classes.
Thank you, I'll start looking through those!
Thank you =] a lot of that makes sense and makes me feel like this is less of a daunting task hah much appreciated. I'm going to start reading the tutorials you linked.
[this](http://codingbat.com/java) is fun to play with when you're first getting started 
Yeah, this is general problem I've had for years when learning *any* new language. Most of the information for learning the language tends to assume you're new to programming, so you have to dig through a bunch of tedious novice tutorials before getting to anything useful. 
The best book I have found for "Beginners to Java" is the Head First series. The first tech book I have been able to read from cover to cover without getting bored. Between that, Reddit, and the java IRC channel it pretty much made me dangerous in six weeks.
 Excellent book: http://www.amazon.com/Effective-Java-2nd-Joshua-Bloch/dp/0321356683/ref=sr_1_5?s=books&amp;ie=UTF8&amp;qid=1292872830&amp;sr=1-5
Downvote for high BS metric. HotSpot's GC is just fine, thank you.
i too knew c++ when i decided to learn java, i found the core language book most useful immediately followed by Joshua Bloch's Effective Java (see wsppan's comment for a link). [Core Java Volume 1 - Fundamentals](http://www.amazon.com/Core-Java-TM-I--Fundamentals-8th/dp/0132354764/ref=sr_1_5?s=books&amp;ie=UTF8&amp;qid=1292881411&amp;sr=1-5) in all honesty i was using the 6th edition book. good luck.
I, too, came from C++ to Java, and here's what I would recommend to you: Download Eclipse. Install both the C++ and Java modules. Model a few basic classes in C++, then, attempt to re-create them in Java. The most fundamental differences will become apparent. Then, you can start trying to model other things. When I was doing C++, I always found that I had to re-make a lot of fundamental things myself, or for every project I worked on. Always having to make your own String class for example. Most of that goes away in Java, so my recommendation is to resist the urge to create a class X yourself, and try to find out if it's been done already.
It's probably fine if you have 4k cores like Azul's machines do. But that bit about "we just shove all the hard work into the read barrier" sounds like it has the potential to suck on uniprocessor machines. That's probably why JVMs that are intended to run on uniproc machines don't do things that way.
Is eclipse the most widely used environment to code in? Sounds like a good way to practice
&gt;All these are key differentiating features combine into what we call a pauseless collector. It is important to note, though, that the pauseless part of this describes the algorithm, but not necessarily the implementation. .... &gt; in implementation in a JVM, there are annoying little details that have nothing to do with the classic garbage collected heap. Things like cleaning out the compiled code cache, the system dictionary, and other little items here and there that have to do with cleaning out classes and runtime bookkeeping. ... tl;dr: pause...less... not pauseless. In fact they seem to take the standard compaction pauses and move them to the read/write barrier distributively across each thread independently. This might sound fantastic in a world with a thousand processor pipelines, but in the real world with languages that have synchronization, it is just preposterous. They would be better off describing it as a "Real-Time JVM" like Oracle and IBM describe theirs. At least then there are real numbers to compare: the maximum pause time between one Java instruction and the next. It might be slow, but at least it is consistent. 
I dunno, but it's the only one I know of that will let you write C++ and Java in the same IDE. For free. Eclipse. Learn it. Know it. Live it.
First, don't use SSN as an id. Second, this is a SQL question, not a Java question.
Try a select from employee with a equi-join (normal) join against current_work_in on the employee_ssn. I'm assuming this is for a homework assignment, or else you would never use a ssn in real life for a primary key. For one thing, it's not guaranteed to be unique. Additionally, you would run afoul of the HIPAA Act and god knows what other regulations.
I am doing this in Java in Eclipse. But I am new to this, so I might be wrong.
You might want to do an inner join. If you simply want to pull up first and last name based on the department as a clause , include the department value in your where clause, and match the SSNs from both tables. ex. SELECT first_name, last_name FROM currently_works_in a INNER JOIN hours_worked b ON a.employee_ssn = b.ssn WHERE a.department_number='value' Depending on how your java code is written, you might want to substitute your "value" by a variable in your code. Try it, it might need some adjustments. **edit:** forgot to include alias to clause.
Eclipse is just a workspace for different languages. If you were asking how to implement and run a query through java, then it'd be a java question. Seems like you ought to read up a little bit more on SQL. http://www.w3schools.com/SQl/sql_join_inner.asp
Yes it would. He should be safe by simply matching the SSNs against each other. And yea this is a very good point. Never use SSN for PKey.
&gt;Any help on how i should word the select query? This has nothing to do with Java.
I LOVE YOU!!!! You Sir (or Ma'am) just made my day! Thank You.
You are quite welcome. Try to use Google to find answers to small questions like these. You won't always find someone to give you code like I did. Since you are learning, the W3Schools website walks you through basic commands and operations quite clearly. 
Another vote for SVN here.
It's really a matter of how the web app is going to be used, and what will it be used for, and most importantly the magnitude of it. Another way to look at this is, how would you carry your money? Have the cash with the direct access of the money in your pocket, or have a debit card with virtual access to the money on your bank account. There are cons / pros for both. I personally always used very limited amount of BLOBs and Images in the database, but then again, my web applications were always small and almost always inside closed intranets.
I've been looking into MongoDB lately. GridFS looks a lot nicer than the traditional blobs we know from relational databases. Pros: * Easier to synchronize files with the database state, especially after restoring from backup! * Automatic replication of files / increased performance. 
The answer is almost always NOT the database. You will most certainly kill your DB if you ask it to act as a file server. You don't put structured data on your fileserver and query it do you? Start using flat files on a filesystem and put file metadata in the DB. You should be able to get quite far with that. You can migrate to MogileFS or GridFS or use a CDN or whatever if you need to scale. 
Use database only for reference (not storage), and use S3 or similar service for actual storage.
Since you're suspicious of the garbage collection ... Does the behavior change if you use a different [garbage collector](http://www.oracle.com/technetwork/java/gc-tuning-5-138395.html)? Or a different [JVM](http://www.oracle.com/technetwork/middleware/jrockit/downloads/index.html)?
Interesting suggestion. I will have to play with that a bit.
Do you actually get OutOfMemoryErrors? If not, what exactly do you mean by drag on performance?
The first antipattern is interesting (a reminder that *i++* isn't an atomic operation). Others are more classical and trivial. 
I'm not sure how you could have coded "checkers with an AI", and yet are struggling with a tic-tac-toe program. What language did you use before?
I gain nothing from lying. I used python and java and am trying to use more java. For my classes everything was kind of laid out for us and now on my own I forget what I used to make the programs I'd run. I'm not struggling with tic tac toe. I just wanted some ideas for easy fun ways to review and remember everything so I could start programming again. I'm not sure the courses I took were well rounded. They were university courses at a decent institution, but I'm not sure I took all away from them that I should have. I learned the specifics for each assignment and then immediately forgot them. Either way I'm just gonna go through a bunch of the tutorials again. I am absolutely not lying. I took three courses at Brown in the CS dept. and then gave it up for a year. It's part of the curriculum for the first three courses to code tetris, othello with an AI (I said checkers cuz I wasn't sure everyone knew what othello was), a convex hull, and a bunch of sorting algorithms. I passed all these courses. Unfortunately I apparently didn't take away a whole lot. A lot of it is I'm probably just not confident enough in my own abilities and need to brush up to give myself reassurance.
I've worked mostly with struts and a bit with Spring MVC; I think the basic patterns are similar enough that if you get used to one, you'll be able to pick up the second quickly enough.
ClassLoaders are probably still one of the biggest black boxes for me when it comes to Java. I know a bit about the root/boot class loader, the way JARs can get segmented by classloader, and a few other things, but I've never seriously tinked with anything to do with classloaders - and I'm rather scared to!
This is exactly (one of) the reason(s) I was playing with this experiment. I don't like there to be "black magic" that goes on in the language/environment I'm using, so I seek out particular things like (or alternative references or the security policies) and try to establish at least some modicum of expertise - enough so that I understand what's going on under the covers when I write code.
Also IDEA and Netbeans. IDEA is not free though, but they have a 50% discount now I think.
Just to add another dimension to this is the case where concurrency is accomplished via multi-threading and clustered multi-processing. JEE provides a clustering environment where a threads of execution can execute simultaniously across different nodes, accessing the same shared resources. The synchronized semantics of Java and object.lock are not propagated nicely across each node. There are semantics in JEE to help this, eg. stateful session beans, but carry a performance cost. Other methods would be to managed state in the distributed shared resource of contention. .... maybe this would be an interesting article? 
Can you really blame them for wanting to leave all the junk behind?
While the complaint is true for blocking network operations on a limited device like android, the benefits of non-blocking IO on serverside applications is not quite so black and white.
Try it and see?
touché ;) 
Java got this from C++ which got it from C. Any literal starting with 0 is considered octal and if it starts with 0 and contains 8 or 9 after it, then it is a compiler error.
Can you recursively iterate through the getComponent()[1] until you find the object you're looking for? 1. http://download.oracle.com/javase/1.4.2/docs/api/java/awt/Component.html#getParent()
Eclipse is the most widely used IDE in the **Enterprise** environment, however, for the rest of us, NetBeans rules. The Matisse Forms Designer is hands down the best if you have to do any UI work. The IDEA forms designer is just plain confusing. I mean, really, it's weird and completely unintuitive, however people I've heard from who use it say it is great once you know how to use it. NetBeans is a really nice IDE, but if they get that Matisse4Eclipse plug-in working, I would consider switching myself. 
Awesome. These are the kinds of submissions that I love to see on reddit. Thanks!
Glad you guys like it. I sometimes hesitate to post, because I've gotten randomly downvoted in the past for links that I thought were particularly useful / interesting. I found out about this cool library [here](http://stackoverflow.com/questions/2543938/how-to-split-mobile-number-into-country-code-area-code-and-local-number/2549036#2549036)
Sadly, reddit hasn't quite fixed the problem where you submit a link and a couple of early downvotes kill it :(
Thanks. Just the thing I was missing.
Ouchh. Of course, getting the current stack trace is _an expensive operation_. One solution may be having a static final constant initialized at runtime, perhaps from a system environment variable (e.g. IS_PERFORMANCE_TEST). Then this static boolean can be checked and optimised away at runtime. I'm not going to register an account just to post that, though :P
Don't ever use that for flow control or, really, anything other than logging and debugging. It's slow as hell and there it's creating very strange and unexpected dependencies across modules.
I've also heard the term "var args" a lot.
Would this also work if you iterated through `names.clone()`? Just because that would make it a little bit more explicit what you're doing.
Thanks for the link, I actually need to create PDFs from a Java application so this is useful. Have you or anyone else used any of these?
I have used iText and it's fairly decent for basic things. But it recently shifted to a less acceptable license (at least in my eyes).
I'm just sketching this application out at the moment, resolving all the licenses is going to be a nightmare... The iText license is proprietary and **huge** though, not easy to follow like GPL and BSD... My summary for others reading this is that you can use this library as long as your program is open-source. People getting PDFs from your software must be able to see the source (so you couldn't run this as a web app for example without purchasing a license).
Exactly. And pricing can apparently be very expensive, so that's quite possibly not an option either. I think my biggest problem with it is that if you used it for an intranet application, then all of the employees that have access to that application also get access to the source code. Or at least that's my understanding of the license. Suffice to say, I was very glad that I was using the older version, and it encouraged me to stick with the handful of licenses I understand and can deal with. GPL, BSD, Apache, etc.
I think that is a correct understanding of it. I'm gonna try out the Apache one first, I know where I am with their licensing.
[video link](http://www.youtube.com/watch?v=aAb7hSCtvGw)
I like how a section is devoted to exception design. I have always regarded this as extremely important when designing APIs. A poorly designed exception hierarchy can make the API seem fragile or lead to incorrect usage. 
"Buying such a license is mandatory as soon as you develop commercial activities involving the iText software without disclosing the source code of your own applications." If we use iText in our commericial application then we need to disclose the source. Its good for open source but not for commericial product.
Is it only restricted to commercial activities? It's honestly been a while since I read up on this, so I could be completely wrong, but I believe anyone that ever sees a PDF generated by the application is considered a user (possibly even printouts of those PDFs, too). So many people could be considered users. And this whole conversation has made me wonder how defunct projects are dealt with via this copyleft license. How long is the source code supposed to be available for? Because I could easily see a project abandoned, but the products of that be passed around for much longer to come.
Not enormously familiar with what you're doing, but I imagine that there is a 'refresh' or 'repaint' method you need to call on the container of the text in order to update it to the screen.
I think it is strange that he doesn't mention a pattern I find very useful: in case a method might require more arguments in the future, use a context-type object as argument rather than enumerate all arguments. You can add fields to that without changing method signature. (Forward compatibility ensured) 
If a method "might require more arguments in the future", and given that an API is "forever", then really what you probably want to do is make a new method with the right amount of arguments, mark the old method as deprecated, but continue supporting the old method "as-is". The problem with this scenario you're presenting is the keyword "require". The method did not "require" the extra arguments previously, but now it does? It sounds like you're changing the contracts of existing methods then, which is usually a bad sign.
The methods I have in mind are template methods, to be implemented by plugged in classes. So it is not an API to call, but to be called, for the "consuming programmer". This depends a lot on the use case etc, so it is a difficult discussion without a shared understanding of the problem I had in mind.
Ok thanks! I did some reading on it and I'll try that out.
I vow to stop making drop down date menus with one day increments starting at 10,000 B.C. 
[Decompiling Java](http://www.amazon.com/Decompiling-Java-Godfrey-Nolan/dp/1590592654) is a good book on Java bytecode.
thanks for this , i didnt even know this was possible .
What happens if somebody needs to select a date in 11,000 B.C.?
Did you account for the calendar changes, such as the change from Julian to Gregorian, or the intentional dropping of days during the British calendar act of 1752?
Since you have programming experience, Thinking in Java is a great book.
I like [this place](http://download.oracle.com/javase/tutorial/).
Thank you!
Thank you i will definitely look at it
I suggest getting a tutorial that works you through eclipse at the same time since eclipse is awesome. Don't compile crud from the command line and stuff...
Yes, but skipping the sausage factory tour will not help you when you get a classpath issue in your corporate-mandated Ant/Maven build. Even though it is gawd-awful ugly, you tour the sausage factory so that you understand how the settings provided by Eclipse will affect your project.
Also, [JavaRanch](http://www.javaranch.com), is a good place for questions, if you don't mind using your real name or a semi-proper alias.
We run our ant/maven builds through eclipse.... I only did Java via notepad + command line in college, soon as I graduated my job gave me the 30 minute tour of eclipse and I've never looked back. I'm regretful that my college didn't start me out with it. You still know how to deal with classpath issues in eclipse...
As a big fan of Eclipse, I completely agree with this. Learn your command-line fu first, then upgrade to an IDE.
When I want to learn a new programming language I usually come up with a simple project idea and start to make it learning as I go. Whenever I get stumped I usually turn to Google and the official language documentation for the answer.
FYI, the slides don't perfectly match with the video. In the video he has some example APIs that he shows that aren't in the linked slides.
Stanford CS106A.
You can just write a program that simply starts Firefox, with a command line argument to load the page of your choice. That should be fairly trivial to implement. [Command line arguments.](http://kb.mozillazine.org/Command_line_arguments)
Depending on what you're trying to do, you may want to look at [selenium](http://seleniumhq.org/). I've only used it for testing, but there's nothing that says you can't use it to automate behavior using a browser of your choice. It has a number of APi's for various languages, including Java.
http://www.centerkey.com/java/browser/ I believe that has what you're looking for. Obtained through: http://www.google.com/search?q=java+launch+system+browser
excellent, this is exactly what I was looking for. And in Java 6 so I dont need to feel so bad for not having learned it ;) I'm still smacking myself for my lack of googling skillz
This. And you'll learn about a truly useful tool in the process.
With all the controversy surrounding Oracle and Java, is it still worth learning?
I was in a similar situation about a year ago. First things first, start using Eclipse. Secondly read "Just Java 2" and go through the tutorials at Java Ranch ([JavaRanch.com](http://javaranch.com)). Once you have a grasp on Java move on to "Head First: Servlets &amp; JSP". Hope this helps.
Avoid it at all costs, turn the other way quick!
Thank you
I see you've already received some good suggestions, but just wanted to encourage you to learn it! It's my favorite programming language :)
wow.. very insightful! Thank you so much
eh, i may have missed my stated point, but this was what i was looking for, at least in terms of general knowledge.
I think we all understand how the site works, is there really a need to link each tag page on reddit?
Amen to that...
Install [Eclipse](http://www.eclipse.org/downloads/) (Classic 3.6.1 should work fine) Then the [Android SDK](http://developer.android.com/sdk/index.html) Follow [these steps](http://developer.android.com/sdk/installing.html) and it should be ready to go in no time. Then knock out some tutorials [here](http://developer.android.com/resources/index.html) to get a feel for things. 
Done all that. Its the audio manipulation I need help with. Sorry should have said that
All products listed in the link except iText don't have any restrictions. iText is good and it is free for personnel and open source products. If it is used in commercial application then purchasing a license is mandatory. The disadvantage or the other side of using open source products is they may abandon any time. Before picking a one, check the history, how stable the product is, Who is sponsoring / backing them? etc. 
Maybe [these guys](http://reddit.com/r/androiddev) can help
Well, iText doesn't have that restriction if you use the earlier version of the library. And it is good and easy to use. If it's used in an application, then you have to buy a license at a price that is so high that they don't specify it on their website, or it has to also be AGPL. A commercial application can be AGPL, so far as I know. My issue is that how do you even abandon an AGPL program? Aren't you legally required to make the source available?
So, what type of audio manipulation are you talking about? Start off with the [android media sample apps](http://developer.android.com/resources/samples/ApiDemos/src/com/example/android/apis/media/index.html) to see if that sets you in the right direction. If not, this page on [java sound resources](http://www.jsresources.org/links.htm) may be dated but helpful.
A tracker is a piece of software that makes sound and allows you to build songs. So I'd be generating all of it. Synths, drums, etc. This is all way above me. I like to go headfirst when I make stuff.
I certainly agree with you. I just downloaded iText binaries and found only the Jar and tutorials. They didn't provided the source. 
Yep, /r/androiddev is where you wanna go.
The [JFugue](http://www.jfugue.org) library might be a good fit for the backend -- it is pretty high level but you'd probably get up and running with sounds that mimic instruments relatively quickly. If you want more low level interaction you can try [Gervill](https://gervill.dev.java.net/nonav/javadoc/index.html). Java has it's own libraries but it requires loading files in a proprietary non-standard format and other hassles.
Do you need real-time mixing? I'm working on something similar (but in C, not Java)
like fasttracker/milkytracker etc etc etc?? making mods on my android? sweeeeet. Should be pretty basic. take sample, blend to pitch. mix across channels... pump it out! have you read firelights old fmoddoc tutorials? etc
Yeah I would. I've never tried to make something like this so I am at a total loss at how to start. Not making it easy on myself since I want to make this for the 'droid which doesnt have low latency audio.
Yeah exactly like milkytracker. And no I havent read those. I'll find them and read up
I'm really not sure how easy that'll be or even how possible it is to keep multiple tracks in sync... I guess it depends on how leaky the abstraction in their sound library is. I've sorta accomplished it in OpenAL but it's bloody difficult.
fmoddoc http://www.textfiles.com/music/fmoddoc.txt and fmoddoc2 http://www.programmersheaven.com/download/6086/download.aspx 
The Java UI tries to be intelligent in its updates, because it operates technically in a single update thread. When you change the label text then change it back, the updates cancel each other out if they are not forced in between. There are a couple of ways to force the repaint, look at the repaint() method in the Java Docs for class java.awt.Component for a link to details on painting. You might find it easier to use a SwingWorker to help. Change the text of the label, then register a SwingWorker to hide it after the given time. The JProgressBar has some explanations about how to do this.
Try label.paintImmediately after setText("test")
Like the article says.... Yes! BASIC is still worth learning, especially if you've never learned a programming language before. 6502 is still worth learning, teaches the fundamental principles of computer processors. :-) edit: corrected.
Are you actually creating a new object for every value, or are you using BigDecimal.valueOf(double)? (Or the equivalent for your subclass.) http://download.oracle.com/javase/6/docs/api/java/math/BigDecimal.html#valueOf(double) The latter will reuse the same immutable object when passed the same double value, meaning that rather than creating millions of objects for representing the value 0.01, you just create one such object. 
Very cool, thanks! I'll play with that, can't believe I never saw it before.
I think I understand what you are asking, maybe you want to try using an ArrayList. ArrayList &lt; String &gt; items = new ArrayList&lt; String &gt; (); to *append* an item to the list: items.add( "red" ); to insert a value at index 0: items.add( 0, "yellow" ); Hope this helps..
You'd be better off using an ArrayList (java.util.ArrayList). Declare them like so: ArrayList&lt;String&gt; a = new ArrayList&lt;String&gt;(); Where 'String' here could be any class (ie, Integer, Double, MySpecialClass, etc). Full documentation is [here](http://download.oracle.com/javase/1.4.2/docs/api/java/util/ArrayList.html), but basically you add an item using: myArrayList.add("My item"); You can get a specific index with: myArrayList.get(5); etc etc. It is all pretty simple.
Hah! Beat you by 35 seconds... but you included a link. Damn! edit: and you specified (java.util.ArrayList). I'm no match!
Actually, whenever I see a resume with attached code using Vector, I throw it out.
I'm not sure why.
&gt; Declare them like so: List&lt;String&gt; a = new ArrayList&lt;String&gt;(); ALWAYS use interface.
Because it's obsolete. It's that simple.
Is it so hard to google "variable length array java" or similar? Seriously, I think this is the most-often asked question about Java, ever. I idle in the ##java @ freenode channel, and this gets asked pretty much *daily*.
I didn't even know that existed, thanks for that.
It's thread safe, that's the main difference between it and ArrayList if I remember correctly. 
This guy is a genius.
You've never used LinkedList? Hmm :) One of general "OOP" principles is "Code to interface", meaning you use the least specific type possible while making sense (so you won't declare ArrayList as Object even thought you could). This will ensure your code/libraries/methods will me more flexible. Say if you code a method to filter an ArrayList or LinkedList (which are both a kind of List), you'd declare your input argument as List and so you can accept either implementation (and even a Vector, which since 1.2 is List as well). There's a lot more theory behind this, but this is a brief introduction. Also [here](http://www.javapractices.com/topic/TopicAction.do;jsessionid=5149DB14201FCA2FDDEACAB4ACB21460?Id=26)'s a short article specificaly about collection framework.
Yes, but that's not the main reason why not to use it. The only point of it existing in 1.2+ versions of Java is backward compatibility. If you want concurrent dynamic array, you can use Collections.\* wrappers or java.util.concurrent.\*List\*, which are immutable (copyonwrite I think). Vector is just plain useless. Long story short, if some class is deprecated, don't use it, because there is always a better replacement.
Explanation.. ?
i did do that before asking and mostly got pointed at using vector, which then someone else on the internet said was bad to use, so i came here to ask. i also turned up lots of poorly written sample code "answering" people's questions. sorry to make you so angry, but from my googling i couldn't tell the best way to go.
Okay. Although, the very first result for "variable length array java" is this: [How to use ArrayList in Java](http://www.java-samples.com/showtutorial.php?tutorialid=234). Basically, in a nutshell, the biggest difference is that Vector is synchronized and ArrayList is not, meaning ArrayList is faster. If you need to share a collection between multiple threads, read up on the [java.util.concurrent](http://download.oracle.com/javase/6/docs/api/java/util/concurrent/package-summary.html) package (for example, the CopyOnWriteArrayList class is useful). [edit] (I see that java.util.concurrent [is already pointed out by Fuco1337](http://www.reddit.com/r/java/comments/ez7hp/use_vector_or_something_else_to_make_an_array_is/c1c3vpf)).
In practice, though, you'll never want to use LinkedList. It's almost always slower than ArrayList.
It probably should be deprecated, but it's not, at least not according to the Java 6 api. I agree there are better approaches than using Vector, though. Still, if you see someone using Vector it might be worthwhile to ask them why they're doing it. Especially if you're dealing with junior programmers, if they've recognized potential concurrency issues it would be worth noting. Teaching someone to recognize potential concurrency issues is much more difficult than teaching someone a better approach for dealing with those issues. 
I meant the 'List' interface rather than interface itself :) I'm a 3rd year CompSci, but I've only used Java a little so I haven't really had much of a look around it's standard library. Nice explanation though, thanks, I hope others find it useful.
Maybe it should be part of the MOTD.
Unless, of course, you want a Linked List. In that case, you take the performance hit.
What do you mean you "think" the Array in java.util.concurrent is CoW? It's called *CopyOnWriteArrayList*. As is said elsewhere, Vector is not deprecated. The real issue though, is that using an old version of the thread-safe array class is a pretty clueless reason to put someones' CV in the bin. Great example of someone who can't distinguish important from unimportant getting involved in the hiring decision. I wonder if he bins a CV for using the old style for loop when the new style could be used. It would be just as stupid.
You're doing those candidates a favour, sparing them from working for a douche such as yourself.
[I don't see any "deprecated" tag.](http://download.oracle.com/javase/6/docs/api/java/util/Vector.html)
Not if you are shifting elements onto a stack or inserting/deleting elements inside the List (and your list is relatively large) 
There are definitely folks (like yourself) who can speak intelligently on the difference between Vector and ArrayList. Who also know that typically individual ops shouldn't be synchronized, but groups of actions should be. Similarly, there are those who get the Collections.synchronizedBlah to get Vector-like behavior out of their ArrayList. I typically have zero problem with those people, and it tends to show in their code. Rather, I find that the majority of resumes I've seen (and, I've probably shuffled through about 120 or so, and personally interviewed a couple of dozen) that use Vectors are subject to one of two stereotypes: 1. They're freshly-graduated students, and their textbook or prof encourages use of Vector (most starting Java profs I've seen push Vector, for one reason or another). If they haven't looked at a whole heck of a lot of other code out there, then use of Vector strikes me as profoundly incurious. This is usually quite distressing, as I read it as shorthand for: "If it wasn't in the book, I don't need to know it". I'd like (but don't require) a pretty good knowledge of Collections, Sets, Hash(Map and Table, and the difference), Arrays, Trees, and Lists. Hell, if they use ternary operators anywhere, I'll be impressed enough to read the whole listing, despite the fact that I can't stand debugging them. 2. They learned how to code Java 10 years ago, and have learned enough to call themselves 'Java Programmer' on a resume. They write straight SQL, refuse to use DB abstraction libs (no Hibernate or anything), no web frameworks, no UI templating, won't use loggers nor loglevels, won't write unit tests, and usually don't get version control (why can't I just email it?). They also don't understand threads. The Java World changed, and improved dramatically, and they stubbornly refuse to go along with any of it. It's not to say all of the ones I've received are #1s or #2s, but enough have been that I read 'Vector' as 'Big Red Flag/Do Not Hire'.
Have you actually written code utilizing a LinkedList?
It isn't technically deprecated (via annotation), same as java.util.Enumeration isn't. If you want to be technical, it is obsolete or legacy. There ;) (I've actually used this in the grandgrandgrandparent post, dunno why I switch to dep.) If I have to add a bit more info on vector, here's a fine quote from SO: &gt; Vector synchronizes on each individual operation. That's almost never what you want to do. &gt; Generally you want to synchronize a whole sequence of operations. Synchronizing individual operations is both less safe (if you iterate over a Vector, for instance, you still need to take out a lock to avoid anyone else changing the collection at the same time) but also slower (why take out a lock repeatedly when once will be enough)? &gt; Of course, it also has the overhead of locking even when you don't need to.
No it wouldn't.
Not often, but there have been a few times in 11 or so years.
Of course - every competent Java programmer knows that _generally_, it is not helpful. But every competent Java programmer also knows that Vector is _not_ useless. Some of us write multithreaded code...
Thanks for the insight.
If you write multithreaded code and use Vector to do it, I have some bad news for you...
I too am going to start learning JAVA, and am looking for resources. Is a book that is 6 1/2 years old still relevant? Here's the [link](http://search.barnesandnoble.com/Just-Java-2/Peter-van-der-Linden/e/9780131482111/?itm=1&amp;USRI=just+java+2) to Barnes and Noble, it says the published date is July 2004.
Exactly my point. :) But yeah, List should definitely be used instead of a concrete implementation.
worth learning? yes. worth deploying? much more difficult question :)
[JavaRanch!](http://www.javaranch.com) (of course, I am terribly biased)
stackoverflow
IRC dude, IRC! #java @ irc.quakenet.org ##java @ irc.freenode.org Forums are often dead and you have to wait a long time before answer. On IRC, you get it withing minutes, often almost instantly. But first of all, before asking on either forum or IRC, GOOGLE for your question. 99.9% java questions have already been answered. Actually, just read [this document](http://catb.org/~esr/faqs/smart-questions.html) about Q&amp;A on the internet, you'll save everyone much much troubles.
That guy in the dark blue shirt sure loves getting deep with his rhetorical questions but interesting discussion overall.
#java freenode I like stackoverflow also.
I go to Stack Overflow a lot after Googling questions. I actually meant that I wanted to answer other people's questions for them and I was wondering if there was a java specific place. I wouldn't have graduated college without googling questions, though.
Why the downboats? I like your site =P
I remember a few guys in my java-class that really liked this one: http://codingbat.com/java
http://download.oracle.com/javase/tutorial/reallybigindex.html
In before Leeroy.
this is a bit premature. they announced that that is a possibility, but that oracle was still going to present an offer this week and they were all going to read it and have the community vote on it. and they dont even know for sure yet that it is going to be jenkins. that was an option a couple of the developers came up with. can we wait until this has actually happened before reporting it like it has?
I still say it should be Mayflower.
Nice. I've used the Robot class before for manual mouse movement, but was unaware that it can produce screenshots as well.
I still think Larry is a good name. Let us lampoon the man who controls Oracle for his hamfistedness.
Wow, and I thought this was clear... I myself never had a doubt about it being pass by value, mainly because in my understanding **Java has pointers**: MyClass a = new MyClass(); // a is now a pointer to a MyClass object and those pointers are passed by value like everything else. You change 'a', you lose the original pointer. What Java does not have is pointer arithmetic. But it does have pointers. At least I see it clearer that way.
Tabs, of course! How can you even begin to suggest spaces is beyond me.
Wat. When you're passing a pointer by value you're still dealing with the object you're... well... pointing to, no? And *that* isn't copied. Isn't it going to be pass by reference then?
I've heard this one several times now - Java is pass-by-value because it passes REFERENCES by VALUE. So, can someone explain to me: if passing a reference isn't pass-by-reference, then what does pass-by-reference mean?
I try to avoid saying "Java has pointers" because it's confusing. They can do some things, like be checked for equality to see if two references point to the exact same object instance, but you can't do arithmetic with them, and crucially, you cannot create a pointer to a pointer (int **i, for example). The generally accepted terminology is reference, if you talk about pointers in Java people might give you funny looks (or worse, a lecture).
 Foo bar = new Foo(); Foo quux = bar; doAnything(bar); assert bar == quux; That assertion cannot fail in Java, even if doAnything looks like this: void doAnything(Foo baz) { baz = new Foo(); } In C, say, you could use pass by reference to change which instance the variable bar is pointed to outside the function scope, from inside the function. You cannot do this in Java.
See [my post here](http://www.reddit.com/r/java/comments/f1fvh/huge_war_over_whether_java_is_passbyvalue_or/c1ckmgu).
Do you know who else preferred tabs? Hitler, that's who.
EDIT2: Wikipedia definition clarifies a few issues &gt;In some cases, the term "call-by-value" is problematic, as the value which is passed is not the value of the variable as understood by the ordinary meaning of value, but an implementation-specific reference to the value. The description "call-by-value where the value is a reference" is common (but should not be understood as being call-by-reference); another term is call-by-sharing. Thus the behaviour of call-by-value Java or Visual Basic and call-by-value C or Pascal are significantly different: in C or Pascal, calling a function with a large structure as an argument will cause the entire structure to be copied, potentially causing serious performance degradation, and mutations to the structure are invisible to the caller. However, in Java or Visual Basic only the reference to the structure is copied, which is fast, and mutations to the structure are visible to the caller. 
 public void test(A a) { a = new A(); } The original A passed in a is unchanged.
yes. I edited my post. I think if you take a C-centric view, what I said above is wrong. I think the problem is the term itself pass-by-reference does not mean the same thing at all in C/C++ than in java. To say everything is pass-by-value in java is correct from a certain point of view, but it does not help distinguish the differences between primitive types and objects.
&gt; which in my book makes it pass by ref still And only in your book, I'm afraid.
If Java was pass-by-reference then when you pass an argument to a method, that method could change what (ie: where in memory) that variable pointed to. It cannot, therefore Java is always pass-by-value. Eg : String str = "Hello"; doSomething(str); System.out.println(str); void doSomething(String str) { str = "World"; } 
:)
Let's just clear the whole thing by saying it is "pass reference by value".
This is probably tricky for some people because this is not a fundamental programming concept and they're likely unfamiliar with the languages that support pass-by-reference.
Python has a similar popular confusion on this issue, replete with the same standard of personal insults (ie: "if you knew any actually computer science my argument would be obviously correct to you!"). I've been shouted down on #python for daring to point out that it's a definitional issue (is passing a non-mutable reference pass-by-reference or not?). 
Not to be picky but you should probably provide the output of running the above code (in this case "Hello").
C, C++ or pascal are not exactly unfamiliar languages :) void swap(int &amp;a, int &amp;b) { int tmp = a; a = b; b = tmp; } this is fairly common code (may be invalid C, my C-fu is not strong anymore) 
Coca-Cola didn't start making Tab until 1963, and Hitler died in 1945.
Well they ARE pointers. They are called references only because of marketing. Sun was promoting Java as a safe language where you *don't have to deal* with pointers, but even the very word *pointer* was too "offensive", so they've changed it to reference. It still is pointer in the exact same sense C or C++ pointer is.
No, it is not. It seems like a pointer, but it is not. Trying to frame a new concept in a old one is easy, but does not help to comprehend deeper implications. It is like a int and a float, you can say "they are numbers" but are diferent animals.
No, they are pointers. What is your argument against it? Because you haven't provided any.
Yes, they're exactly like pointers except they cannot do half the things pointers do, and aren't pointers. They perform the same *function* as pointers in *most* contexts, and yes, they do "point" to objects... but they are not an integer referencing an area in memory, you cannot modify them except to assign them, and you can't have pointer pointers.
I think you're making a lot of bad assumptions about Sun's motivations. After reading all the responses you've gotten, you might have gained a better appreciation for why Sun decided to call them references instead of pointers. ;-) From the Java Language Specification 4.3.1: &gt; The reference values (often just references) are pointers to these objects, and a special null reference, which refers to no object. We're really just quibbling over semantics. You can call object reference a pointer if you want to - a reference *does* 'point' to a specific object. But if you come from a C background then a pointer is a very specific thing and it borderline offensive to suggest that a pointer could be anything besides a C pointer. I don't know what's so special about pointers in this regard, but they really bring out the inner geek rage in people. You never hear anyone arguing about whether Ruby, C, and Java all have integers even though their behavior and implementation are different in all three languages. 
NullPointerException
It seems to me that whether or not they are "integers referencing an area in memory" is an implementation detail, and coincidentally, as far as I know, every single implementation of the JVM implements them as integers referencing an area in memory.
That's what *they* want you to believe...
You're assuming most Java developers have touched C, C++, Pascal, or the like. IME, they have not.
I never understand why people are so willing to argue and debate when Java has a very clear Specification just waiting to be referenced! http://java.sun.com/docs/books/jls/third_edition/html/classes.html#8.4.1 &gt; When the method or constructor is invoked (§15.12), the **values** of the actual argument expressions initialize newly created parameter variables, each of the declared Type, before execution of the body of the method or constructor. *emphasis added* So Java passes *values*. It is clear as day in the spec. 
&gt; every single implementation of the JVM implements them as integers referencing an area in memory No, the GC moves them (the objects in memory) around.
The GC can move them and they can still be implemented as integers. The GC just has to update the address value after the movement has been done.
&gt;When you're passing a pointer by value you're still dealing with the object you're... well... pointing to, no? Isn't it going to be pass by reference then? Object o = null; foo(o); What object? :)
i also prefer stackoverflow.
C#?
C++'s reference operator &amp; provides pass by reference semantics.
Yeah. Many of the arguments blew right by that, implying the Java Spec is wrong, and doesn't agree with computer science.
Well, that's because the source is not part of the binaries. It can be found in a separate download, e.g. for 5.0.5: http://sourceforge.net/projects/itext/files/iText/iText5.0.5/ Also, Maven users get the source packages from the [iText Maven repository](http://maven.itextpdf.com/).
C# supports passing by reference, but not by default as it requires the use of extra keywords: http://msdn.microsoft.com/en-us/library/0f66670z%28v=vs.71%29.aspx
I still end up doing the majority of my quick and dirty manipulation in iText, as I have to interface (frequently) with Adobe Livecycle, which isn't nearly as good of an API as I'd like or expect.
Sure I'll do your homework. Font forget to flush() and close() the BufferedWriter
^ doesn't write unless you close the stream..
In general, recursion as a concept provides us with a means for solving a problem in terms of smaller, simpler problems. Much like multiplication, it isn't strictly "necessarily", but it makes a lot of problems a lot easier to conceptualize and makes the code that solves these problems cleaner. Recursion is particularly effective in search and enumeration tasks. Let's take search as a first example. Suppose I want to find the shortest path from node A to node B in a directed graph. This is used all the time in navigation systems, for example. Without recursion, this problem is a giant pain to specify. With recursion, however, it becomes quite simple. I'm going to give you a naive example algorithm (naive in that it doesn't work on graphs with self-loops) but it will give you a flavor of why recursion is useful. Take any directed graph G. If A and B are directly connected by an edge (A,B), then the shortest path between them is trivial, a path of length 1 consisting of (A,B). Similarly if A = B, then the shortest path is of length 0, since you don't need to go anywhere to get from A to itself. Suppose A has a set of neighbor nodes N. We can recursively define the shortest path problem as follows (in pseudocode): ShortestPath(A,B) = min(ShortestPath(n, B) for n in N) + (A,B) where min() is defined as returning the path with the smallest length. In English, to find the length of the shortest path from A to B, I first calculate the length of the shortest path from each of A's neighbors to B, take the smallest path thus calculated, and add the edge (A,B) to that shortest path. Each so-called recursive call to ShortestPath creates smaller sub-problems for the program to solve. The simplest sub-problems, usually called base cases, provide the recursion with a way to bottom out. The "A and B are trivially connected by the path [(A,B)]" paragraph above provides such a base case. I would strongly recommend looking at Structure and Interpretation of Computer Programs by Abelson and Sussman, which is available for free here: http://mitpress.mit.edu/sicp/full-text/book/book.html It is basically a whole book on the benefits and applications of different sorts of recursion. 
technically, nothing NEEDS recursion. But a lot of times you can take an otherwise complex algorithm and make it very simple if you know how recursion works and can use it and understand it.
Wow! Thank you so much for the explanation. I still don't fully understand it, but this does give me a much better idea of why I would want to use it. I do know it has a lot to do with memory allocation and can be a lot more efficient in some cases. I'll be going through the link you provided to further my knowledge of Recursion. It seems to really be quite powerful. Thanks again!
So, for a beginner... If I did something one way, but Recursion would be the better way - would I have any serious issues or would my code still run properly, just less efficient? Is there any huge detrimental effects besides performance that I would notice is what I'm asking I guess, since performance isn't a big issue for me right now considering I just need to learn the basics first.
I think the biggest issue you'd have would be that you might have to make some long convoluted code that is hard to follow... also if someone else makes a recursive function you might have trouble using it or modifying it. Performance wise, there might not be a big difference between using a loop and recursion, but it really depends on what youre doing. Since you've just started into programming in java I would focus on other aspects of programming, recursion is a little bit of a more advanced topic. I wouldn't feel pressure to completely grasp it right now. Eventually you'll try and make a loop and realise it's very confusing and impossible to keep track of... then you'll look up recursion and it'll all make sense.
Imagine trying to traverse a tree structure. With recursion, you simply run the one method on the root of the tree, and inside that method it applies itself to the child nodes (which are also roots of their own subtrees). If you wanted to traverse a tree using iteration, you would have to do a loop that depended on some difficult conditions that required you to keep hold of a list of pointers to nodes in the tree you'd already visited.
Example: If you have a binary tree data structure, you will generally write code to traverse it or search in it. You could also write the code in non-recursive style, but then you have to make data structures to keep track of where you are in the tree, what you have done already, what is next to do etc. It's easier to allow the Java runtime to keep track of all that automatically in the call stack.
Do you have an answer to the second one? 
Recursion is just another loop, only more convenient for certain problems. Everything you can do with recursion, you can do with a simple for loop; you'll probably need some sort of list/map to store results. Which is exactly what JVM does when the method calls itself - puts another entry in stack, runs through the method, returns the result to calling method and removes the entry from the stack (stack is just another list structure). Real-world examples? Say you need to populate a tree... like a file system. For each File, you add it to a tree, check if it's a directory and if it's not, return. If it is, iterate through its children. For each child, call yourself and do the same.
FYI, /r/programming beat you to the punch: http://www.reddit.com/r/programming/comments/cixik/dad_why_do_we_always_use_net_im_not_a_big_fan_of/
Sorry, an oldie but a goodie I guess! :)
Head First Java is a must read. It may not look it, but it's one of the best books I've ever read on the subject. As geekbot stated, Effective Java is a good read, as it teaches you best practices. 
I'm about half way through Head First Java now, it's a very good book for beginners.
Thinking in Java, by Bruce Eckel. It's about as much a standard as a tutorial. http://www.mindview.net/Books/TIJ4
My preference is storing them in the database and caching them on the filesystem.
When I searched B&amp;N, I got several books that start with HEAD FIRST JAVA, can you be more specific? I assume it's the first one (Head First Java 2nd edition) but before I look at picking it up, I wanted to be sure :) [Link to B&amp;N search](http://productsearch.barnesandnoble.com/search/results.aspx?WRD=head+first+java&amp;page=index&amp;prod=univ&amp;choice=allproducts&amp;query=head+first+java&amp;flag=False&amp;ugrp=0)
That's the one.
it really depends on what you are trying to accomplish. i think one of the real benefits of java is that it can be very easy to distribute the same binary to multiple platform and have it run the same way. on the other hand if you are writing for a specific platform and don't have a concern for interoperability then maybe it isn't so useful. i don't think there is a hard and fast rule for this one, like many parts of software development the details will depend on the problems you are solving.
thank you
Welcome to the internets. I hope you understand this is pretty old.
been doing some revision/learning for my java exam in compsci coming up, this site has been really helpful, Thank you!
Welcome to reddit. I hope you understand most shit here are reposts . . .
Thanks for the tip, this seems to have made demonstrable improvements.
http://www.blackbeltfactory.com : free online courses and coaching
The problem I have with gridlayout is that I can't seem to make an element span multiple grid elements. If that wasn't clear enough, think of the rowspan and colspan tags in HTML tables.... something like that but for gridlayout edit: actually after rereading my original post, the problem i was having was in being able to set the width for a column in gridlayout. I was trying to create a table and set the width of each column, so for instance have column 1 be 200 px and have column 2 be 300 px. Gridlayout has no functionality that I know of to do this. It should also be noted that I'm using this in a JScrollPane, and so I'm putting a header on each column, and so my next approach was to use a gridbaglayout with weights, but (and this is the part that really got me) the columns didn't line up perfectly with the headers, even though they had the same column weights. 
Block is fantastic, I have Effective Java and I've worked through Java Puzzlers, both opened my eyes to new depth in the language.
I'm an almost Pilot that gave it up and became a CS Geeks instead.
Sorry about the crosspost, but it looks like the people over at /r/learnprogramming aren't too familiar with Swing.
Ok ideally what I want is something like this import java.awt.GridLayout; import javax.swing.JFrame; import javax.swing.JLabel; import javax.swing.JPanel; import javax.swing.JScrollPane; public class Test extends JFrame { public static void main(String[] args){ new Test(); } public Test(){ JPanel titlePanel = new JPanel(); titlePanel.setLayout(new GridLayout(1, 4)); titlePanel.add(new JLabel("TITLE 1", JLabel.CENTER)); titlePanel.add(new JLabel("TITLE 2", JLabel.CENTER)); titlePanel.add(new JLabel("TITLE 3", JLabel.CENTER)); titlePanel.add(new JLabel("TITLE 4", JLabel.CENTER)); JPanel contentPanel = new JPanel(); GridLayout contentLayout = new GridLayout(1, 4); contentPanel.setLayout(contentLayout); for(int i=0;i&lt;10;i++){ for(int j=0;j&lt;4;j++){ contentPanel.add(new JLabel("ELEMENT " + i + " " + j)); } contentLayout.setRows(contentLayout.getRows()+1);//HERE THE ABILITY TO DYNAMICALLY ADD ROWS IS IMPORTANT } JScrollPane pane = new JScrollPane(contentPanel); pane.setColumnHeaderView(titlePanel); add(pane); setVisible(true); setDefaultCloseOperation(EXIT_ON_CLOSE); } } except I would like to be able to set the width of the columns.
&gt;Deferred to JDK 8 or later: JSR TBD: Project Lambda Lambda expressions (informally, "closures") and defender methods for the Java programming language &amp;#3232;\_&amp;#3232; 
i'm pretty sure iphone apps are not written in java. I understand they're written in Cocoa, which is a mac only language.
Found the above code snippet buried deep in a class that itself wasn't even needed. Joy.
Glad to be of assistance!
Are you using an IDE? Does any of it execute before blowing up? Did you try printing a stacktrace to get the line number it's blowing up on?
I figured this out just before your comment, I am using Netbeans and I had deleted the "package" part which I now realize is a bit more important than I first thought, thank you.
Got it - it's basically just telling the compiler what folder to put your compiled class in. I'm guessing when you went to run, the JVM couldn't find a folder that had your executable code in it. That's not specific to netbeans
Nice job. Maybe make it visually stimulating by adding some images. 
Thanks for this explanation, it makes sense to me now!
I checked out your repository to take a look. I didn't look much at the program itself yet, but I have a couple project management comments. You checked in your built jar file, which isn't generally how you want to use a source repository. You only want to check in your original hand-crafted files that are used to generate everything else. Your build file (dw.xml) is incomplete and has absolute paths in it. 
I lost all hope we'll see \\-&gt; in java at all. Not only is is quite difficult to implement over the current java type system, it's also the fact sun/oracle seems too unwilling to move java the way C# has evolved (and still is rapidly evolving).
I'll second this. Also, add some padding around the edges so stuff isn't so flush with the edges.
i know, and it makes it harder and harder to justify being a "java expert" when you know there's a pile of c# people out there who are learning and getting good with some 4GL concepts. it's like nobody wants java to succeed long-term. 
In a world where "Feature" equals "deferred to later versions" this doesn't seem like a great achievement. But congratulations to Oracle for taking its time to do things right! A decent file system API is a really good thing and we only waited 16 years for that! Some of their highly experimental work is really impressive. They finally generified ListModel only seven years after adding Generics to Java. I only wonder if the world is ready for that?
What part of the document are you having problems with. It seems pretty straightforward to me. 
I have no idea how to use it to run Minecraft. I've extracted the archive, and that's pretty much how far I've gotten. I don't understand anything about "JAVA_HOME and PATH environment variables".
What platform are you on? Windows? Mac? Linux? I do not know the answer to your question about minecraft, but I can help you get harmony set up.
I'm on Windows 7 x64. Thanks a lot for your help.
i put the jar file in there so that visitors can try it out straight away will fix the build file.
will do will do
If you want to do 3D work in Java. You might want to take a look at the JMonkeyEngine. http://www.jmonkeyengine.com/ I'm not sure Java3D has been updated in a while and it's limited in scope. 
If your class or whatever is in the same project, then it'll automatically be added to your project's classpath. If it's from a jar file or another project, you'll have to add it to the class path (Eclipse calls it a build path for whatever reason)... right click on the project -&gt; build path -&gt; configure build path. I'm not aware of any good tutorials, sorry, but feel free to send me a direct message any time for advice or help.
I actually just figured out the first part of your post on my own. The second part was very helpful. I'm about to play around with it. Thank you very much.
By storing non application logic in something like an xml file, you can make the app more extensible and allow more content to be added by other people. Plus you will avoid code like this: DRUG_NAMES = new String[]{ "Acid","Cocaine","Hashish","Heroin","Ludes","MDA", "Opium","PCP","Peyote","Shrooms","Speed","Weed" }; drugs= new Drug[DRUG_NAMES.length]; drugs[0] = new Drug(DRUG_NAMES[0], 1000f, 4400f, 1f, 0f);//Acid drugs[1] = new Drug(DRUG_NAMES[1], 15000f, 29000f, 0f, 1f);//cocaine drugs[2] = new Drug(DRUG_NAMES[2], 480f, 1280f, 1f, 0f);//hashish drugs[3] = new Drug(DRUG_NAMES[3], 5500f, 13000f, 0f, 1f);//heroin ...etc Also, non static instance variables should pretty much always be private. Pedantic, but I'm not a big fan of using exceptions for control flow. Finally, synchronize statements are slow. You dont need them in the RandomHelper. Random is threadsafe as of 1.5. Just my thoughts. Keep writing!
Are you sure Random is threadsafe? It doesn't say it is in the api documentation, which I can only assume means it is not guaranteed. Math.random()'s documentation says it is synchronized, which would lead me to believe there is no guarantee of threadsafety. FWIW Uncontested synchronize blocks are actually very fast. A better way to ensure threadsafety and speed would be to use a ThreadLocal instance of Random. I will say that at least your RandomHelper is threadsafe. I just looked at the RandomHelper class, and there's no need to re-initialize the seed after instantiation. Also, no need for a static block, may as well just assign the variable to the instantiated Random instance (or ThreadLocal&lt;Random&gt; if you please). Also, it's poor form to leave things like RandomHelper's main class in code -- really you should write unit tests instead of using main methods all over the place. Also, don't be discouraged by anything I say (or what other people might say). You wrote a working program! Way to go!
Are they now trying to kill NetBeans as well? Bullying projects into changing license for no valid reason (ur license is too old for us; lolz; is not a valid reason) whatsoever really won't fly and I'd really hate having to switch to Eclipse because Oracle ruins every community driven project they get their hands on.
Oracle is **really** good at spreading FUD around their own open source products! Not like certain other companies who prefers to spread uncertainty around others products. 
** summarising** * use xml for lists of items and properties * keep non static instance variables as private. * exceptions and control flow are different * no need to set Random's seed twice * Random is threadsafe after 1.5 * write unit tests, don't leave main methods littered around * build.xml should not have hardcoded paths (i knew that! was just being lazy) * game could use more images * some padding so that the widgets don't stick to the frame 
I get all confused with xml. what parser to use ? any thoughts on property file containing, say , one drug per line , comma separated properties ?
 the static block in RandomHelper is because I didn't know who was going to instantiate the class. So, no constructor... 
I did not forget you, unfortunately I do not have windows 7 at home, but I do at work. I have a meeting from 10:00 to 11:00 am PST so I will not be able to post some steps for you until after then, sorry for the delay.
This actually sounds like a reasonable request. It doesn't look like the main gripe is that the license is too old (officially discontinued in 2009) but that there is a clause in the license that is too restrictive, which was corrected with the EPL, the official and sanctioned successor to the defunct CPL that JUnit is licensed under. 
Random class uses an AtomicLong as its seed mechanism. Also, http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6362070 seems to have been fixed for pre 1.5 back in 2005. Well, uncontested synchronized blocks are no slower in a single threaded environment but they are definitely slow if hes calling the methods from multiple threads that may conflict, which I think is safe to assume. Same sentiment to OP though as darkclark. Dont get discouraged by any constructive feedback!
You can use any number of xml parser libraries out there. They all have essentially the same features. Try xerces. You wouldn't want to use a properties file in that manner because its not normalized.
this is stupid FUD. change the license. CPL is archaic, EPL is sane. Everyone is just getting their panties in a bunch because the word Oracle is in what would normally be a reasonable request.
That's okay. Take your time. Edit: my friend helped me set it up, but thanks for offering your help!
Try Jetbrains IDEA. Seriously, I'm giving this advice so much that they should start paying me, lol. Really, it's better than both Eclipse and Netbeans - I've tried both and I felt reborn with IDEA.
You don't need a constructor. What I suggest would be static Random rand = new Random(System.currentTimeMillis()); setSeed is not necessary, since you provide the seed in the Random constructor.
a lot of us who use netbeans use it for more than just the fact it's a java IDE, we use it as an IDE for many other programming languages as well.
a lot of us who use netbeans use it for more than just the fact it's a java IDE, we use it as an IDE for many other programming languages as well.
a lot of us who use netbeans use it for more than just the fact it's a java IDE, we use it as an IDE for many other programming languages as well.
And that is possible with IntelliJ too. IntelliJs Groovy/Grails support was the best in any IDE for a long time. And maybe it still is. What languages are supported better by Netbeans than by IntelliJ? 
OOP = Noun Oriented Programming
Only when taken to its extreme.
That was a lot of effort (and forced writing/examples) to make the minor point that Java does not provide first-class functions as a language feature. Here's a shorter story that sums up Steve's critique: *Guy*: "Look, at that one-armed pitcher. Man can he throw a fastball." *Steve responds*: "But he's throwing with the wrong arm!"
No, I'd say that is pretty accurate as a general statement. You model the "things (with state)" as classes and the stuff that things can do (actions) as methods in that class. OOP is a highly-successful method of programming but has drawbacks. Some folks forget that pure functional programing also has drawbacks. The blogger is ranting at Java" for being an OOP language instead of a functional language.
Too European-language centric, and overestimates the applicability of the Sapir-Whorf thesis.
Not sure what you are asking for because this program does what you say it does. My guess is that your teacher wants you to just be able to compile and run this file. Start here: http://www.oracle.com/technetwork/java/compile-136656.html If you really want to do yourself a favor, download Ubuntu and read Write Great Code 1 and 2 (you can get them cheap from Amazon), understand what you are actually doing and get to really hacking. 
I kinda found something that might work... but it is a huge pain in the ass thus far... this is a screen shot of their demo jar...which looks like it will work, but is a huge pain. http://i.imgur.com/LiOZv.png
&gt; Oracle has indicated it wants to continue to host Hudson [post] but the situation is fluid. Ha.
&gt;Strategic product (gridengine) at Oracle, but Oracle stopped participation in open source community I'm confused as to what this means.. So the community is working on it without oracle support, but it's still an oracle product? Why wouldn't they just fork away from oracle and let oracles product die? 
Does it have to be GUI based .. there are lots of CRUD style generators for web apps.
Unfortunately PPC is not supported anymore. Landon Fullers initial port of java6 for macosx supported PPC.
I thought the whole point of Java is that it is Java :D, i.e. that entire language and standard library is there. Until that is true, we can't really call it that. This is a good milestone (but running Eclipse on BSD port and even Swing GUI on X11 was possible a lot earlier). It remains to be seen how long it will take before there is full Java 1.7 JDK for OS X. My guess is it will take quite a while (possibly a few years after Oracle makes official support for 1.7 on all other supported platforms), just like before when Apple was lagging in its support for years.
This sounds like the opposite, and that Java code was actually found in Android.
You mean like Eclipse or IntelliJ?
It was found in an old version of the Android SDK; as part of the unit-tests. The found files were also available under an apache liscence from Sun. They are not part of any android phone though. Just a unit test, and a wireless driver for very specific hardware that isn't used in combination with android.
Being part of the unit tests doesn't make it stop being copyright infringement. And being available in a publicly accessible source respository is no less shipping than putting it in a phone. Particularly since I would guess that Sun's main issues is with developer issues. I don't agree with this lawsuit, but I don't think that this evidence indicates that they did not infringe copyright.
Oh sure! But it means Oracle can sue Google, but not say, HTC. Which is quite an imporant distinction. Android itself, is not in danger. But it's a hard case to make. The market value of that unit-test, assuming a judge is very nice to Oracle, is somethings measured in hundreds of dollars, not thousands. (let alone, millions). Formally speaking, the contents of the file is available under a licence that allows distribution. However, you do need to have the proper header (copyright notice at the top). Instead they have a copyright notice on top, that proves that they got that file by decompilation. That doesn't make the copyright case very strong. But it does make the patent case strong. The fact that somebody decompiled binaries from Sun; that could convince a judge that maybe Google really is 'stealing' technology. It's not so much the useless unit test, that serves no purpose on the current android code-base, as the pattern that the activity of 'decompilation' suggests. I mean: it's kind of hard to claim patents are trivial and should not apply, when you are in the habit of decompiling your competitors code to take a look under the hood. To me: that is the real kicker here. But copyright infringement on such a small file, that isn't actively used as any part of the software stack, whose content is available for free? If a judge awarded a fine higher than one thousands dollars I would be very very suprised. It's a copyright violation, because the liscence clearly states that the header should be in tact. But it's not the type of violation that will award Oracle any substantial amount of money. Google did immediately pull the file, as soon as they were aware of the violation. (which does not prove intent on copyright violation, and means they only have to pay financial damages; but Oracle never sold that file to anyone; they released it for free) It still does help their case, in the 'establishing-a-pattern' argument. It becomes easier for Oracle to claim that Google stole their intellectually property that is of actual market value, and that result of large research investements. Since, why else, would a competitor decompile your stuff? But for the actual legal case that will actually make Oracle money, they needed much bigger guns, than this thing. PS. Android was initially developed by a company, that was later bought by Google. I highly doubt decompilation is something Google engineers would do. 
The easiest way to do this is to use the String.format() command. Look up string formatting (I believe that the API entry for String.format() links to a good resource on string formatting), but for your problem here, the code you're looking for is this: System.out.println(String.format("Balance (end of second year) %.2f", secondAccum)); etc. The first argument to String.format() is a "format string" which contains placeholders to fill in with the other arguments. In the example above, I use the "%.2f" placeholder. "%f" means "format that value as a floating point number", which works for doubles as well, and the ".2" between the "%" and the "f" means "only allow two digits after the decimal point". It will round correctly, too (instead of just truncating). Edit: I'm don't mind questions being asked in /r/java, but you may find better or more prompt answers by asking on [StackOverflow](http://stackoverflow.com).
Look into the DecimalFormat class[1]. I'm going to presume that you know that using doubles is a terrible idea for storing currency. I won't lecture you on that, but feel free to raise the question in class. At best, you'll get a decent in-class discussion; at worst, your teacher will insist doubles are fine and then you'll realize that you possibly have an unqualified teacher. [ Edit: curses, spent too much time formulating and re-formulating this post. ] 1. http://download.oracle.com/javase/6/docs/api/java/text/DecimalFormat.html
This worked perfectly and thank you very much. 
We have just started learning how to code(Our last lab was literally Just to output "Welcome"). And yes I learned from google searches that doubles is terrible and considered a sin by some, but it is all I know how to use at the moment. Side note: Teacher is hard to understand and she is capable but scolds for certain stuff(Variable naming techniques) 
It works for simplicity of the assignment - leveraging existing or building new currency objects (and understanding all the principles behind them) would have been a bit overwhelming for a follow-up to a "Hello, world" assignment. Just bear in mind that there's a flawed principle at play here that shouldn't be taken into production. :)
I did google it prior to posting. The concepts I found were above my skill level. What haldean did, helped out wonderfully. I will learn more about formatting during my next class period. What he did was help me learn some formatting before the formal class. TLDR: I am learning, he helped. 
&gt;Apache Hadoop is currently the premier tool used for analyzing distributed data, and like most **Java™ 2.0** technologies, it's built to scale. Um, what the *hell* is "Java 2.0"?
&gt;I am using a double (teacher requires it). 1. Your teacher is incompetent. Replace the teacher, not the data type. 2. **Never** use binary floating point numbers (`float` and `double`, notably) for currency values. 3. Instead of binary floating point, use integers (e.g. "1000 cents" instead of "10.00 dollars") or decimal floating point (`BigDecimal` in Java).
Java 2.0: Came out in 1998. The article even mentions generics so it must mean 5.0 or higher (or 1.5 and higher, depending how you count).
Back in 2003 IIRC, the name of the platform was Java **2** (1.4), then, they named the following version java 5. So basically, I don't know what is java 2 today. 
The name "Java 2" was introduced for version 1.2, forever ago. At no point was there a ".0" attached, and the name "Java 2" was dropped as of Java SE 6. (Sun's marketroids apparently finally got it through their thick heads that only other marketroids were referring to "Java 2" with any seriousness.) This must be something completely different, which is why I ask.
(For the sake of this rant, I'm going to assume poor\_college\_kid is a guy, because I can't be bothered with gender-neutral pronouns) &gt; The way you answered is least productive to his learning. I expect you think the "productive" thing for me to do would be to give him the link to the [Formatter API](http://download.oracle.com/javase/1.5.0/docs/api/java/util/Formatter.html) and let him figure it out on his own. But consider what he would probably do: he goes to Formatter, is overwhelmed by the number of tokens, flags, etc, and decides it's too confusing, so he goes to office hours to be told that what he's looking for is "%.2f". I saved him all sorts of time, time which would be spent feeling mildly helpless and not learning anything. &gt; The point of paying for an education is to learn. Through interdependent research or collaboration. He did just learn about String.format() and he got a very quick introduction to printing floats, which may be the only thing he ever has to use String.format() for again. Plus, he _is doing independent research_ by going out and asking his peers for assistance (collaboration, as you put it). I explained my answer, and I gave him pointers towards other resources he could use. I fail to see how I could have been more productive.
Why link to an article that was written in 1999?
eh, semi-useful shortcuts for things I don't do need to navigate to very often. They're no Ctrl+Shift+T, Ctrl+Click, or Ctrl+1 though.
In practice you shouldn't use something as salt the user might change - like his email address. And if your mail address was just menat as a constant String, it would be better to use something which is different on each user, so that you can't see if two users share the same password. Something like registration date or a never changing user id.
1. Use bCrypt goddamn it. 2. It is perfectly fine to send a temporary (one use only) password to your users' email addresses on account creation and password reset.
On schema: The email addresses and passwords don't belong in the main "user" table. There is a one-to-many relationship for both. Use somthing similar to this (PostgreSQL): CREATE TABLE "user" ( "id" BIGSERIAL NOT NULL, CONSTRAINT "pkey_user" PRIMARY KEY("id") ); CREATE TABLE "user_email_address" ( "email_address" TEXT NOT NULL, "user_id" BIGINT NOT NULL REFERENCES "user"("id"), CONSTRAINT "pkey_user_email_address" PRIMARY KEY("email_address") ); CREATE TABLE "user_password" ( "password_hash" TEXT NOT NULL, "user_id" BIGINT NOT NULL REFERENCES "user"("id"), "created_timestamp" TIMESTAMP WITH TIMEZONE NOT NULL, CONSTAINT "pkey_user_password" PRIMARY KEY("password_hash", "user_id") ); The above is just for minimal demonstration. Other attributes would be added to each table where appropriate. Point is that you should store a password history in order to ensure uniqueness when users change their passwords, and you should allow users to have multiple email addresses. For passwords, the current password is simply the most recent, and I would purge obsoleted password records older than a certain date (e.g. after 6 months).
Not allowing me to change my password back to a previously used password is really annoying.
I thought these ones complement them pretty nicely.
Not as annoying as getting your account hacked. Anyways, this all depends on the type of service. Also, if you purge the password history of passwords older than six months, you'll be able to reuse those passwords.
Call it deprecated or whatever you like. These two got me through majority of the learning process. http://java.sun.com/products/jsp/syntax/2.0/syntaxref20.html http://static.springsource.org/spring/docs/2.0.x/reference/mvc.html
I shall: deprecated! http://static.springsource.org/spring/docs/3.0.x/spring-framework-reference/html/ Also, although it's Spring 2.5 (and adds MVC on top of Java EE), I find this to be a good introduction to web programming in Java: http://static.springsource.org/docs/Spring-MVC-step-by-step/part1.html
I guess most of those are either already a part of my perspective or they pop themselves up when needed. i.e. for type hierarchy I can open it with F4 if I'm in the class I that I want to see a type hierarchy of, otherwise Ctrl+Shift+T to class then F4. For search, Ctrl+H, search then it brings up the search pane, etc. 
JSP is a little tiny thing. It's just a specification for embedding java in markup. There's really very little to know. It all gets converted to plain old java code at some level (usually! There are probably exceptions.) If you know Java, it's very easy to pick up from just a reference. If don't know Java, I'd say that's the place to start.
JSP hasn't changed much. What's changed is Java web presentation technology, JWPT for short (I made that acronym up just now). JSP has basically gone out of fashion. It's gone through several phases (and by phases, I guess I mean branches, because ALL of these are still used) JSF, Struts 1&amp;2, Spring, "web 2.0" fun with JQuery and other Ajaxy technologies (including Struts 2, etc). Just curious, why are you learning JSP? Not that you shouldn't. . . In fact, you should (just to know it, not to regularly use it).
Well I guess I have to resort to Google to figure out how to code all this. And I have 2 hours... whoopie...
jsp shouldn't be used as the only piece in your stack. if you do your whole site in jsp, you will end up with something even worse than perl or php, and the guy that inherits your code will hate you. jsp can be a good thing to learn because it is small, and doesn't take much effort to learn. It can help contribute to an understanding of servlets and the servlet lifecycle. Its also used in alot of older projects, so if you ever end up maintaining someone else's code, chances are there will be some jsp in there. However if you are new to jee and just want to get a project off the ground, i would recommend you take a look at the apache click framework. its small, clean, stateless, powerful, and has good docs. 
You could always just read the final spec that was released in 2006 for JSP 2.1. It might not be the most exciting read, but it is close to the heart of the technology, and free. There will probably be many other practical things to learn, but this will give you a solid footing.
To add to the other comments, since the quantity of numbers entered is unknown, use an ArrayList to store them, if you weren't going to already.
Maybe, Larry and Steve being friends might get Apple something.
We're not allowed to use Arrays in this assignment. I figured it out though. Thanks anyway.
Yes, I did the same thing and actually found those same sites. I got it all figured out. It's actually very simple. I took C++ last semester. Save for some differences in syntax, they're very similar languages (from what I can tell). Thanks for the help.
geez. who said I was only using jsp? Or that I was building a whole website in it? I just started a job where they use it and they told me to pick out a book so we could have it in the office. But thanks for your snide comment :)
awesome. thanks!
lol. Thanks :)
cool. I guess online documentation will suffice then.
Interesting. I'm a front end developer and I just started a job where they use it, so deprecated or not I need to learn it.
LOL read the spec :) I'll check it out.
your question makes you sound like you are new to jee, so i adjusted my comment appropriately. maybe give a little more background next time? or don't ask for vague help then complain the answer doesn't suit your needs 100%.
A long time ago, when I was learning JSP, [this](http://www.amazon.com/dp/0789724413) was the book I used to teach myself the basics. I think it's a decent book, and though it's a bit old it still has most of what you'll need.
I really wouldnt try to learn JSP. Its pretty much as deprecated as you can get. Might as well just use raw servlets. Check out a more limiting framework like Freemarker: http://freemarker.sourceforge.net/. Or if you want to learn something cool check out one of the many java web frameworks like tapestry or wicket.
&gt; Oracle is taking such lengths to control Java's future that companies need to start looking at alternatives such as .NET That's like being someones bitch in prison, and attempting to remedy the situation by being someone elses bitch instead. 
Freemarker sucks badly at times. (strange error handling behaviour, quirky syntax, what I call "hysterical null handling"). There's nothing wrong with JSP if you use the 2.0 (out since forever now) and avoid using it like bad PHP (unholy mixture of everything in one document). What you need is some MVC framework that makes writing controllers less of a pain than it is with servlets (same for Freemarker). Spring MVC is pretty nice, especially 3.0+. Personally never used Tapestry, but it seems to be okay. Everyone and their brother are using JSF these days, of course. If you can live with the bloat and can manage to get along with the components you have, it's actually not that bad -- can't say I'm really a fan though.
You should really take a look at MVC frameworks ( Spring MVC 3.0 or others). Make sure you learn about the "new" tag files in JSP 2.0. They are quite useful and also enable [a decent code structure](http://fforw.de/post/creating-jsp-layouts-with-page-tags/). 
The last version of JSP with major changes was JSP 2.0 which came out in [November 2003](http://jcp.org/en/jsr/detail?id=152).
Reading the specs is actually not a bad idea once you know JSP a little. There's a lot buried in the specs that you won't find many code examples of on the web. (e.g. [Tag files and their avanced uses, already linked in another comment](http://fforw.de/post/creating-jsp-layouts-with-page-tags/).
http://imgur.com/DCJvU something like this
Android?
Theres a bit of a learning curve, but otherwise I never have used a tutorial for the past 4 years I've used it. Are you having a problem getting eclipse started or otherwise? I would submit a new post for your linux issues as well, but could you give the details such as what distro of linux, and what problems your having?
&gt; Oracle is taking such lengths to control Java's future well somebody had to! before the oracle merger all we saw were posts asking if java was dead. java was completely and utterly stagnant before this. now we have decisions and a release schedule. oracle has an opportunity here and we have yet to see if theyll take it. unlike the bandwagon, i refuse to believe that just bc they are asserting control, it means they hate open source and every open source project is finished
This is very funny. Ivy has problems, that's an understatement if I've ever read one.
Interesting, thanks! Some time ago I was trying to find a good critique of Ant, but they're hard to come by. Searching for it (with terms like "ant sucks") mostly brings up complaints by people who really don't know what they're doing. 
Not sure I'd have put it like that, but you are right. Microsoft has always controlled .NET at least as much as Oracle is controlling Java. &gt; But Oracle has failed to address Java's inherent complexity, which remains its biggest problem in head-to-head competitions with Microsoft's.NET platform. What inherent complexity? Java is no-more inherently complex than .NET. Sure, some Java tools insist on ridiculously complex XML-based configuration setups, but there are also Java tools that have a very shallow learning curve (eg. the Play Framework). Whoever wrote this article is talking out of their ass.
Not to be a party-pooper or whatnot, but JSP is not really a current technology. Or, perhaps I should say it's not a current technology trend (unless you cound downward trending). You'd prolly be better advised to learn something newer. JSP suffers from the same maladies as MS ASP (because it works on exactly the same principle) - it is just far too easy to produce a really unmanageable application. Never mind that If you are gonna stick with Java, I can't say as I can recommend an alternative. Not 'cause there's anything wrong with Java, but because I just don't know the field well enough. I switched from ASP to Java, to JSP. And then I switched to .NET and never looked back. 
Well, there are certainly improvements that could made to Java-the-language, starting with reified generics. Further, the amount of effort required to get a running Java-based CRUD web app using common tools and frameworks is simply ridiculous. Also, the author is simply reporting what a Forrester report is saying. And it even addresses your point about there being Java tools out there that have a lower barrier to entry, such as GWT, Grails, and Spring MVC.
Yep it's actually a good thing despite the gloom and doom. Getting sick of the apples vs. oranges comparisons too.. 
Head First Java. Can be found in ebook fashion free on the internet. It's an older edition, but still, the core stuff is always the same. 
&gt; They are called references only because of marketing. And there you have it. Right from your own mouth. They are called references.
Yeah. I agree. ;-) Oh... and they are References, not pointers. And since we're making shit up, I really don't like the lack of lamda expressions in the current java. Let's just say they are in there. Anybody else got something they've wanted for a long time? Me 'n cs80 are on a roll over here. It's a free for all today! And cs80: yes, "I saw what you did there..." ;-) 
JavaRanch has a reuptation of being a complete noob site. But hey, I got a lot of help there when I first started working with java.
&gt; Well, there are certainly improvements that could made to Java-the-language, starting with reified generics. I never claimed Java was perfect, it certainly isn't. &gt; Further, the amount of effort required to get a running Java-based CRUD web app using common tools and frameworks is simply ridiculous. That is true of many but not all frameworks. You should check out [Play Framework](http://www.playframework.org/). &gt; Also, the author is simply reporting what a Forrester report is saying. Its ambiguous how much of this is the author's opinion, and how much is simply describing what's in the report. &gt; And it even addresses your point about there being Java tools out there that have a lower barrier to entry, such as GWT, Grails, and Spring MVC. So if the problem is with *some* of the tools, not the entire language, then why is the claim made in the title of the article referring to all of Java?
&gt; That points to a significant shift that will drive young developers away from the Java platform. In the short term, the impact will not be significant. But in the long term, Forrester states that "application development will shift to more-productive 'metadata programming' environments and/or Java frameworks (e.g., Google Web Toolkit, JBoss Hibernate, Ruby on Rails or SpringSource Grails, and SpringSource Spring MVC or Spring Roo)." Confusing sentence for me. Isn't working with Spring, Hibernate, Grails, Roo, etc still entirely using the Java Platform? Or is the author making a point about moving away from JEE standards?
&gt; So if the problem is with some of the tools, not the entire language, then why is the claim made in the title of the article referring to all of Java? *shrug* Because there *are* problems with Java-the-platform. It's not just the tools built on Java, but with the language (lack of functions as first class objects, reified generics) to the libraries (the continued existence of things like AWT, classpath requirements), to the JCP. These are simply areas which will hopefully be improved upon, but I don't really disagree with gist of what the article says, namely that more innovations will occur in the future using non-Java techs than with them. Now, Play looks interesting, and it (or another lightweight framework) could of course take off. But right now the momentum (books, blogs, online communities, etc.) is not there. Instead, the Java world is centered primarily (but not exclusively) around Spring and Hibernate, neither of which can be considered "light" by any stretch of the imagination.
Demonstrates why javac and java want the things they do at the command line, and shows what you can do with them.
Well, why does everything have to fight over the "light" niche? There's innovation in Java, but it happens at a different level, with things like distributed caching, distributed RETE implementation, garbage collection algorithms, hotspot compiler techniques, etc. Not all innovation is about how to get the most out of naming conventions.
I only learnt ant about a year ago and I'm really liking it. Rather than say it's superior to make, I would say it's more suited to Java development. I am going to look at Maven and Ivy though and see if either have any place in my buildchain, a solution to dependencies would be nice.
ah. I copied that entire block to make my own comment about it. Yes I believe the author (and others talking about the same topic) treat Spring as a completely different platform as Oracles Java, possibly because of the existing JEE standards that overlap (though don't really come close to) what Spring provides. 
I don't agree with this graphic. Apache is way too far from the centre, for one. And I wouldn't place Oracle in the centre, even though they legally own Java. This underestimates the importance of frameworks, libraries and communities.
Yeah, but it's *Oracle* doing the controlling. That company is not exactly known for its compassion.
I used to adore java fact n = product [1..n] now, not so much. I can't stand all the bullshit anymore.
How would you choose the factorial algorithm implementation in your code? Without that feature, the relevant client call in the article reduces to: int fact = FactorialUtil.factorial(5); 
That *is* my code. It's Haskell. There's nothing more to it. I'm hoping Scala will turn out well. Java is turning more and more unusable every month.
This article is, for lack of a better word, stupid. Of course you can add unnecessary complexity to anything. This guy seems to think that because there exists more and more convoluted ways of doing things that that is somehow a blight on the language. Its not a language problem, its a developer problem. Fucking duh.
I'm not sure he ever blamed the language for it.
What you call 'bullshit' I call beauty.
What do you think is going on behind the scenes in Haskell?
I am sure he _never_ blamed the language for it.
He calls it no good reason, I call it fun practice.
Simple me: I don't care. Complicated me: I don't care.
What? I never said that was not your code. I was asking how would you modify your code so you could select a factorial algorithm implementation.
Someone did, at some point.
Higher order functions, just pass the algorithm as a parameter.
Can you show me the relevant code (I don't know Haskell)? Thanks.
You can pass functions as parameters factorial impl n = impl n where impl is the algorithm you want to use, e.g. (\x-&gt;product [1..x]) for the simple approach. 
TL;DR: [Y](http://en.wikipedia.org/wiki/You_ain't_gonna_need_it) [A](http://c2.com/xp/YouArentGonnaNeedIt.html) [G](http://www.codinghorror.com/blog/2004/10/kiss-and-yagni.html) [N](http://www.artima.com/weblogs/viewpost.jsp?thread=36529) [I](http://www.extremeprogramming.org/rules/early.html)
No, he blamed stupid Java developers for it. There is a bunch of them out there...
Then again Java is very verbose.
You want bullshit? Read [The Evolution of a Haskell Programmer](http://www.willamette.edu/~fruehr/haskell/evolution.html).
it's a bit uglier, but this is groovy, which is a functionalified hack on top of java but runs nicely in the jvm: (1..n).inject(1) { val, acc -&gt; val * acc } of course, you could define your own product method, and it would be as nice: def product = { mylist -&gt; mylist.inject(1) { val, acc -&gt; val * acc } } def myfactorial = product (1..n) They should just stop java now, and take on groovy as the new java mainline. 
the hardest thing for any mid-level developer to learn :)
HAHAHAHAHAHAHAHAHAHAHAHAHAHAHAHAHAHAHA!!! Good one!
It bothers me that somehow issues like this somehow get blamed on the language. Or, is somehow applied to those who choose to use the language. Obviously you can write code like this in any object oriented language. I think the reason you see it so often in java is two-fold. 1. There are just TONS of java developers and therefore more poor java developers and therefore more poor java code. 2. The training materials. Just open a java book, it's full of examples just like the one illustrated in TFA. Since it's REALLY difficult to show a real world example of valid uses of the described data structures, some trite example is used. Unfortunately, some people see these and think "that's how one should implement a sorting algorithm" or whatever, instead of realizing "oh, this is pointless for this example, but could be useful for far more complex problem spaces".
You can obtain the text the user has entered by using the method String getText( ) from the JTextArea Then you can split into an array the different paragraphs by using the method String[] split(char c) from the String class submitting as parameter the endline character -&gt; '\n' 
That's perfect, thanks :)
&gt; Instead, the Java world is centered primarily (but not exclusively) around Spring and Hibernate, neither of which can be considered "light" by any stretch of the imagination. I'm not so sure. Firstly, I've been coding in Java for 15 years and I've never felt the need to use Spring, despite building several Java websites (in the past I've used Apache Wicket). And while there can be a lot to Hibernate, you can get impressive results with it fairly quickly. For example, Play uses Hibernate for its persistence and you can achieve quite a lot surprisingly fast.
It is a bit on the verbose side, but there could be much worse problems. In fact, there *are* much worse problems with it :)
What are the worse problems with it? XML-configuration for everything, jar hell?
So you don't work in a very demanding domain. Good for you. 
You know what? I don't feel like enumerating my petty annoyances with the language. I work with it all day, most days, and I'm mostly happy with it. If i rack my brain for the list, it'll just leave me annoyed and I'd rather just watch another episode of Buffy. That leaves me feeling happy.
Same here actually. :) 
As far as the Linux issues go, it has to do with Broadcom having no support for Linux. I was thinking of replacing my wireless card but fuck that it's for a lap top. I can't even get it to connect with an ethernet cable. I am running Ubuntu, so maybe I can get it to work with Fedora if I install NDISWrapper.
Already totally obsolete, FYI. Nobody should be comparing the ancient versions of those two frameworks.
[The java virtual machine specification](http://java.sun.com/docs/books/jvms/)
Came here to say this. If there's one resource that will tell you about the JVM's purpose and behavior, it's the JVM Spec.
If you only care about consuming 3rd party dependencies and are happy with Ant then Ivy would seem like the obvious route. I would generally recommend against using Maven. Although some of it's ideas are good, it is way hard too complex for what it does and makes it essentially impossible to achieve certain results. If you are looking for a structured build process, which provides versioning for your modules, convention over configuration for project build and layout, IDE configuration generation, flexible multi-module development ... etc. then I would would recommend EBuild not Maven ... but then I may be biased. 
Why is he using Rails from 2006? And why is he not using database migrations? Sorry but this is comparing apples to sauerkraut.
That tends to be the problem ... the most vocal critics of complex technologies rarely have taken the time to get a deeper understanding. Ant is what it is. For Java development it is the de facto standard for build scripting. It is certainly useful for performing simple tasks and is in many ways cleaner than using shell scripts or Make. However just like shell scripting, with scale almost inevitably come major headaches. 
&gt; For Java development it is the de facto standard for build scripting. It has been replaced by Maven in most companies I know. (Maven has its own problems, of course.)
Google for "eclipse tutorials"...you will find what you need.
Is it just me or is abstracting away HTML always a mistake? Such as what JSF and what I'm reading OpenXava does? 
Why is it always a mistake? It will necessarily be a leaky abstraction to some degree, but I'd rather live there where I can be very productive, rather than be a control freak about what gets emitted. But it depends on your circumstances of course. What would you use besides JSF or OpenXava that would let you be just as productive (which was really the focus of this article anyway)?
Thanks! I'll get reading.
TIL about OpenXava and it looks really nice. Anyone here have any stories to share about using it for a real app?
It's not necessarily about being a control freak about what gets emitted, it's about not placing unnecessary barriers on top of our standards that creates tribal separation. JSF developers write the web using a JSF namespace, I guess OpenXava uses annotations, GWT uses Java code. Even the "hot new shit" like django and ror end up with their own templating language and way of thinking about how to write for the web. Luckily, those two try to subscribe to following HTTP conventions, so 'GET' in one framework is 'GET' in another framework and there is not as much custom vocabulary about 'Components' and the like. For example, it looks like OpenXava generates most of this HTML for you. OpenXava is a wall on top of HTML that you must punch through when things don't go exactly as planned. This is exactly my experience with writing and maintaining JSF-based applications. There is a very large environment slapped over your pages that makes it a pain to punch through it to understand the underlying technology, fix bugs, or override poorly defined default behavior. I'm actually /more/ productive in something like Spring MVC and I wonder about how productive I'd be in Play. I would like to point out, I /do/ abstract away my HTML when working in JSP/JSPX, but it's all very business-specific tags about what my apps /do/ and what data they have and not generic third party tags which re-invent your buttons, links, tables, and page layouts. I tried not to go into issues about good url design and statelessness of your pages. It's a whole different long rant that you can find on any blog. EDIT: up voted for a great/on-topic question.
And I'm going to need some moderators
Well, I have to agree with the difficulty of punching through to fix issues. That is certainly a pain when it's necessary. In my experience though, it's been OK to use JSF components and have them emit their own HTML in their own way, because they have so much functionality to offer the programmer, that it would simply have taken us a lot longer to finish the project without them. So, as usual, it's all about trade-offs. I'm definitely biased towards component oriented UIs though, because of productivity in applications with rich feature-sets. To be fair, I haven't tried Spring MVC yet, but I would definitely hop on anything which allows for high productivity; component oriented or not.
"this is not a Java fault, it's our fault, we, the Java developers, ..." this quote applies to more than this context
Odd, the only reason I can think to do it your self instead of using one of the existing classes would be a homework assignment. And I can't imagine someone coming to reddit to ask us to do their homework. Nonetheless, the iterator method on list typically returns an instance of an inner class which implements the Iterator interface. In the case of a DLL, it would initially contain a link to the first element in your linked list. The rest of the Iterator interface should be pretty straight forward from there. Beyond that, you might want to implement fail-fast semantics. Wouldn't be too hard.
I shouldn't be so blatant about mixing a straight answer and a snarky response in one reply. Someone pointed out that the most important fact you need to know for implementing Iterator is that every iterator will contain some kind of internal state independent of what's contained in the list it is operating on. For linked lists, the iterator generally has a reference to a node in the list. For array-based lists, the iterator generally tracks an index. For tree-based lists, file-based lists, or other strange structures, it can actually be fun.
If it hasn't already been explained to you (I'm presuming you're in class or reading a book), the big advantage of the Iterable interface is that, in Java 5 and above, anything that implements the Iterable interface can be used in a foreach loop[1], which can greatly reduce the verbosity of a simple for-loop. If you want brownie points, you could implement logic to handle ConcurrentModificationExceptions[2]. 1. http://en.wikipedia.org/wiki/Foreach#Java 2. http://download.oracle.com/javase/1.5.0/docs/api/java/util/ConcurrentModificationException.html
I was leaning towards Ivy for the time being... I don't think I have need of anything Maven or EBuild offer over it right now. The idea sounds interesting though!
All depends on what you are trying to achieve, but the obvious should be that rules of thumb are a guide and become beside the point if you use all of them. If you are looping more than 300 times, ditch the loop altogether and catch the exception, its quicker in the long run. E.G. one HD frame can be over 2 million pixels and performance difference is pretty decent if you ditch looping logic. Always gets an interesting reaction when you mention it to a java dev that didn't already know. This is an example of breaking one rule = allot more speed. There are lots of reasons to break rules not just performance. In any size-able group development environment simplicity should be king. :-)
(If my comment seems out of context, it was originally supposed to be in response to skeeto) Not disagreeing except over the semantics of build scripting. Maven is undoubtedly well adopted, just I would not define it as build scripting. Scripting implies a capacity to do ad-hoc things (to me).
How did you know how to implement "all the normal methods" like add(), remove(), and so on? The "right" answer is that you've read the JavaDocs for those methods in the List interface, found out what the method is supposed to do, and wrote Java code to make sure that your method does the same thing. You'll need to create a new class that implements Iterator, and you'll need to do the same thing: Read the javadocs for all the methods defined in the Iterator interface, and write java code that that does the same thing.
FWIW; I found the Jpcap library mentioned to be unmaintained/abandoned. When doing a project that required packet capture in Java I found jNetPCap to be more robust and still supported.
Well first you have to...
&gt; It seems like the goal is more to trick people than to test whether they understand the concepts. How is that different from the 1.4 exam exactly? In my experience, the JCP certfication always struck an unhealthy balance between 'obvious' and 'trivia'.
Maybe it's because it's been a while, but I feel like they came close to crossing the line where they would write an obfuscated piece of code that does something complicated in one line with omitted semicolons, and ask what it would print.
That's a really terrible video. Especially compared to the 'Java 4-ever' trailer that javazone had last year.
Well that is totally useless. Good luck anyway. :\
They did the same thing with the 1.4 exam, IIRC. I took it when I was starting my career, and never uses half the crap that was on the test. And there were plenty of "gotcha" questions. Annoying. 
You mean don't find yourself marking variables as volatile on a regular basis?? 
Java certs have always been just another revenue stream for SUN/Oracle. They have to make them obscure to "add value" otherwise anyone and their dog would have one. End of the day, Java certs do not make you a better Java programmer in the real world.
Eclipse is really easy to set up on Ubuntu 10.10. ( http://www.eclipse.org/downloads/ ) Having Linux work with your hardware is another story.
To throw my 2 cents in, I agree with everyone else that the scjp(1.4) test was useless for testing real skills. I knew this when I was asked what this statement does: for(;;;) I don't remember what it does, don't give a fuck, and disrespect the test writers for including such nonsense in their test.
I'm giving up on Linux working with this computer
Wait, is there an extra semi-colon in there, or is that what they actually put in the test? I know that for(;;) is equivalent to while(true).
My understanding is that there are many popular frameworks built on jsp, like spring. 
Yeah, I accidentally threw in an extra semi. My bad.
here, have a downvote for your completely false assumptions. ty
Learn how we moved an XForms application into a Liferay portal. We used Orbeon's separate deployment mode for a full custom solution and had to solve quite a few issues. 
What assumptions do you think I've made that turned out to be false?
The title of your submission is not present in the page you link to. So, where's the fun?
So can somebody explain what this means for the future?
Sweet article. Thanks for posting.
I like it!
Now, I don't know much about SouJava, but I have a feeling they are like Fox News choosing Alan Colmes to be their patsy. Any ideas?
Pretty sure the JCP has become irrelevant given the way Oracle has been handling Java and related technologies (the Oracle way or the highway)...
JVisualVM is a really nice tool. I'm surprised it seems many enterprise programmers don't know about it.
"with the Java alpha geeks who drive so much independent and discontinuous Java innovation" Oh, would you like to backup that? Sorry, but the majority of programmers don't like making their own version of Java. Especially, the "alpha" geeks, as they'd just like to make their own (why go through the work just to make a clone?) Ugh, just so many more issues I can say and flesh out the above points more, but I'm just too tired at the moment.
The ["official"](http://download.oracle.com/javase/tutorial/uiswing) swing tutorial is actually a good one. Try to download and compile the examples as a starting point.
Thanks, I will be going through this...now.
+1 on this. Swing may have some rough spots, but after using it for the last 6 years I'll say that as long as you do things the way you're supposed to and use models properly for the things that require them, you'll be fine. Unfortunately, Swing makes it *very* easy to to things the wrong way. For instance, if you're calling repaint or validate on a Component, you're probably doing it wrong.
I just wrote a ticket tracking app in java that pulls from a mysql db. If you have any specific questions, feel free to PM me. I was just in your shoes a few months ago.
filthy rich clients. book. awesome. 
I have always been amazed at how many companies have cron jobs to restart glassfish (all JVMs really) each and every night. 
Finding tutorials on Google isn't hard. Finding tutorials that aren't: * outdated * misleading * festering with misdirection written by a misguided author ...is the hard part, so asking people who frequent a subreddit devoted to the language seems like a reasonable starting point.
If you ever want to get some brownie points, you can write some UI tests using the FEST framework: http://code.google.com/p/fest/
Do these get posted just as your own bookmark? What's the point of these?
http://download.oracle.com/javase/tutorial/ui/overview/index.html
I may take you up on that as we will need to tie into a db
have you done this much before?
update : added xml
I (foolishly) developed my own Swing UI testing framework before discovering FEST. I use their fest-assert library almost ubiquitously across all my unit tests, and I know a fair percentage of people (and perhaps they're all of our Swing people - we're a mixed bag between Swing, Eclipse RCP, web UI, and .NET) with my company use it for their own projects. I've not heard of any other competent, free Swing UI testing libraries.
It says so on the internet.
May this glorified [MFA](http://en.wikipedia.org/wiki/Made_For_AdSense) die in a fashion involving rectal prolapse.
I'm not going to do your homework for you. If you're having trouble talk with your classmates, or instructor or TA, or even work it out yourself.
I wouldn't be posting on reddit if I didn't already attempt each of those other alternatives. 
Except you didn't read the article. He encrypted it with a symmetric key, then Base64 encoded it to have a textual representation that he wrote into the text file. He appears to have used DES encryption. As for the Base64 encoding, it is bad practice to use sun* classes, they are not guaranteed to be available on all JVMs. If you can use Java 6, you are better off using javax.xml.bind.DatatypeConverter. It has parseBase64Binary and printBase64binary methods that should be in all JVMs.
Yes. See [System.setErr](http://download.oracle.com/javase/6/docs/api/java/lang/System.html#setErr%28java.io.PrintStream%29) and [System.setOut](http://download.oracle.com/javase/6/docs/api/java/lang/System.html#setOut%28java.io.PrintStream%29) Then you just need to route the PrintStream into your control. If you want to Pipe them to an InputStream or some variant on that, I'd recommend avoiding the Java 1.0 PipedInputStream and going with the new [NIO Pipe](http://download.oracle.com/javase/6/docs/api/java/nio/channels/Pipe.html) instead because that has much better handling of multiple writers and readers and threads.
I've heard of Eclipse and NetBeans for Java development; is there one that you recommend?
Perfect answer, 10/10. Thank you.
You could write a script called "Run" and have that launch the app with java -jar myApplication
Well, for those who are wondering the same thing, I've written a class to do exactly this: http://pastebin.com/x9MxMMnz Initialize it in your Main method by doing the following: &gt; Console c = new Console(); &gt;c.drawGUI(); &gt;c.redirectSystemStreams(); 
If you code it in Visual basic you could trace his IP!
log4j - http://logging.apache.org/log4j/1.2/ is probably a better bet than System.out calls.
Not sure what you mean - those are IDEs, not testing frameworks. As far as IDEs go, I've used JDeveloper (blech) and Eclipse as Java IDEs and done UI development in both (Swing in JDeveloper and Eclipse, Eclipse RCP in Eclipse). I like Eclipse - I specifically use SpringSource Tool Suite, though that may be a bit overkill, especially if you're starting out with Java development and not really doing EE development. Definitely try NetBeans and IntelliJ IDEA, as there are advocates of both for good reasons, and what works for me may not work for you. [ Edit: Ah, I see that you weren't continuing the thread of testing frameworks. Durp. Well, ignore the first sentence of my post. ]
Or even better: http://www.slf4j.org/
I find it's easiest for users to launch Java applications if you provide a native executable. I use [launch4j](http://launch4j.sourceforge.net/) to generate them now (note: although it runs cross-platform, it only generates .exe files), and I've actually used it for a console app before - [here's my launch4j config file](http://code.zofrex.com/BitChecker/file/afa774f838d3/launch4j.xml). I also integrated it into the build process with ant, [buildfile.xml here](http://code.zofrex.com/BitChecker/file/afa774f838d3/dist.xml). Hope that helps!
If you've created an array with n cells, and haven't initialized the cells, then yes, those cells are null. To verify: Thingy[] a=new Thingy[100]; for(int x=0; x&lt;a.length; x++) { if(a[x] != null) { System.out.println("huxman2 is full of crap."); } try { if(a[x].some_attribute != null) { System.out.println("Data-Get too"); } System.out.println("huxman2 and Data-Get are WRONG!"); } catch(NullPointerException e) { System.out.println("Data-Get is right"); } } Edit: Include some other properties. Edit2: Except, I'm not sure if that's how try's work in Java
Thank you sir/madame.
Note: that the object a[x] is null and therefore the objects default values do not yet exist. Primitive data types can never be null.
http://java.sun.com Do the tutorials. 
line from a TV show... 
CSI: NY to be exact. I still hate them for it.
I use the JUnit integration to test
Not sure how you were testing java code beforehand without main methods...but a couple of things: [java scrapbook pages](http://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/index.jsp?topic=/org.eclipse.jdt.doc.user/reference/ref-34.htm) in eclipse allow you to test bits of code without a constructor. It's a handy eclipse feature. Also, if in one of your classes, you just type "main" in the class level scope and hit ctrl-space, eclipse offers to create the main method for you. I'm all for learning to code outside of IDEs - you get an understanding of the nuts and bolts of the system in a very direct way - but Eclipse is a really powerful tool with lots of timesaving features that take away the drudgery. You'll almost certainly need to use one professionally. I'd echo the professor's advice here, frankly.
This is the epitome of Java development. The issues of boilerplate and large APIs all but disappear with the proper use of an IDE. Not to mention there are plenty of Eclipse plugins which will make your life even easier. Those who don't use an IDE should stay far away from Java.
This. Do this.
("here is the " + anArray[guessp1])
Hi we're on the same boat, I'm a PHP developer and recently changed jobs, now I've decided to learn Java. I'm currently reading this book that I found online and right now I'm focused on finishing it from beginning to end. buy here http://www.mindview.net/Books/TIJ4 [pdf] http://highscore.googlecode.com/files/Thinking%20In%20Java%204th.pdf What's hard for me is that with PHP I could easily finish a project in a day, but right now I have 0 knowledge of Java. With PHP I started out by developing projects that interest me, right now I'm gonna try and build a jeopardy type game with a client - server thing for my company (for use as an ice breaker during weblogic trainings)
MY SAVIOR. thanks
I don't know. I don't recommend that anyone start out programming in Java if you don't have past programming experience. Start out programming in C, maybe a little C++, then Python then Java. And you don't have to spend a lot of time. Just a week or so on each. But if you start out with Java, you will just get caught up in issues with the implementation of the system (E.g. like a classpath) that might not make any sense. I am not saying you shouldn't learn Java. I just don't think you should learn it as a your first language.
I actually am starting to prefer testNG. A lot of excellent features that junit is lacking. Just one example, test grouping. Instead of having to have a test suite that mentions multiple tests, just use this syntax: @Test(groups = { "something" }) 
+1 on the Bruce Eckel book, it's very good - and free to download.
Actually, I'm a freshman at college and am taking a C class. Just started with it. Wanna learn Java in detail before I have to take it down the road. I plan to learn Python which, to me, looks much easier than Java and C.
Your teacher is a little short sighted as to force you to use Eclipse (over Netbeans, IntelliJ IDEA, vim, etc), but I have to echo some of the other thoughts posted. Eclipse is very much a powerful IDE and learning it is probably close to as important as learning Java itself.
What other tools are you using and what are you doing with them? sincerely, Richard Nixon
164 for a high score. *Disclaimer: Though I have a job writing Java, it is my first job ever, it is very part-time, and I do not have a college degree.* 1. Not that I know of (but that doesn't mean much). Well, /r/gamedev is a good subreddit, albeit a multi-language one. 2. I took a look at a few classes. The actual code looks okay--unlike some of the code I inherit with my job, I haven't felt the urge to swear yet. I'm personally not a fan of putting an if/else/for/etc. on the same line as the closing brace of another block, but that's neither here nor there. A lot of your documentation is of the `private void jump() /** Causes the player to jump. */` variety. While that's not bad per se, I'd like to see some more high-level comments. I've been looking at Game, Player, and RisingWater, and `step()` is probably the worst offender in that respect. It seems kinda strange to me that as far as I can see, the game logic is oblivious to the framerate. 3. I'm really not the person to talk to about non-javadoc documentation. 4. I'm *really* not the person to talk to about this. I first played it on my Thinkpad T40 (Pentium M), and the performance was pretty sketchy. I then tried it on my T60 (CoreDuo), and performance was about the same. It's not lagging, it's just....jerky. I suspect this is actually because of your step()-ing. There's a few visual rough edges. Once I had a score of 10, and the 0 was cut off by the edge of the screen. And "Instructions" in the menu breaks out of its little box. There were also a few, "Um, excuse me?"-s in the collision detection department, but I absolutely don't blame you for them. I'm making a platformer myself, and am intimiately aware that that stuff is hard. Said platformer is being made for a class I'm in. I use PyGame (after doing Pong in Java), but everyone else uses Java for everything. I'll definitely be showing them Rubble Escape--thanks. The html file would be a lot more useful if I could play directly from my browser, without downloading anything. I might have a few more thoughts (that are hopefully more concise) in a day or two, once I've let it ferment in my brain for a while. Overall, it really is a good game though. (In fact, it might be worth porting it from AWT to whatever Android's SDK uses, and posting it in the Android Marketplace.) Well done!
this.do(this); But seriously folks, use JUnit over main(). It's built into Eclipse, for the love of god. Become the green-bar-aholic.
Thanks. I was considering trying to perhaps port it over to a mobile platform, we'll see. As for playing directly from the browser... I have searched for places to upload applets, but haven't really found any. If I had my own website I would put it there, but as it is now, it's just there to show that it's possible. The jerking/lagging issues... at max, it's set up to run 50 frames per second. But I have noticed slight issues on other computers. I personally run xp with a dual core (5 years old), and it works completely fluidly on mine. I'm not really sure of the issue, hopefully someone else here has a bit more experience in this and knows what it might be about. It might be a case of active vs passive rendering, which I think with my code I'm trying to get the best of both worlds and it's not quite working out on every computer. Your text issues are rather unique (so far). Could I ask what version of Java you're running? Oh, the score system works with two parts, the top for your current highest score and the bottom being where you are actually at. Is it a case where you had a 10, but where at a 1 when you died? My paint method in the scoring class really doesn't leave room for error unless our fonts don't look the same... which might be the case (as to your instruction box issue). I'll have to look up font cross-platform-ability. I'll look into trying to make better comments for the more complex methods (which well, are mostly the step methods for each object). I'm afraid unless you have a better comment for the jump method that one will have to stay though :P Could you further explain the collision issues? The player is just a box in collision regards, so what looks to be close calls are generally just going to be squashification :D Thank you for commenting!
I am a pretty hardcore Emacs user and even I have to admit that eclipse is an amazing IDE. Emacs is more configurable in the general case.
I could give it some webspace, if you wanted. It's not that the jerking is terrible...it's just that things are slightly not-fluid enough to be irritating. Here's this: $ java -version java version "1.6.0_18" OpenJDK Runtime Environment (IcedTea6 1.8.2) (6b18-1.8.2- 4ubuntu1~9.04.1) OpenJDK 64-Bit Server VM (build 16.0-b13, mixed mode) And [here](http://imgur.com/0c5Iul&amp;JlsBt) are the two text issues (three if you count "Rubble Escape" not being centered). Note that the `0` in `10` is visible, but just cut off a bit at the edge. For what it's worth, I'm running Crunchbang 9.04, which is the same guts as Ubuntu 9.04. I do have proprietary fonts installed though.... &gt;I'll look into trying to make better comments for the more complex methods (which well, are mostly the step methods for each object). I'm afraid unless you have a better comment for the jump method that one will have to stay though :P I don't know...I mean...if you have any intention of inviting someone else to work on it, I might briefly discuss how it's implemented. Perhaps like this, "Causes the player to jump, assuming he's standing on something. This is accomplished by changing his vertical velocity. @see #JUMP_POWER" But like I said, it's not that what you have already is bad--it's that your ratio of well-this-is-pretty-straightforward-but-I-guess-I-should-document-it to this-is-kind-of-tricky-and/or-confusing,-let-me-explain-it comments is a bit skewed. Regarding the collisions: Sometimes, I'll be trying to escape from under a falling block. Visually, I make it. But the bounding rectangle of the player is still on the bottom block, so the player doesn't fall. Simultaneously, the falling block lands, and I get squished. Yes, it's "legitimate" if you account for the bounding rectangle. No, that will not appease your average player. The Canabalt guy has [an interesting article](http://blog.semisecretsoftware.com/tuning-canabalt) about tuning Canabalt. He actually made his bounding rectangle "wrong", but due to the nature of the game, it feels more correct. In your case, I would either use bitmap masking once a collision with the bounding rectangle is detected, or, upon a collision, check to see if it could be avoided by shifting the player ~3 pixels to either side. To quote the article: &gt; All of this just provides a little extra cushioning for people's reaction times, which gives me more latitude to add more exciting challenges without frustrating people too badly.... &gt;It's all about making things "feel right", and getting rid of those moments when the player says, "What!! I SO MADE THAT, what the f-". &gt;Thank you for commenting! You're welcome!
You can always post it at /r/gamedev/ There is a great community over there for game developers no matter the language you use.
Your text issues are interesting. It does indeed seem that the fonts depend upon the native computer. I'll have to figure something out for that... The silly thing is, I already know the fix (without finding some cross-platform way to do fonts), the same thing I used to center and position everything... Another issue caused by premature optimization, I should have known :D. The good thing about this is that I now know such an issue exists. You make a good point with collisions, and this has caused a bubbling of ideas for me to think over. Since I separate and deal with the player vertical collisions and horizontal collisions, I could make the player kind of rounded and sort of squeeze out of close calls without harming normal movement collisions. Or something like that, probably something more akin to your suggestion... which is something I haven't thought of before and has now made me excited (using two collision detections, first for general to improve efficiency and then for precision). Thanks for the suggestions/help!
Thank you for the suggestion. I'll certainly do so once I deal with some of the issues posed by Tiomaidh.
They all have their strengths and pitfalls. You'll eventually settle on a favorite, but in the meantime, I would just take them as they come and preferably one at a time. None of them are hard by themselves, but getting real work done with them will often require utilizing many other necessarily complicated systems (e.g. databases), so don't make the mistake of trying to conflate all the ideas together and just be "productive". For now, I would opt for clarity over utility.
You definitely need to download Eclipse or other java IDE. Trying to develop software without one is a waste of time.
Interesting. Add you project to freshmeat, findbestopensource, ohloh so that it will get noticed.
Congrats on writing and publishing the game! I haven't had a chance to play with it, but just getting to this stage is excellent. I wish I had written a game already :( I recommend joining /r/gamedev as well, they're a really wonderful community. And perhaps /r/opensource if you are passionate about it :)
On documentation I find it helpful to frame it in terms of certain question words 'what', 'how', 'why'. Now if you care about the usefulness of the documentation and not 'documentation theatre' (which you may not, since you mentioned you are trying to showcase your skills) then I would say to definitely not bother with UML. Insofar as UML can be useful it is for documenting the 'what' which is probably the least useful aspect of documentation since it requires the largest amount of duplication between code and documentation. It is arguably sometimes useful for documenting abstract business processes, but this game is not that. For the how and the why, I would look to contain it all within either the source code for locally applicable remarks, perhaps tagging comments with something like // REMARK ..., or in a README. Only push beyond this stage when you fully grasp the limitations of this system of documentation, which will then better inform any decisions you make going forwards. Similarly for testing, I would try not to engage in 'testing theatre' and without looking, you probably could delete the tests you believe to be not worth their while. In general it is pretty difficult to test certain types of code, such as graphics. Tests work well for deterministic, abstract functional parts of code. Fortunately, generally (with notable exceptions) in well engineered code it is the abstract parts which contain most of the complex, fluid parts which tend to break (in not immediately obvious ways) during development so it is here that tests are their most useful. Tests are only useful if they are easy enough to write and maintain (i.e. they represent some fairly universal truth about the behaviour of the application) and are liable to break from time to time. 
Your teacher is right. Not only is Eclipse a great (possibly the best) IDE for Java, it also leads to more effective teaching. Consider these two scenarios: **Scenario 1:** Student: I have problem X. Teacher: Really? What IDE are you using? Student: FooIDE2000. Teacher: Never heard of it. Let me just install that... oh, there's a registration required, hang on... there we go... hm, never seen it done this way before - where is XYZ control? [THREE HOURS PASS] Teacher: ...and there's your answer. Student: ZZZzzzzzzz. What? **Scenario 2:** Student: I have problem X. Teacher: X, huh? Well, here's how you solve that in Eclipse. Student: Thanks!
Great effort!!!
I recommend the book [Core Java](http://www.horstmann.com/corejava.html) by Cay Horstmann and Gary Cornell.
If your students have never asked you trivial questions like "Where's the compile button?" or "How do I create a new project?" I truly envy you. The problem with using *javac* is that it cotton wools you, preventing you from gaining the understanding of the bytecode format you would get if you wrote it by hand. 
It seemed too hard to start. Maybe the blocks and water could go slower and then speed up as you get higher?
Personally, the only documentation I really care about is a nicely organized class diagram (without the attributes, just the structure). That's what I would be using the UML for really. I consider it rather crucial, since it gives you a large insight into the code structure and the relationship of it all, very quickly in one simple image. For my simple project that's tightly organized in its package structure, it's not needed quite as much... but without it, to really understand structure organization you would have to read all the code, which is something you shouldn't have to do. My source code nightmares all start out with me downloading the source to some recent favorite game, and finding 100 or so classes all in the default package with no hints to how it's structured :D ... In consideration to tests, you are right. I feel a bit ashamed that I've been putting a bit too much consideration into how others would view my code without tests (or with only a few crucial ones). I like how you phrased it, "testing theatre", which is perfect for describing what I was doing. I think another part of it though, is that it feels kind of silly when I have this whole test structure that's basically empty aside from a few critical tests. I instinctively want to fill it out you know? But what you're saying rings true. Thank you for your input.
This is a notable point. I was thinking about this earlier, and some ways I might accomplish such... But it's a slippery slope. Personally, I think games that do that can get irritating, as I get higher in difficulty I despise having to start over at the slow beginning. However, I'll see if I can work something in to make the beginning marginally easier... Thank you for your input.
A few options in the startup could go a long way to alleviating that problem.
Ah, thank you. I've personally been making games for many years, but this is my first "professional" grade I would say insofar as code quality and overall polish (simple as it may be). Something I feel proud to share the source I guess is really the determining factor. One of the last things I did was that darn title screen. The hardest thing is when you have that feeling of completion, but you ignore that and say, no, it needs polish! Progressively, your feeling of completion increases exponentially, and resistance becomes futile, but you still must! :D
Ahah! Trickier than you would first assume! It is something I thought of earlier, for quite awhile too. To abstract all the game mechanics, swath them into a menu changeable by the player... Mainly give fun modes of play like Raining Death mode where blocks are half the size but there are twice as many! Very complicated to actually polish such an option menu though, but an idea I've been mulling over none-the-less for quite some time though.
KISS. We're just talking about options to change the game speed during play and set a starting speed so someone like you doesn't have to start out slower than you'd like.
Go to Program Files\Java and look at the JDK folder name.
java -version says exactly that... 1.6.0_23 is 6u23. JRE version == JDK version.
"javac -version" is far more authoritative than "java -version" which could just arbitrarily point to a JRE.
Oh no no noooo! We can't just stop there can we? If we're going to go through the work necessary for such a task why not go all the way? I know it probably sounds like such a simple task just to change the speed... but that's deceptive. The wrong way to go about it (but simplest) would to muck with the frame rate, but I'm not that kind of person. If I'm going to do this, I'm going to do it right! Which requires an abstraction of the mechanics, into a rule class, which will be interchangeable... I didn't do this earlier because I was only thinking of it in a different game mode kind of way... and that wasn't quite as crucial of a thing (big effort for marginal gains). But with your input the realization that I could also control difficulty with such a system tips the benefit over. There isn't any stopping this train now that you've got it started.
"do" is an invalid name for a method :)
http://www.javablackbelt.com : free online courses and coaching ...
passing this to this is also stupid. i realize it's a joke but think a little before posting.
Eclipse.
Would you mind elaborating the reasons why?
It's nice and smooth
If you are interested in doing Android development switch to eclipse. There is a little bit of a learning curve but after a few sample android apps you will pick up the changes. I mainly use Netbeans and prefer to for most things, especially web. However most Android developer are using eclipse so any tutorials or sample code you want to use will be geared to how eclipse structures their projects. When I started doing Android apps I tried to use Netbeans too but quickly realized I would need to make the switch over to eclipse.
I started with Eclipse. I find that it's smoother, faster, and the debugger is fantastic.
I have a degree in computer engineering and about 4 years of professional development experience. Your code is much cleaner than the large majority of code I come across at work. Nice work on that. Lots of documentation, good -- but probably a bit too much ("GameState state -- The state of the game." duh). The biggest problem I see with your code (with an admittedly brief look) is all the hard-coding of game elements, which is the cause of your text-positioning issues. This makes it harder to maintain, harder to modify (tweak, compile, run, look, repeat), and locks down the game window size. I also think your generateBackgroundColor() method could be nicer than that. :-) Other minor criticisms: petty(-ish) code-style nitpicking. Use Git and publish by GitHub, or similar, so it's easier for others to provide feedback, via forking (SourceForge is so last-decade). There are no build scripts so I had to drop in my own, but because your code is so tidy it built without a hitch. 
Thanks that was really insightful. 
http://www.codingbat.com formerly known as javabat is a really nice site that has tons of little coding challenges in java and python. Once you create an account all exercises you do are recorded and your solutions are saved for you to review.
Thank you. I've got in the habit of documenting it all. Yeah, you get those duh moments, but it keeps a nice unified style. With my next revision though I'm going to make a quick run through and hopefully get a bit less of the "duh" reaction to some of them. Also with my next revision, I'll be separating all the crucial game mechanics into a separate rule class, to have modes of play and varying difficulties (with a custom mode even where you set all the values). The text issues is straight up my fault, I prematurely optimized it (I should have known). If I had used the dynamic system I used to center and position all the elements, it still would have worked out. I was working under a false assumption that fonts and their sizes would be cross-platform (like it was a Java font or something), which isn't the case. So it's quite nice to know now that this isn't the case, won't be making that mistake again! :D I'll consider using GitHub. And I've gotten rather spoiled by Eclipse in regards to building :P I'll try to include one in my next revision. Thank you for your input!
I used both for a while but I'm starting to relax with Eclipse a little bit more since working on Android development. I used Netbeans for PHP development because it had a good FTP system (Ctrl-Shift-Enter to upload). I didn't know Eclipse had a good remote FTP system that I could install because it's, IMO, hard to find. It also took a little time to figure out workspaces and the various layouts. I'm still not used to everything, but it does what I need it to for now, and I'll learn the rest later. I also chose to move to Eclipse because Netbeans stopped loading the files for a couple of my websites, and it slowed when working on large PHP files during code hint lookups and project scanning (not sure if it still does that).
I have used both, and prefer Netbeans.
Another thing I would like to point out is that it is usually a bad idea to do anything (including development) on a platform with no first-party support. I learned it in a hard way. 
Eclipse is the IDE of choice for multiple tasks. I consider it as _the_ IDE. You can develop desktop, web and mobile apps with it, in any language you can think of (Java, Python, PHP, Ruby...). You can always make a plugin yourself, if you ever need it to do something else with it. So for android is the best IDE there is. Don't even think, go for eclipse. 
Done. Installing now... Cheers!
netbeans can do all that too. 
I'd say try them both. I usually edge towards netbeans, I like the interface more. There aren't as many useless menus and buttons. It gives you the essentials right there. However if you need a 3rd party addon, then I think you need to try that addon on both IDEs and see which one is actually better. Sometimes even though you might like the core IDE better, the 3rd party addon developers might have been doing a better job on their addon for the IDE you don't use.
IntelliJ, Eclipse, Netbeans... pick whichever one you like and go with it. They're all the "same" with different keybinds. I prefer Eclipse.
I've used both extensively, and I would recommend using Eclipse. Netbeans has gotten much better over the years, however, Eclipse is better at a wider variety of tasks/frameworks including Android [prepare for slow emulator ;)]. Maven integration (m2eclipse) in Eclipse is damn good which is a huge plus. Netbeans does have have some strong points... I find it's handling of JAXB bindings and webservice server/clients to be very nice. Remember you can always set your Netbeans keyboard shortcut map to 'Eclipse' so you don't have to learn the essential keyboard shortcuts for both IDEs.
Don't get too hung up on the fact that TDD is listed as a required skill for many jobs - a vast majority of those employers probably don't even truly understand what TDD is. Definitely learn the skill, though - and try to find someone who is very skilled in it to learn the basics.
It is much easier to install plugins, the android development tools for example. Also I like the UI better, and it has better refactoring tools. However, they are both pretty comparable, and both very capable. it really can't hurt to know both tools anyway. 
I'm an ex-eclipse user and found that it crashed a lot. I've since switched to Netbeans and love it. Much more stable, more responsive, seems more lightweight than Eclipse. I didn't really use plugins in Eclipse, so that was another reason why I stopped using it.
It has everything you need, it runs quite well these days and is the primary product that the Android SDK is designed to run in.
If you're using maven, netbeans is a no brainer. Otherwise it really doesn't matter too much
Eclipse is a little better put together, it uses SWT so it looks very native. Some things are done better, like inline popup views that allow you to browse code a lot faster (e.g. CTRL+o to bring outline view right where your cursor is, then you can quickly type to find a method in the file you are in. Hit CTRL+o again and you get inherited methods again. You can type globs here etc to narrow down your selection. Also CTRL+t gives you type hierarchy so you can quickly see what classes in the hierarchy override a method you are interested in). If you install vi plugin for it, you can edit and navigate code really fast. Both Netbeans and Eclipse can be memory hungry, and Eclipse is perhaps a tad faster but not by much. The only advantage Netbeans has is that it has good GUI designer, and it has excellent free as in beer vim plugin. However, I find creating GUIs is really best done in code anyway. They are not really that different, so which ever you choose you can't go wrong and switching between them is not hard. Eclipse is open source and supported by a lot of companies. Netbean is somewhat under Oracle control. They just recently dropped support for Ruby, so that might be something to consider as well.
Try out www.projecteuler.net
Thread.sleep (15000);
It's kind of a general site. I'm looking for projects that suitable for Java only. By projects, I mean those applications that can actually do something. I already knew project euler, and I'm solving those problems with C++ and Python as my practice in algorithms. Thanks btw.
jetbrains IDEA. After years of using Eclipse, I was reborn. Don't know exactly how it compares to Netbeans, but it's way better than Eclipse in every way. Free/open source too, at least for Java and Android development.
Honestly, I've used eclipse a lot, and I like it for its versatility, but in this day and age on computers with two or four cores and 4+GB of RAM, it should not be that slow. I recently tried out IntelliJ IDEA's free version and it's pretty awesome in terms of both features and responsiveness (autocomplete is near Visual Studio quality), and it has most of the stuff I used plugins for in eclipse built in. I think I'll probably still use eclipse because I'm more familiar with it, but it does have legitimate problems.
I highly recommend you ask this on stackoverflow.com (just make sure you use the [homework] tag) and then post a link here on reddit to the SO question.
Put the fun game on the shelf and learn some basic algorithm stuff for the AP example. For some reason those people fetishize BigInteger classes (even though it is built in into Java).
It's worth it for Mylyn alone. Especially if you context switch alot.
Except Eclipse has mylyn. Which means it wins.
Mylyn, it has Mylyn. Eclipse has Mylyn. At my last job, we worked on a code project that was obscenely (millions upon millions of lines) large, eclipse was choking on it and everyone kept asking me why i put up with the slowness when they all used vim. Why? Eclipse has Mylyn.
So, it is Emacs for the modern age.
I'm doing a project right now for my SE class and we're using both, mainly NetBeans for the GUI and then we just copy and paste the code into Eclipse.
Very interesting. I'm going to look at using that in our project. Does anyone know if there is a similar library for JavaScript, where it is much more needed?
I found that Eclipse (writing Java) has better autocomplete than Visual Studio (writing C++) which works about half the time (unless you add Visual Assist). But it may depend on the language.
I don't know about Javascript, but if you're using GWT, you should be able to compile and test as Java with Cofoja contracts enabled and then deploy as Javascript.
I wasn't sure how they would improve on 8, but version 10 is a real joy to use. Lovely.
I looked around and found [Cerny](http://www.cerny-online.com/cerny.js/) which does this and several other neat things for JavaScript. We'll be giving that a try next week.
It just seems weird to have an empty interface, which is just used to mark the class as serializable.
VI and NERDTree, what more could you ask for?
It's funny how declarative programming is slowly creeping into imperative programming. Yet programmers are still afraid to make the big jump. 
My rough guess is because it's added in JDK1.1 as opposed to 1.0, and it was too big of a change to be made.
It's a [Tag Interface](http://www.c2.com/cgi/wiki?TagInterface), there are a few of them packaged with the core library, I guess the logic is with the tag interface you don't add unnecessary reserved words to the language spec. Nowadays you're supposed to use annotations instead of tag interfaces, but Serializable was introduced before annotations.
Your teacher likely is pushing Eclipse because he/she knows that the vast majority of you are learning Java because you want to get JOBS eventually. And what's useful in academia isn't always what used in the business world. In the real world, Eclipse utterly dominates. 9 out of 10 java shops are using eclipse. I happened to have begun in one of those others... I started with NetBeans, and am now working towards Eclipse.
Now THAT's a good idea. Why didn't I think of it? ;-)
Thanks. I didn't know that. So, the second position in the version is the actual Java version. What is the "1", then? ;-) 
The word you're looking for is *Container*, more specifically [java.awt.Container](http://download.oracle.com/javase/6/docs/api/java/awt/Container.html) and its subclasses. This includes [javax.swing.JComponent](http://download.oracle.com/javase/6/docs/api/javax/swing/JComponent.html), which means all Swing components can contain other components. That said, you might want to look for a tutorial or book about doing graphics in Java, there are lots of things to put together (or at least know and understand) before you can achieve what you want. (I don't a suggestion for you, unfortunately.)
I think you have to look into something like a scene graph There is piccolo2d which is pretty stable and open source but lacks visual effects http://www.piccolo2d.org/ Or you could go for the open source project scene graph from sun/oracle, but isnt maintained since 2008 https://scenegraph.dev.java.net/ Or you could wait for javafx 2.0 http://javafx.com/roadmap/
I've never used annotations before, so I will read up on them. Thanks for the answer. 
Serializable is a mixin. If you just want one mixin, then declaring a method like "public serializable class MyClass { }" just might work. however, that has it's problems. What if you want more than one mixin? What if you need to inherit a different class?
Someone just posted one to r/JavaScript
Well as someone mentioned, it is safer to do 'javac -version' since you can in theory have multiple versions of JRE and somehow messed up paths (you can also have multiple JDK versions but it is very rare, in fact, multiple JREs is also quite rare). Prior to java 5, all java versions were versioned 1.0, 1.1,...,1.4. With java 5 (which "real" version is 1.5) sun decided to drop the 1 so the version number appears bigger, indicating more progress or something. Same with java 6,7... It is only a marketing "ploy" to drop the 1. The internal numbering still has it.
&gt; What if you need to inherit a different class? You still can, Serializable is an interface.
Q1. Is there an active community around for Java games? I've struggled to find any. How about just a game community in general, to have people play and tell me what they think? I used to be tightly ingrained in some of the amateur gaming communities, but they all died... :D A. The most active java games community that I know of is javagaming.org. There is also the Slick2D library found at http://slick.cokeandcode.com , jMonkeyEngine at http://jmonkeyengine.com and LWJGL at http://www.lwjgl.org which also have pretty active java gaming communities around them.
Entirely possible. Here's a [code example](http://www.onyxbits.de/content/executing-child-process-and-redirecting-output-jtextarea), that'll even run the JAR in it's own JVM (allowing you to easily kill it).
Yes, but with a keyword like "public serializable class MyClass { }" it won't work.
And why is that?
My question is why does writeObject take an Object instead of a Serializable? Never quite understood that one.
Same thing. You can do this: final Serializable somethingThatIsSerializable = new String(); 
Noooooooooo
What? new String was a bad example. But if you work with something like wicket, you want to distinguish the serializable classes. There are classes that are serializable and those that aren't.
There are a number of reasons for this design: - Not every class is can reasonably be serialized, so you need some way of tagging those classes that can and those that can't. - java.io.Serializable is broken by design and that was pretty clear from the beginning. Memory dumps only work as long as you don't change anything in the class definition. - Tagging classes by means of interfaces instead of keywords is much, much, much easier to do. You neither have to change the compiler nor the format of the class files for it. You only have to teach the VM that some interfaces have special meanings. 
Easy, what would the purpose of java.io.NotSerializableException be if you couldn't fuck it up :P? Serialization is basically a memory dump. This means, that whenever you dump an object, you also have to dump all the objects, it references. If this includes something like a Hashtable, you might easily end up trying to serialize something that is not meant to be serialized. Now, what would strike you as more odd? public void writeObject(Object) throws NotSerializableException or public void writeObject(Serializable) throws NotSerializableException Another benefit of using Object instead of Serializable is that after reading a serialized object, you can at least immediately use toString(), equals(), ... without needing to cast. 
You definitely would wanna go with JComponents and other subclasses because their repaint algorithm is optimized. Plus you don't have to worry about redrawing single components of your "scene" as the standard implementation produces the best possible result in most cases. You can simply add components by invoking the method "add" which is part of every subclass of java.awt.container, thus javax.swing.JComponent as well. Happy Coding!
Is it just me or is that vid completely unwatchable. Can't prebuffer it. And it won't run for more than a second or two without stuttering.
Someone knows why APT is not in widespread use?
This practices sounds bizarre. There is no reason you cannot edit the same source files from a different IDE. The only thing you need to do is setup the individual project files for the respective IDE correctly. Alternatively using maven2/3 will make managing the project in netbeans or eclipse(need a plugin) easier.
This only confirms the general direction Oracle has been taking with everything it acquired from Sun...
I traced your ip, it's 222.573.33.25.880. You can't beat my networking the OSI model.
Ah but laziness is a factor. Also the quarter (and our project) is mostly over.
I've used both extensively and I have to cast my vote with Netbeans, everything just works out of the box (no need for ages of plugin searching), it's rock stable (unlike eclipse...), and doesn't have Eclipse's memory leaks and it actually handles big projects well. I also think Netbeans' autocomplete feature and automagic handling of brackets (and moving your cursor if you hit ';' in brackers) just beat Eclipse hands down... Also updating older versions is not an issue, unlike with Eclipse where they seem to make a sport about moving things around and renaming them breaking the updaters from previous versions. It's also worth noting that Netbeans uses standard ant build scripts (or Maven) which can be built outside of the IDE (or without having it even installed) unlike Eclipse who uses some custom project format. My only worry is the direction Oracle is taking it in, but I guess there is always IntelliJ if worst comes to worst.
Maven integration in Netbeans 7 (currently in beta, slated to be released this month somewhere iirc) is seriously good and at least as good as Eclipse's integration, if not better.
This is awesome! Why does no one use this? Also, what is the typical use-case? To help people writing code against your code, perhaps? (Could auto-generate helpers, and generate warnings for catching potentially bad code that falls outside the scope of compile-time checking?)
I've used xstream in production with a lot of success. Using the annotations almost makes it feel like a language construct. http://xstream.codehaus.org/
If its for a class, go with whichever interests or challenges you more. My own personal preference is JAWS (though I don't do either, I do enterprise SOA work), I can't stand things embedded in the browser whether its applets, flash, silverlight, etc.
Just take two seconds and do some research dude. We're not going to do your homework for you
How about GWT? Write it in Java, compile it down to JS, with faster startup time than either applet or webstart. And it works in offline mode too.
I really hate GWT. We use it at work, but I really don't like it.
Applets, JAWS and pretty much anything web-embedded are an old school concept. If you are interested in doing web with Java you could try GWT ( http://code.google.com/webtoolkit/ ) . This way your end users won't need to have java installed on their system and you can still code everything you need in Java on the server. ( all of your Java UI code gets compiled out into Javascript )
Tomcat 6 with Spring MVC ( Spring includes database tooling )
I would avoid applets, many people (myself included, thanks to having 4 browsers and three JVMs, one of which is 64-bit) do not have them correctly set up in their browser. Java Web Start is painless and works well, **but** presents a very confusing hybrid of web apps and native apps. Just like Chrome's "apps" and AIR it's a weird mix of online and offline, and plonks a shortcut in the start menu.. but it's really unclear what it's doing or how to launch the program, how to uninstall it (or even the fact that it has been uninstalled!). Applets follow a much better known "pattern" of interaction. p.s: seriously, they call JWS "JAWS"? There's already a very prominent browser-related piece of software with that name! 
&gt;Right now I'm leaning towards JAWS because it sounds like it would be more fun. There's your answer, right there.
Can you explain this? I was thinking of using it for something
JS can apparently be nice. I just watched [Douglas Crockford's video lectures](http://video.yahoo.com/watch/111593/1710507) and he's advocating a way of using JS as a scheme.
All depends if you want an application or a something cute in a browser. Running from inside a browser is very limited in processing ability and memory let alone the rest....
Thanks I've checked it out. It seems promising but I'm worried I won't be able to do some of the things with sounds that I want to.
The build.xml files are Ant build script files. You can make eclipse build your project using Ant rather than it's default project builder by going to Project -&gt; Properties -&gt; Builders -&gt; New... and create an Ant builder pointing to your project's build.xml file.
good point. Thanks!
In case you missed it in /r/programming, the core Java class that handles floating-point parsing is vulnerable to an infinite loop that can be triggered by the specific floating point value [2.2250738585072012e-308](http://www.exploringbinary.com/java-hangs-when-converting-2-2250738585072012e-308/). All Java versions from at least 2001 onwards are affected, except a few exotic implementations such as gcj. * If you have a Java webapp in production that has a floating-point form field, anybody can paste the value and submit the form, hanging your server this way. * If you run Tomcat it's even worse, any request with an Accept-Language header with the specific floating point value will hang your server, no form needed. Tomcat 5.5.33 (not yet released), 6.0.32, and 7.0.7 contain a fix for the bad header handling. Java 1.6.0_24 (not yet released) will contain a fix for the core issue, bad floating point handling. Meanwhile, Oracle has released a [tool](http://www.oracle.com/technetwork/java/javase/fpupdater-tool-readme-305936.html) for those who need to patch their JRE and JDK before 1.6.0_24 is released (probably next week). This tool should probably only be run on production servers. Desktop users are not particularly at risk, just *don't* paste the following line in Eclipse. ;-) double d = 2.2250738585072012e-308;
Yep, just right click Main.java in your project viewer and select run.
It sounds as if you've called the file main.java when it needs to be Main.java. When you have: class name{ ... } You need to make sure that the file is called name.java - remember that it's case sensitive.
The main class needs to public. Just put "public" before "class" and you're done.
This was sort of the problem, I just found. Apparently with Netbeans, it has to be preceded with "package xxx;", or else it can't find Main.whatever it may be. Manual selection works as well, but I'll just stick the package command up there for ease. Thanks for the help, man.
Yeah, this worked. Thanks, man.
You probably have some kind of classpath problem. Make sure you put this code into a file called Main.java (capitalisation is important). Compile it with "javac Main.java" and then run it with "java Main -cp .". The classpath is an important setting that allows the java runtime to find the class files that have been compiled. Be aware that your shell might have the $CLASSPATH variable defined wrongly. You can view the variable with "echo $CLASSPATH". You can redefine this variable with "CLASSPATH=". When it's empty, it defaults to "." (the current working directory) but when it's wrong it's possible that "java" won't find class files even if they are in the current working directory. Hope that helps.
Currently it is package-private to the default package. That's undesirable, but it will still work.
.. or jetbrains IDEA.
Ok. How is that better than putting the assertions *inside* the method?
The [FAQ](http://code.google.com/p/cofoja/wiki/FAQ) answers the question. Basically: * Contracts can be inherited. * You can use `old(X)` to get pre-execution values. * More functionality such as implies `=&gt;`. * Invariants let you add a single global check for every element in a class. * You can test for exceptions. * Various collections of contracts can be selectively enabled or disabled. * Assertions are taken away from the code and moved into Javadoc, and becomes part of the API.
I've potted this to JavaScript: (here)[github.com/wbecker/jscontract] Edit: on iPhone - can't get link working on alien blue. 
I was not able to define the "don't crash" contract.
This is great -- I've been complaining for a long time that the Java language is not verbose enough.
madness!!!
Try stackexchange. Also it's not entirely clear to me that you really mean single sign on...do you just want to authenticate your users?
thanks for the advice actually i was just looking there :).sorry if not clear, i want to make http requests with apache httpclient to an iis server and authentication must be single sign on. 
Look into [CAS](http://www.jasig.org/cas)
I'm assuming you mean SAML with ADFS. Microsoft has terrible documentation when it comes to this but you can download the addon for your IdP here: http://www.microsoft.com/DOWNLOADS/en/details.aspx?FamilyID=118c3588-9070-426a-b655-6cec0a92c10b&amp;displaylang=en Once you install adfs it will install the necessary web agent into your iis instance. It will also install the adfs management console which will allow you to do things like add your SP metadata and manage attributes or 'claims'. Good luck. 
For the java side you should look at [opensaml](https://spaces.internet2.edu/display/OpenSAML/Home). You shouldnt have to be doing the assertion processing by hand. Also, if you have spring security you can look at the new saml extension that came out.
Duke represented those giddy, lighthearted days when Java first took off and programmers everywhere were finally looking forward to the freedom of widespread garbage collection and WORA. If he comes back now, it'll be like "Weekend At Bernie's". RIP Duke... 
&gt; * After recent discussion, am now implementing a difficulty and mode of play option system. &gt; * Known issue: proprietary fonts may mess up the centering and positioning of text elements. I'll have it fixed soon :D Would you let me know when the next version is out? Thanks.
&gt;convoluted syntax of that platform Which languages have similar functionality but cleaner syntax?
C#
I'm the author, and no, I did not look at Sourceforge for this particular presentation. The data is interesting, just as the broader #'s [from Ohloh](http://www.ohloh.net/languages/compare?measure=commits&amp;percent=true&amp;l0=java&amp;l1=-1&amp;l2=-1&amp;l3=-1&amp;commit=Update) are. I did, however, include the fact that projects like Cassandra and Hadoop - and Jenkins and HBase - are written in Java. If you read the piece, I think you'll see that we're in agreement. Claims that Java is dead are, at best, specious.
I'd say IntelliJ IDEA. My journey was Eclipse to NetBeans then sticking to IntelliJ. However since you want to know NetBeans and Eclipse, I'd say yes, go for Eclipse.
Funny, I saw that too. I got a upvote from one of them I believe. Do not talk about Microsoft technologies in here. The only accepted suggestions are Python, PHP and maybe Ruby. C# is _very_ close to Java in term of Syntax / "Virtual Machine" / Managed memory. However you get some nice things like... * var x = new MyObjectOfChoice(); // x is automatically MyObjectOfChoice, no needs to type the Type twice to declare it. * public int Amout {get; set;} // Fast and clean setter/getter * using(AnObject a = new AnObject()) { managed things } // auto dispose AnObject And there is much more. You can read the code as you can read Java, it's just cleaner. Look for partial classes, Entity Management, Managed Extensibility Framework... Ton of nice things. Sometimes, I believe C# would be the most used language if it wasn't done my Microsoft.
You basically will be on the jvm or the clr/mono to have the same functionality if by features you mean managed code, native threads, enormous set of libraries, etc. on the jvm you have clojure, scala, jruby, groovy, ... on clr/mono you have C#, F#, boo, ...
People don't get the way the human mind works. Richard Nixon, "I am not a crook", and everone ever after associated him with the word crook. This title has the same flaw. People now associate dead with java, the 'not' falls away.
Unless there are Oracle and Windows major stock holders taking part in this conversation I am not really sure why we keep comparing the languages. People have different tastes when it comes to this stuff, and every language has its strong and weak points. Writing articles about Java dying is silly, just like thinking that C# will take over or vice versa is worthless chatter. I like Java, if the day comes where it would make more sense for me to use C# then I would. The important thing is to keep abreast of what the leading technologies are not to be left behind. 
Understood. Respectfully disagree, but I understand where you're coming from. The conventional wisdom in some quarters - which I obviously do not subscribe to - is that Java is dead, on its way to becoming the next COBOL. These sentiments, among analysts at least, are based on data. Data which I take with a grain of salt, but data nonetheless. Add in the fact that Java has almost certainly peaked from a relative popularity perspective - that is to say it will never be as popular as a function of relative marketshare as it once was - and I think the contention that it "fell" is not misplaced. But I understand the objection. 
That's a damn fine download form.
Sorry, when I went to the link from my email invite it took me straight to the download, didn't realise you'd have to enter your details to get it!
"So I could choose between setting my goals more realistically or writing my own model. I naturally chose to write my own model." Nice
 AnotherClass another = new AnotherClass(); another.method();
her is what i have in my other class public int getNumberTransactions() { return transactions.size(); } I need this in my main method to println
This looks awesome! How does it scale with threads and program size?
Are you getting a build error when you compile? If so, what?
I have this public static void main(String args[]) { BankReader br = new BankReader(); and in my other BankReader class i have public int getNumberTransactions() { return transactions.size(); } which needs to be printed in the main class
spelling "environment" correctly on the splash page would be strong evidence of practical attention to detail.
thanks for the downvotes. i'd ask somewhere else but I GOT NOWHERE ELSE TO GO
Dunno, but I'd do something like this? public class Transaction { public Date date; public String vendor; public double price; public Transaction(Date date, String vendor, double price){ this.date = date; this.vendor = vendor; this.price = price; } public Transaction(String date, String vendor, String price) throws Exception{ this.date = parseDate(date); this.vendor = vendor; this.price = Double.parseDouble(price); } private Date parseDate(String date){ DateFormat formatter = new SimpleDateFormat("dd-MMM-yy"); return (Date)formatter.parse(str_date); } } ... List&lt;Transaction&gt; list = new ArrayList&lt;Transaction&gt;(); String s[] = br.getNext(); list.add(new Transaction(s[0],s[1],s[2])); If you need to use arrays Transaction[] transactionArray = new Transaction[9]; transactionArray[0] = new Transaction(s[0],s[1],s[2]));
 br.getNumberTransaction() Doing homework huh?
Awesome, I actually had pretty much this idea a while back and have been waiting for someone to implement it. :-) Now I just have to wait for the IntelliJ version... Hope one is in the works?
Love the [headdesk icon](http://www.chrononsystems.com/wp-content/uploads/2011/02/intermittent.jpg), haha.
If Java is dead then so is C# as they are both built on the same paradigm so they share the same weaknesses. Also C# is a Windows only thing so it's useless in the enterprise where *nix is still dominant (and will always be unless some MS Miracle happens) and no, Mono is not fit for enterprise application deployment. Fact of the matter is, there is no viable alternative to Java yet.
It's called a 'Marker Interface' and is the appropriate solution. Since it is an interface and therefore a *type*, it can participate in type hierarchies whereas the same implemented as a keyword or marker annotation cannot. Consider if I want to have all of my domain classes marked under the same interface type of Domain, I can have 'public interface Domain extends Serializable, ... {}' and make all domain object implement serializable as part of their type hierarchy. Just because marker annotations are more modern than marker interfaces does not mean that they are a more appropriate solution to a give problem.
I didn't downvote you, but a question like this is better asked on a site like stackoverflow.com edit: also this question isn't very specific. If you want to store an object in an array you simply create the object and then assign it to an index in the array.
First of all, I was just answering the above question by suggesting C#. Second, *nix is not necessarily dominant in every enterprise. I work for a big international company and Microsoft is way more “dominant”. We see our Microsoft solutions being on the rise while the Java/Open source solutions are on a constant decline for a couple of years already. Third, saying Mono does not fit for enterprise application is just plain wrong. Look at these [companies](http://www.mono-project.com/Companies_Using_Mono) and maybe you should look at these [projects](http://www.mono-project.com/Software). Finally, I think you are just a *nix fanboi. Good day. 
Certainly. I'm almost done with all my revisions, should be completed in a few days.
&gt; I am not really sure why we keep comparing the languages &gt;The important thing is to keep abreast of what the leading technologies are not to be left behind. One might read an article comparing languages to keep abreast of what the leading technologies are?
Talk to your professor or TA.
By all means you should read and compare, what I mean is that people get all emotional about this language rocks and this other one sucks. That type of conversation is worthless. Yes some do things better than others, but the argument has to be coherent. Take feelings out of it.
I feel so accomplished for being able to understand that :)
I'm not sure what your problem is. It like you might need multiple threads: one to read the data coming out of the game and appending it to the JFrame, and another to read the data from the JFrame and then send the message to the game. If you're reading/writing data to a stream then you might need PipedInput/Output stream to redirect data. Sorry I misunderstood the problem at hand: wbkang has the correct idea.
I too have sought a nice console window for my java project. I have made a couple, lost in the mists of time (no big loss). I presently use beanshell's console. http://www.beanshell.org/ It's way overkill for my purposes but it does a nice job. I get all my error and info messages in the window. Type in commands. Cut n paste. etc Also, ya, pickings are slim. You'd think that there'd be a dozen console implementations out there. Strange.
Sounds like you need to add a DocumentListener to track any additions the user is making to the text area.
Well I really just was hoping to have the game board display on the left jframe, and then one jframe to the right side that display exactly what the console window would display, as well as allowing for a few .nextChar() or whatever to get user input. Im guessing from the looks of things it won't be that easy to implement.
I think you are over-complicating stuff if you use threads for this. 
A simpler solution : use a separate jtextfield to accept input. 
ok thats what I suspected I would need to do, then just add a "submit" button or something to collect the input from the jtextfield. I don't think that should be too hard to implement... Thanks!
Well if he doesn't know what will happen next and you need to listen for user input and the game output, how else can you do it? You need some sort of concurrency.
Yep. Just listen for the enter key. That way it's very natural.
It can be event based then just post the result to the Swing EDT. Concurrency in Swing is hard to get it right especially considering his level.
Yeah, this is best way to do it.
Ah for some reason I had in mind that the game was in a different process. Yeah, if he's within the same program then you are 100% correct.
JDesktopPane with JInternalFrames?? JSplitPane, left side is the text view, right side has the board on it? 
can you post the class?
Finally! now I can...well since I program with java...whats new about this?
Let me just post the whole thing, I guess that'd make more sense. Sorry, I just got back from rehearsal and my brain is pretty much fried. package multadd; class Main { public static void yikes () { } public static void multadd (double x, double y, double z) { x = 1.0; y = 2.0; z = 3.0; System.out.println (x*y+z); } public static void main (String[] args) { multadd (); } } It's unfinished as of now, I have plans for yikes.
It corrects a major security flaw: http://www.reddit.com/r/java/comments/fhst9/security_alert_most_jre_and_jdk_are_vulnerable_a/ The flaw is most dangerous on servers, so the patch tool they released last week might be more relevant: http://www.reddit.com/r/java/comments/fitcw/oracle_releases_hotfix_for_the_doubleparsedouble/ Still, this will prevent you from needing to kill Eclipse or Netbeans after you paste this line in the editor: double d = 2.2250738585072012e-308; Edit: Here are the realease notes: http://www.oracle.com/technetwork/java/javase/6u24releasenotes-307697.html
One of the smallest values actually.
Holy crap, I can't believe I sat there for that long without seeing that. So the line: x = 1.0; y = 2.0; z = 3.0; is entirely useless, then? With it there, I'm always getting the answer 5.0, with any combination of numbers. I'll be honest, I've no idea what static means in this instance, or what any alternative might be.
Somehow I can never understand the concepts of concurrency and when I have to use Multi-Threading or something. Fuck and here I am java developer with shitty exp of 2 years, using advance level frameworks like spring, hibenrate etc. I want to learn actual programming what's the way to go ? obviously programming lot is self explanotory.
I don't drink. thanks for the quick acquisition and lack of help.
It's not. http://en.wikipedia.org/wiki/Java_version_history#Java_SE_6_.28December_11.2C_2006.29 Not even close to every day.
I thought he was my best man. 
I see. The assignment was to do just the first thing, I'm pretty sure I'd get in trouble if I started deleting things we haven't been taught about yet.
Need help with my java homework. FTFY
Unlike everyone else, I'd be happy to help with your homework (now, or in the future, pm me), but what you're asking doesn't make any sense. Arrays are typed so you can only put "things" of the specified type into the array, where "things" is either class or primitive types. A class type would be like your strings: String[] strings; // an array of strings A primitive type would be like an integer: int[] integers; // array of ints So, to put something into your array of strings, you first have to allocate the space, and then assign stuff to it: String[] strings = new String[2]; // allocate the array strings[0] = "Hello"; // put stuff in it strings[1] = "world"; Or you can do it in one step: String[] strings = new String[] {"Hello", "world"}; Does that answer your question?
Try this: public static void main(String args[]) { BankReader br = new BankReader(); System.out.println(br.getNumberTransactions()); } Good luck!
I don't get it. Because Oracle killed Java? Java's not dead yet.
If you believe sensationalist blog posts and articles, Java and Kenny have both died roughly the same number of times. 
The Java Posse
and that's pretty much all :)
'the basement coders' cover a lot of java stuff. I just started listening to them so I don't know how consistent the quality is.
It's gotten better.
new repo: https://repository.jboss.org/nexus/content/groups/public/
'This Developer's Life' is good. Not all Java centric but worth a mention.
If you use maven build with Eclipse, then everyone will be happy; Most IDEs have the ability to work with maven projects. Not to mention you get dependency management for free.
They record that show high as a kite and it shows. That's a pro or a con depending on your perspective.
The only thing that's a serious issue here is that user input that was translated to a floating-point number left a security hole that would let users lock up threads remotely.
It was fixed two weeks ago...
As DemonWasp pointed out, it's not a numerical problem but a DoS security issue. Say you have a web application where a user enters a float (a rating system perhaps), and you parse that float using the built-in number parser, which is *supposed* to be safe. A user could submit a number known to cause a severe lockup, attacking your web server. 
Thank you for this, at a first glance it looks pretty interesting, I'll try some of these.
I would say that it's good to make sure you can use both. It took about 30 minutes to get comfortable with Eclipse coming from Netbeans, and the first thing I noticed as being different, was that Eclipse is a lot more helpful in correcting errors (it even gives you an option to automatically import a class that you used without importing by pressing a button).
Better question is whether you fully understand/grasp the fundamentals, have you used enough of Oracle's API and other 3rd party API? 
I moved from SA to programmer 3 years ago. Learning a new language is tough. Learning your first is much tougher. You can always read more, but you should apply sooner rather than later. Once you have that first job you will learn more from more experienced colleagues. You will find out what you don't know. Even failing at interview will give you great feedback. If this is your first programming position here is one thing you won't know yet: loads of programmers are dire. The barrier to entry is lower than you think. Try to join somewhere where there is at least one good programmer so you don't learn how to do things the *wrong* way. Jump in ASAP, and good luck.
Pick up an old scjp book. Read it through the fundamentals. Learning general OO theory is better than focusing on all of the details for a first job
Really depends on position and company. A smaller startup may overlook some gaps in your knowledge if you look like you are willing to learn quick, but depends on the level of expertise they have in-house and type of product being developed. Larger software houses are much more picky and looking for people that know quite a lot even for a junior position. Businesses where programming is a cost center (banking, accounting, medical, etc) may be willing to settle for a more junior person as they may not have many senior people on staff in the first place. Look for a place that is willing to accept you based on what you know and what area you want to work. Domain knowledge is always more important anyways than actual language expertise.
When I wanted to get into Java programming (out of college I got a job working on web sites with PHP for a year and didn't want to do that anymore). I studied for SCJP 6 with the Sierra, Bates book and felt like it gave me a well-rounded knowledge of the main parts of the Java 6 SE API. In addition, I'd recommend learning how to work with Java and databases (seems to be really in demand) as well as whatever you see asked for in the jobs you find attractive on Dice. To answer your question, I'd say that once you are comfortable with all the good stuff in the SCJP books (The collections framework, generics, the different io classes and how they work together, and so on) start applying and learn more as you go.
Sounds interesting, but as someone not up to date with the politics behind java, can somebody explain what kind of consequences this will have.
Sane developers will just pack up and leave Oracle's tainted ship to seek refuge on the Apache Fork. Or something like that. A lot depends on the Google v. Oracle suit, mostly because of the Harmony project. (Because the Java trademark and a license created by Sun - I've forgotten it's exact name - that basically allows you to use Java Technology, but only if you can show that it's compliant, and for that you need test kit, that's not open source, so you're still at the mercy of the trademark holder. And Google used files from Harmony, which is a GPL project, so why not. But it's patented by Java's trademark holder, so Google had been sued for patent infringement.) So if the courts think that Oracle can fuck anyone over, then Java basically becomes Oracle's corporate-grade, pay-as-you-go, pay-me-more, pay-for-updates, pay-toy. And even the JVM's legal position is quite delicate, if I'm not mistaken, as that's governed by the JCP which the Apache foundation just left, because it's full of Oracle; plus most of the JVM is patented, and on top of that, the JVM is worthless without a Standard Library implementing the Java API. Sure, the OpenJDK is GPL, but that's governed by this new IBM+Oracle thing, and any other project wanting to fork it and call themselves Java compatible, would be in a lot of trouble (just as Harmony was). The same goes for HotSpot, the JIT compiler bolted onto the JVM. But. I'm not a lawyer, the whole Sun/Oracle transition is a mess, Wikipedia is fucking far from precise and nuanced when it comes to legal delicacies, so, add big bits of salt grains to this.
Which just shows that in 4-5 years any sane Java developer should have left Java al together. 
Can't we just call Harmony a 'Lava' platform, and tell Oracle to go fuck themselves? It seems to have worked fine for Hudson/Jenkins and openoffice/libreoffice, but Java is on a completely different scale, of course.
Something like that is in order, but copyright requires clean-room implementations (big pain in the ass) and there's no real way around patents, at least if you want to use your software where money counts (US corporate world), so even if you'd call it Habla, it'd still be the same "invention". I really have no clue about the patent background of StarOffice/OpenOffice/LibreOffice and the Hudson/Jenkins projects, but I'm guessing that' merely a copyright matter, so the GPL takes good care of that. With Java, it's really a can of legal worms. But, the OpenJDK and it's IcedTea version seems to be usable for now. (I'm using the OpenJDK 1.7.0 beta 130 release, fresh out of the oven this morning, and it works with Scala 2.8.1 and Jenkins/Hudson.) I can even imagine a Microsoft (or MPEG LA with H264) like behaviour on Oracle's part, they let the ecosystem thrive, but they show up the moment anything starting to make too much money, and demand their cut.
He's surprised anti-aliasing has an effect on framerate? Of course it does! Doesn't matter how fast your computer is, anti-aliasing is more work than not anti-aliasing. A drop from 700 FPS to a *mere* 300 FPS isn't really something to complain about or worry about. In addition comparing accurate 2D compositing to a very simple 3D scene is not fair, people always underestimate how intensive rendering 2D layers *accurately* is.
If I remember correctly, Java only defined the speech recognition and text to speech interfaces. They do not provide implementations, you have to find those from some third party. [Sphinx](http://cmusphinx.sourceforge.net/) is an open source speech library from CMU.
Yeah I found that, but I've been having trouble using it. Thanks for the help though.
As far as I know, Sphinx is the only Java solution for speech recognition. It can be challenging to use and can take a lot of time to get performance in the same ballpark as the Microsoft or Dragon speech recognizers. What's the project?
We're working on a Audio Preview Engine for the visual impaired to be able to preview what a symphony venue would sound like based on the seat. We're looking to use voice recognition as input for seating selection.
Java has been a slow moving language for the last few years. I see the changes Oracle making as a good thing. The optimist in me hopes that Oracle will start stream-lining new features and improvements into the language over the coming years and Java will be better than ever. The part that worries me is how Oracle will start changing for Java. I'm guessing they will leave it free for consumers and small developers. But for large J2EE type deployments they will start changing money. Maybe charge for redistributing the JRE with non-free software... who knows. There are a lot of ways they can go to monetize Java, but they have to tread carefully not to shoot themselves in the foot.
Java's stagnation was evident even before Oracle bought Sun; now, I don't know. They undoubtedly have the resources to make great things with Java, but even this whole transition was/is a nightmare. I wouldn't argue their right to monetize Java had they done anything for it, for the ecosystem, instead they did the complete opposite, went after Google.
Neat project! I would guess that you have a relatively small vocabulary which is Very Good for speech recognition. Take a look at the JSGF grammar examples in Sphinx 4. They're in the source code; you should always use the latest SVN source. Building a custom grammar will likely provide the best recognition performance. If you are dealing with telephone speech, or perhaps just more "untrained user" speech, I've had good luck with the Communicator acoustic models. You'll have to adjust your frontend parameters (I can't remember where these adjusted values are described), but the models themselves are here: http://www.speech.cs.cmu.edu/sphinx/models/#am Otherwise, the HUB4 acoustic models (16kHz) are ok. From my very brief stint in web accessibility, visually impaired users may prefer a non-speech recognition user interface option. However, this is something you can evaluate when you have the candidate ASR system online.
I did some work in Uni with Sphinx, it's a good library. However, it suffers some drawbacks: performance, needs quite a lot of tweaking and configuration. 
Is there a particular problem you've run into? If you post some code, I might be able to help.
The documentation for [GenerationType.IDENTITY](http://download.oracle.com/javaee/6/api/javax/persistence/GenerationType.html#IDENTITY) says that it means the persistence provider (the database) will provide the unique ID. So it is entirely up to your database software if it decides to reuse IDs from deleted records. Without knowing anything else about your problem I'd say it is possible, but I can't think of any good reason for a database server to keep track of which IDs are in use and recycle old ones. That seems like a lot of overhead for very little benefit.
Thanks for the answer. I'm using Google App Engine and I'm getting some strange behaviour which would be explained by ID keys being reused after objects are deleted. I also can't think of a good reason for a database server to reuse old ids but I can't rule it out because I can't find the relevant documentation.
Just found this post by Max Ross on Google Groups: &gt; Since the datastore in prod is comprised of multiple back-ends, we use a sharded counter approach to dole out IDs so that we don't have to worry about different back-ends handing out the same id. So, back-end A may be working from a pool of IDs ranging from 0 to 100 and back-end B may be working from a pool of IDs ranging from 101 to 200, and so on. If your inserts hit different datastore back-ends you'll get IDs that jump around a bit. You can depend on these IDs being unique, but not monotonically increasing. --- I'm still not sure that numbers aren't being reused. Especially if each back-end is only working from a pool of a limited number of ids.
A quick read of the data store docs for GAE doesn't mention the behaviour, and something like that would definitely be worth a mention! You could try posting a question over at the GAE community, but I'm pretty sure the answer will be no. Good luck!
Yeah I'm going to have to assume that the id's are unique. Otherwise I'm sure it would cause problems all over the place. It would still be nice to have a clear answer though. I've posted my question to Stack Overflow. Do you mind if I post the info you provided there?
Go ahead. I hope someone over there has your answer!
It sounds like the system works as back-ends A and B claim a range of IDs (e.g., 0-100, 101-200) and then, presumably, when they reach their upper bounds, they contact the shared ID server and claim another unique range - perhaps B gets to 200 first, so it claims 201-300, and then A will get 301-400. How would such a system result in duplicates (assuming that the ID server has some kind of locking mechanism to prevent duplicate ID ranges from being claimed).
Keys can't be duplicated. What is unclear is whether they can be reused after the object they are associated with is deleted.
I think the problem is with either the config.xml or the manifest because it's throwing an Internal Configuration Exception when I try to declare the recognizer. &gt; Recognizer recognizer = (Recognizer) cm.lookup("recognizer"); That line throws the exception. &gt;Exception in thread "main" Property exception component:'wsjLoader' property:'location' - Can't locate resource:/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz edu.cmu.sphinx.util.props.InternalConfigurationException That's the exception 
We already have a basic keyboard interface built in, but we were looking to also add the voice interface for added accessibility.
https://code.google.com/javadevtools/download-wbpro.html Used to be onwed by Instantiations, then bought and open sourced by Google.
Great, this should really improve interoperability within teams where multiple IDE's are in use. I found that getting started with a fresh checkout from a source control is pretty painful, because it seems to me like you have to basically redefine all projects and their settings yourself.
Yeah it is pretty nice. It used to be about $300 for a license until google offered it for free. I've mainly used for SWT dev, and it makes it real quick to preview a layout.
[Download links](http://jdk7.java.net/preview/).
Swing is definitely not a poor choice. SWT is basically used by only a few "mainstream" apps (Eclipse, Azureus, etc.), Swing is used for pretty much everything else. If you need further explanation, go to ##java @ freenode, you'll be convinced soon enough. :) And a general tip, use MigLayout, it's the best out there. It has both SWT and Swing support.
Test Java source: package net.seriousworm.test.jdk7; import java.util.HashMap; /** * New JDK7 features showcase. */ public class JDK7 { private final HashMap&lt;Integer, String&gt; map = new HashMap&lt;&gt;(); public JDK7() { map.put(7, "Hello JDK7!"); } public void start() { switch (map.get(7)) { case "Hello JDK7!": System.out.println("Greetings."); break; default: System.out.println("Hm."); break; } } public static void main(String[] args) { new JDK7().start(); } } Feel free to add your own. I installed the 64bit jdk and am using IDEA CE which has built-in jdk7&amp;8 support for some time now. Everything is identical to java 6.
I concur. Swing had bad performance in 1995. Nowdays, SWT is good choice only if you're developing Eclipse plugins.
At the risk of sounding like a dick, this is not what reddit it for. Your TA or fellow students are a much better resource for helping you with this. There will be harder projects, might as well get used to long hours in the lab. Unless of course this is due tomorrow, in which case - don't procrastinate next time!
at the risk of sounding like a dick, you are a dick. :) the sidebar reads "Anything related to JAVA !". in all seriousness, i do agree with skydivingdutch here. you might have better luck somewhere else like stackoverflow.com. if it homework, they might get mad, but if you are upfront about it and show you are trying (as the OP has), nobody will get too mad. just try a little bit more and then post a question (WITH CODE) to the site. see what happens. EDIT: see [tips](http://meta.stackoverflow.com/questions/10811/how-to-ask-and-answer-homework-questions) on asking homework-related questions on stackoverflow. note that link points to meta.stackoverflow.com and not plain old stackoverflow.com. you would want to ask your question on stackoverflow.com
Shoot an email to your prof/TA and RTFM. This is pretty simple stuff you could pull off google.
It's not simple for everybody. 
More agreement from me. Swing is more flexible and layout tools exist to help you get where you want in terms of layout issues.
I am always looking for deals on hosting and I had a friend recommend ChunkHost. They are currently offering: RAM 512MB Disk 20 GB BW 600GB monthly FOR FREE to beta testers! Only valid if you are in the US. Just enough space for a mysql server + Tomcat + a small java web application or two. I am not affiliated with ChunkHost in anyway. I am only using chunkhost for some proof-of-concept and some grails development projects to see if the projects work in a lower-memory production environment.
I signed up, but how long is it going to be available?
I don't know. I received an email back from them stating that they were no longer taking new beta testers. Then, the following day I was notified by another email that my chunk was ready and I was immediately able to ssh in as root and start playing with new ubuntu 10.04 server. I have been told by the person who recommended chunkhost to me that he had his server for free for 4 months. They then asked him to pay for the service, but at a 40% discount. He said he has been a paying customer since and hasn't had any troubles. YMMV
Perhaps [DateFormat.parse\(\)](http://download.oracle.com/javase/6/docs/api/java/text/DateFormat.html#parse%28java.lang.String%29) ? Once you get the input into a valid date object, then you can print it out or create a String Representation in whatever format you desire by using the DateFormat class in the opposite direction. [SimpleDateFormat](http://download.oracle.com/javase/6/docs/api/java/text/SimpleDateFormat.html) is the *cough* simplest variant of these formatters. More information can be found here: http://download.oracle.com/javase/tutorial/i18n/format/dateintro.html
I'm not completely clear what you're trying to do. Are you trying to take a string that is already in the correct format and create a date object out of it? If so then use SimpleDateFormat: http://download.oracle.com/javase/6/docs/api/java/text/SimpleDateFormat.html The code would look like this: try { String data = "01302010"; SimpleDateFormat format = new SimpleDateFormat("MMddyyyy"); Date myDate = format.parse(data); } catch (ParseException pe){ //The format is not correct. pe.printStackTrace(); } Or are you just trying to make sure that the data is in the correct format? Also, if you are in control of the data format, you may want to use "MM/dd/yyyy" or something similarly delimited because it's much easier to read and parse. Edit: Formatting
How are you enforcing the format input? That is the real question. If you have that covered all you have to do is use import java.text.SimpleDateFormat; SimpleDateFormat format = new SimpleDateFormat("MMDDYYY"); java.util.Date myDate = format.parse(customerDate,0); 
I'm planning on using a while loop. so: while(user's input does not match MMddyyyy){ keep asking to input the date in the MMddyyyy format }
Why the downvotes? Is there something I don't know about ChunkHost?!
You may want to use do while. do { keep asking to input the date until it's right } while (user's input does not match MMddyyyy); This makes sure that the while loop happens at least once, which is best in input situations. To ensure that format, you may want to look into regular expressions, and Java's implementations of them. I do not use Java as of now, I joined this reddit in anticipation of learning it :/ but basic programming concepts? I'm here for ya.
When tackling problems like this, the first things to do is to correctly line up your loop/condition nesting (for readability purposes) and manually step through the code (either on paper or with the debugger). This would show you that your problem is to do with when you are reseting your duplicate found boolean and adding a unique name to your final array. I'm hesistant to give you the answer since frankly this stinks of assignment work, but that hint should get you looking in the right area.
The Swing vs SWT performance issue is no longer relevant. Both frameworks are fast and stable, and whichever one you choose, you'll sometimes be glad you did, and sometimes wish you chose the other one. As for GUI designers, I'd recommend doing it by hand. It's not hugely difficult and you won't get horrible auto-generated code, which is a huge plus when the GUI designer suddenly stops working and you have to clear up everything by hand, which will definitely happen with a probability of 1. As a bonus tip, look into [MiGLayout](http://www.miglayout.com/).
Thanks, but I've been looking at this for the past 6 hours, and haven't seen anything new. I've written it down and been going through it myself and I can't see what's wrong. I asked online as a last ditch effort. I tried to think about your hint, and I tried moving things around but it didn't really do anything to solve this problem.
Oh dear, what a mess... &lt;rant&gt; First, frak arrays and use a Hashtable + List. Second, frak arrays and use a POJO to hold the various data members. Third, use the fraking source code formatter in Eclipse, it's only Shift-Ctrl-F. Fourth, remove all the System.out.println debugging statements and use the friggin debugger. Fifth, foreach - you do know of foreach syntax in Java, right? (Unless you are forced to use Java 1.4, in which case RUN like hell) &lt;/rant&gt; Dude, I really, really, really, hope you're a student and this is an assignment. If you wrote this while under my management, you would be gone by the end of the day. Edit: Yup. 76 lines final working code. However, you really don't want to use Java for this kind of work. Perl is much more faster to work with. Edit 2: Just tested perl, same result in 14 lines.
haha good advice, but this is for a Java class. We're required to use certain things and restricted from others (like lists). still having trouble on the part about there being duplicate entries though. I just finished about everything else I had to do here except that. edit: and the random weird spacing in the system.out.println report... unless that's just the way it is
Something like this: public static void main(String[] args) throws IOException { Date date = null; SimpleDateFormat format = new SimpleDateFormat("MMddyyyy"); format.setLenient(false); BufferedReader read = new BufferedReader(new InputStreamReader(System.in)); do { System.out.print("Enter date: "); String input = read.readLine(); try { date = format.parse(input); } catch (ParseException e) { System.out.println("Invalid input: " + input); } } while (date == null); System.out.println(date); read.close(); } 
It can also give users the comfort of a .exe. From a technical perspective, it's a silly thing, but I know of plenty of people who trust a .exe more than a .jar.
Beaten to the punch: http://www.reddit.com/r/java/comments/fm5ae/jre_version_6_update_24_now_available/
Ok, lets look at this a different way. You have your duplicate testing and unique name insertion happening in the inner loop. Say your final name array already has three names in it, and the name you are checking is the last (third) element. What does your loop do? Obviously you're not going to to set your duplicate found flag on the first iteration, so what's happening in your duplicate check before assignment? Should the resultant behaviour happen? What about the second iteration? We don't hit the duplicate here either, so your flag won't get set right? Again, what happens with your assignment code?
Thanks! I tried out Sequel Pro a few weeks ago and love it do far. If I need to use anything besides MSQL I'll have to look elsewhere though...
I'm still not following, this is my latest attempt at trying to fix it: //***********looking for unique names **********// String[] finalNames= new String[numberLines]; boolean foundInFinalNames =false;//default to false for(i=0; i&lt;numberLines; i++){ foundInFinalNames =false; for (int i2=0; i2&lt;numberLines; i2++){ if (userName[i].equals(finalNames[i2])){ //check for duplicates when i and i2 are different foundInFinalNames = true; } if(foundInFinalNames==true) { // do nothing, already exists } else { finalNames[i] = userName[i]; foundInFinalNames =false; } }//end of inner-for // System.out.println(finalNames[i]); }//end of outter-for //****end of unique name check*****************//
Sorry, but your original code was actually closer to the mark. Your problem is that you are not checking that userName[i] is anywhere in the finalNames array before assigning it to that array. Your assignment code shouldn't happen until you've looped through all of the finalNames array (otherwise, how are you actually checking userName[i] isn't already in there?). The strange behaviour you're seeing is because you are modifying the array during the inner loop, leading to inconsistent results.
Here's a decent example of sha256 hashing: http://www.mkyong.com/java/java-sha-hashing-example/ Example #2 shouldn't be that hard to make into an object with the interface that you want. Don't use md5 because it's no longer strong enough of a hash. sha1 would be ok but it's days may be numbered soon too.
I found the Glassfish podcasts by Alexis Moussine-Pouchkine to be pretty interesting. He covers a lot of the upcoming Java EE stuff. Java Posse is definitely the best though.