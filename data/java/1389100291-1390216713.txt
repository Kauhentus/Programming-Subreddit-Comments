Nobody really answered the question. Java isn't going anywhere at this point for a while. It is the language with the most job postings. I haven't looked it up specifically, but I'd wager it is the second most used language right behind c/c++. Right now, you are definitely safe in knowing java for quite some time. With everyone and their dog trying to come up with a c/c++ replacement, the future there might be a bit shaky, but we'll have to wait and see.
Thanks. It was written in c#, before I realised it was supposed to be Java :) ^^but ^^don't ^^tell ^^anyone
Just think about simple things: Embedded Devices, Smartphones, Wearable Computing, ... And a single Operating System: **Android** Quite a lot of that stuff is programmed in Java, so the future for Java looks rather promising...
You should learn a lot of languages. Seriously. In the industry, it's pretty much expected you can pick up new technologies and languages anyway. I wouldn't hire or pass someone up based on whether they know Java. But someone who tinkers in other languages just to stay abreast, probably has the kind of self-motivation you want.
Yeah, that's true for Java 7, but not for Java 6. I agree, should have been clear about that. While I am at Java 7, I think including changes String.intern() and string pool is also important, because string pool is no longer part of PermGen space, instead they are relocated to Heap space. Will update the post with new changes. Thanks
Pretty interesting and absolutely must know, thanks for sharing!
Do you have a red lego-brick looking thing in the top left of the browser (to the left of the URL)?
&gt; Given the popularity of Android devices, Java should be around six years from now. Given the massive entrenchment of Java for business applications, it will definitely be around six years from now. Businesses still run mainframes with COBOL green-screen applications today. 
It mostly has to do with the line "p.add(this, BorderLayout.CENTER)" That line adds your myGame JComponent to the JPanel UI widget. Once it's added as a child, it is now included in the rendering pipeline of swing. Without that, paintComponent would never be called.
Ok, so the key part of that line is "this", right? Because that means it is adding this (which is the JComponent?) to the JPanel. Thus the JComponent is added to the JPanel. Is that correct? Thanks so much for taking the time to help. Where did you learn so much!?
Also, is it necessary to add the borderlayout.center part? would doing p.add(this); suffice?
This. Wordy. Just graduated in 2013 but now on my 6th year using primarily Java for internships and now full time. People often talk about Java's verbosity and how language X can do Y with only Z lines! In the real world when correctness really matters and other people need to review, understand, debug, and maintain your code, verbosity *can be and often is* helpful. Note: Your code should be probably abstracted and easy to read from a high level but have the details available where they should be 
This is great advice. Pick yourself up a Haskell book, learn pure functional programming, and ride the Java 8 wave into the future.
It is hard to know why you are having trouble with so little information. Hibernate handles one to many and many to many relationships very well. 
I have some advice, first why not use the standard Maven structure. So instead of creating all properties files in /profiles in the root directory use the standard filters folder. ***src/main/filters. *** I then generally create 4 files * filter.properties * dev.filter.properties * beta.filter.properties * live.filter.properties I use filter.properties as the default filter file and then add only the properties that change in dev/beta/live filter properties. This way I can reduce the number of properties in these files and reduce duplication. To achieve default filtering using the filter.properties file which all other properties files will inherit from I use some simple config in the build tag of the pom.xml, you can then set the rest of the profiles up as in the example. &lt;resources&gt; &lt;resource&gt; &lt;directory&gt;src/main/resources&lt;/directory&gt; &lt;filtering&gt;true&lt;/filtering&gt; &lt;/resource&gt; &lt;/resources&gt; &lt;filters&gt; &lt;filter&gt;src/main/filters/filter.properties&lt;/filter&gt; &lt;/filters&gt; I'd actually say this works well initially but when you have many projects and lots of deployments you might want to move to a more advanced solution and actually load properties at runtime using Spring PropertyPlaceholderConfigurer and load properties from a central location dependent on environment. This lets me use the same war file across all environments with different properties. Leads to less mistakes as well. 
Do people really avoid String for sensitive data?
I have used Play Framework successfully in previous projects and started new projects using it. Although im using Scala but from what I have seen you should have no problems using Java either. I had to wrestle a lot with the built-in evolutions in Play so I replaced them with FlyWayDB for all my DB-migration needs and has worked much better for me.
no..firefox isn't detecting java period. Everything just tells me to install java even though it is installed
Sorry. I've been fighting it's configuration for several days trying to get it to run a query. I've really liked hibernate when I didn't have to directly touch it (eg Groovy and Grails)
I have both tomcat and glassfish (in netbeans). Thanks for the help. I'll take a look at it.
do i need a tester?
-Xmx512M sets your maximum heap size to 512MB IIRC. The OOM error is a result of the program requiring more heap space. This can happen for a variety of reasons. Try tweaking the -Mmx parameter if you have memory to spare.
MaxPermSize=128M is probably not the problem here, because its only relevant to static files (classfiles etc.) to my knowledge. Did you try to start it with a higher Xmx? Update: Its working for me with the commandline described above. $ java -version java version "1.7.0_45" OpenJDK Runtime Environment (IcedTea 2.4.3) (ArchLinux build 7.u45_2.4.3-1-x86_64) OpenJDK 64-Bit Server VM (build 24.45-b08, mixed mode)
~~No, if you are storing sensitive information for a long period of time it will end up in PermGen anyway, it doesn't matter if it came from a string literal or a char[] array read in from a configuration file.~~ ~~Don't leak objects, check permissions on requests and secure your server, the JVM is secure until someone has physical access to the system and then it doesn't matter how your application platform works under the hood anyway.~~ Actually, thinking about it, only interned strings go to PermGen. Run-time objects can only be marked as "Old Generation" at highest, so the only advantage a char[] array has is when you are storing sensitive data directly in code, which is a BAD design anyway. You may not be able to blank out an immutable string, but as long as it isn't interned it will get collected eventually, and even then it doesn't matter if someone has physical access to the box to read memory anyway.
I haven't used Spring Data for JPA but I have used it with MongoDB and it's absolutely great. Check it out it seems quite easy to get going. http://projects.spring.io/spring-data-jpa/#quick-start
That's what I thought. If you have something (like a library) you don't trust running in the same JVM as you ... you have bigger problems.
&gt; [String.split() is] particularly useful if you dealing with comma separated file (CSV) and wanted to have individual part in a String array. No. Fuck you to hell if you parse CSV this way. It will break, and it will all be your fault. CSV allows for commas to be inside the records as long as they're quoted (or escaped), so a line in a CSV file could look like this: "There is only one record on this line. Because it has commas inside quotes, it is one single, unbroken record" String.split() will parse that line wrong.
Don't forget that String.split() also compiles a new Regular Expression for every call. 
JDBC template can get you a long way. I *always* regret using hibernate. Always. 
Post your project in github maybe somebody can take a look. The configuration can be daunting at first because there seems to be a lot of moving pieces. I can't comment on Sprint Data as I've never used that project, but as far as using JPA, that's an option. However, if you're having trouble configuring hibernate you're probably going to have trouble configuring a compliant java ee application server.
Eww
I would say build yourself a restful java application and then use a reactive JS library on top of that if you want it to be dynamic. This means you separate the backend api from the front end logic. An example could be Spring-Web + EmberJS/Angular JS Another good tool to get started quickly is http://spring.io/blog/2013/08/06/spring-boot-simplifying-spring-for-everyone 
Never ask for help online saying "i get an error" without suppling the exact errormessage. Also for next time: /r/javahelp (please read the posting instructions linked in the sidebar there). 
&gt; where do I go to figure this out myself instead of bothering /r/java[ Google "[java MaxPermSize](https://www.google.com/search?q=java+MaxPermSize)"? The very first hit already exxplains what it is. &gt; ..brogrammers.. Hrggh.. `this.puke()`
Yes, you're understanding is correct. And to answer your question below, the BorderLayout.CENTER part is necessary for this particular example due to the BorderLayout layout manager. I'd suggest running through this tutorial to get your feet wet with Java/Swing UI programming: http://docs.oracle.com/javase/tutorial/uiswing/ . That should teach you all about Swing, layout managers, etc. I'm a software developer by trade and have been programming in Java for about 15 years. Most of my learning came from college as well as side projects. Just keep at it, read tutorials, and before you know it you'll be quite comfortable in the language.
I really dislike hibernate too. I recommend you go with [Spring JDBC Templates](http://www.mkyong.com/spring/spring-jdbctemplate-querying-examples/) with [BoneCP](http://jolbox.com/) as the connection pool. 
`char` arrays may end up in PermGen, but they're still mutable. You can blank them out once you're done with them. `String`s, on the other hand, cannot be.
This guy is rather wrong in regards to character encodings. `String`s in Java always have the same character encoding: UTF-16. Period. End of discussion. No exceptions. Where character encodings *do* come into play, rather, is whenever bytes are *converted* into a `String` or vice versa. And yes, the `String` methods/constructors that take a `byte[]` and yield a `String` (or vice versa) do use platform encoding by default. When interacting with plain text files on the local filesystem, this is fine. When interacting with anything else (network protocols, file formats other than plain text, emails, plain text files fetched from an HTTP server, etc), the correct character encoding is probably not the platform encoding, and must be discovered some other way depending on the format/protocol (`Content-Type`, `&lt;?xml encoding="…"&gt;`, etc).
Interesting, thanks for the follow up. That was something I was worried about eventually happening.
&gt; Businesses still run mainframes with COBOL green-screen applications today. This. Business software can have very long lifespans and regarding IT budgets it [is regularly estimated that most organizations spend between 70% and 80% on maintenance](http://en.community.dell.com/dell-groups/dell_it_efficiency_metrics/w/overall_it_performance_metrics/1338.aspx). 
a character array is not ^^technically: ^^necessarily ^^| ^^virtually: ^^at ^^all the equivalent of a c string, because it is still has the length field ^^technically: ^^operator ^^| ^^virtually: ^^field , and is not null-terminated. A char[] is more like a pascal string.
&gt; I'm tired of spending over a week fighting Hibernate before I can &gt; execute a query You must be doing something very, very wrong. If it were as hard to execute a query as you're claiming, millions of people wouldn't be using Hibernate. How about you describe exactly what you are trying to do and how you are trying to do it? You might even get some more sympathy if you asked for help with more humility, instead of claiming that your problem is because Hibernate or Java sucks.
Broken link? Tried https://github.com/injustice/miner, didn't get anything. Tried base URL and got a bunch of different projects.
Actually, thinking about it, only interned strings go to PermGen. Run-time objects can only be marked as "Old Generation" at highest, so the only advantage a char[] array has is when you are storing sensitive data directly in code, which is a BAD design anyway. You may not be able to blank out an immutable string, but as long as it isn't interned it will get collected eventually, and even then it doesn't matter if someone has physical access to the box to read memory anyway.
Use TestNG, it behaves as you expect (and works as a superset of JUnit).
Using string.split() is how I've parsed CSV in the past, but I recognize the issue doing so. Do you have a better method? I found a tutorial that suggests using the OpenCSV library, but wanted to see what you thought. http://howtodoinjava.com/2013/05/27/parse-csv-files-in-java/
Sorry, fixed.
:D FTFY
I did say equivalent rather than identical. Nul-terminated is one way, length plus buffer is another... I was talking about the difference in sophistication really. A Java string is not the equivalent of a char buffer, however that buffer is implemented.
I have no problem with OpenCSV, or any other CSV library for that matter. All that I care about is that you use a library that actually knows how to parse CSV. When you parse CSV with .split(), you're not actually parsing something in the CSV format - you're parsing some bastard form of the specification that doesn't allow for escaped delimiters. Your code cannot actually handle CSV, which makes it completely useless if I want to send you arbitrary CSV from a program that actually understands the spec. (This is true for any file format, really. Unless you use a &lt;proper spec parser&gt; to parse a &lt;proper spec&gt; file, your &lt;wrong parser&gt; will fail on certain valid inputs. That is bad, and will result in a proctological visit from my boot.)
Check your extensions (Alt&gt;Tools&gt;Addons&gt;Extensions), Java is probably being blocked which is why it won't initialize applets.
I'm a newb, why is that a bad thing?
I appreciate all the responses, thanks everyone
Unfortunately, I can't claim to be an expert on this subject. I know enough to be dangerous, but I can't give you the best practices and usage patterns. I recommend reading the JavaDocs on them (including the package javadoc that both pages link), as well as this [StackOverflow Question](http://stackoverflow.com/questions/299659/what-is-the-difference-between-a-soft-reference-and-a-weak-reference-in-java). The short-and-long of it is that WeakReferences are generally going to be collected sooner (possibly as soon as it's no longer referenced elsewhere) than SoftReferences and that SoftReference caches are probably better for things that have a higher cost of recreating (such as File IO) as the cached object will have a better chance of being there when it's wanted again but won't cause an Out of Memory Error if it's not being used when that memory is needed. Also: It should be noted that the WeakReference and SoftReference objects will still exist, but the object that they encapsulate is what will be collected by the GC. 
Compiling a pattern is roughly 10x slower than testing a pattern, which is roughly 10x slower than a simple string .indexOf search. I've heard Java 7 improves the most common case though, at least when splitting a string on a single non-regex character. I think Android still does it the slow way.
+1 Hamcrest 
I have always found that I need a goal. Anyone can go through a tutorial book, do all the examples, and get a kick out of getting things to work, but when the book is done, what next. It really depends on what you want to do, so for example some of the things that interest me: * 2D java game, space based, maybe something like simcity * Interfacing with my electricity monitor to update web page with stats. * Mobile apps in android to test the water with selling them. Hope this helps in some way.
I did not write this in an IDE and there my be errors.. I did not mean for a copy paste answer. Hope this helps. So you need to make a class that holds these strings and int. Something like public class MyObject{ String string1; ... MyObject(String s1, String s2, String s3, int i){ string1 = s1; ... } } you may want to make getters and setters of make them public. to implement in your code above before you while loop create a LinkedList (since we have no idea how many objects you want) ex: LinkedList&lt;MyObject&gt; myObject = new LinkedList&lt;MyObject&gt;() &lt;MyObject&gt; tells linked list what object to expect. now in your loop you can just do this instead of Objext x..... myObject.add( new MyObject(reader.nextLine(), reader.nextLine(), reader.nextLine(), Integer.parseInt(reader.nextLine())); After the loop has completed you can access each object by using the get method ex: myObject.get(0); //will return the first MyObject you created.
&gt; In college you shouldn't be in the mindset to learn a language; instead, look to learn how to program - the language is mostly irrelevant. When you go to get a job out of college, no one actually going to care that you "know how to program" in a language that they aren't hiring you to use. They will already waste a year or two on you before you really get up to speed assuming you know the language, they usually won't even look at your resume if you don't know the language they're using. Under the assumption that "it doesn't matter what language you use you can learn to program in all of them", you should definitely choose to learn to program in a language that you can expect will be an applicable job skill. Java is an excellent choice. So it C#. But java is both more commonly taught and available. 
This is puzzling. The javadoc clearly states that the first parameter is the value you expect and the second parameter is the one you actually got. So, you’re doing it wrong because you have refused to read the documentation. That is clearly not JUnit’s fault.
I kinda feel the same way. I have taken a few courses at my university (I am at a 2 year university that does not offer much in the way of CS classes) and now that i am out of them i am stuck at home thinking "Now what?" I know people say to just program stuff, but i honestly cannot think of anything to make. I kinda feel like my confidence is slipping which is a very bad thing. I hope you figure out what is next, cause i sure need some focus too lol
ArrayList can waste or use a lot of memory. Don't take this as fact but i believe that array list when full and trying to add a new object will create a new array of objects with double the size of its last then copy all of the contents of the old array to the new. However LinkedList just adds a new object then adds it to the pointer of the last (not doubling capacity or copying data). 
Well I have this now and I called String good morning I think, but it still doesn't work public class UpFront { public static void main(String[] args) { System.out.println(findUpFront("good morning")); } public static String findUpFront(String c) { if(c.length() == 1) { String test = c.concat("???"); return test; } if(c.length() == 2) { String test = c.concat("??"); return test; } if(c.length() == 3) { String test = c.concat("?"); return test; } else { String newString = c.substring(0, 4); return newString; } } }
Why don't you try to fix a vulnerable app? For example webgoat or jpetstore or jpetclinic Also what books have you read?
As long as the systems currently being built with Java persist, there is a need for Java programmers. As evidence of this, there are still cobalt and Ada programmers out there...and they're well paid because it's a rare skillset now.
Sorta a tangent, but the number of times where == is what you want and equals() returns the wrong value are so slim... you should almost never use == on anything that's an Object. I may have brought this up before...
This does work for the most part but what happens (not sure if needed for the assignment) when you call the method with a string such as "" where the length is zero and how do you think you will fix it? Edit: what IDE are you using? or how are you running and writing your code?
Do you still need help with this?
You can go in the opposite direction pretty easily. Most cellphone providers have formula for turning a phone number into an email address. Any email sent to the address shows up as a text. However, you're asking about the other direction. Unless your computer has it's own cellphone number, I think that wouldn't be possible. In most cases, even if it has a cellular modem, it's going to be for data only. Probably the easiest way to do something like this would be to send emails to your computer. To be honest, SSH or RDP would be a better technology.
Google's Guava library has cache implementations that will use weak or soft references under the hood. They're probably worth looking into.
I had that question on a quiz. Its true. But I have more experience programming the other and I don't think I'll have to worry too much about memory. If I can fit it in before next week I'll change it though
Thanks a bunch!
You might want to add a sleep() in there somewhere, to give the processor a chance to breathe every now and then.
I'm not an expert by any means, but this guy's tutorials might be a good place to start: https://www.youtube.com/user/thebennybox?feature=watch
... I dunno. Go ask Google or Twitter.
Maybe go down the Bluetooth route
The bad part of this is that people who specialize get paid much more than people who tinker. Definitely tinker in several, but it is a very good idea to really know the ins and outs of a specific language.
Java rules the server side and enterprise software. It' may not appear trendy or hip but you can make a great salary if you know it well and there is always a demand for good java developers. So yes, it is very useful.
Wow, terrible article. Other commenters nailed the bad stuff I spotted: * [Don't parse CSV using `String.split()`.](http://www.reddit.com/r/java/comments/1ume2c/what_every_java_developer_should_know_about_string/cejnbve) * [The `substring` method nowadays copies from the source `char[]`.](http://www.reddit.com/r/java/comments/1ume2c/what_every_java_developer_should_know_about_string/cejjxmx) * [The article mangles the character encoding issue rather badly.](http://www.reddit.com/r/java/comments/1ume2c/what_every_java_developer_should_know_about_string/cejqgjs) The idea that it's more secure to storing passwords in `char[]` and then blank it out is rather bad as well, because there is such a thing as dead store optimization analysis. If a compiler or VM can prove no instruction will ever read the result of a write, then it can just eliminate that code. 
You are right, I just didn't want to throw the context of the conversation off with an edit. Hopefully I made a decent compromise with a strikethrough.
Does it have to be a text? Could it be a website?
Homie didn't mention Hadoop?
Thank you so much. You are terrific at explaining, and are so nice for taking your time. Best of luck!
*I only ask this because I am not one hundred percent clear on "this"" Is there anything else other than "this" that you could put in the parenthesis to make it work? Also, is a borderlayout always necessary for the graphics to display?
Didn't you know that it's much easier to post to Reddit to get someone else explain the doc for you? /sarcasm
I see where you're coming from, I feel like that a lot. I found the best thing to start with is "what piece of software would I like to use/have now ?" Doesn't matter if it already exists or not. Doesn't matter if it looks too hard, as long as you have somewhere to start. While doing that you may find something else instead, but as long as you're constantly looking up/ working out how to make the next step, you're moving forward. The hardest part can be that no matter how much work you put it, it's difficult to see how far you've gone.
This. Pick a small, challenging, but obtainable goal and build the shit out of it. Be open about it. Solicite feedback. Build something harder the next time.
In *this* particular example (no pun intended), "this" is the only reasonable option here. IMO, I would actually write the "myGame" class you have now as its own entity that deals only with rendering the graphics (Basically the paintComponent method). Then I would have a separate class which contains the UI construction: It creates the JFrame, creates the JPanel (and adds it to the JFrame), and creates the "myGame" class (and adds it to the JPanel). You are effectively doing that in your constructor, but it is tightly coupling the Swing UI to the rendering of your game. While not a big deal, it can be more forward thinking to keep a clean, cohesive, separation of ideas, data, and code execution into individual classes. A good example of why it might be more powerful to structure it this way is that you could potentially take your "myGame" class and pop it into an Applet and suddenly your game is working on the web. Long answer to a simple question, but TL;DR: "this" is your only option here. BorderLayout isn't always necessary, it was just a layout manager I decided to pick since it's simple. Basically, if you didn't do "setLayout" on the JPanel, your "myGame" JComponent would technically be trying to render, but still not visible. The reason for this is because the JPanel doesn't know how to "lay out" or display it's children (The location on the screen and how much room on the screen they are allowed to render in). By setting the layout to BorderLayout and adding your "myGame" as a child in the CENTER region, the JPanel now knows it should render the contents of "myGame" to fill the entire window. See this for more info on border layout: http://docs.oracle.com/javase/tutorial/uiswing/layout/border.html If you go through the tutorial I mentioned in the above post, they'll discuss other layout managers and how to use them effectively. Good luck!
leave some time for this. OpenGL is a few solid months to learn (at least), lifetime to master practice. Do you have linear algebra experience?
Why Tomcat? It's just a container.
Try making a game, it opens up your creativity and inventive thinking.
You don't really need to be "great" at java. What you need to understand is data structures, classical inheritance, basic algorithms, and how HTTP works. Learn XML and JSON lights out (they're both easy), start looking into WSDLs and SOAP. Implement a new web server in tomcat using Spring. Make sure you can hook your java code into a database like MySQL or whatever the flavor of the week is right now (Postgres, Maria?). There are plenty of places to go, but for you I would start moving toward web development with java. Almost all of the jobs out there are a full web stack (linux-oracle-java EE-spring-JavaScript-HTML-CSS). You'll need to learn all of those to a certain extent. I'm more on the front end nowadays, but I have good working knowledge of all levels of the stack. 
I find that Space Invaders is a great project. It has collision, input, simple AI, you can do a simple high score system, contact a server to read/write high scores in a database (slightly more advanced, could be a follow up project). 
OP, here are [some more resources](http://www.reddit.com/r/java/comments/1kih0k/learning_java_book_or_online_tutorial/cbphltg). for learning Java. Don't get discouraged, please.
Some more pedantry: NULL is an integer type. For a pointer use nullptr. Edit: extended comment to point out that it is pedantic. 
I know that. But that's hardly relevant when I'm commenting that "NULL terminated" is a misnomer.
I assume you and your classmates have existing and fairly competent knowledge in Java (even if you don't, give it a shot anyway, sometimes skipping ahead can be educational). Well first off I would suggest downloading the LWJGL space invaders example game, I believe this is included in the LWJGL library download. Once you have analysed the code, perhaps Google/YouTube some LWJGL tutorials, thebennybox does a pretty good job on LWJGL tutorials going all the way up to high level 3D programming. Another option would be to check out libGDX a great game library for Java built atop of LWJGL. This library supports Android and web development as well. This library will cut out some of the basics of openGL, but will allow you to make higher quality games as it has premade particle engines, font renderer, etc. As for openGL, just Google openGL tutorials and hundreds of great tutorials will be listed, however not all written in Java. Don't worry though as long as you can understand the other language at a basic level the open GL code will remain the same.
You would just use sockets now wouldn't you.
Make a visual basic gui in IP address to compile your Java enterprise beans. 
I haven't done any android at all with Java, or any language for that matter but I'm curious if it's used for gui?
http://www.theregister.co.uk/2013/01/30/oracle_java_security_analysis/
Isn't Android stuck on Java 4?
thanks for the advice guys. I'm fairly new to programming and have worked with c++ and python; however I feel much more comfortable with java. This game is nothing too serious I honestly just want to be able to put a project on my resume and I have given myself about 8 months. btw I have looked at the space invaders source code, and I understand a great deal of it aside from the openGL stuff. My original intentions were to modify it but than I had some better idea's.
Code review is key. Find a mentor who will give an honest review of your code - what was clear, what was wtf, why, and what might be improved. I've been pushing code professionally for 30 some years now (good lord) and getting hands dirty showing the work in progress to others, brought the most gains. The master will look at the code and improve your craftsmanship. The peer may provide a fresh angle and provide validation. The student will show where your code needs clarity and challenge you to show the why. Avoid the trap of waiting till code is 'polished' before letting anyone see it. You should always be willing to show code in a couple hours - just enough time to tidy up whatever was being worked on. The process, not completion, is where the learning is at. (Also helps to catch things that need refactoring sooner than later...) Take lukasbradley up on his offer of review. Tomcat is one of the standard Java app servers you will see in the field and is free as in beer. What works with it will also likely run with Weblogic, WebSphere, Glassfish, JBoss, etc. It is multiplatform and most IDEs are integrated with it. Real code needs to be managed code, so setting up a GIT, SVN, or some other code repository. A nice intro on the basics of GIT http://blog.nicoschuele.com/?p=219 . GIT accounts, where everything is exposed publically, is free - I'd go that route, since the point of this is to open it up for others to look at. Collaborating on a codebase would probably be a close #2. The real power in programming is not one wizard slinging code in isolation, but rather a team working on discreet parts and having all those parts fit together. Programming by contract, building the test harnesses to (theoretically) test that your bits will work with someone else’s. 
I am also kind of a newbie but recently I tried making a game in [slick2D](http://slick.ninjacave.com/) wich really gave me a lot of experience. I started by following [these tuturials](http://www.youtube.com/watch?v=eGOQWNtb5GU) and googeling a lot of stuff. Of course it depends on what you want to do, and slick is very old so you might want to try something new, but if your interested in making games its a great way of learning how to use multiple classes and be organized.
I'm going to recommend making a game. Even a small game. It incorporates a lot of programming fundamentals (like loops, if-statements, OOP), and can be a challenging and fun experience. /r/gamedev offers a lot of support and inspiration!
Have you looked at JavaFX 8? It has 3D support now and might solve your problem.
I actually am more interested in 2d 8 bit games. I have a weak spot in my heart for the oldschool.
I think you are a little bit confused about the definition of immutable but this actually made me think quite a bit. I think the reason that s2 has changed is because you used reflection to change the underlying representation of the string - since you haven't changed s1 or s2 the JVM might optimize to only keep one copy of the string literal "Hello World" around. When you substring it makes a new string as a copy. Some please confirm that this is the case - not 100% sure.
Because s3 is an instantiated object that doesn't depend on s1 for it's value. 
The substring method creates a new String object.
My best guess would be that s1.substring constructs a new String object, copying the data from your target, s1 and explicitly allocates that memory. I do agree that it does seem a bit odd, but I guess the substring function returns a new String(...), allocated on the heap. Meaning that the String returned is truly immutable and has its' own and only data that is not being modified by any other Strings.
I'm thinking the same thing. Being immutable doesn't mean you can't change the value of the String, however a new instance is created in the heap with the new value. Essentially, both s1 and s2 point to the same point in memory. When you modified the value using reflection, the JVM might've done something a bit funky (to optimize, I guess, as -H__H- mentioned) and changed all pointers to the new instance.
The methods the String class provides make it immutable, but if you're going to start using reflection to access private fields then obviously you're going to be able to modify the the String. 
&gt; Why does this program operate like this? String literals are stored in a constant pool. Since *s1* and *s2* are assigned the same literal, they point to the same String instance. Modification works because you are using reflection to bypass access modifiers ;). Is being able to do so useful? Sometimes it is, e.g. some serialization frameworks can deserialize an object using a no-arg constructor and ignoring *private* and *final* modifiers. &gt; Why is the value of s1 and s2 changed and not changed for s3? Since Java 7u6, substring creates a copy of the underlying character array: http://java.dzone.com/articles/changes-stringsubstring-java-7
*truly immutable* Note that there is no such notion in Java. Immutability is a by-product of class design. E.g. if you don't provide any setters and don't 'leak' references to mutable member variables, a class is considered to be immutable. But immutability is not something that the type system can enforce and immutability can be bypassed through reflection.
since Java 7u6 String.substring makes a system array copy of underlying value. You just changed the original char array (shared by s1 and s2 but not s3).
Perfect. Thank you so much for the help. I learned that my error was that I wasn't making a "link" between the Swing and my class. Now, I know how to do it. Thank you for your time.
You can use Java 7 syntax, but API-wise I think it's still closer to 6.
Interesting. Strings are said "interned" because they are stored in a common pool and reused to save memory when two String objects contain the same text. This makes me wonder what you could break using this mechanism... Create a new String with the same value as an other String used as a key or value somewhere where you normally would not have access, and suddenly you can change that other thing. An example: Map&lt;String, String&gt; params = new HashMap&lt;&gt;(); params.put("allowed", "nay"); Later : if("nay".equals(params.get("allowed"))) { scoff_at_user(); } else { do_things(); } Somewhere else : String hax0r = new String("nay"); Field field = String.class.getDeclaredField("value"); field.setAccessible(true); char[] value = (char[])field.get(hax0r); value[0] = 'a'; value[1] = 'y'; value[2] = 'e'; hehe. 
It is relevant when you claim pedantry and that "NULL is a pointer", that type of misinformation tends to cause bugs.
What is the point of literally copying and pasting [the already-answered StackOverflow question](https://stackoverflow.com/questions/20945049/is-a-java-string-really-immutable) verbatim? What do you hope to achieve? Are you a bot trying to blend in with humans?
I was going to say the same thing.
Can't agree more with you on the mentorship. It can be such a key aspect to learning a craft and getting out of the newbie rut. I feel I'm in the same boat as /r/Atein is in. I can find a new project to do till the cows come home, I can write a service in X, Y, or Z framework, but without some sort of guidance, I feel that I'll be missing something or "doing it wrong". I'm not expecting to get guidance on everything, but it would be nice to know when I'm doing it wrong and why. On a side note, I didn't see lukasbrady's post as a "hey I'll do a little mentoring", more of here is a project, do this, then expand it....without some sort of mentorship, this is the same boat that /r/Atein is already in...unless I misunderstood luka's post.
Build a full-stack web app (nothing huge, just get data from some resource, and get it up to the page so the user can see it). Try to implement something using MVC or MVVM. Do something with a complicated UI and lots of data, so you can get your head around event handling. Maybe start looking at other programming languages (like C++)...change it up a bit! Java is a great language to learn on, but other languages might focus more on certain technologies and be easier to wrap your head around. Once you have a broader understanding, you'll be able to use these technologies in Java, or other languages as well. Don't be afraid to mess around in other playgrounds.
Spring, JSF, Grails, Struts, etc. You need to start learning frameworks of enterprise applications.
Don't forget about android!
In this thread: Random dude posts that Go has problems that have acceptable solutions in Java without posting any code for either of them.
This article is a nightmare of broken English and confusion. Do not read!!
To be honest, how many languages pack anything more than the most basic data structures in the standard library? 
Follow this example: http://hmkcode.com/java-servlet-send-receive-json-using-jquery-ajax/ Post your questions here.
I think you're confusing NULL, the pointer, with NULL the #define in C's stddef.h. NULL is a pointer, regardless of the fact that C/C++98 happened to #define it as an integer (ambiguously, which is why C++11 fixed that with nullptr). It doesn't even necessarily have to be zero. Have a look at http://c-faq.com/null/index.html for more. In particular 5.9 and 5.13. &gt; that type of misinformation tends to cause bugs. What bugs exactly? Since as the faq states, "It is only in pointer contexts that NULL and 0 are equivalent" and "NULL should be used only as a pointer constant".
&gt; I think you're confusing NULL, the pointer, with NULL the #define in C's stddef.h. NULL is a pointer, You will notice that every time the c-faq you link talks about null the pointer it does so by writing it lower case "null pointer" or "Null pointer" and NULL the constant in upper case "NULL" or 0 - NULL always refers to the numeric constant 0 and never to an actual pointer, even checking a draft of C++98 it is never used in any context that does not refer to the Makro NULL. &gt; #define it as an integer (incorrectly, which is why C++11 fixed that with nullptr). It was a hack in the type system and they had to copy the same null-type concept used by Java to fix it: null is the only value of type null and you can assign null to any reference type (you cannot create a variable of type null is avoided by nullptr_t ). &gt; It doesn't even necessarily have to be zero. The NULL define, which is the only valid interpretation of NULL in a context referencing C,C++ is required to be 0. When converted to a pointer it has to be interpreted as having the null pointer value which might indeed differ.
So we're arguing about case? NULL is the C representation of the null pointer; it's hardly unreasonable then to say "NULL is a pointer". &gt; NULL always refers to the numeric constant 0 and never to an actual pointer That's simply not true. NULL is a pointer. It's only valid in pointer context, so it must be a pointer. Even if it weren't, it's not the case that it's "never to an actual pointer", since "Nevertheless, ANSI C allows the alternate definition `#define NULL ((void *)0)`" &gt; The NULL define, which is the only valid interpretation of NULL in a context referencing C,C++ is required to be 0. Actually it's not, strictly. It's required to compare to zero; but so what, that's getting ridiculously esoteric? My point was that NULL is a pointer... and the FAQ agrees. &gt; NULL should be used only as a pointer constant 
&gt; So we're arguing about case? Type safety NULL in all its upper case only glory has a numeric type and is not a pointer &gt; NULL should be used only as a pointer constant But it is defined as a number and not a pointer, which while not so evil in C (no idea about sizeof(NULL) vs sizeof(int*)) is evil in C++: void foo(int i ){printf("%d\n",i);} void foo(char* s){printf("%s\n",s?s:"&lt;null&gt;");}; foo(NULL); //calls foo(int) 
&gt; Java &amp; the JVM on the server still perform way better in most situations than pretty much everything else out there except C++ TCO is more about not blowing up the stack in recursive functions than performance. It can have an impact on computation time and memory (especially memory), but that's usually not the reason people want it. 
It was very much an invitation for some coaching, the way I interpreted lukasbradley's comment. Atein sounds like he has done a bit with the language - probably a bunch of basic single class console applications, perhaps a thick client style examples. The more advanced applications tend to be loosely coupled. Starting off by writing a web service or REST endpoint, then possibly create another web application to consume that web service. There are all sorts of options with the just web service. Is it saving information? Searching for information? How is the data is handled? Validation? Security? Testing things? There is a grand adventure waiting if Atein posts the next steps. A bit informal, but what lukasbradley is doing is asking him to start by creating a web service - and thus a basic set of requirements, reviewing it, and then off to the next steps based on what gets posted. Code review does not have to be some big formal process. Some of the best I've had were just like that - shoot me a method and lets talk about it.
I'm skeptical of this approach if it involves crossing the JNI boundary with any frequency.
haddop? how often does anyone use large frameworks?
&gt; TCO is more about not blowing up the stack in recursive functions than performance. It can have an impact on computation time and memory (especially memory), but that's usually not the reason people want it. TCO is a lot less important to Java than something like C# because: * Almost everything to really be concerned about is passed by reference in Java instead of passed by value. That's not the case with C# due to legacy support and trying to approach the performance of things like Java. Give a fool a jackhammer and they could still find a way to chop off their foot though :) * Direct recursive calls are used so infrequently (primarily iterative methods are used in libraries that people use) this is much less of an issue. * already mentioned earlier, but Java is getting the performance through other means, and a hotspot-esqe implementaion is JVM dependant. Regardless it's still a nice feature.
I just found it odd that they picked one specific container, instead of just saying "write a web service that takes JSON payloads" but I suppose a little guidance isn't a bad thing.
Pretty much. If I couldn't get the performance I needed out of native Java, I would use something else.
Make an intricate GUI for something you would actually use. Make a school planner maybe. Class times, dates, notes, classroom location, ect
Thanks a bunch!
Exactly, accurately branded. 
... and there are also people telling me not to take the exam because of that. I'm taking the exam because: 1. Self-fulfillment 2. It's free (company sponsored) 
That's not the problem. There's a huge amount of misunderstanding going on here. &gt;IE on my ... tablet, Not if you have a Xoom. &gt;a good Java browser for Android What is a "Java browser"? Depending on what you mean, either every Android browser is a "Java browser", or no Android browser is a "Java browser". Lastly, this is not the place to be asking for tech support.
..since /r/haskell and /r/programming took a swing at it
Or maybe it's simply the fact that your app doesn't use javascript, or you could have done the same thing with custom tags without using JSF. Not saying JSF is bad, saying it's not the only way to do it.
It's possible to share the screen between developers?
Are you now into submitting random SF projects to /r/java? Is the constant flow of release-announcement not enough anymore?
Try one of the other threads looking for ideas: http://www.reddit.com/r/java/search?q=project+ideas&amp;restrict_sr=on
Eghm? Easier than putting war into `webapps` and running `bin/startup`? Do other containers also make you a sandwich?
&gt; String hax0r = new String("nay"); This is wrong. `hax0r` references a different value field than the string pool's `"nay"` You won't change the interned `"nay"`. You want: String hax0r = "nay";
I don't really see the point of this.
I much prefer Apache Ivy for dependency management over Maven (which is a bloated mess). I'll also echo that REST is a better option than SOAP/WSDL unless you really need to include a schema along with your data.
Wow, thanks, didn't realise. I'll definitely check this out :) 
Well you know the year off the bat, all you need to know is that a year can be a leap year if it is divisible by 4 and not by a 100 unless it is divisible by 400 also. 2000 is a leap year, 2004 is a leap year, 1992 is a leap year. Then the amount of days in a month is 31,28-29,31,30,31,30,31,31,30,31,30,31 Now all you have to do is make test based on that info. If year divisible by 400 -&gt; leap year else if year divisible by 100 -&gt; not leap year else if year divisible by 4 -&gt; leap year else not leap year Say month is March, Day is 5 and Year is 1992. 1992 is a leap year (so Feb has 29 days) 31+29+5 = 65 I won't go further an tell you how to utilize an Array and a Switch Case Block for this as it seems like a homework assignment. 
Im not sure I agree with him on some of that but I didn't write any famous algorithms so no one is going to care.
I really dont get this: "If year divisible by 400 -&gt; leap year if year divisible by 100 -&gt; not leap year else if year divisible by 4 -&gt; leap year else not leap year"
Unless you're shortcutting an equals() implementation :) if (this == o) return true;
Make it simple by reversing the conditions for centuries: If the year is divisible by 100 check if the year is divisible by 400 -&gt; if so return true, else return false ELSE If the year is divisible by 4 return true, else return false. private static boolean isLeapYear(int year) { if (year % 100 == 0) { if (year % 400 == 0) { return true; } else { return false; } } else { if (year % 4 == 0) { return true; } } return false; }
thanks! I should be easily to integrate my switch cases for the "nth", "st" for this right?
BTW: for future, better post your coding related questions in /r/javahelp 
on my favourite UK job website (jobserver.co.uk) , searching for Haskell shows 11 results vs 2083 for Java. I think that the main reason why university and colleges now teach Java is that students are interested in getting a job afterwards. That being said functional programming is interesting and it is good to see a bit of it at some point, but lets be realist, most developers will never use a functional language in their professional life.
I work in a big UK media company which does a lot of dev in-house with hundreds of Java developers. We upgraded 2 years ago from 1.4 to Java 5. We had the opportunity to upgrade to Java 6 with the upgrade of our app server, but it was decided to stay on 5 to minimize impact. So don't worry too much on which version of java you go for :) Plenty of places are years behind on the technology stack...
head first books are pretty good. but oracle has some pretty good free documentation and tutorials online too which are very frequently ignored: http://docs.oracle.com/javase/tutorial/getStarted/index.html
Good for them. Haskell is typical cheapo gnu open-source linux cli junk. Haskell has no gui. You are limited to making a dos window cli program, which has little practical use, maybe an 80's BASIC number guessing game. Or the Links Console mode browser. Oh, and having a dos window open prevents my monitor from going into standby mode. You can make ffi into a gui written in c++ like wxwidgets. So you need to be an expert at c++. But ffi only works for c, not c++, so you need to make a c wrapper around the c++. Then you need to ffi with compiler pragmas and c header files and gcc command line parameters etc etc. There's a bunch of peoples ffi's for various gui kits online you can hunt for to download. Then you need gcc and msys and make. Then you ./config, make, make install, and see if it works (fat chance). And if it's gtk2hs, you need the 20 gtk .dll files (12mb). It would be nice if the best of the many gui ffi's came with the haskell installer already set up and ready to use. Same goes for sml, ocaml, lisp. With java you have a gui system built in so you could actually do something practical with it, like a spreadsheet or a text editor. Or a button that says 'click me' and a label that shows how many times it was clicked, which is impossible to do in haskell. A win for 'solid mediocrity'.
I agree that it's probably one of the reasons. But is the goal of a academic *computer science* program to train people for companies or to be scientists (who could end up in companies)? I think we should educate students to be good and critical-thinking scientists. Teaching them Java may or may not be a side-effect. Personally, I think a language such as Haskell is a better start, since it encourages students more to reason about the correctness of a program.
Well if you're ever interested in taking the project - just ping me.
No such thing as simple Java. :)
&gt; I think a language such as Haskell is a better start, since it encourages students more to reason about the correctness of a program. I get what you're saying but still: how can anyone say that Haskell is easier for someone struggling with an if? Because a good math education is supposed to be a given?
I used them for the bonus programs - they had MBOs for improvement, so did the older version one year, and then 'upgraded' the next. From a practical standpoint, lots of IO changes, so I might think about testing with what you know now and then focus on just the changes for jdk 7. The programmer one was challenging. It really requires a deep understanding of what is going on, with lots of devil in the details type stuff. Good, clean code - that is easy. The questions based on wftbbq code that should be told to go home, you're drunk... a good bit harder. If you have JDK 6 study materials, go 6 and do the upgrade test later. Was it worth anything? Hard to say. For my employers, it was just a checkbox. Technical interviews would end up skipping the syntax questions if they knew you had it (which could be a mixed blessing). I'd say I'm a more enlightened developer, having spent nights and weekends delving into the language. It will force you to work with APIs that you probably never use on the job.
People major in CSC for different reasons. With your point in mind CSC programs should probably have different tracts for students with grad school aspirations versus careers in the private sector.
Stopped reading here: &gt;sadly, they switched to java Just more of the anti-java circle jerk using tired arguments over a decade old. Go figure that reddit is all over it. What is the newest fad language here?
Totally full of shit. Certification questions are designed to show that you understand the language beyond just studying a book. Even more, let's see who wins a job between me and you. I have ocpjp7 and you have nothing. The ocajp7 is relatively challenging and it is only basic topics. I suspect that most experienced java programmers would fail the ocpjp exam pretty badly. I do like how he talks a Photoshop certification as if it is even remotely similar to a programming certification.
The problem with doing 7 instead of 6 is that 7 places a requirement of getting the OCA first. That is exam 1z0-803. If you get the ocp 6 first then you would have to do the upgrade, however. Either way you are looking at 600 bones. Or rather, your company is.
1) Some students start with 100,000 lines of C/C++ experience some with none (for example in University of Cambridge). How can you possibly try to teach this class Java and be fair? You simply can't. On the other hand chances are none of them has any experience in Haskell/ML/Lisp or whatever. 2) Computer Science course have nothing to do in employability. The things industry take for granted are mainly developed in academia across all sciences but it's especially the case in CS. CS courses are about innovating. You could argue Computer Engineering courses are not that way but that's not what's discussed in the article anyhow. 3) Java is ridiculously verbose, enterprisy language that pretty much everyone hates but actually gets shit done. There is no way to introduce any significant portion of Java semantically or practically in an introductory course whereas you can introduce a good portion of Haskell/ML/Lisp (especially Lisp). So it is more suited for teaching. 4) Teach a person how to program an algorithm in a functional language and he will understand the point of the algorithm and why it works. Teach it in Java and they will make unit tests (or manual tests) pass and handle edge cases. Edge cases are extremely important in Software Engineering but not as much in Computer Science and in an introductory course when you show merge sort you try to convey the idea behind merge sort not what happens nothing else.
Make a monopoly board game. Make a collection of card games driven from a single point by selecting which you want to play. As you progress, try to network them so player two can connect any play remotely.
People voting you down for truth.
Hmm. Sounds like proprietary code and algorithms. He'd be burned at the stake for posting the code... His issues stemmed from two things: 1) the lack of generics leading to a lot of duplicate, boilerplate code. **a know deficiency of go**. One which the community is pretty stubborn about. 2) the fact that go is relatively new and doesnt has the mature, optimized code base that java does. It was simply a case of picking the wrong tool for the job. And why he automatically hammers ruby in there has me dumbfounded. 
Dijkstra has a point - some of the early coders will, undoubtedly spurred by the marketing, already be proficient with Java, which will lead to a chasm between students who know Java and those who don't. Better start with a more esoteric language that will put students on equal footing. As a beginner's language, Java is needlessly complex. But this also applies to Haskell. Besides, Java and Haskell have more similarities than one might think, if you look at the wider ecosystem. Java 8 promises a reduced form of lambdas, and I recently even found a QuickCheck clone that works with JUnit theories and doesn't even need Java 8. I say, students should start out with Python (sans classes, metaclasses and such), Scheme (sans continuations), Eiffel or some other simple language, and only use the subset that is needed to teach the basic principles, introduce complexity theory, recursion, problem decomposition, maybe verification and top it off with building a small interpreter. CS students study to become computer scientists. Not developers (though granted there is a measurable overlap). A Java course can then teach the skills that Java developers need.
Take a look at the free [Java for Complete Beginners](https://www.udemy.com/java-tutorial) course over at [udemy.com](https://www.udemy.com).
Thanks! I'll look into that.
I believe the point being made is that both ponzi schemes and memory allocation schemes work perfectly if there is infinite resources. People in the former case and memory in the latter case. Reality is that both are finite.
Look on youtube for [speedcoding java](http://www.youtube.com/results?search_query=speedcoding+java&amp;sm=3) most of the programmers have their sourcecode in the description or comments. Some quite awesome stuff there.
Cool, thanks!
There's lots of open source code available on [GitHub](https://github.com/) It's also extremely popular so there's not shortage!
[Java Video Tutorial (sourcecode in the description)](http://www.youtube.com/watch?v=TBWX97e1E9g&amp;list=PLE7E8B7F4856C9B19)
Owning both, Head first is better for learning from nothing. All in one is more of a reference (actually states as much in the sub title). They both have a nice style of writing and are easy to read, but I'd go with the head first book to start out. :)
This seems a bit like a plug for another IDE. The article gives no benefits for using it while only talking shit on Eclipse. Granted it may not be the best, but articles like this are laughable at best.
Agree completely. And whatever complaints you may personally have about Eclipse, it is still the IDE used by most Java developers ... so if you want to have a job, you better find a way to make it work for you.
Forget the details with the .txt file , you would do it different anyway. Your core problem is the way to send an SMS to the computer. Don't you have mobile internet and some messenger program, for example ? You could make your computer reachable via jabber/irc/facebook message/... etc pretty easily. If not, this hobby project would be a bit too much. You would need a phone hooked up to the computer or some kind of SMS gateway ($$). I assume this is not feasible for you. 
&gt; It is the language with the most job postings Really? I definitely think I see more in .Net, although I am including web and desktop programming in the count. I'd say the listings are 1. .Net (all flavors) 2. Java 3. c/c# 4. other web languages (php, ruby, python) But the point is that Java is only one step away from most of those languages. If you learn Java, you should be able to quickly adapt to a job in any of the top 3 paradigms (whatever the actual order).
OutOfMem**e**oryError does not exists, that's why!
Seriously, I can't understand all the hatred against Eclipse. Yes, it is starting very slowly, but: how often does one restart an IDE? Yes, it may be overwhelming at the beginning, but nearly all development tools are. I have tried other IDEs but somehow I find that Eclipse most fits my way of coding - but that is just from a beginner's point of view. I can't judge about the professional environment or other operating systems than Windows (7 &amp; 8).
The argument he tries to make is that using IntelliJ makes him more productive than using Eclipse but doesn't say why. I know developers that use Eclipse, IntelliJ, NetBeans, VI and Emacs and at any given time, any one of them may be more productive than the others. Mostly what I see is that, with the exception of needing a specialty capability in the tool (like a GUI designer for example), the most productive are the ones most comfortable with their tools, who use them by reflex and don't have to think about it. I'm personally an Emacs user but I have watched some other folks that are VI users who know their tool so well that when they worked it was like the code just appeared. 
This is the line where the comparison breaks down: &gt; It’s telling your application that you have a infinite amount of memory so go ahead and just use it. It does not, every successful new only tells you that it could get enough free memory for your current object. This is the same in most languages and the application only ran because it fell into the worst case of having just enough memory to "work". A ponzi scheme needs a rapidly growing amount of resources and has to grow faster and faster. If you want a "ponzi scheme" that gives the illusion of infinite memory try memory allocation on linux. The default setting (memory overcommit) lets you allocate as much as you want (spread over multiple allocations) and will crash hard the first time you try to actually write to the memory (the kernel tries and fails to map your allocation to an unused physical address). 
Java doesn't target the web??
I prefer the person who can say "look at all this things I made" as opposed to the person who can say "look at all these things I memorized"
This was one of the first google results and I've done this myself. This is also assuming you're using the Swing API (if not I suggest doing some google searches of your own) http://forums.devx.com/showthread.php?151801-Fullscreen-BorderLess-Window-Form&amp;p=453317#post453317
Sorry, I should have been more clear. I run Java on my pc and have no problems accessing my work page. When I try and use IE on my tablet, the page won't load. All I get is a Java error message. I've tried downloading Chrome, Firefox, and some other 'java' related browser on my Xoom, but to no avail. I'm wondering if I'm screwed in being able to access my work site from my Xoom. 
Sorry. My mistake. I wasn't really trying for tech support, I just thought r/java might be able to make a good suggestion for an app. Obviously I'm a little more than tech-stupid, but I didn't mean to try and get free tech support. Just suggestions to what people here prefer.
Ooh forgot about MacOS. You may run into some issues here; I think I threw out the code that had it kind of working... May want to try setting the size to your display resolution after setting the window to be undecorated. You may have to invoke some MacOS specific code to get the effect you're looking for. The MacOS windowing system is REALLY picky. 
About 6 or 7 years ago I started with "Beginning Programming with Java for Dummies" then moved to the All in one Desk Reference. After that I read the Dummies C++ reference. They are very thorough, explaining the "why's" and meant for beginners. After you learn a couple languages, you can start to move to the books that assume you have past experience.
javascript is not the same as Java. I think you might be confused
I'd take a stab at researching how to make native MacOS system calls to the windowing system. It's really picky.
You may want to rephrase this, 'javascript == java' is a long running mistake that provokes extreme ire in the hearts of programmers everywhere. It caused the great flame wars in which my grandfather and my grandfather's grandfather both participated in. This steel fire of anger which burns in the heart of those who see this mistake is enough to rekindle the flames of one the Balrogs of Melkor. Long will live the d͎̳a̴̜͈r̻̫͢k̨͕n̠e̬̰̲̗ş̪̝s caused by the ire of Me̸̗̭̣̺̖l̬̼̞k̞͕̰͝ó̹̟͍̦͓̬̰r̼̤̲̖͖̥͕'͎s͈̼͉̻̯͝ s̩͕̠͎̯̭̘͡͡e̢͚̜̱͓̠̖r̢̨̥̖͇̤̺͖̱͎͝ͅv̲̗̝͘͢͞a̸͈͈̥̫͉͖̹̰ń̵̪͎̠͕̙̜̥͉t͕͚̖̰̫̰̫. I̟̟̯̼͘͠ ͇͙̲̦̤͍̱C̡͍͎͟͝A̪̥̠̖͓͚̕N̢̗͚̙̘͓̲̝̭̠͟N̮̪͕O̸̱̘̭̖̘̬̥͖T̙̞̮̝͙͖̙͖ ̶͈́C̵͉̖͚͓̮͟O̧͕̗͓̪͜N͏̵̱͎͠T̴͓͙̗̰̗͈̀A̙̻͕͇̩̹̪͞͞I҉̤̙͈͈̪̰͇N̫̯̺̯͎̕͜ͅ ̴̞́Ḫ̸̢͉̘̦̣I͎͘͜͝S̵̬͚̥̻̱̻̤ ̖̭F̛̟͚̺̼L̷̹̬̮͝A̠̬̳̜̦̟͢͠͝Ṃ̷̨̛E̴̶̯͉̲̣͎̦͙̻S̭̱͜͞.̵̨͓͜. H̶̵̳̞͎̩͓ͯ͆̑̏͒ͪ̏ͨ̐ͫ̀͐͐ͣ͑̽͛Ę̧̙̝̹̯̪̱̜̺̪̩̹̹̘̜͉̳̳ͮ̀͊̅̽͛̔ͧͣ̇ͪͫ̋̈́̾̕͟ͅ ̶̧̜͔͓̪̗͇͎͇̥̣̈́̓̽ͨͨ͌ͦ̀̋ͮ̚̚Ç̴̸̱͕̪͔͔͚͈̭͈͍͖͍͖͕ͥ̏ͭ͛ͧ̋̂͊̃ͩͯ͋̾͋͐ͨ̍̔̀̚O̬͎̺̮̟̱ͣ́ͪͧ͘̕͠͝Ḿ̵̶̝̟͖̬̾ͤͫ͛̆ͫ̏ͫͣ̆̄̀͐̚͞͡͞E̶̳͚̺͕̜̝̤̮̙̼̗͇͖̪̭͉͒̑ͣͩͫ͒̅͛͒̑͜ͅŚ̴̔͗̈ͦ̄ͣͭͥ́͜҉̡͖͍͖̻̫̫͔ So, yeah, be careful with your wording. Also, what game engine are you using?
Well, regardless of where you go, or whoever helps you, we're definitely gonna need more info.
What is the work site? Does it actually use Java? How do you know? Also, you don't have IE on your tablet.
Javascript is not the same as java, and your request is really really vague.
and so it begins...
May I ask why you didn't like Head First Java? That's how I learned, and three years later as I'm writing shaders for a Java based rendering engine I can honestly tell you it does a solid job of teaching the right concepts.
Any suggestions for a newbie?
Embrace it. When you think like a coder you become more knowledgeable than all the video tutorials on the planet Edit: grammar 
Y̛̗̭͇̰o̤̬̤̠u̡̫̫͈̬̰͕̺'̯̞̪́ͅr̸̙̰e̳͖͈̣̯̼͎̕ ͉i̼̼̩̪̺͍̳n͍̦̳͙̣͍͡ͅ ̠̜t̮̠̦̻̣h̢̫e͙̯͔̻̥ ̜̣͟w͓̹r̲͞o҉̠̗͉n̯͠g̜͚̱͉̖͠ ͚͕̫̙c̫͟h͔̰̱͍͈ͅͅa̭͔͓n̞̯nͅe̢͙̲͇̣̩̖͓l̼̻͢,̨̰̦̗ ͔̩̪b͕̼̹̯͓͜u̡͖̙̦b̦͈̺͖͜.̵̱͍̙̭͉̬̙ ̠͉̯ T̛͎̯͇̪͓r͡y ̢̥͎̘͎͇̯r̤̦͙͠/͈̱͎̱Ja̹̤͈v̱͕̪̘̭̫̕a̕s͉̜c̸̰̠͕͎̱̣r͇͍̼͟i͈̦̲̪̞̥͉p̢̳t.͎̫̮̭̗̺͞ I͘͟ hờpe̡ ͢͟M͜͝e̡̕ĺ̸̨k̢̛ơr͜ ̶g̨é̡t̶s͝ ̴̛́y̧̢͢ò̧͜u̡̢.̵̧ ̧̕I h͘o̴̷͠ṕe̢̕ ͟͠͏y͏͢ó͟u'͝v̵͘҉e͏̸ ̷̨leá͘rń͜e͡d̕͜ ͠͡y̕ou͘͢r̶̶ ̡̨l͡e̶s̷̢so̴n̷̶.̷͘͞
I have to apologize again for being tech-stupid. The browser on my tablet just says "browser" and has the pic of the globe on there. I tried downloading firefox and chrome, to no avail. Unfortunately, I'm not allowed to put anything related to work in a public forum, but my computer does a 'checking java' every time I load the page up. I'm sorry for all the confusion, and I completely understand if there's no way to help me figure all this out. I'm just grateful someone was willing to give it a shot.
Check out Starford's free programming 1 class, it's taught in Java. http://see.stanford.edu/see/courseinfo.aspx?coll=824a47e1-135f-4508-a5aa-866adcae1111
What the hell is the double arrow button?
I'll keep that in mind. 
You've asked the same thing [yesterday](http://www.reddit.com/r/java/comments/1ur54g/which_do_you_guys_recommend_to_the_absolute/)...
Your replies lead me back to my original comment. Your worksite is using a Java-Applet which **can not** be executed on Android. As I have said before, Android uses Java, but not the full Java set. I really think that whatever you will try, you will be out of luck.
What are the use-cases for your mapping project? When/Why would I want to use it?
As my first link explains (but maybe not clearly enough), the meaning of `volatile` was changed in Java 1.5. You may have seen older materials.
When was it ever called 1.6? Sun changed the versioning already when releasing Java 5 instead of 1.5. 1.4 was the last release using the major.minor version number. Edit: Yeah, yeah, I get it, they are still using dot versions on the command line. But that's the point, they are still doing it. Meaning OPs question still doesn't make sense.
I think the issue is that Sun and now Oracle use it differently for build versioning and external documentation. All the marketing/documentation/etc says Java 7. Yet, if you download the package or go to your terminal and type java -version you still get something like 1.7.0_45.
Marketing!
*A bit from linked Wikipedia article about* [***ANSI escape code***](http://en.wikipedia.org/wiki/ANSI_escape_code) : --- &gt;In computing, **ANSI escape code** (or **escape sequences**) is the method of in-band signaling to control formatting, color, and other output options on video text terminals. To encode this formatting information, it embeds certain sequences of bytes into the text, which have to be interpreted specially, not as codes of characters. Although hardware text terminals have become increasingly rare in the 21st century, the relevance of this standard persists because most terminal emulators interpret at least some of the ANSI escape sequences in the output text. One notable exception is the win32 console component of Microsoft Windows. --- [^(about)](http://www.reddit.com/r/autowikibot/wiki/index) ^| *^(/u/andrew_ie can reply with 'delete' if required. Also deletes if comment's score is -1 or less.)* ^| [^(commands)](http://www.reddit.com/r/autowikibot/wiki/commandlist) ^| [^(flag for glitch)](http://www.reddit.com/message/compose?to=acini&amp;subject=bot%20glitch&amp;message=%0Acontext:http://www.reddit.com/r/java/comments/1uuvqo/clear_terminal_screen_linux/cem0uu6)
Have you tried setting the property [-Dapple.laf.useScreenMenuBar=true](https://developer.apple.com/library/mac/documentation/java/Reference/Java_PropertiesRef/Articles/JavaSystemProperties.html)? 
It went: * Java Version 1.0 * Java Version 1.1 * Java 2 Version 1.2 (this was the first release that split java into J2SE, J2EE, J2ME). * Java 2 Version 1.3 * Java 2 Version 1.4 * ~~Java 5 Version 1.5~~ Java 2 Version 1.5 (aka J2SE 5.0) * Java 6 Version 1.6 (The terms J2SE, J2EE and J2ME were changed to Java SE, Java EE and Java ME respectively) * Java 7 Version 1.7 * Java 8 Version 1.8 The Enterprise Edition is still commonly referred to as J2EE, despite Sun dropping the Java 2 title after version ~~1.4~~ 1.5. edit: formatting edit 2: Updated Java 1.5 and J2SE titles to reflect comments from Konrad and thinksInCode.
They are 100% the same thing. Breaking change was java 1.5 (5) because it introduced generics support, collections support etc. Modern java is &gt; = 5. There were mainly syntactical sugars in language in versions 6 and 7, no real change.. Another (older) breaking change was java 1.2. All java from 1.2 can run (with simple recompile) on any modern java JVM. Upcoming version java version 8 will be again "big change".
What a crazy world we live in. 
This deserves a link to the best use of zalgoised text ever: [parsing HTML with regex](http://stackoverflow.com/a/1732454/346216).
I think usually when something is version 2.0, it signifies a radical redesign and a possible rebranding. Usually indicates rewriting the initial base design instead of adding on features. So currently we have release version Java, indicated by 1.x. Since 2.0 is usually a different base, anything between 1.0 and 2.0 would be just one singular version of Java as we know it, (with added features along the way), it's safe to say that 1.6 is the 6th version of Java as we know it. Edit* Yes, this was an uninformed guess, but could you please tell my why my theory is wrong, instead of just downvoting?
I found head first to be too hokey and distracting of the core concepts. 
So, a ham and a hamster are the same thing, too?
I don't really know. I just kinda made it for fun. 
I was going to point out the SunOS/Solaris thing.
 % java -version java version "1.7.0_45" Java(TM) SE Runtime Environment (build 1.7.0_45-b18) Java HotSpot(TM) 64-Bit Server VM (build 24.45-b08, mixed mode) 
&gt;"Haskell is typical cheapo gnu open-source linux cli junk." Well, at least someone said it.
*A bit from linked Wikipedia article about* [***Volatile variable***](http://en.wikipedia.org/wiki/Volatile_variable) : --- &gt;In computer programming, particularly in the C, C++, C#, and Java programming languages, a variable or object declared with the **volatile** keyword usually has special properties related to optimization and/or threading. Generally speaking, the **volatile** keyword is intended to prevent the compiler from applying certain optimizations which it might have otherwise applied because ordinarily it is assumed variables cannot change value "on their own." --- [^(about)](http://www.reddit.com/r/autowikibot/wiki/index) ^| *^(/u/southern_cross can reply with 'delete' if required. Also deletes if comment's score is -1 or less.)* ^| [^(commands)](http://www.reddit.com/r/autowikibot/wiki/commandlist) ^| [^(flag for glitch)](http://www.reddit.com/message/compose?to=acini&amp;subject=bot%20glitch&amp;message=%0Acontext:http://www.reddit.com/r/java/comments/1ume2c/what_every_java_developer_should_know_about_string/cem4emu)
SunOS 4.1.3 forever
Someone in marketing thought Java 2.0 would get people excited. In software development, there are 2 version numbers that mean anything, 1.0 by convention usually means "first version development lead doesn't think is a piece of shit" and 2.0 usually means "I threw away all the code I didn't think was shit, because I found out it was shit, and I've rewritten it to not suck; OR now it's pretty." depending on who picked the version. Every other version number means every commit message is "bug fixes". /cynical
From what I can [see](http://docs.oracle.com/javase/7/docs/technotes/guides/jweb/deployment_rules.html), I don't think you can use something like an ip mask... You might need to add each ip individually. You might also want to check for the new [Exception Site List](https://blogs.oracle.com/java-platform-group/entry/upcoming_exception_site_list_in) in the next release. Might be easier to configure and deploy if you are lucky ? 
Thanks this is exactly what I needed.
Yeah - saw that typo today, my apologies!
Reboot. Then type path at the cmd prompt to verify. 
You either did not get the JDK or you set the PATH wrong. Double check your spelling and make sure there is a file called "javac" in the bin directory you specified.
I checked the bin file and there is a file there named javac. I did download the JDK file on oracle's website, under this heading Java SE Development Kit 7u45. And I checked the path in cmd prompt and it returned what I had entered, which was "c:\Program Files\Java\jdk1.7.0_{xx}\bin". I left the directory defaulted when I installed. Is that the incorrect path? Then why would java work but not javac?
I did install JDK, specifically Java SE Development Kit 7u45.
I tried a reboot, then I checked the path, it shows up, but still only recognizing java, not javac. Thanks!
I thought it was about the same as here at the moment. Anyways, I think feedback might have improved if OP would have commented in the thread? Also: thanks downvoters, please notice that I was merely stating a fact. 
did you enter the path with {xx} or the version number? like the following "c:\Program Files\Java\jdk1.7.0_45\bin" close and reopen any CMD window that you are using and try again. 
I did enter the path with the {xx}, I'm changing it right now. edit: If I could I would give you another upvote, thank you. I wrongly assumed that the {xx} was a variable that changed in case of an update. Am I right to assume that I would have to change the path in the event of any upgrade?
I used it little until Solaris 7 (SunOS v I don't remember). They had these thin client blades that you could rig to any number of screens with X clients on each. It was fantastic. You could rig them in lots of display configurations for multihead or run them individual. I liked it a lot!
im quite late to the discussion. but if you care about performance you can write stuff so much better than that trove map, without a debugger and other java features (like stacktraces) it wouldn't be possible to do so in a reasonable time.
You'll be updating it, but you'll rarely need to update the JDK. There's a program called [Rapid Environment Editor](http://www.rapidee.com/en/about) that may be nice to make the process easier though. It lets you edit the Path in a more intuitive way. 
Did you look in the folder for javac?
Both of these things barely even relate to the problem posted.
This has absolutely no relation to Java other than it's developed it in. This would be the same as posting a minecraft gameplay video in this subreddit. 
Nice idea, can you quantify the difference? The approach taken in the article is the same one employed in JDK NIO native code(i.e accessing the fields via the field id), so I wouldn't worry too much about those fields disappearing and even if they did it's a minor fix to get the code going again (you could get the field names from configuration if needed to eliminate concerns about renaming).
Can you quantify your concern in this context? the JDK is already crossing the JNI boundary with NIO at the same frequency.
An inner class is associated with an **instance**, so it can't have any static members. Unless your inner class is static (public static class Inner), in which case you **can** use static members. But then you won't be able to access Outer's non-static properties. It's basically one or the other. Either your inner class is static, and then it can be referenced outside the outer class and use static members. Or it's non-static, in which case it's bound to an **instance** of the outer class. Edit: useful link: http://docs.oracle.com/javase/tutorial/java/javaOO/nested.html 
minecraft was alredy written in java
Pretty awesome man. Did you code this yourself? I'm still learning the basics but can't wait to attack some game code.
It looks alot like http://www.terraria.org/ :) 
Definitely check out this page. http://www.zetcode.com/tutorials/javagamestutorial/ It has source code for games like Tetris, Pacman, Breakout, etc.. Don't forget to download the images in the zip file too or else the games won't run once compiled.
Basically static means available without instantianting a class. If it will be inside inner class, outer class have to be instantiated first. And we did not want that.
Just to add to your theory about two version numbers that matter... Most software projects use a 1.x numbering until they're ready to throw out everything and do a major overhaul. (I'm on several projects right now that I hope will make the leap to 2.0 soon!) An example of this in Java is the EJB 2.0 specification which is an entirely different animal from the original. Sun held onto that same 1.x numbering until someone admitted they'd never throw out the whole thing and start again. At that point, you might as well jump to 2.0 and pretend it's all new. Some languages have even done the leap forward more than once. Perl 5 bears little resemblance to Perl 4, and Perl 6 is a whole different language. (Which unfortunately will never be finished.) By making Java 2 be a fake, reverse-compatible version, they avoided that kind of mess. Python illustrates the problem with a real full-version leap. Python 3 is different enough from Python 2 that lots of projects aren't bothering to make the leap.
Jprofiler... Paid. The best
one thought we have is writing a "dumb" module in openCMS, that hits a simple API that I write that then connects to the java backend, where the work is done.
&gt; An inner class is associated with an instance, so it can't have any static members. Why not? It isn't really the inner class that's associated with an instance but objects of that class. The class itself is solitary and unattached to instances of Outer. What would go wrong exactly if Inner had a static member that operated in the exact same way as a static member of the Outer class? 
The quickest/easiest way is to know another similar language (like C# or any curly brace and semi-colon using language). If you already know a language like that, moving to Java will be pretty easy and fast. If you don't, then there's really no fast/easy way. Learning to program takes time, lots of time, regardless of language. Sure, you can learn some syntax very quickly, but chances are your code will be utter crap for the first few months and will slowly, marginally get better. There's basically no way around this until humankind invents a Matrix-style "stick a thing in my head and teach me Kung Fu" machine. Either way, I'd start [here at the source](http://docs.oracle.com/javase/tutorial/). Scroll down to "Trails Covering the Basics" and start from there. Edit: clarifications
I enjoy dissecting prewar item code a lot. I find it helps me to learn the concepts. 
What if a Java 2.x release used a JVM which wasn't backwards compatible? Change byte codes, inline objects from the get go, variable array index sizes, etc. 
Yeah, no shortcuts here; It took me 2 Computer Science classes that used Java and a year of Android development and I still feel as though I'm barely competent. That being said, learning doesn't have to be incredibly painful if you're willing to put in the time. A fellow [Redditor](http://www.reddit.com/user/holyteach) is giving away the first 16 chapters of his Java Instruction book [here](https://learnjavathehardway.org/) for free - it looks really good. Lars Vogel has some good tutorials: [Vogella Java Tutorials](http://www.vogella.com/tutorials/java.html) - I've learned quite a bit from his Android lessons. Community can be helpful: [/r/learnjava](http://www.reddit.com/r/learnjava) The Oracle Java tutorial echosa linked to has always been considered one of the best places to start The fastest way IMO is to set aside time every day to do it, and don't skip out on it because it's boring or too hard at times. Thinking of problems and then solving them with Java is an excellent way to learn by doing.
quickest way is to watch thenewboston and spend all your free time watching and following his tutorials. spend at least 4 hours a day watching his tutorials and you will have basic knowledge withing 2-3 weeks. But you have to stick to it, 
A quick look into the OpenJDK source code would suggest that is indeed the case. I'm not arguing about JNI calls cost, just that in this particular case you are going through JNI in any case. 
&gt; Java (foolishly, in my opinion) allows you to reference a static field from an instance variable Foolish and misleading indeed. &gt; I think the decision was made because it isn't really a necessary or important thing No, the decision was made because it just doesn't work otherwise. There is nothing to be gained from having static members on an inner class. I repeat: nothing. An inner class isn't a "normal" class. It **only** exists within the scope of the current **instance** of your outer class. As far as the rest of the world is concerned, it doesn't exist at all. Because its lifecycle is coupled to **the instance** of the outer class, having *static* members is meaningless. Those static members would only exist for that instance, and therefore not be *static* in the usual sense of the world. It's best to think of a non-static inner class in the same way you think about an anonymous class. It only exists briefly. It's ephemeral. 
No it's not. The class is **not** "unattached" to the instances of Outer. It's very much "attached" to the current instance of Outer. Otherwise, there would be no point to having an inner class. An inner class has access to the outer class' fields. This can only happen by means of magically making the inner class part of the outer class. A static inner class doesn't have this magic, but it gets its own piece of magic, namely that of being accessible from outside of your outer class.
&gt; No, the decision was made because it just doesn't work otherwise. I gave you an example of where the JLS explicitly allows it and it does work. You can try it out yourself. &gt; There is nothing to be gained from having static members on an inner class. I repeat: nothing. This is a matter of opinion, but there is something to be gained: keeping constant variables in a separate scope. &gt; An inner class isn't a "normal" class. It only exists within the scope of the current instance of your outer class. This is an illusion. An inner class is a normal class. It has a hidden parameter in the constructor that passes a reference. It can exist just fine outside of the scope of an instance of the outer class. Try it out: public class InnerTest { public static class Outer { public class Inner { public static final int n = 5; public void test() { System.out.println("n=" + n); } } } public static void main(String... args) { Outer.Inner a = new Outer().new Inner(); a.test(); } } EDIT: Add this to main() to further show it's possible: System.out.println("Outer.Inner.n=" + Outer.Inner.n); 
Yes, everything was done by me, Thanks :)
As Ucalegon666 said, an instance of an Object defined in an inner class is attached to the instance of Object defined by the outer class that contains it. Remember the syntax for instantiating a non-static inner class B in outer class A from **outside** of class A is as follows: A a = new A(); A.B b = a.new A.B(); You **cannot** create a non-static inner class independently from its containing type. An inner class is an inner instantiated type of the outer class by nature, thus it doesn't really make sense for it to have static members. It's also completely meaningless because you could just put the same code a couple of lines of code up in the outer class. If you want the inner class to behave independently, basically act more as a convenient way of defining a new class type without a new compilation unit, mark the inner class as static. Then you can give it its own static members.
Yes. Without them Java would be a completely impractical language.
Or not :) Ever read "clean code", one class per file is the golden rule. IMO if you have to use a class within a class, you need to redesign your software.
Do you mean commenting within code or more like overall documenting overall methods and classes? You can have a look at the physics package of my graphics library on GitHub. If I remember correctly, it's fairly well commented/documented. https://github.com/bgroenks96/2DX-GL/tree/master/2DX-GL/x2d/bg/x2d/physics I honestly can't say the same for every other part of the project though :X
There are practical uses for inner classes, like the builder pattern.
Again, embedded classes aren't need to facilitate the builder pattern. Of course, they do aid in class hiding, but the same can be achieved by using name spaces, and internal classes.
I guess you haven't been using Java for very long. Go take a look at some big libraries like Apache or even the Java standard API. There are a lot of practical situations where inner classes are a good, if not the best, choice of design. I could understand this argument for static inner classes, although I would still have to disagree.
you again? http://www.reddit.com/r/java/comments/1ups5k/is_a_java_string_really_immutable/cekizsa https://stackoverflow.com/questions/21019208/why-we-are-restricted-to-declare-static-member-variable-in-inner-class-in-java
Yeah it's definitely not the easiest language to learn, although in the end, the specification is pretty clear and the syntax/grammar is clean. That's one of the reasons why it's so popular. Once you get the hang of programming (if that's the boat you're in), you'll start to master writing good Java code quickly. I think the most important thing is to focus on understanding Object Oriented Programming concepts. This will take you really far in understanding Java as a whole.
-&gt;
Nah, their bad. No help in readability, no help in maintainability You're in the middle of a source file, and like, what class am I in? You're see a class used, but can't find the source file. You see a class that is used, and think, cool I want to extend it nad use it my other class... Oh no I can't because it's embedded. Just because big popular packages use them, doesn't mean they are a good idea. Anyway.. This has been interesting..
&gt; I'm fairly certain that the JVM treats inner classes literally as "internal" instances of a given Object. I think it even stores it in the same memory space. Inner classes are treated like any other classes. Their constructor just has an extra parameter that takes a reference to an instance of the outer class. From a language perspective, the only difference is that they can only be instantiated with respect to an instance of their outer class. &gt; Is it theoretically possible to work around it or modify the compiler/vm to work with it? Yes. But that doesn't make it useful or good OO design (and neither does having a static constant). It sounds like you're saying it's not useful to have a static constant? Care to back that up? &gt; The idea doesn't match the concept behind an instantiated inner class. The point of having a static constant within the body of an inner class would be to limit the scope of a variable, which is an important design principal: variables should be scoped only as wide as necessary. If you had a static constant that was only used within the body of the inner class, that would be the appropriate place to put it, and the same would apply to static methods. The same argument could be applied to static methods in interfaces ("doesn't match the concept"), but there are cases where it can be useful, and it was finally added to the latest versions of Java. Overall, it's not a big deal that it isn't there, but its absence doesn't necessarily mean it was the right decision.
That's interesting; which jdk call did you find that seems to use jni? Is it intrinsified by any chance?
As I mentioned in my other comment, the point of having static members in an inner class is to limit their scope. If you have static methods that are only used within the body of the inner class, then that's where they logically should reside, not in the body of the containing outer class. Limiting the scope of methods and fields to the minimum necessary is good design.
&gt;Inner classes are treated like any other classes. Their constructor just has an extra parameter that takes a reference to an instance of the outer class. From a language perspective, the only difference is that they can only be instantiated with respect to an instance of their outer class. Right but I'm saying I'm pretty sure (I could be wrong) that I remember reading that the virtual machine handles the instance as part of the enclosing Object instance memory at runtime. This doesn't mean it's imposssible to have the static members or anything, but it just doesn't really make sense as far as internal structure design goes. &gt;It sounds like you're saying it's not useful to have a static constant? Care to back that up? No that was poorly worded. I'm saying the fact that the language allows for the static constant to be put in an inner class doesn't warrant that the inner class should be able to have static member variables. &gt;The point of having a static constant within the body of an inner class would be to limit the scope of a variable, which is an important design principal: variables should be scoped only as wide as necessary Well you can use static constants in inner classes, so I'll instead address this as though you're talking about variables. It just doesn't make logical sense. A non-static inner type is supposed to be tied to the runtime instance of its enclosing type (whether or not it literally is internally is irrelevant). The Object that the class specifies cannot be accessed like an independent class, so accessing static variables logically shouldn't be possible either. Constants make sense beacuse... well they are constant so it doesn't matter. In the end, I'm guesing the language designers did it for the sake of consistency in the language specification. The inner types can't be instantiated indepdently, so it only makes sense not to allow static members that would be accessed as though they were.
But why would you have a static method inside of a non-static inner class? Can you give me an example of a situation where you have an inner type that NEEDS to be non-static, but also a need for a static method only within that inner type's scope? EDIT: I'm confused. I think you meant to reply to a different comment? Farther down?
Also the X stands for more than just 10: it signifies the NeXT/Unix ancestry.
Damn. I wish I was that good with documenting.
&gt; Right but I'm saying I'm pretty sure (I could be wrong) that I remember reading that the virtual machine handles the instance as part of the enclosing Object instance memory at runtime. I can't see this being true for several reasons. First, they have separate class files, and can be loaded independently. Second, there is not a one-to-one correspondence between instances of an inner class and an outer class. Not only can one instance of the outer class instantiate multiple instances of an inner class, but it can also contain multiple inner classes. And furthermore, you can see the reference to the outer class instance being passed to the inner class' constructor using javap: javap InnerTest.Outer.Inner Compiled from "InnerTest.java" public class InnerTest$Outer$Inner extends java.lang.Object{ public static final int n; final InnerTest$Outer this$0; public InnerTest$Outer$Inner(InnerTest$Outer); public void test(); } &gt; Well you can use static constants in inner classes, so I'll instead address this as though you're talking about variables. Only if the constant is a compile-time constant that the JVM is okay with, which is very limited. You could not, for example, initialize a static instance of a lock. &gt; It just doesn't make logical sense. A non-static inner type is supposed to be tied to the runtime instance of its enclosing type This is besides the point. I think the best argument for static members is limiting scope. Static methods and constants accessed only within the body of the inner class should be declared there as well. You would do this with any class or nested class, and the same applies to inner classes. Similarly, just as you may think of a constant "belonging" to a particular class, there's no reason there couldn't be a case where a constant would "belong" to an inner class. As for the justification... I don't know, the language design tends to be conservative and adds language features slowly. But static methods were finally added to interfaces, so maybe some day static members will be added to inner classes? Probably not though, I don't think there's much clamoring for this feature. I use inner and nested classes all the time, and haven't really found this to be a problem.
&gt; But why would you have a static method inside of a non-static inner class? Can you give me an example of a situation where you have an inner type that NEEDS to be non-static, but also a need for a static method only within that inner type's scope? Nothing *needs* to be static, but it's a way of limiting scope. A static method will not access instance fields, and declaring a method static says clearly that the method will not depend on the instance fields. Basically, you could think of it as another way of limiting scope. When it comes to fields, it could be argued that a constant instance field that is the same between all instances is a waste of memory. If I need a constant declared like this: private static int SIGNATURE = initSignature(); Where initSignature() is a static method, there would be no reason to have to call that method and allocate space for that field for every instance of the containing class.
Everyone forgets about the implicit reference to the outer class, which you can get with `this.OuterClass`
Same here. I use them a lot, and I just really haven't ever needed this to be allowed. I always thought it seemed like an alright design choice, at the very least relative to a few others that were made...
I hadn't given it much thought until this came up, but the more I thought about it, the more it seemed like an oversight. Not that it would make much difference to me, I've only ran into it a handful of times, and while moving them to the outer class wasn't ideal, it wasn't a big deal either.
&gt; Java 5 Version 1.5 It was still referred as [Java 2 aka J2SE](http://www.oracle.com/technetwork/java/javase/naming-versioning-5-0-137997.html). J2SE was dropped in Java 6 AFAIR.
Here's the [authoritative explanation](http://docs.oracle.com/javase/1.5.0/docs/relnotes/version-5.0.html) from the 5.0 release. &gt; Both version numbers "1.5.0" and "5.0" are used to identify this release of the Java 2 Platform Standard Edition. Version "5.0" is the **product** version, while "1.5.0" is the **developer** version. The number "5.0" is used to better reflect the level of maturity, stability, scalability and security of the J2SE. &gt; The number "5.0" was arrived at by dropping the leading "1." from "1.5.0". Where you might have expected to see 1.5.0, it is now 5.0 (and where it was 1.5, it is now 5). 
I could google, but may I ask what you think are some of the bigger changes in 8?
This seems like school work. If you get the answer for free, you won't learn anything.. But, here is a big hint. Think about what information you already have. Each array contained in the array calendar has the exact length as ..?
Take a look at Date and it's associated methods (set/get). Here's some code that sort of outlines two different ways to consider: // http://docs.oracle.com/javase/7/docs/api/java/util/Calendar.html Calendar calendar1 = Calendar.getInstance(); calendar1.set(Calendar.YEAR, ...); ... int day1 = calendar1.get(Calendar.DAY_OF_YEAR); // http://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html DateFormat yearMonthDay = new SimpleDateFormat(/* Parse format from the docs*/); try { Date date = yearMonthDay.parse("2010-04-18"); Calendar calendar2 = Calendar.getInstance(); calendar2.setTime(date); // Get the day of year from calendar } catch (ParseException e) { e.printStackTrace(); } 
This part is for counting the days. I assume you can workout the rest. &gt; int year = Calendar.getInstance().get(Calendar.YEAR); &gt; GregorianCalendar gc = new GregorianCalendar(); &gt; gc.set(GregorianCalendar.DAY_OF_MONTH, 8); &gt; gc.set(GregorianCalendar.MONTH, GregorianCalendar.JUNE); &gt; gc.set(GregorianCalendar.YEAR, year); &gt; int numberofDaysPassed = &gt;gc.get(GregorianCalendar.DAY_OF_YEAR); &gt; System.out.println(numberofDaysPassed);
&gt;It isn't really the inner class that's associated with an instance but objects of that class. That is totally true. &gt; The class itself is solitary and unattached to instances of Outer But this is not. The fact that it is not a static inner class means it must be attached to instances of Outer.
You are better off looking at the original proposal and the implementors blog postings: * http://mail.openjdk.java.net/pipermail/coin-dev/2009-February/000001.html * https://blogs.oracle.com/darcy/entry/project_coin_string_switch_anatomy * https://blogs.oracle.com/darcy/entry/project_coin_string_switch_break
&gt; Just becase a naiive programmer decides to declare that an integral part of a language's design is somehow bad practice with lack of valid evidence or argument doesn't mean it is a bad idea. Name calling doesn't help the case for inner classes. Inner classes are not an integral part of Java. They were introduced in 1.1 The answer to the question "why use an inner class" is primarily convenience. This isn't a compelling reason. They also allow for optimizations in the object/gc lifecycle. If the structure is an inner class, you don't need to track the usage separate from the parent file. No need for a separate pointer to see if that object has been used recently or is still in scope. It only exists for the life of constructing the parent. I think many of us remember the horrid performance of the JVM initially. This was one of the earliest ways to make it "faster".
The big one is lambda support. I am super excited for that. It's a serious improvement to the language not having to deal with the syntax nightmare of anonymous classes constantly for concurrent or event-based programming. And the lambda syntax being added to Java is really nice; I dare say maybe even better than a lot of other modern languages I've seen it in *cough* python *cough* Thread t = new Thread(() -&gt; { System.out.println("Hello world"); }); t.start(); JButton b = new JButton("My Button"); b.addActionListener((ActionEvent e) -&gt; { b.setText("Clicked"); });
What is the reasoning behind having empty directories in your src directory? For example, your source code is located within the *october-chess-engine/src/com/nullprogram/chess* directory. Why not just place these files in a *october-chess-engine/src/chess* directory?
http://www.funnyjunk.com/channel/fucking-maths/Mind+Blown/oahYGbn/
That's standard Java namespacing. Internet domains are used to [avoid naming collisions between different authors](http://stackoverflow.com/a/189269). The namespace (package) for the chess engine is `com.nullprogram.chess`. 
Thank you!
I really don't get why they don't allow null as a case in a switch statement like this and instead feel like a NPE or a separate null check is the right way to go. I mean, it's syntactic sugar anyway, so why not make as simple to write as possible?
Then why are you allowed to have both static and non-static members in a top-level class? What's so special about top-level classes, that they should be allowed to mix these things, while inner classes are not? Answer: it's a wart. A mistake made in Java's design. A better approach would have been to have global singleton objects instead of static members thrown in alongside instance members. Some other languages, like Ruby and Scala, take that approach, and it works nicely. So, OP, don't think of this restriction in Java as being a good idea. It isn't. It's just a side effect of a mistake someone made 20 years ago.
I love posting my thoughts and I think there should not be any problem as long as it is helping others to learn and I am not doing it for my own profit.
Wow this code is just... really really bad.
I like this explanation from SO best: http://stackoverflow.com/a/338230 
Top level classes aren't associated with an instance.... They can mix them because they're not already part of an instance. The concept of static inside an instance doesn't make logical sense. It'd be a contradiction.
Nearly everyone seems to be misunderstanding my point. I'm was trying to use the term class object to refer to the class itself (e.g. A.B.getClass()) as opposed to objects of that class (e.g. A.B b). To put it another way, every type in the language has exactly one instance, regardless of whether it's an inner class or not, so there's no obvious reason why the language it's forced to disallow a static member of a non-static inner class. I understand that the language failures it but the OP's question was why is it disallowed. It just seems like an arbitrary decision on behalf of the language designers.
Thanks, it seems you're the only one here who understood my post.
When I said the class itself is solitary I was referring to the class object, i.e. A. B.getClass().
Uhm… Dear JUnit, please assert that the return value of this function is 5. assertThat(function(), is(5)); I really don’t see your point.
An inner class that's not static is a member of an object. So any members of the inner are inherently members of an object. So it is logically inconsistent for them to be static. 
That won't work, and it has nothing to do with auto-unboxing. The value of a Float object can't be changed after it's initialized. Your third line is assigning a new variable to f2 - without unboxing, it could be written something like this: f2 = new Float(f2.floatValue() + 6); For this to work, you would need to use a different object to hold the float value, so that you'd have something like the following: FloatContainer f1 = new FloatContainer(4f); FloatContainer f2 = f1; f2.increment(6); Since f2 and f1 continue to point to the same object, this would work as you'd like. I can't know for sure, but this pattern seems like an attempt to shoehorn a C++ way of thinking into Java's closer-to-real-OO model. You might want to rethink why you'd need this in the first place.
&gt; but it's a way of limiting scope You use those words, but I don't think you know what they mean. Static is a way of **extending** scope, not limiting it. 
Yes, exactly, I assumed that "Float" would work like "FloatContainer" in your example (and every other "Object" in java). It's used for storing values in a HashMap, I'd prefer to grab a reference to the object in the HashMap and then work with it locally without having to put it back in the HashMap when I'm finished.
http://commons.apache.org/proper/commons-lang/javadocs/api-2.6/org/apache/commons/lang/mutable/MutableFloat.html
java being the next cobol it is not that surprising
http://en.wikipedia.org/wiki/Nassi%E2%80%93Shneiderman_diagram
You can use JFrame. I.e. import java.awt.*; import javax.swing.*; public class Jframe extends JFrame { public static void main (String args[]) { //retrieve the local screen resolution Dimension dim = Toolkit.getDefaultToolkit().getScreenSize(); final int screen_Width = dim.width; final int screen_Height = dim.height; //Create a JFrame JFrame frame = new JFrame(); frame.setSize(screen_Width , screen_Height); //set properties for the JFrame frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); frame.setExtendedState(Frame.MAXIMIZED_BOTH); frame.setUndecorated(true); frame.setLayout( null ); frame.setVisible(true); You won't have an exit button so you need to create something to get out of the application. Hope it works ;)
I don't get what you're saying. I never said an inner class instance could exist without the outer instance. It can exist outside the body of the outer class, and the class itself can be referenced without any instances at all.
&gt;You use those words, but I don't think you know what they mean. Static is a way of **extending** scope, not limiting it. I'm being loose with the term, but you've said nothing to refute my point, that there is some utility to having static methods and fields in an inner class. A static method is restricted from accessing instance fields, which may be a useful property for the compiler to enforce. A static field reduces memory initialization and allocation overhead. And if the static fields and methods are only referenced within the body of the inner class, then that is the best place to declare them. It is good design to declare fields and methods in the smallest scope necessary.
We've found it great for integration testing the email capabilities of our services and applications. 
You're conflating classes with instances. They're separate things. It doesn't matter what kinds of restrictions there are on constructing an instance of an inner class, the class itself is still just that: a class. And to my point, the JLS does allow static fields in inner classes under limited conditions.
Perfect, thanks.
Ok, yes, Strings and Ints and Booleans etc. But for most Objects, if you assign an Object to a Variable the Variable will then store a reference to the Object. Not clone the Object and store a reference to the new Object. I assumed (incorrectly) that this would be the case for the object-wrapper version of the primitives.
Inner classes should almost always be static.
I'm playing with a game engine, so immutability is less useful. I agree that in most other situation immutability is great.
&gt; And if the static fields and methods are only referenced within the body of the inner class, then that is the best place to declare them. It is good design to declare fields and methods in the smallest scope necessary. If you're referencing static methods from within a non-static class in a non-static context, you're doing something wrong. I agree with constants, but that really is as far as it should go.
&gt; If you're referencing static methods from within a non-static class in a non-static context, you're doing something wrong. Same as before, a method should be declared in the smallest scope necessary. If a method is only used from within the body of an inner class, that's the most natural place for it to be declared. If the method doesn't reference any instance fields, then there's no reason for it to be an instance method. Making the method static provides an extra compiler-enforced guarantee, namely that the method will not access the instance fields of the class. This also tells you that if necessary, the method could be moved outside of the class and you'd only have to check for access to static fields, as opposed to both static and instance fields. Declaring a method in the smallest necessary scope and limiting the state it has access to, that's doing it right.
Many thanks, this looks nice! 
The f2 += 6 line does not clone the Float object, it unboxes the original one does the addition on primitive floats and then boxes the result.
There is no cloning going on. The reference is copied, just like before. The difference is that you never change the original object. The addition operator creates a new float, and then you're reassigning a variable to the new float. All wrapper types on primitives and most math objects (eg BigInteger) are like this, and it's a very good design decision, but it does make this one task slightly harder. Here is the rule for java: "For primitives, java is Pass by Value. For EVERY other type, java is Pass by Value of the Reference." Just think of all object variables as pointers without pointer arithmetic.
Here you go man http://bigocheatsheet.com/
I really don't think the decision is all that arbitrary. You're right that nothing technically should prevent the language from allowing it, but the point of the design choice is that non-static inner classes aren't supposed to be accessed like that. They are supposed to be treated as classifications of a type attached to the enclosing instance at runtime, thus the class itself by design is not intended to be treated as independent of its enclosing type. The language designers didn't want `A.B.member` to work for a class that's supposed to represent a dependent instance, but they chose to allow the 'static' modifier on inner classes to show that you WANT that class to be treated as independent and thus now `A.B.member` makes sense.
See I think it was intentional. I think they wanted to make a clear distinction between an inner class that is marked as 'static' and one that is not.
Yeah that's fine. I don't get why this is an issue.
The difference between `A.class` and `A.B.class` is what they are defining. A is an independent type that defines an independent, instantiable Object. B defines an enclosed type of A that is attached to the enclosed instance of A. Object A is independently referencable, thus so are members of `A.class`. Object B is not, so it makes sense in the interest of consistency in design that `A.B.class` isn't independently referencable either. Besides, if `A.B.class` had independent members, there would be little to no clear purpose for having static inner classes.
What's wrong with Javascript? 
Except A.B.class is independently referenceable of course - A.B.getClass() is valid is it not? The staticness of the inner class B affects objects of type B. The class B exists independently of class A, so there's no reason why static members of B should be prohibited. I think we have established this particular constraint is arbitrary - as I originally stated, nothing would go wrong if it were allowed. It's also occasionally irritating - for instance one might wish to define a static Logger member of B. 
We can't know it was arbitrary unless we talk to a Sun engineer who worked on it. I would still bet that it was a choice made to make sure the difference between a non-static and static inner class was clear and well defined, as well as to dictate how they are used. It's not a matter of whether or not removing the constraint would break the language/VM, it's a matter of how the designers intended for inner classes to be used. I've never really found it to be a problem personally, and I don't really consider it to be a design flaw when you have actual flaws like Anonymous class declaration being the shortest way to define a task or "function pointer" per-say.
too be honest, I mainly deal in C#, where lamba functions have been around for quite a while. anyway, sorry for shaking this hornet's nest up/
Whenever Java code crosses over to native, there's JNI. Open up the JDK source you'll find various methods marked as native. If you have the full some you'll also see the native source corresponding to the native methods.
People still use google code?
Thanks for reiterating the point. I can see that java.net calls plenty of native code and none of it is intrinsified. Although I haven't found the native source for networking code in particular, I'm beginning to see there's a lot of JNI built into the JDK.
Okay, I think I get what you're after. Since intrinsics are VM specific, I looked for OpenJDK's and it looks like they keep a list in vmSymbols.hpp. I'm on my phone, but I found this copy: http://cr.openjdk.java.net/~sla/8002078/webrev.01/src/share/vm/classfile/vmSymbols.hpp.html No net/nio methods from what I can see.
It's okay.. It's functional, can be object oriented.. It has some bad parts but so does Java. There are good parts to Javascript too. 
http://tomcat.apache.org/tomcat-7.0-doc/changelog.html 
I'm not clear on the question being asked by your test. Were you supposed to write a unit test for this class? 
Oh I'm sorry. Yes I was supposed to define a test method for this following class.
I could go Google for a blog post, but that's something you could do yourself, so that's probably not entirely valuable to you. Do you, then, have specific questions about unit testing with JUnit that we could answer? 
I don't want to straight out give you the answer to that specific question, because I think there are fundamentals you need to learn and understand and *then* apply to the question above. So, let's try a simple example. Given this class: public class Person { private String name; public void setName(String name) { this.name = name; } public String getName() { return name; } } ...my test class might look like: import static org.junit.Assert.assertThat; import static org.hamcrest.CoreMatchers.is; import org.junit.Test; public class PersonTest { @Test public void testSetName() { final Person person = new Person(); person.setName("jrh3k5"); assertThat(person.getName(), is("jrh3k5")); } } The above test class creates a Person object, sets the name, and then tests that the retrieved name is equal to the expect value. Any questions about the above code?
Lol. According to everywhere that isn't a business, java is a dying language. Ask /r/programming. There is a breed of developer that is very prevalent on the web that must use the most recent thing and everything else is a dying technology.
Wow thank you! I just don't understand why you do this.name = name; and final Person person = new Person();? what is that for? and I've never seen assertThat, I've only seen assertequals
Haha it was not my homework, I promise. I took a test on J-Unit, tried to learn it but ended up getting a 55% on it. He gave me the test back to see what I got wrong and trying to fix it with no luck, I came here for help. So I appreciate your help Uncle_DirtNap . I have an idea of how to do this now. 
Nope, I read OP's question -- but thanks for the downvotes to my correct answer that isn't on his homework! Also, this is /r/java, not /r/javahelp, where the community rules prevent that (and where OP probably should have posted, but that's not my thing.)
https://code.google.com/p/guava-libraries/issues/detail?id=605#c4
https://code.google.com/p/guava-libraries/wiki/UsingProGuardWithGuava
Can you briefly explain how ProGuard works in this scenario?
Completely clear! Thank you
So he picks a language that he clearly has very limited experience with, and I suspect his clients have no experience with even though they must maintain the code? And why? I suspect mostly to educate himself, screw what's in the client's best interests. That is malpractice, and is the type of selfish irresponsible behavior that gives software consultants a bad name. Learn new languages on your own time, not your client's. 
I hate libraries that hide null values from me. To be clear I tend to treat null values as a bug since they: * are returned when a collection (Map) does not contain the value I actually wanted * are the default value for references when I forget to initialize them. * often make no sense in context Allowing null in a switch statement means that I would have to add a case null: throw new NullPointerException(); to every switch in order to avoid silent failure and possible state corruption. Also important from a language standpoint it is likely that switch already acts like that if you pass in Integer, Short, Long, etc. objects.
I'm not sure that "EXE4J_JAVA_HOME" is set up by default by the JRE, but you should be able to set an environmental variable named "EXE4J_JAVA_HOME" that points to the directory in which you have Java installed.
I've been using Spock, which is a specification framework for Groovy. Its mocking is pretty easy to use and generally less verbose than other mocking frameworks. I'd recommend giving that a try.
WTF?
I think the benefits come from its advantages over JUnit, rather than Mockito: the DSL, lightweight implicit assertions, not to mention it's excellent messages when failures occur. I've used Mockito extensively, and it makes the job far easier than other Java mocking frameworks. If the OP is spending a lot of time copying and pasting and mocking, either the code is not designed well for testing, or you should write helper classes that handle mocking of those common pieces; that'd likely be just as much of a problem with other options. Both guys behind Mockito and Spock work for Gradleware incidentally; they use Spock for testing Gradle, which is mostly Java for production code. 
Can you point to an an open source project that has good unit tests?
here's a good example: https://github.com/spring-projects/spring-framework/blob/master/spring-beans/src/test/java/org/springframework/beans/BeanWrapperTests.java
Download a 64-bit JDK or JRE. Note the path (Ex. - C:\"Program Files"\java\jdk_1.7_xx or jre_1.7_xx). Create a System Environment variable named EXE4J_JAVA_HOME and set the value to the path. Close all open instances of Command Prompt and Windows Explorer if any are open. Otherwise, the new environment variable won't take effect. Run the application.
An interesting thing about tests - they tell you things. The fact that your tests are cumbersome to set up tells you something about the design of your code. What kinds of setup difficulties are you experiencing?
Thanks for the comments, but I resolved it. Turns out the 32-bit version works fine. Thanks for your help, though!
try playing with Jetty, build a few servlets, with jetty there's many ways of doing this. Play with Filters for more advanced substance.
Not sure if you mean 'use the pain as a learning experience to identify how to write good (testable) code and good unit tests' or 'suffer through bad unit tests'. If it's the first, a big +1 from me!
 if(index == 0) { return new int[]{1,3}; }
I'm curious what specifically you are finding painful about it. If you mentioned a few things I could more pointedly give some thoughts.
&gt;Weirdly, while "static final String s = "abc"" is allowed, "static final String s = null" is not. Wow, null really isn't a [constant expression.](http://docs.oracle.com/javase/specs/jls/se7/html/jls-15.html#jls-15.28) That's hilarious. I can kinda see why they'd want to do that - it guarantees that all constant expressions/variables have a determined value and means that no evaluation of a constant expression has to deal with [the million dollar mistake](http://en.wikipedia.org/wiki/Tony_Hoare). If `null` were allowed as a constant expression, then `null + 2` would be a valid constant expression, which would have to do some weird ass assumptions about what type that null is. On an unrelated note, apparently `((String)null)+2` evaluates to "null2". Shit, java. I was winding down working with perl to work with a saner language. What the fuck.
Very valid, I've pulled my hair many times wondering how the hell I will test this? turned out that something was wrong with my design.
If mocking is frustrating, try out the other [test doubles](http://www.martinfowler.com/bliki/TestDouble.html). It's an old post, and really short, but it really opened my eyes to viewing mocking as just one tool in the box.
One thing I see that regularly screws with unit testing is big god classes (&gt; 800 lines), breaking up to two or three other classes can make them more testable because you have more ways in. The god class might well have a mass of private methods that become package private in the different classes. Also you won't need to do as much mocking if you separated the functionality properly.
People tend to neglect designing tests. Tests are code too, if you're copying and pasting often why haven't you separated out that behavior into functions? Another "tip": Stop trying to test implementation details. A lot of people have started to break encapsulation and design bad code just so it's "testable", using the current fad dependency injection. Why do you need mocking in the first place? Do you have a database setup or something external? Because that's one of the only valid reasons to need mocking. And another... learn reflection, and know when to use it. Reflection is a powerful tool, and one you're free to use in test code as you don't have to worry as much about performance in tests. Resist the urge to once again break encapsulation and test the implementation details since reflection gives you access to internal details. And lastly, there is more to testing than just unit tests. Not everything needs to be tested at a unit level. There are integration and functional tests for example too. Use your brain, use the right kind of tests for the task at hand. But sometimes, really, unit tests sometimes just require brute force if you really want them. I find at these points though, they aren't really that worthwhile over alternatives.
Do you mean that you want a global registry for your warehouses ? If so, declare a [static](http://stackoverflow.com/questions/413898/what-does-the-static-keyword-do-in-a-class) field holding a collection of your choice (List, Map, Set, whatever suits you) and add 'this' to said collection : public class Warehouse { private static final List&lt;Warehouse&gt; warehouses = new ArrayList&lt;Warehouse&gt;(); public Warehouse() { warehouses.add(this); // adding the warehouse into the registry } } Edit: link and code sample
If you want to search for which warehouses that contains a specific item, you could use a map (a mapping like "item1" =&gt; {warehouse1, warehouse2, ..}. It will be tedious to set up, but it will make the actual lookup pretty fast. Also, you get to learn using maps, which is a great datastructure. :) It would look something like this: // initialize values Map&lt;String, String[]&gt; itemToWarehouseMapping = new HashMap&lt;String, String[]&gt;(); String[] item1Warehouses = {warehouse1, warehouse2, warehouse3}; itemToWarehouseMapping.put("item1", item1Warehouses}; String[] item2Warehouses = {warehouse2, warehouse4,}; itemToWarehouseMapping.put("item2", item2Warehouses}; // Look for warehouses with item 2: String[] result = itemToWarehouseMappings.get("item2"); // returns [warehouse2, warehouse4] Look up the api for maps. http://docs.oracle.com/javase/7/docs/api/java/util/Map.html 
You should add that he needs to override [equals()](http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#equals(java.lang.Object\)) and [hashCode()](http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#hashCode(\)) in his Item class, otherwise it may lead to bad and/or unexpected results.
Thanks for the reply - I'll read the docs on maps and see of I can get my head around them. You're right a cool advantage is that I get to learn a new data structure.
True. But that is not what you want a beginner to do. Snaipe_S: If you want to do this solution, you could just simplify and use the item name when overriding these methods. public class Object { private String name; public String getName() { return this.name; } @Override // just ignore this if you don't know what it means, you'll learn soon enough public boolean equals(Object o) { if(!(o instanceof Item)) { // check if input uses same class return false; // no? return false } Item that = (Item) o; // cast so we can use the methods from the Item class return this.getName().equals(that.getName()); // let the String class do the comparing } @Override public int hashCode() { return this.name.hashCode(); // once again, let the String class do the work for us } } 
“ASCII is assumed?” Yes, *please*, raise another generation of idiots who think that all available characters will always fit in a byte! What could possibly go wrong? Also: the source code formatting is horrible, and inconsistently so. If you think your source code is worth sharing on the internet (which this one is not), why does it have to look like shit? Oh, and also: if I was an interviewer and an applicant delivered this, chances he’d start in this company would be pretty much zilch. Apart from all afore-mentioned points there also the fact that all variable names are bad: arrays are named “array,” one variable has “temp” in its name, and most variables names are lowercase-only even if they consist of several words. Who will be able to read this shit two years from new when it suddenly explodes because Ünicode?
Nice library, I've used it in production to process bounces.
Yes, it is allowed in bytecode. As with many java concepts, the JVM has no idea what inner classes are: they're fictions of the compiler. Inner classes are just regular classes with a) a slightly funky name (`Outer$Inner`) and (for the non-static case) a special final field `Outer this$0` holding a reference to the containing instance. An outer reference parameter is added to inner constructors behind the scenes to set this reference, so `new Inner(5)` becomes `new Inner(this, 5)`.
besides trivial examples, most code uses external libraries, don't see any way to specify depenedencies.
i would love to see a book on java concurrency
I like fluent interfaces, but dislike the fluent and clone pattern. As tylermacnet said, I prefer a mutable object with a fluent interface. 1) A lot of fluent interfaces are written to get around Java's lack of named and optional parameters. For example, Guava's [Joiner](http://guava-libraries.googlecode.com/svn-history/r14/trunk/javadoc/com/google/common/base/Joiner.html) class uses a fluent interface to add extended functionality without adding dozens of new methods for each case. There's the base usage which requires a list and a character to join them, but there's a number of optional parameters such as null skipping, map joining, and different appendable calls. Using traditional methods would get overwhelming, so using the fluent interface helps in that regard. 2) Java's very efficient at creating objects, but I dislike creating new objects for each call anyway, so I prefer using a mutable class. 3) I usually line up the periods, like you did in your example.
It's all about readability, so whatever works best. "Fluent interfaces" can get annoying if e.g. your "hello there" text were a lot longer. In that case I would have to resort to your option (3) ending up with parentheses. Now suddenly I would have to worry about parentheses too... I can go with either one but having none isn't really an issue.
It works especially well when you insult the technology. Reminds me of an old bash quote. Ask a group of geeks how to burn DVDs on Linux and they'll just tell you to RTFM. Tell them Linux sucks because it can't write DVDs and you'll get multiple custom made tutorials on how to do it from professional Linux experts.
Even without obfuscation or optimization, you can use the options to remove unused code via proguard. This means only the parts of guava (admittedly large, and why they have this article listed in their project prominently) that you actually need are available.
This article kind of needs an update now. Oracle is at 12C and HyperSql is at 2.3.1 
Personally, I dislike how fluent interfaces look in code. I don't have any technical reasons for disliking them. Even though it's more code, I'd much rather do this: PizzaBuilder x = new PizzaBuilder(); x.add(new Pepperoni()); x.setCheese(true); Pizza y = z.makePizza(); Instead of this: Pizza y = new Pizza().withTopping(new Pepperoni()).withCheese().makePizza(); I fully admit that it's all personal preference.
&gt; I should be referring to it as 4 and 5 They were wrong. There is no such thing as "Java 4." At best you could have said "1.4" and "5.0." I think of it as "Java 7" == the version of the language, while 1.7 is the version of the compiler and runtime. Not perfectly precise but close enough.
So are you saying that you are returning "new myClass()"? If so, why not just have it "return this;"?
What about adding some newlines? Still don't like it? Pizza y = new Pizza() .withTopping(new Pepperoni()) .withCheese() .makePizza(); 
This. I strongly dislike the "builder" pattern, though there are cases when I think fluent interfaces are appropriate, like constructing queries on sequences or streams: dataSource.where(predicate) .filter(selector) .observeOn(scheduler) .subscribe(observer) I tend to feel that methods on fluent interfaces should return new objects rather than mutating existing objects. If a fluent design mutates the existing object, you probably shouldn't be using a fluent design. There are, of course, exceptions (`StringBuilder` comes to mind).
I like Fluent interfaces when... * it creates a method chain that I can read aloud to someone with no coding experience whatsoever, and they'll understand what it does * the order of operations of the method chaining is important, and the only methods available as a next operation at any point in the method chain are those that are valid at that point. If these two conditions are met, the interface is also self documenting as a nice bonus. Want to know what to do next? Type a dot and wait 500ms. Those are your options and ALL of them are valid. But I think doing it right requires a significant investment of thinking time and coding time, so I would never do it out of habit. If the order of operations isn't important and it's just walking through setters, I'd much rather do this... object = new TextObject( 200, 400, "hello there"); and avoid the setters altogether. 
Clojure has a similar macro, `todo`, which would look like this if `Pizza` didn't have a fluent interface: (doto (PizzaBuilder.) (.add (Pepperoni.)) (.setCheese true) (.makePizza)) Sort of converts a non-fluent interface into a fluent one. 
I am primarily a web developer, and I've been using JQuery for a really long time now (about 50 years in internet time), as well as and a long-time C# developers (look at LINQ/lambda syntax). I like fluent, but I admit it does not work for everything. Badly defined fluent interface can be truly terrifying. Well designed fluent interfaces are a joy and MUCH easier to read (having setproperty all over the place does nothing for me. I hate javas lack of proper properties). Key points, in a fluent interface, the same object should be returned every time. No having one method return the root, then another return a child. 
For me, the abhorrent mess comes in when I see JavaFX code that looks like this: StackPane stack = StackPaneBuilder.create() .prefHeight(75) .children( background = RegionBuilder.create() .style("-fx-background-color: " + owner.opposite().getColorStyle()) .build(), FlowPaneBuilder.create() .hgap(20) .vgap(10) .alignment(Pos.CENTER) .children( score = TextBuilder.create() .font(Font.font(null, FontWeight.BOLD, 100)) .fill(owner.getColor()) .build(), VBoxBuilder.create() .alignment(Pos.CENTER) .spacing(10) .children( piece = EllipseBuilder.create() .effect(DropShadowBuilder.create().color(Color.DODGERBLUE).spread(0.2).build()) .radiusX(32) .radiusY(20) .fill(owner.getColor()) .build() ).build(), remaining = TextBuilder.create() .font(Font.font(null, FontWeight.BOLD, 12)) .fill(owner.getColor()) .build() ).build() ).build(); This should NOT be one statment. Ever. I didn't make this up, either, I pulled it directly from a book on how to write JavaFX applications. Granted, they might have been trying to save a line or two of print by embedding constructors into the effluence of fluency, but I still think that the readability suffers. OTOH, one could do nearly the same thing with a multi-variable constructor... which is why I prefer Builders to those, much of the time, too. ;-)
I like having my classes stay immutable wherever possible, reserving mutability specifically for those classes that need to track states over time. I first encountered the idea of fluent interfaces in a book that recommended them for use specifically with immutable classes. Still waffling on whether I like fluent interfaces, though.
I think this highlights where I like fluent vs the code that makes me question the entire paradigm: It's a question of "what is a statement?" A statement should be the minimum amount of code required to perform a specific task. That's what you have in your example: a pizza with pepperoni and cheese, baked. You're not having to create a blend of cheese or cook the sauce as a part of creating the pizza. Presumably, you'd create a CheeseBlend or a Sauce and chain those objects in on creating the pizza. ;)
&gt; Builder Check out https://github.com/analytically/innerbuilder
Please tell me that's generated by some kind of GUI builder and that they don't expect you to write or maintain that by hand.
I wish I could. This is absolutely written by hand.
I can see where you're coming from, I just don't see that it's a good time investment. The mutable / immutable thing is a red herring because you can easily create immutable objects and sanity check their creation without fluent interfaces. As to the clarity of having a .withWidth(200).withHeight(400), I do agree this is clearer. However, I'm perfectly happy to pay the price of mouse hovering over the method call to see which is which for the benefit of not having to spend time implementing a fluent interface where I don't really need one. 
http://thecodelesscode.com/case/15
**Java Concurrency in Practice** is the book. Written by the guys who created the concurrency utilities starting from JDK5 onwards or even worked on the Collections API. It's very well written, easy enough to follow (well..it's still concurrency) and gets you up to speed on all concurrency constructs in the JDK up to and including those in Java 6 (Java 7 ForkJoin framework is after it's time.. ) I especially recommend it because it covers the Java Memory Model and logic behind some of the concurrency constructs. It makes you reason about safety and correctness in a concurrent program. (rather than blindly using a framework)
I'd use a tool to implement this pattern -- its boilerplate. If it ever changes, just blow away the generated code and let it regenerate. Analytically above talks about the InnerBuilder plugin for IntelliJ. IntelliJ also has a (non-inner) builder generator in the default installation. On the Eclipse side of the house, I know there are several plugins available, but can't speak to their quality. 
I teach and train Android and Java, and I have to put my vote in for not a fan for beginners. For more advanced users its fine, preferably if the methods are void: object.doSomething().alsoDoThis().thenCommit(); When you have parameters you're making an assumption that the developer has simple parameters, which allows serious trainwrecks to be written like this: object.soSomething(otherobject.getDataWith(this.thing(another.thing))).nowSomethingElse(woahComplicatedClass(simple.ENUM_HERE)); You can newline some of those methods, but again now you're having a programmer track the written code differently, which increases cognitive load and can lead to less readibility. Personally I think it's a convention that overused when people are trying to be clever. If you have to create a class like this, keep it to void methods where possible. 
And this is builder's done wrong :) This speaks to an architectural problem though -- this should be tool generated or externalized into an external file (look at how AngularJS or Android do layout). I think using code to generate the UI is always going to be a problem though -- I'm not sure if doing this in a non-fluent manner would be much prettier. 
Nice post! What about performance effects?
1. I still write them for constructing objects, especially config/param objects. I have adopted the principle of immutability, so each one of those calls would actually create a new object and return it. 2. No. The java garbage collector is very good. Unless your perf concerns are in the microseconds, you probably won't notice a huge difference. 3. Yes, my ide calls it the continuation indent. 
https://news.ycombinator.com/item?id=6709815 I almost bust a gut laughing. What a total crock of shit. "Interesting projects" in brand new languages have significantly less opportunity than java. These thing are also typically fairly low paying test projects. Java is so huge that you have your choice of opportunity. If one job strikes you as boring, don't do it. Because you know java, you are afforded that ability because there is 50 more posting to look at. By comparison, there is exactly 1 Scala job posting within 300 kilometers of me. Most java jobs appear to start around the $23/hr range with 0 experience and the Scala posting is set at 18 per hour.
I usually employ a mix of (pseudo-)fluent and basic bean-style code. What I dislike about fluent interfaces is their discoverability compared to bean-style methods. Quick, tell me if that .servo(int) method is a fluent setter, or a method that does a database query followed by an expensive calculation or whatever? Yeah, I get that this is a brilliant use case for Javadoc, but a .setServoAngle(int) would give a hint right in the name. On the middle ground, we have .withXy(...) methods, which may be chained and keep the discoverability. Also, the (social) contract of with methods allows for implementations based on mutable objects. TL;DR: Use whatever conveys your intent best.
I was/am in the same boat. Check out [Effective Java](http://www.amazon.com/Effective-Java-Edition-Joshua-Bloch/dp/0321356683/). [Java Puzzlers](http://www.amazon.com/Java%C2%BF-Puzzlers-Traps-Pitfalls-Corner/dp/032133678X) is pretty good too.
So is everyone else. Best of luck. 
.servo is a horrible name for a method in a fluent api
From personal experience, I would highly advise **against** working at Amazon. They lure people in with signing bonuses, but their salaries are below market price, and their perks are next to non-existent. "Frugality" is actually a "company value"; that should tell you about how they view and treat their employees. The work environment is highly hostile. Expect to work overtime, and go on call, without being compensated for it. Don't just take my word for it. Look at the many comments about what it is like to work at Amazon on Reddit, HackerNews, as well as online blogs.
I interviewed with Amazon some months ago and there were several factors that kept me from making Enough of a commitment to go out for the on-site interview. The first was that salary was not competitive enough. Especially for the position I thought I was interviewing for. (Unless it was a bait and switch and then it was about right.). I live in a pretty low cost of living area as it is and the difference in pay really didn't reflect the effort and adjustment I would have had to make. I made that clear. Every employee I talked to got really closed up and cagey when I talked about home/work balance. Every single one. Bad sign. The interview questions were pretty bad, overall, at screening for the type of person you'd want to fill the position I thought I was interviewing for. Evidence of either a bait-and-switch or of something broken in your process... not sure. And then there's moving to Seattle away from my roots and my family. I can put a cost on that but the new compensation wouldn't cover it. Especially not for me in Seattle's real-estate market. I love Amazon but I can't work for you guys. At least not through that process and with that compensation. Good luck! (For reference I have about 8.5 years as a Java developer and a Master's in CompSci.) 
Did you pay for the upvotes?
we've gotta police this subreddit better!
&gt;A statement should be the minimum amount of code required to perform a specific task. Yes, I think this is a key thing for me. I've been thinking about it more today. I think that the thing that bugs me the most is the awkward grafting of English onto Java: it.rubs(theLotion).on(it.skin()).else().it.gets(theHose.again()); Ugh. Again, this is pure personal preference. I can certainly think of situations where this is the best way to do things (such as [this comment](http://www.reddit.com/r/java/comments/1v42zg/fluent_interfaces_yea_or_nay/ceoks9t)), but that doesn't mean I have to like it. ;)
Wow. That's horrible. The explicit FooBuilder.create() and .build() calls strike me as a total waste. I'm not sure of a way around create() (short of using new FooBuilder(), but that's about the same amount of boilerplate), but to get around build() whatever's taking the parameter should take a FooBuilder and know to call build() on it.
What happened? This seems to have dropped off the main page :)
These are both great suggestions. Read books and articles by Joshua Bloch, Doug Lea, and Martin Fowler. Java Concurrency in Practice is a frequently recommended book on concurrency. I just began but it is very well written. Refactoring by Martin Fowler. Kent Beck's test driven development by example. Disclaimer: I am only an entry level developer but these have been very helpful to me over the years. 
Probably a great idea if you are interested in the spring framework
The [se7 language specification](http://docs.oracle.com/javase/specs/jls/se7/jls7.pdf) isn't bad if you already have a strong familiarity with the language. It doesn't really cover apis (reflection, refs, collections, concurrent, nio, etc..), but the [se7 javadoc](http://docs.oracle.com/javase/7/docs/api/) isn't hard to read. Bloch's Effective Java is also an excellent read, but I'm not sure I would consider it a complete overview of building software in the language. Obviously, there are a ton of third party libraries for doing stuff as well, but I can't really think of any good reading for them other than their javadocs.
Best. Pseudocode. Ever. 
Java in a Nutshell by David Flanagan is a pretty solid Java book. 
It took me a couple reads to figure out what you want to do. The easiest way to do what you want is to declare a static field. This could be an array, a list, or some other object of your own class. This isn't the best way to do it, because it necessitates that a reference to your object escapes before the constructor finishes, which is a Bad Thing, but it's the fastest and easiest. Shared mutable state is the fundamental uh-oh of multithreading, so if anyone but you is going to be using this code, then they might run into bugs.
You can have a look at some reporting tools like BIRT ou JasperReports. Or you can use a PDF generation library (IText, FOP, PDFBox, ...). The reporting tools are probably the easier path.
I have looked at iText and PDFBox but I had a lot of trouble with them. PDFBox even stopped working completely for (seemingly) no reason. I'll look into some other ones though. And isn't FOP Appach? Edit: apache...
if someone needs only [sections in properties file](http://devsite.pl/blog.2011-06-25.java_ini_sections.html)
+1 for JasperReports. You can edit the templates visually in iReport
Thanks for your reply. I did in fact use a static array and it did work , but I'm interested to know how I could have done it better. Could you suggest a better way?
You can also generate Latex code in order to retrieve a PDF from it. Actually, this is a quite comfy way to get nice-looking reports in a quick way.
Definitely no fluff in this book. This is what we used at university (Java 5 edition) 
Best book that i read is Effective Java, for an interview purpose , better way is to ask the basics.. Data structures, OOP's concepts. the one who knows all this he/she can learn any other concepts in programming
JasperReports is the way to go. Checkout the book "JasperReports for Java Developers"
Or, download the ultimate guide from jasper's website. http://jasperreports.sourceforge.net/JasperReports-Ultimate-Guide-3.pdf
Head First Java 2nd edition kept me entertained enough to actually get to the end. It's an interesting method of basically learning, it's like if you only subscribed to r/programming, /r/funny and /r/pics. Enough useful information as well as pointless distractions.
Agreed. How would you call the method, given a fluent interface?
If I want to build a fluent interface, I'll usually start by building up how I want it to look when it is called first - and then go build the interface methods to do it. Something like .withServoAngle(inDegrees(30)) or .withServoAngle(inRadians(1*Pi)) If I'm making them like this, I will also avoid making a ton of builders so that your code doesn't have to look like: withServoAngle(inDegrees(30).build()).build() - because that's really ugly and stupid - instead I'll just make the parent object that is taking in the child object have a method that can take in an already-built object (so if someone WANTED to call "build()" on them they could) - or have it also take in the builder itself and have it call the build() method on it for you. At least for me, I find if I am building out a fluent API it is easiest to start with the API and then fill in the implementation details - the most important piece to get right in a fluent API is how you call it. A fluent api that isn't self-documenting is not very helpful. 
&gt;there are multiple right ways to do the same thing Then why pick at Scala for it? What you're describing is methodology and style. Sure there are accepted ways to do it and some ways may be more appropriate and more intuitive but having multiple ways of potential writing the same logic isn't really a detriment like it is mentioned. Your example is more of stylism and exists in almost all languages so it has nothing to do with Scala. It's why you start making a style guideline and a best practices sheet. 
Be aware the dependencies can be pretty heavy, though. latex2pdf is a great tool as long as you've got some space to burn.
from language point of view the main difference will be Lambdas (lambda expressions). This will significantly change the language idioms for operations on collections etc.. http://openjdk.java.net/projects/jdk8/features From tehnical point of view I would mention JavaScript engine nashorn. It will be possible to write JavaScript for embedding in Java applications, or just run it on Java Virtual Machine. http://openjdk.java.net/projects/nashorn/ 
Wouldn't .withServoAngleDegrees(30) and .withServoAngleRadians(Pi) make more sense? I wholeheartedly agree, code should document itself as much as possible.
Yeah, that could also work. I'd probably favor withServoAngle(30) with one of them being default and then have a withServoAngle(inRadians(2*pi)) to convert radians to degrees for a user (or vice versa if you wanted radians as the default) If I were building one I'd build out a few scenarios and see what looked best and try to keep things simple. 
public class Integers { public static void main (string[] args) { System.out.println("*01 * 02 03 * 04 05 06 * 07 08"); } }
Maybe you should start reading and maybe you'd learn something.
Spring isn't a "plugin" framework, per se. It is a dependency management framework. Although, you could use the XML as a configuration for the application which allows you to create a family of applications. I worked at a place where different Spring XML files were used to create several different applications from the same source code (including the same main method). OSGi is an application framework which can implement what I think most people envision plugins. For example, Eclipse plugins are built as OSGi bundles.
So the interviewer was off suggesting I should have used Spring. :-P I've worked with Eclipse RCP (and thus OSGi plugins) before. I just wasn't sure if OSGi was the best/easiest/whatever solution. 
Instead of making it static, make a `WarehouseIndexer` class* that stores warehouses, and change or create constructors in `Warehouse` that take a `WarehouseIndexer` as a parameter, and add themselves to *it*, instead of to the static instance. Then you can either set up a static `WarehouseIndexer` and refer to it at all the constructor invocation callsites, or better yet not make it static and hang on to your references to it (passing via parameters, or fields, or something else non-static). This is better because it gives the callsite control over the possible side-effects, including the ability to neutralize them all together (by passing in a `null` `WarehouseIndexer`) (btw, remember to check for `null` in the constructor). == \* You could use a `List` or `Map`, but generally when you have an idea that's distinct in meaning, it should have its own class, even if that class just wraps a `Map`. Depending on what `Warehouses` are allowed to store, you might even be able to use a Warehouse to store your Warehouses!
Use BIRT or JasperReports tools
From my personal experience building a webapp in Play 2 about 6 month ago I agree with some of his points: * Cryptic: my biggest gripe with the language. Everyone and their mother seems to love inventing their own DSL and abuse operators to no end. It's not the fault of Scala per se but it makes abuse very easy. * Binary incompatibilities: very annoying. For example when going from Play 2.9 to Play 2.10 the Scala version must be upgraded. But then the authentication library ceases to work since it is incompatible with the latest Scala version. You have the choice to either wait for the developer to do the upgrade, or do it yourself wasting a lot of time. So upgrading a lib to use a new functionality is not as simple as in Java where you can usually pop the new version. And you can't use a stable library that has stopped being developed. * Debugging in the IDE does not work properly. I was using Eclipse Scala and step by step execution did not work at all. It may have improved since.
OSGi, absolutely. I've used it for several projects that required modules that could easily change during runtime. Embed a framework and expose what you need to bundles. It's a perfect use case for high powered dynamism. Another alternative may be groovy? Perhaps javascript via an embedded javascript engine? Depends on how robust you need the plug-ins to be. 
Java software solutions Best book I've ever read
So I get that inRadians would be statically imported? I try to avoid that, because it always requires me to look up the declaration to find out where the code comes from.
If your going to write a blog about Scala's issues bring some proof to the table. What does the cryptic compiler error look like? What did you do to cause the cryptic error? What makes the ide unusable? I use it all the time and never have refactoring issues, so show some screenshots. Show an example of two different ways to get to the same solution. Not only does providing good feedback help validate your article but it may also help scala maintainers to improve it. Without proof its just a whine fest that reads like it was written more by someone scared of Scala than someone who actually took the time to learn and use it.
That reminds me of C vs C++ holy war so much. "Everybody abuses operator overloading", "cryptic error messages" (?0GeneratedMessageReflection@internal@protobuf@google@@ QAE@PBVDescriptor@23@PBVMessage@23@QBHHHHPBVDescriptorPool@23@H@Z), "steep learning curve", "more than one way to do the same"... You got a different language. A more complex and more powerful language. Don't use it if you do not like it. Luckily, nobody forces Scala upon you.
What makes you dislike a fluent interface that's immutable?
It's neat but it seems like doing it in java without the With statement is less code and in my opinion easier to read. PizzaBuilder builder = new PizzaBuilder().addTopping(new Pepperoni()).setCheese(true); Pizza x = builder.makePizza(); Pizza y = builder.addTopping(new Bacon()).makePizza();
When you create an ArrayList (or any other object that uses generics), you can specify which class it will use, which removes the need for casting. You would write that as follows: ArrayList&lt;RubberBall&gt; example = new ArrayList&lt;RubberBall&gt;(); The get() method for the above ArrayList would now return RubberBall objects.
Yes. The type is derived based on how you declare the ArrayList. ArrayList&lt;Person&gt; get would return a Person object ArrayList (no generics) get would return an object
Similarly: http://thecodelesscode.com/case/124
Thanks, I'll check this outm
Thank you so much. You're the first person that has actually responded with helpful insight opposed to the "you're such a dumb fucking shit" that i've gotten from other forums.
Thanks. I think I'll give this a try. I think I understand why it's better, though I'm still getting my head around the best practices for oop
I have the same impressions from my encounter with Scala. To me, it seems like another C++ - evergrowing language which is so massive and complex that &lt; 10 people in the world understand it completely. Unless you are company which can hire only the best developers, how are you supposed to hire people who actually understand it? Furthermore, C++ features are mostly quite low-level but features in Scala are not, it's way difficult to imagine what is actually going on in lower layers. I take Scala as an interesting research project which is not suitable for production. I imagine that few years from now, somebody will take its best features and create a new language or it will form the new version of Java or something like this. 
Eh. I was 50/50 with making you xpost to /r/javahelp first. /s
(You should already know that .jars are just .zip files containing a lot of .class files) It opens up all the jars, and makes a new jar with only the .class files your code actually uses.
If your in a performance critical environment maybe that matters but in most situations you wouldn't notice much of a difference if any. I'd call that a premature optimization for 99% of cases.
Step by step execution has always worked in IntelliJ for me. And ScalaIDE has had a lot of improvements in the past 6 months so it probably works now.
What do you mean by "display"?
I'd argue that the problem is worse in Scala, since at least the Perl community acknowledges its problems, and tries to fix them.
And what do you mean "radicals"?
Are we talking Occupy Wall Street or Tea Party radicals here?
&gt; (?0GeneratedMessageReflection@internal@protobuf@google@@ QAE@PBVDescriptor@23@PBVMessage@23@QBHHHHPBVDescriptorPool@23@H@Z) For those that do not use C++: That is not a cryptic error message, just a small part of an otherwise perfectly readable linker error - namely the compiler generated name of the problematic symbol. Just skipping over it I can see that the problem is with the google protobuf library, what exactly should be written in the rest of the message (duplicate/missing symbol most likely). However I hope that Visual Studio shows the actual c++ syntax instead of the mangled name, for g++ there is always c++filt when you need the details.
As in I want to display a radical in the terminal window or Dialog Box such as sqrt of 2 over 4, etc.
Explain please. I am very new to programming.
The same person also said: &gt; Scala is a perfectly good programming language. It is a much better Java. If you have to work on the JVM it is hands down the best thing we've got. I actually write a significant portion of the code I write today in Scala because of these advantages. &gt; There is a difference between that and selling it for pure functional programming. Scala may be a perfectly good programming language, but that isn't to say it is a perfect programming language, no language is. If you have a point to make then make it instead of quoting other people's comments somewhat out of context.
Yep.
Yep.
 what you quoted is interesting as well: &gt;There is a difference between that and selling it for pure functional programming. That is exactly what the authors of the language are doing. For example, I took the coursera scala course by Odersky and that's how the language was presented i.e. as a medium for (somewhat pure) FP. Having experience with other FP langauges, scala did not seem like a very well designed one in that regard. Sure you can use it as a better java, but you need a lot of discipline to do this right. Similar arguments were used when programming in C++. But it is very hard to do in practice. Scala has a lot of very tempting features that can really bite you in the ass.
or maybe [New Radicals](http://www.youtube.com/watch?v=-0QBxwRhAmA)?
What I'm going to answer if I encounter the sample questions: * What is the difference between a list and a linkedlist A linkedlist is an object that extends the interface list. A linkedlist is a type of list where each entry or node points forward to the next node on the list and backwards at the previous node in the list. A linkedlist is most useful and efficient when you will be adding and removing many elements to the list. * What is a map A map is an object that contains entries of linked keys and values. it differs from lists because instead of querying a position and returning the value at that position, you query with a key and it returns the matching value. Maps are unsorted. * what is an array An array is a collection of objects that have a set number of entries which is determined at the declaration. 
I often find the people who enjoy python also enjoy scala. I enjoy neither. 
Thanks so much, this is going to be really helpful. I'm making a cheat sheet of sorts and this will really help make sure all my bases are covered!
First off, Maven works just fine with JavaFX. So don't stress. Next, which JDK are you using? If you're using Java 7 you will need to add a JavaFX dependency in your pom.xml file. Java 7 does not include the javafx jars on it's classpath by default. You can Google it or look at Stackoverflow for including the JavaFX dependencies If you want to try one of the Java 8 builds, then you're in luck and you don't need to add anything to your pom as Java 8 FINALLY treats JavaFX just like any other library included with Java.
do you know the correct syntax of a switch? From what i make of your story, you need to store a value in a variable, and use a loop to loop as many times as that variable tells it to loop. i dont want to give too much away, you can message me if you really cant find the answer :)
If this is your very first java program i suggest not making a 3d chess game :d
Also an important thing: ooze enthusiasm. It is basically why they hire out of college programmers. They have a lot of energy and are excited. Keep talking about how excited you are. I was hired at my first job because of my enthusiasm.
Thanks so much. I think I have a rough idea. I'll try it out. =) 
Scala: one of the few things that Java and Haskell weenies agree on...
I'll defer to others on the technical preparation because I want to focus on something much more important for an intern interview in my mind: willingness to learn and motivation. Look up to your interviewers, ask questions, if you don't know then say so and follow up asking about it, but also show you can (and will) do your own research. If they don't feel they can work with you, or can't mold you, you won't get an offer. Edit: on the asking questions part, express interest in the position and company, but also make sure it's a good fit for _you_. Nothing demotivated an interviewer more than someone who doesn't seem interested or is just there to get a job they don't care about. Edit: also, make sure the people you will be working with will be good mentors and that you feel you can learn from them. The first mentor can make or break some peoples entire careers!
Will do! Enthusiasm and energy are what I'm good at, I just want to make sure I can back that up with actual knowledge haha
Do you see any stack traces in your console?
I don't know anything about Java Sound/Applet, but chances are that if the exact same code works for 2 files but not a third, then the file is possibly corrupt.
I don't think you have the right path to the sound, try changing: clip = Applet.newAudioClip(Sound.class.getResource(name)); to: clip = Applet.newAudioClip(new URL("/res/"+name)); see if that works. If not post the error it gives you. 
You should be defining an expiry on messages so they don't get left behind. As for the differences it really depends on your problem. If you are doing request-reply then it doesn't make much sense for the originating end to be processing other messages for example.
java.net.MalformedURLException: no protocol: /res/twss.wav at java.net.URL.&lt;init&gt;(Unknown Source) at java.net.URL.&lt;init&gt;(Unknown Source) at java.net.URL.&lt;init&gt;(Unknown Source) at edu.Sound.&lt;init&gt;(Sound.java:22) at edu.Sound.&lt;clinit&gt;(Sound.java:14) at edu.main.Main$1.actionPerformed(Main.java:40) at javax.swing.AbstractButton.fireActionPerformed(Unknown Source) at javax.swing.AbstractButton$Handler.actionPerformed(Unknown Source) at javax.swing.DefaultButtonModel.fireActionPerformed(Unknown Source) at javax.swing.DefaultButtonModel.setPressed(Unknown Source) at javax.swing.plaf.basic.BasicButtonListener.mouseReleased(Unknown Source) at java.awt.Component.processMouseEvent(Unknown Source) at javax.swing.JComponent.processMouseEvent(Unknown Source) at java.awt.Component.processEvent(Unknown Source) at java.awt.Container.processEvent(Unknown Source) at java.awt.Component.dispatchEventImpl(Unknown Source) at java.awt.Container.dispatchEventImpl(Unknown Source) at java.awt.Component.dispatchEvent(Unknown Source) at java.awt.LightweightDispatcher.retargetMouseEvent(Unknown Source) at java.awt.LightweightDispatcher.processMouseEvent(Unknown Source) at java.awt.LightweightDispatcher.dispatchEvent(Unknown Source) at java.awt.Container.dispatchEventImpl(Unknown Source) at java.awt.Window.dispatchEventImpl(Unknown Source) at java.awt.Component.dispatchEvent(Unknown Source) at java.awt.EventQueue.dispatchEventImpl(Unknown Source) at java.awt.EventQueue.access$200(Unknown Source) at java.awt.EventQueue$3.run(Unknown Source) at java.awt.EventQueue$3.run(Unknown Source) at java.security.AccessController.doPrivileged(Native Method) at java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source) at java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source) at java.awt.EventQueue$4.run(Unknown Source) at java.awt.EventQueue$4.run(Unknown Source) at java.security.AccessController.doPrivileged(Native Method) at java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source) at java.awt.EventQueue.dispatchEvent(Unknown Source) at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source) at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source) at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source) at java.awt.EventDispatchThread.pumpEvents(Unknown Source) at java.awt.EventDispatchThread.pumpEvents(Unknown Source) at java.awt.EventDispatchThread.run(Unknown Source)
I thought that too, but I was able to play the sound from another program 
Bookmarked!
&gt; Java 7 does not include the javafx jars on it's classpath by default. When I left Java in 2006, i could have sworn they were touting JavaFX as the next big thing. What the hell happened?
Alright thanks for the help. I should probably read up on how AudioClip works
* Why did you post this, i.e. what is your question? * Don't post this here, post it to /r/javahelp (read its posting instructions linked in the sidebar). If it's Android specific try /r/androiddev 
What's the formula you'd use if you had to do this as a human? How does that formula compare to the code you wrote?
WAV is a container format that supports multiple codecs. For example, you can use the mp3 codec and store that audiostream in a WAV file. See http://en.wikipedia.org/wiki/WAV#WAV_file_compression_codecs_compared Therefore, it's possible that the "another program" you used simply supports more codecs than your JVM. You should try to ensure that all your WAV files use the same codec, have the same number of channels (e.g. all stereo), use the same sampling rate (e.g. 22Hz everywhere), and use the same sample bitsize (e.g. all 16 bit)
*Here's the linked section [WAV file compression codecs compared](http://en.wikipedia.org/wiki/WAV#WAV file compression codecs compared) from Wikipedia article [WAV](http://en.wikipedia.org/wiki/WAV)* : --- &gt;As mentioned wav files can be encoded with a variety of codecs to reduce the file size (for example the GSM or MP3 codecs). &gt;This is a reference to compare the monophonic (not stereophonic) audio quality and compression bitrates of the different codecs available for .wav files including PCM, ADPCM, Microsoft GSM 06.10, CELP, SBC, Truespeech and MPEG Layer-3. &gt;The above are WAV files; even those that use the MP3 codec have the ".wav" extension. --- [^(about)](http://www.reddit.com/r/autowikibot/wiki/index) ^| *^(/u/Nebu can reply with 'delete'. Will also delete if comment's score is -1 or less.)* ^| ^(**To summon**: wikibot, what is something?)
Given that this is your first Java program, are you able to make your program print "Hello world" on the screen? If not, I would focus on that problem before worrying about 2D vs 3D.
I think his assumption of a doubly linked list is fair considering it's a Java interview question and java.util.LinkedList is a doubly linked list implementation.
&gt;&gt; linkedlist is an object &gt; not an object, a data structure. `LinkedList` is not an object, it's a class. That said, **a** `LinkedList` is indeed an object (i.e. an instance of the class `LinkedList`). &gt; don't try to answer these with Java-specific knowledge unless they ask you. For an entry level position involving Java, I think it's fine to answer specifically in the context of Java. First of all, it's fair to assume we're talking about Java if the job is advertised as a Java job. Second of all, as an entry level position, maybe the only language you know is Java, in which case you're not in a position to know what concepts/terms you learned as specific to Java, and what concepts/terms are language neutral.
&gt; A linkedlist is most useful and efficient when you will be adding and removing many elements to the list. This is only true when adding or removing elements from the beginning or end of a list (where it is O(1)). When adding/removing elements in the middle of the list, navigating to that section of the list makes adding and removal O(n). From that perspective its no different from and ArrayList. A linked list is however, very efficient in terms of memory (it allocates just what it needs and does not require consecutive memory locations). &gt; A map is an object The java map is an interface, not an object. &gt; An array is a collection of objects that have a set number of entries which is determined at the declaration. Looks good but I might personally add that an array has a static size and must allocate consecutive memory locations and is limited to the size of a signed int
You have the for loop correct, but why are you using multiplication? The formula for finding an average is `{sum of all numbers in a set}/{count of numbers in set} ` Here, your set of numbers is `{1 ... 15}` By hand, how would you sum the numbers and find the average? Given those actions, how can you adapt that to the internals of the for loop?
What part are you having trouble with? But here. So you can turn it in with out understanding it. Seriously though, if you turn it in with out understanding it you're continuing the class at a disadvantage, especially this early in the semester. int sum = 0; //Find the sum for (int i = 1; i &lt;= 15; i+=2) { sum += i; } //Find the average. Using a double because who knows if it might have decimal places. double average = sum / 8; // 8 because there are 8 odd numbers between 1 and 15 //1, 3, 5, 7, 9, 11, 13, 15 System.out.println("The sum is " + sum + ". The average is " + average);
Nice. Do you do everyone's homework for them?
What is wrong? [That works](http://ideone.com/Svu32K).
More often than I should.
I really appreciate that. 
You say you consider these simple questions (and I'm not doubting you), however many, many candidates struggle to answer these. It's not enough to simply be able to mouth of an answer, because we don't actually care that you know definitions - we want you to demonstrate that you *understand* what you're talking about. You should discuss (briefly, no need to wax philosophical about what prime numbers make for a good hash function) common implementations, uses, and disadvantages of these concepts. Demonstrate that you understand how to solve problems with these tools, and not merely that you got an A on your finals sophomore year.
Enthusiasm is great *if you're smart*. I'll happily pass on a smart person who seems bored (or bores me), but a go-getter who keeps on stumbling and getting caught on simple problems isn't going anywhere either. We hire recent grads for their potential, not their excitability.
Noted. so you're saying that if they ask for example what a map (or hashmap) is, I should not only give off the definition, but mention that a useful application might be pairing countries with capital cities or something similar?
Per my top-level comment, these all feel very much like textbook answers, particularly because you do a poor job of discussing pros and cons, and specific examples would be great too. * No discussion of algorithmic complexity (Big O notation) is a near guaranteed fail. * Your answers suggest you don't have a strong grasp of what underlies these concepts - an array is not a "collection", it is a contiguous block of memory. * Similarly be more detailed, describe how a map works, not just it's definition; bonus points if you demonstrate understanding multiple map implementations (e.g. HashMap vs. TreeMap) and when you'd use one or the other. * Your definition of an array also screams "I think of these things as concepts, not tools" - that an array is not re-sizable is rarely a serious problem in real code (it's often an advantage) and you fail to mention that arrays are both fast and ordered, not to mention what's arguably their strongest benefit - ease of use vs. typing out a bunch of separate variables.
Examples are definitely great, but only insofar as they demonstrate a deeper understanding of the topic. A dictionary contains examples as well as definitions, but someone who merely can use a word in a sentence is not going to write good poetry.
wow another 'i don't like x' blog post. cry for attention much? i'm sick of it.
Yep, I agree there - I found FP much easier in F# than Scala. For instance case classes seem quite clunky compared to discriminated unions in F#. I don't think it's that difficult to use Scala as a better Java though. It's just not obvious it's worth the extra effort - even more so with Java 8.
If asked for a definition, give a definition. But if you gave the above definition and stopped there, I would start to think you are just reading things from a textbook and don't know how to program. I would probably probe you more. Ok.. can strings be keys? What about integers? An Object? How does the key lookup occur? Why would I used a map instead of an array? Or better yet, I'd probably ask you to write out a simple program using pseudo code.
These are technically correct. But when someone in real life asks you what reddit is, do you say the following?: * Reddit is a social news and entertainment website where registered users submit content in the form of links or text posts. Users then vote each submission "up" or "down" to rank the post and determine its position on the site's pages. Content entries are organized by areas of interest called "subreddits". No! of course not! You sound like a textbook and even worse, you sound like you don't really know what Reddit is and don't really use it; You are just feigning expertise. (BTW, I stole that quote from Wikipedia)
Note that a "validate" method, though considered a code smell by many (including me) may still be useful if all of the following ring true: * the code is time-critical (e.g. the program spends several hours running this code) * the validation is time-consuming * the class cannot decide when validation is needed. E.g. if you have a SortedSet and validating would check the set to be sorted, this would require O(n) operations (where n is the size of the set) on each insert / delete operation, while the operation only requires O(log n) operations. Yes, I know that assertions allow to selectively execute those checks, but this means the program will run correctly or fast, while it should be both. Static methods are useful. But either restrict them to a utility class (which some also deem a code smell, still they serve a useful purpose), or have as little as needed of them. At least main(String[]) should be static ;-) Note also that splitting a class into multiple collaborators can lead to massively over-engineered code with 6 objects calling each other through multiple levels of indirection, while a single class would have done the trick. As always, use your best judgement (TM).
At this point they should just stop doing webstart at all. 
Who does GUI in java anymore? Swing is awful to code in and then looks like a pile of turds when your done.
Use ThreadLocalRandom: Random r = ThreadLocalRandom.current(); public double getRandomDouble(double x) { r.setSeed(Double.doubleToRawLongBits(x)); return r.nextDouble(); } Edited: To add that you should of course call this only once per thread. Two things: ThreadLocalRandom is a lot faster than classic Random, because it does not need to synchronize. Also you can reuse the ThreadLocalRandom object. No need to create a new one each time.
Those requirements are midly unrealistic for an internship. I have not met a single intern candidate which possesses JEE dev skills other than "I know Java". Most don't know what a servlet is (and that's actually okay). Don't get too hung up on them. Other posters are giving you good "question" advice.
of course, post :) 
Leave nothing behind in your active queue I meant, and leverage a DLQ for expired messages or ones that fail to process.
For entry-level positions, my manager always asks the difference between an interface and an abstract class. And where would you use each? 
For better readable unit tests I recommend the hamcrest library: https://code.google.com/p/hamcrest/wiki/Tutorial Great in combination with TDD.
&gt; if you haven't taken an algorithms &amp; data structures class and don't have basic knowledge about abstract data structures (like maps, linked lists) outside the context of Java, you will probably not be hired. I think you're forgetting that this is an entry level internship as part of a university coop program: Every student, including the worst student in the class, needs to get a job as part of their degree. Do you remember from university how bad the worst student was and who still got a diploma at the end? They got hired somewhere. In my experience, expectations are set very low for internship/coop hires.
You're right that I forgot that `LinkedList` needs to traverse the list before inserting into the middle, and thus does not have an advantage over `ArrayList` for that use case, so thank you for that. However, I'm not sure `LinkedList` has an advantage over `ArrayList` for inserting in the end. The `ArrayList` implementation grows the internal backing array bigger than needed, so that perhaps the performance is [I forgot the word here, but "O(1) in aggregate, over the long term"]. This would definitely be the case if the size of the internal backing array double with each growth, but I'm also skeptical as to whether they do that. How slow would the backing array have to grow until it becomes, e.g. O(log(n))? &gt; Arrays have the advantages that the elements are laid out contiguously in memory. I remember seeing a talk where the presenter argued to never use Java's `LinkedList`, because `ArrayList` was "always" faster (mainly due to this contiguous property). Good to keep in the back of your mind, but I hadn't brought that up here (until now) because: 1. Probably not appropriate for "entry level". 2. By the time the OP is not "entry level" anymore, it's conceivable that the architecture of the JVM or whatever has changed such that these performance claims are no longer true. 3. Premature optimization?
That was under Sun, and the first release of JavaFX was a turd ... what Java developer wanted to write in JavaFX Script? The current release of JavaFX is all Java API, although you can use FXML to layout UI's too. I *think* Oracle was giving JavaFX some time to mature before they kicked it over the fence. I would suck for them to have the 'next big thing" be not so big. Anyway, with the impending release of Java 8 this spring, I've finally started developing work applications in JavaFX and it's pretty sweet. Scene Builder is great for laying out basic UI's. It's got a great logical API, a real scene graph, allows mods to controls using CSS, video media playback, a decent binding API, a webview based on WebKit, DSL's in groovy and Scala. It runs on RasberryPi and supposedly, if you're motivated, you can run it on Android and iOS, but I haven't tried that yet. All-in-all I'd say the JavaFX team has done a really amazing job.
isn't that something you should do on the webserver part and not on the app server? http://wiki.apache.org/httpd/RedirectSSL 
Abstract classes and interfaces are similar in that you cannot instantiate either directly, they are meant to be used by subclasses. In both abstract classes and interfaces, abstract methods are be declared (the return type and signature is given) but the body of the code is not written. A subclass *extends* an abstract class while it *implements* interfaces. Only 1 abstract class may be extended, but you can implement several interfaces. The difference in abstract classes and interfaces is that abstract classes can contain concrete methods (ones containing code) as well as abstract methods, but interfaces can only contain abstract methods and cannot contain any actual code. Interfaces are used to make sure your subclasses conform to a standard and that you can interact with them using the same methods as similar objects Interfaces are essentially a way of standardizing your code, and making sure that different objects can interact with each other. Every abstract method in an interface needs to be overwritten when implemented. Abstract Classes are useful for polymorphism, and can give every subclass the same base and can make it so you don't have to rewrite your code. Every abstract method in an abstract class needs to be overwritten, but subclasses can choose whether or not to overwrite concrete methods This is useful because your your program might have to work with, for example, linkedlists or arraylists, but because they both implement the interface list you'll be able to do many of the same operations and use the same methods whether your program is passed a linkedlist or an arraylist. Note: this is much longer than what I'd say in an interview. I just want to make sure I understand the concept fully EDIT: &gt;where would you use each? Let's say I had a program where I was using shapes. I would make an interface called *Shape* with methods like getArea(); getPerimeter(); and getNumberofSides(); I might then create an abstract class called *Quadrilateral* where I might define getNumberofSides(); to return 4. I could then create a class called Square which extends Quadrilateral and implements Shape. getArea(); and getPerimeter(); would then be defined in Square, but I wouldn't have to define getNumberofSides() because it would be inherited from Quadrilateral *Halfway through writing this I realized this might be a bad example because Quadrilateral and Shape would have interlapping methods and would probably be redundant in this example. It might make more sense to just have Quadrilateral implement Shape, and then Square would still inherit those abstract classes from Quadrilateral. Would that be a more correct way of doing it? I'm assuming in this case that since Quad is an abstract class, I still wouldn't have to define Shape's abstract methods and could still put that off until extending it in Square...*
Please, if you post in multiple subs, mark X-Posts (preferably in the title) to avoid redundant answers. **X-post from /r/javahelp**
Neat!
Yeah. Can someone explain that article more simply?
You'd need to read the data of the models. I searched briefly but didn't see any 3ds file loaders for Java so you might have to use something like https://code.google.com/p/lib3ds/ and then use Java's JNI to talk to the C code. You might also see if you can export to a different 3d data format that someone has written a loader for in Java. But since you are going to fake it anyway I'd recommend you just use 3ds to render some high-quality images of the pieces and export those to PNG image files which will be much easier to load (and scale) in your game.
When I interview students for student jobs, the most important thing for me is how they talk about which projects they have done. If they only speak about projects they have done in school, they are 90% certain not a subject for us. If however they are programming in their spare time because they think it's fun, they are most likely broad geeks, and will become great techies. TL/DR if your only programming experience is from school, you will not be lucky.
Yes, the best practice is to have your users connect to a web server (e.g. Apache) which is configured to reverse proxy into your web application. You can easily configure the redirect on your web server too.
Uhh? What the fuck is this?
You can use Unsafe to do unsafe things like: * Allocate an instance without initializing it through the constructor. * Allocate an instance and use some other class's constructor. * Allocate a bunch of memory that's not managed by the garbage collector.
Why? I found it a really interesting way to deploy rich client, and update them in an intranet. 
My current setup is using [pound](http://packages.debian.org/wheezy/pound) as reverse-proxy and using GlassFish to host my web applications, I don't know if pound can do that but I will take a look.
The problem is that the URL returned from my web application is still the HTTP one, not HTTPS one. For example, when someone send a request to: http://example.com/mywebapp/ I would expect the web application to return HTTP status 301 with the URL: https://example.com/mywebapp/ But instead it returns the following: http://example.com/mywebapp/ So the browser keeps sending request to the resource over HTTP and get redirected to the same URL every time.
I just blogged part III (form and programmatic login). If you like part II or II, youi may submit a link to reddit.
It's a psychological thing. By showing enthusiasm, you are radiating energy and telling the employer that you are full of energy and ready to work hard. You're also showing interest in their line of work. People generally like other people who take interest in them. Of course, it's great that you are able to look beyond presentability and into the skills that really matter for a programming job, but many interviewers don't focus enough on the actual skillset.
Nice little article. It was a little hard to read - the grammar/word choice sometimes feels a little off as if from a non-native speaker. And there are some errors that an editor really should have caught: On try-with-resources, it calls the first resource "Resource 1 passed as argument", which it isn't. The author was maybe confusing try() with an actual function call. This sample code is definitely wrong: Path path= new Paths.get("fileName"); As long as you can read past the errors, it's a useful article.
What is the error you're experiencing? The code seems to correctly compare an existing "this is a grid of letters" with "this is my guess at what that field is" and produce a "these letters were correct". Are you trying to solve one of [these](http://pbskids.org/itsmylife/friends/nicknames/print_wordsearch.html)? Because that code doesn't do that. 
What **specifically** are you having trouble with? edit: Just to clarify, when your instructor is asking for user input for "Price per sq foot of carpet desired", is any number under the sun acceptable? I thought that this might have been a typo since the next section lists a constant value, but that was for carpet *padding*. Either way, this should be a pretty simple application to write. 
I mean i have a very basic knowledge of input and output. As far as the math portion of the programming im lost completely. Im not sure how to input constants into the math portion of the programming, or how to set up the equations once the constants are in.
I was having trouble understanding that portion of the instruction too and normally i would just go to her to ask, only problem is shes at a conference all week so we have to take matters into our own hands and currently im sinking. Is there anyway you could possibly create a shell for the program?
&gt; Im not sure how to input constants into the math portion of the programming If you're currently able to take user input, this part should be cake. Just create variable(s) (of type "double" according to your professor) and assign the appropriate values. Then use these variables just like you would in algebra to solve the math. 
Just started learning Java... So what's new with 8, ? Anything particular that'd effect a learner? 
Uhm im not sure entirely i even understand that question, but in order to read the user input i use the system.out.println to type the message where they enter their number and the i know im supposed to be using the scanner in order to take down their inputs. 
&gt;i use the system.out.~~println~~ print to type the message FTFY, your instructor said user input should be typed on the same line as the prompt. 
Damn, I actually have one somewhere on my other computer (for exactly this purpose!) I could post it tomorrow. But it is pretty efficient. Here are some tips: skip every letter that isn't the beginning of a word (use a lot of continue keywords), make a getAdjacents() method and use it to see if any of those letters match the second letter of a word starting with the letter that you are getting the adjacent letters from, remember the direction you were using and continue in that direction until a letter is wrong or the word is complete; if it was wrong go and check more direction if there are any left to check. To get the order you went in I recommend a stack. You push to it every time and if you messed up you clear it (if on the getAdjacents() and you took the wrong one just pop into nothing). At the end pop all those positions (don't store these as chars; I recommend a vector class) and store them into an array of positions in a hashmap of &lt;word, position&gt;. That is in essence what my algorithm does. It's pretty efficient, though I'm sure it could be improved. Like I said, I'll try to post my code tomorrow (if I remember and can find it on my hard drive).
just reading this makes me realize how much OO programming I've forgotten. little syntax things.......it all makes sense, and I remember learning all of it, but if you'd asked me to write even something as simple as this just 2 minutes before reading this, i'd have had a lot of trouble :/
I did a lot of practice programs, and a lot of algorithms. I am good at maths, and I went trough a lot of examples on Java, this is just a first solo project, but thanks for the comment anyways :D
Honestly you could have started learning today and i wouldn't mind the help. Help is help and i appreciate every bit your giving me! As far as losing me no. I`m with you so far. I've gotten to the point where i can have the user input their length and width by using the scan.nextInt function, but the price per square foot is confusing because on the bullet put below it gives me a constant that im not supposed to change, yet shes wants the user to input this number?
I thought so too. The first part sounds complicated for me atm, but the second one I can do, was just wondering was it the best solution. Thank you, I really appreciate it :D
&gt; by using the scan.nextInt function Negative, ghost rider! int is used to store INTEGERS (whole numbers). Your professor specifically asked for double or float, I chose to use double for the program that I wrote for your assignment. Change that line to "nextDouble(); So your first few lines should look something like the following: *// prompt user for input (length)* System.out.print("Please enter the length of your room (in feet): "); *// read user input* double length = userInput.nextDouble(); **edit:** on the above line I'm declaring a variable called "length" of type double. Then I'm using the assignment operator "=" to assign this variable to the user's input (the next double the user enters). 
Ah no! I'll have to get a move on with these 7 tutorials then... 
Probably a bad choice of words on my side. I am not that new to Java, I did a lot of small exercise programs, this is just my first solo project, where I wanted to accomplish 2 things: 1) For it to be a bit more complicated than what I can handle atm, so I can learn from it 2) To work on it with my best man, who is learning his way through 3ds Max
Hopefully the journey will get a bit better. Okay ig et what your saying about the padding being a seperate variable although im not sure where its going to go, but for now editor is giving me an error message saying cannot find symbol userInput.nextDouble();. Edit: the upward error to locate the issue is under the u in user 
Okay cool got that one fixed. So what is next exactly?
http://prntscr.com/2jq8di
Me and my friend are both working on it. Hes posting what we have. 
Looks good. What do you think comes next? 
Well that one guy said to use keyword final. Would that be next or a later step? If its not the finalizing are we supposed to put the constants in somewhere? 
So would it be final installation = 99.0 or would it simply be installation = 99.0. or would it be either?
Where exactly in the program would it go though?
This is just my .02, but don't use that line of code. #1 - It looks nothing like your own, which is going to raise suspicion when your instructor grades it. #2 - This is well beyond the scope of what you're learning at this point in time. If this is your first programming class, you're probably not going to cover access modifiers like "public" until half way through the semester. This is the reason why I'm not just giving you the answers. You're a lot better off stumbling through the code when you're getting started than just copying and pasting lines from the internet. Not only are you cheating yourself, but you're making it blatantly obvious that you're cheating on the assignments. And I'm not saying this as some holier-than-thou asshole, I'm saying it as a guy who's literally seen people kicked out of classes (and even the university) for doing just this. 
So is double width; a line by itself?
I appreciate the words of concern, but we are learning the public currently. Next is Boolean then loops. All the stuff being thrown at me is stuff she has showed, just not clarified on. And the fact she left the stet without really preparing for us on the second week of school kinda put the people like me in a shitty situation.
This is frustrating AF ha, but okay i see what your saying.
Do not do that. See my above post. You're **WAY** over-thinking this. Look at the code you used for the user's input. It's almost the same as what you need to use for your constants. double length = scan.nextDouble(); On the left side of the assignment operator (=), **you are declaring a variable of type double and naming it "length"** *hint hint*. On the right side, you are assigning the variable to the user's input, which you DON'T NEED TO DO when you already know what the value is going to be (your constant). So to summarize, set up these variables just like you did in your code above then ASSIGN them (=) to the value provided by your instructor. All of this code is going to go in your main method. Just put it right under the last line of code that you had from the screenshot you uploaded. Another way of thinking about this - Your carpet variable of type double is equal to 3.49 If you're still stuck after reading this then I'll provide you with some code, but I guarantee you that you're going to laugh when you realize how simple it is. 
http://prntscr.com/2jqjow
&gt; Okay, I admit that line 16 is not correct as this results in creating a lock for each thread that is instantiated, but I don't know the proper way of creating a single lock for multiple threads Create the lock in one place, then make it accessible to other parts of the program. You can do this in a few ways: # Use a 'global' variable that everyone can see and use. public class SimpleLockTest { // a lock that is a static member variable // now other threads can see it and use it private static Lock myLock; public static void main(String[] args) { // don't forget to initialize the lock myLock = new ReentrantLock(); Thread firstThread = new Thread(new SimpleLock()); Thread secondThread = new Thread(new SimpleLock()); firstThread.start(); secondThread.start(); } static class SimpleLock implements Runnable { public void printOutput() { System.out.println("Hello!"); } public void run() { if (myLock.tryLock()) { myLock.lock(); printOutput(); } else { System.out.println("The lock is not accessible."); } } } } # Pass the lock to each instance of the class. The class uses that lock. I think this is better style: public class SimpleLockTest { public static void main(String[] args) { // Create a lock lock Lock aLock = new ReentrantLock(); // pass the lock to each SimpleLock object Thread firstThread = new Thread(new SimpleLock(aLock)); Thread secondThread = new Thread(new SimpleLock(aLock)); firstThread.start(); secondThread.start(); } static class SimpleLock implements Runnable { private Lock myLock; // accept the lock to use in the constructor SimpleLock(Lock lockToUse) { myLock = lockToUse; } public void printOutput() { System.out.println("Hello!"); } public void run() { if (myLock.tryLock()) { myLock.lock(); printOutput(); } else { System.out.println("The lock is not accessible."); } } } } 
Okay i think i got it. Hes posting what we have now.
hmm
Yes sir! 
Thanks! Some person over at /r/learnprogramming helped me gain somewhat of an understanding of locks. Here is the code that I ended up with: import java.util.concurrent.locks.Lock; import java.util.concurrent.locks.ReentrantLock; public class SimpleLockTest { static class PrintNumbers implements Runnable { private final Lock lock = new ReentrantLock(); public void printNum() { //System.out.println(lock.tryLock()); lock.lock(); try { for (int i = 1; i &lt;= 10; i++) { System.out.printf("%d ", i); } System.out.println(); } finally { lock.unlock(); } } public void run() { printNum(); } } public static void main(String[] args) { PrintNumbers printNumbers = new PrintNumbers(); Thread firstThread = new Thread(printNumbers); Thread secondThread = new Thread(printNumbers); firstThread.start(); secondThread.start(); } } My only complaint/inquiry now is when I uncomment line 14, the output is: true 1 2 3 4 5 6 7 8 9 10 false How come its not: true 1 2 3 4 5 6 7 8 9 10 true 1 2 3 4 5 6 7 8 9 10 Is it because by the time the second thread starts, the first thread hasn't unlocked yet, or no? Do you have a suggestion of visualizing threads as they run? Is there a class out there made for thread monitoring? 
I honestly think your best bet is to become familiar with have on the web. Why don't you create stat tracking for each of those games accessible on the web? Start out with basic tomcat projects. Move up to learning more about jee. Wildfly will be your best bet there. That will also get you familiar with persistence, a skill and knowledge you will have to have to work as a programmer. From there, if you wish to forgo education, I would suggest certifications. 
Short and to the point. Useful Article
We've got this: http://prntscr.com/2jqnmq We don't know how to get the cost for carpet because it's taken from user input.
&gt; Is it because by the time the second thread starts, the first thread hasn't unlocked yet, or no? Here is the problem: // if possible, this acquires the lock, otherwise it returns false immediately System.out.println(lock.tryLock()); // no matter whether the line above worked, acquire the lock lock.lock() Do you see what this does? The first thread will acquire the lock *twice*. The second will fail the `tryLock()` and then wait at the second `lock.lock()` line. The first thread, when done, will call unlock *once*. So the first thread still owns the lock and the second thread never proceeds. You need to make sure that if `tryLock()` succeeds, there is a matching `unlock()`. If you have both a succesful `tryLock()` and a `lock()`, then you need two `unlock()`s. &gt; Do you have a suggestion of visualizing threads as they run? Sadly, no. There are tools that help in debugging threads, but none of them are any good, especially for beginers. I recommend using `Ctrl-\` instead. This will give you a *thread dump*. That basically shows what each thread is doing. "Thread-1" prio=10 tid=0x00007fb9e80ea800 nid=0x78ea waiting on condition [0x00007fb9e2333000] java.lang.Thread.State: WAITING (parking) [ snip ] at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:290) at SimpleLockTest$PrintNumbers.printNum(SimpleLockTest.java:14) at SimpleLockTest$PrintNumbers.run(SimpleLockTest.java:28) at java.lang.Thread.run(Thread.java:744) This shows that 'thread1' is waiting to acquire a lock at SimpleLockTest.java line 14.
The cost for carpet would be your "cost per sq ft variable" times the area from your first calculation. Something like this: double area = (length * width); double costOfCarpet = (~~carpetConstarntVarible~~ costPerSqFtVariable * area); padding total would be the constant * area. edit: also I would solve for all of your math calculations BEFORE trying to output that info to the screen. That way you know whether your math is right and you don't spend a lot of time trying to figure out if your errors are math related or due to the syntax of your "print" command. I'm heading to the gym for a little while, that should give you some time to work on it. Just look at the two lines that I provided above and follow that logic for the rest of the calculations. I'll check back in a little bit to see if you still have questions. 
How's this look? Any suggestions for the grand total? http://prntscr.com/2jqq2d
http://prntscr.com/2jqu0k This is the final product and it seemed to work right.
IMO, it's a lot easier if you work out the math problems before hand and assign the answer to a single variable. That way when you go to output the information, you're only using a single variable in your System.out.print() method. This is what mine looks like: *// total sq ft to be carpeted* double totalSqFeet = (length * width); *// cost for all carpeting* double costForAllCarpeting = carpetPrice * totalSqFeet; *// cost for all padding* double costForAllPadding = carpetPadding * totalSqFeet; *// total tax* double totalTax = salesTax * (costForAllCarpeting + costForAllPadding); *// installation (this was given to us)* *// Grand Total* double grandTotal = (costForAllCarpeting + costForAllPadding + totalTax + installation); *// Breakdown of expenses / Output* System.out.println("Total Sq Ft: " + totalSqFeet); System.out.println("Cost For All Carpeting: $" + costForAllCarpeting); System.out.println("Cost For All Padding: $" + costForAllPadding); System.out.println("Total Tax: $" + totalTax); System.out.println("Installation Costs: $" + installation); System.out.println("Grand Total: $" + grandTotal); 
This is how it ended up: http://prntscr.com/2jqzqy
We actually figured it out while you were at the gym! Thanks for everything though! 
That looks good to me. Is your math checking out when you run it? Since I used double, some of my answers had numbers with quite a few decimal places. But your instructor didn't specify that she wanted the answers formatted to round up to the nearest cent so I'm sure you'd be good to go with what you have. 
What the docs are saying, but are not very clear, is that the first argument to showMessageDialog can be one of two values: the JFrame you want the Dialog to appear in (if you already have a window and want to reuse it) or null if you want the dialog to show up in it's own window. The reason you're getting the "frame cannot be resolved to a variable" is that you aren't defining a variable named 'frame' before you try to use it. Incidentally, what IDE are you using? as long as you're using anything more advanced than a plain text editor, it should be warning you about that before you get to the compile step. I'm not saying you need to learn Eclipse/Netbeans/IntelliJ (that would be overkill at your stage of the game), but something better than notepad. Anyway, JOptionPane.showMessageDialog(null, "Hello World!"); is a totally normally programming style. 
Yeah she told us that she'd work on cleaning up decimals in the future. Thanks for the help. My friend gave you gold.
That's good to hear and thanks for the gold! Feel free to shoot me a pm in the future if you're stuck on something and I'll try to help you out if I can. 
No problem and will do man.
You're very welcome. We've all been there before. Pay it forward. 
&gt; On the third day of Christmas my true love gave to me. 3 French Hens, 2 Turtle Doves, and A Partridge in a Pear Tree. Where's the "weird space"? BTW, this question belongs in /r/javahelp.
* post in /r/javahelp the next time. but read it's posting instructions in the sidebar * PLEASE learn how to format your code. There's a "formatting help" under each submission &amp; comment box that shows you how to format code. This is actually *really* important, otherwise your "weird space" doesn't show here on reddit. * To answer your question: there's a space at the end of the string in your `Hens()` method. You should have been able to spot that yourself... 
Depends which company you're looking at and where your passion is. If the company is web-based then a good Tomcat project is probably the way to go. As hoohoohoohoo mentioned you can even integrate that with your minesweeper program. When I was in high school I created a fully functional pacman game with different AI behavior for each ghost (my teacher was laid back so I worked on it for most of a semester). Something like that would stand out a lot more than minesweeper or tic-tac-toe which are pretty standard/common to do in class. If you aren't as web based make sure to have a project where you really implement some OO stuff. I've had an interview question before about how to implement a restaurant reservation system. Program something like that where there are multiple components that you actually have to think about the design for. Basically you want to show that a) you really have a decent in-depth understanding of java/web-stuff/OO and b) that you are passionate about programming. If you have a project that demonstrates a and b then you have a pretty good shot.
I got the impression that fork can divide a single task to multiple processors automatically. Is that right? Would be quite a bit different from executorService (which is already great)
Thank you very much, I am not sure why I couldn't spot that before. Now that it is pointed out, it was pretty obvious. I will post into that sub for any further questions, and I will learn to format my code. Thank you for the help!
On my team I think it is the opposite. We'll likely be on Java 6 for a few more years, and adding in Scala is 1000x easier than the billion meetings we would need to have with the infrastructure team to support Java 8. We haven't really had any issues. 
Thanks for the SELECT part. What if the INSERT is for logging? Like inserting access log for a web application. Because it is done automatically (by the web application or logging utility) instead of doing it myself manually, then it is ok not to use transaction?
We're learning in Eclipse. That makes sense. Thanks for your time. 
If you are still preparing, can check these questions, much more like what is suggested here http://javarevisited.blogspot.com/2011/04/top-20-core-java-interview-questions.html, good for quick revision.
If you don't mind me asking, do you intend on using a thread Lock to represent a water lock?
Scala does a lot of Java bashing ;) We are their prime target any way...
Haha, you said it right. A mere thousands vs millions in one of the several other languages! *LOL*
If you're inserting a single log record, I don't see the point in using a transaction.
Unless you're absolutely, positively sure you absolutely, positively *must* use `Unsafe`, *don't!* There's a reason it's so hard to gain access to this API, after all. In particular: * The class with the artificially-expensive constructor should be modified to not have the expensive constructor. * Java serialization constructing objects without initializing them is a bad design decision. For that matter, there are a lot of things wrong with how Java serialization is designed. There's a reason it isn't used much. * Throwing checked exceptions without a declaration is actually something you're prevented from doing by the *compiler,* not the JVM. This means you can do the same thing with a hand-modified `class` file. You don't need `Unsafe` for that. * Instead of `park`/`unpark` and `monitorEnter`/`monitorExit`/`tryMonitorEnter`, you should use `Thread#sleep`, `java.util.concurrent`, etc. To my knowledge, there is nothing you can accomplish with the former that you can't accomplish with the latter.
http://www.youtube.com/watch?v=2-Bwks3u5C0
You'll gain significant performance improvements if you listen for, say, 100 log messages or a few seconds, and then insert what you've got in batch.
I maintain a webstart app, tired of fixing it every time they break it with a change like this. Just kill webstart and free me
Or you could just have followed the best practices from the start. Very few things were added since they were launched. They just enforced more and more the security, which is a good thing.
That's too little information. What Operating System are you running? Do you run the applet in a browser (if so, what product and version?) or the appletviewer? Which JRE do you use?
What operating system are you using? If you are under Windows, you can go to the Control Panel, and click on the Java icon. In the Security tab, you will be able to set your Security Level. Note that after you have run the applet, you should set it back to where it was. Note also that you should upgrade to the latest Java version, as previous version contain huge security holes, mainly when dealing with applets.
Good point, you are obviously correct.
Well, that's because GC algorithms are not very good with such sizes. They are working o change that.
I didn't build it from the start. I have a feeling if there were as many requirements for webstart as there are today my predecessors wouldn't have built it as webstart.
Windows. Firefox, latest version. I don't think I can tell you what JRE I use.
There's only "certificates" under the security tab. How am I supposed to change my security that way?
We have to build a water system simulation with stations and pipes. The stations can only use two pipes for inbound and outbound water. The pipes themselves will be locked to the station until the station releases them. Once the station releases them, the other stations will be able to use the pipes.
Thanks but part of the restriction on this assignment is that we cannot use a monitor which is why I went ahead with locks. Nice code by the way!
&gt; Instead of park/unpark and monitorEnter/monitorExit/tryMonitorEnter, you should use Thread#sleep, java.util.concurrent, etc. To my knowledge, there is nothing you can accomplish with the former that you can't accomplish with the latter. Or you could just use the LockSupport class which is public API and has exactly these methods.
`LockSupport` doesn't have `monitorEnter`/`monitorExit`/`tryMonitorEnter`. However, `Lock` does expose similar functionality.
It should look [like this](http://docs.oracle.com/javase/7/docs/technotes/guides/jweb/jcp.html#security). Maybe update your Java 7 first..
I updated it...It didn't work.
AFAIR, Firefox in the latest versions disables Java Applets by default, because Oracle did not manage to fix a number of bugs that already were exploited in the wild. Perhaps [Mozilla Support: Enable Java if its been blocked](http://support.mozilla.org/en-US/kb/how-to-enable-java-if-its-been-blocked) can help you.
I don't get why JavaRevisited gets submitted here so much. It's one of the worst-written blogs.
I'm not sure the explanation wasn't the greatest, I'll probably have a play soon. But at this point it's going to be hard to pull me away from the ExecutorService.
there are many people who do 100+GB heaps... big data / caching comes to mind. 
G1 works quite well - in one case we were able to replace 2 x 4GB JVMs on 2 servers to 2 * 92 GB on 3 servers (obviously dramatically increasing our capacity) while keeping the same pause times with G1. The 3 servers were far more powerful than the 12 servers we had before, but G1 can maintain low pauses with large heaps... our use case is a heavily utilized cache and we have gc pauses around 100ms every few minutes (which is an extremely low GC overhead) Getting a worst-case GC pause of 10ms out of Shenandoah would be ideal if the overhead was not too bad. (Obviously we wouldn't want it to pause for 10ms every 11ms ;) )
In case one of the log messages make the INSERT fail, does the whole batch of log messages not being inserted, or only that log message not being inserted? Many thanks.
Unless you use applets, in which case they most likely will not work with u51.
You extend JPanel and override paintComponent. But you're not adding your custom class to that JFrame. Instead you're adding a regular JPanel. 
My understanding was that unsigned applets would need explicitly adding to a whitelist. Is that not the case?
&gt; Unless you use applets That is an extremely bad and dangerous advice! Most of the 36 security fixes are about flaws in applet security, which allow easy and total control of your computer by merely visiting a malicious web page. The Java Control Panel now has a white list of web addresses that are allowed to run applets with less security controls. If you still need to use applets not upgraded to the increased security requirements, you can use that white list.
Are all of your boards allocated to the same MxN sizes? Your scanning loop is assuming that word and output are the same size as board. Is that valid?
&gt; What if the INSERT is for logging? I don't know the use case specifically, but on the surface this really seems like a bad use of a database. Why not go to files or even better something like http://logstash.net/
You have a space after \n in your Hens()-method.
I would suggest taking a look at your last thread on swing more closely. Someone there posted code that solved this setup problem. The keyword 'this' in Java might be of use. Also, you're using a function called setUp after you initialize the DisplayImage object, but why? You could use it in the constructor for DisplayImage so that when you initialize an object it gets setup for you.
&gt; &gt; &gt; &gt; &gt; That is an extremely bad and dangerous advice! Most of the 36 security fixes are about flaws in applet security, which allow easy and total control of your computer by merely visiting a malicious web page. Wow, how could a security hole like that deploy in the first place?
was that a serious question?
It was. Maybe I should have phrased it in a more humble way, but it is an honest question. I don't know that much about these things, but I am curious.
Well you should really just sign your applets. That goes a long way towards fixing everything. Then you will also need to change a few things in your manifest files. I wish there was more warning when these changes comes. Maybe there is and I do not know about it. What it ends up meaning is on release day I have to make some quick jar file changes.
I have no problem signing applets at my place of employment. The concern here is that these changes basically nuked every single home project applet (e.g. all the math stuff out there), as someone playing around with Java in their spare time won't be shelling out hundreds of dollars a year to sign their pet projects that they want to share with others. Also, anything that is legacy that is out there is basically dead now, and most of them won't be updated by their creators.
Well, I was interested as well, so I wrote one such applet a year ago. I found the source code on a security forum, and studied it. Basically, it was one method removeSecurity() that was quite clever (of course), and then you could run whatever code you wanted with full privilege. I my case, after calling removeSecurity() in my applet, I chose to run System.exec("calc.exe"), showing that I could run any program I wanted on the computer that ran the applet. In terms of GUI, I merely displayed a single white pixel. Then I deployed manually the applet on my own web site, in a blank page. When visiting the page, the Windows calculator simply launched. :-) (After that, I upgraded my JRE so that I was no longer vulnerable to the vulnerability I had just showcased.) Of course, had I been a malicious person, I would not have run calc.exe, but a program that would infect the machine with whatever malware I wanted. The program would not display anything to the user, who apart from a bit more hard drive noise than usual, would not notice anything. In terms of deployment, hosting such a malware on your own web site is not effective: as soon as enough users complain, you would be investigated and shut down. What malicious people do is look for security flaws in other web sites, typically forums or CMS written in PHP, where they either can upload the applet and inject it in a page, or gain total access to the server and install the applet as they want. Formerly very popular "free" hosting plans, but also many low-cost, mass hosters with clueless web site owners are under heavy attack from such malicious people who are relentlessly looking for such security flaws, in order to host their malware.
&gt; Also, anything that is legacy that is out there is basically dead now, and most of them won't be updated by their creators. As a user, you can whitelist them.
&gt;As a user, you can whitelist them. So now users either 1) don't know how to do this so miss out or 2) get in the habit of whitlisting any java applet they can't access, and, whoops, whitelist the actually bad applets...
The first feature is great, and really appreciated. But I should really learn lambdas properly and not rely on the lovely NetBeans to do everything for me. Anyone have any good resources to get started with lambdas?
Try looking at: + Scanner - needed to read the console + System.in - the inbound Stream of the console (keyboard) + System.out - the outbound Stream of the console (screen)
Correction: Java *applets* account for exploits not Java. Java is a giant ecosystem and applets make up a small portion that is not relatively widely used and thus gets little attention compared to server side Java. This headline and even article is like saying Microsoft is responsible for 91% of exploits when you really were talking about ActiveX. Bad journalism!
Thanks! I'll look over those.
https://www.google.com/search?q=java+input+through+console
A single SQL statement is already a transaction (unless you purposely turn that off). For example update my_table set col1='a', col2='b' where id=99; will commit after it's run, without having to call COMMIT. Also, neither column will update if one of them fails. You should still use transactions if you are calling **select** multiple times. For example: begin transaction; select * from orders where order_id=1; select * from line_items where order_id=1; commit; Because without a transaction, if someone inserts a line_item after the first select but before the second, then you would see it, but probably don't want to. Your default database isolation level should be sufficient to avoid this, though MyISAM (MySQL) doesn't do transactions. In Spring, you can turn on read-only transactions for selects using annotations. http://stackoverflow.com/questions/5982517/use-transactions-for-select-statements
FTFY: Unless you don't use applets, in which case you most likely should uninstall Java. Firefox blocks Java for a reason and even this new protections will not be bulletproof. If you are not using applets, uninstall or at least disable it in all your browsers.
Corrected, Completed. Any Errors? public class OddLoop { public static void main(String[] args) { int sumOfOddNumbers = 0; int numberOfOddNumbers = 0; int averageOfOddNumbers = 0; for(int i=0;i&lt;=15;i++){ if(i%2!=0){ //Ad.2 sumOfOddNumbers += i; numberOfOddNumbers++; } } averageOfOddNumbers = sumOfOddNumbers/numberOfOddNumbers; System.out.println("Average of odd numbers is: "+averageOfOddNumbers); System.out.println("Sum of odd numbers is: "+sumOfOddNumbers); System.out.println("Number of odd numbers is: "+numberOfOddNumbers); } } 
If it makes you feel any better, I can't ride a bicycle anymore.
Please note that new applet security stuff applies to software deployed via jnlp.
You actually need a Jframe that acts like a container. This one can hold the JPane. You can set the JPane to a JFrame via JFrame.setContentPane(JPanel);
A Java EE server like TomEE will implement the full Java EE specification, whereas software such as Tomcat will only implement the Servlet specification. I don't think the term application server specifies any unique functionality in this context, but is used as a more of a moniker, as I believe the full term is "web application server". 
I think the most important thing to know about synchronization in Java is to avoid using it. You should think of locks and synchronization as low-level constructs that other smarter people have used to build layers of abstraction that free you from having to worry about it yourself. A properly designed system will allow you to use stuff like thread-safe data structures from the java.util.concurrent library to avoid shared mutable state. Shared mutable state is a huge source of problems in a concurrent system. 
not quite - the java applets are exploiting, authentication, access and other restrictions in the Java runtime, which is what is pervasive. It is the combined applet and runtime ecosystem ('java') that is the risk. If the Java SE runtime was 'secure' applets couldn't exploit it. 
Not quite. If you examine the nature of the exploits, you will see that the vast majority are with the security manager. This feature was intended to allow Java code to be run in a sandbox for safe execution over networks, the basis of applets. However, the security manager has been shown to be full of holes, and apart from the general performance issues of applets, have pretty much killed Java applets as a technology platform. However, most Java code is not run in a sandbox and runs in server, desktop and embedded applications with full access to the machine, just like any other desktop and server application. In these cases, the flaws in the security manager are irrelevant because the applications are not being run in a sandbox. Code depending on the sandbox represents a minority of Java applications. Thus the analogy with ActiveX. The fact that native code execution over the network is dangerous is not a flaw of the Windows runtime, but an issue with ActiveX as a technology.
"Application Server" pretty much always means J2EE full profile, ie the whole enchilada: JPA, JSF, EJB, blah blah blah. Look up the Oracly J2EE tutorial for the details of what all that entails. Examples are Glassfish, JBoss, Websphere, etc... Container in Tomcat is an about wars, a war is a package web application (part of the J2EE spec) and Catalina is a web app container. Catalina was the name of the initial Tomcat implementation iirc.
This one will make your life easy getting inputs from console. Scanner in = new Scanner(System.in); int i = in.nextInt(); // or any other fomat String s = in.next(); 
If its a 'fetch' query then no need. but if you are persisting something(save or update) then yes you should wrap it up into a transaction.
Apart from /r/javahelp where beginner questions might be more suitable: no, you're in the right subreddit. The reason I pointed out the Google query is that your question is not exactly for a strange, tricky, bizarre &amp; convoluted issue: it's about input &amp; output. You've even said it yourself: that's very basic. As such, there's *millions* of threads, blog posts, Stack Overflow questions, tutorials and other forms of guides out there that address your *exact* issue. It's also [asked in this very subreddit](http://www.reddit.com/r/java/search?q=input+console&amp;restrict_sr=on) every so often. And as your question is for class, I guess your textbook or other documents of the class address this subject as well. There's a difference between having "the human element" helping &amp; teaching you, and having Reddit spoon-feed you topics that you can easily look up by yourself. As a programmer you'll absolutely need to learn &amp; master the ability to look up stuff on the internet. Reddit might help you better if you get here with a specific question: "I have this code, but I'm getting this error". But as it is, you're submitting a question about a subject that is not only covered in **every** Java beginner's guide, has been asked here many many times but also a simple Google query could have answered in less time than typing your submission.
So it looks like your trying to refer to your "private BufferedImage image;" in line 134. But line 134 is in the myGame class, not the DisplayImage class, so you can't actually access the member named image, because it isn't there. Judging by your main(), you probably meant: g.drawImage(l.image, 0, 0, null); However, that won't work because a) image is private in DisplayImage, and b) myGame doesn't have any DisplayImage to get that value from. To fix a you would make a getter function for image. To fix b you would add a member to myGame that is a DisplayImage. As a side note, what's with all the instances of Random, isn't one enough?
Note that self-signed is no longer good enough. A verifiable cert must be used.
Not only did it break our companies file upload applet, it rendered it useless from older versions of Java as well (no idea how). Such a huge pain in the ass considering with deal with large corporations that sometimes have strict IT controls in place on updating software.
Netbeans is quite a nice ide.
Maybe because the packages are meant to be used as independant and reusable units of code? So the developer of java may have thought that package protected access would be used the most (over private access at least). But that's just a guess honestly... EDIT : little typo
Letter to number should be fairly easy as all Strings can be converted into sequences of Char. Chars then represent their ASCII/ANSI/Unicode values and can just be typecast to int. To parse a string character by character, you could use String.charAt(int index), or to convert the whole String into a Char array, you could use String.toCharArray() See the [Oracle Documentation for the String class](http://docs.oracle.com/javase/7/docs/api/java/lang/String.html)
Well, besides the actuall AES encoding, the conversion from String to Character to int and back shouldn't be too much of a problem. A Character can be converted to int by casting: (int)Charactervariable An int (in valid range) can be cast back to char: (char)Integervariable
Because usually a package is made of multiple files. Everything declared as private is only visible inside the same file, whereas package private is visible in all files that make up the package.
I'm my imaginary language javaX non backwards compatible, fields are private and methods are public by default Using [Lombok](http://projectlombok.org/features/experimental/FieldDefaults.html) you can make fields private by default right now! 
anything EE implements the full Java EE spec that is available online. This kind of doc shows what is involved: http://docs.oracle.com/javaee/7/tutorial/doc/overview008.htm#BNACJ At a high level, it's basically a bunch of jars that put together provide the full functionnality required by the spec. So if your project just need a few pieces and not the whole thing, you can take just a app server like tomcat and add the jars that you need. The Java EE App Servers will implement the whole thing and are thus seen as heavyweight as by default they have all this stuff. Tomcat and others are "lighweight" as you built from the bottom up by adding what you need.
Take a look at the Java docs for the class [javax.xml.bind.DatatypeConverter](http://docs.oracle.com/javase/7/docs/api/javax/xml/bind/DatatypeConverter.html).
I've been waiting for the support for TomEE since I don't use Glassfish or Jboss. 
Very bad title. According to Cisco, Java "represented" 91% of [Indicators of Compromise](http://www.darkreading.com/attacks-breaches/top-15-indicators-of-compromise/240162469) in 2013. (Cisco does not define what "representing" means in this context.) Cisco also said that "the final payload in observed attacks was a Java exploit". I don't think this is correct (it's too absolute), but I can't be bothered to go to the source of the statement. Overall, it reinforces the importance of keeping Java on your computer up-to-date.
Of course, the sensationalized headline misses two very iimportant details. First, hese were virtually all web exploits ( I.e. Applets, likely unsigned Applets, on the Internet). The vast majority of Java code in use is server side and embedded. Second, and far more importantly, a hugh percentage of the JVM imstalls in the wild are Java 6 - long since end of lifed. Granted, Oracle has their hands full with security fixes right now, but they need to put just as much effort into moving people to newer, more robust versions. 
This. A good example is where you do not want to make the constructors of a given class public (ie part of the API) but they need to be accessible to other classes in the package. It also makes perfect sense for package-private to be the default. So you start off with a "default" level of access and you as the developer of that code (not the designers of the language) get to decide whether to promote or restrict access from there. It sits neatly in the middle.
Sean Michael Kerner don't be like most tech journalists and DO YOUR HOMEWORK you incompetent slob.
What do you have in mind?
You shouldn't need to test private methods. Test the public methods to ensure that the class fulfills the contract declared by the public API.
&gt; My current setup is using pound as reverse-proxy If your using a reverse proxy then it's probably termininating the https connection before it gets to the server but leaving the SERVER_URL unaltered. You need to do this at the proxy level. 
I'm still very new, so at this point I'm working on learning more about basic noob stuff such as private attributes and stuff of the sort. What level of Java coding are you at? In other words, what is the most advanced thing you have learned so far? 
I agree 100% with fields. But I think methods should be private by default. Only methods you *very carefully* intend to publish should be public. Private methods should be used for internal implementation. It could be very problematic if other programmers were to call your (otherwise private) methods thus preventing you from altering your internal implementation without breaking code. I know you could say "well, then mark them private". Fact is, people won't. The default matters. An exception is getters/setters for simple data POJOs. You should be able to change the default, like in C++, in this case. All methods after "public:" (notice the colon) would be public by default.
I might be able to join up. Im taking classes right now and the most advanced thing I know is using methods (functions) and using Swing gui. Best program ive created without any help is Tic Tac Toe.
I agree. Testing private methods makes your tests brittle and less coherent. If you find you need to test private methods (a smell), then you probably should create a separate class.
I'm going into classes for Computer Science this August but yeah I could use you to help me learn Swing GUI.
Exactly, and eventually I'd like to develop mobile apps and advanced programs. 
Yeah I've been looking into it and it seems similar to just coding for windows. They don't have too many new keywords, at least thats what it seems.
Are you familiar with Google Drive?
&gt; noticeable speedups Noticed by whom?
Yeah
&gt; James Gosling: A package is generally a set of things that are kind of written together. So generically I could have done one of two things. One was force you always to put in a keyword that gives you the domain. Or I could have had a default value. And then the question is, what makes a sensible default? And I tend to go for what is the least dangerous thing. &gt; So public would have been a really bad thing to make the default. Private would probably have been a bad thing to make a default, if only because people actually don't write private methods that often. And same thing with protected. And in looking at a bunch of code that I had, I decided that the most common thing that was reasonably safe was in the package. And C++ didn't have a keyword for that, because they didn't have a notion of packages. &gt; But I liked it rather than the friends notion, because with friends you kind of have to enumerate who all of your friends are, and so if you add a new class to a package, then you generally end up having to go to all of the classes in that package and update their friends, which I had always found to be a complete pain in the butt. http://www.artima.com/intv/gosling2P.html
We can use that to collaborate.
Not very much, I just started learning it. I know pretty much what they would teach in one semester of college, overloading methods and such.
Well thats good, I think if everyone brings something new to the table we could work together to make greatness.
Ah I see.
If you want to be a part of the programming group please send an email to giovonnilevicci@gmail.com.
I see. Well he's wrong in the java world of today but at least now I heard the story.
I'd be interested in this, may I ask how the group would communicate?
Sounds good!
You should have the page below on java.com. Tell the owner of the app that is being blocked to update their app. Simple changes, they just need to do it. Workaround is to use the exception site list: http://java.com/en/download/help/java_blocked.xml 
Workaround could not be done due to Security tab containing nothing but "certificates".
Why not take advantage of the HUGE group already there? (The web).. Each and every problem you have faced or will face (especially in this early stage) has been at some stage discussed somewhere in the internet. And in the very unlikely even that it was not, there is so many places where you can get an answer (stackexchange sites, reddit, lots of different forums)... When I was at the very beginning I was actually surprised to see that people actually had exact same problems as me. ** Get an error that you cannot solve? ** Paste the generic part of the error into google. By generic I mean don't paste the part that describes where the error resides. "Null pointer exception0 **in MyVeryCoolClass.java at line 58"**. This is not exact text of it but you get the idea, that bold part will be different for each and every user...
Hey, btw, I suggest you look up JavaFX. It's basically Swing, but newer, better, and is actually updated (Swing hasn't been touched in, what, 15 years now?).
If you want to develop games for Android in Java, take a look at libGDX.
JMX is still pretty good. For actual metering and stuff you can look at Apache Sirona. There's Yammer Metrics - it has some good pieces and some bad pieces to it, but it's not bad. 
Honestly I don't care what the default is. I just wish that java had the equivalent of 'internal' in C#. 
/r/programmingbuddies
Why don't you check to source code for guava or apache commons or whatever. Fact is private and public are used the most. Do you honestly use package private more then private? His statement that people don't write many private methods is simply not true. Also, methods are not the only thing to factor in and when it comes to variables you see very few package private.
A google drive doc 
Like using Google Plus?
This is actually really exciting. I was afraid Java 8 treated lambda expressions as effectively syntactical sugar on top of anonymous classes. 
In particular, what speedups are you talking about? Are there published microbenchmarks you are referring to?
I too would love to see some data on this. I don't mind poking around the java codebase, but not without some idea what I'm looking for.
I've been using Java off and on in the course of my education for about 4 years (high school and some college) but am a bit rusty. I'd like to join to help out and brush up on my (very likely) rusty skills. I'll shoot you an email! 
I'm interested. Shoot me a pm!
If you're interested please email giovonnilevicci@gmail.com 
Please email giovonnilevicci@gmail.com If you're interested. 
Dude don't feel bad I'm still in high school and am a major Java noob but hey if you want in, email me. giovonnilevicci@gmail.com 
Well hey if you don't mind shoot me and email. It'll help me to organize the group. giovonnilevicci@gmail.com 
https://groups.google.com/forum/#!overview
Big Java Late Objects will likely be recommended. I would go Head First.
If you want to join, send an email to giovonnilevicci@gmail.com and I'll add you to the new group! 
If I'd have to make the decision today I'd probably make private default. Exposing API should be a conscious decision.
What about [Metrics](http://metrics.codahale.com/)? I haven't used it myself though, I just read about it previously [here](http://stackoverflow.com/questions/8673815/is-there-a-java-equivalent-of-twitters-ostrich-library) and it seemed interesting. As per the latter article: "You can get the report over JMX, or HTTP as well as reporting backends like Ganglia and Graphite" Hope it helps!
It's been a while since I was in the basics, but perhaps for a secondary, I was always a fan of Deitel and Deitel for their understandable approach without the need for a caffeine IV to survive the material. I would recommend seeing if you can get your hands on a copy to check out a bit and see if it's worth the investment or hopefully someone with a more recent experience can share. Guessing this is the recent edition: http://www.amazon.com/Program-early-objects-Edition-Deitel/dp/0132575663
I'd love to help. PM me your skype.
Sounds cool. Most advanced thing I can do is make a grid-based GUI. I basically know how to make a really simple 2D game.
I'd be interested in helping out with some side projects. I've learned Java from a data structures course, but the most I've done with it is solve Project Euler problems (up to #92 atm) and a couple other things.
Now we need some some amazing IDE tools to really make this stand out
I'm the person responsible for most of the work on the Java Collections since 2010. (java.util.concurrent and java.util.Stream are mostly done by other people). Not much changed in the standard collections between Java 6 and Java 7. Quite simply in the waning days of Sun there was no collections maintainer. I joined the team shortly after the Oracle acquisition as part of a still continuing revitalization. I had only a couple of months to mostly fix bugs in Java 7 before it shipped and have since been working primarily on Java 8 features. A few specific methods did receive speed ups in 7 and there have been some enhancements such as the hashing collisions work and lazy initialization in update but there shouldn't be any dramatic differences. ConcurrentHashMap and a few other classes did see big improvements in Java 7 but that doesn't seem to be what you are asking about. There were some fairly significant improvements to Hotspot which could account for the improvement. Are you sure the gains aren't due to that? 
Here's hoping Scala adopts this approach at some point. Having the compiler generate yet another synthetic class for every single lambda expression has got to suck for memory usage.
What don't you like about Metrics?
I'm going to assume you're talking about web applications. Your best resource: https://www.owasp.org/index.php/OWASP_Java_Table_of_Contents Programming techniques: * Do code reviews! Best to do before source control commit. * Sanitize inputs and output. Component-based web frameworks make this easier (e.g. Wicket, Vaadin) * Use an ORM/JPA. (Prevents SQL injection.) * Frequently run [FindBugs](http://findbugs.sourceforge.net/) on your classes to find common security bugs. * Carefully sanitize arguments to Runtime.exec() General settings and policies that help with security: * Tomcat: * Carefully secure the manager webapp. If you're unsure how to secure it, then don't use it. * Set a complex password and port number for the shutdown port * [Disable](http://tomcat.apache.org/tomcat-6.0-doc/config/context.html#Common_Attributes) URL Rewriting * Require HTTPS (CONFIDENTIAL setting in web.xml) * Configure a session timeout * [Protect](https://github.com/esheri3/OWASP-CSRFGuard) against [CSRF](http://en.wikipedia.org/wiki/Cross-site_request_forgery) * If the user-agent or IP address of a user changes, require re-login. * Consider using a web security library like [Shiro](http://shiro.apache.org/) or Spring Security. * Set headers to prevent XSS attacks: X-XSS-Protection: 1; mode=block Content-Security-Policy: default-src 'self' X-Frame-Options: deny 
Well I'm fairly "noobish" to java. I mean not necessarily, but I find myself encountering stupid problems from time to time. Sounds like fun to me.
Question is if invokedynamic will really be faster? Last time I checked (in Java 7) it was dead slow.
AFAIK it was still faster than doing the same thing using regular instructions, but then again that was to be expected - it wasn't really optimized. From what I've seen it should be faster in 8.
Your second sentence does not reinforce the first. The same applies to package private.
My guess would be that the game is drawed first and then the image ontop
Did the update. Can't update to 1.7 because it's not supported for OS X. I need Lion to get 1.7. So I went to my Java Security, and I did not see 'Enable Java content in the Browser.'
Have you tried scaling the image? The size of your draw area seems to be 500x500, how big is that image you're drawing?
Actually, seems to me you're adding components to each other in an attempt to draw them on top of each other. Really what you probably want is a single 'canvas' to do all your drawing on. So id suggest you keep hold of the myGame JComponent and do ALL of your drawing against this component's paint method instead. I'd make DrawableImage extend Image and provide your custom sizes in that component. That way the myGame component can just do something like g.drawImage(0,0, new DrawableImage(30,30, "img/file.png")); 
Why is this site worded so badly?
Understood. The latest official OSX java update contain a lot of security enhancements that make it more difficult to run Java Applets (they now have to meet a stringent set of requirements). Unfortunately Ticket to Ride doesn't meet these requirements, so there is not much more you can do here. Sorry,
It's timsort.
It was timsort in early betas, but they are switching to bogobogo in 1.7u60 ;)
1. Practice. You will find that some of your peers will simply go to lecture and treat it as any other class. Programming is not something that can be learned statically. 1. Get an IDE (Integrated Development Environment) Eclipse and Net Beans are popular for Java. Learning a language and an IDE at the same time can seem overwhelming at first but when you learn to use the IDE well it can be tremendously helpful in debugging and assisting you in writing better code quicker. 1. Pay attention to "compiler" errors. Something not working? Start there, try to understand what it is complaining about. If it isn't immediately obvious to you then look at the line it is talking about. If you're still stuck. Search the web (read: google) for the error message it is likely someone else has had it. (Note you want to search for the generic part of the message, if it has your variable names or method names you might not want those). Anyway you'll undoubtedly end up on a website called stackoverflow. Great resource. 1. Explore. There are often many approaches to the same problem. Do not get stuck in a particular mindset. Feel free to try a while loop, a for loop, heck recursion. Play around while you can to see what works for you, if nothing else it gives you more options and a better understanding of the language. But I should mention that your grader probably won't appreciate randomness so this is more "when you can" I mention #3 because it is surprising how many people just stare at the program/error message and just give up because they don't know what is wrong.
Take the [Java for Complete Beginners course at Udemy](https://www.udemy.com/java-tutorial/) it's free and very good.
I had to get "JCreator" when I started studying cs. It basicly can do as much as editor+compiler and tell you to a certain extent where your error is but not much more. It is really good to start with because it gives you a certain indication where your error is.
Your error message tells that you are either running an outdated or insecure JRE. If you haven't got the site exceptions list you are not running the latest Java version 1.7u51. Possibly try to uninstall java completely - with [JavaRa](http://singularlabs.com/software/javara/) and re-install a new version. If you run a 64 bit OS, you need to update both the 32bit and 64bit JREs
Override the paint() method of your 'canvas' component (I mostly use a custom JPanel for this purpose) so that it calls a drawMyCanvas(Graphics g) method. Then, have an in-memory BufferedImage onto which you do all your drawing, from bottom to top, which then finally gets drawn to the canvas once all the pre-display drawing is finished. This acts like an off-screen buffer.
... And the NSA backdoors in their hardware is responsible for the remaining 9%
I agree with all your points except #2. I would suggest starting out with a simple editor that only provides help such as syntax highlighting and auto indentation (depending on your OS you can take a look at notepad++, gedit or sublime). The reason I would not start out with an IDE is that you should learn to program rather than to use an IDE. Then when you master a programming languages and start writing programs that are larger than a few classes then you should seriously consider getting a prober IDE. Finally I would like to repeat mrkleen340's first word "Practice" as it is a sound piece of advice. You do not learn programming by reading a book, you learn it by getting your hands dirty.
try www.processing.org
Try http://codeAcademy.com I love it! It's incredibly helpful. Definitely try it 
That makes me sad. Thanks for your answer. [Have an upvote.](http://www.gifbay.com/gif/how_i_give_upvotes-22864/) Can I just download an earlier version of Java so I can play my silly game?
Misspelled the URL there, there's no 'A'. However, the link still works.
Okay, that's the new blocking dialogue. Open the Control panel, then open Java. On the Security tab you should see the same that you posted in your original post. (http://www.java.com/en/download/help/jcp_security.xml) There you click on **Edit site list**, then another dialog window opens where you have an Add button and a field to enter the website. Enter the website (full address including http:// or https://) and press the enter key. A short dialog will appear that you need to confirm. Close all windows with OK and try loading the applet again - should work.
Can't say how fast, but I know that there is a Spring MVC course at Udemy. It's by John Purcell whose other courses I've been following and if the Spring course is anywhere as good as the others, it's definitely well worth the price. https://www.udemy.com/javaspring currently at $39 but there are frequent discount offers.
YouTube search "thenewboston" he has a very long series on java and other languages such as C++ and C#. He goes the furthest with java but you can still get a good sense of the others from him.
One must commit the work to persist changes, it is not an option, whether this is done explicitly or implicitly. 
A single statement is not already a transaction unless autocommit is on, which is generally a very bad idea. And literals should not be used except in edge conditions in data warehousing where the optimizer won't evaluate data skew otherwise. Updating two columns in a single row has nothing to do with transactions, it applies to multiple DML statements. In order to guarantee a consistent read between the two selects setting the isolation level is required. 
It is required to commit the work. 
I'm sure you're tired of hearing this, I know I was sick of it, but... Just start coding. Find a guide book, some common beginner exercises, and have at 'er.
DO: Stanford's Programming Methodology class and/or videos (Google it). If you finish and truly digest this material, you will have a huge head start. Practice. Read Head First Java and/or Thinking in Java. Set your sights on a project that you want to do, and do it. DON'T: Watch thenewboston's videos. 
Yep I also recommend it.
I would suggest looking into BlueJ. It has no code hinting and it's also great to help beginners understand the concepts of OOP, because it shows objects and instances graphically.
There's the Spring in Action book - http://www.amazon.co.uk/Spring-Action-Craig-Walls/dp/1935182358/ref=sr_1_1?ie=UTF8&amp;qid=1390067993&amp;sr=8-1&amp;keywords=spring+in+action+3rd A fourth edition is coming out in March, but I think the third edition is pretty good. 
I know that when I first started programming, coming up with ideas was always the most difficult part for me. These pages are things I've referred to over and and over again when I am in need of ideas * [Martyr's Programming Idea list](http://www.dreamincode.net/forums/topic/78802-martyr2s-mega-project-ideas-list/) * [ A list of various problems, sorted by difficulty](http://adriann.github.io/programming_problems.html) * [Project Euler](http://projecteuler.net/) * [Coding Bats](http://codingbat.com/java) * [Rosetta Code - Implementations of programming problems in tons of different languages.](http://rosettacode.org/wiki/Rosetta_Code)
It's a bit biased comparison, as by default Scala will emit 1.6 bytecode, which does not contain the `invokedynamic` instruction. If you ask Scala to emit 1.7 code then it will use it.
I liked Beginning Java by Ivor Horton. That's the book I used for learning the language.
I haven't watched his videos, but seeing his absolute disregard for naming conventions makes me very wary of them. Yes, the code will still run just fine - but you'll be laughed out of any job interview if you claim to know Java but show up with code looking like that.
Haha, yes that is an unfortunate downside to his tutorials. However if you just want to learn some basics of coding, they can still be very useful. In the op's case since he's taking a class next year on it, not knowing the naming conventions isn't a big deal.
Why start out learning the wrong conventions? If they were unique (in a good way), I'd begrudgingly say that they're acceptable, but there are tons of good, free alternatives. Also, his lack of regard for convention indicates either sloppiness, a lack of understanding, or a disregard for community standards - all things I'd rather not have in a tutorial I'm recommending to a newbie.
You make good points, all things considered you are correct. For a beginner his lack of using the standards of naming is not good for to be exposed to right off the bat. However I'd keep him in mind later after you know the naming norms because his tutorials are still useful, despite his laziness towards naming.
I agree with this. When I took my PHP / webdesign class in college last semester, we were required to use a text type editor -- I used notepad++. Someone asked about using dreamweaver to develop our sites required for class, since we were also learning to use divs to design layouts; the teachers simply said (as a joke) "What's Dreamweaver?" Learning to code divs using css without the help of a program like dreamweaver helped me learn and understand the relationships in terms of positioning the layout of the site. Had I used Dreamweaver and let it write all my css code, I wouldn't have learned nearly as much as I did. For my Java class in college, I did ultimately use Eclipse, however, it wasn't until 1/2 way through the course our teacher mentioned that Eclipse could auto generate code for you (such as all of your getters and setters).
Thanks for this. My follow up question would then be what's the best way to "assign" the actual database implementation to these objects? Sort of like setting a "handler" or something like that. In an app I wrote previously, the database was simply a static class so I could call it from anywhere around the app i.e.: Db.query("SELECT * ..."); ... rs = Db.getResults(); sort of thing. Will I need to (or should I) do things differently? I'm really just curious by which means I should associates the POJOs with the DAOs. edit: Also, the interface that the POJOs are expecting... should be defined in the same package as the POJOs themselves, no? But then how would I write a DAO that implements said interface if the interface was in another package? I'm sorry I'm asking so many questions... I feel bad!
I'm seeing a lot of love for IntelliJ recently, is it worth me persevering with it over NetBeans? I'm already pretty comfortable with NetBeans and I don't feel like I'm missing out. And I'm pretty sure NetBeans has these live templates [**too**](http://i.imgur.com/1muR4lJ.png) (`sout` being my most used one).
The library with the data access layer would depend on the library where the types are defined - so the interface PersonDao would just need to import the type Person from the types library. That oracle seems to cover the design pattern pretty well but also seems to be bloated with some junk; are you planning on using Spring? Might be worth it to look into Spring/Jdbc to do your implementation.
http://stackoverflow.com/questions/14574045/collision-detection-with-complex-shapes maybe?
Is there a thread for Java IDE comparisons? I use Eclipse for Libgdx and have started to use Netbeans because of the Designer, but I'd love to use IntelliJ if it does at least as good job with the GUI design. I've never really done user interfaces with Java other than by hand. 
I wasn't going to be using Spring. I was under the impression Spring is for web apps? Am I wrong? I'm developing JavaFX GUI Apps and if it's possible to implement Spring doing this then maybe that's a good idea. edit: would it make sense to have these packages be spring prjoects which the javaFX application depends on?
I get the sense of that logic, but at the same time. If I end up in a role where the standard IDE is say Eclipse (shudder) or IntelliJ then I'm a fish out of water. I've tried Eclipse and hated it. IntelliJ was okay, but added a lot of random crap to the project folder which kinda annoyed me.
There must be a thread for IDE comparisons. I'd guess the topic comes around every six or so months. It's funny you should mention the designer, I'm actually considering doing everything via code/hand because sometimes the designer goes crazy and moves elements all over the place. I miss VS for UI designing.
Spring JDBC is awesome and has zero to do with web apps. Most of Spring has nothing to do with any type of app, that's the whole point. They are loosely coupled libraries that use dependency injection to make things like what you're describing very simple. Spring JDBC basically describes what you want to do.
Oh, okay. I've only used it for quite simple screens so I haven't had too much problems. Hand coding UI is just so slow... I've done some Delphi coding at work and while it has it's problems, I would really like to be able to make UI's with the designer in the future. I quess you just need to keep the screens simple enough... 
Is it easy enough to include specific spring components rather than use the entire spring framework when putting a project together? Can you bring in parts of spring via maven?
whoa whoa whoa...what's wrong w/ thenewboston's videos?
Are you just referring to naming classes 'apple' and 'tuna', or variables 'bucky'? If so, I think that most people would know that he's just doing it to be silly, and would not really name things that way.
A good compromise would be using jGrasp. It doesn't have the auto-complete that you can be dependent on with an IDE, but it does syntax highlighting and amazing debugging tools (learning data structures with jGrasp is awesome).
Each IDE has its strengths and weaknesses; if an employer uses an IDE that you're not familiar with, then I don't see that as a problem - you'll simply be getting to know the intricacies of the IDE on the employer's time, rather than your own time.
Have you watched his videos?
I'd say that's far too broad a question to get an answer which will be of use to you; what technologies (and versions of that technology) are they using at the place you've got an interview for (Spring, Java EE, something else), as that will give a clue as to what type of project will be of most use.
It's for a position that uses Spring and backbone.js. I just wanted something to noodle around with for the next day so I can do some practicing.
Don't get me wrong the designer in NetBeans is pretty good, but it has this annoying "auto space" setting, that moves the element around in respective to the overall layout. Once you learn to make sure that is turned off on every single element you should be good. I've taken to grouping things inside of frames now, much more tidier.
No, you can't Apple control the distribution of java updates (up the version 1.6). Your best chance is to upgrade your version of OSX and use one of the newer java packages. I see that Ticket To Ride is available on Steam as well as on the App Store. Maybe give those a try. :-)
How about they are absolute shit?
&gt; YouTube search "thenewboston" Hell no! If you want to learn anything steer clear of that crap.
Thanks for the tip! I need to start doing more stuff with Java again. 
You can update to mavericks for free now. 
Core Java skills are far more important than knowing that syso in Eclipse simplifies writing System.out.println, or that iter in Idea does the iteration loop - your code's the important thing and what will impress, knowing the IDE specific niceties is a bonus, but any employer that bases their assessment of you on that isn't someone I'd want to be working for.
Yes, I have. I wasn't trying to sound like a smart ass (if that's how it was perceived); I'm just genuinely interested. I've been learning Java for about a month now, and I've been following John Purcell (Udemy) and thenewboston. My method is to watch a topic from John, then reinforce the idea by seeing it from another's perspective (i.e. thenewboston, java made easy, and tutorialspoint). So, if you're saying that thenewboston's videos are shit, then I need to reconsider my learning strategy; but, I'm still curious as to why it's considered bad. Really, I've been able to grasp certain concepts better by looking at thenewboston, then going back to John's videos w/ new insight. So, if you're inclined, help me understand what's so horrible about thenewboston so that I'll be able to correct any poor practices that I may have adopted. Thanks, kind sir!
The best way to see why it's not too great is to watch the subject properly taught. Watch the Stanford videos, you'll see the difference almost immediately. And I promise you'll learn more.
Autocommit is ON by default for JDBC, so I am not getting your point. The default isolation level depends on the DB, but it is READ_COMMITTED for most, which will not show changes by other sessions since the transaction started.
Try this it should have most of what u need https://github.com/spring-projects/spring-petclinic/
Next weekend is Global Game Jam. Why not see if there is an event nearby that you can participate in? :) In my town, people with all sorts of skills and within all ranges of experience attend. We get divided into groups and hack away. http://globalgamejam.org/
This looks very interesting. I checked his free Java Design Patterns and Architecture and I liked it. I think I will buy this and then read the Spring in Action by Craig Walls if I feel like I want more information. Thanks!
Thanks but I will go for John Purcell tutorials. They are more complex and they cover more ground. 
I know what you mean but this have learning purpose too. Not only to get the job done. 
Virtually no software that is complex is made by a single person. The easiest way, aside from hackathons and codejams etc. as suggested, is to join an opensource project. As a bonus, look up pair programming. ;)
just a platformer, but yeah, that is definitely no good approach
If your tiles are all uniformly sized and spaced, you can still use an array - maybe one array index = one NxN pixel region?
x2 - If you want dynamic typing under the JVM, why not Groovy?
The capitalization is wrong. Classes should always be CamelCase, variables lowercase, constants ALL_CAPS, etc. This is Java 101 stuff.
Please take the advice of the people below and steer clear of thenewboston's tutorials. They're incomplete, too informal, and often have bad coding practices
I'm fairly new to programming (a few years) and even newer to java, why do people dislike eclipse? I've seen multiple people dislike it but I don't know why. Personally I prefer eclipse to netbeans but that might just be because I'm used to it but it seems to me that it is much more intuitive.
You have to create a subclass of JFrame and override the paint method.
Only the most trivial of services need to issue but one DML statement in the course of a service so auto commit should be off to ensure that all of the statements that are part of a transaction are processed atomically. Read committed applies for individual select statements and does not span multiple statements. 
It's a program about decrypting a RSA key with a [cyclic attack](http://crypto.stackexchange.com/questions/3055/how-does-the-cyclic-attack-on-rsa-work). A user can generate a key, and they can specify the length of the key(Usually it's 1024 bits but that's not viable to break with a cyclic attack): If it's a length of 33 bits the modulus it's 2492934643, which it's lower than the sqrt of max value(3037000499.97605). And the exponent can be 3,23....37381 65537. Any value which satifies certain conditions. But if the lenght it's 512 bits the modulus it's 7697934366526652269937923134596194521540501764331707922510356237563189117193269542569125119374722909880902427394046675506412751837632265942343962723080009. Anyways for the 33 bit one, I take a value from 2 to the modulus and do something similar to. result a biginteger of 2. while (true) { result=result.modpow(exp,mod); } Until the result it's 2 again. This does 363.430 modpows in less than 1 second(it doesnt have enough time to reach the top speed) and breaks it almost instantly, anyways I'd like to know that clever stuff I can do in this case because for another algorithm for every value from 2 to 2492934643 I have to do a cyclic attack, although I save the values which already appeared at a array to not begin the unnecesary ones(they can only appear at the ring of a specific cyclic attack). The problem it's that modpows take 300mb of memory and a filled THashSet of 25 millions of ints take another 700 mb of memory. And writing and reading from disk it's supposed to be very slow, I can't fill the user disk with billions of billions of integers eithers. If the key it's 80 bits, the modulus it's 573960470789641266949547 and does 725k modpows per second. If it's 512 bits the modulus it's the value I posted before and does 62.974 modpows per second.
If you don't work through it, you won't improve, so I'm not inserting here the solution code. First, make sure, you understand the [Sieve of Eratosthenes](http://en.wikipedia.org/wiki/Sieve_of_Eratosthenes) algorithm (You don't need to use an integer array. A boolean array should do fine.) 
Just to start, I don't see a single validate() call in there...
It might also be worth browsing some projects on GitHub and see if there are any that interest you. Most projects are very open to a pull request from someone new and larger projects will often have an IRC channel to chat in too; it might not be face to face, but there are some great groups and communities out there building great stuff!
I really enjoy IntelliJ, and google's Android Dev Studio is a modified version of that, which is why I gave IntelliJ a go. 
If you're looking for an IDE that does all of the things you've said you do, IntelliJ IDEA is for you. Does: * Java (and many frameworks) * HTML/CSS * JavaScript (and jQuery) * every single JVM language under the sun (Scala, Groovy, Kotlin, Clojure) * Python * Ruby (on Rails) * PHP * More! All with superior code completion and tools. They have a free version (Community) that does a lot of this, but not all of it, and a paid version (Ultimate) that does everything. It also has various spin-offs that are specialised in one thing (webdev, PHP, python, ruby).
NetBeans has excellent support for all the technologies you mention. You should give it a try.
Is your concern memory? 256 GB of heap is not unheard of
IntelliJ IDEA is the tool.
If you're looking to try something new (while I agree with everyone here that is saying Intellij is the way to go), I am also a huge fan of [Aptana Studio](http://www.aptana.com/) for straight web developing.
I would highly recommend watching the tutorial videos at [beginnersjava.com](http://beginnersjava.com/). Despite him using Netbeans, he rarely ever uses the autofill functions of the IDE, thus helping you to practice, also he(Damien) assigns homework after every 3 or so videos helping you to grasp the concepts much easier. I highly recommend typing everything out as he is doing it, it'll stick in your head much better rather than just by observing.
It doesn't work quite like that. The stack is immutable, and can only be changed be calling new methods or returning from the current method. What are you ultimately trying to accomplish that you think you need to modify the stack? 
What I want to know is why does every randomly generated value have a new `Random` object to generate the value? Can OP not have a single `Random` and have it keep generating a new value?
Well, I also don't see any use of static members either, so I think this is someone new to programming in general
I would take a look at Netbeans. It is really easy to use and has the code completion tools you are looking for. It is also free.
It's just repackaged Eclipse.
This ended up working great. Thanks!
Read Head First Java. Practice on codingbat.com and r/dailyprogrammer. Once you've done that code some app and good luck. 
[JOpt Simple](http://pholser.github.io/jopt-simple/) is another good argument-processing library. I just integrated it into a project I'm working on. 
We do use package this way, but it doesn't mean we need package access anyway. A lot of codes I see just use method calls or getter even between classes of the same package. I've seen it from time to time though. But the default should have been private I guess.
Take the [Java for Complete Beginners Course on udemy](https://www.udemy.com/java-tutorial/). It's free and very good. And practice, practice, practice
Thx
I'm not familiar with jGrasp, but I can give you some ideas that I find cool. * Text-based games are great to learn a lot of "basics" like loops and variables and text parsing. [This page](http://www.javacoffeebreak.com/text-adventure/) looks like a good intro/overview of a way you could do that. * Write a web applet that draws shapes, a bouncing ball, or lets the user draw. What's great about web applets is you can put them on a webpage, and they are run from your browser. * [Project Euler](http://projecteuler.net/about) has a list of programming challenges. You might find one or more of them worthwhile. * Write an Android app. There's a bit of learning required as far as differences between Android and your PC, but you can pretty easily use a template project and add buttons and text boxes. One possibility is an app where every time you push a button, a random joke or saying is displayed in a text box. Resources: [Android SDK](http://developer.android.com/sdk/index.html) and [Getting Started](http://developer.android.com/training/index.html)
Thanks man!
if you want to go all the way you could use a wrapper/launcher like [Launch4j](http://launch4j.sourceforge.net/). This way, you can wrap the jar into an exe (or attach an external exe launcher), and/or even attach a JRE (Java Runtime Environment) to the wrapped file.
&gt; but.. just no This applies to the use of Exceptions to control program flow as well. Don't do it. The entire approach outlined in this question reeks of horrendous code design - can you imagine trying to figure out flow when any method could be terminated at any point in time without reading every. single. line. of code? OP: You are asking the wrong question. You should not be writing code that requires and/or uses this sort of mechanism. You can always write subclasses that override parent class methods if you want to optionally decide whether to call the super's method.
Any type of dice or card based game will be nice, or code a text based adventure (inventory, items, rooms, saving, loading, etc.), tic-tac-toe, connect four are also nice. If you want to go into graphics, a Sokoban clone, or a slot machine could be something to start with.
http://www.antlr.org/
Pong is another game that can be fun to write in Java. I like your suggestion of card-based games. Object-oriented programming could be used to make card and deck objects that could be easily reused for other games!
No problem! I've really enjoyed learning Java, and am happy to help any way that I can. Feel free to ask me questions and/or keep me posted about your accomplishments, if you wish.
In order to understand what is wrong with thenewboston, you should read the [Oracle Code Conventions for the Java Programming Language](http://www.oracle.com/technetwork/java/codeconv-138413.html). These code conventions are as close to a generally accepted standard as it gets. It is very important to learn the "proper" (or good, or commoly used) practices very early in the learning stage of a programming language to avoid forming of bad habits (which later on, in a professional environment could have bad impact on code and code reviews). 
I've tried both creating a .jar file and executing it, and making that into a .exe file. But both won't execute. My java is up to date and the program worked when I launched it as a class file. Do you have an idea what I could be doing wrong? I've followed your guide 'Creating a JAR file'. 
There's also something to be learned about randomness and the idea of selection with/without replacement.
I've used JCommander extensively, and highly recommend it. Long story short, for one of my clients, I implemented a content addressable storage system in Java. To aid during development, and (later on) administration, I wrote a little command line tool that provided easy access to the CAS. After reviewing a number of the options, we settled on JCommander for our command argument parsing, and found it to be very flexible and powerful. My only real recommendations are that you carefully read the documentation, and then keep a copy of the source code around, for the times you need to clarify what the documentation says. 
This: http://whitneymusicbox.org/
no main manifest attribute, in hogerlager.jar (hogerlager.jar is my .jar file) 
Did you create a [manifest file](http://docs.oracle.com/javase/tutorial/deployment/jar/manifestindex.html)?
Then make a manifest! http://docs.oracle.com/javase/tutorial/deployment/jar/appman.html You could also use an IDE (I recommend IntelliJ IDEA, the free version'll do fine), that does all that for you, and provides code completion and all sorts of useful stuff.
I'll do that, thanks. Sorry I'm totally unexperienced with all of this :s But I'm learning on the way :) 
Just remembered two of my favorite programming challenges that I toyed around with in just about every programming language I've worked with: + [Conway's Game of Life](http://en.wikipedia.org/wiki/Conway's_Game_of_Life) + [Wa-Tor a population dynamics simulation by Alex K. Dewdney](http://en.wikipedia.org/wiki/Wa-Tor) I've linked the wikipedia articles as they describe both in nice detail. I learned about both programs from a special Edition of Scientific American that was issued sometime back in the 1980s.
Main-Class: MyPackage.MyClass Do you have to type in your classname in where "MyPackage.MyClass" is or something different? I did that and now the manifest.mf file has adjusted but even after I typed "jar cfm hogerlager.jar Manifest.txt hogerlager.class" I get the error "Could not find or load main class hogerlager.class" ( P.S. All my files are called hogerlager and all my files are in C:\Users\&lt;myusername&gt; ) 
I called f.validate(); but it does not fix the problem
You could always set up a batch file to run the class file, but I would recommend just getting comfortable with the command line and eventually move to an IDE. If you're taking a class they'll probably test you on the command line syntax anyways.
As a teacher of Java at the university level, I've read a lot of Java books. Some of them are very good, particularly if you are taking a course. Cay Horstmann's books are all very good for beginners, but they are very expensive. For people with a little experience, the much cheaper O'Reilly books are pretty solid. But to become a Java pro, here's all you need to do: 1. Come up with an idea for a program you want to write. 2. Don't stop until you've completed a good version of that program. 3. Repeat. Start small, then build up. If you're into music, then write music software. If you're into games, write a program to make levels in GameMaker. I'm just tossing things out there, but the point is to just do it, and don't give up. Solve every single problem that comes up; don't just ignore the problems. Everything that is in every book is also on the web. The books only make that information a little more clear and a little more directed.
Follow this series on Youtube. 47 Java Videos for Beginniners http://www.youtube.com/watch?v=7WiPGP_0AUA&amp;list=PL9DF6E4B45C36D411
Clean Code and The Clean Coder are amazing. Every programmer should have to be forced to read them. I *hate* with a passion some of these open source projects I see on github that write unreadable code and don't put in any documentation.
The bytecode generated for both A.staticMethod() and staticMethod() is 100% identical :) (run javap -c A.class to decompile) javac (v1.7) will generate a bit more bytecode (why?) for this.staticMethod() so it's probably slower to run. It will also print a compilation warning: [static] static method should be qualified by type name, A, instead of by an expression
Any difference in time of either of those method calls is so trivial. Also, the this.staticMtehod() and staticMethod() calls are the same.
**myTest.java:** public class myTest{ public static void main(String args[]){ System.out.println("This is a test!"); } } **Manifest.txt:** Main-Class: myTest **Command to run:** &gt; jar cfm myTest.jar Manifest.txt myTest.class _____ **NOTE:** The *Manifest.txt* file must trail with a new line. You must compile like normal prior to running the jar command (Running the jar command does not compile the source code, it only repackages class files and other files needed to run the program)
Check at www.java-gaming.org - there's a lot of experts over there.
Load your images into an arrayList() / Initialize variables Something like this int currentPosition = 0; ArrayList imgarray = new ArraList(); for (int x=1; x&lt;=5; x++){ imgarray.add(new javax.swing.ImageIcon(getClass().getResource("/org/me/myimageapp/newpackage/image"+x+".png"))) } Then for line 46 you would do something along the lines of JLabel wheretheimageis = new JLabel(ingarray.get(currentPosition)); Then everytime you click the button you would itterate up or down your placeholder value with currentPosition++ or currentPosition-- and then call wheretheimageis.setIcon(imgarray.get(currentPosition)); I didnt plug this into an ide so there may be types.
Ack... **no**! If you just learn libraries, you're a slave to them. Learn whatever you can about the rest of the stack; how I/O actually works on the various OSes, how network protocols actually work, how the JVM interacts with native memory allocation and disk I/O... Go learn some data structures. Write a custom serializer/deserializer pair for some of your own objects and structures. Learn how a profiler works. Learn how to find memory leaks using a heap analysis tool. Learn about build automation, test automation, and how to work effectively as a team member. Learning one language is just the tiniest bit of the iceberg. Get hungry and stay hungry.
Don't ever call this.staticMethod(). When the signature changes to non static, you lose the benefit of the compiler catching errors. A.staticMethod() is the smart way to call static methods. The scope of effect is most clear.
Something that might help you get the hang of strings is to write some encryption and decryption programs for algorithms like the Caesar Cipher. You could even expand it to use files, and get it to encode some short stories or plays in the free domain to test it.
Commandline way to execute these: java -jar YourJarFile.jar This is suitable for simple applications where the JVM defaults are good. If you need to pass in extra memory-management mojo, then you're stuck with some kind of native launcher gadget, even if it's just a batch/shell script.
Don't just learn *what* language features there are, learn *when* you should use them. I highly recommend [Effective Java](http://www.amazon.com/Effective-Java-Edition-Joshua-Bloch/dp/0321356683) as an in-depth discussion of the 'why' behind java programming constructs.
I'm very fond of NetBeans as well, supported by both Chrome's built-in developer tools (just press f12) and Firefox with the Firebug extension. If/when you find yourself in need of an SVG tool, I've learned to love Inkscape, but it's an acquired taste. If you can, take the time to *really* learn about HTTP. You'll save yourself a lot of bad design decisions (and headaches) if you understand what's happening on the wire between your client and server.
NetBeans.
Actually you are the most exciting part. Take a look at Wikipedia's Separations of concerns and see if you can figure out how to architect code. That's where the art comes in to make code readable so that people can understand your code and improve upon it. Pick an idea and code it no matter what
advanced topics includes fun issues such as threading/concurrency, locking, AST, reflection, streams etc.
Why node?
The books i read from the start are. 1. Java For Dummies (4th edition?) 2. The Java Tutorial (4th edition) 3. Killer Game Programming in Java' 4. Head first java 5. Effective java by joshua bloch (second edition) just a really quick answer because im about to sleep message me if you have any questions
Please note that in order for Java to execute a particular class from your JAR file, you need to modify the manifest. See this part of the docs for details: http://docs.oracle.com/javase/tutorial/deployment/jar/appman.html
The difference between a novice and a master programmer is simply that the latter knows exactly where to look for answers to whatever programming challenges s/he faces.
The next step for me was to learn more about the code architecture and different design patterns. When you already know how to write code that works, the next step is to make it readable and easy to modify. I would suggest you get your hands on [Clean Code](http://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882) when you feel you're ready for it.
I've read and own 3 &amp; 5. Excellent books.
I built a number of toy projects with Commons CLI, I feel that the library is "ok" to use. Could you talk about more on why you're disappointed with Commons CLI, when comparing to JOpt Simple?
It's worth having both of these right? one isn't a newer version of the other or anything?
1. Code Complete 2. The Pragmatic Programmer 3. Head First Design Patterns 4. Don't Make Me Think 5. How to write unmaintainable code.
&gt; Effective Java I'd say if the style of thinking presented in this particular book is your second nature, you're pretty much a pro when it comes to Java. 
This advice is spot on. You'll learn far more by doing (especially on a project that you are interested in / care about) that you ever will from reading books. As an extra idea: contributing to an open source project can be a very good way of getting Java Pro level experience while also developing the "soft" skills of working well with others.
Specifically you want to cover a good mix of Java fundamentals and best practices such as TDD/BDD/Scrum/Continuous integration * Head first design patterns * Clean code * Cleaner coder * Essential Java 2nd Edition * Growing Object orientated software guided by tests * Continuous Delivery 
Thanks for posting such a comprehensive answer. As far as I can see on my machine, HashMap and HashSet seem to be the biggest winners, so perhaps the hashing collisions work was at least partly responsible; but I also suspect VM improvements to account for most of the speedup.
The problem is located here: private static void createAndShowGUI() { ... frame.add(s); frame.setContentPane(demo.createContentPane()); ... } The method *add* is a convenience method to add new components to the *JFrame*'s content pane. Since you're replacing your content pane on the next line you will never be able to see it. Relevant piece of documentation in the second paragraph [here](http://docs.oracle.com/javase/7/docs/api/javax/swing/JFrame.html). As a side note: the class name *Character* is already [taken](http://docs.oracle.com/javase/7/docs/api/java/lang/Character.html). **EDIT**: Also as per usual [/r/javahelp](http://www.reddit.com/r/javahelp/)