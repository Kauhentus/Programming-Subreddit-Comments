Presumably, homework
Ubuntu with Open JDK and either NetBeans or Eclipse as an IDE works pretty well as a Java development environment. They all install cleanly and easily using the package manager. I still develop mostly on Windows, but I set up an Ubuntu dev machine in a Virtual Box environment and I think it is pretty sweet. If I were an independent developer this is how I would work. If you want to do android development Eclipse is probably your best bet as the SDK comes with a good eclipse plugin. 
It calls the method of the DYNAMIC type of the object, the static type of object a is TestSub because you say "TestSub a" but the dynamic type is "= new TestSubSub();" TestSubSub...Meaning when you call a method on that object, it calls the method from the dynamic type, TestSubSub.
At home I run Ubuntu with OpenJDK 1.6.0_23 installed, and use Netbeans as my IDE of choice. Works great. At work I've started using one of the SuSE servers, running Oracle JDK 1.6.0_something and Netbeans over X11. This is a huge codebase, and the Windows workstation I've actually got isn't capable of handling it, so I do my development remotely like that and it works wonders...
I am curious as to why you don't like to use the package manager. What are the benefits of installing without using the package manager?
Um, distro doesn't matter. It's *developing in java*, *on linux*
This is really helpful. Thanks :)
The package managed version of Java works wonderfully. Eclipse, Netbeans, tomcat, etc don't work as well.
Upvote for a classic 
&gt; My very first Java experience - quite a few years ago - was making a simple database connection Why, why the hell do both of you like to interject with some offhand, random anecdotal story that literally has *nothing* to do with what was said? &gt; I have to create a properties object Which database connection are you using? Both the common methods don't have to do this. &gt; Why the hell should I be interested in configuration object that a connection object requires internally? Oh, I don't know, because you have to specify this kind of information in order to make a connection? Is that hard to understand? There is nothing *terrible* about that. &gt; Are you hiding implementation details, or not? Why are you exposing internal objects? What the hell is this? Specifying the options for the connection is not exposing implementation details. This is also not exposing an internal object. This is not much more different than programs having a configurable xml settings file or a ini file... I can hear your claim now, "Why the hell are they exposing internal data"... For pete's sake... &gt; At the same time, I can't use a Point, where a Dimension is expected Do you know why this is? Can you figure it out? A Point, is a coordinate position, while a Dimension is a size. I'll make this simple on you, it adds clarity. You should never be using a point object when you mean a dimension object and reverse, because anybody reading your code would be baffled when you start using them to represent a coordinate and then a size. It's bad programming. &gt; In essence, bjb39 is correct Is something I'm going to make clear: you're big rant there, was irrelevant. Nothing you said dealt with anything he said, and nothing you said supported anything he said. It was completely off-topic remark in relation to what was being said. &gt; Do some (outside of Eclipse) SWT development. I know this amazes incredibly ignorant programmers like yourself, but I used to program Java in notepad. It's not hard at all for anybody of marginal capability. I said this below, anybody competent with the language can be competent at writing it in notepad, it might take a little getting used to if you are used to the nice perks of an IDE. This isn't any different than any other language. The only reason so many believe this with Java is because they've been spoiled rotten by the IDE and suddenly mistakenly think it needs it. Also, maybe you weren't aware, but if you download the proper JFace tools for outside Eclipse development, the only dependencies is SWT. Nor is this really true for SWT either. You download a single jar and dll, add them to the paths, and boom, you're ready to go. &gt; Because the design is ignored I think it's more you don't know anything you're talking about. &gt; I've working with 40-strong Java teams Anecdotal BS. With your understanding of the language and even basic principles I can't even believe that at all. Actually, I can, you must have been fired very, very frequently for sheer incompetence repeatably to get that number so high. &gt; it is very much the mindset of the developers That's *their problem and makes them bad programmers*.
&gt; least show the intellectual honesty to quote whole ideas instead of taking short phrases out of context then replying to those. Let me help this for you, I deal with your ideals in whole, I just quote a small snippet to get a reference. Generally it is the point of what you're saying, and you should show some intellectual honesty in realizing this. &gt; A language that inherently has more boiler plate is thus more verbose. Not quite. Here's the problem... those extra words which you claim make it more *verbose* aren't empty words. They do something and have capabilities that other languages don't utilize. These words, are necessary in Java to meet it's design philosophy as well, so outright going against your definition. Verbosity happens outside of that, we have perfectly separate terms for each issue. For example in Java function names tend to be verbose, simple due to the nature. It actually takes a lot of work to cut it down as it's so easy to do. That, is what people tend to complain about when they say Java is verbose. Not the boilerplate code, they simply say there is too much boilerplate code. &gt; I guess youtube isn't a big application then. I guess none of these are big applications. I said comparatively. I made sure to make that quite clear. If you ever read up on the problems they faced writing that code and how they had to deal with scalability issues and threading, as well as having to do an insane amount of optimizations to even get it running smoothly, you would see some of the issue plaguing large scale Python development. &gt; This is absolutely false. You cannot do anything in Java without using the built in classes. Well I can give you that, I guess you have a granularity much greater than I was assuming. I mean, I guess an int is a class as well, but none of the basic ones deal with nulls. &gt; The point is that I shouldn't have to do this in the first place The point is that if you aren't declaring them at least in comments that these exceptions are being thrown in other languages you are being a bad programmer in that regard. Having methods just thrown from a method without a clue that it is happening is not good. It's not maintainable. Now, perhaps if it was auto-generated somehow... that would be cool. On big projects this is even *more* important. I'm not glossing over "tiny details", I'm telling you this "tiny detail" is actually important. Whether in Java you put it in the method signature, or in another language you properly document it. But even your theoretical case is a bit flawed. Exceptions should be rare, and they should be dealt with as soon as possible. You shouldn't be bubbling them up, and there are few cases where that should be allowed, as you are almost treating it like a return path. It happens, sure, but almost always a better design could be made to not do this. &gt; but no one has ever shown any empiracal evidence to back this claim up. True, but this is also true for yourself. You have no empiracal evidence that skipping it saves time in the long run either, only anecdotal. Similar to me. &gt; Why would you ever want a variable to be in this state of limbo? Already said, lazy instantiation. There are a lot of cases where this might be nice. I personally don't do it often the time. As I said, I work towards immutability... but even with that sometimes you declare variables before you instantiate them. All variables are null until instantiated, including the ones you declare at the top and instantiate in the constructor. So we are talking about all class variables. All of them. Do you understand this? Null is an important aspect behind OOP because of this. You simple do not understand it's place is far greater in scope than you realized. &gt; You already answered this. Hmmm... kind of. I can see what you mean, but I don't think you got what I meant, but then again you made the claim and I see it now. &gt; Zero is not the same as null The concept is the same. &gt; Zero is an actual value No, it is the absence of a value. It is not a number, it symbolizes nothing. Divide by it. This is why zero was revolutionary and took so long to actually be incorporated into mathematics. &gt; Of what use is the knowledge about the absence of a value to a programmer? Of what use is the zero? This is so broad that there really is no concrete answer to be given, as it is different from situation to situation. The easiest would probably be database work, if the data doesn't exist this is pretty crucial to know.
For reference, this is from a [classic troll](http://www.adequacy.org/stories/2001.12.2.42056.2147.html) on the classic troll site [Adequacy](http://www.adequacy.org). For fun, check out the comments.
Very similar, but I use eclipse pulse, which is a free eclipse based eclipse installer which also manages eclipse and plugin updates. It allows multiple eclipse instances to share common plugins and saves drive space. Allows me to have distinct eclipse installs for JEE, GWT, Android or other work. Places a launcher for each on the menu too. Note Ubuntu 10.10, not sure after that but worth checking. 
WTF? This guy's generally right. There's a reason optimized lin algebra libraries work this way. I mean it might depend a bit on how big it is and how you use it. If you're using a large amount of memory, java could have trouble allocating the whole chunk, requiring a round of gc.
I missed none of your statements, I quoted small snippets to aid and highlight. I dealt with it all, also, you seem to have missed everything I said, from the start.
I am *disregarding* everything you said. I read it all, and my IQ had dropped 5 points by the end. Fortunately, I have plenty spare.
No, it's very bad. I would never consider using Swing to make a commercial application, for the simple reason that it would be a total disaster in terms of maintainability and performance.
Last one I promise. &gt;&gt; A language that inherently has more boiler plate is thus more verbose. &gt; Not quite. Here's the problem... those extra words which you claim make it more verbose aren't empty words. They do something and have capabilities that other languages don't utilize. These words, are necessary in Java to meet it's design philosophy as well, so outright going against your definition. Let me give you an example. Iterating over a String. String s = "this shouldn't require so much code"; for (int i = 0; i &lt; s.length(); i++) { // now get the character we are interested in char c = s.charAt(i); ... } I should be able to do this instead. for (char c in s) { ... } &gt; True, but this is also true for yourself. You have no empiracal evidence that skipping it saves time in the long run either, only anecdotal. Similar to me. This is a fallacious argument. The burden of proof of is on the proponents of the argument that the compilation saves you time in the long term. Why? Because the code-run cycle is obviously shorter in the short term and if you add a step to it (compilation) you have to justify the addition of said step. &gt; &gt; Zero is not the same as null &gt; The concept is the same. &gt;&gt; Zero is an actual value &gt; No, it is the absence of a value. It is not a number, it symbolizes nothing. Zero is an integer. An integer is a number. &gt; Divide by it. This is why zero was revolutionary and took so long to actually be incorporated into mathematics. Division by zero is undefined because [there is no sensible way to define it](http://mathforum.org/dr.math/faq/faq.divideby0.html). You can add, multiply and subtract with zero though. You can even use it as an array index. What can you do with a null *value* in Java? Nothing. &gt;&gt; Of what use is the knowledge about the absence of a value to a programmer? &gt; Of what use is the zero? This is so broad that there really is no concrete answer to be given, as it is different from situation to situation. The easiest would probably be database work, if the data doesn't exist this is pretty crucial to know. Again zero is not the same as null. EDIT: Formatting.
I'm using: * Debian (I admit it, I'm a distro hipster) * OpenJDK * IntellJ IDEA and/or NetBeans IDE (I hate Eclipse with a purple passion, may it die a horrible integrated-development-related death, etc) * Maven **ALL** the projects! (procedural build systems like Ant suck) * [Scala](http://scala-lang.org/) (it's a more awesome JVM language than Java; IntelliJ IDEA seems to have the best IDE support for it)
I've gotten several interviews, but with the number of applicants I guess they can be extremely picky. Several of the places told me that they had multiple hundreds of resumes that they had to select from for each job opening that they had. That's why I was trying to figure out the supply/demand ratio to see if it is a good move. After a lot of soul searching I think that I need to make a change of some kind, and I actually am hoping that I will have a better chance even with very little experience.
Depends upon what you mean by number. In a way yes, it does not actually exist, literally, it is very much the absence of a value. I was wrong to say that it is not a number though. &gt; is undefined because there is no sensible way to define it. More because it is illogical. You can not separate a number into an absent number of groups. &gt; Again zero is no the same as null. I don't see why you think you get to repeat claiming that nonsense. You've provided ZERO support for this assertion, while I've clearly given you why, yes, they are quite similar. Zero, the absence of a value. Null, the absence of an object. Also, we don't index arrays with objects. But you may actually use null as a key/value for maps.
Zero IS THE ABSENCE OF A VALUE. This does not mean it cannot be used in actual operations. In no way does this prevent it from being used in operations. Look up the definition if you don't believe me. In fact, look it up on any math website. In fact, google it if you must. This is common knowledge for the most part. It is a FUNDAMENTAL concept. Null is also *not a placeholder*. It is literally the absence of a value as well. The object does not exist. And it might never be. Just like zero is not a placeholder either. &gt; What can do with a null value: Hm, let's see, convey that there was no results for any given action? And I already gave you that you can access maps with it. Also, you kind of switched your logic there... "You can add zero, subtract 0, multiply 0, divide by... oh, *cough* I mean you can divide zero by something..." But you know what? Let's try it your way: what can you do with a class? I can't add, subtract, multiply, or divide... so it must be: Nothing.
&gt; Because Celsius is a scale, not a countable set. &gt; We are talking about two very different applications here, and you know it. What? Why do we suddenly limit ourselves to countable sets? What about negative numbers? I was talking about zero and its applications. Do you look at a number line like this? {..., -3, -2, -1, nothing here, 1, 2, 3, ...}. &gt;&gt; ... or that some other language does it better This is, in large part, the point of this thread. &gt;&gt; What Haskell does does not mean crap. Ok. I see where you are coming from now. &gt;&gt; You can pass nulls. You can pass them but ultimately the only thing that you can do with them is check if they are null. &gt;&gt; Much like you can't divide numbers by zero, so as you can't call methods of null (hint: there are no methods to call). You can't divide by zero because of the rules of math. There are other things that you can do with zero (such as use them in a scale). [Zero represents the absence of a **quantity**, not value. The difference is subtle.](http://mathforum.org/library/drmath/view/52387.html)
&gt; Do you look at a number line like this? I'll help you out on this, negative values don't exist either. I'll help you out further, zero on a scale is an identifier, not a value. This is for all numbers on a scale, so -1, 1, 2, 3, none of those are values. The are identifiers of position. Almost all of your argument has been about the arithmetic 0, not as an origin. &gt; This is the whole point of this thread But it is not the argument you're making. You're stating that "a general purpose language shouldn't have nulls at all" and that "Null does not mean anything". The fact of the matter is, null is a necessity for OO languages, you keep referring to Haskell like it matters well it doesn't. You don't like it? Fine, whatever, I don't have a problem with that actually. As I said, I avoid nulls as well. &gt; the only thing that you can do with them is check if they are null Hint: this is something. &gt; You can't divide by zero because of the rules of math Because it is illogical. &gt; Zero represent the absence of a quantity not a value Nothing in your article claims that. Also, under the context, value and quantity are synonymous... as quantity IS a value.
Learn by experience and by reading is probably the way to go. The gang of four's design patterns is still the de-facto standard: http://www.amazon.ca/Design-Patterns-Elements-Reusable-Object-Oriented/dp/0201633612 I really love this book for Java design patterns though, fun to read and really informative: http://www.amazon.ca/Head-First-Design-Patterns-Freeman/dp/0596007124/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1333263240&amp;sr=1-1 Then it's a matter of knowing when and where to apply them, which is a harder problem and just an experience thing I'd say. 
Hey there! I personally love patterns. I think there are one of the single best things you can learn as a programmer. So here are some resources I have used and was successful with. * [Head First Design Patters](http://www.amazon.com/First-Design-Patterns-Elisabeth-Freeman/dp/0596007124/ref=sr_1_1?ie=UTF8&amp;qid=1333262775&amp;sr=8-1) * [Recorded Lectures on Design Patterns](http://science.kennesaw.edu/~dgayler/cs4620/class_recordings/)
This may help: http://imgur.com/VDORf
This bullshit about not using certain classes or even language features (arrays) always amazes me. Well, some hints for you... You can read use the **Console** class to read user input [[More...](http://docs.oracle.com/javase/6/docs/api/java/lang/System.html#console(\))] - like so: String userChoice = System.console().readLine("Your choice? "); To compare two Strings for equality, you can use the methods **String#equals(Object)** (in your case, combined with **String#toLowerCase()**) or **String#equalsIgnoreCase(String)** methods. [[More...](http://docs.oracle.com/javase/6/docs/api/java/lang/String.html)] For example: "Tomato".toLowerCase().equals("tomato"); // true "Tomato".equals("tomato"); // false "Tomato".equalsIgnoreCase("tomato"); // true As for aborting the current "operation", the following keywords/method might be handy... - **break** keyword aborts the loop (for, while, do-while) you are in [[More...](http://docs.oracle.com/javase/tutorial/java/nutsandbolts/branch.html)] - **return** aborts the current method [[More...](http://docs.oracle.com/javase/tutorial/java/nutsandbolts/branch.html)] - **System#exit(int)** may be used to shut down the JVM, terminating your program [[More...](http://docs.oracle.com/javase/6/docs/api/java/lang/System.html#exit(int\))] PS: If you are allowed to use **Enum**s or using Java 7, there are certainly more elegant ways to solve your problem, not using a bunch of **if/else** statements. Have a look at **switch/case** then.
Just install Oracle's (RIP Sun) from the repo and grab Eclipse or Netbeans from their websites, not the repos, as they're usually behind in development, sometimes with serious bugs, and you would also have to keep installing the plug-ins do tailor it to your desired environment.
who the hell is downvoting the truth?!?!
Upvotes for [Head First Design Patterns](http://www.amazon.com/First-Design-Patterns-Elisabeth-Freeman/dp/0596007124/ref=sr_1_1?ie=UTF8&amp;qid=1333262775&amp;sr=8-1), it's a great reference and fun read!
* http://en.wikipedia.org/wiki/Software_design_pattern * http://www.javacamp.org/designPattern/ I've gotten to the point where I think of design patterns as more of a basis on how to solve a problem, whether that problem be functionality or making my code cleaner. I understand what you mean by the cleanliness. Personally, I really love using OO and despise seeing anyone not trying to reuse and reduce as much as possible; without hampering the project, of course. Basically, just try and think of ways that you can reduce the amount of code you're writing -- most commonly, this will be by reusing stuff. Most often, you can easily create methods/types to better reuse. It also helps to stay extremely organised and remember that maintaining a logical hierarchy in packages and types can help you clean up as well as keep you in better understanding of where all of your program fits. When it comes to applying patterns, e.g. a reactor in networking, just search up an example of the pattern, and see how others have applied it. Then, just try and make your own application of it in your program. Obviously, don't try to copy them entirely, as you'll end up hindering your ability to actually gain anything from the experience, but it's always OK to let yourself look at the basic methods they used to apply the pattern. Mostly, it'll come down to how well your brain can handle taking a logical blueprint and converting it into Java code :) Definitely read HF Design Patterns: Head First has some really great books that don't feel at all like books. It's how I started learning Java, and two years later, I've gained so much experience because of those basic lessons they taught. Just remember that design patterns are more of a reference than something you'll perfectly memorise like you have when it comes to writing code, and because of that, you'll end up checking back in on different patterns repeatedly. Keep some bookmarks!
Use a HashSet. It's not technically a HashMap, and will solve your problem easily. Or if that's not allowed - because HashSet is actually implemented in terms of a HashMap - just use a List of some kind. All collections have contains() on them, so you can use that to see if the string entered is in that collection and progress based on that... [This is the Correct way to do it, not the way you are expected to do it for your homework. Correct because you end up with an arbitrary collection of allowed words and if it's not in that collection then you can't use it. The homework assignment wants you to either use Java 7 switch on strings or else a long, evil, difficult to read if statement...]
toLowerCase() is evil. "Ice Tea".toLowerCase().equals("ice tea") will return false in some countries ;)
Good point. Still, the default Locale is used - as such it is not more or less evil then using **"Ice Tea".toLowerCase(Locale.getDefault())**. In this case, you should use Locale.US - as you know your Strings are static US-english text and you can assume the user is also using english as his input method.
I have to ask - What other language out there actually seriously competes in the same field? .NET? That's not cross-platform [Mono tries, but it's not 100%]. If you use .NET odds are you are limiting your server architecture to Windows servers, or else you are limiting your development to only the parts of .NET that are 100% supported by Mono... Ruby? Python? Perl even? They are great for small projects, and medium projects even, but development and deployment-wise they don't scale well. Deployment-wise - Java webapps you deploy by dropping a War file into a container. How do you deploy a Ruby or Python webapp onto a new production server? Last time I tried with a Python one - Reviewboard - it was a nightmare to deploy... C/C++. There is an awful lot of overhead development-wise you need to go through with those to write enterprise software. And again, it's very much not going to be cross-platform. The newer contenders like Node.js I'll admit I know very little about but I somehow suspect they fit more into the Ruby and Python region... As a professional developer - skills including almost all of the above to some extent - who works on a project developing "web scale" applications that are ultimately deployed by non-developers into cloud-scale server farms, I wouldn't want to do it in anything but Java simply because the risk of deployment would be too high. They make enough mistakes with the current "Stop Tomcat, Drop the war file here and restart Tomcat" approach, I dread to imagine what they'd do with deploying a Ruby or Python app...
The main complaint seemed to ultimately be against verbosity. There is an ever growing trend in software development to prefer Magic to Clarity - where the language/compiler/etc does all the work for you behind the scenes and you just trust that it's going to do it right. Unchecked exceptions hide away the fact that an error could happen, and if the error happens when you weren't expecting it then things fall apart. C# Properties are actually nothing more than syntactic sugar around getter/setter constructs, but to the caller make it look like you are directly interacting with the field. The property functions could do anything and you wouldn't know about it. At least when it's an explicit getter/setter it's obvious that it's a function and so could have functional details about it in extension to pure storage/retrieval of data - the getter could generate the data on the fly, or the setter could validate the data first. With C# properties you have no way of knowing if it's a raw field accessor or a secret function that you are accessing without looking at the target object...
I too was baffled by the theory of design patterns. but once i applied a few of them in my apps or during my learning, things got much more clear. I suggest you go to this site. really clearly written http://www.javacamp.org/designPattern/
Okay, I shouldn't say "trival applications", but instead "trivial modules". For example if my application needed to download and parse an XML file from a remote server. That's 5 lines of code in PHP, but 20 lines of code in Java.
If you have a schema for the xml I'll do it in 5 lines of java with jaxb. If you just want a document model or set up a sax parser and all ignore all the locally specific parsing then I'll do that in 5 lines too... I'm curious what you're doing that takes 20 lines...
Whoa. How deep? For depth n you're looking at at least 10^(2n)
Thanks for taking the time to explain, makes perfect sense now. I have always opted for the convenience of installing via the package manager and then using the update feature of the IDE to get up to the latest release. I mainly use my Linux development environment for the hobby and experimental projects. I guess I feel like I should be capable of working in a Linux environment should the need ever arise. Yesterday after reading this post I set up a new VM and installed Netbeans, tomcat and a few other things all by hand and I think it took about the same amount of time as it would have using the package manager.
 // Potentially statically declared stuff DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance(); DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder(); // Actual real code InputStream inputStream = new URL("http://www.w3schools.com/xml/note.xml").openStream(); Document doc = documentBuilder.parse(inputStream); That's two lines of code that will be done once to create the DocumentBuilder, and two lines of code to open a stream to the remote XML file and parse it into a Document object...
While I think anti-patterns are worth knowing (so you don't repeat them), I'm not convinced it's worth it to learn about patterns. Most of them will be independently discovered by students in first- or second-year CS students anyway. You've probably used loads of design patterns already without even knowing it.
I wanted to write this in the [/r/programming](/r/programming) thread with the HN-poll, but wasn't in the mood for arguments that day: With a few exceptions, there aren't any bad programming languages. It's more a question of good or bad choices. Think of it as a tool. Consider wood saws. There are a variety of it: bandsaws, jigsaws, circular saws, etc. You wouldn't claim that one saw is better than the other, but for your particular work one is more adequate than the rest. And even then you still need to choose the right blade. It's the same for programming languages. Generally, you'll have to compromise between ease of use and speed. And then you have some language features that you like to or need to use. Considering these factors you then choose the language for your job. And then there are frameworks. Having a high-level language is no advantage if you need to implement everything on your own, while there might be a nice framework in another language that does exactly what you need. (Well, sometimes you find out the framework sucks and still write it yourself...) E.g. i write a lot of research prototypes in NLP, and Java is definitely a good (if not the best) choice here, because it's performant enough and has a great number of useful frameworks available. Only recently i picked up Scala, which is another JVM-language and compatible with Java libraries. I've yet to see how that works out. Another example, in bioinformatics you'd rather choose Perl or Python, because those are the languages with the most usage in that domain. Anyway, is that enough to warrant a **tl;dr**? Here it is: I wouldn't care what the majority says. Listen to the veterans in your area of interest and make use of their experiences.
great I will definitely check out those books. thanks for your reply! 
the recorded lectures sounds interesting. I've always learnt a lot from videos online. thanks!
awesome reply! you were spot on to my question. upvotes! 
Will definitely check out Clean Code Talk. thanks!
Well, obviously I didn't do the entire game tree for chess. Also, I'm not sure where you get 10^2n from? There are usually on average 30-40 moves per chess ply. So, 2-ply would be 40^2, not 10^4. Anyway, the point is that rather than have a tree structure, which would entail objects at each level, I just went with a one-dimensional buffer and handled the offsets myself in code.
Wow..this is among my favorite comments in this discussion. Not biased at all. Thank you for this. I feel like this thread kicked off a great discussion, perhaps I could re-post this to /r/programming? Also, would you mind if I privately message you regarding the kind of idea I have for Java? If Java is the right tool for something I wish to play around with?
You should check out "Effective Java".
Ok then - that would be the 5th line that I'm allowed. Bearing in mind as I've said that two of those lines are static declarations and not actual lines of code being used right now. Though I wouldn't do it this way at all. As I said before, if I knew the schema ahead of time I would make it a JaxB parser that did the work. That involves some work to generate the Java classes from the XSD file - which xjc will do for you - and then the following code to unmarshall it. JAXBContext jc = JAXBContext.newInstance( packageName ); Unmarshaller u = jc.createUnmarshaller(); JAXBElement&amp;lt;RSS&amp;gt; doc = (JAXBElement&amp;lt;RSS&amp;gt;)u.unmarshal( inputStream ); RSS value = doc.getValue(); String title = value.channel().title(); Again, the first two lines can be statically declared and reused as necessary. The second two lines then take an arbitrary input stream - such as the one that was generated from the URL earlier - and convert it into a real object model that represents the XML. This is totally typesafe, and much cleaner to work with than arbitrary nodes. This is significantly safer to work with than the PHP version where what you have could change at runtime and just stop working for no real reason. It essentially means that the code won't compile if the XSD changes, and the code will fail to parse the XML if it doesn't conform to the XSD... I should also point out that the above snippit of code would actually only be written once, in a single class dedicated to parsing RSS feeds, and then re-used all over the place. 
This whole demonstration obviously isn't about lines of code. It's also not about which language is better; PHP or Java. It's about time. Doing things like creating Java classes -- even if xjc does it for you from an XSD file -- takes time. And what if there is no XSD file? Then you're writing the class yourself. Now I realize that some of the difference between your code, and my code have nothing to do with the differences between PHP and Java. They are the differences between a weakly typed language, and a strongly typed language. I also realize the Java methodologies are more "correct" in terms of type checking, and error handling. However, I can say with 99.9999% certainty that the PHP code above will never fail. SimpleXML isn't going to suddenly stop working, and the remote server isn't going to start returning something non-RSS from the same URI. The only thing that could cause a problem is the remote server being inaccessible, and that's an issue both my code and your code would have to deal with. Where has the Java way really gotten us though? I would argue that two applications -- one written in PHP, and one written in Java -- written by two programmers with with similar skill levels, will both have the same number of bugs, and neither would be easier to maintain, debug, or deploy than the other. Sometimes doing things in Java is like wearing two seat belts while you're driving, and you're the only one on the road. Sure, wearing two seat belts makes you super safe, but the chances of getting into an accident are really slim to begin with, and putting on two seat belts took more time, and is uncomfortable to wear.
I have that book but never checked its contents properly. I will check it out during the spring break. Thanks!
It's modeled after "Effective C++" if you are familiar with that book.
I was rounding way down to 10 since there are fewer moves in the beginning and endgame. Both players make a move. Intriguing. I imagine you just picked an arbitrary number of gamestates/length of the array and just stopped once you ran out rather than some kind of complicated balancing act.
[Oh god, you're right.](http://mail-archives.apache.org/mod_mbox/incubator-hcatalog-commits/201203.mbox/%3C20120306020325.8A72F2388CBF@eris.apache.org%3E) Sigh, Apache.
In a typical alpha-beta pruning algorithm, you choose the depth you're going to search to ahead of time. Other ways you can do is choose a size of buffer and stop when you hit the end. Alternatively, when you run out of room, you could go back and toss out branches you know you aren't interested in, compact the tree, and continue.
Absolutely! And thanks to you (as well as my random decision to search for a Java development subreddit) I've decided to start actively working in Java again. I Thank you in return :)
nope haha sorry!
Java web development is terrible. It works well for internal applications where documentation is a higher priority. But the big frameworks are so unwieldy and generate such terrible HTML and JavaScript that it's a sub-optimal solution for public applications. 
Because it is hard to do. It is even harder to do well. That makes it lucrative. I'm not a huge fan of ATG especially with Oracle owning it. The support policies are hostile to other companies. There is also a huge gulf between selling your personal stuff on a PHP site and moving thousands or hundreds of thousands of units.
I use Ubuntu 11.10 as the OS and directly downloaded an available package for the JDK. Was a pain because of OpenJDK's presence, I had to fix that. I also use IntelliJ IDEA for an IDE, and as a former Eclipse user I can say I definitely prefer IDEA. PhpStorm is also a nice software made by IntelliJ for PHP development, same with RubyMine for Ruby and they have one for Python that I cannot remember ATM.
Ultimately it really depends on what it is you are trying to solve. That is the real difference. Java is significantly better for heavyweight, enterprise level applications that want to leverage multiple services, message queues, ORM layers to represent your data as an object model, long-running background processes and so on. PHP is significantly better for lighter-weight applications that probably only have one data source to read and write to, do everything at the time without any external or background processing, and only have one "artifact" that needs to be deployed. The majority of webapps that most people want to run fit into that second category, which is why things like PHP have such a following. The problem comes when people try to shoehorn the enterprise-level apps into PHP, or else the smaller simple apps into Java... The project I work on is very much an enterprise-level Java application. We have a dozen MySQL databases, a number of Oracle databases, at least a couple of JMS message queues, external full text indexing services, and every single individual service in our service oriented architecture is deployed multiple times in a load-balanced environment. Writing that in PHP - or Python, Ruby, Perl, etc - would be a nightmare. Equally, writing probably 90% of the publicly available webapps as full Java webapps would be overkill, and PHP - or Python, Ruby, Perl, etc - would be a much better fit...
yupp, added a bit more detail, basically I just want the view layer to be done as I suck at front end design.
I've messed around with ElasticPath a bit last year, and I have to tell you, enterprise-class stuff is very enterprisey, very very big and complicated, but very very configurable and extensible, and the stores were actually very very good. I think that thing could actually manage a very big store with a very big warehouse and then some actual brick and mortar stores. It's open source but not free as in freedom. All of the PHP stores I tried were kinda crappy, and the Python ones were lacking. The only one that measures up is Magento, and it's not simple to understand and manage either. Also, support is very crucial. When dealing with money, you can't just goof around. With proprietary stuff, you can actually hire very qualified and professional support, and even get some kind of SLA for the store.
Perhaps JFileChooser? http://docs.oracle.com/javase/tutorial/uiswing/components/filechooser.html
Use JSF and PrimeFaces. It makes it simple to create a Rich view layer.
&gt; writing that in PHP - or Python, Ruby, Perl, etc - would be a nightmare I certainly agree with you there. My attitude right now is I'm not doing anymore projects in PHP. I'm so sick of it. And Zend really hasn't done enough to bridge that "enterprise level" gap. Not in their framework, IDE, or marketing.
java.awt and javax.swing are such awesomeeeee libaries.
Because it's premature optimization at the cost of development time and readability.
I'm a little surprised that no one has mentioned this, but in Java all arrays are one-dimensional. Two-dimensional (or three or four or whatever) arrays are illusory. Writing int[][] crank = new int[3][15] is identical to: int[][] crank = new int[3][]; crank[0] = new int[15]; crank[1] = new int[15]; crank[2] = new int[15]; Neither offers any performance benefits. Even afterwards you can re-assign any component array with something like "crank[1] = new int[25]" and your second-level arrays will have 15, 25 and 15 elements. Java's multi-dimensional arrays are really nothing like C's. As sazzer pointed out, write it however you find easiest to code and maintain, or if you're a student, how you think your teacher would want you to. You could do it as one big one-dimensional array and do all the indexing manually, but I'd be very surprised if any benchmarks show that you actually outsmarted the compiler/optimizer. Also, three one dimensional arrays is equivalent to a two dimensional array. A three dimensional array is a different beast, but in Java is still just an array of arrays of arrays, not a contiguous block of memory.
The question was "what is more memory efficient?" not "what should I use for this specific problem in context?"
*"To a New Yorker like you, a hero is some type of weird sandwich, not some nut who takes on three Tigers."*
Check out [Vaadin](www.vaadin.com). Much more flexible than plain GWT because it runs server side. You will be able to directly access your ORM/DAOs in the UI code.
As an added bonus (returning to the original question of portlets) Vaadin integrates nicely with [liferay](http://www.liferay.com). If all you want is something to ease the front end development, then a portal is going to be massive overkill. If however you need a platform with user management, roles, permissions, pages, layouts, themes, personalization, customisation, etc (I'm sure liferay have a feature list somewhere on their site) then you could do worse than to look at a portal server. If you're already using spring MVC - writing portlets with spring-webmvc-portlet is a cinch - a couple of additional concepts to get your head around (nothing complicated) and you're set. The down side of going down the portal path is the additional complexity that comes along with the additional functionality it provides, and the learning curve and time that comes from that complexity. As always - make the call based on what you need for the foreseeable future (pragmatic YAGNI). 
I was a software contractor for many years as well up until late last year. The reason they hire contractors is because their code sucks and is in need of rescue. The companies that write quality code tend to be engineering-centric, and don't need to bring in heavy hitters off the street to fix their shit.
I believe this is true. The OP is experiencing confirmation bias because the nature of contracting is self-selecting bad code experiences. I was a consultant for 10 years and my main job was being a code janitor and the 'bad guy' letting managers know how bad things were (one of my first tasks usually was a comprehensive code review with grades for different sections). It wasn't all a negative experience. I'd describe my gig as coming in as the enforcer to get things back on schedule but then quickly moving into a 'teaching and preaching' role; educating the developers on best practices, etc. Now that I've been with the same startup for going on five years and there's only two of us developers I stand by the entire code base's quality. We don't hire contractors because we don't need them. Same goes for even large corporations. You'll never see the good code because those teams don't need you. It's the failing projects (often due to other contractors, lol) that you get the big bucks for.
I've worked on a lot of projects where the users are very hard to deal with. They'll basically pay only the barest amount of attention while the project is progressing, even though they themselves are the impetus for the work and they'll be using the software every day. And then the project will be nearing completion and they'll actually start paying attention and give feedback on all sorts of things that they blithely OKed many times before. Although the quality of the average developer is definitely the main problem, I suspect.
Like *jbacon* pointed out. It's called the EDT. It's a single thread that can be populated with tasks. So whenever a JOptionPane or JFileChooser pops up, it has it's own task that needs to be finished, before the next task is being executed on the EDT. Thus a task for a JFileChooser is running as long as *cancel* or *ok* haven't been clicked.
The event queue is just a thread. In Swing applications, it is the main thread for doing user-actions and display updates. If you have a multithreaded application, you can use SwingUtilities.isEventDispatchThread() and SwingUtilities.invokeLater(...) to put an event from a separate thread onto the event dispatch thread. Whenever you are doing graphical updates, you need to ensure that the events are on the EDT, or else the operation won't have a guaranteed behavior. 
do you know the author?
I found that android developing is a faux java. Designing a GUI for it is really frustrating and there are plenty of things that go wrong if you have just one thing out of place. There is also an abundance of casting over casting over casting. Crazy stuff. 
looks interesting. I didn't look too much in to it, but does NIO.2 make reading files easier? (instead of having to set up a buffered reader etc)
Sounds like fun, the requirements are actually fairly lax. Guessing they won't pay for me to relocate from London? And for future reference it should be fine to post in [/r/java](/r/java). Good luck with your search I'm sure it won't be difficult.
A guy came into the office the other day to give us a "dojo" on TDD and he brought some stats along for a company he'd gone to consult at. It was costing them around £400 to change 1 line of code. Initially it was fine, and eventually it peaked with 1800 developers on a single project. Good process and well written tests suites take time but prevent this sort of code degradation. 
Thanks for your feedback! Yeah, I've had guys from Russia and India contact me already, and unfortunately, you have to already be in the U.S. H-1 Visas, Green Cards, etc. are not a problem as long as you are already here. Sorry!
lol, I'd only get called a hypocrite if I went to Apple so it's probably for the best. Fandroid all the way. ;)
I would argue that the responsibility lies with him, rather than the developers. I've heard it argued that developers should "do the right thing" even if their business sponsor isn't behind it. That's easier said than done. You can try all you want but you're fighting an uphill battle. If the person signing the checks doesn't endorse what you're doing, you're going to have a bad time.
LF?
Oh, it was bad. When it came out that their QA team was testing and verifying everything MANUALLY - every time - I went to him and explained that not only did the QA folks have tools available to script everything, he could essentially cut his regression testing in half or more, changing QA focus from regression to testing new functionality, he listened then ignored. I even showed how the development team had slowly built a regression library/sanity check that was 200+ stories and could be run in 20 minutes. 5 months later builds were still taking 4 weeks to make it from DEV to UAT because of QA. &lt;shrug&gt; Oh well. 
You're in /r/java, asking how to invoke with the Pascal calling convention, quoting a doc that references C++, and pasting in Visual Basic code. Well, OK. Your answer is to make a [JNI call](http://en.wikipedia.org/wiki/JNI) to a C wrapper function that calls the DLL. 
Jumping Jesus THANK YOU. I just needed some sort of pathway to this. The wikipedia examples are really nice! I really can't upvote this enough. THANKS.SO.F***ING.MUCH. 
Probably is same guy, but either way...it's a helpful article on a new feature packed object.
I do wish there was a reliable way to get and serialize all file attributes. This would be rather important for writing a JVM-based backup system.
Most popular websites have a webservice API you can query, and have a nice easy to use Java library to help you out. Here's what seems to be a nice Facebook library for Java: [http://restfb.com/](http://restfb.com/) If you had to do it yourself, you'd use classes in the java.net package, like HttpUrlConnection, to connect and receive data. That data usually comes back in XML or JSON, would need to be deserialized appropriately. Many websites with authentication require OAuth or OAuth2 to connect to their APIs, which can be a pain to work with. 
[Here](http://www.programmableweb.com/apis) is a website that lists many APIs that different websites have for getting information. There are also HOWTOs on the same site to get you started.
Have you used Arrays or Collections yet? Not wanting to give too much away: I would suggest generating the sizes of the 10 circles first, finding the largest and then drawing them. Hope this helps.
I'd be willing to be more than a dollar that we work at the same company :)
What type of java development do you want to learn? web development, console, thick client ui, web services, enterprise type integration? 
Right now I don't know. I'm taking a class at college thats "Data Structures &amp; Algorithms in Java". The teacher says you don't need to know Java to understand the logic, that C++ translates well, but I figured if I'm going to buy this book and learn something I might as well learn it all the way. 
so, how's GXT 3.0 coming along? I saw it changed from beta 4 to rc.
Yep - you still playing with it? API is pretty much sealed up, just fixing bugs now and writing docs, examples, unit tests...
Alternatively, if you only want to loop through all the circles once, loop through all of the circles painting them all blue or some other color. Keep track of the x, y and diameter of the largest circle, repaint that section with red after you're done looping. I think jbacon's solution is probably the more correct way since you wouldn't technically be drawing 11 circles (in 10 locations). This method wouldn't require an array though.
Thank you, I finally got it to work!
Great article. This is good info for any framework level developer. But, If you ever find yourself coding this pattern for exposing business logic (as they show in examples) you are probably over complicating your application. 
Thanks... i guess i am still very green, would you be able to point me to wards a video, book, something that is a little more noob friendly? ..if that is even possible
thanks, this is a good resource
Yeah, same here. Their sandboxed app market that costs $100 just to create even a free app... and they further punish you by forcing Objective-C upon you... cannot like this company. Android and Linux all the way. 
You can probably pick up the basics of the language really easily from any number of books. But, the language is just the beginning when it comes to java. There are a million and one different frameworks to support java's typical role as the "enterprise" language. You can't claim to truly know java without extending beyond the basic syntax. So if you want to go all the way, you have years of studying ahead. Just getting the grasp of syntax for your class? You can master that in a few weeks. 
Here's my code if any of you are interested. Hopefully it's simple and I didn't over-complicate things... import java.util.ArrayList; import javax.swing.JPanel; import java.awt.*; import java.util.Random; public class RandomCirclesPanel extends JPanel { private final int NUM_CIRCLES = 10, MAX_DIAMETER = 100; private final int MAX_X = 400, MAX_Y = 300; private Random generator; private int[] diamlist = new int[NUM_CIRCLES]; public RandomCirclesPanel() { generator = new Random(); setBackground (Color.black); setPreferredSize (new Dimension(500, 400)); } public void paintComponent(Graphics page) { super.paintComponent (page); int maxValue = 0; int x, y; for (int i = 0; i&lt;NUM_CIRCLES; i++) { diamlist[i] = generator.nextInt(MAX_DIAMETER) + 1; if (diamlist[i] &gt; maxValue) { maxValue = diamlist[i]; } } for (int i = 0; i&lt;NUM_CIRCLES; i++) { x = generator.nextInt(MAX_X) + 1; y = generator.nextInt(MAX_Y) + 1; page.setColor (Color.white); page.drawOval (x, y, diamlist[i], diamlist[i]); if (diamlist[i] == maxValue) { page.setColor (Color.red); page.fillOval (x, y, diamlist[i], diamlist[i]); } } } }
Have a look at http://hawtdispatch.fusesource.org/ maybe that is the kind of approach you are after? 
Can you clarify if you already know how to write Java software? Also, what have you programmed so far? If this is your first time making something, the above project description seems quite a lot for you to achieve :) But that shouldn't stop you!! The other comments definitely help with regards to facebook integration and utilizing many of the existing Java APIs.
Second vote for Effective Java if you're well versed in another programming language and have read something to get you caught up with the basics of Java.
If it is in dev mode, in chrome, it could just be an old, known bug: http://code.google.com/p/google-web-toolkit/issues/detail?id=5778. Not a lot that can be done, except to refresh the page, or not use chrome when debugging.
they use FF for the debug mode, on Linux. it also happens with a compiled and deployed application. even after cleaning FF's, Chrome's and Chromium's respective caches.
Ok yeah, I should have specified my level of know how better. I am up to learning about GUI's using swing. I am familiar up to constructors and basic classes. I can imagine that the project is quite a task, but I figure I should at least know where to head, and what kinda stuff I will need to know. Does that help more in your ability to prescribe me some good resources?
If you already know C/C++, I suggest you read: - Bruce Eckel - " Thinking in Java (4th edition) "; - Bruce Eckel - " Thinking In Java (3rd edition, [free](http://www.mindview.net/Books/TIJ/)) "; - Ivor Horton - " Beginning Java (7th edition)"; - any other books that correspond to your needs; Also, a good start it would be the official [tutorials from Oracle](http://docs.oracle.com/javase/tutorial/reallybigindex.html). **edit** Reformatted and added link to a free electronic copy of Thinking In Java 3rd edition, as AwesomeLove suggested.
My opinion having used it is that Swing is fine, so long as you're not too fussy about what your UI looks like. If you want to produce something that looks really beautiful, Swing is a source of endless frustration.
Would Java be ideal for making some sort of video streaming application? 
Don't worry, lots of the horrible bits have effectively been thrown out now. [EJB entity beans were a pile of crap](http://meta.ath0.com/2003/08/29/j2ee-in-a-nutshell/), nobody sane used them and that part of the standard is basically dead now. Instead, [JPA 2 with annotations](http://www.vogella.de/articles/JavaPersistenceAPI/article.html) makes persistence much cleaner and easier. You can even use it without the rest of the EE stack by annotating POJO. Similarly, a lot of the 'frameworks' which used to be considered essential, like Struts, are now coming to be seen as useless complexity. The one thing they still really need to clean up is JNDI, which could really use componentizing like JPA and a modern Java 5+ API.
Doesn't use any JVM. It uses the DVM, which is emphatically not a JVM, as you apparently know.
I tend to use the [Java Properties API](http://www.ibm.com/developerworks/java/library/j-tiger02254/index.html), to load and save properties in XML files with names like foo.xml. No need for commons-configuration these days.
I think you're optimistic. Try to find a *correct* example of JDBC exception handling on the web. Hint: Last time I checked, all Sun's examples were wrong.
Yes, it's exactly a complaint about checked exceptions. Runtime exceptions are fine; checked exceptions are a disaster. Checked exceptions were designed to try and force bad programmers to check whether operations actually succeeded. The problem is that they are visible in the API's method signatures. For example, it may make perfect logical sense that a background thread could encounter a FileNotFoundException when run. You want to display a useful error message in the front end. However, you can't simply pass the checked exception, because the run method doesn't allow any checked exceptions. So either you have to wrap the checked exception in a runtime exception, catch it in a default handler, and route it back to the parent somehow; or you have to have a system of callbacks and messages so the background thread can communicate to the front end that a checked exception occurred. So the checked exception system fails to allow a diligent programmer to deal with the problem cleanly, and at the same time the incompetent programmer will just catch (Exception e) {} to avoid the whole mess.
What I'm doing at the moment: * get your frameworky-stuff sorted out * set it up so that you have one servlet/action/whatever that can process a request and issue a response, nothing more * for each piece of functionality, write a test using [selenium](http://seleniumhq.org/) (or something) to exercise that functionality (eg_ a user logging in and then logging out) * work on that piece of functionality until the test passes * repeat for the next piece of functionality This will keep you focused, let you know when you're finished a piece of functionality and build your regression suite as you go :)
I'll definitely look at this.
I think you may have found something great here. It looks like a really nice library, and although I was trying to avoid libraries, it also seems fairly lightweight and almost perfectly matches my intentions. Thank you so much. I'll add this to the forum thread I linked to on Rune-Server and get some feedback from my peers there. Maybe they haven't seen it before, either. Upvotes to you, this was an excellent link!
&gt;Well, theoretically it shouldn't matter for the operations if you just consider JBoss itself the application, and you simply say you have two kinds of deployments: full deployments (Jboss including a war) and incremental/delta deployments: only the war. Tell me ONE single big non-IT enterprise that does this. Like I told in a comment to Oracle's Arun Gupta: tell me a single big enterprise that uses JEE6 with Glassfish os JBoss Community. Every big enterprise will only *start* to consider JEE6 now that JBoss released EAS 7 and Oracle released WLS 12. Maybe in small, companies, or in havy IT companies you can convince your managers of that. In real world (i.e. where Oracle/RedHat/IBM really make their money) a developer with access to production is something simply impossible to achieve because of security/SOX/whatever-regulation-you-like concerns. 
Thank you! This tid bit of knowledge may come in very handy!!
If it happens in both, that makes it appear that it isn't so random, but probably misuse/abuse of jsni/javascript. As for why it is suddenly appearing... Who knows. \#\#gwt and #extgwt are always around if they want to try with what free help can give them.
I have a fairly standard setup that I always use. Essentially it boils down to: * maven for building. Copy pom files from another project and tweak * jetty for insrant-on testing. Using the maven plugin this is trivial * spring mvc for controller/handler logic * if its got custom views then freemarker for those - freemarker integration into spring is just trivial * api style calls - returning json - use Jackson in the spring context * bean validation plugged into the spring context ensures things are wired up correctly. I absolutely despise autowiring so this us helpful. * depending on requirements, either jpa, straight jdbc or something more "exotic" like mongo or neo4j. If jdbc or jpa I use hypersonic in unit tests for convenience * all database schemes - for jpa or jdbc stores - use liquibase. Unit tests use those exact schemes against hypersonic. * unit test data is typically dbunit for ease if use Anything else? Im sure I'm missing loads...
Thanks, any suggestions On how to learn to do that, and also, care to explain limitations
yup, who knows. project's been sitting untouched in Eclipse since my last commit, and it was working. they tried running it yesterday and got these errors. maybe because they're still using gwt 2.0.3 and gxt 2.1.2 and don't want to update. but... not my problem anymore. tried my best to help them without svn and db access.
Awesome, thanks for the link! This should definitely help.
Thank you so much. So for what I want, it'd be a combo of C and Java. So far, all i've been able to do is create variables and accept user input from a keyboard. I still dont understand much, but I assume all the understanding will come later.
First of all, Maven. You'll need maven sooner or later ( or something similar) so get it over with and it will save you a lot of pain later on. Secondly, you should probably start picking out a web-framework. It'll probably be the wrong one for you but the fundamentals of what you learn you can carry over to any other framework as they are all abstractions over the same thing. Get a good sense of what's out there, what the pros and cons are and then fiddle around with the tutorials for the framework a bit. Personally I like Apache Tapestry but I've heard good things about Wicket as well. If you are interested learning technologies in order to put them on your resume you should probably stick to JSF, Spring or Seam So now that you have your technology picked out ( I assume you are settled on using JPA (ie Hibernate for persistence) usually the place to start with is the model. What entities will you deal with and what fields and relations will they have? Now this is the first sketch so don't go overboard with details and so on. Find your domain objects and then model them with only the most obvious fields and relations they'll have. Most people are not too good with abstractions and so you might get a blank look when you can only show them a UML diagram so instead build a prototype of forms and displays for those entities. Show them to your future users or the stake holders. Once you have to show something, requests and suggestions usually keep piling on and a structure for your app will emerge If you do this for school and can't get feedback on prototypes from the teacher then that's hard mode. In that case try to really put yourself in the end-users shoes, or better get a friend to do it.
After *Effective Java*, read [*Java Concurrency in Practice*](http://jcip.net/). 
Glad to help. It's also being used in activeMQ Apollo to good effect. Whilst we are talking oh high performance you ought to be aware of the lock free techniques used in LMAX and the crazy throughput you can get. See also it's open source library: http://code.google.com/p/disruptor/
How anyone can think it could be anything else amuses me greatly...
Its hardly painful as it is, writing a bunch of fields and getting the ide to generate getters and setters for you. And personally I'm very much not a fan of magic. I really liked the idea of lombok when I first came across it, but pain with ide support, and pain with magic in general put me right off...
Can you not do that, it comes across extremely arrogant.
I've worked with MySQL, Postgres, SQL Server, Oracle, Derby, SQL Lite, and Hypersonic... that I can think of. Honestly, MySQL isn't that bad for most purposes and it's wildly popular. There's a lot to be said for wildly popular: *everyone* knows it and it's really easy to work with. Hell, it even supports triggers and stored procedures now. Just make sure you're using the right backend if you use it.
JRebel is one of the very first thing I'm making sure is installed and working! With JRebel enabled, all other things will be easier and faster.
Thanks, that was very helpful.. upvote for you my helpful redditor 
When I graduated from college and started my first job, my mentor at the time, after about 6 straight weeks of my beginner questions, gave me the most important single lesson I have ever learned: Read the freaking manual. (RTFM) For most people who do not understand, it does come off as arrogant and at the time, I was very taken aback and downright angry about her reaction to my questions. My supposed mentor, the one person who was trusted to guide my technical development, was blowing me off and telling me to do it myself. She even smiled when she said it. The issue at hand was a simple one involving parameters coming from a form to a servlet and how they were populated. I spent three weeks on that one issue, reading tons of articles, manuals, how-tos and other documentation about how to do what I was trying to do. Finally, I hit the right spot, found my answer and solved the problem. Then something funny happened about 2 days later. I hit another snag. But instead of having to ask her about it, I remembered reading about it in one of the how-tos I had been going over trying to solve my servlet issue. 30 seconds later, I found the exact documentation, and solved the issue in an hour or so. I was so proud of myself. I went back to her and told her how I solved this issue all on my own. She looked up at me and said the something that has stuck with me throughout my career: "Sometimes it's not about solving the problem at hand, it's about the search and how much other information you have to sift through. This is how you truly progress as a developer." So sorry if my response came off as arrogant. It was not intended to be. But it was intended to give the OP a little kick in the pants and show them how easy it is to do research. 
Postgres is good. But I would highly recommend downloading and using [Oracle Express](http://www.oracle.com/technetwork/products/express-edition/overview/index.html). Most of the Fortune 500 work that I have done has been Oracle and SQL Server. All of the Fortune 100 work has been exclusively these two, with one exception of DB2 on a mainframe.
Cobol?
If you're looking for Fortune 500 sort of stuff, then by all means learn Oracle. I mean *really* learn it, too. It has a ton of stuff that is non-standard, but useful if you can figure it out (the Oracle docs and I have never gotten along; I have the hardest time searching for stuff in it). If you're looking more on the small business and/or startup side of things, Postgres is probably where it's at for a Java dev. If the company is willing to pay for an MS SQL Server license, they'd probably prefer .NET devs to Java devs, at least IME.
What exactly are you asking us here, and how does this relate to Java? Is it the problem itself that is unclear? Have you already asked your teacher/TAs? Sidenote: Please add some punctuation to your post! If I have to decipher single sentences, I'm losing interest pretty quickly...
I maintain a bunch of skeleton projects, of which I then fork a new repository when I need to start a new project, and proceed on customizing the project for the specific business case. For example, the Spring MVC skeleton: https://github.com/mikaelhg/springmvc-example
It absolutely does work with NetBeans.
Good thing to mention is that "Thinking in Java" is available for free and legal download.
And why exactly would you want to migrate from spring?
Very interesting, thanks for showing me! 
Check out JDBC Basics at http://docs.oracle.com/javase/tutorial/jdbc/basics/index.html
You guys never cease to amaze! Thanks again!
Definitely going to look at this! Thank you very much!
Because Spring is old-fashioned and heavy weight?
Very interesting article, thanks.
JDBC is the most fundamental and flexible way to do this. You should know that many (if not most) commercial projects will use something like Hibernate on top of JDBC for data access. But since you're just learning it, I guess sticking with JDBC and SQL for now will be a great start.
JDBC is the lowest level of accessing a database. Next up the chain is something like SimpleJdbcTemplate which I actually prefer over the higher level object-relational mappers (ORM) like Hibernate or Toplink Java Persistence API (JPA) frameworks. If you ever end up developing on Google AppEngine, Objectify is the defacto standard.
Very interesting, thanks for the info. :)
No one ever seems to mention how much of a PITA it is to debug dynamic languages. Especially when you try to scale them. Whenever I have to work with other people on a project, I would always prefer Java because then it is hard to mess up with some convoluted bug because you passed a string rather than an int in a dynamic language and the interpreter didn't handle the conversion right.
Loads of companies are using open source projects in all forms. If the on-site staff is capable and professional, they might be lot better in supporting the software anyway. So yes, companies do use open source Java EE 6 community editions. We are surely not a tiny wimpy company and started using it late 2010. How is this different from using the latest version of Spring? That too will have to be tested and in any serious company you will not be able to use the latest version of Spring in production the day after its released. And of course there is always -someone- who needs to have access to production, and in a well organized team this always includes senior (lead) developers as well. There is only so much a system operator can do. But "access to production" has NOTHING to do with considering JBoss itself the application that's deployed. The development team prepares the application for a release. When its deemed stable enough, its deployed to a beta stage and if it passes tests there it's migrated to a QA stage where it's again tested. Depending on the organization it might then go to a final pre-production stage after which it's finally deployed. For this pipeline it doesn't matter whether it's a .jar (JBoss with embedded war) or only a .war that travels through it. Java EE 6 fits perfectly here. The old-world idealized enterprise world where developers are treated as morons and cowboys, who throw software over the wall where months later a sensible and god like operations teams prepares it for release is dying out everywhere. Agile and devops teams are massively gaining in popularity, because this old-world ancient heavyweight process simply doesn't work. Small iteration cycles and developers who are involved in the process of putting the feature live works much better. Just think of it, when something does fail, do you want an operations guy handling it who has no idea what he is deploying or why he is deploying it and where the thing that needs to be deployed has been developed months ago by someone who he has no idea of how to reach, or do you want the developer involved who just developed the feature two weeks ago and knows all the technical ins and outs, pre-conditions, assumptions and what have you? If we're talking about big companies, look at some of the presentations of how things are handled at Facebook, Twitter or Google. Sure, they don't necessarily use Java EE 6, but you do get an idea of how a modern process and deployment strategy works. Spring on its turn has the old-world heavy weight process as one of its core assumptions; it assumes all environments are enterprises where operations has secured the servers and has claimed ownership of the AS, making it impossible and illegal to update anything. Then there's Spring, who hides away a complete AS in the war and thus despite all security layers the organization has in place, allows developers to secretly sneak updates of the AS (Spring thus) into production. Much of the decline of Spring is because of this entire process they try to circumvent is declining as well. **tl;dr** Spring is perfect as a tool to deceive those in power in old-world heavyweight enterprises, Java EE is perfect for honest, modern, agile and lightweight enterprises. 
Java EE is the new Cobol. Everyone knows it.
Personally, my programming experience looked like Perl &gt; PHP &gt; Python &gt; Java. I *like* my statically + strongly typed language. What you get is well worth what you give up.
Agreed. My company mainly uses Perl and Java (some other languages scattered in there). Perl is great for getting things done quickly, but we've had a lot of bugs appear because someone changed some data structure somewhere without searching where it was used. It doesn't give any kind of compile error/warnings, and sometimes not even runtime errors, you just see things acting differently. On the Java side of things, someone changes a data structure, they will see all the code that it effected and be forced to fix it. But at the same time, doing the same amount of "work" in java takes more upfront time and lines of code, but saves you headaches later.
This is actually why I get so frustrated with web apps, because the web aspects are full of things like Javascript and fickle HTML rendering.
I lol'd.
Actually, spring is pretty light weight. Why do you think it is heavy?
HTML rendering is the individuals broswers fault, if a browser is standards compliant and the author of the page writes to standard, failing to work isn't HTMLs fault. I actually like HTML for how it makes webpage development easier. Rather than have the traditional object oriented page layout where you need to track listeners and crap, it is an abstraction layer above. Tag soup sucks though, and CSS3 I dislike because they made it too verbose. Javascript of course is the other story, being the worst scripting language ever where the only reason anyone uses it is because browsers and web standards won't take a language neutral scripting stance.
Agreed. But I also argue you don't give up much for what you gain. You gain type safety, clear type conversion compiler bugs instead of dubious executing bugs where the whole thing just crashes, you get siginficant performance improvements (since type inference and boxing is the #1 reason a language like python is an order of magnitude slower than static languages) and all you give up are all the convoluted implicit type conversions that cause those problems. You might also need to read less documentation on the language to understand the primitives, but if you don't want to put in that miniscule amount of effort to know ~10 types, I really don't want to work with a person like that anyway. The argument of programmer productivity doesn't hold either, because the seconds saved not typing protected int in front of some counter variable come back to bite you when you try to use that counter for something else and the interpreter throws a fit and you can't figure out why. Typing speed / word size / etc are all insignificant in terms of time usage compared to documentation / design / testing / debugging in a major project. And static typing makes all of the latter significantly easier at the cost of writing two words.
100% agree.
My argument is that you don't have increased productivity if you are spending the time you would have spent keeping type mismatches in order instead debugging interpreter crashes. Especially when working with other people, who might get some broken subsystem with an interpreter crash and no idea where to start. If it is a simple type conversion bug, it is very obvious and so much easier to work with.
Are you doing this in the mouse listener? If so then you are blocking the gui thread. This link might clear things up a bit: http://java.sun.com/products/jfc/tsc/articles/threads/threads1.html 
The arrogance is striking. You are so much into Spring apparently, that when people all around you start liking Java EE, your only explanation is that those people must be Oracle employees. Well, let me tell you that "we" think the same about "you". Every person that supposedly likes Spring has to be a VMWare employee. It's not a far stretch, Springsource introduced the concept of Astroturfing in IT around 2004.
Can someone explain to me what spring is? What the purpose of it, and perhaps give me an idea for a test project so I can implement/use it. Most java related jobs nowadays require knowledge of spring as a requirement. 
As far as I recall this is due to the fact that paint calls within the Java2D API are being optimized before executed, meaning that your loop is stripped down to two calls. First it is being displayed in the start position and secondly in the final position. You should google for java and animation. Look at this [tutorial](http://zetcode.com/tutorials/javagamestutorial/animation/) for instance. I hope that helps.
Agreed but JSP and JSF and a good IDE like IntelliJ solve most of those issues. 
&gt;grails create-app myproject ;)
This article is over two years old and despite the author's title he clearly cares because he goes on to make a comparison. A very biased comparison as he admits but if you do not care why bother?
Upvote for GWT.
I agree with most of what you said but this is really more or a Spring problem than Java in general. I can build a Java EE application with JSF very quickly without using more than a few lines of XML.
I don't know, but there should be. I have a feeling there isn't due to the complexity that comes with most frameworks/libraries.
Stop using flat text files. Seriously, text files are prone to agony in thousands of ways that you can't even conceive of. Personally I use [sqlite jdbc](http://www.xerial.org/trac/Xerial/wiki/SQLiteJDBC) for stuff on the scale you'd think of using a text file, but there's plenty of other viable choices
Did you read the javadoc for Formatter? "If the file exists then it will be truncated to zero size" But as chunkyks says, flat text file is not really the way to go long term. Hard to say if it'll do whilst you are learning though.
As others have said, stop now and learn how to do this correctly. You're going to pick up bad habits that will be difficult to unlearn. Read up on JDBC
Interesting project you have there - not going phising are you?
PyMOTW covered just the standard library, if I'm not mistaken. Of course, Java has some pretty complex stuff even in the libs.
Why would you want to write a post like this when you have a very thorough javadoc to reference? http://commons.apache.org/lang/api/org/apache/commons/lang3/StringUtils.html
Yes, quite a bit. We also use other people's plugins, so it's not all our code :/
Ah, boo. Yea, knew it was stack/thread dumps, was hoping there was info here I didn't realize. :/
Thank you for this. I'll do that, and see what I get!
You might want to check out http://java.net/projects/tda/ as well.
I'll have a go at that, thanks.
BTW this isn't homework, just for fun. And, although I haven't *tried* this, I was thinking that maybe looping the middle section of code and generating a new int each time (not just rNumber) and then adding them up.
This is a really round about way of determining something that can be done with much greater efficiency using modulus and the principle of inclusion/exclusion. If you insist on using this method, you need to store the generated values in your choice of data structure and check for collisions (making sure a number can't be re-rolled again). Once the list is full, sum all numbers. edit: but seriously, this is a pretty strange way of solving it.
Could you possibly write an example of how I'd store the generated numbers in an **array**? I read the java documentation on them but I still don't quite understand. And I'm not giving up.
Sure. Writing to an array is simple. // generate an array int sizeOfArray = 1000; int[] nameOfArray = new int[sizeOfArray]; int positionInArray = 1; int numberToStore = 333; nameOfArray[positionInArray] = numberToStore; This is just simple syntax stuff
this generates an array, but how on earth can I use this to add all the possible numbers together?
I'm really sorry to say that you're not explaining it far enough. Maybe you don't understand. I have to solve this problem: *Add all the natural numbers below one thousand that are multiples of 3 or 5* You have given me this code, but what am I supposed to do with it to display the answer?
Well, that's sorta what I'm saying. The way you're CHOOSING to do the problem leads you down a needlessly complicated and incredibly silly path. Don't use math.random for stuff like this. Consider the fact that you can easily use mathematical shortcuts to abridge the work you do. Knowing that 1 + 2 + 3 + 4 + 5 + ... + n = n*(n+1)/2 might help you. Consider this: How are you going to stop the same number (lets say, 6) from being randomly generated more than once? You'd have to store ALL the values being generated and check them ALL EVERY single time you created a new number. With the sum series above, you know that 3 + 6 + 9 + 12 + ... + 3n = 3*n*(n+1)/2. You can use this knowledge to compute it without all this useless Math.random stuff.
Thank you! I'll check it out now.
Code some shit, seriously :D
Funny you say that haha, i am actually programming a Rock-Paper-Scissors game right now using GUI. But i think its bad so far
WHOA, WHOA dude that's waaaaaaaaaaaaaaaay to advanced for me. I am a complete noob at Game Dev, and i don't have a Android Phone so yeah. But, i am programming something. I am making a Rock-Paper-Scissors game with GUI(but no graphics)
I am in the process of making a Rock-Paper-Scissors game actually haha in GUI. I will continue, and thank you!
Thank you so much! i got it now!
You get all of this information from the [java docs](http://commons.apache.org/lang/api-2.3/org/apache/commons/lang/StringUtils.html). I do use StringUtils a lot... mainly for .isEmpty and isNotEmpty which also checks for nulls. 
But most of the open sources are game and I am a complete noob at it
I would rather suggest to test your components in your application server as well. Since modern incarnations start up within the second, there's hardly any need for mocks anymore.
The first thing you need to do is get out of that mindset that anything is too advanced for you. Because it isn't. It may take you a while, but you *will* get there.
Sorry lol, I just meant I dont know how to put in graphics, like from Blender or Music, or AI 
No need to say sorry, just believe in all that you can be~ /corniness Now, to be more serious... here's a nice AI resource geared towards developing games. http://www-cs-students.stanford.edu/~amitp/gameprog.html
Wow..sounds good..I've never heard of the 21 day thing. That sounds great actually! I've been studying the NewBoston.org vids. I've been playing around with making all sorts of calculators. I'm gonna keep making calculators over and over until I can do them in my sleep before I'm go to the next vid (9th vid I think). I'm really not sure if I'm on the right track but as of now I am enjoyingg myself. I'm going to PM you with my project idea, maybe you can get it kicked off that way I can jump on and contribute when I'm strong enough to code with you! Or you can just take the whole thing yourself I really don't care. Sound good? I'll PM you after your response. 
Okay :) And yeah, practice a bit, the calculator will be super easy. Soon it will just be Print, take variables, add/subtract/divide/multiply and then Print. If it's still not easy after you tried, try moving on and coming back to it :)
Oh it's super easy right now. I just made a calculator as a joke about a friend of mine. It asks, "How many minutes did Danny say he'd arrive in?" Whatever they put, it gets multiplied by 4 and it says "He will actually arrive in (answer) minutes" So yea I just want it to be muscle memory before I move on lol. (PMing you now btw)
Who said you need to know anything about game development to build an Android app? Why don't you start with a simple Hello, World! app and then work on one that interfaces with the phone's native mail app? None of that is very complicated at all. I don't believe you need a phone either, just use the emulator. Anyway, if apps isn't your thing, build a desktop application with a nice UI? That'll give you plenty of practice.
Obj! I didn't think of that! What do I need to start for Android Dev? Isn't it the same of just normal Dev? Like why do that for android when I can just practice on my computer?
No, but I'm interested as well. *crickets*
I would suggest making a template program to get in and start typing out right away. Something that contains a lot of basic functionality like sorting, maybe a basic recursion example things like that. My next suggestion is to bring enough reference material to make sure you are comfortable but honestly you will probably not touch it, so do not fret on that too much. My last suggestion would be to attempt a quick pseudo code solution first with your partner before you start hacking out your solution. Also do not worry about your code being neat it will be some of the ugliest code you have ever written. I participated in the acm competition for my university a few semesters ago and it was a blast, so that is what I am drawing my advice from. Our team was pretty successful we got 6 out of 10 problems done and we felt great about it afterwards. 
You will discover how to do it by reading the documentation carefully. It is much better to learn for yourself than have others tell you how to do it. One thing you are doing which is very bad however, is to catch exceptions and then ignore them. This is BAD BAD BAD BAD. Even if you take no action, at least write the exception message to the console.
I was never taught how to read the documentation. I find it very confusing. If you have a website that explains it in basic terms that'd be great.
K.i.s.s.
You must however realize that Play! has switched to Scala in its latest version and has become part of what is rapidly becoming the "standard" Scala stack. Java support is still there, but it's in a debatable state (see http://www.reddit.com/r/programming/comments/rnwoy/open_letter_to_play_framework_developers/ among others). If you're mostly into Java, JSF might be a better choice, as it's the default Java EE web framework. See my reply above for more info about that.
Thanks, I will learn Android Dev after I practice a bit more with Java and read a book. Is it alright if I don't have a Android?
Thanks, I'll check ifnougb
Past problems involve reading sample files, giving output in the form of text files, then running you program over actual test data, submitting the output. Making a template program, as mastershake5987 says, is a good idea. Make a template program (in your head if you can't bring it in) which does this: user inputs name of input file. user inputs name of output file. parse input file, placing data in datastructure program to analyse datastructure into result-datastructure formatter routine to produce result file. save to result file. (test functionality if you want it: result file is compared to desired result file) If you can bring a library like parsec, bring it, or learn good techniques for breaking up strings, extracting numbers etc. Same goes for output - be in control of how to output data. If you've got this stuff ready, then your programming will be reduced to domain-specific datastructures and functionality, and string wrangling wil be reduced to a minimum.
Thank you for the encouragement! :) I'm a couple months away from release, but if you're interested, subscribe to /r/Psyfire, and you'll see updates on my progress.
I'm using [LibGDX](http://libgdx.badlogicgames.com/), which is a cross platform java framework, but I basically have to everything except some of the grittier details. More or less, I built my own engine - which I'm planning on using in a variety of games. I had programmed before, but that was around 7 years ago, not a newbie, but VERY rusty. On that note, I did code my own physics engine - had it about 99% done.... except when you consider bugs and optimization. :P Swapped out my code with Box2D when I realized how unnecessary of a detour I was taking. P.S. Feel free to subscribe to /r/Psyfire if you're interested in updates!
**Start Simple** Every gamedev will tell you this. Think of a simple idea for a game. Now forget that idea, and think of one simpler than that. Is it more complex than asteroids? Try again. Making games is deceptively difficult. The home screen, options screens, graphics, input, tutorials, bug fixes.... by the time your simple game is polished enough to keep people entertained for 5 minutes, you'll be surprised how long it took. And you'll probably want to throw away your code. The work your way up from there. Also, any time-estimates you have for making a game... at least double that. You think it will be done in 3 months? Your beta will probably be ready around 6 months from now. I could give you a million other reasons for starting simple, but trust me. I wish I took my own advice and made something like Asteroids first. Tower defense games are deceptively difficult *(hundreds/thousands of objects, path tracing, AI, collisions, etc).* P.S. Feel free to subscribe to /r/Psyfire if you're interested in updates!
Very misleading title (it goes over differences, rather than how to actually make the switch), and the whole thing was an uninspiring read which was far too light on actual details.
You should be able to add any files to a JAR -- example: jar ... *.class each other file goes here
Use FatJar works in eclipse very very easy :)
We did a POC for this. Bundled the exe in the jar, opened up the stream to it and copied it to the system tmp dir each time it ran.
Unfortunately, you don't alway have the luxury to work with the most recent versions of application servers. Of course your are ultimately going to test in the application server, but ruling out most coding errors before you do so is a big time saver.
You mean that if you work with ancient beasts like Websphere, then testing out-of-container and with mocks is still worth it, right? Yes, indeed in that case it is. Just wanted to mention the other case too ;)
I wonder if this means Java ME will become open source?
 this(); Calls the default constructor of the class you are in. super(); Calls the super-class default constructor of the class you are in. You can use these to simplify your object-construction: public MyObject() { this.var1 = "something"; this.var2 = "something else"; this.var3 = null; } public MyObject(String valueForVar3) { this(); // calls the above constructor this.var3 = valueForVar3; } public MyObject(String valueForVar3, int printCount) { this(valueForVar3); // calls the above constructor for (int i = 0; i &lt; printCount; i++) { System.out.println("var3 is: " + this.var3); } } public static void main(...) { MyObject mo1 = new MyObject(); //mo1.var1 = "something" //mo1.var2 = "something else" //mo1.var3 = null; MyObject mo2 = new MyObject("hello world"); //mo2.var1 = "something" //mo2.var2 = "something else" //mo2.var3 = "hello world"; MyObject mo3 = new MyObject("hello tacos", 50); //mo3.var1 = "something" //mo3.var2 = "something else" //mo3.var3 = "hello tacos"; } Using this pattern, you can add increasingly fine-grained control of your objects. When using inheritance, you can use a super(...) call to call an appropriate super-method. In short, this() and super() are only valid for constructing objects. If you reference this. or super. (without the parentheses,) you are referencing an object. this. being the current class (or superclass, if no matching element exists in the current class). While super. tells the compiler that you are explicitly trying to call something/access something in a super-class. Edit: [Official doc on using **this.** and **this()**](http://docs.oracle.com/javase/tutorial/java/javaOO/thiskey.html) Edit2: [Official doc on using **super.** and **super()**](http://docs.oracle.com/javase/tutorial/java/IandI/super.html)
You can use this() wherever you like; it simply refers to the current object. super() is used in a class that extends another class by inheritance; it essentially says 'call this function's equivalent in the parent class'. Hopefully this made sense and was correct...
You can have alot more in there, it's just that *super* and *this* need to be the first statement. 
Something to note for beginners: &gt; Note: If a constructor does not explicitly invoke a superclass constructor, the Java compiler automatically inserts a call to the no-argument constructor of the superclass. If the super class does not have a no-argument constructor, you will get a compile-time error. Object does have such a constructor, so if Object is the only superclass, there is no problem. [From here](http://docs.oracle.com/javase/tutorial/java/IandI/super.html)
*this* means in this object, *super* is from the superclass.
if var1 is defined in the super class, **and** is **protected** and **not private**. ex: public class MyObjectSuper { protected String var1 = null; public MyObjectSuper() { //do stuff } } public class MyObject extends MyObjectSuper { public MyObject() { super.var1 = "something I want here"; this.var1 = "something I want here"; //this is also valid } } Edit: When extending a class, you need to be sure not to create variables that hide superclass variables, unless you explicitly mean to do so. This can cause issues when trying to debug if you don't realize you have two separate references to a variable with the same name.
We need to be clear if we're talking this() as in the constructor, or this. as in the object reference (the same with super() and super.).
Assuming it was marked private, I assume I would need whatever method the super used to encapsulate it to touch said variable?
Correct. Edit: for beginner purposes, this is correct, down the line, you may find it useful to access private variables (in libraries for example). You can do this by using reflection, but that is a bit more advanced.
I'm only speaking to this() and super()
Yes, assuming *var1* is accessible to the subclass (e.g. it is not *private*). You might, for example, want/need to use the *super* keyword to invoke a method that is overridden by your class: public static class PrintFoo { public void print() { System.out.println("Foo"); } } public static class PrintFooBar extends PrintFoo { @Override public void print() { super.print(); // invoke the overridden method System.out.println("Bar"); } } 
Right, but blackout's comment is talking about the object references **this** and **super**, they are completely different, as I've explained elsewhere. 
Thank you.
It might be a good habit to nevertheless call super() yourself, if just to document that there is a super class constructor.
You're StillAnAss, but thanks for that clarification.
You like it? I put it up last week /u/DEADB33F came up with it. 
Yes, it's good. It'll make referring to code much easier (both line numbering and zebra striping). And it's nice that it uses the same markdown as Stack Overflow.
Can someone give me an example of why you would want to call the previous constructor? //this();
Additional framework possibilities: One file for an interface named InputData with static methods: readFromString readFromStream readFromFile normal method: createOutputData One file for an interface named OutputData, with methods writeToString writeToStream writeToFile One file for a ConcreteInputData class, implementing InputData. One file for a ConcreteOutputData class, implementing OutputData. One skeleton program, like I outlined in the other comment. Git installed (learn enough to use it confidently for versioning and branching your work) Compilation scripts, cleanup scripts prepared (it may just an ant/maven setup, or just a script/bat file). For most of your stuff, you only need to alter the concrete class implementations. 
I guess that makes sense, seeing that if it's just this() and super() on their own, the .&lt;somemethod&gt; is implicit, because it's the constructor, hence you only being able to use it in the constructor. Correct?
Not really, this() and super() are constructors, not methods. You can't call the current class' constructor unless you are creating a new object, or are already in the object. 
After being subjected to what might be loosely called a "framework" (not Java-based) for the past 5 years which creates a lot of its own SQL without the ability for a developer to intervene, it will take a lot before I can trust a framework to not let me touch the SQL that goes into an app. When a DBA fires up the profiler and says "here's the query that's bringing your application to its knees" and there isn't a damn thing you can do to optimize the query because it's untouchable (unless, by some chance, it's in a part of the app you can rewrite from scratch to bypass the framework), it's really disappointing.
These comments have been good on the 'what', and somewhat on the why these need to be here. But why must you call the super-constructor when you construct a subclass? Well, a constructor gives an object whatever starting parameters it needs. You can't create an Integer without providing it a number. If you're creating an instance subclass, you're also creating an instance of its superclass. Since you must call an existing constructor to create an object, and a constructor of a subclass is creating that object, that constructor must call one of its superclass's constructors. Do note, that this does not mean you need to have each one of the arguments of super(...) in your constructor. If you have a class Fruit, which *must* be constructed with a color, and a subclass Apple, you can have public Apple(){ super(Color.RED); } You're making an Apple without any arguments, which in turn specifies the fruit to be a color of red. You can also use this(...) or this() because Java passes on the responsibility of calling a super-constructor to that constructor. As said before, by default, Java will insert a super() to any constructor lacking it, provided the superclass has a constructor with no arguments. Similarly, if a class has no constructors, a no-argument constructor is inserted by default. There's also a good reason why these calls must be the **first** in any constructor. 
I've certainly had more experience with writing pure JDBC SQL than letting a framework do it for me, but I've found that I can usually work around performance issues with JPA in a couple of ways without resorting to raw SQL: * Judicious use (or tuning) of JPQL. * Judicious use of indexes. 
I've been using [Yank](http://xeiam.com/yank.jsp) now for all my Java web app projects, which uses Apache Commons DBUtils under the surface. I like being in control and not adding bloat if I don't necessarily benefit from it. 
badly written and not really relevant
You certainly mean always.
I agree with the panelGrid. There are also some tags that can be collapsed or altogether omitted. E.g. in success.xhtml h:outputText is used, but the EL can be directly placed on the page. No need for the tag here. I would also think twice about using navigation rules (especially without redirects) and maybe a mapping to *.jsf and *.faces isn't the best example for a tutorial. This is already the default, and if you configure it .xhtml is arguably better. Playing the devil's advocate; the example would be simpler if not Spring but EJB had been used ;)
&gt;Is it a reasonable request that I ask that an object not take a day to create? Depends on the object, but I know what you mean. I wouldn't say that anything is capital-W Wrong with this, it's just that it's not what you want. You want a generic Car that does car-things, but the engineer has built a system where you can get a very highly specified Car. Maybe you can request the engineer provide a default, no-argument Car() constructor that specifies a set of default parts? 
Or... maybe you could suggest the implementation of a CarFactory class that would create cars for you based on certain profiles of cars. Car sportsCar = CarFactory.getCar(CarType.LAMBO); Car familyWagon = CarFactory.getCar(CarType.VISTA_CRUISER);
+1 for JSF This should really be the first choice, especially when using Glassfish.
It really depends on what the underlying system is doing. It may not make sense to have a default Engine, so there really is no way around supplying one to the Car constructor. There is something called the [builder pattern](http://en.wikipedia.org/wiki/Builder_pattern) than can help make this easier, though you'd still need to supply a lot of information if there are no reasonable defaults. Car car = new CarBuilder().setEngine(e).setBody(b).create(); In your case, if you need to test it but are unable to make changes to the API, you can use mocks to help fill in spots that don't matter (or don't matter much). My favorite mocking tool is [mockito](http://code.google.com/p/mockito/) but some people swear by [jmockit](http://code.google.com/p/jmockit/). import static org.mockito.Mockito.mock; // ... Car car = new Car(mock(Engine.class), mock(Body.class), ...); 
"How do you describe this?" is the post's title.
Tidying up after yourself is the tricky part here. Obviously you can extract, run, delete for every iteration but that's inefficient. Otherwise you need to make use of things that aren't reliable - like File.deleteOnExit...
I may have survived working with JSF 1 a while ago, but I won't say that it was ever my friend. Putting together new business oriented UI components was a particular PITA for our team and we would end up forgoing that entirely in favor of copy / paste reuse. Not one of my happier memories. If I had to do it all over again, we would have used Tapestry from day one.
yup, Yank is great. Sort of minimal abstraction that still gives you SQL control but removes the tedium of working with the lower layers.
&gt;Putting together new business oriented UI components was a particular PITA For many common cases this is now a breeze thanks to the composite component feature that was introduced in JSF 2.0. 
how was this implemented? if I wanted to add something like this to my personal blog what would i need to do in css/javascript/php?
That sucks. I was lucky enough to have teachers that really wanted me to understand. I'm sure that a lot of people here could help you understand some concepts. Good luck.
Excuse my error, then. I work as a freelance artist and was asked to try to find someone. Do you know an appropriate board I may post this to? Thank you.
I was in the same boat as you when I started. I tried to learn to program many times before I finally succeeded. The secret is this: there is no such thing as being "naturally" good at programming. That guy that impressed you so much? I'll bet you he spent a long time playing around and experimenting with the code to see how it worked. Now granted, some people are going to be a little faster on the uptake. Everyone has their own speed. But you should *not* view your apparent lack of progress as proof that you aren't cut out for programming. Here's what I suggest: 1. There are a ton of tutorials online. Some of them are good. Some of them suck. Go through all of them. If you get stuck on one, go on to the next one and come back. Eventually you'll start seeing patterns. 2. Do not allow tiny questions to multiply until you have no idea what you're doing. When you don't understand something - no matter how small - take the time to figure it out. If you can't get it after an hour, go bug your professor or TA. That's what they're there for. 3. Don't be afraid to experiment. Think something's unnecessary? Take it out. See what happens. It's java, so you can't destroy your hardware no matter what you do. 4. On occasion you'll ask a question that has a really deep answer. If the prof says not to worry about it make a note of it and move on. Just make sure you understand the extent of the mystery-meat and where you should and shouldn't expect it to impact your programming. 5. Look at good code bases and study how they work. Pick something small at first. And even if you can't understand all of it try finding a small section and understanding what it does. You can learn good programming by seeing good programming. 6. Don't be afraid to use a good IDE (eclipse, netbeans, intelliJ). They make things easy for you and really speed up learning for beginners. Only program in notepad if you find yourself magically transported to 1989. This system worked for me. And I even though I didn't study CS in college I managed to get a job as a software engineer at Google. It can be done. You do not need to be a gifted super-genius to do this. You just need to keep bashing your head against the wall till the wall crumbles. Trust me, it will happen.
I am having issues too. Sucks because I kept the installer on a different machine but it must reference Sun's servers as it will not install. [edit] [This is the error message I get when trying to run the installer.](http://i.imgur.com/fH61O.png) The bit about internet connection is BS. [Could have pinged it but i was lazy.](http://i.imgur.com/IQKvJ.png)
some JSF evangelists say, they should have given it a new name and be done with it. JSF 2 is really great!
The downloads are hosted on sun.com for whatever reason, and sun.com itself should just redirect to oracle, so there was a problem, and getting to the download links from oracle.com just yielded the same result. No worries now, though, since it's been fixed for at least 20 minutes.
Awesome answer, upvote for you sir/madam.
BigInteger is frickin hard. A lot of Array fiddling, then 4 different algorithms for efficient multiplication and don't get me started on division ... that's basically the part which you can get a lot of books about. Now try parsing Strings to BigInt, or printing BigInts, converting BigInts to Double/Float, etc. ...
Give Scala a try. It has an interactive REPL which makes a lot of stuff much more intuitve and obvious.
Maybe get a book, read most of it and just experiment. The way I improved, and still do improve, is by thinking 'does this work?' and just messing about.
Maybe you don't have the mind of a programmer. I would recommend you install git, go to github and clone some repositories and play with their code.
I'm just like that guy in your class and I can assure you one of two things: 1. he has been introduced to the world of programming since much earlier and at the very least had some basics down well beforehand 2. he has been studying programming in his own time (it can be very fun and addictive) and just says he doesn't practise etc, a lot of people do that me included. Someone will always be ahead, use that as motivation. 1. The thing is there isn't really such a thing as 'studying' programming, you study it by...programming, making errors, fixing them and seeing what went wrong. Learning syntax is just a formality, the concepts like Object Oriented Programming (OOP) and developing good habits/code style are more important. 2. You get better by programming, learn some basics then go apply them, find some very basic applications to make, perhaps all within console or with JOptionPane windows for reading input/output, to solve some simple problems and put uses to those basic things; to see when, where and why they can be useful. 3. Don't be afraid to experiment, the worst thing you could probably do is get in an infinite loop and have to close your program. It will never have any adverse affect. The advantage of high-level languages is that if you see some code or syntax you haven't seen, you can still usually figure it out. It usually means/does what you think it does. Actually writing code and fixing the many bugs you will make helps improve your programming LOGIC. Improving your logical thinking in regards to programs is the key to 'be at that level of programming' in my opinion, it WILL strengthen itself just by you coding and bug fixing. On a separate note, there are many resources you can use to learn, free online Uni level courses are springing up all over (Udacity, Coursera). They may not use java but as your understanding grows your programming improves independent of any language. There are also free video tutorials that are easy to understand like TheNewBoston, my personal recommendation though would be to find a good book that will give you a ride from start to finish and stick to it. I prefer the structured learning most programming books entail, the logical progression of topics really helps. Go to your library and take a look at some Java books and see which suits your learning style. Many people recommend Head First Java for it's simple approach, I myself like Deitel &amp; Deitel's book because its still easy to understand and very thorough. You may feel like 'maybe I'm not cut out for programming...maybe my brain doesnt work *that* way' and so on, nonsense! Nobody is inherently good at programming, as with anything it just needs some time invested into it and you'll be the guy impressing people in no time. Edit: Also in regards to the condescending teachers/TA, I have too many times regretted asking them things that piqued my curiosity. More often than not the answers I received were too technical for me to understand and flew right over my head. However, I've learnt that there is ALWAYS an explanation you can understand out there no matter what level of understanding you are at. Google/DuckDuckGo or whatever your preference; it is your best friend. Many before you will have asked the same question, if you can't find an answer then you could go to StackOverflow, StackExchange, many subreddits here, Java forums. Programmers are helpful people.
where is the zebra striping handled? #fffc7 and #fffff3
Fair enough. C is still a pretty low level language where you have to think about allocating memory and pointer arithmetic though. Also, debugging is a pain. That being said the only CS class I took in college was "Self-paced C" (which I did not pass) so maybe it's just me. Python is probably more forgiving as a first language.
Write some fucking code :) Seriously though, the only way you'll get it is to do it. Pick something simple, start with the absolute simplest part of it, and get it to work. Once it's working, build on it. Then build on that. Then on that. Then throw it away and do something else. A simple example might be to make a calculator - start by just reading input from the command line and outputting it. Then get it to understand a simple addition sum (eg_ "1 + 1") and print the result. Then add the other simple operations. Then, change it to be stack-based instead of storing input in variables. Add error handling. From there you can get it to work out more complex sums (eg_ "1 + 1 + 1"). Get it to understand brackets, then operator precedence. Change it so you can use the word "plus" instead of "+", then do the same for the other operators. Then change it to work with polish notation. Then add a GUI. The idea is to start with the simplest thing possible and gradually build on it until you have a complex system. This will help you build your confidence and learn some fundamentals. Once you get sick of a project ("sick" not "stuck" - if you get stuck break the problem down and apply your problem solving skills), move on. Don't worry if your code's not perfect - it doesn't need to be yet. Focus on getting something working and *then* making it better. Your first 100,000 lines of code are going to be rubbish anyway :)
Use a debugger.
&gt; I can’t use HTML5 with JSF ... &gt; Even HTML5 has it’s "XHTML5", or XML-serialized HTML5, which works perfectly fine with JSF. So, still can't use HTML5... I had a lot of (painful) experience with JSF 1, and JSF 2 feels like they just added hacks onto JSF 1 to make people happy. Maybe not the truth, but after trying to use JSF 2 that is certainly how I feel. I also still found myself too often thinking how in the world would I accomplish this. After I finally gave up trying JSF 2 I tried Spring MVC for the first time. No more thinking how could I accomplish this, no more feeling like something was hacked on, etc. Maybe its just the way I think, maybe I'm too used to other ways of doing things, but either way JSF 2 has not impressed me at all.
Start loving reading programming books. Not just those you have to, but everything. When i started, 30 years ago, i got a book about BASIC, and i did not even have my own computer then. Then i got the K&amp;R C book, and it opened my eyes as to how powerful programming can be. To this day, i best learn about programming languages from books.
Thanks man, I appreciate the reply.
Eclipse. I've never used anything else besides vim so I can't really comment on benefits and drawbacks. One thing I love about Eclipse is the refactor support - you can "refactor" a variable or class to rename it and it will automatically change the name everywhere you use it. I also love the pop-ups to help with all the stuff you can't remember, like auto-adding unimplemented methods needed for interface implementation, suggesting imports for unrecognized object types, and reminding you what methods and constructors are available on an object. 
What do you get as output? That would help a bit with debugging. Or if it doesn't compile, what errors do you get? I would first suggest adding up the bases outside of the print statement. I'm pretty sure that it works like this: int i = 1, j = 2; System.out.println(i + j) results in "12", but the following: int i=1, j=2; int total = i + j System.out.println(total) results in "3". It also looks like your math is wrong, as you said. If you say they have, for example, 20 doubles, you need to print that as 40 bases, because it is 2 bases per double. The same goes for triples and homeruns. So your math should be something like: int totalBases = singles + (2 * doublehit) + (3 * triple) + (4 * homerun) I would also suggest trying to make your code more uniform, just to make it easier to work with. Maybe instead of "single, doublehit, triple, homerun" you should use "singles, doubles, triples, homeRuns".
Switched from Eclipse to Intellij IDEA recently. I'm not going back, there are a lot of little things that make IDEA more usable. Better git support, better code completion, better error reporting in editor, more intuitive keyboard shortcuts... it adds up and makes a difference for me. Just one quick note. One is not supposed to be biased about tools and technology. It's important to evaluate and make decision that is going to benefit you, your team, your project and ultimately your customer.
I started programming by writing useless simulations and problem-specific calculators. These were great because the problems themselves were simple (accounting-level math usually) and easy to verify by hand. Since the problems are so simple, you can usually finish each one relatively quick. If you get bored with it when you're done, you can move on to a new problem. Otherwise, you usually come up with fun ideas for new features (like a visualization of your presented results). Though Java, C, and Python are all good places to start, I usually recommend Microsoft .NET (I'm a fan of C# or VB.NET for starting out). The IDE is clean and smart, and comes with a WYSIWYG GUI editor out of the box. You can quickly and easily produce something you wouldn't be ashamed to show off to your friends. Here are a few ideas to show you what I mean: * **Pizza calculator.** Figure out things like surface area, cost, how the pizza and bill can be divided between a number of friends, etc. Maybe draw a pie chart to illustrate the results. * **ATM simulator** Make the screen look like an ATM, and code it to act like one. Start out simple (assume everything that will make it easier) and gradually think of other things it needs (multiple users, pin numbers, check for negative balance, etc.) * **RTF Word processor** or **plain-text notepad.** Lay out a bunch of controls on the screen and write some logic to make it do cool stuff. * **Programmable robot.** Draw an image of a robot that can move around your window. Then invent a scripting language to control the bot. Once this is working, consider allowing multiple scripted bots on the same screen, and let them interact. * **Your homework.** Do your homework for non-programming classes by writing a program to solve the homework problems. This is generally easiest for math/science classes Extra points if you get this to write an essay for you :-p * **A Piano.** Or some other instrument. You push buttons or press keys to interact.
think you got a typo there (unless it was on purpose, if it was you never initialized it) but you should change "result1" to "result" and get rid of if(result == 0){ }else{ } and just leave the while loop 1)Because if result is inputed as 0 in that if else statement than the else statement would never execute, meaning the result screen would never show up And during that loop you never add the new number ("num") to the existing sum ("sum") so you'd write have to add another line in there like sum = sum + num; or sum += num; Edit: and in the future you should probably submit questions like these to r/javahelp :-)
Thanks got it :D!
sum = sum + num; should be after your new num, not before because it wouldn't know what you inputted if you didn't input anything yet.
Just me or is egit full of bugs? The guy that made egit is an egit. /joke
I use no IDE. I use a plain text editor that has a macro programming language. I hand-edit all my source files and I have one macro - "Alt-R" that - searches the current file for a string "RunCmd" that I put near the top in a comment and the string on the same line after RunCmd is the shell command to execute. It could be the name of the script I'm working on, or a batch file for compiling the project, or anything else. When I hit Alt-R, the editor saves all changed files, and runs the command. Why do I subject my self to such pain? I'm very proficient with my editor (been using it for 23+ years), and I learn the nuts and bolts of any language or environment I choose to develop in. I wind up with a much better and deeper understanding of what's going on. Using this method I've developed in Assembly, Pascal, C, REXX, Perl, Java, JavaScript, VBScript, HTML, CSS, ASP, and now JSP.
To be honest, Java's not really one of those languages I wouldn't use an IDE for. It's just too verbose, and Eclipse handles all your classpath nonsense without a hitch. Need 6 instead of 7? No problem. Need to export to JAR? No problem. In contrast, most other langauges you list there I wouldn't use an IDE for, unless I'm on Windows and I can use Visual Studio with it (so Python and C/C++).
Netbeans. It's been a while since I've used Eclipse, but I can't help but feel like Netbeans is polished, while Eclipse is a beta product at best.
Alright it works ! while (result == 0) { d = JOptionPane.showInputDialog("Enter a number: "); num = Double.parseDouble(d); int result1 = JOptionPane.showConfirmDialog(null, "Would you like to enter another number?", "Continue?", 0); if (result1 == 1) sum = sum + num; { JOptionPane.showMessageDialog(null, "The sum of the numbers are: " + sum); } But after I press no when it displays the amount added it restarts and asks for more numbers? I want no to cancel the repeat?
Eclipse if I want to use an IDE. Otherwise Notepad++ / Programmer's Notepad / jEdit.
&gt; One is not supposed to be biased about tools and technology Very true words. As a self proclaimed eclipse fanboy, I always mocked 'intelligay' users. I switched about 2 months back and realised I was a fool. There was a time when eclipse was the best IDE for java development, but that time has passed. Doing anything with maven in eclipse now is just downright painful. Eclipse still has it's strengths but it's just too fragmented with a lot of old plugins still floating about that really don't cut it. Intellij being a commercial product feels ready right after install.
JSF 2 definitely does not consist of hacks onto JSF 1. Nearly all outstanding issues with JSF 1 were thoroughly addressed in JSF 2. Can you refer to anything specific that feels like a hack to you?
eclipse for java, gedit for everything else
Eclipse is kind of scary - there are so many bells and whistles. It does a lot of stuff that makes it nice, but I prefer vim's simpler layout. A few small customizations and it's perfect. (It pains me to say this as a vimmer, but you could probably get the same effect with emacs, so if you prefer that, go ahead.)
I use NetBeans, IntelliJ and Eclipse. I've logged the most hours with Netbeans by far because the vendor of the product I maintain recommends NetBeans. I got a core i7 laptop with a solid state hard drive last year and I like working with Netbeans a lot more since then. I bought myself a personal license of IntelliJ in Januuary and I have to say I really like it. I also use Eclipse from time to time and I like that as well, though I do tend to run into more strange problems in Eclipse than I do with Netbeans or IntelliJ, that could be due to lack of familiarity however.
Indeed - my best kept secret! Haha. No, seriously, I don't tell my colleagues. I've gotten about ten good candidates from reddit in the past two months.
Why not use public Card drawCard() { Iterator i = deckOfCards.iterator(); //this will shuffle the card Collection.shuffle(deckOfCards); //this will return the next card in line. return i.next(); //this will remove the card from the deck i.remove(); } } 
I'm in this camp too. I use vim for python and ruby. Also for xml, config files, anything I look at from the command line. Almost everything. I use IntelliJ for Java. Way to painful to use anything else. 
So I am getting an error at the Collection.shuffle(deckOfCards); It says it can't find the method shuffle for deckOfCards.
Scala is not a good first language. It's too academic.
That I did. I copied and pasted what you had written no win.
 import java.util.Random; Random generator = new Random(); public Card drawCard() { deckOfCards.trimToSize(); size = deckOfCards.size(); int ran = generator.nextInt(size) + 1; return deckOfCards.remove(ran); } 
It's probably because you are passing in 0 when the deck is empty, and the value must be greater than zero. You'll need to add a check somewhere so you don't call that when the deck is empty.
I'm now getting an error for return i.next(); The documentation for all of this is so terrible online, sorry if i'm being so needy! hah. The error says it's taking incompatible types. Found an object but expected Card.
When dealerLogic runs, it never sends it to getWinner. It just keeps drawing cards even though it should have fell into one of the if statements after 2 or three card draws. Instead in only one round it draws the rest of the deck. I was planning on making another method that will start the game and refill the deck when necessary.
Also, once you "finish" a project, you could get someone to review your code. I learned a lot from people reviewing my code at work, which was way more thorough than any TA did in university. You might learn better ways to organize your code, make it more readable (which is very important when working with others), make it faster, etc.
Sorry, not sure why that would be happening. Maybe it's stuck in dealerValue? BTW you could definitely clean up that method. You could be using elses, += and different for loop syntax to make the code cleaner. Cleaner code leads to less mistakes! public int dealerValue() { int totalValue = 0; for (Card card : dealerHand) { int cardValue = card.getValue(); if (cardValue &gt;= 10) { totalValue += 10; } else if (cardValue &gt; 1) { totalValue += cardValue; } else { if (totalValue &lt;= 10) { value += 11; } else { value++; } } } return totalValue; } Anyway, I have to go for the night... I can check tomorrow to see if you figured it out.
Netbeans always seems to be so neglected, the discussion is usually about Eclipse **or** IntelliJ. I gave them a try, but I found Netbeans to be better for my needs. 
I use Eclipse mainly because its the one I have always been recommended to use
At my work we all use intellij. Most new folks come in as eclipse users, and are initially resistant to intellij because they already know all the eclipse shortcuts. But after a month or two they all decide that intellij is much, much better. I'd be curious to know if the opposite is true in eclipse shops. I personally think intellij is ridiculously nice to work with most of the time, but probably any ide that you know really well will be better than all the others.
*lol* at slide 19: &gt;rm -rf spring* And then: "Sure it would be fun" ;)
To each his own. But it IS possible (and ultimately productive) to have a totally hand-coded Java environment. One thing I neglected to mention; I don't always start from scratch. I do have templates I've developed over time (also hand-coded). So when I know I'm developing a standalone app, I'll copy in the "Hello, World!" group of files and directories that suits and continue from there. Same for web apps, etc. I have a good memory, so I don't usually rely on context help systems. But when I need to look something up, I'll go to the original specification documents or the gotapi or jdocs web sites. I also turn off syntax highlighting too - it's only a distraction.
Troll much? What good would that do, if he probably misses some fundamental concepts?
NetBeans is my choice. I don't know why but I just can't get used to other IDEs.
No it was serious and not meant to be rude. Some people simply aren't fit for it, just like any other profession. And looking at other peoples code is most beneficial, I got into it by originally finding the "view source" button of explorer and decoding the javascript and rewriting it to make simple games. Looking at others work can give you a great flow.
Sure you can code without an IDE, I just don't know why you would. IDEs help you in more ways than I can count, but if I had to give one thing I'd say it's drudgery (boilerplate code generation, spelling errors, refactoring, etc). Trying to code without one, honestly is so tedious that I tend to get bored and tired. IDEs make me more productive.
You typically do this using a [Servlet Engine](http://en.wikipedia.org/wiki/Java_Servlet#See_also) (AKA [Servlet Container](http://en.wikipedia.org/wiki/Web_container)), essentially a web server in Java that's capable of running [servlets](http://en.wikipedia.org/wiki/Java_Servlet). [Tomcat](http://tomcat.apache.org/) for example.
Call me a retard but is there any howto create something simple using Tomcat? Like an Address Book or something. I'm currently taking Java classes, but their focus is ONLY on programming, we are not getting any information about creating real life applications. 
Thanks for the help man =)
Beware any tutorial that's older than say two-three years though, as a lot has changed over the years. In particular, make sure to separate your HTML from your Java code. This is typically done with JSPs. [There are a lot of Web frameworks](http://en.wikipedia.org/wiki/Comparison_of_web_application_frameworks#Java) that are supposed to make things easier. I'm not sure which one is best, but [Apache Struts](http://struts.apache.org/) is pretty good, and i guess [JSF](http://www.javaserverfaces.org/) is some kind of almost standard. Try [1] https://www.google.com/search?q=struts+hello+world or [1] https://www.google.com/search?q=jsf+hello+world
Awesome Feedback Khasm! 
Would an internal website be better, in this scenario? That way each client machine doesn't need to have java installed. You build a web front end, at which they go to input their query, which talks to the db and comes back with the result? I don't totally understand your use-case but this may be easier.
if you feel daring, try appfuse: http://appfuse.org/display/APF/Home you basically just point it to the database and it will build a CRUD app from what it finds - like rails i guess. since it uses maven, it will download the entire server etc.
To be honest, as I mentioned, the Java course I'm taking is giving me nothing about real life applications - I'm really just trying to start doing something pratical - even if it's a Java calculator on a web interface. 
What I don't like about Yank is the base class for beans (why do they need it??), and the lack of an integrated caching mechanism.
I hate ordering from Amazon, it takes about 60 to 90 days to ship. But then again, I've never regretted any redditor's indication. Thanks so much!
Yeah, the Bean class is probably unnecessary. Yank also doesn't support transactions. What do you mean by a caching mechanism? Like something Hibernate would provide [here](http://docs.jboss.org/hibernate/orm/3.3/reference/en/html/performance.html)? What's an example where you would need it?
&gt;If you needed to build a Java desktop application from scratch, what would you use for its GUI? Swing. Hands down.
But what Look and Feel? Most Swing GUIs look so clunky relative to modern desktop apps :-/
Have a look at SWT. It's what eclipse uses. You could also use their GUI platform called eclipse RCP. 
Also i recently ported an entire application from JSF to spring mvc and in opposition to JSF things *just works as expected*. No lifecycle tricks or keeping data tables in session scope just to get buttons to work. Also DataModel not being Serializable is just ridiculous. I think I'll stop here...
Paste the code somewhere so we can take a look!
It's a rather lengthy program, but I'll try to paste the relative code.
One thing I noticed: I think you should use input.hasNextLine() instead of input.hasNext() in initializeArrays since you are always calling nextLine() there. I don't think that would be causing the problem you're having though.
Now, when you say "working," what do you mean?
The arrays have values. I have a file with "one,two,three,four,five" on each line. I call userInterface on that file, then I added the following code to userInterface at the end. for (int i = 0; i &lt; 60; i++) { System.out.println(event[i] + "," + category[i] + "," + gold[i] + "," + silver[i] + "," + bronze[i]); } and it prints out values, no nulls
Your code's fine, you put the debugging at the wrong place. It prints out the arrays ***before*** you've assigned their values.
Your code works, you just have the debug output before you actually assign anything, so it comes up null. Put it at the end of the `processLine()` method, instead of the beginning. Put this after the `initializeArrays()` call in `userInterface()` to see the values of all the arrays once the program is done parsing everything: System.out.println(Arrays.toString(event)); System.out.println(Arrays.toString(category)); System.out.println(Arrays.toString(gold)); System.out.println(Arrays.toString(silver)); System.out.println(Arrays.toString(bronze));
As was stated below, the problem was in my debugging. I was printing the values before assigning them, so that's why they were nulls. That being said, thank you for looking at this for me. I greatly appreciate it.
Whatever it is that YourKit uses. Any YourKit developers around?
I strongly disagree. If your application should be used on Linux platform, the native LaF choice, which is GTK, is rubbish. Especially on KDE, it's get messed up when someone imitates qt with gtk-qt-engine. Swing is about portability. The same LaF should be rendered flawlessly on all platforms. Good examples of such a LaF are IntelliJ IDEA 11 and Oracle JDeveloper 11g. 
Fragmentation (or modularity) is exaclty what i like about eclipse.
This hits the spot. Especially when using native looks. pay attention to whitespace, identify and mimic applications that are similar to yours. Swing makes writing custom widgets easy. Aim at reusing system colors, system guidelines, and whitespace. You might have to do some work on making custom widgets look ok across multiple platforms, but that is the price you pay for nicer than default looks. 
The framework is platform independent, so for a developer you don't need to worry about oddness between operating systems. 
I think your comments may have been correct 10 years ago. You can download the SWT separate to Eclipse and test in a different IDE. http://www.eclipse.org/swt/ 
[launch4j](http://launch4j.sourceforge.net/) will do that for you.
But it is like saying it is hard to create C# applications using Eclipse. Writing SWT applications by hand isn't hard (I was developing this way before WYSIWYG editors existed). Access to the actual source code isn't painful and TBH isn't even required for 99.9% of any development work done in SWT. 
JavaFX 2.0 I use it at the moment and I love it. 
For Java *news*, I have those bookmarked (they are not necessarily about Java only though) : http://www.dzone.com/links/index.html http://www.infoq.com/ http://www.theserverside.com/ http://www.drdobbs.com/jvm?itc=ddj-channel-navbar-jvm http://jaxenter.com/ https://twitter.com/#!/java Other than that, lots of bookmarked manuals/tutorials, stackoverflow and other various sites/blogs via Google searches!
Yeah the RCP is but if he just uses the SWT libraries he needs to load the ones for the correct OS. 
I had not even thought about the twitter feed. :)
http://www.reddit.com/r/java
yeah but still worth considering. I am all for SWT too btw
Aah sorry, I haven't really used it and didn't know much about it :/
I am not sure why you put your data tables in session scope. That would really not make sense except in rare circumstances. 
&gt; Swing is about portability. The same LaF should be rendered flawlessly on all platforms. Good examples of such a LaF are IntelliJ IDEA 11 and Oracle JDeveloper 11g. I always thought the idea that the apps should look identical on different platforms was misguided. Apps should look like other apps on the same platform, since that is what the user expects.
&gt; Most of the great UIs are great because they've been thought through and done by hand, not because they used some fancy prepackaged UI options that are not already available in Swing. Can you point me to some great Swing UIs for consumer-facing apps (ie. not IntelliJ IDEA)?
jdownloader is pretty nice. but i think they use a commercial swing laf
http://www.java.net/, http://jonathangiles.net/blog/ aka Java desktop links of the week, http://planetjdk.org/ ...
http://docs.oracle.com/javase/7/docs/api/
Exactly my bookmarks as well ;)
But you still can read those JavaDoc snippets that appear within Eclipse, rite? I mean, I can barely make any sense out of them. 
My chrome doesn't look like anything else on my Windows 7. I think. 
What are some the Java sites that you visit most often?
I use java2s.com for reference just about every time I use java.
http://www.reddit.com/r/java
But then again, it has been copiled three times, no? Can't you use some sort of system check like getCurrentOS to make small changes that are necessary between OSs? 
not a java site per se, but every time I Google a Java or eclipse problem I'm having, http://stackoverflow.com comes up and usually has the right answer. 
I do a lot of visualization/big-data programming, and I often find myself reading the JavaDocs of my favorite libraries, just to discover what's there. I usually discover ways to significantly reduce the complexity of my code that way. I should also mention that I code using vim, so the auto-complete functions used in major IDEs are not always available. 
It depends on the quality of the JavaDocs. The official ones are of exceptionally high quality, so if I get pointed in the direction of the correct class (or already know the class name), I can just check out the API and figure it out from there. Often the official JavaDocs have sample code in it as well, which adds to the quality. For other libraries I'll more frequently have to look at sample code. But I still look at the JavaDocs to find out useful methods that I may need or want.
If you put data tables in session scope, then that's your own fault. This is just as much a mistake as it would be when using plain JSPs and Servlets. Instead of letting your bean return a DataModel, you're almost always better off returning a plain List with model objects.
http://www.reddit.com/r/java/comments/s7toj/what_are_some_the_java_sites_that_you_visit_most/c4bsaeq
I'd rather not have to worry about that myself.
o0 Why would you code using VIM? Any special reason? EDIT: Spelling. 
A few reasons: - I started out using IDEs, but later discovered that I knew little of what operations the IDE handled for me. Vim + command-line (CLI) programming forces you to become better aware of what happens underneath. - Vim + CLI is universal: just this past week I've used them with Perl, R, Java, Processing, and HTML/CSS/JS. I also manage my to-do-list and write papers using Vim+LaTeX. - Vim, once you learn it, allows you sculpt text very quickly and efficiently.
I'm a newbie, and a friend just showed me http://codingbat.com/ and it's been the giraffe's tits so far
Spring is not something for a person brand new to Java. I've been programming Java professionally for seven years and Spring still scares me with all of it's "magic". 
I dunno - true there's a lot of magic, but its actually a lot of stuff that beginners don't need to worry about all that much... And imo learning the details of spring to write a webapp is easier than learning the difficulties if writing pure servlets, since writing pure servlets needs a lot of pure http knowledge...
[http://www.java-gaming.org/](http://www.java-gaming.org/)
Maybe consider not relying on JavaApplet to manage your url assignments. Take a look at this sample that uses an enum approach: http://stackoverflow.com/questions/647252/using-sound-effects-in-a-java-game. Ignore the guys issue in this post, this example works great with most .wav files that fit a minimal sound file size. Basically, you can call the sound to play every 1sec thread sleep with (SoundEffect.ALARM.play();)
A few questions: - If you need to run an applet on a server (Tomcat for example), isn't much more practical to use an IDE? - What if you're working with a GUI? - Would you recommend a newbie to use Vim? Or should I stick with Eclipse for a while? 
how do you add those code sections?
Put 4 spaces before each line of code. It's really just reddit's Markdown prettied up by this subreddit's CSS.
Is something like that, this is a project for a college class, thanks for the reference.
... and once you start messing around with transparency.
Well you have to ditch the SQLServerDataSource object, replace that with the MySQL DriverManager, and build the JDBC string MySQL wants from the class variables you have. SqlServerDataSource is a SQL Server-specific class, and if you remove the import then of course it won't work. 
I've program in Java as little as possible, but I've downloaded the JavaDocs and reference them quite a bit. It can be difficult to find some of the things that you're looking for, but Google helps. Were I interested in converting time units (for instance), I'd use the following search: `inurl:docs.oracle.com/javase/7/docs/api/ convert minutes to seconds` If that doesn't help enough, I'll try to search Git and other open code repositories for examples.
Depends on how new you are. I do recommend newbies not use IDEs, because I find that they just won't learn if they have Eclipse there to take care of everything for them; that was certainly my experience. I'll use Eclipse on occasion (GUI stuff), but I do try to take care of most things in Vim. I've picked up on Eclim (Vim in Eclipse and Eclipse in Vim), but I haven't got the hang of it yet. If you're comfortable in your environment, however, then use that.
write once, run anywhere, **test everywhere** :)
??? In order to process the data in the data table, of course it still works even if you navigate to another view. You press the button and postback to your view. Because of the view scope, the original data used to render the page is still there, so it's correctly processed. Your action method then redirects to the new view (Post-redirect-GET pattern) and all is well. Flash has nothing to do with this.
Why wouldn't it work if your button navigates to another view?
Not sure, but perhaps a [TableCellRenderer](http://docs.oracle.com/javase/6/docs/api/javax/swing/table/TableCellRenderer.html) is what you're looking for. [1](http://docs.oracle.com/javase/tutorial/uiswing/components/table.html#renderer) [2](http://www.exampledepot.com/egs/javax.swing.table/CustRend.html). Also check out [r/javahelp](http://www.reddit.com/r/javahelp).
Look at this to start, the same process to do this is the same as getting the input, and what the a key does is completely up to you. // Your default, declared somewhere. jumpKeyEvent = KeyEvent.VK_B // Method inside a key listener. public void keyPressed(KeyEvent key) { jumpKeyEvent = key.getKeyCode(); } And then you just check if the jumpKeyEvent is what is being pressed you jump. Definitely simplified, but this is the basis.
It's definitely a TableCellRenderer
Yes, you were right, I ended using the whole string method just like the code of that page and sent the connection object to the other project classes, I had to mod some SQL sentences too but it finally works, thanks!
[/r/matlab](/r/matlab) is probably a much more relevant subreddit, and seeing as the latest Java update fixes a security hole, I really wouldn't roll it back if I were you. I highly doubt it's causing your MATLAB problems. EDIT: Oh, I thought you were advising people to do this. I see you're actually asking for help on how to do it. I'm not sure you can; [/r/osx](/r/osx) or [/r/apple](/r/apple) might be helpful regarding the Java rollback, and [/r/matlab](/r/matlab) would be helpful regarding MATLAB problems.
Swing GUIs look exactly the same as modern good desktop apps. Whether they're clunky or not mostly depends on how well you code it. There are a lot of modern desktop apps that have very bad UIs where they look completely unlike every other program in existence, because at some point people decided that it was more important to uniquely skin an app to make it pretty than to have consistency to make it easy to use.
Can you point me to some examples of good modern Swing apps? Any I've seen are either not "consumer" facing (eg. IntelliJ IDEA or other developer tools), or they look awful (ie. the original Bitcoin client before they went with QT instead).
Jgoodies.com has some nice demo applications that use Swing with the custom layout manager available from that site. What are you trying to do that Swing can't do? 
Did actually read what I posted? I didn't compare the models. I didn't even mentioned spring mvc. I just said JSF is a bad implementation of the model. I don't know the other implementations but if JSF is the best one, we're really screwed.
Jsr 202 is the actual format of class files so is your first point of reference here. I can't find a version I can read on my phone though...
I like it that it's posted on the official youtube java channel.
Java is installed as if it were a framework, so if you have the previous version, you can just change which version "current" points to Or follow the instructions here: http://hints.macworld.com/article.php?story=20060121171126988
Did you scroll all the way down, click on the JSR-202 link, and read it?
You could try installing a previous version of Java and telling Matlab to use that instead.
after interface_count (3 in your case) comes an array of 3 unsigned words, which are indices into the constant-pool. the constant pool does contain CONSTANT_Class_Info for this indices. parsing the constant pools data structures really is the hardest part about parsing class files. you have to understand this next. read the spec, it's great. http://docs.oracle.com/javase/specs/jvms/se7/jvms7.pdf 
I actually really enjoyed that It's still morning but I think that's enough internet for me...time to go outside
Thanks. This is what I was looking for.
Can we see the code? Show us how your calling. Also, what do you mean you can't reach it, if there are no errors.
Think more about your portfolio. Having something to show is worth more than the best resumes.
Doing SQL in the view can also be handy. It doesn't mean it's a good idea. Ok, let's concede it's not a hack. It's more like JSTL sql tags: you're just breaking MVC. And yes there is no way to do this in SpringMVC firstly because there is no need to do it, secondly because you shouldn't put those kind of information in your view. It's funny because we actually *did* change the view technology (from Tiles/JSP to Thymeleaf) and it was amazing how we never changed one single line in the controller code. And we could even change that to a Flash on client side. Try that with JSF. Ops, JSF only works with Facelets. Sorry.
Real hackers use Emacs
Suuuuure I'll relocate to work for some fly by night body shop.
There was only one or two Java references in this video.. you could interchange this for anything in IT.... 
[Damnit, emacs! (xkcd)](http://xkcd.com/378/)
Short answer: yes, easily. 
&gt;Ops, JSF only works with Facelets. Sorry. You are shitting me right? One of the few things JSF 1.x did right was having everything pluggable, including the VDL. At that time JSP was the default VDL, and there were several alternatives available from third parties. Of those alternatives, Facelets was overwhelmingly the most popular, so this one was adopted as the default VDL in JSF 2. There are VDLs available that let's you create views in pure Java, or in JavaFX script. See e.g. http://jdevelopment.nl/authoring-jsf-pages-pure-java 
I'm not 100% sure what this in reply too, but to comment on the fragment: JSF (at least with the default Facelets) doesn't hide HTTP for you. It provides a higher level abstraction. Read my parent post again: &gt;Also, though JSF provides a higher-level abstraction over HTTP/HTML, in it's default configuration it doesn't try to hide this too much from the user. E.g. on a Facelets page you still provide the html tag, with a head and a body, etc. For a web framework I think this is the way too go. IMO Vaadin goes to far in trying to hide HTTP.
One more thing, to add to what everyone else has said: what is the point of your IEmployee interface? Will you ever have another class which implements this interface, other than Employee? It sounds like you really only need one class, Employee, which can later be extended to things like, say, SoftwareEngineerEmployee or something later. A class's relationship to an interface that it implements is usually a "can-be-a" or "acts-as-a" relationship. For example, a HashMap can-be-a Map. A TreeMap acts-as-a Map. An ArrayList acts-as-a List. A LinkedList acts-as-a List. Here, your Employee doesn't can-be-a IEmployee. An Employee doesn't act-as-a IEmployee. An Employee won't ever have more to it than the IEmployee interface (yours does, and it shouldn't). Your IEmployee interface doesn't make sense.
Utter bullshit
As you said, it varies significantly, but it is a good idea to at least know of things like [Big O notation](http://en.wikipedia.org/wiki/Big_O_notation) to describe an algorithms performance. Knowing the odd [sort algorithm](http://en.wikipedia.org/wiki/Sorting_algorithm) may help in some styles of interview too.
Thanks for putting this together.
A degree in computer science or math should be enough to get your foot in the door for something like an entry level or junior position. Getting your foot in the door and getting that initial set of real experience is probably the hardest part imo. After that, it's just a matter of getting more experience and a bit of networking to translate that into better positions.
no i graduated in 05. I have been substitute teaching ever since and now i m finishing my teacher license program.
1) Where in Austin? People in Leander wouldn't want to commute south of the river (or someone south of the river doesn't want to drive up to Lake Line mall) 2) It looks like you're going around your HR / hiring people (do you have this at your company?) I'm uncertain if you can go around posting on job boards. If you can do job postings yourself and reep the benefits, I'd recommend posting the job to [austin.craigslist.org/sof/](http://austin.craigslist.org/sof/), it seems a fairly popular place for software job postings in Austin.
You have a math degree, which IMHO is better than a CS degree for programming because of the problem solving skills. I would just figure out what type of programming you want to do, find the buzz words for that type of programming, and get them on your resume. Next is the challenging part, you have to get recruiters attention. The easiest way to do this is by going through your university career center. If they are of no help, next you want to set up an appointment with an IT recruiter/staffing agency/head hunter. They will help you get you resume in order, and have you put the right buzz words to sell yourself. What city do you want to work in? Or are you okay moving anywhere?
I m in Los Angeles and I d be willing to move, but probably not out of state. So I m googling it recruiters as we speak. thanks for the input.
all the ones i used are built-in (mvn, hg, svn) one power tip: use in-memory javac compiler if jdk6+, its quite fast - go to settings and search for java compiler and change it 
Do you have community or ultimate?
Ctrl shift space for type aware autocomplete Alt enter for context sensitive "intentions" EVERYWHERE. For example, if your cursor is on an interface name it will ask if you want to implement it. If you type the name of a common library class not in your project it might download the libs and add them to your project. On a constructor parameter it might ask you to create a matching member field and assign it. A little drop down appears when an intention is available. Try them! Learn all the navigation keys. Ctrl B ctrl shift B ctrl N ctrl alt N ctrl alt shift N. Autocomplete of everything is smart. Use only a few letters (such as only the capped letters of a camel case class name). Browse the refactor menu. Tons of useful refractors are built in. More are available as plugins. Source control integration is fantastic. Use it. DataSources tab is a decent SQL console GUI with the best autocomplete of any SQL GUI I've used. Good luck grokking facets. This IDE does a LOT for you if you use it right. 
I don't understand... this post was being down voted. @OP: IDEA is awesome. Personally I don't find myself wanting or needing any plugins, the native tools are awesome enough. Though I do have a UML diagram generation plugin, just in case I can actually get myself to not be lazy and plan xD
Just a note to yourself and all job applicants. The description of a job provided by a hiring company is their absolute IDEAL employee. I've never seen a smart company list the bare minimum requirements to work there. It gives them leverage in negotiating salary and keeps away "bare minimum" types of people. They'll make concessions with some of their requests. If you can demonstrate a functioning level of competency in the related job skills - you will be considered! When you're considering if you should apply for a job, look at the ACTION requirements.
OP: &gt;I work on this team. Up front, I will tell you that if I find you and you get hired on for at least 30 days I get paid $8,000. It seems the team lead has encouraged this sort of action.
Thank you for the quick reply, I've been playing around with it more and I think I'm getting closer. [Here's what I have now](http://pastie.org/3802578). It compiles but I'm not getting any actual data in the Elements list so I have something wrong there.
Ok, hear me out here. [IdeaVIM](http://plugins.intellij.net/plugin/?id=164). I can't live without it ever since I started using it.
You are reinventing the wheel, poorly. Use a `JXPanel` from [SwingX](http://swingx.java.net/) and give it an appropriate `Painter` for its background.
Seconded.
upvote for grokking.
on paper it looks like a good ide but try to get support or have an academic licence and its a nightmare. I have 200 + degree and masters software engineering students ( some of which are sponsored by FTSE 100 companies in the UK ) who are learning java and we need an IDE to help teach them. They didn't even reply to the emails they don't care about the open source community or academia just want your money. If you use the community edition it has limited functionality stick with netbeans as we did easy to learn and it is a good product.
why would would you want to emulate vim?
I 'm a freelance Java developer in cochin, java expert cochin, academic projects, academic projects java, training java, online java training
What functionality was the community edition missing? My impression that there are some cosmetic differences and the community edition lacks much of the web development plugins. For a while I was using the community edition at work with no issues due to lack of features, but I'm not a web developer.
That's just crazy talk!
Why are you putting the colors in static fields? It doesn't make sense. 
Community, which I'm seeing might not be the best for web development. 
Awesome thanks for the tips!
This article has no real meat or information.
Thanks for the summary, I cannot see the page as it was blocked by the "Murdoch Block" plugin.
It's funny. The fight that Microsoft lost against Sun, I want Google to win against Oracle. 
If you look at the properties for the run profile you are using, you will see that you can configure the height and width. Those settings are passed in via the applet runner and will override whatever you are coding.
The code in the reddit post got formatted weirdly... what do you want to happen if an invalid entry is given? You have a few options: 1) You can test that the number is a 1 or 0 (something like Integer.ParseInt(number) should work), and recursively call the input function if you do NOT receive the correct response 2) You can throw an exception if you do not receive the correct response and catch it elsewhere 3) You can deal with the validation in the frontend (unless Java is the frontend) with a Javascript/Jquery validation if this is a web app. 4) You can do something else that I haven't thought of :) More context will help determine how to do this (code/general context)
I stopped reading here, on your very first point: &gt; Use of classes is obligatory, but class definition syntax is verbose, and **the restriction to just one (non-inner) class per source file means half a million little class files.** because you are clearly misinformed. The restriction is one PUBLIC class per file. You may define any number of other Java classes, inner or otherwise, in a single file but only one may be public. package foobar; public class Foo {} class Bar{} Go on, copy it into a file named Foo.java and compile it. Clearly you can see you can put multiple non-inner classes in a single source file. You do, however, still end up with multiple .class files from compiling this.
there is not even 500 subscribers to r/javahelp and there is 9000 here chances are i'm gonna have more help here..
found it there was ";" just after my while (condition)
&gt; Add me to the list of XML haters. HTML (the inspiration for XML?) Not even close...not by a longshot. SGML is the grandfather of both HTML and XML and is itself preceded by IBM's GML. [Educate yo'self!](http://en.wikipedia.org/wiki/Standard_Generalized_Markup_Language)
To expand: Run -&gt; Run Configurations Find your Applet run config &amp; look at the Arguments tab.
Oh I've seen it...a lot...and it's out there in production in some code that is very crucial to ensuring the uninterrupted continuation of cashflow to and from the U.S. Treasury. It was written by some very handsomely compensated "expert" professional Java programmers I have had the dubious honor of calling colleagues and reviewed by their even more highly compensated senior leads before being OK'ed for release into the wild. And this is just the tip of the iceberg...I have seen some truly [The Daily WTF](http://thedailywtf.com/default.aspx) worthy code in this system. Bad programmers will write bad code in whatever language they decide to abuse. You can't blame the language for that.
Yeah I figured that that was the case. My question is: is there a way to disable that behavior if I explicitly set something in the code? Or do I just have to manually set it in the launch preferences every-time for every different project?
I'm just surprised that that is the case. I don't mind now that I know, but it seems to me that that could cause a problem if one was not aware of the behavior. I'll just chalk it up to TIL. Thanks!
This is the same powerpoint that's available on the Fox news article...
What is the reason behind using a collection of csrf tokens - one for each request? Is it not secure to reuse the same token for each request of the same user?
What book is used in the class? Intro to Java programming 8th ed. by y. daniel lang would explain all of these concepts.
For future reference, this kind of post would go well in r/javahelp. My main advice to you would be: don't get overwhelmed with a huge list of instructions. If you don't know where to start, that is normal. Just start coding what you know, and fill in the details later. So you know you need some different classes--just make some empty classes with the class names you need. There, progress! Now you know those classes need some methods with specific names, and some instance variables. So add some methods to the classes. Don't worry about the instance variables, unless you are told you need some specific ones, and then you can include them. The rest can be added later when you write the method bodies. If you know what the method needs to do, write that in a Javadoc comment above the method. Some of these instructions describe several steps you need to take within a method. These steps can be written as separate comments within the method--still without writing any of the method code. Now, you should be able to pretend that all of your methods are coded and that they do exactly what you say they do in the comments. From that you can write your main method and your tests. That will give you an idea of how everything works together. Now, the last step, which you might have thought was the hardest, now is the easiest. You write the code for each method using the comments for guidance, forgetting about the other methods and just solving the problem that that specific method was designed to solve. If you need to access the same data in multiple methods, or otherwise save the state of your object, then you create instance (class-level) variables for those cases. Some methods will need to call others to break down the work into manageable pieces, and you will figure that out as you go along. As you code your methods, you can run your tests to validate that they are working correctly.
seventh edition
i just tried to post this in r/javahelp and it told me this: Looks like you're either a brand new user or your posts have not been doing well recently. You may have to wait a bit to post again. In the meantime feel free to check out the reddiquette, join the conversation in a different thread, or verify your email address. i will try again in a little bit, but thanks for the strategy!
Seems pretty straight forward to me. Do you have some specific questions? Exactly what is it you are stuck on? Do you not understand what Java classes are? What instance variables are? What methods are? Can you post what you have written so far? Are you getting some kind of exception when you run your code or you can't get it to compile? Try to be specific about what exactly you want help with. We're not here to do your homework for you by reading your requirements and posting up a solution if that's what you are hoping for. We are here to help though, provided you can show us what you've tried.
For starters: while ((play) == 1 &amp;&amp; (totalamount) &lt;= 21) { I think you mean: while ((play) == 1 &amp;&amp; (totalamount) &lt; 21) { You don't want to let them hit again if their total is equal to 21 (at least I assume you don't) but the way you've coded it here the while loop will continue if the totalamount is equal to or less than 21. I also have the suggestion that you use a do...while() instead of a while so that you don't have to do the initial: play = Integer.parseInt(br.readLine()); outside of your loop before it starts. A do...while always executes at least once and then tests the while condition and I think that is more suitable to what you want here. With a plain while() loop there is a chance it will never execute if the conditions aren't true to begin with, plus its causing you to have to put that extra readLine outside your loop like I said. There are many other questionable things I see here but I will refrain from comment for now.
If you'd rather read a book, I recommend Head First Java. If you want to practice and see your code in action, I recommend you install an IDE, like Netbeans or Eclipse.
Eclipse Rap? I sounds a bit like Tupac rapping in a hologram under a solar eclipse. But seriously now, Rich Ajax Platform does sound interesting, although I don't mind writing my on Ajax from scratch
Item class- public class Item { private String name; private String description; private int weight; private boolean edible; public Item(String n, String d, int w, boolean e) { name = n; description = d; weight = w; edible = e; } public String getName() { return name; } public String setName() { name = n; } public String getDescription() { return description; } public void setDescription() { description = d; } public int getWeight() { return weight; } public int setWeight() { weight = w; } public boolean isEdible() { if(item == edible) { return true; } else { return false; } } }
This code wouldn't even compile, the setters don't have the necessary parameters. Also, can you think of a way to make the `isEdible` method a bit simpler?
What exactly is maven? I have heard so much about it but am not sure what it is exactly. I am mostly a c# developer and rarely venture into java but this word seems to come up often.
Your isEdible() method can be simplified to a one liner, with two keywords and a semicolon. Think about it. 
Again, hasItem() can be a one-liner with just a couple of keywords.
This shouldn't compile. If you are going to write stub methods with no logic in them, and those methods return a value (are not void), then you *must* return something. For boolean stub methods this is generally "return false", for numeric returns use "0", and for everything else use "null". If you fail to do this, then your code won't compile, which means you can't even test it when its partly complete.
Is there any reason for the createRooms() method on Game? Surely the statements to set up the game state should be inside main()?
I've looked at some parts but I don't see any comments.
I fixed the set Methods, and will fix the isEdible. The createRooms() method was a template given to us by our teacher, he said that we had to include that. The Game class is the one that I am struggling with the most. public String setName(String n) { name = n; } that is how i fixed the set methods. and i changed the isEdible() to public boolean isEdible() { return true; } 
Having your Comparables and Comparators classes throw Exceptions for instead of the standard int return value is bizarre. Don't use exceptions for control flow. Just don't. 
more than that, it is a build management system with lifecycle events that can trigger events during a build such as code generation, packaging options, deployment options, etc. It would be similar to Ant+Ivy.
Thanks, makes sense. Much appreciated.
Sounds like it sucks if you're trying to do edge-case Java development. Not really surprising I guess that a pseudo-democratic process would favor the majority. Adding a new keyword is a non-starter but the @Struct annotation could be a good compile-time flag to do some magic mapping. Not going to pretend to understand all this though. Maybe instead of proposals someone should just implement the solution in a fork of OpenJDK so that it can be tried out? Possibly someone has done this already.
Nice post, it doesn't get much cleaner than that for implementing CSRF protection. It was an insightful article, I hope it doesn't get downvoted too badly for being about Spring instead of JSF....
Great job!
The JCP generally doesn't deal with individual RFEs for the language or libraries. The scope of this issue is probably more appropriate to a [JEP](http://openjdk.java.net/jeps/1) though if you want it done you either have to build the feature yourself or convince someone else to do it.
Try using a two dimensional array. So like this instead, MyButtons[][] jb; // ... jb = new MyButtons[rows][columns]; It's easier to query buttons around your button this way. Also, /r/javahelp is better suited for this kind of post.
You know man it really is not to much to run it! [here try this :D]{http://www.java.com/en/download/help/sysreq.xml}
sarcastic? or being on a real level? It is hard to speak with emotions over the inter web..
Those are the system requirements for the JRE to run I believe. When you are actually coding it will be a bit more since Java IDEs are built in Java generally. However, if you meet the minimum requirements of your operating system. Generally you will be okay. In my opinion for learning, the requirements won't be the barrier for learning. It may even help since you have to be more cautious when you start working with larger data sets.
congrats. now, use a VCS. cannot stress this enough. at least a repository on you local machine, then you can back it up to Dropbox if you'd like. a list of free VCS hosting: http://en.wikipedia.org/wiki/Comparison_of_free_software_hosting_facilities
You need a List of Items, initialized like this: //Define at class scope, so all methods can access this List List&lt;Item&gt; items; //Initialize in constructor items = new ArrayList&lt;Item&gt;(); This creates a collection of Item elements. The class name in brackets is the *generic type*, and defines what kind of objects the List contains. This is a similar concept to the return value of the challenge method. The `addToFavorites()` method is a simple method call on the List previously created - [here's the documentation for List](http://docs.oracle.com/javase/6/docs/api/java/util/List.html). The `numberOfItems()` method is another one liner method call on your `items` List. Refer to documentation link above. The `showAllItems()` method is a bit more complicated. You have to loop over each item in the array and print it, like this: for(Item item : items) { //Print item } If the `Item` class already defines a custom `toString()` method, you can just call `System.out.println(item)`. Otherwise, you should print each field of the `item` object appropriately within the loop. For the `numberOfItemsOfRating()` method, here's your basic flow: 1. Create a new int variable to keep track of how many Items of the provided rating you've found. 2. Loop through each Item in your items list, as above. 3. For each of those items, compare its rating to the desired rating provided as an argument. If they are equal, increment the counter. 4. After the loop is done, return your counter. The `searchForItem()` is very similar to the above method: 1. Define an Item object and set it to null. This will be temporary storage for your return object. 2. Loop through each Item in the List. 3. For each item, check its description against the provided argument (make sure to use the string's `equals()` method, as you are comparing strings!). 4. After the loop completes, return your temporary Item object. The `makeStarList()` method will be a combination of the previous two methods: 1. Create a new ArrayList&lt;String&gt; collection, as local storage: ArrayList&lt;String&gt; starList = new ArrayList&lt;String&gt;(); 2. Loop through each Item in your items List. 3. For each item, check to see if the rating matches the rating provided in the argument, just like in the other method. 4. If they are equal, add the item's description to your `starList`. 5. After the loop completes, return your `starList`.
If you can't finish this assignment with the help of this comment alone, you probably shouldn't be passing the class. 
Are you using LWJGL? (LightWeight Java Graphics Library) If so, try here: http://www.lwjgl.org/wiki/index.php?title=Main_Page#Getting_started LWJGL is just an extension for OpenGL (and others) so there are loads of tutorials for OpenGL you can find online like here: http://nehe.gamedev.net/ Definitely read up on OpenGL as, if you're new to 3D graphics, its (arguably) the best place to start.
I had written a port of [Modern OpenGL Programming Wikibook](http://en.wikibooks.org/wiki/OpenGL_Programming#Modern_OpenGL) code over to use LWJGL Unfortunately, I only covered the basics arc of the tutorial, but plan to continue on with the rest of the arcs in the future. The ported code is [available on github](https://github.com/alihelmy/lwjglTutorial) and I would love to have feedback from you (or anyone else of course) or if you'd like to continue them further on; send me those pull requests IMHO you'd be better off learning Modern OGL (ie: programmable pipeline) vs direct mode OGL, so you can have the knowledge transferable to OpenGL-ES which all mobiles use AFAIK and just like bobble14988 said, LWJGL is an awesome way to get to use OpenGL with java. Proof? see minecraft :D (not a player of minecraft myself, but it does show you LWJGL can do any beginner-to-intermediate task you think of... anymore than that, and I am not one to judge :D)
Once I combined the two- a VCS repo that lived in Dropbox. Not pretty, and not a solution I'd recommend whatsoever. I'd definitely second looking into free repo hosting though- if you are a student (edu, ac.uk, etc... email address) you may be able to get better-than-standard free plans.
This. Looks interesting, but would like to see a more complicated use case before investing the time to learn a new tool.
aah, yes. trust me. I would love to rewrite and do this usix ajax and anyother tool however. I am limited in what i am allowed to do.
That sounds like a good idea. But how do we showcase the capabilities of the tool there? Would a video of the tool in action convince you to try it out? The Guice example loads over 25k events and the best parts are the quick loading and rendering
Right now, to get an initial feel you need to invest some downloading time. There are complex examples that you can try out real quick.
This is not a direct replacement for a more formal UML sequence diagram and both formats have their pros and cons. The main thing is that JTracer is something you can use to document existing behavior by querying your actual running program. Additionally you get * Better view of your threads. Run your program multiple times and you might get different traces based on how threads interleave. * Compactness vs a more verbose sequence diagram. 
I definitely will let you know any improvements or additions that could be made. Thanks for putting the effort into making this resource!
I guess a video would be cool!
The idea is interesting. A few remarks: - Some test in the samples is broken (with `ant runAll`) - The scrollbar really sucks. Please use a standard one ! - This would really improve it to associate it with a decompiler or the source code somehow - The Guice example shows it would be more readable by collapsing method calls by class - The help page says overhead is minimal, you should measure it because who has used profilers/agents knows there is always one - Where is the source code ? :) 
&gt; Some test in the samples is broken (with ant runAll) The junit example has two unit tests, one of which is supposed to Fail :) $ ls -R junit/src/ junit/src/pkg: AllTests.java FailingTest.java PassingTest.java &gt; The scrollbar really sucks. Please use a standard one ! The whole jtrace is not loaded when you open a log. So there is no way of making a real scroll bar with actual extents and %s. So we ended up making a virtual looking virtual scroll bar. Pg Up and Pg Down keys are implemented right now. &gt; This would really improve it to associate it with a decompiler or the source code somehow &gt; The Guice example shows it would be more readable by collapsing method calls by class These are planned for the Future 
Not exactly on topic, but is it basically looking for something like [struct from javoluiton](http://javolution.org/target/site/apidocs/javolution/io/Struct.html)?
It looks interesting for desktop applications, and I assume based on the technology that it works for other types of Java applications. You might want to mention that on your main page.
I saw a great tutorial a while back, specifically on LWJGL 3D graphics in a first person view. [I'd suggest you take a look!](http://www.youtube.com/watch?v=OO_yNzAuDe4)
Tried on my project. Here is the exception I got opening the jtrace: [pastebin](http://pastebin.com/raw.php?i=jiAiJfgc) I am running ubuntu linux, 64bit. Upd: nevermind, made a mistake on the selector, got events.out of size zero. You may want to display nicer error message in that case, though
Scrollbar does suck. I run a long execution and it was terrible to page through.
There is nothing to learn :) I run it against my project in no time.
Just post a few more diagrams. For example, show what multithreaded examples look like. And an example of a simple webservice in a container like tomcat; how easy is it to see my code vs tomcat's code?
Post pictures of the examples, please! (The lazies will inherit the Earth.)
[link](http://imgur.com/a/AiPbk) First image is a Java application, second one is a Scala one. Also, there are screens on the project's [site](http://www.onyem.com/help/reader.html)
Thanks! I have looked at the help page, but were somehow expecting these examples to be AMAZING! Still a neat project though.
BEA actually did this with their Bare Metal JVM. They wrote it because they wanted direct control of thread scheduling. However, to do it, they required the filesystem to be on a networked server (otherwise they would have had to write a filesystem in Java). They also wrote shims to interface with the hardware. This too would be hard to do in Java. Ultimately, for the low-level stuff you need to boot the JVM, you're probably going to have to write that in something other than Java. 
Because its painful. As a .net developer the ide is robust and the intellisense actually works. Java's idea of extensible is just adding xml files, they really need to get the language up-to-par
Welll.... technically, you could write a compiler in java that compiles either java or some other language into machine code for doing the actual booting. The outcome wouldn't be java, but it'd be MADE with just java ;)
You'll need to install a WAR file on the Tomcat server which contains your servlet. The URL that the servlet will be served from will depend on the *context root* of the application and the path of the servlet in the web.xml. If you copy the WAR file onto Tomcat directly, this would be the name of the WAR file dropped into the webapps folder. Thus, `foo.war` copied into the webapps folder of a Tomcat server running on `http://localhost:8080` would result in a root URL of `http://localhost:8080/foo`. In your web.xml, you configure your servlet to a URL pattern: &lt;servlet&gt; &lt;servlet-name&gt;FooServlet&lt;/servlet-name&gt; &lt;servlet-class&gt;com.foo.FooServlet&lt;/servlet-class&gt; &lt;/servlet&gt; &lt;servlet-mapping&gt; &lt;servlet-name&gt;FooServlet&lt;/servlet-name&gt; &lt;url-pattern&gt;*.do&lt;/url-pattern&gt; &lt;/servlet-mapping&gt; This will route all URLs of the pattern `http://localhost:8080/foo/*.do` to be handled by FooServlet, implemented by the class `com.foo.FooServlet`. Then you can use the `URLConnection` in the applet to communicate with the servlet using that URL pattern. Note, this is not secure, this is plain HTTP. For a secure connection, you'll need HTTPS, it's a bit more complicated. This requires configuring Tomcat to serve HTTPS connections (see here: http://tomcat.apache.org/tomcat-6.0-doc/ssl-howto.html). The applet should be using the browser's keystore and as I understand it, the browser will manage getting the certificate. Which you could get from a cetificate authority or you could self-sign (which will raise red flags on the browser). I don't know if that was very helpful. Feel free to ask any other questions if you like.
I think this will gain more popularity if you made this web based instead.
Performance and scale is a big priority for us. As of now a web-based app may not meet our requirements .. but who knows
From http://en.wikipedia.org/wiki/Singularity_(operating_system) &gt; Singularity is an experimental operating system built by Microsoft Research between 2003 and 2010. It was designed as a highly-dependable OS in which the kernel, device drivers, and applications are all written in managed code. Similar decisions would apply to a Java based OS
I dont think there is ever really a substitute to writing it in obj-c if you care about the quality.
The developer of the game Legend of Yore uses XMLVM. So at least for games it's doable and works out fine. Now, for apps I don't know. I don't feel it would be very easy because of all the platform (cocoa framework) specifics. Have you considered Appcelerator Titanium? (a tutorial http://emitrom.com/node/18)
I agree this is a good way to do it. The GUI pretty much asks for information about the Pieces on the board and tells the game "this piece wants to move from X to Y."
Develop natively or the game won't feel right, or be as powerful as it could. Especially on mobile.
This is a perfect opportunity or you to look into appropriate Software Design Patterns when building applications. Specifically: http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller
Hibernate is not really a database abstraction layer, though. It is an ORM so by design, the developer works with objects and Hibernate takes care of the remainder (how those objects get saved in to a RDBMS). I don't think you are comparing two competing libraries, rather you are comparing a full object oriented approach (Hibernate) versus an object-per-table approach (jooq or Rails) and these are fairly different approaches, each with their own tradeoffs. For instance, jOOQ would not be able to map to an RDBMS as well as a NoSQL store. Hibernate has the Hibernate OGM project (just starting) which should be seamless to the developer (unless they did a bunch of stupid things like hard coding SQL queries and whatnot). Anyway, I think jOOQ looks interesting but I don't think it's targeting the same thing as Hibernate. Hibernate would prefer you create an object model and then let it generate tables (or tweak that) instead of saying "here is my schema create DTOs". Hibernate is for people like an ex-coworker I had, who wanted to work with an object model and didn't care how it got persisted. Does this cause problems? Yea, we discovered SQLServer has a limit on the number of joins in a query; to him, the real power came from being able to work with objects and not worry about databases. Also, Grails has a great [wrapper](http://grails.org/doc/latest/guide/GORM.html#querying) for queries. 
We just unveiled a major media strategy .. a twitter account! https://twitter.com/#!/onyem More frequent updates will be posted there.. and for the biggies we will always come back.
You're right, but I think his head is in the right place regardless. Having used several ORMs, I can safely say that I do not care if I ever work with a "proper ORM" ever again. There does **not** need to be an entire declarative layer between my business logic and my data access layer. It invariably causes too many problems (usually performance related) to be worth my time, and it didn't really save enough code to make up for the lost troubleshooting time. These days, I tend to (ab)use a subset of the features in tools like Hibernate as a data access layer and ignore its "ORMy" features. But there's no way I'm going near @SecondaryTable or its ilk ever again. It's a solution in search of a problem; not my problem as it turned out. I haven't used jOOQ, but the number of back-ends they claim compatibility with already is impressive and their license (Apache) is certainly not an issue. I don't know for sure if I would use it on a new project, but I would definitely give it a serious look.
Yea, for sure man. The "OO-meet-RDBMS" paradigm was poorly thought out, I think. We (the professionals) knew databases well from the 70's, and OO was this new sexy concept, so let's merge the two! Yea! Never mind they are fairly different concepts. For what it is worth, I've found Hibernate disguised in Grails to be very usable but it is much more like the ActiveRecord pattern of "This is my table and my object looks just like it" than pure OO. I think I tend to be on the opposite side of the fence, and prefer to use Hibernate's ORMy features, falling back to JDBC and Springs JdbcTemplate for pure SQL when needed.
&gt; Hibernate is not really a database abstraction layer, though Sure it is, an ORM is a type of database abstraction layer. &gt; the developer works with objects and Hibernate takes care of the remainder (how those objects get saved in to a RDBMS) If it were actually this simple perhaps there wouldn't have been a need for Jooq. The problem is that Hibernate claims to do this, except when it doesn't, and then you waste hours trying to persuade it to do something that would be easy in plain SQL. &gt; rather you are comparing a full object oriented approach (Hibernate) versus an object-per-table approach (jooq or Rails) I don't think that is the distinction. The distinction is between a system which tries to make a relational database look like something it isn't (Hibernate), versus a system that acts as a thin type-enforcing facade on top of SQL (Jooq). &gt; For instance, jOOQ would not be able to map to an RDBMS as well as a NoSQL store. Hibernate has the Hibernate OGM project (just starting) which should be seamless to the developer (unless they did a bunch of stupid things like hard coding SQL queries and whatnot). I think you're misunderstanding Jooq. With Jooq you write code that is very close to SQL, it even looks like SQL, but everything is type-checked. You'd be hard-pressed to find a database abstraction layer that can map to SQL better than Jooq does, it pretty-much **is** SQL. &gt; Anyway, I think jOOQ looks interesting but I don't think it's targeting the same thing as Hibernate. They are both targeting the problem of how to make Java code talk to a relational database. &gt; Hibernate would prefer you create an object model and then let it generate tables (or tweak that) instead of saying "here is my schema create DTOs". Exactly, and my argument is that this approach is *wrong*. Don't try to pretend that SQL is something it isn't. &gt; Hibernate is for people like an ex-coworker I had, who wanted to work with an object model and didn't care how it got persisted. If you want to use a SQL database for persistence then *use a SQL database*. If you want to use an object database then use something like DB4O. But don't use a SQL database while trying to pretend that it is something it isn't. &gt; Does this cause problems? Yea, we discovered SQLServer has a limit on the number of joins in a query; to him, the real power came from being able to work with objects and not worry about databases. You're missing the point. The point is that the whole approach that Hibernate represents, trying to make a SQL database look like an object store, is wrong. Jooq embraces SQL rather than trying to pretend it is something it isn't. This is a better approach.
No type safety, and vulnerable to SQL-injection attacks if you aren't careful.
Re: &gt;an object-per-table approach (jooq or Rails) I'm sure I don't know enough about jOOQ yet to say for certain, but doesn't it appear to be a DSL approach where SQL is the domain rather than a table? Plus, it has appears to have methods for join, innerJoin() and .fullOuterJoin() that of course handles SQL for multiple tables. The thing that's interesting to me is that it takes advantage of Java syntax checking and if you're willing to consider SQL as a domain, the same way as you would consider any programmable machine it looks like a useful tool, though there are many other ways (e.g. JPA/JPQL) that probably usually meet your needs. &gt;Yea, we discovered SQLServer has a limit on the number of joins in a query It's interesting that problems like this persist in the RDMBS world long 20-30 years along. If your data is located in such a database and you need deal with it or extract it, this looks like it could be a valuable tool. 
&gt; I'm sure I don't know enough about jOOQ yet to say for certain, but doesn't it appear to be a DSL approach where SQL is the domain rather than a table? Plus, it has appears to have methods for join, innerJoin() and .fullOuterJoin() that of course handles SQL for multiple tables. The query you execute can return to POJOs or use jOOQs Record hierarchy, but it is still table-centric, i.e.: your "object" is the table schema. Versus Hibernate in which your object is a domain object that business people should be able to talk about (notice the should). So I think it still fits with the object-per-table (probably the wrong words) intent, where an object represents the actual table and not a domain concept. &gt; The thing that's interesting to me is that it takes advantage of Java syntax checking and if you're willing to consider SQL as a domain, the same way as you would consider any programmable machine it looks like a useful tool, though there are many other ways (e.g. JPA/JPQL) that probably usually meet your needs. Yes absolutely, very few tools are ever useful. I'm just not sold that you should throw out Hibernate for something like jOOQ since jOOQ like libraries pre-date Hibernate. &gt; It's interesting that problems like this persist in the RDMBS world long 20-30 years along. If your data is located in such a database and you need deal with it or extract it, this looks like it could be a valuable tool. In this case, it was actually our license of SQL Server and not an actual database problem. That is a whole other discussion. ;)
&gt; No, not really. An ORM may use a DAL, but is itself not an abstraction layer between multiple RDBMS engines, it is a conversion layer from one form to another (in Hibernates case it converts from objects to scalar values, and vice versa). Pedantic, perhaps, but a necessary distinction. If we're being pedantic, you were the one that introduced the broader definition of an ORM when you said that Hibernate was an ORM, I merely went along with it. In any case, the important thing is that the purpose of Hibernate is to abstract the database, so Hibernate is a DAL, like Jooq. &gt; jOOQ looks to give you back data transfer objects, which map directly to the table they were queried from Not really. Jooq does have the ability to convert a Record to a POJO in some circumstances (ie. when the record represents a single row from a single table), but it's not core to Jooq's functionality, more a nicety. &gt; I think you're misunderstanding why an ORM like Hibernate can be useful, because it doesn't work on only one type of database (in theory). jOOQ only works for SQL databases. Which nosql databases does Hibernate work with? MongoDB? Don't think so. Cassandra? Not that I can tell. Riak? Nope. So really this is no benefit at all. &gt; I wouldn't agree that it is always better than Hibernate, the right tool for the job is always the best tool. And which job, specifically, is Hibernate better at? I'm struggling to think of anything. &gt; You're being too fanatical. My opinion is based on practical experience with both systems. The practical experience of weeks of development time wasted trying to navigate the mess that is Hibernate, and the practical experience of using Jooq to easily manage things that would have been a total PITA in Hibernate. &gt; There are many examples where Hibernate works just fine. jOOQ certainly has some very good points to it, but I wouldn't throw out Hibernate either. I would evaluate the software design and decide if we need a pure OO model or if we really just need DTOs. Show me someone that thinks they need a pure OO model for persistence and I'll show them why they're wrong.
The right tool is the one which gets the job done quickly and in a maintainable fashion. For me, Hibernate has often been the right tool. I've seen a lot of people choose tools based on hype and not research, because not every situation can use the hyped tools effectively. From what I have seen, projects which adopt Hibernate but have a bad object model seem to have problems with Hibernate. I have not seen your cases, this is not judgement, just my anecdotal evidence. DAL/DAO/DTO code generators have been around for a long time (Oracle even had a C precompiler to make it easier) and can be valuable tools. I wrote a Criteria query generator in Swing (the app was Java Swing based) which let end users walk the object hierarchy and build their own queries. It was quite effective, and completely portable across any Hibernate model. It also took very little time. I'm not so sure a jOOQ based solution would be as portable, elegant or simple because the relationships are not as obvious, and a table doesn't necessarily map to the users domain.
I found this part funny: &gt; **Philosophy:** &gt; SQL was never meant to be object-oriented. [...] &gt; **What is jOOQ?** &gt; jOOQ stands for Java Object Oriented Querying. But shallow amusement aside, this does look like an interesting approach to the SQL-in-Java problem.
Having used, and subsequently ripped JPA out from several projects over the years, I find JOOQ intriguing. I've found myself wanting the calabilities of criteria queries from Hibernate without the idiotic queries the framework generates. I like the simple mapping that SimpleJdbcTemplate does, JOOQ might just fit both needs. I'll have to give it a whirl.
I had someone explain it to me like this: Maven is like ant except instead of a list of instructions it's like casting a spell and crazy magic happens.
What matters is that in both cases the ultimate goal is to provide an effective bridge between Java-land and SQL-land. Jooq does a better job of this than Hibernate.
&gt; From what I have seen, projects which adopt Hibernate but have a bad object model seem to have problems with Hibernate. I have not seen your cases, this is not judgement, just my anecdotal evidence. Trust me, our object model was fine, the problem was Hibernate.
&gt; The junit example has two unit tests, one of which is supposed to Fail :) No test should be supposed to fail, you can use `@Test(expected = SomeException.class)`. &gt; The whole jtrace is not loaded when you open a log. To me it does not prevent you from using a standard scroll bar. Look at what happens when you load a very long web page in your web browser, for example. 
Away with Spring and their XML hell and proprietary standards!
I can understand your fondness for something as simple as Apache's DBUtils. They're just that little extra API sugar you need in everyday SQL work, when you don't want a complete abstraction over string-based SQL composition, but at the same time, JDBC seems too verbose.
Spring hasn't required XML configuration since Spring 3 (released in 2009), and I would rather trust SpringSource over Oracle when it comes to "proprietary standards"...
Then that's a fool's trust (sorry). SpringSource doesn't publish any standards, the JCP (and several other organizations) do. There's only *one* Spring implementation. There are a dozen Java EE implementations.
Our DBA always complained about some of the Hibernate generated queries. We told him it was his punishment for past sins in life.
So far, I've had trouble contacting people from the various Scala projects, so I cannot tell whether they will be in competition with jOOQ or potentially cooperating. Clearly, they will be quite competitive with QueryDSL, a library that focuses more on easing JPA syntax and allowing for multiple backends, rather than supporting many SQL features. If Scala / Typesafe (SLICK) dares going into patent wars with Microsoft (LINQ), they may well be quite successful in the Scala community, as true language integrated querying is per definition much more powerful in terms of typesafety, than what jOOQ / QueryDSL / CriteriaQuery can do. Whether they will aim to equal jOOQ in SQL scope is hard to say, today. Anyway, to me, neither LINQ nor SLICK look anything like SQL and maybe, at some day, we'll face the fact that FRM (Functional-Relational-Mapping) is yet another controversial idea, just like ORM, leading to emotional discussions!
Indeed, doing away with code-generation is the biggest innovation there. That, too, is probably already within the scope of some Microsoft patent, as they're pretty far ahead with database-connected compilers. As far as I'm concerned, unfortunately, I haven't yet made any experience with that. I can imagine that it will be difficult to have an always-accessible, representative schema to compile-check your queries against. Also, at development time, the schema can change drastically, leading to compile-time problems for all developers, depending on the setup. Nothing that cannot be solved, but it could be tricky. What I meant by LINQ and SLICK not looking like SQL is the fact that they're again trying to map a universal querying language against multiple backends. So in that way, DBAs will still not be happy about the outcome, even if they're very powerful tools for the "right job." But there will still be need for true, plain SQL.
&gt; I argue that most of the people who think they require the latter option are wrong. I got your point. This thread contains this discussion already... &gt; Perhaps you're just trying to be diplomatic, but that's not the opinion expressed by the article linked from your website (which I happen to find fairly persuasive ;) oh yes, THAT article! I found that to be a very refreshing rant.
Spring 3.0 is the shit rhough
What's that meme about patents? Do you have any link for that? I can't imagine that they tried to patent that ... the pricinple and the ideas are decades old already. (And I guess with the amount of stuff C#/F# adopts from Scala, that would hardly buy them anything.) About the need for "real" SQL: Probably, but I think we will now get technologies on both the CLR and the JVM which make these abstractions more viable than the current approach of yes-you-can-use-JPA-but-expect-to-replace-it-with-substantial-parts-of-SQL-later, e. g. solutions which work well for the 80% of the cases and not 40%, like currently.
awesome. which part (of the three mentioned above) would you like to help with?
My computer is comparable to a modern-day toaster and obliterates any simple Java test programs being thrown at it.
So i m trying to install lwjgl. I m on the site lwjgl.org and I m following the instructions for windows. but its a no go.
You can compile Java 7 code with (I believe, I mostly use eclipse so I'm not entirely sure about command arguments) the -target 1.6 argument in javac, which will allow it to run on those computers *as long as you do not use any classes introduced in Java 7*, in which case you would have to package those classes (I'm not sure about the legality of this though), or equivalent ones you make yourself, with your code. You cannot, however, run already compiled Java 7 code on a computer with Java 6 without somehow modifying the .class files.
&gt;just so Application Server Vendors can sell you servers. Please stop spreading FUD. I never payed a dime for JBoss AS, GlassFish, TomEE, Resin or Geronimo. Then again, we did actually pay for TcServer (Spring). Go figure... &gt; It happened with JSF (it's just not viable to use JSF without resorting to Seam/Tomahawk/etc). You are severely misinformed. Seam was a precursor for much of the functionality that is now in Java EE 6 (mostly CDI, some in JSF). As such, Seam tested the waters, and when it appeared to work a standardized version was incorporated in Java EE. Similarly, lots of things for which Tomahawk was once needed are incorporated into JSF 2. Better to say that plain Java EE 5 is not viable without using Seam and Tomahawk. &gt;And it seems thats happening again with CDI. No it's not. CDI itself works perfectly. It was among others designed to make PORTABLE extensions possible. Just as Java was designed to allow third parties to create classes and jars. It's the entire idea behind a standard class model. This also holds for JSF. Component libraries among others are not specifically created to fix some flaw in JSF. JSF was explicitly created to make the concept of component libraries possible, via its standard component model. Both portable CDI extensions and JSF components provide extra functionality on top of Java EE 6, but none are explicitly needed for all or even most applications. 
I would heartily recommend reading raganwalds [favourite interview question](http://weblog.raganwald.com/2006/06/my-favourite-interview-question.html). While quite long and not quite focused on your problem, it does a good job of pointing out some issues with pure OO on tabletop-like games.
I'm spreading FUD? What company do you work for that buys Springtc and doesn't buy weblogic/websphere? You could run springs apps in any server and you know that. By the way I never mentioned Spring. It's you doing that. And I agree that plain Javaee 5 is not viable. Period. You need spring for decent ioc, hibernate for persistence, Seam/tomahawk for jsf.... should I go on? Javaee is capped down, c.q.d. The promised portability is the real FUD. And hey that's not new: plain javaee 4 also wasn't viable but let's not get into that. Also it's intentionally capped down: hibernate was there when jpa showed up, spring ioc too when cdi jsr started, etc. Why not improve and standardize on then? @inject jsr did that. Others possibly did it too, but not the core javaee. 
If you're looking for an ORM that generates sane SQL, I put a fair amount of care into Joist's SQL output: http://draconianoverlord.com/2010/08/15/joist-vs-hibernate-sql.html (Unlike JOOQ, Joist does try to be a better/simpler Hibernate. See http://joist.ws/ for docs/screencast/etc.)
&gt;SpringSource doesn't publish any standards, the JCP (and several other organizations) do. So what? Spring is opensource. If you don't agree with then, just fork. Make another implementation (Spring is mostly based on interfaces anyway). There is no need to make an standard.
http://projecteuler.net/ 
[r/dailyprogrammer](http://www.reddit.com/r/dailyprogrammer)
+1 Spring is shit.
Forking is the only thing you can do, but you'll end up with the same mess. Think of the standards as simply open sourcing the design documents and being upfront and open about design. Spring does not do that. 
I agree with that quote. If you still think Spring is that small grassroots movement without any desire for monetary gain and purely in the game to help us poor Java developers then you're SERIOUSLY confused. Rod Johnson is a very clever businessman and Spring's motives are very much financially and commercially colored. This is not wrong per se, but should be recognized for what it is.
Portability is not perfect for sure and this is an area still open for improvement. BUT... Porting the code from one Java EE implementation to the other is days, or maybe at worst weeks. It's NOT akin to completely rewriting the application, which is what you would need to do if you went from Spring to something else.
[Here's a great link](http://lmgtfy.com/?q=error+1723) to the solution
You're creating jOOQ again! I'll have to check out your project for some ideas...! ;-)
Yeah, I already clicked every single link there, all being bullshit. I found the solution because my brother told me. Not because of your 'help', don't just assume I didnt google it yet. 
As a former assembly language programmer that lived through the assembly vs C debate, I can tell you that a LOT of those arguments where also used back then. Which C compilers at the time made use of: * Advanced addressing modes * Opcode tricks * Special instructions (intrinsics came much later) * Jump tables (yeah, switch is close, but not quite it) * Build-in high level functions on some architectures (like string copy) * Page zero tricks * Segments (ugly things when all you have is small ones, but quite powerful when used fine-grained for 'objects' and structures) * Delay slot shadowing * Knowledge of fitting computations exactly in registers and L1. * ... I could go on and on C wasn't just higher level, it was another paradigm, and yes, C compilers pretending that assembly is just a little "low-level" thing did raise our hackles back then. It threw away all the nice subtle intricacies of each specific CPU architecture and made them all equal by using only the common denominator of functionality that each CPU had. It took a while, but eventually C compilers got better at optimizing than humans and could actually take advantage of advanced instructions in a CPU. 
Might be worth providing a link to the job spec, or at least providing some additional details on what the job entails. At the moment, I know nothing other than location and language. I don't know which technologies you use, what kind of work you're doing, what level of experience you're looking for, etc. More information is definitely needed.
Sorry about that I Missed the link : http://www.reddit.com/r/forhire/comments/sfvvu/im_not_a_recruiter_im_looking_for_2_senior_java/ 
Thanks! Please start with the architectural overview doc, it should give you a solid top-down description of the major components. It's not 100% finished yet, but it's mostly there.
In all seriousness, even that isn't enough. Sure, if there's a jobless programmer out there, it'll pique his or her interest, but you're not providing any information of worth to get those already in work (a majority of programmers?) to look at your job listing and consider it worthwhile to apply. What's the company called? What kind of software will the candidate be working on? What's the workplace like? Is it a small or big company? Will the candidate be working in a team of developers? Any benefits? What kind of salary is on offer (arguably an optional detail)? I still think you need more detail. Best of luck finding someone. =]
Added more details :)
Generally it's the recruitment agencies we work with trying to sell us 'air brushed' candidates with inflated skills set and experience. These 100 interviews are not all in person, about 20 are, the rest are phone interviews which is still just as tiring and distracting for myself and the co-workers helping in the interviews. Many candidates fail on attitude and communications when they reach the in-person stage. It is becoming an issue especially with the team being shorthanded for a while. That's why I'm looking here. Something to note though, the Toronto dev team was built from scratch last year and has been successfully delivering ever since, so we know what we are looking for and I know such candidates exist, we have a few, but they seem to be hiding (happily employed) somewhere else :(
why not check out the more popular java-based open source projects. Then make a good offer to the participants after interviews etc. your tech stack seems standard and i guess there must be thousands who would fit the bill. your job description needs much more specific information about experience, domain expertise, roles, responsibilities etc. Interviewing and rejecting 100's seems quite strange though - either you guys are not able to frame your requirements clearly enough or something else happens while getting filtered through external agencies. best of luck anyway.
Yep, we have escalated this issue. These are some of the more 'reputable' agencies by the way. Still shitty. Like I said, I'm here for a reason :)
Happens a lot. Last time I used recruiters two of them lied about my qualifications just so I could get an interview. Personally I'd recommend you try LinkedIn. 
Hiring good Java developers is exceedingly difficult right now. We are about to launch a local (around the city and in various suitable train stations) advertising campaign to try and tempt developers to move. There is a massive shortage of candidates and I think this is being compounded by a lot of developers not really grasping just how hot the market is right now. They aren't moving as the news is full of doom and gloom over the economy. Possibly it's just the shortage though. I also think quite a lot of companies are still in recession mode and haven't bumped up their salaries enough. Anyway, I share your pain and spending so much time recruiting - hopefully we can all get back to programming soon :-) It's extremely painful that all the most experienced developers need to be doing the recruiting as well. Better than hiring the wrong people though. Oh this is from a UK (non London) perspective btw. [edit] What I'm about to say is unhelpful but I may as well be honest. I moved jobs 4 months ago and looking at your technology stack I wouldn't have applied. I also think you need to sell yourselves a lot more, that advert doesn't tell me why I might want to work there.
Yeah, the paradox hasn't occurred to me yet until now :) Well, the philosophy talks about the data model, whereas the product name hints at its domain specific language / fluent API architecture, the way I have recently described it here: http://blog.jooq.org/2012/01/05/the-java-fluent-api-designer-crash-course/
New to this shit have no clue what that means 
These are much more math problem challenges than programming challenges. 
&gt; You can compile Java 7 code with the -target 1.6 argument in javac Note that this requires having the Java 6 runtime around to compile against. It's really kind of a pain to use. 
&gt; You're creating jOOQ again Hehe, yeah, I initially thought jOOQ and Joist were quite similar too. I was pleasantly surprised to see we share a lot of ideas (e.g. intelligent code generation from the database schema, providing a type-safe-ish SQL DSL). But I think Joist focuses more on being a complete ORM (e.g. providing out-of-the-box domain objects with lazy parent/collection loading/etc.), while AFAIU jOOQ is more focused on an accurate/robust SQL DSL. Both I can see being more useful than the other, depending on what you're trying to do.
I'm not against specifications in general or JavaEE in particular. I'm just against this FUD they create about portability and embedding most of the stuff in Application Servers. Just give me tomcat and let ME choose which implementations I want to use. I would gladly use JavaEE (except maybe for JSF) in that case.
Since you're already handling symbols, any plans to add in a full computer algebra system? 
as you wish, both would be great. It would be super awesome if you could take a look at how the code is currently structured, fork it over github, add your own code for L7 and send me a pull request
Unfortunately not when hiring externally. Current employees within the company who need to transfer to another geography within the company do get the visa arrangements taken care of. Sorry :(
Since you appear to have stopped offending me, I can go on. &gt;And no Java EE vendor would purposely cripple their implementation in the hope of selling extra support. I never said that the implementations are crippled (althought some really are). I said the **specification** is crippled. And that breaks your argument: vendors **do** want the spec do be crippled so that they can sell you their "better" implementations, and not use RI open source ones (and no thats not always the case, but you get my point). That's not news and happens in any area. Besides, my point is that JavaEE is not portable in the sense that you can't really choose the parts or interchange implementations, particularly in the case of paid support. And when changing servers, it simply doesn't work as promised also. &gt;Gavin King (original Hibernate developer) played a big role in creating the JPA standard Why the hell then JPA *specification* is so crippled compared to Hibernate? Where's criteria? Complex HQL? All the other hibernate goodies? Why Hibernate still isn't the RI? For me that's clearly a sign of other vendors (particularly Oracle because of toplink) forcing the spec one way just to sell "better" implementations or hinder competition ("hey if you use hibernate stuff, you're not portable!"). You guys seem to forget that JCP is ultimately ruled by Oracle, IBM and RedHat, which have the same commercial needs SpringSource does. There is no "good guy" in this field (particularly since Apache left JCP).
And Oracle is a not-for-profit, opensource tenant right? C'mon guys, don't be so blind. Oracle, IBM and RedHat ultimately rule JCP (as Sun once did) and they have as much financial and commercial interests as SpringSource does. And if we're doing "don't be evil" comparisons, how about Oracle open source products acquired from Sun that were just destroyed to later be "donated" to Apache or Eclipse (MySQL, Hudson, OpenOffice...). At least, all SpringSource did is open source from start. Again, this "don't be evil" argument is just bogus. There are no "good guys" in this field (except maybe for Apache).
No immediate plans, but it's a definite possibility. LastCalc makes it quite easy to integrate existing Java libraries into the LastCalc universe (as I've done with JSoup and JScience). For example, perhaps [the Java Algebra System](http://krum.rz.uni-mannheim.de/jas/) could be integrated, or something like it.
Seems like it's basically copying Scala; which is definitely a good thing!
I can use methods it's multiple classes that are vpgiving me shit
&gt;There are no "good guys" in this field (except maybe for Apache). I don't believe many individual engineers are evil either (not even Juergen). Apache incidentally has several key Java EE products in her portfolio, like Tomcat, MyFaces, TomEE and Gerononimo.
If you really want, you can create your own stack in Java EE. But why would you?
&gt;If you're going to change from Spring to something else, it's the same as changing from Java EE (no matter what impl.) to something else. No, **it's not the same**. I normally don't want to change from something else because I suddenly don't like Java EE, but because a particular vendor goes out of business or becomes too arrogant, lazy, whatever. With Java EE I can just go to another vendor. Compare to C compilers. I normally don't want to switch languages, but I can switch compilers. &gt;If you really want portability, don't depend on your server. If that's really the case, depend on nothing and ship a virtual machine imagine with your OS, VM, AS and app.
Absolutely! At the end of 2013 they will be where Scala was in 2008.
Cool.
Looks nice, a lot of the code samples could also be written using Guava (at the cost of much more verbose code, of course). Hopefully Hotspot gets some optimizations along the way so people don't need to know about megamorphic call sites and why you have to write for loops for optimal performance :-)
Plain English communications. I'll take an introvert with good English. I will be looking for an extravert specifically if I'm looking team lead or an architect
[Relevant](http://dilbert.com/strips/comic/2009-12-09/)
When I first ran into this exception, I figured it was just one of those things that Hibernate didn't support. Seeing the actual code is a combination of hilarious and aggravating.
Update: every thing is working Hans for the advice read up on basics and spent about 4 hour trail and error testing all is good and learned a lot thanks.
How do you know he wasn't privy to those conversations about license and was giving his opinion on that? It is awfully convenient that what he said wasn't really what he said.
I think a video would help!
I do that *everyday*.
&gt;I don't believe many individual engineers are evil either (not even Juergen). I never said that. You mentioned Juergen, not me. Again the point is: if you're going to argue about commercial interests like the article does, Apache is the only non-Venture-Capitalist oriented do-no-evil player. All the rest is on the exactly same boat as SpringSource/VMWare, even RedHat.
What about distributing the entire JVM with your code, and not using the operating system supplied version?
The point you are missing is there are many alternative implementations for Java EE. You are not tied to anyone. With SpringSource/VMWare there is no alternative. It is a non standard proprietary framework that lacks outside support.
&gt;Spring doesn't need a Java EE server and can run from Tomcat or Jetty. But Spring obviously needs the Spring libraries. These can be massive and don't just fall out of the sky. By comparison, Java EE apps can run on TomEE, which is only 25MB in total size and starts up in a second or so. Besides, a single Spring application war can never run on both Tomcat and all other application servers. You need to have different builds. Unless of course you enhance your bare Tomcat with the Hibernate, JTA etc jars in its /lib, but then you'll be just duplicating TomEE and you'll be done faster by just downloading that. &gt;I like standards but the Java standards have a way of getting bloated and massively overcomplicated. Well, that was how things in the past were. Now it's the other way around. Starting with Java EE 5, Java EE has been getting slimmer, simpler and faster. Just look at the code, EJBs are now simpler than Spring beans. JSF is simpler and more elegant than Spring MVC. All modern Java EE implementations (TomEE, GlassFish, JBoss AS 7) start up faster than an equivalent Spring configuration. The old thinking of Java EE being "bloated" is a thing that SpringSource gladly likes to keep alive (the more people believe it, the more people will use Spring and thus ultimately buy their support). But as mentioned, this hasn't been true for quite some time (Java EE 6 is from 2009).
May need to see the code but the problem is that teamName[i].addPlayer(new Player(Input4.getNextString())); in it is not static and the method you are calling Input4.getNextString() is a static method. what you can do to solve this would be to make the method holding the method call static, or you can make Input4 an object like so: Input4 i4 = new Input4(); i4.getNextString(); 
All of this is covered in the Sun Java Tutorials you can read at http://docs.oracle.com/javase/tutorial/java/nutsandbolts/arrays.html 
I said this in another thread, and was surprised by the response of "it's cool, we voted and decided these questions were okay". If it's a homework question, I shouldn't be able to tell.
I have JavaScript on but all I see is a Blogspot logo. :-/
&gt; Besides, a single Spring application war can never run on both Tomcat and all other application servers. This is false. It can be done. 
&gt;This is false. It can be done. Not easily and not universally. Tomcat doesn't ship with JPA and JTA, and you most likely want to use these in a Spring app. But if you include those in your war, they clash with the implementations that are already part of Java EE. Thus, you can't deploy that war on a Java EE AS.
That's not exactly how the classloaders work. In Tomcat, the classloader starts at the war first to load and then moves to the server. You can put your application specific jars in the war and they will be picked up first. If there are any other libs at the server level that conflict, they are ignored. http://tomcat.apache.org/tomcat-7.0-doc/class-loader-howto.html However, there are some servers out there that load in reverse - server then war. Weblogic is one of them. For weblogic, you must include a small bit of xml to say &lt;wls:prefer-web-inf-classes&gt;true&lt;/wls:prefer-web-inf-classes&gt;, which is in the weblogic.xml file and is subsequently ignored by any other server types. http://docs.oracle.com/cd/E15051_01/wls/docs103/programming/classloading.html And before you start arguing - I have done this with Tomcat 7 and Weblogic 11 less than a year ago on a project where the webapp's libs were in direct conflict with the libraries used in each of the servers. It can be done. Is that "easily and universally"? Yes and no. Yes, it's easy. No, it's not universal. You will need to identify the specific way your application server's classloader works and adjust accordingly. 
Hello, What additional features do JavaEE6 have to move from Spring? http://www.sivalabs.in/2012/04/what-additional-features-do-javaee6.html
Denver is much the same. I wonder, though, if part of it is based on depressed wages -- meaning that developers don't really want to go down far in salary so companies haven't tuned in to this being a good market as a developer and we have a lot to choose from.
&gt;You should expect less pay in Texas, it is cheap to live there for most things. I heard the cost of living in Afghanistan is pretty low too! Good luck getting developers to move there. Protip: Economic models don't exist solely to fuck over labor. There's a lack of talent in Texas. Companies have relocated there, and they want the talent to come to them. So they should expect to pay more, to make it worth a prospective employee's while. That's called "supply and demand". I'm sure MBAs were all geeking out over the ability to squeeze some benefits and a shitload of extra hours out of their people. I'm sure they blamed state laws for creating a "hostile environment" and damaging the efficiency of the "free market". These are the same bright fucks who thought it was a great idea to outsource technical support, development, and engineering positions to India, China, and Indonesia. They forget that they're competing for labor in a national and global market. These aren't McJobs. These people are in demand and they can go wherever the fuck they want. So why would they want to go to a toilet like Texas? &gt;You won't win me over on "workers rights" when this is a 2-way street, and as coddled IT people individual negotiation skills are relevant. Personal responsibility trumps state force any day in my book. That's great. But I don't have to "win you over". I also don't have to live or work in Texas. This is a negotiation between companies in Texas and the labor market. Speaking for myself, their position is a non-starter. I'm happy to stay in other states, make more money, pay more in taxes, receive more in state services, and enjoy better weather and basic legal protection. But hey. If a $2k relocation package is all it takes for you to sign up, then go right ahead my friend.
&gt;Do I have to physically go there? Always a catch, right? 
Don't waste our time and money. What's the pay? You should give us an expectation or range of salaries we might expect for this, how is this even worth my energy to read it twice? I probably wouldn't even give you a second glance if you aren't paying somewhere around 50 per hour, at minimum. And you'd have trouble convincing me at that.
If you pay, they will come. My guess is that these tech companies are being too stingy with pay and benefits.
This [link](http://docs.oracle.com/javase/tutorial/) is a good place to start. Once you get the basics, the best way to learn is writing programs that utilize Object-Oriented Programming
I think Java EE 6 implementations (the modern ones, like TomEE, JBoss AS 7 and GlassFish) are generally faster and use less memory. Wars are always smaller, and the total footprint (AS + war) is often smaller as well (certainly in the case of TomEE). Java EE 6 also has much more UI widgets available from third parties. There are literally two dozen component libraries available, can't say the same for Spring. The programming model of Java EE is also much more elegant, not in the least because of real type-safe injection.
I enjoy having to explain to people recruiting me to move to SF/SV that I'd need a 100% raise to compensate for the cost of living difference. They get awfully quiet.
&gt; We have clients screaming out for highly skilled Java Devs [...] Stop screaming, start paying.
Mate, If I can get a huge ass truck, a cowboy hat and shoot squirrels all day, I'd move to Texas for a job!
It's the same everywhere. I work for a major company in the java enterprise consulting department. We had 80% of the personnel to service all the contracts we were offered. We had to turn away clients.
I love when people downvote a TRUE statement. 
&gt; Java EE 6 also has much more UI widgets available from third parties. There are literally two dozen component libraries available, can't say the same for Spring. What UI widget library can I not use in Spring??? 
Dude, it's a waste of time. henk53 is going to twist and whine around any statement that may burst his little Java EE bubble. Straight astroturfing from him and several other oracle evangelists. They are unable to see the truth and instead of touting how great Java EE is, they run around trying to bash Spring. It's pathetic. 
Totally agree. A good software dev is probably MORE effective working remotely since they'd be less likely to get sucked into pointless meetings which seems to be the norm at most medium to large sized companies. 
We pay above market. Everyone has great benefits. You get your own office. We have stock options at an established company, 40 million in the bank and we still can't find people so this is partially true at least. Most of the people here are really cool. Hiring at Pervasive. Yes the corporate website blows (I know, I know) I have nothing to do with it. http://www.reddit.com/r/austinjobs/comments/sai2d/for_hire_senior_cloud_architect_and_j2ee_engineer/ I got 2 freakin' resumes. Come on peoples. NINJA EDIT: THIS IS DIRECT HIRE. I AM NOT A RECRUITER AND WE DO NOT USE RECRUITERS.
Fair question. This morning I emailed many of the companies who responded to our hiring survey. (We survey our community first to see where the needs are, and then create events to address them.) Here's some early data I have so far re: compensation. Each line is a separate response: * **UI/UX:** $80-100K * **.NET:** Entry level = $65K, Avg hire (5-7 yrs) = $110K, VP/Architect = $175K. * **.NET:** Entry level = $40-55K, Mid = $55-85K, High = $85-100+K * **.NET:** "Up to $130K." * **Java:** $90-120K Obviously you're not seeing indexing to parameters like the size of the company, etc. Just salary (no info about equity, bonuses, etc.) As I receive more replies, I'll update this list.
As I said elsewhere here: Don't waste our time and money. What's the pay? You should give us an expectation or range of salaries we might expect for this, how is this even worth my energy to read it twice? Above market value? What do you think is market value? Pay a dollar above that? I probably wouldn't even give you a second glance if you aren't paying somewhere around 50 per hour, at minimum. And you'd have trouble convincing me at that. A lot of us live across the country, we're not going to spend hundreds of dollars coming down to find out your paying a crummy 16$ an hour and expecting talent. Give us incentive, why should I fly down there when I can just interview for jobs here? They'll try to do the same BS and go through an interview process then try to get me on some absolutely insulting low pay, but at least I don't spend a ton of money, time, and energy doing it.
Calm down: see top comment thread by spazzm.
I wouldn't be surprised. That would be more for like the Senior Cloud Engineer position and not the Junior J2EE position obviously. I don't know the exact salaries (I'm not a recruiter/HR/Hiring Manager), but I know people on the team are only leaving to go to huge high paying places like Google and Amazon. People are not jumping ship to work at random start-ups or web agencies. Again, what can it hurt to send a resume and possibly have a 10 minute phone call?
&gt;Again, what can it hurt to send a resume and possibly have a 10 minute phone call? There is so much crap out there, as far as open positions, that I could easily spend 30 minutes a day on the phone with recruiters asking ridiculous questions about positions I'm obviously not a good candidate for. So I stopped looking and responding to recruiters because there are so many agencies requesting your time and are just wasting it for the most part.
&gt;What UI widget library can I not use in Spring??? Those specifically for Java EE? Like those for JSF perhaps? I don't see a lot of widgets being available for Spring MVC, do you? Naturally you can replace Spring's Spring MVC by JSF, but this will make your Spring stack more and more a Java EE stack. Especially in the next version when JSF will use CDI. Do you need both CDI and Spring Core in one application? What extra benefit will Spring still give you in such a situation? 
Some of the top rated school districts in the country. Some of the best rated cities to live in and work in along with the safest/crime free as well. Obviously these are smaller communities and not in the heart of Houston or Dallas. If you google it, you'll find a lot. Most people say not to move here, because when you find something you like you tend to want to keep it to yourself. :D
I find that as long as I have clear direction, I can crank out good code. The last project I was on used daily Google Hangouts, join.me, and chat. Worked great.
Your story sounds exactly like most of the top-tier developers/engineers that I know. When we already have a good deal going, lateral moves and the employer's risk that you assume as well as the initial trial-by-fire phase when you first start a new position just aren't that appealing.
Well, market rate there anyway. SV is a beautiful area, but the traffic sucks... says the guy in Phoenix.
It's pretty easy these days to know what you're worth. I go into negotiations asking for that and trade for benefits and whatnot.
&gt;I can't see nothing "proprietary" in Spring framework. It's open source. You clearly don't understand the term. Yes, open source software can be proprietary. People can fork the code, but nobody but the original code owner can release a version under a new license. With Java EE, everyone can make an implementation under whatever license they choose, simply because there is a spec to which you can adhere. It's a question what would be the legal consequence if someone would made a clean-room Spring implementation and released that under a license that's incompatible with that of Spring. I'm not sure, but what I do know is that it would be incredibly difficult without reading the source code. Every subsequent release, Spring could change APIs without any negotiation with the implementer of that clean-room version. Even without considering the license, people often talk about e.g. Hibernate proprietary settings, in the sense of "Hibernate specific settings". Those are not so much "owned" by Hibernate in the legal sense, but they are only available to Hibernate. This is in contrast with standard settings, which are guaranteed to work everywhere.
I concur. Come for a visit but when are you leaving?
I am replacing the MVC UI portion of the application with JSF. Still have a full Spring implementation of entire domain, middleware, persistence, etc. That's why I like Spring. I don't believe it to be limiting to any frameworks and allows me to do what I need to do without getting bogged down into server limitations. I start with Spring Core, build the application container and then plug in the rest. Don't want to use JPA? Don't have to. Don't want to use JSF? Don't have to. Don't want to use EJB? Don't have to. But I can for all of the above. It's flexibility and packaging I am looking for. 
The discussion is getting a bit academic. What I meant was that Spring cannot use these widgets by itself. Or more directly, Spring MVC cannot do that. I would be like saying that Spring has type-safe injection and can use portable extensions, IF you add CDI to it. &gt;It's flexibility and packaging I am looking for. You can actually do the same in Java EE if you really wanted to. You can start with Tomcat and add only EJB to it. Or only CDI. Or both EJB and CDI. Everything that's in Java EE also works standalone in Java SE or the unofficial Java TE. It's just that the preferred way is to use the platform as a whole, as a fullstack solution. Everything just works nicely together that way, but if you *really* want you can either build your own stack or use alternatives in a standard stack. 
Or maybe you just made some user error, maybe not set the right dialect for your particular DB? I'm always using `@GeneratedValue(strategy = IDENTITY)` btw and that works great.
Well, you can put Java applets on any kind of web host. There are lots of free ones, but if you are new to this, I would probably recommend https://www.dropbox.com/ for a start. Technically, it's for remote file storage, but it also supplies web links for files, so you can give out those links to your friends.
It should be noted that this blog post is dated May 16, 2011. Maven central now includes spring-data-mongodb, currently 1.0.1.RELEASE, so there's no need to declare the milestone repository. Also, declaring the java mongo driver is redundant as spring-data-mongodb has the dependency itself. As for content, there's no usage examples of annotations on the data model to specify documents or that id field, which would probably serve the coder better as a BSON ObjectId anyways. There's no mention of the repository interfaces and the functionality they bring to the table, either. I suppose all of that could be considered subjective, though. tl;dr This might work to familiarize you with the concepts, but I'd be sure to research elsewhere (like at the [reference docs](http://static.springsource.org/spring-data/data-mongodb/docs/current/reference/html/)) soon afterwards.
Although I still say you can't replace the [reference docs](http://static.springsource.org/spring-data/data-mongodb/docs/current/reference/html/) in terms of coming up to speed with the tools.
Take it. 65K is decent for a junior.
Not sure where you you got the idea that we are under paying our team members but when we are paying 70-100K a year plus benefits I expect a certain caliber of employee to be on my team. Basic economics. 
Just confirming, they're paying for the 4 weeks of training and travel to DC, right?
That's a very nice salary for a junior position. 
Eh ... Dropbox isn't really good for publicly hosting files. They'll disable anything that gets too popular.
Yup. I got 70k for my first position but that was in SF where the cost of living is higher.
And Spring didn't reinvent the wheel for 3 years, did they? Now I wonder why they started with Spring MVC then, when JSF was already there.
Hibernate itself is buggy. If you would use Hibernate standalone (with eg Spring), you would run into much of the same problems. Some Java EE servers (like JBoss) are affected by this, but it's not directly a problem in Java EE itself. 
Check out Java Server Faces and in particular PrimeFaces. There is very little configuration and you can build a rich interface with very little work. Look at the PrimeFaces demo page and you can see the components and sample code for each one. 
Groovy is nice too!
Regarding non-enterprise CMSs, check out [Daisy](http://www.daisycms.org/daisy/index.html\)). Play! is an awesome Java-based framework. We're using version 1.2.4 and not the very latest 2.0. My technical background is similar to yours, and I have enjoyed the transition to Play! a lot. Good luck with whatever you choose! [edit test]
I'm not really a fan of Primefaces. The unholy mess of concerns it spits out really rivals PHP in terms of chaos. And I'm not sure that creating a really good user experience is helped that much by it. Sure it's very easy to get into it and put something together, but then you often run into the limitations and bugs of it. And don't get me started about a project lead that calls himself "Optimus Prime" on the forums..
Thanks, this seems a pretty comprehensive overview. I'll definitely look into Spring, I'm quite familiar with MVC so it'd be nice to be able to build on that knowledge.
Edit your post and indent code four spaces to format it correctly on Reddit.
There are lots of little things to complain about with Scala - working in Eclipse, the compiling time is an issue because when you hit "save", you have to wait 3 seconds for compiling to occur (this on an i7, 16GB ram machine). You need to hit "save" fairly frequently because the compiler gets confused before too long as you edit a file. It stops being able to help you after getting a little bit behind. Syntax issues - I find it baffling that sometimes, I need parentheses around anonymous function arguments, and sometimes, I don't. Sometimes, I can write a function as =&gt; doStuff and sometimes, I have to do () =&gt; doStuff and I can't figure out what the difference is. None of the refactorings available in the scala eclipse plugin actually work. Every one will fall down pretty easily in some way or another. Small stuff, really. Especially when compared to this: object GroupedPar { val processorCores = Runtime.getRuntime().availableProcessors() - 1 } class GroupedPar[T](private[this] val wrapped: GenTraversableOnce[T]) { val parallelCollection = { val nc = wrapped.toIndexedSeq val mod = if (nc.length % processorCores &gt; 0 || nc.length == 0) 1 else 0 nc.grouped(mod + (nc.length / processorCores)).toIndexedSeq.par } def foreach[U](f: T =&gt; U) { parallelCollection.foreach(subList =&gt; subList.foreach(f(_))) } def map[U](f: T =&gt; U) = { parallelCollection.map(subList =&gt; subList.map(f(_))).flatten } } What that does is turn any Seq-like collection into a parallel collection that automatically breaks up your list of things into as many chunks as you have processors-1. It's not always the greatest way to parallelize things, but as a shortcut, it does pretty well. All those scala collections are fantastic.
Have you ever saw an SpringMVC application? It's **completely** different from JSF. It's more like Struts. You know action-based, not component-based. But here, let [me](http://en.wikipedia.org/wiki/Web_application_framework#Push-based_vs._pull-based) [help](http://www.guyrutenberg.com/2008/04/26/pull-vs-push-mvc-architecture/) [you](http://www.theserverside.com/discussions/thread.tss?thread_id=22143). And there is also Webflow which solves complex flows and navigations. It's so better then what JSF currently supports that something like that is to be included in next [JSF spec](http://jdevelopment.nl/jsf-22/#730) I hpe this time they don't reinvent the wheel.
Yes, and I wish there were more. More ecosystems mean more choice as a developer. 
You may be interested in this [opinion](http://blog.joda.org/2011/11/real-life-scala-feedback-from-yammer.html).
lol @ screwyoutoo, everyone wants to learn Java? 10+ years ago they were teaching Java in schools (CS curriculum's) so I would expect tons of people to be out there with the skills needed already, right?
That was — at the time of writing — a great example of constructive criticism. (Edit: I mean the original mail from Yammer, not the joda.org flamebait around it) In the mean time, most of the issues brought forward have been worked on/improved/fixed, for instance: 1. **Don't ever use a for-loop.** https://github.com/scala/scala/commit/4cfc633fc6cb2ab0f473c2e5141724017d444dc6 2. **Don't ever use scala.collection.mutable.** https://github.com/scala/scala/commit/51ddeb372b3f0b22041d9a51f3faee17acd7b749 https://github.com/scala/scala/commit/5fe2d8b109abf3ff3e2d82dd4f248200846795c3 3. **Don't ever use scala.collection.immutable.** https://github.com/scala/scala/pull/82 4. **Always use private[this].** Never needed to use it ... but if you need to, just do it. 5. **Avoid closures.** Never had a problem with the amount of class files generated. Nevertheless, the problem will go away as soon as the JVM ships with support for it. (Java 8, probably earlier.) Scala is not perfect, but the team around it is very helpful and responsive. I have experienced a dozens of times that a reported issue was fixed within a few hours. Many of the criticisms which were brought forward a year ago often don't apply anymore.
&gt;Have you ever saw an SpringMVC application? It's completely different from JSF. It's more like Struts. Blergh! &gt;You know action-based, not component-based. Yuck! &gt; But here, let me help you. Thanks, but no thanks! ;) &gt;And there is also Webflow which solves complex flows and navigations. It's so better then what JSF currently supports that something like that is to be included in next JSF spec I hope this time they don't reinvent the wheel. JSF doesn't reinvent the wheel, it standardises things that work well. So Spring Webflow works well, good for them. JSF will definitely take this into account. Don't forget that Spring Webflow is not the only source of inspiration here. There's also ADF task flows (ADF as you might know is a framework based on JSF, so in a way JSF has had those flows for years). Actually, ADF task flows is the main source of inspiration. So what happens here is that JSF is not going to invent something in an ivory tower and is not going to reinvent any wheels, but is standardising something that has proven to work.
Probably not the correct sub reddit..But good job man, this will help quite a few folks.
TIL: http://en.wikipedia.org/wiki/Scala_(programming_language)
Spring is really not the way to for small applications. It is overly complex. Really at this point there is not much to gain by adding Spring to most new applications.
What were some of the problems that you guys found with Scala in particular? What prevented it from producing "reasonable business benefits"?
&gt;ultimately, the company decided to pay a vendor significantly more money for a product that they could get SLAs out of So they just ditched all the initial effort even though it worked fine? Could they not get SLAs out of the Scala version? I am confused. Also, python is awesome. +1 to that language any day
&gt;Build support oscillates between "efficient and complicated" (sbt) and "easy and slow" (Maven) I said this in the other thread on r/scala: I'll take a little bit slower compilation with a similar runtime performance over a fast compile and slower runtime.
Spring requires little in the way of configuration these days. Most things can be done with annotations. If you are still working with large collections of XML configuration files in Spring, you're using a very out-dated approach.
Finally
People treat it like a bastard step-child but I keep coming back to Groovy because it just so dang easy to grasp and the IDE's like it. Most of my projects are a mix of Java and Groovy depending on if I need raw performance or a higher level concepts. I did like Clojure but at the time it still felt quite primitive and the IDE support was pretty lacking making it hard to justify for our projects. I've tried to love Scala, even did a multi-month project in it last year, but I just can't do it. I find it ugly and way too loosey-goosey, which means that every 3rd party framework/library you want to use ends up not being Scala as much as some programmer's pet DSL. Reading scala code written this way can quickly become a nightmare. I'm glad I spent the time with it that I did so that I can follow it somewhat. I just feel that the whole cost/benefit ratio with Scala is out of whack with what I consider practical. 
Euros not CDN .. I was referencing the European markets in that thread 
I sorta find that hard to believe. All you need is a [CINCO'S TelePresence!](http://www.cisco.com/web/telepresence/telepresence-basics.html) .
To some degree, but too much choice can be killing. When I'm an employer and need to find a Java developer, I can't just ask for a "Java developer". If I'm using JSF and the guy who turns up appears to be a Spring MVC zealot, we're probably just wasting each others time. For anyone starting in Java, there's a bewildering amount of choice. I've seen more than once that people just gave up and went to ASP.NET. Choice is good, too much choice not.
In your example it would be just syntactic sugar. John Rose recently did an interesting presentation on how they think of implementing lambdas in JDK 8: [presentation at Lang.NEXT](http://cr.openjdk.java.net/~jrose/pres/201204-LangNext.pdf) In short, the plan is that lambda expressions (as in list.filter(x -&gt; x.age &lt; 20)) get desugared into static methods (so no static anonymous class creation), and an accompanying invokedynamic call which calls a 'lambda factory' and dynamically creates (and cache) the SAM.
&gt; The next Scala version will always be "the one", and then something else pops up. This is a very good point that captures one of my discomforts about the language, thanks for phrasing it this way. 
And it's Lion only. 
Awesome new addition to JDK 7: switch statements based on strings. Not sure how efficient it is but mah' scripts don't care.
Which one did you start out with?
Seriously? Why the hell did you put it off until now? 
haha, procrastination prevails, if you don't wanna help its cool bro. 
do you know how to split a string to take out parantheses? 
Have to imagine it's equivalent to a similar if-then structure comparing strings but good question.
Well that's disheartening...
its all good, i gave up, sorry for the waste of time
I worked for an ISP :). It was a case of trust me, and that if I left, any hires knew Scala (not too likely in NZ) - or pay a big upstream vendor for support. The latter was (rightly) deemed the less risky option.
AFAIK it's like a switch statement on String.hashCode, so for long if-then-else chains it should be much faster.
Thanks for the link! It's a very interesting approach, since technically they are building on features available since JDK7, so the JVM itself is practically unchanged. However, the whole thing makes me wonder how tooling (e.g. IDEs) will be able to know anything about lambdas based on class files if source is not available. Scala embeds signature data in class file constant pools, but without anonymous classes JDK8 has no place where to put extra data except the containing class. In the bytecode all you would have is invokedynamic calls and some static methods. Maybe the invokedynamic call parameters will be used to detect lambdas (?). Basically they could consider all invokedynamic calls to Lambda::metafactory to be lambda captures. It'll be interesting to see how things work out.
Hi! Please don't worry about whether you're just looking for my "AMA" offer - that's part of why I'm here and it does benefit me as well. In the longer term I hope to establish that my purposes here are genuine and providing some consultative advice is something that I hope will help that along. Plus, and by no means second, it's nice to be able to give something back to Reddit :) Breaking down your question(s): &gt; is hiring abroad generally something you, other recruiters and IT companies consider an option? Very much so, yes. There are probably four main concerns here for a hiring company / myself as a recruiter: * Is your spoken and written English passable to business level? * Are you currently located in the UK, or would be you moving for the job? (Logistically it's much easier to look at interviewing and employing someone who is already in the area than someone who also has to change countries - though it can be done). * Do you have permission to work in the UK (less applicable for EU nationals) It's worth looking up working Visas for more on this than I can really provide here. * Your work history prior to coming to the UK. This is a bit of a grey area but I think it's mostly the "fear of the unknown" factor as there's a certain safety factor in seeing someone worked in (inset UK based company here) rather than (insert unknown foreign company here). For that reason you'll have most success if you have a consistent work history (no gaps) and your CV is well written with good insight given to what projects you worked on etc. &gt; What do companies in the UK value more, experience or degree/certificates? I'd be compelled to say experience in all honesty - though it depends on what kind of level you're applying at. It's unrealistic to expect someone fresh from University to have a lot of experience - but those that set themselves "above" their peers are the ones who did work placements etc. If you're coming from overseas then I'd say a mix of both is useful as the certifications show you've been through official channels and tested in your ability, whilst the professional experience shows you've actually used it in some capacity. The more senior you get - the less the official certificates/degrees seem to matter and the more it's all about "having 8 solid years developing J2EE systems for financial clients" or whatever... Hope this helps; feel free to ask me more if you like! 
&gt; IDE's like it. Really? I tried to use Groovy in an IDE and it was rather painful. The IDE seemed completely confused. I think I was playing around with Grails in SpringSource Tool Suite.
Yeah. I should have been more specific that IntelliJ likes it. 
From [this product page](http://www.oracle.com/technetwork/java/javase/terms/products/index.html): &gt; Oracle Java SE Advanced helps maximize up-time... Ah, so as long as I don't care about a few crashes, I can stick with the free version.
What does -XX:+UnlockCommercialFeatures actually do. I cant seem to find any documentation for it?
Now THAT's some pure ENTERPRISE SOLUTION.
At this point, it's mainly some features that have been ported over from JRockit, their other (commercial) JVM. It has JRockit's low latency garbage collector and the analysis tools for runtime performance, crash dumps, and memory leak detection. So far it seems to just be extras from JRockit, let's hope it stays that way.
Matt Raible maintains a fairly detailed JVM web framework comparison that he uses as the basis for talks he gives at various conferences. The latest should be here: [http://raibledesigns.com/rd/page/publications](http://raibledesigns.com/rd/page/publications)
The authors of the language are smarter and have a lot more experience and a deeper understanding than most. You can learn a lot by looking at the code they produce.
I m a noob-intermediate level java programmer, so take this for what its worth: The "you just need to know it does what you want" mindset is bad for you in general but not for java in particular. Java already has many stable api/libraries that have been around for years and there are loads of tutorials for them. So it is less likely that you ll run into the problem "its not doing what I want and I don t know why." If you ever decide to try newer languages/technologies than you prolly won t be able to do whatever you want. So yes it s worth your time to really get to know java api s because it won't be the last time.
spring mvc is far closer to rails than JSF. Most rails devs like to handle their own ajax, and would run for the hills at the sight of the javascript generated by JSF JSF is a component based framework, which is awesome for stateful apps, less so for public facing webapps.
Stop hyperventilating about this, Oracle's been selling commercial JVMs for a while (go see JRockIt). The fact that they are converging all of this on to the JavaSE shouldn't be a surprise. If you don't want to run it download the OpenJDK.
I agree with you about the infighting in the Java community. It's legendary. &gt;PrimeFaces Vs ICEFaces and Normally this wouldn't be the same kind of fight as Java EE vs Spring. Both are component libraries for JSF, and they actually do work together in the sense that you can put both PrimeFaces and IceFaces components on a single page and let them work together. They share a direct common interest via base (core) JSF and many of those 'competitors' (including RichFaces, Trinidad, etc) actually do work together to improve this base (fully knowing that a contribution to the base will also end up in the favor of their 'competitors'). Now there's some bad blood between PrimeFaces and IceFaces, because the latter has forked the former (not a problem), but without much if any public acknowledgement (this is troublesome). &gt;Glassfish Vs JBoss Vs WebLogic etc etc. Those are absolutely not the kind of competitors as Java EE vs Spring vs Play!, or JSF vs Wicket vs Struts vs GWT and what have you. Glassfish, JBoss AS, WebLogic etc are all implementations of Java EE. They all cooperate on the Java EE standards, which means providing ideas, specs and implementations, and compete on other aspects (like performance, minimal resource usage, etc). 
It's true that a particular interesting aspect of components is their capability to keep state. However, a component doesn't necessarily have to be stateful. Another aspect to components is their ability to interface with each other. I can use a RichFaces calendar component inside a Tomahawk panel group inside a PrimeFaces table, and this works, because of the standardized component model all those components adhere to. They also all accept the same kind of bindings to back end services, which means I can directly replace a plain input field (from the core component set) that's bound to a Date property, by said RichFaces calendar component. This all is also useful for public facing stateless applications. Declaring the mode of operation with respect to state is something in which JSF still has some way to go. This is one the last areas where JSF needs a major overhaul IMO. You should be able to easily declare that a page is stateless, and components should support this (degrading their abilities sensibly, or clearly letting the programmer know they can't work without state).
Yeah, um, no. I want a picture. Or something. Don't just link me to some executable file, man. Reported.
So sorry. Never thought about that. I'll fix it up as soon as I can. 
Seriously sorry about the issues guys and gals. I'll get some nice images uploaded to imgur. You can build yourself a themepack if you wish :) EDIT: [New post](http://www.reddit.com/r/java/comments/sw241/geography_generated_with_a_diamond_square/) seriously sorry!
No biggie. Just so you know.
Thanks, I put up a new post that links to an album on imgur with all 40 of the generated images in the themepack.
I heard in the next release you'll be able to put your credit card number in the command line -XX:+Credit:4111111111111111
+1 for Wicket. I am a Java Developer at a large enterprise and by far it has been the easiest way to make a quick prototype or a a full scale app (the guidance is to use this for all new web applications at my company now). The java code feels similar to Swing but not anywhere near as painful. Plus it comes with a lot of JavaScript and Ajax hooks already built into it. I would recommend the OP at least once. 
[JRockit](http://www.oracle.com/technetwork/middleware/jrockit/overview/index.html) *FTFY*
Just some enterprise features from JRockit being ported over. Nothing to see here. If Oracle starts removing important things that used to be in the standard JDK, *then* you can panic. This is non-news.
If you ever interview with me, imy standard question is implement Hashmap. Its my way of filtering people that go through the motions of using Java API and really understanding it. Another common question is what are the different implementations of List and why would you use each one. What is the benefit of ArrayList over LinkedList? What are the benefits of LinkedList over ArrayList and when would you use each? If you don't understand the API, you won't pass my interview. For me, whenever I encounter a new API, I always try to understand what it does and whether it makes sense for my use case.
Very nice results. Mind if I ask what algorithm you're using to generate the landmasses?
I have only read thinking in Java out of these. Found it excellent, but it helps if you have some programming experience before.
The comparison itself would be nice, but it's a shame that Matt is somewhat of a biased-d*g. Now many of us are of course biased because of what we use in love and in that respect Matt is just one of us, but for someone who presents a supposedly unbiased comparison this is a bit sore.
It is a [Diamond-Square](http://en.wikipedia.org/wiki/Diamond-square_algorithm) algorithm, Diamond-Square spits out more smooth transitions as it is usually used to generate 3D landmass, but I just rounded the final results to get either a 0(black) or 1(white). 
one of the getText() returns an empty string (thus an invalid number)
The error message is telling you right there: NumberFormatException: empty String at java.lang.Double.parseDouble It means that one of the text fields returns an empty string, which the parseDouble function cannot parse. I'm not sure what the proper way in Java is to handle a field like this (is there an easy build in way? or do you have to manually check the strings?), but I know in C# there is a TryParse function, which returns false if the parse fails in which case you could either use a default value or throw an error yourself. You could mimic this behavior by using a try..catch block around the parsing function.
As vafada suggests, the error message "java.lang.NumberFormatException: empty String" is pretty helpful: you're trying to convert the empty-string to a double. (So this has nothing to do with the gui per se -- just that you grabbed the empty string from a jTextField.) 'Scanner' is a common class to do things like "is this string parseable as a number?" Below is a method 'myParseDouble' that has you provide a second input -- a string, *and* what to return in case the provided string wasn't really a number. Warning: Untested code. /* Return the double represented by a String, or just return back * a default value `dflt` if the String does not represent a double. * Examples: myParseDouble( "-3.1e7", 43.0 ) == -3.1e7 // Note: auto-unboxing is occurring. * myParseDouble( "", 43.0 ) == 43.0 // In general '.equals' preferable to '==' for Doubles. * myParseDouble( "garbage", null ) == null * Pre-condition: s must be non-null. * Note: leading/trailing whitespace in s is ignored. */ static Double myParseDouble( String s, Double dflt ) { java.util.Scanner scanStr = new java.util.Scanner(s); return (scanStr.hasNextDouble() ? scanStr.nextDouble() : dflt; } Ah, one glitch: myParseDouble("43 hello blah", ...) will return 43, which may not be what you want. (You might want to check !scanStr.hasNext() after calling nextDouble(), if this matters to you.) Note that this method ignores leading/trailing whitespace (which is fine/desirable for strings taken from I/O, but may not be what you expect in other situations.) 
Woah. I'm definitely going to make a java applet about this.
Awesome! Send me a link once you finish it! I'd love to see the results.
Seems like a good thing to me, if the compiler starts to actively make money for Oracle that's a pretty good incentive for them to invest in Java the language, rather than just their middleware stack. Hopefully that kind of investment will trickle down into the OpenJDK, too. I'm guessing the long term strategy will be similar to RedHat/Fedora, something like OpenJDK as the gateway drug, with the commercial JDK (including support agreements and SLAs) for the serious enterprise addicts.
It is some modified code that generates straight Diamond-Square plasma, I rounded the final results, so instead of values being 0.3534 &amp; 0.54642 it would have been 0 and 1, etc.. I also tweaked some of the operational constants to get good looking results. If you want my code, I just put it up [here](http://kashewgaming.com/source/landmassgenerator.txt) Edit: Credit to [original source](http://www.eisbox.net/blog/2010/10/27/java-diamond-square-generator/)
There are still a lot of Spring applications out there but most newer applications seem to be going with Java EE and JSF. JSF 2.0 is such a leap forward for front end development of Rich web applications.
I actually like html5 and javascript though :(
The if this.logger.isLoggable(Level.CONFIG) is succeeding (because you set level to ALL), but the call to logger.config("") just seems to emit nothing. If I change it to info() or warning() I get output. What's weird about THAT though is the expected "This should be logged" string is logged /twice/ to stderr. 
I worked on a UI app written in Swing used to configure data used by a C++ server to push QOS policies out to routers. The data was stored in... ldap. (ugh). It was all the rage a few years ago. :)
What do you mean by that? Like they're really trying to push the Java EE stuff now or something?
Yes, there's been a strong push to claim that now that EE has copied tools like (particularly) Spring and become simpler than the old EE model, that the other tools are obsolete and everyone should migrate to a pure EE approach.
Thanks for all the replies so far. What is a free/cheap way to learn spring?
Fair enough. I guess hobby stuff can work but it think you can almost get into a contradictory situation: if your hobby is too useful the it looks like you're just doing it to look good. If its too arcane then it's not applicable. I think the best example of the later kind of hobby is learning Erlang. It says something deep about a developer who does it. But it is almost certainly a useless skill.
Handlers' have a separate logging Level that the message's Level has to meet (in addition to the logging Level of the logger). See http://stackoverflow.com/questions/470430/java-util-logging-logger-doesnt-respect-java-util-logging-level for lots of explanations. Everyone using java.util.logging for the first time gets bit by this :(
I guess it's being logged twice because there are now two handlers associated with the logger: the default handler (also a ConsoleHandler) and the ConsoleHandler you associate with the logger yourself.
What is the error?
the error from the IDE is: cannot find symbol - method massArea(Square)
So to pass the whole array I should change it to: System.out.println( "The square with length" + massArea( squares[] )); The IDE tells me " '.class' expected" when I try that
Alright, are these two methods in the same class? (main() and massArea())
Alright, the problem is then two problems(ish). First, massArea() is not a static function, which means it needs a Square object to call it, i.e. Square sq = new Square(1); sq.massArea( squares ); . The other option, if you had intended for massArea() to be a static function, which it seems like you did, is to make it a static method and then replace the print statement with: System.out.println( "The square with length" + Square.massArea( squares ));
Why is massArea a method of square but takes an array of squares? Wouldn't public int getArea(){ return (int)Math.pow(tRCorner.getX(),2); } do what you want? Then a method in whatever is totaling would be public int sumAreas(Rectangle args[]){ int sum = 0; for(int cout = 0; cout &lt; args.length(); cout++){ sum+=args[cout].getArea(); } return sum; } 
Add at least 4 spaces to the beginning of every line so the reddit formatter will treat it like code. Add 4 spaces to the end of each line to just get the line wrapping to be what you'd expect. 
I tried, it didn't work. I just posted it on pastebin instead.
The while method is much better, as it is O(*n*) time and the for method is O(*n^2*). For each node, it takes O(*n*) time to find that node, and you have to do that O(*n*) times (where *n* is of course the length of the list), resulting in O(*n^2*) execution time. 
First of all, your variable names need some work. "data" is generally a terrible variable name. It doesn't really say anything about the meaning of the variable. "ptr" is almost as meaningless. Except for some immutable types like Strings, everything in Java behaves like a C-style pointer. Here are the re-namings I would suggest: int[] data //rename to int [] values int data //rename to int value Node ptr //rename to Node node Now, the actual answer to your question: //each call to get(i) iterates over the list up to i // resulting in list.size()*list.size()/2 calls to ptr=ptr.next; s += "["+this.get(i)+"]"; Vs. //this is much more efficient, you just iterate over the list once. //but it looks kind of messy, doesn't it? ptr = ptr.next; what I would actually suggest doing: implement the Iterator interface, and use that to iterate over the elements. 
test test2 Awesome, it works. Thanks!
Without actually trying anything out, a way to do this (there's probably a better way), would be to have the next JFrame object already made, then on the action performed, instantiate it. In the next JFrame you would have to call the function setVisible(true) in the constructor so that when you create it, it's visible. Simple code: button.addActionListener(new ActionListener() { public void actionPerformed(ActionEvent e) { if(OtherFrame == null) OtherFrame = new SomeOtherFrame(); } }); 
my problem is it "cannot find symbol" whenever I try to put frame in the actionlistener method. am i missing something? haha
what does same scope mean, sorry? I put final after my frame so its like final frame frame = new frame
FWIW, I think given the business domain we're working with (linked list), "data" and "ptr" may be clear enoughd. I'd perhaps prefer "next" to "ptr", but it's a relatively weak preference.
I used the window builder in eclipse
Ok!
Instead of using an anonymous class you can implement the ActionListener interface in your class. Add "implements ActionListener" at the top of you class after your class name so you end up with something like this: public class ClassName implements ActionListener Then add the "actionPerformed" method to your class and implement it the way you need. Then, all you have to do with every button is: button.addActionListener(this); To distinguish between the different buttons you have you can use: if(e.getSource() == button){ //do stuff when 'button' is pressed. } else if (e.getSource() == button2){ //do stuff when 'button2' is pressed. } // etc 
As jbacon says, the O(n) version is way better. And myself, I think `data` is a fine name for a generic number. (Well, maybe `datum` since there's only one :-) The name `ptr` could be improved to `next` or `rest`, since that field does have a meaning (the next node in the list / the rest of the things in the list). FWIW: it's not widely known/used, but the true object-oriented way to do a singly-linked list is to use an object to represent an empty list, not `null`; then the O.O. type system takes care of all the "if this object is an empty-list do one thing, else if it's a real-node do something else" checks that usually clutter up the code. http://home.adelphi.edu/sbloch/papers/tllarwocon.html (In fact, using this wacky approach, you'll never get a `NullPointerException`.) The tl;dr version: The empty list *is* a list, and should be represented by a real object. Since a LinkedList is *either* a Node or an empty list, we use a class for each: class EmptyList extends MyLinkedList { } class Node extends MyLinkedList { int data; MyLinkedList ptr; } abstract class MyLinkedList { } At first this approach seems very odd, but after a while it just feels *right* -- letting the compiler understand that `MyLinkedList` is `Node` *or* `EmptyList` (rather than just saying "`Node` is (a real)`Node` or `null`", and not letting the type system help you out). Code for `toString`, using this wacky method, is below. (Warning: untested.) class EmptyList extends MyLinkedList { String toStringHelp( boolean atStart ) { return ""; } } class Node extends MyLinkedList { int data; MyLinkedList ptr; String toStringHelp( boolean atStart ) { return (atStart ? "" : ", " ) + data + ptr.toStringHelp(false); } Node( int datum, MyLinkedList next ) { // typical constructor this.data = datum; this.ptr = next; if (next==null) throw new java.lang.IllegalInputException("You must provide a non-null list to build onto."); } } abstract class MyLinkedList { public String toString() { return "[" + toStringHelp(true) + "]"; } abstract String toStringHelp(); public void test() { MyLinkedList lst0 = new EmptyList(); MyLinkedList lst1 = new Node( 17, lst0 ); MyLinkedList lst2 = new Node( 95, lst1 ); System.out.println( "A list containing 95 and 17: " + lst2 ); } } Edit: I'd inverted the sense of the boolean arg to `toStringHelp`; swapped two `true`/`false`s.
not without a heck of a lot more info and source code to go with it.
Hey I was wondering how you found the complexity of my toString method, I have read a little about complexity but I don't fully get it just yet. I am a Computer Science student and we have only scratch the surface of complexity and then we moved on. Thanks man!
I my experience with these, it comes from having another component (probably a JPanel) sharing the same space on the screen with those ones.
This all seems in the ball park. Except "UX" which is a dumb ass term and shouldn't get paid as much as a real dev. Add value, not fluff.
I disagree. `add(int data)` loops over the whole list to get to the end, so for(int i : data) for every new record add(i) for every node that exists. which is quite slow. My solution would be that the LinkedList has a tail record as well as a head record so add becomes: void add(int data) { tail.next = new item; tail = new_item; } that makes adding a record O(1) (instantaneous). Then the suggested way becomes the right way I think. The overhead of storing an extra variable seems quite small to me.
It's really very simple - I already explained it a bit in my first post, but I'll go into some more detail. Let us define *n* as the length of the list. The for loop is O(*n*), since it loops over the entire list. The call to `get()` is the important part - it is another O(*n*) operation. You can determine this by thinking about its upper and lower bounds for execution time. When you are getting the first element of the list, it is O(1), because it just returns the root element every time and does not traverse the list. However, when you are getting the last element, it is O(*n*) time, because it has to traverse the entire list. Since we can see that its worst-case run time is O(*n*), we use that as the complexity for that call. Since the `get()` method is called for each for loop iteration, we are calling an O(*n*) operation *n* times. Multiply that together, and you get O(*n^2*). For the while loop, you are just traversing the list one time, and not dealing with any other operations that are O(*n*) or worse, just O(*1*) calls. So, it remains O(*n*). Note: O(*1*) refers to *constant time*, which means its execution time is independent from the length of the list. 
So if I'm basically starting over, at least as far as refreshing myself on this stuff, what's the best way to do it? I figured install Tomcat? What should I be looking at and in what order? JSP? JEE/Spring? Is Hibernate still relevant? Can someone draw up a study plan for me? :D :D Also, on most projects, are the same people who do JSPs the ones who do back end business logic or is that usually split up? My choice would be focus on the back end, I hate playing with HTML. Oh man, do I need to brush up on CSS as well? This is what is daunting. There seem to be so many pieces.
 test test test cool
I honestly don't know whether to laugh or cry!
ooooh, that looks alot easier, i remember having some difficulty with implementing it, but ill try again, thanks! :]
I'm pretty sure you can't paint Graphics on top of jButtons (or other similar actionlistener references). To switch between them, consider doing this to your JFrame each time you do so: jf.setVisible(true); //helpful for switching jPanel objects jf.requestFocusInWindow(); //lets you interact with the objects after the switch.
kinda crappy, probably works http://pastebin.com/TadQiVeT 
Effective Java 2nd edition by Joshua Bloch for sure. The book covers a set of guidelines for good OOP practices for Java, but some can be applied to other languages. My favorite example: Favor composition over inheritance. Rationale is provided in the book, but in my experience, composed code is easier to work with, understand, and modify. 
I believe [this](http://pastebin.com/5npgGx87) is what you're looking for? Edit: and instead of multiplying base by 1.0 to ensure no loss of precision, I would just cast it to a double. double triangleArea2 = (((double)base) * height) / 2;
It may be more efficient and faster to practice simpler programs and tutorials since you're having problems using the language still as opposed to having problems designing something in it. Coming back to make more complex programs when you have down how the language works will be much more easier and fun. That being said, google the error messages you get, you will find that a thousand people have posted the same simple syntax errors. And it's impossible for us to detect where you have a syntax error if we can't see your code.
What happens if you switch all the ints to doubles?
Reread the section in your book about declaring variables. Also, you're missing parenthesis. Figure out where they should go. 
and maintain!
ah, thanks for the advice. turns out the program accepted my code as soon as I deleted the result bit. I've got a feeling that College and programming weren't meant for each other. 
Regarding your edit... I'm not sure I understand. You have a known number of colors, and an unknown number of columns, and you want a repeating pattern of colors? The most common example would be to highlight every other row in a table for improved readability. In this case, you'd be best served to use the modulo operator, %. This returns the int remainder of a division operation. Use the google for more instructions. 
I can't stress "composition over inheritance" enough. Also, (assuming you're going to test it), use Dependency Injection, always define an interface, avoid static methods, and pay attention to naming things. That should cover it.
Learn Object Oriented Design (cf. Design Patterns) to actually apply and use the tools of Object Oriented Programming to architect an actual program.
Truncates, actually. When you divide an int by an int you end up with an int; 13/5 = 2.6 which truncates to 2 when stored in an int. 
I actually used something like that, sort of, i followed a mix of everybody! I did the implement action listener thing from the class, then did the action performed one. then i did the @override thing. And instead of the if else I have more than one action performed, one for each button. thanks for the help guys mission accomplioshed! expect another thread from me tomorrow regarding another aspect of the project :P
I didn't mean to suggest JSF can't produce js / html. I meant I like writing it myself
Ah well, you might as well have stated that. I get a bit peeved by the downvotes here, and the ones for your comment were unwarranted.
Read a book on Design Patterns. that's exactly what you are looking for.
Thanks for your reply. So do I look for JEE jobs in the meantime? Java jobs tend to ask for Web technology. The issue I'm having is I haven't worked with web in such a long time. Struts 1.x was in vogue back then. The last couple jobs I had didn't use JEE. I've been using exclusively Java for the past 10 years, so I think I'm confined to looking for a Java job. I did C and C++ (loved C, hated C++) before that but I can't imagine they'd be interested in 10+ year old experience. And I can't afford to be off work for a long time. I feel like I'm in a mess. And what do you mean by "company projects" ? Did you forget I'm not working? :)
&gt; So do I look for JEE jobs in the meantime? Java jobs tend to ask for Web technology. The issue I'm having is I haven't worked with web in such a long time. Struts 1.x was in vogue back then. The last couple jobs I had didn't use JEE. I've been using exclusively Java for the past 10 years, so I think I'm confined to looking for a Java job. I did C and C++ (loved C, hated C++) before that but I can't imagine they'd be interested in 10+ year old experience. And I can't afford to be off work for a long time. I feel like I'm in a mess. Start looking right away, not just JEE jobs, but also Spring; avoid anything that will have no forward momentum. Putting yourself away from the job market for an extended period of time can affect your prospects - no one likes to hire a person who is rusting away. Simply put, get into a mode where you design stuff and write code everyday like your life depends on it. And remember not to despair; it's fairly easy to turn your prospects around, as long as you dont need to unlearn a lot. If it helps, sign up at odesk, guru.com and peopleperhour.com and take up projects that would help you gain experience - note that having a portfolio usually helps, so you might also want to start contributing to FOSS projects and also pull out an impressive list of references from your former employers. The latter two sites (guru and peopleperhour) usually do not have a significant amount of Java contracts. &gt; And what do you mean by "company projects" ? Did you forget I'm not working? :) I'm sorry. I didn't notice this in your post.
&gt; We know the golden quote, “where there is synchronization, there we have performance bottleneck”. I can't find this quote that we all "know" anywhere other than this blog.
That was written on a lighter sense. If that's misleading, I will edit it :-)
Think in terms of message passing. Make programs become more like conversations in a community of cooperating objects. Look into some patterns, also patterns from outside Java/Gang of 4 - I am thinking of Method Object and Double Dispatch.
I am just learning java. Amidoingitright?
This might be better in /r/javabeginners... Your article doesn't even begin until it's off the page. Why do I need to know that you used to use DBase, given that it's not mentioned again? &gt; At the end of this article I have summarized Pascal, C, C++, Lisp, Prolog, Cobol, Basic, Fortran – I studied all these in a 3 year post graduate program and more than that. So? You don't need to enumerate the languages it's compared with before even saying what it is, since you do say what it is. &gt; System.out.println prints the argument passed, into the ‘standard’ output stream. Quotes imply that it is an unusual use of the word. It is not. stdout is a standard stream. &gt; Its access specifiers are public final. Technically true, but unnecessary and pointless to beginners (who must be who this is aimed at). Saying it's final and showing a mutator-like method shortly after is misleading. &gt; println prints the argument passed to the standard console and a newline. What console? It prints to System.out, which is usually stdout. There may be no console. It may be part of a bash script, or many more possible invocations. &gt; Every println makes a call to print method and adds a newline. print calls write() and the story goes on like that. Is this part of the Java spec? I wouldn't have thought so. At any rate, it is implementation detail and shouldn't be important. &gt; Having said all the above, we still use System.out.println for logging and debugging. Thats the beauty of it There is no beauty in it. It's a bad habit. Do not do it. &gt; This is driven by habit. I want to draw a parallel of this habit with using ‘i’, ‘j’ as index in for-loop. Don't. This is not a habit, this is a convention. It is useful. Logging with System.out.println is not. &gt; We know the golden quote, “where there is synchronization, there we have performance bottleneck”. Assuming stdout is being echoed, the performance bottleneck for System.out.println is not the synchronized block, but printing to the screen. $ time java echo.Echo ... real 0m7.602s $ time `java echo.Echo &gt; /dev/null` real 0m1.502s The cost of acquiring an uncontested intrinsic lock (the normal case, especially for beginners) in java is tiny. Adding your characters to the buffer will be much more significant, unless you're calling print once per character. If the lock is contested, then obviously it will (and should - there's only one stdout) take longer. Still not necessarily a bottleneck. &gt; In a real-good scenario why do you want to use SOP to print something to console more than 50,000 lines. If there is a real need, you should go for a custom logging solution. SOP is not intended for that. Again, wrong tool for wrong situation! Go choose the right tool and don’t blame SOP for performance. We all love SOPs. Ok, go implement the linux 'sort' command without it. How about 'tee'? Or any pipe-and-filter application that uses printsteams. Not everything printed to stdout is logging, and not all PrintStreams are System.out. Logging to stdout should not be done with a System.out.println anyway; use a logging façade. &gt; You may use static import to shorten it a bit. Do not recommend this. Out is too common a field name. System.out.println is instantly recognisable (partially due to its length). out.println is not.
Write lots of bad ones. Learn. Write lots of better ones. Learn. Write good ones. 
Stated differently; practice, and don't be afraid of being wrong.
The book, clean code.
Well... Take a look at [this](http://docs.oracle.com/javase/7/docs/api/java/awt/Container.html#add%28java.awt.Component,%20int%29) then.
You could also create more text fields when you press a button. eg: public void actionPerformed(){ TextField newfield = new TextField(); panel.add(newfield); textfieldlist.add(newfield);//store all textfields in an arraylist to be able to retrieve their text }
I have found this method does work but it needs to be refreshed every single time for the stuff to update. As of now, the only way I know how to refresh is by resizing the screen
Thanks for clarifying that.
If want a full-time job and you can demo your ability, you could probably get a low paid code-monkey job atm. Anything more advanced and you'll need to know a lot more. Knowing what you do before even starting uni will demonstrate enthusiasm for the subject - look into getting summer internships at companies if that interests you. You shouldn't have much trouble. Many big companies will get you back every summer break if you keep showing aptitude, and you'll get a guaranteed (for some value of guaranteed) job at the end. They treat it as an extended interview/mentorship type relationship, and you'll learn a lot from it.
It was, to its credit, carefully designed to masquerade as constructive criticism, but most of it was garbage, intentionally or not, and the scala community fell for the lot of it.
Rewrite using an abstract class that implements a method to calculate the quadratic roots. (Optionally, tag this class Quadraticable by creating and implementing an appropriate interface.) Create abstract methods: public abstract double getUserDouble(String prompt); public abstract void outputMessage(String message); Create a separate driver class that is constructed with an instance of a concrete implementation of the above abstract class. The concrete implementations will allow you to easily choose between command line, Swing or even Android implementations depending on the needs of the user. Decide which concrete class to instantiate by creating an abstract factory method which returns a concrete instance of the above abstract class. Remember to override toString. Happy coding!
Do you mean object oriented? I agree with this. All production quality code would have for instance a class VertexFinder that would return for instance a Vertex object which contained the results of the calculation. These classes should be independent of the means of input and output. You should gather input in the main method, create a new VertexFinder instance, and then process your output from the results. The separation of concerns is very important. Check out this whole site: http://c2.com/cgi/wiki?SeparationOfConcerns http://c2.com/cgi/wiki?OneResponsibilityRule
We got a video up - http://www.youtube.com/watch?v=aXXg19MLmsY&amp;feature=plcp
I'd like to point out that there's no need to use Double objects here since you don't need nullable values. So, I would use double primitives (note the capital D: Double = object, double = primitive). It doesn't really matter in a small program like this, but I think it's good to learn the differences and best practices as early as possible.
What would you pick?
You might have a look at http://www.jgoodies.com/ I've tended to write my own subclasses but there are other good solutions out there.
sure, sec 
so that black part right below the big picture is the only part that gets changed when i do the background
i tried it that way and it didn't work. that was my first try :P
omg thank you so much! :]
usually you'd set the environment variable JAVA_HOME to equal the desired JDK/JRE directory (e.g. JAVA_HOME=C:\Program Files\Java\jdk1.7.0_04), then add to the path %JAVA_HOME%\bin. Then when you upgrade or need to switch, you can change the JAVA_HOME variable and it should update the path accordingly 
'Finder' implies that the responsibility of this class is an operation. Operations should be the domain of methods, not classes. Of course there are exceptions - well defined patterns such as Strategy, but they are not really relevant to this case.
Thanks for all the details, you've really cleared up my uncertainties! I have gone a long time without using abstract classes but now knowing how they work and what they do I can easily see the usefulness. Thank you again for your response!
make all input be processed by a servlet and forward to the jsp pages. do not make the jsp pages directly accessible at all. jsp1 --(http submit)--&gt; servlet1 ---(servlet forward)---&gt; jsp2 
Why don't you use graphics and container object like most tutorials recommend? start your render method like this: public void render(GameContainer gc, Graphics g) throws SlickException { g.setFont(font1); g.setColor(Color.white); g.drawString("THE LIGHTWEIGHT JAVA GAMES LIBRARY", 100, 50); //etc } I'll try playing with this myself while I still have slick installed. Maybe I'm answering nothing and if that's the case, sorry man
For some reason it slipped my mind to watch a Slick Util tutorial, mainly going off the text tutorials on ninjacave and LWJGL websites. I feel silly. I'll try this now.
OK. This seemed a little heavy handed. I was hoping for a simpler way. One question I have is that if I do this I will end up with many hundreds of servlets. My web.xml file is going to get very long. Is this OK? Is there a better way to organize this?
scanner.hasNextLine tells you if there is a next line, but it does not move to that line. The first while loop will keep returning true forever, as the scanner will stay on the first line of your file.
That's not how you TL;DR...
Your text finding initiator looks fine. Read this [tutorial](http://baksteenbrick.wordpress.com/2011/02/08/writing-java-games-with-slick-part-two-hello-world/), and use it to create your rendering method. It skims text output briefly, but I'm sure it will help solve a few problems. I hope you can fix this problem quickly. Don't forget to add the g.setFont(font) function! g.setFont(font#); 
I'll have a read. Cheers. 
&gt; You have to repaint() the frame if you change its properties after you've initialized it. repaint() call is not required. It will always repaint automatically...
Thank you!
You mean javascript but honestly neither here nor /r/javascript is the place for this kind of question. Maybe stackoverlow but you need to phrase it more specifically. FYI though have a countdown remaining variable and use a setTimeout() that calls a function every second (1000 milliseconds) that decrements your countdown remaining function by 1 second. In this function you can check the value and determine if the remaining time is a special value (e.g. 5 mins). You can then increment / decrement the timer from wherever you want.
/r/learnprogramming is good for those kinds of questions
wait, are you saying you got it to work? i'd love to see the code
You'd need to decide where jsp1 submits to. It could do this: jsp1 -&gt; jsp2 -&gt; jsp3 Or it could do this: jsp1 -&gt; jsp1 -(forward)&gt; jsp2 -&gt; jsp2 -(forward)&gt; jsp3 Where -&gt; means a GET/POST request, and -(forward)&gt; means the request is forwarded to the next jsp. Regardless, you'd have to have something in the jsp that is accepting the request to make sure you got the request from where you wanted. Some form of parameter or something, maybe using a hidden field as suggested in the other reply. Let's assume jsp1 submits to jsp2. The syntax isn't exactly right as I'm not at a point where I can check it, but something like this in a scriplet tag at the top of jsp2 should work: &lt;% String jsp1 = request.getParameter("jsp1Param"); if (jsp1 == null || jsp1.length() == 0) { response.sendRedirect("jsp1"); } %&gt; That's not using session, but if jsp2 is hit without the jsp1Param parameter, it will redirect them back to jsp1. If it does have the jsp1Param, then that means it came from jsp1 (easily spoofable but not by just changing the URL) so we let it proceed to render jsp2. That make sense? Where session might come into play is if you wanted to track state over several pages. So jsp3 might be accessible from jsp1 but only if you had been to jsp2. Then you stick that in session and it changes the check in your scriplet.
because no one who does real work gives a shit about osx, especially java on osx
Just for know, MySQL is not a free database, and it is a Open Source, if you want to use it for an application who isn't under GPL license, you need to pay for license the MySQL, the last time i saw, it was US$220 or US$440, i don't remember the difference between them. The last time i saw, PostgreSQL was free even for OEM's, you should take a look. http://www.postgresql.org/
Made it use Popups to enter in the coefficients. Going well so far guys :)
Change the name of your game to "Ball Sticking Pool" Seriously though, you've taken on a huge project. Best of luck. I think you'll find the answer if you spend some time debugging. 
 if (distBetween &lt; radius) Isn't there a collision if the distance between the centers of 2 balls of equal size is equal to or less than diameter of one of them (or 2*r...or in the case of balls that are different sizes it would be r1 + r2)? I am assuming you are measuring each balls x and y positions from its center point. If you only detect a collision when the center points of 2 equal size circles are closer together than the radius of one of the circles, you allow them to overlap by one radius don't you? In other words you allow the edges of the balls to touch each others center points. You have used the Pythagorean theorem to calculate the distance (which you name distBetween) between what I presume to be the center points of two identically sized circles that represent the two balls in question. As I don't see anyplace where you are subtracting one balls diameter worth of distance from your distBetween, it does not take the radius or diameter into account (not that it should). What we cannot see here is the value you have set the variable 'radius' to but I'll assume you have actually set it to the actual circle radius value and not the diameter value. In this case, in a low velocity collision I could imagine that the edges of the balls might be allowed to overlap too much before the collision is detected and then their velocity after the collision could be insufficient to bounce the edges back out away from each other again resulting in the balls coming to rest with their edges slightly overlapping? Also, normally when a collision is detected there is a chance that you have to back up/reverse the colliding objects a little bit by the amount by which the edges are overlapping at the time the collision was detected. If the objects are travelling at high velocity relative to frame rate there is a good chance of this happening. This could get tricky in cases where the objects are travelling at different velocities or where one of the objects is stationary relative to the other because you have to determine which object to move by how much to properly back out the edge overlap before calculating your new angles and velocities and such. For instance, on the break, if you detect that the cue ball edge overlaps the edge of the ball it strikes, you'd only want to back up the cue ball by the amount of the overlap because all the other balls on the table were at rest when the cue ball struck. But in the case where two balls that are already in motion collide you'd have to back them each up by the appropriate amount according to their current velocities at the time of collision. Also how are you accounting for the possibility of one ball colliding with multiple other balls simultaneously? Does this help at all or am I totally off the track? You might also try posting this over in gamedev since this really appears to be more of a collision detection/game authoring question that happens to be written in java as apposed to just a java question. tldr; Isn't there a collision when distBetween is &lt;= (radius of ball 1 + radius of ball 2) instead of just &lt; radius?
I don't see a way in which using JLabels in a game is a good decision, might want to elaborate on the goal youre trying to achieve here.
Sounds like it should be fine to me. In fact for your purposes you might even be able to get away with something as simple as Derby or JavaDB.
Upgrade your OS, which will let you upgrade your java. It'll never be as fast as a windows machine (of equal hardware) but you will notice an increase in performance. I've got an old iMac at home running 10.4.11 which has java 1.5, it's very slow especially the java 2D acceleration. At work I've got the same hardware running 10.5 and with 1.6 and it's a night and day difference. Apple has been responsible for maintaining its own java and as a result it has been trailing behind the official sun/oracle releases. Fortunately this is no longer the case as [Oracle has just released their first SDK for OSX](http://www.appleinsider.com/articles/12/04/27/oracle_releases_first_java_development_kit_and_javafx_sdk_for_mac_os_x.html). *You may want to look into some OSX rendering arguments. I remember something about forcing or disabling Quartz rendering on my 10.4. This really improved the performance. You can also specify the quality which may have something to do with the artifacts you mentioned. [Quartz Graphics Drawing Performance](https://developer.apple.com/library/mac/#documentation/Java/Reference/Java_PropertiesRef/Articles/JavaSystemProperties.html), half way down the page. Good luck. 
I had the same problem with my discrete simulation. Instead of your problem, I had trouble showing no collisions when they are not getting closer or farther from each other, but parallel. It would cause my code to get all messed up. And I think TheChiefRedditor is on the right track.
The method add(int, String) is undefined for the type LinkedList&lt;String&gt; error i keep getting. my LinkedList class is of type THING because it is meant to be interchangeable public class LinkedList&lt;THING&gt;
i am using one provided for me. i attempted to create the add(int i , THING x) funct although i kept getting an error using the i i dont know how to use with with the nodes. if i try to assign it to tmp.next i get an error since it is not of the node type
[Here is the link to the review problem](https://faculty.utpa.edu/rtschweller/CS3326/CS3326S2012/classNotes/javaExam/linkedList2/linkedlist.htm) the provided classes are at the bottom
The reason I don't do r1 + r2 when I check if distBetween is smaller is because every ball has the same radius. So instead of leaving distBetween at the value it is I do the square root and use radius instead of radius + radius or radius^2 (which would be the same thing). For example: double distBetween = Math.sqrt(Math.pow(this.xPos - ball.xPos, 2) + Math.pow(this.yPos - ball.yPos, 2)); Instead of double distBetween = Math.pow(this.xPos - ball.xPos, 2) + Math.pow(this.yPos - ball.yPos, 2); Because I do the square root I only check against one time the radius. It is simple a choice in how I use my values but it would be the same thing. &gt;Also how are you accounting for the possibility of one ball colliding with multiple other balls simultaneously? The thing is, I don't. That is the problem. Every 10ms, the timer in my other class checks every ball with every other ball once. I have tried ways to check again (during the same time-step) if a collision as detected and resolved to recheck for collisions, but it made things worse. There was also the other problem of collisions which were cancelling out due to being resolved twice. I had solved it but it didn't fix the problem so I took it out.
I guess it would be useful for me to post the method which calls resolveCollision() as some of you have mentioned. Note that each ball is instantiated into an array and changing the timer to every 1ms or 100ms doesn't solve the problem. The collisionTest() in the if statement simple checks if there is a collision before calling resolve collision using the same method as resolveCollision(). I used to not have this but it saves resources since it only checks if distBetween is less than the radius. //Moves all the balls and resolves collisions every 10ms public void Move() { Timer timer = new Timer(10, new ActionListener() { public void actionPerformed(ActionEvent evt) { //move every ball by their given velocity and decrease speed //according to value of friction for (int i = 0; i &lt; 16; i++) { ball[i].move(); ball[i].decelerate(); } //Check if balls collide and resolve new directions and velocities for (int i = 0; i &lt; 16; i++) { for (int j = i+1; j &lt; 16; j++) if (ball[i].collisionTest(ball[j])) { ball[i].resolveCollision(ball[j]); } } //Check if center of ball touches edge of pocket for (int i = 0; i &lt; 6; i++) for (int j = 0; j &lt; 16; j++) if(pocket[i].pocketCollisionTest(ball[j]) == true) isPocketed = true; repaint(); } } ); timer.start(); timer.setRepeats(false); }
not a problem, once i knew what you were asking the hardest part was formatting the code on reddit. Your on your own for the LinkedList.toString method, you wouldn't learn anything if i did it all for you.
I've posted something extra that may help further understand the problem if you want to take a look. The move step size IS too big. Setting lower velocities decreases the chance of the problem occurring by a lot and sometimes to where it never happens. We have set the velocity at which the cue stick hits the cue ball to a low enough value so that the problem doesn't occur as often but is still playable. I want to solve this problem at all velocities. My physics teacher actually told me that, theoretically, if balls that collided could intersect each other, they would spin the way they do in my program. If you want to visualize how it looks you can just picture two people holding both hands facing each other and extending their arms and leaning back and spinning clockwise or counterclockwise. 
well that.s not the hard part i just did not know how to incorporate the number but i already completed the reverse string method. which means now i need to memorize in hopes this question is on the exam.
yeah, this is in class course. thanks! :P ohhh i get it, thanks!
Use H2 or JavaDB for a lightweight in-memory/file solution
`radius + radius` is not equivalent to `radius^2` unless the radius is 2.
I'm using JSF, but also write html5 and js all the time. You can do this easily with composite components. There you just put this, and then use the component abstraction to compose higher level views and connect your html5/js easily to server side backend services.
A simple start would be to download JBoss AS 7 or GlassFish. This will give all modern Java EE 6 things in one convenient package. Among others you'll get JSF, JPA, CDI and EJB. Try to fiddle a bit with a sample CRUD application. There was one posted here a while back from jdevelopment.nl , you might want to check that out. Hibernate is still very much relevant, but mostly in the form of JPA, which is a standardized API that Hibernate, EclipseLink, OpenJPA and a few others implement.
I agree and you're right. I checked and it should work with the sum of radius, but it doesn't. And I cannot find the mistake. This is why I posted this =P
Is it just a matter of optimization or an issue with the operating system itself?
I find that everything runs a little slower on Mac osx. Even big studio commercial games will get a big boost by simply running them in a windows boot on the same hardware. I bought a Mac for GarageBand and Final cut pro. If I'm not composing music or editing video I'm in windows programming/graphic designing. Apple makes great whisper quiet hardware but their GUI representation is too filtered and antialiased for its own good.
Yeah I plan to do that later. I haven't gone through complex numbers in a while in math (in geometry now) so it might be a challenge even through the math logic. We'll see lol
Indeed, not a lot, but some are quite handy and if they use PrimeFaces for their showcase you can be pretty sure those components can be used together with at least PrimeFaces ;)
my suggestion is look into using some sort of drawing library and painting text to the screen instead, once you get going in the right direction doing this will be SUPER easy in comparison to trying to look up labels by ID or something crazy like that. I just started learning java for android development so I can't point you at a good library but I'm sure some other guys here can!
College is something society adopted and integrated as a social norm. If you are interested in professional programming then college is secondary. There are wonderful books on Amazon, free entire lessons on the MIT website, and plenty of FREE opportunities to learn and get coached by other programmers at venues such as the ones hosted by MEETUP. If free isn't up your alley then there are many classes offered by private businesses who charge less and teach just as well. If you are seriously interested in the career of programming and business start ups then college is, indeed, secondary. save yourself the money and invest in your future... the smart way. If you're an academic then thats a lifestyle choice I can respect, but outside of academia the world has a lot to offer too. oh and the code bit was for a practice program. it had already pre-written the last bit.
This is a really interesting product. I like the flexibility of being able to just download TomEE and get the complete stack or use Open EJB to build your own. I would only build my own if I worked somewhere that I could not choose the application server.
The way TomEE is implemented is also rather interesting. If I'm not mistaken, TomEE is almost a stock Tomcat which deploys all extra functionality as an extra application. I wonder how difficult it would be to eventually integrate this functionality in a war by including a single TomEE jar.
If you think Erlang is useless then you probably think learning LISP is stupid too. As a programmer with experience in dozens of technologies encompassing all major platforms except for mainframes, I can tell you that your perspective is not going to help you in the real world. The real world is about solving problems. You should have as many different technologies available as possible to help you in your quest to assist others. If you write off a technology that you don't understand as stupid or useless then you are already too close-minded to be an effective programmer for life.
Don't know why you're being down voted. This is smart.
You linked us to a News Article about Oracle releasing SDK for OSX.. but not the download link... why? 
It works. Except in the same way my current code works. 
So, is this simply Tomcat APIs that focus on the cloud (like Java EE, or Java ME), or is it an actual Tomcat application server based in the cloud that you can host your applications on???
I could re-word that as being "distBetween is less than or equal to the radius" due to the previous comment. My intention when saying this wasn't that it saved resources to only check for less than the radius. I meant to say that it saved resources because it didn't go through the resolveCollision() method unless collisionTest() returned true for there being a collision. You were right and I originally had it like that in the code. Like I said before, the messing around with the code to try to fix the collisions caused me to change minor things that I forgot to put back. My bad =P. It doesn't solve the problem though.
My understanding is those employers generally aren't worth working for anyway :)
My understanding was that the major features of 12 was full support of Java EE 6. 10.3.6 and previous didn't provide support for all of it. I would consider it a heavy-weight enterprise solution, but I'm not sure what feature you're looking for that would shift it into that category for you. We use a lot of the fusion middleware stack at work, but at home I'm more that happy to stick with Glassfish. Glassfish is more than just a servlet container, but it starts up and deploys (for me) in a matter of seconds vs. minute or more with Weblogic. I do have a lot of love for JBOSS products as well, so I don't think jboss AS (are they up to 7 now?) or Glassfish would do you wrong if you need EE6 support. 
I have a very basic Java program for my browser. For some reason, google search does not work as it should. I figured maybe Javascript or flash had something to do with it. Maybe it's just a problem with the pane not updating the display from the new url.
I simply don't know...lack of sleep? My late night coding has finally caught up to me. Why wouldn't I just link the actual oracle page? Maybe that would have made it all too easy? Teach a man to fish...you know what I'm talking about.
What is the companies support experience in currently? They will probably need to spend more on resourcing and upskilling if they have a Tomcat experienced support team. Technically speaking there is not a lot of difference. Both will perform well, both can be configured easily. What are your reasons for using Jetty?
Well that's the idea I have. I don't want another team to support the application like App Server team kinda.. It should be app operation team. Plus from the devops perspective I really like the idea of running as a service than running on a separate web server. In my tests, Tomcat went up to 1-1,5K request per second for a standard echo service vs Jetty went up to 6-7K with their default configurations.. I mean that's a lot of difference. And application is going to be session-less app. I just don't wanna try something that nobody had good experience..
My favorite is still [regexpal](http://regexpal.com/)
Well, no DMZ or side-by-side deployments. But there'll be definitely load balancing for automatic failovers for HA maybe with VM usages to increase the HA. What do you mean by DR? 
Disaster recovery - node/cluster/site failure like hardware failure, power cut, data corruption etc. Usually involves a plan for moving to another system or restoring the system with zero to minimal downtime.
Oh, yeah we have to have DR included. I think we'll be okay with 4 or 5 9s. But not sure if using tomcat here would be any help for that.. DR doesn't necessarily care about system, it's rather about TXs and data, don't you think?
Interesting findings with Tomcat 7 though.. It seems like performance for a few concurrent users is dramatically increased. I was able to see 4K/s for around 10 concurrent users. However 100 concurrent users for the same test is around ~150/s. For Jetty, same test resulted 3500/s for 10 users, ~6500/s for 100 users. PS. Benchmark is done in i7 1.8Ghz solid state macbook air
You can look at Grails in my opinion. It's built on the spring framework, uses Groovy for coding. You can use it to have an easier transition from php (groovy is a dynamic language) and it's more "productive" than java+spring. The other developers in your company can easily code in groovy if they can code in java. If they still want to use pure java, it will be easier for you to learn to use spring or any other mvc java framework. The Grails documentation is very good.
Ok, just trying to work out the positioning of the WebLogic product. You never know with Oracles naming schemes
**TOMCAT** I used to say that they were equivalent more or less. That was until tomcat included the ability to have parallel versioned hot deploys. You can now have multiple versions of an app running at the same time. A user will maintain the version they have for the duration of their session. All new sessions work off the latest version. It allows for zero downtime hot deploys during the day. [http://tomcat.apache.org/tomcat-7.0-doc/config/context.html#Parallel_deployment](http://tomcat.apache.org/tomcat-7.0-doc/config/context.html#Parallel_deployment)
I use [Regex Buddy](http://www.regexbuddy.com/). It practically writes the code for you as well. 
Isn't there anything better then regex out there? Something that would accomplish the same goal, but be easier to write and maintain.
Perhaps WLS 12c got better but I really doubt it. I have to work with it *everyday* and it's a real mess. Classloading doesn't work correctly, LOTS of very outdated libs leaking into the application classpath, making dependency management a hell on earth (even with maven!). Most of the time, the solution is "use prefer-web-inf" but then again it's know to cause even more problems. Developing on it is almost impossible: after a few (like 5 or 10) redeploys (yes **redeploys** not hot deploys) it starts to get so slow that it can take like 1 min to open ANY page (even the console). And our production servers need to be restarted on a daily basis for correct functioning. Again, maybe they got it right for 12c but with JBoss, Glassfish and TomEE around I wouldn't recommend it even to my worst enemy.
But, whats wrong with grepping a test file?
It wasn't a bad servlet 2.3/2.4 container. The problem was the terrible oracle apis like the oracle XML parser, class loader problems (old asm.jar via toplink), and the broken data source connection pool implementation. An oracle rep promised a migration path to weblogic from oc4j so there's that.
but it calls roll() which returns an int.
I struggle with posts like this because I don't want to do what is obviously homework for someone, but I also like to try to help people learn. Here's the hints I'll give you. 1) Letter casing is important. Your class filename &amp; the class name should match exactly. Also, standard Java convention is to use capital letters for class names. 2) int die1 = new rollingDie(); is a very descriptive error message actually. The 'new' keyword is used to create an object. You are creating a rollingDie object. Carefully look at what you are trying to do with that rollingDie object, namely what are you trying to assign it to? The same applies to your other 'die' objects. 3) Your constructor is just straight up wrong. You should review what you have learned about constructors and clean that up.
rollingDie() should be your constructor that returns an object of type rollingDie, not an int. For constructors it should just be "public rollingDie()" get rid of roll() out of the constructor and change diceTotal to: diceTotal = die1.roll() + die2.roll() + die3.roll(); Also by convention classes are capitalized so RollingDie instead of rollingDie
So? You didn't return the value that you got with roll(). In fact, you didn't return anything. And you're using new, but rollingDie is not a constructor.
1. capitalize your class name. 2.Make a class die, not rolling die. The object is a dice, it can roll. Think of it like that. public class Die{ //a private class variable to store your number of faces. private int numberOfFaces; //This is your constructor. It should just instantiate the object, and set the number of Faces public Die(int numberOfFaces){ this.numberOfFaces = numberOfFaces; } //I am pretty sure Math.random() returns a random double between 0 and 1. Multiply it by 10 to get a number between 0 and 10. Then floor it, that gets rid of the decimal. The % symbol is the "modulo" symbol. x%y = the remainder of x/y. That value will be between 0 and y. public int roll(){ Double randomValue = Math.floor(Math.random() * 10) + 1; int rollResult = randomValue % this.numberOfFaces + 1; return rollResult; } } Note: I wrote this all in the comment on reddit, never tried running it or compiling it. But its the right idea.
you could use the provided data structures as a bench mark for testing your own implementations, but your get better tests by testing the desired behaviours, ie_ put two things on your stack, assert your stack has a size of two, pop one off and assert the new state, etc but really, you should be asking yourself why you're writing your own implementations - the only right answers are "I need custom behaviour not provided out of the box or by the great collections APIs that are available" (apache or google) and "to learn how they work", in which case you shouldn't be too worried about anything more than basic testing since you're not going to push your "just to learn" code into production, right?
I see, yes, Dice being an object as oppose to an action. Thanks!
If you were to need some data structure that isn't provided by java.util or a library (e.g. [Google Guava](http://code.google.com/p/guava-libraries/)), using JUnit is a great way to test and document that everything is working the way it should. Generally you'll want to be relying on libraries for common things. Tests really shine with your application's business logic -- such as merging two objects together, complex calculations, etc. There are two distinct ways of testing with JUnit. The older: assertTrue(someBoolean); assertEquals(someObject, someOtherObject); And the newer, more fluent [matcher](http://kentbeck.github.com/junit/javadoc/latest/org/hamcrest/BaseMatcher.html) style: assertThat(someBoolean, is(true)); assertThat(someObject, equalTo(someObject)); I strongly favor the matcher style because I think it's more readable, and the failures are much more descriptive by default. It's definitely worth the time to learn how to create your own matchers, especially ones that make sense for your domain and the problems you're solving.
One problem is that the refs array should contain complete path names. There is a good tutorial on animation at http://thenewboston.org/list.php?cat=30
It gets really awesome when you discover mutation testing. The ultimate coverage tool. Never had a project disciplined enough to use it in though.
Yes, I had already thought of that. The problem is implementing it. How would i implement this in the program. I had tried a few things but it never worked out.
The only server that doesn't crash under load. Haha, yeah that was its unofficial tag line :) It also started up much faster than Tomcat back then and compiled JSPs in the blink of an eye. Never used its EJB 1.1 implementation though, as EJB itself was kinda sucky in all versions before 3.
You should probably get used to using an IDE that highlights your errors and gives suggestions for fixing stuff. Intellij IDEA or Eclipse are good choices.
well, there's [Glob](https://en.wikipedia.org/wiki/Glob_%28programming%29), but it's not half as powerful.
That doesn't serve as a counterexample at all. The test is supposed to pass; it fails because the code is broken. You're not writing a test that only fails.
It really is an amazing product. If you guys end up buying more licenses, PM me and I can help you out.
Ah, you mean a test that can only possibly fail. I'd definitely agree with that.
You write each test to represent a certain piece of functionality in your code. Then when the test passes you have confidence that the code works as expected. Imagine a project with 1000's of lines of code, tests become essential. If you have 100% test coverage of your code, then you can refactor this code with high confidence (refactoring is tidying up the code to be easier to work with), when you finish refactoring you can run the test suite, if it all passes then you have not broken anything. This would not be possible without a good test suite. Imagine switching out a database for a in memory solution, if you have a test suite you can verify that it still performs the same task. You should only test your own code. All the standard Java libraries will have been tested for you. All you need to test is the code that calls these. A good project will try and get 100% of the code covered by a test. Testing is best done before you write any production code! It's called test driven development. First you write a test for what you want to do, this test will fail, it may not even compile since the code doesn't exist. You can then create the code and when the test passes you can be confident you achieved what you set out to do. Now that you have a passing test you can refactor the code to make it neater, removing duplication etc.. You should always treat your tests as a first class citizen. This means maintaining and writing your tests is as important as writing and maintaining your production code. http://www.agiledata.org/essays/tdd.html 
JRebel is incredible, I can't code without it anymore. Sadly it is now very expensive when you are a regular Java developer. 130$/year for a plugin?? I really hope some similar products will be developed soon so there is more competition!
That random generation method is broken, it will be twice as likely to return either of 2,3,4,5 than 1 or 6: randomValue -&gt; rollResult 1 or 7 -&gt; 2 2 or 8 -&gt; 3 3 or 9 -&gt; 4 4 or 10 -&gt; 5 5 -&gt; 6 6 -&gt; 1 Instead construct a `Random` member field in your constructor: private int numberOfFaces; private Random random; public Die(int numberOfFaces) { this(numberOfFaces, new Random()); } /* edit per wlievens comment */ Die(int numberOfFaces, Random random) { this.numberOfFaces = numberOfFaces; this.random = random; } and then define `roll()` as public int roll() { return random.nextInt(numberOfFaces) + 1; }
Even though it is more work, you will notice that each of the JUnit assert methods has parameters, plus a String field for a message. Add the message on why the test is what it is. It will make your life much easier months down the road when you see an assertion failure, but have no idea for the reason of the assertion. Down the line, it is not always as clear as you may think. Add the message. assertEquals("Event messages should be equal.", expectedValue, actualValue); 
I couldn't recall, but that sounds about right.
I use Intelllij these days but I always used to create a custom template for each of them and use the import / static import keyword to handle that for me. Also saves on some extra typing.
That's not what he means, **but** that second method for declaring array literals is VASTLY superior than the first. Never use that first way. Never ever.
Relative pathnames work just fine, too. That's not the problem here.
I love using rubular
thanks for the rec, I m already reading it!
For serial communication you should use [rxtx](http://rxtx.qbang.org/wiki/index.php/Main_Page) RXTX 2.1 Is the main development branch for RXTX. The namespace used is gnu.io. Unless you have any specific reasons, this is the recommended download. If you need to be compatible with javax.comm then download RXTX 2.0. (I dont know why reddit is not showing my post) 
Thanks so much!
good point - I see where you're coming from. In my experience I've haven't done many apps which rely heavily on such session state - which is always a design goal of mine for web apps...
I tried reimplementing the timer and put the frame.repaint() back in, still not seeing any ducks :( http://pastie.org/3861686
Ok, I think I was able to implement those change correctly, but it still isn't showing a single duck.. Could there be a problem with the DuckIcon class? http://pastie.org/3861840 Edit: I think it concerns the size of the icon. When I tried reducing the return value of the getIconWidth() method in the DuckIcon class, the duck was shown for a smaller area of the screen. The getIconWidth() seems to determine from the middle of the frame outwards, whereas the getIconHeight() seems to determine from the top, down. [DuckIcon Class](http://pastie.org/3861891)
And to add to banuday17's point, look at Spock to see what power this brings. Spock tests are nearly English readable, and very concise.
I had a project recently where I was starting out with Java. This turned out to be a pain, and I eventually switched over to Python. But if you are locked into Java, at least here is what i managed to figure out: * Like others have mentioned RXTX is what you should use fro serial communication in Java * Not sure about what platform you use, but I was on a Mac, and to get it to work I did the following: * To get the RXTX library to work on Mac OSX, follow instructions on RXTX website, and then follow instructions here: http://blog.iharder.net/2009/08/18/rxtx-java-6-and-librxtxserial-jnilib-on-intel-mac-os-x/ You also have to add the JAR to the build path of your project * To get the FDTI drivers, download from here: http://www.ftdichip.com/Drivers/VCP.htm * Follow instructions http://marcosc.com/2011/10/arduino-java-error-serial-port-already-in-use/ Not sure if this is much help, but might get you somewhat in the right direction. Also if you have any specific problems feel free to PM me and I can see if they are similar to what I encountered! 
Agree with lebski88 on using [IntelliJ](http://www.jetbrains.com/idea/). It doesn't have any trouble with the static imports and its shortcuts seem to resonate better with me. When I have used eclipse, I find it fastest to include the class name beforehand: Assert.assertThat(new Object(), CoreMatchers.is(new Object())); From there it's fairly easy to ctrl + shift + m to add them both as static imports.
I'd just be googling for tutorials, but since [hamcrest-library](https://github.com/hamcrest/JavaHamcrest) is open source, you can see how the sausage is made. I find the source of their standard matchers a pretty nifty way to learn. [isEmptyString](https://github.com/hamcrest/JavaHamcrest/blob/master/hamcrest-library/src/main/java/org/hamcrest/text/IsEmptyString.java) is a good simple example, and [isEqualIgnoringCase](https://github.com/hamcrest/JavaHamcrest/blob/master/hamcrest-library/src/main/java/org/hamcrest/text/IsEqualIgnoringCase.java) is a good place to start for TypeSafeMatchers.
I've used this and it works, and was stable not only on linux, but on atom linux on a gumstix board.
Don't. After so many years, I still miss my cpp days...:(
If only Cobertura (or Emma) supported Java 7.
I would recommend FEST instead of Hamcrest. http://code.google.com/p/fest/ So much easier to write tests in Eclipse with type ahead. assertThat(someObject).isEqualTo(someObject);
I stopped using code coverage. It wasn't telling me anything useful. What's a good %? 100%? 90%? I'm probably not going to unit test auto-generated methods or immutable value objects. In a perfect world, sure. But I don't think most people have time to test their toStrings or debug paths (unless they are critical to the application).
Not really, they just offer platform as a service and voila, bloated middleware in the cloud.
At any length, it will not be *you* having the deal with this bloat that may or may not be there ;)
True but I don't know how popular Java 7 is in enterprises. I've been at places that were still running 1.4 :/