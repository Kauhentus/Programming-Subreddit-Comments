Wouldn't it be easier to embed a web browser using javafx's webview or SWT's webview? That's what we are doing in our shop. Business logic still in java, UI layer in html/javascript.
How is UI layer connected to the logic in this case?
Both SWT or Java FX webviews can call javascript methods from java. Do all your business logic in java, and setup or update your view. Pretty simple really. We use a Model View Presenter with dumb view kind of pattern (google it) that works pretty well for this. It's all pretty testable and modular. 
https://dlemmermann.wordpress.com/2015/12/01/cool-javafx-in-the-browser/ 
Cool stuff but it probably scales pretty bad running the app on the server and just render on the client
yes, it looks pretty immature right now. not ready for production. but maybe one day ...
Forgive my ignorance but how does this help Java development? :)
ra4king got it pretty solid. I would also recommend at some point playing with c# for games as well. Not because I personally prefer it, but because the differences in the languages have helped me in designing systems I like better. Knowing both helps me in each differently, and I'd recommend others do the same with many other languages. 
https://www.udacity.com/course/2d-game-development-with-libgdx--ud405 
Are you saying that I can load a file with mixed tabs and spaces into Sublime, and then change the tab width, and then Sublime will retain the vertical alignment exactly as the original? I find this very hard to believe because it's a very difficult task for a computer to get right. I've never seen an editor or IDE that can do it. I have no idea how to do it. How do you get a computer to parse human-supplied artistic formatting?
The beginners guide to Android development by James Cho does a lot of Java game development in the Eclipse IDE. When I first started programming in college it really helped me fully understand Object Oriented Programming which is very important in any programming not just game development. The book can literally take you from no game development experience to someone who fully understands the basics of any game 
Tbh you'll have a lot better time in the CS world if you can find passion in programming as a whole rather than just games programming and development. Follow some beginners guides and learn some basic java and how to formulate a program to solve a problem, and then you'll find a lot more meaning in programming games later on. In my experience, the people who want to program just for games find themselves miserable in classes, and I'd hate for you to get discouraged from the incredible world of computer science. There's so much to learn, and once you see that games are just a tiny part of it, you'll enjoy programming and computer science on a whole new level 
You can download [Java EE 7 SDK](http://www.oracle.com/technetwork/java/javaee/downloads/index.html) which is basically Glassfish with code samples. There are 3 example apps in "glassfish4\docs\javaee-tutorial\examples\case-studies\".
I would agree if you were talking about angular 1. Angular 2 cut out a ton of the crap in favor of a more component based design. Angular 2 and Angular 1 are fairly different beasts. Not that I mind React, just that I don't think you are giving Angular 2 a fair shake.
Before I can answer your question, could you tell that using GWT is Java development or not?
That's a problematic notion technically due to some inherent design choices in JavaFX. You can do it using a statefull server as these guys do: http://javafx-samples.com/ But that carries some inherent problems and is an approach most modern JavaScript frameworks avoid. Today most websites use a single page architecture where the logic is written in JavaScript and not in the server. This can only be accomplished using something like TeaVM, DukeScript, GWT or one of the other tools in this field. Unfortunately, JavaFX is just too big for client side download.
Don't be mean. 
No, it wouldn't be "cool as hell", it would be hell! It would be like the old java-plugin again: * not crawlable * not accessible * badly integrated with the rest of the page and the browser (not part of DOM) * slow You'd basically have it's own isolated universe inside a &lt;canvas&gt; that is just wrapped in a webpage. Canvas is for drawing graphics, not for creating your own UI library with text-fields and buttons. The web already has text-fields and buttons. Yes, they have some serious limitations but if that really is a problem for you then maybe your application shouldn't be web-based.
I don't see how this is hard? If you have code like this: \t if (someverylongcheck() || \t someotherverylongcheck()) { Then it will be shown aligned.
Correct! :) So this is to help Java developers easily build a GUI right?
He's not going to be writing the next AAA title anytime soon. Java is fine for Indy titles. 
Yes, you are right. We want to build a system which will give all capabilities of JavaScript frameworks to Java developers when they need to have a Web UI in their projects. Additionally, developers will have an advanced tool for rapid UI development.
I agree with you. wich is why i say that starting with mobile or browser games is fine. but if he's serious as a career choice he might want to invest his time in what is used by the big guys. if he want to do some indie titles for fun than java is fine
Not when I open it with vim
Now you have two tabs, not one, and "if (" is fortunately four characters, Replace it with "LOG.error." And your alignment is messed up. I also used to thing mixed tabs and spaces were a good idea, 20 years ago. And it's "mono-spaced" or "fixed-width" font, not "single pitch". I use Sublime, Eclipse, Visual Studio, IntelliJ, vim, nano, and emacs on a regular basis.
My mistake, I replied to the wrong post. I agree with you: spaces are the only practical way to guarantee consistency and that it's impossible to auto-align tabs if you can change tab width.
Have you ever tried this on actual code from 'the wild'? I have addresses.h from gcc open in sublime right now. The alignment changes whenever I change the tab width. Your example only works on carefully crafted input. What if the code does this? \tif (someverylongcheck() || \t\t(someotherverylongcheck()) { It'll line up fine on some tab widths, not on others. Yes, people do write code like this. Spaces are the only way to make that *always* work as long as you're in single pitch font.
NP
I have it all, but I don't want to authorize a random chat-app. I care for my privacy.
Then you didn't use tabs and spaces for alignment but just used tabs. Anyway you could use codequality checks to eliminate stuff like this. But if you are writing a style guide and it doesn't get followed it doesn't really matter what you mandate cause people are just gonna do whatever they want anyway.
I was specifically talking about sublimetext.
The best way to find out what you're worth is to go out and interview. Aside from this: this sub is about Java as a technology mainly. Your question is a generic CS career question and for this there's /r/cscareerquestions.
Nice share!
http://www.java-gaming.org/ and you can find a lot of video tutorials on youtube In addition the libs others mentioned there's also http://jmonkeyengine.org/
Must be an interesting website... domain submitted from|count|% :-|-:|-: [chalkstreet.com](/search?q=%28and+site%3A%27chalkstreet.com%27+author%3A%27Su9a%27+is_self%3A0+%29&amp;restrict_sr=off&amp;sort=new&amp;feature=legacy_search)|24|100% subreddit submitted to|count|% :-|-:|-: [InternetIsBeautiful](/r/InternetIsBeautiful/search?q=author%3A%27Su9a%27&amp;restrict_sr=on&amp;sort=new&amp;feature=legacy_search)|10|42% [dataisbeautiful](/r/dataisbeautiful/search?q=author%3A%27Su9a%27&amp;restrict_sr=on&amp;sort=new&amp;feature=legacy_search)|5|21% [food](/r/food/search?q=author%3A%27Su9a%27&amp;restrict_sr=on&amp;sort=new&amp;feature=legacy_search)|2|8% [GRE](/r/GRE/search?q=author%3A%27Su9a%27&amp;restrict_sr=on&amp;sort=new&amp;feature=legacy_search)|1|4% [java](/r/java/search?q=author%3A%27Su9a%27&amp;restrict_sr=on&amp;sort=new&amp;feature=legacy_search)|1|4% [Android](/r/Android/search?q=author%3A%27Su9a%27&amp;restrict_sr=on&amp;sort=new&amp;feature=legacy_search)|1|4% [OldSchoolCool](/r/OldSchoolCool/search?q=author%3A%27Su9a%27&amp;restrict_sr=on&amp;sort=new&amp;feature=legacy_search)|1|4% [gaming](/r/gaming/search?q=author%3A%27Su9a%27&amp;restrict_sr=on&amp;sort=new&amp;feature=legacy_search)|1|4% [Documentaries](/r/Documentaries/search?q=author%3A%27Su9a%27&amp;restrict_sr=on&amp;sort=new&amp;feature=legacy_search)|1|4% [videos](/r/videos/search?q=author%3A%27Su9a%27&amp;restrict_sr=on&amp;sort=new&amp;feature=legacy_search)|1|4%
Agreed! LibGDX and a good book shall take you far and beyond
The success of a developer is how much he has produced, not how many bullshit buzzwords he knows. 
Hope no one passes a `LinkedList` to that `reverse()` method or GC will be their least problem. Better: List result = new ArrayList(list); Collections.reverse(result);
This is insightful for me, thank you! :) As a java *business-app* dev who's in love with the idea of testing I have often struggled with the effort to write unit tests for e.v.e.r.y.t.h.i.n.g vs the pay-off doing so brings. Lately I have started to feel that really what's most important are functional tests, not so much unit tests; but this has left me feeling a little bit dirty; this, however, feels insightfully liberating: &gt; YMMV in a pure scripting language (i.e. no static syntax checker at all) that needs the unit test step to guard against typos AHA! Maybe 100% unit-tests aren't required in java, after all, because the language itself has a certain level of basic "testing" baked in! Wow, never thought about that before. Of course, if I were developing an API then I'm sure I would feel differently. But I'm not. Functional tests are where it's at, unit tests only where necessary. Thank you.
There are 2 cases: 1) You pick something and the rest follows =&gt; you take the one you think is best 2) You pick something and noone follows =&gt; it doesn't matter what you take So saying mixed spaces and tabs is bad because noone will follow it is wrong. 
&gt; IDE handles this for you This must be a really annoying language feature if you need IDE do declare imports ;-) BTW, not everyone use IDE all the time. &gt; but this brings no real benefit That's because my example is fairly simple. Imagine 100+ lines of imports with long package/classes names. Such monolithic block of text is barely readable even with IDE help.
http://lihaoyi.github.io/hands-on-scala-js/ http://lihaoyi.github.io/scala-js-games/ 
https://github.com/eddyson-de/tapestry-react http://mail-archives.apache.org/mod_mbox/tapestry-users/201512.mbox/browser 
&gt; IDE handles this for you &gt;&gt; This must be a really annoying language feature if you need IDE do declare imports ;-) BTW, not everyone use IDE all the time. And??? The point is, the problem is already solved with a tool that works just fine. And for the time you aren't in an IDE (which, honestly, for big app java dev, if you aren't using an IDE 99% of the time you are doing it wrong anyways), this really is not that big of a deal. &gt; That's because my example is fairly simple. Imagine 100+ lines of imports with long package/classes names. No need to "image 100+ lines of imports"... that's exactly the sort of work I do professionally every day, all day long. &gt; Such monolithic block of text is barely readable even with IDE help. Anyways, what are you doing reading the monolithic block of text? 99% of the time you don't need to be reading those lines -- just collapse them! The 1% of the time you really are reading them, you are typically looking for something specific, 1 of 2 things: 1) unused classes -- the IDE will highlight them, very easy to spot! 2) what package a specific class belongs to -- since you are looking at a specific class, just hover over your class declaration and the IDE will tool-tip and show you that specific import! Really, this is mostly a solution in search of a problem. No offense, but I suspect you are a dev used to working in a different language and just are annoyed with this aspect of Java that's different; just give it time, it's like learning a latin-language when all you've known previously is english; you'll adapt in time. 
I do not recommend Java related certifications. Quite frankly when we see those listed the joke is we should throw away the resume. So please don't believe that a certification is going to result in a job. That said it doesn't *hurt* and on a sparse resume may help. In particular though it might get you past the HR manager or recruiter and into a room with an actual engineer. If you decide to go that route do so with your eyes open and consider the costs and benefits. One thing you should consider is your *location*. You need to be where the jobs are. I don't know where you live and I'm not asking, the point is if you're serious you may need to consider moving. While there are remote jobs they are a minority, especially for someone who is looking to get into the industry. Another thing you can consider is getting in under false pretenses. Figuratively speaking of course. If you can't find a job as a developer, can you find a job testing? Or in IT? Or in management? Or as a PM? It's quite often easier to make a move once you're inside the company. At that point you can demonstrate your skills, build relationships and have a smoother transition. I've had quite a few friends that started somewhere related and then moved into development. Last but not least if you have difficulty finding a job in *Java* consider alternative languages. For example a JavaScript position might be easier to land at first. Look at the companies you want to work for, the job descriptions in particular. What skills and languages are they after? Even if it's Java if you find they're looking for Spring you're going to want to learn some Spring first. Saying I'm a "Java Developer" is kind of like saying I'm a "mechanic", it doesn't tell the whole story. Edit: As a car salesman I would think there's opportunities for you to use this in your every day life. Build a simple UI or basic web front end that helps you in your daily job in some small way. Then iterate and build on that, perhaps other colleagues will be interested. For all I know you might convince the dealership to hire you for contract work.
1 - This can be a pain but breaking your application into modules can help but yep a quick machine with lots of memory helps too. Another thing is to keep the actual views really dumb and use controllers that doesn't depend on GWT libraries and feed all the state to the views. I tend to get the controllers working well with unit tests and and mock plain Java views first. This means I can go fast and don't have to actually do a GWT compile until I am ready to work on the actual views. However using SuperDev mode is good if you are playing about with layout. 3 - I generally don't use CSS resources until I need to. 2/4 - If you are having issues with custom widgets/mobile compatibility why not try something like gwtbootstrap3? It has worked well for me.
I don't believe that it does work, and I've yet to see a large project where it does. Would you know of one?
In my opinion, it's easier to do this from Maven or Gradle, then import into Eclipse. (Waaaaay more portable, too)
Look at nodejs 319k req/sec and all its hype.
I have absolutely no idea what opensource projects use.
I'm no pro on feign (just looked at it on your prompt). It looks like feign doesn't support as many use cases for callback style code, either rxjava or a literal callback (retrofit 1) or the new call (syncro)/enqueue (async) from retrofit 2. Personally I also find the API to be cleaner on retrofit one example is `@POST("/account/{id})` vs `@RequestLine("POST /account/{id}")`. Glad to see the competition though to make both better!
You don't run Windows 2000 because it's 15 years old and unsupported. You don't run QuickBooks '99 because it's 15 years old and unsupported. But you're still running vital company infrastructure on a 10 year old platform that is unsupported. If you're nervous about that application going down permanently, it might be time to discuss a replacement strategy while there are still options.
You can say it is a content management system for their business and WAS is the central control. You can tell them that if WAS does not get updated and refactored it could get hacked, it is slowing down the business process etc.
I got 2 years professional web development out of a lesser rig. (Maven, Spring, webmvc, Tomcat) You should be able to develop fine. It won't be super speedy, but it will be comfortable enough. I second others suggestions of getting a high resolution display. That speeds dev up more than a faster cpu. Determination trumps cpu and memory for most tasks. Edit... Wasn't intentionally replying to /u/RevThwack... Doh!
If spring is not a problem, and you're working with AWS. I would recommend taking a look at Josh Long's repo on git hub. https://github.com/joshlong/
See sidebar: &gt;Please seek help with Java programming in /r/Javahelp!
I've used both on a couple of projects. I preferred Retrofit: * Has `@QueryMap`annotation out of the box to pass multiple query parameters as a `Map`. You can accomplish something similar with Feign and its `Encoder`, but it's not as intuitive. I would often forget to set the `Encoder` and it would blow up at runtime. * Retrofit 2 has support for pagination URLs. I didn't see an equivalent for Feign. To be fair though, I didn't really check that extensively. * `@GET` and `@POST` are more dummy proof. I remember doing `@RequestLine("POST/api/blah")` (no space) and not getting an error until runtime. There's also the added benefit that you can use your IDE to search for those annotations. * Retrofit 2 introduces the `Call` abstraction which gives you headers when you need it. It's nice to have the option. 
This is just bad management. I mean, people who don't know what WAS is, shouldn't have any power over deciding whether to keep using it or not...
&gt; the problem is already solved We finally agree that it's the "problem" ;) Let's autofold ALL code - problem solved! &gt; Anyways, what are you doing reading the monolithic block of text? Yes, sometimes you need to read Java code.
If you're a consultant: "It doesn't matter if _you_ think we need to upgrade or not. We need to upgrade." If you're an employee: Power-point presentation of "cost savings" of WebSphere 8.5.5 over WebSphere 6.1, along with a timeline of when the upgrade pays for itself in terms of developer hours.
Wow, shame on me that I am nervous about our 'old' master indexes based on Lucene 4.x
Hence "copy if you're actually going to mutate either List".
Describe WAS as the thing their Java applications run in, which is exactly what it is (though you imply there's only one application, are you sure you need a whole application server?) Why do you need to upgrade? Because support for the version they're using now ended 2 years ago, so they're paying the IBM support contract for nothing, because any problem that might occur will not be fixed until they've upgraded. You probably want to be able to use Java 8 syntax and all the other nice new features. It's management that will have to decide whether it's worth it for them. If the migration costs 10 million, but the potential benefits are worth a few thousand, well good luck convincing them. 
Yeah. Once again, reading to the end would have been a clear advantage ;-)
Totally understand your position. There are always people trying to abuse the system and "no new accounts" are maybe the only way to stop it. It just makes it super hard for me as a non regular reddit user to get even started. And those "harsh" comments don't help very much either :) Anyway I would still love to get some feedback from the Java community here about what we've done with CloudRail. Do you see any way to get it posted? Just have a look on the project. It's made by developers for developers and it's even completely free. So absolutely no reason to spam :)
I assume that some of the other accounts who submitted this were yours; you don't have to answer that. Therefore, I assume that our meeting here has clarified what the overall situation is to some of those other accounts, too, so to speak. I mean, one of the reasons you got fire was that, as the overview shows, some submitters of cloudrail are shadowbanned and, like you, have somewhat generic account names, which screams "spam going on!". It's *forbidden* to evade (shadow-)bans by making new accounts! But let's believe in something like a fresh start. I removed cloudrail.com from the domain ban list for now. This also means: If you now intend to make one post right away that links there, do so. For everything else, you'll have to be considerate again. In case you, umm, know some of the other submitters, maybe tell them about the no-evasion rule and also remind them of these: https://www.reddit.com/wiki/faq#wiki_what_constitutes_spam.3F https://www.reddit.com/wiki/selfpromotion Just bear in mind that in principle, it doesn't matter how well-meaning a violator of the rules is.
You're absolutely right. Done: http://mail.openjdk.java.net/pipermail/jdk9-dev/2015-December/003336.html
and just got my old account back :) that was easy
Thanks for posting to the list, really looking forward to your suggestion being added to the API, would be quite nice addition (much better than the original).
Care to explain your reasoning?
Aside from Play, which I've tried twice over the years (v1.2.3 and v2.0) an have since sworn off forever, I don't know any buzzwords from that list. I've been a full time Java Developer for 12 years. I hope this isn't the year it all falls apart! 
I think you do not understand the JCP process well enough. Through JCP anybody can submit a proposal, which will become a JEP. There is no distinction between real hard problems (there is a JEP for value types, for example - 169), trivial ones (such as 117), between broad changes (Jigsaw) and very limited in scope ( http://openjdk.java.net/jeps/177 ). The fact that there are people working on JEPs that you think are useless does not mean that people do not work on JEPs that are important. It does not even mean that they are working less on them. If you want to change something in Java, you can submit a proposal to the JCP and go through it.
You make some very strong points. Taking them into account, I'm still on board with JEP-277.
I /agree. Considering "[5.0.9](https://www.reddit.com/r/java/comments/3xriug/rapidoid_509_released/)" was released just 8 days ago and we all heard about it then... If OP posts every couple of months for major version updates (or something else exciting) - I'm cool with it. No one cares about a 3 digit release bump.
I already do this with plain Maven. I have a properties file in the resources folder and enable filtering for it. That allows me to get the version and some other information in the result JAR.
Interesting framework but the website looks really noisy
Regarding version.java file, if we generate it. Would it be added to the Java folder of the project?
You're suggesting *everybody* be allocated on the single hard feature, while *nobody* should work on trivial things that deliver tons of value compared to the effort needed to invest there. I've seen that with many customers, especially those ones that were driven by management hierarchies, rather than engineers. Once something burns, everybody just stops doing everything they were doing and start helping with *the important thing*. No fun place to work there, trust me.
When I evaluated them, Feign was missing the ability to set arbitrary HTTP headers on a per-request basis, which I needed for a particular REST service's authentication. But it's been a while, maybe they have the feature now.
The benefit of anything is expressed in ROI. You invest (cost) and at some point, you get returns (profits). Returns can be caused by anything like: - Better quality (returns: less hours spent on QA) - Better support from IBM (returns: less hours spent on QA) - New features (returns: faster development) - Lower license cost if any (returns: obviously lower costs) - Etc. If you (the expert) cannot describe the above benefit, then maybe you (the team) don't have the benefit, and no analogy will help you.
Why not just let maven-jar-plugin add that stuff to the manifest for you?
Stop indenting. Problem solved.
+1. Also, a lot (most?) of the "cosmetics" are refactorings/cleanups that come out of working on the big, important features, but independent and trivial enough to be pushed early.
Yep. Like [Hal fixing the lightbulb](http://www.dailymotion.com/video/x2gp98t) ;-)
Does this mean we get to use lambdas in five years when few enough people use marshmallow that we can safely drop support? Or do they have a plan for backwards compatibility?
Not single hard feature. There are several important missing features that are not in development now. And other features are developed too slowly.
I'd agree if Oracle implemented important features fast enough. 5 years to develop values types (and 10 more years to understand the necessity of value types) is too much in my opinion. If Oracle cannot do both major and minor features fast enough it should focus on few important ones.
&gt; In fact, if Oracle hadn't acquired Sun, we might still be lacking lambdas. That's good point.
How is debugging with retrolambda? I usually avoid post compilation tools because I've seen them make debugging more time consuming. 
I think that I'll just end up appending "Commit" to the end of the method names as a reminder to call the update method to actually "push" the changes, hah.
Does this mean JAVA SE code will finally work in Android? Btw wasn't Google using their own implementation of the Oracle API?
The title is perhaps misleading, though, afaiu. They are still *using* the same APIs, just not reimplementing them. In fact they are using the OpenJDK implementation, so really the landscape is far *less* fragmented this way. Which is exactly what Oracle wanted to begin with, albeit for less benevolent motivations. Regardless of the principles people feel have been violated by that court case, let's not pretend Dalvik and all that was ever a *technically* productive move that had any other purpose than saving Google a bit of money. Edit: away some extra words.
Except Retrolambda introduces performance costs that standard JVMs don't suffer from.
Oh sorry! I started an edit then got bored and gave up half way, I must have accidentally hit 'save' instead of 'cancel'... I've gotten rid of it now, but I think I was just gonna say something like: &gt; they never would have done all that if it weren't for wanting to avoid licensing costs".
I'm just gonna throw my two cents here: Whenever I try to write code, I try to focus on code easy to reason about. What I mean is that after a while, looking at the code might not be obvious why you're throwing (or catching) weird exceptions. Wouldn't be better if the method would work with default values (identity matrix, for instance) if nothing was set? In general it's best to write methods that doesn't rely on previous states, because you can never be sure if those previous methods were called. If it's indispensable to your method, I would advise to receive the information needed as a parameter (might be a new class appropriate for that). That way it's documented (and obvious) what that method needs to perform its work. 
You can't start class name from digit.
 public Reddit(){
Lol someone put this in a JSP once to only happen on Fridays, and it made it to prod
This sounds like a confusing API, and if you can check that the programmer forgot to update the matrix, you might as well just update it there and move on. Anyway, I think such code should end up in some kind of getViewMatrix() getter. So the code would be like: Camera c = new Camera(); c.setViewCenter(...); c.setUp(...); c.setLocation(...); renderer.setViewMatrix(c.getViewMatrix() &lt;- update happens here)
 }
 public boolean repostChecker(Post post) {
 /** Is this really valid Java? */ public synchronized byte toByteArray()[] { return new byte[0]; }
No, mainly because your square brackets need to be after the byte not after the method name.
 }
 public String getDate(){
not sure exactly what you're talking about but sometimes i'll have a boolean variable named "refresh" or something and will use it as a flag so anything that needs the update can set the flag and later when the thing is expected to be updated it will only have to update once and turn the flag off there so instead of updating over and over again it merely sets the flag over and over again and then only updates the one time it needs to
 int meme_num = keyboard.nextInt();
What is this? /r/Python? Get out of here with your snake_case!
Update: I was kicked out of the program on the last day because of tardies (And my class grade was a 97%). The policy is 10 tardies, I had 8. They went back and used 2 EXCUSED absences against my tardies to total 10. This smells of retaliation because of this thread I made. In my opinion, stay away from this place. I think since the Software Guild was purchased by the Learning House earlier this year, Eric Wise is just in it to make money, not to enforce quality teaching for his students. Notice how Eric didnt address my concerns here, rather he made an announcement to the people in the thread (trying to save his company's face?). I get one message a week, at least, asking me how things went. Well, this is how things went. Good luck y'all!
P-P-P-P-PROGRAM BREAKER!!!!
Unable to resolve symbol "what".
[removed]
Dear lord is that actually a thing?
 int i = keyboard.nextInt();
They can actually be after the method name iirc, try it 
This video is to explain JUnit framework with simple example in hindi.
I laughed so much harder at this than I should have.
To explain how to perform unit testing with a simple java class
Since java is utf-8 native, I think there are likely quite a few valid symbols as first chars in names. 
What, your copy/paste doesn't work? 
Even if that is the case, I'm likely to shoot any developer in my team who does it. 
True that! 
If you really want to go down this road, you're going to find out why Java Applets are insecure. I think a better alternative would be to launch a separate Java process on a separate machine (or image/container) and make some kind of wrapper around it (RMI, rest, etc). It's good to know about SecurityManager. But if you go setting a default than can't be replaced, you're going to break lots of apps.
Worse comes to worse, use alt codes. Euro symbol is alt + 0128.
It's a bit of a mess, as the JLS is not quite clear IMO. The section [3.8 Identifiers](https://docs.oracle.com/javase/specs/jls/se7/html/jls-3.html#jls-3.8) gives this definition: &gt; A "Java letter" is a character for which the method Character.isJavaIdentifierStart(int) returns true. And the *example* given below only mentions dollar signs. But if you check the [Javadoc of Character.isJavaIdentifierStart](https://docs.oracle.com/javase/7/docs/api/java/lang/Character.html#isJavaIdentifierStart(char\)) is gives a slightly different/extended definition: &gt; ch is a currency symbol (**such as** '$') (emphasis mine)
Sucks to hear this. But thanks for the update.
public static void main(String[] args) {
 throw new RuntimeException("mwahaha");
Sounds like Eclipse RAP to me. Why did that never get popular?
Plus _accidentally_ included [some decompiled](http://www.fosspatents.com/2011/01/new-evidence-supports-oracles-case.html) binary files (riped directly from rt.jar). Removed later from Android source repository.
Regarding the date, I have changed it to the 24hr format to make it clearer. Also someone already opened an [issue](https://github.com/anirudhvarma12/wmv/issues/1) regarding JSON. Thanks for the feedback :) 
Been using spring batch at work. Nothing but great!
I'm not defending the use here, because I don't think it actually makes sense to name something using a special character unless that special character has meaning either internally to the project, or to the language itself. But it's not that hard to rebind a single letter to a key combo. 
I think Spring Batch solves a very common problem in a good way, the Batch model and API are good. I just wish there was a way to design batch jobs in something like Jbpm since that is easier for visualizing and designing a very intricate workflow.
 }
&gt; It's for server side apps. Right but fundamentally I think it's the same difficulty as sandboxing a Java applet.
Unfortunately I am not allowed to give specifics around your dismissal from the program because it would violate privacy laws in Ohio. If you would like to give us a written release for your information I would be happy to share complete details about the numerous interventions, counseling sessions, and offers of personal tutoring we had with you about numerous issues before you were removed from the program. I can however share a general statistic- In more than 2 years of running this program, we have removed only 3 people from the program for issues involving professionalism. So readers here can keep that in mind as they weigh this post against our exceptional placement rate and dozens of 5 star reviews on places like quora, where you can personally contact the authors if you like. As an aside, since the accusation about the money really bothers me, I don't make a dime off enrollments anymore, I'm an employee now. My role at the Guild is curriculum and instruction and I currently spend my days editing and creating content and improving quality.
4? Why 4? Why not **S** or even **D**?
Thank you for this knowledge, I will use it to unleash new kinds of evil on the world.
yes
// at least it wasn't a dick joke
But you still have to worry about the users keyboard layout. I have no idea how to make a euro symbol much less a ruble. Looking up some keyboard combination for a symbol is still not something a programmer should have to do due to someone elses poor programming practice.
as someone who frequents both boards, the daily programming board there will give you harsh but true criticism on your code as one anon put it: if you don't like the criticism go back to the hug box of reddit coding 
one of the few things 4chan is actually useful for, coding and autism.
This is most often the case for years until a new company starts up and passes them technologically, usually full of the old companies employees who know the business domain but are sick and tired of dealing with legacy so they start fresh. But yea, you're right, not everything can be migrated. For that reason, there can be a ton of money in learning older technologies, there are legitimate systems like this that will need to run for years still. We call them digital archaeologists.
You should actually just use a zipping tool to open the jar. No need to install the whole JVM just to get the jar binary. :p
I dont know why it happened, but PROGRESS... http://venturebeat.com/2015/12/29/google-confirms-next-android-version-wont-use-oracles-proprietary-java-apis/
If it is run as sudo.. Yes
I'm pretty sure that's a debugging feature that the dev forgot to turn off.
TIL why Linux is ~~secure.~~ more secure than other operating systems.
Is this some sort of Easter Egg? I can't really imagine a reason for this functionality to exist to begin with.
I liked it 4 yrs back when i first saw it
Sounds like you have nothing to fear about taking them up on releasing all your information. All that I see in this thread is you making allegations, staff of the company in question offering to meet with you to address things, and you leveling personal attacks. I'm not saying you're wrong, but it'd be really interesting to see the actual information.
This is a step in the right direction. Added to this type of information can you reasonably calculate a ballpark cost of failure or a security breach?
This is all good, but even better find a mentor, get to a proficient level, and then attend meetups and other events in the area and network your butt off!
Kill yourself
Meet with me for what? I already met with them.. Im done with the program. My $10,000 is gone. I learned more than most of the people in my class. MOST - not all. 
No
Thanks everyone!!!!
Cute, but wrong place for this kind of joke. 
`System.standardOutput.printLine` - no thanks ;)
http://hg.openjdk.java.net/jdk9/client/jdk/file/7e14ec5734a2/src/java.base/share/classes/java/io/ByteArrayOutputStream.java#l190 That is one of the two cases. I don't remember the other one.
Hilarious.
&gt; I decided to learn .NET from you This whole thread is about you enrolling in Java? As for the instructor, do you have a sign up form or something that listed the instructor you wanted and they didn't give you that instructor? Even if they miscounted the 2 excused absences as you assert, why did you have the other 8? That seems like a lot for a 12 week program. Do they have a refund policy? Why didn't you drop the class earlier if you were so unhappy? Sorry, but in the absence of actual docs this looks like a yelp review.
From what you're saying you weren't removed for academic reasons. I was asking about the offers they made in this thread to meet with you and to take advantage of tutoring sessions. Were those sessions not available? Were they making it up?
They are making up a LOT of stuff. Think about it.. Who in their right mind promotes getting tutoring help but then goes...oops we max out at 30 minutes per day (which by the way is considered 2 sessions because each session is 15 minutes!) If you think Im some kind of fuck up who came here to vent, go jump off a tree. I came here to get advice about how to make the most of my 3 month committment and $10,000 to a Java bootcamp which by week 8 of 12 was a ripoff. My original thread explained the situation and simply asked: Should I switch to the other instructor who I met and actually knows how to teach? After Eric Wise found out about the thread, he came on here and made a public show about why Im a "struggling student" without even know WHICH student I was. Yea.. I was one of the students who ACTUALLY spent hours after class in tutoring sessions, going to Meetups, doing all my assignments and maintaining a 97% in the class. He didnt know that.
&gt; I am totally open to sharing that information as long as you redact my personal identifying information. Easily done, send us signed correspondence via certified mail granting release of all your records and we'll send you a copy of everything in your file. Then you can do what you like with it. &gt; give me permission to release details about the staff members at the Software Guild as well as their teaching methods. What's stopping you from doing that now? The Guild, unlike some bootcamps, does not have non disclosure agreements with students. Students can leave any review they like. Just don't expect a non-response if you take liberties with the facts. &gt; You took it personally A long time ago I realized as a business owner that you can't make everyone happy. I don't have the time or energy with hundreds of students to take things personally. &gt; You allowed others who definitely didnt meet expectations to stay in the program Given that you don't have access to their grades or student records this is pure speculation. You should show more respect for your peers. &gt; When I flew out in April for a day to check out the Guild, I decided to learn .NET from you. That is... strange, since I was a .NET instructor and you enrolled in Java. It doesn't really matter anyways because if you had exceeded the number of tardies in my class you would have had the same result. &gt; Other students had the same exact issue. I look forward to hearing from them, because the exit surveys we do in the course don't agree with this statement. The job placement statistics from that class are right where they should be as well. I wish you well in the future. It's unfortunate given how unhappy you appear to be that you did not take advantage of our refund policy. 
&gt; If you think Im some kind of fuck up who came here to vent, go jump off a tree. You need to relax, I tagged this thread because I have a friend considering bootcamps and the Guild was one of the ones he is evaluating. This is the only negative thing I have seen about it so I'm trying to determine whether you're an outlier or whether the program isn't as good as it appears. Given how angry and bitter you appear, as well as some of the inconsistencies I've pointed out, I'm leaning towards outlier.
Yes. It does. But it's not actually a feature at all. It has no debugging purposes at all. Not even a little. Can't ever see the point in it. 
This explains why double check lock requires reference variable to be declared as volatile.
&gt; It sounds to me like youre the one bluffing You really like painting people with your brush, don't you? &gt; Go have your "friend" do his own research about what bootcamp he will be attending and spending his $10,000 on You also seem to really like looking down your nose at people. &gt; you should be unbiased and present everything to him for review Why do you think I was asking for more details in this thread? &gt; But all the difference is in the instructor I agree, but I also realize that not everyone jives with every instructor. You can't know in advance whether a particular instructor will be great for you personally. What I was trying to dig into was whether this program was being vindictive to you. It doesn't appear that they are. &gt; The tutor knew how to explain concepts in a simple way that made sense. So there are good instructors there, that is good to know. &gt; He really should have been the teacher and I wouldve been happy. Well... that's good to know but I'm not aware of any school that lets you just swap your teacher out mid stride. So is this just a matter of you pitching a fit because the school didn't bend over and do things your way? It sounds like it.
Yes, there was. When umount was invented, the limit in external symbol length (and file name length) was 6 characters on relevant systems.
Obviously it's your word against theirs on that, but I can't help but point out that your inability to get to class on time put you in a position where you could get kicked out. Though I suppose you could file a complaint with the state or something? When I was in college there was a grievance procedure for stuff like that. If you're telling the truth it should be an open and shut case.
Yes, that's what this is. I spent $10,000 and I should be allowed to sit in a class with an instructor that fits my needs. This isnt a school. Its a for-profit bootcamp that sold to The Learning House. The new Software Guild is not like The Software Craftsmanship Guild of the past. 
Im done with you. Its pretty obvious you are or work with Eric Wise. I get your messages within minutes of each other and your words sound just like his. Listen, why are you wasting your time with me? Im trying to help people who are about to invest in a bootcamp. I am willing to give people my entire notes from bootcamp, including every single topic and exercise we did. Im not out to hurt anyone silly man. 
It's really hard to say if this is legitimate because Java has been adopted as a teaching language in most US colleges. 
Highschools too.
Yes, my friend is learning it at his highschool with computer science and I'm learning by myself because mine doesn't have it. :( 
Same here, man. It sucks but I want to learn. 
What action should I take? I am requesting my student records to show my academic records from the Guild here. Should I hire a lawyer and sue them because they didnt give me a certificate that said YAY YOU GRADUATED FROM OUR BOOTCAMP? The reason Im still on here is to prevent people like you who are aligned with the Software Guild from snaking people in. Fuck off. Anyone who is considering this bootcamp and wants all of my notes including everything thats covered at the Guild, as well as online resources hit me up. Save your $10,000 and learn on your own like I did. You can do this. Check out FreeCodeCamp.com The founder was a bootcamp graduate and he started a free online bootcamp. I started it last week and Im super impressed with the quality. I may start something similar or contribute to something like it. 
Thank you, I also go on the subreddit for help and other forums. I also bought headfirst Java and use a MOOC to learn. I'll see if I can get this book too. 
I don't know what stricker means, but I think learning a statically typed language first is good. Objects do have types, just pretending int and string and double are all the same just makes people very confused when they don't work. (Why is 1 plus 1 11?)
Static typing is a big part of it. Basically, anything that helps to catch errors at compile time. 
Depends entirely on focus. Engineering focused roles definitely ought to start with C/C++. But theory focused roles don't need information about inner workings, and can skip that until later. Since not everyone needs C/C++, I'd say it's best to start with something higher level (like Java or Python), and let students pick where to go from there.
Java been dying, but staying at the top for 15 years. I feel like every company ends up trying everything else then ending up back at Java. Android is a big contributor to those numbers. Machine Learning and Big Data APIs are also becoming more popular like, Hadoop, Spark, Weka? First it was Django/Python, RoR/Ruby... I see the same for NodeJS/JavaScript. NodeJS seems pretty cool and is well designed for performance, but I can't see if there are any 'frameworks' that aid in web development. Actually, those technologies are fine with right people. With growth, sometimes companies ending up going to commercial Java product.
I guess that Android contributes to those numbers more so than the number of CS students. There are only so many CS programs out there with so many classes. There are millions of Java developers out there.
On the java security prompt screen. I already feel safer. Hacker finds way to use color wheel to disable security settings.
I really enjoy this framework, its excellent for prototyping or putting together a simple api while staying within java without having to deal with some of the annoyances of kicking up a spring or play application. Though im not so sure id use it in a production environment yet. 
I think the reason java is the primary taught langauge for schools is because it's a sufficiently high-enough-level language with strong static type system, which I believe is the key to expressing logic and algorithmic methods needed to bootstrap the learning of lower-level languages 
Are there any nearby universities? Sometimes they have programs that allow students from local high schools to enroll. In any case, ask a counselor at your school if you haven't done so already.
By that logic they should start with assembly then. 
I could see a case for C. No way for C++, though—too many gotchas, and it would be terrible for teaching OO. I'd rather see a combination of C and something higher-level (either something practical like Java or a more academic language like Smalltalk). My school used C/C++ for a second semester data structures course. No idea what they're using now (this was over ten years ago).
I hate this argument because it's always biased by the lowest level of abstraction that the commenter is familiar with. People that have done systems programming say you should go as low as C. People who have done embedded systems you should go as low as assembly. If you've done circuit design then you say it's digital logic. I could easily make the same argument and say CS should start with electron physics. Abstractions exist for a reason - to make complex systems easier to understand by hiding their details. I don't see any inherent reason why learning or not learning those details is definitely better. It all depends on whether those details are impactful to the work you are doing. If you choose to study at a higher level of abstraction you'll be better at working at that level of abstraction. If you choose a lower level you'll be better at that. I actually tend to think the higher levels of abstraction are more useful because most of the lower level problems are pretty much solved. You honestly don't need to understand how memory allocation works because somebody has already figured out the optimal solution(s) to that problem. That's not to say there's never a case where you would need to learn about it, but it probably doesn't need to be part of the basic toolkit.
if it's tiobe they might be picking up the google/android java story. They count trending and google rolling their own API in future android is all over my newsfeeds.
With web application development, Java/Spring backend has been relegated to JSON in / JSON out, with a JavaScript SPA framework clients (like ReactJS or AngularJS) being the consumer of JSON produced by the backend, so concentrate on learning how to use Spring to produce JSON responses. Long term, JavaScript has also been making inroads in the backend via NodeJS, so you could use JavaScript from the frontend all the way to the backend, without having to language context switch, making you a full stack isomorphic universal JavaScript developer.
People are creating new languages and frameworks with very low entry level, so it becomes popular for some time before everyone realises it's useless for anything else than temperature monitor and weather panel. Low entry level makes it "competitive" for people who have no idea about industry and software architecture.
Not really, in C it is printf.
Look at actual job sites. Java is usually most in demand.
Edx.org has a ton of free courses from various colleges
&gt; An immutable object is an object whose fields (and specifically non-primitive fields in our case) cannot be modified after the object has been constructed It is a lie. It can be modified with reflection. &gt; Immutability implies that all objects referenced by an immutable container have been created before the construction of the container completes. In GC terms: The container is at least as young as the youngest reference it holds. This means that when performing garbage collection cycles on young generations, the GC can skip immutable objects that lie in older generations, since it knows for sure they cannot reference anything in the generation that’s being collected. I'm not sure, but seems that it is a lie too. GC ignores final modifier in objects.
These are relevant articles for the particular subreddits (and the javaadvent site is an effort completely driven by the community with no advertisement or other monetization strategy) and they are submitted &lt; once per day. However if the *moderators* of the particular subreddits think otherwise I would be quick oblige their wish. Thank you.
Yep
Three days ago: https://www.reddit.com/r/java/comments/3yrtmj/google_confirms_next_android_version_wont/
And there is also https://www.reddit.com/r/androiddev/comments/3yvnmy/analysis_google_moving_to_openjdk_what_that/
Nah... .Net people love Microsoft, it's usually the company they're in who decide to switch to Java. All the ex-.NET devs I've met find any excuse to compare Java negatively to C# 
The problem with point free, from someone familiar with the world of Haskell, is their hard readability. They are just so abstract. Often you write something relatively big nut after a few months is really out to figure out what you just did. Understanding code from other people is as hard as going to Mars. Often I see myself deconstructing them into huge programs that I then analyze, which is time consuming and error prone. You see how in the link they advised against large lambda expressions, and advising in favor of keep readability a priority. Point free takes this to another dimension.
Keep in mind a huge number of those startups will fail (though not because of a PL choice). 
Ok, "I am better than project fuse-jna" according to benchmark (fio) https://hsto.org/files/570/301/385/570301385160406ea268c39c94a23ebf.png JNA is really very slow way to write native bindings, because JNA uses a lot of reflection High performance means the fastest way to create FUSE in java (until java10 with project panama will be released) Benchmark: https://github.com/SerCeMan/jnr-fuse/blob/master/bench/read.ini
Could someone ELI5 what Datumbox is used for? I assume it's to recognize patterns in information? Maybe image recognition kind of stuff?
I could see use for someone wholly unfamiliar with regex, but nearly anyone else would find the builtin `java.util.regex.Pattern` to be a more efficient option.
Or you could just learn regular expressions. People who refuse to learn regular expressions are like people in 1999 who wouldn't learn HTML and preferred WYSIWYG editors.
Have you tried reading the spring documentation? Usually if you just add "annotation based" to your google search you'll get an example.
Well, that depends. If we're talking about Node.js, a lot of people already know JS, so that's a big upside. When it comes to the other ones, some people believe other languages can provide significant productivity benefits over Java. When small programs are concerned, that's probably true: Python is more productive than Java for such programs. But the case for other languages in large software is much, much weaker. Still, some people either believe the hype (every new language has *some* selling point, or it won't be used by anyone or even developed). It usually takes a few years for the downsides to become apparent (e.g. bad performance, bad maintainability, bad monitoring). But I'm not sure it's entirely bad. It's good for the industry to have some players constantly trying new approaches. That's the only way for the more risk-averse of us to learn of new approaches that may end up working.
It is relatively straightforward to convert to a Java configuration from XML. There are plenty of resources online to guide you. If you have specific questions, I'm sure people were would be happy to help. 
I've worked a lot with Eclipse and later IntelliJ (years in both cases), and I would absolutely recommend IntelliJ, and if one of the conditions you mentioned or think of would rather make a different IDE preferable, I would still suggest to invest all energy required to go with IntelliJ instead, because it's just so much better. And also, once you have settled in, you're unlikely to move for quite a while. And when you finally do, then you'll look back and wish you had taken my advice.
&gt; Why on earth would you bank everything on a language no one uses? Is preference and context, if you want to find a job fast, learning a popular language is the way to go. &gt; What could the upside possibly be? You are working in a language were you find yourself comfortable and and which workflow you pretty much enjoy(that's my case). When you commit yourself to a language you are also adopting its tools (apart form itself) workflow, culture, community (if you want to form part of it) practices, etc. A note here is that there are jobs for unpopular languages too where the pay could be even higher than mainstream ones. 
The Community Edition doesn't cost anything and can legally be used for professional/commercial development of any kind. What main features would you mention that make the full version better for Java programmers?
I use NetBeans and would recommend both it and IntelliJ both of which are excellent IDE's with an easy to use workflow. Eclipse has a lot of hidden functionality and that can be overwhelming for a newbie. This varies a lot on what you are trying to do and which toolchain you are using e.g. if you are doing native Android coding I'd go with Android Studio (a fork of IntelliJ). If you are looking at cross platform mobile we ([Codename One](https://www.codenameone.com/)) work best on NetBeans. If you are doing server development it depends on the server stack you are choosing.
Care to elaborate why IntelliJ is so much better for you?
It's not a bug, it's a feature!
syso ctrl + space in eclipse.
Eclipse. It is the defacto standard for the industry. Many online tutorials and textbooks use it in their examples. Many jobs you will work at will standardize on it as their tool. If you learn Eclipse many people will be able to give you help and you will be able to give help to others. You will hear a lot of complaints about Eclipse. Bear in mind that any big application will have complaints. You hear many complaints about Eclipse, because many people use Eclipse. Did I mention that Eclipse is available for free? 
Or it's a troll comment. I agree with your assessment, but thought your reply was not productive to the conversation.
Spring integration. And for a beginner it wouldn't matter at all I don't think.
After using Eclipse for the first 7-8ish years of my Java life, my opinion has changed to prefer Netbeans and IntelliJ. I would start with Netbeans (especially if using maven) and then move to IntelliJ if fancy features were missing from Netbeans. If netbeans has a downfall, it's that the plugin ecosphere is limited. If netbeans has a greatest feature, it's that the plugin ecosphere is limited.
IntelliJ is slicker and faster than Eclipse, If you are in an oracle environment I would suggest netbeans. Eclipse is the worst of the three it is a badly written IDE that failed to grow with the times.
New to programming or just new to Java: Netbeans. Why? It has the best integration with language features and allows you to focus on learning the language. Need to work with frameworks: IntelliJ Why? It is more polished than eclipse and the support from JetBrains is pretty damn good. Expect to work in a typical Java shop: Eclipse. Why? It's free and has been around long enough that a lot of corporations require their developers to use it. It's only knock is the lack of corporate support but if you're used to open source software and community support then you should have no problems. EDIT: I highly recommend that you start off with Netbeans and then move to either IntelliJ or Eclipse. The main disadvantage to netbeans is the lack of support of other languages. If you're a polyglot programmer then you'd like the advantage of being able to use a single IDE (or in JetBrain's toolbox case) a family of similar IDEs.
So, next time someone asks &gt; Care to elaborate why IntelliJ is so much better for you? , I better don't reply at all, because if I do, it's somehow worse? Ok. Will hopefully not forget that.
Wow! That's brand new information to me! In all seriousness. Would have been better to list the most used libs excluding guava/Commons and the standard logging libraries. 
Starting/Stopping webservers out of box. 
All plugins which felt reluctant to update due to lacking Java 8 support can update now without any fear of breaking the API
Support for front-end languages, if you're into Web development. 
lol
its free and other people use it. But its not actually as good as intellij. Projects should be ide indepedent, so there is no reason to go "the industry standard", if it even is.
 Does NetBeans has a VIM mode as good as IDEAVim? 
This is an opinion, and many people disagree
It’s a forum, so there are people writing *and reading*. If you don’t check the logs, fine, but you should respect the readers and at least use the search function when posting. The TIOBE page was posted three days ago. Even if one month is acceptable, three days are not.
That's a bit like saying we should stop posting reddit links to other sites. Those are all different stories and different events, although they happen to be related. 
When it comes to popularity, in many ways, apparently. There's number of jobs available, number of books, number of stackoverflow questions, number of articles on the web, number of github repos, etc etc etc. Tiobe uses 1 metric. Redmonk uses another, as does PPYL (http://pypl.github.io/PYPL.html). Rankings occasionally differ, but largely correlate. Especially if you look at buckers. E.g Java, Python, C#, C are nearly always in the top bucket of every ranking.
Tiobe doesn't use the number of jobs available as your comment seems to indicate, it uses number of search engine hits (amount of sites mentioning '&lt;insert language&gt; language'). See: [ TIOBE Programming Community Index Definition](http://www.tiobe.com/index.php/content/paperinfo/tpci/programminglanguages_definition.html) or [Measuring programming language popularity on Wikipedia](https://en.wikipedia.org/wiki/Measuring_programming_language_popularity) I personally don't really like Tiobe as it has been seemingly inflated for languages that have way more documentation about themselves online (often by the creators) than it's being used compared to other languages. I also find Javascript to be historically underrepresented in Tiobe. Thankfully one got more than enough indices to choose from.
So what?
Assembly over Ruby? VB .Net over JavaScript? PHP in the top 10?
Mostly I'm just pretty damn happy that we have 3 top notch IDEs. When I have to do javascript, $PHP, or C# work... oh I do wish I was back with my java IDEs. (And yes I recognize that some of that is the languages )
The same person is writing the java and the javascript. It's for an internal tool, and the project is basically a way for the person to learn development (has so far done js/html/css, never done any server side stuff). What's the "2016" way of building this? Does it still involve tomcat? All the interfaces are TBD, it's basically gonna be just whatever works, his own js code will be calling the endpoints, so no need for anything fancy or complicated like schemas, SOAP, xml. Just want stuff working as easily as possible (don't want to discourage someone new with unneeded complexity). All files should be served from within this app, I'm assuming that means letting tomcat serve the js/css/html? If there is some better way to set that up we're open to it. His boss recommended the java/tomcard/jsp/spring stuff. They have other apps running on that stack, so I figured we'd stay on that, as the boss will eventually deploy the thing to an internal server. 
Note, something to get up and running with hello world as quickly as possible would be ideal. Like, 1. download bower (2) run "bower init my-java-app &amp;&amp; bower install java-app-with-bootstrap" (obviously made up command, I'm not familiar with bower, and I don't think it does java apps), and (3) "run my-java-app" (4) visit //localhost:12345/my-java-app/hello-world and see it in action. Just want to eliminate all the yak-shaving of figuring out how to get an app up and running. We've been installing eclipse, tomcat, java jdk, git, etc, and it's discouraging for the person I'm helping. We haven't even gotten to trying to create an app yet (that's our next step). 
&gt; java -jar supercoolapp.jar If using this method, how do you ensure that the server is always running, restarts itself, etc. Basically all the things I'm used to having IIS handle (as a .net dev). SPA is probably not suitable for this project, and too much for the person to learn at once. Maybe a future project though. I'm gonna assume authentication and stuff aren't an issue right now. It would be deployed to their intranet and only used by a handful of people on their team to help with a small task. if they need to add stuff like that it could be done later on, I'm assuming. Spring is one of the techs his boss mentioned though. This is a learning experience, but it will definitely be deployed and used by people. I think it's flexible as to what tech is used, but if the boss recommended those old things I think there must be a reason for it (i.e., that's what he's familiar and comfortable with, or he wants my friend to learn those so he can also jump onto working on legacy apps that maybe use that stack). 
It's not about reposts, it's more about posting the same index over and over again each time Java moves a rank up or down. TIOBE as a *detailed* measurement of a language is – as are other metrics – controversial in the first place (someone please exaplain to my how *assembly* is ranked right after Javascript). We all know Java's is in the top ranks, I really don't see a need why we need "OMG ITS #1 NOW" kind of posts.
Spring is a huge beast which has been around about 10 years. There are tons of books. I would serious look at spring boot. find some online tutorials. WRT maven. maven serves as NuGet and MSBuild. It's very pluggable and flexible so you can find tons of other stuff as well. https://spring.io/guides/gs/spring-boot/ before you follow that get a recent JDK (8 please ? ) and maven (http://maven.apache.org ). 
&gt; Who cares about tiobe It amazes me that these subs (not just /r/java) who are supposed to be filled with smart developers are so accepting of a completely flawed method of measuring popularity. What Tiobe does is simply measure the amount of hits it gets in a number of search engine. What it doesn't take into account is the long tail of incorrect search results. Or simply: the shorter your search string the more likely you're going to get false positives. This is completely evident in how 'popular' C is: search engines really can't handle "c language" or similar search queries because the tail of the result will be filled with matches with pretty much any text that has the word 'language' in it. Not to mention that many search engines strip not alphabetic characters like the # and ++ in C# and C++ so you'll get a lot of false positives from those alone.
I know right, their methodology is utterly ridiculous. Even if it worked, it would only really show which programming language has the most newbies dabbling with it...
It also depends WHAT they want to do. Java is now a huge topic with lots of different technologies/frameworks/etc. I have both IDEA and NetBeans and choose depending on the activity.
Wait... So this is still not guaranteed to run?
The main advantage of Tiobe is that it gives you the trend. The fact that Java is more used is an interesting info. Tiobe also clearly states that functional language do not really interest people. People working in industry know that. In addition there is an history. Maybe you don't like it (I guess it is because your favorite language is not popular in this index), but is can be really useful.
Are these just automated monthly builds of the same thing? https://javaserverfaces.java.net/2.2/releasenotes.html They don't have -XX releases as far as I know.
Check "Spring initializr" project on http://start.spring.io/ Choose features that you need and site will generate zipped hello world project that you can import with eclipse and run. Spring boot embedds tomcat in the background and takes care of it so app development is easier and also provides many predefined (changeable) options so you can start developing right away and later add/change things without worrying
You claim that this is meaningless. I though that Tiobe was based on the query and not on the answer, so I don't understand the relation with the search engine in itself. BTW, there is still a trend even if you do not accept it. Tiobe do not try to prove anything at all. The most popular language is not necessary the "best" language. That is just ONE criteria. You can have some others. However, I think the trend that is given is good and corresponds to the real world. 
In my intro to computer science class we were forced into using Dr. Java. Would recommend but I've heard better things about eclipse. 
Can you explain to a Java noob why the comment is worth of "lol"?
Interesting. Thanks!
&gt; even though I used a very reduced set of testcases (5 regexes checked against 6 strings) I'm not familiar with the field. Is there really no larger test case or something? That doesn't seem sufficient to draw conclusions.
I would recommend Spark or Vert.x to begin with, as it does not force you to learn&amp;use 'heavy' frameworks like Spring and should be much productive to begin with.
No, on the Mojarra dev list this was explained. It's apparently an extra stable branch that they started since Mojarra 2.2.8. Since then only fixes with extra scrutiny (whatever that means) go into 2.2.8-X, while those(?) and all other fixes go into 2.2.Y (Y &gt; 8). take a look here: https://maven.java.net/content/repositories/releases/org/glassfish/javax.faces/ You see that 2.2.8-X and 2.2.Y are updated in lock step.
So strange then that this flawed metric correlates quire nicely with other metrics.
Lots of people and enterprises can't just 'decide' to move to a newer JRE, the idea of deprecating functions due to redundant functionality in future standard libraries is pretty ridiculous
&gt; an Austrian film star is governor of California... Come on, what a ridiculous thought. That will *never* happen.
Well not sure if I understand you correctly. But assuming you are using G1 Garbage Collector there is a stacked memory location where Strings get stored and shared across other JVMs. I am not sure however how that works in reality. VisualVM will give you a better output of your used memory probably try using that to identify your problem. Search for new String() (dont call that) in your code that is sometimes a performance bottleneck. 
I don't think Java 7 is publicly supported anymore. I think you need a service contract with Oracle to get the later updates.
Isn't that a fairly common functional idiom? 
Please don't expose an out of date Java server to the world. If this is a public facing application, you really should pay for support to get the updates (including security updates), or somehow move to 8.
Lesson 1: Java is a name, not an acronym, so it's written "Java", not "JAVA".
Window functions? I haven't seen that outside of SQL with an equal power... Have you? I'm curious about links!
Hmm... I wonder if there's OpenJDK for Windows...
1) standard out/error should never be used for logging directly. it's not configurable and inefficient 2) as williewillus - deprecating old stuff needs serious consideration 3) many libraries are used by people who can't use most recent JDK, so they keep supporting older ones 4) JUL is terrible. The best about it is that it's in JDK, but it's very inconvenient to use. E.g.: in Slf4j you write: log.info("hit at x={}, y={} failed", x, y, exception); in JUL: log.log(Level.INFO, "hit at x=" + x + ", y=" + y + " failed", exception); 5) Slf4j has bindings for other frameworks so you can easily replace JUL/log4j/log4j2/logback with sl4fj bridge and use whatever you want. But you can as well use Slf4j and let the user (of your lib/module) decide what implementation he likes without magic with bridges. For libraries JUL might be ok because you don't need to include depdendencies and if anyone wants he can replace it with slf4j anyway (but afaik there's some performance hit in case of jul-&gt;slf4j) 6) I don't know JUL internals that well, but I suppose that it's missing a lot of features present in other frameworks, like async appenders, structured messages or markers. 
I prefer Java over C# as it's better for Linux deployment. Linux is a cheaper and better server platform than Windows. Also, I prefer Java's OSS libraries and tools. For Windows applications, C# is a no-brainer, however.
Practical advise: If you plan on doing web developer-stuff in the future (or now), learn ES, regardless of whether you know C# or Java or Kotlin. You can write your back-end in a million different languages, but you're only going to be writing your front-end in ES, or compile-to-ES languages, so get a head start while you can.
Walk away from "the application vendor". It should at least cross compile with 8.
Uhm. Am I unable to find a "next page" button or did the author get bored half way through writing his tutorial?
You have 3 options: a) pay oracle to get 7u91 b) knowingly run you application on a vulnerable VM. This is a huge security problem and depending what you do it also might be a big legal/compliance problem. c) switch the application vendor because supporting only outdated VMs is not acceptable.
As far as I know, there is no difference in **Hotspot** (which is just the Java byte code interpreter with JIT compilation) between updates 79 and 91, but there is a big difference between the proprietary Oracle JDK Java API, as later versions include critical security patches. If you are using the latest, fully patched Apache or OpenJDK API boot classes instead of Oracle's proprietary API boot classes, then there should be no problem. You can use the older Hotspot with the fully patched open source boot classes, and your system **should** be secure. The only problem is that the unpatched proprietary APIs will still be installed on the server, but you should be OK if you can confirm your public facing application is not using those. And of course, don't use SSL anymore, use only TLS 1.2. 
Makes sense, thank you for the answer
Nice, thx buddy.
Wikipedia notes that [85 and 91 each contain more than 20 security fixes](https://en.wikipedia.org/wiki/Java_version_history#Java_7_updates). That's all you really need to know, really: versions 79, 80, and 85 contain known vulnerabilities that have been fixed in the latest version. Your options for getting Java 7 include: 1. Paying Oracle to get the latest version. 2. Explaining to the application vendor that they need to either support 8 or pay for you to get 7. 3. Using OpenJDK 7. There are no official binaries so this will require building from source code. (Edit: or getting the binaries from a third party, like Azu). Or you can just say "screw security" and run your application with 7u79. I don't recommend this option.
Oh, you're back to spamming your website again after taking a break for a few months? domain submitted from|count|% :-|-:|-: [radcortez.com](/search?q=%28and+site%3A%27radcortez.com%27+author%3A%27radcortez%27+is_self%3A0+%29&amp;restrict_sr=off&amp;sort=new&amp;feature=legacy_search)|26|87% [zeroturnaround.com](/search?q=%28and+site%3A%27zeroturnaround.com%27+author%3A%27radcortez%27+is_self%3A0+%29&amp;restrict_sr=off&amp;sort=new&amp;feature=legacy_search)|4|13% subreddit submitted to|count|% :-|-:|-: [java](/r/java/search?q=author%3A%27radcortez%27&amp;restrict_sr=on&amp;sort=new&amp;feature=legacy_search)|16|53% [docker](/r/docker/search?q=author%3A%27radcortez%27&amp;restrict_sr=on&amp;sort=new&amp;feature=legacy_search)|2|7% [Development](/r/Development/search?q=author%3A%27radcortez%27&amp;restrict_sr=on&amp;sort=new&amp;feature=legacy_search)|2|7% [IntelliJIDEA](/r/IntelliJIDEA/search?q=author%3A%27radcortez%27&amp;restrict_sr=on&amp;sort=new&amp;feature=legacy_search)|2|7% [angularjs](/r/angularjs/search?q=author%3A%27radcortez%27&amp;restrict_sr=on&amp;sort=new&amp;feature=legacy_search)|2|7% [programming](/r/programming/search?q=author%3A%27radcortez%27&amp;restrict_sr=on&amp;sort=new&amp;feature=legacy_search)|2|7% [git](/r/git/search?q=author%3A%27radcortez%27&amp;restrict_sr=on&amp;sort=new&amp;feature=legacy_search)|1|3% [freelance](/r/freelance/search?q=author%3A%27radcortez%27&amp;restrict_sr=on&amp;sort=new&amp;feature=legacy_search)|1|3% [estimation](/r/estimation/search?q=author%3A%27radcortez%27&amp;restrict_sr=on&amp;sort=new&amp;feature=legacy_search)|1|3% [javascript](/r/javascript/search?q=author%3A%27radcortez%27&amp;restrict_sr=on&amp;sort=new&amp;feature=legacy_search)|1|3%
I suppose that when OP says the application vendor "only supports Java 7", it truly means "Oracle JRE 7". I'm not even sure the vendor has heard of OpenJDK. :-/ (That's my experience with proprietary software and Java support anyway.)
Thus the code eventually converges on the Usage Examples from ExecutorService's javadoc. (The article anyway provides a concrete illustration of the usage.)
Another Java *web* framework.
Can't use OpenJDK only Oracle JRE 7. But you are correct on the rest, this is the real world and "dropping the vendor" as others said HAHAHA. Cheers. We might already have a support contract in another business unit, I'll have to look into it.
&gt; I'm pretty sure you won't see much difference, if any. It does not matter. It's a contractual/legal issue. If the vendor says it only supports Oracle JDK, then this is what must be used, period.
It is very okay. But it's not okay to do nothing but – that's against Reddit's [site wide rules](https://reddit.zendesk.com/hc/en-us/articles/20y536499).
If I edit a .java file, does it auto-compile and then automatically show me conflicts occurring elsewhere in the project? Last time I played with IDEA, it wouldn't do that. This is so well done in Eclipse it's something I don't even think about anymore; it's a massive time boost to auto-compile and re-check the code base in the background.
Such as?
writing text backwards and upside down for no reason. check out ihateeclipse.com.
Just curious, what do you need dynamic routing for?
Have you ever approached Roberto in a direct message? He's a nice guy and he'll certainly understand. I just think that the way you present this info is a bit rude - and unnecessarily so. Roberto's work is great.
Yet another victim of the freemium price model who will wander through the valley of tears before realising that the effort of migration is tenfold bigger than any reasonable subscription, but they will continue their struggle forward for pride and vanity will govern their deeds much more than economy. Good luck, brave fighter. May you find a less strangling freemium vendor.
Hi i-see-spam, I'm very sorry that I've bothered you with my "spam". To be honest I was not aware of the rules. Unfortunately the link you kindly posted is not working, but I was able to find them on my own. Thank you. Don't worry, I'll play with the rules now.
Thank you for the comment frugalmail.
I am using in it production without a problem, but I guess it depends on the background of each project. Every technology has advantages and weakness. I don't say Lombok is a must in every project, but it can be used.
That's the inherit danger of using PaaS: it's so easy to get up and running that you may never fully develop a plan or automation to deploy yourself to "bare" VMs running in a cloud somewhere. So when -- not if, when -- something catches you by surprise, you find yourself wondering how to proceed, and spend hours combing through out of date documents, etc, trying to pinpoint the problem, and how to resolve it. RapGenius, anyone? Grab a Digital Ocean droplet or a dedicated server from Hetzner and start deploying docker images. Once you get the hang of it, it takes less than fifteen minutes to deploy your application anywhere Docker is supposed and you don't have to worry about being "stuck" if and when your PaaS is bought out (hi, Divshot!), changes its ToS unexpectedly (Heroku?), or just plan sucks (you know who you are).
I've never heard it named window functions either in FP, that is probably just weird SQL terminology; what I've been showing so far is just normal mapping/filtering/reducing stuff, just bog standard FP stuff. Still on phone but let me see if I can convert yours to Erlang'ish syntax (oh god phone touch keyboards are horrible), definitely not as succinct due to having a larger scope of interactions and variables than SQL, but I am focusing on readability this time (plus fewer weird characters are easier to type on the phone): AVG(player.age) OVER (ORDER BY player.id ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) Hmm, I'm not actually up enough on SQL to be able to determine what that is saying, can you convert that to Elixir'ish/Erlang'ish (or example input/output) for me? Let me see if I can take a stab at it though... # First in long form to see if I can understand wtf the SQL is doing... Players = get_players() SortedPlayerByID = lists:sort(fn players:id/1, Players) # I'm guessing that the 'BETWEEN 1 PRECEDING AND 1 FOLLOWING' mean that the shown part is averaging the 3 values around each ID being the 1 before, the selected ID, and the one after? # Not efficient (not tail recursive, easy to fix though), just keeping it clear as I try to figure out wtf the SQL is... # Having the head and tail be shorter as I'm not sure what the SQL does with those... avg_1_around([Head,Second|Players]) -&gt; avg_1_around(Players, {}, Head, Second). avg_1_around([Head], First, Second, Third) -&gt; [average([players:age(First), players:age(Second), players:age(Third), average([players:age(Second), players:age(Third), players:age(Head)]), average([players:age(Third), players:age(Head)])] avg_1_around([Head|Players], First, Second, Third) -&gt; [average([players:age(First), players:age(Second), players:age(Third)]) | avg_1_around(Players, Second, Third, Head)]. FinalList = avg_1_around(SortedPlayerByID) # If, and that is a big If I figured out the above SQL correctly, the above mess could be reduced to something more like: # Could of course be shortened with a helper function to call, say, players:age since it is so long as-is... Players = lists:sort(fn players:id/1, get_players()) FinalList = lists:zipwith(fun((P1, P2, P3)-&gt;average([players:age(P1), players:age(P2), players:age(P3)], [{}|lists:droplast(Player)], Players, Players++[{}]) Or something list that, code all untested as I am on my phone. Continuing with the same vein if I guess how it works right, the second one might be: Players = lists:sort(fn players:id/1, get_players()) get_around(List, Prec, Foll) -&gt; {After, Rest} = lists:split(Foll, List), get_around(Rest, lists:duplicate(Prec,[]), After, []). get_around([], Before, After, Acc) -&gt; case lists:all(fun(X)-&gt;X==[] end of false -&gt; get_around([], tl(Before)++[hd(After)], tl(After)++[], [lists:append([tl(Before), After, []])|Acc]); _ -&gt; Acc end; get_around([Head|List], Before, After, Acc) -&gt; get_around(List, tl(Before)++[hd(After)], tl(After)++[Head], [lists:append([tl(Before), After, Head])|Acc]). FinalList = [players:age(lists:nth(3, PlayerWindow)) || PlayerWindow -&gt; get_around(Players, 3, 1) ] That is of course fugly, and I already see one way I could clean it up a lot, but meh, still unsure if I understand the SQL right... And of course, if doing this in Elixir (a language on top of Erlang) then you could just write a module that understands the SQL itself and lets you apply it to enumerables so the SQL could work as-is. Would not surprise me if someone has already written such a module actually. P.S. Other than being on phone I am brain-fried from work, just got off, so hopefully not too egregious of mistakes...
I've been using [this plugin](https://chrome.google.com/webstore/detail/javadoc-search-frame/mfgkihmpcjjnijmkchojlbccbmhcdfcd?hl=en) for a long time now. Works with any Javadoc and does apparently the same thing.
~~[site wide rules](https://reddit.zendesk.com/hc/en-us/articles/20y536499)~~ https://reddit.zendesk.com/hc/en-us/articles/204536499 the **4** was somehow replaced by a **y**. I hope you did not enter the url manually :P
How does this compare to [Spark](http://sparkjava.com/) ?
I'm not sure, but it seems that this is entirely about JavaScript. If so, mind that Java is a *completely different* programming language and try /r/javascript. Since AutoModerator already removed your post because it suspects that you're looking for *code*-help (which you're not), I'll leave it removed for the moment. Please come back to me - or just ignore this and move on, because if this is about JavaScript, all is well as it is right now :)
I really don't know. I have *no idea*. But since you seem to indeed target *Java*, I guess your post is not out of place, so welcome back :&gt;
the reason of this is to talk with experienced programmers in everyfields like a .Net C# programmers doesn't think the same as a Java dev or a Node.js guy but node can be played with in visual studio etc with the new tools... frontend backend programmers etc
Yeah sadly corba is still found.
It's bad etiquette to post more than once *without referencing the other post* in the post, because people would unnecessarily do the work of writing redundant comments and would be missing out on discussion (e.g. they could save the post in hopes to gain knowledge; little do they know that ...), and some other reasons I don't remember. You're really taking it to the next level with this. &gt;:(
Even though this is a self-post, this is a clear case of **spamming**. Be careful with such multi-posts as they could get you banned in no time. Your post history shows that you *constantly* cross-post to **many** subreddits. This is not really tolerable and honestly, **stop it**. Select the subreddit(s) better and limit to one, maximum two crossposts. Anything above that is just plain annoying.
Ah, good call. I totally missed that one.
"2.2.8" is the code name of the special customer branch. There's an explicit branch for it. Just look here: https://github.com/javaserverfaces/mojarra/commits/2.2.8
That's no excuse and even if it would be it's really rude not to mention the crosspost. Also you didn't JUST crosspost it to 2 or 3 subs, you posted it to like 8 or so, many of which were redundant. You also crossposted it to subs that aren't relevant: if you want to hear counter arguments to what some random youtuber is saying just post it to a .net sub instead of all over reddit. Last but not least: you really should stop listening to single random persons on the internet and just read and learn by yourself. At your level (complete beginner) what language you use doesn't matter at all. Not until you're a pretty senior developer working professionally for quite some time does it start to matter what ecosystem you're in. 
Ok, removed. I've seen posts before that oozed JavaScript, but at closer inspection it was about some Web related development with Java running on the server or being used as an Applet, so I'm trying to be careful about that.
What I really wish is a standardized section for examples for method calls. Something like what MSDN does.
I'm in a similar position at the moment, but have yet to provide a solution! Previously I've come from a company that provided no message bus and subsequently had a very brittle webservice to webservice infrastructure. In my current role I see the event bus 'pattern' as a way to mitigate that brittleness and provide a better asynchronous model for MS-to-MS communication. Currently I'm simply toying with the idea of a lightweight JMS solution using zeromq or similar. I see this as eventually growing into the full sized event bus we're probably on the same page about, but what tech that is I'm not quite sure of. We seem to be in a similar place!
Looks like Compose helps with scaling microservices by configuring swarm and ensuring other dependent services are aware of further instances via Interlock - both are good tipbits thanks, but I'm not sure it helps with the OP's original question - or am I missing something? (Which is quite probable!)
OP is a troll, please ignore him
The core javascript code is here: http://download.java.net/jdk9/docs/api/jquery/jszip/dist/jszip.js 
I'll take a look at all of that, thanks for the links, all reading appreciated. The last line of your post is what I've pretty much concluded too, even with half a dozen services it soon becomes a maintenance nightmare.
SQS
Not trying to be a smart ass, because /u/gunnarmorling and /u/hippydipster answered your question for me already. Why is it so important to remove getters, setters, and constructors from your code that you are willing to manipulate the AST? I guess I don't understand this trend of removing those things, it feels like we are solving an issue that we made up as programmers. The reality is, it doesn't add any additional cost or complexity to manually generate getters, setters, constructors, where it could really bite you in the ass to let Lombok take care of it for you.
So, Java appears to be closed?
&gt; does it all mean that if I wrote a new Java implementation, I could sued by Oracle because of infriging some of its patents? I am not a lawyer, but as I understand; anyone is free to write and use their own Java implementation, if it is FULLY implemented. Where Google ran into problems was they did not do a full implementation (they omitted Swing for example). Oracle will allow partial implementations, as long as you pay their licensing fee.
That's not true. The API is copyrighted, you cannot copy it without permission, in full or in part.
&gt; But what are these packages? http://stackoverflow.com/questions/23583968/what-are-the-37-java-api-packages-possibly-encumbered-by-the-may-2014-oracle-v-g With sources
So you have provided us next to no information. Are you currently experiencing a performance issue or just executing performance planning? Are you concerned with service bus performance or your actual services? What type of TPS are you looking to be able to do?
Im trying to understand how micro-services won't fall into the same trap as EJBs a decade ago. Im trying to know if people using web services are sistematically facing issues with too many fine-grained remote calls and what do they do to avoid it. Splitting everything into multiple processes is great, but the cost of a network call for certain cases might be too high. 
No. To call it java it has to pass the TCK. They won't license it to anyone doing an open source version.
That's where [API Gateways](http://techblog.netflix.com/2013/01/optimizing-netflix-api.html) can be useful
Java is not open. Enough said.
The devil is in the details. Always check what are the guarantees. NATS documentation claims: &gt; - Always on and available (dial tone) so not consistent or not distributed &gt; does not provide: Persistence so messages might be lost &gt; At most once delivery (fire and forget) again - messages might be lost BTW - why do you think that HTTP calls will not scale, but similar calls with additional 1-2 hops through NATS servers will?
Can we just settle on a definitive answer?
) it's described in the javadoc for the class: https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ExecutorService.html 2) wtf does he call shutdown() in @PostConstruct
One of the big problems with google's implementation is that it's apache 2 licensed. The API is GPL licensed and derivatives of GPL code are not allowed to use a different license than the gpl.
for a good amount of time, android java was a split from mainline java. it didn't support past java 6 completely, it was causing splits in the community, it sucked. worse, neither sun nor oracle saw a penny from google's custom walled-garden java, though both had wanted to license to google. not really a lot to be grateful for there.
They are not grateful because Google effectively fragmented the Java ecosystem.
Because if all Java are implemented in full, then their dream of "writing it once, running it everywhere" may be fulfilled. What Google does fragmented the ecosystem into Android Java and non-Android Java, so Oracle is furious.
So it's like if I write a novel (where novel = APIs) under the GPL while retaining the right to publish it (and any fan fiction contributed to it) under any license, then people can freely copy the GPL version of the novel instead of copying another licensed version of the novel, even though those two versions are identical for a very large subset?
Yup. You could also sell someone the movie rights when no one else can (unless the novel and GPL was printed in the credits? lol). Edit: on reflection this is a poor analogy to the real complexities of commercial licensing.
If you think switching to a better code base, allowing your developers to use new Java 8 language features and limiting Oracle's claims to versions of Android below N is throwing in the towel then that's one strange definition of it. Also, just because Android is switching to the OpenJDK it doesn't make the existing lawsuit go away. Judge Alsop will preside over the trial this spring to determine if Google's use of the SSO of 37 Java API's were fair use. And judging from his initial ruling I would say it favours Google again.
&gt;It is quite strange. While full implementation would be permitted if partial wouldn't. I cannot understand. This is something a lot of people seem to miss. It's because Oracle (and Sun before them, but Sun couldn't afford to fight google at the time) want to avoid fragmentation. They don't want anyone calling it *Java* unless it can run any and all official *Java* code. Android fragmented the space, you could write 100% valid Java code that *won't* run on android because it doesn't implement 100% of the API. This is a bit of the reverse Microsoft did (and got anti-trust thrown at them) with their version of Java. Microsoft added *extra* API features that only worked on windows and called it Java, but then that wouldn't run on other Java implementations. 
I do because google is settling with oracle. Not that i hate that outcome, but google did give up on defending itself. At least I had heard that google is settling. If they are still continuing with the trial for sure then yes they haven't given up.
&gt; why do you think that HTTP calls will not scale, but similar calls with additional 1-2 hops through NATS servers will? I think you're absolutely right. Actually I don't see why either would give the necessary performance to allow to use a fine grained API like in the DDD 3 layer model. Under the hood its all a TCP/IP connection between two processes in two separate machines. So in either case I don't think you can have a fine grained API, and are forced to have a corse grained API, and write your logic as a batch. HTTP and messaging it shouldn't be that different performance wise but I've seen claims that some of these message buses are much faster, and just wanted to see if thats true. These new buses are written with non blocking IO and things like GoLang, maybe there was a siginificant difference. I see a tradeoff with micro-services: If you want to make them really minimal and reusable, you need a fine grained API. But remote calls prevent that. I'm curious how people have been dealing with this tradeoff. I have the impression that in reality many micro-services in production aren't really that minimal, and that's OK. &gt; Always on and available (dial tone) &gt; so not consistent or not distributed can you tell me more about you mean by this, why if the service is always available, it cannot be consistent and not distrbuted? Thx
First, we should separate the motivation for the lawsuit from the legal arguments. Corporations don't go to court to win legal arguments; they go to court to defend or promote their business. I) The motivation for the lawsuit was that at the time, Java's main revenue stream was licensing Java IP (either an actual implementation or the permission to implement the spec) for use in mobile devices. That was how Sun made money off of Java. Java's commercial license allowed people to freely implement the specification as long as they pass the compatibility test, unless the implementation was for use in mobile devices -- this required a paid license. Google then created an implementation of (a part of) the spec, and didn't reach a licensing agreement with Sun (they couldn't agree on a price; I think Sun wanted $25M for the first five years or something). Google used Java IP to directly attack said IP's main revenue source. That is not to say that what they did wasn't legal, but that is why what they did mattered to Sun (and then Oracle) enough to sue them. Google needed Java because developing a language ecosystem suitable for phone application takes years. Google knew that such a lawsuit is forthcoming -- you can't come at a company like that and not expect one -- but hoped that they could defend their actions in court, at least on legal grounds. So that's what the lawsuit was about. II) Now for the legal case. Oracle wanted to get their (in their view -- fair) share of Android no matter how, so they used -- as anyone does -- any legal argument they could think of which would get the desired business result, from patents to copyright. Some stuck, some didn't. In the end, it was the API copyright argument that convinced the (appeals) court. But before I say a few words about that, let me reiterate: Oracle didn't set out to copyright APIs; they set out to get a share of Android, which attacked their main Java revenue stream directly using their own IP. Anyway, Google claimed that APIs aren't copyrightable, but Oracle won that round. Now, I will not go into this question itself -- there are good arguments for both sides -- but only into its ramifications. Google started a massive PR campaign to convince people that that ruling is disastrous for them, but it isn't, and for several reasons. First, it applies only to language-level APIs; not REST protocols, recently also referred to as APIs. Web "APIs" are not copyrightable for other reasons. Second, the court ruled that some of Google's argument regarding the copyrightability of APIs are really fair use arguments, and this is the second crucial point: if something is copyrighted, that does not mean you may not freely use it for some purposes. When it comes to interfaces, one fair use defense has been interoperability. Courts have ruled it legal to "violate" copyright for the purpose of creating components that are interoperable with the original. This means that if you implement an API in order to break vendor lockin, you're probably within your right to do so. However, that is not what Google did in this particular case (Android is not interoperable with Java, only very, very partially). So while Google may still lose the fair-use question (which is still on the table), nearly all other implementors may still be protected by fair use. ------ What about OpenJDK? Since 2006/7, Java has been available under two licenses: commercial and open-source. The commercial license allows free implementation of the Java APIs and has a full patent grant, but requires conformance with the Java TCK (Technology Compatibility Kit) and requires payment if used in mobile devices (this was Java's main revenue stream for a long time). It is also possible to license the JDK source from Oracle under the commercial license for a fee. The same JDK is also released under the GPL. This license is completely free and unencumbered (the GPL itself prohibits any restrictions). It does not require compatibility (unless you want to call the result "Java"), and has no field of use restrictions. It also has a full (implicit) patent grant. OpenJDK's copyleft is not viral either (certainly not more than Linux): applications and libraries running on top of it are unaffected due to the "classpath exception". You can do whatever you like with Java when you use it under the terms of its open-source license: use the implementation, use just the APIs and implement it yourself, use the whole thing or just small portion, pass the TCK, not pass the TCK, fork it or not. You are even allowed to use it to implement .NET. Google has had both of these options for licensing Java (at least since May 2007, but that was still before Android was released). Until very recently, Google chose neither. They couldn't reach an agreement with Sun on the fee for the first license, and didn't like the second (possibly because they feared that phone manufacturers would reject a GPL runtime, classpath exception or no). Instead, they chose to argue in court that the APIs are not Oracle's to license. What has changed now? Perhaps Google realized that given Android's success, phone vendors would swallow whatever license Google gives them. In any event this is a win for everyone: Google wins because they will need to spend less resources on maintaining Android, Oracle wins because Java will now be on Android, and Android and Java developers win because they'll have a better runtime and greater compatibility. This is contingent, however, on Google not forking OpenJDK too much beyond compatibility; the license does allow them to do so. Yes, the mainline OpenJDK project is steered by the JCP (Google, Intel, Twitter, and IBM are all members) and Oracle does have veto power, but that is just the project governance. Anyone is free to fork OpenJDK, as long as they don't call the result Java (unless they fork and choose to pass the TCK). The situation is no different from other large open-source projects.
It is similar to bootstrap, whereas bootstrap places a 12 column grid over the page this is just trying to use as optimal space as possible using jQuery. I do not feel that adding that to Bootstrap will benefit you all that much, you might just use one or the other. There should be no problem using JSF 2.2 using the passthrough attribute.
Without further information about the requirements I can only suggest [Apache Kafka](http://kafka.apache.org/) which was designed for real-time data feeds and thus high performance. It is a very simple and elegant solution although lacking the extensive features of JMS.
because https://en.wikipedia.org/wiki/CAP_theorem
You don't have enough money to get Oracle's attention.
It's key feature is that it allows you to achieve a Pinterest-style staggered grid layout. Bootstrap will leave white space if the heights of your grid cells differ. I had a good experience with [Salvattore](https://github.com/rnmp/salvattore), which is only about 3KB, doesn't require jQuery, uses CSS media queries and takes a couple of minutes to plug into a Bootstrap layout.
Been using this for years. We have perf teams that have certified it fully. Really helps memory and GC (by avoiding auto boxing) in our 200GB JVM's Edit: Turns out we use 512GB heaps for our largest customers. 
There have been no official announcements from either companies announcing a settlement so how did Google settle again? Also, where exactly do you get this idea that Google gave up defending themselves when there is still a trial date scheduled for this spring? Oracle is facing the same Judge that ruled the SSO of 37 API's were not subject to copyright. Good luck to Oracle on that do over.
Do you have a sense of the differences between this collection library and the [Goldman Sachs collections](https://github.com/goldmansachs/gs-collections/)? GS Collections has a more corporate-friendly license - even though LGPL is pretty permissive, in my experience, lawyers tend to approve Apache/BSD/MIT without even blinking, but give me a hard time about GPL/LGPL.
In fact, they would, as long as your open source version is GPL-licensed. But you still won't be able to call it Java, only state that it has passed the TCK. There are some other restrictions, but in principle you can obtain the TCK on non-commercial terms.
Maybe it is well written, but right at the top there's a red flag: "This eliminates the need to create Map.Entry wrappper objects for every item in a table and so reduces the O (big-oh) in the performance of the hashtable algorithm." Whoever wrote that doesn't understand big-O performance. They may have reduced the constant factor, but they didn't improve on O(1).
GS Collections is also available under the EPL. It was just recently adopted by the Eclipse Foundation, as [Eclipse Collections](https://projects.eclipse.org/projects/technology.collections).
Doubtful, unless you can get in with one of the less reputable placement agencies.
I've generally found no, but that isn't necessarily specific to Java but to entry level developers. As far as the Java specific piece many companies running Java seem to be way caught up into the agile thing and focus big on lots of meetings hard to do as a remote employee.
No because it's hard to trust someone that isn't in the office at that level
In my experience, remote developers are exclusively "rock stars" who are so valuable to the company that they can dictate their working situations. At the end of the day, you'll need to move to where the jobs are if you're serious about it.
It was a test for AutoModerator. But thanks anyway.
TBH. I just went to the maven repo in the hopes that there was something there... If I didn't find anything, I would have linked the [GitHub](https://github.com/apache/commons-imaging) instead
This is a fair point, but in situations where your components are available for public consumption (part of a public API for example), it might be beneficial to find semver violations internally before users come knocking on your door.
We haven't figured that properly, yet. But we are using one approach for the components which act as service with something like this: After changing the version to &lt;version&gt;5.0.501&lt;/version&gt; We use this to build (if dc20efa2d56169515f21a2ae40536aea6311966d was the last commit for this release): $ mvn clean package deploy -U -Dproject.version="5.0.501 dc20efa2d56169515f21a2ae40536aea6311966d" Will publish the package as 5.0.501 to the maven repository, but when using this in spring boots application.yml info.build: artifact: "@project.artifactId@" name: "@project.name@" description: "@project.description@" version: "@project.version@" we will get (when calling: localhost:8080/info): "version": "5.0.501 dc20efa2d56169515f21a2ae40536aea6311966d" Additionally we set the contextId like this: SpringApplication.run(MyExampleApp.class, args).setId(name + " " + version); which gives us this as response header for every request (nice for bug reports): X-Application-Context: MyExampleApp 5.0.501 dc20efa2d56169515f21a2ae40536aea6311966d This does not work for the upstream dependencies (to libraries e.g.) but for services it works quite well. Additionally you can set the Implementation-Version manifest Entry like this: &lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt; &lt;configuration&gt; &lt;archive&gt; &lt;manifestEntries&gt; &lt;implementation-version&gt;${project.version} ${commitId}&lt;/implementation-version&gt; &lt;/manifestEntries&gt; &lt;/archive&gt; &lt;/configuration&gt; &lt;/plugin&gt; and build with: $ mvn clean package -U -DcommitId=dc20efa2d56169515f21a2ae40536aea6311966d to have a MANIFEST.MF with this entry: Implementation-Version: 5.0.501 dc20efa2d56169515f21a2ae40536aea6311966d Hope this helps! PS: Maybe using a dash as seperator would be better, like: 5.0.501-dc20efa, but this would confuse with normal qualifier handling.
Aside from that companies don't want remote entry level devs, as an entry level developer you don't want a remote job anyway. It sounds nice but for your career it's much better to work together with more experienced smarter developers. You learn much more that way. 
&gt; Have you thought about adding boxes for datatypes? Currently only boxed values can be stored which is may cause substantial overhead. &gt; I don't know what you mean. A box is generic and can store any value of any class. It is not by any means only for boxed primitives or any particular set of types. What /u/chisui means is that because the Box class is a generic class it can only be used for class types and not primitives. I.e. you can use it with Integer but not integer, consequently if you're using it with primitives then it introduces a lot of autoboxing and unboxing via the equivalent class types. 
Of course, it would also be beneficial to always write 100% bug free code so users don't come knocking on your door. Let me know when you come up with a way to foresee the unknown unknowns /s 
Honest question, what sort of application requires 200GB of memory??
Great! GPL FUD again..... Drupal is GPL, Mongo is AGPL, Hibernate and RichFaces are LGPL. Lawyers don't want LGPL because they don't understand what is a compiler, what is static/dynamic linking.
In memory graph database for really large companies HR/Payroll/Financial systems 
It's the GPL, but if you only use API's noted in files with the Classpath exception, then your project can be under any license you want. You still have to follow the GPL license as it pertains to the GPL'd project, it's just not viral. The LGPL has various requirements like dynamic linking and overall is just different. IMO yes it's more restrictive than GPL+Classpath. (Not a lawyer and don't take this as advice) 
So it's more like Mozilla Public License
Thanks for reply. I know that these two are completely different in every aspect. But what I am asking, what about the approach? If someone has been working on php platform and moving to Java platform does he need to begin from the scratch? I am not talking about the language but about the approach. 
There are similarities. JSP is similar to basic PHP. But JSP is also a fading technology. Much of Java web dev is either working with frameworks like JSF or Spring MVC, or as working with Java as a RESTful data API feeding a JavaScript client. That being said, much of modern PHP is working with frameworks ~~like Code Igniter and Zend~~ and opinions vary on the best of those. As others have said, though, it's two very different languages. Edit: Not trying to start a PHP framework holy war in /r/Java.
&gt;But what I am asking, what about the approach? Completely different approach. The same problems are solved, but the approaches are very different. It isn't a one-to-one mapping, from what I have seen of PHP. PHP is much more simply organized from the brief exposure I had. This is especially true at the professional level if you use a Java web framework ( kit or extended API ) like Spring.
Wow this is amazing
PHP is basically scripts that are called when you browse to a location on a server (that maps to a location on disk) - though these scripts can still import/call other scripts. This is very different from just about every other language. Every other language needs to deal with exactly what happens when a server receives a request - including actually creating the server to receive the request. So you will need to learn to think about web servers differently. The basic steps of a full web server are: listen for requests, receive requests, route the request to a function/class, handle the request, and return a response. PHP only really deals with the last two parts. I don't have a Java example (yet), but you can take a look at some very fundementals-only server implementations in a few languages [here](http://github.com/eatonphil/referenceserver) to get an understanding. Good luck!
PHP has some excellent web frameworks that rival or exceed Spring; Laravel, Symfony2, CodeIgniter...
I've looked at a few random classes. Here's some remarks * You have no tests. * You have a lot of whitespace in some (random?) places, e.g. in [Main](https://github.com/tchoulihan/torrenttunes-client/blob/master/src/main/java/com/torrenttunes/client/Main.java) * You use confusing naming in [DataSources.java](https://github.com/tchoulihan/torrenttunes-client/blob/master/src/main/java/com/torrenttunes/client/tools/DataSources.java). All-Uppercase identifiers are for ***constants***, i.e. `public static final` fields, nothing else. You're using this for methods and mutable fields, too. * In the same classe, you're hardcoding paths to various things. This means no one else is able to use this. * Speaking of: public static final String DB_FILE() {return HOME_DIR() + "/db/db.sqlite";} Does this mean that it will create a dir&amp;file in my user-dir? And not even a dot-file? * That's a horrible method signature: public static Library saveSongToLibrary(String mbid, String torrentPath, String infoHash, String filePath, String artist, String artistMbid, String title, Long durationMS) {
Thanks for a very good explanation. :)
Modern Php frameworks like Symfony and Laravel are very similar to something like Spring MVC. Nothing in Php like JSF though, at least not that I know of. If you're just writing basic procedural Php, then yeah, Java will be completely different.
One other big difference is the server setup. PHP and Apache grew up as bosom buddies. So installing PHP and Apache is as easy as `apt-get install apache php` in a system like Ubuntu. Java relies on a little more convoluted method of loading up basic web servers with dynamic content. The concept of an application server has been around in Java since the 90s, and is the basis of tools like Tomcat, GlassFish, WebSphere, WebLogic, and JBoss. These application servers host several Java applications. So you set up your AppServer, and then deploy your Java Web App to the AppServer. The AppServer does a lot of the background work, like loading up dependencies, connecting to data sources, and allowing for redundancy and application restarts. If you're coming into webdev now, you may be familiar with Heroku, and Platform as a Service. PaaS is similar to AppServers, and many of them (OpenShift, Heroku, etc...) actually support Java in one form or another. Long story short: If you want functionality like basic PHP, then you want to look into putting JSP onto an Application Server. Expanding on the comment by /u/eatonphilI that PHP only deals with handling requests and returning responses, JSP does the same thing, leaving the rest up to the Application Server. If you're going down that road, I would recommend learning how to use Tomcat. But that method of developing for the web is very clunky and aging. You have to do a lot more of the boring stuff to get to the good stuff. So just as PHP has moved to tools like Laravel, Symfony and Wings, Java has moved to tools like Java Server Faces (JSF), Spring MVC, and Play. Just like PHP's frameworks, the Java frameworks often take a few extra setup steps. In Java, specifically, one of those setup steps may be setting up an Application Server.
Ansible, MySQL, GNU/Linux even GNU Bash is used by OS X. You prefer Apache but not everybody does. Lots of companies use a lot of GPL. There is a lot of FUD around GPL.
Thanks for looking through some of the classes here. The more eyes, the better. A rundown of the tech I'm using: * [Java spark](https://github.com/perwendel/spark)(webserver) * [ActiveJDBC](https://github.com/tchoulihan/activejdbc)(ORM/my own fork) * [jlibtorrent](https://github.com/frostwire/frostwire-jlibtorrent)(torrent client) * [Musicbrainz-tagger](https://github.com/tchoulihan/musicbrainz-tagger) A tagger written by me that uses the musicbrainz API to tag .mp3 files. Front end: * Bootstrap * typeahead * soundmanager2(for playing audio and the music drawer) * mustache(for rendering JSON to the front end) * jquery-ui(for some extra tools) As for some of the concerns: &gt; You have no tests. True, I should probably write some unit tests, but I don't know what for. For my [musicbrainz-tagger](https://github.com/tchoulihan/musicbrainz-tagger)(Something that I wrote to tag .mp3 files to musicbrainz ID's) I do have a [ton of unit tests](https://github.com/tchoulihan/musicbrainz-tagger/tree/master/src/test/java/com/musicbrainz/mp3/tagger) to make sure things are being tagged correctly. For this one, I'm not sure what I would test for. Making sure jlibtorrent works maybe? &gt; All-Uppercase identifiers are for constants, i.e. public static final fields, nothing else. You're using this for methods and mutable fields, too. You know how these things get as code evolves over time... at one point it was a constant, but then later on I found that it depended on other variables, and it needed to be a method, but never bothered to remove the caps. &gt; Does this mean that it will create a dir&amp;file in my user-dir? And not even a dot-file? `HOME_DIR()` is a .dot file directory : `System.getProperty("user.home") + "/." + APP_NAME;` &gt; That's a horrible method signature: I agree some method signatures are a bit long, and I should probably use builder pattern for them. If I used that one more, then I would be inclined to do that. 
Thanks! Let me know if there's any features or music I should add.
&gt; Is in java world building a web app same as how php do or in Java their approach/paradigm totally different PHP bootstraps the universe for each request and then throws it away. While in Java a PHP developer might accidentially create memory leaks as state is shared between requests. Looking at the frameworks, you might see less differences. E.g. Symfony does very cleary copy things from Java land.
It's a nice improvement but try browsing javadoc on a mobile device. It's very hard to read and navigate. I'm just surprised that they don't use a responsive layout. There's a lot of javadoc hosted on jitpack.io and when google indexes them it reports mobile usability issues in webmaster tools. 
Who's browsing Javadoc on a mobile device...!?
This an awesome app, how did you build up the database of music?
You need tests because you need tests! http://www.javacodegeeks.com/2013/10/10-reasons-why-you-should-not-write-unit-test-cases.html
It uses musicbrainz, which is basically the Wikipedia of music. Every artist, song, or album has a musicbrainz id. And if the info there is missing or incorrect, you can make an account and do edits just as you would in Wikipedia. 
Maybe check Youtube if it has a music video with a song and play it through the client somehow. Also, do you have any comments on the legality of this software?
I fully agree that unit tests are good, but unit tests need specific usefulness, when the outputs may be unpredictable or erratic. I'm not going to write a unit for every math operation, or every database save, for example.
I can't believe you made a Java UI look so good, kudos!
username checks out.
&gt; What is sbt? &gt; sbt i.e. Simple Build Tool is a general purpose build tool written in Scala for JVM developers. It borrows good ideas from other successful build tools like Ant, Maven, and Gradle. I shouldn't have to scroll down or click to find out what it is.
&gt; like fixtures written in XML, It actually supports a number of formats, but I prefer XML. It supports, yaml, json, sql, and xml. Anything but json or xml is a mistake, IMO. If somebody is writing large XML files in dbUnit I also think they're doing it wrong. &gt;meaning a lot of hassle whenever the schema changes. I might be wrong though. Not sure what this means exactly, but you should be using liquibase to change the schemas.
There are truly horrible things out there in the world. And today I got to learn about one of them
Sorry for making you scroll. I didn't realised it will be a trouble for some people.
What happens if it cannot find a MusicBrainz id? I am trying to share my collection of music but it is largely electronic music remixes from soundcloud.
there's more to testing than unit tests (actually, I have little to no confidence in any project that is just unit-tested, unless it is both dead-simple and stateless). at the least you should spin up your client in a test, either mock out the server component or spin up a real server in the test as well, verify that performing the actions you support in the client will produce the right state. depending on whether you aim for this to be comprehensive this is typically called an integration or acceptance test.
Two things I always see undervalued are some sort of POM and basic tests. Look into adding these to your project.
I made the move recently, and the transition is pretty smooth. We have a Java web services team in the company that was looking to hire, and I applied for an internal transfer. Java is a simple enough language - the type erased generics were a gotcha for me initially but that soon clicked. As usual, it's the frameworks that take time to become familiar with (Spring, Hibernate, Gradle, ...) IntelliiJ IDEA is a really good IDE with a free edition. 
It's worth mentioning that either Maven or Gradle are fine for build scripts, though, since they both provide excellent support for Maven repositories.
Yup. It also has to be in a maven repo. @OP you really should not put pre-built jars in your git repo either. Edit: not to be a dick but this simply isn't production quality code: public class Setting { String name = ""; public Setting(String s) { name = s; } public void addto(Container c) { } No tests either :(
It's also pretty wrong. Modern PHP ís very similar to how you'd build an application with for example Grails or Spring MVC. 
Try the IDEA 16 EAP. https://confluence.jetbrains.com/display/IDEADEV/IDEA+16+EAP &gt; It includes our fixes for better font rendering on Linux.
Some improvement but still a difference between root and normal user 16 EAP as root http://i.imgur.com/AEpN2nx.png 16 EAP as normal user http://i.imgur.com/SxCseYM.png
I changed the font from Ubuntu (default) to DejaVu Sans 13pt and all is good. Thank you!!
Yes, I will stick with 15 :) Many thanks again! 
The problem is that many applications use ORM mappings (JPA, Hibernate), and the tests rely on that schema. Schema changes then have to be applied to both the java mapping classes and the XML / JSON, which is a big pain. If the fixture is written in Java (or any other jvm language) based on the mapping classes, then refactorings will automatically also refactor tests.
Searching for help is also great. 
&gt; (Spring, Hibernate, Gradle, ...) Java EE, JSF, CDI, JPA ;) 
 // TODO Auto-generated method stub also isn't a good sign…
Amazing. Its a company fault. Companies need to do their homework before hire someone.
Get started learning html5+javascript front end, my preferred framework is bootstrap, jquery for the AJAX, and mustache.js for rendering json to html. Then you just run a local java web server that can serve up things html pages and JSON data resources. I prefer [Spark](https://github.com/perwendel/spark). 
This should really use the existing [Preferences API](http://docs.oracle.com/javase/8/docs/technotes/guides/preferences/). I found some code examples of exposing these through Swing UIs [here](http://www.javapractices.com/topic/TopicAction.do?Id=154).
Having everything be well-tagged is an absolute requirement for music being added(there are way too many good reasons for this). I've had to add plenty of music and fix tags on musicbrainz myself. Musicbrainz handles remixes just fine, just look at some other examples, make an account, and start adding data.
I didn't mean replace the torrent system, I meant that it would be cool if you could have an easy way to see the music video of the song you were listening to. 
Ah Gotcha. If you check the top of every artists page, there should be a link to their YouTube channel if they have one. 
You say that as if it is easy.
bahhh kindle shit. :( i rather print it out 4 pages on one page and read it analog everywhere i want. 
Well thats why there's a print version!
lets say i run a small company ;) print version comes 10 bucks, where is the free pdf version?
Get free Kindle version, have it delivered to the free cloud reader, and download the file. For this kind of book which not dependent on graphics, the .mobi format is superior to PDF as it can be reformatted in the reader (font size, number of columns etc), whereas a PDF can't. You can of course convert it to PDF should you wish to bake it into a fixed format.
ok i will try. thanks for sharing.
done removed DRM and converted to pdf, ready to print, thanks for the downvoting, hope you can sleep now more satisfied! ;)
I did a promotion on CodeRanch about a month ago where someone asked the exact same question. Allow me to copy my reply from that forum: I assume you are talking about Gayle McDowell's book? In that case, her book is certainly very informative, however I found the amount of information inside to be a little overwhelming at just shy of 700 pages hardcover. By comparison, I wanted to write a book that could be read in one sitting, and at the same time portray enough information to prepare you for an interview. In that sense, I would view both books as complimentary rather than competitive, because its easy to get lost in that much information and miss out on what the majority of interviews will focus on. Interviews are very time sensitive, so its important to answer an interviewers questions with as little fluff as possible, since they will very quickly see through anything that isn't the answer they are looking for. So the reason I present all the content in interview-sized chunks is to make that sort of interaction familiar to the readers.
I just "bought" it in the UK.
Thanks, I just "bought" it. I am very new to Java (literally days into learning it) but if I use this and manage to get a job at some point in the future I will try to remember to buy a proper copy as thanks :)
thats funny I'm actually the opposite, although I am rethinking that position. When a physical book is $40 and ebook is $30, at least the physical book has some resale value . I usually pay for both when the price is usually a difference of $10. 
&gt;done removed DRM and converted to pdf, ready to print, thanks for the downvoting, hope you can sleep now more satisfied! ;) People aren't downvoting you for printing a book, they're downvoting you for being an arrogant contrarion troll. Your "any ideas?" post served no purpose whatsoever since you already knew what how to do it. You're clearly just looking to string along an argument. Try harder.
I believe you are confusing the runtime of the IDE itself with its ability to use a Java 8 JDK for your projects. IntelliJ has supported using Java 8 for your projects since Java 8 was still in beta. Here is a blog post from Oct 2012 regarding IntelliJ 12's Java 8 support: http://blog.jetbrains.com/idea/2012/10/java-8-and-method-references-in-intellij-idea-12/
Looks really good, thanks for this!
Not available in straya
Did you try this: http://www.amazon.com.au/gp/product/B015HF9SJQ?*Version*=1&amp;*entries*=0
Would it be wrong of me to embed the program within something like a JFX [WebView](https://docs.oracle.com/javase/8/javafx/api/javafx/scene/web/WebView.html) so the user doesn't have to use their browser?
You can start by using this plugin: http://search.maven.org/#artifactdetails%7Corg.owasp%7Cdependency-check-maven%7C1.3.3%7Cmaven-plugin 
How did type erased generics get you, if you don't mind me asking?
That hurts to hear, I was hoping JavaFX had something for me here. I'll try the Chrome embedded approach. Thanks! 
I would look at it! OWASP is a good source. Not everything is mobile.
Most current uses of JSF I have seen make heavy use of its "ajax" capabilities. In conjunction with fancy js libraries this feature causes unpredictable behavior. So most of the time some bare bones java stack for the designers work to reflect the real application. Also JSF does not use HTML it uses XHTML. While your natural templates may be rendered fine in any browser you can throw it at it will most certainly break once you drop it into your application.
Thanks!
Not sure what you mean by trivia questions, if you mean trick questions about the nuances of the language then no, I don't include any questions like that nor would I ever ask them in any interview I conduct. I'm more interested if you can explain the internals of a HashMap or what the value of immutable objects are, which to me demonstrate that you can solve problems rather than memorize them. However, I do have a chapter devoted to approaching programming problems on the spot, and I try to break them down into systematic methods of solving them. But the intent is to teach how to mentally prepare for a problem rather than what the solution actually is. 
Well I think it would be incredibly short sighted to reject an offer from an interviewer who wants to make sure you understand basic java concepts. Sure everybody knows how to USE a hashmap, but a surprising number of candidates don't know HOW a hashmap is working. What data structures are behind the scenes, what happens when duplicate keys are added or the consequences of when the equals method or hashcode method arent overridden together. These kinds of questions are far more valuable than a problem solving question because these are the building blocks for solving problems. Of course I will follow up an interview with problems, but you have to demonstrate that you know what you are talking about first, otherwise I don't know if you are good at memorizing problems, which you will find a ton of if you go searching for them in coding preparation. A huge number of them are repetitive, so its far less effective to quiz candidates on those questions than the fundamentals.
Of course the real issue is DRM in a "free" book. DRM in a paid book, maybe ...
why enterprise choose Java over php ? 
I am not really following you. Do you want to give an example? Have you profiled to show that exception handling is a bottleneck? This certainly sounds like a problem, by why are so many requests which result in exceptions being made? If that is truly a common occurrence I would expect it is limited to a single use case and it does sound like handling that case in a more specific way makes sense... So if I understand using exceptions to report errors is making the code confusing and slow, and that is the problem you have?
Applets aren't widely supported anymore but look into libgdx. It takes Java code and deploys to web, mobile, and desktop. You'll have to rewrite some parts but it will be highly compatible with almost any browser.
Well I don't consider it cheating to show people how they should be preparing for a job interview, especially people who have never taken one before. I stress on the first page not to memorize any answers, but instead to learn the concepts well enough so that you can explain them in your own words. That isn't cheating, its old fashioned learning! This guide is more useful as a high level resource to remind you what topics you need to be familiar with, and I would never claim that you'll be able to pass an interview by memorizing it.
use JNLP?
In case you don't find help here, you could also try /r/IntelliJIDEA, which only has about 1000 subscribers, but posts\* there occasionally do find answers.
I'm having the same issue. Nothing else open, just code in a window and it's slow even to type
[removed]
Could you please file an issue to our tracker with a CPU snapshot attached according to these instructions: https://intellij-support.jetbrains.com/hc/en-us/articles/207241235-Reporting-performance-problems. This will help us get the problem fixed sooner.
You might be hard-pressed to find someone else who runs the 32-bit version but what do I know.
What OS?
Same here. Closing IDEA and re-opening it seems to help, but only for a while. 
&gt;Of course the real issue is DRM in a "free" book. DRM in a paid book, maybe ... It's only free to "buy" for two days though, isn't it? After that, there'll be a cost; only a mad man would think they would distribute it DRM free for a short-term promotion
No more cheating than studying for an exam at school.
Interesting though, nowadays some people cheat when studying using all kinds of drugs to help concentrate or be more intelligent.. So you can cheat when you study) 
I just checked, Intellij and PHPStorm both add the 32 bit shortcut to the start menu. What are the real advantages to use 64 bit over 32?
&gt; They were also throwing exceptions if the input they were expecting was malformed. &gt; Exceptions for validation logic is not a good idea. See martinfowler.com/articles/replaceThrowWithNotification.html &gt; The second problem with code like this is that it fails with the first error it detects, but usually it's better to report all errors with the incoming data, not just the first. Realizing that these three quotes are from three different people, let me offer an alternative point of view: It is the client's responsibility to handle validation gracefully. The server only needs to prevent bad data from getting in the database (or whatever would happen for valid requests). In the context of a traditional web app, for me, that means: * Client-side validation of inputs with HTML and JavaScript. As much validation as possible happens immediately (e.g. as the user types). If it requires server-side communication, that happens automatically without additional user input. All errors are displayed at once. The user cannot submit an invalid request because the "submit button" (by whatever name / appearance) is not something they can interact with until they've resolved all the errors. * Server-side validation that throws an exception on the first error found. There is no attempt to report a full summary of all problems in the request. Invalid inputs are truly "exceptional", in that the user must not have used the official UI when making this request, or the UI is broken. In these exceptional situations, the server wants to reject the request as quickly as possible in the simplest way it can, without "leaking" complexity into the non-exceptional case (requiring the controller to return a generic "Response" object that can handle anything would be "leaking", to me).
I don't understand what you're saying, because if you got the book at the zero price you can still read it after the price rises. The DRM doesn't disable the book.
Ok, I meant the input format. The point I was trying to make is that basically all tooling is for HTML and designers most of the time produce html. This means that you always have to clean up the markup provided even if you don't want to add any logic to it.
JSF templates, despite ending by default on .xhtml use plain html. They can be loaded in any html editor and previewed there. Did you read the linked post? Look at the image, it's plain html! JSF uses a few special name spaced attributes like jsf:id, but otherwise plain and natural html. 
Had a similar problem, it was a heap/ gc issue. I bumped up the memory and it's been smooth sailing ever since
I use Java EE for my own stuff, and love it...... However, you look how many jobs there are for JavaEE....... Its all bloody spring or nothing. At least .NET, people actually use the Microsoft supported Standard way of making things.
Might depend on the region or industry? I see Java EE jobs all the time. Sure, Spring too (a lot indeed), but Java EE about as much.
Yes when I first published the book I did a similar giveaway, it was about three months ago.
&gt;I don't understand what you're saying, because if you got the book at the zero price you can still read it after the price rises. The DRM doesn't disable the book. That's pretty much my point. I'm not sure where the misunderstanding has come from, but I meant that given that they will be selling the book for money with DRM on it to prevent people from distributing it and reading it for free (ignoring the fact that DRM is useless), why on earth would they provide it DRM-free when the price is only temporarily free? It defeats the purpose (however misguided) of using DRM in the first place, which they clearly have chosen to do.
Hm. Now the same user (aisikitesi, who has deleted this post) made a post in /r/learnjava, but the content is different. Maybe it's ok content. https://www.reddit.com/r/learnjava/comments/40mhg4/introduction_to_java/
I've seen cases where the new version keeps re-indexing. Are you sure it's not doing that?
&gt;I'm getting the feeling that you think DRM is useless so I find your defence of it confusing. I guess it's about what the seller thinks and not what makes logical sense? I'm not defending DRM in the slightest. I was talking about Amazon's usage of it on a free book, given their usage of it on books which are not free, in response to your comment. &gt;Of course the real issue is DRM in a "free" book. DRM in a paid book, maybe ... I actually can't see how you could have misunderstood everything that I've said, I've been clear and literal, yet you keep inferring nonsense
You are falsely assuming that Oracle's lawsuit has anything to do with technology, or any action that Google did. In short: Google was making lots of money. Oracle wanted it. So Oracle purchased the failing Sun Microsystems in order to sue Google. 
No. It's complete crap. He just keeps pushing his shitty blog that has articles on a wide range of subjects that just barely scratch the surface. IMHO all the content from that site should be banned: It's just a ad money grab. 
Here's the Quora link where Gayle McDowell talks about the ebook piracy issue in India. https://www.quora.com/Why-isnt-Cracking-the-Coding-Interview-available-on-the-Kindle
IntelliJ has loads of issues also. * http://ideabugsme.blogspot.com/ * http://www.martijndashorst.com/blog/2013/11/04/intellij-not-the-best-for-me/ * http://jdevelopment.nl/intellij-ide-wanted-love/
Awesome. 
&gt; http://jdevelopment.nl/intellij-ide-wanted-love/ two of your links are 6-7 yrs old. The other is 3 yrs old. I think intellij is great. You don't, whatevs.
32bit version runs fine. avg 2% at idle.
&gt; Unless your application is very large… &gt; &gt; [...] &gt; &gt; unless your component graph is bigger than 10-20 pieces, it’s simply not worth it. So 21 components is considered "very large"? Bwhahaha. I agree with the core message of this: if you can get away with it, don't use DI. That's just basic KISS. ***But***: I do believe that this only applies to very small "toy" projects. Any moderately sized project will immediately have more components that you can wire up manually in a simple, maintainable fashion. 
Also, you probably don't need type safety, let alone an object-oriented programming language. Unless, of course, you *do* need it.
This should be titled "You probably don't need a DI framework". It's still dependency injection if you do it manually.
I've seen version 15 on linux take up cpu while doing nothing on the project selection "splash" screen !
And C# being that low ? I don't think so !
the problem of drm is that you cant print it out, because you have either to use a certain reader (like the bad Adobe one, Digital editions something) or use the Kindle stuff. there are no free books on amazon, so far i know, so everything has DRM on it. luckily its easy to remove it. so calm now everybody as all is good here.
Very cool. The last one has me a bit confused though. Maybe I'm reading it wrong. "This code is legal, as total variable remains “effectively final”. But will the object it references to have the same state after execution of the lambda? No!" Wat.
Spring has had Java based configuration since [2008](http://docs.spring.io/spring-javaconfig/docs/1.0.0.M4/reference/html/), so why does this blog post written in 2015 seem ignorant of that?
Dependency injection just means components shouldn't be creating their own dependencies. Instead the dependencies should be injected, either manually, or automatically. You can still get the benefits to testing without using automatic DI.
I mean, it's just not solving any problems and potentially opening yourself up to a rough couple of weeks of debugging down the road. So much risk for absolutely no reward of any kind.
Thanks!
"Pure" is still a loaded term. Why not just say "manual DI" instead of trying to invent new terminology?
The Java ecosystem is very large, so for every part of your stack there is a multitude of options. For example: For Dependency Injection you could use one of the two big players, The Spring Framework or CDI (which is a specification that has multiple implementations, e.g. weld and openwebbeans). ORM (ActiveRecord) is typically done through JPA (Spring is based on it), which is also a specification with implementations like Hibernate, EclipseLink and others. For a new comer it's probably easiest to start with a pre-build stack like TomEE (JavaEE), Spring Boot or dropwizard. Or even something like the playframework. For micro-architectures there are also a lot of small new Java and Scala libraries. EDIT: Added a few things. By the way I started with a PHP project (symfony2) again after many years and it's really cool to see how far PHP has come over the years since version 3. 
This is a fair point, and I used "DI" and "DI framework" pretty much interchangeably in the post. Perhaps I should change the title.
Thanks great resource!!! 
I wonder if I can find a equivalent for OWASP for Android
Check out [Play!](https://playframework.com/) framework.
So I'm kind of piggybacking on OP's comment - I'm generally new to programming in general and what I've been taught (JSP) is now woefully outdated. Does Spring have any good guides?
Dropwizard is a nice Java web framework - clean, lightweight, and actively developed on GitHub. You could look at it for inspiration on building your throw away web framework. It can be used with whatever front end you like such as Angular JS and bootstrap. If you're curious to see some extra sample code with good explanations, check out [XDropWizard](https://github.com/timmolter/XDropWizard) on Github. 
Hi, I used to be a lead PHP developer. But I gave it up to be junior Java developer (similar money, but less hours). Hands down if you want to move, look at Java Spring. It's well documented and easy to learn if you're coming from good Php frameworks like laravel (assuming you already know the basics of Java syntax). It's built in a modular fashion, so you can start off with simple MVC, then add more complex modules in at a later date to handle things like security or batch processing including some stuff that's almost impossible in laravel! But the main benefit is real, enterprise scale companies are working with it, so finding a job with it isn't too hard, and they pay is usually wayyyy above PHP. 
First of all, will your earth sciences degree be relevant to your BD role? Are you going to interview the developers (`finding`...) (I hope not)? Perhaps you've been hired to be the subject matter expert?
The only real difference between the two is that the 64-bit build will use a 64-bit JVM, allowing users to increase the heap size over 2GB. But unless you are running IntelliJ IDEA on a *really* large project, there is no real benefit for using the 64-bit build over the 32-bit one.
You must use a good IDE, do not try to vim/emacs/whatever a new project. Here is my personal ranking of increasing functionality at the expense of usability for new folks: * https://netbeans.org/downloads/index.html * https://www.jetbrains.com/idea/download/index.html#section=linux * http://spring.io/tools/sts If your Angular skills are good start with this: * http://jhipster.github.io/ * https://www.youtube.com/watch?v=baVOGuFIe9M If you specifically want to start with Java use this: * http://projects.spring.io/spring-boot/ * https://www.youtube.com/watch?v=0bBzjB8tWKg 
First off, never suggest how difficult something is or how long it will take. If you don't agree with their estimates, keep it to yourself and ask questions and start a discussion because maybe requirements aren't aligned. This should include MINIMUM functionality, hard deadlines and risk tolerance. Young developers feel like they know everything and anybody who's not an engineer doesn't know anything.
I am a graduate student, I have read your book with Kindle Unlimited while I was preparing for the interviews. I like the book very much and recommended to my friends, all major topics are covered with concise and clear answers. PS: I feel,this book is lot different form CTCI, this books helps a lot for preparing phone interviews. Also to get a quick recap of all java concepts. 
Yes, I have experienced exactly the same. Insanely slow, lag time even between just typing a few words in, cpu usage rocketing for a while even after I stop using the computer at all. It was upper crap and I wondered by I'd be stuck with suck and utter garbage IDE at work... ...when someone mentioned that I should be running the 64-bit version. I did that (find the ide 64 exe file in the ide folder) and all my problems went away. IDEA went back to being fast, snappy, responsive, no weird laggy behavior. I'd give that a shot. Your post mentions you running the 32 bit version on a 64 bit processor - I don't know why the performance difference is so terrible, but it was for me until I ran the 64 bit version. 
I really like [Spark](http://sparkjava.com/) (not to be confused with Apache Spark, which is a map-reduce-like parallel computing platform that also runs on the JVM). Very lean, easy to understand web framework with no unnecessary magic.
Maybe it's because I am lazy, but I like being able to build an automatic DI module specific to testing and reuse that same module with mixing specific to the test in question. Makes it easier when you have a lot of mocked services that will be reused in multiple tests.
The part that's going to be challenging for Oracle is to convince a judge familiar with software development that the SSO of an API can be copyrighted. They lost the first time so I don't see how the outcome is going to different the second time around. 
Basically, the idea is you don't want the state of the enclosing code to change due to code within the lambda. You *CAN* change the enclosing codes state from in there, but you should try to avoid doing so.
I am not really looking to start with a full scale framework, more like read the source of a smaller one to understand whats going on and maybe build my own (throw away) one to understand the mechanics of a framework
Neat stuff! I will have to give this a try. I've played with [monocle](https://github.com/TestFX/Monocle) a wee bit to create web thumbnails headlessly. It worked pretty well on OSX but was crashy on Windows. How is it working out for you?
Grab a good tutorial and start working from there: From the /r/Javahelp wiki: * [Java for complete Beginners](https://www.udemy.com/java-tutorial) + MOOC [Object Oriented Programming with Java](http://mooc.fi/english.html) Both courses are free and very good.
Don't be scared by the results though, a lot of common libraries have vulnerabilities, but the vulnerabilities may not be critical.
Check out the wikis in /r/javahelp and in /r/learnprogramming. Both contain wealths of information.
Exactly the same notion applies for the use of OO and type safety as well. Do not use Java simply because the book says so. Your three-forms, two-DB-tables web app will be feasible in PHP as well. The problem is that you cannot guess what you'll be doing in a year. And if you just show up on the construction site with a screw-driver, you'll be using it as a hammer as well. Choosing the right tool-set for the job in advance is hard, actually.
&gt; Don't bother learning Java/Scala/whatever if you want to stick to baby tools. the community seems to love its slow as balls netbeans and its eclipse over more modern and faster IDE's like Atom ... This statement alone almost made me downvote you if it wasn't for the rest of your content. 
&gt; There's literally no reason to use PHP or Ruby over Java and its JVM friends nowadays. Could you elaborate on this? For example what were previous advantages that no longer exist, or stereotypes about getting a minimum viable product up quickly that are not true.
Big frameworks like Spring are much easier to use nowadays, and with Javaconfig there's no need for XML. I think the reason why Ruby and others became so popular is that Java frameworks used to be a nightmare to configure.
Your gonna have a bad time trying to build your own framework in Java. It's not a hacker friendly language. It's designed for teams to build big, stable apps. If you manage it, I'd love to see a GitHub. Good luck!
My friend suggested treehouse but are they really worth the 25€ a month fee?
IMHO: no. The free tutorials that I've listed are very good and will get you started in a proper way quickly.
I'm sad I could help! :) (I mean, I wish I was wrong.)
Awesome, I definitely am interested in running the server, so I'll check spring out after playing with Spring Boot. Thanks for the write up. 
Co-creator of Selenium 1.x here .. The project page doesn't say how many can be run in parallel although it alludes to that fact that it can run that way. A former client was able to run 10 Firefoxes in parallel for multi-threaded JBehave testing on one a single Linux installed Dell workstation (used Xvfb because of focus issues)
If you want to prove a point why include information that weakens it? ;)
The max number of concurrent instances is configured by the user with no hard upper bound. See the project page for the `jbd.ports` system property which controls the allocated RMI ports and in effect the max number of concurrent instances. Instantiating a new JBrowserDriver spawns a new process, or blocks until one can be created. Calling JBrowserDriver.quit() closes the process... or reset() to re-use the process. Based on some of my past projects, a machine with 16GB memory and 4 CPUs reaches diminishing returns after 8 instances when crawling very resource intensive websites and scraping for various data in the DOM. Performance was decreasing after about 12-16 instances. At a minimum each instance is going to want about 200 MB. p.s. Selenium is awesome! I'm just standing on the should of giants (Selenium, JavaFX, Monocle, WebKit...)
&gt; current world of microservices I doubt that microservices are the status quo at the moment. 
Since this is not Java but Android Development specific you won't get much love here. This should better be posted in /r/androiddev.
The same is true for *manual*, as it could also be understood as laborious or even clumsy ;-)
Interesting. This is one of the main tools I use at my job. Going to dig through the docs shortly, but would you mind mentioning a few points on why it's better than web driver itself? Thank you. 
Mostly all of my problems come from differences in phone hardware and os. The problems in that list hardly ever happen for me. 
I don't get this. We have had Recommenders for years, they also have been provided by default in Eclipse builds lately. So what it does this bring?
It's by default. 
I've encountered the same issue I think. Happens especially often when I use the Ruby plugin for some reason. Overall, it isn't cropping up very often, but annoying when it does.
The Java for Dummies book is good. I learned much of what I know from the Java Swing tutorial though. http://docs.oracle.com/javase/tutorial/uiswing/ Ultimately, the best way to learn is by doing. Try your hands at making an app. With Java, you can make Desktop, Mobile, or Web stuff pretty easy, which is a nice bonus. I'm a desktop developer, so that's what I recommend personally (especially since it's the best way to learn Java specifically. No mucking around with HTML or Android XML), but to each his own. :)
They're probably bundling ASP, VB, etc. into one language. C# is hugely popular, so can stand well on its own.
Nice! Glad to see that Eclipse is getting with the times and making this default! This is one of my favorite features in IDEA. 
*High fives* But really: IntelliJ is awesome!
Spring Boot allows deploying to Tomcat instead of running standalone. Tomcat implements the AJP protocol, so you can use Apache as a reverse proxy using mod_proxy_ajp. Then you can have SSL and URL rewrite configured in the Apache if you want.
Since this simulator was written in C I don't get the connection to Java. What is your intention?
Well if all you do is spamming as many links as possible, some of them are going to miss the correct sub.
Wouldn't really consider /u/javinpaul a heavy duty spammer as he has many very valuable contributions (mostly through links), but this time you seem to be correct ;)
Ill second sparkjava. I used it in a personal project and it was extremely fun to play with
&gt; Completely off-topic, but man that Zen-master seems like a pretentious guy. Pouring tea over people he hasn't even talked to in order to prove a point? Psfh. It's still a good metaphor. The full story involves the "student" being impatient with the monks that greeted him and being vocally unimpressed with the envionrment.
Now camel humps, please. 
I hate how, to get started, people are immediately talking about Spring. Ugh. You don't need Spring to do anything, since Spring does nothing by itself. 
Have you looked into a version control repository? [GitHub](https://github.com) is a very popular option.
Eclipse Code Recommenders is an eclipse plugin that's had this functionality for a while.
Eh, I'd rather it be delayed and come out good rather than released early in a bad state.
I have not, new to java and Eclipse. Looks like what I'm looking for. Thanks!
I'm sorry but I just had to laugh when you called Atom a fast 'IDE'. Sure, it's modern, if you think modern means stylish HTML UIs. But seriously, it's a text editor, get IntelliJ or Eclipse.
&gt; Oracle confirms a passing interest in Java
I really wish they would fix the base before adding yet more things to go wrong. Since the Mars release came out Eclipse has gone backwards in terms of daily crashes.
Yes. I noticed that too. And two times in last week when it crashed it also corrupted the workspace, so I had to remove .metadata and start over. It reminded me of Juno. :-( 
I once handed in an assignment on time. Third grade. Math. It was a tuesday.
That must have been interesting brewing your own method of handling http requests. Go over to yeoman.io, install the jhipster generator and create a jhipster skeleton. The skeleton app is good enough to show you the internals of a Java web app using Spring. It's n tiered (3 in this case), controllers, services, and repositories. Reading through the source should give you a good idea of how a Java web app works with a SPA.
This sounds great. Will get testing tomorrow. But for now, what sort of footprint can we expect? I'm using phantomjs currently. Any advantages to using this over phantomjs? I'm having issues with using cookies/sharing instances with the latest phantomjs, so if this does the job I will certainly make the switch. EDIT: Just read that Iframes aren't supported as yet. Some of the sites I work with use iframes. Any sort of idea as to when this will be included? I understand it's probably not a priority.
Hot damn. 
Agreed. For OP's benefit.
Denmark here, no tuition either and even a free monthly allowance. The problem is more a question of major. I was in the Humanities, and funding was scarce, so the university went with blanket cuts to anything that did not result in engineering grads. Right now its insane though, the faculty is to cut 20% of their expenses over the next four years. The result is *no new hires* (including Ph.D.s) unless the Dean of the faculty *explicitly* gives his blessing in each individual case. But yeah, generally two classes (for 15 ECTS) per semester, each generally with one single assignment of about 15 pages... it doesn't sound very impressive for a university major, but at least I had the time to learn programming in my spare time.
Unfortunately this is what it looks like. The JDK 9 delay is one thing, but if you closely watch the several JDK projects the signs of resource de-allocation are there. Java EE is worse. Not much is happening there now. No commits for the hyped new MVC framework in months, and almost none for JSF. Only JSF commits are from external contributors. 
[JHipster](https://jhipster.github.io/)
There's not that much work for iframes. It's near the top of my todo list, along with Javascript alert dialogs. I'd think end of month, probably in the next release. As far as footprint, I discussed this some in a thread above. At a minimum there's going to be 2-300 MB memory needed per instance. That can balloon greatly depending on the site being rendered and also somewhat depending on your JVM settings. For concurrent use, I think you can estimate 2 (maybe 3) instances per core and 512-1024 MB per instance. I haven't done extensive performance comparisons between this and phantomjs. I do think that RMI is faster than JSON to communicate, so less overhead. Cookies are all managed by Apache HttpClient v4. If you run into issues, file a ticket. HttpClient gives me great control to tweak the networking logic.
I don't mind it. Java 8 is a big release. After a big release it is better to have a little extra time to digest.
I agree with what you are saying to some extent but I find it hard to give anyone the time of day when they ask questions like what is a wsdl or what is an endpoint? I mean yeah sure if you disagree with my estimate let's discuss it! I am all for that. If you don't know what a schema is or how set up MQ I don't know how valuable the discussion will be for me. Sure the person who says "Hey that sounds like way to much time!" will learn alot when I diagram everything up and then define all the acronyms I use. Although you do have a valid point I have seen many developers make the transition to PM/BA roles and then you can have legit discussions about how or why you as the engineer may be uninformed about how long something will take. Just figured I'd add my 2 cents here :)
I agree - how would you go mocking the services in that last example?
I'm surprised anyone cares about J2EE anymore. 
[removed]
Very few people still care about j2ee, that's not the problem. Those who do care likely have support contracts anyway that last for 20 years or so (j2ee is from 2004). But this doesn't concern j2ee, it concerns Java EE, which is something a lot of people care about and depend on.
Hi jonhanson, The discussion about using getters and setters. immutables, etc. was a little bit out of the scope of the video. I was not in anyway saying you should go one way or the other. Anyway, you can also do what you describe with Lombok, Just don't add the getter and setter annotations, and use the Builder
What's the higher quality software then and in what way is it easier? We're using JBoss and it's pretty high quality and open source.
People still care about PL/I and COBOL. There's a lot of legacy crap out there, and people that are experts in legacy technologies and much else. Personally I question the sanity of anyone doing a new project in Java EE, since these days there are simply much better tools for every job I've seen.
The Java development environment is very fractured but Java EE is the most widely used framework. I would hardly call it irrelevant.
That may also be the case. In my experience, though, they're rarely using it 'properly'. Deadline-driven development is a popular strategy.
As soon as you start using something like JBoss it drags in a whole bunch of stuff you're not going to use. If I need a web server I pull in just that library (e.g. jetty) and use it. I end up with a tiny Java app that does just what I need. In the last decade I've not worked on a single project that used an EE app server model. This "one set of API's fits all problems" model is just not flexible enough. 
You might call it fractured, I'd say vibrant with huge choice. Small targeted solutions using just the libraries they need just make your life easier. The EE approach is always going to lag behind in innovations and will bloat over time, because of backwards compatibility. It's a broken way of writing software. 
Yeah but the point is that I can get this stuff with a small addition to my build dependencies. Why drag all that stuff I don't need into my project?
It's a full stack framework, containing all the basics that most apps use. Persistence, http, security, validation, transactions, ... Nothing too crazy. An EE runtime is between 35mb (TomEe) and 110 (jboss). That's not that much for an app that runs on a server. Angular hello world has some 100mb of dependencies. Other full stack frameworks like RoR or .net have a similar offering of services in the base stack.
As some people already mentioned, Hibernate came before the standard JPA specification. Actually JPA was heavily inspired by Hibernate and they get mixed a lot, especially by non-technical persons (and even some developers). Still, the implementations give you more than just the spec. Even the way they implement the requirements are different, so knowing about the implementation details is definitely a positive thing. Especially when you run into problems and you need to debug. For instance, the way that Hibernate and OpenJPA perform enhancing of the JPA Entities classes is completely different.
Do you also minimize your JDK to scrub it of every last bit that you don't use? In case of Java EE, almost all servers are modular and dynamically don't activate what you don't use. Liberty goes a bit beyond that and allows you to statically set what you use. It also allows you to trim the server to exactly what's being used, for those cases where a few extra jars in the runtime really bother you. And finally, you can build your own stack just as well, since most every other part of Java EE can be used standalone. The default mode of Java EE is having the base APIs all available, but if you want to build and test and maintain it yourself, by combining Servlet, JSF and CDI, then go ahead. There's great value in the umbrella Java EE spec, but the individual specs like CDI have great value too. 
Yeah, it's invaluable once you've got used to it. 
This is great. Very easy to use. Thanks! That said, wondering if maybe someone can shed some insight? I'm testing it by trying to login to JIRA -- I can populate the username/pass fields, and click the login button, but it doesn't allow me in and sends me back to the login screen at the access-violation url. I can emulate it by doing the same thing via jquery and can successfully log in. Any idea what gives? (ps: I have tried both clicking the login button as well as submitting the login form) 
Any sane big project doesn't update its APIs monthly either. There's much time between Spring 3 and 4 as well. Surveys, StackOverflow questions etc put Java EE in top tier. What IS worrying is Oracle's commitment lately. EE 8 should have been done about now, but are they even working on it?
Then don't just add whatever parts of Java EE you want to your project instead. It is a bit more work but nothing substantial.
is your server up ? because... not found from here !
&gt; I can put together a project using higher quality, open source software I love how you failed to identify that mysterious higher quality, open source software of you after being asked for it. Could it be that it's not really there?
They have one of the biggest Hadoop clusters in the world. Also, all of messaging runs on top of HBase, which is also written in Java. There is probably more.
App runs on Oracle database. Who's better suited? A candidate knowing Oracle SQL, or a candidate knowing standard SQL? App runs on WLS. Who's better suited? A candidate knowing WLS, or a candidate knowing Java EE? App uses NoSQL. Who's better suited? Trick question. Don't apply for that job, you'll be fixing data integrity problems every day.
The verbosity so many people complain about is one of the biggest reasons Java is so maintainable. There are few surprises. I don't usually have to guess what someone's code is doing, because it tells me. Compare that to Javascript, where [truthiness](https://dorey.github.io/JavaScript-Equality-Table/) is a goddamned Choose Your Own Adventure, or C, where `while(*str) *dest++ = *str++;` is considered an elegant, or even readable, way to copy strings around. Java hit a real sweet spot, right in between "get out of my way" and "stop me from shooting tomorrow me's foot off."
If TIOBE had been around at the time, COBOL would have undoubtedly been tops for a long time too. Popularity != Quality. This is a very simple and very common fallacy. https://en.wikipedia.org/wiki/Argumentum_ad_populum If Java is good because of its syntax, compatability and scalability then hey wonderful. But just being at the top of TIOBE? That doesn't mean much.
I think the author's argument is "Java is popular because it's good" not "Java is good because it's popular." The former could be wrong (though I don't think so), but only the later would be a fallacy.
I think the reasons why Java is #1 and why Scala won't ever see Java like use, or C# is simple. Java has the best tooling and the best documentation hands down. With Javadoc it is so easy to document your code, and look up documentation on code, which makes large projects manageable. It also runs on everything unlike C#. The JVM means I can deploy to BSD, Linux or even Windows with few if any issues.
Stopped reading at #2, which is no longer true. .NET was GPL'ed last year, and C# is explicitly an ISO standard (Java has never had an independent standard). So much of the rest boils down to the fact that Java has always considered Unix a first class citizen. 
Indeed, I don't know why I was downvoted but you were upvoted, JPA was created to solve the problem of multiple, independently developed, applications sharing database resources in application server. That doesn't happen very much any more.
C#'s single platform days are numbered. With the open sourcing of .NET, there's been a push to get the language and a few of the open sourced libraries running on non-Windows platforms that have been reasonably successful. And the Microsoft toolchain is freaking awesome. I mean, there are reasons I'm a Java guy (I like Unix), but MS's tools blow a lot of ours out of the water. They've had better funding for a long, long time. 
They also developed Cassandra which powers inbox search. 
10 years as a professional developer, currently doing JSF and Primefaces.
I'm an automation engineer, so I use it for that! We're focusing heavily on continuous integration now and it's been really cool learning what all can be done
I use it to pay my bills. ;) Not many complaints though (being stuck in pre-Java 8 sucks and the AbstractBuilderFactoryBuilderFactoryHelperDecorator gets annoying after a while), and is a perfect job considering I'm right out of college. Outside of work, I'm trying to get away from defaulting to Java when I go to write something. Love C# and am learning to love Python (lots of growing pains with types and being more 'scripty' and less hardcore O.O.).
1. Wrong subreddit. Please read the sidebar or header. 2. What have you tried so far?
Please go to /r/javahelp with this. When you do, please be more clear about what exactly you expect the people to do. (Post removed.)
.NET tooling is actually better than java's. Generating documentation is simple, I doubt that is a reason C# won't match java popularity. 
- 18 years pro dev - hobbies (games, mobie apps, etc) I love it because it's safely typed and portable. Like coding in happy fairy land!
You're /u/agleiv{1..n}'s new Java-troll account, right?
Bro, is you trolling?
I'm a Java Swing developer. I've developed and enhanced corporate GUI's and use Swing for my [hobby projects](http://java-articles.info/articles/).
Yep, it integrated with Java just fine. I use selenium to get the browsers up and running. Java is how I play with the databases and apis :) selenium is just a tool to use with selenium. 
These are some advanced projects, I'm looking for something simpler than these.
How could you tell? This guy has such an ass-backwards view of Java... ohhhhhhhh....
The projects that are linked there are on so many levels, ranging from easy beginner to really advanced. Also, there are so many links there, take the link to /r/ProgrammingPrompts, or the link to /u/AlSweigart's [list of 49 game clones](http://inventwithpython.com/blog/2012/02/20/i-need-practice-programming-49-ideas-for-game-clones-to-code/), or [Karan's Mega Project List](https://github.com/karan/Projects), or [Martyr2s Mega Project Ideas list](http://www.dreamincode.net/forums/topic/78802-martyr2s-mega-project-ideas-list/) and you will surely find something. Don't let yourself be distracted if there is a language mentioned. Most projects can be done in any language.
There's a lot of decent uses :) I honestly automate most of the manual crap work wants me to repeat. They're not paying me for that, they pay me for automation dangit!
Only for the Job nowadays, on my hobbies I have mostly moved to something else, except on Android which is still preferable to avoid writing JNI boilerplate. When Java came out it was great, a type safe language with GC similar in some ways to Smalltalk, that although similar to C++ it didn't had the portability issues of it. In 1996 getting C++ code that would compile across OSes and compiler vendors was quite a challenge, given the state of language adoption. Now for what we use it at work? Our native applications for the desktops are all done in .NET. Many Fortune 500 with Microsoft stacks also do use quite some server side .NET. For everything else, portable native desktops, customers not so strong on the Microsoft stack, we use Java. Meaning: - web servers - distributed applications - data entry systems - data processing applications (ETL) - Web APIs running on UNIX Occasionally some C++ when we need to step out of .NET or Java into the native worlds.
Go find us some language that works on more than 1 (shitty) OS.
&gt; C# is explicitly an ISO standard C# 2.0 is an ISO standard, later versions are not.
&gt; I didn't bother as it's subjective and therefore we'd just go round in circles Perhaps you shouldn't have mentioned it then in the first place? &gt;I don't see the advantage in fixing an arbitrary selection of APIs Which is exactly what you get when you program against the Android APIs, or the OS X Cocoa APIs, or Play, or .NET, or Java SE. It's not an arbitrary selection, it's called a full stack framework. And if you for some reason that still escapes me can't see the value of that, then you can either start with the full thing and disable things, or start from nothing and include only what you want. All the options are there with Java EE, I honestly don't see your problem. 
Used to, they don't use Cassandra any more.
They made a simple C++ version for Windows 10. The main PC client is still in Java and it is very unlikely to change. Just think of all the thousands of Mods that would be broken by moving to C++. It would alienate the whole PC community.
My job revolves around a large piece of enterprise software written in java (a set of application servers / micro-services that control public transportation). Hobbywise, the only java code i write is usually connected to [processing](https://processing.org/) (which is basically a java-framework), simply because i'm interested in audiovisual stuff and it's easier and faster to sketch an idea out using processing than plain java.
That sounds like really cool projects! Can you tell more about the image processing library you are working on?
You're absolutely right I can't see the value in Java EE and based on the tiny number of EE solutions I've seen in the last decade I'm not alone. It's been superseded by being able to choose individual libraries on a need basis. Java EE is trying to solve a problem that just doesn't exist anymore. 
Yep, there's so much more to lose than gain from moving completely to C++. Although there is a server or two that's written in C++/C#(?), its more of an experiment than something that would be used to host a full-time server.
I'm writing an interpreter for the Ruby language using Java.
6 years as software engineer, wouldn't use any other language for backend development. In the job we use it mostly for web apps (J2EE or Spring). I also use it in my hobby projects except for games, that's C++ or javascript/dart if not desktop :)
JAX-WS / JAX-RS powered backends mostly. I have a simple GUI for myself written in JSP, but our main frontends are plain HTML 5 + some JS framework.
What are you using for you hobby projects then?
Job and Hobbies. We use it at job mainly for GUIs and as a "bridge" between other languages (We run other language Scripts from Java). As a hobby I use it in a couple Open Source projects I work on, and also game development. (PC and android mostly)
I don't think anyone would consider that c example elegant today. The C I see today isn't too different from the java I see as far as readability goes. I would think most people would either use a string copy function or a memory copy to copy a string. The example you gave isn't elegant because elegant code doesn't run past its array bounds. 
&gt; Unix a first class citizen After all those years I'm still looking for a way to make an icon with a menu appear in the system tray. Screenshots using the Robot class still don't support transparency either.
Yeah, the "verbosity" is really a form of forced clarity in the syntax and structure. I program in both C# and Java, and while I see advantages (and disadvantages) in both languages, I think that the various syntactic innovations and dynamic code changes to remove code redundancy in C# make following the code more difficult in C#. C# main advantage is actually Visual Studio (which is arguably the best IDE out there). Conversely, because VS is really the only decent IDE for C#, and enterprise-level C# really hasn't been available on anything other than Windows, most companies who are trying to avoid vender lock-in have opted for Java.
Why do you think slick2d is terrible? I thought it was fairly decent, I have a half finished platformer i wrote in it.
Using Java for everything is something of a bad habit I have. Right now I'm messing around with jnr-fuse because I'm, apparently, a glutton for punishment.
How is Kotlin? I've seen the support being incrementally added to IntelliJ but I haven't taken a plunge into using it yet.
I think you are right; that's what I realized when I ran into a similar problem with costco.com. Once I get a chance to test thoroughly I'll report back here if it works or not with Jira.
Oh, never realized that, I guess it's all hbase now. 
[The Process class doesn't offer a way to do this](http://stackoverflow.com/questions/3991819/java-get-a-process-given-a-pid). You could however start the spotify process within the Java script which would allow you to make those observations from the Process object there. 
You can always write a basic program in C# that your Java program invokes whenever it needs to access this C# functionality. Sometimes it can't be avoided, but each programming language has its own advantages and disadvantages, so it's pretty common that you need to interweave two or three to accomplish certain goals. 
I do GUI development using Swing, along with some 3D stuff using WorldWind (which is a toolkit similar to google earth, but written in Java). Also use it for personal projects every now and then. 
I'll have to give it a look. Part of the damage it did to my younger self was our shitty build environment and the way that interacted with custom tags. I'll try and use it the next time I get a shot.
What testing framework do you use? I was torn between TestNg and JUnit but we ended up with JUnit. I'm having a hard time getting the suite and project setup to nicely run with Jenkins.
It's important to note the C++ you just linked is actually C++/CLI - which means you are going to be loading the .Net runtime into your Java app just to get window titles. Using the equivalent Win32 functions would be a saner choice, IMO - if a little more verbose.
It's so nice to be able to build a good looking front-end with JSF, using Primefaces, without having to resort to writing any Javascript. At work I wrote an JSF app but then turned it over to a UI developer who stripped away a couple of the pages I had built and wanted to build a page with HTML/CSS with some Javascrpit. What was nice is that JSF even had a way to interact with the custom Javascript that was written on the page so I could keep some of the JSF pieces I had and call out to the custom Javascript piece that he had written.
Android Development.
Maybe the library isn't correct word for it, since it's rather new and I haven't even completely figured out where I am aiming. It examines the image, and tries to recreate it using provided tools and colors. My main aim is to create something that looks like computer could paint. here's an example: http://imgur.com/o8m0qOy
If you have Spotify Premium, I would suggest using their API, instead of using some workaround that might break in a future version of Spotify.
I prefer testNG honestly, but my shop uses junit so I use that for now. I use maven so it's easier to trigger the runs with Jenkins, and then I use allure reporting to see what happened :)
Minecraft has done so much to keep Java's relevancy in the mainstream more than what it could accomplish by itself with Sun or Oracle. Any kid today that wants to get frisky with PC Minecraft and modding has at least to know what it is and how to install/run it.
[Stop submitting the same link &amp; site over and over again](https://reddit.zendesk.com/hc/en-us/articles/204536499). domain submitted from|count|% :-|-:|-: [hello2morrow.com](/search?q=%28and+site%3A%27hello2morrow.com%27+author%3A%27CodeWarrior1962%27+is_self%3A0+%29&amp;restrict_sr=off&amp;sort=new&amp;feature=legacy_search)|5|63% [blog.hello2morrow.com](/search?q=%28and+site%3A%27blog.hello2morrow.com%27+author%3A%27CodeWarrior1962%27+is_self%3A0+%29&amp;restrict_sr=off&amp;sort=new&amp;feature=legacy_search)|3|38% subreddit submitted to|count|% :-|-:|-: [programming](/r/programming/search?q=author%3A%27CodeWarrior1962%27&amp;restrict_sr=on&amp;sort=new&amp;feature=legacy_search)|6|75% [csharp](/r/csharp/search?q=author%3A%27CodeWarrior1962%27&amp;restrict_sr=on&amp;sort=new&amp;feature=legacy_search)|1|13% [java](/r/java/search?q=author%3A%27CodeWarrior1962%27&amp;restrict_sr=on&amp;sort=new&amp;feature=legacy_search)|1|13%
Mainly work, we run a forex distribution platform using Java. I use it for my projects too, mainly because of TomEE, a lightweight EJB and Servlet container. It's hella well supported and I'm used to it. I've started using GoLang just to keep myself learning new things. Go is an awesome language, but I still prefer Java. The verbose language thing feels right to me. 
I might have to do a bit of research into this. It'll be very useful to me. 
How would you get the information from the C# Program?
Thanks for catching that! I do almost no native windows programming, so didn't pick up the difference.
Thanks for the response Bruno. WebLogic 12.2.1 may be the exception. If it indeed works its a great feature on top of Java EE. Normally I would not recommend deploying multiple apps to one AS, but there are a few other exceptions. We sometimes use it to create a "super ear", where we deploy multiple ears (or other archives) that together form one logical app. Just installing each AS into a virtual server and deploying one app to it gives you much better control over CPU, IO and memory allocation. In no way would I ever recommend deploying apps from different people that are potentially hostile to eachother to a single AS. That's asking for problems.
We've some some JavaFX, but most of the interface is Swing.
1. You should try picking up anything you find interesting and make an effort to never stop learning. I understand you didn't like your job, but that was really no excuse to stop developing yourself. You can join coding groups, partake in hackathons, etc. to keep yourself learning and more viable/marketable in the industry. 2. If that is where your interests lie. Honestly I leave things I know off my resume just because I know I would be unhappy doing them full-time. 3. It really depends on what you meant by 'you didn't do well at interviews'. Did you flub a lot of programming questions that you should have gotten? Then yes. Learn more programming nomenclature and processes. Of course, no company is going to expect you to know every single thing they ask. A lot of the times they are just seeing how you respond to being in a difficult position. That brings us to the next question: did you flub interviews because you are not as strong as you could be in the communication department? If that is the case then maybe you should find a local Toastmasters group and get some public/small group speaking experience under your belt. 4. Yes. Join an open source project. Write some proof of concept things using new technologies. Polish them and show that you are a developer who cares about their code. Companies will guaranteed look at your github profile. 5. There are plenty of .NET jobs out there. Maybe you should start a .NET personal project and throw the code up on github? 6. I wouldn't necessarily say you need to be an expert, but you should know what direction Java is headed in and show an interest in it. I would recommend [this book](http://www.amazon.com/Java-SE8-Really-Impatient-Course/dp/0321927761/) if you want to quickly assimilate the key points of 8. Again, this just shows companies that you really do love programming and care about what is new and what is on the horizon. 7. Be honest: tell them you were fired, what lead up to it, what you learned from the experience, and that it was a wakeup call that has lead to you working diligently towards personal development in the future in order to avoid a situation like that again. Then drop it and get back to your interview. 8. Who knows. All you have told us is that you didn't like the work you were doing. Do you like the business logic side of it? Maybe you should be a BA. Do you like trying to break software? Take your programming skills and get into QA testing. Finding out you don't like computers? There's always Peace Corps. Find a passion. I started my professional career as a physicist but fell into comp sci due to lack of jobs/money. I haven't regretted it a single day and I love my job. Because of that I push myself to learn more which in turn leads me to higher salaries and bigger titles, which makes me love my job even more. Sure it gets tedious some days, but good luck finding a job that doesn't. TL;DR: Figure out what you want to be when you grow up and start pushing in that direction.
[Maybe you just need to spruce up your resume a bit?](http://imgur.com/gallery/729Nj) 3 years of paid experience at a bank is nothing to sneeze at, honestly. 
Okay, excellent. I needed to see that. Yeah, it's mostly self-confidence and working on algorithms. I also have to apply to jobs I actually want to do and not just send resumes back to every recruiter who knocks on my doorstep. I believe that if I get put on a new project, I'll fall in love with coding again and have the late night programming seshs I had to do in college. I just need a good challenge. That's a great way to phrase how I got fired, thank you. 
Thanks curmudgeon. I have a pesky girlfriend who doesn't want to move. I think sticking with Java is smart. It's going to be used for many companies' websites/apps for a long time. I'll work on a project as well.
Is it a girlfriend or truly your S.O.? Do you have kids? If you are willing to relocate, send me a P.M. and I can give you an email to send your Resume.
&gt; as easy as it can get &gt; Class&lt;?&gt; dynamicType = new ByteBuddy() .subclass(Object.class) .method(ElementMatchers.named("toString")) .intercept(FixedValue.value("Hello World!")) .make() .load(getClass().getClassLoader(), ClassLoadingStrategy.Default.WRAPPER) .getLoaded(); assertThat(dynamicType.newInstance().toString(), is("Hello World!")); Ummm....
It's exactly the same as the PHP executable on a server, it turns code into a runnable program. You still can still keep your normal Apache/Nginx to handle their usual jobs. It just means that you don't develop and it works fine locally for it to blow up when you upload it to a server. There are ways to avoid this with PHP obviously, but Spring boot does it fairly elegantly. 
monthString is not initialized. Since non of this cases can be true, e.g. when month is bigger than 13 or smaller then 1. Either initialize monthString when you create it or better in this case: change case 13 to default. default means anything no case is defined for. So in this case any invalid month.
Oops sorry. Will do
One of the two frameworks was written by a recent [Java Champion](https://blogs.oracle.com/java/entry/new_java_champion_rafael_winterhalter) and won the [Duke's Choice Award](https://www.oracle.com/corporate/pressrelease/dukes-award-102815.html) last year, in case that matters :)
"App uses NoSQL..."! My sides. Orbit. 
There are a lot of ways. You can invoke the CSharp program as if it were a command line app, and then read standard IO. You can look up how to start up a .exe in Java and read output. In CSharp, you'd just write to standard output using Console.WriteLine(). You can also use sockets or have the CSharp app write to a file. 
Sounds to me like your problems stem from losing interest in your work, not from your competence. It also sounds to me like your job was fairly boring. Rather than up-skilling or retraining, why not try focus on finding work you find rewarding. You can't force yourself to be motivated; either you are or you aren't, and that makes a big difference to your success.
Good article. It is mentioned, but not really expanded. When a lock is uncontended, access is really quick, somewhere around 1800 clock cycles to claim a lock. You don't have to talk to the OS or leave user space. It is really very fast (on a 2.0Ghz CPU, that is 900 nanoseconds). However, whenever there is any contention, that cost of just getting a new lock is increased significantly, somewhere on the order of 60000 cycles (or roughly 30 microseconds on a 2ghz CPU) and that is assuming you claim the lock, it is longer if you don't get it (You may end up waiting for the scheduler to give you back the CPU to use). \*^[source](https://software.intel.com/en-us/articles/implementing-scalable-atomic-locks-for-multi-core-intel-em64t-and-ia32-architectures)
&gt; Just look at how you would do something similar in JavaAssist or CGLib. I can guarantee you it isn't nearly as straightforward. CtClass c = ClassPool.getDefault().makeClass("Temp"); c.addMethod( CtMethod.make("public String toString() { return \"Hello World!\"; }", c) ); Class&lt;?&gt; dynamicType = c.toClass(); It's not in one line and doesn't use a fluent API but I wouldn't say it's less straightforward. Of course it is not exactly "the same", but achieves a similar result in this particular case. Now, Javassist is indeed more low-level. Byte Buddy is more declarative. For instance it seems a lot easier to adapt that code to match on several methods, and do some fancy stuff. Also, the shown example shows that the API is already supporting rather specific aspects such as the creation of unnamed dynamic objects. So some things like class naming are handled behind the scenes. However, still for anything more involved you probably will have to work similarly hard in most libraries. Anyway, Javassist is showing its age, and should probably deprecate some methods and get a newer API, or at least a nice support layer/wrapper.
The main "strengths" of Javassist are: * No dependencies * Inbuilt compiler The former doesn't matter so much. Byte Buddy has one dependency: ASM, but it's a very standard API that is even used by the Java runtime system itself, though not exported AFAIK. The latter is pretty useful, because it really allows you to define anything without having to understand byte code at all and is pretty fast. However, the language supported by the compiler is kind of a stripped down version of Java with its own quirks that are mostly but not completely documented.
This year I get 3 years of java experience. That's the minimal amount required to be considered "senior". Learning javascript and DOM will help you tackle the front end issues. It helps you become versatile. But your strength is backend. Exploit it and sell it well. What problems have you been able to solve in your job? Trust me, you got plenty of material to brag about. You were fired, big deal. I've been losing jobs all my life (99% because I worked at small companies and they all went broke. Those were hard times). Don't stop improving. Keep reading programming blogs and learn. You can NEVER stop learning. There's always interesting stuff to do, and new technologies to enjoy. Did you know that the java guys are working on the MVC 1.0 spec? It's got action-based MVC, and it works with JSF facelets. Best of both worlds. And I can't wait for it to go live in the next few years. It will be a dream. So, keep studing, keep learning, keep improving, but most important of all, keep living. I graduated on 2000, and I'm in my 40s. I WISH I had your studies when I was your age. You ALREADY know Java. I could only DREAM of studying it because the courses cost an arm and a leg. I could only work on PHP, and that stuff is so devaluated right now. You're good. You're doing much better than I did 13 years ago.
He tries to explain *why* Java is so popular. It is reasonable to suspect that there are qualities (arbitrary, good or bad) that cause this popularity. &gt; The question to ask is why does Java continue to be so popular? I think there are a number of reasons for this; let’s just highlight four: [...] While the reasons he mentions are connected to measures of quality he never states that being number #1 on the TIOBE index automatically implies these reasons. Discussing about the reasons of the popularity of a thing is perfectly reasonable and has no inherent fallacy. You should reread the Wikipedia article about this fallacy you posted. Beside this, high popularity of a programming language has many advantages.
What? Any IDE will listen for user input when your program waits for user input (eclipse, InteliJ and Netbeans as far as I know). When you can feed your program at any given time with some input you need to create a specific thread which only handles user input. 
Ah I just wondered what online in that context could have mean... I am not sure there is an eclipse based IDE called Che. Not idea if it supports this feature. 
what /u/RichoDemus said. The way the online IDEs that I've already tried work is that you have to specify the input before even running the program. This... works, but I was wondering if there was one that listened for user input in real time
[removed]
Escape analysis has a number of issues. For example, if you use direct byte buffers, the VM will have trouble unallocating them, as they have a funky cleaning algorithm (as it is off-heap). You'll also have a lot of problems with nice, clean polymorphic code, as inlining can't be done (unless you're only using one subclass for the affected type, in which case your penalty is checking whether the invoked type is as expected, or the optimizations will have to be thrown out). Same for recursion. No good with inlining for obvious reasons. I once gained more than 30% improvement in efficiency on a single threaded algorithm when I eliminated recursion. Also lambdas, same problem as with polymorphism. Also, the constant duplication doesn't help your case either. In other words, escape analysis is great if you know what you're doing and are designing exactly for it, which is usually the case with technology anyway. 
There are some really nice tools in the Java IDEs for improving code quality by flagging overly complex code
You'll probably have to spend ~$500 to get a good i7 or comparable AMD with a decent keyboard as well as good resolution. I don't even sit at the computers that don't move with me-- just connect to those over the network.
It looks like a hideous rip-off of IDEA's dark theme (it is).
I'd say to get out of the IDE. It helps when you write things from scratch and have to actually look up APIs. Also, if you enjoy Windows programming, do it. There quite a few C# gigs out there. 
Either I'm doing something wrong, or it seems a pain to set up - installing the plugin's the easy part, but having to then go change the editor settings on top of that (with no default settings for Darcula). Definitely promising, but needs work.
the polymorphism issue is huge - makes it really hard to know how a hunk of code is going to perform in the real world. i've been bit by this multiple times, and it's been hard to know from profiling that it's slower than it should be - it's been the regression relative to version control that's helped me find it but i haven't thought about it in the context of lambdas ... can you provide some more detail ?
I will say that I'm a little disappointed that you appear to want to run Minecraft graphical improvements but don't appear to know how to Google. You should learn because it is really helpful, I'm tempted to give you a lmgify link because "jar not running on double click" gave me quite a lot of SO answers. Since it appears to be running Java try the second link where they talk about being able to run jar from command line, but not clicking on.
... Which is also called Dracula. :P Anyway, I wouldn't say the theme is Hideous. Looks pretty good actually! But just saying, us IDEA users have had this and better for a long time ;)
Technically, Visual Studios will not do it by default
Late 2013 13" MBPr, 8GB RAM, 256GB SSD, dual boot El Capitan and Ubuntu 15.10 $1099 + $299 Applecare, I expect this to last at least five years. My last laptop was a 2007 15" MBP that was good for seven years before I passed it on to another user. As far as I know it's still working fine.
Darcula ;)
2014 MacBook Pro 16G Ram i7 I write software that runs mainly on Linux servers.
I knew it had a name but I couldn't remember. I prefer the light theme but only a dark editor window (I used Solarized).
2014 Macbook Air i7 8gb 256gb (personal), 2014 Macbook pro 15" i7 16gb 512gb (work)
I went from a Java job to rails and immediately hated it. Now back at the Java job and sprinkling in other stuff where it makes sense. Fairly different, so I'm not sure I can really share much helpful info sadly.
Well I'm kind of in a situation right now. My HDD crashed recently so now I'm having to settle for running a linux live distro that I put on a flash drive for the time being. Thing is I can't properly install any IDE on this distro —it's either buggy or doesn't install at all. 
Ah, that makes sense. Sorry to hear that happened by the way! It may be worth trying SpinRite to see if that will recover the HDD. Is it possible to have one browser tab to edit the code and another browser tab to run the code, perhaps? It's not optimal, but you could also try using a text editor plus command line on your local machine instead of the online IDE, if that helps. If the online IDE lets you store or sync the files to your own machine, you could also run the code on your machine via command line, and edit via the IDE. Not sure if any let you do that though. 
I did quite a bit of Ruby on Rails 2 years ago. Moving from Ruby to Java you'll find a couple things different. Obviously Java is not a dynamic language and sometimes you'll feel like some tasks are simpler to do in Ruby. The flip side is static languages will help you catch several mistakes early on, and you won't have to worry about things like Duck Typing. If your looking for frameworks that are similar to Rails, I would recommend [Dropwizard](http://www.dropwizard.io/0.9.1/docs/). [Spring Boot](http://projects.spring.io/spring-boot/) is also very popular, but it's quite different from any thing in the Ruby community. 
Surface Pro 1, 4GB of RAM, 3rd gen i5, 128GB SSD running W10. Thinking about upgrading to a newer laptop/2-in-1 though. The i5/256GB/8GB RAM SP4 looks fantastic.
I use a Mac at work and a windows box at home. To me the big difference is the hardware your system is built on. I'd look for 16g of ram, and an SSD, ideally with an i7. (though there are a lot great machines with i5s still) Honestly, the RAM/SSD is going to be your biggest bang for the buck, so I'd focus on get quality pieces for that part of your system
Lenovo Thinkpad T430 with 16GB RAM and i5. I love the nub.
If you see "gcnew" in any C++ it's a good indicator that it is C++/CLI.
Just FYI OP, it's *laptop*, not "labtop".
If you're wanting to be in the Java ecosystem without necessarily using the Java language, check out Groovy (and Grails). Groovy has some of the best parts of Ruby and Python but runs on top of Java.
The '4' is out of order in your username. MBP15 btw
Actually, I think [this](https://ak-hdl.buzzfed.com/static/enhanced/webdr06/2013/8/15/18/anigif_enhanced-buzz-11298-1376607193-16.gif) is a "labtop".
*Spring* is great and can help out making dev fast. Additionally, depending on how much flexibility you have using another JVM language like *Scala* (my favorite), *Groovy*, or *Clojure* might be a way to get some of the flexibility that Ruby has back. 
Yes. Eclipse work space shared to multiple computers is asking for pain. Bit of side step but seems like you are doing odd things so it might be relevant. Eclipse and Java can be installed and then the binaries can be copied. Once you have those installed binaries it is possible to use Java / Eclipse with out installing it. This way it is possible to run uninstalled even from a USB stick if need be. Makes building (and backing up) a dev env as simple as copying a directory. edit - corrected
Can you try and get a screenshot of what the window looks like for the half second that it's visible? Try pressing Print Screen really quickly. May take a few tries before you can get a good screenshot. Paste it into Microsoft Paint and then upload it to imgur or similar. https://imgur.com/
I'm afraid it isn't clear what you did, because there is a jar you are trying to run, and now you are referring to two of them. Did you go to the command prompt and run the command in the location of the jar?
Pick the computer you'd be most productive with. For me it's definitely Windows; give me a Mac and I'll want to jump out the window on the first day. For Mac users, it's probably the other way around.
13'' Asus 8GB RAM &amp; 256GB SSD running Ubuntu. Bought it more than 3 years ago. Running fine. I develop full stack web apps: Java, Spring Boot, AngularJS. Also use a lot of Docker son running on a linux distro is a great advantage. I usually run 5 containers at a time with no problems.
Derek Banas is sooooo good for this stuff.
Surface Pro 3 i5 8Gb of RAM. For school projects I get better run times than the Zenbooks and most MBP (someone has last years model which is a fraction quicker)
Thanks :)
Wouldn't recommend them. They are a [discouraged resource](https://www.reddit.com/r/learnprogramming/wiki/index#wiki_discouraged_resources) because they teach bad practices like variable naming ("bucky" is never an appropriate variable/class/method name), don't follow commonly acknowledged standards (like the Oracle code conventions), mostly teach in the "do this, I'll explain later" (where the explanation never happens) style. The above is bad if someone is a beginner and wants to learn, because they will form bad, frowned upon habits from the beginning, which is something that needs to be avoided, and worse if someone needs the information to dive into a profession. Derek Banas, as /u/Theonewhohonks suggested, has by far more and better content.
The dark theme isn't exclusive to IDEA. I've seen it on Atom, Sublime Text, and a few others.
although they are 99% marketing hype, 3 years ago I bought a MacBook Pro. i partitioned the hard drive and loaded Ubuntu on the other part. Frankly, I'm thinking about removing it because the osx lets me do everything i like about Linux. there's free software. i have unix command line access to do whatever the hell i want and much peripheral stuff just works. i think the machine is overpriced and overhyped but it works well. 
I'm using a Mid 2012 Macbook Pro Retina, 16GB RAM, i7 2.6Ghz, 500GB SSD with OSX and Virtualbox - works perfect up to today. When I bought it, I actually wanted to install Windows and just use the MBP hardware, but once I tried Windows 8 I was disappointed and gave OSX a shot. I'm happy that I did...
Lenovo g50-70 i5 8gb RAM 1TB HD (feel old school not having a SSD). Windows 10 dual booted with Ubuntu (can't remember which version). Although my machine is currently having its motherboard replaced due to a coffee spillage.
My work started giving the choice between Mac or Windows several years ago, I jumped on it and got a MBP 2013 16GB ram SSD. Coworkers who got the same are still working like new, as I am. Coworkers who got a Windows laptop (Dell) are already looking to replace them. 
System 76 Ubuntu Laptops, Built-from parts Ubuntu Desktops. Linux is getting pretty legit these days.
Since you're looking to go Mac, lots of people are providing great suggestions around the MacBook Pro, but don't discount the MacBook Air. The MacBook Air 13 is a great little machine for development. PS - The choice of model is going to be quite personal, the choice of specs are going to depend on your work. I do think I can safely suggest two to ignore, that being the MacBook, and the non-retina MacBook Pro 13. The MacBook is too underpowered for its price, and the non-retina MacBook Pro 13 just doesn't make sense in a world with a MacBook Air 13 and a MacBook Pro retina 13
Hi, nfrankel! It seems you're submitting *a lot* of links to your blog.frankel.ch, even though the post frequency isn't all *that* high. Please consider the below links, if you haven't already. I just think that you're at least moving around in a gray area, so you should be aware of the nearby abyss. https://www.reddit.com/wiki/selfpromotion https://www.reddit.com/wiki/faq#wiki_what_constitutes_spam.3F
slower. it did 18000 req/s at 2000 concurrent connections and couldn't complete an AB run at "-c 20000" edit: just did a manual "sweep". AB doesn't reliably complete above "-c 3000" (dies because of apr_pollset_poll). another factor was the absence of an obvious way to write async handlers. between the 3 things (lower throughput, failures, and no obvious async) i just stopped pursuing it. the (trivial) code i was using is in the github repo, so you can try it yourself. and if you can figure out async, let me know
In a "real job" setting, getting your feet wet on an existing codebase and navigating the corporate culture far outweighs the differences in language. Also, Ruby and Java are extremely similar in my opinion. You won't find any "method_missing" in Java, but you will find dynamic method invocation using reflection used a lot by libraries. Just get a good IDE and learn to use code generation, code navigation, debugging and refactoring.
Or head first java if you want a totally fresh intro to it. (And grab design patterns head first as well)
Well the tight integration of the hardware combined with the oneness of the Apple ecosystem makes it what it is. 
Thanks!
Learning about exception handling ;_;
Well, this is depressing.
Honestly just more job opportunities and more money.
I'm learning java, and writing an app for my wife's pottery site. I'm using the spark web framework, jooq for database stuff, lombok in a few areas, and thumbnailator for dealing with image scaling. I'm really enjoying everything. Java has so much tooling that makes things so much easier. Maven is amazing. Deploying a war and restarting a service is so much easier than anything I've ever done before.
No I'm down voting you because this is dumb FUD. This sub is for news, and not for peddling unsubstantiated claims. Provide proof if you're gonna make a bold statement like this.
Why? Applets were for functionality when javascript wasn't nearly as capable as it is today. Even so, it was horrendously implemented and even worse than flash for security holes. Why bring back a dead horse that deserves to stay buried?
That ship has sailed. * Even if the sand-boxing issue is fixed, applets are undesirable as they are another runtime that browsers must support, which is especially not good on mobile * Even flash, which is orders of magnitude more popular as a plugin, is dying out. * There is a much greater focus on web standards now, which would make it politically difficult to get applets back to the level they once were. * JavaScript can do a lot more now than it could when applets and other browser plugins were popular. What is your use-case? If you want a better developer environment (types, static analysis, better support for large projects) and don't mind walling yourself in (to some degree), you can try compile-to-js ([GWT](http://www.gwtproject.org/), [Dart](https://www.dartlang.org/), etc, etc.. You can also try TypeScript if you want (optional) static typing while still having good JavaScript compatibility.) If there is some functionality that isn't available on the browser, is there a reason you couldn't just distribute your application as a standalone executable?
Stop using applets
Originally, I went with maven to get a leg up on learning it for work. However, yea, I agree, gradle looks way nicer.
Is there a tool to automate generation of security policy files? Recently I was trying to take advantage of the security manager, but got bored of the insane amount of manual labor involved in setting it up I really want something where I run my application without restriction, then a policy file that enables all the thing my app did is output. It's still going to need manual tweaking, I'm sure, but it would have saved me a lot of time. 
I'm writing a bot that goes on chat-roulette'ish sites and gathers data about the users. Pretty basic stuff to learn more about Selenium and SQL.
Sandboxing is one security factor. Running only signed applets with valid certificates, by CAs authorized by the Applet Plugin, is another security factor. Taking your JS example... Despite Javascript being sandboxed in browsers as you said, would you give your personal data to a website with an untrusted SSL certificate? Would you do so if the website certificate was issued by some CA that is not trusted by your browser? That is why one must sign applets. For more security. But... yeah... anyway you should reconsider whether you really want to use applets these days.
How?
I've used sbt with scala and I enjoyed it, and gradle looks a lot more like that than anything, in my opinion, so I'll give it a shot. Thanks for the suggestion!
have you ever had speed issues with 8G RAM? Im torn on whether to pay another 300$ to upgrade to 16 G
Does it work for jar files or a dir of class files using eachother? Does it work for a single java file containing many inner classes? Or is it just 1 class?
Been working on a message board with nested comments similar to reddit, but more similar to a phpbb style. It uses Spring 4 Java config (not spring boot yet), hibernate, a relational db, flyway, and Angular on the front end. It's intended purpose is to showcase how I would build a full comprehensive production app, i.e tests, defaults, front end tool chain (npm/grunt/bower), etc, but on a super small scale. It's nothing more than poc and to land a good job. The back end is pretty much done and right now I'm working on the css part with bootstrap and less.
I'm rewriting my SPA. I'm getting rid of SpringMVC and replacing it with Redux and React. I'm dumping Core Spring backend with Spring Boot.
This is an awesome post. Thanks for sharing!
&gt; Quite a completely different reason in fact: by standardizing how DB is to be accessed from Java, developers can learn one single "framework", and still work with different DBs and different implementations (and use advanced features or unique integrations with DBs as they see fit). That's not a different reason, all you did was restate the same problem, from the perspective of application development, not deployment. &gt; The goal of any standard is not to facilitate migrations. How are we suddenly talking about migration?
Building a simple report generator using open-source tools. iText to build PDFs and Apache Velocity to generate HTML from templates that will be written to a PDF. All served by a web service. Any questions please ask!
This is great, I love when the write ups have the code broken down function by function!
It's amazing! I'll start Uni again in July, for now I'm learning through Codecademy and Udemy. All the best!
A library to make some uses of encryption easier and safer. A library to make some uses of encryption faster. Logic to modify handling of some cryptographic keys.
&gt; Java Object serialization is fundamentally insecure, so you can usually use serialization to get full control of the JVM May be true. I dont use it because it claims it doesnt work across different java versions where the data format changes. &gt; The JVM is a programming running on the host computer and can do bad things. This is not an easy problem to fix. Why is it hard to fix? Cant we just disable serialize and any other parts that are unsecure by design?
&gt; If someone purchased an individual customer license, and then got a job, would they officially be able to use it at their company? Yes. Personal license holders may use their license on the job. If they are being reimbursed for license expenses, they should be using a business license (cf. [What is the difference between commercial and personal licenses?](https://sales.jetbrains.com/hc/en-gb/articles/207241075-1-What-is-the-difference-between-commercial-and-personal-licenses-))
From https://sales.jetbrains.com/hc/en-gb 1) What is the difference between commercial and personal licenses? A Commercial license is the standard licensing option for organizations and business entities. Licenses are purchased by the company and can be used by any person within. A Personal license is the discounted option for a private individual who purchases a license with their own funds, and solely for their own use. 2) Can I use my personal license for commercial development? Yes, you can use your license for any kind of development. However, only you may use your personal license; you may not share it with others. All seems pretty straight forward. One thing to note is you can't get reimbursed by your company for a personal license, it has to have been paid for out of your own funds.
Get something that is upgradable to at least 16gb ram.... And get something with good screen resolution. At least 1920x1080. I bought a refurbished hp zbook i7 for under a grand... and got 32gb ram... and reused my old 750gb ssd. It screams. And it has display port for my monitor. You don't have to go all out on the ram initially... or the hard drive.... You can upgrade those later when you've paid off the computer. If you lock yourself into lower screen resolution or max out at 8gb, you won't get as much mileage down the road. 
The JVM prizes backwards compatibility. If you're okay giving up chunks of the JVM functionality (reflection, java.io.*, good interop with various libraries), but still really want to use Java, GWT is the correct solution. If you need help getting started with GWT, I'd be happy to show you how I do it and what pieces I look out for. Here's a program I write that runs on the web because of GWT: http://www.vivarium.io/life/
true in practice, but you could get sued for saying that to enough people.
Well, Oracle™ wouldn't like it, but it's true. Android is still running Java, just a "spin-off" if you will.
but the exceptions are objects and it's all confusing and stuff.
&gt; How do we get unsigned java applets to be accepted by default in common browsers again? You don't. Ever.
you could. nobody will use it. and they shouldn't.
[removed]
It's **Java**, not J.A.V.A. Java is not an acronym. The language is named after the island where the coffee comes from.
Would you rather they be keywords? Much better that they're objects so we can extend them and add new ones as needed.
oh you ;)
For a guy that's just deploying a war file that's a dead simple usage of Maven. Switching to Gradle would be a big waste of his time.
Will this be open source? I'm really interested in this one! Keyczar is great, but begins to be a little bit rusty (even for big corporate standards!), Shiro and/or Spring security are okay, but the APIs could be friendlier sometimes.
This sounds great! Do you have the code up on Github?
Creating a backend based on Lambda functions in the Amazon Web Services, utilizing the Apache Cassandra database and the AWS's API Gateway. It's generally fun, although working with AWS can be challenging sometimes. Not very intuitive or user-friendly and it lacks in some features.
These days, I only see applets with outdated VPN software.
They're objects rather than text because you need to store a few things about the exception like the type of the exception, the message, the stack trace... You can't store all of this as a long string of text because it will get complicated. So you create an exception object and put all of that in it and throw it
I'm afraid that policy file should be custom-made for each application. Hence it cannot be generated automatically. And yes, it requires a lot of work to configure it manually.
Exams in about 50 minutes, the joy! This is what I can expect... https://infotomb.com/vlmzt.zip
whoosh?
How do you find using hibernate and a relational db while trying to efficiently build a tree of nested comment nodes?
Taking data from here and putting it over there.
Programming a multiplayer tron game. Needs at least two people to play but can have as many join. 
Well, that's rather the point. It seems life it should be possible to run the security manager in an "audit" rather than "enforce" mode, which could report what it would have blocked 
Soon, I want to clean some things up before I make the initial commit. I'm also planning to submit it here for a critique.
I'm not really sure. It works for now (small scale), however the whole idea of storing a tree structure like a comment thread on reddit in a relation db is an interesting topic unto itself. I'd like to spend more time refining my approach which for now is just a 'reply' table with each child reply referencing a parent reply by its primary key. The hibernate mapping is just a self join. I'm absolutely sure this isn't the most efficient way to do this. https://news.ycombinator.com/item?id=138149
How did you do?
Most likely he's referring to an [enterprise service bus](https://en.wikipedia.org/wiki/Enterprise_service_bus). Pretty common pattern in the professional Java world.
You know I was looking for that Book at Barnes and Noble last night and they didn't have it. Of course I can just order it online but I kinda needed something right away so I went with the Java All in One for Dummies The only other option was Learn Java in 21 days I guess it's 21 hour long lessons but this book has better reviews and it seems to cover,more 
* https://www.reddit.com/wiki/selfpromotion * https://reddit.zendesk.com/hc/en-us/articles/204536499-What-constitutes-spam-Am-I-a-spammer- Not only do half of your submissions point to the same domain, you mention the same site in every other comment, too. It's also not the first time that someone has pointed this out to you. Ask yourself if you match the site-wide rules &amp; guidelines.
Yes. I'm asking [which one](https://en.wikipedia.org/wiki/Enterprise_service_bus#Existing_ESB_products)? Or if they implemented the framework for [enterprise integration patterns](http://www.enterpriseintegrationpatterns.com/) themselves. (Either by using Apache Camel, something similar, or by implementing the pieces themselves.) I'm just curious because I (sometimes) work with JBoss Fuse (and used to work with SOA-P a while back) and I like hearing about real-world uses of the technology.
That's fair. However, I would argue that this is more transparent and might also bias against me (e.g. downvotes if I over promote). So if I post a link to the website too much I might burn it with the community. So the benefit also carries a risk if I post stuff that's irrelevant which correct me if I'm wrong but isn't that the whole idea of the community here? Personally, I think transparency in these cases is far more important. Should I have just hidden my bias? Wouldn't that have been worse? Isn't this approach encouraging that?
That's how I spent the first three years of my career. Data-warehousing from multiple vendors into a single state-wide system. Fun!
Spam account by the looks of it.
Depends on the context - could be the JVM as a platform, could mean a specific instance of the JVM, could mean the programming language.
Yuck, written and posted in 2016 but still suggests downloading Java 7, end-of-lifed in mid-2015.
Haha! Awesome! I failed it the first time. I need to book it as part of my work objectives. Not looking forward to it. 
If you want a mac you should got for 16gb 15 inch retina Model. You get a decent graphics card and support for 3 external monitors, which is a big benefit over most other laptops imo.
This is very interesting , would you be able to add example of usage 
&gt; `p.getGender() == "Female"` Does this guy test his code? 
Wrong subreddit. Your mouse code is Java*Script*, not Java. 
"Isn't working" isn't enough. Tell us what's supposed to happen, and what's happening instead.
What needs optimisation in the above examples? edit: The generated SQL is exactly as the user writes it through the API. It's hard to "optimise" SQL based on rules, which are probably mostly off in the context of actual production data, constraints, and indexes.
The sql that is generated by jOOQ and actually gets executed by the server is what needs optimization.
OK, [I've edited my previous post](https://www.reddit.com/r/java/comments/41jfly/using_sqls_in_in_jdbc/cz39sjl). I wasn't sure why anything was assumed to be optimised, because there's no point in doing that in the client. Only the server should do these things.
"Nobody should use MySQL". Wat? Not even a reason? No one should read this blog. 
i'm also wondering why
Sounds cool. Besides my day job (java smasher) I'm working on PoC'ing out an ERP for my company using a similar stack ( Spring boot, Angular, etc) Since I'm so early into the project I'm thinking of going full blown microservice on it and using a combination of rotational and nosql dbs for the different back-end services. Really, just for the experience with Mongo and possibly Node for hosting the front-end. :) I love new toys. Edit: a word
Not agreeing or disagreeing with the blogger, but elsewhere in the post the author has this &gt;With [MySQL](http://dev.mysql.com/)… oh, who cares, [nobody should use MySQL](http://grimoire.ca/mysql/choose-something-else).
I guess the links weren't available in mobile if he did have links 
Thanks.
JOOQ is useful in situations where you need to support multiple databases, although I would not recommend doing that with a production system. 
Don't spread yourself so thin. Do study how J2EE apps work, but Stay away from Ruby and Python until you know much more Java than you do now, or unless a job comes floating by. Beyond the language itself, learn the tools. Tomcat (among others) will allow you to see how java web server applications work. Maven is widely used as a build / deploy system (there are others -- search for "maven vs"). Eclilpse is a good free IDE; knowing how it works will be useful.
Full disclosure: I wrote this. I've been spending a lot of time working with completable futures in a recent project and thought I'd try and introduce it to others. Would love to hear comments or or suggestions.
Books and theory are all well and nice, but *how much did you actually program*? A lot more important than theoretical knowledge (what you get from books) is *practical experience*. You can read all available books about a subject (especially in programming) and have immense theoretical knowledge, but will fail on even simple programming tasks because you have never learned *to program*. Reading books about programming is roughly (the comparison lacks a lot) like reading books about a spoken language. If you don't ever speak the language, use it, more or less live in the language, you will never become proficient. I said above that the comparison lacks a lot because programming (in any language) is a whole lot more than knowing programming languages. Programming requires a different way of thinking: abstract/algorithmic thinking, a skill that can mainly be acquired only through practice (i.e. through actual programming). Sure, the books give you some headstart, but what you need to do much more than learning other languages/frameworks, etc. is to practice. To work. Write programs. Lots of programs. Visit the programming related subreddits like /r/javahelp, /r/learnjava, /r/learnprogramming and try to solve other people's problems. Solve them by actually *doing* the programs, not by reading books/googling. This will really boost your skills and take you on the way to being employable.
What you are doing is *blatant self-promotion* for your company. Nothing more, nothing less. Sure, *some* posts are relevant and may require links to or mentioning of your company, but the *vast majority* doesn't. If you write a comment, just *leave out the company name*. When you write something, like "in my company &lt;companyname&gt; we do..." it is more than sufficient to write "in my company we do..." *without* mentioning the company name as it is of no relevance to the content. Example from [this comment](https://www.reddit.com/r/java/comments/41jiby/how_to_get_embedded_javadoc_source_samples_that/cz2uy3x) in the *very same thread*: &gt; We have a lot of Codename One news... Here, it would be *more than sufficient* to write: "We have a lot of *company* news" without mentioning the company name. People are getting aggravated against you because you keep rubbing the company name in their faces and that's what nobody likes. So, for future: *Stop mentioning your company name everywhere.* Reddit *allows* advertisement, but it *is not* an *advertising platform*. This is not the first time that people complain about your constant spamming and self-promotion. So, under the reddit rules about spam and self-promotion you could be considered a spammer. Please, rethink the way you are posting and also the content that you are posting. Some more: &gt; Personally, I think transparency in these cases is far more important. There is a huge difference between transparency (which could be solved by writing "my company", or "my employer") and self-promotion/spam. What you are doing is clearly the latter.
Thanks for sharing that. That was awesome 
You learn programming by programming. Reading those books might give you vague idea, what programming is in Java, but you need actual experience to make any money or to actually know what you need to do. No these books are not enough. In freelance market it is probably harder to get by than in some larger company at first. Companies can guide you with your experienced colleagues and you would gain valuable knowledge, but if you'd just start "working solo" there's probably 99% chance you mess the project up, for whoever would hire you without experience. You can't just start experimenting when you have taken the project from the client, you have deadlines. Even experienced programmers mess up really often, I can't even imagine what would a person do who's experience is mostly theoretical from a book. 
You didn't even bother to actually answer his question. 
I mentioned the name of the books to give you an idea of what topics of Java I know about; it's not like I have only read the books and have no practical experience. With that in mind, my question is: Are the things I've learnt about Java *sufficient enough to be a developer* or are there more *aspects* of Java that I should know about? I hope I made it clear.
In fact, the whole "GC Algorithms: Implementations" section was updated, with more detailed explanations for CMS, some words on Shenandoah, and multiple corrections and additions all over the handbook. Special thanks to /u/dmitrinove, /u/cogman10, /u/Veedrac and others for their comments to previous versions of the handbook!
Since we were talking in this thread about "the company" I just used the name which makes more sense to me rather than be obtuse. I hardly think I'm promoting "the company" right now? I don't think this thread is helpful for "the company", so I'm honestly trying to understand what I'm doing wrong here and what's reasonable. I usually prefer full disclosure in my comments, if I don't full disclose commenters do say "FYI he works for this company" even when I don't mention the company. E.g. if I'm criticizing a technology at some point I did get that specific comment. So no problem, I can write "my employer" etc. Would that solve the issue? If I link to the article above on dzone would that be OK? Do you want me to stop posting entirely?
Based on this information it's hard to say. I don't know what projects you have participated in. I would recommend reading "Java Concurrency in practice" and "Thinking in Java" as well. The first on is more important if you do web development (and obviously any other multithreaded programs). The second one is fundamentals and should be known what ever you write in Java. 
A Java implementation would have been more interesting.
I'm confused by the 5-iteration warmup. Is that enough to trigger the JIT, or are these benchmarks on interpreted code?
There are 5 iterations of 1 second each: @Warmup(iterations = 5, time = 1, timeUnit = TimeUnit.SECONDS) Consider also the other attributes to the `@Warmup` annotation.
Oh yeah, the meaning of "iterations" was confusing me. Reading the docs clarifies: http://javadox.com/org.openjdk.jmh/jmh-core/0.9/org/openjdk/jmh/annotations/Warmup.html
Thanks for the feedback, I'll try to internalize that and reduce the friction. Because of the anonymity aspect I got a sense that some of the previous comments directed at me were from some guys who got offended by some of the posts (e.g. JavaFX stuff) or considered themselves in competition. I did get that specific "works for X" comment which made me post a full disclosure more often, I'll avoid that in the future. 1 in 10 sounds problematic especially when the term "self promotion" is vague. E.g. I recently posted a comment here: https://www.reddit.com/r/androiddev/comments/4188fp/why_was_java_chosen_as_default_application/cz0n0ee?context=3 A couple of responses asked for an article on this which I'd like to write, but it would again link to our domain which would violate that 1 in 10 number... I can wait for other outlets to pick it up and then post that but it seems arbitrary. Can I post more dzone or javacodegeeks links that exceed the 1 in 10 number? Do they count as "an outlet"? I do participate in a lot of discussions, my fields of interest are mobile and cloud so its pretty narrow but I did write a lot about FX, google/Android deal, cloud etc. all of which mostly relate to my professional history. I don't participate in discussions on things I'm not proficient in so I won't comment on something I don't know. We're a small startup so we don't have an official PR team and I think stuff won't backfire at me in "the company". 
&gt; Can I post more dzone or javacodegeeks links that exceed the 1 in 10 number? They wouldn't count towards the number of self-promotion posts even if you were the one to write the article ;) So, go ahead.
Great article. I'm currently doing a lot of Dart programming and we use Futures throughout the code base. Great to see Java has this ability now. More explanation of "async" would be nice.
I was working on a small application that reads and processes csv file to get more familiar with Java 8. I am stuck [here](https://www.reddit.com/r/javahelp/comments/411uzw/please_help_with_code_for_using_executorservice/) for now. I will be really grateful if someone can point me in the right direction
&gt; When it comes to popularity, in many ways, apparently. There's number of jobs available, number of books, number of stackoverflow questions, number of articles on the web, number of github repos, etc etc etc. &gt;number of jobs available
Thank you. It's been a while since I've had a look at the design. Might give it a once-over since you brought it up.
I know of `whenComplete()`, but to be honest with you, I haven't really used it myself. Can you give an example? For instance when would `whenComplete()` be preferable over `future.thenApply(/* something */).exceptionally(/* Error handling*/)`
It would help if you re-worded the question in a way that didn't simply allow you to refute every answer that isn't the one you're looking for.
http://m.imgur.com/LYDxv62 iphone5. Alien blue. Their internal browser. 
Disclaimer: I am the CTO of the company that makes this product. Included as free functionality is the ability to track JDBC queries and methods, and provides analytics of the most commonly used queries, and cache recommendations. It has a 30 day trial of the more advanced features, including caching and load balancing of any JDBC data source, all of which can be configured at runtime without an application restart.
JSP isn't woefully outdated. its one of the fastest templating language out there. However, if you're still using MVC model 1, where the request hits the JSP without first going through a controller, then this is woefully outdated! 
Well, his "Foo" object only contain an int, I'm not sure if that's enough to do any kind of decision based on that. Also, after the "JIT warmup", shouldn't he do at least a 10000 iterations, then divide the time taken by 10000 to get his number? I guess he just follow the JMH framework, but this seem a bit weird to me.
The article's author (/u/shipilev) *wrote* the JMH framework himself. It definitely does the right thing, warming up the JIT compiler, running iterations for a time period and dividing, etc.
That's definitely a good way to go, and what I usually use, but this writeup is specifically about Spring, and tests that are Spring enabled. And you can't use the annotations in that way - simply because the point is not just to mock something, but to inject that mock in the Spring context. Hope that clarifies things. Cheers, Eugen. 
Thanks for addressing that. Every other link seem to have been there. And thanks for responding to the feedback, I did enjoy the post I just grabbed your same tone since It seemed a bit snark and without reasoning :) 
Which, if you look at the parent, that talks about the many ways to measure popularity *in general*. It doesn't say or even hint that Tiobe uses all of these or even one of them and certainly doesn't say it particularly looks at jobs.
Wow, very neat stuff. I find it really interesting that the VM can't figure out how to use vectorization instructions in the zero case. To me it looks like it should be pretty much identical in the Java code to what the simple method is doing.
Awesome! Looking forward to version 2.0 also.
Thanks! I was able to figure it out with the help of my former professor! : D
Woohoo, I can't WAIT for my next code reviewer to suggest T[size()] instead of T[0] so I can show them how incredulously wrong they are and forever shame them in the eyes of our peers as inexpert buffoons who know nothing of what they speak! Muhahahaha! . . . ^^Btw ^^this ^^applies ^^to ^^javascript ^^too ^^right?
JDK = Java Development Kit: What you need to compile code JRE = Java Runtime Environment: Runs compiled code 
Aw crap, I've been using new `collection.toArray(new MyType[0])` since ever as it is cleaner than the alternatives, but IntelliJ kept flagging the code as a sub-optimal. I recently changed a LOT of code to use the uglier `collection.toArray(new MyType[collection.size()])` just to learn now that this is slower. The API could have this `toArray(T[])` deprecated and provide alternatives such as `toArray(Class&lt;T&gt;)` and `fillArray(T[])`. I'm also waiting anxiously to get warnings from a future updated version of my IDE telling me that `collection.toArray(new MyType[collection.size()])` is not only uglier, but slower.
* Quite a few [bugfixes](http://www.oracle.com/technetwork/java/javase/2col/8u72-bugfixes-2775805.html), especially in Nashorn. * 8 [security fixes](http://www.oracle.com/technetwork/topics/security/cpujan2016-2367955.html), including 4 that only apply to applets and JWS, and 4 that can also affect servers depending on how clients can inject their data and what APIs are used
Yes, but I like to solve these problems using libraries. That way it's a simple solution that everyone can easily understand, debug, tinker with, and extend. No special setup is required to integrate it into your workflow. Dealing with the compilation process seems much more messy. I'm also just curious as to what can be done in plain Java. Everyone seems convinced that we need a new language or extensions to it, but I want to know what we can do with what we have if we're creative.
I haven't worked with Guava's ListenableFuture, but giving the wiki a brief look I'll have to disagree with you. I much prefer the CompletableFuture API. &gt; xEither() and xBoth() methods seem like they don't belong, they should be static functions Yeah fair point. I hardly ever use these. How often do you really want to complete only one of two futures? For both I usually use `CompletableFuture.allOf` and then refer to `getNow()` to get the data. I rarely want to complete exactly two. If I happen to have multiple futures, I'm likely to have loads more than two. &gt; The api seems to encourage stuff being run on the "default asynchronous execution facility" most of the time Not entirely sure what you mean here, but as you mention you can easily provide specific executors for the async methods. This topic seems to be more an issue with thread control in the application and less about the APIs of the futures. &gt; Methods that return `CompletionStage&lt;Void&gt;` should just return void Either you work in futures or you don't. The use of futures indicate some asynchronous action. Returning `CompletableFuture&lt;Void&gt;` simply means that action has no valid response value, just like `public void foo()`. It could still throw an exception. If you have some code that isn't asynchronous in any way, will never be, or will never make use of an asynchronous API behind the scenes, then you can forego with the future altogether. In our main application, the vast majority of any code that does anything relevant is implementes using `CompletableFuture`, and we use plenty of `CompletableFuture&lt;Void&gt;`. &gt; `exceptionally()` and `thenAccept()` should not exist separately, if you let devs ignore exceptions they will These two are separate for a reason. What `CompletableFuture` tries to do (and the main reason I love it) is it allows you to write exception handling much like your normally would with try/catch, catching exceptions where appropriate. If you write your `CompletableFuture` code properly, chaining together all the futures, any exception will cascade down *until* you reach and `exceptionally()`, which is essentially the same as `catch`. Dealing with all errors all the time is exactly why I dislike callbacks like you describe. I'm unfamiliar with Guava's futures, but if `onFailure()` doesn't do anything by default, you should always provide it. With `CompletableFuture` you can be sure exceptions will never be lost, and you can deal with them when you need to. 
"The Dependency Injection abstraction framework Gluon Ignite creates a common abstraction over several popular dependency injection frameworks like: Spring, Dagger and Guice." Can you explain a use case where this might be something you want to do? It sounds quite a lot like a solution to a problem that doesn't exist.
How does this solve the issue of having to have a no args constructor by those frameworks? Do the new versions take suppliers or is that just your idea of how to fix them? 
Nope, it's the name of the creator's favorite caffeinated drink ;) (and an island). Maybe the creators wanted to spend some vacation somewhere nice...
Amen to that.
I just can't see the real world benefit to dependency injection. It seems to me that it removes a negligible amount of boiler plate that I can just get the IDE to generate for me anyway. It seems like a fancy term for giving a class its ivars and nothing more. 
I personally haven't ever came across the need for large arrays like this. But there is a system in place for proposals for features. That is what the JSR system is for.
...and then a tool to simplify this tool usage... http://jhipster.github.io/
The table pretty printing is pretty neat. But using the plain Java approach also means that I have to repeat the fields in the implemented method which is more error prone than using lombok, auto value or just letting my IDE generate the boilerplate.
the only thing I found so far http://cr.openjdk.java.net/~jrose/pres/201207-Arrays-2.pdf
No mention of the [ExpectedException rule](http://junit.org/javadoc/latest/org/junit/rules/ExpectedException.html).
The difference with Spring is that we're talking about a DI within a context. The responsibility of instantiating things is in the container for the most part - which means that, in order to inject a mock in there, you have to go through Spring. You can certainly still mock anything you'd like manually, but it's simply not going to be used by the container. 
The interface is `CaseClass`. `AbstractCaseClass` just adds the three common object methods. It doesn't sound like you looked closely.
What about a custom annotation like @LargeArray instead of changing the syntax? 
Bug report for IntelliJ IDEA is here (vote for this one!): https://youtrack.jetbrains.com/issue/IDEA-150638 And FindBugs: https://github.com/findbugsproject/findbugs/issues/78
It's on 3 Billion Devices!
You can have the JVM log the various types of access requests (https://blogs.oracle.com/lkolisko/entry/debugging_java_security). Link is quite old and it may've changed a bit. I vaguely recall some GUI tools popping up from time to time on freshmeat or similar that would ease the pain a bit.
Oops! I read through the README which gave me the impression that the recommended way to do things was with the abstract classes. Then I totally missed `CaseClass` when I looked specifically for it in the Javadocs. Sorry! Anyways, it's a neat project! I like to see library-style projects like this that don't tie you down to any one way of doing things.
Since this question is Java Programming help, it should go into /r/javahelp as is indicated in so many places on this subreddit.
&gt; The select method? What? Sorry for the confusion, I italicized edits to clarify. It looks like you've built a "reflective base class" library. &gt;I don't know what you're talking about or why reflection is being brought up. This library doesn't use that. I didn't look beyond the readme, but this looks like reflection to me: println(getValueByName(john, "salary")); I suppose you're using a map to store references. Regardless all the concerns on that slide still apply but even more so as your method is even less efficient. Of course, you don't always have to worry about that, so that's not necessarily a bad thing. 
Now now there, everyone has to start with the basics: plain SQL queries filled with injection vulnerabilities.
Use an ORM framework, JDBC or download a driver for your database and use that to produce queries. Also try /r/learnprogramming
For scalable web services, look at Java EE, and then specifically at JAX-RS (restfull api), BeanValidation (constraints on your data), JPA (ORM/Persistence) and CDI (component model for your business code with contextual injection, scopes and extensions) The MVC framework to look at is JSF, which is a part of Java EE. It too works with BeanValidation and CDI, and you'll likely use JPA with it as well.
yes, the phrase 'easier to test' is ambiguous between 'easier to properly test' and 'easier to get a green checkbox to show up'. 
Doesn't it make more sense to just use files and streams with those sizes?
When you compare them and add values to represent different stuff then it becomes simpler to not do that. But the instances i've used it is a [support vector machine](https://en.wikipedia.org/wiki/Support_vector_machine) to look for similar patterns in bacteria or a dynamic programming setup with a x number of arrays for every dna string to check the edit space needed to get similar strings. Both of them uses massive arrays. 
http://javachannel.org/posts/expected-exceptions-from-junit/
Thanks! This is great feedback.
&gt; Java fx is pretty niche. Desktop guis in Java are a dieing breed I think. Perhaps. I'd be interested in finding some stats to investigate this further. I'm really sick and tired of writing JavaScript in web browsers.
It sounds like Java EE is what I should be investigating; especially a lot of my work involves corporate clients/consulting.
Thanks for the feedback! Java has a vast ecosystem and approaching it is a bit intimidating; especially if you want to avoid spending time in the "wrong" direction.
Step 0: Realize this actually belongs in /r/learnjava Step 1: Find out how HTTP Basic Authentication works Step 2: Add a header 'Authorization' with value 'Basic ' and the Base64 of username:password.
+1 for the micro service frameworks, Dropwizard in particular. Makes developing and deploying APIs an absolute joy.
Look at jOOQ over Slick for Java... - http://blog.jooq.org/2015/02/24/jooq-vs-slick-pros-and-cons-of-each-approach/ 
Well don't get me wrong, I love the Play framework and it's my default when I want to create something but it's quite hard to get good learning material, either it's outdated/old or incomplete. I took the extra mile, learned Scala Play and Java Play. I'm very happy with the results but I wouldn't do that ever again.
&gt; In other words, how much Java do you need to learn to stand any chance in the freelance market? I've bought the following books: This may be a more useful test: Look at 10 popular apps on the android or iphone app store. Could you implement them? Not necessary at scale, but just a prototype would be fine. Could do you do it? Would we say a chef was qualified if they could not prepare a selection of common meals? Writing code is an important part of the learning cycle. Consider programming to be a mix of art and engineering. You can learn all the techniques with handing a brush from books, but you *need* to practise the actual task of painting in order to improve at it.
Or you can just use the ExpectedException and rule combo, at least that checks the message. 
Although I consider TestNG better than JUnit, the way to go is AssertJ 3.x which supports lamda expressions. @Test public void testException() { assertThatThrownBy(() -&gt; { throw new Exception("boom!") }) .isInstanceOf(Exception.class) .hasMessageContaining("boom"); } http://joel-costigliola.github.io/assertj/assertj-core-features-highlight.html#exception-assertion (scroll a bit down to the Java 8 example)
Thats not how you create a Base64 encoded string.
A few things: * formatting * Final is a pretty bad class name - we can declare classes as final when we don't want them to be extended - is this what you wanted? public **final** class GoodClassName{ } * Assuming the user/pass are declared somewhere you can rewrite val. * You're calling toString() on the class Base64 which won't do what you want. e.g. String val = username + ":" + password; uc.setRequestProperty("Authorization", "Basic " + Base64.getEncoder().encodeToString(val.getBytes())); p.s. I haven't tested this
I never heard of testNG and hadn't had a particular use for it. But now I know. 
&gt;It seems that JavaFX moved to maintenance mode a couple of years ago. This is just not true, features were added each minor release of 2015. 
Why do you put assertions after provoking an exception?
Only time we were bit by this was when we were verifying some mock methods were called by the throwing statement. A more compelling use case would be verifying that the failing statement didn't leave its job half-done, leaving the system in an inconsistent state.
&gt; Do I think that the play developers are a bunch of ignorant assholes living in their own little world where documentation has no value? Ouch. I'll cop to being an ignorant asshole living in my own little world, but ouch. We know that some people don't like the documentation, but I and the rest of the Play team absolutely believe documentation has value. The issue is that knowing something is a problem isn't the same as fixing it -- what does "better documentation" look like? And to whom? Which pages have problems? Where is it unclear? These are actionable questions: we can file bugs on them, improve sections and work through things. But we need feedback on the actual pages, sections, paragraphs, even word choices. Documentation takes work, and the skills needed to write good technical documentation are very different from the skills needed to write code -- you have to think like someone who doesn't know the framework very well. It really needs fresh faces to come in and fix typos and point out things that are unclear. The best way to fix bugs in the documentation is to scroll down to the end of the page and create a small little branch in Github from the browser. For example, the documentation for the Java version of the HTTP client is here: https://www.playframework.com/documentation/2.4.x/JavaWS and if you scroll all the way down, you'll see "Found an error in this documentation? The source code for this page can be found here. After reading the documentation guidelines, please feel free to contribute a pull request." Clicking on that link will take you to: https://github.com/playframework/playframework/blob/2.4.x/documentation/manual/working/javaGuide/main/ws/JavaWS.md More generally, the documentation for Play is all in Markdown format under: https://github.com/playframework/playframework/tree/master/documentation/manual and there's a README for the documentation server that describes how to run the embedded test snippets and start up your own documentation server: https://github.com/playframework/playframework/blob/master/documentation/README.md Issues are marked with the documentation label in Github: https://github.com/playframework/playframework/labels/documentation Contributing new pages and sections is best done with following the documentation guidelines: https://www.playframework.com/documentation/2.4.x/Documentation TL;DR -- if you can point out in a Github issue where Play is unclear and how it could be improved (and add sections to make it clearer) then we can merge it and make it better. 
This is madness. FindFirst and findAny do what they say they do. This guy conflates what his data represents with some unfounded responsibility of these two java methods. 
Tesseract is good 
I could understand how someone could assume that a method called `findAny()` would potentially return all elements matching the criteria, until you look at the method signature and see it only returns a single item and then you realize that it's just going to return some random element that works. `findFirst()` is extremely self explanatory, it's going to return the first item it finds.
Microsoft Edge browser, to be clear. 
Hi, I'm "this guy". Nobody ever said anything about these methods having a responsibility that they don't fulfill. They are neither being criticized nor the article's subject. The article pretty clearly aims at developers. It nudges them towards the fact that `findFirst` and `findAny` have a very particular behavior that might not be correct for the requirement at hand (namely to assert that there should only be a single element). &gt; So of course there is nothing inherently wrong with findFirst() and findAny(). But it is easy to use them in a way that leads to bugs within the modeled domain logic.
If you control the print payload, go with a qr code or a Barcode, you will have much less pain and tears that way... 
For a project that used to employ over 100 full time developers and far more personnel going down to a dozen or so developers is maintenance. Notice I didn't say features don't go in, its just that even existing features are often "half baked" (e.g. javafxpackager). I think Oracle signaled this perfectly in the past couple of JavaOne's when they finally gave up on even trying to show a JavaFX demo of worth. 
I've used Tesseract with some success, through Tess4J. The main problem is that you still have to install Tesseract locally in order for Tess4J to work, so if you're making a project you intend to distribute to other users, you'll have to figure out how to package it, which hugely bloats an installation, or convince them to download it locally. Tesseract is quite powerful, though. If you control the printed medium, you can train tesseract to recognize your specific font, which improves its accuracy substantially. Caveat: I did not use it for any high volume or professional tasks, so my limited experience may not be representative.
I still don't see the point of getting all complicated when all you want to do is check that a simple method call throws a proper exception. For instance: @Test(expected = NullPointerException.class) public void testRequireNonNullOnNull() throws Exception { Objects.requireNonNull(null); } 
See, it's easy: Either you can rely on the fact that there is a unique result (then use `find...`) or you can't (so you have to do something else). Correctness beats performance any day of the week. I've been looking at quite some code using streams and I often saw that there was no reason at all to assume uniqueness but the correctness of the program still depended on it.
Switch jobs, then. :)
Last time I surveyed the landscape, pure Java OCR was like a sasquatch: many claimed to have seen bits of it, but nothing tangible or ready for prime time was available. As others have indicated, the greatest traction seems to be in wrapping Tesseract. There are libraries for doing this, but nothing truly portable.
 &gt;Tesseract is quite powerful, though. If you control the printed medium, you can train tesseract to recognize your specific font, which improves its accuracy substantially. So true. That can be useful though. I trained it to recognize OCR-B and now it only recognizes that, everything else is garbage. I use it in a banking application. 
Since they are still more powerful then HTML 5, no, they are not outdate. And they're more secure then JavaScript. 
Can you run Java Web Start? 
You might also remember that HTML5 keeps backward compatibility with older versions of HTML. There are Millions of man hours of good Java applets out there that shouldn't be abandoned.
I'd skip the whole JEE/Spring/JPA/Hibernate stuff. A Jetty &amp; JDBC combination with a Java main is so much simpler. 
I use continues pretty often. Whenever they make sense, but not when they don't. I don't see it as bad programming practice, unless it effects readability for that particular context (which just depends on the function in question).
&gt; pure Java OCR was like a sasquatch: many claimed to have seen bits of it, but nothing tangible excellent information transmission. i understand you completely. 
I use them whenever I deem them necessary. Sure I could probably reformat my code to avoid them but that's not where my train of code was going. Your teacher could make the point that you should never use switch statements because you can just use an if-else if. 
Nope, you're completely missing the point of the library. There is no reflection. `getValueByName`, like all the other utilities, makes use of the `buildResult` implementation of a `CaseClass`. [Here](https://github.com/alexmojaki/case-classes/blob/master/src/main/java/com/github/alexmojaki/caseclasses/GetByNameBuilder.java) is where it happens. There is no map either, so there is virtually no memory usage. The only inefficiency is that it's an `O(n)` search where `n` is the number of components in the `CaseClass`, but that's rarely going to be significant. In any case, `getValueByName` is one of the least useful utilities in the library.
More than 1 continue in a loop , you got structural problems that you need to address. if/else with an empty branch is kinda ... useless (which is what continue does). Code like this: for(String s: list) { if(s.isEmpty()) continue; ...... } Is perfectly ok in my opinion. Just like early returns from functions, it lets the reader clearly and easily understand what kind of input is not wanted. But, just like 5 returns from functions are awful, 5 continues in a loop are bad. And if the teacher really said "since it's useless and no one uses it" it just means that he's a fucking idiot, and you should take everything he says with a huge bag of salt. 
Thank you, a million times, thank you.
My company is providing an abstraction layer for databases that actually works at the JDBC level--we can add additional features that improve data access including caching, async execution, logging, and analytics, all without having to actually code (it is all policy driven with a decent GUI). This is all also done at runtime, so during development, you can easily test how a feature impacts your code. I bring this up because Java has perhaps the best standard way to access databases, being JDBC. This isn't a focus for many languages, but it is a key issue with modern applications, as so many are driven by databases. And no, NoSQL isn't dominating new development. Mongo has just recently gained more interest than PostgreSQL, although for advanced database developers, PostgreSQL is a main target to move TO, not from. That being said, interest in the top three databases (Oracle, MySQL &amp; MS SQL) all VASTLY surpass anything else on the market. References: http://db-engines.com/en/ranking_trend https://www.jetbrains.com/datagrip/how-developers-use-databases-today/?mkt_tok=3RkMMJWWfF9wsRogvqnKZKXonjHpfsX56%2BUpXKC3iokz2EFye%2BLIHETpodcMRcZqN6%2BTFAwTG5toziV8R7THKs1xzNEQWhDm edit: I even forgot to promote my company: http://www.heimdalldata.com
It's not only the legacy thinking there are other factors that contribute to the wrong attitudes from various segments on sites like HN and Reddit. * General distrust that if it's been around it's not "cool" * ADHD attitude of too busy to dive deep into one technology to realize why it's better in specific use cases * In all honestly the 80/20 rule applies, most people are building simple shitty crud websites that will be gone tomorrow that never need the scalability, maintainability, the predictability, the infrastructure independence, the performance, the support, the vast and maintained open source that the platform provides. * The realization that coding practices (Looking at Functional camps) are independent of languages. * That even if it was 5% superstars on the Java platform that's still &gt;&gt; than the entirety of the Haskell, Clojure, Scala, (insert niche platform) communities combined.
Is JSP bad? I use JSP templates with Spring MVC via JSTL and I really like it. 
Yes, you certainly can. 
I don't like how powerful they are yet have limited IDE support and produce confusing stack traces. This becomes problematic because despite its intention, JSPs lead people to putting back-end logic into the front-end, in my experience. And things can get pretty confusing with custom tags. I feel like working on large JSP apps, I spend most of my time figuring out where I need to put my code, untangling the mess. I'd rather have a very simple templating engine that forces programmers to actually separate front-end logic. I think Freemarker accomplishes this. That said, I don't think JSP is necessarily worse than the flavor of the day in JavaScript framework land or RoR.
Nothing is bad if it's free and gets the job done, in my opinion. JSPs do have a bad reputation for being old and hard to debug. There is a lot of bad JSP out there, too.
&gt; Unfortunately if you want robustness you usually have to construct a ThreadPoolExecutor manually, rather than using one of the convenience methods on Executors. I don't get what you people are bitching about. If there was a limit, you would bitch it is the wrong limit, since there is no limit -&gt; you bitch there is no limit. 
Which part will be switched? How will old code and new code operate? Please clarify
I prefer to avoid using continue. If you find this results in too many if/elses or too much nesting, that probably means you can factor out another method to make your loop simpler.
Agree... Not seeing the issue here. Verifying that the contract is upheld is important.
Came to say essentially the same thing.
&gt; You're essentially pulling a "X considered harmful" bullshit title Maybe you should work on your reading skills. "Beware of sharp edges" and "sharp edges considered harmful" are not "essentially" the same. &gt; a precondition of "data may contain duplicate keys" The article's assumption is not build on "duplicate keys": &gt; Often the code’s correctness relies on the assumption that there is a unique element _matching the criteria_ but it does nothing to enforce or assert this. (Emphasis added now.) This applies _whenever you `filter`_ and expect only a single element afterwards. So it depends on what you filter by. As the text says: &gt; Maybe this is a known invariant, guarded by dedicated parts of the system, relied upon by others. In that case this is totally fine. Which is what your proposals aim at ("Unique restraints in a table; Set with a custom key Comparator upon adding to the collection"). And this is true for many cases. &gt; Either you know you could have duplicates or you don't. If you aren't sure then you should find out how you could be sure so you can "fail fast." Exactly! And this is what `reduce(toOnlyElement())` does. If you're using an "ad-hoc filter" with a condition that is not checked elsewhere in your system, you are the first line of defense. If you have reason to assume that there can only be a single element, write the code to express that. 
Ouch. :)
I don't see anything remotely like Java in this environment. JavaScript with all its capabilities is still a scripting language which puts it at a different use case. You can do amazing things with NodeJS at a small startup or even small team in a large org. But when you start growing the team quickly your carefully honed discipline evaporates and a strict language + IDE support become a must. C# was very successful for stackoverflow so its probably a very good and competitive stack. Although I'm unaware of its scalability outside of the world of Windows so I doubt that's a real option for many shops. I'm honestly trying to think about something that's truly competitive at scale in all use cases and can't see anything that isn't Java or a JVM language at this time.
1. Not enough information 2. Most likely wrong subreddit **Post removed**
What is "polyglot stack"? It's not explained in the article. 
Thanks, fortunately the last time I had to deal with it was in 2014.
&gt; I don't like how powerful they are yet have limited IDE support and produce confusing stack traces. Have you ever used them with Netbeans?
Let's take an extreme example: We're parsing a file line by line. If the line we just read is empty, we just want to skip ahead to the next one. Otherwise, 10 to 20 parsing statements follow, so it's a whole bunch of code. You could put this parsing code into an if-block, so the invisible execution "cursor" (but also the eyes of a potential reader) would skip the whole block, arrive at the end of the loop, and return to the top of the loop to execute the next iteration. You could instead use `continue` to jump about 3 lines back upwards for the next iteration. In this case, the code is expressing "Either nothing much happens, or we're getting busy.", and if this kind of contrasting is firmly in the code style of the project, then it *expresses intention* very well. And it gives a feeling of what the code does without the user having to read much of it. But the parsing could be complex enough to warrant a method call or several instead of that 10 or 20 parsing statements I mentioned, and in that case the method calls themselves carry the above message (either nothing, or we're getting elaborate), so the `continue` wouldn't be a good way to express this. TL;DR: "It depends. But `continue` does have its place."
Multiple languages. 
&gt; C# was very successful for stackoverflow so its probably a very good and competitive stack. Although I'm unaware of its scalability outside of the world of Windows so I doubt that's a real option for many shops. Microsoft is really trying to take Java's place, though. They're opening up more and more of their .NET and ASP source to make C# a more viable alternative to Java.
&gt; bad Java stuff like JSP, EJB, other Java EE crap. Modern Java doesn't need much of that at all. On the contrary, modern Java EE is extremely elegant and light weight, and modern JAX-RS + CDI + JPA + BeanValidation is a pleasure to work with! 
&gt; Java has better framework for most needs. Yet, as usual, you fail to identify those better frameworks.
One major difference is that the whole thing will now probably get native Linux support. Mono was a half-assed compatibility effort but this time Microsoft will be giving official support.
You can also mix and match streams and a regular while-loop to achieve what you want without continue or a giant if-block: Iterator&lt;String&gt; filtered = list.stream().filter(s -&gt; !s.isEmpty()).iterator(); while (filtered.hasNext()) { String nonEmptyString = filtered.next(); }
I'd highlight that Hazelcast is not exactly "a library". It creates a cluster of embedded Hazelcast servers that comes with a cost and it is not a free lunch. For example, if deployed in the cloud you have to properly configure it, as it relies on multicast to coordinate the cluster nodes
Aww. For what it's worth, I took his reply as "if you're looking at so much bad code, you might be happier at a place that produces better code". Not "you're dumb, give up programming". Your `toOnlyElement()` has precedent. C#'s `enumerable.Single*` and Guava's `Iterables.getOnlyElement` methods are the ones I can think of off the top of my head. Multiple people whose names I recognize (and who I respect) thought [this related StackOverflow question](http://stackoverflow.com/questions/22694884/filter-java-stream-to-1-and-only-1-element) was worth answering, with code similar in spirit to yours. I thought it was a good article. You didn't miss anything; people got caught up on the title. Have some upvotes. Alternative header for your third section: "Failing fast, succeeding slowly"
They won't be tied to the windows server anymore.
Is there a reason for not using a forEach here?
Uhh... I don't even know where to start with this. Firstly, HubSpot says in the article that they're accepting and serving JSON in all services. Aka, IO. I work at a startup of similar caliber who switched FROM Java to a 100% NodeJS microservice stack three years ago, and hasn't looked back. JavaScript has very strong typing via TypeScript, but even ES6 is well-supported in modern IDEs. &gt;JavaScript with all its capabilities is still a scripting language Lol... There are many popular server-side scripting languages. PHP, Python, Node, to name a few. There's no unwritten rule which specifies that any of these languages are inferior for HubSpot's use-cases. They just seem to like Java and as a big company, have the time and money to deal with its robustness and high rates of resource usage. Java was popular for a long time but it's inferior for rapid IO. Why would I use a hammer when I need a saw? 
Competition is always good but a stack takes time to mature on each platform and Java has had quite a while to become technically mature and stable on Linux. In a couple of years C# might be competitive, especially if MS's new IDE's become as good as NetBeans/IntelliJ.
Nope - generally no reason to ever directly use iterators 
LinkedIn is 100% node. PayPal started moving toward 100% node in 2013. Ebay, the same. Other huge companies like Uber, Netflix, use node. (Yes, Netflix also uses a lot of Java for their video-related microservices, but that is a fantastic application of Java). Yes, I work for a startup, and no, I don't know "everyone here" involved in backend development. And no, that doesn't cause any problems. Like I said, we switched *from* Java for immediately observed increases in scale and performance, and our development hasn't suffered in the least. &gt;[...] for business logic and more general purpose stuff in large applications its just not there. This claim holds no weight. People just seem to be genuinely bothered that there are more modern options to build highly-distributed, highly-scaleable network apps and leaving Java behind in the process. If all I'm essentially doing is hitting a database or cache for "business logic", which is essentially what most of the use-cases we're discussing here involve, then why do I need advanced parallelism? Strong types everywhere? Bloated runtime? Unless you're Netflix (video), I just don't see it. **Edit**: three years ago I agree with everything you said. Node is out of that awkward adolescent stage and has delivered for the enterprise, and beautifully at that. And like you've said. Facebook released HHVM awhile ago, which anyone can now utilize. But they won't even need to as PHP7 benchmarks comparatively and offers a lot of the same benefits as node. 
LinkedIn isn't 100% node. I just met with one of their build team engineers and he told me all about what languages they use
Yes, specially in terms of web development support. EDIT: For example when you edit JSPs on Netbeans, you get completion for the Java beans when editing EL expressions. On Eclipse you only get that with JSF 2.x pages. Netbeans also provides a nice CSS editor, debugging with browser plugins, static analysis of JavaScript while typing and a few other goodies for web development. 
That's not true. The software that I work on has a Java applet that we use to communicate with local hardware (The applet is signed, and uses the JPOS API to talk to local POS Printers, and then there is a Javascript component that talks to the applet to print out receipts). Without this applet we would need to have some workstation-installed application, which isn't an option for some of our customers.
Your teacher is wrong. Mentally we are not equipped to handle complex if / if else / else statements, we are even worse when they are nested. A good programming practise in methods is to use guards / validate parameters at the top. So we have: public boolean contains(String haystack, String needle){ if(haystack == null) { throw new ...} if(needle == null){ throw ... } if(haystack.equals("")){ return ...} return haystack.contains(needle); } Early returns make the code easier to read. If we wanted the above function for a list we would do: public bool oneContains(String haystack, Iterable&lt;String&gt; needles){ if(haystack == null){throw ... } for(String needle : needles){ if(needle == null) { continue; } if(needle == "" } continue; } [....] } } In my opnion this makes the code easier to read. 
Believe it or not, Microsoft was the pioneer of app servers with Microsoft Transaction Server back in the 90's, well before the EJB spec came along. EJB prior to 3.0, especially entity beans, was a pile of steaming shit, even if you knew what you were doing. The hate exists for a good reason.
Oh you mean they use other tools and languages to help with the build and deploy process? Groundbreaking 
Hey admin Thanks for your thoughtful reply. I was so naive to have this app in the open 😊 My intention is all but malicious. Anyway, i wanted to try out spring boot in openshift. I figured it out so now it's time to move on to some other apps (more helpful hopefully) Best regards
I'd say "learn Maven." Archetypes make most of it very easy; you can generate a default archetype and be pretty much done.
Don't know how you expect to get any simpler than something like this build.gradle: apply plugin: 'java' repositories { mavenCentral() } dependencies { compile 'org.slf4j:slf4j-api:1.7.13' }
He teaches Java and postulates not to program object oriented? Sounds kind of weird since this is the major paradigm of the Java language...
Absolute statements about technology ("no one should use X") are almost always wrong. Better to understand in what cases to apply a pattern than to outlaw it. Btw, same goes for absolute praise ("everybody should use X")...better understand the context!
That's a good point, I'll make a mention in the post. Thanks for the feedback
If you think you can do everything that is needed in an enterprise system that EJBs do without embracing the complexities, you have another thing coming. Spring, now that it's a container, isn't harder or easier to work with, than it was with (say) Weblogic. It was a lot easier when you couldn't do a lot with it, but not anymore. That's the way the pendulum swings. People flock to the new thing because it's easier to work with, then they start missing certain features, so they add them, at which point it people start moaning that it's too complicated, repeat ad nauseum. 
This is called a [message queue](https://en.wikipedia.org/wiki/Message_queue) and there are myriad options in the java world. 
That's a lot to ask... http://www.amazon.com/Linux-System-Administration-Handbook-Edition/dp/0131480057 
How was your experience once you had it up and running? Did it need constant maintenance? Security patches? Were you happy with your up time? 
This comment has been overwritten by an open source script to protect this user&amp;apos;s privacy.
I second that. Unfortunately the quality of most archetypes is very low. 
http://zeroturnaround.com/rebellabs/the-curious-coders-java-web-frameworks-comparison-spring-mvc-grails-vaadin-gwt-wicket-play-struts-and-jsf/
Do we really feel that apple insider will have an unbiased article on this subject? http://www.bloomberg.com/news/articles/2016-01-21/google-s-android-generates-31-billion-revenue-oracle-says-ijor8hvt
Bingo! But of course they're going to make it very easy to use .NET Core on Docker in Azure, which is a big part of their strategy going forward.
It's a silly distinction really. Even in a "pure Java" shop, you're still going to need to deal with HTML/CSS/Javascript and associated frameworks and DSLs around those. Add in the fact that most "pure Java" shops will also employ a handful of scripting languages for unit and integration testing, as well as whatever they're using for deployment automation / CI, and .. oh, let's not forget all the scripting we have to do around our database, because SQL or not, they're all different... But yeah, we're not "polyglots" unless we run some dynamically typed flavor of the day like the cool kids. Whatever. 