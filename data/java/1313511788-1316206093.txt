That seems to work!! Is there any reason why the encoding format is needed?
I've no idea. Text encoding formats are the bane of our existence, so that's one of the first things I check when I run across a weird bug. I'd guess the Scanner class defaults to another charset with a different character width, which means it miscalculates the number of characters in the file. Or something like that. Everyone should be using UTF.
Hmm, good to know. I'll have to keep that in mind. Thanks for the help
&gt;Note: For this problem solving job interview question, the interviewer will want to evaluate your thinking process. In answering the interview question, the lead up to your answer will be just as important as the actual answer itself. Keeping that in mind the entire time is key.
Use a scripting language, it would be way easier for this kind of application. 
Does anyone actually use Scanner outside of homework assignments? I've seen it on many applicant code submissions, but never in production...
If the GC causes issues it sounds like a JVM bug... However, If you're talking about memory leaks, that could only happen if he/she was using WeakReferences which I highly doubt given the level of the original post
If you're just iterating over lines, try using a BufferedReader. I haven't had any file encodings with BR but that could be just me getting lucky. BufferedReader br = new BufferedReader(new FileReader(new File("filename.html"))); String s; while ((s = br.readLine()) != null) { System.out.println(s); } br.close();
Start from the basics. Teach him Java. Do it at a normal pace until your contract expires. You will have fulfilled your duty while you were employed.
How long do you have to "deal with it"?
Document the code as you would document any other code. Give him resources on using Eclipse and Subversion. Does your contract require that you teach him how to program? Will having to teach him prevent you from completing your other duties through the remainder of the contract?
Two more months.
&gt; Does your contract require that you teach him how to program? No. My contract doesn't really specify my duties, but I'm employed as a PostDoc researcher at a university. &gt;Will having to teach him prevent you from completing your other duties through the remainder of the contract? Yes, I'd like to squeeze out one or possibly two more publications before I'm forced to go through the rigmarole of looking for and applying for jobs, relocating, getting used to a new workplace and so on. They don't say "publish or perish" for nothing.
This is probably what I'll end up doing. I'm too nice to say 'no'.
Teach him absolutely nothing. That way, he'll have no choice but to re-hire you.
But, &gt; for academic reasons it can't be renewed
Not a JVM bug, when reading a lot of files and processing a lot of data on a VM that is using default memory config you exhaust the resources and GC does what it does, except that causes a "pause", I see this a lot in web applications that seemingly do little but in reality use a lot of objects. XSLT is a perfect example, hello world transform starts at around 5MB using w3c DOM and around 2MB using dom4j and grows very fast. So doing a lot of transforms will peg the GC and you will notice pauses. Since he is reading files then it could also be a an issue with unreleased resources. InputStream close() gets called when it is cleaned up by GC if it was not called by an explit call. So you can open files and not realize that they will not be closed when you go out of scope so you leave file handles open and each process gets a limited number, thus the pause. It could be one of many things, and GC "pause" is a side-effect not the cause.
Why do you say that? (see my other reply for more explanation) I encounter GC "pauses" so much in the field where people don't realize their mistake and GC cleanup reveals bad code during cleanup (unclosed files, classes that allocate a lot of sub-classes (or possible perm space issue), etc). The funny thing, people are very quick to dismiss the GC until I show them that examining GC cycles and activity can reveal a lot about code. I am still amazed how often people tell me that java doesn't leak memory yet they have static collections that contain unused objects (which is java equivalent of a leak, not OS level leak, but process level leak). Anyhow, I am curious why you think this was out of left field, maybe I am missing something about the Scanner classes that you know?
First you need to invent the universe ....
Teach him how to hire other person ;)
Where?
[Job Security](http://thc.org/root/phun/unmaintain.html)
Somebody pinch this guy because he's clearly trapped in a nightmare
In the UK you would expect 25k+, depending on experience. Usually a junior Java developer with 3 years experience can barter for 30k+ and not be laughed at.
Just to clarify-- this is British Pounds, not US Dollars, I hope.
Yes, pounds sterling. 
This is 15 years old... still relevant? I have coded in C++, PHP and Basic for a very long time, never stepped into the Java ring though.
Boston, MA. Sorry, I meant to include that.
Start in the low 40s but keep your resume out there for higher bids. This will be your professional life for the next 10-15 years.
The contract is not renewed. The decision is made to hire Throwaway841 Consulting Services for a software modernization project instead.
A lot have obviously changed in 15 years, but beggars can't be choosers.
Tell him that you were hired as a researcher/programmer, not a professor and that if he wants you to teach him Java, he can hire you for that job in particular. Comment your code adequately as others have said and continue to perform the duties you were actually hired for while you seek new and better employment.
[Not sure if trolling...](http://i.imgur.com/rfKfk.jpg)
&gt;No. My contract doesn't really specify my duties, but I'm employed as a PostDoc researcher at a university. OK. So my point is that presumably you're paid primarily to be a researcher. As is your boss. If your (in the plural) research, or the tools used in performing your research, requires programming knowledge, it shouldn't be your responsibility to teach your boss how to do a significant portion of his job. But then again, I've never been a PostDoc, and never worked in academia - and I know it's a completely different set of BS that you have to deal with vs. those of us in corporate jobs.
You don't have to, the garbage collector does it for you. And before you ask, garbage collection is frequently more efficient than malloc/free new/delete. Where are you getting the char array from? Few java APIs use char arrays.
I would do that as well; possibly in concert with something like _Thinking In Java_ or another book. He's likely not going to have the tenacity to stick with it anyway and will probably be seriously overwhelmed. If he sticks with it, you'll have fun bringing him up to speed. If he doesn't, then you make the token effort the contract requires and just document his progress. Actually, document his progress either way. It will give him more motivation to succeed and it will cover your butt.
Space is filled with a network of wormholes . . .
As a junior programmer in a big city, I'd guesstimate 55k but I'm not sure how the job market in the past few years has affected salaries
lol, I know destructor wasn't the right word, but it's the closest I could use to explain it. Basically, my program works with AD to get all of our active user accounts, and right now I'm playing around with one to see if I can bruteforce crack the password using every combination of 6 lowercase letters (if I can crack that, shit's weak son). I'm watching the process in Task Manager and it's gaining about 10-20KB every refresh. I'll post code in a minute
Might be plenty of time. Does he have *any* programming experience?
There are probably much better ways to do this, but this was the first and easiest solution I found: String simple = "etaonrushdlfcmugypwbvkxjqz"; //sorted by frequency of occurrence int pwdLength = 6; CharacterIterator[] it = new StringCharacterIterator[pwdLength]; char[] ch = new char[pwdLength]; String password; for (int i=0; i&lt;pwdLength; i++) it[i] = new StringCharacterIterator(simple); for (ch[0]=it[0].first(); ch[0] != CharacterIterator.DONE; ch[0]=it[0].next()) { for (ch[1]=it[1].first(); ch[1] != CharacterIterator.DONE; ch[1]=it[1].next()) { for (ch[2]=it[2].first(); ch[2] != CharacterIterator.DONE; ch[2]=it[2].next()) { for (ch[3]=it[3].first(); ch[3] != CharacterIterator.DONE; ch[3]=it[3].next()) { for (ch[4]=it[4].first(); ch[4] != CharacterIterator.DONE; ch[4]=it[4].next()) { for (ch[5]=it[5].first(); ch[5] != CharacterIterator.DONE; ch[5]=it[5].next()) { password = new String(ch); System.out.println(password); if (c.AuthenticateUser(testUser, password)){ //authenticates thru LDAP, returns true if correct password System.out.println("MATCH:\t"+testUser+"\t"+password); System.exit(0); } } } } } }
that code is fine, java will clean up memory when it needs to be freed. I'd remove the println statement, it'll slow down the code a lot.
Make sure you aren't holding any references outside the loop. The GC will take care of your problems once you aren't maintaining references e.g. List&lt;char[]&gt; usedWords; for (;;) { char[] currentWord = SomeClass.generateWord(); //process ... // growing memory. usedWords.add(currentWord); } Also, look into using the jconsole and jmx to keep an eye on your objects.
JCONSOLE!!! Never knew about that! Unfortunately I can't connect to the JVM for that app, but I'll definitely be able to put that to good use!
Groovy and Ant Builder are your friends.
When negotiating I would try to not speak first. Ask them "What do you think I should make" and try to get the first number out of them. One of two things will happen * He gives you a number you like. You say that's reasonable and take it * He low balls you, in which case you can negotiate from there.
I would recommend asking him to hire a guy familiar with Java if you want to stay on good terms.
40-50K If it is within Boston proper, 55K is within reach if you're slightly less Junior.
The norm seems to be $60K in the DC area.
You might want to look into other, more awesome profiling tools like JProfiler.
Why not start by negotiating the number of hours/week he wants you to tutor him in this, pleading that you have other stuff you want to do before you leave as well. If he's overestimating his own ability to handle this, he'll likely underestimate the hours it'll take to get him up to speed. Then, just do the best you can in the limited time, but stick to your agreed schedule.
This code is ... fine ... but what is the *intent* of this code? It looks like you're taking each 6 characters in turn and testing those 6 against a password. In which case doing using String's substring would be better. (It also looks like you're breaking some dude's horribly chosen password and hoping for the most frequently used letters to cut down on "cracking" time, which would explain your quizzical focus on speed. Hope your mark isn't a dolt.) Ed: ~~As immoral and shady this code is~~, If you want a nicer set of code, you should make a permutation routine that uses a bit vector from 2^26 down to 0 that selects a new "password". Then you need just one loop. ~~Good luck Mr Shifty.~~
Even better, ask what range the business has allotted for the position. And follow that up by explaining why you belong at the high end of that range.
To address the immoral/shady/shifty concerns... I'm an IT guy. I build machines for people all day. People are always giving me their passwords. I'm trying this to make a point that we need more strict password policies... I know this isn't an efficient algorithm to crack passwords, I'm really just trying to expand my knowledge of the language and AD. Also it takes waaaay too long to be remotely effective. 
&gt;Hope your mark isn't a dolt. They all are. 90% of passwords I see are &lt;6-8 letter word&gt;&lt;1-digit number&gt; 
Sounds good, adding 0 to 9 would help get your point across even better.
Check out http://www.glassdoor.com/Salaries/index.htm 
The purpose of the chars being sorted by what looks to be a occurance-in-language based sorting elludes me. Even if we assume that a similar distribution would be true for passwords, too, arranging them like that in a search doesn't seem to offer any benefits. It does however make everything more complicated 
use total commander
Why do you need the character iterator? If you're concerned about memory usage and speed, this will really slow things down... make "simple" a char array and use 6 indices.
Looks like it varies quite a bit, but I wouldn't go under $50K USD. You'll need to account for your living expenses as well. http://www.glassdoor.com/Salaries/washington-dc-java-salary-SRCH_IL.0,13_IM911_KO14,18.htm
I have 3 strings to use for different comparators. First one was all lowercase alphabet. second had uppercase, lowercase, and numbers, tough one had all of the second plus special characters.
Going to try that. brb
^-- This. Ignore the other advice about "it's not your job" or "you weren't hired to teach him." You want to leave on good terms, be able to count on him for a good referral, perhaps work with him again? You take care of him and teach him. But... learning how to program is extremely time-consuming. It is not something that can be learned in such a short time as two months. The important thing to do is set his expectations. Also, recommend a good book for him to learn from. I'm sure he probably doesn't expect you to spend all of your time during the remaining two months teaching him to program. He certainly doesn't expect to spend *his* full time learning. Have him start with a good book on Java to familiarize himself with the fundamentals of the language. I suggest "Thinking in Java" by Bruce Eckel. It's thorough, extremely well-written and very long. When he realizes just how much is going to be required to learn how to program, he'll understand that it's better to bringing someone else in to maintain the application. In the meantime, while he's busy reading, you can work on those remaining papers that you want to publish. Best of luck.
The closest thing Java has to a c++ destructor is **finalize** It is almost never used since there is almost never any use for this and it is almost always used incorrectly. Just for fun, grep through the src.zip and see how rarely it was used by Sun. In some cases, you can hint to the garbage collector by setting objects to NULL. You'll need to profile your code to see if that helps. My guess is that it will have negligible effect. This code will be hammered by network latency. There are about a dozen simple things you can do that will improve your code. Having a pool of threads working through keyspace while a second pool is connecting to LDAP will improve things. 
I am trying to do the same, write a roguelike in jruby to run in the browser. Care to share any code of your 'ncurses' analogue ? thanks! 
No experience with threading. How would I go about this?
VisualVM is pretty nice for profiling too...best part is that it's included with the JDK since 1.6. It can be found in the bin directory.
Big cities: 55-65k. Small cities: 45-55k. Small cities in the middle of a dotcom boom in 1999? $6 an hour + stock options. Stupid wasted youth. 
[Executor Service:](http://download.oracle.com/javase/6/docs/api/java/util/concurrent/ExecutorService.html) makes creating Java multithreading a lot simpler. The nested for statements will be plenty performant but I'm sure there's a smarter way to do it so you can have a variable int pwdLength setting. import java.util.concurrent.ExecutorService; import java.util.concurrent.Executors; public class BruteForce { static String password; static String userName = "bbarker"; public static void main(String[] args) { String alpha = "abcdefghijklmnopqrstuvwxyz"; char[] chars = alpha.toCharArray(); // Guessed at 20 threads ExecutorService pool = Executors.newFixedThreadPool(20); for (char c0 : chars) { for (char c1 : chars) { for (char c2 : chars) { for (char c3 : chars) { for (char c4 : chars) { for (char c5 : chars) { if (password != null) { System.out.println("password = " + password); pool.shutdownNow(); System.exit(0); } final String currPwd = String.valueOf(new char[]{c0, c1, c2, c3, c4, c5}); pool.execute(new Runnable() { public void run() { if (authenticateUser(userName, currPwd)) { password = currPwd; } } }); } } } } } } } public static boolean authenticateUser(String name, String pwd) { // replace this with actual LDAP call return "thepwd".equals(pwd); } } 
I also recommend the book Thinking in Java. It follows a well-thought out and proven pathway. After he has enough grasp you could start introducing him to the actual codebase.
Alas uni caught up with me and I had to study instead of working on this. One day, though... \*shakes fist\*
Complexity issues aside, just add a 30 minute lockout after the 3rd try. More over you should calculate time to crack and not actually crack it. 
Can he program? Does he know any other languages like C++? If not, then it's pretty much impossible to do what he asks in two months.
26^6 is approx 2^28. This is &lt;1 second on a modern CPU. However add in networking overhead. Ex, 50ms per try and it will take more than 22 weeks to run the entire keyspace just for 1 password, or 11 weeks on average. 
that's a quick way of doing it. Good use of String.valueOf to keep the string pool down. That should fix some of the memory overhead. I would do this with an inner class that implement runnable which could be passed a c0...c4 and would loop through c5. And a thread pool size of 26. 
Where did you get 26? Edit: Ah, alphabet size. Although I'm not sure if that means anything or not. Having reusable Runnable instances may save some overhead. I think only profiling would tell if your looping inside the runnable would be any kind of performance enhancement. My gut says probably not much difference since the time to generate the next test password is minuscule compared to the overhead of making the LDAP call.
a...z Something like this which would contain the inner most loop. All 26 running in parallel public class r implements runnable { private char[] chars = ... public r (string name, char c0 ... char c4) { set....} private bool auth (name, pw) ... public void run () { for () { if auth() { system.out.println("pass ==" + pass) } } } } 
Hey! Nice! Where is this located just so I can tell people my art is distributed there? :)
Also, photo credit: http://umbra.nascom.nasa.gov/eclipse/images/eclipse_images.html
What happens after 10-15 years? I have bemen doing it for 20.
Bingo
This was exactly what I was thinking...
 I've timed the authenticate function at around an average of 16ms. So we're looking at a week tops?
2^28 * 16ms is 7 weeks.
Derp. I'm on my phone and can't read posts as I'm replying. Also my short term memory blows. 
Yeah, I understood you. Just was pointing out that at that point I couldn't tell you if it was an improvement without a profiler. 
There's no way to forcefully delete or deallocate memory. You have to let the garbage collector do it for you. You can call System.gc which tells the JVM that you wish it to run the GC, but its not required to do so. Even if it did, its not likely to help much. Along with the multi-threading approach suggested to improve throughput, you may also look into alternate garbage collectors, such as concurrent mark and sweep or throughput collectors, which can provide better GC throughput if you feel that you're spending too much time collecting. Regarding "gaining 10-20 KB every refresh," that's pretty normal. Typically, you're not going to see the JVM actively freeing up memory unless it needs to, or unless you configure it to behave otherwise. Its highly unlikely that "deallocating" the string more aggressively is going to help at all with performance. I'd run it through a profiler and second the advice that absinthe718 and geodebug gave you (since your problem is embarrassingly parallel, you can probably get significant speedups with multi-core machines).
Thanks for the comments. I did search for references on hot code updates. Apparently there is also a project at Java.net, but not much activity or community participation around it. @toomasr - LiveRebel, appears interesting. I wonder how you resolved issues like session preservation and inlined methods etc. 
or / and Powershell. Give it a try, if you have never heard of it before.
Stockholm
There's the more recent JVisualVM introduced in Java 6, too. :-)
One: http://sites.google.com/site/steveyegge2/five-essential-phone-screen-questions two (Character questions): http://career-doctor.blogspot.com/2006/06/questions-theyll-ask-in-interview-and.html
http://pastebin.com/ is simple enough to paste code into and has syntax highlighting.
Thank you! [here's the code then](http://pastebin.com/YADy3RtU)
This is actually JavaScript.
I'm living in all the wrong places...
haha just goes to show how much I know!!!! (bollocks)
Through assumption, not experience, after 15 years of development, salary would very likely level off, assuming one wanted to stay in the programming space. AmIright?
I suggest the JD-GUI from [here](http://java.decompiler.free.fr/). It's very easy to use and no install is needed.
[Here](http://lmgtfy.com/?q=free+java+decompiler)
Thanks, but I already did that. I wanted to find out a recommendation based on experiences that other people have had. 
Thanks for the recommendation.
Well JD is actually quite good, i use it every day. It has a super nifty jar decompiling function.
I'll "second" the jd-gui recommendation: Some Previous Developers here were really bad about checking changes into the vcs. Just undisciplined and there was no process in place to force the discipline. Twice now, I've gotten copies of .war files from our app server and rebuilt the source code using jd-gui. Yeah, really.
Oh I see what you mean. I thought you were saying after 15 years you'd make a career change ir become management... ick. :)
[JAD](http://www.varaneckas.com/jad) works pretty good.
I will also recommend JD-GUI. It won't help you if the program was compiled without the -g option, and it won't restore comments. But other than that it's very good.
Just curious which VCS you were using? I'd like to know what systems are more vulnerable to such issues.
I didn't mention it because it (Visual SourceSafe) is notoriously awful and that wasn't the problem. These guys would have done the same thing with our current system (hg). They checked the code out, built and deployed the app, and didn't check their changes in. VSS doesn't preclude having a process in place that would have made this difficult if not impossible to pull off. Yeah, it was frustrating - I found out about it by checking their code out, making some mods, and finding out I had "broken" features they had added but which were not in the repository.
Just remember that if you're decompiling code with lots of inner classes, it will probably fail. It often has issues with stuff like that. 
Thank you so much for this. Recently, I've begun to despair because I feel extremely intimidated, and quite frankly, I just don't know what to do. This link makes me feel better.
VSS? I'd suggest looking into GIT and indoor flushing toilets are all the rage these days /joke.
JD-Gui looks pretty good. Have you or anyone you know used the JD eclipse plug-in? If so, what was the experience like? Yay or nay on using it?
Hmm. I don't know whether it was compiled with the -g option. I can try it out, and see if it works.
I think one of my coworkers uses this and likes it. What has worked well and what haven't you liked about it?
If it's not compiled with -g, it will give you a bunch of uninformative variable and method names. That's really the only problem.
If it helps, I usually ask for a minimum of 75K-80K, with benefits. In a more expensive area, like Silicon Valley, I ask for more. I use glassdoor, like timdury suggested, but I also use my alma mater's salary information to gauge what to expect, which is usually 75K or higher for software jobs. I also use my master's degree to ask for a little more sometimes. I would recommend asking for a little more for the Boston area, as it is expensive to live in that area (even if it's not Boston proper).
I didn't like the eclipse plugin, but can't remember why. We use myeclipseide. And yetanotherx reminded me - not just inner classes, but finally blocks seemed to give it trouble, too. Our code style is consistent enough that I could infer what would have been there, so that helped.
I still use Frontend Plus with JAD. It sometimes has issues with exception catch statements though
I would suggest using if/else statements. [Here](http://download.oracle.com/javase/tutorial/java/nutsandbolts/if.html) is a tutorial from Oracle. It would also help if you uploaded your code.
thanks for the advice with the statements ill try that. just copypaste it in? i can do that 
Using [Pastie](http://pastie.org/) would probably work best. Just change the language to Java so it'll be a bit easier on the eyes.
 import javax.swing.JFrame; import javax.swing.JOptionPane; public class filename { public static void main(String[] args) { if (JOptionPane.showConfirmDialog(new JFrame(), "Do you want icecream?", "Question", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) System.exit(0); } }
[Here](http://download.oracle.com/javase/tutorial/uiswing/components/dialog.html) is some more information on JOptionPane if you need any more assistance with that. I added a couple things in your code for you to look at. Just copy it from [here](http://pastie.org/2394894). I hope this helps!
http://pastie.org/2394964 thanks for the help so far, if you look at the pastie, im getting a compiler error on line 20 and its saying "else" without "if" but if i just put if in, it gives me a metric fuckton of other errors...wat do? like i said thank you so much!
You have two misplaced semicolons, check the end of lines 13 and 16. If you remove those, that should fix the problem. No problem!
you sir/madame are awesome. thank you so much for your help! 
I'm glad I could assist!
I haven't used it in a while, but from what I can remember, is that you had to provide it the class files, while I've heard of some other decompilers that allows you to decompile jar files; what I liked is that it is so quick and easy to use..
WTF, "dont use line numbers"?? What fucking terrible advice.
Seeing as how his advice on the same line included, "Don't put everything in one method," I'm assuming he's saying something along the lines of, "Never use a goto statement of any kind."
Java doesn't have a goto
I've found that you can also learn a lot from other people, connect to a IRC java channel, and just check out what the people are saying and try to contribute when someone asks a question and you can help...
I wish he would have added some explanation to that statement, I'm really not sure what he was getting at there.
TIL that this is valid syntax: static &lt;T extends Object &amp; Comparable&lt;? super T&gt;&gt; T
None of them stated the obvious: learn a variety of very different programming languages, systems and programming paradigms. 
For those of us that don't know scala, this doesn't mean much. Why is this even in the Java reddit, this blog post is bashing java and praising scala.
Also, its facts are wrong. The Java syntax in that post... is not syntax that one can use in Java 7.
Hmm, how come I've never heard of this before?
good question.. the pattern is not really new.. This: http://www.ibm.com/developerworks/java/library/j-genericdao/index.html was over 5 years ago, and I'm not even sure that's the first.
In my prior job, I had implemented something like this based on well discussed patterns in the hibernate community. This GenericDao pattern is nothing new. The Remote interface is interesting though. What I'm curious about is why did they reinvent the Java criteria API with this whole Filter thing? (I'm on iPhone so hard to read code. Will have to look at it again on my computer)
The project was started in 2008. Maybe it wasn't built for JPA.
That makes sense. Hibernate supports JPA so it wouldn't be too difficult to change this over to Criteria API
&gt; How do I deallocate the memory from that code before I create a new instance? Everytime name = new String() runs, name gets attributed a new object reference. The previous reference goes into the unreferenced bin and the GC will collect it as soon as it runs. You can leave it running all day in a while(true) loop and it won't run out of memory.
no shit
&gt; the generated output can be really tedious Indeed, useful tool.
Looks like rather simplistic tool made by someone that doesn't know how to use an advanced text editor like VIM. 
Not very helpful or nice comment. Why don't you explain to him instead how he can use vim in this way to better analyze thread dumps instead of just being a dick?
I agree it is pretty simple. How could I do this in vim?
Open your thread dump and do something like `:g/RUNNABLE/-1p` which prints all threads that are in runnable state: "RMI TCP Connection(2)-192.168.211.1" daemon prio=6 tid=0x040bdc00 nid=0x10d8 runnable [0x06cbf000] 49 "RMI TCP Connection(1)-192.168.211.1" daemon prio=6 tid=0x040bcc00 nid=0x10b0 runnable [0x06a8f000] 67 "RMI TCP Accept-0" daemon prio=6 tid=0x0422e000 nid=0x10a0 runnable [0x06a3f000] 251 "ajp-apr-8009-Acceptor-0" daemon prio=6 tid=0x04228c00 nid=0x9cc runnable [0x05ddf000] 444 "http-apr-8080-Acceptor-0" daemon prio=6 tid=0x041fd400 nid=0x794 runnable [0x0543f000 ] 658 "Low Memory Detector" daemon prio=6 tid=0x01ae5800 nid=0x8e4 runnable [0x00000000] 664 "C1 CompilerThread0" daemon prio=10 tid=0x01ad1800 nid=0xe58 waiting on condition [0x0 0000000] 670 "Attach Listener" daemon prio=10 tid=0x01ad1000 nid=0xf18 waiting on condition [0x0000 0000] 676 "Signal Dispatcher" daemon prio=10 tid=0x01ad0800 nid=0x464 runnable [0x00000000] 705 "main" prio=6 tid=0x001fa400 nid=0x41c runnable [0x001bf000] The numbers in front are line numbers.
That's a good start but how would I get vim to include the stack trace for each thread and group together threads with the same stack trace?
Why would you need to do that. Typically when you are looking at thread dump you really want to look for deadlocks. You don't care if there are 100 worker threads in the same state (i.e. same stack trace), you only care if there are threads holding a lock A waiting for lock B and another thread holding B and waiting for lock A. This can also be done from VIM with a few regexes. 
I agree it's possible to search for deadlocks using vim. However, when I wrote this tool I was explicitly trying to do the kind of summarisation which I described. I wanted a quick way to get a view on the overall state of my system. I'm sure this would also be possible in vim but I'm not convinced it would be as simple to package the code for re-use. 
I would say yes. I know several gainfully employed Java programmers who have managed to find jobs for the last decade in the bay area.
Everything I read online says that California is just too expensive and don't move down there. But I am single and a software developer with experience. I was hoping that doesn't apply to everyone. But I have always wanted to do it. 
yeah, just don't refer to it as san fran during interviews. the city, bay area, or san francisco are acceptable. 
The Bay Area is the hot spot for developers, I think. I'd guess that if you were earning normal developer wage, you could cover living costs. Just make sure you get the job before you move. That said, I know nothing of the market for Java people.
San Francisco and New York City are both excellent places to live as a Java developer.
I was thinking of making a leap as opposed to several years of planning. Nothing is stopping me.
my brother did this and it worked out for him...what he did was find a job, acquire roommies and then we drove from east coast to west coast via I-80 (most boring drive ever, 3 16 hourish days of driving) with nothin but the luggage in the trunk. All in all was fun trip though
Not sure about the bay area, but Denver and Boulder Colorado are both hot as hell right now for java devs.
Oh it's definitely expensive to live there. The salaries in some industries compensate for that somewhat. If you were a school teacher I'd say to run as far away as you can. A Java developer at any level should do fine as long as you are flexible about specifically where you live. Rent is still high in some areas.
Ha... San Francisco is probably the HOTTEST right now. Massively competitive market .... We'll hire you ;)
When I look on indeed. I see thousands of Java jobs. Are those being filled? Are hundreds or thousands applying for those jobs. I am in Atlanta, now. I was assuming the Java job market is slightly comparable.
Have you worked in Silicon Valley?
Have a look at doing some stuff with Spring Framework, it's a Java framework that provides you with standard ways of achieving common tasks. There is a lot to it but you could start with some of the basics. This is an industry standard now for Java programmers so you'll encounter it sooner or later. [spring](http://www.springsource.org/download) Try learning some programming Kata's, they are small tasks to help you get familiar with all the concepts. I find they are really good in teaching you how to code better. For example here is uncle bob's bowling game kata. It walks you through it using a really good example of test driven development. [Bowling game kata](http://butunclebob.com/ArticleS.UncleBob.TheBowlingGameKata) Good luck :D
You also get a lot for your money: a climate that's probably the most comfortable around (warm, but rarely very hot, in summer), cool but rarely very cold in winter; mild humidity. A workplace that provides well (lots of the more cutting edge work benefits) and that is strongly oriented towards a meritocracy. Lots of bright people in software dev. And to get away, within an hour's drive are mountains, forests, and ocean. Finally, excellent restaurants. 
Wow. I sometime forget that reddit can be so helpful thanks a bunch man !
If you have access to an Android handset, try some Android Development. If not, there's always the emulator.
What would you *like* to be doing? Is there some grand thing you'd make but have no idea how to get started? Then maybe we could clue you in on how to take your first bite of the whale carcass, so to speak. Otherwise, well, what can we say? 
Well I would like to dip into game development a bit, but I think what I really want to do is just improve my skill as a java programmer as a whole but don't really know where to start. And thanks for taking the time to help me out
Keep making applets, you will start reusing code and make better and better stuff. Program random simulations, get inspiration from other people's programs and from random things. Push your skills to the limit. Look at other people's source code. Good luck :D. http://umasscrc.org/wp-content/uploads/2011/08/fromWithinTheCircle.htm
If you would like to utilize your Java skills in the corporate environment, I would highly suggest getting familiar with Spring, Hibernate, J2EE (in general), REST based web services (Spring-WS or Jersey). Play around with lots of the Apache commons libraries (HTTP, Lang, etc) these are used extensively in industry and with good reason, they are immensely useful. Android is a fantastic environment and quite a bit of a departure from traditional Client/Server development. If you do get involved in Android development, pay particular attention to the application lifecycle, it will help you in the long run. Lastly, I would highly suggest dabbling in technologies other than Java. Java is a fantastic language/runtime environment, however, you should not "put all your eggs in one basket". Play around with other stuff. I started out as a VB developer, transitioned to Java and over the years have dabbled in C/C++, Perl, PHP, Objective-C, Assembly, etc, etc. All of them have their pluses and minuses, but they are all tools and ultimately you chose the right tool for the job. 
Sounds good will definitely start doing this. 
I have actually played around in C++a bit, so I guess I'll look into a bit more. And Android development is of high interest to me so I'll probably check that out as well. Thanks for all the help 
Scala is another way you can stretch your skills. Using the functional programming style from a young age, you could build your skills to an impressive level. Based on what I saw in your example applet, I'd say you should be sure to use Object Oriented design when possible. Employers will definitely want you to be familiar with that, and will be required in future classes as well.
I'm actually pretty good with classes and whatnot its just that this was one of my first applets so I was a little unsure of what I was doing in the first place :D And will look more into scala later
You can check out [Project Euler](http://projecteuler.net/) and try to get through those questions. When you find a solution to a problem it gives you a PDF with variations of methods to get to the possible answer.
Only as an intern. 
android, obviously.
I would add to read up on design patterns, SOLID principles, and automated unit testing.
&gt; what I really want to do is just improve my skill as a java programmer as a whole but don't really know where to start. Come up with a really awesome idea for some software (can be a game, an applet, a website, mobile app, etc.). Consider whether or not you can make it. If you can, then make it. If you can't, figure out what information you're lacking, and learn it. Repeat.
The Singleton Pattern maybe?
A number of ways you can go. - Enterprise - J2EE and related technologies. - Plugin development - (Eclipse applications) - Mobile development (eg. Android) - Application development. (eg. Games) Drop applets. They are rarely used. Your code is quite clean, but I'd say read up on Java patterns and how to use javadoc. 
Your post reminded me of [Steve Yegge's "Singleton considered stupid"](http://sites.google.com/site/steveyegge2/singleton-considered-stupid).
Applets are a bit of a dead technology so I would be wary of investing too much time into them. Why not go to where the action is? Try some Android game development - [this book](http://www.amazon.co.uk/Beginning-Android-Games-Mario-Zechner/dp/1430230428/ref=sr_1_1?ie=UTF8&amp;qid=1314005235&amp;sr=8-1) is a brilliant introduction that doesn't assume any existing game programming skills but does assume some java experience. Should suit you very well!
 package test; import java.util.concurrent.atomic.AtomicInteger; public class MyClass { private static AtomicInteger counter = new AtomicInteger(); private String name; public MyClass() { this.name = "MyClass, instance No. " + counter.incrementAndGet(); } public String getName() { return name; } } 
Of course you should use Factory Methods... And put them in Singletons! That's what they're for, access points. Any Java program has to begin in a static context.
 private static final Logger logger = Logger.get....... or serialVersionUID 
And a great book for that is head first design patterns. Lots of pictures and easy to digest examples, great for a new programmer. 
Well, the type of game you're interested in will make a big difference - ie, action, 2d, 3d, turn-based strategy, etc. This is tough stuff, and, unfortunately, Java graphics is not that nice to deal with (graphics in general are a real pain). Something that is fun and challenging and will help you with vector math (which may or may not be useful to you depending on what kinds of games you are interested in), is the [ICPC Programming challenges](http://queue.acm.org/icpc/) Each year they have a different game to program an AI for, but they are similar in being a semi-real time 2d vector mathy, physics game. Like playing ice hockey or something, but they come up with great stuff. They give you example code to start with that you can just tweak and then you can watch it play out on your own computer. If you get decent at it, you can compete in the new game that will come out in January.
Ah, thank you so much, I've got pretty far with that now, made it as a GWT app etc an unticked the GAE so it doesn't have any of that. Jetty really doesn't seem to like this though (using Jetty to run initially before I export to Tomcat). I'm just trying to get it to work on Jetty as the very start (it worked fine when I just did 100% on GAE) https://schoolbehaviour.svn.sourceforge.net/svnroot/schoolbehaviour/TomcatBehaviour That's the SVN repo I'm playing with, but it doesn't seem to like being merged from a GAE app into a non-GAE app :&lt;
O.o that seems really fun :D
Ah, fixed, did exactly as you said, just had loads of servlet residue from old project stuff, thanks very much :)
I would suggest to use Maven instead of Ant for packaging all your stuff.
yeah, but did you stop at the worlds largest truck stop in Iowa? that's *fun*..
&gt; SWTJar is an ant task which allows you to build a single jar which loads the correct SWT classes at runtime That's... really not hard enough to merit even an Ant task let alone a jar to do just that!
Yeah, I heard the learning curve is a bit much for it too for small projects
It's certainly not hard but it's a simple bit of reusable function. Otherwise every SWT project has to copy/paste the same code to do platform detection and reflection to add the correct SWT jar to the classpath. 
actually that was our intention, but my brother flew right past it even though i said HEY LOOK LETS GO THERE FOR FOODS(he agreed then forgot to exit the ramp) then we were too lazy to go back... 
It's literally one file. One jar file that differs in contents between different platforms. I'm not really sure what you're developing that has so few differences in packaging between platforms that this would help, even trivial programs I make have pretty different build steps for different platforms. This covers about 2% of the work. If this really is a big help for you then awesome, not knocking it, just cannot see it fitting into my workflow.
[Java Thread Dump Analyser](http://mchr3k.github.com/javathreaddumpanalyser/) and [InTrace](http://mchr3k.github.com/org.intrace/) are the two tools which I am using swtjar in. These are both pure Java SWT UIs where the only platform specific part is the SWT jars. What are the platform specific steps you encounter on trivial programs? The only thing I can think of would be if you wanted to use a .exe on Windows and a .deb (or similar) on Linux etc.
But once you move away from small projects into the enterprise side of things, or work on an open source project, you will find that thousands of projects are managed by maven. Unless you're a developer for fun, you should also aim to develop employable skills that can also be applicable to what you are working on. I'm sure there are some very simple archetypes out there that can get a skeleton GWT project up and running inside of minutes. **EDIT**: You should get the m2e eclipse plugin, and try new maven project -&gt; select the sample gwt archetype project. From there add dependencies for Hibernate, and then your project is now setup and ready to go.
I replied below. You should really consider it. 
You didn't miss much..
There are lots of differences... I put the Windows app in a zip, and the Linux version in a .tar.gz. Linux version gets a launch script, Windows versions typically get a wrapper .exe (I find that even for small programs, this step is worth it). For non-trivial programs my ant script would include creating the setup.exe installer for the Windows version.
Fair enough - I wish launching .jar files would "just work" across operating systems :) At the very least, SWTJar can be used to package the 32 and 64 bit SWT jars together so the user doesn't have to pick the correct 32 vs 64 bit version. 
As a Java wizard, I know a lot about this. Just last week I noticed that my girlfriend had this pesky habit of buying bags of coffee, but as soon as she got towards the bottom of each container, she lost interest in it and bought a new one. It is important to me that I have a clean and orderly house. I waved my hands around the kitchen conjuring 80 Goslings of Java wizardry and exclaimed "PUBLIC STATIC COFFEE COFFEE EQUALS NULL!". A rustle came from my basement. The garbage collector, manservant buford, slowly limped over. He muttered at me, 'as you wish' and proceeded to remove the remaining grains from my kitchen. Now when my girlfriend assigns coffee to the house, she has to deal with buford.
That doesn't mean it's the norm because you never used it or that it should be dismissed. The goal in the post says best architecture for GWT + Hibernate, and I strongly feel that Maven has it's place along side that. Why is slowing down learning a problem? You can't deny that there are over 4 billion requests for jars from maven central annually, and this number is rising. You can get enough to develop your project, and package it within a few hours of studying the concept of build management through maven. It also solves the original problem of packaging your war with all the required dependencies so you can deploy it to any application container. 
I don't know if I'd say that. Most of the time you can get away with a few simple commands. If you take the time to edit the project object model (pom.xml) to install a few handy plugins (gwt and jetty plugins, for example) you really only need a few simple commands: mvn eclipse:eclipse mvn jetty:run After having used both maven and an ant/ivy setup alternately for a number of years, I definitely prefer maven. One of the most unfortunate things about maven is that it's really difficult to adapt legacy systems to use it. So it's possible that you might find it difficult to make the switch in the long run. As long as you're looking at Hibernate, I'd also suggest taking a look at iBatis/myBatis. I can't count the number of times I've spent fighting with Hibernate to do simple HQL queries that I could've much more easily done in SQL, or fighting with detached model exceptions (although that was on a wicket stack, not GWT). If you really want to use Hibernate, you should research a bit as to whether you want to write straight HQL or use the criteria API... and also take a look at the Hibernate JPA annotation libs as an alternative to using XML files. As far as GWT goes, you should definitely work with declarative XML for setting up your layouts. The Swing-ish object style for doing this (which I think was deprecated as of GWT 1.7.1) is a big nightmare, although last I checked you might be stuck with it if you're trying to use GXT. Another piece of advice is to not read too much into the MVC pattern. For smaller projects it's really a lot of overkill... especially when you have multiple widgets on a page with independent presenters and you need to start nesting them. Go with your gut on how to separate the layers.
Curious... what did you end up with?
It does in the default case on Windows and Mac, it's just a bit too fragile to rely on imo. Also on Windows it's nice to wrap it so users see something more meaningful in task manager, amongst other benefits. 64-bit is something I haven't even begun to dabble in, deployment-wise... I'll bear this in mind when I do.
* right-click the project in the package explorer, go to Properties * under Java Build Path, select the "Projects" tab. * click add, and select the other projects that this project depends on. Remember, circular dependencies (Project A depends on B, and B depends on A) are bad, but java tends to handle them.
Eclipse bitches worse than a psyco ex-girlfriend if you try circular references.
Preferences -&gt; Java -&gt; Compiler -&gt; Building. Expand build path problems, change error to warning. Fixing your circular dependencies would be the better option though!
Eclipse can handle multiple source folders for a project, so you are not limited to 'src' as a folder for source files.
was the food at least good? We made the mistake of stopping at little america along the way...
It's pretty much greasy fast food..
I got two offers in NYC straight out of undergrad in summer '08. One was for 70k, one was for 60k, both included 15% performance based bonus.
Thanks managed to sort it with a bit of what you suggested and some fiddling around.
I normally organise my projects like so: +-project +-main +-src (source folder) +-build (ant build directory) +-lib (library dependencies) +-scripts (build scripts) +-res (other resources) +test (repeats main structure for test cases) +proto (repeats main structure for prototype code) Any IDE specific files go in the project folder so you can easily import projects that's you need to do some work on. Keeping all the library dependencies in a folder makes it easy to track them. Keeping the build scripts with the project is a must so that you/anyone else can easily build the project without an IDE or any special knowledge. I find the advantage of using a separate source folder for tests cases is that you can have them in the same package without showing up in the same file view e.g. com.mycompany.main.Widget and com.mycompany.main.WidgetTests. The same also applies to my prototype code.
If you can get the hashed password file then you could generate the hashes from your generated strings and compare them to the values in the password file. Take a look at this: http://asg.web.cmu.edu/sasl/sasl-library.html This is how something like John The Ripper works. Also consider a dictionary based attack.
Well in general I agree, but there are some convenience functions in [guava](https://code.google.com/p/guava-libraries/) that might be of interest in a similar scenario. For example [Files](https://guava-libraries.googlecode.com/svn/tags/release09/javadoc/com/google/common/io/Files.html) might do the things he wants...
http://codehowto.com/java/ I created the site. It illustrates a lot of common Java tasks. It is actually current, unlike many aging Java tutorials that use obsolete code approaches (in the Java world this is known as "deprecated" APIs). Let me know what you think... if you have a feature request, I'd be happy to hear it.
Is this a way of implementing [Aspect Oriented Programming](http://en.wikipedia.org/wiki/Aspect-oriented_programming) or could/should this be used instead of or in addition to AOP? I get the case for this; it just takes IoC dependency injection to the next level. However, at some point this all becomes a untestable and undebuggable mess, but I guess it would be useful with the right discipline around it. Edit: There's a text explanation of the case for II [here](http://blogs.oracle.com/jrose/entry/interface_injection_in_the_vm). That page discusses it more in the context of Groovy, but I think it still applies. Edit2: It also occurs to me that this is a variation on [monkey patching / duck punching](http://en.wikipedia.org/wiki/Monkey_patch) from Ruby/Python. Of course, that means it will have all the usual pitfalls associated with those practices. Yeah, I don't know. I think I understand where this is coming from, but it still doesn't give me warm fuzzies.
What about a program that needed configurations? Like: private static final int MAX_INSTANCES = loadValue("MAX_INSTANCES "); private static final int numInstances = 0; private static int loadValue(String value) { Scanner scan = new Scanner(new File("config.txt")); //search file for value and return iValue; } public static Object createInstance() { if(numInstances &lt; MAX_INSTANCES) { ++numInstances; return new Object(); } else throw new Exception("Too many instances"); }
Is there a JIRA for this? Maybe a test that reproduces this bug? I'm interested to know what exact situation might trigger this.
that's horrible, shoulda used protocol buffers
Cmon. If you change the definition of your POJO, you have to reload your caches.
https://hibernate.onjira.com/browse/HHH-6600 No test yet. Maybe when I have more time on my hands.
That's the problem. Reloading caches is merely a workaround. Since Hibernate openly advertises clustered caching, one would expect it to just work out of the box. Respect serialVersionUID. Provide you with some other mechanism to distinguish entity versions. Map fields by name and type, not just order index, and fail loudly if the cached form does not exactly match the current definition. Anything, but not risk silently corrupting your data!
It seems like it would be a lot of fun to play with. I would never want to maintain something someone else wrote with it.
This would fail in exactly the same way without the 2nd level cache, since the backing database would either match the old or the new version of the entity class but not both.
but... they're solving an entirely different problem. That's like using a wrench instead of a baguette.
Sometimes, yes. In the demonstrated example - no. I just add a column. Old servers can still select from the table (they will just ignore the new column). Same thing with updates and inserts. As it turns out, many schema updates can be performed so that old servers don't break anything. Whatever happens, I'd rather Hibernate always failed loudly when this is detected than corrupted underlying data!
Not really. Protobufs are used for persisting data every day. In this case, you would persist the protobuf then read it out of the cache, if the definition was changed, reading wouldn't break due to the nature of protbufs. This was basically why protobufs was invented, backwards compatibility. Assuming new fields are optional of course, which is what you do if you're not retarded. The serialize ID way would handle this by throwing an exception. That is IMO a lamer approach.
To add what others have been saying: The Bay Area is very nice and there are a ton of tech companies out there. If you want a job and are at least ok at coding, you can get a job. It's a beutiful area and there will be a lot of other tech people around for you to become friends with (if that's what you want). The downside is the cost of living. You can rent an apartment easily with a developer salary, but don't expect to buy a house anywhere in the bay area. If you want a house on a tech salary, you would probably have to move into the mountains to afford one and still live comfortably.
" If you want a house on a tech salary, you would probably have to move into the mountains to afford one and still live comfortably." What cities? and distance.
No, I absolutely wouldn't. You're changing the definition of an object. It's like saying, "Hey guys, I'm going to change the directory of this controller in tapestry, and I expect it to keep the old path with no changes whatsoever!" You're literally changing the definition of a serialized object. I expect shit to be fucked up until I fix it. There's no way for hibernate to handle this gracefully. You don't want to have it start assuming variables. The only thing they might do is check field counts and force a reload, but then you incur that overhead for EVERY object. And if you're using the 2nd level cache in the first place, speed and scale are pretty important, so nobody wants to take that hit. It's your job as a developer who is writing things that require scale to take on this work. C'mon, like it's that hard to write a "purge caches" script as part of your deployment procedure? 
&gt;Fundametanlly
I listed three concrete solutions that would work. The last thing I want is load an entity serialized with different definition without an error, update it and persist with this incorrect state. Not. A. Single. Error. If you're unlucky, you discover it hours later. And that's how Hibernate works right now. Here's the thing. I have clustered ehcache. One server puts an object (not Hibernate entity, real POJO) with serialVersionUID=1 into it. With replicated cache, it simply will fail to replicate to newer nodes (on RMI deserialization). Newer nodes will miss and load from DB, but that was expected. Would happen if I reloaded cache anyway. But all nodes are still functional. See? It just works. Conceptually, that's really easy for Hibernate. Serialize something that has version number like serialVersionUID. When you load from cache and see different version number, just drop it and load directly from the database. Even without serialVersionUID - if you load something with different schema (if you serialized it as name+value pairs), you drop it and load from database. My goodness, that's only *cache* were talking about here! I mean, I expect cache to fail. Or miss. Or evaporate. My application should still be fully functional. Even if this was higher, on the "real" application level. I have two servers with different versions communicating via... you name it. Hessian. SOAP. Plain ObjectOutputStream and sockets. Every single one of them would support this better. Either fail loudly, or serialize in some more reasonable way (e.g. name+value pairs or meta+data). Clustered environment like this is nothing out of the ordinary. My app has 100 entities and 200 cache regions. I had to implement an ugly workaround that alters cache configuration so that new servers launch in a completely new cluster. Too bad, when I update one entity definition I still lose the whole cache. And on every release I pray because if something goes wrong, I can be in a lot of trouble. The alternative you're proposing is another workaround. How do you detect what to purge? Diff VCS revisions? I really don't feel like spending hours over hours on it! Time and money wasted, and I have real value to deliver. The last thing I want is spending hours implementing workarounds and babysitting a kid that wreaks havoc whenever you turn your head away.
Thanks.
no problem
&gt; *California is just too expensive* If you do come here, one thing you'll learn quickly is that California is fucking huge and statewide generalizations like that are usually inaccurate. The Bay Area is expensive. San Diego is not. Both are in California.
Oh yes, grab one from one of my many collections. BUT how well you'll fare depends on how intelligently you maneuver my devilishly rigged collections. I warn you, there are no generics in MY vault. Tread lightly and carefully.
 @Inject Human me; @Inject Collection&lt;?&gt; thingsLimaBeanKingClaimAreDrugs; try { me.consume(Iterables.getFirst( thingsLimaBeanKingClaimsAreDrugs, null); } catch(Exception ex) { System.err.println( "Something has gone terribly wrong"); thew new UnknownConsumptionException( "Unknown exception from consuming unknown object from thelimabeanking", ex); }
Example of this is counter on a website.
I've used JAD to reverse engineer a 3rd party API to work our their messaging protocol (on top of TCP/IP). While there was some 'bad' code in the decompiled results there was certainly enough good information to follow execution through the code. Fixing the mistakes was easy so I also replaced the vendor jar with the re-compiled decompiled jar so I could attach a debugger to the JVM and step through the code in a like live environment, very handy! 
I saw all the java code in the view-source. Any chance you could help?
The code you saw was actually *JavaScript*, which has some similar syntax to Java, but is significantly different in most other ways. To answer your original question, though, do you see where it says `wid=500&amp;hei=400` in the middle of your link? Those two numbers seem to be the width and height of the image you're retrieving. Change those to 5000 and 4000 and you'll get a much higher-res image. It will take a little bit longer to load. Play around with those two numbers to get the size you want.
I was not expecting that to work. A++++
Please be careful when initializing static fields. If there is a problem reading config.txt in the above code, the entire class will fail to load.
Think about - Generating a HTML/CSS file and printing that - would seem to be a much easier way to format the report - Jasper or BIRT reporting tools - may be overkill though 
http://download.oracle.com/javase/6/docs/api/java/awt/Graphics.html#setFont%28java.awt.Font%29 *setFont* public abstract void setFont(Font font) Sets this graphics context's font to the specified font. All subsequent text operations using this graphics context use this font. A null argument is silently ignored. Parameters: font - the font. See Also: getFont(), drawString(java.lang.String, int, int), drawBytes(byte[], int, int, int, int), drawChars(char[], int, int, int, int) 
as @gkopff said, **setFont** is the way to go, perhaps a monospaced font is best, if you would like to keep stuff aligned, i.e. Font smallFont = new Font("monospaced", Font.PLAIN, 11); graphics.setFont(smallFont); something like that
If the int represents a UTF-16 code unit, just cast it to char. char c = (char) myInt; If the int represents a Unicode code point, use Character.toChars() char[] chars = Character.toChars(myInt); Note that a Character or char in Java does not represent a Unicode code point or character, rather it represents a UTF-16 code unit.
Convert your int to a byte array, then construct a new string from that.
To construct a String from a byte[] you need an encoding. It's unlikely that the OP means that the int represents bytes encoding a String with an unspecified encoding.
Of course—passing the correct encoding as a parameter when constructing the string just seemed pretty obvious :)
This seems interesting, I do hope they add it to IntelliJ.
how are you issuing commands? what java library are you using, if any? How are you setting the cookie prior to issuing the request?
The best book by a long shot (and I have all the tutorials, as I'm kind of Java book fiend) is Core Java. If you're starting out, Vol I is all you need. If later you want to get into more advanced topics, Vol II will take you wherever you want to go. Cannot recommend enough. 
I used sams Java 6 in 21 days and found the first 4 days infuriatingly confusing until I figured out the purpose and usefulness of object orientation. It takes about 21 days to get through and I'd recommend you learn as much as you can about object orientation before you start the sams book. Also, learning an IDE like netbeans takes a few days of it's own but is totally worth it. 
I am not using a java library except one for parsing json. not sure if cookName should be reddit_session or the first set of numbers in the json response which is: 9485389,2011-08-27T22:44:22,8f3f004ac50fe648d159260ddf8c9ff93517f68a (I tried both) redCoo = new HttpCookie(cookName,cookCont); redCoo.setDomain(".reddit.com"); redCoo.setSecure(false); Issuing commands by using a URLConnection and posting? Not quite sure what you mean. (Oh and also I was debating posting this in explainlike5 cause I am very dumb sometimes.)
In regards to NetBeans: I'm currently using Eclipse, which others have also enjoyed using (I'm enjoying it because it's almost an exact copy of Microsoft Visual Studio 2010, which was my first IDE). What are the main differences between the two IDE's?
Head First Java http://amzn.com/0596009208
Well, Netbeans can produce code for Swing UIs, but the generated code really sucks.
I have a copy of Deitel &amp; Deitel's How to Program Java, we used it at university, and things are well explained.
With a cursory glance over this it seems to provide what you need for storing cookies. http://www.hccp.org/java-net-cookie-how-to.html Cookies name is reddit_session as referenced on the github API page.
That code block needs a try/catch in it anyway.
After a very thorough search of reddit java-related posts, I first studied Head First Java thoroughly, and am now doing Big Java. I think I did the right thing, and am in a position to recommend to you the exact plan of action. Good luck!! :)
I would recommend checking out [The New Boston](http://www.youtube.com/playlist?list=PL74C46F19A47C6504) on YouTube and also the HeadFirst Java book.
Assignments like this bug me, because it's pointless - you will never want to do this in real life - and not enough information... What does the int represent? Is it a Unicode code-point directly? Or a Unicode encoding? And if the encoding, which? The fact you've said it's one integer makes me assume it's a codepoint - UTF16 and UTF8 both support variable length encodings, where the single character is encoded as multiple values. For example, the Unicode symbol "musical symbol G clef" is U+1D11E, which is 0xD834 0xDD1E in UTF16 and 0xF0 0x9D 0x84 0x9E in UTF8, and whilst you *could* represent those as a single 32bit value, you never would - you'd use the utf32 value 0x1D11E instead...
Almost 14 years ago I learned Java using [The Java Programming Language](http://amzn.com/0321349806), having completely failed to understand the language using the O'Reilly book "Java in a Nutshell". Java has been my primary programming language ever since then. Note that The Java Programming Language is written by the author of Java himself, James Gosling, and it shows. Its a clear, logical, and intuitive explanation of the language.
I enjoy the Core Java books and would recommend them wholeheartedly, but one particular decision baffles me; I don't understand why volume 1 includes the reflection API but streams and I/O are in the advanced volume. If one chooses to read Core Java 1 (And I agree Core Java 2 isn't necessary for a beginner) it is important to supplement that book with an overview of Java I/O. The Java Trail on I/O, free and available online, would be sufficient for this.
Say what you want about Bruce, he does have some funny opinions at times, but I think this is generally regarded as the best intro Java book. http://www.mindview.net/Books/TIJ/
Start with the [Java Tutorial](http://download.oracle.com/javase/tutorial/)
You can use the free [Window Builder Pro](http://code.google.com/javadevtools/wbpro/index.html) to do the same thing in Eclipse. I haven't really used it myself but superficially it looks pretty darn good (good enough for Google to buy it and release it for free).
60k
this book is often mentioned among the best programming books ever written; together with Larry Wall's (Camel) Perl book, and Dennis Richie's C book. **Effective Java** http://www.amazon.com/Effective-Java-2nd-Joshua-Bloch/dp/0321356683/ref=sr_1_1?ie=UTF8&amp;qid=1314549239&amp;sr=8-1
Deitel &amp; Deitel, Java How To Program
Definitely a good book, but it assumes that you already know how to program in Java. The OP's query was for tutorials for beginners. Once he/she's no longer a beginner, I agree this makes a good second book.
Head First Java then read Effective Java
you're right, not a good way to get introduced to programming. i only read his headline, didn't notice he asked for an entry level suggestion. the world of programming books has its fare share of poor choices, so hopefully someone got a tip they could use :-)
Thinking in Java, by Bruce Eckel is highly recommended. There is free electronic version online.
Alrighty thank you so much. Hopefully this will work!
Ok well it looks like I am not stupid/am stupid. I have been adding the cookie properly. I think but I still cannot get any different result. I rewrote my code trying to get it to work and still nothing here is what I got: String Name = ""; String Password = ""; String ModHashstr, Cookiestr; URL myURL = new URL("http://www.reddit.com/api/login/"); HttpURLConnection conn = (HttpURLConnection) myURL.openConnection(); conn.setRequestMethod("POST"); conn.setDoInput(true); conn.setDoOutput(true); OutputStreamWriter out = new OutputStreamWriter(conn.getOutputStream()); out.write("api_type=json&amp;user="+Name+"&amp;passwd="+Password); out.close(); //Gets the cookie and gets the session Cookiestr = conn.getHeaderField("Set-Cookie"); Cookiestr = Cookiestr.substring(0,Cookiestr.indexOf(";")); Cookiestr = Cookiestr.substring(Cookiestr.indexOf("=")+1); //Gets the JSON response includes modhash and even the cookie again. BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream())); String decodedString; decodedString = in.readLine(); in.close(); //Parses the JSON and returns the 'type' which is modhash ModHashstr = RedditBot.getInfo("modhash", decodedString); //Starts a new connection to submit myURL = new URL("http://www.reddit.com/api/submit"); conn = (HttpURLConnection) myURL.openConnection(); conn.setDoInput(true); conn.setDoOutput(true); conn.setRequestMethod("POST"); //Should add the cookie conn.setRequestProperty("reddit_session", Cookiestr); // new OutputStream and writes the required text for posting including modhash out = new OutputStreamWriter(conn.getOutputStream()); out.write("uh="+ModHashstr+"&amp;kind=link&amp;url=google.com&amp;sr=bottest&amp;title=test&amp;id%23newlink&amp;r=bottest&amp;renderstyle=html"); //Gets response which always contains [".error.USER_REQUIRED"] instead of the URL in = new BufferedReader(new InputStreamReader(conn.getInputStream())); decodedString = in.readLine(); in.close(); //Prints the response System.out.println(decodedString);
This. I just got this book a week ago and have been reading it and it makes Java really clear and understandable.
&gt; To the tune of Barbra Streisand's "People"... Thankfully, I have no idea how that tune goes.
[Open Course at stanford](http://see.stanford.edu/see/courseinfo.aspx?coll=824a47e1-135f-4508-a5aa-866adcae1111)
zzZzZZzzZzZzzZZ slow news day eh
eclipse is popular. so is netbeans.
Are they free by any chance? 
I use Eclipse, and GIT's worth getting into as well! :-)
both are. google them.
Git?
http://i.imgur.com/NtHa7.jpg
[GIT](http://git-scm.com/) - [Wiki Pedia](http://en.wikipedia.org/wiki/Git_%28software%29)
XCode has the basic editing capabilities + some nice tidbits, Netbeans rules, though is kinda slow.
+1 for eclipse, and yes
[Java Foundations](http://www.amazon.com/Java-Foundations-Introduction-Program-Structures/dp/0132128810) . Massive book, covers the basics of Java as well as some data structure/algo content. 
Requires login. BTW, code listings on drnobbs.com are very annoying to read.
I'm not sure about reading PDF, but I've been using iText for writing PDF...
Thanks. I tried it out, but I still have to figure out some problems before I try auto-printing PDF's
http://pdfbox.apache.org/ for(Problem p : allJavaProblems) apache.findLibrary(p); 
Absolutely!! The Commons libraries alone are EXTENSIVE!
This isn't r/funny. You can put the entire question in the title.
I've been using iText as well (inherited it on a project that was turned over to me at work). I'm sure it's not being used as optimally as it could be, but reworking everything to be better just isn't in the cards. I just have PDFs with fixed-sized fields, populate the fields, and combine a bunch of PDFs into one single finished document.
I've done some crazy stuff with Jasper Reports. It'll generate a PDF. Not so good on editing them though. 
itext
The best suggestion has most likely already been given; http://pdfbox.apache.org There is another apache project which is also capable of reading PDFs, but I assume it's not as good as PDFbox. http://tika.apache.org/
Unit Testing with JavaEE has always been a p.i.t.a for me. I scrolled through the article hoping for the holy grail. It's a step forward but I don't like that I'd have to expose the members of a class (not private) to assign a mocked instance. What I really like is that this is FAST. In general: I don't like to adjust my code too much only for testing purposes, which doesn't mean you shouldn't reconsider your structure if it's not testable. I'm looking for an approach where you simply redefine (mock) the class which gets injected in the class you want to test. You just let it run and the mocked instance automatically gets instantiated and injected instead of the original one. Does anybody know something like that, already existing? Maybe I just missed it. Maybe I should dig in and try to find the grail myself :-)
itext license is wolf in sheep clothing though, just an fyi for anyone looking to integrate it with any projects at work. I'd look into pdfbox first unless it doesn't meet a requirement you have.
Absolutely true. If you really want to use iText, you should hunt around for version 2.x because that one has a much more useable license.
The license is AGPL. You should do some research yourself on this, because it's been quite a while since I freaked out and thought that I had used it in my software when I had actually used the previous version that was a different license. I believe with the AGPL license, you need to open source your software for anyone that uses it. In the case of creating PDFs, I'm not sure if that would include people that merely look at a PDF generated by the program, but that was a concern for me. I also have no idea how it works with employees of a company. If it's being used internally, it's possible you would still have to open source it for anyone that used it, even if they're employees.
Just reload your caches, Eugene.
[Maybe check out Spring Roo?](http://www.springsource.org/roo) I'm going to give it a try in the next week or so, but I've been hearing some pretty good things about it, although I've never been a fan of scaffolding.
This is great information to have, thanks. My application is still on iText 1.x (yes, really), and I've been contemplating what we'll do if we decide to handle our PDF-generation in a different way. PDFBox or Flying Saucer are sounding better now.
And it already [breaks](http://code.google.com/p/powermock/issues/detail?id=344) one of my favorite testing utilities. :)
ROOMBAS FOR THE FISHES. DETHKLOK APPROVES.
What is the difference between the four machines? It sounds like you'd be able to isolate your issue based on a "simple" difference check on OS configuration - assuming the same version of the JVM and whatnot. Because HotSpot isn't as awesome as JRockit is yet, it requires a contiguous region of memory for its heap. I've seen heap space allocations fail on machines that have plenty of free memory, but not enough free *contiguous* memory. The fact that there's &gt;Xmx free memory on the system and it cannot allocate enough for the heap space implies to me that this is the case. I have no idea what OS options determine how the OS allocates (and compacts) memory, but that's where I'd start. I'd wager that your issue is you don't have enough free contiguous memory.
Cool. Reminds me a little bit of the guava API.
http://www.reddit.com/r/java/comments/j21hz/best_text_book_for_beginners/ http://programmers.stackexchange.com/questions/91629/best-java-book-you-have-read-so-far 
i can't get the page to load. Been trying for two hours now.
Mirror of last iText release available under LGPL/MPL: https://github.com/ymasory/iText-4.2.0
Sounds like they may all be running inside of an oversubscribed virtualization environment. Are they all running on the same physical piece of hardware?
http://webcache.googleusercontent.com/search?cx=c&amp;sourceid=chrome&amp;ie=UTF-8&amp;q=cache%3Ahttp%3A%2F%2Fnighthacks.com%2Froller%2Fjag%2Fentry%2Fi_ve_moved_again
I checked that and specified that the 4gb of memory allocation was not dynamically adjustable on the ESX host. Unfortunately, no difference.
That's part of this...I checked for as many differences as I could, and selected one of the two problem machines (the one that fails first) and brought kernel and updates to the same level. Nothing appears to have made any difference at all. Contiguous memory sounds possible/likely, I'll look into that, but I'm not sure how to make that happen either.
I had never heard of JCreator before, so I looked it up. The pro version is only $89, which is nice, but then I noticed that one of the "pro" features is "Integrated CVS." Really? People still use CVS?
iText reads and writes. I highly recommend iText in Action, by the author of iText, very clear, directly to the point. 
http://www.manning.com/lowagie2/ has some sample chapters and source code. But do buy it, if you find it useful. [edit: link to current edition, not old one]
Whats cvs?
Not sure if you're really asking, but it's this http://en.wikipedia.org/wiki/Concurrent_Versions_System It was a decent version control system in the 90's and early 2000's, but Subversion and then Hg/Git truly made it obsolete.
JCreator is what is used at my high school. We are switching to NetBeans
Oh thanks
Do you know any other programming language? 
 public class SuperImportantJavaWork { public static void main(String[] args) { Scanner in = new Scanner(System.in); String thing = "chicks"; int amount = 2; String interval = "at the same time"; System.out.println("What would you do with a million dollars?"); in.nextLine(); System.out.println("That's cool man. Know what I would do?"); System.out.println(amount + " " + thing + " " + interval + "."); } } 
Try using a more advanced IDE, like IntelliJ, Eclipse, or NetBeans. I hear IntelliJ attracts 30% more attractive females than Netbeans.
Get Eclipse, learn Swing, and download Windowbuilder Pro. You'll be making real, graphical results in no time :)
Why did you you declare length?
class project { public: char * ptr; };
Learn more?
Eclipse SE comes with a built in windowbuilder now.
Seriously? Don't waste your time with Windowbuilder Pro or swing. Instead start working through some programming Kata's! My favourite is uncle Bob's bowling game [Kata](http://butunclebob.com/ArticleS.UncleBob.TheBowlingGameKata) 
Read up on Object Oriented concepts.
Don't put the opening brackets into new lines, keep them on the same line. I hate people that put the brackets into new lines.
I hate people that keep brackets on the same line.
Well I guess then you suck as a Java programmer. Read [the coding guidelines](http://www.google.com/url?sa=t&amp;source=web&amp;cd=1&amp;ved=0CBgQFjAA&amp;url=http%3A%2F%2Fwww.cs.bilgi.edu.tr%2Fpages%2Fstandards_project%2Fjava_CodingStyle.pdf&amp;rct=j&amp;q=java%20code%20style%20guide&amp;ei=L7FgTuPUM5HFswaBt-3sDQ&amp;usg=AFQjCNGD8ZNmYdW4e1gezsIMQTctyB7f6g) before embarassing yourself further. &gt; Never break a line just before an opening brace “{”. Edit: go ahead and downvote me, I bet you never worked in a team larger than 1 person! When you need to work with other people's code then you will understand why a universal coding style is more important than your preferred "neat" style.
Don't focus on getting an advanced IDE for now, I know everyone is telling you to do that, but I honestly believe using a "text editor" IDE to start is the best, advanced IDEs do a lot of the work for you, stuff you won't truly learn if the IDE keeps doing them for you. Once you start doing real work then I highly recommend you get a real IDE. As for your work, if you understand what you've written then good job! now you should focus on writing a code that takes an input and processes it, like for example you write a sentence and your code counts how many "a"s it contains.
Well, that way you can display more code on the screen at the same time, it's a great habit to get used to.
I'm going to very respectfully disagree on this one. I think its better to start with something that offers only small levels of support (like jGrasp) until you know what it is that the IDE is actually doing for you.
http://codingbat.com/
As an Eclipse power user, I agree. Learn to compile and run etc on the command-line, and upgrade to an IDE when you understand the things it's doing for you.
Do something like sw.dispose() sw.setVisible(false) parentfrom.sw = null Have you considered making sw modal to limit it to one instance at a time?
What do you plan to do with the len variable?
First off don't use an IDE (Eclipse, NetBeans, etc). If you do then it will hide all your little mistakes. You will not learn the Java API at all because you will learn to type the first two letters of anything you want to do. I would try building up with minimal increases in coding complexity. Start with something like outputting a request for a number and presenting the user with the nth term (ie user enters a number n and you return that iteration of) something like the Fibonacci series. Do some more interesting maths (Squares, square roots, powers). Say someone gives you a screen size and a screen ratio (10, 4, 3 - 10 inches, 4 by 3 ratio) wok out the area and the length of both sides. Anything like that until you get the hang of all the maths. Then try and read some larger data - maybe a file and return every x words from that file. ie user enters 7 so you return every 7th word. Then try reading from a web site and return some useful information. If you want to work on GUIs, etc feel free to but that won't make your coding any better in the short term. I'd stick to learning to program until you are happier with the language. Anyway that's my advice - everyone will have different ideas. EDIT TO ADD -- And ask loads of questions.
Thanks, I think .dispose() was exactly what I was looking for.
This wouldn't be as good of an idea if OP had already learned C++ or other languages.
I think when you first learn it's OK to put them on a separate line, and in places it can increase readability, but it's generally much better to keep them on the same line.
Are you good at any other programming languages?
[Ed is the standard text editor](http://www.gnu.org/fun/jokes/ed.msg) Oh, and you need to put your curly braces where I like them because I like them there.
I respectfully disagree. When it comes to compiling, running, using third party libraries, and so on Java is very different to other languages, and a lot of newbie (and not so newbie) confusion results from some of its... curiosities.
To OP: Ignore arguments that look like the one above and write some fucking code.
I second this one. 
This is a matter of preference.
&gt;You will not learn the Java API at all because you will learn to type the first two letters of anything you want to do. I don't see the problem with this, sure you can't program outside a IDE but why wouldn't you?
Most people don't program in 640x480 anymore :P
BLUEJ Just saying.
I know, I'm only joking. Though the time when we used screen sizes like that was when it was most useful to keep the braces on the same line. Now with plenty of screen space, I like to put them on a separate line because I think it looks neater.
As long as you have to scroll down to view the rest of the code then saving lines of code is useful, even if you're on 1920x1200.
Of coruse, it's a tradeoff.
I wrote up [a bunch of Java questions](https://docs.google.com/document/d/1T0KkTK9GCnS-4TBDC8XROru36c8uZYQ2LM1640H1TDs/edit?hl=en_US) for interview prep. If you can get to the point where you can answer most of these, you're in pretty good shape. (Also, the doc is editable in case you want to add to it.)
I fucking HATE bluej. I mean it sort of gets the whole objects thing in your head a little easier, but THAT is what screwed me up when I was trying to learn OO programming for the first time. Eclipse FTW.
Browser browser = new Browser(); browser.search("Object Oriented Concepts"); browser.printSearchResults();
[thenewboston](http://www.youtube.com/user/thenewboston) has some great tutorials on YouTube EDIT: link added
java2s.com. Very good code examples. From the simple stuff all the way to stuff waaaay beyond me.
Aim for making a game, like number guess or tic-tac-toe. Video games push your knowledge of things and is a fun objective to aim for.
Huh? When I first started it was with Netbeans. I had very few questions as to what to do. "I need to start a new project...." File&gt; New Project and it guides you through with a wizard. It isn't very complicated even if you are new. The IDE is a tool; whether or not he uses it to its full advantage has nothing to do with the fact that the tool and the language are two separate things. Playing with the IDE also helped me better understand the methods of an object because the Javadocs are built right in. 
It doesn't matter what you think, if you're code is going to be read by other programmers then you better conform to the standards. Unfortunately Java has become a language where people write everything in their own local language, in their own code style, using their own "frameworks" and "neat tricks" that all looks horrible to whoever is going to work with it in the future. It's a bit sad considering that Java is one of the few major languages that does actually have an officially recommended coding style that's been in effect for more than a decade.
methods are lowerCase, usually...
Nice work there, though fwiw I (think I) can answer all of hot and spicy, but only about two thirds of mild, at least with any confidence. Architecture of java seems a little vague, and knowing how classloaders (esp when you start dealing with web classloaders) can be something of an advanced topic. I could give some vague ideas about how GC needs to do, but I'm also aware that there are a lot of switches that can be used to change how it does it, and what different categories a particular object can be in. And Hot/20 seems somewhat pedantic, as the jvm might intern strings and make (a == b) == true depending on how big the intern cache is, or if someone has specified a custom string interner... right?
It really depends on the person. Some people want to know everything going on behind the scenes and work their way up. Others wants to just dive right in and get something running and then work backwards to learn things as they come up. Can a powerful IDE be a crutch? Sure it can. Does that mean everyone that starts out with a powerful IDE will never kniw/understand how to compile/run/utilize third party libraries from a command line? No. Just because you prefer one way doesn't mean everyone should do it that way.
It's a text editor with relationship diagrams and an easy compiler, what is there to hate?
Organizational standards trump Sun's published suggestions. Everybody has their own personal favorite coding style. I personally use the Sun-recommended one I believe to the letter, but I can't on projects where there are millions of lines of code in the organizational standard.
It's not meant to be pedantic, but it could be interpreted that way. It's getting at the most basic fact that equals() is the way to compare objects in Java. Interning is a good point, though, so I've added a question 21 ("What is String interning? How might it affect the answer to question 20?") to address that issue. 
They are guidelines, to be accepted or rejected as circumstances dictate. I work in a huge IT org that has millions of lines of Java code that does not comply with Sun's style guidelines. I do not have the ability to change this. Using your arrogant reasoning, I therefore suck as a Java programmer.
Having mentored novice Java programmers for over 15 years, I can say anecdotally that this is by far the most effective approach. Command line JDK tooling, a programmer's text editor and your filesystem are the best framework for a more thorough understanding of how it all works. 
Different people learn in different ways. I almost failed Java into several years back because of that software. Later in life I just jumped right into eclipse and understood it way better.
Dammit... I knew that... I just fail. Fixed :P
Awesome - according to my experiments, shorts strings (3 or less) expressed as literals compared with == often return true, while longer ones often don't. As all string literals are interned (according to everything I've read anyway), and a.equals(b) iff a.intern() == b.intern(), this should happen with other string literals, like in your example. (see http://download.oracle.com/javase/1.4.2/docs/api/java/lang/String.html#intern()) Your example is more correct if you get one of the strings from a non-literal source, though how much effort you need to put into that to become technically correct... Thanks again for sharing, I'd vote your doc is worthy of a submit in and of itself.
He'll declare the weight of yo momma if he allocated enough memory!
I second this second.
Appreciate it! I posted it to /r/java and /r/programming a few days ago, but it was summarily ignored. :-(
this.second(me)
Both show up when i look at your account, but neither shows up when looking back through the last few days of submissions, nor in the search, so I'm better the spam filter ate it. Maybe message the mods of each sub?
[As mazing said earlier](http://www.reddit.com/r/java/comments/k2585/so_i_started_with_java_about_three_days_ago_and/c2gza0a), check out codingbat.com to learn more of the basics. I'd also have a think about what you want to be able to do with java. Do you want to be able to produce GUI applications or write web applications or Android dev? Learn the basics first and get comfortable with an IDE (I use both Netbeans and Eclipse and couldn't suggest one over the other). As a learner I'd also advise you to make sure you comment your code and make sure its readable (spacing, indents etc). This will come in handy when you read over it a few months down the line and if you ever need someone to read over it for you. Good luck!
You could have a static method such as showWindow() within the SettingsWindow class which could display a Frame / Dialog which is modal. Also use a static class variable for the SettingsWindow so you wouldn't have to recreate the class each time you called it. If that isn't very clear (9.15pm on Fri evening here so brain is a bit tired :) ) give me a shout and I'll have a look for some sample code.
This is my bible. Might be worth looking at after some of the other suggestions as its a bit advanced. [Head First Design Patterns](http://www.amazon.co.uk/Head-First-Design-Patterns-Freeman/dp/0596007124/ref=sr_1_1?ie=UTF8&amp;qid=1314994591&amp;sr=8-1)
Its not that you will or wont. Its more about understanding the language properly to me. I found that much easier without an ide.
No, you would suck as a Java programmer if you thought putting brackets into a new line was the way to go. Conforming to company standards is a different matter, and once you become senior enough you should try and change those standards to the correct one.
I've used both Matisse editor in Netbeans and Eclipse Window Builder. Eclipse can edit the code generated by Netbeans, but Netbeans generates an xml file, so I don't think the reverse is possible. 
Why would anyone even care...
I really, really think in the specific case of Java+Eclipse that diving straight into Eclipse will set you back. That's what I did and I'm not a dummkopf, but a lot of shit made no sense and was very frustrating until I learnt properly how it all works underneath and then applied that to my IDE usage. So, OP, if you want to dive into an IDE then sure go for it but if you're feeling frustrated, like things "make no sense" or are happening randomly, that *may* be a symptom of the IDE hiding the details from you.
The only advantage JCreator has is that it creates a nice little "Harness" for your code. It means you don't even need to make a new project. Very handy for beginners as you can just start typing code and compile/run it. For everything else though, it's terrible. The free version doesn't even have auto-complete.
I would have to say that I find C++'s compiling slightly more confusing, but to each his own I guess.
I've been watching him actually. I'm also taking a class in school.
I don't find Java more confusing, just different enough to warrant spending time on it (whereas python, ruby, php for example you can just dive right in) Edit: Or at least I *think* the part in parentheses is true, I don't know ruby or python well at all and might be committing the same error!
But that really doesn't make sense, typing ".in" compared to ".interrupted()" isn't going to make it easier to understand a language. By using an IDE you take away problems with learning syntax and thus can focus on actual problem solving.
&gt;methods are lowerCase, usually...in terms of programming conventions FTFY
&gt; stuff you won't truly learn if the IDE keeps doing them for you. things like what, would you care to explain. I keep hearing about this, but I've yet to see an explanation as to why. I myself use textpad/the command line but I'm sure I've yet to see the extent as to what I can do with the command line besides compiling code. I will say I've recently read about Eclipse removing the need to import packages, or something like that - so in a ways I am beginning to see how things can go wrong... *edit: adding to my original question, I've been reading more posts and it came to mind that I haven't used those other IDEs, so I might not know what they actually "skip" in terms of coding/compiling. I have messed with Eclipse for a day, and now I do remember the auto-suggest feature - which could interfere with memorizing useful classes/methods/packages, no?*
&gt; By using an IDE you take away problems with learning syntax and thus can focus on actual problem solving. Ok, forget syntax, program code that works like its supposed to. wait, wut?
I second this. It's pretty decent, which is kind of shocking.
what other "terms" are you thinking of?
He wasn't working at either Oracle or Google last year and didn't show up to any official JavaOne events. I did see him at an event at Thirsty Bear and he did an interview for Java Posse. I don't think not being at Google is going to change how he feels about Larry and Oracle. If you want to see James during JavaOne your best bet is at the Jenkins meetup.
in terms of preference, methinks?
Sorry, Java doesn't have pointers; just references.
I could probably code that too :3
Try thenewboston.com Seems to get most things pretty right.
I solve most of theproblems on paper or in psuedo cow before I even start writing the code. I find that easier. Iguess it comes down to.preference, I like to learn the language as well.
thenewboston.com, great source for learning JAVA.
I don't think there is any "Google prohibition against Google employees going to JavaOne". Nobody wants to go, after Oracle started the shit. 
This is how I learnt a lot of my java, especially game dev
[his youtube channel](http://www.youtube.com/user/thenewboston) and [java playlist](http://www.youtube.com/user/thenewboston#grid/user/FE2CE09D83EE3E28)
&gt;thenewboston.com, great source for learning ANYTHING ftfy
Once you've become familiar with Java you should start reading books and articles as well. It's just better to get a deeper understanding of what you're doing.
Make "Troy.png" a [resource](http://www.jugpadova.it/articles/2006/02/05/accessing-a-resource-within-a-jar). 
If it's packaged inside the JAR, then you can load it like /Troy.png (if it's in some subdirectory, then make it /subdir/Troy.png but always start with a /). If it's not inside the JAR then you should provide the accurate path to it.
Think of the jar as it's own file system .. paths should be relative.
Thanks!
[It Works!](http://dl.dropbox.com/u/8559154/Troy.jar)
I really enjoyed Mike Dexters "[Eclipse and Java for Total Beginners](http://eclipsetutorial.sourceforge.net/)".
If you want to load images from the jar, the easiest way is to get the path via the class loader. final ImageIcon troy=new ImageIcon(getClass().getClassLoader().getResource("Troy.png")); Troy.png should then be in the same directory as gui.class. 
And, if, for some reason, ImageIcon can't understand the URL, you could use the getResourceAsStream() method and copy it into a byte array (perhaps by using IOUtils[1]) and construct it using the constructor that takes a byte array. 1. http://commons.apache.org/io/apidocs/org/apache/commons/io/IOUtils.html#toByteArray(java.io.InputStream)
the same guy also has some good ones on [mybringback](http://www.youtube.com/user/mybringback) which is a little newer, but not as many.
Do you have classpath set appropriately? 
I've never actually used the Eclipse export to JAR feature, I just set up a `build.xml` for Ant and create the JAR that way. Have you checked the contents of the .jar? Your `StockAnalyser.class` should be in `uk/co/runwin`. (By the way, your package should probably be `co.uk.runwin` instead.) Another way to try running a JAR is to simply extract the JAR to a directory and running it through Java manually that way. (e.g. `java uk.co.runwin.StockAnalyser`, I think). Oh, and to run a JAR via Java is `java -jar filename.jar`.
How would one go about creating a .jar file from the command prompt? Or would creating one threw eclipse be just a normal .jar file or a runnable .jar? 
I assume it is erroring on missing the class is from the JAR. This is because your JAR does not have classpath information set in its manifest. Create a MANIFEST.MF (put it in a folder/package called META-INF, though when Eclipse does its export you can pick it from anywhere so that part doesn't matter as much). Manifest-Version: 1.0 Main-Class: path.to.your.application.Main Class-Path: jar_name_relative_to_your_jar.jar Without this, Java won't know what class you want to execute in your JAR, and won't know what dependencies it needs. In Windows you can now double click, or via command line do a java -jar myjar.jar I recommend reading up on using the MANIFEST.MF
Does it work when you run it within Eclipse?
Yes it works fine in Eclipse. it was just the build that always failed to do what I wanted.
This is because in Eclipse you have your build path set, however Eclipse does not consider this when exporting to a JAR.
Under File&gt;Export select Java&gt;Runnable Jar. Choose the correct launch configurations (Find the correct main in the drop down menu). Choose "Copy the required Libraries in a subfolder", because you shouldn't repack a library. Instead leave the library license in the subfolder with a shortcut to the original location the web. 
Cheers, I tried that but that's not what isn't working.
I always forget about that, because I either use Maven or Ant and never export. OP do this, then look at the MANIFEST.MF that it puts in the JAR in referenece to my prior post.
If you rightclick your project in the package explorer view, select Java Build Path&gt;Libraries. Is your external Jar listed there?
Thanks very much that was what I needed. I'm off to read about manifest files...
Thanks very much, the bit about running the jar was very important. I was also missing a manifest file.
I do, turns out I was missing a manifest file.
It does, now also works when exporting :)
[JGoodies FormLayout](http://www.jgoodies.com/freeware/forms/) takes a little getting used to, but you can learn it pretty quickly and it can do an awful lot.
For my own personal applications I tend to nest a bunch of BorderLayouts to get what I want. Doesn't seem like a good solution for anything other than a personal project though.
Try using GTK instead of Swing. It works the same way, but the layout elements are a _lot_ nicer (and it has better desktop integration). 
I usually use TableLayout. It's a little old, but it's easy and powerful.
By the way I'm aware of [MiG Layout](http://www.miglayout.com/), which looks extremely clever and easy. I looked at it before though and it was like 100 k of compiled code. That and the BSD license was more than I was prepared to commit to to solve a single panel's layout, so on I trudged. As good as it apparently is, it's overkill for what I want.
[SwiXml](http://code.google.com/p/swixml2/) for Swing makes formatting and programming a lot less painful! It has JGoodies integrated already
I share your pain.
I agree that the thenewboston.com is very good. You could also explore the [Java Videos and Tutorials](http://www.java-tv.com/) directory for alternative videos on specific topics.
Yes it was listed. I have the problem sorted now thanks, I didn't have a manifest file and that seems to have been the problem. learn a little every day :-) 
Nearly all of my problems with GridBagLayout have come from not setting weights properly (i.e. not set at all).
Try running with -Dsun.java2d.d3d=false Java might not be playing well with the video driver.
Personally I find the layouts in SWT much better than Swing, it's one of the things I liked most about it when switching.
Eclipse has the option for a normal .jar or a runnable .jar
One of the best things about netbeans over eclipse is that it has an excellent gridbagcontraints editor.
Good stuff
You can use SWT or GTK (maybe GTK works in the JVM? someone else mentioned it) instead of Swing. You can use [groovy](http://groovy.codehaus.org/Swing+Builder) with swing to make your code cleaner/more concise. You can also use netbeans or another tool to build GUIs without trying to write the code by hand.
What's the problem with the BSD license? It's the least constraining there is.
Use windowbuilder in eclipse. it's a rad (rapid application development) extension that lets you create swing uis by drag and drop, and it writes the code for you.
First, it sounds like you need to go over what a String is. http://download.oracle.com/javase/6/docs/api/java/lang/String.html Now that you know a String is a char array this should help you understand how iterating through a String works.
Agreed on the license. I use nothing but miglayout. Op, try it out, you'll like it. 
Usually I'm happy with BSD licenses. I stick the license in the about box then get on with it, but sticking Mig Layout there feels like admitting a personal defeat that I couldn't do my layouts the manual way. Layouts seem like they should be so simple, that I *should* be able to write my own code for it without help. If I didn't feel that way I'd be happier about using a GUI builder. (Perhaps I need to just buckle down and learn how to write a layout manager....)
Do you think you're stupid because the layout managers you've used so far haven't worked so well for you? If you're an otherwise good programmer, then it's quite possible that you're not stupid, m'kay? I've seen many "sophisticated" and "elegant" designs that didn't amount to a bag of shit because no one besides the inventor of them seemed to have a grip on what they were doing. So, as far as I'm concerned, if it's not understandable by "mere mortal programmers" then it's not very reusable; and if it's not very reusable, then it's not a very good component; no matter how "clever" it is. So.... don't keep blaming yourself. Maybe someone out there can make it work for them. Maybe it will click someday. Maybe it's truly crap. But in the meantime, you can make a decision to not waste any more of your life on technology that never quite seems to work for you.
I have used [DesignGridLayout](http://designgridlayout.java.net/) on a number of projects. Like all layout managers it takes some getting use to, however it is neat and clean for most layouts.
I don't get it. Why would using an inferior layout manager from the JRE be a victory, *the manual way*? I guess you also don't use Spring, Struts, who knows what else, because that's not part of the JRE?
For one, a large majority of people never look at about boxes (except maybe for the version number if there is a bug). For two, I think a lot of people are impressed by programmers/individuals who use off-the-shelf stuff to help them reach their ultimate goal. The '[not invented here](http://en.wikipedia.org/wiki/Not_Invented_Here)' attitude is generally frowned upon outside of academia and large organizations. The only proof that matters to show your ability is a good, easy to use program; it doesn't matter how it got done (aside from stealing/other unethical stuff).
I use SpringLayout, it's fairly easy to use.
You can install "Oracle Java" for linux manually. Just download it, and install it like everyone used to do pre-2006. If you don't want to install proprietary software because of ideology, well I have no solution for that. 
Mhhh ... wasn't that exactly why I asked? Having people browse the web and download third-party stuff is not a good way to get a decent install base, which was one of the points which broke Silverlight's neck. In the end, people will start reimplementing it ... and we are back to the fun days of Blackdown, GNU and co.
This is why Java is mostly used on the server-side. The client side was just too cumbersome and slow loading to really get people interested and JavaFX wasn't fundamentally changing that. It was just an attempt to play catch-up and in the current climate that seems even more questionable.
As far as I saw JavaFX had a blazingly fast start up, because they didn't inherit all the Swing-inherits-AWT baggage, which led to the problem that every simple Swing class required the loading of dozens AWT classes. From the technological side JavaFX did look promising, although using Java for it meant the repeat-repeat-repeat-your-your-SimpleBoilerplateFactoryFactoryStrategyCommandPatternImpl style of programming was prevalent there, too and the API looked pretty much like Swing. From the political POV it just looks now that "OpenJDK is open-source" means that new stuff just won't go into OpenJDK anymore, like with Swing-2.0 aka JavaFX. Imho this probably kills JavaFX the most.
The problem with JavaFX was that it came years too late and wasn't that totally convincing either.. It might have stopped someone invested in Java to move to flash, but it didn't really encourage new people from adopting it as a platform over flash or even HTML5. Too little, too late.
Thanks, worked great! guess I'll make sure I have the latest graphic card drivers
Short answer: No chance to get that even remotely right. Longer answer: If you're willing to ignore Unicode, ignore diacritical combining marks, surrogate pairs and just assume that every "char" is a real "letter", then you could use something like: def countLetters(sampleText: String, accu: collection.mutable.HashMap) = { accumulator.foreach(addOrUpdate) def addOrUpdate(c: Char) = if(accu.contains(c)) accu(c) += 1 else accu += ((c, 1)) } 
'"OpenJDK is open-source" means that new stuff just won't go into OpenJDK anymore' Have you actually been looking at the openjdk repos? Seems to be plenty going in there at the moment.
Oracle knows that businesses don't run on hugs and kisses...So I'm curious how this will work out too. 
Why does it being proprietary mean it won't be shipped with Linux?
That wasn't exactly what you asked at all. Your question uses the assumption that the official JVM isn't allowed on Linux which is entirely false. Davesisko is pointing out to you that you can manually install the official JVM, like we all had to do in previous years, then you can use JavaFX. The folks behind the OpenJDK aren't some small time people either; Google, Apple, and IBM are all behind the OpenJDK. Who cares if JavaFX has support though? As others have said, too little, too late.
*sigh* Ok, sorry. I thought it was obvious. Of course you open up a web browser, browse to oracle.com, download the Oracle JDK and install it manually (that's actually what Oracle suggests). I just think that no one except a few power users will ever do that. That Oracle's decision is actually killing any possibility of getting a decent install base was my key point here.
Most Linux distributions have rules what they ship. Traditionally the Sun JDK had only two of the four essential rights, and many distributions didn't like that but shipped it. Oracle reduced these rights to one now (they removed the right to distribute it in a way the Linux distributions normally do). Most Linux distributions are actually just switching to OpenJDK even for Java 6 completely.
It was my understanding that Ubuntu didn't care about that sort of thing, though. And in which case, this isn't really a problem because Ubuntu and its derivatives is much more popular than the alternatives for desktop linux.
It's a strange move, why they think limiting access to their platform is needed, sounds just gobsmacking stupid. JavaFX will fade into irrelevance soon enough. Java though, will work out eventually, as OpenJDK gets more stable and mature (atm. it's a step behind, e.g. it doesn't work with my bank on linux, while the sun(oracle) vm does - whose latest versions will no longer an apt-get install away)
As others have pointed out, Java is pretty enterprise focused at this point. I'm sure Oracle has looked at this before and likely concluded that there is no benefit to them. You really don't see much Java outside of the server world these days.
Code re-use is a good thing. Learn to love it. Wikipedia has a nice article on the "Not Invented Here" syndrome that, I think, applies to your situation: http://en.wikipedia.org/wiki/Not_Invented_Here Personally, I'd consider an engineer who re-uses an existing component, who can thus spend all of their remaining team on the other functionality of the product, better than an engineer who insists on writing everything from scratch. This, of course, assumes that the reusable component in question is of acceptable quality and meets all of the product's needs. [ Dang, harlanji already posted that wiki link. Should have looked closer at his post. ]
What do you mean by "fade" into irrelevance? Does it have any relevance now?
OpenJDK?
JavaFX still has to deal with the JVM spin-up time, which is getting better but is still very present atm.
This whole JavaFX resurgence is a joke. It's Java applets circa 2011. Little cross compatibility, tons of other choices, and a shaky brand should mean a different platform for the developers. Had this come out 5 years ago, it might be a little more relevant. Right now it's just Oracle keeping their developers busy on a failed product. I can picture the Oracle fucktards that continuously make these poor business decisions. HAY GUYS, CHECK OUT THIS FLASH! MICROSOFT HAS A VERSION CALLED SILVERLIGHT! WE'RE AS GOOD AS MICROSOFT AND ADOBE, RIGHT GUYS?
They think business runs on IP laws and archaic business models...
 sampleText.toLowerCase(); //make all letters lowercase (97-122) This won't work. You need to look up immutability to see why.
Currently it does so what's your point? Oracle is no worse than most other companies out there. 
You can run a business as a follower or as a leader. I have little respect for the followers. Oracle has the capacity to do grand things, but their current leadership lacks any sort of vision. I agree that Oracle is no worse than most companies...it just doesn't say much for most companies.
They are doing grand things..they are making lots of $$$$ What kind of vision are you looking for in Oracle? Especially considering the type of company they are..If anything they DO have vision, it's the people who sold the tools to Oracle that lacked vision. 
I used [jIgloo](http://www.cloudgarden.com/jigloo/) for an easy WYSIWYG layout and then go back and clean up the code it generates.
Well considering JavaFX is hundred's of times slower than LWJGL / Slick2D why would you even bother? Slick2d can draw 10,000 sprites a frame at 60fps with no problems and time to spare something JavaFX isn't even close to doing. So its a performance dog and yet another new arbitrary language to learn as well.
Who uses JavaFX? And: OpenJDK 7 is serving as the basic for Oracle JDK 7 releases. There is just no need for Oracle Java on Linux. Source: http://robilad.livejournal.com/90792.html
If you want to use JavaFX, you will need to download Oracle Java yourself.
What is a numeric literal and how can it make your programming tasks easier? Java has several types of literal, including, finally, binary literals in Java 7.
Is that true for JavaFX the library api as well? How do they prevent it from working with OpenJDK?
JDK 1.6 is good enough. No really it is. It's a platform that will be around for decades. Alternate JVM languages will serve the occasional language fad craving, but they made the technology in jdk 1.6 just too good. Not that it couldn't be improved, but the benefits of upgrading are not good enough to deliver one's technology stack into Oracle's hands. IMHO, Oracle represents the bad old days of IT. Multi-Million dollar site licenses. Critical missing features in non-enterprise versions. Screwy bugs that you can't fix or even report without astronomically expensive support contracts, etc. Screwy architecture decisions to prevent factoring and making it difficult to get around paying for every "unit" you use and other assorted and relentless nickel-and-diming.
The implementation is proprietary, so people could start reverse engineering it ... if you remember the old days of Java/Applets on Linux you probably know why this is not a good idea.
I don't see any claim of "alternate languages" in my post ... I disagree with "jdk 1.6 just too good". The Virtual Machine is the best thing in the Java ecosystem, together with the huge tooling support. But the overall quality of libraries are poor, specially those in the JDK and Java-the-language is a sad joke. JTL is probably the last hide-out of people thinking that closures are not necessary. The rest of the world has already moved on and left all those COBOL, ABAP and Java programmers far behind.
I like GroupLayout a lot. I think it's very fast and easy to setup once you got it.
Your ISP's?
That requires authentication and I'm not sure how to go about using authenticated connections.
This is an interesting product that provides distributed caching via Maps, but a set of other capabilities as well. Locking, Semaphores, and other Collections are clustered providing some nice capabilities over just a straight forward distributed cache. I've found many don't know about this product, and it's worth a look if you are working on a system design.
[Apache James](http://james.apache.org/)
Thanks very much
Yes, I remember well. I won't be using JavaFX. Perhaps scala will provide SWT wrappers?
I've used hMailServer on Windows for years and its great in the amount of options it gives you and is very easy to configure.
props.put("mail.smtp.auth","true") ? [Here's Javamail's API](http://javamail.kenai.com/nonav/javadocs/index.html) and [here are the list of parameters](http://javamail.kenai.com/nonav/javadocs/javax/mail/internet/package-summary.html) that you can pass to it.
Actually, the language (fx script or whatever they called it) is dead. Its basically a bunch of libs for Java now I believe.
'But the overall quality of libraries are poor' - can you provide specific examples? '...and Java programmers far behind' - not according to employment agencies.
1) java.util.Date, java.util.Calendar, java.lang.String and the whole unsuable/missing Unicode support, java.io.File, the whole collection library, ... Third party ones include most prominently Apache Commons. 2) Intellectually. Quantity is not a valid measurement of quality.
It's not about caring, it is about being allowed to do so. And since a few days it isn't anymore.
I had a look at QtJambi recently ...
Sounds interesting. I'm definitely writing some scientific gui apps in scala, so I'll use whatever works best.
Unless there is something in the Java license, there shouldn't be anything in the GPL that disallows you from shipping proprietary software with it. My understanding was that the reason that didn't happen with certain Linux distributions was ideological, not legal.
It is not the GPL or anything else. The software license of JavFX (like Oracle Java) doesn't allow distribution anymore like it happened it the past. Everyone who wants the software, hast to go to oracle.com and download it under the BCL.
You can use GMail, very quick and simple. http://www.mkyong.com/java/javamail-api-sending-email-via-gmail-smtp-example/ 
At the moment scala-swing works pretty well. Documentation could be better, but at last it ships with the standard library, so no extra dependency.
Assuming you are using this class: http://download.oracle.com/javase/1.3/docs/api/java/util/jar/Attributes.html You may want to try the getValue() method rather than get().
I'm actually using [javax.naming.directory.Attributes](http://download.oracle.com/javase/6/docs/api/javax/naming/directory/Attributes.html). The get method returns an Attribute value, which I still can't figure out how to properly turn into a String value...
Yes gmail works very well! Used it to set up automation emails for my company. Free and I did not have to worry about breaching the ISPs anti spam or anything like that. Seemed like a suitable safe bet for me. Sure it could be for you too. GL!
I'm not familiar with Java's AD code, but .get(String) returns an [Attribute](http://download.oracle.com/javase/6/docs/api/javax/naming/directory/Attribute.html), which has a number of get methods on it - have you tried those? As for your NullPointerException problem, are you absolutely sure that every attribute set you're looking at has a "cn" attribute? The Javadoc for that method indicates that null is a possible return value, which would explain why adding .toString() would cause an NPE.
Right, and I get that toString() isn't the best solution for that, it was just a lazy attempt to get a working value out of it. You get a big upboat for the Attribute/Attribute*s* distinction. I find that absolutely stupid to have two data types with such close names... Anyway, what I did to fix it was the following: &gt;String name = (String)attribs.get("cn").get(); Bloody stupid IMHO, but whatever. Thanks for the help!
Before trying to even tackle this in Java, I'd suggest writing it out in pseudocode first to understand what loops you'll need and why. From your code it looks like you know that you can go from char to int--do you understand how to go from String to char? Another thing to consider is what you want to return from your function. Right now it looks to be returning an int, which can't possibly represent all counts for all letters. You'll either want to return a type capable of returning all counts for all letters, or narrowing the scope of your function to apply only to a particular letter in a given string. Hope that helps.
Thank you very much
I have found it to work very well so far (not that I've stressed it yet). I was just concerned the way you talk about Swing being deprecated. I'm not up on the future of Swing I guess. If you have a pointer to somewhere I can read what the future plans for desktop Java are, I'd appreciate it.
Thank you very much 
thanks il give this a go amongst the other options offered.
This makes learning Java easier, if only on the eyes. Thanks for the link.
True, about date/time. Hopefully jsr 310 will resolve this. String and File both have pretty neat alternatives though. (and although I did ask for specific examples, I don't think that the cases outlined mean that the quality of the libs is poor in general. Though poorer alternatives to new api's need to hang around for backwards compatibility. I'm sort of discounting them in my appraisal, which is half cheating I guess.) Intellectually the rest of the world has moved on? If the vast majority of programmers are working in C/Java style languages then I'd say thats wrong. That said, it certainly is less exciting that working on some of the cooler purpose specific languages out there.
Google's gson is the best way I have found.
Thanks I'll check it out!
&gt; Right, and I get that toString() isn't the best solution for that, it was just a lazy attempt to get a working value out of it. I wasn't trying to rebuke you for using toString() - just trying to explain where the NPE might be coming from. :) Glad you were able to get the information you were looking for.
By far the easiest way is with gson. You just convert a java domain to json with one call. 
You might also look at Jackson http://jackson.codehaus.org/
Huge fan of Jackson!
Eclipse likes to do stuff like this. The 'java' file you found is the actual java executable in the OS, you don't want to mess with that. Delete eclipse entirely and reinstall it, that usually works. From there you can reopen your projects. If the projects won't open, you can try creating a new workspace, and copying your projects into it. If it still doesn't work, try making a new project and importing the existing source files. On a side note, I have never had NetBeans do anything like this, but I have had eclipse regularly disassociate source code from binaries and fail to build. The only fix has been to reinstall, and whoopee, eclipse then frequently disassociates from my SVN system, forcing a project wide diff. I want to like eclipse, and have used it for years, but the frequent problems I've had with it in the last year have made me a firm netbeans user. Tried IntelliJ Idea recently - seems pretty nice.
Try calling setBackground on the applet outside the paint method. That might do it. Or if this is a JApplet instead of an AWT Applet, you usually need to override paintComponent(Graphics) rather than paint(Graphics). If that doesn't work or you want more control over the rendering you could paint the background manually in the paint/paintComponent method using the graphics object: page.setColor(Color.black); page.fillRect(0, 0, getWidth(), getHeight()); The graphics object is commonly named "g", not "page" by the way.
Jackson with resteasy/jersey makes rest+java a snap!
If you're painting a bunch of stuff in the paint() method, do what the above comment suggests. If, instead, the whole purpose of your paint() method is to change the background, then instead put setBackground (Color.black); in the constructor of your applet.
Well, hope doesn't help. Writing tests and fixing bugs does: https://github.com/ThreeTen/threeten
Well, be prepared for a statement from Oracle regarding JavaFX ... and reevaluate after that.
And its much faster than GSON.
I've been using Eclipse for 8 years on both Linux and Windows and I've never encountered anything like you guys are describing. Then again, I never install via distribution - I simply download, unzip, run - maybe this has to do something with it?
I've also never seen these problems, but I don't use EPF files, and use hg over svn. I'd point the OP to the EPF file as a source of problems. That said, presented with the same issue I would uninstall/reinstall eclipse, and try NetBeans. I'd also [check the md5](http://www.eclipse.org/modeling/downloads/verifyMD5.php) to verify it wasn't damaged when downloading. I'm also not a MAC person, but I'd look for security settings or software that would block eclipse access to files it needs.
It sounds like the EPS file you tried to use to change the colour scheme has caused you these problems. Reintall eclipse and point it to the same workspace and you should be good to go. If you want different themes use this http://www.eclipsecolorthemes.org/
...and make sure the component is opaque - setOpaque(true)
I used Eclipse on OS X for nine months and it was utter hell compared to the experience on Windows and Linux. SWT does *not* make good cross-platform applications, it makes good Windows applications, acceptable Linux applications, and unacceptable OS X applications.
&gt; I used Eclipse on OS X for nine months What version? When people say Eclipse they can be talking about a number of different versions/load outs. 
The latest version, from November 2010 onwards. There are some pretty interesting bugs.
Actually the EPF's were from that site! Still not sure if it was related in anyway to those because Eclipse was acting peculiar before I even added those. Anyways, have you tried them out yourself? I was really hoping it'd work out.
Actually I downloaded a zip from their site too. I doubt, though don't know, if the original file itself was corrupted. I'm thinking something altered it but am not sure. Thanks for your help.
Thanks for your perspective. I'll look into NetBeans, I've heard good things about it.
I just used the ones that come with the plugin. I've never tried adding any others. I don't use it any more because I find it has problems when I do syntax highlighting. 
While I'm sure the IBM page(s) linked are great, this is the bible on Java concurrency: http://www.amazon.com/Java-Concurrency-Practice-Brian-Goetz/dp/0321349601.
A *must* read! 
(The dot got caught up in the link. Fixed: [http://www.amazon.com/Java-Concurrency-Practice-Brian-Goetz/dp/0321349601](http://www.amazon.com/Java-Concurrency-Practice-Brian-Goetz/dp/0321349601)).
if it doesn't NEED to be in java, you could always use imagemagick (convert). 
Holy shit, sounds like some sort of common sense prevailed. I'm gobsmacked.
I would prefer to see an actual "lambda" keyword there.
It would fit with the typical verbosity of Java!
I like this, can't wait for Java 8!
That looks really interesting, I didn't know some of the stuff he was saying, like how the initializers are actually put into the default constructor instead of acting as separate. I'd definitely have to learn more about this when I get the time...
Me, too. Wouldn't have expected that...
If you can't wait, you can see if you like Scala. It is pretty much Java 12, without most of Java's design mistakes.
If I really wanted to work with functional languages then I would work with Scala, or Lisp for that matter... but this way, if they add it to Java, I can just use it sometimes when I'm bored and feel good about it. Kind of like using iterators instead of for :
Scala is actually more object-oriented than Java (everything is an object, no statics, ...). If you want to work with functional languages you could have a look at Haskell.
It would: "lambda (int x) =&gt; {}"
Sure, but there will be deep IDE support for Java 8 while Scala still sits on the back burner. I use several different languages, but nothing is supported like Java when you want to refactor and not introduce defects at the same time. That said, I wonder if lambda syntax will mesh nicely into IDEs? I suppose if it does for C#....
You should probably reevaluate Scala IDE support. IDEA has many features and Eclipse is pretty fast. Remember that Java's IDE support didn't just come out of nowhere. I don't believe Scala IDE's will suck as long as Java IDE's did when they were introduced. :-) Even when working on large sources like the library and compiler source tree, IDEA works remarkably well although it can be faster. From another POV, Java still lacks any decent REPL. So out-of-the-box support is much nicer in Scala than in Java as well as using it for scripting and system administration purposes.
I've used IDEA's scala support and it is nowhere near as complete. Scala's support doesn't even compete well against the Groovy plugin in my opinion. &gt; Remember that Java's IDE support didn't just come out of nowhere. I don't believe Scala IDE's will suck as long as Java IDE's did when they were introduced I think you are not considering the volume of Java users compared to Scala. Scala is lovely, but certainly not the de-facto replacement for Java and therefore only has a limited audience. There is a ton of money and time poured into Java-related IDE features so it's compatibility will always be far ahead of Scala (or jRuby, Groovy, etc). &gt; From another POV, Java still lacks any decent REPL. So out-of-the-box support is much nicer in Scala than in Java as well as using it for scripting and system administration purposes. I don't want to argue language features. Obviously each has it's strengths. The point I'm making is that Java will continue having superior IDE support due to money and user interest. Ironically Java's verbosity also helps IDE support. It is much easier to write refactoring algorithms (and compilers) when everything is spelled out clearly by the language. Unfortunately, languages that help the compiler tend to hinder the developer with white-noise.
I'd just ignore them personally. * Branding is at work here just as it is many other facets of our lives (ex. console battles). Branding battles are pointless. * Most of the folks aggressively attacking Java tend to be consultants or early adopters who like change for change's sake (or because it is profitable). They will turn on their favorite language of today at some point in the future because it isn't new enough. Nothing you say will change this. * Other groups don't like it because it doesn't fit their use case or style. Again, nothing you say will change that. * Really we should be glad they are trying to pick on Java as it means Java is still relevant.
I unsubscribed from that subreddit because I strongly disagree with virtually everything they say about what makes a good or bad language. You'll find that they're very impressed by fad languages. Here is why I use and prefer Java: * A huge standard library. This isn't unique only to Java, but it's something that I consider very important. * A large collection of free third party libraries. See above. * A very large community of developers. This is probably my most important reason for liking Java. I have much better luck at finding a solution to Java problems than problems in other languages. The PHP community is probably the one that comes next in terms of size and quality of answers, but obviously there are other problems with PHP. I find the Microsoft community to actually be rather pathetic. Probably because the community is a bit smaller in the first place, plus split up amongst all of the various .Net languages, and supported by a community of paid libraries and controls rather than the open source ones that are more common in Java. * Fairly simple language design. Java doesn't have a ton of keywords, and it's pretty straightforward to read Java code. I like it because it seems to be designed with the understanding that most programmers are not very good, so it gives them fewer chances to do things that would confuse another programmer looking at their code (like inappropriate operator overloading, for example). * Beautiful IDE. Eclipse is so much better than Visual Studio, although I suspect it's not the actual IDE so much as the language design. I'm working on a legacy C# application, and the error lists are frequently erroneous, for example. Whenever I try something new, I'm always impressed with how easy it is to do certain things. But generally I get very bogged down when the lines of code become too many, or I run into any sort of problem.
The thing people tend to get wrong isn't comparing java to ruby: It's comparing java to ruby on rails. Or not comparing Java to Python, but Java to Django. But there's one big thing they miss, even if they get the comparisons right: Java has a huge established base of code (in the forms of libraries), a reasonable system to download them and their dependencies (maven/ivy/gradle), and, most importantly in my eyes, there are AMAZING tools for developers. It's hard to find anything better than a basic text editor for your ruby or python projects, but because of Java's nature (and enterprise/money adoptance), there are some fantastic tools to help developers be productive. Only c# comes close. 
Java intentionally lacks a lot of language features, which makes it really easy to read other people's code. And some of the features it lacks are being added slowly over time (generics and lambda expressions being the main ones that come to mind)
Two lines to define a class (inherits from ActiveRecord::Base), plus three lines of configuration (database server, database name, password in a yml file), plus a schema gives me a fully interactive model with one of Ruby's most popular ORMs (ActiveRecord, outside of Rails.) The same thing in Java requires ~100 LoC of boiler plate per entity using JPA/Hibernate (a fairly common stack), generated with NetBeans, I presume Eclipse would generate something similar if that floats your boat. What's unfortunate is that you cant use notepad.exe (or equivalent) to write a system of any decenct complexity in Java (from scratch) without tearing your hair out in frustration. The language's type system, verbosity, and general bloat have basically brought about the "advanced tools" you speak of. You'd be surprised at how incredibly productive you can be, without a giant IDE, when the platform isn't getting in your way at every turn.
I would agree with you that PHP is probably next in terms of size... But in terms of answer quality? I learned to program with PHP (3.x/4.x) and I had a hell of a time finding answers to questions. Of course, since then, the rise of stackoverflow (et al.) has helped tremendously in getting a lot of high quality programming answers onto the web.
Yeah, programmers that write primarily in dyanmic languages definitely like to use obscure syntax for the sake of performance / saving a couple LoC. The Ruby "splat" operator (http://theplana.wordpress.com/2007/03/03/ruby-idioms-the-splat-operator/) had me confused for a long time -- and it's used *everywhere.*
That's great for basic stuff. But get to any system of reasonable complexity, and the auto-generated queries are NEVER good enough. I've been part of more than one project (3, to be exact) where the companies were migrating away from RoR and to Java. Yes, boilerplate code sucks -- but they allow you configuration and transparency that is often missing in other systems. And when you have a tool that will generate it for you, what's the real problem? And no, you can't write anything of decent complexity in notepad. Nor would I want to. This isn't 1985. This is two thousand and fucking eleven. I have a program that maintains a database of my music, instead of a flat file structure. I have a program that maintains a database of my movies, instead of a file structure. Why would I expect to program a reasonably complex system using nothing but notepad? I think people see notepad writing as a virtue, but I see it as a handicap. You need to learn to use your tools as well as you can -- trying to use notepad means you've simply given up. And if you use something like IntelliJ, a structural find/replace, refactoring a method's signature (and then changing all references to that method, with default entries if you're adding to the signature, and changing the interface if it's implementing an interface method), running unit tests from your IDE, debugging multi-system integration problems in your IDE, hooking your IDE up to a running production instance of your app and debugging a live request (or profiling for performance data). Letting your IDE tell you when you're breaking your own coding conventions. Letting your IDE commit code and manage change sets, letting your IDE validate an xml schema, letting your IDE generate a DTD from a collection of classes with xml annotations, etc. I think part of the difference is that I don't want to program in notepad. I don't see it as virtuous that you can or do. I'm building complex systems where people spend millions of dollars on them. I don't want some two-bit tool to do that. I think maybe the difference is that java, as a platform, has gotten to the point that it's not well suited to small apps. But again, complex machinery requires complex tools
Amen. Spent 5 years developing in notepad, spent 8 developing in VIM, and spent the last 2 developing in Netbeans. I'm *never* going back.
You are nearly ready for emacs. Keep going my son.
Boilerplate code does not allow for any form of configuration; it's *boilerplate*, it serves as a starting point, which you normally have to abandon because the defaults are unreasonable for any decent system. I was using Notepad.exe as an extremely virtuous example; but the tools we [dynamic programmers] use in reality are a deal more complex than notepad. There's the classics (Emacs, Vi/m, etc.), the new-age editors (TextMate, e), and full blown IDE's (Aptana's RadRails, JetBrains RubyMine, etc.) Furthermore I'm not implying that a 2-line class is going to be sufficient for a system of great complexity. BUT an ActiveRecord object, stock, makes a great DAO compared to what Java tools will produce for you. If you implement most of your model outside the DAO, you could very well get by with a pretty default ActiveRecord class. We can write sufficiently complex programs, because we have complex tools. Our complex tools do not help us WRITE CODE. Our complex tools come in the forms of pre-written libraries that look at the [small] codebase's we have written, and interpret them in fantastic ways. Instead of producing eons of boilerplate, and instead of autocompleting needlessly verbose variable names, we architect our systems to keep scope relatively small, and write our libraries to allow for incredible ease of use. Not to mention: ease of debugging? You can SSH *into* a Twisted process, and change variables/class definitions AT RUNTIME. Think about it: you can effectively inspect and even patch a single server, while it's running, without it ever being down, not even for a single request. Plus IDEs, in my opinion, will always be bloated because they *do too much.* An IDE is *not* a place to "commit changesets / validate XML." Those are the jobs of *well written, well respected* testing tools. From most text editors (TextMate et al.) you can bind macros to run the current file / current project / etc. through a given tool. This means that from within my EDITOR (not IDE), I can have Git commit my changes, or have an external library validate against an XML schema, or have my unit tests / integration tests / whatever be run. Just because we don't use bloated IDE's *doesn't mean* we don't have the tools to do our jobs. And my argument is that the LACK OF IDE's *forces us* to write more dev friendly tools, more dev friendly libraries, and most importantly *developer friendly languages.*
Dogfood. Your comment is DOGFOOD!
By quality, I mean that the people in the community actually write blog entries about problems they encounter. And they explain what the bug is, why it occurs and how it fix it. Plus the official site has those comments on the actual API itself which generally has helpful demo code, and people commenting on quirks and features of how it all works. The PHP language may be a big ol' mess, but it seems like the community is very good at compensating for that. I don't do a lot of complex PHP work, though. So maybe it's different when people are answering questions for things where the wrong solution will genuinely have serious consequences. Stack Overflow has definitely been a huge boon to the programming community in general.
Programming languages on reddit are essentially just memes. A lot of r/programming subscribers aren't software developers and just agree with whatever sounds the smartest / has the most up votes. They then churn that into other posts / up votes in related topics. The cycle just continues and more people believe it. This Java hate has been going on for years and if you ask me it's starting to die down from what it was like a few years ago. 
&gt;A lot of r/programming subscribers aren't software developers [Citation needed.]
I wouldn't say "dynamic" languages -- Haskell makes it very easy to define crazy operators, and it's a static language. But I get what you mean, and I definitely agree. The lack of operator overloading in Java is annoying sometimes but it does a pretty good job of cutting down on the all-important WTFs/min metric.
I skipped notepad entirely. I first went to Eclipse and hated it, because of its importing problems and overall system resource waste. Then I went to Netbeans. It feels a lot slimmer, but there was still the response issues from Eclipse, especially when opening a project, which it would load in the background and slow the application to a halt. After that it was fine, but I don't like being teased as if to say "Hey, input things! Nope, you actually can't do it!". Then I went to Vim and constructing my own ant buildfiles, and I don't see myself going back. Although, I might need to build my own exploration system, because Java projects tend to have an annoying habit of using the directory hierarchy to lay out the project abstraction (in my mind, filesystems should be used for human-readability, not machine, especially when one is dealing with files). The main problem I have with IDEs is that they tend to be unresponsive for a few operations (which annoys the hell out of me, because it's mostly side effects), they love to check my syntax while I'm flipping to and from the documentation (I don't need that until I try to compile. At least wait until I've ended the statement), and they all have crappy text editors. Jvi for Netbeans was awesome, but buggy with the window manager I used (fluxbox at the time; haven't tried with the new one).
Oh most definitely, one thing I love about the Rails community in general though is that [being hosted on] GitHub makes viewing changes to this framework incredibly trivial. It's really easy to file a bug, view discussion on a bug, view test cases for the patch solving the bug, and pulling in the patch is a Git command away. Obviously GitHub can pertain to any project in any language, but the Ruby / Rails community has exploded on it, and it's a great tool.
I remember when I first encountered Java. Back when it started 1995 - 1997. There were the exact same articles, "Is Java ready for primetime? Is Java dead? Is Java too complicated? blah, blah" On the surface, you had the same FUD, it is difficult to just look at a standalone 100 line Java application and make a determination of the Java based on that. It takes years to "get Java", to understand where it has a use.
"Only c# comes close." That says a lot. C# is most similar to Java in terms of the entire Java/.NET ecosystem. Python has a different use-case and architecture. 
He is basically saying that /programming aren't paid software developers. They are college students and just maybe developers that work for small companies at a startup. In that scenario, you could favor any language (probably the 'best' language or more expressive language) and bash Java. Why would a college student favor Java? Unless they are going right into industry after they graduate. But paid programmers tend to favor Java or C# for all of the reasons listed in the comments above. [Citation needed.] I wouldn't say there is a direct evidence to tamrix's comment but you can get a feel for the type of developer that frequents /programming. /programming is a discussion about new programming language technology not necessarily what is used everyday in industry.
I will have to do my research but the boilerplate code in Java is tied to the common idioms and expressions allowed by the language. And we are talking about a 10-20 percent increase in lines of code. I don't think it adds 100-200%. Ruby and Python (just slightly) have more expressive syntax. But, I feel that these languages are just different. They have a different ecosystem and different philosophy. Personally, I feel that non compiled, dynamic languages end up becoming more error prone with larger projects (with languages like Ruby and Python) because they aren't compiled and without defining the types explicitly in your code, I feel that code is more fragile. And since these languages tend to operate without being compiled. I don't even know if the entire codebase will run completely or work. Basically, they are different. Java adds more boilerplate code because of how classes operates and defining your types and all of that stuff associated with the language. But I feel that compile step and type checks at compile time give the developer a little bit more security. "I have a general idea on what my application will do because at least it compiled".
Event dispatch thread... Google that.
We will never go back to a non-IDE way of development. Not for a large company and codebase. It will never happen and there is no point in coding in VIM or Emacs or Notepad. 
1) Make a loop. 2) Add a thread sleep call of around 20 milliseconds inside the loop. 3) Call the method that moves your other rectangle. 4) Call repaint on the main panel. 5) ??? Profit. That's the basics.
One way is to extend the java.util.TimerTask class and implement run() to skip to the next question if they don't answer in time, and cancel() if they do. Use java.util.Timer for task management. Hope this helps.
Yes! It worked! Look out, people, this man clearly knows what he's doing.
ah. well it sounds like you might be a bit confused. There are ways to use java to manipulate a web page a browser can access, but if you are just learning java, it would probably be best to stick to just the command line. What you are describing would most easily be done in javascript inside the webpage itself, rather than using java. In pure java, via the command line, you could do something like this: import java.io.* ; class Tut1 { public static void main(String args[]) { InputStreamReader istream = new InputStreamReader(System.in) ; BufferedReader bufRead = new BufferedReader(istream) ; System.out.println("Welcome To My First Java Program"); try { System.out.println("Please Enter In Your First Name: "); String firstName = bufRead.readLine(); System.out.println("Please Enter In The Year You Were Born: "); String bornYear = bufRead.readLine(); System.out.println("Please Enter In The Current Year: "); String thisYear = bufRead.readLine(); int bYear = Integer.parseInt(bornYear); int tYear = Integer.parseInt(thisYear); int age = tYear – bYear ; System.out.println("Hello " + firstName + ". You are " + age + " years old"); } catch (IOException err) { System.out.println("Error reading line"); } catch(NumberFormatException err) { System.out.println("Error Converting Number"); } } } This has nothing to do with the web browser, however. You can do something using JSP, but that is a lot to deal with just starting out.
You need to see what's happening under the hood. Take Firefox and install [this plugin](https://addons.mozilla.org/en-US/firefox/addon/live-http-headers/). Then go to some web page, for example www.about.com * Open the LiveHTTP Headers window. * Type in some text into the search field * Press submit * Go back to the LiveHTTP window and see what happened You should scroll to the top and see that it sends a GET request to the server. It also sends stuff like Accept-Content, Keep-Alive etc. These are all information to the server. You can see that the first line is &gt; GET /?q=aaa HTTP/1.1 OK, so in short, the name of the textfield is "q" and the content you sent is "aaa". Similarly, you would submit content on your website. There are typically GET and POST requests, the POST works a bit different, you should read up on it. So the answer to your question would be: * create an URLConnection to www.yourwebsite.com port 80 * get its InputStream * write into the input stream stuff like GET /website.html?textfield=value HTTP/1.1 * flush the stream * if you want to see the response then read from the OutputStream You can also do all the above on a higher level with [HttpClient](http://hc.apache.org/httpcomponents-client-ga/). 
That I;d be willing to accept, however based on his comment, it seems more like he means " a lot of of people" don't even program/aren't learning to program.
Syntactically you're guaranteed for the program to be correct, or the runtime wouldn't even load it. Logic wise, that's what your tests are for. As far as type safety, it's surprisingly unnecessary. Basically you just check that an object implements a given interface (for instance, a method that operates on strings can take in any value, even Integers, Doubles, etc. so long as they have a "toString()" method.) As far as I know, there's no true way to achieve this in a language such as Java, because I don't think you can check for the existence of methods on an object. (Might be possible for reflection; but the dynamic features of a static language are going to be a lot slower.)
I'm about 50% sure that this post is actually about JavaScript.
See I still don't think my point is getting across. We have incredibly sophisticated development environments. Just because they're not an integrated product doesn't make them any less capable or powerful. In contrast it makes them far more modular than any "plugin" system would be capable of achieving. Vim/Emacs/TextMate/etc. are just the editor that lies at the heart of our DE's, and they're [arguably] more capable than any editor I've seen in a commercial-grade IDE. They're more capable because they have to be. They're meant to be sold as a standalone product, so they have to be truly fantastic editors. IDE's are meant to be a superior set of tools; which lends itself to creating a great bundle of tools, but not necessarily a bundle of great tools.
"As far as type safety, it's surprisingly unnecessary. Basically you just check that an object implements a given interface (for instance, a method that operates on strings can take in any value, even Integers, Doubles, etc. so long as they have a "toString()" method.)" Yea, at compile time / development time, you can do your compile step and make sure that some aspects of your program are correct. And that is why people complain about generics. It isn't a complete runtime solution. It isn't really need but at compile time, it adds a additional (small layer) of security that a particular collection, for example, will only accept those particular sub types. ... And from a readable standpoint, I can look at the types that are defined in the code and get a feel for which operations are available. With python/ruby, I may never truly know. Maybe that is why these languages tend to 'rely' on unit testing or maybe there are other techniques used ensure that a program will run. 
That was my first thought as well. sram1337 - Java and JavaScript are completely different languages. Google for both and check that you are talking about the right one. Assuming you mean JavaScript then you want [/r/javascript](/r/javascript) but honestly you should probably start with a basic JavaScript tutorial. What you are describing sounds very possible and should be something you can figure out in an hour or two with a beginners tutorial - assuming you have some previous programming experience anyway.
I bumped into it a few months ago and think it is fantastic. Didn't want you to think you are alone here hehe 
"The main problem I have with IDEs is that they tend to be unresponsive" Those are implementation details, due to buggy systems. I still like the ability to manage my projects through the standard GUI widgets, packages, Java classes, integrate with my source control system or bug system. I like the syntax highlighting and code complete features. With Eclipse, I like that it is cross platform, I can run Eclipse on Linux or Windows or Mac and have the same exact interface and plugins. Emacs? Vim? Maybe, we can do these things with some complex configuration or setup.
You can actually use this in Java class libraries if you have struts on your server.
Should be fairly easy, I don't know why this was downvoted. First off you typically wouldn't use JAVA. If you have a webhost it is likely you have PHP installed on it (assuming it's a Linux host). Anyways your task can be accomplished with some simple [HTML forms](http://www.tizag.com/phpT/forms.php), a little bit of PHP (very easy) and [POST/GET statements](http://www.tizag.com/phpT/postget.php). That should be relatively easy. On a scale of 1 to 5 I would say it's a 1 and could definitely figured out with little to no programming experience.
Java is not dead because it has a shitton of users, around 2 million programmers around the world I think. By some estimates it is *the* most popular language in the world. Now, about its future, I'm not sure. The thing is out of those 2 million programmers maybe 1 million is just typical coders that aren't interested in programming, just maintaining code for 8 hours and then go on with their lives not thinking about computers. So there's a huuge amount of code already written and a lot of it is being made right now, but it's becoming less and less inovative. By that I mean a huge part of the existing code is written in Java 1.4 with no plans to upgrade it. I've read an article saying that Java has become the new COBOL, so it'll be around for the next 50 years for sure, it just won't be very exciting.
Jackson's ObjectMapper is great for this. It has methods that allow you to serialize an object to a json string or read a string/file/stream into an object. The auto serialize/deserialize functionality is a bit slower than using the streaming tokenizer approach, but its also a LOT simpler if you're going to have to serialize/deserialize a lot of different types of objects.
Look, just quit it. You're talking too much about editors and IDEs and too little about programming, so I'm guessing you're still in high-school, or haven't worked with a 5 million-code application which *can't* be managed by any of the toys you've mentioned above. If you do get to work on one such project and try any of that Vim bullshit then you'll soon be looking for another job. About Ruby on Rails - I've just recently finished working on a project where we migrated a RoR application to Java because the RoR application was just too hard to maintain. The application also does some heavy calculating and the Java app now does its job in ~30 seconds instead of the 2 minutes it took under Ruby. I haven't researched why but I'm guessing it's because one is a scripted language and the other is JIT-compiled bytecode running in server mode. RoR IMHO is nice for small websites and stuff to show your friends, but not for serious business.
I tend to work with many languages all at once (Eclipse Java, Visual Studio C++, Delphi) and what's great is that all the IDEs are more-or-less the same, so I don't need to waste time adjusting to them. I can literally work with all those 3 languages in the same 8-hour day without having to take 5 minutes to adjust. If I were to switch from Vim to Emacs... well, I guess I'd need to reshuffle the shortcuts in my head. And heaven forbid I move to another computer that doesn't have *my preferences* installed.
You're happy because you can report bugs that occur in Rails? WTF I'm happy because Java has no bugs so I don't need to report anything.
Basically people that hate Java are the people that haven't yet worked in the industry or have very little experience. I may be wrong, but I think programmers stop giving a **** after 5 years of professional experience. A language is just a tool. If my boss told me to write in COBOL I would do it. I may hate it, but if I'm compensated by $$$ for my suffering then I won't care.
Hello brother!
Give me Google Guava over Apache commons-collections any day
Processing (www.processing.org) makes this realy easy
You seem to miss the point actually. No one argues that Java isn't one of the most popular languages around. People mostly complain that Java is pretty much outdated from every other language's POV. And the fact that those type of "I want to earn money, which language do I need to learn without having to spend any effort on it?" developers all go to Java, doesn't really help overall software quality in Java. While it is possible to write bad code in any language, the percentage of shitty code is pretty high in Java because it gets taught to everyone not giving a sh*t. I don't think you can do much hand-waving there ... 
That isn't the point. That is where I argue, if you can use Java to write EBay, and Android apps, and Gmail, and GWT and Lucene and Hadoop and Scala and the Java compiler. There is a reason for the popularity. "I want to earn money, which language do I need to learn without having to spend any effort on it?"" One could argue that top CIOs and CTOs and people that decide which platform their systems should run on have chosen Java. What is there reason for doing so? ... You seem like the typical /programming responder. You mention the 'language' code but you don't mention the Java platform(s). Maybe developers are writing a lot of crap code out there but the Java platform is able to accomplish some task despite of that. Who is to say that Python or Ruby will satisfy a similar use-case? There are companies that have thousands of Java developers and projects that requires thousands of hours to complete and has been in production for a decade or more. Will a comparable system work if that system was written and runs on a Python or Ruby platform? Where has it been done? What companies? (Just a note: my comment include a list of companies that have use J2EE for their applications and example libraries to make my small point. Do you have a case where a large company with many developers has used X language in a similar situation that they would have used Java technology... besides C#)?
Thanks for the info. Where do you think that Ruby and Rails went wrong? I have worked with a lot of open languages, Ruby, Python, Haskell, Scala, Clojure PHP, blah, blah... I feel they had some syntactical sugar or some expressiveness or something makes you a little bit more productive. But...you may be able to work with higher order functions, but you lose something else that you have with Java. Some parts of the open source languages are incomplete and less mature. I might be able to do lambda expressions easily with Ruby but the web application platform isn't robust enough, I can't make the database connectivity calls that I need. And maybe it doesn't scale without serious tweaks to the platform. Not even to mention, Ruby/Python, etc, I still question that these 'dynamic' languages are somehow superior to Java. I like compile time checks. I like explicitly defining my types in the code. I seem to write more error prone code in the dynamic languages. Sure, for a simple 1000 lines app, I am fine. But I can't imagine writing millions of lines and expecting all of that code to run properly without being compiled. 
Use a ScheduledExecutorService[1] (you can get one from the Executors[2] class) to execute a Runnable, then, if the user clicks the button, cancel the returned ScheduledFuture object. 1. http://download.oracle.com/javase/1,5.0/docs/api/java/util/concurrent/ScheduledExecutorService.html 2. http://download.oracle.com/javase/1.5.0/docs/api/java/util/concurrent/Executors.html
. 
I disagree, have a loop which 'ticks' and draws the rectangle at whatever the current location is. For future proofing use 'double buffering' (google that) and then update the rectangle location from the event thread. 
A loop that... ticks? If your loop that... "ticks"... is drawing the rectangle, you have poor encapsulation and a bad design. The timer loop shouldn't know about how to draw the rectangle object, and the rectangle object shouldn't know about the timer loop. Eventually thought like this leads to a god object anti-pattern. I don't even think you actually read the question actually. We are dealing with two objects, one the user moves, the other moves continuously. The question centers around the one that moves continuously... you DO NOT move the continuously moving one from the event thread. That is misuse and improper use of it. Why would a continuously moving object rely upon the event thread anyways? And here we are to the source of your problem. You are misusing the threads. You DO NOT paint or draw outside the event dispatching thread. You MUST paint and draw inside it. A repaint call is automatically dispatched on the event dispatching thread. If you are drawing or painting inside the main thread on your program, you are doing it wrong and is one of the most common way to cause graphical bugs. Repaint in swing automatically employs double buffering on default. And double buffering doesn't "future proof", it alleviates graphical stuttering. Really, I'm not even sure what you're disagreeing with. In general, besides the big flaws I just pointed out, is similar to what I just said. So what really do you have a problem with in my answer?
&gt; Where do you think that Ruby and Rails went wrong? I agree with what you said about type checking. That's one of the issues of scripting languages. Here's an example: $res = fetchElements($person, $company, $from, $to); What will I get here as a result? Even if I did use an IDE I couldn't just hover the mouse over fetchElements to see what the result is, because the language itself hasn't got this built-in. It *cannot* know what the result type is. Let's say that I *know* that it will return elements of the Result entity. So obviously I'd get some DTOs. Which ones? ResultDTO? ResultShortenedForListDTO? ResultForSomeOtherResultDTO? In any larger application there's going to be some optimization of the stuff we get from the database, so we'll have several DTOs for the same entity. Without strict typing there's no way to even *know* what the result will be, instead I'd have to check some textfile or some API document. There are other issues caused by not having strict types (refactoring is probably the most serious one) but let's not get bogged down here. What annoyed me the most is that there doesn't seem to be a standardized directory structure in RoR. Sure, you run those few commands and they create the MVC structure for you (btw. what if you don't want to use MVC for your application?) but then the smartypants developers change the whole thing, added some pure Ruby stuff under the "bin" directory, in the "lib" directory we don't have libraries but some other application which seems to act independently of the rest of the website... The code written is just awful, multiple classes in the same file, variables written like this_is_a_variable etc. etc. Again, thanks to not having types, I had this: * at one point, :ct was declared * in the constructor ct = "0" (so I think, oh, it's a string!) * later in the code: ct = num1 + num2 (hmmm... wtf?) * in another class that uses this class, I have if (ct) ... (so it's a boolean?) Later it turns out it was a number and not just any number, but it had to be a double. Why do I know this? Because the client told us. Nothing in the code indicated that this was a double (oh and there were 0 lines of comments, but this is nothing unusual). Nope, Ruby is just not a language I would recommend to my friends.
This is just my opinion but I think CTOs aren't deciding upon a language solely based on how good it is, but more so based on how many people in the company know that language, and if there aren't enough, then which people would be the cheapest/fastest to get in order to get the project started. Since Java is known by a lot more people than for example Ruby, it is easier/cheaper to find a Java programmer than a Ruby programmer. Only in companies with enough money to throw around you have CTOs with free hands to experiment with languages. Every hour they spend finding the perfect language is an hour lost for the company. I mean, you can view it as an investment, too. But the CTO would have to have strong arguments to convince the management that they need to make that investment, especially since Java and .NET is what's popular nowadays.
Your response is exactly why I said "you are missing the point". You argue about popularity where actually no one disagrees with you. But just because something is popular it is not necessarily the best thing out there. And no, Scala isn't written in Java.
I was leaning to, why do you think it is popular. But on the language and platform. It is mature and proven. It has had billions of dollar in investment in terms of the people that worked on the Hotspot virtual machine and those other virtual machines. Look at the JIT compilation with Hotspot adds much improved runtime performance. Other virtual machine languages and interpreters don't have this. Java is truly a general purpose language. The Java platform and libraries have built-in support for cross platform GUI development (Swing, Swing Applets), J2EE for Enterprise Web Application development, standard programming environment. Other open languages tend to treat things like GUI development as a external third party libraries. "And no, Scala isn't written in Java." What is Scala written in? Do tell. Some is written in Scala and some pure Java. See: http://lampsvn.epfl.ch/svn-repos/scala/scala/trunk/src/library/scala/runtime/ Parts of Scala are written in pure Java language and 100% of Java Scala gets compiled to Java bytecode and runs on the Java virtual machine.
The funny thing, Ruby may actually die. Not like the 'Java Death'. Ruby is usage is seriously dropping. Do you have any more information the issues with duck typing? I guess I could google. On other languages... I don't see the point in using Ruby anymore. I like Python for simple scripts or small apps. Haskell has some interesting language features. Scala too has some interesting language features and runs on the JVM for learning. 
And the meme on the Internet to fix some of Ruby's (and Python's) issues are "Write Unit Tests". Good developers write unit tests. I all for writing unit tests but I shouldn't have to in order to make sure that my application code will work with a large code base ... or 5-10 years into the future. 
Oh god. Stop switching topics. I you mean Java, say Java, if you mean the VM, say JVM, if you mean the platform, say Java platform. Did I say anything about the JVM? No. Did I say anything about Java not being a general pupose language? No. Could you stop making up things just to "debunk" them? You know, other people aren't stupid. &gt; What is Scala written in? Do tell. Some is written in Scala and some pure Java. Oh c'mon. Are you imitating FoxNews?
"Oh god. Stop switching topics. " -- You are the one bringing up Fox News. That is way off topic. I am not switching topics. The Java language and Java platform are tied together. Developed by the same companies, sitting in the same code repository. Java is a platform composed of the Java programming language, the Java virtual machine, J2EE. Why don't you mention the Java programming language? "What is Scala written in? Do tell. Some is written in Scala and some pure Java." I just posted some of the Scala source. You said it wasn't written in the Java programming language. It is written with Java code. http://lampsvn.epfl.ch/svn-repos/scala/scala/trunk/src/library/scala/runtime/
I use Perl for all my scripting needs, like when I need to process tonnes of textfiles or do some shell scripting. Sometimes Bash is nice as well.
Although replying to you is a waste of time ... First: &gt; [...] you can use Java to write [...] apps, and Gmail, and GWT and Lucene and Hadoop and Scala and the Java compiler. Without even considering the fact that this argument doesn't add any value to your actual point, it is pretty wrong. Throwing Scala in there makes it look like as if it was actually written in Java, which is ... misleading and false. &gt; What is Scala written in? Do tell. Some is written in Scala and some pure Java. Ah right, so now it is only in "some pure Java"? &gt; I just posted some of the Scala source. You said it wasn't written in the Java programming language. It is written with Java code. And now you get completely misleading and dishonest. No, actually Scala is written in Oz and runs on the Mozart programming system platform. Do you want proof? https://github.com/sjrd/ozma/tree/master/src/javalib/java/lang Oh no! Actually Scala is written in C and C++! Have a look! https://github.com/greedy/scala-llvm/tree/llvm/src/llvmrt There are many languages running on the JVM, some reusing Java standard libraries, some shipping their own classes based on the Java ones, some with a completely independent library. So no, there is no need to conflate multiple technologies into one word. Actually, this is exactly what I already said before and you're failure doing that is the reason we can't have a meaningful discussion here. Actually what was your point about "Java is not dead" again? Oh right. There wasn't any.
"But just because something is popular it is not necessarily the best thing out there." My point is to find out what people thought about criticisms to the Java language and platform. Who is criticizing the language and why? And what is right about the Java platform. I got many interesting responses, so I have accomplished my goal. So, what is your point? That Java isn't the best thing out there? No one in these set of posts ever claimed that it was. Plus, you are doing a bad job at making your case. What is the best thing out there and why? And what is your point? So, you believe that the Scala language will trump the Java programming language for the JVM. It is possible. But Oracle is invested in the Java language and JVM, so I don't know if they will be able to sway or take control of Scala. So, it is probably in their interest to maintain Java on the JVM.
Also, what is your point in trying to disconnect Scala from the Java language and Java runtime? There are ports for the Scala language to run with LLVM but it was originally designed to work with pre-existing Java libraries. Hence it was written in some Java code and written to run on the Java virtual machine. "And no, Scala isn't written in Java." -- your quote. Some of the Scala runtime code is written in Java, compiles through ant and javac to Java bytecode. The creators want a way to use their language to interoperate with preexisting Java code. It wasn't Scala on Python or Scala on Ruby. The Scala language was intentionally designed to work with Java libraries that are out there.
My point is that the claim "Scala is written in Java" is bogus and misleading, because it is not true for more than 99.9% of the stuff Scala consists of. You can actually find more XML code than Java sources in the tree, so it would make even more sense to claim "Scala is written in XML". If you had a look at those files, you would have seen that they are in the scala.runtime folder ... which guess what ... connects Scala stuff to the underlying runtime, in this case to the Java runtime. If you target a different runtime like .NET, Mozart/Oz, JavaScript/JRibble or LLVM you would have source files in a different language in there, just like I already demonstrated. So, really, what you say doesn't make much sense and doesn't add anything to the debate about "is Java dead?".
Also, how many Scala libraries (first party and third party) are going to rely on pure Java libraries? (like the scala swing library and Lift) Why did they choose Java as one their host platforms? Why does Scala compile to Java bytecode and not something else? Scala was originally meant to interoperate with Java, work with Java, compile to the Java bytecode. Ironically, there is Java source code as part of the Scala runtime source. ... There is more Java language working with Scala than say Smalltalk source. ... The fact that the Java interoperates with and is a targeted Platform for Kotlin, Scala, JRuby, Jython, Clojure and other mature languages adds to the argument that the Java platform and Java language have viability. ... I argue that there more more JVM languages than languages running on top of Squeak Smalltalk. Why did they choose Java and not CRuby as their host environment? It is possible that the engineering approachs surrounding Java made all of that possible. We keep bringing up Java technology and its viability. Besides Scala or .NET, what other programming language technology should has most of or a large majority of the features that the Java platform has given us. You develop with Scala, are you using the LLVM version or are you running Scala libraries on the JVM?
If you could _finally_ please tell me, what "Java the language" has to do with "there are other languages generating JVM bytecode".
What does the Java virtual machine have to do with Java the language both originally created by Sun? Now, sitting right next to each other in the Java Development Kit source? How much of that JVM language rely on the Java libraries? And, not all popular JVM languages are written in their host languages. Clojure, ABCL have heavy pure Java counterparts. 
Accessing google images programmatically is pretty tricky/unsupported. It's a project in itself. I'd recommend using the flickr api instead (here: http://www.flickr.com/services/api/). There's already a java wrapper available on github: https://github.com/jeremybrooks/jinx
To do this you would need to download the content from the google search and download + parse the content (since the API at http://code.google.com/apis/imagesearch/ is deprecated). Once you've done that you will need to consider that the URL takes you to Google's version of the page, so more parsing to get the actual image. After that, you will download the content of the image and display it. Some things you will be interested in: * http://download.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html * http://download.oracle.com/javase/6/docs/api/java/net/URL.html#openStream() * http://download.oracle.com/javase/6/docs/api/javax/imageio/ImageIO.html#read(java.io.InputStream) *http://download.oracle.com/javase/6/docs/api/java/awt/Graphics.html#drawImage(java.awt.Image, int, int, java.awt.Color, java.awt.image.ImageObserver) Good luck and have fun! Also as a side note, you may want to simplify it and just save images to a resources path and display those. Then you don't have to code to consider scaling of the images, worry about potential wrong image being returned, etc.
what if I set my locale to pen island?
I was referring to Java. Its the only programming language I know. I don't really know the advantages of JavaScript or Java or PHP, sorry, I just had a problem and was wondering how/if I could do it with what I already know. It's not my website that I'm trying to access.
Here are flag icons: http://www.famfamfam.com/lab/icons/flags/ They are organized with the name corresponding to the 2-letter code (which I think matches locale).
Random images from Google in JList (quite old article) http://www.jroller.com/swinguistuff/entry/google_renderer 
I don't know anything about the headfirst book, but any simply text editor will work for starters. Don't use notepad, instead use something like textpad or notepad++. It is a good idea to stay away from complex IDEs while you develop your initial skills. Concentrate on the core essentials doing the tasks set up in the book; feel free to mix and match the previous material in your own little side projects as you go, its good practice. A good book will progress in complexity utilizing previous lessons in this same manner. Once you have the basics, read lots of code, study the APIs and find projects to work on that require deeper, more complex solutions than the simple lessons from the book. With these projects, like all programming, remember to divide and conquer; a large project should consist of smaller components that fit together but can be individually written and tested. Have fun, and remember to write lots of comments -it makes the code easier to understand when you come back to it.
Are you new to programming or just new to Java? If you're new to programming, check out Head First: Design Patterns as well. Java is a very Object Oriented language. So learning some OO techniques will do you good. Also, Eclipse works on Windows, Linux and Mac as well. Once you're comfy with Java, learn up Ant as well. Ant is a build tool (something like make in C++).
&gt; What does the Java virtual machine have to do with Java the language both originally created by Sun? You should probably read the introduction paragraph of the JVM language specification. That should reduce your confusion. &gt; How much of that JVM language rely on the Java libraries? Try "java -verbose". &gt; And, not all popular JVM languages are written in their host languages. Clojure, ABCL have heavy pure Java counterparts. That's actually what I have already written earlier.
I would convert each of the times into seconds, find the difference, then use int division (truncated division) to convert back to days, hours, etc., eg days = seconds/secondsPerDay, seconds = seconds - days*secondsPerDay, hours = seconds/secondsPerHour, etc.
Alas, Java doesn't come with a date/time chooser UI out of the box; [JCalendar](http://www.toedter.com/en/jcalendar/) does a pretty good job; if you want to read dates from the command line, then check out [DateFormat.parse(String)](http://download.oracle.com/javase/6/docs/api/java/text/DateFormat.html#parse%28java.lang.String%29). Once, you have the two Date objects, subtract the [getTime()](http://download.oracle.com/javase/1.4.2/docs/api/java/util/Date.html#getTime%28%29) from one date from the other, then use the division (/) and remainder (%) operators to rationalize the difference into days, hours, minutes, seconds, starting from the largest uint down to the smallest. 
I suggest using Eclipse as your compiler. Notepad++ is a excellent Windows text editor and jEdit is a great Mac editor. I also suggest you use www.codingbat.com for exercises as you learn OOP. Practice is by far the most important aspect of learning Java, in my opinion.
[Thinking In Java](http://mindview.net/Books/TIJ/) - Download it free from there See hash_set's post for editors. Have fun!
That was cute. Unfortunately it doesn't work that way, most often the customer doesn't know which database he will use by the end of the project, so you need to be prepared "for all", during support they may also change their mind a couple of times, *and*, you can't expect everyone in the company to know every SQL dialect. I also sometimes yearn for the days when I wrote pure SQL... and then I remember that I did, and how horribly ugly and broken that was.
Without watching the whole talk I see the following problems with the proper application of her comparison: Any cake mix can be modified to a degree where it is perfectly fitted to your specific taste. As with hibernate / other ORM-tools, this of course is not the case out of the box and you won't be able to do it without knowing how to bake first. When in most cases you just want a generic chocolate cake using a cake mix will result in a decent cake that won't be disgusting or poisonous. If that happened with a cake mix, I'd probably blame the person baking it for these results. On another note: I often hear of these pages-long SQL-Queries generated by ORM-frameworks. Is it always the case that such queries are inefficient or overly complex? Any thoughts and/or links on that?
Well, she was pretty convincing about the cakes… 
There's [Excelsior JET](http://www.excelsior-usa.com/jet.html) but it's kinda pricy. They have a bunch of discount programs but I don't know if that'll help you here. I've never used this myself as my use of Java is solely on the server or terminal side but I remember hearing about that from a friend.
That compiles it to binary, and eliminates the need for JRE altogether, pretty neat. I've looked it over, but decided it's not worth the price-tag for me. Thanks for the suggestion, though. I appreciate it :)
You can just place the JRE files on your CDROM, then launch your application with a .bat that uses all relative paths. Looks a bit shitty and may take a few seconds to launch, but works. In the bat you can also probably somehow figure out if you're on a 64 bit system.
JRE is "self sufficient" meaning that you can just copy the JRE directory anywhere and it'll work. If your user doesn't have JRE installed then you can just include a zip file with the JRE directory zipped, and then extract it somewhere. If you support windows, linux and mac then you should make 3 zip files and then some script should decide which one needs to be extracted. I usually create a run.bat and a run.sh to support all 3 OS's. And then there are all those nice installers like Install4J that do all the work for you.
Don't Macs come with JRE preinstalled?
At least one of our clients didn't have JRE on his Mac, so you can't take the risk.
Thanks, I'll definitely keep it in mind :) How did you deal with 32bit and 64bit operating systems?
Here are a few Java resources that might interest you: * [Java sun tutorial](http://download.oracle.com/javase/tutorial/index.html) * [Code ranch java forums](http://www.coderanch.com/forums) * [KodeJava Java examples](http://www.kodejava.org/) * [Java practices](http://www.javapractices.com/home/HomeAction.do) * [Another Java tutorial and many code examples](http://www.java2s.com/Tutorial/Java/CatalogJava.htm) * [IBM developerworks New to Java programming](http://www.ibm.com/developerworks/java/newto/) Regarding books, you don't actually need a book to start out with Java because there are tons of resources for free on the web but you might find it easier to have it all in one book. Head First series is a good/bad book series in a sense that some find it very good and some (like in my case) think it's bad and I usually stay away from them. It all depends on your learning style. Also, exercises are extremely important **don't** skip them. If you have problems with any search the web or go to freenode @ ##java or come here and ask. And BTW [this](http://download.oracle.com/javase/7/docs/api/) should be on your bookmark list. 
They come with a JRE. 10.6 is the exception as when you click a jar file, I believe you get prompted with a dialog offering to install it.
&gt; Java is a very Object Oriented language. What does *very* mean ?
Alton Brown is the host of "Good Eats", a show where he looks at the science of cooking and how to improve techniques to get better textures and flavors. He has actually been known to advocate for boxed cake mixes, saying that some of the ingredients in them make them superior, texture-wise, to ordinary flour. If you use special cake flours, you may be able to beat them, but you won't get a very good cake from ordinary All-Purpose flour, claims Alton Brown. And in researching this, I found [a cooking forum post](http://forums.finecooking.com/node/63945) where one of the commenters says professional chefs often *do* use boxed mixes for plain yellow cake, and add extra flavorings to them for precisely this reason. (NB: I have no personal knowledge in this area; this is just what one post in one forum says.) Now, on to this particular talk. She does have a point, that Hibernate (and related ORM frameworks) produce darn ugly SQL. But she misses out on the fact that nearly everything designed for a generic purpose does the exact same sort of stuff. No mention is made of UI frameworks like JSF, GWT, etc, which do the same sort of thing for the UI. Ever look at the HTML that JSF generates? How about the HTML/Javascript out of a GWT application? They're all kind of ugly, and inefficient. If you need your app to *fly*, these sorts of things aren't for you. I don't think anybody ever said Hibernate is always best. Or JSF is always best. Or Spring is always best. Or... For the rest of us, though... I remember the old days of writing DAOs. Not particularly fondly either. She may have a point that boxed mixes remove some of the "fun" from baking, but being able to avoid writing DAOs makes the code more fun for me. And it works. I don't need to worry about debugging SQL statements. Though of course I do occasionally run into problems with the annotations and that does require trying to figure out Hibernate's SQL... 
Yeah, you're pretty much forced to rely on runtime type information, which is surprisingly not that difficult. (Don't have the link to it, but there's a nice paper on type feedback for SELF done by a Googler that collects type information at runtime, and uses it to optimize the program for future runs.) If you don't have strict variable naming conventions, and if you don't hold yourself to those conventions, then yeah, things can get a bit hairy. But in a sufficiently complex project (e.g: anything that you'd classify as a system, not a script), you'd be crazy to not adhere to some stricter standards. In essence, Ruby/Python are as verbose as you choose to make them. Whereas (some) static languages are just verbose.
Yes, because jumping to a different stack on a different language is always the best option for every company. You act as though you didn't have a plethora of options at your disposal: First off, you could've jumped to another more performant Ruby stack. YARV for 1.9.2 is pretty nice, there's also JRuby if you wanted to integrate with any other JVM portions of your stack. You could've gone the way of the Twitter, and implemented your heavy computations in another language, and talk to it via a service from RoR. (There are lot's of RoR libraries to spawn workers in the background to talk to other services on the same box, or cross-network.) If you feel that RoR was at fault for your code being unmaintainable you could have switched to any other number of web frameworks; perhaps one that doesn't enforce so much structure (e.g: Padrino, Sinatra), or gone to another popular full-stack framework (e.g: Merb, which is slowly being merged into Rails at this point.) At the end of the day, a Java programmer (or more likely: team of Java programmers) is not going to be able to write an efficient, well-written application in a different language with a framework that embraces that language's more advanced dynamic features to the fullest. I, for example, wouldn't dream of writing an application in C++ with any sort of claim that it'll be extendable or maintainable. -- Also, I'm most assuredly not in high school, I do have a job writing JavaScript day in, and day out, to produce business-oriented mobile applications, with a splash of Ruby to automate some build tasks, and Ruby for some server-side prototypes, with Java for the server-side. Guess what editor I use? TextMate or E depending on which machine I'm sitting at, and I'm perfectly happy with either program. I do have to drop out to Eclipse for most of my Java work, and NetBeans when I have to generate some DAOs. -- Although LoC is a terrible metric of system complexity, allow me to put things in perspective for you, the Linux kernel has roughly 6.5 million LoC. Given the philosophy/pseudo-religion of the core maintainers, they're most assuredly using Emacs or similar. Last I checked Linus uses a light-weight fork of Emacs. So yes, maintaining a system of reasonable complexity is most definitely possible given an editor and a fractured toolset.
This is one of the most common pitfalls in all of Java and maybe programming in general. You cannot simply divide by the number of seconds in a day, because that value is not constant in many time zones (e.g., the two days each year when you pass in and out of daylight savings time). I advise using joda time (http://joda-time.sourceforge.net/). See in particular Days.daysBetween, etc.
Try heroku for java http://www.heroku.com/java They support virtually everything Servlets, JSP, JDBC, taglibs, JSF, Play ... 
She is not really presenting an alternative other than writing your own "mini" framework for each new project that you work on. Why would you want to re-solve this. The engineering community is happy to use cake-mix solutions like suspension bridges. I don't feel the analogy holds.
I showed my friend this, and he replied quite simply; Notepad vs Dreamweaver.
I'm not a big fan of the SQL that Hibernate produces. But I don't use Hibernate to write SQL for me, and I doubt anyone else does either. Hibernate addresses the ORM problem, which is mapping relational data to java objects. Even if we could solve that problem "better" by doing it from scratch on each project, that would take a colossal investment of time -- per project! In the pre-hibernate days we did do this from scratch and it took a lot of effort.
Heroku now supports the new Play! framework as well, I've been keen to try this haven't got around to it yet. Also google's app engine is a good free host but you may have to modify our application so that it is supported.
Rimuhosting is pretty solid.
While I haven't used it myself, you can use a framework like [IBatis](http://ibatis.apache.org/) which lets you write your own SQL. She is right. In our desperation to avoid the cardinal sin of having to write some SQL, we use something like Hibernate which looks fine if you are doing really simple stuff, but gets really nasty as soon as you try to do anything complicated. It doesn't take long before it would have been much easier to do things in SQL in the first place.
If your SQL was horribly ugly and broken then I hate to break it to you, but the problem wasn't SQL, it was you. It is possible to write clean easy-to-read well-encapsulated SQL. Writing database-independent code is a myth, with or without Hibernate, unless you are doing extremely simple stuff. Oh, and while I'm at it: &gt; That was cute. Would you have responded with that if the talk had been given by a guy? I doubt it. Sexism is alive and well among programmers, it seems :-/ *edit:* Seems that people disagree with what I've said, but would rather hide behind a downvote than argue their case. Predictable I suppose.
Yes, if Dreamweaver ended up being much more difficult to use than Notepad for anything other than trivial use-cases.
&gt; Now, on to this particular talk. She does have a point, that Hibernate (and related ORM frameworks) produce darn ugly SQL. But she misses out on the fact that nearly everything designed for a generic purpose does the exact same sort of stuff. No mention is made of UI frameworks like JSF, GWT, etc, which do the same sort of thing for the UI. Ever look at the HTML that JSF generates? How about the HTML/Javascript out of a GWT application? The problem is that I've run into Hibernate's limitations even just trying to do fairly simple stuff, and the workarounds wound up being far more of a PITA to deal with than if I had just used SQL in the first place. Look at Hibernate questions on Stack Overflow, a surprising number of them are of the form: &gt; How do I do this &lt;&lt;provide example in SQL&gt;&gt; using Hibernate? If they were using SQL in the first place they'd have already answered their own question.
Having been a system architect for 25 years, I can say that your statement is patently false. Any properly defined system will identify its storage strategy during its design phase, not at the end of the project. I have never worked on a system where the database or other persistence store was unknown during development. Yes, they have changed, but they were always identified up front initially. And proper abstraction will avoid most of the problems experienced when switching databases.
I agree with her *and* I think she is wrong. Hibernate does create ugly SQL. But in most cases where NICE pretty SQL is needed, you can write your own and stuff it into the Hibernate config to override most of the CUD of the CRUD functions. For many of the R in CRUD, you can write names Queries and use them. For dynamic queries Hibernate is usually no less ugly than hand rolled dynamic SQL. I can't tell you how many ugly SQL selects built from string cat loops I've debugged in my career. Double-bagger code. For cases where you don't need pretty code, you save yourself a lot of headaches. 
They have a "microbusiness" licensing model if you're interested. I don't know what prices they offer under that. But it might be worth looking into. http://www.excelsior-usa.com/store/jetmb.html 
Please, someone tell me what the problem with writing SQL is?! Why the avoidance? Oh, and before anyone says anything: if you use Hibernate enough you end up writing HSQL anyway! Spring JDBC Templates are my chosen tools of choice for pet projects because it gives me the right mix of easy of development and granularity to tweak. I'd never advocate blanket use of a framework, but Hibernate adoption is far too common. 
Shit analogy. 
I found myself in the same situation after Google App Engine's price hikes. I ended up getting a VPS and running Tomcat myself.
I'm not the OP but whilst we are being anecdotal... Our software runs on a number of different databases (and operating systems, application servers and computer architectures now I come to mention it). Being able to adapt to what our client feels comfortable with / is already using is a massive commercial advantage to us. That feature of hibernate is really quite useful to us.
Not always, for a simple case of map this Java bean to this table or join this to that it does a fine job. For more complex problems you can fall back to HSQL. If that somehow fails you could always write some native SQL. Hibernate is a tool, like all tools it has it's advantages and disadvantages. Personally I'm exceedingly glad that it's a tool available to me, even if sometimes I choose to write my own queries.
Technically: no problem. Legally: read the license. On 32-bit or 64-bit: Just bundle 32-bit, it works fine on 64-bit Windows, unless you have a good reason for wanting 64-bit when possible.
You don't even need to install the JRE. Just copy it somewere and place its java.exe in the PATH system variable (even in your run .bat file not the OS level). Infact you don't need to "Install" they following, the files can be copied from an existing installation and used just fine. * Ant * JRE (32 and 64bit) * JDK (32 and 64bit) * Eclipse (32 and 64bit) * Tomcat * Pro Guard * Paint Shop Pro even! Basically All but GIT are a straight File copy install (might work, haven't tried just copying and path-ing it accordingly). Building a dev machine takes 2 minutes as it copies the files off a USB key. It's a nice trick. This is after over a decade of building dev manchine's at various places and getting over the process considerably. :-) .^edit^corrected 
Use Ant to Build and use Eclipse as an IDE (Integrated Development Environment). You will need to learn SCM (Source Code Management or Digital Asset Management). GIT is the place to start there, look at the GIT-Gui to add a more friendly face to it. Once you start using an SCM you will not want to do with out one. Nothing like having your back covered as you code.
thanks. What is an IDE? Is it where I compile my code? What is Ant? Is it another language as well? 
What is Ant? Is it another language as well?
I said very because you can't just right a main method and run, like C, Ruby or Python. You need to create a class, and then have a static main method in a class. All is very OOP-ish. Everything in Java is an object.
It's not a language. It's a command line program with xml configuration(yes I know it sucks) to make java apps. Here's an [example](http://ant.apache.org/manual/tutorial-HelloWorldWithAnt.html) . Basically Ant allows you to compile your sources, create an executable jar file etc without the need of an IDE. Why is this good? Portability. Most people in this industry uses Maven or Ant, though I have not use Maven before. 
You really need to learn how to use google.
As lebski88 notes below having one code base that supports multiple different database systems is a big advantage. And anyway if it changes half way through thats essentially the same outcome design wise as it not being defined at the start.
She obviously doesn't know how to use hibernate very well.
You don't need Ant or Eclipse (the IDE I see people recommending, personally I prefer netbeans). Just to get started all you need is the JDK from Sun/Oracle, it has the compiler javac. Simple code can be compiled and launched directly from the command line or a decent text editor. You don't even need SCM as you get started. If you don't know what these things are you definitely don't need them yet. All things in good time. An IDE will make you more productive in the end, but early on it offers too much hand holding. It is better to start without training wheels so you can see your code crash and learn from the experience. Not to mention that the slew of features/options/configurations can be overwhelming and confusing. [SCM/RCS/VCS](http://en.wikipedia.org/wiki/Revision_control) is a must for developing any real project, not the case for just learning a language --especially if you don't already know the SCM well. Best to concentrate on one skill at a time, since knowledge of an SCM is useless without knowledge of programming, start with learning to program and then move on to learning about SCM.
Amazon Micro instances are extremely reasonable if you're comfortable setting up a dev environment or are patient enough to dig through AMIs.
exactly, when I designed a system with hibernate, 90% of the sql was issued via hibernate, 10% was generated by me then mapped to hibernate objects with hibernate code. The 10% were reporting queries, slicing and dicing things, and no orm can do that. Then to make things fast I enabled caching via xml. This allowed me to rip out a fast app in no time vs hiring a bunch of developers messing with sql, mapping that to objects, etc. pain in the ass. And when you deal with java code vs sql, you can better re-use code. Of course the business partner screwed me, but at least I got to write a kick ass app thanks in part to hibernate.
Thank You!!!
Was curious how long it'd take someone to come in with the "if you don't like X, then it's because you just don't get it" crap in place of actually contributing the conversation. Haven't seen many of those since the ruby/agile/tdd/etc zealotry died down a few years ago.
I don't disagree with any particular case, but I wonder if the overall cake mix analogy holds. I prefer to write my own SQL or PL/SQL because of previous experience, but I also believe strongly in design patterns / open frameworks.
&gt;I enabled caching via xml Another good point. I've seen soo many awful hand built caching systems. Hibernate does a mediocre to good job but it is far better most of the home grown systems I've seen.
It is possible, in theory, to write clean SQL. In practice, you're almost always dealing with a mess of existing tables in poorly set up schemas with an inconstant naming convention. And the legacy app owners will refuse to put in fixes to make your system better because they have higher priorities. Rather than have a unique id for your customer accounts, you'll have three. And you have to deal with instances where there is a SS# for a contact in once table and tax ids in another. And then there was the idiot that thought that a phone number was a good primary key for the contacts table. Or the data feed that where some of the data will be in UTF16 on alternate Tuesdays next March. (Surprise!) So yeah...you could write clean SQL...except you can't. And your boss just told you that the QA people are all leaving for three weeks so you have to get it in QA really quickly or you'll miss the deadline by a month. 
So you need a cleaned-up way to access an ugly schema? That is exactly what stored procedures are for. Hibernate is a terrible way to solve this problem.
I really like the comments about the reasoning for no global variables. 
You really think that JDBC callable statement is a nicer way of abstracting away a complex schema than Hibernate? Or that writing stored procs is cleaner and nicer than writing hibernate configs? I've done both and I'd rather user hibernate. 
&gt; You really think that JDBC callable statement is a nicer way of abstracting away a complex schema than Hibernate? Did I suggest using JDBC callable statements? No. I'd suggest using [mybatis](http://www.mybatis.org/), or something like it. &gt; Or that writing stored procs is cleaner and nicer than writing hibernate configs? Not everyone shares your pathological fear of SQL. In fact, many, myself included, find it a **lot** more pleasant to use than the monstrosity that is Hibernate. I have no doubt that if you took the time you've wasted learning all about Hibernate's plethora of ugly workarounds, and spent it learning more about SQL, you'd be a lot more productive.
Yep, I've had success with ehcache, a non-distributed cache. Distributed caching is hard no matter how you slice it and I've heard horror stories with hibernate distributed caching.. But I never trusted it in the first place, I know enough to know I don't wanna deal with that can o' worms.
the "slow" question was a little annoying. The data is from 1998, their compilers and JVM have changed a long in the last 13 years, though, there is a chance some of his tests cases haven't improved much since then.
Use a Label; use the setIcon method in the button's event handler. Pass in null to remove it.
Simple way: loop over the charters of the string, use the static [Character.isUpperCase(char)](http://download.oracle.com/javase/1,5.0/docs/api/java/lang/Character.html#isUpperCase%28char%29) method to check if it's upper case, if so, store your previous word and start a new one, then append the character to the current word. Fancy way: Create a [regex pattern](http://download.oracle.com/javase/1,5.0/docs/api/java/util/regex/Pattern.html) to find an uppercase letter followed by any number of non-uppercase characters (\p{javaUpperCase}[^\p{javaUpperCase}]*), and keep using the matcher's find() and group() method's to pull off each match. Performance wise, regex will be slightly slower because you're using a more complex class, but it's really worth learning regular expressions if you plan on doing much text processing. Long run, it'll save you from writing allot of one-off text search code.
Edit: changed upper to lower case output public static void main(String[] args) { String s = "HeyThereHowAreYou"; for (int i = 0; i &lt; s.length(); i++) { if (i == 0) System.out.print(s.charAt(i)); else { if (s.charAt(i) &gt;= 'A' &amp;&amp; s.charAt(i) &lt;= 'Z') { System.out.print(" " + (char)(s.charAt(i)+'a'-'A')); } else System.out.print(s.charAt(i)); } } System.out.println('.'); }
regex example: http://ideone.com/oHJGZ
 public static void main(String[] args) { String s = "HeyThereHowAreYou"; int[] cap = new int[26]; int[] low = new int[26]; for (int i = 0; i &lt; s.length(); i++) { if (s.charAt(i) &gt;= 'A' &amp;&amp; s.charAt(i) &lt;= 'Z') { cap[s.charAt(i) - 'A']++; continue; } if (s.charAt(i) &gt;= 'a' &amp;&amp; s.charAt(i) &lt;= 'z') { low[s.charAt(i) - 'a']++; continue; } System.out.println("character fount at location " + i + " not alphabetic"); System.exit(0); } for (int i = 0; i &lt; low.length; i++) System.out.println((char) (i + 'a') + " " + low[i]); for (int i = 0; i &lt; cap.length; i++) System.out.println((char) (i + 'A') + " " + cap[i]); }
Well her point was that in our desire to escape the hassles of writing our own SQL code, were now writing hibernate annotations and things that get to be just as complicated if not more complicated than just typing out the damned sql statement. This sort of problem creeps up everywhere. In websites a lot of people use things like drupal or joomla because in it's most straight foreward and simple implenetation it looks so neat, clean, and quick. But then people get obsseed with it and want to use it for everything even though they've gone to a point where its 100 times more complicated than doing the same thing from scratch...
&gt; I have never worked on a system where the database or other persistence store was unknown during development. What can I say, you were lucky? I worked on two such projects in the past two years. In the first case the client didn't know what database they use because of some internal fights in their company, so we discovered it's MS SQL only a month before deployment (the project lasted a year). In the other case, the client was a newly established company and they didn't know if they'll get credit for MS SQL or if they'll have to use Postgres. They currently use Postgres, but they'll likely get the money by the end of the year, so we'll have to make a switch then.
No, use Character.isUpperCase(int codePoint), s.codePointAt(i), and increment i by Character.charCount(s.codePointAt(i)). A code unit's integer value has nothing to do with if it represents an uppercase code point or not.
32-bit works on both? Great! And yes, I was going to read the licence through properly, but from what I've seen so far it's perfectly alright to distribute Java with your software, assuming you leave the license and whatnot in place. Thanks for your help :)
I'll check it out, though my budget at the moment is $0.00. I'll probably use the trial version to see if it's worth paying for, but initially I'm just packaging Java with my application.
Thank you very much for your help. Does java.exe need any of the .dll files that are also in the bin directory? For a simple hello world program just java.exe seems to work fine though :) 
Generally I include the entire installation files and directories as is.
Its just simply that all of her complaints are not an issue. There are plenty of different methods such as writing hql or using stored procs that negate ALL of her complaints. I cant see any value with what she is proposing which is spending time writing code for something that has already been solved. My time iso to valuable to engage in "Not invented here syndrome"
The third answer to "Q: I still miss global variables. What can I do instead?" does not mention [ThreadLocal](http://download.oracle.com/javase/6/docs/api/java/lang/ThreadLocal.html) which apparently has been there since 1.2. Am I missing something?
Stop helping with homework!
I didn't see any indication that 3390rr33 was doing homework. I only corrected the flaws i saw in his code.
Thanks guys for the response, I appreciate it. will check them soon. &lt;3
He gave the complete solution to this guy's homework (notice the downvotes) and you helped him.
I don't care whether the OP is doing homework or not. I wasn't responding to that. I saw buggy code and corrected it, and for that i deserve downvotes? Besides, it wasn't a complete solution. By the way, honest question, where is the "No homework"-rule stated? 
You need a rule for everything?
If i'm getting downvotes for trying to help somebody i'd like to know why. Are you telling me that there is no rule against homework and you're just downvoting on a whim?
I'm telling you your parents must've forgotten to teach you not to help cheaters and now you're wondering wtf is going on.
Everything you need to know [here](http://download.oracle.com/javase/tutorial/2d/images/index.html) or just use an [Image Icon](http://download.oracle.com/javase/6/docs/api/javax/swing/ImageIcon.html).
I wasn't helping a cheater, i was correcting buggy code. Which is what i do as a programmer. Downvoting people for contributing corrections to buggy java code in the java subreddit is asinine, especially when there is no rule against it. I didn't even respond to the OP. If you want to accuse somebody, you would have to know that you've got the wrong person. Besides, there's nothing wrong with asking for help with homework. Who is the cheater in this scenario? 
 cevag "".wbva([ "".wbva([pue(vag(n,16)) sbe n va q.fcyvg()]) sbe q va """62 69 74 2R 6P 79 2S 7N 74 2Q 70 75 7N 7N 6P 65""".fcyvg("\a")]) 
I... don't see what you did there.
&gt; Who is the cheater in this scenario? The guy asking for other people to do his homework. He basically "asked for pointers" in an assignment that was so simple you couldn't give a pointer without giving the solution. He should've used his head for 5 minutes to find the solution, instead of asking people to help him.
I stopped when I needed to add a try-catch in hex
So you should bitch at him instead of me then.
You seem awfully upset over a single downvote. I've explained my reasons, if you don't agree with me then that's too bad.
I'm awfully upset by you bitching at me for contributing java help in the java subreddit. Start contributing yourself instead.
In Python: nums = [0x62, 0x69, 0x74, 0x2e, 0x6c, 0x79, 0x2f, 0x7a, 0x74, 0x2d, 0x70, 0x75, 0x7a, 0x7a, 0x6c, 0x65] "".join([chr(l) for l in nums]) I stopped trying the puzzle when it tried to get me to execute arbitrary Java code ಠ_ಠ
I'll make a prediction: After 30 days you will still be **far** more productive in Ruby any Python than you are in Java, and therefore you'll probably still prefer them. Just as if I dabbled in Ruby or Python for 30 days I'd still be far more productive in Java than in either of those two languages. Almost everyone prefers the language they are most familiar with, and Java won't become this language after just 30 days. One thing to get out of the way with Java, its verbosity will irritate you. On the bright side, the IDEs really help with this, and if you want to use a language with almost all of Java's advantages, but with a much more concise and powerful syntax, you should check out [Scala](http://www.scala-lang.org/). Unfortunately Scala's tools support is still somewhat immature, although the Scala Eclipse Plugin is making rapid and impressive progress. Ok, with that out of the way, it seems like you may be jumping the gun somewhat by going straight to tools like Objectify and Guice. There is no way you'll understand Guice before you understand a decent amount about how Java works. In fact, I'd forget about Guice for now. To really understand the basics of the language, there are two books you need to read: [The Java Programming Language](http://www.amazon.com/Java-Programming-Language-4th-Arnold/dp/0321349806/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1315923117&amp;sr=1-1) is by the creator of Java, and is by far the best introduction to Java that I've found. [Effective Java](http://www.amazon.com/Effective-Java-2nd-Joshua-Bloch/dp/0321356683/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1315923169&amp;sr=1-1) is basically a set of "dos" and "don'ts" once you've got past the basics of the language, an excellent set of best practices. They are somewhat expensive but maybe you can find them at a local library. One of the best things about Java are the IDEs. I personally use [Eclipse](http://eclipse.org/), its code-completion and continuous compilation are amazing, and really demonstrate the advantages of having a statically typed language. It constantly checks for compilation errors in your code *as you type it*, almost like a a spell-checker. [Netbeans](http://netbeans.org/) and [Idea](http://www.jetbrains.com/idea/) are also popular and have similar functionality, and both are free or have free versions. With that, if you are using Google tools like GWT, I think you'll find that Eclipse has the best support (Google has an expansive Eclipse plugin to help you work with all of their many tools). Oh, and if you are doing anything with collections (maps, lists, sets, etc), check out the [Google Guava](http://code.google.com/p/guava-libraries/) library (formerly Google Collections). Best of luck - reply to this comment if you have any further questions.
Thank you for the suggestions. &gt; After 30 days you will still be far more productive in Ruby any Python than you are in Java, and therefore you'll probably still prefer them. This experiment isn't really about thinking Java is a language I will prefer. It's more delving into a statically typed language to learn a few things and maybe take them back to Ruby, and maybe find I enjoy Java, and keep working with it. Hopefully, while doing this, I will maybe help a Ruby guy move to Java a bit quicker (If that's what they want to do/need to do) or maybe give a Java guy a good grasp of the differences in case he needs to move to Ruby for whatever reason. Another reason for this experiment; I need a change. I just need to do something different for a little while.
You could always run it with a SecurityManager and remove all the harmful rights
My antivirus does not like that image. It carries the signature of a "dropper". Did anyone figure it out yet?
Find the code where the JButton is instantiated, and then explicitly set it be disabled: JButton button = ... // however it's instantiated button.setEnabled(false);
Perhaps, then, the appropriate solution is to do a mixture of JDBC and ORM. I've successfully mixed the two before - if you can get everything to be driven by DataSources (including JDBC), then configuration doesn't get nasty.
convert the hex to ASCII text to give you a link to another step in the puzzle
It helps simplify code - you write code that deals purely with objects, rather than having to write code. While Hibernate isn't a silver bullet, it can definitely reduce the amount of code written. I think it works fine for simple-enough tasks such as a simple SELECT, UPDATE, DELETE, or INSERT, which are the most-common use cases.
I've heard good things about MyBatis as a compromise, although I haven't used it myself.
It took a while, but yes I finally got to the end. There's a good reason that file is getting flagged, but no it's not harmful.
This took 5 min: $ echo "62:69:74:2e:6C:79:2f:7a:74:2d:70:75:7a:7a:6c:65" | xxd -r -p bit.ly/zt-puzzle$ $ lynx -dump `echo "62:69:74:2e:6C:79:2f:7a:74:2d:70:75:7a:7a:6c:65" | xxd -r -p` $ wget http://www.zeroturnaround.com/wp-content/uploads/2011/07/accept-teh-challenge.png $ xxd accept-teh-challenge.png | vi - Vim: Reading from stdin... $ unzip accept-teh-challenge.png Archive: accept-teh-challenge.png warning [accept-teh-challenge.png]: 76314 extra bytes at beginning or within zipfile (attempting to process anyway) creating: META-INF/ inflating: META-INF/MANIFEST.MF inflating: 1 inflating: ZT.class $ jad ZT.class Parsing ZT.class... Generating ZT.jad $ vi ZT.jad $ java ZT &gt; output.txt $ vi output.txt $ jad output.txt Parsing output.txt... Generating ZTChallenge.jad Overlapped try statements detected. Not all exception handlers will be resolved in the method main Couldn't fully decompile method main $ $ $ vi ZTChallenge.jad $ Ok, emergency issue at work. Back to tuning SQL performance issue :(.
I decided it wasn't worth it after I got to: http://pastebin.com/seXkDuCz
// groovy byte [] bytes = [0x62, 0x69, 0x74, 0x2e, 0x6c, 0x79, 0x2f, 0x7a, 0x74, 0x2d, 0x70, 0x75, 0x7a, 0x7a, 0x6c, 0x65] println new String(bytes) Got to the first picture but I failed because I didn't know a png could be unzipped. TIL.
ROT13
I'd start by googling some of your problems keywords. Keywords such as "binary" "counter" &amp; "java" will get you started in no time. Learning something yourself is more valuable than having a quick solution. 
I tried this. What I have so far are 8 variables (one for each of the digits), and I am going to convert it manually (ex. if 128 fits in it, digitOne = 1, the subtract 128 from the number, go to 64, etc.) in a for loop. I'm still having difficulty, though. 
The assignment is to convert it manually? Because there are methods to convert integers into binary, as you probably know.
We were given very vague details. It was simply to write a program that counts from 0 to 1111 1111. I presume efficiency matters, which means it would be inappropriate to count manually.
http://www.javaforstudents.co.uk/Code_snippets/Decimal_to_binary_converter This is a great source for your problem.
Disappointed - fixed the concurrency problem but didn't really need to ... maybe they want that if you apply for a job or something.
I understand all of it but this part: decimalNumber /= 2; Exactly what does that do, and why will the program not execute properly without it?
If you divide a decimal number by 10 (its base), you move the digits one place to the left. 12340 / 10 = 1234 If you divide a binary number by 2 (its base) you do the same 10110 / 2 = 1011 My implementation would look something like public static String getBinaryString(int i) { StringBuilder sb = new StringBuilder(); while (i != 0) { sb.append(i &amp; 1); i &gt;&gt;&gt;=1; } return sb.reverse().toString(); } the "i &gt;&gt;&gt;=1" does the same as dividing by 2, only more obviously as it is the unsigned right shift operator. As long as our input number hasn't reached 0 (all bits pushed out) we add the current digit to our string builder and then shift the number one to the right, filling in 0 on the left. Once we have reached 0, we return the reversed buffer as string. edit: Without the instruction, the value of decimal number / i never changes, so we are stuck in an endless loop, or rather an out of memory error because the string builders don't fit into the heap anymore.
Alright, this is my new code now, I was wondering why the main algorithm is faulty: public class DecimalToBinaryConverter1 { public static void main(String[] consoleArgument) { String binaryNumber = ""; for (int decimalNumber = 1; decimalNumber &lt; 256; decimalNumber ++) { // exits loop so decimalNumber cannot reach zero. while (decimalNumber != 0) { // seperates groups of 4 binary digits if (binaryNumber.length() % 5 == 0) { binaryNumber = " " + binaryNumber; } // main algorithm: divides decimalNumber by 2, and gives remainder (if any), which acts as a binary digit. binaryNumber = (decimalNumber % 2) + binaryNumber; System.out.println("Binary of " + decimalNumber + " is " + binaryNumber); } } } }
The JPG has a GPS tag in it.
your while loop is infinite
you hit the loop, decimalNumber is assigned 1 on the first pass. Then you have a while loop that says while decimalNumber is not 0... decimalNumber never changes inside that while loop so it never exits and is stuck in an infinite loop. 
1) obsolete while loop 2) Wrong algo; try this for (int decimalNumber = 1; decimalNumber &lt; 256; decimalNumber ++) { String bin = ""; int temp = decimalNumber; while(temp&gt;0) { int r = temp %2; bin = r + bin; temp=temp/2; } System.out.println(bin); } } 3) Add the "separates groups of 4 binary digits" logic 4) Try and use StringBuffer(I haven;t used it myself) 
Alright, now that I'm home here is the continuation: Inspecting ZTChallenge.jad, it's obvious that what the code is doing is constructing a class out of the byte array, that it slightly modifies on the fly. So all we have to do is modify the code to write out the bytes to the file. Just add following to main: String className = class1.getName(); String classAsPath = className.replace(',', '/'); System.out.println(classAsPath); InputStream stream = class1.getClassLoader().getResourceAsStream(classAsPath); OutputStream s = new FileOutputStream(new File(classAsPath)); DataOutputStream out = new DataOutputStream(s); out.write(TWISTED, 0, TWISTED.length); This will write AlmostThere file which is a class file (xxd shows cafebabe at the beginning). Now if you de-compile the file with jad, you get: AlmostThere.java: public class AlmostThere extends Thread { // JavaClassFileOutputException: Stack underflow public static void main(String args[]) { } public AlmostThere setZz(int i) { zz = i; return this; } public int z(int i) { int k = 0; Object obj = z[i]; JVM INSTR monitorenter ; if(i == 0) (new AlmostThere()).setZz(1).start(); goto _L1 _L5: if(k != 0) goto _L3; else goto _L2 _L2: JVM INSTR pop ; k++; Thread.sleep(1000L); goto _L4 _L3: Object obj1; obj1; _L4: int j = this_is_what_you_re_looking_for_687474703a2f2f6269742e6c792f7a742d70757a7a6c652d72656c6f61646564(i * (int)Math.round(Math.pow(2.7182818284590451D, 1.0000000000000001E-09D)) ^ 1); return j; Throwable throwable; throwable; obj; JVM INSTR monitorexit ; throw throwable; _L1: k = 0; null; goto _L5 } public int this_is_what_you_re_looking_for_687474703a2f2f6269742e6c792f7a742d70757a7a6c652d72656c6f61646564(int i) { this = ((AlmostThere) (z[i])); JVM INSTR monitorenter ; i = z[i].hashCode(); return i; i; this; JVM INSTR monitorexit ; throw i; } public void run() { zzz[zz] = z(zz); } public static void go() { (new AlmostThere()).setZz(0).start(); } static Object z[]; static int zzz[] = new int[2]; int zz; static { Object aobj[] = new Object[2]; aobj[0] = new Object(); aobj[1] = new Object(); z = aobj; } } So, you need to fix a threading issue here :D. Uncovering the code has been more fun than fixing the bug:D.
I haven't used Scanner, but I believe nextline() should be nextLine(). Java is case sensitive.
Be aware that java is picky about case sensitivity. If you search for the scanner class in the java api (http://download.oracle.com/javase/6/docs/api/) you see that nextline() is actually nextLine() I've been programming in java for 7 years and I still get tripped up on errors that turn out to be simple misspellings. Hope this helps!
it worked! i feel like an idiot, but I am extremely grateful for your help! thanks a lot!
yes it did very much! thanks a lot!
Make a timer. connect it to an ActionListener The action listener changes the coordinates of the second rectangle only and then it repaints the panel. If you don't change the coordinates of the first rectangle in the ActionListener it will repaint it in the same spot.
Much better, thanks. I agree Hibernate and other are a useful tool in the toolbox and that making broad generalizations, like she seems to be doing that there is never a good place for tools that remove some of the boilerplate code, are generally misinformed. Of course, using the right tool for the right job never seems to be a popular topic at conventions. I guess it's not the lightning rod of controversy that the absolutes are.
one more question, I want to make it print "x^2" but I'm not sure of the code to use so that java knows i want x squared, do you know what it might be?
 /** * Get attribute value of given attribute ID * * @param _attrs * @param _attrId * @return String value of given attribute ID, null if not found */ public static String getAttributeString(Attributes _attrs, String _attrId) { String attrString = null; try { if (_attrs == null || _attrId == null) return attrString; Attribute attr = _attrs.get(_attrId); if (attr == null) return null; List&lt;Object&gt; values = new ArrayList&lt;Object&gt;(); NamingEnumeration&lt;?&gt; attrValues = attr.getAll(); while (attrValues.hasMore()) values.add(attrValues.next().toString().trim()); attrString = join(", ", values); } catch (Exception e) { logger.error("", e); } return attrString; } 
 /** * combine a set of strings separated by a given string * * @param &lt;T&gt; * @param _separator * @param _contents * @return a string containing the string representation of given objects * separated by the given String separator */ public static &lt;T extends Object&gt; String join(String _separator, T... _contents) { StringBuffer result = new StringBuffer(); String sep = _separator == null ? "" : _separator; String glue = ""; for (Object c : _contents) { result.append(glue + (c == null ? "" : c.toString())); glue = sep; } return result.toString(); }
Good topic. Poor delivery.
There's no method just for squaring, but there is a "to the power of" method. Take a look at [the Math class](http://download.oracle.com/javase/6/docs/api/java/lang/Math.html). Otherwise you could always do x * x.
oh ok thanks!
I already work with Java. What is the point of the Scanner class over just iterating using a reader or similar input stream class? Is it yet another wrapper/helper class?
Take a peak at the javadoc, you'll see: http://download.oracle.com/javase/6/docs/api/java/util/Scanner.html
Well, that is the usage, doesn't tell me why it was created in 1.5 and not in earlier versions or why it was created at all.
Honest question.. In your class, are you not allowed to use an IDE like Eclipse? This seems like the sort of error which Eclipse would have highlighted and offered a solution for (it's really awesome at this).
Good point, but in my experience it is well worth the trouble to start coding as basic as possible, so you aren't used to the IDE correcting your mistakes. Once you are comfortable with the language and syntax, then move to an IDE. In other words: Notepad+, javac and java for starters :D
Good tip to remember, Java adheres to CamelCase, so more often than not the first letter of any word will be capitalized: * nextline = nextLine (Method name) * hashmap = HashMap (Class name) * arraylist = ArrayList (Class name) * hasnext = hasNext (Method name) etc. Of course they break this rule here and there, so be sure to check the javadocs or API webpage for any class/method that you are unsure of. 
I almost don't believe it
Along with what Daniel15 said, in the Math class there is a pow function. If you import Math (I think you have to), you can then use Math.pow(x, power).
ya we are allowed, I've been using Dr. Java (because I'm really a n00b with this stuff). I heard Eclipse is great though, my teacher raves about it
For simple console input, Readers are such overkill. Scanner makes it so much easier.
Spoiler: Follow this: "this_is_what_you_re_looking_for_..."
You dont think that professional programmers in a smaller company have the same experience/skill as people at bigger shops?
Who in their right mind would want to write any code in notepad....
 for (int decimalNumber = 1; decimalNumber &lt; 256; decimalNumber++) { String bin = ""; for (int temp = decimalNumber; temp &gt; 0; temp /= 2) bin = (temp % 2) + bin; System.out.println(bin); } Weird curly brace placement = Mismatched amount!
&gt; My time iso to valuable to engage in "Not invented here syndrome" How is suggesting that people use a 40-year old technology "not invented here syndrome"?
Because what she is essentially arguing for is people writing their own ORM, her main complaint revolves around 1. her not understanding how to use hibernate correctly and 2. by her own admission she cant say that she did everything herself, which is dumb. If you start looking to take that to the extreme, why doesn't she write everything in assembler.
Or you can use [mybatis](http://www.mybatis.org/) which lets you abstract away your database calls while still using normal SQL. I've used Hibernate on-and-off for a decade, and I've **always** ended up regretting it. Sooner or later you'll need to do something that would be easy in SQL but a nightmare in Hibernate, and any benefits are rapidly erased.
Yes :D. But they don't make it remotely clear why anyone would want to work for them. 
Her argument would also translate to using mybatis or anything else that is a similar ORM. She didnt write it, so she doesn't want to use it... Can you provide an example of something that is a nightmare in hibernate but easy in SQL? and expand on why if this is the case you are not writing HQL in the first place?
In all my years of java, I've NEVER seen any javadoc that says why an API was created in a particular version and not earlier. Why is this important to you? 
Well, they have JSRs and enhancements to the language that are discussed in a lot of detail. It won't be covered in the Javadocs. The additions of Closures is one such JSR that gets discussed a lot. Other Java classes are also described in detail before they were added.
&gt; Her argument would also translate to using mybatis or anything else that is a similar ORM. She didnt write it, so she doesn't want to use it... I don't think so, her argument is that trying to pretend SQL is object orientated is counter-productive. &gt; Can you provide an example of something that is a nightmare in hibernate but easy in SQL? In a recent project I had to select a random pair of Rankable rows, that isn't already present in the Comparison table (which contains all previous pairs). After hours of beating my head against the wall with Hibernate and HQL, I eventually had to do it in native Mysql: select Rankable.* from ( select 1 as Sort, @a as one from ( SELECT @a := a.id, @b := b.id FROM Rankable a INNER JOIN Rankable b on a.id &lt; b.id WHERE a.category_id = ? AND b.category_id = ? AND NOT EXISTS ( SELECT * FROM Comparison c WHERE c.lower_id in (a.id, b.id)) AND NOT EXISTS ( SELECT * FROM Comparison c WHERE c.higher_id IN (a.id, b.id)) ORDER BY a.id * rand() LIMIT 1 ) SQ union all select 2, @b ) X INNER JOIN Rankable ON Rankable.Id = X.one ORDER BY X.Sort HQL just seems like insanity to me - its a front-end to a front-end to a database. It looks vaguely like SQL except almost nothing works the way you expect it to.
So just use a stored procedure, which that looks like it should be anyway. I dont see how you figure it as a front end to a front end, its just a way to write universal SQL for multiple databases.
In fact looking at that again, I cant see why you couldn't write it in HQL?
I don't believe that you need to import math. It is a standard class from lang.
Use Eclipse. It is pretty easy to learn and the basics, but the advanced stuff is great for Java. I teach with Eclipse and love it. Keep programming ya n00b! :)
You can also use Eclipse as a learning tool. He had to go to Reddit to figure something out that he would have learned really quickly using Eclipse. With the right frame of mind a good IDE will promote learning rather than hinder it.
Respectfully, don't IDEs keep track of details like this?
goodluck I was in your shoes a year ago.
I'm currently wanting to make a move up the chain in my career but I need some help revising. I have to take a JavaBlack Belt test, now I've taken the test before but I need to perform better than my original attempt to make a move up the career ladder. One thing I noticed was though I understood the concepts I didn't know the technical details/names for these concepts. How can I swat up on my terminology etc.. I've got 4 years experience in Java development. Any comments are much appreciated! Thanks 
or move to Estonia for that matter.
Could you give an example of those terms that you do not know?
It's a good question, I was trying to remember what they were but it's very difficult since I took the test quite a while ago, there is no way to review the test questions afterwards either. I just had a google around to see what I could find but can't seem to stumble upon it. I remember there was a term they used for talking about weak and strong collections which I couldn't understand at the time. I'm just looking for a definitive list of technical terms and idea's that I should know. 
I smell a copypasta code donkey trying to cover it up with some formalist douche wash.
I can never remember. I feel like half the time I import it anyway just to make sure.
Thanks mate, your input is really helping. If I was such a copy and paste code donkey I wouldn't be in the job I'm in and I wouldn't be getting a promotion either. I'm just making sure I'm prepared that is all, I thought I might get some constructive comments to make sure that going forward I can perform to my best potential. I can imagine you're a great team player with an attitude like that.
Well, I asked a question about it on Stack Overflow and none of the HQL experts there were able to help.
SQL is a front end for databases. HQL is a front end for SQL.
Got a link to the question?
No, a tool like Navicat is a front end for databases. Your definition is weird. Do you consider java a frontend for your cpu?
Java adds a lot relative to a CPU. HQL is basically just a thin skin over SQL.
As team players, it's our job to identify and eradicate this scent. It saves a lot of time and trouble for *everyone* involved with the team. Donkeys get hired all the time, but they are a risk and a liability. It doesn't sound like you'll be getting any kind of promotion if you can't prove that you possess the required skillset of your employer's criterion; which was the sole reason for this post, amirite? I can guarantee you that anyone here with the chops necessary to prep for, let alone pass, any true craftsman-level test will have identified the scent and they will not help you. It dilutes the business and makes a mockery of the craft. Good day.
I didn't downvote you, but I can guess why you're getting downvoted: * This announcement looks, smells, and tastes like an astro-turf campaign. Lotus Notes? Really? Does anyone still use that? And if so, why? * The last guy who won had not used XPages before because NOBODY uses XPages, or has even heard of the technology. * If I enter a competition, I'd like victory to mean something. With all due respect to your last winner, you make it sound like any talentless clown can win this thing. * The competition is to make widgets to prop up an already-obsolete IBM technology. So I put in hours of work, gain a skill that is meaningless to me and valueless to the market at large, in order to win... an iPad? Why? Tell you what, I'll make your damn widget, for which I will charge you my current consulting rate. I'll have enough for that iPad at the end of my first day. But you won't do that. Why? Because: * Some suit in your office has read all about crowd-sourcing, and has hatched a plan to get something for nothing. After all, nobody is using this technology, so there's probably little point in plowing money into it, right? God forbid you should actually *pay* people to improve the product. That would be throwing good money after bad. So let's dangle something in front of the geeks to get them to jump. How about an iPad? Geeks *love* iPads... I mean, I don't blame you for trying, Mr. IBM sock puppet. Go wild. But don't blame the community for calling bullshit on this one. Java-related my ass. 
I think you need to get off your high horse and stop trolling. You don't know me and haven't seen my code. What makes you so high and mighty? I always thought team players were supposed to help their team to develop and improve. By the sounds of it you must just point fingers at your team members and laugh as they struggle and fail. When I started programming it was the help of other fellow developers that helped me get to the skill set I have today. We help each other solve difficult issues, proposing new designs and solutions, recommend reading materials etc... I would happily help others when they need it and I'd expect the same from a team I worked in. Lets just say I'm glad we don't work together because that would be a nightmare with your self centred attitude.
Sorry, tried to find it but SO's search functionality sucks :-(
Eclipse is overkill for this kind of stuff. As soon as he/she opens it up and can't click new file, they'll freak. 
Thanks for the response I appreciate it. Disclosure: Yes I work for IBM, however anything I post is my own opinion and does not reflect my companies (always). Feel free to PM me if you want more details in that regard. I work with XPages (actually Notes/Domino dev technologies) so I thought it would be handy for some people if they wanted to try win it. There was no malice or coercion involved in posting (nor do I work in marketing). To clarify on some of your points. &gt; This announcement looks, smells, and tastes like an astro-turf campaign. I can see how that is, but if it was an astroturf I wouldn't be wondering why the downvotes, as I would probably have a number of bots, etc doing the fake voting for me. &gt; With all due respect to your last winner, you make it sound like any talentless clown can win this thing. Actually I was trying to point out how easy it is to use. As you pointed out earlier when people hear "lotus notes" they think the old style of developing for the platform. Although that is still in the product, from R8 onwards the focus is on XPages. It is also a server component, it renders in the Notes client but you don't need notes (except for developing). Also if you check the link of the winner, you will see he is far from a "talentless clown". &gt; The competition is to make widgets to prop up an already-obsolete IBM technology. So I put in hours of work, gain a skill that is meaningless to me and valueless to the market at large, in order to win. Again there is some confusion between old style development and the new style. XPages uses Dojo, SSJS, JS, HTML, CSS, Java, OSGi. These are all technologies that are current skills in the market. &gt; for which I will charge you my current consulting rate. Sure, you can go that route too. A number of developers do this already by submitting to [OpenNTF](http://www.openntf.org/Internal/home.nsf) and then charging for more personalized versions. Likewise the previous winner actually integrated his own product into XPages as a means to sell his product. Of course people have to eat, but some people like to tinker in their spare time. Anyway I appreciate the feedback. 
Nah. I teach with it and it is not overkill. I have highschool kids in my classes that can barely talk and pick their noses at the same time, kids that can't tell an int from a char, and they can learn how to create new projects, packages and classes. 
I would suggest you download and learn Eclipse and those sort of problems stand out pretty clearly with Intellisense. The next part in Code QA is SCM (source control management), GIT's a good place to start there. .^edit^corrected
I am new to java too and I am using netbeans .. is Eclipse more advance, easier, better than NetBeans ?
I am new to java too and I am using netbeans .. is Eclipse more advance, easier, better than NetBeans ?
nice. Congrats.
Because you are using the term "Java GUI Person" I will just assume you have no idea about software engineering. Am I correct? PS: I am not being sarcastic.
oh, look at that. getting an ad for /r/forhire. 
Apparently I don't know. Not a serious developer myself; more academic. But need GUI on top of what we've been doing. I suppose I can do it, but probably good to have a professional put in the proper infrastructure for our desktop app. Maybe /r/forhire is the right place. And are you a GUI Person? :) Seriously. 
classes are upper CamelCase, and lower camelCase for most everything else. 
you never *have to* import anything. you can always use the Fully Qualified Class Name to reference it. You can declare: java.util.ArrayList variableName = new java.util.ArrayList(); (this causes a raw types error but so would the imported version). Math is in java.lang however so you get it without an import anyway.
A very good eclipse tutorial is [Eclipse and Java for Total Beginners](http://eclipsetutorial.sourceforge.net/totalbeginner.html) by Mark Dexter. 
I'm kind of on the fence about this. When I was in college, we used vi and you were forced to learn syntax, how to find an answer to a problem, and debugging without an IDE helping. All invaluable tools. On the flip side, spinning one's wheels on something like "wrong case" defeats the purpose of learning. Instead of mucking with why something won't compile, you could spend the time learning design patterns. I haven't coded professionally without an IDE for probably 15 years but there are times when I run into issues that an IDE can't solve and for that I have to go back to the troubleshooting skills acquired way back when coding in vi.
Quick Google search turned up this for me: http://www.java-tips.org/java-se-tips/java.util/scanning-text-with-java.util.scanner-3.html
bah! use emacs or vim!
It would be easier to help you if you included the compile error that you are running into. 
You declared celcius 2 on your first line, then declared it again to use it. Either drop it from your mass declaration, or simply do celcius2= (5.0...
when i drop it from my mass declaration it then gives me an error "variable farenheit2 might not have been initialized." i am new to programming so im not really sure what that means :S also, thanks for your help
yes that would have been smart. I will certainly do that next time I ask a question... (will be very soon!)
This is because you declare celcius2, but you don't assign it a value. Then you try to declare another variable with the same name: celcius2. When you're new to programming, avoid things like declaring multiple variables on the same line. If I rewrite you code with one declaration per line (and I remove your second declaration of celcius2), perhaps it will become clear what the problem is: class doesnotwork { public static void main(String args[]) { double farenheit = -25; double farenheit2; double celcius; double celcius2; System.out.println("\n\tThis program will convert -25 farenheit to celcius - whoohoo! "); celcius = farenheitToCelcius(farenheit); System.out.println("\n\tThat is " + celcius + " degrees celcius."); System.out.println("\n\tnow for my next trick...."); System.out.println("\n\tinitialize farenheit2 to a value and i will convert that for you..."); celcius2 = (5.0/9.0)*(farenheit2-32); System.out.println("\n\tThat is " + celcius2 + " degrees celcius."); } public static double farenheitToCelcius (double farenheit) { return (5.0/9.0)*(farenheit-32); } } You can see that you declare 4 doubles, but only one (farenheit) has a value (-25). Your other three variables are not initialized (meaning they have no value assigned to them). Then, you try to convert farenheit2 to celcius and store it in celcius2. However, farenheit2 has no value assigned to it. If the compiler allowed this, then your code would have unpredictable results (it would read the value of the memory at farenheit2, which could be anything at this point!), thus you are required to assign a value to a variable before you can use it. Hopefully this helps to clear up your problem!
I know that this is a day old, but the easiest way to do this and get some real learning out of the task is to use bitwise operators. I used bitwise shift right (&gt;&gt;) and bitwise AND (&amp;) to accomplish this. public class Counter { public static void main(String[] args) { for (int i = 0; i &lt; 256; i++) { /** we want a string of the binary representation of this integer in the format * of 0000 0000 to 1111 1111 */ String output = ""; /** start at position 8 and count down, adding the value of each * bit as we go along. */ for (int pos = 7; pos &gt;= 0; pos--) { /** add a space at the 4th position */ if (pos == 3) output += " "; /** shift the integer to the right by pos positions * then bitwise AND with 1 to clear out the higher * bits */ int bit = (i &gt;&gt; pos) &amp; 1; output += String.valueOf(bit); } System.out.println(output); } } }
I saw below that you were trying to do it with 8 variables... if you wanted to do it like that, it might make the code easier to understand... in this case, instead of doing the inner loop you could just do: for (int i = 0; i &lt; 256; i++) { int bit0 = i &amp; 1; int bit1 = (i &gt;&gt; 1) &amp; 1; int bit2 = (i &gt;&gt; 2) &amp; 1; int bit3 = (i &gt;&gt; 3) &amp; 1; int bit4 = (i &gt;&gt; 4) &amp; 1; int bit5 = (i &gt;&gt; 5) &amp; 1; int bit6 = (i &gt;&gt; 6) &amp; 1; int bit7 = (i &gt;&gt; 7) &amp; 1; StringBuilder builder = new StringBuilder(); builder.append(bit7); builder.append(bit6); builder.append(bit5); builder.append(bit4); builder.append(" "); builder.append(bit3); builder.append(bit2); builder.append(bit1); builder.append(bit0); System.out.println(builder.toString()); }
So in order for this program to run in its current form i would have to assign a value to farenheit2, celcius, and celcius2?
Well, you have to assign a value to a variable before you use it. So going line by line you have the following statements. create 'farenheit' and set it to -25 create 'farenheit2' create 'celcius' create 'celcius2' print set 'celcius' to (5.0 / 9.0) * (farenheit - 32) print 'celcius' print print set 'celcius2' to (5.0 * 9.0) * (farenheit2 - 32) print If we follow that logic by hand, then what is the value of 'farenheit2' when we go to set 'celcius2' to (5.0 * 9.0) * (farenheit2 - 32) ?? You might think that it would be zero since we didn't explicitly assign it a value, but in actuality it's in a state called "uninitialized". This would be similar to asking your friend to "go to the store and buy apples". You didn't explicitly say how many apples your friend should buy, so you have no idea how many you will get. Anyway, back to Java. If we were just to take the following two java statements: double a; double b = 2 * a; Then what would be value of 'b'? We couldn't possible know, because we don't know what a is at that point in time. However, if we change it to: double a = 5; double b = 2 * a; Then we know that 'b' should be 10, since we have set a to 5 before hand.
thanks for all your help 
Have a look at what encoding is support by Java 6 http://download.oracle.com/javase/6/docs/technotes/guides/intl/encoding.doc.html
Sorry not familiar with that site. Perhaps http://www.javaranch.com/ might be worth a try as well?
Regardless of what most people think, "poor practices" is a very subjective concept. It's normal for different developers to reason directly and write their code differently. Just try to learn from many sources (and particularly, read code from several different people) and the true essential practices will soon emerge (assuming that what you wish is to keep your code readable to yourself and others in the future). (Disclaimer: My field of knowledge is very broad, including C++, which I love; I'm not a java purist nut, so those may possibly think differently.)
You can tell javac what encoding the source file is using. Search http://download.oracle.com/javase/1.4.2/docs/tooldocs/windows/javac.html#options for -encoding.
Thank you for the recommendation! I checked out javaranch.com and lots of great info there and it definitely earns a spot on my bookmark bar. The only downside is that it doesn't seem to have any video tutorials and its mostly a reference site (I needed a good one anyways). When learning from scratch I always prefer visual cues, followed up with text material. If anyone can recommend a site with video tutorials (preferably free, but I'll take preimium ones as well) I would greatly appreciate it.
Ptera thanks for your reply. Regarding "poor practices" thats what I figured, but I read quite a few articles on Metafilter (not sure how much faith i should put into that site) where experts were constantly telling rookies that to "make sure you follow good practices" when it came to coding otherwise you'll forever be a hack who gets mediocre work. I'm just going blindly into a career field so I appreciate all the pointers I can get! 
I've heard nothing but great things about The New Boston. Never watched a video from there myself though.
&gt; "poor practices" is a very subjective concept. Not all of them. for example: // good. MyObject myObject = new MyObject(); String myVariable = myObject.getName(); // bad MyObject MyObj = new MyObject(); String MyVariable = MyObj.Name; I'd recommend reading Head First patterns, to augment your coding knowledge.
Java is not "very OO". Based on the answer to "why are you learning a programming language" I would suggest learning something better than Java.
&gt; the true essential practices will soon emerge (assuming that what you wish is to keep your code readable to yourself and others in the future). I believe your example is covered as an essential practice for keeping code readable to others!
Don't worry too much. Just write lots of code. The more code you write, the more you'll learn. If you look at code you wrote an year ago and don't find it horrible, you aren't learning any more :-) That's not to say that you ignore good advice. Just don't mistake that as a substitute for actual practice. 
He may just not have been aware of them. For what it's worth, ThreadLocals can be dangerous. In Java EE applications, if you don't properly remove all things you put into a ThreadLocal, due to the pooling of threads (so, presumably, anything else that pools threads is susceptible to this), it's possible for your class loader to never get garbage collected (since there's still an active thread referencing it), which causes memory leaks that eventually consume all of your PermGen memory and require a restart of the JVM. Not to say that ThreadLocals should never be used, but there should be a strong "caveat emptor" anytime their use is discussed.
Does anyone have any experience with how well AMD's APP SDK works on NVidia cards? This is a huge step backwards if this only works with AMD cards.
i think this is the first time in months ive actually seen someone do the meme right.
This looks like it may be what I need. I'll try it and get back and see if it worked! Much appreciated!
Oreilly have a special today...might be some java vidz in there, but I am not aware of how good they are -&gt; http://shop.oreilly.com/category/deals/b2s-special.do?imm_mid=074630&amp;cmp=em-orm-books-videos-b2sdeal-direct
Backwards? I wouldn't say that, but sideways maybe. It wouldn't get us any closer to write once, run anywhere.
maybe try drawing the image on a Component? 
The article says it translates the byte code to OpenCL on the fly. I thought OpenCL was supposed to cross platform.
There are other browsers available...
Java has a few idioms that do indeed make it not a pure OO language. Such as native int/float/double. That being said calling it not very OO is just foolish. For career opportunities it's also still a great bet. I'm a freelance java developer, and I love my job, don't let this guy dissuade you. Java is also a great language for learning programming. The one aspect that works against java (enjoyment) and makes learning tricky is its vast libraries. The idea that you're just writing boilerplate and glueing frameworks together. Specifically if you are doing any kind of web development. That being said I still think it's a good language to learn in. One good way to get used to the common enterprise requirements for jobs (Spring/Hibernate/Ant/Maven/JSF) is to find a position that does pair programming and apply as a junior developer. An agile employer will be more likely to give you a shot based on attitude and potential as opposed to current skill. And pairing with a senior developer will really skyrocket your knowledge in no time.
Here's the error message given by DrJava... 1 error found: File: /tmp/Calculus.java [line: 11] Error: /tmp/Calculus.java:11: cannot find symbol symbol : method nextline() location: class java.util.Scanner
I'm a java web developer mainly, but my advice would be to write some things for android. Little utilities like a calculator or a stopwatch that require some coding outside of placing buttons on a form. With a little luck getting some actual users via the android market will make the process much more enjoyable, and they will quickly let you know what other things they want in the app ;)
If you're a musician of any sorts [jfugue](http://www.jfugue.org/examples.html) is a ton of fun. And great for little programming ideas without getting into all the boilerplate right away (maven/spring/hibernate etc...)
Rambler this was exactly what I was thinking! I'm a huge fan of android and once I feel a bit more confident I'll definitely be putting my own small app on the market. 
Programmers shouldn't have to write their own SQL... they should get the database guys to write it. :-) I think she overstressed the analogy a bit, and would have liked seeing some actual working examples of both approaches for code comparison purposes.
Wow, that is awesome, once I get home from work I'll have to spend some time messing with that API. I've always been big on music (trumpet, guitar) so I will probably spend too much time on this one lol.
Sure, if you just care about some 9-5 job which pays the bills, learn Java, PHP, Cobol whatever. If you want to improve yourself, learn something like Haskell, Coq, Agda. If you want something "real-world" and fun, while staying on the JVM, have a look at Scala. It is definitely easier and more straightforward than Java for beginners while at the same time being what Java should have been in the first place. 
Here's what Eclipse does: http://i.imgur.com/CfzeL.png
I use that website for more of a reference. Why are people so against buying a book and working on the exercises?
I don't know about krimeet, but OP didn't even say he was using an IDE. I've always used Netbeans (which would tell me that nextline does not exist), and can't say anything about others, but it's possible he's using an IDE which doesn't scan for those errors.
Tamrix, could you recommend a book with exercises? I have a heard a couple books mentioned, but just curious on your opinion. Thanks!
There's really two things to learn when it comes to learning programming: * problem solving * communication with a computer The problem with those two things is that I learn them in entirely different ways. Problem solving is best learned by actually solving problems. I need to do something, and I don't have adequate resources, so I squint until a solution enters my mind. If somebody hands me a pile of stuff and asks me to accomplish some task with the stuff, any solution which accomplishes the task would be acceptable. Language, on the other hand, is not learned in the same way. I learn nothing about languages by somebody throwing pile of stuff (dictionary, an alphabet, pronunciation guide) at me and demanding, "say something coherent now." Instead, I learn languages by: * observing others * copying observations * being told that it's wrong (and sometimes why) * attempting to fix it * repeat all, many many times My problem with text books is that they confuse the two, or maybe that they have to appeal to all the audience to teach both. For myself, I don't require a lot of extra training with problem solving. Communicating with a computer, on the other hand, is something I can't do well. What I need in order to learn communication is short and simple things I can copy and then be told why they're right or wrong, then to move on, many many times. My problem with textbooks, with respect to this, is that they don't have a surplus of examples that I can pattern match with. In books there will be maybe 50-100 full sentences (compilable examples), and a lot of fragments. It's easy to understand why, of course. Full sentences take up lots of space, and space in books isn't cheap. What I wish I had were a lot of coding examples, written by different people, solving the exact same problem. For these reasons mostly but others as well, the solutions to the exercises are more valuable to me than the actual exercises. Or more precisely, the way the solution is phrased. But whenever I'm in a class the teachers always have strong misgivings about code sharing, and I can't seem to find a website with a lot of examples easily accessible but under similar umbrellas and little noise. What I like about this particular website is that it has almost exactly what I've been looking for. Lots of examples of full sentences, organized in very closely related topics, with little accompanying fanfare. I hope this makes sense...
I'm a Java developer and haven't seen or used an applet in several years. Nobody uses them. Don't worry.
This is beautiful. I've wanted to get into OpenCL programming, but haven't had the time to sit down and work through it all. I think this gives me a quick and easy way to get my feet wet without having to take the full plunge just yet :D
You're really going to have to give more information. Sounds like you're asking /r/java about your problems converting a word document to PDF. I swear that the biggest problem with people asking questions on the internet is that they're of the form "It doesn't work; what do?" (entire question)
I am also just starting off in Java. The program my teacher has his students use is called [BlueJ](http://www.bluej.org/) and it is extremely beginner friendly. It has a very functional syntax that alerts you to programming errors you make.
A great book! No, a *GREAT* book!
[This](http://obscuredclarity.blogspot.com/2009/11/hello-world-java-web-application-in.html) maybe?
Sounds like you're running "java Filename.class" It should be "java Filename" (Without the ".class")
Every programmer should have to do three months of (real, professional) beta-testing or quality control before touching code. Really changes your way of thinking!
I figured out my issue, it had to do with the directory structure for packages. Thanks for the help.
TL;DR: - Java is lacking any long-term planning, multiple features get thrown in without having a look at how they interact in practice. - Some of the bad decisions were caused by the lack of resources compared to Microsoft .NET, not because Sun was lazy. - Scala is an excellent alternative to Java. - Threads are too expensive in Java. - Segmented stacks would be a great way to deal with StackOverflowExceptions. Money quote: "If I were working on the VM and had my choice of language to use, Scala would be very high on my list of preferences."
Not at all. When was the last time you encountered an Applet on a web page? We stopped using them almost 10 years ago, and they never took off to begin with. Now flash is a different story, but if Microsoft puts their weight behind HTML5 in addition to Apple, perhaps things will change there too.
&gt;Threads are expensive in Java, and the reason you pool them at all, I disagree that the *only* reason to pool threads is because of their cost. A ServiceExecutor provides useful overall management of threads (clean shutdown, Future management, max number of threads) and it would be useful even if threads were cheap. 
Look into OSGI module system. The basic idea is that your application runs inside a container which then dynamically loads and unloads modules, without the container having to be restarted itself. Modules can have dependencies on each other, can export a public interface etc. I believe one common implementation of OSGI is Apache Felix at http://felix.apache.org/site/index.html
It's all fun and games until you want to separate presentation and data access into separate projects, unit test your code that consumes the generated code using mocks (static initializers, aaaaaaaargh!), or use something other than an RDBMS for your data storage. Spring Roo isn't necessarily bad, but it has a very, very narrow focus.
Are you having problems editing PDFs? Are you trying to change a word in a PDF to another word? That's a big mistake and probably not doable.
Thanks for the tip. I didn't see this OSGI stuff before when searching. I'll definitely look into it more. 
upvote++;
Thanks all. Just wanted to make sure the language I decided to learn wasn't the "wrong one"
This subreddit is so inactive that the questions don't really bother me. And sometimes they can lead to learning about interesting libraries.
[/r/learnprogramming](http://www.reddit.com/r/learnprogramming) is a great resource for those learning Java or any other language to post questions. Perhaps you can try to redirect the questions that way so they get a less critical response. I agree with Feuilly though, I learn new things all the time when reading the comments to Java questions, so I don't see how they can hurt.
There is not nearly enough information to answer this... There are probably countless ways to accomplish this. But trying using an Interface, a property file listing the modules that implement your interface, and the ClassLoader to load it into memory. 
&gt;there seems to be much more "how do I..." self help posts School just started back up for a lot of people. 
I don't mind the questions either, so long as they aren't blatantly asking to provide solutions for homework - especially if the question is really easy, or something that could be easily found on google.
++upvote;
I'd like to see more posts about new projects or interesting features people find. ElasticSearch is an example of one that I found out about recently by chance. 
upvote += 1;
Well, this subreddit is for "Anything related to Java", so it's fair game imo. 
exactly what i was thinking!
iText?
Maybe that subreddit could be linked to in the sidebar?
I was going to suggest that a poster move their question over to [HomeworkHelp](http://www.reddit.com/r/HomeworkHelp/) but seeing as I'm subscribed to both I didn't bother. A link at the top might be a nice idea though if we ever start getting too much traffic.
http://openjdk.java.net/projects/jdk7/features/
upvote --&gt; 0;
upvote = upvote + 1;
int upvote = 1;
You should have posted it, then.
Anything and everything to do with dates and date calculations. 
I sound off/disagree/call you an asshole/whatever below! edit: have an upvote for a good subject that I'm evidently impartial to.
I'm with you. Adding more java subreddits would just further fragment java programming on reddit...as it is, 1 page of /r/java takes you back like 1 month. Is there really information overload?
Anything to do with unsigned integers
I don't even mind helping with homework if they have obviously put forth some effort and just can't get over that hump. If they post code that they have already and for the life of them they can't figure out why it won't compile, it doesn't bother me at all.
[This](http://thedet.wordpress.com/2011/01/23/guice-2-0-multibinder-java-serviceloader-plugin-mechanism/) is quite a simple solution. You can then add new modules to the class path and they will be discovered when the program is restarted. Also gets you started with a nice DI framework if that's of interest. 
Look up jodatime. A far, far better implementation of date/time than the standard java libraries.
I've noticed that if a post is a pretty blatant "do my homework for me" request, it gets downvoted with the quickness. However, with how inactive the subreddit is, it still sits on the front page a while.
I don't think this is limited to java. Dates are just sonsabitches with all of the different formats/time zones/exceptions to the rule/etc.
A hello world!
I am new to programming. What is the problem with unsigned integers?
Communicating with webservers.
No it isn't! 1) Copy and paste: class HelloWorldApp { public static void main(String[] args) { System.out.println("Hello World!"); // Display the string. } } 2) Enjoy.
creating memory leaks
Java doesn't have them. You can fake them with signed integers, but that can get quite ugly very fast. It makes some algorithms that rely on unsigned integers unnecessary complicated when implemented in Java. 
Prior to Java 7: copying a file. Not hard, but much harder than it should be.
I found this subreddit not too long ago and have been reading it ever since. I'm just barely beginning my adventure in learning java (I just started learning about methods two days ago). Hopefully, I'll be able to contribute something of worth to this subreddit at some point, but I'd be glad to see some guidelines of what should/shouldn't be posted here.
I think java is particularly bad. Take this example in ruby require 'date' a = Date.strptime('2011-09-16', '%Y-%m-%d') b = a - 7 puts b And compare to what the Java code looks like.
Thank Evolution there's Jodatime.
Various java versions of this may be slightly more verbose, but they would be conceptually the same.
Shooting yourself in the foot. A language that prevents you from doing this easily prevents its adherents becoming excellent programmers.
so what does (date) - 7 mean? 7 minutes earlier? hours? days? That doesn't seem very intuitive... calendar.add(Calendar.HOUR, 7), however, makes much more sense.
ThreadLocal caches, File.deleteOnExit(), private final static X = new byte[32768], misuse of Vector....