Let's discuss the usefulness of *interfaces* in terms of cars. Because most cars have a like set of human *interfaces*: steering wheel, gas peddle, brake peddle, turn signals...etc most everybody can hop in the driver seat of any given car and operate it without learning any new skills or changing behavior. If each car had a significantly different human *interface* the learning curve required to operate a new vehicle would be much higher. &amp;#x200B; Now to correlate this to java. Interfaces allow dependent code (like the human driver) to interact with (drive) various implementations (different cars) without requiring modification. Now consider... public interface Car { public void start(); public void stop(); public void accelerate(); public void brake(); } public class Honda implements Car { ... ... } public class Toyota implements Car { ... ... } public class Kia implements Car { ... ... } public class Driver { private Car car; public Driver(Car car) { this.car = car; } public void startCar() { this.car.start(); } public void stopCar() { this.car.stop(); } ..... } The Driver class can be handed any of the implementations of the Car interface (Kia, Toyota, Honda) and interact with them the exact same way even if how they work eh...under the hood...is vastly different. &amp;#x200B; &amp;#x200B;
It's super easy. Get an API code from Google: https://cloud.google.com/maps-platform/pricing/ Try out some of the sample URLs in your browser with your API code. You can see the data it returns right in your browser. ...and watch some YouTube videos on RESTful services. 
try [javax.io](https://javax.io) an experiment of coding assistant, only support java8 at the moment.
It looks like in your [submission](https://www.reddit.com/r/java/comments/b7j9gf/flux_limiting_simultaneous_downstream_db_reads/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
There are no specific rules on how to use rest services, but there are some guidelines which makes it a standard practice Coming back to your question Why they are used? And what do they do? Let's say u have a consumer who rely on your code. One way is you can just share your jar with the consumer, but the drawback is you will need to share the jar everytime you will make changes. So here exposing your code as rest service is a good idea, as you have just shared the endpoints or url's with the client, you can make as much changes in the defined endpoints or url's without concerning the client How to I practice them? As it is a saying the more you code the more you learn, but here are few suggestions which can get you started 1 understand the rest methods, when to use what In general we use GET, POST,PUT,DELETE 2 understand HTTp Status codes, it helps you design the logic. 3 Naming convention for resource based URI 4 if you are curious on knowing how to check if the API is fully Restful, understand the basics of Richardson maturity model. 5 Understand HATEOS 6 After you are done with these basics, if you intend to go in depth you can refer Jax-rs specification. I tried to keep it as short and crisp as it can get, if you want to know more,let me know. Cheers, Prahsant 
Examples help quite a bit. I have a hard time understanding concepts without the "why". Like, okay, they're "`class`" methods... do I need these `class`/`static` methods? When do I need `static` methods? At this point, it's just memorization: "static methods are class methods". I would give *some* kind of example: A `User` class might have a static method that returns the number of users for your application. It wouldn't make sense for all `User` instances to have this information, because it pertains to the `class` instead of an instance of the `class`. I know OP must know this, since (s)he is capable of using them, but having an example handy goes a long way.
My favorite example is to refer to the Math built-in class. All its methods are static - you don't need an object with properties to keep track of stuff when you're just trying to get the cosine of an angle. But if you have an instance of the "Mario" class, and Mario takes damage, then you need that particular Mario to know "Hmm, am I big-sized or small-sized? If I'm big, make me small. Otherwise if I'm small, I die". If running the method requires you to know more about the object, it's not static. If it's all in the parameters, and running it on any instance of that class would always be the same (There are never two different math's), then it should be static.
Interface is a specification. And the vendor provides the implementation. For example - An ATM machine has some features like withdraw, deposit, balance enquiry and many more. While designing these features, ATM service provider described these methods in an interface. Public interface ATMService{ void withdraw(double withdrawing Amount,long accountNo); void deposit (double amount,accountNo); double getBalance(account No); } And they are expecting it's implementation from some vendor. The reason it is said code to interface rather than the implementation, is because we are invoking the method through interface, later on if there is some changes in the implementation or if first implementation was in .net and now they want in JAVA,only the implementation will be changed, ATMService won't be bothered about it as it is communicating with interface and not the implementation. 
It looks like in your [submission](https://www.reddit.com/r/java/comments/b7jl77/does_anyone_know_how_can_i_get_the_2_tables_at/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Good question. University level Computer Science programs are often great about teaching the fundamentals of how computers work but absolutely dreadful about teaching what tools and principles companies actually use. There's a gap between the academic side and the practical side. REST APIs are something used by almost all companies that have a modern technology stack and aren't too difficult to understand. **REST services as a back end** Your most common use of REST services is going to be as a backend to a website performing simple CRUD (create, read, update, delete) operations on the DB. &gt; Example setup for a web service &gt; UI &lt;--&gt; Backend application &lt;--&gt; Database * The rules on how the UI and backend communicate is the API. * The service on the backend that receives and responds to requests from the UI is your restful service (assuming it follows certain [REST principles](https://en.wikipedia.org/wiki/Representational_state_transfer#Architectural_constraints)). * Your API endpoints are the URLs where the back end is listening for messages from the UI. *Note: I am using "UI" to represent the client/consumer and "backend" to represent the REST service. These could be any two programs acting as a client and server communicating via a RESTful API.* **Endpoints** https://api.coindesk.com/v1/bpi/currentprice.json That URL would be an endpoint. reddit.com or reddit.com/r/{subreddit} would be an endpoint for Reddit. That is simply the destination the UI will send the message to and the rest service will then have an entry point into their code right there. So as soon as your browser request information from reddit.com/r/java, reddit's server can begin grabbing reddit posts and send them back to your browser as a message that your browser will render into information/graphics on your screen. ** Request operation There are a handful of standard request methods that can be made by the API consumer (UI in this example) to the rest service (back end). The 2 most common are GET and PUT. * GET - A request to *get* information from the rest service is made. * PUT - A request to *put* information into the rest service is made. **Simple GET example** https://api.coindesk.com/v1/bpi/currentprice.json If you go to that url, coindesk.com will provide your browser about the current price of bitcoin in a JSON format. That is your browser making a GET request and displaying the response. [Most browsers will let you look at the individual requests being performed.](https://imgur.com/CC1DLpq) All you have to do is click the URL and when the browser makes the HTTP request, the browser sends a message to that url. That URL is made up of the body of the message and the headers. For GET requests, the header tells the url that the method is a get request and the body is empty because its not used for GET requests. If you were to submit information to a website (for example if you change settings on your reddit account) and clicked send, your browser would send a message to a specific url at reddit.com/put/example/url. The headers on the request would tell reddit that this is a PUT request and the body would contain the input data. **Spring and Rest:** Spring is a framework that is used at the vast majority of Java based software companies. Java developers often use Spring to develop REST services, but it can help you implement [tons of other functionality often necessary for an enterprise (business) / real world applications](https://spring.io/projects). You may have spent years learning about Java and never touched Spring. You're likely going to want to learn at least a bit about it as you move towards a career developing Java applications. [Here is an official "Getting Started" guide for building a REST Web Service using Spring](https://spring.io/guides/gs/rest-service/) that I'd recommend you try implementing if you have a free hour. Its a good, mostly straight forward start. **NOTES** * RESTful web services - The web service is called "RESTful" because it obeys rest principles. I clarify this because their are other types of web services that people may try to compare rest to, such as SOAP web services. However SOAP and REST are not directly comparable. SOAP is a protocol used by web services. REST are principles that web services may obey.
The easiest way to become familiar with interfaces is to, for now, not worry about creating your own, and just concentrate on implementing existing interfaces in your code. You know how you can iterate over an ArrayList like: for (member : myArrayList) { If you have a class with a sequence of child objects, you can make your class work in a `for` statement too, by implementing `Iterable`. Do you want a List object to be sorted with `Arrays.sort()`? Implement `Comparable`. How does this work, since the people who wrote these language features have never seen your custom objects? These features uphold one side of a contact. `Arrays.sort` says, “as long as an object has the method `int compareTo(T o)` for some type `T`, and that method returns a negative number when `this` should come before `o`, a positive number if `this` should come after, and `0` if it doesn’t matter in which order they appear, I can sort any sequence of that object.” Your end of the contract is to write that method, and to tell java that your object has that method by adding `implements Comparable` to the class definition. Now your object is sortable. You didn’t have to write any sorting yourself. In fact, as java changes from quicksort to modified-quicksort to predictive-modified-quicksort-or-merge-sort to whatever’s next, you don’t have to change anything. Eventually, you’ll be writing some utility method that calls `detoxWeevilClowns` on your `BudgetFleaCircus` class, and you’ll realize that method would work for object with a `detox` method, and so instead of taking only `BudgetFleaCircus` as the argument type, you’ll take `Detoxable`, and now you’re the one offering the contract. 
It's handy for dependency injection. If I have some code that needs to findCustomerByName I could have a CustomerFinder interface with that method and I'd give my code an object that implements it and the code can just trust that my DatabaseCustomerFinder can be swapped out for a RestServiceCustomerFinder and I don't know or care. And then for testing I can swap in a FakeCustomerFinder that pretends to have looked up a customer but just returns whatever test data I want to work with.
Static creates a global variable or function that is allocated to the heap immediately. Because of this you can call the variable or function just by referencing it's object type/class
Lots of good answers here. I'll only add that, while a class can extend only one class, it can implement many interfaces, thus allowing you to "bolt on" more functionality. To use the car analogy someone mentioned, what if you want a flying car? Then you could implement both the "Drivable" and "Flyable" interfaces, allowing you to include the same object in a List of either type. 
Static methods aren't class methods Class methods are methods on a class object Static methods are functions attached to a type
But this seems to highlight a peculiarity with Java than illuminate a language feature. The math class is just a namespaced collection of functions. Is that what static is? Not quite, as it ignores the partially shared namespace between static and instance members. 
Ok, thank you. I wasn't aware.
Proper class methods are one of the things I missed the most when moving from Objective-C to Java.
It seems more straightforward the longer you code. I'n a few years you will think this is stupid simple. In general i find abstract classes more useful, they are basically interfaces with more use imo. But I'll try to give a realistic example that we used on our last project. &amp;#x200B; &amp;#x200B; We had about 10 microservices (tiny java applications) written by offshore that contained a lot of shared code. They each had the following requirements. &amp;#x200B; &amp;#x200B; 1. Read a JSON from kafka(text messages) and parse it to a java object 2. Log a unique key (debugging purposes) 3. Catch any error thrown and either retry or log the error and continue. 4. Report some shared metrics to our monitoring solution. (Prometheus/Grafana) 5. Do Business logic (field x + field y, save to database, or maybe something more complicated with 10's of fields) &amp;#x200B; Now the business logic was mostly unique for each of the 10 services. But that was maybe 1/2 the code. The rest was copy and pasted everywhere. This meant if we wanted to change the "shared" code or add a new service it was a pain in the ass. It might not sound like much but trust me it is after a few years of people adding more and more microservices. &amp;#x200B; So what i did was combine 1-4 into a shared class. Some of it I could not explicit code. For example the unique identifier. These are different messages. There is no way for me to know whats important and whats not. (ex. customer name, address or maybe car, model, VIN). &amp;#x200B; Reason for an interface: But If i can CALL a method that each microservice is FORCED to implement that will take in the business object and is FORCED to return a string. I dont really care what the string it. I can take the string and log it, save it or whatever else. This MAKES the microservice write a method to do the job i dictate. &amp;#x200B; Reason for an Abstract class: After I FORCE the programmer to implement a JSON -&gt; Object method to unmarshall the json and FORCE the programmer to write a unique key for the message. And what happens if the database/network goes out when they are trying to send information to the database. They should retry until the database/network is back online. But we have 10 microservices. I wouldn't want each service to do its own retry logic. It would basically be all the exact same, However if in my parent class i TAKE CARE of that for them they don't need to worry. They can simply code whatever calculations they want and not worry about it. &amp;#x200B; Here would be the psudo code: &amp;#x200B; class SharedServiceCode { parentMethod(String json) { T javaObject = unmarshall(json) logIdenfierForDebugging(javaObject) try callBuisnessLogic(javaObject) catch (DatabaseException e) sharedRetryLogic(e) catch (AnyOtherException e) someOtherExceptionLogItAsError(e) finally reportMetricsToMonitoring(javaObject) } private sharedRetryLogic(T javaObject) { // shared stuff } &amp;#x200B; private reportMetricsToMonitoring(javaObject) { //shared stuff } } &amp;#x200B; then a microservice would extend/implement this &amp;#x200B; &amp;#x200B; class microservice1 extends SharedServiceCode { @Override private callBuisnessLogic(T javaObject) { //unique stuff } &amp;#x200B; @Override private T unmarshall(String json) { //unique stuff } } &amp;#x200B; &amp;#x200B; Now about half the code is prevented from being duplicated . However this adds up to be more and more for every microservice addes. Also this means the less you need to test and make sure if coded correctly. It might not seem like much but this can be a BIG deal. I work with developers with 5+ years of exp that will copy and paste instead of sharing code. &amp;#x200B; &amp;#x200B; More specifically to answer your question an INTERFACE is used when you need to delegate to code to do something specific that you cannot do in a shared way. Maybe you have a whole lot of ANIMALS and they each make a noise but you dont know what that NOISES is. &amp;#x200B; So you might force them to override a method called makeNoise(). Then they can return a String of the sound they make. &amp;#x200B; &amp;#x200B; &amp;#x200B;
I'd try to explain it by saying that static methods don't belong to any objects of your class. Anything `static` is just part of one single _global_ object for your class.
Last I heard, there is no "Java" in Javascript, and this is one of the reason.
Reddit formatting maybe sucks ass, but just indent every line in a block of code by at least 4 spaces and it formats nicely :)
I thought that was the plan, after all the methods being marked as deprecated and the new way to clean GC resources has been introduced (java.lang.ref.Cleaner). That by next LTS release they would be gone.
Static methods are basically functions living in a namespace (the class).
[https://imgur.com/a/WG0JYVw](https://imgur.com/a/WG0JYVw)
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/UzjVi6R.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20ejskpqp) 
Basically, asking for examples of REST services is like asking for examples of Java applications. A REST service is, put basically, an endpoint that you can post data to using RESTful methods (GET/POST/DELETE/UPDATE etc, using HTTP headers/body). A similar alternative to REST is SOAP, which transports a data array of sorts, usually requiring authentication and so on. All are essentially solutions to providing an application with data - normally for API purposes
Github has a nice REST Api, another good one to play with is the one with all the characters from the Marvel universe. 
Also: Static methods are bound to the defining class and thus can not be overridden with inheritance.
Static methods are what they say, 'static' they won't change, whereas non static methods and variables either are, or contain ways of being altered in some way e.g. a static method could be a username, as it won't ever change. but a non static method could be a lunch menu, as certain days of the week could alter the menu to show different items. &amp;#x200B; &amp;#x200B;
Often, interfaces are used such that the implementation can be switched in unit tests. You would create an interface that represents an external source; a database, an API, etc. At runtime you would use the 'real' implementation. But unit tests should be fast, and should not rely on or use real external systems. Also, you have no control over the real system. So you would create a stub implementation for use only in tests which you have full control over.
So many good questions, not sure if need another one, but just to say: Interface is a promise that object implements some method(s) and when referring to an interface variable, you don't care what it is and what is exact implementation. Everything else is a consequence of this: \- Object can implement numerous interfaces \- Implementation can be anonymous or even lambda \- You may pass different objects if some method requires interface as an argument \- Very (I mean nearly totally) different objects can implement same interface, it has no restrictions on actual structure or purpose of those objects (unlike inheritance) \- Testing! Soo much easier to mock interface. \- many other useful things, you'll see them in any big enough and good enough project (and I believe, most of real-world projects are like that) &amp;#x200B;
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Pron98 is an Oracle employee working on OpenJDK.
Excellent advice, good example.
One place that has come in handy for me at least is essentially creating 'plug ins' in an application. One application I made recently had two types of plugins, one for collecting data from a source, and one for a data store. So the application itself only dealt with a "Datasource" which was an interface that defined functions like "GetDataSince(timestamp)" and it would loop through a collection of these, but each one was a different class implementing the "Datasource" interface that would handle the specifics of talking to each website or backend system.
In Java, deprecated means discouraged; when there's a plan for a deprecated class or method to be removed, they are marked as "deprecated for removal" (see [here](https://openjdk.java.net/jeps/277)). `Thread.stop` and `finalize` are marked deprecated, but not for removal. I hope `Thread.stop` will go away, but I doubt `finalize` will any time soon because many programs use it (Java still has a strong commitment to backward compatibility). Also, and I know I'm repeating this many times but I think it's important until people internalize the new release model, OpenJDK has no concept of LTS releases and all feature releases are equal in terms of quality and the effort put into them. LTS is a service provided by JDK vendors, and even though most (though not all) follow Oracle's lead in the choice of releases for LTS, which versions are offered LTS by some companies is separate from the JDK's development process, which takes place in the OpenJDK project.
As an example of statics, I use a construct that new learners use from day one: System.out.println() Learning what each part is (System, out, println) is helps the student understand various topics (including statics)
https://docs.oracle.com/javase/tutorial/java/concepts/interface.html
static is evil. I was taught static method. But it was a mistake. It is a mistake to say static method are useful. Static method most often than not imply static state and static state is evil. Static is a remain of procedural programming. Its pure cancer in OOP. These days, I only write static methods which are supposed to be inlined. No a single static variable. It took me 15 years of practice to root out statics.
still not enough for me. Eclipse has some killer features that keep me using it. I have a 5 screens computer. Eclipse customized perspectives... i can easily switch from debug mode to write mode to code review mode... incremental compilation does not work well in IntelliJ. It was not designed for it while Eclipse was. My typical Eclipse workspace has dozen of module/projects.. all incrementally compiled. i can spot breaking changes in seconds with the problems view. 
Mark wears two hats. He's [Chief Architect of the Java Platform Group](https://mreinhold.org/), the group at Oracle that develops the Java platform, and the [OpenJDK lead](https://mreinhold.org/blog/openjdk-bylaws). In that talk, he speaks using both (as you can see seconds later, when he says that LTS is an Oracle thing). Ultimately, most people may not care (and maybe don't need to care), but it's important for me to point out, at least until people are familiar enough with the new model. The main reason is that some people think that LTS releases are like major releases and more care is put into them, while the other feature releases are "preview" (which leads to comments such as the first one in this particular thread). So it's helpful to point out that the *development and planning* of the Java platform takes place as part of the OpenJDK project, and LTS is a service provided by Oracle and other vendors *on top*. An additional point of confusion is that people mistake the concept of LTS, which is mostly about *support*, with the notion of patches. While the former is a paid service that helps fund the development of OpenJDK, the latter can occur as part of OpenJDK's update projects (but not necessarily so; Oracle, Azul, and Amazon provide patches outside of OpenJDK). People may find that even more confusing, but I think they can (and should) ignore all that, as the ordinary OpenJDK feature releases are regular, completely free and open, centralized, and make the upgrade process easier and more straightforward than it's ever been.
What about private methods of a class, should all be static when possible?
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
With the new syntax, is the word 'case' really needed?
Even better: 1 Million 2 Million 10 Millionen 
&gt; University level Computer Science programs are often great about teaching the fundamentals of how computers work but absolutely dreadful about teaching what tools and principles companies actually use. This is because they are not a trade school. They teach computer science which is far beyond just programming. Anyone with the aptitude to get a comp sci degree should find picking up programming concepts for use in the corporate world trivial.
Have a look at the specs: https://docs.oracle.com/javase/specs/jls/se11/html/index.html
DeltaSpike is not Java EE ;)
It looks like in your [submission](https://www.reddit.com/r/java/comments/b7or9c/need_help_on_importing_subfolder/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Just offering an alternative explanation which isn't super accurate, but might help them get their heads around static methods. They are global methods which can be called from anywhere. They're not attached to any particular object. Skip the explanation of private static methods, and access to private class variables for now and let them digest that for awhile.
I hate that viewpoint. We can't only have universities teaching purely theoretical computer science and trade schools only teaching the latest tools without teaching concepts. There has to be a middle ground. Realistically the vast majority of students attending a university computer science program is doing it so they can start a career working with software, so maybe we should be teaching some real skills. The program I graduated from had an elective course called software engineering that was one of the most sought after courses because in it you learned practical skills like working with RESTful APIs. Hell the very well respected program I graduated from didn't even require a student to have ever had a program interface with a database. Really the practical skills could have been my entire junior years coursework and I would have loved it. Or at the very least the theory behind databases and API design if we want to keep this purely academic still. Frankly I don't think that's okay. Our universities have career fairs and career centers to help us transition from student to professional. They take pride in things like our starting salary and salary after 5 years and make these numbers available to prospective students. They clearly know they're preparing us for a career, so how is it still okay for them to pretend to be a bastion of purely theoretical computer science.
&gt; Static methods most often than not imply static state and static state is evil. Oddly enough I like to use static methods to imply that they are stateless/purely functional. A bigger concern would be non-final static fields, alhough even a static final mutable object is still a bad time waiting to happen. If I really need "static state" I would use a singleton instead.
Good answer. To understand what a static is, you need to understand the difference between a class and an object. Once you understand that, statics are self-evident.
Static methods/properties are common to every subset of *instances* of a *class*, including the empty set. All vehicles have a top speed, that is individual to each one, yet the *speed limit* is applicable to ALL vehicles, even if they don't exists yet. The method getSpeedLimit(RoadType: thisRoad, Jurisdiction: thisJurisdiction) could be implemented as a static method on the class Vehicle. (It isn't an intrinsic property of a RoadType, or a Jurisdiction, but is a property of ALL vehicles travelling on a specific RoadType in a specific Jurisdiction). If we haven't even built the vehicle yet, we STILL know its speed limit, even though we don't know its top speed. Yah, maybe a bit contrived
Yes, it is required.
If explaining the theory fails: They are the same, except 1. you cannot use `this`, and you cannot access anything non-static of the enclosing class 2. you cannot override them. Honestly, I'm a bit surprised that static is hard to explain since it's basically the semantics of procedural programming languages. I rather had sometimes explaining the semantics of non-static stuff...
Yeah, why not. It's comfy to know that something is `static` because you know it likely won't mess up the state of the calling instance. Except it gets passed `this` via a parameter. But that seems like a code smell because it's the entire purpose of instance methods. 
On top of that, even if it would be possible to overload static methods, there would still be the problem that Java does not do dynamic dispatch on method parameters, i.e., only the static type of the argument is considered for overloading resolution. It does dynamic dispatch only on the implicit `this` argument.
It looks like in your [submission](https://www.reddit.com/r/java/comments/b7qzyp/pure_java_minesweeper_gamesolver/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
It looks like in your [submission](https://www.reddit.com/r/java/comments/b7rlm9/is_there_any_difference_between_person_x_new/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Maybe we just talk past each other. I didn't mean if the compiler produces an error or not, i meant it as a theoretical lexer question. Would it be possible to write a parser that parsed switched statements that didn't use the word 'case' to distinguish the different parts of the switch statement. If the answer to that question is yes, why is 'case' still there? 
Ah, I see what you’re asking. I’m sure it would be possible. I don’t remember if ditching the `case` part was brought up or not during discussions. I don’t mind it, but I’m sure some people do haha.
singleton is an anti pattern IMO. its lazyness.. You cannot properly unit test applications that use singletons all over the place.
Correct. In addition, a flag is required *at run time* to indicate "I understand that my code compiled with a preview feature may fail to run on future releases." The reason is that a preview language feature might depend on library or JVM features that are essentially also in preview.
It looks like in your [submission](https://www.reddit.com/r/java/comments/b7s9rb/architectural_discussion_handle_very_large_json/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
(Dr Deprecator here.) It's true there isn't a *plan* to get rid of finalization. We've kicked around various ideas for getting rid of it, and we've even mentioned a few of them in public too. This is more of a sketch of what the future might look like than a plan, though. Removal of the use of deprecation from JDK libraries will likely continue. We might also file bugs against various popular external libraries if they use it. However, last time I looked, there was pleasantly little use of finalization "in the wild." I think the reason is that using finalization has been discouraged for quite a long time now, although it was only recently officially deprecated. For example, *Effective Java, First Edition* (2001) has "Item 6: Avoid Finalizers". I can imagine at some point in the future an option (probably one of the `-XX` family) will be added to the JVM to disable finalization. And then at some point later the default will be switched, so that finalization will be disabled unless explicitly enabled. I can also imagine that we'd put in some hook, and maybe issue a warning or a JFR event, if the VM loads a class that has a `finalize()` method defined. We might eventually even remove `Object.finalize()` itself, though that doesn't buy much besides a source incompatibility. That is, any program that declares @Override protected void finalize() { ... } will stop compiling if `Object.finalize()` were removed. The big change would be behavioral; the finalize() method would simply not be called, and any programs that depended on it being called would break. (Arguably they're broken already. I'm at least aware of tests that use finalizers to make sure that objects are no longer referenced.) Also, at some point along the way, of course, the deprecation of `Object.finalize()` will be elevated to be deprecated for removal. No doubt this will take several years. I don't think it will take a decade though. Like I said above, use of finalization has been discouraged for a very, very long time, and I don't think there were ever that many uses of it out there.
I have no idea exactly how LeetCode does it and my math skills are pretty bad, however... \&gt;...which is different from that one player beats another player. Not quite you can actually assume each player verse one another. If a player doesn't finish a problem and someone else does you can let that player beat him. If both players don't solve a problem you can have it as a tie. If both solved the problem but one had a better time, the guy with a better time can win.
Hey Doctor!
I assume it's stolen? 
Haha no it was purchased in a liquidation auction. I had no clue what it was as it came in a lot of several other items. I can provide proof and receipts to those who are seriously interested. Thanks
Maybe not, it’s a fairly old piece of tech, he could have gotten that in the electronic waste bin of his company ahah but still, without reliable source on its origin it’s indeed looks suspicious 
This is made to run highly specific java code. Anything that requires low latency. Maybe the nasa or any other aerospace company? Even though I doubt they’d use that. And as it was release more than 10 years ago, you’ll have more luck looking toward companies rather that is redditors to sell it. Or maybe contact Azul to get more info on its use. 
This is what I was thinking...honestly that’s why I’m on reddit, I really don’t know what companies to contact or any of that stuff. What I was really hoping for was to sell it to someone on here for cheap, and they can find a buyer and flip it, and make an easy $10,000. Thanks for your help though, appreciate it.
Last commit 1 year ago?
There's loads of stuff that makes these definitions hard. I've been teaching a friend Java and I've struggled with this distinction of static vs non-static. I wouldn't go near the word singleton, cause it's meaningless without some kind of deeper understanding. I wouldn't discuss class-loaders, cause it's not relevant. You likely won't even know class-loaders exist until you come into contact with hairy enterprise code in big servers.
No worries. Out of curiosity how much did you pay for it? 
I got it for very cheap, if it’s actually worth 60-85K haha
I love assertj - shame that this blog uses Kotlin given that this is a Java forum. 
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/programming] [PLEASE READ! FOR SALE\/NEED ADVICE: AZUL SYSTEMS VEGA 3 7380B](https://www.reddit.com/r/programming/comments/b7u6z2/please_read_for_saleneed_advice_azul_systems_vega/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
What's with the thumbnail
It's not 'actually worth' 60-70K. The only people who would buy such a thing are collectors. Especially considering it only runs a very specific kind of Java code, it is built to handle ultra-fast IO and lacks the heavy lifting capabilities of a modern Xeon processor. You could get a machine that kicks the shit out of this (and runs all Java code) for 5K brand new. 
You found a listing for a similar unit at 54k USD. That doesn't mean yours is worth anything near that amount. None of these have ever successfully been sold on eBay according to a quick search. If I list a tin of cookies on ebay for 54k USD it does not mean anything. 
I posted this to figure out its value...obviously we know that\^
What are you looking for ? What should it do exactly ?
Anything in general. &amp;#x200B;
Another vote for Eclipse here (been using it for over a decade). Once you get the hang of it writing your own IDE's is also fun (onto my 3rd java one. Based around code generation and more real time app / game focused).
TornadoFX for Kotlin
I'm not even sure why anyone brought up class-loaders. By the time you need that concept, you're Rod Johnson. 🙄 As for singleton, sure I get it. I've fixed my version with better words.
And exactly why did you post this here?
I like that AssertJ has better discoverability than Hamcrest, but it's at the expense of making it much much harder to make custom assertions.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
A nice UI library for various Material Design based elements by JFoenix can be found here: http://www.jfoenix.com/ and it's Github is here: https://github.com/jfoenixadmin/JFoenix
&gt;If the interface could be easily replaced by a 1:1 copy, what benefit brings the framework at all? Why should I use it? I'm not talking about the interface implementation - it is OK to use a tool. However, I don't see a benefit in tool providing the repository interface. There are few lines of code to be written. That you don't have to copy it all over the place. That you can build one reusable implementation for it. If we move our view away from the DeltaSpike implementation but to the Spring Data ones, you can use the interface as common abstraction between fundamental persistence operations for different data stores. It also allows you to do what you suggested: craft an interface yourself to only contain the methods you'd like to see as long as you stick to the same signatures. &gt;The repository interface in domain-driven design should be driven by domain, not by a tool. Every method in the interface should have a domain reason for existing. Otherwise, the design is not driven by domain, but by the tool. I agree and as just explained above that's sort of possible with alternative implementations of that pattern. I still fail to see how a framework that defines a hand full of fundamental CRUD methods is a \*real practical\* problem. Especially as all of the query methods are user defined and of course are driven by the domain. You end up with a few potentially unused methods, but how much of those do you have in your projects anyway.
I've been on off playing with griffon http://griffon-framework.org/ which has support for javafx. It is kind of fun :) I use netbeans mostly for home projects and it works pretty well with everything. It is more of a diy ide but that's nice in that you get to do it your way, not the jetbrains way. (I use idea at work though haha)
I'm missing my favourite: assertk. The comparison also doesn't go into an important aspect: extensibility with custom assertions (which I find is well done in assertk)
Thanks for sharing this! We use the JavaFX browser implementation to embed some more recent web apps in to our old client UI and have been looking for a long term solution. Will definitely look in to it.
I would suggest making this into a Maven or Gradle project to make it easier to run and compile. As for the business logic. Are you sure what you are doing in terms of probabilities is correct? In a scenario where there are only lots of 1's next to each other for example, the game will highlight some fields as more probable than others but I don't think you can really say anything in these cases.
It's correct. I've tested it against existing correct implementations. Keep in mind that since the number of bombs is known, the number of bombs used to satisfy a group of numbers does impact the probability. Consider if you have 3 1's and ~100 covered tiles as well as 20 remaining bombs. A solution to the 3 1's that uses 1 bomb permits 100 choose 19 distributions, while a solution that uses 2 bombs only permits 100 choose 18 distributions. 100 choose 19 is a much bigger number, so it's a lot more likely. Also, it's been proven that Minesweeper is NP-Hard. That is to say, it's a really hard problem with no easy solution. 
This is cool! Is there a sample app showing how to use this in JavaFX?
You can also check afterburner http://afterburner.adam-bien.com/
It looks like in your [submission](https://www.reddit.com/r/java/comments/b81wn6/introduction_to_jbpm/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
I was not able to build it on MAC, it is an old project but was unbuildable on mac os for a long long time.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
aka why is this program so slow
Do you have experience with it?
Currently the JCEF browser cannot be embedded in a JavaFX application. Closest you can get to is embedding it via a Swing node. But users have found that it makes the overall application very slow. The alternative to JCEF would be JxBrowser by TeamDev. It's not free, but you can obtain a free license for open source projects. Link to a related issue: https://bitbucket.org/chromiumembedded/java-cef/issues/163/povide-javafx-node-for-jcef 
Spring provides Flux and Mono. Is the featured article just another library like reactor core?
Hey man! Thanks for your reply. Previously I've thought about this, let's say there are 5000 programmers participated, then if I add No.1 beats No.2 to No.5000 and so on, it will generate 5000 \* 4999 / 2 match results to be applied by Glicko2 to update rating, which seems ridiculous. Before I posted this here I made a naive try and found the updated rating seems to be close to that of LeetCode, but I just tried with the first contest, yet there are totoally 130 contest and 89K participants totally till now, using this approach would not work, I guess. And thanks for multiple people suggestion and I was reading some projects in Github aiming to resolve this problem, and Microsoft TrueSkill2 seems promising, will have a look also.
Is there a 'Print' button?
IntelliJ does this already.
Depends on Graal Native, which in my experience can require a lot of tinkering to get apps to compile, including that it can't handle Kotlin coroutines.
Do you often/ever use it? And do you use it to document or analyse the code? Thanks!
Is there an offline/downloadable version available? 
Critique: Firefox is not supported and I'm not switching to another browser. Sorry.
It isn't a library, but a set of specifications that Microprofile certified servers will satisfy. To implement those specifications, they suggest to use [https://smallrye.io/](https://smallrye.io/) which is built on top of Reactor Core.
Not yet. This is a POC that browser can run smooth graphics to visualize complex software. Will add to the TODO list.
Only supports Chrome and Safari? Because the site is "not yet optimized" for other browsers? It would be nice if you could actually get product working on all major browsers before demoing it... But if I put aside my frustration as a Firefox user ;) then this looks like a perfect candidate to be published as a plugin for Eclipse Che. If you're unfamiliar it's a browser-based remote IDE with a front-end based on Theia. Server-side plugins are containerised so there should be no problem regardless of how this is implemented on the back end.
Okay I gues I’ll bite this potential april fools joke The users are better off not accessing any websites that still use java and require java to be installed. 
Thank you for the feedback! I had to limit demo to close relatives Chrome and Safari as other browsers require a bit of work to fine-tune the graphics. The Eclipse Che idea is great - thanks. Pardon my ignorance, is Che considered a mainstream platform or still a POC from Eclipse?
Thank you!
Doesn't support firefox? Nope.
Who cares 🤷‍♂️
Can't believe you haven't been getting more positive feedback so far. This looks like great work. Have you adding a feature to import from Github or something?
Nah not super mainstream, but I'd say it's a little more than a POC. It's just the only IDE I could think of that could host something like this as a plugin in a straightforward way. Unless it's all just JS on the back end? In which case I suppose you could also target to vanilla Theia, or VS Code, etc. Idk, not an expert on them.
Hmm FX now?
Firefox will be coming shortly. It seems to be a little slower rendering SVG though - news to me.
&gt;do you have any idea on how to apply Glicko here? This was the question I was answering. With Glicko algorithm there it is just a bunch of 1v1s. The multiple people suggestion was just me saying that if you want a bigger challenge... I thought you were trying to learn the Glicko but I am mistaken. You obviously are trying to make a system and want to use the best algorithm for the job. Now with your latest comment you now make it sound like you can go with any algorithm. So you have 130 contests, 89000 participants. You want to rank each participant in real time or have the contests already occurred? How does the contests work? How long is the event? Do you get to chose any contest to solve or does everyone go through the contests in the same order? One solution would be to rank based on match complete and if people have the same match complete use the average to rank them. You could give each match a single point. Person with the best time gets a whole point and everyone gets a percentage of a point (their time)/(best time). Though this would work best if all the matches were completed before hand because then you could find the best time right a way and calculate everyone elses. If this was real time obviously when a new best time would occur you would have to calculate everyone who completed again. You could for each match have a ranking. As people finish they get a point for the position they finished in. People who don't complete get point of total players. Then you add up everyone's points together. Then sort. Yet this way could run into problems because 89K points *130 (worst case scenario) is quite the number. Then sorting also would take quite a bit of time. Just another idea. With 89K participants you are most likely going to have them all stored in a database with various of information (like for instance what contests they completed). Like you said in your comment where it isn't really another player versing each other, I wouldn't use an algorithm that works like that then. Again I was answering your last question on how you could make Glicko work but I am not suggesting you go with those type of algorithms with this type of event. Also streaks don't really matter in this case, so getting the players in the right order at the start does not matter what so ever. Games like Rocket League want to get players in their right rank RIGHT a way. Otherwise, they will just crunch the competition over and over till they hit their actual rank. Or people will keep getting destroyed till they hit their lower rank. To do that you have to work on player's streaks and with Glicko methods it is very volatile at first but eventually as you get to your actual real rank it levels out. That's why most people who implement such algorithms have placement matches. Because you can go from gold to masters league in one game in some cases (obviously very extreme case but it can happen when starting out). In your case this absolutely doesn't matter what so ever. You probably already have the contests completed and have information stored on whether a user has completed or not the contest with their time. Trying to use glicko method for this doesn't matter (or really any other methods that are player verse player). 
Client- or server side processing?
I think it looks great, it's very fast as well to render &amp; use. :) Any chance of putting up the source code? Always interesting to look at.
Server-side. I don't know of any browser-side tech to support compilation. Any suggestions would be welcome.
I went to the website and it is showing me it doesn't support Firefox. I am curious what library you've used which can make an website compatible with Safari but not Firefox?
Lol. Why do you say this?Not everyone uses IntelliJ. This could be very much handy to them. Coming from a paid IntelliJ ultimate edition user.
Yes, FF is worse than Chrome in hardware acceleration. That could be cause of that. Thanks for working toward FF support though. 
Not that it matters much at all, but static method calls are the fastest in java (followed closely by private method and final method calls). This is because there is no chance for any indirection to be introduced via overrides. &amp;#x200B; ... But again, that doesn't really matter much as the JIT is really awesome and will generally optimize away indirection in most cases.
TornadoFX
Generating SVG may help if you are interested in going client side https://stackoverflow.com/questions/20539196/creating-svg-elements-dynamically-with-javascript-inside-html
No it is not a joke. While I know a lot of sites have migrated away from having to use Java client installed locally we have a lot of internal and external certainly sites that is it a requirement for. The problem I have is nobody is really sure of how common this is. I cannot just say dont use it when they have banking applications they depend on which are critical. You would be shocked just how much Java is still used in this way for applications.
Good job, I put in a 25 file project, got the message that it can only take 20 for now, and it rendered nicely! 
Very cool!
Just trying to be helpful to any IntelliJ users, they might not know IntelliJ has this feature built-in. 
Every once in a while but it is not a feature I use regularly. 
&gt; Our apologies... &gt; This site is not yet optimized for your browser. Please try Chrome or Safari. &gt; Thank you! jesus. wtf are you doing there to *require* chrome?
That really looks great! Have not seen any app rendering that as nice and smooth. I am kinda interested what you use for rendering. 
Why would OP require only Chrome or Safari? What year is this?
I had some performance issues so I went back to 2018.3.
Thank you! For efficiency sake there were no 3rd party libraries used (bye-bye jquery). Graphics is standard - HTML/CSS and SVG.
I was not planning on building standalone version. Can I ask how you would use it? Would you point it to the local project and view diagrams them as you code?
You could put the client code together with the backend in one jar and serve it from a local port. If you wrote it with spring boot it's quite easy.
How is it called?
Right click anywhere your class (or on a class in the project tree). Then choose Diagrams, then either `Show Diagram` or `Show Diagram in Popup`. If you choose `Show Diagram` then there are icons across the top so you can select to see properties, methods, constructors, etc. If you choose to show it in a popup then you can right-click on the diagram and choose `Show Categories` to get the same options.
Chrome is the only browser I have fine-tuned it against. But I'm looking at the log files - I'm missing on ALOT of Firefox visits. I'll get to it soon.
**TL;DR:** Stream.flatMap has a bug which means that it may give rise to incorrect results when used with infinite streams or takewhile/dropWhile. The article is short and worth reading if the issue interests you, but... I don't know who invented the fad of pronouncing things with one or few issues as "broken", but it's irksome (e.g. "[Optional is broken](https://blog.developer.atlassian.com/optional-broken/)", "[Java type system is broken](https://news.ycombinator.com/item?id=17565652)"). It's like calling your car *broken* because you don't like the colour, or the rear passenger seatbelt doesn't work. As an aside, David Cameron and the British Conservative Party were early adopters of "xyz is Broken" in their 2010 UK General Election campaign, where they deemed British society to be "broken". In an ironic turn of events, once elected they proceeded to realise that belief, giving the country both Austerity and Brexit, thereby bringing the country closer to breaking point that it's ever been in the last 75 years.
This is a really excellent implementation of a browser based modeling tool! It will be very useful when you are finished. I hope you consider turning this into an eclipse plugin.
this is crazy. to even think to add such code to your page in this day and age.
Easy there you make it seem like your browser is some sort of protected class.
you make it sound like it is an inferior class. and that's unacceptable.
&gt;Stream.flatMap has a bug which means that it may give rise to incorrect results when used with short-circuiting operations Fix'd
Support for Firefox don't build the web for specific browsers please.
I'd probably use it as a tool for documentation. Our application is huge and the team is small, so every bit of usable documentation that helps us to get back into a particular area's design when we need to enhance or bugfix is going to be of value. The reason I asked for offline version is twofold: 1) If I put in our API, I'm afraid to blow up the server running it, and 2) -- and frankly the key -- ours is a proprietary product, and my boss would have me out on my ear if I started posting our source code into some website -- no offence
if incorrect results aren't enough to label something as "broken", what's your cutoff for that word ?
If I had to start a project from all over again I would go with just kotlin and gradle, then roll my own frameworkey stuff. Tornadofx is nice but it got a few times in the way tho to be fair I'm having a rather larger application so that was bound to happen. That being said you want to keep an look at how tornadofx does stuff, you will learn a lot.
How do you explain static methods? Just three words: **Dont use them**. 
So a minor implementation issue is suddenly an API that is broken.... I wonder how the author would describe the original Java AWT toolkit. &amp;#x200B; &amp;#x200B;
Bicycles: [https://docs.oracle.com/javase/tutorial/java/javaOO/classvars.html](https://docs.oracle.com/javase/tutorial/java/javaOO/classvars.html)
Neat!
It works fine on mobiles, no need to user agent sniff
Asof Java 10 the Stream API had around 50 methods. This issue affects 1 method (and, I assume, its 3 overloads), only under specific and relatively unusual circumstances, and only for Java versions 9 &amp; 10. I suspect most users will never encounter it. I hardly think that this warrants calling the API broken.
You don't need to "install" it anymore. Just download and unzip it. Set the JAVA\_HOME env variable to point at the directory you used if you want it available for apps that use that, and add the bin directory to your path.
I've done that too, but the launchers all say it can't find JRE 1.6.0
Work is blocking the site currently but I am very interested in this idea so will check it out once I get a chance. As you say, the eclipse tools for this kind of thing are lacking. The only worry I would have as a user is that I need to send my source code to your server for visualization. If I were working on some OSS project I would be less concerned, but for proprietary software development I would be less than keen to use any tool that required sending source over the web to an unknown entity.
Ah right, then whatever app you're using needs a much older version - you will need to download it from oracle's website (assuming it's even available anymore)
[https://www.ghacks.net/2015/03/11/change-which-version-of-java-minecraft-uses/](https://www.ghacks.net/2015/03/11/change-which-version-of-java-minecraft-uses/)
It used to work with Java 8
Nice!
I can't do that for this [particular launcher](https://mc-launcher.com/special/minecraft).
JRE/JDK8 is still available for download - you do need to agree to the licence terms before you can download it, but it's definitely there.
This is 2019. I get it from a "my time is limited" perspective: http://gs.statcounter.com/ 62% Chrome 14% Safari 4%FF https://imgur.com/rqsIr27
Didn't they change it to where you had to pay for it now?
Well some of us are always behind enterprise firewall and pointing code to open world is not allowed. I had the same question about offline availability 
Pretty awesome indeed! Wonder what this does on huge projects like say Tomcat :P
Nice
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
I use UML diagramming in IntelliJ all the time. There are two modes, a popup which shows all the interfaces implemented by and abstract classes extended by your currently selected class, and another mode that lets you easily build UML diagrams with any classes in your project. I have found it works extremely well for code analysis, but since projects change so fast it is a lot easier to generate it on the fly than creating lots of documentation that goes out of date in a couple of weeks. One thing I like a lot about the diagram creation is that it can be driven completely by the keyboard. There is are keyboard shortcuts that will list all parents / children and then you can place the one you are interested in with the return key. You can also hit the space bar and include any class by name. The layout algorithms are also really good.
I know I've used openjdk 11 with minecraft 🤔
As someone who frequently used Java 8, I can tell you, that's definitely not the case. Just go to https://www.oracle.com/technetwork/Java/javase/downloads/jre8-downloads-2133155.html , accept the license agreement, download and install.
Looks great, what layout algorithms are you using?
See, this a quality r/java post. I wish there where more post where I could say this of. Instead of, can you help me with this NullPointerException, or new releases of CatFartController.jar
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Some apps, especially on Windows, come with crafty launchers or even their own JRE and might or might not allow you to run the app with another JRE. In the worst case you'd have to figure out the command line, which JARs to put on the classpath and which class contains the correct `main` method. Small caveat with using newer Java versions: we're having a little Python 2/3 situation going on right now. Most projects will eventually migrate and support Java &gt;= 11, but some might require breaking changes to do so, or might not have stabilized their codebase. Dunno what the Minecraft project is up to.
You could set up a Java applet and use Wireshark or the browser's developer tools to figure out what kind of URLs and mimetypes are used to load Java applets. Though it might be quite bothersome nowadays to figure this out. Better check whether that stuff is documented somewhere...
There's the requirements, it points to Java 8 download: https://mc-launcher.com/topics/00001
bookmarked
&gt; `ForkJoinPool customPool = new ForkJoinPool(42);` `customPool.submit(() -&gt; list.parallelStream() /*...*/);` &gt; [..] the size of the computation would remain in proportion to the common pool and not the custom pool uh uh, guilty
&gt; `ForkJoinPool customPool = new ForkJoinPool(42);` `customPool.submit(() -&gt; list.parallelStream() /*...*/);` &gt; [..] the size of the computation would remain in proportion to the common pool and not the custom pool uh uo
Next version is bringing new hardware acceleration engine.
[Stuff for JavaFX.](https://github.com/mhrimaz/AwesomeJavaFX)
Thank you! ObjectAid plugin for Eclipse does a similar job. You think it can be improved upon? Let me know!
Apparently the flatMap issue is only partially fixed: https://bugs.openjdk.java.net/browse/JDK-8196106
...right, but I see the point - that distribution would probably be different for developers.
Nashorn is deprecated in 11 even: https://openjdk.java.net/jeps/335
on Tomcat... it dies :) Yet with some re-design it might be able to visualize individual components. Thanks for the kind words!
A combination of Force Directed, Sugiyama and Box-packing depending on context. Thanks for approval!
Great to hear that. I only use Firefox, but don't follow the development path much. Shame on me but I am happy with FF.
What is your back-end built with?
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Seconded
IntelliJ too!
Look great!!!!
Hmm, if it's server side then what's with the mobile browser warning?
I have used Griffon in the past, I tried using TornadoFX but the stack traces were illegible and it would lag quite a bit, I'm using a combination of Micronaut, Mapstruct to bind models back and forth, and ChronicleMap for settings storage and data cache for an internal TIFF to JPEG and WebP processing program.
Comment was broken before fix
I made one! you can check it out : [https://plugins.jetbrains.com/plugin/12198-dark-jeff-theme](https://plugins.jetbrains.com/plugin/12198-dark-jeff-theme)
So cool, any chance to support Kotlin?
Thanks for the Java article
That is awesome! Any plans open-sourcing that tool?
LOL
Not many nations get a bloodless war of independence. Sounds almost too good to be true.
Support firefox please, but wow I'm upset I didnt think of doing something like this myself! Great work! Saved.
It looks like in your [submission](https://www.reddit.com/r/java/comments/b8e5ne/setting_snapshot_transaction_isolation_mode_with/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Java.util.Date laughs at your puny awt brokenness.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
This is mostly correct, however, instance methods can also interact with the static class state. This is especially true since every instance has reference to the class which they instantiated. ie every instance can call `Object::getClass`. This method will point back to the correct class even in the case of environments using multiple class loaders to define different versions of the same class namespace. The main difference of the instance (and what you alluded to) is that an instance holds reference to a unique scope, or set of memory, indenpendant of the class itself. This instance is governed by the rules laid forth by the instantiated class, but is ultimately isolated from that static scope.
Hi, I went through your website and was interested in the internal workings of the code. Some basic searching led me to github project under the same name. But most of the information/comments in the code are not written in English. Can you help me understand the code in English. Would be helpful
Yes, and 12 is already coming Well, then a Java htm5l/js web browser replacement would really be nice. 
Syntactically yes, the grammar of the language requires it. Philisopically no it's not a requirement.. however you still need a way to define pattern-matching to expression pairs. Given that the switch/case/default syntax already exists, it is the most natural way for describing these pairs. Generally when designing an API you aim for the principal of least astonishment. A seasoned java developer will expect, and be familiar quickly with this syntax when writing switches. You could argue you can save space by providing a tuple of pattern-statement pairs, excluding the verbose overhead, but that seems counter intuitive to the way most developers expect the code to be written. You also need to account for backwards compatibility with other language features, and choosing a unique syntax prevents collisions with these features. Take the lambda for example; `=&gt;` could be mistaken with `&gt;=`, but `-&gt;` is notably unique.
ya i said that
Looks great. Any plans on open sourcing this project?
Looks great, but it absolutely needs offline version (payed, with no file limit?). There is no chance I could upload company's source anywhere.
very cool, thanks a bunch. Would you care to outline your stack ?
Author: &gt; Imma gonna write an objective rant. Objective. It's going to be fact based. It will point out only relevant flaws because the flaws *are* relevant Authors hands, typing: &gt; (not even mentioning the lack of curly braces around the conditional statement, ugh!).
Control+P my dude
Broken is basically unusable. If your refrigerator is broken, it isn’t usable. Is your arm broken when you get a rash on it? I’d say no
Ohh... looks like web was broken before heart bleed issue in TLS.
Dude JDK or JRE 1.6 are so damn old that you don’t want them. 
The [AdoptOpenJDK](https://adoptopenjdk.net/) project is building JREs for Java 11+, not only JDKs. And since Java 12 it even has an installer. Try: https://adoptopenjdk.net/releases.html?variant=openjdk12&amp;jvmVariant=hotspot#x64_win (or an equivalent variant if this one is not the best for you)
Thanks for mentioning assertK, which I didn't know about. However, I mention custom assertions in the beginning of the post - and I think I'm quite clear what I think about them.
If you are on Linux (which I assume you are not, but it may help others), you can use [https://sdkman.io/](https://sdkman.io/) to easily install various JDKs side by side and switch which one you want to use by default.
A really great tool, runs smoothly and gives a quick impression and overview of your project. But if the code is processed server side I am hesitant (not going) to use it on projects with confidential content. I would like to look at one of my projects but if the plaintext source code is send to a third party this is a no go. 
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
\&gt;I think Java has better documentation as well. &amp;#x200B; Goddamn, what have you been smoking man?
I think the author is a little mixed up about the difference between API and implementation.
Really cool. I'd like to contribute if it is open source.
You can download the Java 8 install from AdoptOpenJDK. Recently had to do that for my son's Minecraft, for some reason his original Java had been uninstalled, not sure how, but using the Java 8 from AdoptOpenJDK works just fine.
&gt;**java.lang.Class** &gt; &gt;arrayType() returns a Class for an array type whose component type is described by this Class. &gt; &gt;I’m not totally sure what the point of this method is since all it does is prepend class \[ to whatever type the Class represents. It's to be able to get the class of the array which has the class as component type. It was not possible without creating a new empty array instance before: Array.newInstance(component, 0).getClass() From JDK12: component.arrayType() Personally, I find this useful.
Have you considered renaming your framework to avoid confusion with apache spark?
Really cool, I like this.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
403
FYI here't the talk Abstract The release of Java 9 is scheduled for July 2017. This session provides an overview of new feature that might be of interest to Java developers. There are only minor extensions to the Java programming language in Java 9, but there are numerous extensions of existing JDK APIs, several optimization (e.g. related to strings) and lots of refinements of JVM internals. The most prominent feature is probably the Java Module System. Another change that will affect some, but not many Java developers is the deprecation of the sun.misc.Unsafe class. We will look into replacements for its features.
if it wasnt confused with Apache spark I imagine it would have about 14 less upvotes :)
`arrayType()` is implemented as `return Array.newInstance(this, 0).getClass();`
lol, I did not know that. I thought they went with a more efficient implementation, something natively supported. This is worthless then. Seems like only to implement the [FieldTypeDescriptor](https://cr.openjdk.java.net/~vromero/constant.api/javadoc.04/java/lang/invoke/FieldTypeDescriptor.html) interface.
Quick correction: The JEP230 microbenchmarking links to JEP 320.
We are in **2019** and the current Java version is **12**. Quite too old.
came here to say exactly [this](https://spark.apache.org/). The ecosystem is so huge that they have their own [conference] (https://databricks.com/sparkaisummit/north-america) now
Hi! Thank you for the feedback. I've a glimpse to your library and it looks interesting. Definitely, I'd have to git it a try.
It's pretty clear that he doesn't want to, because "he was first". The name is one of the reasons I stopped using it, because all web searches would return things related to Apache Spark.
A release with basically nothing. It's been years since any real features were added.
But the changes in Java 9 is still relevant. Module system starts from there. 
To be fair, it does allow them to improve efficiency later. 
Typo corrected, thanks.
*Correction:* “lava.lang.String” — no, wait, that should be correct. I love it. 😜 *Thoughts:* Regarding JEP334: after reading both your post and this JEP, I can’t tell if there’s something about this feature that benefits developers _using_ Java, or just those who work on it. What does the new resolveConstantTable method do? An example is sorely needed. Also, just me wondering aloud: why isn’t it describeConsTable, or better yet describeConstantTable? — “I’m not totally sure what the point of this method is since all it does is prepend class [ to whatever type the Class represents.” I know this was discussed in other comments, but I am confused as to why you would characterize the behavior of this method by describing the change to its string representation. Surely you realize the distinction? — “componentType(), which is the same as getComponentType(), which begs the question, why add a redundant method?” Normalizing the language. It’s a getter and should be named according to API conventions. I’d expect `componentType()` to be deprecated eventually if it is not already. — “transform(): Applies the provided function to the String. The result does not need to be a String.” This is strange. What makes String special enough to deserve this syntactic sugar? Assuming its existence is warranted at all, what argument exists to put it here rather than on Object? — Overall, I consider this a welcome update. Looking forward to switch expressions exiting preview status!
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Sorry, I missed that part. I disagree with it obviously ;-) I see custom assertions more as an "extract method refactoring" with nicer syntax. Thus I see no need to test them. And if you take this logic at the beginning of the article further: if you don't trust custom asserts to be correct, wouldn't you have to test your normal test code as well? How can you trust that your "normal" assertions do what you want? So i don't see how custom assertions are anything special or a slippery slope here. If that were the case, "extract method" would be a slippery slope as well. :P
Features like what? Just curious.
It's almost as bad as naming a framework MVC. Oh wait... https://www.mvc-spec.org/
&gt;This is strange. What makes String special enough to deserve this syntactic sugar? Assuming its existence is warranted at all, what argument exists to put it here rather than on Object? This may have something to do with [Project Valhalla](https://openjdk.java.net/projects/valhalla/). Part of the project plans to add [specialized generics](https://openjdk.java.net/jeps/218) to the language. If they added a `transform()` method to `Object` now, it would have to use erased generics, then eventually be rewritten to work with specialized generics.
Yeah, valid concern. Yet shipping executables is a whole different business... Will be thinking about it.
Looking at the source code diagrams from non-developer computer is (i think) impractical and bound to be a bad user experience. I just blocked mobiles to avoid user frustration ...at least that was the thinking.
Backend is JVM+Tomcat on Linux!
Potentially in the future. I agree - that would be great.
the Github project does not have anything to do with the engine I wrote. Name made sense, domain was available and I pounced.
I see this concern raised by a lot of developers. My hesitation is, obviously, that support/licensing for shipped software is that much more difficult. Thanks for the feedback!!
Yeah, for work, there's no way I'm going to send our proprietary code over the web to be examined. I'd need a desktop standalone tool.
Sure: HTML/CSS/SVG on the client and no 3-rd party libraries (to optimize for performance), clean JVM/Tomcat on the back-end. No persistency yet but MySQL will probably fit well here.
AFAIK There are many methods that have a Java implementation in the JDK but are actually intensified, I could be wrong.
[https://docs.oracle.com/javase/tutorial/index.html](https://docs.oracle.com/javase/tutorial/index.html) [https://docs.oracle.com/javase/tutorial/essential/index.html](https://docs.oracle.com/javase/tutorial/essential/index.html) There are more Python videos on Youtube, but I think Java has higher quality and more official documentation as shown above.
Regarding `String::transform`: Brian Goetz says [Yes, that's the plan -- to add this method more widely](http://mail.openjdk.java.net/pipermail/core-libs-dev/2019-March/058946.html).
if your refrig works fine when you put hamburg or carrots in it, but shuts down without warning when you put milk in it, is that broken ?
Is there a way to to visualize recursion?
My refrigerator isn’t big enough to fit Hamburg.
that port is huge ! only a couple days there but awesome town from what i saw
It looks like in your [submission](https://www.reddit.com/r/java/comments/b8o16o/plz_help_java_question/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Allow me to upload files from multiple packages, &amp;#x200B; at the moment, it seems to generate the overview after I drag the contents of 1 folder into it, but if I want a real model of my whole app, I need to drag all my files into it, what is impopsible,, as they are located in multiple directories
If your company uses google chrome as their primary browser, you have to know that it no longer supports java applets since version 45, and at the moment we are at version 73, most other browsers also followed this move to remove Java at the same time
Depending on the actual setup, Java could also request .class files
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Can you please expound on this?
They can replace the implementation without breaking the client
Meanwhile in Kotlin...
Even though the method is using the `newInstance` approach right now, the JDK team is free to change the method internals later to use a better performing solution. Developers that use `arrayType()` will get any improvements automatically if/when the method is updated. Others that use `newInstance` now, but want to get better performance later (if it ever changes), will need to change their code to use `arrayType()`
Any chance that Azul could open source their Hotspot ports to PowerPC e500v2?
Thank you! 
Thank you! 
I wrote about that related to this article. Processing Large Files – Java, Go and 'hitting the wall' https://marcellanz.com/post/file-read-challenge/ a blog post about how to process "large files" with Java, then with Go, and then what happens when performance optimisation "hits the wall" after a 20x improvement over the original implementation.
&gt; Obviously, in this case, it is a contraction of Constant Table What? No it isn't. It is descriptive of a property of a class - that that class can be represented in the constant pool. If class X implements Constable then X is representable in the constant pool. If there were a Mutable interface it would indicate something is mutable, not that it is a Mute Table. 
&gt;Also, just me wondering aloud: why isn’t it describeConsTable, or better yet describeConstantTable? Constant is not abbreviated Cons anywhere else; consistency is desirable here. It's constant-able, nothing involving tables. The name follows the same naming scheme as Serializable, Comparable, etc. as in the class is able to be a constant.
Nor would it be a Mu table. 🙂
Thanks. That makes more sense. Nonetheless, it shouldn’t be abbreviated. The appropriate name for the interface is Constantable. 
I agree but at least it lets them make jokes about "constables"
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Have an upvote, Mu doesn't get enough recognition all the way down at 12th in the alphabet.
I’m not familiar with the term “intensified” in this context, and Google was no help. What do you mean?
Yes, that's the reason, I think: it's describing something that can be turned into a "const" -- it's "const-able." We have the "var" keyword for type inference now, not "variable" all spelled out; and we have "const" (which has been a reserved word, I think, since the beginning), even if that word is not used (yet).
there is reason games are made in C++
That style of switch statement looks familiar 🤔 
Or Mutant Table for that matter (given the quoted suggested contraction)
Get off that. One of the most popular games in the world was made in Java.
It's hard to say. What's your game loop look like? Are you limiting your framerate?
I have a couple issues in understanding this logic: 1. There is already a gigantic pile of things built on erased generics. What’s one more? Besides, they already added one more by adding this to String. Wouldn’t it be better to apply the decision universally (either by adding the method to Object now, or to wait until specialized generics are a thing)? 2. It seems to me that changing from erased to specified generics should not change the language, except to allow multiple definitions in the same scope where erasure previously would have made that impossible. In other words, the bulk of the changes should apply to the compiler, the bytecode, and the runtime. The only changes to the language would be the removal of the aforementioned limitation. Right? Am I missing something? If I’m not missing something, then I don’t understand why adding this method now to Object causes any more work for anyone. Note that I’m not asserting here that I’m right — just that I don’t understand. Any explanation would be most appreciated!
both good points, but I fucking hate C++
Shit that's it probably
I left Java security in the middle, found Firebase authentication mechanism
He means 'intrinsified': [https://en.wikipedia.org/wiki/Intrinsic\_function](https://en.wikipedia.org/wiki/Intrinsic_function)
It looks like in your [submission](https://www.reddit.com/r/java/comments/b8se3k/could_someone_help_explain_how_this_java_program/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Even Microsoft [made that mistake](https://devblogs.microsoft.com/oldnewthing/20051201-09/?p=33133) ;)
while for a little game it really doesn't matter the language/platform, you should really stop hating c++ and learn to love it if you intend to pursue more serious programming in games. for hobby though ... sure, whatever.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Darn it! You think you've got all the typos and one sneaks through. Corrected, thanks.
Ah ha! Why can't the API designers either use camel case or simply not abbreviate *constant*? I posted an update in the blog to correct this.
It's not camel-case because it's not two words. It's an adjective indicating that the class can be represented in the Constant Pool.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
HTTP2 and async requests have been requested for years, and there are even multiple PRs for both of them. There's also no way to configure session handling, which is why I switched (there is a PR though, just not getting merged). It's a nice looking framework at first, but I think they stopped working on it when they ran into more difficult concepts.
Me too. I have had hanging a couple of times with 100% load on one of CPU cores during refreshing of project configuration.
why not just send a url path to the json in the body ?
Could you elaborate ? I didn't understand. 
put the large json on a storage and use some json streaming librery like [oboejs.com](https://oboejs.com) to consume the json as you need, this way you will not have out of memory because you consume in concordance with your application throughput
also you can do some json minify if not done yet using 
I'm the author of this library, so if you have any question, don't hesitate to ask me.
Thank you. I felt like I knew the term he intended, but certainly couldn’t come up with it. Haven’t dealt with compiler details in longer than I’d care to admit....
The GraalJS team are also exploring something like this. Though unfortunately I think their focus for now is to simply create a new platform for existing Electron apps to target, rather than to facilitate any deeper integration or embedding in Java apps. https://github.com/oracle/graal/issues/326
Python terminology and Java terminology are different, and other classes have again slightly different terminology. In PHP, static methods *can* be inherited.
From what I gather from your post and your comments, the thing you are trying to launch __does not run on java 11__. So, download java 8. Yes, it's pretty much out-of-support, so perhaps talk to the folks who wrote that launcher. Note, the java version history is this: 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 9, 10, 11. Tools that try to inspect java version that were written before j9 was released tend to just split on dots, and look at the second number, entirely disregarding the first number. Thus, they see '11.0', ditch the 11, look at the 0, conclude it's less than 6, and tell you they can't use that VM. Shitty launcher, but nothing you can do about it directly (I suggest an indirect path, which involves upgrading the launcher and/or filing a bug report with them). 
Like most people here say, nothing wrong with a monolith in this case, however if you just want to learn this stuff, any excuse is good i suppose. If you do not want to use REST, perhaps a messaging system is the next best thing, there are plenty to choose from.
It looks like in your [submission](https://www.reddit.com/r/java/comments/b8ybs2/what_could_be_better_than_democracy/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
It is unfortunate that security moves so slowly, there are still SAML implementations using DSA1. What is strange with Twitter is that most of their APIs support OAuth2, for some reason they have never updated their login to use it.
That is great, best not to re-invent the wheel. Does Firebase have a pretty decent Java SDK?
&gt; There is already a gigantic pile of things built on erased generics. What’s one more? Besides, they already added one more by adding this to String. Wouldn’t it be better to apply the decision universally (either by adding the method to Object now, or to wait until specialized generics are a thing)? There are current discussions about splitting `Object` into two types -- `RefObject` and `ValObject`. They would like to transition all existing `Object` references to `RefObject` references. This may make them hesitant to adding more new methods to `Object`. &gt; It seems to me that changing from erased to specified generics should not change the language, except to allow multiple definitions in the same scope where erasure previously would have made that impossible. In other words, the bulk of the changes should apply to the compiler, the bytecode, and the runtime. The only changes to the language would be the removal of the aforementioned limitation. Right? Am I missing something? The syntax will also be changing. The current syntax will be considered legacy, and there will be new `ref` and `any` keywords. `ref` will behave just like old generics, while `any` will accept reference and value types. It will take some work to update code, so this may also add to their hesitation.
I think so, currently I am using it from a react frontend as a native JavaScript library PFB Link if in case helpful - https://firebase.google.com/docs/reference/admin/java/reference/com/google/firebase/auth/FirebaseAuth https://firebase.google.com/docs/auth/?&amp;gclid=Cj0KCQjws5HlBRDIARIsAOomqA22AyiNEOCOWIm49meCWhNGWZbzJqZdkCKgWwHCw7chnfJbhrNqJPIaAv6fEALw_wcB 
I think so, currently I am using it from a react frontend as a native JavaScript library PFB Link if in case helpful - https://firebase.google.com/docs/reference/admin/java/reference/com/google/firebase/auth/FirebaseAuth https://firebase.google.com/docs/auth/?&amp;gclid=Cj0KCQjws5HlBRDIARIsAOomqA22AyiNEOCOWIm49meCWhNGWZbzJqZdkCKgWwHCw7chnfJbhrNqJPIaAv6fEALw_wcB 
Thanks for updating. I was going to point this out but others beat me to it. Note, the `-able` suffix is commonly used on interfaces indicating the characteristic of allowing something to be done to it. Hence, a `Serializable` object can be serialized, a `Comparable` object can be compared, a `Closeable` object can be closed, etc., so a `Constable` object can be consted. Well, "const" isn't a verb, but it really means "can be represented in the constant pool" as the GP noted above. I expect that over the next year or so, const will be verbed.
Nice ! but why is a lot of the code from old versions ?
Can you point out specific examples? For openjdk I added older versions for comparison but I tried to pick the latest for the other libraries. There used to be a bug that libraries linked to old java versions, that mightve resurfaced too, but I haven't seen it yet.
Phone Spellcheck FTW
Well these that I know are not the latest: - https://github.com/google/guava/releases - http://www.bouncycastle.org/latest_releases.html 1.61 - Junit 4 is the latest for version 4, but there is also a version 5 
It looks like in your [submission](https://www.reddit.com/r/java/comments/b92c8w/about_java_beginnerstatic_class_members/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Payaya is a Tomcat, or a JBoss, or a SpringBoot or a VertX ?
While I would love to have a pipe operator in Java, I fear it would alienate a lot of Java devs :/.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Payara is the former Glassfish, hence Tomcat.
Junit 5 changed maven name, so they're under org.junit.jupiter now: https://java-browser.yawk.at/org.junit.jupiter/junit-jupiter-api/5.4.1 I've updated bouncycastle and guava, thanks!
It already has it built-in
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Nice!! Very promising. The cross-referencing of methods to where they're called, and types to where they're used, looks potentially more comprehensive than what I recall GrepCode had. It would be nice if those results were on their own page instead of being in a popup... also are they complete? If you search for uses of popular types e.g. `Map` there are rather fewer uses than one might expect. Thanks!!
No one? 
If they're just out of school, call it "Functional Programming in Java"
Nice! Looks like they put some good work into this. I really love that they implement the standard Java interfaces where possible. 
You're right, a separate search page would be convenient. At the moment the references are arbitrarily limited to 100 results to reduce server load. With a real separate page I could add proper pagination and remove that limit, so I'll look into doing that.
It requires modern Hibernate versions? It would work with old versions like Hibernate 3.6 ?
If it is for junior position, there is a lot on Google, but from my personal experience: \- Hashmaps \- Difference between Abstract class and Interface \- Difference between final, finally, finalize \- Override vs Overload These are classic questions, there is definitely a lot more When I was new, I prepared for these kind of questions using these two: Oracle Certified Java SE 8 Programmer I Study Guide and Oracle Certified Java SE 8 Programmer II Study Guide by Jeanne Boyarsky and Scott Selikoff &amp;#x200B; These guides are material to prapare for Oracle Java Professional certification
Thanks! The job posting says 5+ years of experience but I've only just graduated. Despite this, they seem really eager to get me into an interview
I would be quite honest in that case. Focus on the commonalities you have, like your experience in OO, testing. You will pick up the syntax quickly.
Of course Undertow has had HTTP/2 support for years and it just works.
This looks like an interesting project. I read your book, and remember there was a small framework that allowed you to assert against Hibernate queries (in that case to o avoid the N+1 problem). If I'm not mistaken, this looks like a framework that greatly builds on that idea. I couldn't see an example in the repository that uses Spring Data. I was wondering what would an integration look like in this case? 
It is good to know how to explain the Collections API, for instance the difference between List, ArrayList, Vector and LinkedList. Here you can find a good number of questions that will make you ready for your interview. https://www.softwaretestinghelp.com/core-java-interview-questions/
And it runs horribly without JVM tweaks. Not saying Java can't be used but uh... garbage collection is a bitch.
Thanks!
Have you tried [Glowroot](https://glowroot.org/)
Did you have a look at VisualVM? [https://visualvm.github.io/](https://visualvm.github.io/)
This is Tomcat specific, so probably not that useful to you, but might be to someone else reading these comments, but I highly recommend https://community.jaspersoft.com/wiki/psi-probe-replacement-tomcat-manager I used Lambda Probe years ago and it made visualising what was going on inside the server much easier. I haven't used Psi Probe, but it's an active fork of Lambda Probe. 
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
If you are a student, you can register jetbrains with your student account and start using IntelJ. I think that IDE supports what you need when debugging. I can't check it now. I am outside of my office. 
&gt;I thought they went with a more efficient implementation, something natively supported. It has been natively supported on HotSpot for a long time, see [https://bugs.openjdk.java.net/browse/JDK-6525802](https://bugs.openjdk.java.net/browse/JDK-6525802) &amp;#x200B; This article by Aleksey Shipilёv has a lot more details [https://shipilev.net/blog/2016/arrays-wisdom-ancients/](https://shipilev.net/blog/2016/arrays-wisdom-ancients/)
It works with every version of Hibernate from 3.3 to 5.4. Amazing, right?
Thanks. It goes way beyond tgat N+1 tool. You can find 3 Spring integration examples in the [User Guide](https://vladmihalcea.com/hypersistence-optimizer/docs/user-guide/#Configuring_Hypersistence_Optimizer) with all the examples on [GitHub](https://github.com/vladmihalcea/hypersistence-optimizer). You can find a Spring Boot example which uses Spring Data underneath. Enjoy using it.
If that's the case I would not worry too much. They are probably most interested in your potential, not what you know now. Show that you're eager to learn.
Familiarity with at least a few design patterns. Java (especially if it's a Spring shop) is all about the Factory, Builder, Strategy, and Singleton. If they use any dependency injection frameworks, you'll want to have a good idea of what they are and why/how/wherr they are used. I wouldn't expect a grad to know a ton about it, but +5 YOE engineers sould be able to explain them in detail and usually provide examples of what they would use them for. 
Thanks for sharing. I've been wondering how people got python ML models to production of they were already a java shop. I assumed they did some sort of side car where they could expose the the predict logic using flask then have a boot app act as the authentication and resilient layer in front of it. 
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
&gt;So if you would like to enhance your legacy project with some Kotlin code, if you would like to bring some color to this old grey Java world, if you want to let a rainbow rise above the old stinking boilerplate dungheap - it is super easily done by just integrating Kotlin into your existing java project — YEAY! Do it! Not sure if I'm a fan of this condescending tone.
\+1 for VisualVM. Very good application and you can use it for OpenJDK as well.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Java is updating my Central Processing Unit?
It's a Java EE application server so it's most similar to JBoss. It uses Grizzly under the hood for its' HTTP functionality.
Sure, but it can be dealt with. Unity, and to a lesser extent Unreal, developers face the same challenges.
It looks like in your [submission](https://www.reddit.com/r/java/comments/b9dzy2/future_move_myfaces_11_jsf_to_angular_spring_boot/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
As someone who had to maintain an oracle database, lucky you. 
The JDK comes with `jconsole ` which offers basic runtime information,like active threads, loaded class count, memory status etc. 
One thing I cringe at is the use of swagger annotations in code. It almost matches the request, but its one more thing you gotta maintain and keep in sync if anything changes. I am curious why not use OpenAPI 3 with API first, and have it auto generate the Rest interfaces for you, so you have a single source of truth for the API? This way you get docs, interface stubs, mocks, tests and more generated for you and dont have to deal with remembering to keep the api docs in sync, etc?
As someone who works with Weblogic, lucky *you*.
Thanks for sharing 
I dont know about Java, but with Node.js authentication with bcrypt is really easy
[https://www.oracle.com/technetwork/java/javaseproducts/mission-control/index.html](https://www.oracle.com/technetwork/java/javaseproducts/mission-control/index.html)
I have to consume the JSON from the HTTP response. And the Jersy client load all the data at once. That means that Jersy read all the data from the network and when it has all the data that time the we begin to process it.
TLDR: read the patch notes and get the updated version of the JDK from your favourite JDK provider. that's all. they say absolutely nothing what the patch fixes.
We are still waiting on the final release notes ourselves that will be on the 16th of April - I can post a probable list here if that’s of interest?
I am not arguing that: if you don't have the notes then that's fine. You don't need a 1 page article, 4 paragraphs to say absolutely nothing. well, you do say one thing: "we recommend AdoptOpenJDK" about 3 times.
Appreciate that I’ll go add some more meat to the post - thanks for the feedback!
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
We usually use OpenAPI with swagger generator plugin, but here API was too simplistic, so thought it would be overkill. Do you think it makes sense for this demo project?
Glad if you find it useful! Any kind of feedback and ideas are welcome. 
To say absolutely nothing? That seems harsh, especially when I thought the article had insights. Did someone shit in your fruitloops?
had what? what have you been smoking?
Honestly, I have a very easy to copy/paste template that takes a few seconds to set up, and is API first driven. For me, everything is API first (hence the alias. :D). I find it not only faster to actually develop this way.. quite a bit faster actually, but I do less hands on coding too since a lot of stuff is generated. Plus, no hard coded swagger stuff in my code. But I see your point in that it is a small demo.. I just have my strong opinion about API first single source of truth as being a far superior way to start any project off. 
Regarding contract-first development, I definitely agree. Now, thanks to swagger/openAPI infrastructure, it's straightforward. 
My organisation uses a highly instrumented version that uses JRE. &amp;#x200B; I think I'm gonna have to try and get some of the guys from engineering to show me how they've done it.
That's for the info! I had a question though, which JVM should I use (Hotspot or OpenJ9)?
Is it based off of the OpenJDK (or a recent version of OpenJDK)? If not, why not. If so, then jconsole should work. jconsole talks over JMX which is part of the standard.
It probably does not matter. That said, Hotspot is by far the more popular one.
I think duheee has a pretty fair point, I've updated the blog post with links to the \*likely\* release notes for 11.0.3 and jdk1.8.0\_212
I've updated the post with the likely 8u212 and 11.0.3 release notes - apologies for the laziness in not doing so before.
It's Zulu, which according to google is OpenJDK. &amp;#x200B; We use an installer, and the java runs from a directory within the applications' installation location rather than using a JRE path on the actual system. &amp;#x200B; I'll definitely look into jconsole when I get a moment though. If it works I'll be ecstatic. The major issue I'm facing right now is that it somehow works on a server without there being an actual JAVA\_HOME or JRE\_HOME variable set, and I don't know enough about Java to work out what that means.
 eventClasses.contains(EagerFetchingEvent.class); eventClasses.contains(ManyToManyListEvent.class); eventClasses.contains(OneToOneParentSideEvent.class); eventClasses.contains(OneToOneWithoutMapsIdEvent.class); Have you thought of implementing an IDE plugin or an annotation processor? Some of these could be reported at compile time, instead of at runtime
Damn, it's so nice to read Java appreciation posts and not bashing for whatever subjective reasons people have.
is java on the $PATH? 
I got it installed.. but it appears that majority of the programs I'm using (i.e. the launchers and Minecraft Forge, and sdkmanager for Android SDK) all doesn't seem to like Java 12 &lt;_&gt;
Well to be fair, RAML had (still has) a better API first format.. RAML 1 is so damn sweet. Just wish OpenAPI would embrace modules, annotations, and RAML types! I miss RAML. So much nicer to work with! If only Mulesoft/team would have kept pushing it. This is truly the betamax vs VHS war.. sadly once again "betamax" has basically lost.
That would be great. I like the way the output is broken down by kind of use (type used as type of field, type used in method parameter, type used as method return, etc.). It would be good if there were counts for each different kind of use. One of my pet peeves with grepcode was that it showed matches one page at a time, but you had no idea how many there were. You might advance pages and run out after a couple pages, or you might go next, next, next, next, next... and keep going until you got tired, not knowing how many matches there might be in total. Some kind of meta-information around that would be really helpful.
Although this is a great idea, the way the to9l works is that it requires a proper SessionFactory or EntityManagerFactory instance, hence it can not work at compile time for the moment.
Don't use Jersey then (don't parse the response as JSON). You can just read the string and store somewhere, and later process without running OOM. Or parse it with streaming parser. If the responses are so large then maybe batching does not make sense? Why ask for 2k items at a time when you can ask for 50.
Solid job and great post. I'm actually big fan of their products and the their simplicity in implementing complex functionality. Props to the post author, great state diagram.
&gt;You can just read the bytes/string and store somewhere It sounds good. I will try. And what is OOM? &gt;If the responses are so large then maybe batching does not make sense? Can you give more insight? There are some other steps in that job. And what would be you alternative suggestions? &gt;Why ask for 2k items at a time when you can ask for 50. There is nothing special about 2k. 
Almost certainly some security fixes will be included in these releases, even if they are not listed in the release notes yet, so the assessment to whether people need this updates should be 99.9% of the time "Yes".
OOM = out of memory What I meant is that you're issuing batch requests (2k each), maybe it would make more sense to send smaller batches (e.g. 50 each). If your main problem is getting out of memory from time to time then it might solve it and be pretty simple.
Excellent walk-through. A very intriguing use of the Java ecosystem. 
Wow, the hate for this comment is overwhelming! I guess I should clarify. I meant that the idea of having a flag effectively tells people "don't use this unless you're in JShell or a throwaway project". It means nobody will actually use the feature in real code because it's not "official".
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
&gt; which is why I switched To what did you switch?
What does it mean? My java website can work on any host now?
It looks like in your [submission](https://www.reddit.com/r/java/comments/b9mh5t/could_not_find_jni_missing_java_include_path_java/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
It can already
You need an ArrayList of Lists. List&lt;String&gt; first = new ArrayList&lt;String&gt;(sizeY); List&lt;List&lt;String&gt;&gt; twoDList = new ArrayList&lt;first&gt;(sizeX); &amp;#x200B;
List of lists friend 
``` new ArrayList&lt;first&gt;(sizeX); ``` This is not valid syntax. You'll have to use the following: ``` List&lt;List&lt;String&gt;&gt; twoDList = new ArrayList&lt;List&lt;String&gt;&gt;(); ``` You can also use the diamond operator to infer the type argument: ``` List&lt;List&lt;String&gt;&gt; twoDList = new ArrayList&lt;&gt;(); ```
It can now benefit from quick-startup speeds, which is essential for "serverless" services. Such services don't have a dedicated server hosting them. Instead, virtual servers are started in response to demand.
Check out [JVMTI](https://docs.oracle.com/javase/8/docs/technotes/guides/jvmti/index.html) Writing custom profilers is a lot simpler than one might think.
You forgot to create all the lists. It is a list of lists: one list contains the lists and you did create that one, but the lists it contains-you forgot those. In your loop, instead of grid.get(i), call grid.add(new ArrayList&lt;&gt;()); (and add null to this new list).
Hi! Does this mean if I take the current OCA8 exam right now, and like later on after a few weeks I decided to go with OCP11, that allows me to take 1Z0-816 right? &amp;#x200B; Or the path for OCA8 -&gt; 1Z0-816 is only for those who have been "OCA" already way before the Java 11 certifications existed? 
Fast enough that one could host private Java projects on free tier cloud instances without it taking 20+ seconds to wake up an instance? :o
It's generally a bit more complex than that. In my experience those cold starts (on for example AWS) don't happen that frequently; those instances are kept alive for quite some time. Still a nice development though, but those infrequent 2-second cold starts we witnessed weren't that much of an issue.
What is your goal exactly? You can access off-heap memory via [sun.misc.Unsafe](https://www.baeldung.com/java-unsafe) (pre-Java-9 at least) but if you want to do this kind of risky stuff you're IMHO better off not using Java.
Risky stuff. 😂...i just want to try like... Is such thing even possible or not What I want is like.... In C or C++ if we create a structure and then it's object, so if i increement the address of structure and then dereference it, I can get the value of second variable/element of the declared structure. So I just want to how we could do such manipulation in java.. (in classes or any structure like entity) 
See my initial comment. Most modern languages disallow these kinds of tricks because they're generally pointless and bring a lot of risk and maintenance burden. So you can much about with sun.misc.Unsafe if you want, but if this is your goal you're better off with another language.
If you want to do unsafe pointer manipulation, then Java is probably not the best option for whatever you are trying to do. The right way to do it (in Java) is to use plain old array indexes.
I think there is no way to do that. A good example is that you cannot have a subarray of an array as you can do in C/C++ (i.e. pointing to any part of the array). I never find a "C" way to do that. One possibility is to create an object containing the initial array and the new first possition in this array &amp;#x200B;
The trend is moving from things with a large provisioning time (Days - Hardware), to smaller (hours - VMs), smaller (minutes - Elastic cloud VMs) to *much* smaller (seconds - Containers) and even virtually none (AWS Lambdas). The startup cost of the app becomes increasingly relevant the more we head in this direction. So while it hasn't been an issue in the past, I believe it will become more and more so.
&gt; The startup cost of the app becomes increasingly relevant the more we head in this direction. Like I said; cold starts don't happen on every invocation. While it's all managed for you, if you use AWS lambda it's still an application server that runs your lambda. The situation where you're actually spinning up a new docker container for every request is very different and will always be inefficient and generally not something typical frameworks do. If you run something in OpenFAAS for example, processes are also kept alive.
Boring article, way better out there. For the anyone who wants to experiment there's a cli command, it has Aws micronaut and Graal already configured. https://github.com/huksley/micronaut-aws-api-gateway-graal 
To Javalin: https://javalin.io/ The syntax is a bit more explicit, but in return you get a lot more control over what you're doing.
No, it's compiled within the app. I'm not really a Java guy so apologies if my explanation sounds weird.
One of Java’s design goals was to remove point manipulation from the language. So unless you use unsafe or jni you can’t do the same thing. 
I think thats the point though - if you remove the startup cost, then startups CAN happen every invocation - which for stateless invocations (lamdas in the extreme, but stateless microservices also) then Java becomes an increasingly usable tool. Its not what were doing today but what we CAN do tomorrow that I think they are trying to address with this tech. This is "Java for Serverless" after all (Im not a fan the term serverless, btw). Sure the reality right now is that it's not an issue, but thats just because the startup cost of a spring app (for instance) stops us using spring apps in this way. Now that restriction has gone (or is eroding) then we have more architectural/infrastructure patterns that can be resolved with Java and the (Graal)JVM. Given the trend to move to smaller and smaller execution units this will become more and more relevant - I believe. Time, of course, will tell :)
No. While you think like that you are still a C programmer.
its possible, and I think its a good idea to use java, despite what others say. &amp;#x200B;
Thanks for support mate!... So any ideas 
you have to use unsafe package, I've never done it myself. But its quite common thing to do, a number of well regarded products do it - its very performant. https://highlyscalable.wordpress.com/2012/02/02/direct-memory-access-in-java/
I'll try 
If thinking about something new and fun is being a C programmer... Then I'll happily take it! 
Programming help should go in /r/javahelp. **Removed**
You can do this like others have said with the sun.misc.Unsafe but this is not supported and was removed for use in java 9 
Please seek help with Java programming in **/r/Javahelp**! **Removed**
replacd with this [http://openjdk.java.net/jeps/193](http://openjdk.java.net/jeps/193)
java 9+ you have to use [https://www.baeldung.com/java-variable-handles](https://www.baeldung.com/java-variable-handles) 
I don't use NetBeans that often but I'm glad it's still around.
The size of the array is a power of two and changes dynamically. So if the hashcode is 12345678910 and the hashmap currently has 16 buckets, the entry will land in the bucket number 14 = (12345678910 AND 15). If the hashmap grows so much that such array becomes unsatisfactory, the array is replaced with an array two times bigger.
oops. Well, my list-of-lists suggestion was correct even if I didn't have an IDE up to confirm the rest lol.
Check out the [HashMap JavaDocs](https://docs.oracle.com/javase/8/docs/api/java/util/HashMap.html) and it'll tell you everything you need, specifically the bits about the initial capacity (which defaults to 16) and load factor (which defaults to 0.75).
NetBeans developers must be as devoted as Opera devs are. Barely anyone uses either of those things but they both still keep pumping out releases. That's dedication!
The list of new features can be found [here](http://netbeans.apache.org/download/nb110/index.html). TL;DR: - JDK 12 support - New projects use Maven by default - Improved `switch` handling - Switch expression (preview) support - Java EE support donated and integrated - Gradle support out of the box - HiDPI icons - More tutorials migrated, also less vintage - Misc. bugfixes
Based on the data [here](https://www.baeldung.com/java-ides-2016), it looks like Netbeans represents 6% of users polled in 2016 by Baeldung.
Good that NetBeans is still around. Switched to IDEA a while back but before it was **WAY** better than Eclipse...
Well, I use it as my main Java IDE and I think it's awesome! It's also a good citizen of the ecosystem: everything about your project \_must\_ be specified in your pom.xml, because every IDE action maps to the corresponding Maven lifecycle phase. So having a NetBeans user on your team will keep your builds repeatable.
I'd love to hear your definition of "barely anyone".
I've never understood why people like Eclipse so much, I find it horrid, or is it out of necessity? I've encountered one project where absolutely necessary plugin existed only for Eclipse.
I love NetBeans. I want to like IntelliJ, but its UI design is just too unintuitive for me. In NetBeans, if you open a context menu, or press control-spacebar, it actually shows you all the things that would make sense for you to do. In fact, if you *just* use auto-completion or context menu, you can do most things in the IDE. In IntelliJ my experience is mostly, "hmm, I'm guessing the IDE has support for the thing I want to do now, so now I have to search for how to do it."
For the default Hashmap with that load factor of .75 you can guarantee that your hashmaps don't need to resize by setting the initial size to (n \* 4/3+1) where n is the final size of the map.
Same story for me. I used Eclipse from beginning of my career but didn't like it much. However Netbeans was worse than Eclipse. But they have slowly improved and it became similar powerful tool to Eclipse (if not better). However by that time I have switched to IDEA Ultimate. But if anyone doesn't have money for IDEA Ultimate, he should use Netbeans.
&gt; Netbeans is the primary IDE for 6% Java hipsters (disclaimer: I use Ant)
So will using IntelliJ+Gradle+Delegate build actions to Gradle setting
&gt; So having a NetBeans user on your team will keep your builds repeatable. Don't all IDEs do that? I know with IntelliJ you can delegate build actions to Gradle (and as of 2019.1 can delegate build actions to maven as well). So the build is the same locally and on a build server.
Java is so big, that I think even a smallish percentage of developers comes to a fairly large number
Programming help should go in /r/javahelp. Also, the *documentation* and the freely available *source code* would directly answer your question. **Removed**
You are so right. It reminds me of regex. There's so much stuff you can do in IntelliJ I have to google before I do it to make sure I'm not doing it suboptimally.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Oh, I didn't know that, nice! It should be the default though, else it's unlikely anybody will configure it. I was also thinking about IDE specific files, leading to questions like [this one](https://stackoverflow.com/questions/3041154/intellij-idea-9-10-what-folders-to-check-into-or-not-check-into-source-contro).
Yeah I definitely agree on that one. I just often see people claiming Java functions 'always' take 'x seconds' to start which is completely unfounded. Bit of a pet peeve ;)
Netbeans use the underlying build system as the project handler. Intellij will first import it into his own project handling mechanism (.idea folder) and Eclipse does it in the same way. Netbeans is the only one which delegate project management and lifecycle to the dedicated tool (Maven/Gradle). And that's also why, you will not need to 'reimport' it because you modified you build (intellij will show a pop up asking if you want to reimport you project). You will not have any desynchro between how your ide see the project and how it is actually described in the build file. In Intellij/Eclipse defense, there was a need to define first of all how to handle a project without a need to give this task to an external build system (Ant was a king few years back, then Maven. Now we have graddle, sbt and so on) &amp;#x200B; &amp;#x200B; &amp;#x200B;
I don't know if all versions of Eclipse are that bad but when I tried it, you couldn't reorganize the toolbar (it failed to save changes) and uninstall plugins cleanly (I couldn't find the uninstall button at least). Its settings for errors and warnings were crazy too: it gave errors for things that compiled cleanly in Maven and was constantly out of sync with it.
&gt; Java EE support donated and integrated Finally. This was basically why I stopped using it. Although that ship has now sailed since I paid for IntelliJ. 
Well, it was my IDE of choice until they dropped support for Java EE. Although I still think it does Maven the best out of the lot. 
Yep. The backing implementation is intrisified in this case: http://hg.openjdk.java.net/jdk/jdk/file/03ea2b6428f0/src/hotspot/share/opto/library_call.cpp#l3530
Dont know when you last tried Intellij, but it got a lot better the last 2 to 3 years regarding actions for the current context. Now if you type alt+enter (osx) it will give you the action that make the most sense for your context. 
I use both IntelliJ and NetBeans quite a bit alongside one another. Thanks for letting me know about control+enter (alt+enter does nothing). It's certainly a step in the right direction, but you should see what control+spacebar does in NetBeans. NetBeans just feels slicker and cleverer, but it's good to see that IntelliJ is catching up. Now I just need decent Gradle support (NetBeans's is still much better), and I could consider making IntelliJ my primary IDE.
&gt;Explicit support of Java EE 8 is not currently part of Apache NetBeans 11.0. Also, JavaEE 8 only runs on JDK 8, not on later releases, and so if you 're doing development with JavaEE 8 it’s best to run NetBeans itself on JDK 8. Wait, what? Java EE 8 is not compatible with Java SE 11? I didn't know that, is it true? Or is it a NetBeans-specific issue? WildFly announced Java 11 support a few days ago. &gt;In order to comply with the Apache License we had to drop support for JBoss 4, WebLogic 9 and the module websvc.switmodellext had to be dropped as well. It seems that not only JBoss 4, but all JBoss and WildFly support has been dropped. I wonder if they can be added back with plugins. And I used to think that NetBeans 11 was the last missing piece to update my stack. Updating to Java 9+ is not that easy after all.
Not true. Importing a grade project with a root level build.gradle does the exact same thing. Sure there is an idea folder, but you never touch it manually and it's always in sync. 
In 2019.1 (just released last week or so) delegating build actions to gradle or maven is now the default. Previously it had to be selected.
You can't even move a project to a different folder with IntelliJ without re-importing the project. With Netbeans you just stick the project or can copy it where ever your want.
Ah yes the extremely common use case of moving a project to a differ directory and having your ide automatically appear that nothing has changed...
Same for me. I loved how easy Netbeans was to use. I use IntelliJ now but it has some flaws. I hate the mandatory autos ave and that I cannot just move a project around a file system without re-importing it. Version control support was also much better in Netbeans.
If this gets out of Incubation I may switch back to it. It had a lot of advantages over IntelliJ but they kind of dropped the ball for a while during transition and I had to switch.
Projects should not be dependent on being in a specific location. It is something I do frequently so a big pain. Do you work for Jetbrains because this seems to be their attitude. Its a nice IDE but they want to tell you how to work rather than build a tool that works for you.
&gt; All in all, you have to say that Java 12 does not really qualify as a major release This has missed the point of the changed release cadence And the benchmarking change was to.allow benchmarking in the JDK build process, not integrating JMH into the JDK as a public API.
JMC is a great tool, here is a tutorial I've used to get it going on OpenJDK 12: [https://dzone.com/articles/using-java-flight-recorder-with-openjdk-11-1](https://dzone.com/articles/using-java-flight-recorder-with-openjdk-11-1) JMC has been recently open-sourced and moved to OpenJDK, however, they temporarily do not provide EA builds on [https://jdk.java.net/jmc/](https://jdk.java.net/jmc/), but they are available on [https://builds.shipilev.net/jmc/](https://builds.shipilev.net/jmc/) Please note, that open-source version of JMC (7.1) is not compatible with the one bundled with Oracle JDK 8 and vice versa. &amp;#x200B;
If what is killing your productivity is moving your projects around, then maybe you don't need an ide at all 
That's good to know, thanks! I should try it again sometime. I found the announcement for Gradle, but not for \[Maven\]([https://www.jetbrains.com/idea/whatsnew/#v2019-1-maven](https://www.jetbrains.com/idea/whatsnew/#v2019-1-maven)) though. Was that done earlier?
I do not know what you mean. I did not say it killed my productivity. I said it was annoying and bad IDE design. Relax. I use IntelliJ but it has some bad features like anything.
I'm an eclipse user 
If you have a lot of experience you know your way around eclipse and it kinda sticks
lol
It's very handy to clone an open project to /tmp directory, quickly open it, do some quick and dirty experiments, and then close and forget it. It's a royal pain to do the same with IDEA.
how about: git checkout -b test-tmp-feature?
10+ years eclipse user here, yes its ugly but at this point im so used to its UI that i just notice it whenever i touch VS or Android Studio
I mean its a good language, its just as someone who got used to Object Oriented programming through Java C++ makes me want to hang myself
It's not helpful when you must have multiple copies of the project opened at the same time. For example, you are debugging on a nasty bug and want to have multiple revisions (i.e. currently non-working and older working) open for analysis. 
Yeah, that has always stopped me from investing more time into IntelliJ, the IDE feels impenetrable at times because it hides the underlying processes and tools (even the actual file tree on disk) behind a GUI. But when stuff breaks you need to know these things anyway and the added abstraction gets in the way. NetBeans feels much lighter in that regard, e.g. it prints the executed commands (Maven, git etc.) and their raw output to the console as it runs them. That makes issues very easy to debug, the whole IDE is basically a nice wrapper around the underlying tools. Nothing is hidden, that makes it so great for beginners.
Don't give up hope. One day someone will tell you why people like Eclipse so much. I love Eclipse but I don't tell you why. It's my secret.
You can just use the java executable from the application's install path to run other java tools; you can even set your JAVA_HOME to the bundled JRE path temporarily if needed. My company has an app with its own JRE bundled, coincidentally it's also Zulu, and we use jstack and such without any issues. Ideally you get a version of jstack/jconsole/etc that's for the same minor version of java, though different minor versions seem to be compatible anyway.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Exactly, I missed that point when I asked [this question](https://stackoverflow.com/questions/55243249/how-to-use-java-12s-microbenchmark-suite).
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
This is awesome! Keep up the good work!
&gt; dropped support for Java EE I thought this too when 9 came out but all you had to do was enable the plugin portal which pointed at the old 8 repo and you could add the EE modules. I did this for 9 and am currently using it for 10.
&gt; It seems that not only JBoss 4, but all JBoss and WildFly support has been dropped. I wonder if they can be added back with plugins. Considering how you could load the (Oracle) NB 8.x Java EE modules through the plugin portal into 9 and 10, I'd assume you can do the same for the server plugins unless they drastically changed the API which I doubt...they said it was just licensing which is completely understandable.
2018: https://www.baeldung.com/java-in-2018 &gt; IntelliJ grew from 45.8% in 2017 to whopping 55.4% today, clearly winning the IDE battle in the Java space this year. &gt; NetBeans, to the dismay of a few very vocal supporters, fell to 5.1% this year, which is less than half of the 12.4% numbers of 2017. &gt;And Eclipse looks to have somewhat stopped the bleeding and fell just 2% over the course of this year, to 38% of the market. &gt;What’s interesting here is that most of the market share gained by IntelliJ is, surprisingly, from NetBeans and not Eclipse.
Tbh I used it for college years... and never really had any reason to change to something else
The terminology isn't python specific it comes from Smalltalk which also had class methods. In Python and Smalltalk a class is an object and can have methods, in Java a class can be represented by a java.lang.Class object but that isn't the actual class. Dynamically typed object oriented languages influenced by Smalltalk like python, ruby, and possibly Objective-C (I think objective-c works this way but since I have little experience with it I can't say for certain) have classes that are objects and class methods. Possibly some staticly typed Object oriented languges could work this way but I'm not aware of any that do. Java acknowledges this, despite class methods being older Java doesn't call it that, calling them the more accurate term: static methods
Most of the students though are using NetBeans. But, upon entering the industry they are forced to use Eclipse or Intellij.
I have been using Netbeans since 5. When 10 came I upgraded right away. With 10 I was getting the little red exception notification way too often (unexpected exception in Netbeans, Netbeans loses its mind, auto complete stops working etc). On Monday I got sick of it and decided to build the latest from source. While downloading the source I saw 11.0-vc4 was available. Downloaded that instead. Did not fix the exceptions. Yesterday I spent I downloaded Idea 2019.1 community edition. Spent about an hour configuring code formatting rules and fonts and jdks. Then I was able to work. Spent the whole day in Idea, and honestly, no real problems. Previously I would test Idea about once a year, and key bindings (having to learn new combos) and poor Maven integration always sent me back to Netbeans. Yesterday, I opened a massive and complex maven project (over 100 modules), and everything just worked. Not sure if Idea was actually calling Maven or doing a really good job of simulating what Maven would do. Kry bindings - I found an option to emulate Netbeans. Maybe it was there all along? I found it to react faster than Netbeans to thinks like switching branches to a different major version (which, for me, includes having to regenerate generated code which is not compatible with the generated code for the other branch). Kinda loving it. Ideally (heh) I would prefer to work on Netbeans and have Netbeans not fall over every 5 minutes, but Idea, for the first time for me, is a very capable replacement.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Thanks for the response. &amp;#x200B; I've got Eclipse MAT working for thread dump analysis for now. I'll look into your suggestions also. I'd like to ideally find something like JProfiler which provides real-time analysis. 
1. *Programming help* should go in /r/javahelp 2. Neither here, nor /r/javahelp are second opinions for stackoverflow or other sites. Linking to such questions is frowned upon. If you don't get help on stackoverflow, your questions is too unclear to be answered. Clarify on SO and you will get appropriate answers there. **Removed**
Have a look at Alibaba Arthas [https://github.com/alibaba/arthas](https://github.com/alibaba/arthas)
It looks like in your [submission](https://www.reddit.com/r/java/comments/ba5dcp/type_inference_is_a_bad_idea/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
This. I love that you can just point your Netbeans install at a POM file and everything basically just works.
Oracle handing it over to Apache probably didn't help -- a stumble in the release cadence, along with a really awkward transition period.
I can only imagine they mean that certain JavaEE items were removed from JDK11 and have to be added as dependencies (e.g., JAXB). AFAIK, there's nothing about JDK11 that would prevent a JavaEE project from running on it if all dependencies are present. 
There's a subreddit for help with Java /r/javahelp. I ran it and it prints out "apples oranges" for me, though.
Sounds to me that you're not running the code that you think you are.
Programming help should go in /r/javahelp. **Removed**
I've read about this recently, after 15 years of professionnal java coding 😅 I was wary of complex or exception throwing computations in static init, due to them being often hard to debug since they occur at class loading time. But this is another level of nuisance entirely!
I don't think anyone is going to be able to give you anything other than a very subjective opinion here, so I'll tell you that it doesn't really matter at all. As long as it's comfortable to look it, then move on.
TLDR: it hooks into the annotation processing stage of the compiler. --- I hoped that this post would actually explain how it worked, not just that it hooks into the annotation processing stage. It would have been nice to see some research into which specific bits of code do the heavy lifting, how they work, and how that is handled by the compiler. This post unfortunately just took a lot of words to say not very much at all. 
Yeah, you are right. Okay, I will ask a question that matters more. I am about a year away from graduating from my university with my Bachelors in CIS. Now honestly I didn't even think I would be needing to take coding classes in CIS, but two Java classes are required and I am struggling a bit. It's weird, I can read it really well, he gave us broken code and I am usually the first in class to finish, but writing the code, from I/O to Essential to implementation model to Psuedocode then code I am having a super hard time. Which books might you recommend for me to buy to learn from other than my school textbook, which frankly isn't working all that well. 
**Removed** as **low quality spam**. I was expecting to read something about using Project Lombok, not a lame explanation on custom annotations. There are near uncountable libraries that hook into annotation processing and Lombok is just another one of them. It's absolutely nothing specific to Lombok, nor special.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
What a pain in the dick
Whatever you decide on: Use a *proper* IDE, like *IntelliJ*, *Eclipse*, or *Netbeans*. Don't go for a plain text editor like Sublime. The decision is entirely on you. Still, this is not a question for this subreddit, not even for the other Java or programming related subreddits as it is entirely personal preference. BTW: Learning Java related questions go in /r/learnjava and programming related questions go in /r/javahelp. **Removed**
whats it trying to do and what level are you programming at?
Intro to programming this is a first year java class.
first year? equiv to GCSE, A-Level or other?
sent &amp;#x200B;
What happens if you externalize the computation to a different class? As in private static final String [] ARR; static { ARR = new ArrayInit().get (); } 
That's more or less exactly what the article recommends.
Well, that's catastrophic. What the hell was Oracle thinking?!
“If we don’t fuck this up what’s the point of c#?”
Geb framework makes this really expressive and easy to abide by. Highly recommend. 
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Adding Java EE plugins in NB 10 was buggy. I couldn't make it work.
When you append/load any data from a file you call ImportController.process(Container, Processor, Workspace), You are meant to be able to call 'new AppendProcessor()' in place of processor to append the new data to the graph, DefaultProcessor starts a new graph and MergeProcessor attempts to merge the new data with the existing data. 
Thanks but that wouldn’t work as I import a matrix first, and then try to append a nodes list. But the nodes list doesn’t gets appended or even imported correctly Now i just wrote my own importer and as I didn’t like the visualization ( i need images on the nodes and it was too hard to use image preview plugin as code), I also write my own displaying code. For more freedom in visualization 
Ah I see. Is your own displaying code working? And how did you go about doing that? I'm having an issue atm that I have a control that changes the background colour of the graph, but once I import data I can no longer change the background colour, I've debugged and the value gets set but never renders the changed background colour. 
Yeah seems to work fine. Im just not done yet, for now only the nodes and edges get displayed, but it’s all black for now 🤷🏼‍♂️ I just started Friday Gephi code is horrible, the only useful thing are the algorithms 
😅 I've been pulling my hair out for 2 weeks now. It's one of the worst frameworks I've ever had to work with. There is no support anywhere, and the examples dont tell you enough to get far.
Yes that’s why I do it on my own 
I’m primarily a Java developer and generally I’d say backend applications where performance and scalability are critical. 
We use it on backend side of webapplication. It has very good frameworks like hibernate, liquibase, etc.
IMHO Java is the most mature language for web-based applications. A lot of frameworks written for Java and it's the most used. Thanks to experiences of a lot of years on this field could be easier solve a lot of problem during the software development. Btw I developed either in Node.js but I found Java, for production, more ready. I don't know python, I can't make a diff. I want add also another information, with spring-boot and new technologies developed for Java, it is easy develop micro-services for a lot of purpose. 
For me performant backend services is where Java (or the JVM in general) really shines. You get a statically typed language with a huge ecosystem of libraries and frameworks that runs fast due to the JIT and jvm optimisations. You can write backend services in C and they will be fast but you have to deal with all the unsafe language behaviour and have less access to libraries. You can write backend services in Python which also has lots of libraries but you lose the type safety which in my opinion is really required if you want to keep a large project maintainable. If you are interested in Java, you should also check out Kotlin. Is has the same benefits as Java (it shares the runtime and libraries) but the language is more modern and ergonomic and provides more safety guarantees (nullability for example)
Why do you need a reason to learn a new language? It is \*always\* worth it, even if only for finding out what you don't like about it.
You can also add scala to the party with java and kotlin
This is the most recent demonstration that a full regression test suite for your application is required on *each and every* JDK update, whether it's a patch or a feature release. The difference between the two is whether or not they change the specification in some way, not -- I repeat, *not* -- in the probability of your app breaking due to the update (which is low either way, but can still happen occasionally, whether the update is a patch or feature release).
That correctness and security are more important than performance of relatively obscure code patterns?
I don't know, I use it every day at work and I have it set up at home as well.
This is the most recent demonstration that a full regression test suite for your application is required on *each and every* JDK update, whether it's a patch or a feature release. The difference between the two is in whether or not they change the specification in some way, and not -- I repeat, *not* -- in the probability of your app breaking due to the update (which is low either way, but can still happen occasionally, whether the update is a patch or feature release). In fact, there is a higher probability that some internal change to the JDK will break your app than an addition of an API method, or even the removal of a method no one uses. While in the past it was true that major releases had a higher likelihood of instability, that was mostly due to the fact that they contained a very large number of internal code changes, not because they allowed the specification to be changed. In the new model there are no more major releases, and because the feature releases -- while allowing specification changes -- contain fewer code changes than the old major releases, the difference in "risk" between a patch and a feature releases is not big [1]. The safest JDK upgrade process is likely the default one, of updating to each feature release, as it is the most gradual, more gradual than the old model while the “LTS path” is *less* gradual than the old model, although occasional, hopefully rare breakages can happen regardless of your upgrade strategy. [1]: It is true that a feature release might contain a big feature that has been in the works for years. However, we often inserts many hidden pieces of the big feature to versions prior to its release, precisely so that the code change when the feature is delivered is minimized. This process was much less gradual when we had major releases.
Professionally, java is worth it if you’re interested in work with large employers - banks, defense contractors, large companies (Apple, Netflix, etc) and various backend systems. Android dev is also largely java based. Some startups use it too, but in pretty different ways (jvm based languages, rather that java itself). I’d suggest to learn java even if above is not of particular interest - the language is probably the best designed one among all c-based syntaxes out there and still getting better. JVM based language ecosystem is also great (kotlin, scala). On the other hand, all the JEE/J2EE stuff can now be relegated to legacy that’s only good if you’re looking to port it to something else - or maintenance.
Exactly. 
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
This makes no sense. Would you like to be punched in the face, so you can learn what you don't like about it? I don't need to learn Perl to know that it would be an utter waste of my time.
Well python is a scripting language, and doing anything in C takes 5000 lines of code plus manual memory management so...java.
Python is far more than a scripting language. You should go have a deeper look. There are lots of interesting things it can do that are very difficult to do from java, both because of language features and because of libraries.
It looks like in your [submission](https://www.reddit.com/r/java/comments/bagujr/canon_eos_sdk_in_java_edsdk/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
I disagree, can you give me an example? 
It's the precompiling, isn't it? 
Getting punched in the face isn't comparable to learning a new programming language. &amp;#x200B; Learning different programming languages is very helpful for learning new ways to think about the problems you're solving. They can also help show you what's lacking in your main language's ecosystem. &amp;#x200B; Perl isn't *that* bad. Have you checked out Perl 6? It's pretty fun.
How can you disagree without citing examples and then ask for citations? All major languages have strengths and weaknesses (all languages, truth be told). Python has strengths that Java doesn't; Java has strengths that Python doesn't. Go has strengths that neither of those have but is weaker in places both of those are strong. I support a PaaS and am forced to use all of the languages my customers want to use. Sometimes something sucks in one language and is awesome in another. If I'm building a new web service, I'm likely going to go Java with Spring Boot first. If I'm consuming one, I'm likely going to go with Node or Python. The way they consume json just works better because of the languages' representations of maps. That's not to mention that their requests libraries are easier to use out of the box. 
less than 10%
No, you tell me that python has important libs that java hasn't. I disagree with you and ask you which ones and all I read is 10 lines of you bitching without examples. 
Wow. Nowhere am I bitching and I explicitly gave you a service example. Congrats. You are delegated as Java fanboy troll.
Java is really an object oriented language. Classes are missing in C and really pleasant to use in Java Python for scipting, C for hard saml part requiring performance, Java for the remaining part. In addition, if you are used to code in C then you will be able to write very efficient Java. IDE like IntelliJ are also very nice
My phone has a 1440p screen... I think it's more frustrating to be arbitrarily blocked
How is it possible to disagree when the underlying statement is vague and not directed. "Python is interesting. Look into it. It's hard to do Python things in Java. Because Python and Python Libs, and because Java and Java Libs." Anyways, all the best to you. An extra thanks to you for your comment. Hope your day is going swimmingly. =D
Good responses already in this thread, some additional points: since you already know C and Python, learning Java will expose you a bit deeper into the OOP paradigm than what Python does (and C doesn't at all), for example how people address and solve problems using OOP, for example through Java features like interfaces. Java is also a statically typed language and this is another major difference you will notice to Python. It's useful to gain experience in this family of programming languages that enforce type checks at compile time. The benefits and importance of type safety as well as things like scoping (public/private, etc.) tend to come up not when you're initially learning the language (and can feel a hindrance) but when you work on larger codebases and with a team of multiple engineers. Language design features addressing modularity and encapsulation become more evident in these bigger projects. &amp;#x200B;
I disagree, it's not hard to do Python things in Java. 
Like I care or what
I would only use Scala for apache spark. Aka big data management. 
Jesus Christ, did you just compare learning something new to getting punched in the face? What a terrible attitude to have.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
I find writing validations (atleast in Spring Boot) more difficult than it is do in Python frameworks. For example, if you want to write a custom validation, you'll need to create an annotation which requires two new classes. Ultimately, there are somethings which are far more verbose in Java compared to Python. Of course, Java has nothing close to Numpy.
Why thought? In my experience is a language with great features. Also dsl are quite easy to make
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
The language has too many features, the tooling is bad and it sometimes doesn't perfectly integrate with Java libraries. If I want a DSL I would choose groovy over Scala for these reasons. It's nice for spark, but that's it for me. 
Static initialization isn't that obscure.
Heavy computation in a static method in an uninitialized class is. And if you relied on it, as the post explains, it was always slow, so it always paid to move it to an initialized class.
There is opportunity cost involved in learning a new language. If I know Java/ Python/ C# and C, I don't think there's a whole lot to gain by learning Perl. It would also take my time that I could spend learning other things. I agree learning *some* languages can benefit me in my programming. I'd agree learning a functional language like Haskel would be useful for me as a Java programmer. I would learn lessons I could take into my Java programming. Learning Perl though. I think it would have very minimal use, and also minimal learning.
&gt; Learning Perl though. I think it would have very minimal use, and also minimal learning. There are diminishing returns in learning languages that don't offer new concepts, but then again, those would be really fast to learn. I don't think "learning" in this context means becoming an expert, but just scratching the surface to know what it's about, and what's unique to the language. Might be that even Perl would have something to offer to you that you're not aware of, even if you wouldn't be using the language itself directly...
&gt; I don't think "learning" in this context means becoming an expert, but just scratching the surface to know what it's about, and what's unique to the language. I'll grant that. I'm sure Perl has a decent amount of "new" concepts for someone that is familiar in the languages I listed above. If it was timeboxed, and the goal wasn't to become an expert, but to spend a couple days familiarising myself, I'd give it a go. But even still there's so many languages, technologies, frameworks, books, that I struggle finding time for stuff I think **would** actively benefit me.
I’m only a student right now but I’d love this to be downloadable. If I could point it at my current project, and have it update as I code, it would be much easier to visualize the connections between classes (which I’m currently terrible at). 
It looks like in your [submission](https://www.reddit.com/r/java/comments/bao183/i_wrote_a_short_script_or_change_systemwide_java/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
&gt;CPU-heavy computation in a static method in an uninitialized class is. Not so much if you lower the threshold for "CPU-heavy" by a few orders of magnitude, as that performance regression seems to do. &gt;And if you relied on it, as the post explains, it was always relatively slow, so it always paid to move it to an initialized class. Not if it was only a few times slower than the alternative and, as you say, generally wasn't CPU-heavy anyways. It's not usually worth much effort to optimize something that happens only once and isn't hot path. 
For this to affect you at all, whatever it is that you do in the uninitialized class must be compilable in the first place. If you don't have a hot loop in there, you'd be running in the interpreter, anyway. I.e. light computation will be unaffected.
If the performance is critical, use Java. Because it's almost as good as C++ for a server application. If the performance is even more critical, you can use C++. But it'll come with a bunch of other problems. Hello, memory corruption.
you seem to be very disappointed in agile scrum :)
Most typical static initializers won't see much (or any) of the performance slowdown described in Andrei's blog post. In fact a rather wide array of startup benchmarks (testing various app.servers, desktop app etc) saw no or a very small significant regression due the patches coming into 8u201/11.0.2. Any set of benchmarks will never be enough to catch every corner-case, though, so we're in the process of improving our coverage and fixing these issues as best we can. The most common issue involving a static initializer calling into static methods on the class itself should already be fixed in 13 EA builds ([https://bugs.openjdk.java.net/browse/JDK-8219974](https://bugs.openjdk.java.net/browse/JDK-8219974)) and will hopefully make it into 8 and 11 updates soon.
It looks like in your [submission](https://www.reddit.com/r/java/comments/barc29/asked_this_question_in_rlearnjava_but_didnt_get_a/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
How about this? https://java-browser.yawk.at/references/java.lang.String
Never thought of putting the jpa entity inside the jpa repository. Interesting ideas.
I don't think an apology is necessary -- just raising awareness about this milestone is important. One of the most interesting aspects of the Java ecosystem over the next year or two will be how the support and licensing situations play out, and where the community ends up in terms of JDK choice.
It is faster than InteliJ, doesn't required 10-key chord combinations, doesn't run indexing all the time, provides Javadoc and error messages on a sane way without requiring diving into settings, allows for mixed Java/native code debugging, ...
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
This article pretty much demonstrates why ORMs like Hibernate are just awful. They over complicate simple things and the learning curve is super high to do those simple things. Just use a JDBC helper library, write your own SQL, and be done with it. Ridiculous. 
You already submitted the **very same post** [20 days ago](https://redd.it/b2uh79) and then it was removed. What makes you think it is okay to repost this? **Removed** and as consequence for repeated spamming permanently and irrevocably banned from here.
Use Java: * for big code bases where long term maintainability are important. Having smart IDEs with refactoring tools becomes a must as code bases age and grow. * for back end servers that run for long periods of time running large code bases. JVM is hard to beat as a managed runtime platform. &amp;#x200B; DO NOT use Java: * for tiny programs * for programs that need ultra fast startup time -- like a simple command line tool &amp;#x200B; DO: * use the right tool for the right job &amp;#x200B;
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
TDD is literal cancer
I keep seeing similar articles, and keep wondering this: is this how you would _actually_ solve the roman numeral problem using TDD? Why waste time typing `return "I"`, `return "II", `if (value == 10)` etc? Obviously they're not part of the real solution, so why even bother?
Love me some good fearmongering.
Because it is part of the process. Even on a simple example, you need to follow the method. It will be essential when you will apply TDD on more complex projects.
Thanks for your reply. I get that the whole step by step thing becomes important in bigger projects, but is it really necessary to go trough it for those small near trivial functions? You could write all of the tests at once, and then you could write the implementation in one step and you'd be way faster, right?
No, that would be using your brain.
&gt; Software engineers are not factory workers; they're artists. Engineers aren't factory workers either. And engineering is the opposite of artistry. &gt; TDD requires a detailed spec, which is so very waterfall (and what a joke calling "strict monitoring of the rules" that "must be applied with the utmost rigour" 'agile'). The problem with waterfall isn't the process. It's BDUF - big design up front. Not just TDD but also Agile requires detailed specs for the stories actually implemented in an iteration. You start with a basic plan going forward, and only make detailed plans for the immediate iteration, when you have enough information to make accurate designs. Also, the difference between waterfall and Agile is cycle time. You must still do the activities of waterfall within an iteration (gather requirements, create a design, implement design, deploy design). Since the iterations are much shorter, you can gather feedback and make course corrections en route.
&gt; You could write all of the tests at once, and then you could write the implementation in one step and you'd be way faster, right? The reason why you don't go too far in that direction is that you'll get feedback as you implement. If you write a whole bunch of tests first, you assume an API, and you might find yourself having to rewrite tests based on new information. The book [Growing Object Oriented Software Guided By Tests](https://www.amazon.com/Growing-Object-Oriented-Software-Addison-Wesley-Signature-ebook/dp/B002TIOYVW) provides an alternative. As you come up with test cases, write them down. Either on a notecard or as empty test method bodies so you don't forget.
Much of the fear about the new update process has to do with psychology, and using irrelevant terms out of context. In the past, we had major releases, and they used to get free updates for some number of years. For example, JDK version 7 received free updates from 2011 until 2015. In comparison, JDK version 11 only received free updates (in Oracle's OpenJDK builds) from 9/18 until 3/19. At first this seems concerning. A closer examination would show that there is little to worry about (except the general, sometimes justified, worry about all changes: both the word "version" and the word "update" mean something very different in the new model, so the comparison above is completely meaningless. JDK 7 was a *major* release, a result of about 5 years of work. Some of the updates it received were bug fixes, but it also received semi-annual “limited update” releases, like [7u4](https://www.oracle.com/technetwork/java/javase/7u4-relnotes-1575007.html) and [7u6](https://www.oracle.com/technetwork/java/javase/7u6-relnotes-1729681.html) that contained significant features, including a whole new GC, G1, which was first supported in 7u4. In contrast, JDK 11 isn’t a major release. 10 wasn’t either, and neither was 12. In fact, there are no more major releases at all; JDK 9 was the last one ever. Instead, the semi-annual releases now get a new version number. Compare the number of fixes/new features in JDKs 10, 11 and 12, and you’ll see that they’re comparable in size to the old “limited update” releases, like 7u4 and 7u6. So the entire concept of a JDK “version” and what it means for it to be supported with “updates” is different now. One thing has changed between the old limited update releases and the new feature releases. The limited update releases, while they could and did include significant implementation changes to both HotSpot and the core libraries, could not change the JDK’s specification; i.e. they could not add or remove APIs. Under the old model, only major versions could change the specification. This limitation has been removed in the new model, and the new feature releases can and do change the JDK specification. What does that mean? [***It does not mean that the probability of your application breaking (to the degree that changes to the code are required) is greater for a feature release than for the limited update releases.***](https://www.reddit.com/r/java/comments/ba79hh/beware_of_computation_in_static_initializer_much/ekb4s3s/). It also most certainly does not mean that feature releases require more testing than the old update releases or even patches (every JDK release requires full regression tests). It does mean that changes to the JDK are more gradual, and that the effort you invest in JDK upgrades will likely be reduced (but we don’t know that for sure yet). It also means that the probability you will need to change your command line options and/or upgrade your dependencies is also somewhat higher for feature releases than for patch releases (and possibly more than the old limited update releases. Once again, whether you choose to remain on a “LTS version” or keep up with the feature releases, you will need to update your JDK every couple of months and do a full regression test. The new release model is more gradual, and meant to be safer. Of course, the community will take some time to adjust.
No, TDD warns against making too many assumptions in code. The sequence of tests you write is guided by the high level design you have in mind and your brain.
If you can't apply a process to an easy problem, you certainly can't apply it to a hard problem. This has nothing to do with TDD, that's simply the better way to learn something. 
&gt;feedback as you implement There's this great new tool out that makes TDD obselete: `System.out.println`
&gt;too many assumptions in code Yes, instead of building design assumptions into your code, just build them into your test . . . 's code
Artists don't get feedback? So when the light hits their canvas and bounces into their eye or when the comedian's audience falls out of their chairs, that's not feedback? If you need feedback, use System.out.println. Works 95% of the time, every time I don't see how writing a spec for every feature fits into a two-week release cycle. Do you have to update the spec every time the implementation deviates from it until the end of time? What a waste
I disagree with when people tell you to do things "Because that's how it's done". I implement TDD when I can, and I think the reason for the red part of red green refactor that you're talking about is to make sure you didn't write a test that always passes. I've gotten into this situation with more complex examples where I unknowingly wrote a test that always passes. I then figured everything was hunky dory once I filled out the rest of the actual application code because... hey it's green! You're basically stubbing out the application code to test the logic of your tests and make sure they're actually enforcing the contract.
Testing is an art. It's not the same art as writing software, but a unique beast that I feel is often overlooked as its own skill. I feel you can identify a really good test by two qualities: if I randomly change something, does a test break; and if I change the code but not the behavior, do all the tests still pass. &amp;#x200B; That said, test-first has its place as a tool. It can help you make your code more modular; it can help make sure you don't miss behavior in yours tests; and it can even help with design. That last one might sound off, but let me expand on it. You might not know exactly what you're writing, but you should probably know what it should do. This comes back to testing behavior, not code (which is why I hate mocks so very damn much). For instance, I don't care how you implement it, but a test like "account.debit(50); assertThat(account.getBalance()).isEqualTo(50);" should probably never need to change. &amp;#x200B; I strongly feel that the difference between test-first and test-after is like the difference between a nail and a screw. We could probably argue the merits of both until the heat-death of the universe, but they are just tools. &amp;#x200B; Ultimately, every test should give you confidence that your code works. But far more-so, tests should give you confidence that you didn't break something by changing it. &amp;#x200B; Sorry, end rant :P
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
It sounds like what you need is to 'stream' the JSON instead of parsing the entire thing into memory. There are many libraries available which will allow you to do this, such as google's GSON or Jackson. [This link](https://memorynotfound.com/gson-streaming-api-reading-and-writing-example/) shows how you can use GSON's JsonReader class to stream JSON data. What you could do is begin streaming the JSON and store the ID / text tuples into a list as you parse them. You could also keep track of how many characters have been read. Set an arbitrary upper character limit for the total amount of characters you want have in memory at a given time. Once you reach this limit during parsing you dispatch chunks of the parsed items to a worker thread pool. You would then wait for all workers to finish their processing, set your character read counter back to 0, and repeat the process. I don't think this method would be as performant as what you are currently, but I think it would allow you to avoid out of memory errors.
How does test-first lead to more modular code? Sometimes software behavior needs to change. If I write my test first, expecting to receive a byte array, then I'm locked into writing code that returns a byte array. If I realize that a ByteBuffer would work better, I have to change my whole test to expect ByteBuffers. Just as likely I'll decide it's not worth the trouble and stick to the inferior design because it doesn't require me to rewrite my big-ass test suite.
In this specific example, no one will give you enough time for such a trivial thing, so no. However on bigger things even trivial ones should be thoroughly tested
&gt;Shifting away from web applications, Java has nothing close to Numpy. Be careful when making general statements, you may unwittingly discount other good libraries that are available like DL4J and its subset ND4J. &amp;#x200B; [https://deeplearning4j.org/docs/latest/nd4j-overview](https://deeplearning4j.org/docs/latest/nd4j-overview)
I really spoils like to see only one project with a store larger than hello world which was written TDD. I mean TDD is great for business logic, but most parts aren't that easy. If you have to talk with the UI or databases or APIs they are a problem
Test-first does not lead to modular code as much as just a lot of unit tests. The "I'll have to change my whole test when I change an implementation" impact just isn't very large in properly modular code, and tests give a good indication of that.
Interesting ideas, will have to try them out some and think more on them. Two immediate thoughts though... &gt;Testing this code is extremely easy, and we don't need any mocking libraries. Just create a fake implementation of Spring Repository: Why is "not needing a mocking library" seen as any advantage? Seems like more work than simply using mockito. As a test library, it isn't going to imapct the size of the final deployable artifact. &gt;Spring is a heavy framework. This is a real drawback, but if you have already decided to use Spring... While Spring covers a lot of areas, it's not "heavy". While there is going to be an interesting discussion coming up between the Spring framework and micronaut, overall Spring does a good job at keeping their footprint small.
To your last point: I agree. I suspect test-first has the potential to sell more books than test-after. Modularity: I've found test-first good for quickly identifying code that should be injected. Things like, "hmm, I need to make sure this if check always passes to test my logic", now it's an interface. The trap I've found myself in with test-after is going to write the test, realizing I have this code which can have varying behavior, and realizing I've made some horrible mistakes. Again, I would never call test-first a silver bullet for all problems, but in this one case I've found it useful. Changing byte[] to ByteBuffer: God, haven't we all been here. Yeah, it sucks. And I don't want you to think I don't believe test-first has some real draw-backs. I have another rant about test-induced damage from a lot of experience. But in this case, and my experience, test-first can sometimes help me realize that I need to make this change earlier and save me the trouble of having to refactor the actual code. Or, in the other case, I realize that I need to make that change after feedback, where I would have tests in-place regardless because I'm not going to demo untested code.
If you have one class with 15 APIs, and they all return a byte array, your tests all have to accept a byte array. And when you change the return type to ByteBuffer, your test breaks in 45 places. Has nothing to do with modularity.
so how do you feel about xP? LOL - I don't disagree with you btw.
&gt;Just as likely I'll decide it's not worth the trouble and stick to the inferior design because it doesn't require me to rewrite my big-ass test suite. TDD doesn't mean "write a big ass test suite" first. It means you write your tests as you write your code. So yeah - if you discover you'd rather use a ByteBuffer then you'll have to change whatever tests you have written 'thus far'.
&gt; Artists don't get feedback? Engineering feedback. That is, the work product has functional and business requirements, and work progress has to be evaluated against the requirements to ensure that the product is fit for delivery. If continuous quality checks are not done during development, mistakes in construction can have significant costs later in the project as work has to be redone. Artistic feedback is nothing like this. &gt; I don't see how writing a spec for every feature fits into a two-week release cycle For someone so critical of Agile, you don't seem to have a very good understanding of what you're criticizing. Of course you don't write a spec for *every* feature in a two week iteration. Agile proposes planning horizons at increasing lengths of time out from the immediate future with decreasing specificity. You only write detailed specs for features you plan to implement in the shorter timeframe, and you write more generalized plans for the longer timeframes. As you succeed or fail to deliver on detailed short term goals, you can revisit the more general plans. &gt; Do you have to update the spec every time the implementation deviates from it until the end of time? Thus, obviously not.
For near trivial functions it doesn't take that long to write the tests with the code. And you're going to need tests anyway in case that "near trivial function" becomes less trivial (which they have a nasty habit of doing).
Wrong. TDD creates automated test suites which you repeatedly run to check against regressions. How does `System.out.println` help you with that? Are you going to manually do that everywhere for every change you make?
Yes. Test code and implementation code exist at different levels of abstraction. Test code is designed around demonstrating and validating individually specified features, while implementation code implements all features without distinction. Thus, with a well written test suite, a test failure will tell you what features you broke, giving you a clearer idea of how to fix the problem.
Java can be used for anything. You can even write a mobile app for IOS with RoboVM. Yes! People say scripts don't work with Java?? Wrong. You can build an always running tool that will let you run scripts inside instantly. It just a matter of having a JVM in memory.
can you please do a short summary?
Okay. It's still double the work
This is a good article and does not seem as over the top as the title suggests. Given how Oracle sued Google for building Android with Java and the oncoming Java license costs, are folks choosing other JDK's? That's my inclination bc I don't trust Oracle. I'm curious what others are doing.
I have a hard time understanding your point. Do you think Unit Tests are a waste in general? Or is it only the TDD approach, that bugs you? Because if you value unit tests at all, you will have to update them anyway, every time the implementation's spec changes. TDD goes just one step further, by mandating that you do it *before* you introduce a change, which in turn ensures your code *always* works according to the spec (or at least one test will be red). If you think unit testing is a waste in general, what alternative do you propose? Do you write any kind of tests - integration tests maybe? Because System.out.println is not testing at all, it is (at best) a form of manual verification. I personally do not think that can be good enough, for any non-trivial software project. Do you? If you don't, what other means do you employ, to ensure that the software you write actually works as intended?
&gt;I really spoils like to see only one project with a store larger than hello world which was written TDD. What?
If you want to see a better example of TDD at larger scale, I highly recommend the book [Growing Object Oriented Software Guided By Tests](https://www.amazon.com/Growing-Object-Oriented-Software-Addison-Wesley-Signature-ebook/dp/B002TIOYVW). &gt; If you have to talk with the UI or databases or APIs they are a problem The solution to this problem proposed by the GOOS book is hexagonal architecture (also known as Clean Architecture). You write your code in layers, with TDD code mostly in the business layer. You'll ultimately build out to the edges of the business layer, either at the UI layer or the DB layer. At that point, you create interfaces that describe your abstract requirements from a business perspective. Then, you write adapter classes which implement the abstract requirements specific to whatever UI or persistence technology you are using in the other layers. These adapters can easily tested against a real DB, for example, in an integration test, which do not require the rest of the application to be running.
&gt;Are you going to manually do that everywhere for every change you make? No. I'm only going to test the things that I think need testing. It's called judgement. If you don't trust yourself to know what code is suspect and what is not, then TDD might be for you
It looks like in your [submission](https://www.reddit.com/r/java/comments/bax7fh/looking_for_opinions_of_this_2year_java_program/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Something something non-sequitur? Test assumption good, impl assumption bad?
&gt; I'm only going to test the things that I think need testing. It's called judgement. Guess what, TDD doesn't mean TDD all things! It's that judgement thing you keep harping on. &gt; If you don't trust yourself to know what code is suspect and what is not That's great if you're working by yourself and you can anticipate everything that can possibly be suspect, and that nothing changes, ever. An automated test suite with high coverage is insurance, both against changes made by other people and by yourself when you've forgotten the details. But who needs insurance, when you have a mega-brain?
On our testing we found that there are sometime one of the JSON (I mean within the request of 2K element of one element) is failing anyway. But that is very rear case. Most of the case the current method succeed (Binary method pattern). The request that is not success we just mark that and move on.
&gt;update them anyway I don't have to update tests that haven't been written yet. Why would I split my attention between test concerns and implementation/design concerns when I don't have to? It's a needless context switch for paranoid people. System.out.println and the debugger are more than enough to get something feature-complete. You can write a hell of a lot better test a hell of a lot faster when you know what the hell you're testing. Targeted tests. 'Test everything' is childish
The performance is one of the concern is here. But I will implement the Streaming you propose and measure.
&gt; Why waste time typing return "I", return "II",if (value == 10)` etc? Obviously they're not part of the real solution, so why even bother? Because they're paid by the hour.
Just because you can't see the logical connection between two ideas does not make the juxtaposition a non-sequiter. Test assumption good because it is clearly stated in terms of a feature and expected result, and impl assumption good because it actually implements the feature.
&gt;TDD doesn't mean TDD all things! It's that judgement thing you keep harping on. "strict monitoring" "utmost rigor" 'test code is more important than real code' "The code coverage provided by the unit test series is intended to be maximum with a minimum of well over 80%" Did you read the thing?
Auto "correction" at my phone. If I get what I meant, I will correct it.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Agile (neither the cargo cult ideology, nor lower-case a iterative development) doesn't mean "nothing is planned", if you have a competent "Product Owner" or "Business Analyst" capacity on the team, you can have a process that arrives at fairly concrete examples of desired behavior of the system that can become acceptance tests for a given story, tests that should only need to be changed if the business logic changes, so will survive "boiling" during implementation, and are good candidates for a TDD approach. Obviously, most teams in the real world simply don't have real ownership of business logic and so developers get to figure that stuff out for their work as they are working on it, stumbling around in the process, having to raise their hands about obvious corner cases "What if the user adds the promotional item, adds the coupon, then removes the item? Should this maybe be a discount on the item instead of a credit on the order...?" deriving answers which are frankly, not their jobs. Businesses with large and effective teams should be able to elevate the asks-questions-and-solves-shit type of developer to analysis roles and be able to plow forward on the shoulders of junior devs that just get tickets and plow forward unimpeded.
&gt; Did you read the thing And yet, does that have to apply *everywhere*? You know, judgement? &gt; funny thing is, I don't believe in insurance That's just idiotic.
Thanks for the book. I use a simplified hexagonal pattern and this would help with TDD. May be my reluctance against TDD comes from all the brown-field projects I worked with.
Thanks for agreeing with me that OP's linked post is retarded
&gt;TDD warns against making too many assumptions in code &gt;Test assumption good &gt;impl assumption good Are you literally saying that TDD warns against too much of a good thing? Source?
Better to write a test that always fails. Or write the test after you're done like a normal person, hehe
I'm not sure that's true. Have you actually tried TDD or are you making assumptions about it? I've been experimenting with TDD myself lately and I don't find it to be 'double the work' at all. Sure - I've written and re-written some things. But I don't typically get \*that\* far before I realize I want to rework something (usually just the first few tests). I consider it to be part of the design/prototype process. Only once I've got a working solution I also have a test suite. The testing that I'm doing with unit tests I would be doing "from the front-end" anyway - so in many ways it's less work since I don't need to build/deploy/find test cases/etc. before I can test my code.
&gt; I don't have to update tests that haven't been written yet. Of course, but my statement was implying that the behavior of your code has to be altered in some way - think "new feature request", bug report, etc. &gt; Why would I split my attention between test concerns and implementation/design concerns when I don't have to? It's a needless context switch for paranoid people. I would argue that thinking about the behavior of the code you write, is necessary either way. Again TDD only mandates that you do it *before* implementing the behavior and do it in an iterative way. If you don't see value in quick iterations, why do agile software development in the first place? Would it not be much faster, to first collected all requirements, then come up with the perfect design, then implement and test it and finally put it into production? Far less context switches that way. &gt; System.out.println and the debugger are more than enough to get something feature-complete. You can write a hell of a lot better test a hell of a lot faster when you know what the hell you're testing. Targeted tests. 'Test everything' is childish That may or may not be true, depending on the size of the feature and its complexity. However, the question of how you deal with changes in a controlled manner, is arguably more important than "getting things done quickly". How do you guarantee, that the changes you introduce do not break any clients, which rely on your behavior? The goal of TDD is not to test everything for the sake of testing everything. The goal of TDD is to ensure that your code (still) does what its specification claims it does. It provides confidence when writing new code and ensures that you think twice before changing the behavior of existing code. Both are meaningful and valuable.
Something that you might wanna look at is "Obey the Testing Goat" which does exactly what you're talking about
Not sure what you mean by "one class with 15 APIs", but it has everything to do with modularity because it means your class is too big.
If someone is looking for faster startup time, you might be interested in [Ahead-of-Time Compilation](https://openjdk.java.net/jeps/295), delivered in Java 9.
&gt;Software engineers are not factory workers -- they're artists; So why write tests at all? &gt;TDD requires a detailed spec TDD requires a detailed spec at the time of implementation at the granularity of a class or a method. At point, you are
Definitely worth a look.
I think ´this is a better approach, because it will use end-to-end tests and not a low level "I test this interface"-Test, what makes it had to refactor. Lets say you have written 20 Tests for one Method, and add a new Parameter to this Method, because you changed the signature from `sayHello(name: string)` to `sayHello(givenName: string, familyName: string)` you would need to rewrite all these tests, but not with end-to-end tests. &amp;#x200B; I stay with my: TDD is only for small classes / projects in the green-field. (Change my mind) :) PS: I don't say tests are unnecessary, just TDD is. By the way, its proved that testet functions have mor errors, than not testet function. (TDD may be an exception, here)
&gt; Why is "not needing a mocking library" seen as any advantage? JPA is extremely difficult to mock, with a ton of intermediary objects that get created in call chains. Spring Data is also very magical, and it is better to directly test that magic. In got burned by mocking Spring Data, and found it easier to create a fake instance of the repository against H2.
 **AION creates a Virtual Machine based on the Java Virtual Machine allowing developers to create native Java decentralized Apps on the blockchain removing the limitations of Ethereum Solidity and easing blockchain developent and adoption** [https://blog.aion.network/aion-virtual-machine-avm-why-java-and-the-jvm-240b78ad8a77](https://blog.aion.network/aion-virtual-machine-avm-why-java-and-the-jvm-240b78ad8a77)
You're confusing two completely different uses of the word "assumption". One is making assumptions *in the design* based on knowledge of the requirements. These are assumptions about the domain. The other is assumptions *about the design*, such as what the API should look like, how complex the domain needs to be, etc. Essentially YAGNI.
I'm going based off of OP's post. A change in the behavior leads to a change in the test. The post says to immediately update the test. You're not allowed to batch changes by doing a big refactor (you're limited to 10 minutes per 'cycle') It's mindless. I don't want development to be 'driven' by tests. I want development to be driven by me. Why is there so much focus on process and not on substance? As much as I rag on comp sci programs, at least they focus on substance. Yeah, it would be nice if they taught you to how to use an IDE instead of reverse polish notation, but at least they don't tell you what order to write your code in. There's no process ideology that can tell you when to write which piece of code. Just use common sense. I guess if some people are really struggling as a programmer then I can't blame them for clinging to a preset methodology. If it was sold as training wheels I wouldn't mind, but it's sold as Something Every Developer Needs to Know. What a joke.
Wow, the idiotic comments keep on coming. Weak deflection, followed by baseless assumptions about someone you know nothing about.
So I'd say there is some benefit to writing the test before you write the code. The test itself is the contract you're following, so when I'm implementing it allows me separate in my mind which "Units of work" actually need to be tested. This helps me stay aligned with the business needs. The bigger one for me however is that the code I write is better structured because I can easily identify the seams for what should be mocked vs what I'm actually testing. Once I identify those seams between the different pieces of infrastructure then it's a LOT easier for me to do encapsulation properly and just generally engineer the code in a saner way that the next dev maintaining won't hate me for. I've attempted to write unit tests for badly structured code and it's a nightmare, usually requiring me to refactor the code itself because spaghetti. When my company entered that step of maturing their development process I definitely remember going through some code and being like... "God damnit. This is impossible to unit test without massive refactoring." And then feeling the shame when I looked up the git history and realized it was me that wrote it. I don't TDD 100% of the time. When I initially tried it it really threw me off my groove and was super unpleasant (which is probably why I still don't do it 100% of the time), but tbh, it's made me a better dev because it's stopped me from coding by the seat of my pants. For my personality, where I just kinda want to dive in and mess around with stuff until the problem is solved it's really helped.
Python has Numpy etc because Python itself is inefficient for numerical computation. In many cases Java can do without such libraries. With Panama and Valhalla Java’s number crunching abilities will improve even further.
&gt;JPA is extremely difficult to mock, with a ton of intermediary objects that get created in call chains. Spring Data is also very magical, and it is better to directly test that magic. Why would you need to mock that though? You should only be mocking the interaction point your code has with either JPA or Spring Data. You are using a Spring Data repo and are calling findById(T). As far as mocking goes why does it matter how Spring Data or JPA really does it? You should only care about how your code behaves based on what is returned. At least this is as far as in how and when mocking should be used; in unit testing. At an integration testing level you should start to care, in which case I would recommend using TestContainers if possible over H2. Don't get me wrong, H2 is a great alternative if you can't use [TestContainers](https://www.testcontainers.org/) (or some other tool that more accurately recreates the real instance of what you will be connecting to), however H2's behavior can vary at the margins from what the real database implementation you are using. Also, at least returning back to what the example the author provided. I'm not sure how it's better than using a mocking library, mockito or otherwise. I'm not trying to crush the author, I found the article really interesting (though would really love to see someone from the Spring Data team weigh in as I'm a little cautious about treating a repo as an instance object)... anyways... on twitter and in other places, i have noticed a trend of people complaining about mocking that it's bad and/or a "nuclear option". However I feel like it's much more a case of people not using mocks correctly.
You might find Michael Feathers [Working Effectively with Legacy Code](Working Effectively with Legacy Code https://www.amazon.com/dp/0131177052/ref=cm_sw_r_cp_apa_i_Ge7QCbHMWTWJC) useful. It demonstrates how to safely migrate towards TDD in legacy projects by building up automated functional tests which allow safe refactoring to more testable code.
Well once you're hitting UI or DB's you've passed the scope of a unit test. You should be mocking both those things. Maybe you're applying TDD in a way differently to me, but I've basically been doing write the test before you write the code. Oh and when you write that test make sure that you're only testing one thing. Deciding what a "thing" is is the hard part though.
test123
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
&gt;Would it not be much faster, to first collected all requirements, then come up with the perfect design, then implement and test it and finally put it into production? Ha. It sure would. If only that worked. I believe strongly in quick iterations. That's why I don't get bogged down in test land while I'm coding. I'm very much a code first, spec later, code first test later person. A spec written without any concern for the implementation details is bound to be bad unless it's so high-level that it's basically a scribble on a napkin. A specification should be a treasure map for those that follow after you saying, I built something elegant and functional and here's a platform-independent description of it so you can copy or extend it. &gt;How do you guarantee, that the changes you introduce do not break any clients, which rely on your behavior? If you're adding a feature, it shouldn't break anything. If you're changing a feature already in production, a test already exists (or it should). Use that. Specification is just a description of what you've built. Solve problems with code, not with specifications. Testing existed before TDD and testing will exist after long TDD is dead and gone.
always go with openjdk. oracle is a cancer, and you *will* fuck up somewhere if you use their stuff. oracle makes money by having vulture lawyers perform "audits" on your software. They find an oracle 8 on an unused, orphaned container from a test, but still running as a server? Boom, you need to license Java. Money, please! "Oh, and if you buy Oracle DB, maybe we bundle the cost of the JVM licensing into that, huh?" It's their strategy for growth: sue pieple into buying their products.
&gt;I'm going based off of OP's post. Yeah... But you're reading it with a lot of incorrect assumptions and baggage. Training wheels? It's obvious you've made up your mind are are just arguing partisan-like against something you don't like for "reasons". That's just arrogance. The "10 minutes per cycle" is not prescriptive but descriptive. He's not saying to limit your time just that it will be short by design. And he doesn't say not to refactor - it's one of the steps. That's why you have the tests - to verify your refactoring. If you're changing behavior by refactoring then you're not refactoring. I don't know why you think having a process is for "struggling" programmers. Top surgeons keep checklists to avoid making mistakes. Top pilots follow processes. If the process worked wouldn't "top programmers" follow one too?
I mean 15 methods. Including convenience methods, et cetera. Very modular
&gt; As far as mocking goes why does it matter how Spring Data or JPA really does it? Yes, because Spring Data is magical. Mocking is great for making expectations on behavior of an interface that you own, so you can set the rules about exactly what kind of data is returned and how parameters are used. For example, in addition to findById(T), there is also getById(T). The first returns null if the object is not found while the second returns a proxy which defers the query until member is accessed. Why would such a thing exist? If the object you are persisting has relationships with other objects, but you don't want to waste a query just to populate the relationship. Or, there's the fun "example API", which creates a ton of proxies to do cool things like populating an Integer property with "at least 3", which will be translated to the appropriate criteria in a criteria query. This magic is subtle, and I made assumptions about how the magic works in a mock and it resulted in a big due to an unforeseen circumstance, even though I had full test coverage. Interestingly, I think the difficulty of mocking Spring Data repositories is a good reason not to use them. A simple well behaved interface implemented by obvious JPQL and entity manager operations is both easier to understand and with dangerous gotchas.
If your requirements and specification process defines every API down to every convenience method, the number of parameters, the type of every parameter, that's insane. If not, when you add or subtract a parameter you break all your perfect little spec-hugging pre-written tests. When you change the return type you break all your pre-written tests. The vast majority of software features don't need to be prototyped. You just get in there and get going. I guess if you work at a bank which is slow as shit and still uses Windows XP then maybe you have to go through a long and tedious process before you get to touch any real code. You'd be surprised how quick and easy it is to write a good test for something that exists rather than for something that doesn't yet. &gt;leave testing to the end I never said leave testing to the end. I said leave writing unit tests (and anything with an assert in it) till the end. There's a difference. No one said you can't dick around with the debugger, some print lines, and a main method.
TDD didn't invent YAGNI. It doesn't have a monopoly on it. The fact that TDD promotes YAGNI doesn't shield itself from criticism. Did I ever criticize YAGNI? No. Just because TDD ideology is only 90% retarded and not 100% (because it borrowed something from the past) doesn't mean it's worth the paper it's printed on
If you think self-insured people are idiots then I have a reasonably strong basis for believing you're a bad driver and bad with money
&gt;This is the most recent demonstration that a full regression test suite for your application is required on *each and every*JDK update, This is probably general advice, no matter what platform you are on. And whatever the platforms release model look like.
No, I did not. You must have reading comprehension problems. Bummer, dude.
Out of curiosity, do you tend to write code from high-level to low-level (i.e. from public to private, outer to inner) or the reverse?
&gt; Getting punched in the face isn't comparable to learning a new programming language. I'm pointing out the idiocy in arguing that "It is \*always\* worth [learn a new language], *even if only for finding out what you don't like about it*." I've used upwards of 10 PLs for at least a year each. A new PL better have something worth my time before I expend effort and time learning it.
I didn't say self-insured drivers are idiots, just that hating on insurance in general is idiocy.
&gt; TDD didn't invent YAGNI Yeah, obviously not. It's an expression of YAGNI. Where on earth do you get the idea that I suggested that TDD has a *monopoly* on YAGNI? &gt; Did I ever criticize YAGNI? Uh, never said you did champ. I simply pointed out your confused arguments about "assumptions"
Checklists work great for hearts and helicopters which are mass-produced and must be handled with great care to avoid a catastrophe. The good thing about software engineering is that there are no real consequences until you ship. You can do things in whatever order you want. It's highly creative. You can code at 2:00am jacked up on Mountain Dew and it's just as good as coding at 9:00am drinking tea. Different things work for different people and the proof is in the pudding. It's artistry. That's why we don't need degrees, certifications, or unions. Those are for building bridges and launching satellites. Boring stuff
Don't play dumb
Don't project.
The fact that you responded to a comment that said TDD requires you to not use your brain with 'No, it includes YAGNI!' says so much
The insurance industry appreciates your patronage
&gt; It's BDUF - big design up front It's always hilarious when Agilist/TDDists creating pseudo-acronyms like this - you know at that point their arguments are completely hollow. It's a clear sign they can't actually provide anything to back their argument so they have to resort to making up acronyms.
::eyeroll::
checkmate. woooooooooooooooooooooo1!!
&gt;Yes, because Spring Data is magical. But that shouldn't matter *at the unit test level*. At the unit test level you want to see what your code does when X happens. X could be an appropriate value is returned, or when null is returned, or when an exception is thrown. You need neither understand Spring Data's internals nor understand when such conditions might occur, only understand the range of what could happen (which should be established via the API). &gt;For example, in addition to findById(T), there is also getById(T). The first returns null if the object is not found while the second returns a proxy which defers the query until member is accessed. Why would such a thing exist? that would be a question for the Spring Data team. I could offer an explanation... but they would be able to give a better one. It's ultimately irrelevant to the issue of mocking though. You'd know which one your code is using at the time you are creating a mock. And if some developer changes your code without changing the test classes/mocks your test should break. If it doesn't, that because you weren't properly checking either how your code is interacting with a dependency (what is being mocked) or the values being returned from the mock. &gt;Or, there's the fun "example API", which creates a ton of proxies to do cool things like populating an Integer property with "at least 3", which will be translated to the appropriate criteria in a criteria query. I'm sorry, I'm not following this...
Afaik, If you change the method signature you changed the code spec. A deeper change like that will break not only the tests, but the code base if that method is used for other classes. The problem, in my understanding, is not in the TDD, but how you do your code. TDD is something that is desirable in any project size. TDD guarantee a code that is safer, easy to maintain and ready to change in every stage. Also, something that had been tested and documented will definitely have more errors than something that was never tested to it's limits.
It looks like in your [submission](https://www.reddit.com/r/java/comments/bb05yb/learning_guidesignprogramming_with_javafx/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Definitely low to high. Especially if I don't know the solution when I start.
&gt; 'No, it includes YAGNI!' says so much Yes, your reply says a lot, that you're not arguing in good faith. I responded to a delusional comment about TDD requires you not to use your brain, with writing the test first to drive an implementation that requires the simplest possible solution, that is do not make assumptions *about the design* until further tests prove the need for more complex situations, which requires using your brain. That is by definition YAGNI. Sorry that TDD being YAGNI troubles you so much.
Your comment is a giant non-sequitur. It does not logically follow that making up acronyms as a shortcut for communication implies a lack of argument. An acronym is a mode of communication, not to be confused with the content of communication.
They provide a valuable service, I'm glad they appreciate my patronage.
&gt;a programmer should not add functionality until deemed necessary TDD violates YAGNI because it's test-first. Checkmate
You clearly do not understand what YAGNI means. Checkmate.
Yeah, me too. So your implementation code won't even touch the test code until you're almost done. So no point in writing the test code before you even have the public methods written
Damn. [Wikipedia](https://en.wikipedia.org/wiki/You_aren't_gonna_need_it) has failed me again. I would edit it to make it right but you seem to know more about YAGNI than me.
Damn. Wikipedia has failed me again. I would edit it to make it right but you seem to know more about YAGNI than me.
You've finally expressed for me why it was so uncomfortable for me to work this way. I think this is exactly why a lot of devs hate it too. The process forces me to kinda write the two at the same time though, starting with the test method, and what I think I need setup and mocked, then when I eventually do get to the actual call into the class I've thought a lot more about structure than if I go the other way. The test also evolves as I uncover more details, so if I said the test was complete when I started the implementation that'd be a lie. How I currently write they definitely evolve with each other, or I realize that I'll need multiple tests to handle what I'm writing.
When I don't understand something, I give it a go, so when I give my opinion on it I don't sound like an idiot. I guess ranting about your lack of understanding is fine too though.
I see this as a good exercise for a novice developer or a developer new to either the language structure/syntax or to TDD, but I've found in practice that once you're comfortable with the idea you can relax the discipline a little bit in order to be the most effective for the problem you are trying to solve. For examples like this I would just write all the tests to handle the expected cases up front before writing any part of the implementation. To me, the value of TDD is that you have short, if not instant, feedback between writing code and validating that it behaves the way you expect, and trying to dogmatically practice TDD by red-green-refactoring the microscopic problems can actually hurt that. It's a practice that needs to be done with care.
Heroin and Scientology -- Try It Before You Knock It
I want to stop by and say Thank you. I am learning Java and all the classes teach you things that don't come together into an idea that show you how Java applies to life. I was able to understand a TON more of what the possibilities are with the language. So thank you.
The point is that you need the tests to initially fail. A test that always fails tells you nothing, but a test that always passes also tells you nothing.
Your discussion of "low-level to high-level" vs "high-level to low-level" with the other poster is really interesting to me. I'm not firmly set with one approach or the other, but I do often like starting high to low. It can be helpful for me to consider how I would like to interact with an object, before I know *exactly* how I'm going implement it. I basically ask myself: if this were already written, how would I want to use it? This let's me write a nice API for the class that gives me the functionality for the problem at hand. It's this API that can have tests written against it in advance, without having the low-level details exactly figured out. The tricky part can be making sure that you understand what the implementation could be, so that you don't later realize your initial high-level API is incomplete or impossible. This tends to work best for problems that I already understand well or have defined thoroughly, and leads to APIs I actually like working with. If I don't have my head fully wrapped around a problem, then I like to start with the details and expand upwards.
Neat! Just for grins I looked for uses of `java.util.Map` and it says, &gt; Cowardly refusing to show more than 10,000 results (54,176 total). :-) The table of statistics is really interesting. The auto-expand when you mouse over it is a bit startling. Still, looks like it could be quite useful.
It sounds to me like you're getting good experience and you've done a fairly wide variety of stuff. It also sounds like you don't really like the whole dev ops stuff and would rather be doing more coding. I wonder if instead of choosing a job you've been letting them choose you, in which case you end up doing something you really don't like. So what you need to decide is where do you want to be in 5 years? If your current job isn't getting you there then you need to change jobs. When you interview be clear in what you're looking for and wait until you find a job that matches what you want.
Please star the repo in that case
Exactly, doesn't look surprising to me.
Why wouldn't I? The benefits are well documented.
It can seem really tedious to do things like this, but if you see your tests as a description of what your solution is delivering, you should be forced to justify any production code change by a test. I've been doing TDD most of my professional career. In times that I skip these (admittedly frustrating) steps, I can often end up forgetting to test branches of code. Fortunately, since TDD is **not** about mindless bashing of keys, because tests, you can often find that everything works fine, until you try to get the benefit of the process, by doing big redactors, or even better, letting other team members be empowered to do these large refactors. Missing a branch in a situation like this could be the difference between a flawless refactor and a phonecall at 3am potentially. Personally though, TDD started as an uphill battle. I know how to write code. Writing tests is just pointless, _i don't write bad code..._ of course, TDD isn't about making mad developers good developers, it's about protecting functioning code from unwanted changes. I used to get annoyed when I had to tell fellow developers they had broken my code. I mean wasn't it obvious why I was doing xyz in my code anyway? I left a comment there!... But the reality is people are focused just on what they are doing to get a ticket over the line. By writing tests you're empowering your team to make the changes they need to make, whilst giving them a barrier they must consciously cross in order to violate your tested behaviour of the application. All that being said, TDD is most valuable in teams and works well when other XP practices are followed, such as pairing. TDD won't stop you writing fragile tests. It won't stop you writing the wrong test. Reading the comments below, it's clear that TDD is divisive, and that isn't helped by the high barrier of entry before you start getting value from following it as a practice. That and the nature of all these articles, that include Roman numeral katas that aren't really representative of what you may typically do on a day to day.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
It looks like in your [submission](https://www.reddit.com/r/java/comments/bb4rvv/java_problems/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
I think your ups and downs are fairly normal - at least all of my colleagues from university report the same, even after years in their (partly quite impressive) jobs, including me. This is because - depending on one's personality - one tends to see what one doesn't know, forgetting about aaaaaaaall the many things you already know. We take our knowledge as given somewhen. You will see this clearly when you have a lot of contact with junior developers fresh from university, apprentices, trainees or even colleagues from university that are not interested in "being good at it". I'm a Java and Kotlin dev, but there's a very nice talk from Herb Sutter, just look this for a few minutes: [https://youtu.be/xnqTKD8uD64?t=128](https://youtu.be/xnqTKD8uD64?t=128) Additionally, I found myself sliding into the devops stuff too, two, three years ago, and I can approve that it can be very creepy. At some point in time i realized that I had configured kubernetes files, deployment automatisation and read log files, while not having coded for weaks. I have to admit that I don't really like it, but hey, I think you already know that microservices are the current big thing, establishing network apis as the new module boundaries... combined with agile processes, we're targeting a lot less coding and a lot more "throw it away and start fresh". Bad for someone who likes to really dig into code and make it "right", isn't it? :) I feel you. I think you have to chose between something you really like (traditional coding) and the current state of the market. My advise would be: If you have some very concrete chances to get a good mostly-coding job, than you should grab it. If not, you should go on investing into the devops world, because I there is a good chance you can like it somewhen. So basically: Keep on how you do it, it sounds to me that you are doing it just right. Just don't let your insecurities get stronger - I bet you already know a lot of things. And in every field nowadays there are so many different topics, that you can't be an expert in every field.
Test do indeed make it harder to refactor across the tested interfaces. Thats why you should only test the public api of a module (not class). If the implementation is very hard you may have to write unit tests for implementation details during the exploratory phase (better than using a repl imo). But those tests should be deleted before merging to master.
Official repo: [https://bitbucket.org/chromiumembedded/java-cef](https://bitbucket.org/chromiumembedded/java-cef/src/master/)
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
But learning how to apply a process to an easy problem doesn't necessarily teach you how to apply the same process to a hard problem: knowing how to bathe and shampoo a teddy bear doesn't really help you much when you need to do the same to a live cat.
&amp;#x200B; &gt;Lets say you have written 20 Tests for one Method Then, the method simply does too much and violates the SRP principle &amp;#x200B; &gt; you changed the signature from sayHello(name: string) to sayHello(givenName: string, familyName: string) you would need to rewrite all these tests, but not with end-to-end tests. Then you hopefully have learned an lesson: It would have been better to use `sayHello(person: Person)`
The beginning is always the hardest... with time task done in 1 week in past you will do it in 2 day, just don't stop continue. I advise you to do some stackoverflow help and some work in upwork at free time. you will suffer at beginning because it take time but just after all be easy...
Sun and Oracle never sued any of their JVM commercial partners. https://en.wikipedia.org/wiki/List_of_Java_virtual_machines#Proprietary_implementations It was Google that decided to trickle Sun, take advantage that they weren't in the best position to sue, and never bothered to acquire Sun and own Java in the process. So they take what they deserve. [Gosling's interview](https://twit.tv/shows/triangulation/episodes/245) at Triangulation.
Which happens to be mostly developed by people on Oracle's pay. No one else bothered to buy Sun, or overtake Oracle's proposal.
OK, but then the input validation of Person are at least 3to 5 test methods.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Well, if you have to teach your toddler the concept of shampooing: Would you give him his teddy to start, or your cat?
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
are you seriously comparing heroin, a drug that kills thousands every year, to TDD? lol.
Completely agree. TDD for me is great for projects having a lot of purchase, mission critical or life saving aspects. TDD would help prevent loss of money, life or data. But for most projects it's like Realm or MVVM, overrated and couples the work too much to move on features with any speed.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
for sure! This is a good start for a Cooder / Developer! As Developer you change your job often so you will always learn many new things!
Hi &amp;#x200B; I don't want to start my answer with "it really depends on a job...". I think you need to get some unbiased feedback. Try to pass Java certification for instance. Show your projects for more skilled developers and ask their opinion. I mean if you get only feedback from MOOC mentors (if is available) it is not enough. They have different objectives. And of course try to build something that is out of scope of your studies. Otherwise there is temptation just to copy-paste code without thinking about it.
Many years of experience still ask that. They hire you or they don't. Continuously push cogent code to your github repo
When you think you know the basics just apply. That's what I did and keep learning eversince.
Wouldn't you what
You can be "good enough" and still not be a good fit, or you can lack some essential skills but still be hired because you're regarded as promising. This might give you some insight into the minds and processes of the other side: [https://www.youtube.com/watch?v=r8RxkpUvxK0](https://www.youtube.com/watch?v=r8RxkpUvxK0)
https://skeptoid.com/episodes/4533
https://www.youtube.com/watch?v=N2qh5z7g3qk
You do the job. I'm really not snarking; there's jobs you can look at and know you're good enough for (because you've done it before, or something very similar) and there's jobs you can look at and know that you're out of your league (because you know there are parts that you know you can't do). In between you find out by doing. Mostly if you don't know, then it means you're not good enough right now -- you get good enough for this particular job by getting hired, finding out what you need that you don't know, and learning it. Hopefully there will be somebody else on-site to help you when you have trouble.
just start interviewing. expect to get rejected a bunch. keep track of things you get asked on interviews, and the things that you bomb on, those are your next study topics. Rinse and repeat. Getting that first job is the hardest, after a few years on the job, if you're any good, you'll know more than enough to get any other position. So don't be afraid to take a crappier job to start with in order to get started.
You’re not good enough. You didn’t even RTFM for the subreddit. /r/java is not for asking for help. Go to /r/javahelp or /r/learnjava if you need advice.
Can you explain like I'm 5 how Java can be free software (as in freedom) and yet have a proprietary class library that can't be reimplemented without a license (or commercial partnership)? I'm watching the interview you linked to right now but it would take more than an hour to check if my question is answered there.
You apply for a job where you meet at least 70% of the HR ~~wishlist~~ job description and strong educated guess that you can fulfill the rest of the job requirements within a month or two... and then they hire you. That is how you know you are ready. Get to job hunting, pal.
It was a dual license, JavaSE was not freely available for embedded devices.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
For anyone interested, the part about the lawsuit starts at about 57:00
Thank you, that was a nice summary. I don't know much about how dual licenses work but I acknowledge they exist.
&gt;How to know you are good enough for a job? You get hired that's how.
&gt; Ha. It sure would. If only that worked. Of course it does not. I'm glad we at least can agree on that. &gt; Specification is just a description of what you've built If you write the specification after you've already written the code, that statement is of course true. Which does not mean that writing the code first, is the only valid approach, that leads to a (good) specification. It is just what you prefer. At this point, I think it does not do much for either of use to continue this discussion. It is not my goal to convert you and you sure as hell wont convert me. So let's just leave it at that.
Most sbrigative answers here are right, just apply. One suggestion: don't "lie" in your resume, for instance today my company interviewed one guy that claimed to know hibernate (not even required for the job) and when asked "what's a persistence tool" he couldn't answer. He wasn't hired. So just put what you're confident to at least talk about a bit more. You don't have to be x master, but at least you should know what's x
I must start cooding, the cool version of coding /s
Microservices are a complex beast. If you are a junior on an existing project, the seniors should already have things configured, and microservices (if done correctly) should be as easy as git clone &amp;&amp; idea ./gradle.build to get going. Dependencies and orchestration needs to be stubbed out in local and dev environments, "your" microservice needs to be able to run in isolation, if not it is usually a signal that the stack is too interconnected. However if you are alone on a Microservice project, or it is not really up and running, then expect a lot of dev-ops'ing to get things going. Running Microservices is something that needs maturing in an organization, and I would not expect a junior to have the know-how on how to do it. If the organization is mature enough, ask for guidance, maybe suggest how to easier on-board juniors if they are open to it, or if the organization is immature, ask yourself if this is an opportunity to learn, or if it is more hassle than it is worth.
you must be a wonderful person to work with
depends what you mean by Cyber? On its own it's pretty meaningless.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
The first job I ever got I was completely unqualified for. I didn't know JavaScript, Oracle DB, or any of the other crap they were working with. I got lucky because the hiring manager was lazy as all hell and didn't feel like interviewing a lot of people. I learned on the job. Try your hand at solving some programming problems, know your sorting and searching algorithms, have a GitHub even if nothing in it is amazing. Just having a GitHub with stuff in it scores you points. Last time I was on the job market I thought about what kind of work I wanted to do. Telecoms? Security? Then I went out and searched job postings for those things to see what kinds of skills they were looking for and focused on the most commonly required ones first. You don't have to know everything and once you have a job that's when you'll learn how much you have left to learn.
Practice, practice, practice. Yes, read Effective Java by Josh Bloch, and use what it advises when a use case comes up. But unless you have needed to handle a situation, your grasp is only as good as your memory, rather than experience. What helps me become more well-rounded is to try and answer other people's questions. Other people deal with other problems, touching upon topics we'd rarely see otherwise. I continue to do this to this day, for any language I want to stay good at.
This is why I stopped using it. It Apache gets it together with some good release I may switch back due to some short comings in IntelliJ
And not get fired after giving you your shot. That is key.
in any good company I can point out some engineers who are not good enough. So getting "hired" is not the right measurement.
I'm trying to learn more about hibernate/jpa at the moment. How would you answer that? Could you say that hibernate is a persistence tool that uses object relational mapping?
I don't know hibernate personally, but know that it's what you said. Maybe someone more experienced could be more specific. You can guess how much that resume was wrong... To elaborate a bit more on that, there are this consulting agencies in my country (probably also in others) that sometimes make candidates take 2 weeks Java courses or a few months in best cases, that claim to cover a lot of things (impossible obviously for non programmers). Then said agencies put everything barely touched by the course as a competence of the candidate. It's not actually their fault most of the times... Not a nice practice that make both interviewers and candidates loose time
How about a feature for improving Keycloak for testing purposes? Don't get me wrong. Keycloak is the best thing I've found so far for writing tests that test the application from end-to-end including authentication. But it's very slow to start and providing the process for creating a set of test users is very complicated. &gt; 19:11:18,193 INFO [org.jboss.as] (Controller Boot Thread) WFLYSRV0025: Keycloak 5.0.0 (WildFly Core 7.0.0.Final) started in 87640ms - Started 670 of 930 services (649 services are lazy, passive or on-demand) 88 seconds is too long to be included in locally executed tests. Could you make it closer to 1 second? Regarding the complexity of creating a set of test users: To create users I first need to start Keycloak, then configure the authentication mechanism, then create the users, and finally export the realm (which can only be done when starting Keycloak). The resulting file is 48 kB of compact JSON which makes it unlikely anyone will understand the test data. I feel like I've provided less than a 1 kB worth of configuration when navigating the user interface. Could you make the export better reflect that, or even better, make configuration via file a first class citizen so that developers can be expected to write realm configurations in an editor without having to go via the Keycloak user interface and the export feature?
'code clean' doesn't exist. there's "the clean coder," and "Clean Code. Read both, to be honest. In terms of any programming language, the things that will end up getting you jobs and doing well on interviews is rarely the language itself, but your sense of design skills composing a whole solution. And the only way to hone this, at least for me, is practice. Just keep programming away. Try to teach yourself another programming language. Do some deep research on an open-source project of your choice. Study how they modeled the code, the domain objects, the solution space, the extension points, etc.
That day-one setup is always stressful. Lots of companies don't even have a documented process, and some forget to update it regularly. If your org doesn't have one, keep the notes somewhere that others can access it (wiki, google drive, whatever). As new folks come on, they update and enhance the document, and fix any errors. Dev Ops and env config are both necessary evils for now. 100k in tech in NYC is entry-level. If you can use git, fix basic bugs, implement basic features with a lot of oversight, you'll get that much pretty easily. And don't be discouraged if you don't get into amazon or google or whatever, there are thousands of companies that need java devs. just treat everything that seems hard/stressful as them paying you to learn. I've been doing this over 20 years, and I've never once sat down at a place and knew everything they were doing and the entire stack top-to-bottom. In even a medium-sized company, there are multiple dev teams. If one team doesn't want you, another might. Basically, just practice your skills and look at what the job descriptions are asking for. If you're in Java, you should be getting familiar with Guava, Lombok, Spring, JUnit, etc. You'll never know the whole stack going in; if you do, you're not gonna learn anything, and that job probably will bore you in a few weeks.
I'm not sure that's a great interview question tbh. I use hibernate daily and never heard of the terminology "persistence tool" used in the context of hibernate or any other orm framework. Why not ask an open ended question about hibernate? Do they like it, why is it used, compare to other solutions, should you use annotations/xml for entity mapping, etc. Could even get them to sketch out some pseudocode examples. You'll quickly discover how much they know and how passionate they are.
As I said, we don't use hibernate, we have an in-house orm for persistence. The term "persistence tool" may come from a rough translation of a quite common term for describing orm and the like in my language. The question came from the fact that the candidate specified a lot of competences after just a two week java course... The question was just to uncover that. Otherwise you're right I think. I didn't do the interview and can't say for sure what could be a good interview question since I'm not a senior
Make sure you ask for feedback if you don't get the job too. Not every company will provide it but for those that do, it'll be invaluable.
Fake it till you make it baby! Seriously though. This is it.
It's not that I don't enjoy dev ops. I just don't enjoy all dev ops. And because of the complexity of the environment, I get blocked and don't code for days. Before I get to the point where I'm interviewing again, I'd like to understand better the value of this experience I am in now. Long stretches go by where I'm learning little and I feel very uncomfortable about my skill level. I just don't understand where I should be at this point. Or what my goal is for what I should be able to do.
Companies sometimes don't care that you're good enough, they just care that you will take ownership of their problems. Also, you are also employing the "fake it till you make it" strategy with works in the best interests of both yourself and your employer, so don't feel bad. I felt the same way starting out, but I also had a good mentor and I really wanted to become software engineer, so it worked out.
Thank you, I appreciate the effort you put into this response. I think you stated what might be one of my problems; I don't have many conversations with other jr developers. And at work, the jr developers have been there a year and seem much further along. I listened to some of that talk, and although I wouldn't come close to calling myself an expert. I get the idea; I am often pessimistic about what my level is because of the sheer volume of proficiencies that I am exposed to and the volume of experience it would take to be comfortable with a job or project that uses them all. It also offers a good suggestion to find a proficiency benchmark for what a professional should know. I think that is what I am pursuing now. The thing is that I never reached that benchmark with java, but perhaps that isn't necessary if I will be pursuing microservices. This is along the lines of what I am searching for. I don't dislike dev ops. Particularly in smaller projects where I was responsible for the end to end delivery. But these were small projects with small tech stacks. When there is a stack of 20 technologies, the difficulty for me increases by orders of magnitude, and it becomes difficult for me to ever imagine feeling comfortable in the environment. I realize I shouldn't have to be an expert in many different topics, but I would like to understand more or less what my goal should be. I feel discouraged, unfocused, and spread thin without one.
I realize that it is, but I am a year into this profession now and I did not expect to feel this helpless. I am having too many project-specific issues that my colleagues can't solve and I can't seem to find on stack overflow. I get slowed down and question whether I should be doing something different, or be at someplace different, or just lower my expectation for what proficiency I feel I should have.
In my case, projects were good enough but also some keywords as well (JWT for example), on my interviews a lot of interviewers were surprised that as a junior (I recently got my first job) knew about Hibernate, JWT etc. Make some projects that use the important keywords on the market and you will find a job. It's not "fake", but it's targeted knowledge. I knew they wanted to hear about JWT, Spring etc and I invested on learning them. Keep your eyes on the market.
Thanks very much for your insight. This was particularly striking: *If you are a junior on an existing project, the seniors should already have things configured, and microservices (if done correctly) should be as easy as git clone &amp;&amp; idea ./gradle.build to get going.* That's what I thought it would be like, but it has not been at all. Every single component is problematic, likely because of the secure environment and internal repositories, and the other juniors either are not able to help me or have difficulty doing so. Consequently, large periods of time pass where I get completely stuck. It seems you might have some experiences in microservices. How would you judge that a developer has become proficient and you might consider him to have graduated from junior or entry level. I don't understand what the goal is apart from working on small tasks in these extremely complex and intimidating projects. What might you expect someone applying as a mid-level microservices professional be able to build?
why didnt they just ask "whats an orm" ?
Joel Spolsky has some very "elite" thoughts on this topic.
its a poorly worded question
Asked that too. No answer
The day one setup has become week-one for the three projects I have been involved with. We do have resources with instructions, but for one reason or another, they have often not worked. I spoke to a recruiter when I was contemplating my move back but was told that there were a lot of fresh graduates and that if I had a good opportunity, it might be preferential to stay in Europe and try again later on when I have some valuable experience. Not much time has passed, but I am not confident that I am building that skill set. You mentioned you had 20 years of experience. I'm not sure if part of that is in Microservices, but if so, what is an example for what you might expect a candidate with a year or two of experience to be able to do? Maybe this is the wrong tactic, and I should be thinking about how I should be working in these components and not building them. But I can't stop but feel like I should be setting a goal for what I should be able to build.
It seems that you are a microservices developer. I'm not sure what your seniority is, but if I were to ask you specifically, what would you expect a candidate to be proficient at building, how might you respond?
&gt; **How to know you are good enough for a job?** If you have to ask, then you are probably not. &amp;#x200B; The more relevant question is: Do you satisfy all the qualifications required in the job description, and are you willing or able to quickly get familiar enough with the task to perform well?
Link?
[Here is what I was thinking of.](https://neilonsoftware.com/books/personality-patterns-of-problematic-projects/developers/) A guy named Neil Green, not sure why I thought it was Joel S.
Thanks. I'm interested in reading up on these kind of things.
Those engineers have jobs don't they?
&gt; If you have to ask, then you are probably not. It's a sign of lack of motivation. I hadn't thought about it this way before, but I think that may be true. Why would one ask unless they're worried because they don't want to have to continually work on improving their skills? I don't know any programmers who wonder if they're "good enough for a job". It all depends anyway. We can't all be everything to everyone, so they question doesn't really even make sense.
My point is that you shouldn't dwell on that question and instead focus on your qualifications and your willingness to adapt. If you meet the job qualifications and your motivated enough to learn the actual task, then you should be fine. &amp;#x200B; &gt; Why would one ask unless they're worried because they don't want to have to continually work on improving their skills? &amp;#x200B; All programmer should continually work on improving their skills. The industry is advancing and people who aren't motivated enough to try to keep pace will find themselves antiquated. &amp;#x200B; I've been doing this for decades and I'm still learning about new programs, libraries, frameworks, strategies, process, etc. I didn't mean to sound negative or snarky. My message is that you're correct about being concerned about improving your skill but it has very little to do with you being "good enough".
Getting a job requires knowing more than you'll actually need while doing it. Learn the answers to the most common interview questions, practice algorithmic coding, and you'll land most low to mid level positions easily, depending on experience. When you can start bringing up examples from your own experiences to most of those questions, and exhibit qualities that indicate you won't become a drooling retard the first time you have to talk to people or function as an adult in general, (you'd be surprised how few good devs are capable of this) is when you'll start to consistently succeed at applying to senior or lead roles. Once you are in, your skill as a dev has to be acceptable at all times by your team's standards. This is not even what sets you up for future success, it is expected of you to be able to perform daily development tasks after a reasonable amount of ramp-up time. What will set you apart from your peers is personal drive. If you strive to do a better job, in less time, with more attention to detail than would normally be expected of you ("Does Business REALLY want to do that seemingly catastrophic thing they just asked me to do?" is a question not many devs ask) then you'll get ahead. Once you are in, ask yourself: "Would I be happy to be my own teammate?" Strive to do better until your answer to that question is something you are happy with. Of course, this is all relative. Since you are below Junior level at the moment, your objective should be the following: -Land job -Learn everything that is needed of you to know. -Ask. Ask. Ask. - If you are stuck, couldn't unstick yourself after about 20 minutes, and nobody knows about it, you fucked up. If nobody has time to help you, escalate until someone is coerced into helping you. -Try and memorize things being shown to you. If you can't follow, ask your mentor to repeat. Take notes. - Transition from being helped all the time, to being independent, to helping others on occasion. At this point, it isn't unreasonable to ask for a promotion to mid level. This is all based on personal experience, so your mileage may vary. I'm a java dev by trade and i'm also a technical interviewer at my company. Good luck to you!
Honestly if you are still in the job after 3 months you are good enough, if not educate yourself more then rinse and repeat
"Elite" implies "better than". I would hope we all try to be "better than" a profile like such as "The Diva" or "The Hostage Taker", but I wouldn't call that elitism, but a desire to be better that you are today. As for confusing me with Spolsky, I blame that on the similarity in our blog names. I will confess, he was there first.
I'm Neil Green, and the first thing I'll say is please don't use my difficult developer archetypes to try to gauge if you're good enough for a job. That's a misuse of their intent. Once you get a job, and you make all the same mistakes as the rest of us, years from now you'll can self-diagnose yourself using the archetypes with a bottle of Scotch in one hand and a codebase of broken dreams in the other. There is only one way to determine if you're good enough for a job - interview and see if you're offered the job. If they don't offer you the job, ask them why and if you're lucky they'll tell you, in which case you know what to work on. Once you fix whatever cost you the interview, try again at another company. The one caveat to this approach, however, is don't have your dream job be the first company you interview with.
I can certainly appreciate where you're coming from, and quite honestly in many ways, I agree with you. This is an alt account I have that, as you can see from my post history, struggle with ADHD, anxiety and knowledge gaps. You spoke about this in an audio clip on [this page](https://neilonsoftware.com/books/personality-patterns-of-problematic-projects/developers/the-incompetent/). To be perfectly honest, it scared me a bit. My brother, who is also a software dev - hits a problem and solves it methodically. I automatically panic - badly. But to lay it all out on the line, for the first time in my 42 years, I'm getting weekly therapy to deal with it. I guess the comment on "Elitism" was more a *sour way* of looking back at it, and thinking "Neil said that someone in my position is hopeless.". So I do honestly say, my comment was harsh and biased from where I am in my life right now, and not speaking honestly as unbiased as possible. I completely agree with you that we should try to be better ... I just hope I can as well.
Seconded. FWIW, it's [what Richard Brandon apparently recommends](https://www.azquotes.com/quote/613085).
Sun/Oracle have also used trademark licensing in the past such that you could only call your version Java if it passed the TCK test site, and the TCK cost lots of money to license. I don't know how this has changed in the days of a GPLed JDK.
This is one of the reasons why Effective Java is a good reread. I will forget things and relearn them every time.
Hey! I'm 42 as well. I've been seen therapists (plural - sometimes simultaneously) for 10 years for my ADHD and Anxiety, and once it was addressed, all of my knowledge gaps were easy to fill. Back then, I would routinely wake up and immediately throw up acid because of how bad my anxiety had gotten. Good times. The one thing you didn't mention is depression, but depression and anxiety tend to go hand-in-hand (at least they did for me). I should have a warning on my blog against people who are depressed reading the archetypes as they will tend to inaccurately attribute an archetype to themselves. The way I explain depression to people is that fried chicken and pineapple soda don't taste good anymore, and in that state you're going to have a bad time reading about "The Incompetent", as no matter how intelligent or skilled you actually are, depression convinces you that you actually are "The Incompetent". Depression is a cruel mistress. Regarding your brother, if there is some lingering depression, your brain is trying to operate while dragging a boat anchor. Throw some anxiety on top of that and it's like dragging a boat anchor with an engine that will red-line and then cut-out randomly. Get that addressed, and then reassess where you are vs. your brother. Right now, you need to cut that boat anchor loose and get a better throttle installed, then you can throw down and see who's boss.
Dude, thanks. You put in words what I was struggling to express. That "incompetent developer" type hit a couple of places I'm not proud of and trying to change, too. I'm relieved that it's just a couple of traits and easily fixed, though.
&gt; Those engineers have jobs don't they? They do. doesn't mean they are good.
Just curious, what notified you that you were being talked about in this thread? I see that you haven't posted in 20 days, so yeah.
Typically means Cyber Security
When I was after a job I wasn't that ready - my stack consisted of only plain java, hibernate and Lombok (weird flex, l know). But I knew my math, algorithms, design patterns(two months after starting java, several years of engineering in MATLAB prior) and I have stumbled upon a lead who values that and got a job. Now (3 months later) I'm decent full stack jun, somewhat proficient in front (css/thymeleaf, js/knockout), databases, cglib, spring and so on. Reach for a job. You doesn't have to be as smart as a middle to land an offer. The trick is even if you aren't ready - you will become ready very quickly after you start working.
Currently in web development because at my company you have to prove that you can learn. I'm not saying it's the best to swap web developers to a java developer position but, it helps with stack developing and my employer learns about work ethic.
Getting your first job when you have 0 professional experience is more about attitude and ability to learn. Talking about things you have done and how you overcame problems will show your problem solving ability.
You will **never** feel good enough. There is aways more to learn. No matter your age, start looking for jobs and internships. You will learn what the companies in your area are looking for and you will gain far more knowledge and experience than you would alone at home. I was in the same boat. Once I started looking for a job I got offered only an internship, so I knew my level and took it. I learned SO much. Not only Java but a lot of information about the job and industry itself. I wasted an year being too ashamed that I "didn't know enough". Best thing my mental told me when I told him about it was was "Yeah, 20 years of experience and I still feel that I don't know enough", and he is considered by many to be the best coder in my country. Feel the fear, feel the shame, do it anyway! What's the worse thing that they can say? "No." So what?! Just go to the next place. As long as you work hard, somebody will say yes. Best of luck!
Or, you're like me, self taught and totally unaware of your skill level in the real world. I'm able to design code using Design Patterns and some of the basics oop principles (SOLID, KISS etc..). I always manage to achieve what I intend to do. I know Maven, Junit, logging, Swing, JavaFx, JEE, JPA, a bit of Javascript, I try to follow the Effective Java "way"...etc etc But I have absolutely no idea what I'm worth on the market.
But are they good enough?
Please read this : https://www.azul.com/eliminating-java-update-confusion/ You can keep using Oracle JDK 8 on production.
The liver grows with the challenges it meets.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Just apply for positions and see what you get. If they reject you or give you to solve that you didnt know how to solve then you can learn that. Most companys take people for free internship pretty easily and in company you will learn tons of stuff required to be a programmer. I am 3rd year software engineering student who recently started working as java programmer full time and there are a lot of stuff you will not learn just by watching tutorials like how set up your working environment, vpns and shit, just by working you pick those things up. So just apply for job and thats it. If they reject you you can always reaply later, and it will actually look better for company because you will show you can improve yourself and you actually want that position. Good luck.
These comments lol
70% seems high.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/coding] [Quarkus, a Q&amp;A with John Clingan and Mark Little](https://www.reddit.com/r/coding/comments/bbjvsb/quarkus_a_qa_with_john_clingan_and_mark_little/) - [/r/programming] [Quarkus, a Q&amp;A with John Clingan and Mark Little](https://www.reddit.com/r/programming/comments/bbjvu2/quarkus_a_qa_with_john_clingan_and_mark_little/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
if you have some experience coding in Java you can learn OCA in a few days. OCA basically tests your ability to “compile” Java. It will give you a code example with a question, but the code does not compile because the package and import statements are switched around, that kinda thing. OCP is more difficult but if you can study 40 hours a week, you should be able to do it in a few weeks.
Hi. I'm currently studying for OCA and can tell you that the OCP book won't help you much, the content is very different. Highly recommend getting the OCA book. As for timeframes, it really depends on the individual. I've been preparing for around 3 months, but only studying/taking practice question and exams maybe 4 hours per week. The best way to assess your current level is to take a practice exam or quiz from an OCA book. Any other questions feel free to PM. My exam is next Wednesday :)
Even open source projects have a license. Java was (and is) available under two licenses, a commercial and an open source one. Google used neither. They claimed that the API part of the code cannot be copyrighted, and is therefore not Oracle's to license.
Go for it! And good luck with it...
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
\&gt; Monday, April 01 2019, posted by Sébastien Blanc I was actually pleasantly surprised that the blog post was legit.
&gt;Monday, April 01 2019, posted by Sébastien Blanc I was actually pleasantly surprised that the blog post was legit.
I took OCA and OCP several years back. I seem to remember the tests requiring me to be a human compiler. The code was displayed on the screen, and I needed to be able to understand exactly how it would compile and execute. What compiler errors might occur, how it would behave, etc.
Nope, GlassFish 5.* absolutely does not work with anything above Java 8.
Are you looking to sort them in a special way? There is some discussion [here](https://stackoverflow.com/questions/28366298/sorting-a-list-containing-nans?rq=1) about the default behavior.
Questions regarding programming help should go in /r/javahelp. **Removed**
You can try with less-- nothing is stopping you. That's just the way I sift through what I am going to reach for the brass ring.
I can see the source of inbound links to my blog, and when I checked out the source of the link, I found this thread. I wish I had a cooler answer, like having a squad of highly trained specialists who comb the internet looking for references to my content; or an hand-crafted Reddit AI that rings a bell in my office when it finds my name.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
I wrote a small tutorial on how to use Kotlin to write DSLs, which includes extension methods, operator overloading and method aliases.
Kotlin != Java -&gt; wrong subreddit. This subreddit is Java only, not JVM languages.
Hi desrtfx, thanks for the message, but have you read the blogpost? More than 50% of the post is about the Java 8 Time API, including some Java code samples. More than happy to remove it if it's considered inappropriate for this sub.
I have removed it as it was reported to us moderators already.
I don't agree with it, since my post is clearly about: - A history of time in Java - Java 8 Time and then it turns into: how to do it better with Kotlin. Oh well, no worries.
That's why Google avoided calling it "Java".
................ ^(IntelliJ)
This is probably your best bet: https://blog.payara.fish/java-11-support-in-payara-server-coming-soon
&gt; they could not add or remove APIs &gt; It does not mean that the probability of your application breaking Do you not see that these are direct contradictions? Call it psychology or whatever you want, but the end result of our evaluation of the new direction of the platform resulted in Java now being fully deprecated at our company. It's not just the fact that we now must prepare for breaking API changes every six months, but also the module system and the idea of bundling the JVM with the apps. Overall we just have no trust in Oracle's technical or business stewardship of Java anymore.
I started a library called paranamer over ten years ago to allow the discovery of parameter names easy in code. It gained features over a year or two, then I suggested use of it to the JetBrains people for IntelliJ, and they quickly closed/completed the feature request but used their own tech. I didn’t raise the same feature request for Eclipse, but should’ve I guess.
&gt; Do you not see that these are direct contradictions? No. Adding methods and classes doesn't break your app, and we don't just go around removing methods that people use. The removed API methods so far have been methods that virtually no one used. In contrast, implementation changes could (and sometimes do) break your app in unexpected ways, as I explain in some more detail [here](https://www.reddit.com/r/java/comments/ba79hh/beware_of_computation_in_static_initializer_much/ekb4s3s/). &gt; but the end result of our evaluation of the new direction of the platform resulted in Java now being fully deprecated at our company. Finally! I've been trying to convince you to ditch Java for a while now. But given your repeated uninformed comments, I seriously doubt you did any serious "evaluation." &gt; It's not just the fact that we now must prepare for breaking API changes every six months Which breaking API changes affected you? Was it `FileInputStream.finalize`, `LogManager.addPropertyListener` or `Thread.destroy()`? Because removing those (and some others like it) were pretty much the only API changes ever. &gt; Overall we just have no trust in Oracle's technical or business stewardship of Java anymore. Well, losing you is a small gain for the Java ecosystem as a whole, but we need all the help we could get. I guess you'll be trolling some other poor language's community, so I guess this is goodbye.
I see Eclipse made the same mistake IntelliJ made when they added the showing of method parameter names and put it on the left of the parameter. They should be on the right. Just use it for a bit and you will see why.
I really wish that their documentation would be more like Spring's or Hibernates. Extensive, easily searchable, with multiple examples explaining each part of the code and inner workings. Right now, I really don't like scattering and not to nitpick, but colours are a little too much too. Documentation is key to success. Nevertheless, as author says himself, they are in early stage and will keep on delivering. Furthermore I am looking forward when can I rewrite my Spring microservice into quarkus, because benefits are plentiful.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
There's no more "jre" for 11. But you can download and install JRE 8u202 from Liberica download page: [https://www.bell-sw.com/pages/java-8u202](https://www.bell-sw.com/pages/java-8u202) Also consider JDK 11.0.2 [https://www.bell-sw.com/pages/java-11.0.2](https://www.bell-sw.com/pages/java-11.0.2)
I did the oca exam last year. My suggestion would be to get a book which also includes practice exams and practice that till you are comfortable. It took me 6months of inconsistent practice.
You are good enough when you can convince an employer to hire you. The requirements can very from company to company. I made a checklist of the most important things if you wanna check it out: http://junior-dev.com/2019/03/05/junior-dev-fundamentals-checklist/ Good luck with your job search
I've used IntelliJ with the parameter hints for a while now, and still don't understand why you say this. Instead of "you'll see", maybe you could elaborate on why you think it should be this way?
Sorry for taking a while to respond, work got in the way :) Yes, I have experience as a senior/tech lead level developer/architech on microservice projects. Programming the microservices are often the easy part, getting them deployed and orchestrated is the hard part. From an junior, I expect (under guidance) to be able to develop a service to your definition of done, including deploying to an existing CI/CD pipeline. I expect the spesification to be mostly complete so they can focus on coding. On a mid level, I would expect the same, but also beeing able to help with specification work. I would also expect that you are understanding how the wheels are working and why the technologies chosen have been chosen, but also you should be able to do application architecture on preexisting archetypes for your organization. I will need you to understand the domain you are working on and be able to help others (ie juniors) to get the same understanding. I would not expect you to be able to configure a microservice chassis and pipeline from scratch, neither would I expect you to fully understand arcitechtural consequenses of designs. There are many things that goes into the step between junior -&gt; mid-level -&gt; senior, but usually it comes down to understanding more and more parts of a large system, and beeing able to take on responsibilities without beeing necessarily told to do so. Hope that helps.
It might be worth your time to do a profile on LinkedIn and GlassDoor to see how your compensation and benefits are lining up with others.
ok, so which editor has it on left so I can see why, because mr smarty pants doesn't want to tell us why
I must be old. In my day that was called infosec. Cyber sounds a little too much like management BS IMO.
Perhaps when you have a parameter named seconds, it would show as "x seconds"
I disagree. The parameter name hint should clearly go either above or below, so that it doesn't have to mess with the line width.
If you're looking to rewrite your Spring microservice, then I believe you should benefit from Micronaut right about now. It's already available, it has plenty of (IMHO) good documentation, and has Spring integration out of the box.
this issue covers it: https://youtrack.jetbrains.com/issue/IDEA-177152
I would be onboard with above or below as well!
Would this perf penalty also apply to complex or heavily initialized enum constructs? It has become rather trendy to move a lot of classic static singleton patterns into the enum system.
These also exist in the Apache Commons Math library.
If people want the option, I'd support that. It's wrong, though, to say that this choice is a "mistake", as I remain wholly unconvinced by the arguments made in that ticket. But if people feel strongly about it, it should be an option.
It’s cool that they provided a more functional API for registering Spring MVC routes and handlers similar to webflux but I am not sure if I will use it. I like declaring path mappings close to the handler code with annotations in the controller. Specifically for REST endpoints which in most cases cleanly map onto one controller per resource and one short method per action. That means one file that has all code and mappings bundled together. When implementing something REST-like with this new functional API you get one file with lots of (functional) boilerplate that just maps routes to the controller functions and the routes are in a separate file than the handling code.
Micronaut is great but it kept blowing up with Hibernate Validator (With native-image), they are working on their own bean validation. The developer experience is much better in micronaut but the issue with native-image was a breaker for me
We found that typical tests were using a lot of memory when using Mockito. A hotpath in Mockito was storing `Throwable`s that (with large stacktraces) could consume a lot of memory over time. For one of our tests, we saw a reduction from 1.5GB to 400MB. For those interested, the fix is at https://github.com/mockito/mockito/pull/1683
I'm thinking to instal Java 8, JRE 8 and JDK 8. Would that solve my issue? Would I still have to go to the marketplace and instal e(fx)clipse?
The switched direction makes no sense because it's opposite to everything else in Java. Variable name comes before its value and this is just being consistent.
Do you also define your variables this way? `"John" = String name;`
It took me about three months to prepare for the OCA. But I could learn only 1 or 2 hours a day. So I think in your case it is possible to prepare for the exam during 4 weeks. BTW I highly recommend to use some emulator exam tool which can help you realize all exam process
It was intuitive at first. But then it messes with the code flow when reading it. I just disabled it. It would be nice if it just appears when you hover over a method, that way it’s not too intrusive.
i got so used to it I don't even notice it (unless I need it) anymore
You could try to prepare for the OCA, OCP exams and pass it. The preparation helps to learn Java core very deeply. From my experience it took me about 7or 8 months to prepare for these exams, but it is worth it :)
Given your repeated, blind shilling for Oracle while completely failing to even acknowledge valid technical arguments if they go against the company line, we both know you're just being paid to spread propaganda around the Internet.
First, I'm not "shilling for Oracle"; I'm an Oracle employee. Second, I've acknowledged, and engaged every technical argument made in whatever direction, and I promise to engage in good faith any of your technical argument if you were ever to make one. Third, I am not at all paid to spread propaganda. Finally, I think we've agreed that Java does not meet your needs. You've finally "deprecated" its use in your organization. Why do you keep coming back?
rant: It took me 10 minutes to [find](http://mail.openjdk.java.net/pipermail/javadoc-dev/2018-April/000469.html) javadoc tags documentation which is [deeply hidden here](https://docs.oracle.com/en/java/javase/12/docs/specs/doc-comment-spec.html)
Is Eclipse IDE still relevant for anyone? This is a legit question.
&gt; For example, in addition to findById(T), there is also getById(T). You're referring to `JpaRepository`. First of all, as indicated in [quite a few places](https://stackoverflow.com/a/20784007/18122), it's not recommended to extend the store specific interfaces in the first place. They exist to expose store specific functionality *if absolutely needed*. The difference between looking up a materialized object or a reference to one that lazily gets resolved on first access is introduced by JPA and the method was introduced in 2013. The [ticket around it](https://jira.spring.io/browse/DATAJPA-83) has a bit of history. As you can see from the discussion over there, we've been hesitant to add it but there seem to be quite a few users that want to use store-specific functionality. There's a general theme in Spring Data repositories: you declare *exactly* the parts that you think the repository for your aggregate needs to expose. Do you think there are too many methods in `CrudRepository`? Fine, just implement `Repository` (no methods included) and declare exactly the methods you need. Don't like query by example? Don't use it. Spring Data repositories have been *designed* for very specific design as we're aware that people are very picky when it comes to API design. On top of that, I'm with Billy and completely do not get why you thing Spring Data repositories are hard to mock: - they are interfaces in the first place, so mocking them could not be easier - they allow you to declare methods in a store independent way, so that your client code can be as decoupled from the store implementation as possible. - even the query by example support is basically a clearly described contract: here's a sample, find matching elements and it's easy to mock the invocations to those methods. To wrap things off, we're always open for feedback. So if you feel some things don't work, please report issues in our bug trackers.
Personally, I found your article very interesting and relate to it because I've definitely met my fair share of co-workers who fit the stereotypes described in your article.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Time depends of you but a good strategy is to get a good book and allocate at least 1 hour per day, OCA/OCP takes a lot of snippets to really crack Java internals. From experience I took Jeane's Boyarsky books for OCA and OCP and made a self commitment to end a chapter per week, hence it took me three months of preparation. Anyway, OCA is no more with Java 11, just two tests for OCP
Yes
OK...so long as I'm not doing more harm than good.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
I can understand the first reason but the second one is easily resolved using a code formatter. I do not use IntelliJ but I'm pretty sure it includes a code formatter and a checkstyle integration.
Anyone who still uses Eclipse in 2019 has lost control over their life.
No - IntelliJ all the way
[removed]
Yeah for universities it's the recommended IDE to begin with, though after a while many switch to intellij
Do you know why this would be the case? JetBrains gives the full suite of products (the ultimate / paid version) for free to universities and non-profit organisations, all someone needs to do is register their account using an e-mail address from the university's domain.
So does Microsoft with their products. It's a common marketing practice where companies create a dependency to theirs commercial products under the pretense of being free. When people start working they ask for the commercial license to their employer.
Yes, I am fully aware of that and I don’t really see a problem with it, those IDEs are market leaders (at least IntelliJ for Java)
Because it isn't "free" forever. JetBrains may change their license anytime and then you're stuck with either revising the IntelliJ dependent course material or buy the license. This isn't an issue of you use actually free software to begin with.
Yep. I’m glad eclipse exists but I gladly pay out of my own pocket for IntelliJ.
I actually really liked that feature since it was introduced.
It's IntelliJ here. Also JetBrains hands out free licences to every uni students. They know it's a good investment.
66% of respondents consider themselves above average....... Interesting
But its eclipse.
A lot of IT companies in germany force their devs to use eclipse, because the customer forces it (special libraries, OSGi support, plugin mechanism - nothing special) - the automotive sector for example wouldn't exist without java.
Why?
Hey Neil, thanks the reply and again, I must eat some humble pie and apologize for the harsh wording initially in my post. Depression is something I am absolutely dealing with (and it's gone hand in hand for me since my teens). Started taking Cymbalta not even a week ago and upped my Concerta for ADHD which is actually made a night/day difference. So I'm finally, truly for the first time, taking all the right steps to get my emotional/mental health blockers addressed. You're absolutely right that once those things are address, then knowledge gaps and skill sets are easy to remedy. It's interesting, just in my last visit my psychologist said that "No wonder you can't study or concentrate when your frontal lobe is fully consumed with managing your catastrophizing anxiety, worry and handling all your emotional static.". Thanks for the reassurance on mixing the "The Incompetent" archetype with depression/confidence issues. It's easy to immediately label yourself with that and just say "Welp, that's me .. I'm fucked." Excellent analogy on the boat anchor, my brother and I get into arguments regarding this issue, since he has no issue with anxiety, in this regard, he simply says "don't get worked up over it, just trust the process and work the problem". But when your "redlining" with anxiety ... oh boy, you have very little "brain CPU cycles" left that can even think straight, never mind rationally tackle a coding issue. Thanks again for the reassuring words. It means a lot. I'll be reading your articles/blogs regularly. You genuinely seem like a good dude.
Yes comrade it vill be free for you we just need your money
This is great, variance is an obscure subject in Java, not all developers know about it. Thanks for sharing!
I see a lot of contravariance in the Java 8+ functional interfaces, although if I'm honest I haven't taken the time to understand why. For example, see the definition of `andThen` in [Bifunction](https://docs.oracle.com/javase/8/docs/api/java/util/function/BiFunction.html).
It's almost definitely individual bias, however, not everyone took the survey, so they could be right.
I'm almost 100% sure is the first part. The average programmer think they are better than they are.
Suppose you have a type `Square` with a supertype `Shape`. In call like `f.andThen(g)`, `g` needs to be able to accept anything `f` returns, so if the return type of `f` is `Shape`, it's OK for the argument type of `g` to the `Shape`, because a `Shape` is a `Shape`. It's also OK for the argument type of `g` to be `Object`, because a Shape is an `Object`. But it's not OK if the argument type of `g` is `Square`, because the `Shape` returned by `f` isn't necessarily a `Square`.
Kind of misses the real point of variance which is to assign a `List&lt;Joe&gt;` to `List&lt;Person&gt;`, mirroring the element subtyping also over collections of the type.
Think about it like this : - Apples are fruit. - A basket of apples is basket of fruit. Covariant. - A statement about fruit is a statement about apples. Contravariant. So say I want to filter a stream of apples. I'm alright with a predicate `isRedFruit`, that can check all fruit. So generally when you ask someone for a function, your requirement is contravariant for that function's parameters. I want to put my stuff in. If you can take more general stuff, I don't care.
I'm confused why something like `List&lt;? extends Joe&gt; joes = new ArrayList&lt;&gt;();` is allowed. How would the diamond operator apply here when the generic type isn't clear?
I didn't test it with a real project, this is interesting feedback. As for me, the Spring integration worked great on a sample.
When the stack consists of 20 technologies, it is probably complicated for EVERYONE :D The thing is, it really depends on the requirements of your company and your team. There are some companies that try to hire people with a broad but also deep knowledge about programming. People who do not only know Java, but also have experience with unmanaged platforms, dynamic languages, functional programming languages, maybe experience with lower level programming, console debugging, network debugging... because those people won't suddenly see a lambda in Java and say "oh, I don't understand that, I don't use that". Caution, very extreme example, no offence here. And then there are companies that don't expect to hire many people with a deep knowledge but instead want absolute experts in Spring, version x.y because that's the only stack they use. To be productive, it's not necessary for programmers in this field to understand the complete stack or be able to debug a c++ program, because the used technology is homogeneous enough. And it's better for everyone when programmers are experts in spring, because then you get really good and maintainable projects for spring developers.
I'm not exactly a microservices developer, my programming experience is roughly 6-7 years, but I really did a lot of things in this time and all of them very excessively. I think with microservices, you really have to be aware of the network. Coarse knowledge about network is sufficient if you are not hiring a kubernetes developer, for example how does TCP work, IP networks, DNS... and then there is HTTP, which is (probably) the bread and butter of the job, so you should know how this thing works. Programming in general should be solid, but this again depends on the tech stack the company expects to be used, the salary, what kind of people the rest of the team is etc.
Ok, got it
Great article! For me reading the chapter on generics and variance in the book Kotlin in Action is what made variance finally "click" for me in both Kotlin and Java.
How would that look with a declared parameter name of `foobar` and a variable passed in named `a`. Wouldn't that distort the line width just the same way?
What does a code formatter have to do with the position of something that isn’t really in the code?
Irrelevant since the parameter name hints aren’t really in the code. It is all about the ease of editing a parameter value and having the parameter hint on the left makes editing parameter values a nightmare.
I still use Eclipse, guess I like to live dangerously
I was talking about the linked issue...
Always found that the words around "variance" are absolutely awful. There is no relation with the meaning
That's like asking is opensource still relevant for anyone? And the answer should be obvious.
................ ^No
&gt; The danger has always been that if you pass your Integer[] to a method that accepts Object[], that method can literally put anything in there. It’s a risk you take - not matter how small - when using third party code. *Cough...* Object[] oo = new Integer[1]; oo[0] = new Object(); &gt; Exception in thread "main" java.lang.ArrayStoreException: java.lang.Object
Its pretty cleat to the compiler. &lt;? extends Joe&gt; tells the compiler that everything in that collection extends Joe so it treats every object inside the collection as Joe
Yeah using IntelliJ is like having an iPhone. It's just too mainstream.
Right, let me amend that. Thanks!
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
&gt;We spent a couple of years discussing that at OpenJDK and within the JCP so that we could streamline the processes to make sure that we could do the new release cadence. We had to do that to keep up with modern application development. I'm very unapologetic about the new release cadence because, doing major releases every three to five years, having a three to five-year window to get a feature out, it's just not sustainable anymore. It worked great in the '90s. It even worked great in the 2000s, but I want to be on the stage with five Java vendors talking about their products and solutions and not be talking about, "Is Java still relevant in the world of node?" We need to keep relevant. A release cadence of six months is how we keep relevant in the cloud. Pick your target audience then, either you want Java "relevant in the world of node" or you want Java to continue being the platform of choice in major enterprises. The 3-5 year cadence of change in a core infrastructure component is exactly what is expected in large scale enterprise. Likeliest outcome is that enterprises that stay with Java will continue on the 3 year cycles sticking to the LTS releases (Java 11 now, Java 17 next) which is exactly what Oracle is banking on happening. The only question then is, will those enterprises be willing to pay for licenses or go with one of the OpenJDK options.
Thanks, this is helpful!
Makes sense, thanks!
Good article but it doesn’t cover all of the holes in Java’s type system regarding generics/variance: - lower bounds on method type parameters are allowed, but not upper bounds. Why? Because fuck you, that’s why. - intersection types are allowed as method type parameters on classes but not as return types. Sorry we didn’t feel like actually implementing things fully. - void is not considered a super type of Object for covariance. Why? See fuck you above - type parameters are not allowed as bounds of an intersection type because that type parameter might be bounded as a class instead of an interface and then compiler might have to *gasp* display an error in this case. I swear there have been like 3 people in the history of Java development that actually understood type theory. I can’t believe that Bracha and Wadler are actually happy with how their prototype was handled.
This doesn’t make it “OK”. If your code fails at runtime, no matter the reason, you’ve already lost the game.
That's the problem of the library/class writer though, inserting wrong types into a superclass array.
If I write a method as foo(Object[] a) how do I have any idea what the runtime type of a is? It could be being called from code I’ve never seen in my life. Covariant arrays are fundamentally broken and they were done in the name of “convenience” (i.e to match the brokenness of C)
Ahh ok, got it. Yeah, the 2nd issue there seems a non issue to me as well. The first issue and the gif in the comments show the more important issues IMHO.
Integer i = "string"; Fails at compile time, as ist should. Array inserts can fail at runtime. You have limited compile time type safety when inserting in arrays. With generics, you have compile time type safety (unless you "opt-out" by using casts or raw types)
What are the advantages over https://github.com/wendykierp/JTransforms? Also, how do they compare in terms of performance?
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
The term comes from category theory: https://en.wikipedia.org/wiki/Functor#Covariance_and_contravariance
It might, it certainly wouldn't have to all the time though. If there was only a single parameter, the `foobar` could extend beyond the parameter list on both sides. If some of the parameter names are shorter than the arguments while some are longer, it might kind of balance out. Also, at least in IntelliJ, the hint text is much smaller than the code, so the hint text `foobar` might fit well above the argument named `foo`. Honestly, I hadn't given it much though until this thread, I just know that the way hints currently work in IntelliJ throws my line lenght off enough to make me turn them off in most situations, I feel like the above or below option could possibly improve that.
[jdbi.org](https://jdbi.org) ?
Do I Configure Build Path and add external jar? jdbi-core-3.7.0.jar
Java doesn't have true variance because of how the interfaces were designed. Since `List` is mutable, then if it were covariant, it would be as broken as arrays. That's why wildcards were introduced, so the programmer can use collections covariantly in read-only contexts and invariantly elsewhere. And with wildcards, true variance was deemed unnecessary. In contrast, Scala uses immutable collections by default, so it can have true variance and `List[Joe] &lt;: List[Person]` without any problems.
Hell ya
You think somebody who knew nothing about signal processing and wrote a library to solve a problem they had did in-depth research on other libraries that solve the same problem? Or did benchmarks? Come on.
what's your pb with jdbc? which database are you targeting?
Add it as a dependency in your POM.
I don't really understand your message. What is your goal? What do you want to do? Java is more oriented on the usage than on a particular theory. So the goal is important and I don't catch yours
&gt;GregorianCalendar.getInstance(TimeZone.getTimeZone("UTC")) doesn't give the correct answer, it gives a date one hour ahead. Are you sure it's wrong? A larg part of the world is on daylight saving time, but UTC never is.
 How are you visualizing the time set in your instance?
Daylight saving time is the extra hour added in summer ? If so, how can it affect the result ? I mean, UTC is my reference and it never changes :/
&gt; promise to engage in good faith any of your own technical argument if you were ever to make one You have failed to do it even in this very comment. As I pointed out, the API used to be stable between releases, which was years. Now there can be breaking API changes every six months. You made bad faith attempts to dismiss that fact. It's right there for everyone to read. It is blindingly obvious that you're spamming the Oracle company line here, as you're paid to do. You're demonstrating everything that is wrong with Oracle. Zero interest in technology or its users, and only interest in making money. Perhaps that's why you work for a company whose business is to sue people rather than build great technologies.
If you mean the format, i want it as "new SimpleDateFormat("HH:mm")"
I think it could be because getTime() returns a Date, which is a clusterfuck object, and the serializer/formatter also needs to have the TimeZone set. But OP didn’t answer my question so not sure.
The slogan I seem remember is: Once you drive a Toyota You'll Never Stop! Maybe that slogan is more related to Java stack pop?
Man, I fucking hate Java old Date API. Basically, the Date object returned by the Calendar does not contain the TimeZone in it. You need to set the TimeZone on your formatter: TimeZone timeZone = TimeZone.getTimeZone("UTC"); SimpleDateFormat simpleDateFormat = new SimpleDateFormat("HH:mm”); simpleDateFormat.setTimeZone(timeZone);
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
No.
So this is higher level (specific to audio files), as compared to the other FFT library mentioned, or Apache Commons Math?