Yes, it has fantastic code completion. HTML has completion of each tag, its attributes, classes from your CSS files, and auto-fills the ="s. Never used the CSS completion, I can't say anything about that, but I'd assume it's very good. JavaScript/jQuery completion is as good as it can get, JavaScript being a dynamically typed language. It doesn't have debugging for those languages as far as I know, as they are web languages, and that's your browser's responsibility (Firefox has really good debugging tools).
None of these (with the possible exception of Head First) are beginner books. You really need to know a lot about Java to get much out of these books. That said, I agree that the first 4 are great books (haven't read Head First) 
My number one choice would be Thinking in Java. It will take your coding in java to the next level.
Looks like you'd rather do ImageIO.read twice in order to getWidth and getHeight. Show this to somebody you know one year from now. I pray for you that you don't ever have to revisit your own codes in future.
It's a damn fine server for a large set of needs.
If you're bored by front end work you may want to look at visualization tools like d3js.
Hehe, i think that the worst thing in it is the untreated exception. .^^
Hum, sorry if I'm being harsh, but I am not going to download and experiment a 0.8 version of an unknown framework if there is not a single trace of any "hello world" example on its website. In fact there is not a single line of documentation on it. There are already myriads of battle-tested frameworks in the Java world (and it used to get worse). You need serious arguments if you want to gain traction of other-than-hipster people.
I know this is a joke, but if you want help producing good code, use [Checkstyle](http://checkstyle.sourceforge.net/). It enforces good code style. There are plugins for all popular IDEs and build tools. Also, there's PMD for detecting bad practices and Findbugs to help detect bugs in your code.
[Relevant](http://nautil.us/issue/9/time/why-we-procrastinate)
That looks long. I'll read it later.
Now you can learn about the joys of refactoring.
Thanks for noting that. I'm inclined to say that when I've used NetBeans or Eclipse, there was some built-in tracking of what class was supposed to run. At least, I believe this is the case when you "create a Java project."
Don't worry about it. It's really all down to practice and experience. Sure, it helps (when one has reached a certain level of knowledge of the language) to analyse other's code, and to read books about coding style, patterns, algorithms, etc. but mainly it's practice, practice, practice.
[Yes](http://forums.logitech.com/t5/Scripting-and-SDK/G600-Gshift-and-macros/td-p/1150861), by binding the mouse buttons to keyboard shortcuts, but what's the point? Not sure why you would want your hands to leave the keyboard unless you have a physical disability or discomfort to effectively use keyboard shortcuts.
Well that's a good point. I guess my hands never really do leave the keyboard. I just ordered it for gaming but the thought crossed my mind. I guess my hands never really touch the mouse. 
 List&lt;List&gt; Why? Flexibility of List API over dealing with arrays.
If it's an adjacency list then there is no meaning in the ordering. So the type should really be: Collection&lt;Collection&lt;Node&gt;&gt; Unless you're associating meaning to the indices of the outer list (e.g. identifier for the vertex). In that case though it really ought to be a map of collections where the key is the identifier. Map&lt;VertexIdType, Collection&lt;Node&gt;&gt; Does that make sense?
You could probably [create a project template](https://duckduckgo.com/?q=create+eclipse+template) to do this. That or you could use a scripting language to automate this, but that would require examining the eclipse project files.
After looking through that link, I can conclude that although Eclipse's template feature is actually kind of impressive, its scope its very small and based mainly on code. It would seem I'm probably going to need scripting at this point. Thanks for the link though.
Don't be writing business code directly into your UI event handlers. Report to your architect for a slap across your face straight away next morning. Also, listen to /u/gizmogwai and /u/funbike.
Yeah it does indeed. Thanks. In the specifications for the design it says we want information in our nodes (vertex). Thanks for the other options. 
In general it is better to use interfaces like List or Collection. This allows you to change the implementing collection (e.g. ArrayList to LinkedList) without refactoring a bunch of code.
Read the book [Clean Code](http://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882) and you will get more information than you ever wanted about how and when to create methods.
My tip would be as soon as your method grows over 30 lines, start extracting things into more methods. That will essentially force you to learn best practices. 
Don't be afraid to use variables. For example: final int width = ImageIO.read(f).getWidth(); final int height = ImageIO.read(f).getHeight(); It will go a long way to making your code more readable and maintainable.
hmmmmm that is a nice approach, I'll have to try that. I'm on windows 8, which sucks. Mavericks doesn't recognize my keyboard or track pad and my linux partition somehow doesn't boot haha
Account has 0 comment karma, probably spam. Anyway, Just another one that thinks /r/java is their mailing list... &amp;#3232;_&amp;#3232;
Choose descriptive names for each of your methods that clearly define what the method is supposed to do (ex. "displayReport()," "processTransactions()," "beginGame()"). Before each method, write a short comment explaining what the method receives as input (this is the parameter), what it does with that input, and what, if anything, the method returns. If you find that you can't conceptualize your method's job in a few words, that's a sign that you should probably break it up into smaller pieces.
Don't be afraid to use variables not just for getting code that is easier to read, but also to avoid doing the same thing over and over again: BufferedImage image = ImageIO.read(f); final int width = image.getWidth(); final int height = image.getHeight(); 
With experience, time, and practice. It starts with:- * I'm writing the same code, a lot --&gt; into a method Then:- * I'm going to write this as a method, because I know I'm going to reuse it a lot Don't expect to see it straight away. Make sure to adhere to code conventions. So useCamelCase for all method names. Prefix with get and set for any getters or setters. At the moment I'm battling with with methods should return anything at all rather than just void. Returning at least a boolean allows you to interact with the result what ever happens. Also, I have a terribly bad habit of throwing exceptions, and I partially-regret it. Catch and deal with appropriately.
Free online courses + [Java for complete Beginners](https://www.udemy.com/java-tutorial) + [Java Design Patterns and Architecture](https://www.udemy.com/java-design-patterns-tutorial/) + [Java Multithreading](https://www.udemy.com/java-multithreading/) Coding challenges: + [Codingbat](http://codingbat.com/) + [Project Euler](http://projecteuler.net/) + /r/learnprogramming 
What's being proposed here that differentiates itself from using JBehave or some other BDD testing suite?
ZeroTurnaround's employee here; as far as I know IntelliJ employs usual hotswap from JDK that's available in a debugging session. So this [compatibility matrix](http://zeroturnaround.com/software/jrebel/features/comparison-matrix/) should apply. On top of that JRebel can reload framework configuration changes, which are definitely not covered by hotswap and IntelliJ on their own. 
As simple as it gets. http://docs.oracle.com/javase/tutorial/2d/
What's the error you're getting? The import looks screwed with /*import java.util.Scanner; instead of import java.util.Scanner;
It is not just GET and POST in restful service :)
The descriptive names are usually verb and object, as you can see from 021fluff5's examples.
I'm sure this is causing production problems right now. Anyone relying on Guava within their applications should avoid upgrading.
I just did a single encryption and decryption program tonight, for no other reason than I wanted to. What you may find cool, I may not. And vice versa. Just follow your interests. Ever thought to yourself "I could probably automate that"? Code it. "This is too slow" ? Code it.
[argparse4j](http://argparse4j.sourceforge.net/) is both simple and powerful. You can easily do whatever you want with it. I just used it; I have an option that works like: -net 1 192.168.1.5 192.168.1.6 192.168.1.7 192.168.1.8 where there can be between 1 and 4 IP addresses, and the initial integer option has to be between 1 and # of IP addresses (inclusive). Implementing this validation with helpful error messages to help the user was remarkably straightforward. It's based on the argparse library from Python, and having also used that I can say it's just as easy to use, which is saying something.
Days of Wonder tech support updated and now I can play it! Thanks for the help. :) (Btw I would have to pay extra for the Steam version.)
Its probably java written by scientists and not programmers.
That's just like that cause I was doing something earlier. It gives me an error with one of the columns or rows I think 
MouseEvent has getModifiersEx(); were you trying to track something other than ctrl/alt/shift?
It does assume a certain familiarity with Swing and AWT, which are pretty big. But I agree with /u/sickwookie, I think your best bet if you're doing simple graphics stuff with java is to use the built in java2d api. Basically the easiest thing you can do for a barebones 2d practice project is to just create a class that extends JPanel and override its paintComponent() method. Then just start messing with methods on the Graphics object in there. That'll get you started.
One that I had fun with was a tic-tac-toe analyzer. You would give it the current configuration of the board and it would tell you the number of ways x could win, o could win, or cat's game could occur. Or, a cribbage hand analyzer. Give it your hand, it figures out the best two cards for you to discard based on what might come up as the start card to give you the best chance of maximizing your points. Things like that were good exercises for me, maybe you'd find them fun too. Who knows? Not me.
Sounds great shoot me an email! 
Shoot me an email!
I'll be adding you to the group ASAP 
&gt;Ever thought to yourself "I could probably automate that"? Code it. "This is too slow" ? Code it. This was one of my main motivations to learn Java. I've been using other automation tools (VBA, VB, AutoHotkey, AutoIt, Powershell) for years, but they couldn't do certain tasks that I wanted automated, where Java with it's vast libraries could do the tasks in a few lines of code.
Groovy project also having issues -&gt; https://twitter.com/CedricChampeau/status/425281375122771968
JSON and XML in Excel is probably a bad idea. As for rich media, this is useless. Additionally, constraining test assertions to HTTP Body responses is also a bad idea. Sometimes you need to assert HTTP response header values. And finally, you're probably reinventing the wheel. Check out [REST-Assured](http://code.google.com/p/rest-assured/).
I really, really hope Oracle does not dig in their heels on this. It seems like a changed interpretation of the spec on their part.
Don't use Math.random() * list.size(). Use ThreadLocalRandom.current().nextInt(list.size()) instead. It's clearer, faster, and has less bias. Also you may want to introduce a number of local variables in your try-catch block. Just to increase readability and debuggability. And speaking of your try-catch-block, shouldn't you do something when catching an IOException (at least logging a warning)? If you decide to leave the empty catch-block, at least offer a comment outlining the rationale of your decision.
Can Oracle do anything right?
&gt; It seems like a changed interpretation of the spec on their part. Isn't it more that there was unspecified behaviour, the implemented behaviour of which was being relied upon?
It's guava using internal stuff like sun.reflect.generics.reflectiveObjects.TypeVariableImpl that's the problem here.
Some good info here: http://stackoverflow.com/questions/7026507/why-are-static-variables-considered-evil
It apparently broke the Juniper VPN client we use at work, too.
Did they give a heads up beforehand on a dev list or anything?
ELIF: Something else could call that class and change that variable that you expect to be a certain value. 
Ugh, yes. Struggled for about a half hour this weekend trying to get connected to my work. I found a working version of the app here if you or anyone at your work is interested: http://software.ucsf.edu/applications/vpn.html
a static (hopefully final) instance variable consitutes a type of singleton (ok, for a real singleton you'd also need to take steps to ensure that the instance class is not instantiated otherwise). This in itself is not bad. It may (or may not) convey that this class should only be used through the instance. However, storing the instance of an UI (which is presumably a large object) in a static variable will ensure that it will not be garbage-collected during program runtime. If you are ok with this, fine. The really interesting question is why you would need a reference to the UI, apart from setting stuff up, which can be done in a single class using only method arguments and local variables for storing the UI instance?
Nope, it’s just you.
Until now, I think it is much more convenient to use the instance() method for UIs, due to the fact that I didn't have to unload any UI yet. Most likely, UIs shouldn't be garbage collected? Correct me if I'm wrong. In my current example, I need to change the text and certain other properties of some UI's fields from inside a PacketListener. I don't have an actual connection to the PacketListener by any sort of argument *yet* and I wasn't sure about if I should use it.
Anyone who pushes updates to production automatically without running in a test system first is in for a world of pain. edit: Not to excuse any potential issues in the JVM, but at the same time, system admins have a job for a reason.
They are saying it is not a bug https://bugs.openjdk.java.net/browse/JDK-8031984 but t pretty clearly is, since their equals is non symmetric 
Projects that use undocumented internal features cannot complain when they change without notice. Or else Java would become another Windows, full of bugs for backwards compatibility's sake.
It seems to me you should look into one (or all) of the following: * MVC pattern * Spring (or dependency injection in general)
I'm pretty sure this bug is independent of guava, it appears that equals is non symmetric ~~reflexive~~ https://bugs.openjdk.java.net/browse/JDK-8031984 The dev that closed it may not fully understand the issue. To be fair it is fairly subtle, I certainly would not have seen it by cursory inspection.
Can duckrollin be any more retarded?
JavaFX might be simple enough for you.
This is a pretty subtle bug.
Yes and I invited all the new people that have emailed me recently today so you should have an invite in your inbox.
UPDATE: Guys I have invited everyone who has emailed me so far (to the best of my knowledge). If you have not received an email and would like to join the group, please email giovonnilevicci@gmail.com. Also I would like to see more activity in the Google Group so I have a small assignment for new recruits, please tell us what you think would make a great first group project. Thanks and stay in touch!
I think we could do something really cool with those skills. Have you emailed me for an invite?
Well I don't use Skype but if you email me I can invite you to the Google Group.
Usually you set up your UI and forward the instances of specific objects that should change to the listeners. That way your UI and your Listeners can be self-contained and loosely coupled. The only code that needs to know about both your UI and your PacketListener would then be the setup code. Bonus points for having your UI implementing a generic interface for the PacketListener to use. That way you can even swap out your PacketListener or your UI without changing the other.
Note that this only seems to apply to TypeToken usage (which admittedly is used widely within Guava, too). So if you only use classes that do not rely on TypeTokens, your code may still work.
Its still an internal API that should not be used by programs. This bug may get fixed simply because it points to something fishy going on inside the runtime, but if this is indeed an intended side effect of changes, then id say all programs using that class are out of luck.
The current equals() method not necessarily violates reflexivity, because subtype equality is a matter of contract. Normally a strategy (allowing or disallowing subclasses) is selected for the equals() method of a superclass for a whole class hierarchy. But you can't expect consistent behavior from internal classes. 
I agree, although it seems the the Guava team could not catch this with their tests. &lt;https://code.google.com/p/guava-libraries/issues/detail?id=1635#c1&gt; 
Similar discussion [here](http://redd.it/1vjqms)
This seems to be a big deal. What is the end result of someone who uses a library that uses guava? Is it possible that the library will be just fine if it doesn't hit the affected code?
What do you mean with it's not reflexive? You can't extend `TypeVariableImpl` (it's an internal class), and the change doesn't alter reflexivity at all. Do you mean symmetric instead, perhaps? Anyway, the change is part of the security fixes in the update, and Oracle employees are encouraged not to discuss them externally. The `equals` part of the fix may have gone overboard because if you're dealing with a rogue `TypeVariable` implementation, it might as well called with the receiver and argument swapped, and then fixing `TypeVariableImpl` won't help. But it's difficult to determine that without fulling grasping what they are trying to do.
Imagine a scenario where methodC() is used by another piece of code in your program (reusability is good!), methodD(), say. Is it reasonable for methodC() to interrupt methodD() in the same way? My suspicion is no, and that the three methods in your code are "tightly-linked" in some way. You're probably doing something like "stop processing the entire chain, that is, methodA(), methodB() and methodC()". There are ways around this, like up-front validation (where you effectively call the condition in methodC() in methodA()) or callbacks, but it's difficult to say what is best without more context.
It's for a testcase class. Basically I'd like to stop the calling method of a test (for example "testFeatureX()") if any assertion within the method fails.
Pick an open source database that runs on linux or oracle and I will write an example in java.
Static method calls really limit your ability to use polymorphism and abstraction effectively. Say you have a desktop UI right now, with everything being updated statically. Maybe later you want to port things over to Android. What do you do? There will inevitably be a lot of similarities between the two versions. Had you set stuff up with an AbstractUI class extended by a DesktopUI class, for example, all you would really need to do is implement a new AndroidUI class that extends AbstractUI. The rest of your code need not know what UI implementation is being used. All the controller and model classes just have an instance of the correct UI class, set up at the beginning. You might also have heard the saying "program to an interface, not an implementation." (Of course, all of these good design sayings need to be taken with a grain of salt.) When you program against static methods, you are programming to an implementation. It might not seem important when you are starting out or working with small, contrived projects but when the day comes that you want to write something a bit more complex, you will be glad you took the time to get it right.
or java will become like PHP...
My experience on the hiring side has been similar.
I always had the feeling that people who take certain certificates specifically learn (train) for the particular certificate rather than learning the subject by understanding. (At least, for the certificates I had been teaching, the courses were all specifically tailored for the certificate exam and covered extremely little outside the exam.)
[Component](http://docs.oracle.com/javase/7/docs/api/java/awt/Component.html) is the superclass of all the widgets used in swing and awt. [JComponent](http://docs.oracle.com/javase/7/docs/api/javax/swing/JComponent.html) is Swing's version. It extends AWT's Component class and adds in some things. This is the one you'll be more interested in. So, a JPanel is a JComponent, a JButton is a JComponent, etc. Since they are both JComponents, they must also be Components (through inheritance) but for the most part, to start out, you don't have to mess too much with Component. the paint() method of JComponent is what swing calls when something is drawn. You don't want to override paint(). What you want to do is override paintComponent(). In sickwookie's post he has a link to the tutorial which explains why that is if you stick with it for a while. Those trails are definitely pretty boring to work through, but they do give you a pretty good intro. I would encourage you to slog through it.
Short answer : Don't bother. Longer answer : The Java certs that I've come into contact with rely on the student being able to recite details about the Java API that can easily be looked up. To a potential employer, this doesn't convey a sense of understanding, it just indicates that they've read a study guide. It's better to be able to demonstrate when and how to use design patterns for example when they are appropriate and when to keep the code clear of abstraction etc... too many people over-engineer for what the think will come later. Hint: It usually doesn't work out the way that was anticipated. see (YAGNI) 
I got certified SCJP about seven years ago but when I was job hunting in 2010 I purposefully chose not to put it on my resume, did not have a problem getting interviews.
Ditto!
What about putting one utility / one off functions as static methods, or configuration strings as public static final strings? Are these also considered bad practices?
I found that people with j2ee certifications were really talented/smart. 
You have to use a specific key length with Java's AES implementation. A 16-character key will get your AES-128, 24 will give you AES-192, and 32 will be AES-256. But, using just a random 16-character key isn't good enough. So, take you key (of any length; but longer complex = better), pump it though a KDF function. Here is a Gist I threw together to demonstrate what I was talking. This may not be ideal code, but it should be a good start. https://gist.github.com/anonymous/8547206
Utility classes (containing only static methods) are considered a code smell by many, though you will find them in most code bases. String constants are widely considered good style, because they give a hopefully expressive name to an otherwise opaque literal. If you want to make them public, it is also a good idea to collect them in an interface and have your classes implement that to use the constants.
No, sorry, I haven't emailed you. I'm definitely interested in joining, though.
My bad, it is not symetric, fixed From the bug report: &gt;This method will return true subclass.equals(TypeVariableImpl) but false for TypeVariableImpl.equals(subclass)
It says &gt; Technical Evangelist, Developer Advocate or whatever you want to call it riiiiight at the bottom. I think they should hire someone that can write clear recruiting ads :P
The Guava code doesn't actually use the internal API to my knowledge. What they are doing is attempting to make an implementation of the (public) interface TypeVariable that compares equal() to ones returned by the JVM. But the new version of the JDK makes this impossible. The spec doesn't say explicitly whether this should work, but they certainly aren't using any internal APIs, just un- or under-documented behaviour.
They wrote their own TypeVariableImpl, they're not using sun.reflect. https://code.google.com/p/guava-libraries/source/browse/guava/src/com/google/common/reflect/Types.java#317
Eh...I know it's only an example, but it's too over-simplified and light on details for my liking. * The example uses @SessionScoped - what happens if you use @ViewScoped (or @RequestScoped). What happens if the view has expired? * The render tag - what about mentioning @all, @form, etc, or referencing components outside the current naming container? * What happens if the client has javascript disabled? * Instead of "".equals(name), use name.isEmpty(). The null check that's performed is irrelevant too, as "javax.faces.INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL" hasn't been set in web.xml. It's not terrible code, but it doesn't strike me as the code of someone who should be teaching others about JSF. Mind you, that much is kind of evident from the opening "About Thodoris Bais" spiel. Oh, and code wise [it's lifted straight from MKyong.com](http://www.mkyong.com/jsf2/jsf-2-0-ajax-hello-world-example/) - they're listed as partners, but either way this is basically a repost of a 3+ year old article.
Screw that. I like having them do most of my work for me.
Shoot me an email man.
I'm actually writing my own test class that in many ways does the same things as Junit (for educational purposes).
And first things first, put that JDK in your CI environment before any live environment. COME ON!
It won't continue through the if statement in line 10
I am very new to java so i am probably wrong, but to compare strings dont you have to use .equals?
The == sign for string comparison in Java should not be used. There are some great online articles explaining why not. Try using if(command.equals("go")) { } Edit: http://stackoverflow.com/questions/18555379/comparing-two-strings-with-equal-operator A good explanation here. 
No. I even look down on the SCJP. It's a test of trivia and errata, not a test of "can you write code without me having to tell you how much you're fucking up?" And the people who have it usually want to argue semantics of some bullshit line of code, but can't write a for loop to save their lives. 
Always compare Objects (In your case, the objects are two Strings) with the "equals" Method!
The enum is also a good way to make a singleton without all the boilerplate. 
You are very new, but also very wise!
thank you, I am currently taking Comp Sci 1, and this is about the extent of my knowledge :P
And using "go".equals(command) rather than command.equals("go") will avoid the possibility of a null pointer exception if command ends up as null somehow
For help on projects, you can use /r/javahelp. For the best way to learn Java, I have seen similar threads with very good information, try doing a search to see if you find any of them.
I believe if you're doing a comparative method on a string you should use the String object's method .equals(). So I think it should be: if(command.equals("go")) { ...
use if(command.equalsignorecase("go")){ }
cant use == on strings, use string.equals("something")
I really liked Kent Beck's book, "Implementation Patterns" (http://www.amazon.com/Implementation-Patterns-Kent-Beck/dp/0321413091). He has some unique ideas on how to structure methods. I found myself loving many of them and ignoring a few of them. The resulting code can be quite beautiful and readable.
Ditto. Had to work inside a slow VM that I hadnt upgraded yet.
Use .nextLine(); rather than .next(); too!
You're going to have to be more specific when you say you've "mastered" all those things as a lot of idiosyncrasies can arise. Can you read/watched through [Java Puzzlers](http://www.javapuzzlers.com/java-puzzlers-sampler.pdf) and explain correctly predict all the outcomes? Do you know how to correctly serialize a Singleton or know why single value Enum is the best way to create a Singleton? I'm reading Effective Java right now and with every item realizing there's much more to Java than the basic spec.
 if (command.equals("go")) { ... } or... if (command.intern() == "go") { ... } Now... a question for the OP... why would the second one work? 
You can still check before hand... And obvs. it reduces unnecessary checks in the case that comparing to null is valid. I also think it is more readable since you are given some context first for interpreting the value you are checking (not so relevant in this example). So I'd say it's good practice.
The reason why everyone is telling you to use String.equals() instead of the equivalence operator is because the operator compares pointers to the objects while equals() compares the contents of the strings. You want the latter.
== Checks reference, not contents. Use the equals method. 
the method name doesn't ignore case though ;)
Hey I just started my first MCS (computer programming) class and we will be focusing primarily in Java. So major beginner here. You have my attention friend. 
Check out Jodconverter. Uses LibreOffice to do all kinds of conversions. 
Java Software Developer here. Best advice: Don't copy and paste! Write out the code, even if you alt+tab back and forth between windows. I recommend the "Head First" series of books. They're a bit cheesy, but they make you think. DO THE EXAMPLES. Also YouTube is fantastic for guided tutorials. 
Because Java isn't extremely simple. Hah.
Wish I had more coding knowledge. I fit everything else quite well. 
Would you happen to have a link to these "Head First" book(s)? Also, if possible, is there a specific series of YouTube videos that you like?
I've done quite a lot of work with POI--has worked great for my uses. Any particular featured you plan to use above and beyond what you can get from a CSV?
the JavaBrains tutorials on Youtube are excellent and they cover a number of areas
To add onto this, it's important to remember that things are only as secure as the weakest link. Often times, the other processes involved in the encryption are more at risk than the encryption itself.
Thanks! I'll take a look
== is for primitive (int/char/boolean) comparison. .equals() method can be used to compare objects like strings.
Not the answer you want but forcing people to export csv makes everything a lot easier 
Try Guice.
Not necessarily. He might just want one word at a time, not a whole line.
Apache POI. I like it. PrimeFaces likes it. You'll like it. :-)
Absolutely. And if you should dislike it for any reason, you can use [jExcelApi](http://jexcelapi.sourceforge.net/)
That depends on who this *anyone else* is and what motivation they may have for decrypting your data. E.g. if your adversary is the NSA, hiding your data is more important than encrypting it.
This looks cool, but it ran way too quickly initially. I tried using the slider to slow it down, but Chrome started throwing "Uncaught SyntaxError: Unexpected token )" errors. There are also a bunch of 404s on images. Keen to see it work though!
You can not call yourself a professional Java developer if you do not know this.
Use Runtime.halt(1) instead! ;-)
As a beginning Java programmer, I did not knew this. (Also, I have not written a web app yet) Much appreciated insight, thank you!
I also wanted to add that you don't want to System.exit() even when not web-deployed. Why? Let's review the cases where you would want to use System.exit(): * exiting the main-method via System.exit() (I've actually seen this in production code a few times) can be remedied by a simple return statement. * exiting the program from a lower-level method due to error is a prime candidate for throwing an exception. That said, there may be bad code out there that catches Throwable. If so, change this code (if you don't have the source, use [asm](asm.ow2.org)) to narrow the exception handler. * Trolling other developers is better done in more insiduous ways, like leaving the system in an illegal state to have it blow up in another distant part of the code. ;-)
**WARNING** i++ will change the value of the variable *i*!
I disagree. System.exit() can also take an integer as its argument and this integer is the return code of your application. When you have a command line application you might want to check the return code in the calling application (e.g. a shell script). This is age-old practice under Unix systems and I do think if you know what you are doing, using System.exit() with a return code can make sense.
System.exit() is useful in command-line tools, and in many cases superior to return/exceptions, because it can pass the status code back to the shell. Returning a non-zero status code will generally signal that something failed, and shell scripts and tools like Make will act appropriately. Make will for example stop on a non-zero status from one of the steps. [A list of status code meanings](http://tldp.org/LDP/abs/html/exitcodes.html).
omg no! I spent the last week writing a test and it seems ++ after only changes i AFTER you've used it. As a senior security analyst I deem this dangerous behaviour, how can we ever trust i again?
Agreed the elitist asshats can do one. Thanks for the post OP!
I'm a beginner!! I'll add you if you're not already overwhelmed.
You are right. I'll have to correct my statement to: "You don't want to System.exit() even when not web-deployed unless it's in your main method for returning a status code"
You are right (see my answer to /u/armerthor).
we have a few hundred batch jobs running on our platform; we use System.exit() all the time to return an exit code.
[Cross Coast Gaming](http://youtube.com/crosscoastgaming) is currently developing a beginner Java series starting with episode 1 [HERE](http://www.youtube.com/watch?v=jrypN2CpAy8). I'm not sure how much experience you have so you may find the pacing to be slow in the beginning, but Episode 2 teaches a Guess the Number game and Episode 3 shows how to make Tic Tac Toe. I've known the creator of these tutorials since before birth so I can vouch for their quality. Happy learning!
[Cross Coast Gaming](http://youtube.com/crosscoastgaming) is currently developing a beginner Java series starting with episode 1 [HERE](http://www.youtube.com/watch?v=jrypN2CpAy8). I'm not sure how much experience you have so you may find the pacing to be slow in the beginning, but Episode 2 teaches a Guess the Number game and Episode 3 shows how to make Tic Tac Toe. I've known the creator of these tutorials since before birth so I can vouch for their quality. Happy learning!
What happens if you are deep in a code flow, e.g: foo1() calls foo2(), which calls foo3(), which calls foo4(), etc.. until about foo7(). And foo4 or foo5 have an exception occur in them. Now, if you just show the user an error box, and then returned from foo4 or foo5, you still have another 3-4 methods waiting which will get a null value or invalid value returned, and so the user will be bombared with another 3-4 exception dialogues. Would it not be better to do a system exit on foo4/foo5, so the user only sees one error, and then the program flow terminates?
Yes, it's good to have. Having passed the test doesn't *necessarily* mean you are a good programmer, but it can differentiate you from other candidates. Passing it shows you are dedicated, because it's a pain in the ass of a test to pass. I've gotten a lot of mileage from mine. It's a nice item to include under the "Education &amp; Training" section of your resume. I would suggest getting it, but -- warning -- it's a *hard* test. Practice lots. 
If only there was someway to increment it before it was used...
I use AOP to log all incidents of numerical incrementing to a secure audit log so I can trace down offenders.
Hi, as an application developer you rarely have you deal directly with JCA. It has been designed as a generic mechanism to provide a way how to access "external resources". It's addressing questions such as "How to create a new (logical) connection so it can be pooled?", "How to control transactions?", etc. It's not meant to be directly used by the "business" application. You can view it as an API for integration between "application container/server" and the "external resource" Now JMS broker/server can be viewed as an "external resource" and JBoss does indeed use JCA to integrate with it. Hovewer you as an application developer are isolated from it - you just use the ordinary client JMS API.
The way I understand it, is that it shuts down anything running within the same JVM, because the JVM itself shuts down. Multiple instances of an application can be run within a single JVM, which means (if you deploy your web applications from one JVM box) that your whole web application will shut down it. If you're running an application on your computer, it's most likely running in your own instance of JVM, and another user running the same program on their own computer (and their own instance of JVM), calling System.exit() will only shutdown the respective JVM. It's important to remember that a Java application runs within the JVM. A JVM can spawn several applications, but you could also have several JVM's running (although this would drain your resources a lot quicker).
Thanks, but then how would you exit the program from that exception handler, if not via system.exit?
It's well known among experienced Java programmers that System.exit() shouldn't be used except in e.g. command-line tools. But I wanted to mention that System.exit() (or rather Runtime.exit()) goes through the security manager: http://docs.oracle.com/javase/7/docs/api/java/lang/SecurityManager.html#checkExit(int) In general, you should enable the security manager. It catches a lot of security problems! Including this one, turning it into an exception rather than shutting down the whole VM. It's easy to enable the security manager in most application servers. E.g. see: http://tomcat.apache.org/tomcat-7.0-doc/security-manager-howto.html If using the security manager seems a bit heavy-handed to you (it shouldn't!), you can still enable checks for exit()s only by overriding the checkPermission method of the SecurityManager class and letting everything through except exits.
I wasnt encouraging it... I was inviting him to learn more. He should understand WHY == doesn't work with strings and then why intern() would work even though he didn't intern the "go" side... Evaluation is a higher order critical thinking function - but before you can evaluate ("why would I want to use .equals instead of .intern()") you have to have some comprehension of what intern() does. Just saying "it exists... Don't use it" robs him of the experience of reasoning it out for himself (or herself)
(And for the record, in my experience .intern() is hardly ever useful in real programs. I've most often seen it used in a misguided attempt to have a shared lock object - which is a horrible antipattern)
No. What *should* happen is that exceptions are thrown from code deep within the lower layers of your software to signal errors that this deep layer cannot handle by itself. This exceptions will bubble up until there is an abstraction layer that knows how to deal with it. If and only if no such layer exists, it will get to the main method. For applications that is built for being called from within a script, we catch the exception, log it and return a suitable error value. From the user standpoint it makes no difference if the System.exit(int) happened within foo5 or main, but if you put your System.exit(int) in foo5, everyone calling foo5 must now deal with the possibility of the call not returning. Hopefully you've at least added a big fat warning to the foo5 javadocs.
I'd like to propose ++i for such cases. This may or may not be in the language specification, but you have pointed out that this is something some users need in their professional enterprise development efforts.
Curiously, would this work on single threads in a program? I have this paranoia that every thread I start will stay open and eating resources until the day I find a way to make sure they're dead. 
The test is a pain in the ass. This sub tends to say "it means you can follow a study guide" but that is a load of shit. If you don't have a strong grasp of the language, you are not passing that test. (Those tests as of Java7) That doesn't teach you design patterns or anything else though, so keep that in mind. And the company I work for tends to think that they are worth something. Since getting my certification they bill me out at $60 an hour more than pre-certification and clients pay for it without question.
Also ++ is not atomic, it performs two operations (a read and a write). Thread-safety is only ensured for local variables, as they are never shared between threads. 
On a related point, never do system exit, in any language, in a shared library: http://ubuntuforums.org/showthread.php?t=612606
Genius! Unfortunately, the rest of the world is not ready for such radical language changes yet, but some day it will...
[Weed should not be mixed with development work](http://www.reddit.com/r/politics/comments/1qnnii/why_legalizing_weed_just_makes_sense_in_12_charts/cderb7b), mr /u/ki11a11hippies
This covers the java memory model and the most common causes of java out of memory.
&gt; Only that exception will be meaningful. If the program isn't terminated when this exception happens, then you will get another 6 meaningless null pointer exceptions from foo6() to foo() Why would you get additional exceptions? If foo7() throws, the exception will bubble up the stack until it finds something that can handle it or it reaches main(). A function should not catch any exception it does not know how to handle. It should let it bubble up. Your e.g. foo7() shouldn't catch the exception and show an error box. Some error handler at the top of your stack should be doing that, and all your sub functions should just throw. 
This correct. Two separate programs launched would have separate JVMs, one wouldn't kill the other. Where System.exit() causes problems is in things like a web application server like Tomcat or JBoss or the like -- the web application server runs in a JVM and all web applications deployed on it share that single JVM.
It's fine to exit a program as long as it's not a web application. ;)
&gt;System.exit() calls are common in overly broad try-catch blocks in app startup code that loads environment variables, properties files, establishes DB/socket connections, etc. I've seen this practice before. The benefit is that your application is fail fast with a clear error message and this makes deploys more rapid when you have any risk of misconfiguration. Better alternatives? * throw chained exceptions and use logback's "cause first" stacktrace format "%rEx" - you won't have to dig down to "caused by" to figure out what's up * use a proper watchdog mechanism for your services. If they don't WD out of boot look for your error. * a/b deploys. If timing is this critical you can afford another server. Any other suggestions?
&gt;Why would you get additional exceptions? BeanInitializationException. This is common for web containers. The solution is chained exceptions and looking for "caused by" or actually printing the cause first (logback %rEx).
&gt; Why would you get additional exceptions? &gt;&gt; BeanInitializationException. This is common for web containers. I was referring to the original (now deleted) comment about getting "6 meaningless null pointer exceptions". It appeared as if the original poster was thinking that if they didn't call System.exit() deep in their code, then they had to catch an exception in every function in their code, display an error message and return null to the caller (which would cause the caller to NPE, show the error, pass null to ITS caller, and so on) instead of just letting the exception bubble up and catching/displaying it at the top of their program. Naturally a function is free to catch an exception and wrap it in a new exception of their own creation, in which case yes, you can hunt the exception 'causedBy' for a root cause. 
I've heard some good things about udemy, I'll definitely check it out
Please do vote..
If you're just starting in Java: http://www.amazon.com/gp/aw/d/0596009208 As far as YouTube videos, just type a search that ends with "tutorial". One of my favorites is by "Java Brains". He's very thorough and does a wonderful job explaining difficult concepts. 
Dear Viat, thank you for your valuable feedback, we ll try to resolve this as soon as possible. Keep in touch ! Cheers !
It's been years since I've developed Java professionally, but this is not something I knew taking my first job straight out of college coding for a high profile .gov. I mention this because I see it often reviewing code. You would be appalled at the amount of dynamic queries constructed from user input without ORM/PreparedStatements I encounter in my job, even though SQLi is a well understood vulnerability.
why do you need to exit? let it run its course...
Look on the /r/javahelp wiki - there is a tutorials list: http://www.reddit.com/r/javahelp/wiki/tutorial_list
I get you. I didn't mean to jump down your throat. I just wanted to put it out there that using .intern in this way isn't usually a very good idea unless you really know what you're doing. Not that there's isn't a use case, but for a newbie programmer I think its important to mention that intern is squirly and should be used with caution. As your example illustrates, the lock object attempt, even people who think they know what they're doing often don't. Sorry if I offended.
The problem is that the type R could be **any** type that matches that description and TasksRowItem is a **specific** type. Somebody could come up with an R that is not a TaskRowItem, so you're not guaranteed that WithResultAndParam will return the type somebody wants.
* /r/javahelp * post the ***exact*** error that you get. But frankly.. you reeeeally should simplify this method. That's an awful generic method parameter...
Thanks!
It shouldn't be used in most cases anyhow. If there's an error, dispose any resources you have and make sure to leave some sort of log of the error for the dev. Uncaught exception handlers are great for ensuring your app can clean itself up before dying.
You are most probably right! :) I will refactor that.
The article, while very informative, seemed to take a very editorialized (positive) opinion toward Gradle. I'm not anti-gradle, but considering it's still quite young in terms of a build tool, I felt they downplayed a lot of its negatives such as lack of (or poor) 3rd party tool support. Granted it was about 6 months ago, but I tried to use Gradle for a spring project build and it was pure hell. I particularly hate ant and maven so I was surprised when I was longing for either of those (tried and true) options. I look forward to the day when it's not "choose the least annoying one." 
A few hundred batch operations all running Java processes? Cute. Windows, I presume?
Only call System.exit() from a main method. Don't swallow exceptions if you haven't handled them.
Because you need to return a non-zero status?
I wasn't offended... I was actually expecting someone to jump in and explain why intern was bad the moment I brought it up ;)
It doesn't look too complicated. It defines a validatePhoneNumber function that takes two phone numbers (for no readily apparent reason) and determines if they are valid. What constitutes a valid phone number is encapsulated in the local PhoneNumber class and basically boils down to the number being 10 digits long after all the non-numbers have been removed. The demonstration includes the fact that the local class can access members of the parent class (the regular expression definition used to strip non-numbers) and local variables in the defining function. Can you tell us what you don't understand and we'll see what we can do.
Sorry, I didn't mean to miss the point. I'm not sure what stage you are at. The PhoneNumber class definition doesn't actually change any state, just describes a new class which gets used just after the end of the class definition. &gt; PhoneNumber myNumber1 = new PhoneNumber(phoneNumber1); You are right about the constructor, and this line is how one of the phone numbers that got passed to the validatePhoneNumber function gets passed into the PhoneNumber class. regularExpression is just a normal Java string. Regular expressions are a way to pattern match and edit strings (it's a whole subject by itself). In this case it is saying "Match characters that are not numbers" and phoneNumber.replaceAll(regularExpression, ""); is saying replace all characters matched by regularExpression with nothing. I.e. Find and delete non-numbers.
How much time do you have? An Androidcourse just started yesterday in http://coursera.org. I think it is 6 weeks long.
Does the app have to be written in Java? If not consider Apache Cordova/PhoneGap.
Does it say, that the downloaded file is corrupt or that some file on your system is corrupt? Did you download the online installer, or the offline installer? Try downloading both the 32bit and the 64bit versions from http://www.java.com/en/download/manual.jsp - this is the manual download. Then you can try reinstalling the 32bit version, followed by the 64bit version. If that doesn't work either, download JavaRa from http://singularlabs.com/software/javara/ and remove all Java traces then try to reinstall.
&gt;Sorry, I didn't mean to miss the point. I'm not sure what stage you are at. No worries, well I'm there in the tutorials and I started at the very beginning. [Here's the table of content though to give you an idea of what I've read so far!](http://docs.oracle.com/javase/tutorial/java/TOC.html) I should have put that in the title sos. PhoneNumber myNumber1 = new PhoneNumber(phoneNumber1); Jesus I completely missed that for some reason... OK that class being there at least makes sense now! phoneNumber.replaceAll Now, I have never seen this method (and others) before, but I'm guessing that It's part of the String class and that I could (should) look it up in the API. PhoneNumber(String phoneNumber){ // numberLength = 7; String currentNumber = phoneNumber.replaceAll( regularExpression, ""); if (currentNumber.length() == numberLength) formattedPhoneNumber = currentNumber; else formattedPhoneNumber = null; } Right so I'm going to have another look at this... String currentNumber = phoneNumber.replaceAll( regularExpression, ""); This is replacing all the characters that are in phoneNumber with those in regularExpression? Or is it only allowing those in regularExpression to remain and replacing the others with empty strings.... if (currentNumber.length() == numberLength) formattedPhoneNumber = currentNumber; else formattedPhoneNumber = null; } So this part is just comparing the two lengths and returning a null value if they don't match. I think part of what's confusing is that they call a lot of variables 'number' when they're actually strings... But I don't really get that PhoneNumber method, it : * takes the number * replaces the regularExpression characters with "" * compare's the length of what's left (after the .replaceAll) with the value of numberLength * returns **formattedPhoneNumber = currentNumber** if true... so this return's the String phoneNumber1 with the formatting to it... * then it goes onto the if statements at the bottom which are pretty straight forward 
&gt; Though I can't actually see how this variable ties into the validatePhoneNumber inputs from the main method. PhoneNumber myNumber1 = new PhoneNumber(phoneNumber1); Two new instances of PhoneNumber are created out of the parameters phoneNumber1 and phoneNumber2. &gt;I don't know what that String regularExpression means Regular expressions are a string-matching syntax. If you have a (reg)ular (ex)pression, you defined a pattern that can either match a particular string or not. A regex without punctuation matches itself perfectly "apple" matches "apple". A plus sign allows the previous character to be repeated. "Be+" matches "Be", "Bee", "Beee", and so on. Parentheses allow grouping "(be)+" matches "be", "bebe", "bebebe", and so on. Square brackets allow ranges and alternation. "B[aeiou]" matches "Be" "Ba" "Bi" "Bo" and "Bu". "B[a-e]" matches "Ba" "Bb" "Bc" "Bd" and "Be". A carat (\^) in square brackets is negation "[\^a-e]" matches "f" and "q" and "&amp;", but not "b". **tl;dr:** "[\^0-9]" matches any character that's not a digit.
Sometimes you just want to exit the VM. Command line driven applications and scheduled tasks for example. At my work we write a lot of ETL applications in Java and schedule with Control-M. System.exit is imperative.
I used to use JExcelApi -- not fantastic for *huge* spreadsheets, but it certainly worked for my use cases.
In a web container there is no main method though Edit: not that I have ever used system.exit in a servlet...
How pretentious.
Exactly!
yes, well System.exit is the only way to do that probably. but most apps don't use exit codes
Cheers for the response more_exercise I appreciate it, but the original question was relating to whether or not I should be able to understand this given the amount of learning I've done so far? I realise I stupidly didn't specify that in the opening post though, edited now...[I'm up to local classes on this list though](http://docs.oracle.com/javase/tutorial/java/TOC.html) However, that's a nicely written explanation of what a regular expression is! Thanks 
Although I like Java, if it's not needed you might also try Titanium from Appcelerator. They have a great IDE and it's fast to put things together, all in JavaScript.
.. so if you really need atomic integers, simply use [AtomicInteger](http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/atomic/AtomicInteger.html) (There are [other atomic](http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/atomic/package-summary.html) classes in the same package)
i tried the 32 bit first and it said it wasnt a valid Win32 application 
Well, they should if there is even the remotest possibility of them ever being scripted, which for most command line tools would normally be the case.
who writes command line tools in Java that require specific return values though? in most of my OS level designs, there is only zero or non-zero return values. I guess it depends on the type of app...
Seems that you have some problem with the downloads. I've tried both files on multiple PCs and never had a problem. Try re-downloading the files (maybe on another PC)
i downloaded JavaRa and it deleted things nicely but when i clicked update it is taking forever 
I got until May, I saw that course and enlisted, we'll see what I learn from there :)
I ran into this myself. I coded a web app for my code with certain exceptions that should never happen. When I was testing them, I couldn't figure how why I was crashing the entire web service and having to restart tomcat when I was testing the exceptions! haha
No it just shuts down your program - but in a web app the "program" is the application server which could be running many Java web applications. 
Apache Camel
Apache Camel, in particular, camel processes. Or, perhaps something like jbpm would help. Also, take a look at jboss fuse.
it almost finished but then i closed the application
i removed the java run time and then i tried t download it again and it said the same thing im going to try to let the download on javara finish
Yeah, that's one of the thing's that I was wondering about though. When I'm doing a tutorial (especially one that's written by the owners that's meant to be comprehensive) I'd expect the information presented to be a reflection of what had past, not stuff that I had to go outside the tutorial and look up for ages.... And once I stray from the tutorial page I'm in serious danger of ending up looking at mindless shit before I realise ! I don't know anyone else who does anything related so It can be easy to lose bearings a bit I guess So that was it really, I felt that perhaps I was struggling more than I should be with what was there... But maybe it's OK for now. 
YorN is an object, "Y" is a different object. And they aren't equal because they are different objects. "Y".equals(YorN) Should do the trick.
ha no worries, flame away... My concern was that I wasn't 'up to speed' with things, or understanding them as they should be.... I know an answer is "you can always google it" but when following a tutorial I don't really think that one should have to google too much, hence me thinking that I wasn't getting it. Cheers tea-drinker! On a different note, I've had a nice mint green blend tonight... refreshing change from my usual lemon and green.
As the comment mentioned above me, YorN.eauals("y") does the trick, it requires the user to type the "y" in lower case. If you would like to see check upper/lower use YorN.equalsIgnoreCase("y") A string is an array of characters (object) . Not an element. All your program was doing was seeing if the two objects were equal in there memory location. 
Or conversely have a process manager to reload the process if it crashes.
Mutability vs immutability doesn't have any clear winner and is mostly based on preference, like same-line braces or braces on their own line, tabs or spaces, etc. But if you're making and dumping objects in a loop, you're going to overload the garbage collector quickly. The JVM's garbage collector isn't designed for that. Mutability is preferable in hot loops. You should make objects immutable when changing a property means completely changing the identity of the object. Strings are a perfect example. 
How about for something like Matrices? They seem similar to strings since you are completely changing the identity of the object, however the matrix that determines the orientation of an object in 3D space will be modified very frequently in a game loop.
Your choice, but frequent modification would warrant a mutable object, IMHO. Languages that enforce immutability, like Haskell, have memory management that's designed to handle many short-lived objects. Java is not one of them.
That's what I pretty much thought. Thanks for the help. I haven't really been able to find a Matrix package with mutable objects so I guess I will probably just end up writing my own.
If you know java pretty well and have learnt other UI frameworks, Android is pretty easy. If you have developed for the Web it's kinda similar as well. Have a go at the online docs by Google first, if you have trouble check out amazon and stack overflow for recommendations. 
Try printing the value of YorN, to see what it really is.
in JavaFX there are classes Service and Task available to help with concurrency. Extending these classes requires you to override some specific methods and add specific behaviours. Among those behaviours that you must include, you must return values from the methods which you override. My problem is that I want to run a loop to keep taking input values over a socket, but if I do that I can never return a value. I'd have to break the loop to return a value. So, I thought about firing events while inside the loop to retrieve new values as they come in, but I'm having trouble doing that. For anyone who is familiar with JavaFX, im trying to use fireEvent inside my Task's "call" method, but it is blocking, and i don't know why.
You're not there to understand the methods he calls only focus on the design of the api. What's an activity,? how do they communicate? How do I run a background service? How to develop for different devices? Etc. Start practicing looking compile and run examples, play with changing things, reading api docs, reading googles how tos on different topics , asking questions on stack overflow, reading other people's code etc. Then start to build your app. You will never feel 100% comfortable either if your challenging yourself. If you're still having trouble go read a book and see if you know anyone personally that can help. 
that didnt work for me 
Thanks, that was helpful for visualization!
Same thing. Throw an exception, handle in main(String[]), System.exit() from there.
Are you 100% sure that it's the matrices that are spawning tons of objects and causing the garbage collector to thrash? Sometimes performance issues are in unexpected places. Use a profiler (memory and cpu) to be sure that the matrix computations are really the issue. While I agree with the above poster that mutable vs immutable is hotly debated, I disagree with the above poster about java not working well with short lived objects. You cannot make blanket statements like that about complex situations. [Source: heading #3](http://www.ibm.com/developerworks/library/j-jtp04223/index.html) The jvm is relatively effective at cleaning up small, short lived objects. Always look at performance on a case by case basis. Use a profiler and lots of testing be sure that your conclusions for your use case are valid. With performance assume that all your believe are just heuristics that very well might be wrong. This will always lead to better results than blanket statements.
Nice post, thanks.
Create a ConfigurationException that extends RuntimeException. It will blow through most try catch blocks as it is unchecked but in most (sane) web containers will not take down anything but the servlet/app sandbox. ConfigurationExceptions that prevent execution are a non-recoverable issue in most of my applications. The typesafe guys have a solid opinion on this: https://github.com/typesafehub/config
Nice video. Wish it mentioned static though.
Use the search function, there's hundreds of "book recommendation" submissions. E.g. *four hours* before your post: http://www.reddit.com/r/java/comments/1vv548/never_used_java_before_now_i_have_to_make_a_basic/
Thanks for the pointers. I've also started looking at Storm and Spark.
&gt; But if you're making and dumping objects in a loop, you're going to overload the garbage collector quickly. The JVM's garbage collector isn't designed for that. This isn't necessarily the case, especially if you're using Hotspot or another 'optimizing' JVM. The JVM will do escape analysis to determine whether or not objects being allocated are actually being used beyond their allocation scope. If it detects that they are not, it will "allocate" them on the stack instead of the heap, making the allocation and deallocation essentially free. Immutable objects can be just as fast as mutable objects, and they're definitely easier to reason about and avoid tricky issues like race conditions. Additional links: http://en.wikipedia.org/wiki/Escape_analysis#Example_.28Java.29 http://www.stefankrause.net/wp/?p=64
/u/DroidLogician isn't up to date on the JVM spec in this regard. Please see my reply here: http://www.reddit.com/r/java/comments/1vw8y5/question_about_immutability/cewp23w Additionally, keep in mind the maxim "premature optimization is the root of all evil". Make your code simple and elegant first, worry about performance later. Only ever make sweeping changes to your code in the name of performance (like switching from immutable objects to mutable objects) if you have extensive data from a profiler backing up your changes. Only then, once you have detected a performance problem in the user experience **and used a profiler to zero-in on exactly what's causing the problem**, should you think about making optimization changes to your code. Clean code first, all else follows from that. Your code probably isn't as performance-intensive as you think it is.
I had that exact idea a while back, thought they should implement it in the JVM. Posted it on /r/learnprogramming No one corrected me. I'm surprised it took this long here. I didn't know what to call it so I couldn't search it and see if it'd been done. I'm glad they actually did it, and beat me to the punch. It seems like such an obvious optimization.
Yes I have a book which guides me through my first steps, Head First Android Development, and I found online resources, I hope I will be able to put all the pieces together :D Thank you!
Still, if you're creating a new (3D) vector or matrix after each step of a calculation, that's not all going away with escape analysis. And if you do many of these calculations 60 times a second for many thousands of (game) objects, the garbage piles up quickly. Also, if you have performance requirements like in 3D engines, CPU cache utilization matters - re-using existing objects is often better than allocating a new object and causing a cache miss.
try a YouTube user called thenewboston. Not everyone likes him, but I found him to be helpful. He also has a site at www.thenewboston.org.
In no particular order: * logging (java.util.logging, Log4J, etc.) * SQL (you may use an ORM, but *should* know SQL). * How and when to generate code * JUnit, testNG or Both * any IDE (common ones are eclipse, netbeans or IDEA) * Apache Ant * JVM options
&gt; If you were deploying anything else on said server, those go down as well. While I'm highly sympathetic to your point of not calling `System.exit()`, maybe you shouldn't be deploying anything else on a server? I'm personally a big proponent of the one application per application server approach. Just set up virtual servers (e.g. via XEN) if you need to run more applications. 
Excuse me if I am incorrect, but I believe that you intended to reference **/r/wtf**.
Why would you long that two classes implementing the same *interface* have symmetric equals methods? That is the same as saying each object implementing Serializable must be equal, which doesn't make sense. I think Oracle has any right to enforce that to equal an instance of sun.reflect.generics.reflectiveObjects.TypeVariableImpl the other instance must implement the same internal class. Apparently, thanks to this defensive programming they can squash some nasty security bugs.
Yeah, that too. But I've seen a number of pro.jects that go without maven entirely, so your mileage will vary. Also mvn is so simple to *use* that you can go a long way without learning too much of it. That is a good thing™.. Other useful libs depend on what you try to accomplish. On the web, you better know JSF and probably Spring, a bit of OSGI and JNDI may also help. Not to forget the quirks of your app server, e.g. tomcat or JBoss. If you have user-facing code, you may want to learn a bit of LDAP, how to use SSL, etc.
More like "Guava developers chose to use undocumented internal APIs and are now paying the price for these choices." The Java developers have been telling us not to rely on these APIs for years. Why is this a shocker?
Really interesting to see the massive drop in Ant/Ivy as part of the modern build set. I wonder if Maven will be able to hold on - it's polyglot POM version needs to come out quickly... 
Are you sure its your garbage collector? I construct lots of small objects per logic cycle and my GC thread has never taken much CPU time at all... I don't think this is typically something you'd concern yourself with as the jvm does a pretty good job performing these optimizations.(is using stack space rather than heap space) I would definitely crack out the profiler to double check. Anyways, I usually factor design over performance until performance is actually an issue. If something doesn't need to be mutable, it should be immutable to reduce potential for errors.
Multi-tenanted VMs are a really interesting idea. And if you can get common OSS projects like Mule, Tomcat etc running smoothly on it then it has a pretty compelling story in resource constrained environments. I'm going to see how it deals wirh Jenkins...
One could either register (ugly!) or download the Android or iOS app
*Also, if you have performance requirements like in 3D engines, CPU cache utilization matters - re-using existing objects is often better than allocating a new object and causing a cache miss.* In addition to that, persistent data structures[1] usually don't have good locality, leading to cache misses. It's a trade-off: immutability (or more generally purity) make it easier to reason about code. But often pure algorithms or data structures have a higher complexity and/or require (partial) copying. [1] http://en.wikipedia.org/wiki/Persistent_data_structure
My eyes. The grammar, so painful to read.
The upvotes on this dogshit can't be organic.
Wrong, the docs say that the method is responsible for creating the instance: A type variable is created the first time it is needed by a reflective method, as specified in this package. (http://docs.oracle.com/javase/7/docs/api/java/lang/reflect/TypeVariable.html) Think of it as an EJB interface. The runtime is responsible for creating the instances, not the user of the library. Guava should only be using instances retrieved from Method.getTypeParameters() and friends rather than creating their own and expecting it to interact with the VM. *edited* for formatting
Guys' first language isn't english, so cut him some slack. I scanned for "write it down before you code it", and didn't see it. I don't see that very often, but it helps quite a bit. Try it some time.
&gt; Even *senior* programmers of 4 to 6 years experience in Java programming 4 to 6 years. You might not be a junior anymore.
Try not to beat yourself up. We all learn in different ways and at different paces. Also, all teachers, courses, and books are not created equal. The Oracle option is fine, but you might get better traction with a top rated book like: Head First Java. I myself read "Java for C/C++ Programmers" back in the day :-) All else fails, ask your specific questions here or on http://www.reddit.com/r/javahelp.
I'm afraid this is a bit of a "no shit sherlock" post.
cheers dude - it's not nessessarily a beat myself up scenario - but a genuine question. Say someone had a good level of aptitude for the subject and had got to [this point (local classes) in the tutorials](http://docs.oracle.com/javase/tutorial/java/TOC.html), would they be able to comprehend it? nice one
* containers: Tomcat, JBoss, etc. * java.util.concurrent. * databases, operating systems, and networking. * front-end frameworks: Bootstrap, AngularJS, etc.
Seems pretty similar to JSF 2.
True. http://www.reddit.com/r/java/comments/1vpyjt/notice_java_170_update_51_is_no_longer_compatible/cewuz74 
Referring to the docs here: http://docs.oracle.com/javafx/2/api/index.html I can only find updateMessage, updateCancel etc. As far as updateMessage goes, since its just a string I dont really consider it optimal for my specific implementation. Are you sure there's an updateValue? edit: I've tried using events to create a similar dynamic but for one reason or another am finding my "fireEvent" to be blocking. I'm guessing this has something to do with the internals of JavaFX that I'm not understanding.
log4j2, slf4j, logback &gt; java.util.logging, Log4J 
Hey, thats cool :) I am in the process of making a series of blog posts to test if people are receptive to my way of teaching here: nimacademy.blogspot.com/ If people have any comments or critiques or questions I want to hear them so I can update the posts. Once they are free of unclearness I will probably make a video series on them. Currently, I am extremely busy, but my schedule loosens up in 1.5 weeks, so I will start posting more stuff on the blog then. If you have any comments, feel free to send me a message here or on skype :)
Hey, thats cool :) I am in the process of making a series of blog posts to test if people are receptive to my way of teaching here: nimacademy.blogspot.com/ If people have any comments or critiques or questions I want to hear them so I can update the posts. Once they are free of unclearness I will probably make a video series on them. Currently, I am extremely busy, but my schedule loosens up in 1.5 weeks, so I will start posting more stuff on the blog then. If you have any comments, feel free to send me a message here or on skype :)
Freemarker is nothing like JSF2. It's closer to JSTL+JSP (without the JSP). I honestly hate Freemarker. I think it's a cancer that I'd love to cut out of our product. Unfortunately, I don't know of a better templating system offhand (it IS better than jsp+jstl for the most part). I'm sure a google search would turn something up, but it's too hard to pull out now. I'm stuck with it.
Tried freemarker, here are some issues: * No support for proper layouts. Seems to be endemic in Java templating. * Directives look exactly like HTML so you can't tell them apart. I don't understand why this style is so popular with template languages. It is true that there are an infinite number of things wrong with JSP that could be trivially improved on.
You still have to consider the sheer number of Guava users out there that are impacted by this. Sure, Guava "broke the rules" but that functionality wasn't available in a public API so they took what was available at the time. Just because they used an undocumented/defined API doesn't mean they were wrong to do so. Don't get me wrong, I have little sympathy for the Guava developers, but breaking all Guava users is not really the right move for Oracle here. At least deprecate the API and give some lead time.
Is there a reason you need JavaScript and Java?
Why don't you just self sign and add yourself as trusted? https://blogs.oracle.com/java-platform-group/entry/self_signed_certificates_for_a http://stackoverflow.com/questions/19481826/java-7u51-will-not-accept-jnlp-with-self-signed-certificate
So many downvotes for posting a hard Java related question in the java reddit...
What is your reason for using a scripting language inside Java? If there was a little more context I could help you find a solution / better method.
I made a small game for a couple of friends with AI. The enemies in the game can be modified by the user by changing values in a text file and now I also want to allow modifying the enemy's AI. Since none of my friends has real knowledge in programming, implementing scripting (preferably in JavaScript) would be the only way for them to make their own AI without having them to compile anything.
What do you mean by proper layouts? Taglibs look like html tags also, I find &lt;#if blah&gt; easier to mentally parse than &lt;c:if&gt;, I guess this is personal preference.
I think Maven [build profiles](http://maven.apache.org/guides/introduction/introduction-to-profiles.html) might be what you're looking for.
It depends on what you want it to do. If you want to do something that is not already handled by one or more plugins, then creating a plugin is one option (the other is an ugly mvn-&gt;ant-&gt;script chain, which I've done before, and it ain't pretty). If you just want to invoke some plugins with special configurations, then you can define a profile.
Well, they did (apparently) depend on a private API. I don't know the full details, but I've been told myself in the past to just to not use that stuff ( e.g. sun. * * . * * ). As a developer of a very popular and public library, it's sort of their job to have a semi conservative view when it comes to stability for the many who depend on it. If it turns out that no private APIs were used (as I seemed to read in some competing comments) then the "blame" shifts back to Oracle. In either case, Oracle needs to do the right thing for the MANY people who will have broken apps due to this change.
You can get app signing certificates from almost all of the major certification companies (Comodo/Verisign/Thawte/etc...)
http://mail-archives.apache.org/mod_mbox/maven-announce/201401.mbox/%3C20140110183649.1d61a4be%40tc.codelutin.home%3E
like tiles in struts?
Try the [java.util.concurrent.BlockingDeque&lt;E&gt;](http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/package-summary.html) in the concurrent package. Edit: or rather one of the many queue classes in that package since BlockingDeque is just an interface.
No, not recommending them, just trying to understand the feature you want. I achieve something basic with freemarker by using something like in this in main template &lt;#include "${template}.ftl"&gt; and then passing in the name of the template I want. Of course you can have more than one include and nest them etc.
I'm a big fan of Java but Oracle seem to be dead set on changing it's course straight into those icebergs. Every new patch breaks something.
Java *is* open source. If they are unsatisfied with the development of the JDK, they could fork it, you know. I'm just saying.
I reccomend embedding Groovy as the scripting langage... Though if its for AI, the performance could be a problem..
`BlockingQueue&lt;E&gt;` is a decent abstraction. You may also want to look into the NIO scatter/gather stuff, depending on requirements.
I learned java through [Objects First with Java](http://www.bluej.org/objects-first/). I thought it was a good introduction. It has a high focus on object-oriented programming. But it is a beginner book, and I am not sure what Java 4 Dummies covers. I've read two 4 Dummies books before and found them pretty useless though. Here is a link to the chapter overview: http://www.bluej.org/objects-first/sequence.html ------ Edit: You can also try to check out a book about data structures and algorithms. That is usually the next step for learning programming after you've learned your first language.
It might help if I explain the situation. I'm working on a Maven project with some *worst practices* due to constraints out of my control: * Using Thrift to define many of my Java classes * Committing generated Java sources to version control * Not referencing the command line `thrift` compiler from any of the regular Maven build phases * Placing generated Java sources in `src/main/java/&lt;namespace&gt;/` rather than `target/generated-sources/` or `src/generated-sources/`. In an older, more sane development environment, I would use maven-antrun-plugin and build-helper-maven-plugin to do the grunt work, and `mvn compile` would accomplish everything. In this current, insane development environment, I have to manually compile the .thrift files, and manually move the .java files into a poor directory structure. I could script this with a shell script or Makefile, but I'd prefer the automation mechanism to be entirely Maven configuration, if possible. Is it possible to define independent Maven goals/tasks/phases/whatever, or are Makefile / custom Maven plugin my only two options?
With some work, I think they would. On the other hand, I would hope never to see code like this in a real program. BTW, you mentioned that you tried running it in a debugger. Did you mean stepping through the code line-by-line with the variables panel open?
Yeah. Basically that. They don't need to, but it could be some good PR.
How is this possibly Oracle's fault? The Guava devs clearly used something they weren't supposed to.
The layout issue was a concern of mine as well. I wrote up my take on a solution in my latest blog. Please take a look and let me know if this is closer to what you'd like to see or if I misunderstood. http://blog.stackhunter.com/2014/01/21/build-template-driven-java-websites-freemarker-resteasy/ This approach let you declare a site template like: &lt;html&gt; &lt;body&gt; ... ${body} ... &lt;/body&gt; &lt;/html&gt; Then inject other templates or values into it. content.add("body", new Content("articles/form-article-confirmation.html")); content.add("body", new Content("articles/form-article.html")); 
I would agree, but can you show a way to rewrite that part of guava without using any undocumented functionality? Sometimes there is no public API to do what you need to do.
But they couldn't call it "Java." That's a pretty big hurdle to building a user base.
So how is static maintained on the stack and the heap? In the past few years that I've been programming in Java, you hardly ever hear mention of how the language is actually organized and how it executes.
For sure. I think somebody like Google could pull it off, though.
No, I'm not familiar with the way Guava works. If there's no public API to do what you want to do, you need to be prepared for things like this to happen. This may mean removing features, or making changes to achieve the same effect in a less speedy manner. It's not Oracle's responsibility to keep undocumented, non-spec features stable.
Not sure why I got downvoted. Just wanted to know if there were specific features of Java or JavaScript that you wanted/needed. If you're using a scripting language to make AI plugins easier, you could look into Jython.
I don't think it is Oracle's responsibility to canvas every third party library and project to figure out if a patch is going to break something. Fixing the security holes trumps this edge cases where Guava devs were doing some outside-the-sneezeguard coding. There's an old programming adage advising against being too-clever in your coding. 
I was also wondering to see you got -2 (Seems to be going back now ;)). Looked into Jython, which seems to have a better performance than groovy and is easier to program.
Awesome! Thank you very much! After a bit of trying and hacking some code together, I got it working! Thanks a lot.
In my opinion, early. It will give you insight in how to think when you want to solve typical software engineering problems. In addition, it is important to know which algorithms and datastructures you would want to use for different problems. Not so long ago, an software engineer from Amazon posted here on Reddit telling how he managed to bring down the run time of a task from days to minutes by just remembering what he learned about the basic datastructures such as the famous ArrayList. Did the book cover inheritance, polymorphism and generics? You might want get to know those things first. For java programming, they are the cornerstones of good datastructures. --------- Edit: Btw. Don't lay too much weight on my opinion. There are many opinions out there. I'm just finishing my masters degree in cs and have a few medium sized projects on my back. :) But I always find what I learned in my algorithm and datastructure classes helpful. It was also that which made me more confident and self reliant as a programmer.
There's a few things on my sh!t list with Freemarker, but my least favorite thing is Booleans. Freemarker uses a wrapper class for things like Strings, Booleans and other 'Types'. You can have a var of value "true" and it will throw an error in a boolean condition under some conditions, but if you do "true" then it will work. I don't get it. Sometimes it works like I expect it to, other times I'm just like /boggle. Honestly, if you have a wrapper class for every type, they should be able to transform (as the case with string to boolean) with relative ease. Throw an exception if the string isn't "true" or "false" - fine. But Don't tell me "true" isn't a valid BooleanValue.
^^ This. My understanding (without being fully aware of the problem and the way they went around it) is that Guava used undocumented APIs to accomplish something that was not accomplishable with the public APIs.
And there you have it, it seems | so they are forced to stop using them. this is the primary goal? I disagree completely! It almost seems like Oracle is refusing to change it to "stick it" to the Guava devs. While this sort of behavior might feel good in the moment, it's not a very positive way to retain users.
In this case, it's not Oracle's fault, but my company is currently dealing with issues caused by Java's patch 7_21 which put certain security rules in place for jar signing which conflict with rules in 7_51. What happens when we have 1 jar which is used by users of 7_21 AND 7_51? Our only option is to tell customers to upgrade to the latest Java. They think it's our fault when it breaks, when it's Oracle deprecating not very old PUBLIC specs.
Sorry, can't really think of any books that really stands out in my opinion. Maybe someone else can jump in here. But you'll probably find that some books only have abstract explanations without much actual java code. For a first algorithm book it might be smart to stay away from those. Unless you feel confident enough. :) The book used in my first algoritm course was [Data Structures &amp; Algorithms in Java](http://www.amazon.com/Data-Structures-Algorithms-Michael-Goodrich/dp/0470383267/ref=sr_1_fkmr0_1?ie=UTF8&amp;qid=1390518241&amp;sr=8-1-fkmr0&amp;keywords=Data+Structures+%26+Algorithms+in+JAVA%2C+fifth+edition+av+Michael+T.+Goodrich+og+Roberto+Tamassia). It covers the topics I told you about in the first chapters. But I think it is meant more as a recap. I never read the first chapters myself. If not this book, it might give you a pointer to some common subjects that you should look for in another book.
Thanks, I will definitely refer to that when I am next building a Java web app!
Macros were what I ended up using as well to get "sort-of" layouts for the application I had to build (which still made it much better than JSP lol). I didn't come up with quite that elaborate a system, I'll remember that for next time.
Isn't that exactly what they have done, ie android? Ok so it is part of mobile platform not standalone language...
Even *if* this was oracle's intent (and if you really believe that, maybe you should post it to /r/conspiracy with all the other funny ideas), it's *still* the Guava developer's fault for irresponsibly using an undocumented, non-spec feature in a library relied on by so many people. Oracle has no responsibility here. To change internal APIs is their prerogative.
Jdk development may be dominated by oracle, but there is a decent amount of third party contribution from sources extremely unlikely to form pro-oracle downvote brigades. Also, maybe those downvotes are coming from people with no ties who simply don't think blaming oracle in this situation is a positive contribution to discussion?
No, for android they just created a compiler for java bytecode to build dalvik bytecode. Other than the class libraries, which are really just an incomplete copy of the java class libraries, there is no java on android devices.
I can't get it to compile. the TmxAssetLoader class at im.bci.jnuil.lwjgl.assets: //At line 48: loader.parseTmx(map, assets.getText(mapFile)); parseTmx method does not exist. //At line 54: loader.parseTsx(map, tileset, assets.getText(tilesetFile)); parseTsx methog does not exist. //At line 69: loader.decode(map); Method decode does not exist. Currently takin' a look. 
Self signing will still show a security warning, right?
[Sitemesh](http://wiki.sitemesh.org/display/sitemesh/Home) can do something like this: &lt;html&gt; &lt;head&gt;...&lt;/head&gt; &lt;body&gt; &lt;decorator:body /&gt; &lt;footer&gt; &lt;decorator:getProperty property="footer" /&gt; &lt;/footer&gt; &lt;/body&gt; &lt;/html&gt; And the actual page: &lt;body&gt; &lt;!-- This goes inside decorator:body --&gt; &lt;p&gt;YOUR CONTENT HERE&lt;/p&gt; &lt;page:applyDecorator name="footer"&gt; &lt;!-- This goes inside decorator:getProperty --&gt; &lt;p&gt;This content will appear in the footer&lt;/p&gt; &lt;/page:applyDecorator&gt; &lt;/body&gt;
Just rename the file to what it suggests, in windows explorer (or relevant filesystem browser) 
I don't expect oracle to know before hand (although guava is arguably big enough that someone might should know), but they should maybe release previews of java updates so that devs can test their code. Then it would at least be guava's fault if there were problems after an update.
Because other people wont have his certificate as trusted
Change the file name and the class name in the file, located after class. They have to be identical.
I think it is assumed that you understand the operating system you are using if you are learning to program. I'd suggest you learn to use the operating system. If you don't understand that you are going to struggle very very much as you attempt to learn to program. 
In Windows, find your .java file using Explorer. Right Click on it and select "Rename." Type in the correct file name and press enter.
Have you taken a look at thymeleaf? (would link but on phone) Is incredibly simple to do what you're describing with fragments, plus templates are valid html so you can prototype with the template itself with no compilation. 
Tucows sells Comodo certificates for $75 / year.
What were you being billed at before a certification? And for what types of companies? Being bomb at core java doesn't seem to amount to much for big spenders w/o knowing the things they don't test you on, like spring and hibernate.
fuck scrum.
Thanks for the reply. What I'm curious is exactly that. What ways, in a fully decoupled library, can I integrate the application that is including the library? I'm not writing in Java 8, so lambdas aren't an option. I'm assuming I could do something along the lines of create an interface for a handler class, and have the application implement a handler and pass it to my library... I'm just not sure exactly how this would work/look, so I'm looking for any articles/examples of somethign like that.
&gt; do I have to type all the code again Do any operating systems not have cut and paste? 
I've found Just Java 2 6th Edition to be helpful. It covers a wide range of topics and gets progressively more detailed. http://www.amazon.com/Just-Java%C2%BF-2-6th-Edition/dp/0131482114 Also if this is your first language and you are new to programming I would recommend reading Code Complete 2. It's not Java specific but the principles apply to anyone wanting to write good code. http://www.amazon.com/Code-Complete-Practical-Handbook-Construction/dp/0735619670
The downvotes are probably because of the majority of voters see Guava developers as being in the wrong for using features outside of the specification. 
&gt; but they should maybe release previews of java updates so that devs can test their code. A) they do that for big updates, see Java Early Access releases. B) Its all open source right now. If they really cared, they could grab the daily builds from the project. But that would be stupid because any failures will be blamed on bugs because they aren't marked stable. C) You dont have to update the very second a patch comes out. Any sane developer keeps the production environment running and tests any patches / updates in a separate environment to make sure nothing breaks. So far Oracle has no blame at all in any of this - this is all on the Guava team &amp; bad developers who update without testing. 
They are internal. Even on Guave's bug tracker they haven't reproduced the "bug" *without* using the internal sun.* classes &gt; would it be possible to make a more compelling case there, for example by having a test case that doesn't use internal sun.reflect classes?
Don't mock people that are trying to help you. You don't seem to realize that renaming the file (which has nothing to do with Java at all) is one of two solutions. /u/tokenizer (and incidentally your compiler, too) said it above: the name of your class must exactly match the name of the file it's declared in. So either * Rename the file to match the name of your class, or * Rename the class to match the file.
I don't have first hand experience, but this looks like what you want: https://code.google.com/p/google-gson/
You're going to have to provide some more information. Are you asking how to access a private member variable in a class which you created an instance of?
Yeah? They should release *previews*? Of *security* *fixes*? Think about that a little while longer.
* [playlist for videos](http://radd.it/r/java/comments/1w0jri/video) in this post ([mobile](http://m.radd.it/r/java/comments/1w0jri)) *^Downvote ^if ^unwanted, ^comment ^will ^be ^removed ^if ^score ^is ^0.* [^about ^this ^bot](/1vjdw9) ^| [^recent ^playlists](/r/radditplaylists) ^| [^plugins ^that ^interfere](/1m21ku) ^| [^request ^blacklist](/message/compose/?to=radd_it&amp;subject=Please blacklist&amp;message=Please add me to the /u/PlaylisterBot blacklist. You can find my favorite pic of Emma Watson at: )
Oh my God I actually watched the first two of this series back when the second one was just uploaded and have been freaking out trying to remember where I saw it and find the rest. Thanks for all your hard work
A variable that "belongs to" a class is called a field, and in Java, special methods known as accessor methods are used to get and set its value; together, these make a property (which you will hear of a lot in relation to JavaBeans). Otherwise, values are passed as arguments to a method, which returns a result. This should all be covered in the first few chapters of any introduction to Java.
Check out Jackson: http://wiki.fasterxml.com/JacksonHome It's a great library, heaps of examples and it integrates well with other projects such as Jersey.
I have used GSON, it's simple and it just works. Read the manual and you'll learn everything you need.
Dude he just told you the correct way to fix it
I've used [gson](https://code.google.com/p/google-gson/) before. It was pretty painless. Just needed to add the [relevant dependency](http://mvnrepository.com/artifact/com.google.code.gson/gson) and I was good to go. Usage was really simple as well. The project page has a nicely detailed [user guide](https://sites.google.com/site/gson/gson-user-guide). My basic usage was in consuming data provided by a third party (Coming from JSON, into Java). Here's some sample code: Gson gson = new Gson(); String jsonString = IOUtils.toString(getSearchUrl(school.getName())); JSONSchool[] schoolsMatching = gson.fromJson(jsonString, JSONSchool[].class); This snippet pulls in the JSON String, and calls "[fromJson](http://google-gson.googlecode.com/svn/trunk/gson/docs/javadocs/com/google/gson/Gson.html#fromJson\(java.lang.String, java.lang.Class\))", which takes some JSON, and maps it onto the provided class. Pretty nice!
Agreed. It seems that the affected code was a key ingredient of that project's secret sauce.
Putty is a windows SSH client, the "commands" for it depend on what type of system you are SSHing into. Since you mention VIM I assume you're logging into a Linux machine and editing the java file(s) with VIM then running the code from the console using javac. If you have more than one java file for the program you are trying to run then each of those java files should be part of a package which the parent folder that contains the files is of the same name. The java file which contains the "main" method is the one you want to target when compiling. The name of the file minus the name of the extension should be the same name as the class the file contains. For example Asshole.java should have its main class be public Asshole { } And as far as renaming the file in Linux goes, the command would be: mv TheSeanis_second.java TheSeanis_PunchRun.java Further, again assuming you're using a remote Linux session, I would recommend reading up a bit on how to use the bash terminal. Look up the commands ls, mv, rm, grep, | (piping), and cd to name a few.
These different applications are running on separate JVMs, right? In other words, each application built on the framework is its own independent thing, and they are not all communicating with one instance of your framework? I'll assume that is the case... Are your applications deployed as simple .jar files, and they provide the "main" class (the one that provides public static void main(String[] args))? Again I'll assume that's true and move on... Basically, yes you want your application to provide handlers. And you want to tell the framework about your handlers. Two common approaches to writing handlers: (a) The framework provides a Handler interface, which classes in your application implement. (b) The framework uses annotation-based conventions. Your handler classes don't have to implement anything, but you use certain annotations to mark classes or methods in those classes as handlers. Two common approaches to registering handlers: (a) The framework provides some core "Service" or "Application" class that you're supposed to extend. One of its abstract methods, which the framework guarantees will be called, is a "configure" or "bootstrap" method. Within that method, the framework provides some object that can accept handlers. Pseudocode: class MyApplication extends FrameworkApplication { public static void main(String[] args) { new MyApplication().run(); } @Override public void configure(Dispatcher dispatcher) { dispatcher.addHandler(new MyFooHandler()); dispatcher.addHandler(new MyBarHandler()); // Sometimes the handlers themselves say what they handle. // Other times, you qualify what they handle with a second // argument to that "addHandler" method. "Add this handler for // this situation." } } (b) A similar setup to (a), except that you don't override the "configure" method. The framework's core application/service class uses reflection to scan the classpath for things that look like handlers, then registers them automatically.
I would like to point out, that his answer is not condescending. You are logging in remotely to a computer. That computer has an operating system. You should familiarize yourself with that. Your question is poorly stated because you do not describe any of the steps you take to produce your error. Eg. Log into a computer remotely via putty. Run vim in putty and type a java program... How did you attempt to compile the program? The problem you have encountered is because a public class has to be in a file with the same name. So you either have to change the name of your file or the name of your class. Neither of those solutions involve 'retyping your program.'
Yeah they seem to have a couple of odd points in their tutorials... I think that if I'm having to google thing's because they haven't shown them yet it's a bit off.. 
Could you be a bit more precise? I think, from your post, you are confusing Java and JavaScript. Java is not JavaScript even though they bear a similar name and somewhat similar syntax. + Java is an all purpose compiled programming language which amongst many other things can also be used to prepare web content. + JavaScript is an embedded, interpreted language that is used to script webpages - to add (mostly dynamic) features and content to web pages.
I can also recommend google gson - very easy to pick up and does the job.
Who's the target of the book? Experienced java devs don't need to be told what bytecode is. Beginner java devs don't need to be told this right at the start. It looks to me like someone just randomly threw a few articles together.
You're probably talking about JavaScript. That's a very different language than Java.
Your question has nothing to do with programming or Java, it's simply a matter of basic Linux (assuming you're using Linux) knowledge. The command to rename a file in linux is 'mv'.
So you said it maps it onto the provided class. How exactly do I access the variable values from jsonString and assign them to the variables of my chosen class type? For example, if a part of the jsonString is as follows: &gt;{"id":"20","name":"jsonName"} how would i pull out id or name and assign it to one of the instance variables of my class? edit:thanks for the help guys!
Yer sorry i meant java script ive got a question from someone asking me what problems it has caused in like IE or chrome in the past and i had no idea
&gt;it's not a very positive way to retain users Agreed, it should give Oracle pause that one of the fastest growing web servers is based on JavaScript.
Both Gson and Jackson are easy to use. I believe Jackson is more mature and, the last I checked, faster. Also, I think Jackson is more flexible as it gives you several ways to manipulate JSON that have convenience/performance benefits so you can fine tune your app as you see fit.
Better ask that question in /r/javascript as they are better suited for answering.
Hey, no need to be cheeky and sarcastic here. You have been given proper, correct answers for all possible combinations. Stating that you are only a beginner does not allow you this kind of comment - especially since the answer given was 100% correct for the Windows operating system. Your question in the first place had nothing to do with Java itself, just with a certain requirement of Java, namely that the file name must be identical to the name of the public class inside the file. What you need to do is to learn how to rename a file in your SSH program - in putty. This will require you to learn the basics of file operations in a Unix/Linux environment. It has absolutely nothing to do with retyping your code at all. It doesn't even have anything to do with the code **inside** the file. /u/bodal has presented you with a complete step by step for your problem. For future, if you want help, you should think about changing your cheeky attitude.
You have to create a mapper class for the JSON data. From your sample, you need a class with fields for id and name (in this spelling) There are several online tools that can help you create the mapper class from JSON data. [Here is a nice example for GSON](http://www.codeproject.com/Articles/604719/Java-JSON-mapping-with-GSON) [Here is a JSON to Java Generator](http://jsongen.byingtondesign.com/) There are quite a few more mappers out there, but I can't find the links any more.
+1 for gson. It almost works like magic.
In this particular case, you would create a class with an "id" and "name" field: public class Entity { private int id; private String name; // Getters / Setters omitted for brevity } Then, inside of your code, you would pass the JSON into fromJson, along with the Entity class. Gson g = new Gson(); Entity e = g.fromJson("{\"id\":\"20\",\"name\":\"jsonName\"}", Entity.class); Then the "id" and "name" will be accessible via the standard methods.
This will be condescending since that's the kind of stuff you like... Talk to your instructor. You are expecting strangers to know the environment you are using and give you help and when we can't, you say we are condescending and we have the problem. You have the problem. Talk to your instructor. 
you said it, not me.
I dunno, I see the post and it instantly gets a whole bunch of downvotes. This is a fairly common thing when it comes to Oracle vs. non-Oracle things these days. 
You would think that except for the fact that there's a fairly good debate (pro AND con) against the Guava devs. I'm actually not anti-oracle here (and neither are many, many others). However, it seems any OPINION gets quickly downvoted. It's just an observation, that's all. Many other subreddits get pretty pissy about downvoting opinions is all.
Since another thread is addressing downvotes for very simple opinions, here's a great example. tau-lepton comes in with a valid opinion, but gets voted down. My post above is the "highest" ranked one with -1 downvotes. Don't you think that's even the slightest bit interesting? tau-lepton is adding to the conversation, this deserves an upvote regardless of your agreement.
I agree that there are strong arguments for both sides, but I don't think there is any vote manipulation going on here. 
Do these optimisations get performed by the android jvm? Also, if it can compile to native code, why isn't that done for the majority of code? Or would that not allow the kind of information gathering that the jvm does?
I wouldn't say manipulation so much as hivemind.
Hey, take this to r/MetaJava will you? &lt;/friendlysarcasm&gt; But really, two down votes do not a conspiracy make. I think you can put away the pitchfork.
**Java 6:** *Primitives* -&gt; [Tuned Quicksort](http://docs.oracle.com/javase/6/docs/api/java/util/Arrays.html#sort(byte[]) *Objects* -&gt; [Modified Merge Sort](http://docs.oracle.com/javase/6/docs/api/java/util/Arrays.html#sort(java.lang.Object[]) **Java 7:** *Primitives* -&gt; [Dual Pivot Quicksort](http://docs.oracle.com/javase/7/docs/api/java/util/Arrays.html#sort%28byte%5b%5d%29) *Objects* -&gt; [TimSort](http://docs.oracle.com/javase/7/docs/api/java/util/Arrays.html#sort%28java.lang.Object%5b%5d%29) Edit: Formatting
That's not true. The comment you quoted was referring to the JDK bug report, which used sun.reflect classes in its example. Guava doesn't refer to any sun.reflect classes (I just grepped the source to double-check).
I was hoping that there would be something cheaper than $75.
So... are you the new spam account for this blog?
So you want each bidder to know when the auction is over? Have each bidder in a loop that keeps bidding until that is met. You can have the auction have a synchronised boolean variable that indicates if the auction is over. But I'm not sure what you are asking. 
I don't think they did. They implemented a public interface and depended on the private interface having a sane .equals method.. How is that "screwing up"?
For a web service a MVC pattern is most likely recommended since all the business logic can be recycled by *any* view you may need without touching a single line of code. If you are *absolutely* sure you will only serve *one* type of client (Android json REST clients) MVC is not needed ***but*** if in the future you decide to server another client (XML REST, internet browsers) an almost complete rewirite of the code will happen. IMO I would go through the *hassle* of using MVC/MVP from the begining.
saving this thread for later thanks so much :]
Not if you add your own certificate to the list of sources your browser trusts: &gt;Import the certificate onto machines that should trust you &gt;In order to trust the certificate, people within your known network must import your certificate into their keystores. The first step is to verify that the certificate is actually yours, which can be done through any band: email, phone, in-person, etc. Known networks can usually do this &gt;Determine the right keystore: &gt;* For an individual user looking to trust another, the correct file is within that user’s directory. &gt; e.g. USER_HOME\AppData\LocalLow\Sun\Java\Deployment\security\trusted.certs &gt; The default password for trusted.certs is an empty string. &gt;* For system-wide installations, Java’s Certificate Authorities are in JAVA_HOME &gt; e.g. C:\Program Files\Java\jre8\lib\security\cacerts &gt; The default password for cacerts is "changeit" as described in the keytool documentation. &gt;File paths for Mac and Linux are included in the link above. &gt;Follow the instructions to import the certificate into the keystore. &gt;keytool -importcert -keystore THEKEYSTOREFROMABOVE -alias erikcostlow -file erikcostlow.cer &gt;In this case, I am still using my name for the alias because it’s easy for me to remember. You may also use an alias of your company name.
I like Jython too, but is there anything in particular wrong with Rhino? (the included JavaScript engine)
that's a 2 downvote score, not 2 downvotes. Also, it had like -4 when I saw this morning.
great explanation, thanks.
I second the use of Jackson. Gson is okay, but I just like Jackson's syntactical sugar better.
I think technically, Gson is "more mature" as in that it's older and been used longer; however, Jackson and Gson are VERY stable.
I think it's a bad example of how to use threads, but whatever/ Here is how I would try and do it. Auction has a do-while/loop that checks to see if all the bids are in. Once all five bids are in, the auction closes, and selects the highest bid, sending a true to that bidder and false to everyone else. Rough code:- Auction class/worker thread { List&lt;Double&gt; myList = new ArrayList&lt;&gt;(); boolean open; recieve bid(Double inBid) { myList.add(inBid) } while(myList.size != 4) { open = true; } }
Will you still love me if I told you I'm written in PHP?
Depends what it is. Some syntaxes have defined rules for detecting the encording. Examples: Python source code, XML, ...
The bidder does not neccessarily know how long the auction is running or if it is over at a certain point. He just has to know if he won the auction (return value true) or not (false). Each bidder is just giving one bid (that's how I understood the task). 
&gt; Primitives -&gt; Dual Pivot Quicksort Interesting that Bentley uses that, since in "Engineering a Sort Function" he uses a pseudo-median of 9 to find the pivot. Wish he'd document why he's simplified it.
Though it should be noted that it's bad practice to access Class fields directory. You should use accessor methods to do so. public class Example { private int accessible; public int getAccessible() { return this.accessible; } public void setAccessible(int a) { this.accessible = a; } }
Yeah I was going to mention that but lost the motivation typing on my phone :) Thanks
Hmm. I'm quite green (I'll be starting my first full time gig in April, and have only done significant Java this past semester), and I managed it after about 4 minutes of staring. Which means it would have undoubtedly taken longer in a pressure situation. I liked all the (fairly unnecessary) fanciness in the method - stuff I'm familiar with, but not in Java. It was nice to be able to recognize these constructs in Java that I'm familiar with in other languages. Though of course, candidates that have done 8 years of Java ought to be far more familiar I imagine. I will say, the one thing that might make it hard for people to get over the hump and solve it, is that I would consider the answer is the slightest bit out of the box. Of those 4 minutes solving it, I spent 2 learning what the code was doing, and 2 looking for some mistake in the logic. I knew the issue was with order, I just didn't see why it would be the case - I was looking more at the code itself, and I didn't consider type if you know what I mean. It was a bit of an "aha" moment for me to notice HashMap and remember that order is not guaranteed. But for candidates that couldn't at least walk through (most of) the code out loud (assuming you asked them), that surprises me.
Service Unavailable Error 503
Spamming is a technique of flooding channels with your content. People get annoyed by overly persistent self-promotion. The negative reaction you are seeing may not have anything to to do with your content, but the way in which you are begging people to see it. &gt; ur lyf "Your life". You're not scoring any points with bad SMS speak. If you want professionals to take interest in your work, speak and write professionally.
I agree with snuxoll too. I think a better test would have been to sit them in front an empty project and told to write a Util method. Perhaps provide the Javadoc along with the method signature and then said "also, please write unit tests." then left them alone for 15 minutes. It would take someone maybe 5 minutes to come up with the basics, but I'd expect anyone in an interview to double, triple and quadruplecheck all the work.
A part of the test was to see if the candidate knew a keyboard shortcut? My go to IDE, I've used it for months. I'm still discovering the wide variety of shortcuts. That'd a very unfair component of the test.
I have been a Java programmer for 15 years. I am no genius but I did create a successful application from scratch on my own that has over 100 HTML pages, form updates, Upload data with Excel, reports in PDF and Excel. I would have given you a blank stare in an interview. I would not have known off the top of my head that a HashMap iterator does not guarantee order. I do not work with them on a daily basis and although I have them in my code I probably have not worked on one in 6 months. I can tell you if my test was failing I would use the debugger and figure it out pretty quick. I could see the issue which would lead me to Google "Java Hashmap out of order". The first link is a Stack Overflow post with the answer. What is more important to you someone who has the Java specs memorized like a dictionary or someone with the ability to reason out a solution?
Meh, still not enough to get worked up over. Downvotes happen for many reasons. You considered it a contribution, so you upvoted it. Maybe someone else saw it as a whinge, a silly "hindsight is 20-20" sort of remark that didn't take into account the reasons why things are the way they are, and considered it a non-contribution. In my opinion, comments that are just about "hey why this downvote" are the biggest non-contribution. I probably would have downvoted instead of replying if I hadn't seen genuinely thoughtful other comments from you.
A very small part of the test was to see how familiar the candidate was with Eclipse - and to see if they were being truthful on their resume. Don't know the shortcut? Say so. That's worth more potentially than knowing the shortcut. We want someone who can communicate when they need a hand; we'll certainly extend it. Part of the job involves digging through a lot of legacy, undocumented code. We need someone who can use the tools (and IDE) effectively to search/call hierarchy/workspace reference their way around.
&gt; Though of course, candidates that have done 8 years of Java ought to be far more familiar I imagine. We thought so too - and we'll keep looking. Yeah if it was taking you longer, we'd just talk through it with you to keep the analysis going. If you spouted out "I knew the issue was with order, I just didn't see why it would be the case..." you're already ahead.
Not trying to be rude on any level, but what types of Java programs do you work with on a daily basis? E.g. are you a front-end guy, etc? What types of frameworks were/are you using? I didn't really mention this in the post, but we really didn't care TOO much that the candidate didn't know of LinkedHashMap, but we wanted them to at least come to the conclusion that HashMap is unordered, which should be evident from the test. Saying "I'd check Google or StackOverflow" is also acceptable once you know what the problem is - we didn't even get that. What we are finding is that a lot of candidates have worked with frameworks that abstract a lot of the foundational concepts away. That's fine for certain jobs, but not the one we're trying to fill.
Downvotes are lame; the code is failing because the implementation is using a HashMap, which does not maintain insertion order. Switching the code to instantiate a Map implementation that maintains insertion order, such as LinkedHashMap, fixes the issue.
What you may consider, if I am getting the gist of the problem right, is wrap the amount of the bid, and a reference to the bidder object in an object. The Bidder could then pass this object to the Auction, which collects a bunch of bids, until some kind of condition is met. The condition could be either a fixed number of bids made, or a certain amount bid, or some fixed amount of time elapsed since the last bid. Obviously in this setup the bid() does not return anything. Instead, when the auction is over, the Auction calls a method on the winner Bidder (remember? the Auction has a bunch of references collected along with the amounts) . One thing to pay attention to is that the bid() call should be in some form of a synchronized block, so that only one bidder "speaks" at a time. I left most of this vague, so that you're left with enough puzzles to solve :)
HashMaps do not guarantee order, so when the values are being put into the map, there is no guarantee that the values will come out in the same order they went it. For example: Map&lt;String, String&gt; map = new HashMap&lt;&gt;(); map.put("A", "a"); map.put("B", "b"); Iterator&lt;Map.Entry&lt;String, String&gt;&gt; it = map.entrySet().iterator(); System.out.println(it.next()); System.out.println(it.next()); could have two outputs (assuming the toString() works the way I think): A - a B - b or the output could be B - b A - a both are valid according to the Java spec, but the second is not what's desired by the unit test in the OP. 
There's probably some details that I'm overlooking, but I'd define an interface (say MessageReceiver) which contains a method processMessage; in your code you can then register any implementing classes - don't need to care about how your interface is implemented, just that the class your application receives is an instance of this interface, so that you can call its processMessage method as and when required.
Thanks for the feedback; I like the suggestions. EDIT: Dang... a "guarantee"? This wasn't the only part of the interview - all other signs pointed to "no". Can't articulate well when describing something you've worked on in the past? Have trouble remembering past projects in any sort of detail? Those signs point to "no". Anyway, your point is still valid for future candidates, and I'll personally keep the harpoon/net analogy in mind.
I'm guessing this is an exercise trying to teach you about how and why to use a synchronized method on a class. Have bid() be synchronized so only one thread can be in at once and then you just need variables representing the current winner, and current winning bid. Increment a variable to get a unique ID for each bid, check if the bid is bigger than winningBid, and if it is set winner to your ID and winningBid to your bid, then wait. Wait releases exclusive access to the object, and lets other bids happen. The run function for the class can simply wait 5 minutes, then call notifyAll() releasing each bid method's call to wait() in turn. After the wait function in the bid method, you can just check if you are still the winner and return true if you are, and false if you aren't. For a bit more info on syncronized, check this out: http://www.programcreek.com/2009/02/notify-and-wait-example/ Disclaimer: I'm a java noob and unsure that this advice is sound. 
&gt; If you spouted out "I knew the issue was with order, I just didn't see why it would be the case..." you're already ahead. Java devs with 8 year experience and not one of them said something like that? I'm sorry, but.. they suck - regardless how bad the question might be. I find it tricky too to come up with code interview questions, but this is as obvious as it gets IMHO. The "tricky" part is why it's not in order - if you know how the HashMap implementation works you can answer within a few minutes and if you don't - it's the only logical conclusion. "I don't know" is a bad answer anyway.. The least you should be able to do is guesses (hypothesis) and approaches on how you would test them.
Honestly, I think you designed a test that candidates would fail. It sounds a bit like you're coming here bragging that you have such an awesome test that nobody can pass it. Maybe that's not your intention, but that's the perception I get, and even though I figured out the problem quickly, I would have declined any offer you made because I don't want to work with the people who are self-important. A key factor for any interview is giving someone several chances. Interviews are stressful, if this is the only code they see/write, you could exclude plenty of good candidates. On the other hand, if this is one of 4 or 5 exercises, that may be more appropriate. I feel like you threw in a lot of unnecessary language features into your method. You claim this is to see if they know the concepts, I think you are just making it intentionally obfuscated. This from someone who is more likely to use all those features himself than any of his coworkers - you still over did it. Finally, you're asking trivia questions, which are some of the worst questions to ask in the interview. I use maps a lot in my current job, so I'm familiar with them, but if I haven't seen them in a year I would be pretty annoyed to fail an interview over something that is basically an API lookup. You might as well ask what year Java 1.0 came out for all the relevance it has to the job. I agree with /u/RockMeetHardPlaces - asking them to write the above method, with a test or two, would have been fine. Asking them to debug intentional spaghetti code - only if that code came from production.
Good, it sounds like the focus was more on getting the test green rather than the tools. My intention wasn't to focus on the IDE, but I've seen far too many interviewers want developers with familiarity with XYZ IDE and ABC framework, these things come and go and what's important is knowing how to architect a solution to a problem. While getting a test green is very-much a real world scenario when tracking down a bug, I'd also suggest giving an open-ended problem and having the interviewee come up with a solution and cover their approach and the code to do so, along with test cases. Any Jr. dev can, given enough time, make a test green, an experienced one should be able to develop a solution and explain their approach and why they took it.
I am currently a one man shop so I am both a front-end and back end guy. It does make me more a Jack of all trades and master of none. I am currently using JSF, Hibernate and CDI. I might have missed the unordered part in an interview because I would have been nervous and probably would have focused on a lot of the unnecessary complexity in the code sample looking for a trick. You may just have a tough spot to fill due to the short term contract. The Java ecosystem is so vast. I often find employers are looking for a very specific set of knowledge that almost no one (except those currently working on the project) would know. To me I find it more important that the person is competent. It just does not take long to learn a new framework or code base. Edit: I do not think you are being rude at all. I think this is great topic. 
In my experience, trove classes are on par or faster than java.util or similar guava classes. Also in my benchmarks, TObjectIntHashMaps usually outperform a similarly used guava Multiset in both time and space. As for speed, results may vary depending on machine, operating system, JVM, usage pattern and other factors. Space however tends to be pretty stable across systems.
Spamminess of the post aside, is asking how Java HashMaps work really a popular interview question? Knowing how hashes work in general seems more relevant than knowing Java's particular implementation, which doesn't look too unusual, unless I'm missing something. I guess you might want to know something about performance and scaling in Java's implementation, but the point of the HashMap abstraction is that the behind-the-scenes details can change over time.
The candidates did have the opportunity to use the debugger, and none of them did.
Even someone with 6 months of Java experience should know that HashMap makes no guarantees about the iteration order. It is essential to familiarize yourself with the various collection data structures. The makeOrderedMap() method is annoying. Mixing generics (which are invariant and non-reifiable) and arrays (which are covariant and reifiable) is bothersome, which then led to that unfortunate custom logic (the if condition and the for loop) sacrificing simplicity and readability. &gt; the basics of opening files by type name (Ctrl-Shift-T) I did not know that. Although I am not overly familiar with IDE development.
Yeah, it was actually 4 candidates. Since we got such a similar response, I figured it was worth posting here to get some feedback (and it was!). Also, I'm by no means an interviewing expert, which is probably obvious as well. I don't screen candidates often, so I'm looking to improve the techniques that we use.
That, to me, is the much bigger tell. Either you managed to find the 10 Java programmers in the world with that much experience who don't know to use the debugger or something in your interview made them think they couldn't. 
True... but the name of the method is "makeOrderedMap", which maybe should have been "makeInsertionOrderedMap".
&gt; To me I find it more important that the person is competent. It just does not take long to learn a new framework or code base. I really wish more employers got this, even picking up a new language is usually not that difficult, a programmers job is to use the tools to architect a solution, what tools they use shouldn't matter. Obviously everyone has preferences, tools have already been decided by stakeholders, etc. But they're just tools.
I like a lot of you points and love the analogy. The only issue is in order for me to spend the time to do this I would have to really want this job. In my experience when looking for a Java job I have to turn down interviews because I cannot attend them all. It has been 5 years since I was on the market so that might have changed.
This is helpful. Wish the idiots that have nothing better to do than down vote anything that says Java would go away. They seem to think that it will in some way improve their language/platform dujour
It's nothing that should be too hard for a competent dev to figure out, but it depends on how you conduct it. If you just want them to glance at it and tell you all the issues, that's weird. If you want them to re-code the stuff so it passes, why not just have an empty block and let them go at it? If I saw this, I'd actually be confused as to why you were using an anonymous inner class. With the idea that every line of code is intentional, it makes no sense why you'd do it for the hell of it, so I'd assume that it's rather crucial to a correct solution. With my coding interviews, I try to leave as much of the solution up to the person being interviewed, and just give them 10-15 failing tests, and watch them make their way through it. 
[/r/javascript](http://reddit.com/r/javascript) here, js does more than that nowadays! I'll get back in my box now...
Hi, I have 11 years of experiences in Java, Eclipse was my main IDE for about 10 years and I have now switched to IntelliJ, to give a bit of context. I do not find your test to be especially difficult, but neither do I feel it relevant. Here is why: * I do have been using a TypeMatrix Dvorak keyboard for years, so I look kind of retarded when using a "normal" keyboard; * I do extensively use keyboard shortcuts. I have annoying plugins that would nag me each time I use the mouse instead of an existing shortcut. However, I do customize my shortcuts, so I would have been lost with a vanilla Eclipse; * I do also judge my potential future co-workers during the interview. If you gave me this kind of code, you do not give me a good opinion of yourself: * Your test is not very readable. It does not describe what it tries to assert; * Your implementation create subclass of HashMap; * You use a serialVersionUID, probably for no good reason. I know you mentioned them here in your post, but during an interview, it gives me a bad feeling * Even if I know it, I never ever face a single project that requested that data structure. So I assume most people did not hear of it. A question about a wrong implementation of equals/hashcode would have been more representative. I don't know what field you are working in, but most of the time, I can judge a candidate by asking him/her what (s)he dislikes in the framework/libraries (s)he is familiar with, and why. To see how far they went digging into it, understood the rationals and constraints, read the underlying code and so for. I rarely have to go to the point I have to test them on code, but it I do, I do it on real actual code I am working on, because that's likely what they will be dealing with.
Don't just crawl away &amp; hide... help out here ;)
Ha, I was going to say my first question would have been. "How do you find a class by name in Eclipse? You know like Ctrl + Shift + N in IntelliJ?"
After looking at the code, I could definitely see what you kind of response you were eliciting from candidates. I knew that HashMap doesn't guarantee order, but as others have pointed out you could be a good candidate and not know this. I think you might get better feedback from candidates if you provided them with some code to test (the method above or something else). Nothing too crazy, but with enough where you'd need a few test cases. See how familiar they are with testing. If they start writing the test cases right away then you can ask them about them. Did they cover all of the edge cases? If not, well you could either decide that it's a deal breaker or you could ask them what they think should be tested (inputs, expected outputs)? This gives you more information about how the candidate reasons about testing code, instead of citing some relatively obscure knowledge about a data structure (although i don't think that it's THAT obscure). About the IDE portion, I don't know how important that piece is. If a certain IDE is required where you work and a new hire has never used eclipse, they'd manage to figure it out within a few days. So I'm not sure figuring out if they know keyboard shortcuts will be useful information if you are trying to find good employees. 
I already replied to his question over in /r/javascript, my deduction is that this is a question for college, my given answer was a gentle shove toward google, teach a man to fish and all that...
okay I feel like i'm getting a lot closer, however, the values from the jsonString still aren't being stored into my object. Here's what the jsonString is before i use the g.fromJson() method: {"ifeed":{"id":35458844,"name":"iFeed","profileIconId":589,"summonerLevel":30,"revisionDate":1390508747000}} i don't know what to do about the first "ifeed" string, but what i'm trying to do is store the values for the other fiels (id, name, profileiconid, etc) into a class, Summoner, that contains an identically named variable for each field. The source for Summoner is as follows: public class Summoner { private int id; private String name; //this continues for each variable // getters / setters omitted } and the call i'm making with the gson object is Gson g = new Gson(); Summoner s = g.fromJson(jsonString, Summoner.class); //jsonString is the same string i mentioned above but when i go to print out s, it states that all the field are 0 or null Sorry for the trouble, this is just confusing the hell out of me
&gt; Changing the javadoc from "Convenience method for creating maps." to "Convenience method for creating maps with keys in insertion order." would have made this an enormously much better test. To be fair, the junit test was pretty clear to me on the expected behavior, when told the test was correct but the code was not would tell me to first look at the assumptions of the test, from there it's pretty obvious that it was testing insertion order.
How is that clear when insertion order = natural order of values?
If you are standing over someone's shoulder the whole time... they aren't going to be at the top of their game. Give them 15 minutes and come back to them and see how they do. It doesn't matter if they use specific hotkeys or not... or how they find the class. This is just being nitpicky.. 
No, No, NO! If you want to see if they can use an IDE then just watch how they fix a broken test case. Testing for a remembered shortcut sequence is pointless, not only that but it might be throwing your candidates off balance. There are so many possible ways to accomplish tasks in an IDE that you should never do this. If you want to ask what their favorite IDE feature is or shortcut is then maybe. But you might as well just f-up the Java perspective and see if they know how to fix it in passing when you give them a unit testing prob. As for the rest, this is a bad question. You are throwing too many things into the mix, the anonymous HashMap is really just too much. Not that it isn't a neat little bundle of stuff but the problem is that one aspect of your question might be obscuring the candidates knowledge of all the other topics. Unless the test is to see how they deal with complexity you should be favoring lots of small tests with low topic coverage instead of a small number of tests with high topic coverage. Try this - instead of writing or discussing these problems as a team, have each person on your team create a couple of problems. Then in front of the team have each team member solve another members problem solo. If you still end up with problems as complex as this one then your team members are probably better than the average dev and you are going to have a lot of candidates to go through before you find similar talent. Edit: Knowing that some collections are ordered and some are not is a completely reasonable expectation.
ITT: butthurt Java developers who whould have failed your interview. Knowing the collections framework and the differences between the various implementations is fundamental. It's covered in the [basics section of the Java tutorial](http://docs.oracle.com/javase/tutorial/), which *every* Java developer should be familiar with. Especially one who is applying for a job, and preparing for interviews.
10 days to make sure you really have 3 years of knowledge? You are not going to make a huge difference. You'd probably be best off getting some of the Java cert prep books since they are going to be the only cram-type Java books you'll find. Just make sure they are for more recent versions of Java.
Yes, the JIT compiler is available since Android 2.2. JIT (Just In Time) compiling is done at runtime, so only a short time is available for compiling and optimizing, therefore it isn't done for the majority of code. But it can be done with an AOT compiler, which is experimentally available since Android 4.4 (the ART runtime). AOT (Ahead Of Time) compiling is done before runtime, with Android it is done when the application is installed. With Android there is still only a short time available for compiling and optimizing, but the AOT does not introduces undesirable runtime latencies as JIT does. Although some optimization is only available with JIT, overall AOT can prove to be a better choice. Or not. 
You might try the Java certification prep: http://docs.oracle.com/javase/tutorial/extra/certification/index.html Good luck. 
the server is tcp btw
In my version (Linux w/ emacs bindings), it's Alt + Shift + G for classes. Ctrl + X for files, and Ctrl + Shift + Alt + N for symbols.
Did you look at the test code given in the post? The expected order is `("One", 1)` `("Two", 2)` `("Three", 3)`, the values are inserted into the map with `MapUtil.makeOrderedMap("One", 1, "Two", 2, "Three", 3);`, I think the desired outcome is fairly clear.
So. One more time. Insertion order == natural order of values. They insert three keys mapping to, in insertion order, 1, 2, 3. Do you see how confusion could arise here? If the keys were z, x, y, the candidate would know which order mattered. As it is, they don't. In the test and the code being tested, nothing tells you which order they're looking for. Further, insertion order is an esoteric edge case as far as maps are concerned.
Alright, I understand you point now and it is valid. Overall the problem didn't have very well documented requirements which I could see leading to confusion such as this.
Check out Amazon Web Services, specifically EC2. You can run a micro server for 12 months running any OS for free.
I will try to clear a few things up: 1. People on programming forums don't usually just do entire homework assignments for students. It's much better if you try the problems and then ask for specific advice on certain parts so people can give hints. This is generally how homework advice is given. 2. You should be aware that this is plagiarism. Many universities do not take too kindly to this, and would be happy to kick you out of school if you're caught. In fact, your professor has mentioned this to you in section 5 of the assignment. 3. Reddit gold is worth $4. I'm quite sure an experienced java developer is not doing your assignment for $4.
Sounds like we're almost there! It looks like your object is an object containing a single ifeed object. To map directly onto the Summoner class, you would want to change: {"ifeed":{"id":35458844,"name":"iFeed","profileIconId":589,"summonerLevel":30,"revisionDate":1390508747000}} to {"id":35458844,"name":"iFeed","profileIconId":589,"summonerLevel":30,"revisionDate":1390508747000} Presuming you can't change the input data structure though, we can easily work around this. We will need to add another class, which "wraps" the summoner object. public class IFeed { private Summoner ifeed; } Notice that the field is called "ifeed" - this matches the outermost field in your JSON Object. Now that we have the new class, we need to modify our gson code a little: Gson g = new Gson(); IFeed s = g.fromJson(jsonString, IFeed.class); We can then call: s.getIfeed() To get the Summoner object.
I think this is a very reasonable test and much more practical and objective than attempting to measure if someone is "good at problem solving". Actually *asking them to solve a problem* in a language and using tools they claim experience in. &gt; opening files by type name Any Java developer that uses Eclipse and can't do ctrl-shift-r or the like to open a file quickly either has no experience on *real world, non-trivial* projects, or is incredibly ineffective. They aren't worth hiring. Eclipse is not obscure, opening a file is not an uncommon trick, expecting people to use keyboard shortcuts is not unreasonable. &gt; Not necessarily to trip them up, but just to make it a little more interesting IMO, this code is fairly representative of the sort of code one might encounter in production, so it's a very reasonable thing to ask a candidate to work with. It's a bit messy. The test is a bit unclear. This is pretty normal for the real world. Any developer worth hiring would have simply run the test, saw it fail, used a debugger, and inferred "Oh yeah Hashmap doesn't guarantee order does it?" and then presumably hit the Javadoc to find a map that did. The FOURTH sentence in the Hashmap javadoc tells you order is not guaranteed; the javadoc also links to LinkedHashMap, and the FIRST sentence there tells you it does guarantee order. Any competent Java developer will be pretty familiar with the basic collections. How could they not be? Maybe not LinkedHashMap - I'm not sure I've ever used it - but enough so they don't freak out. The truth is - as demonstrated by this thread - *good Java devs are hard to find*. Keep looking. You can read some about [how I interview](http://www.reddit.com/r/cscareerquestions/comments/1tdlkz/heres_what_im_looking_for_when_i_interview_you/) - I got lots of criticism too because this doesn't fit the reddit narrative about how they want to be interviewed. 
&gt; Who cares about how well they know the IDE In my opinion it's more of a barometer rather than a specific criteria. If you can't efficiently navigate to various classes in the tool you claim experience it, it's a decent indicator that you're lacking some experience in real-world large projects, or that you're inefficient. &gt; why not use real code that you yourself would use in production instead of a "fancy" version that no real developer should be writing Generics and anonymous inner classes are not particularly "fancy". This is a bit messy - so is real world code, right? The code is a little bit unclear and overly complicated, the test is a little bit unclear - this sounds exactly like the sort of code I deal with every day. 
This is worse than the cthulu merge I saw on /r/git yesterday, clean that mess up.
I tried the test myself before looking at the comments, and I had the same confusion you described. I thought they wanted the iterator to go in order of the values. However, once I noticed that it wasn't a LinkedHashMap, I realized that was the answer they were looking for. Even with the confusion, it took me about 15 minutes including the time it took to create a new project and paste the code in.
You know, like cmd-o in intellij.
Cmd + o in my intellij opens the "Select Methods to Override/Implement" dialog. Odd..
I'm using a keymap called "Mac OS X 10.5+". There's another one called "Mac OS X" that has the cmd-o you describe. In related news, I just realized that saying cmd-o sounds like commando. 
If you want order, use LinkedHashMap
You get a Virtual Private Server (VPS) which gives you your own OS to do whatever you want with. linode or digitalocean are common providers.
It took me about 2 minutes. 1. I know Ctrl+Shift+T but I don't think that's a good metric 1. I don't know about assertThat/bdd 1. I do know LinkedHashMap and TreeMap I don't think the first two are good metrics to judge a candidate on I'm familiar with varargs, generics, anonymous classes but I still don't like this question. It seems very odd considering the trick could be anywhere &gt; We were looking to fill a mid-level Java developer position... Each of the candidates had over 8 years of Java experience. So 8+ years qualifies as mid-level? What's considered senior level?
try digitalocean.com they have decent server hosting
+1 for code complete. 
Are you calling dispose on any Disposable references? Setting references to all unneeded objects to null? Try using jconsole and look at the memory usage there. Find the "Perform GC" button on the memory tab and see what happens when you press it. If it drops back down to what you'd expect then you don't have anything to worry about. The unreferenced objects (garbage) build up for a while but will be collected before your app runs out of heap space.
I'm calling dispose on all objects that have a dispose method. I'm then settings them all to null. When hitting perform GC on VirtualVM the usage drops on the heap, but not on the system memory.
I set max heap to 256MB, and after opening/closing the inventory a whole bunch of times Activity Monitor is showing the process using 342MB.
I'm primarily a C# developer and I guessed that the issue was that a HashMap does not guarantee order although I could not have named an implementation of Map which did. It's simply not a feature commonly needed. I rarely need to treat a collection as both an ordered list and a map. I've used LinkedHashMap exactly once and that was for a very specific purpose. It was for a size-limited cache where, once the maximum capacity had been reached, adding a new item caused the least-recently accessed member to be discarded. As an aside, it turned out that (at least for the version of Java I was using) LinkedHashMap had a memory leak and was therefore unusable for my purposes and I had to cobble together something myself with a basic HashMap and a linked list. Anyway, my point is, this is an obscure part of the library which there is every chance that even an experienced developer would have never had a use for.
Hindsight is 20-20? Many people have expressed a desire to fix java generics for nearly a decade.
Real-world Czech Java developer with 3 years of full-time work + 6 years of hobby (and school) programming here. I think it is a nice real-world looking test. I would easily pass it and give you all kinds of remarks on the code in question (the code in a test does not have to be extremely nicely looking and/or correct - just try to mention that your production code usually looks better :) ). I think this is a reasonable part of a technical test and if it is backed up by more (non)technical (not necessarily similar) tests/questions, it is absolutely fine. Just give the guys the time and freedom to use JavaDocs/debugger if they can't solve it outright - with an adequate score deduction, of course.
Well he did say they all claimed Eclipse experience so I think that's legit. When I interview, I have the candidate bring his own dev environment. All but one have used Eclipse. &gt; It's like hiring a carpenter based solely on their experience with a nail gun. OP never even hinted that he was *solely* or even *primarily* interested in a candidate's IDE proficiency. But going with your example - would you hire a carpenter who didn't know how to use a nail gun? You aren't hiring for his nail-gun-using ability, but a person who couldn't use a nail gun probably isn't much of a carpenter. And especially if he claimed to have years of carpentry and nail gun experience. 
The amount of upvotes this has received shows how amateur this sub is I guess. 
Wow, I just read like half that article and gave up. What's the point? I think the author assumes that his audience knows what WildFly is. Hell, reading the website that talks about WildFly I'm still not certain what problem it's trying to solve. &gt; "During the 2006-2013 gap, many technologies have risen. For example, Javascript allowed part of the code to be executed on the client side, giving the possibility to reduce the burden on the server side. It has had a tremendous impact on software architecture and user experience. New software implementation tools such as Maven facilitated the implementation of large software applications through modularization. Code repositories, such as Git, also simplified the work across teams, through synchronization." It's as if there is a burgeoning software development world outside of Java! Get to the point, tell me what your product does.
Start by reading the oracle tutorial on threads and reading through the docs. Once you know what's available, you may be able to come up with the solution yourself. Consider using one of the concurrent collections, you'll probably want the hashmap, to store a mapping between each bidder and their bid. http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ConcurrentHashMap.html And read this discussion: http://stackoverflow.com/questions/37026/java-notify-vs-notifyall-all-over-again http://stackoverflow.com/questions/541487/implements-runnable-vs-extends-thread What I think you need to do in your main code is, Auction auction = new Auction(); // setup auction... auction.start() ArrayList&lt;Runnable&gt; list = new ArrayList&lt;Runnable&gt;(); list.add(auction); for(int i = 0; i &lt; numBidders; i++) { Bidder b = new Bidder(auction); b.start(); // start not run list.add(b); } for(Runnable r : list) { r.join(); // everything needs to wait } public class Bidder implements Runnable{ Bidder(Auction a) { this.auction = a; } @Overide public void run() { Thread.sleep(100); // maybe randomise sleeping if(auction.bid(this,Math.rand())) { print(getName()+" won the auction"); } else { print(getName()+" lost the auction"); } } } public class Auction implements Runnable private ConcurrentHashMap&lt;Bidder, Integer&gt; bids; private Bidder winner; public boolean bid(Bidder bidder, int offer) { // this method call can wait, and return when it's notified // should throw an exception is a bid is made when the thread isn't running bidders.put(bidder,offer); wait(); return winner. } public void run() { When run() finishes, // it can push the winner to this queue, which would cause all the // bidder calls to return Thread.sleep(1000); // auction ends winner = // Bidder with highest bid in bids // wake up all threads still in bid(); notifyAll(); } You'll need to fill in the blanks but this should give you the gist of it. You'll also need exception handling for threads.
&gt; with an adequate score deduction When I conduct coding interviews, I do *not* "deduct points" for using things like Javadocs and debuggers. I'm actually more impressed by someone using a debugger.
gson has been around a little bit longer. Doesn't necessary follow that it's the best choice though https://sites.google.com/site/gson/gson-roadmap &gt; Version 1.0.1: Released Tuesday, 6/17/2008 (Target Date Friday, Jun 13, 2008) &gt; Includes fixes for Issue 15, Issue 14, Issue 3, Issue 8 &gt; Javadoc improvement http://jackson.codehaus.org/ &gt; 2008 &gt; 10-Dec-2008: 0.9.5 released: now with full-featured serialization, including Bean serialization (just missing Bean deserialization)
&gt; I feel that every mid range person should know how to set a break point and use the debugger. I've seen "senior" devs leave system.out in their code. Yeah the key is to figure out if someone has X years of experience, or the same 1 year of experience X times. Debugging with "System.out.println" all over the place is a good indicator of the latter. (Although certainly there are situations where you can't really use a debugger - but this isn't one of them.) Want to impress me? Show off in the debugger. Use the IDE as more than a glorified text editor. 
Head First, Design Patterns. Hit the basics and be able to talk intelligently about a couple of them. Brush up on Strings and collections syntax. The Java Associate certification covers the basics one should have. A quick review, without getting lost in the details of the programmer one. A prep guide for that will make fast reading. Worth looking at a small web app that touches a database. Oracle XE with Java's two day workshop covers the basics. ( http://docs.oracle.com/cd/E17781_01/index.htm ) Code sorting application. Attempt to do it on a whiteboard/paper first. Tis harder than it would seem.
If you're going to post something like this here you should be asking for help, not for people to do it for you.
If you are wanting to see if they are familiar with more up to date testing, you may want to update the test sample to include more modern concepts. Mocks/stub/fake, annotations, before/after, using a variable to hold your check value instead of retyping "One", only one assert/expect/should per test, etc, etc. That example test wouldn't fly where I work, and my thoughts are even experienced TDDers or BDDers might be stuck for a while wondering just where to start, or may be contemplating on how to fix it. As a suggestion, I'd wager you'd get a good response, if you ask them about red, green, refactor, such as how they personally follow it. (personally I sometimes find myself red, green, repeat red, green just to make sure, refactor code, refactor test). When is a good time to use a mock? What are some things you should never test with TDD? What's the difference between unit, integration, functional, etc. Do you still need manual QA and if so, what's the role. Good luck.
And the guava devs will find a workaround. But its unclear why the change was made, or why it can't be fixed such that the canonical equals method is symmetric.
Outside the sneeze guard? How many security fixes does Oracle expect to roll out? It's getting to be a damn joke.
This. $5 a month will get you a nice server.
A few years ago, I was on a team that did 3 hour long interviews. First we sent you two problems with no code. Just two word problems. We gave the person 3 days to work on them. If they sent back a solution, and then we talked about their solution for 1 hour. Another hour was experience, general knowledge, basically a regular interview. The last hour was brain teasers, but that part was more about "do I like hanging out with this guy?" We spent a lot of time vetting people out, but everyone said it was the best project they've been on. It's been over a year and when we get together we talk about how much we miss that project. It was mainly because everyone was intelligent, well spoken, professional and fun to hang out with all day. 
Control-n is find java class. control-shift-n is find resource.
YES i finally got it, i didn't notice that the first 'ifeed' was making all the following text into a difference object and that's what was messing me up. thank you so much for your help!!!!
Sorry to bother you further, but I think both of the following things you mentioned could be great patterns for me to use in other parts of these libraries: &gt; you use certain annotations to mark classes or methods in those classes as handlers and &gt; The framework's core application/service class uses reflection to scan the classpath for things that look like handlers, then registers them automatically. Do you happen to have links to resources on either of these? My google fu is weak and I haven't found anything. 
The JVM is a large platform. Ongoing security fixes should be expected just like there are for any operating system. If you're asking when patching Java will be "done" the answer is never. That's the way software development goes. New features means new bugs and more updates.
That way is more difficult. You might want to go with the Handler interfaces instead, at least at first. If you want to do the annotation-based approach, you're going to have to deal with reflection. This library, which I haven't used, looks pretty convenient for scanning a package for annotations: https://code.google.com/p/reflections/ This could also work: http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/reflect/ClassPath.html#getTopLevelClassesRecursive(java.lang.String) You'll probably deal with these methods at one point or another: http://docs.oracle.com/javase/7/docs/api/java/lang/Class.html#getAnnotations() http://docs.oracle.com/javase/7/docs/api/java/lang/Class.html#getMethods() http://docs.oracle.com/javase/7/docs/api/java/lang/reflect/Method.html#getAnnotations() The JAX-RS framework uses annotations to mark its handlers. It's for HTTP servers, not the low-level socket stuff it sounds like you're doing, but maybe it will give you some inspiration. https://jersey.java.net/documentation/latest/jaxrs-resources.html
I'd consider myself a mid level Dev and I don't find your test intimidating. I also apologize at some of the downvotes you've been getting since they simply seem to indicate dislike. Your test is kind of shitty to read. I don't like coming across that kind of stuff during an interview. Yes a Dev will need to read shitty code, but doing it under pressure isn't much fun. Some extra comments might help. I expect people at the midlevel to know what a linked list is, and what a hashmap is. Deriving what a linked hash map is shouldn't be too hard from that, even if you've never used it. Especially with languages like Perl and php or JavaScript that use associative arrays extensively... The value of that data structure should be clear. As long as you're lenient how they come to the conclusion to the problem... I think the test is reasonable. If they just give up... That says a lot doesn't it? As for the eclipse check... I think every java dev puts that on their résumé.... Maybe they're fibbing but they probably figure they know the basics of the ide and its not hard to learn on the job... But MORE importantly... Not everyone uses hotkeys. Oh I use them... Ctrl,shift,r/t is my workhorse... But I also play competitive StarCraft and other games. I navigate windows without the mouse when I can. Ive had lots of experiences with other people showing them the type finder and other shortcuts and it just doesn't click for them. I doubt thats a big deal for you...just sayin. The interesting thing about a test is... Its probably a good test to find other people like you. If you're open to more diversity then you might need a different test. Also, my company has been recruiting heavily and I've been very surprised by some otherwise smart candidates who have missed some questions I thought to be very obvious and basic... I guess what I've learned from that is I'm shitty at judging whether or not people can code. (Some questions I've asked, which are terrible I've learned) Is java pass by reference or pass by value? / can you write a swap function in java? How does garbage collection work? When will an object be collected assuming there are no references to it anymore? Write a method to reverse a link list. ... One more thing... There are a lot of bad devs out there... Or at least it seems that way because they can't answer pretty standard interview questions like what package you'd find ArrayList or name two collection data structures in java. 
That doesn't make it clear at all. My very first thought was "Does he mean Sorted Order by keys? It should be returning a SortedMap". Then when i saw the testing order I had no idea what you were going for - and your documentation was worthless for clarifying. Obviously the response should have been to ask for clarification of the goal.
Not bad docs to brush up with. Thanks!
Probably not enough to put up with the kind of management that leads to interview questions such as these...
Would you please post your code so we can discern what the problem is? I guess one issue is your use of print() instead of println(). However, printf() might be better for you purpose.
 // Store values in an array int[] bars = new int[]{3, 2, 4}; int largest = bars[0]; // Find largest item of array for (int i = 0; i &lt; bars.length; i++) if (bars[i] &gt; largest) largest = bars[i]; // Traverse values from largest to smallest // If found the largest item vertically, display it // and reduce its value by 1, so it shows on the // next line. Else, display blank space. while (largest &gt; 0) { for (int i = 0; i &lt; bars.length; i++) if (bars[i] == largest) { System.out.print("*"); bars[i]--; } else System.out.print(" "); largest--; System.out.print("\n"); }
Do you know every class in the core Java libraries? More importantly. What makes you a better programmer, memorizing the API or knowing how to solve a problem and how to find what you need in the API docs?
&gt; Do you know every class in the core Java libraries? Not all, but most of them. &gt; More importantly. What makes you a better programmer, memorizing the API or knowing how to solve a problem and how to find what you need in the API docs? "Solving problems" is a vague term. It doesn't always go like "*hmm I need an ordered Map, let's just google it... oh neat, TreeMap, there you go*". Sometimes (or very often, depending on where you work) you need to debug and/or extend a huge clusterfuck of bloated and overcomplicated code (similar to the code snippet in OP's interview question, 90% of which was just diversion from the actual bug). In these scenarios, if you don't know the basics and the behavior of the java classes you're looking at, having to rely on google will slow you down significantly or prevent you from solving the problem altogether. And that makes you a worse programmer.
This is an interesting problem. I have 10 years experience and I see myself as a good Java programmer. My first thought after reviewing the problem was that there was nothing wrong with the code but HashMap doesn't assure ordering of the keys. However, I was not sure which one of the Map implementations do, my first thought was actually TreeMap which (after checking it) only assures the natural order of the keys, it would work in this specific case but it wouldn't work as expected in other cases. The thing is: 10 years is not that much. People often work on the same things for many years so 10 years doesn't mean I have done a great diversity of coding. If I never had the necessity of creating an ordered Map, it is very likely I may not know the answer, however, this is something any good coder can easily search and find out if needed. Still, I think any good experienced coder should at least suspect the HashMap doesn't assure the expected order. Personally, I think the interview shouldn't approach easily searchable topics because those are things that won't impact your performance on the actual work. I think it's much better to approach a nice range of logical problems to see how good one can resolve them without complicating too much. As an example: I love the FizzBuzz problem and it's amazing how many coders actually complicate a such easy problem.
Most of the article is vague waffle about Java EE. Wildfly doesn't get mentioned until the 3rd last paragraph. Finally the article concludes "In my opinion, it [Wildfly 8] has the potential to be the game changer" - based on what exactly? The article offers absolutely no evidence to support this view.
The first example with the ingredients: does the optimised form print the first element of ingredients? 
&gt; Not all, but most of them. I assume you consider yourself a good programmer. If you went to a job interview and the only opportunity you had to prove your programming ability relied on knowledge of one of the few classes you aren't familiar with, would you feel that the interviewer had made a fair judgement of your ability? &gt; "Solving problems" is a vague term. Well that's what we do. It's well-enough defined for me. &gt; It doesn't always go like "hmm I need an ordered Map, let's just google it... oh neat, TreeMap, there you go". Sometimes (or very often, depending on where you work) you need to debug and/or extend a huge clusterfuck of bloated and overcomplicated code My current job is exactly that: Extending a huge clusterfuck of bloated and overcomplicated code. for example, every concept in our database it duplicated across at least two sets of tables. It's a .Net project and relies heavily on NHibernate, StructureMap, AutoMapper and NewtonsoftJson and a few different versions of each. Nobody in my office knows even close to half of the classes in the libraries we use but we are good problem solvers and know how to find the information we need. &gt; In these scenarios, if you don't know the basics and the behavior of the java classes you're looking at, having to rely on google will slow you down significantly or prevent you from solving the problem altogether. And that makes you a worse programmer. I know the basics but LinkedHashMap is not something used everyday. I'd be disappointed in anyone with a CS degree who didn't know that a hash map (in any language) can't be expected to maintain order but to know the implementation to use in the case that you do need to maintain order is a bit of a stretch. If you think a Google search significantly slows down coding, that suggests to me that you've never really worked on anything more complicated than simple CRUD. There are plenty of times you need to sit back and think/draw/talk to come up with the right way to do something.
Over 80 percent of client exploits used the java plugin. The first thing to do is to deprecate the plugin.
Very good overview of past, present and future of Java dates (although I feel the Java 8 part was a bit too short). I'm intrigued about the naming similarities between java.time and joda. Using joda terminologies seems like a good idea to get people to make the switch to Java 8, though.
Sorry to tell you, but this is not /r/DoMyHomework. Only if one shows reasonable effort, help will be given.
First, do you understand what you are seeing with that UML picture? It is basically the template/description of a class you are supposed to implement. To get you started, the picture has 3 sections. * Section 1, the very top, is the name of the class. * Section 2, the middle, is a list of data members * Section 3, the bottom, is a list of method names. In the two bottom sections there are meta characters associated with the items that suggest scope and types. The instructions below the diagram give details of what you need to implement. The comments about storing the values is a key one because the constructor is going to have to take in values of one type and convert them. Look into Java numeric data type details to see if you can understand why.
&gt; OP never even hinted that he was solely or even primarily interested in a candidate's IDE proficiency. Thanks for chiming in; you beat me to it. A lot of folks are honing in on this. Don't know the IDE we set you in front of... SAY SO! We wouldn't have put you in front of it if you didn't claim some experience though...
I glad it is helping you. It has certainly helped me. You can download a version of Netbeans that come pre-configured with Tomcat. You can also set it to use a local version like you are doing. Eclipse is very popular but I cannot figure out why. Most people who use Eclipse need a bunch of plugins to make it serviceable. 
Using visualvm as suggested would probably help a lot in see how much memory is being used
OpenShift from Redhat offers free Java web applications hosting, you can choose Tomcat and Jboss AS. I read somewhere on their site that you can host your application with GlassFish too, but you need to do some configurations manually. However, AFAIK that OpenShift currently offers access over HTTP(S) only, but I read somewhere on their blog that they're planning for WebSocket support. Getting a free trial account from AWS as other suggested is a good idea, but from my experience micro instance can provide very limited processing power.
I use Json-smart in my web applications to parse/ encode data to and from JSON. There is a benchmark on their official website that its performance is quite good.
Right, the OS heap (system memory) was requested (malloc) by Java to use for objects. Java normally keeps that memory to use for new objects as needed. Java has to have a very large amount of unused heap space before anything gets returned to the OS. You can read more about it at http://www.oracle.com/technetwork/java/javase/gc-tuning-6-140523.html#generation_sizing.total_heap
That is the biggest red x sign, but the junit failure is explicit enough to show it is clearly out of order.
I'm not even 5 minutes in, but I don't know if I can keep on watching: man.. just *how* many times can somebody say "uuhhmm" in each and every sentence?!
Wait, so when you write code that you know only you will ever look at, you have never went back a couple months later and said "lolwut?" You have never been given a bug fix and then when looking at the code said "what asshole wrote this crap?" And that asshole turned out to be you? Sorry but your expectations are way too high.
Let's be honest here. You don't have to dig in the JDK source code to know that a hash table is not key-ordered. It's a fundamental and basic data structure that is covered by elementary data structures course. A question that does require you to read the JDK source code is e.g. what collision resolution method is used (open addressing, cuckoo hashing, ...).
What kind of a game? Can you do your networking inside HTTP requests, or do you need TCP or UDP traffic? How much memory does your game need per game state? How do you wish to persist your state? How sensitive is your game to latency, can your users wait tens or hundreds of milliseconds? These are the kinds of things people need to know to give you actually relevant answers, instead of fairly ignorant shots in the dark.
I see that there is a lot of down voting going on here. But there isn't necessarily anything wrong with the question (discarding the Eclipse shortcut question). I'd want my co-workers to know what the properties of HashMap are. If they know that the test is correct (regardless the code style issues), it should at most take one or two minutes to see what is wrong. A good developer should know the properties of fundamental data structures and algorithms and should be able to gauge the properties (e.g. complexity) of non-fundamental data structures and algorithms when they have some time to read the implementation. I wouldn't expect everyone to immediately be able to suggest the correct replacement. But that's less of an issue. If a candidate is able to spot the problem (the map implementation is not correct for the key order requirement) he/she will be able to find the correct implementation using the JDK documentation. If someone only gives stares, you are probably better off not hiring that person. Obviously, you need other indicators as well. As someone suggested, a good test is to give candidates a problem to solve. Both locally on a whiteboard (using pseudo-syntax is good enough) and something they can work on a few days that they have to present. Of course, the problem with the latter test is that you cannot be sure that it is their own work, or if it is, whether they are creative enough to find the solution themselves, or Googled for a solution, read it, and reimplemented it. tl;dr a good interview is a mix. Of course, given that the number of open positions is large to the number of high-quality candidates, it could well be (depending on the company and offer) that you may not be able to recruit the best candidates.
Are they just making joda a standard now? If they could that would be great
Don't do this. No programmer I've met who has a collection of these copy-and-paste "snippets" is any good. Build fundamental knowledge, so that these tasks become rote by virtue of their simplicity.
No half-way competent Java programmer should ever have to keep snippets around of the first 2. 
It pains me to see comments thanking the blog poster for these snippets...
More or less off-topic: Does anyone else find the documentation of JBoss AS/ WildFly not as good as GlassFish does? I'm still using GlassFish 3.1.2.2 and I always have a document bundle ready on my computer, which contains the usage of each command, how to configure logging facilities, how to configure JVM options, how to setup connection pools to various RDBMS, etc. When I go to look up for similar information on JBoss AS/ WildFly, I feel that it is more like blog post style instead of formal documentation.
Jboss still exists. Wildfly takes over the community version to Prevent confusion. Wild fly will sit close to bleeding edge javaee implementation. Jboss will eventually get the updates that wildfly gets so long as they are considered stable and tested.
I can almost guarantee those are auto-comments. 
(1) I think it is very unlikely that Swing will be dropped from JREs anytime soon. There is simply too much software that depends on Swing. Heck, even their own IDE (NetBeans) uses Swing. (2) This seems to be Oracle's official stance: http://www.oracle.com/technetwork/java/javafx/overview/faq-1446554.html#6 I am still skeptical that JavaFX will see a lot of adoption. But I guess it's a relatively safe choice if you want something that is moving forward. And gradually migrating from Swing to JavaFX seems like a sane route. (3) It's expensive and risky. (4) Qt is great, I have used it a lot with C++. But Qt Jambi (the Java bindings) are not developed by Qt's steward (Digia) anymore and progress on the community-based version is glacial. Some people will mentions SWT or making a web application, but this has the same downside as (3). I'd continue with the Java codebase and start using JavaFX where it makes sense.
Print to pdf, then transfer the files to your kindle. http://www.bullzip.com/ or http://www.cutepdf.com/ then http://www.amazon.com/gp/help/customer/display.html?nodeId=200375630
Nothing. I am using Rhino and got it working :)
A bit off topic from talking about the JVM patches but just as interesting. Just like flash it seems internet "plugins" of this sort are just naturally security problems. Instead of just pointing fingers though it would be really interesting to hear from the java plugin team to understand their issues in patching it. Does current browser technology make patching holes a moving target? I'm not saying lay the blame elsewhere but just knowing the whole story would be interesting and educational. 
Interesting, I suppose you learn something new every day; however, yes - I disagree with him. I find the method to which you access the singleton is non-intuitive and (while perhaps effective against a serialization attack) -- how could I best describe it -- it's not clear programming. If I want a singleton of a particular class, I shouldn't be accessing an Enum for it. Quite frankly, a DI framework should be in place, but if that's not available, the standard "getInstance()" method is, in my HUMBLE opinion, the correct way to do it.
Yeah, digitalocean's ssd seems nice. Stupid test: dd if=/dev/zero of=/swapfile bs=1M count=2048 Linode: 60~80 MB/s Digitalocean: 280~300 MB/s My home ssd: 220 ~ 240 MB/s
[Java Tutorial eBooks (ePub &amp; Mobi)](http://www.oracle.com/technetwork/java/javase/java-tutorial-downloads-2005894.html)
No, lot of Indians are quite thankful for these. 
Well said; thanks for the input and feedback.
Any developer who is learning and improving will most certainly have "lolwut" moments every few months (or weeks). I suppose what I was getting at is that they couldn't articulate well about the things they took time to put on their resume.
Agreed that Swing will never go away. There are too many people using it, and the JCP is very devoted to backward compatibility. If you are considering other UI toolkits, you might consider SWT. It has a very native look and feel. http://www.eclipse.org/swt/
I agree with others that swing will likely never go away You should include consideration of tools, IMHO. Personally, I use swing because there's a really great GUI builder for it built into netbeans. If you're moving to other toolkits, consideration of a maintainable toolchain should be central to the discussion
Back when AWT was the windowing toolkit, and Swing was the new kid on the block, people who tried to do 2 had a lot of pain. I don't know if there's a cleaner path from Swing to JavaFX, but mixing two toolkits is a decision you want to make very consciously. If you haven't already, do a PoC with some screens in Swing, some in JavaFX, some a blend of the two. 
In an article of bad code, "Java code to parse above XML" stands out as being spectacularly bad. Honestly, it's worth reading that article just to feel better about yourself as a programmer.
You can always add a static get instance() method to the enum singleton. This way the accessing syntax is still concise, and you still get all of the benefits of the enum singleton. 
I think this is a good type of post for this subreddit. I don't agree with a lot of these specific implementations but people are ready to correct wrong implementations in the comments. And of course you should never copy-paste any code unless it's a library, but these are simple and universal ways to explain the implementation concepts behind different tasks.
If you read the article it answers your question (no), and gives the reasons why it's being slightly reworked for the standard implementation.
JavaFX also allows for Swing integration, so (2) is the best approach. You can read about it here, http://docs.oracle.com/javafx/8/embed_swing/jfxpub-embed_swing.htm Only with the upcoming Java 8, though.
Or, you know, ``java.util.Arrays`` or ``java.nio.file.Files``.
The subreddit for jokes is [that](/r/programmingjokes) way.
It should be a lot easier integrating JavaFX in a Swing application and vice versa from Java 8 onwards. I believe JavaFX and Swing are going to share the same event dispatch thread instead of each having a separate one and JavaFX is getting a [SwingNode that wraps a Swing component for use in a JavaFX scene graph.](http://docs.oracle.com/javafx/8/embed_swing/jfxpub-embed_swing.htm) While there may currently be some pain when including FX code in a Swing app due to the separate event threads, this should go away when upgrading to Java 8. 
https://github.com/OpenHFT/HugeCollections http://fastutil.dsi.unimi.it/
Never knew about that! Will post accordingly. Thanks!
I think that would be a bit of an overreaction 
I would never use any of these code snippets. Whoever uses snippet #3 needs to seriously reconsider what they're doing. #2 could potentially not even close the stream properly if the IOException was thrown on the call to write. #1 &amp; #4 don't catch the exceptions thrown if the provided string is invalid. Which is fine if you can guarantee they won't be... but something tells me the people using these snippets cannot. #5 doesn't close it's connection... and why doesn't it use a static method factory rather than init? #12 is fine... but is a singleton code snippet really that useful? Idk, I'm not looking at all of them, but the point is that they're all either not that useful\common or wrong.
What did you do before those 3 years?
MOXy. It's a great JAXB implementation. 
I think most people would have the sense not to copy code snippets like this directly. I know when I find something like this, I take it as information, look at the article date. And then look at the API and figure out what's been updated. Articles like this are an excellent learning path to put yourself on, but not really great for copy-and-paste coding. 
Not at all. It would mean that the agency would have miserably failed in their only job, screening staff. In most contracts, there are provisions for quality aberrations in the substantive work, but you have to be able to trust local oversight. If you can't trust that, there is little point in continuing a business relationship.
Thanks i skimmed it but i should have another go I reckon.
Thanks for the hint. Personally I favour native over web, but customers think otherwise, so I am not that up to date with all JavaFX features.
Thanks. This is what I was looking for.
We're rewriting our Swing app (now 13 years old) as a web app. It was originally done in swing as it's a real time monitoring console that wasn't really feasible as a web app back then, but now it is. 
No.
However, if you are learning it is nice to see how it's done once or twice in different ways. Definitely not something to just have laying around though.
While I sort of skimmed over these #19 caught my eye as being bad By just using that snippet some webservers won't view you as an actual client and the JVM will cache your results, this can cause a lot of issues. Doing something like this is a lot better public String readPage(URL url) { try { URLConnection connection = url.openConnection(); connection .addRequestProperty( "Accept", "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5"); connection.addRequestProperty("Accept-Charset", "ISO-8859-1,utf-8;q=0.7,*;q=0.7"); connection.addRequestProperty("Accept-Encoding", "gzip,deflate"); connection.addRequestProperty("Accept-Language", "en-gb,en;q=0.5"); connection.addRequestProperty("Connection", "keep-alive"); connection.addRequestProperty("Host", getHost()); connection.addRequestProperty("Keep-Alive", "300"); connection.addRequestProperty("User-Agent", Utils.getHttpUserAgent()); connection.setUseCaches(false); BufferedReader reader = new BufferedReader(new InputStreamReader( connection.getInputStream())); String line; StringBuilder contents = new StringBuilder(); while ((line = reader.readLine()) != null) { contents.append(line).append("\n"); } return contents.toString(); } catch (Exception e) { e.printStackTrace(); } return null; } 
*Here is the text of the [accepted answer](http://stackoverflow.com/questions/5743768/5743779#5743779) to the [question](http://www.stackoverflow.com/questions/5743768/difference-between-java-class-and-jar) linked above, by user [BertNase](http://stackoverflow.com/users/702599):* --- &gt;A Jar file is an Zip archive containing one or multilple java class files. &gt; This makes the usage of libraries (consisting of multiple classes) more handy. &gt; Directories and Jar files are added to the classpath and available to the &gt; `ClassLoader` at runtime to find particular classes inside of it. &gt; &gt; --- ^[about.StackBot](http://www.github.com/gabrieldain/StackBot) ^| ^(downvote to remove)
I see how you may have gotten the impression that my theoretical explanation for downvoters represented my opinion. It doesn't. Yeah, guava does do some things that some Java developers have been wishing for a long time. I'm pretty sure even in the last few years of openjdk mailing list archives you can find several threads discussing such things at length, including reasons why we haven't seen change at the jdk level. I think JDK devs would love to provide all the features everyone wants but need to make tradeoffs for various reasons.
No I have many files within this project and I need it to be an executable file for ease of use.
It just "seems wrong" to have an Enum as the "holder" of the singleton. Maybe I'm just old and fixed in my ways.
&gt; public static &lt;K,V&gt; Map&lt;K,V&gt; makeOrderedMap(final Object... keyAndValuePairs) The method signature alone would make me wretch. Object... with an explicit assumption about the type and order of parameters is pretty much Java hell.
Interesting way to get the current method name if it works. I don't know why you'd want to unless you were trying to do something too clever for your own good. Generating stack traces are performance killers so hopefully not in a loop. 
&gt; Like I said, we are going in circles You might be going in circles. I'm expanding on my point and responding to yours. You can't just use "We're going in circles" as a get out of jail free card. The argument actually has to be, you know, going in circles. We would both need to be repeatedly presenting the same arguments. Here is how it has gone: 1) You assert that extensive knowledge of the standard libraries is a fundamental requirement to consider yourself a good Java developer. 2) I respond that the class referred to has a very limited set of use-cases and it is unreasonable to expect every developer to know it by heart. 3a) You assert that the class is an essential part of the libraries with nothing to back that up and no rebuttal to my assertion that it would be rarely used. 3b)You also assert that we are going in circles despite the fact that I've only made one comment. 4a) I ask whether you know every class the core libraries. 4b) I then assert that the ability to use the tools and documentation available to you is more important than encyclopedic knowledge of an API. 5a) You admit that you do in fact not know every class in the core libraries. 5b) You assert that somehow encyclopedic knowledge of the libraries use would somehow be helpful when working on "a huge clusterfuck of bloated and overcomplicated code" 5c) You then assert that having to stop and use Google to learn more about a problem would cause a significant drain on productivity. 6a) I point out that it's possible that you might get a similar question in an interview focusing on one of the few classes you are unfamiliar with and suggest that it would not be a fair test of your ability. 6b) I explain that I currently work on "a huge clusterfuck of bloated and overcomplicated code" and it has not altered my views on this. 6c) I point out that programming is not simply pounding away at the keyboard as fast as possible. There are many times you have to stop and think, Researching a problem would not make a significant addition to this time. Just because neither of us is changing their views does not mean that the argument is going in circles. &gt; and will not convince each other. The goal is not to convince you. The goal is to provide a rebuttal to your assertion for the benefit other readers.
the java language also provides more elegant solutions to parsing XML than the builtin DOM and SAX parsers. He'd be better of choosing one of the 3rd party libraries.
I never seen point #3. What's a circumstance where you would use that?
A better way to do singletons: https://google-guice.googlecode.com/git/javadoc/com/google/inject/Singleton.html
I'm curious why you chose JavaFX. It feels like too-little-too-late. Has it made developing desktop apps viable again?
Except there is no good way to do Singletons. This is the second most harmful thing you can do to your code (behind casting). Repeat after me: global variables are bad. If you haven't yet realized that Singletons are glorified global variables, spend some time thinking about that. Also, please don't ever use Guice. It is the definition of a solution looking for a problem.
It wasn't really my choice but i have to say i actually like JavaFX. I like how FXML's work for GUI building and other cool stuff. On the other hand, i do agree that it feels too-little-too-late like you put it. It still feels incomplete in so many places but i would expect those shortcomings to be fixed in the near future.
Yep we've pulled back from u51 at work, staying at u45 until things get straightened out.
&gt; Except there is no good way to do Singletons. This is the second most harmful thing you can do to your code (behind casting). Repeat after me: global variables are bad. If you haven't yet realized that Singletons are glorified global variables, spend some time thinking about that. Singletons have their place, but they can certainly be overused. Fields can also be treated as global variables within a class, and can be misused... but you don't see anyone calling for the end of fields... except maybe Clojure developers :). &gt; Also, please don't ever use Guice. It is the definition of a solution looking for a problem. LOL, well... there are many people who will disagree with that, but thanks for the advice I guess?
Really? JavaFX is more advanced than WPF and with Java 8 it will have 3D out of the box but yeah, the Java community needs to work on promoting it more.
how are you running the jar file? java -jar filename.jar? make sure your manifest.mf contains Main-Class entry
I have no idea what the last line means
I dont know if I can use an API designed by someone who uses comic sans in his powerpoint presentation.
I'm just beginning to learn java, that BufferedWriter out can be declared as simply Writer out, no? 
http://introcs.cs.princeton.edu/java/85application/jar/jar.html
When you say that you &gt; need to host it online (port forwarding) it seems like you are saying you already have it working on some network somewhere and you just need to "open it up" to the Internet. Is this your intention? If so, this is a relatively straightforward thing, but it all depends, of course, on what the network architecture looks like. Typically this is accomplished at a firewall, making a configuration that says to allow TCP port X destined to Internet routable address A and forward on to internal host B and translate internal host B's IP to IP A. But there are many considerations to take into account before making such a change.
On the surface it looks like a good addition, However I am intrigued on how the system works with other calendars...
The guy who created JodaTime, Stephen Colebourne, led the development of this new API. I feel it's going to be awesome, considering he probably was able to use his knowledge from JodaTime and make a more robust API.
Did anyone else notice the condition he wrote for "isTodayAfterTomorrow" was wrong. He wrote tomorrow.isAfter(today) which would return true, but the JUnit test passed anyways. Just something I noticed :)
Jackson and GSON are great tools. Just to provide an alternative approach you could write the parser yourself using json simple ( https://code.google.com/p/json-simple/). I've done this a few times and it is fairly painless and provides a level of control that might be useful.
It's a perfectly readable font. It might not very professional, but the point of this presentation wasn't to look pretty to a Helvetica-is-the-only-font designer.
It's not that Swing will be dropped but development is sure to slow down meaning bugs are not going to get fixed as quickly. Moving to JavaFX is the safest choice.
Or, if you do use some of this code repeatedly, put it into a library you can call. If I find that I have code that I use a lot in a number of places, that's what I do. You know...basic refactoring.
I believe you might not have written a swing gui in a while.. the main() thread typically dies in the first second, and a couple of swing-provided thread and event queues take over, which can't easily "return" anything.
True, I don't usually write swing applications. Especially not ones that are meant to be called within a batch job. In your case it depends on the exiting thread.
[Here he explains why they didn't just use JodaTime](http://blog.joda.org/2009/11/why-jsr-310-isn-joda-time_4941.html). He actually wanted something better.
If you think a little deeper about that statement I think what you'll find is that what you mean is: "sometimes I need global state in my program". You don't. The only reason to enforce the singleton contract is so some object A can share state with some object B through this magic singleton C. If that's the use case you have, then pass a C to A and B. If you only have one C fine, but there's no benefit to declaring that that has to be the case, unless you're trying to use C as a global variable.
If I change your statement to "global state variables have their place" - do you still agree? There is never a legitimate reason to do this. As to your comment about fields, this doesn't make sense. Global variable means a variable whose scope is your whole program. A non-static field cannot possibly have global scope. Public and protected fields can have a somewhat leaky scope . If that's what you're referring to then yes, you should never use non-private fields. I didn't realize there was still a question about this.
The problem is that java has low level access to the machine. It tries to implement security by blocking all paths to that low level. The problem the plugin team had found is that there seems to be no limit to the number of ways to bypass the security guard and call the low level api. It is too easy to inadvertantly bypass such a path.
No, they didn't. They implemented a public interface. The most insane think they did is rely on the private implementation to do the "normal" thing. What they did is no worst then you or I making a new implementation of Map
No, please don't use it.
I envy you.:)
&gt; meaning bugs are not going to get fixed as quickly. Moving to JavaFX is the safest choice. Swing has been around for ages and JavaFX is relatively new. If you want to be on the safe side about bugs Swing would be the tried and tested approach.
Fields are global within the scope of the object they're defined in. If your application is simple enough, they're equivalent. If you honestly think there's no possible application of a singleton, then really you should be submitting RFC's to Oracle to fix the singletons in the JDK. Cheers. 
I graduated from Florida State 3 years ago
http://stackoverflow.com/questions/18649173/how-to-solve-undefined-reference-to-chkstk-ms-on-mingw http://en.wikipedia.org/wiki/Compilation_error
You want to be taking the integer modulo (%) 100. That gives you the cent amount. Then, divide by 100, rounding down, to get the dollar amount.
/r/json
Excuse me if I am incorrect, but I believe that you intended to reference **/r/json**. ***** ^(/u/based2: Reply *+remove* to have this comment deleted.)
yes, indeed /r/json
Thank you for the confirmation. 
By that definition are local variables considered global variables because you can implement your whole program in your main function? One of the main ideas in OO programming is that objects are used to capture state. This represents a happy medium between C-style imperative programs and pure functional programming where all state must be passed as arguments to functions. If your fields can reasonably be interpreted as global variables, then you are definitely doing other things wrong (your classes are way too big). As to the JDK - writing RFCs for all the things that are wrong with it could easily employ several people for several years. Citing other examples that do the same wrong thing is a pretty weak argument.
http://tapestry.apache.org/ioc.html
https://github.com/spreadthesource/pelican
What a beautiful post
(int) 4321/100 = 43 4321 - 43*100 = 21 There's a hint :) 
I edited my post. Hopefully it has enough information now
I don't know about that. There have been plenty of Swing bugs that have sat around for years. If you check you'll see huge work being done on JavaFX though.
When I first read the headline I thought the article is going to talk about HashMap and equality. I have actually come across problems where I wanted to use a hash table for a type that implemented equals() too strictly or too lenient for my use case. It doesn't occur very often but in that case having something like comparators for hash equality would help.
You *are* aware that GCJ was practically dead last time I heard, right? I believe it's stuck on Java 4.
I already have a system of file objects that have an arraylist of subfiles if they have "isDirectory" set. But I want to connect this to a terminal. I think the easiest way would be to make either a filesystem or directory that the terminal can not leave.
Yeah, but I figured it'd be a good way to pop out some quick programs in a language I'm familiar in.
Are sure everyone at DFW know they're at DFW? This PSA was brought to you by AAAAA, Anonymous Americans Against Acronym Abuse
It stands for Dallas-Ft. worth
I am looking for the best framework library to implement a DAG of transformations on small blobs of data (~2MB) in soft-realtime. The primitives offered by the libraries listed above + Storm / Spark offer different levels of abstractions and so far none strike me as *the* solution. Had Clojure been an option, [Graph](https://github.com/Prismatic/plumbing) by Prismatic would be close to the *right* level of abstraction. Are there any resources you’d recommend to get a high level understanding of RxJava, especially geared toward architecting large-ish DAGs?
Thank you for standing up against acronym abuse. [Not half](http://www.snoosecret.com/statistics-about-reddit.html) on the users of Reddit are from the USA, but most of them writes their posts as if everyone lives there.
Don't know how deep your game actually goes, but I would have a suggestion for the filesystem problem. Since you already stated that you have some form of filesystem and terminal implementation, I think that a possible way would be to implement only a "virtual" filesystem. This means, that you don't access a real filesystem on a disk, but simulate the filesystem with a database like SQLite. The only connection to a physical disk would be the SQLite file on the disk. Screwing around with a real filesystem on a drive is, in my opinion, never a good idea when it comes to games and/or simulations. If one misses some checks, someone will find a way to mess around and bypass the secure filesystem structure and work on the real system with unforseeable consequences.
Hey, great idea :) Why do you declare so many variables and arguments as final? Cheers
You divide a variable named "filesize" by 100, because it will "save you ears". In other words, you're conflating file size with frequency. You should isolate the "saving your ear" logic with the code dealing with frequency, and not have your code "lie" about what the filesize actually is.
The big thing is not only performance (though this is a great benefit of trove), but also reduced memory consumption for collections of primitive values. For programs that need to crunch big volumes of data, this may make the difference of a successful run and a OutOfMemoryError. As for the lack of an external .equals(Object)/.hashCode() implementation, this is mostly a non-problem, as you can easily introduce your own class to implement whatever equals/hashCode combination you like. If equality is to be defined broader than what the target class implements, it may be feasible to reduce the key to the data that really has to be equal.
You have some weirdly named methods. `getFileBytes` is void and does not get anything, it plays a sound instead. `shout` on the other hand does not make any sound. You can write `44100f` instead of `(float) 44100`. There is a bug when you write `buffer[0] = (byte) (Math.sin(angle) * 128);` You are bringing your sample values to [-128, +128] instead of [-128, +127]. The occasional +128 value would be wrapped to -128 and cause some cracking noise. In `getFileBytes` you're catching `Exception` and simply printing "Invalid path entered" in all cases, even for unrelated exceptions.
I don't have any comment on the quality of the name, but there is at least a reason for its being chosen. The term 'stream' is often used in the functional programming community to refer to a lazily evaluated sequence of items. It's also used in dataflow processing to express a similar concept. Java's new streams fit into this same general paradigm. (So do the old streams, for that matter...) Here are a few references: * http://srfi.schemers.org/srfi-41/srfi-41.html * http://en.wikipedia.org/wiki/Stream_processing 
Some say Information is key... 
&gt; [use the keyword final whenever possible](http://www.cs.unc.edu/~hedlund/programming/coding/bulletproof/UseOfFinal.html)
Don't know why he is getting downvoted, it's basically the same solution as mine - simply without the modulo operation.
I actually think it will work itself out with time. The stream api is still very new and doesn't have much written about it, in comparrison. Once Java 8 comes out and people start actually using it, there will be more articles talking about it and more questions being answered on StackOverflow. With the influx on newer content, search engines will start to see the stream api as a better match.
Honestly this isn't that functional. Final just means their reference can't be modified here, not that their contents can't be modified by concurrent items. The final is only protecting against the least likely scenario
Yes. Every instance of `String` is immutable. Note that the `String` constructor that takes a `String` (as in `new String("whatever")`) makes a *copy* of the input `String`. This is a mostly pointless waste of time and memory, so don't do that. (Why that constructor isn't deprecated, I cannot fathom.)
**Edit** I was wrong - see comment below. The constructor is not depreciated because there is a small (minor) difference in the allocation of the strings - as far as I understand. Take the following cases: String a = "Hello"; String b = "Hello"; String c = new String("Hello"); In the above code, the strings a and b point basically to the same string from the "string pool", whereas the string c is a new String that is completely different from a and b. Direct string assignment (without the new costruct) first checks if the string is already in the pool, if it is there, it references it, otherwise it adds the string to a String pool. The constructor skips this check and always creates a new String object. 
Thanks for the correction, much appreciated! But there is another question: would a==b yield true? I totally understand that a==c yields false, where a.equals(c) yields true. The whole string allocation is still somewhat a mystery to me... (Couldn't they have used something similar to the C/C++ Strings with some improvements?)
I've just always done so for a functional mindset. 
This causes sound to skip. 8 bit mono is a byte[1]
Yes. This is Java's [lambda operator](http://www.oracle.com/webfolder/technetwork/tutorials/obe/java/Lambda-QuickStart/index.html).
Thank you, i've fixed these now. 
&gt; would a==b yield true Yes it does. They both reference the same object from the String pool. But it can lead to bad programming practice. I try to make sure to correct my team when they compare reference equality on Strings.
Totally agree to that. Never use '==' on Strings, always use one of the .equals methods.
Awesome thank you!
Thanks! Using separate profiles for local development vs continuous integration turned out to be the perfect solution. Locally, `mvn generate-sources` compiles `.thrift` code to `.java` code. Remotely, `mvn generate-sources` is skipped.
so I had a page saved that had some stuff about modding minecraft, can't find it now! but I did remember that the dude that made the Steve's carts mod has a youtube channel [where he has some minecraft modding tutorials](https://www.youtube.com/user/VsweGoesMinecraft)
I propose a domain ban for javacodegeeks.com for the obnoxious popup advertising.
This has been asked many times, and could have been found with a quick search within this, and related, sub-Reddits. If you want to start playing around with Java, [start here](http://docs.oracle.com/javase/tutorial/).
Well, I'm not going to create an algorithm for you. What I can tell you is to create an object called "Terminal" that has properties like "HostName", Array of users called "Users", ArrayList of Directory I mentioned above called "FileSystem", etc. I can sense that you might be new to programming in general, so you might want to start thinking (Good advice to ALL new Java (or OOP languages) in Object-Oriented manner. EDIT: In all honesty, this is really hard to help you out here without some context code. Show me your concept that you mentioned and I will try my best to give you a better option. If you don't want it public, PM it to me and I will help you out to the best of my ability.
On the contrary, it' a great name because the existing *InputStream-s are basically just Streams, and *OutputStream-s just generators of Streams, already - only wihout the rich functionality. It's the same concept and it should be the same name. Your Google search issue will sort itself out soon enough along with the adoption of Java 8.
[**+Google Guava**](https://plus.google.com/118010414872916542489) [_2014-01-27T17:38:29.735Z_](https://plus.google.com/118010414872916542489/posts/i9sRnkDKcdT) &gt; &gt;In +[Kevin Bourrillion](https://plus.google.com/113026104107031516488)'s recent appearance on +[The Java Posse](https://plus.google.com/103002908895994700816), he mentioned that +[Éamonn McManus](https://plus.google.com/116012605255269201011) and the team behind +[Google Guava](https://plus.google.com/118010414872916542489) have been working on a new approach [1] for creating value types with less repetition and fewer opportunities for bugs. I'm pleased to announce that the first release candidate of AutoValue [2] is now available. &gt; &gt;AutoValue generates implementations of immutable value types from abstract classes. Simply define an abstract method for each accessor and apply the @AutoValue annotation. The processor generates the only sensible implementation to be encapsulated behind a factory method - _callers_ should never see the generated code. For example, the following snippet generates a value type with two fields and sensible implementations of equals, hashCode and toString: &gt; &gt;@AutoValue &gt; &gt;public abstract class Example { &gt; &gt; public static Example create(String name, int integer) { &gt; &gt; return new AutoValue_Example(name, integer), &gt; &gt; } &gt; &gt; public abstract String name(), &gt; &gt; public abstract int integer(), &gt; &gt;} &gt; &gt;AutoValue is part of the Auto project, which uses annotations and processors to automate various tasks where code generators can write the code that you would have written. As part of the AutoValue release, another Auto project has a release candidate as well. AutoService generates the file in META-INF/services that registers a class for use with a ServiceLoader [3]. Rather than maintaing a properties file, just annotate the implementation class with the service interface. In fact, this is precisely how the AutoValueProcessor registers itself as a Processor implementation: &gt; &gt;@AutoService(Processor.class) &gt; &gt;public class AutoValueProcessor extends AbstractProcessor {…} &gt; &gt;AutoValue and AutoService are just the first of our efforts to help automate the mechanical and repetitive aspects of Java. Watch the Auto project [4] for updates. &gt; &gt;+[Gregory Kick](https://plus.google.com/116303290732678168218), Robot Wrangler &gt; &gt;[1] [http://goo.gl/Uhdo9m](http://goo.gl/Uhdo9m) (introduction to AutoValue in presentation form) &gt; &gt;[2] [http://goo.gl/Ter394](http://goo.gl/Ter394) (AutoValue User Guide) &gt; &gt;[3] [http://docs.oracle.com/javase/7/docs/api/java/util/ServiceLoader.html](http://docs.oracle.com/javase/7/docs/api/java/util/ServiceLoader.html) &gt; &gt;[4] [https://github.com/google/auto](https://github.com/google/auto) 
I think I am just going to try to implement coreutils and other terminal functions as best as I can. I know this is a really tough thing to ask about and do. If you still want to know, the game is about hacking. There are tens of thousands of computers each with their own file system and terminal. Through the terminal you run programs(actual python code ran through jython) and other commands. I have spent a week working on tab completion alone. I figured it would be worth the extra time to figure out a way to use a third party terminal to interact with the game. I am just going to continue working on my terminal though. And, yes, I have programming for about a year or two, but I do know what I am doing. **Edit:** [Here is my code by the way.](https://github.com/Rsgm/Hakd) [And here is the terminal.](https://github.com/Rsgm/Hakd/blob/master/src/hakd/gui/windows/deviceapps/Terminal.java) [And the command class terminals run.](https://github.com/Rsgm/Hakd/blob/master/src/hakd/game/Command.java)
You start at int main(String[] args) { } ah, programmer humor! ... I'll see myself out.
http://stackoverflow.com/questions/11379660/why-is-sun-misc-disencouraged-for-use http://download.java.net/jdk8/docs/technotes/tools/windows/jdeps.html http://www.infoq.com/news/2013/09/remove-sun.misc.sort-java-8 https://bugs.eclipse.org/bugs/show_bug.cgi?id=236116 http://mishadoff.github.io/blog/java-magic-part-4-sun-dot-misc-dot-unsafe/ http://www-plan.cs.colorado.edu/henkel/catchup/java-rt-deprecation.html http://stackoverflow.com/questions/17671066/java-direct-memory-using-sun-misc-cleaner-in-custom-classes
Thanks for the heads up. Almost clicked the link.
You could probably counter this by using threads, but as long as it runs, don't bother.
I can only hope that this will lead to a better, standard, implementation of the functionality in Unsafe. If you rely on anything in Unsafe, please take the poll and spread the word. It's important!
While the information is useful, sometimes I wonder how many projects out there are directly coded with pure JDBC (i.e. without using ORMs).
at least one...
Oh, this would be so nice. Especially for Maps.
How would you control what the implementing class is for the interface?
In theory it shouldn't matter. It would just be a class that implements the interface. Of course, in practice these kinds of things do sometimes matter. So I'm assuming it would do something similar to Arrays.asList, which returns a new ArrayList.
I'm using both JPA and JDBC at work (depends on the project), but I'd rather be using pure JDBC than JPA. Even better would be a thin wrapper over it. 
How would u go about doing this?
I looked at your blog and it looks good. Very easy to understand. Looking forward to more lessons.
I would have to have _very_ _very_ good reason for using that package. No one has a right to even complain that they're being removed.
I'm an aspiring Java developer in DFW, I wish I had the experience though.
I've been doing this MOOC and enjoyed it so far: http://mooc.cs.helsinki.fi/programming-part1
You're right when you say it shouldn't matter. As the description says: &gt; Dynamic footprint (the size is known, so a space-efficient implementation can be chosen) ... the compiler is free to select an appropriate implementation class based on the size and content of the collection. This is similar to the way that EnumSet.of() will behind the scenes choose a RegularEnumSet or a JumboEnumSet depending on the size of the enum.
Would this be more efficient than doing it with a json parser? 
You should try running it using 'java -jar something.jar' and then gather the output. It should be clear what the issue is, and if it isn't, post it on pastebin or such and post it here.
Are my assumptions correct in that you already have this working on a network? If so, what does your network look like? Specifically the part that connects to the Internet? Do you have a commercial firewall like a Cisco ASA or Juniper Netscreen? Or a consumer firewall? For each piece of hardware there is a different means to make the change.
Arrays.asList() doesn't return a new ArrayList, it returns a wrapper around the array you passed it.
Can't argue with that. As one of my college professors often said: "respect the abstraction".
What if I want it to be *my* implementation to obtain some application specific need? Simple example, there are a number of primitive type collections because creating a Map or List of boxed primitives can be very wasteful on space. 
What about velocity? Seems like the best of both worlds
Yes and no. It doesn't return a new java.util.ArrayList. It does return a new java.util.Arrays.ArrayList. So you are technically wrong, but I think your meaning is correct. (And isn't technically wrong the best kind of wrong?)
Then don't use the syntactic sugar of the collection literal and declare it the way you want. You could do it with annotations perhaps: @ListImplemention(MyCustomList.class) List&lt;Integer&gt; list = #[ 1, 2, 3 ]; ... but I don't see this being useful enough to enough people to warrant it. Not when this achieves the same thing: List&lt;Integer&gt; list = new MyCustomList(Arrays.asList(1, 2, 3)); 
Yes, the _compiler_ is going to turn that literal into the appropriate bytecode for creating the collection and populating it.
yeah, probably should have been FixedSizeArrayList (as its own top level public class) - since the elements are mutable, but the list itself is not (can't add or remove); but I would have preferred something more like Collections.immutableList(), since whenever I use Arrays.asList I usually wrap in Collections.immutableList or new ArrayList if I don't have complete control/assurancies over the lifecycle of the resulting list....
Actually I figured it out... My game "Limitless" has a functional online server....but thanks anyways!
...and coming up with new jokes. No, wait. That's cache invalidation.
Maybe [this](http://stackoverflow.com/questions/1673841/examples-of-gof-design-patterns) will help
Awesome! Thanks!
There was a quite active discussion about this JEP on the lambda-dev mailing list only one or two weeks ago.
The Wikipedia page on design patterns has quite a bit of information.
Pre-emptive snarky comment: "What do you mean? Java hasn't developed at all!"
I think OP misunderstood the question. I think it was more the Java Platform API ([Java™ Platform, Standard Edition 7 API Specification](http://docs.oracle.com/javase/7/docs/api/)) Answering the question demonstrates knowledge of both Design Patterns and the Java Platform. Like "Oh, hey! [StringBuilder](http://docs.oracle.com/javase/7/docs/api/java/lang/StringBuilder.html) implements the [Builder Pattern](http://en.wikipedia.org/wiki/Builder_pattern)!"
Read the Head First Design Patterns book. That'll tell you all you need to know in an easy to understand way.
and then your colleague has his indentation set differently and all goes to hell...
Hence mind set
Oracle (the makers of Java) have a tutorial on their website here: http://docs.oracle.com/javase/tutorial/ To write the actual code you can use any text editor including plain old notepad, however I would highly discourage you from doing that. Instead use an IDE (integrated development environment) which is just a fancy way of describing a program that has built in tools and features for facilitating the writing of code. If you follow the tutorial linked above you'll be using Netbeans, which is a good IDE to use for Java. 
Ok cool, Thank you very very much. 
The internet predates Java. I'm afraid the question doesn't make much sense.
I've just started learning Java myself, and have found these tutorials really good http://www.youtube.com/user/IntermediateJava?feature=watch The first lesson starts with installing what you need etc. so starts right from the beginning!
Check out the /r/javahelp/wiki/ there you'll find all the necessary resources listed as well as links to tutorials and books.
Sooo, I can't put a variable in that literal? 
https://www.udemy.com/java-tutorial/#/ This is one of the free courses at udemy and he does a good job at explaining all of the beginning concepts of Java.
When I launch the jar, the window "JReader Installation" stay at "Initializing..." status. 
This. You want to understand this topic not fake it for an interview.
That's no good, what OS are you using?
The IDE support is fine, I made this to learn about Java programming.
There is a book named Applied Java Patterns that is similar to the GoF book but spends time talking about how the patterns are used in the Java APIs.
It is possible that one understands the topics, without knowing the fancy names the Java community likes to give them. For example, who'd have taught 20 years ago that a self-evident principle like "pass all values a function needs to know about as arguments" is nowadays called "dependency injection"?
I made this library because I felt like the current set of Java templating engines were missing some great features that I saw in other engines from other languages, specifically inheritance. I'm hoping to find people who can help with: * API Feedback * General Testing * Bug Reports * Performance Optimizations * Help with Thread Safety Thanks!
Well, this is old history but: The popularity of PERL CGI scripts led to the creation of servlets. The popularity of ASP (Active Server Pages, a Microsoft Technology), led to the creation of JSP. Java is very popular on the server side of web applications, so "more graphics friendly" hasn't been a result of its popularity in web applications, except perhaps some frameworks that make it easier to develop visually appealing web pages (PrimeFaces comes to mind).
Yes, within within the Java API you would be able to find examples of any of the patterns in use; you could sometimes believe done as an exercise. That said, outside of the Java and C++ world, few people talk about these patterns - most of them don't usually don't make any sense in a language like Python or Ruby which have stronger language constructs (e.g. just pass in a hashmap rather than mess about with a Builder) and weaker typing rules (no need for interface trickery).
Thanks! Very interesting.
Links or it didn't happen. http://mail.openjdk.java.net/pipermail/lambda-dev/2014-January/011671.html
&gt; I'd also be interested in what those of you that employ programmers would think if you saw this on a CV... I'd be impressed, it shows you have an intestest and can follow through. Then I'd probably ask you questions like if you had to do it again from scratch, what would you do differently etc.
i'd like to see some examples. 
I am yet to do any serious project with Gradlle. Now every time I have to customize a pom.xml for a given project, while avoid it to download half of the Internet and wishing that the plugins behave in all phases, I keep wishing for Ant instead.
--Edit-- Wrong link...check this one out: http://refcardz.dzone.com/refcardz/design-patterns 
I've now fixed this bug (hopefully) and am uploading a new version. I hope you will give it another shot!
Thanks, that really gives me some hope that someone will take me on and give me a chance. The plan is to write an Android app next and then move to the city and start applying everywhere and anywhere. I really enjoy programming and want to make it a career, it's just a matter of trying to get my foot in the door. 
I can't understand why some people write Ant scripts the way that they do. IMHO there is nothing that causes unmaintainable Ant scripts other than people who don't understand it properly. You can make "modular" Ant scripts, reusable scripts or at least reusable and importable macros, etc. I'm not saying it's the best option, but it's not a bad one.
Seems like you are confusing Java and Javascript. Java is not Javascript. Most web hosts offer some kind of HTML &amp; Javascript editing facilities. Hava a look at http://www.serversfree.com/ for a free web host with a built-in editor. Also, there are no special editors needed for HTML &amp; Javascript editing, any notepad(++) will do. You can even install a webserver with most necessary facilities locally - look at http://www.apachefriends.org/de/index.html
This should be preceded by ImmutableMap, ImmutableList and ImmutableSet interfaces, builders and implementations.
Seriously... the first bootstrap needs to happen either way to get all the libs, why not let maven handle it? :)
 yeah, but how do i have the page load the program and load the text randomly each time, and display the random text?
Looks neat! Does it have support for adding JavaDocs that are online?
Hi there, very nice ill check it out tommorow! I am very willing to help out with any issues you may have, just create the issue on github and i'll have a look
As a beginner subscribed to this sub, it is becoming more and more funny to me the amount of acronyms and API names I have never heard of. This title takes the cake. That said, anyone else stoked for ObnoxiousAvocado7?
Using Maven gets even better with a repo manager like Artifactory or Nexus. If someone pulls a dependency or plugin once, it's automatically held in the repo manager from there forward. For the next person who needs that library locally, it gets pulled from the repo manager rather than the internet. If you have multiple offices you can do the same between repo managers on your intranet. Coupled with the local .m2, it's a thing of beauty. I have my occasional gripes with Maven, but dependency management isn't one of them.
AFAIK there are no limitations on compiling java in Windows 8 so it should work, you just have an issue with your settings. One way to see if java is installed is to run "java -version" at a command prompt. Since it sounds like you are using textpad as an IDE? I'd like to suggest you switch to either Eclipse or Intellij Idea as they are full featured IDEs. Either way, make sure your project has had the JDK setting set to your install. 
I've downloaded the JDK and Java 7 prior to installing the IDE. I'm not sure what the problem could be.
This has nothing to do with Java. This can be anything from a simple - ready made Javascript script to a PHP script, to any other web scripting language. Google for "Quote of the day" scripts for webpages. Should be literally hundreds of them freely available.
Did you set up the proper PATH variables as described in the instructions of the IDE you are using? Is the Javac compiler accessible via PATH? I am running Windows 8.1 64bit and have absolutely no problems compiling Java programs. The message that you are quoting has nothing to do with the problems you are describing. This message just tells you that Java won't work in the NewUI (MetroUI or whatever it is called now)
&gt; Nothing beats a nice clean pom.xml Never saw one in our enterprise projects.
Fully agree. It baffles me that many still don't use macros and custom tasks with Ant.
Every time I am allowed to choose between Ant and Maven.
I've got it to work now, my lecturer emailed me the instructions. They were as follows: 1. Open TextPad 2. Click Configure, then Preferences 3. Click on the word Tools in the bottom left hand corner 4. Click Add and select Java SDK Commands from the drop down menu 5. Click Apply 6. Click OK I guess I never pointed the IDE to the Java? Thanks for help.
I think you want something like this? http://jsfiddle.net/ecVEq/
Time to refactor your build scripts I think. 
Velocity and Freemarker already everything except the inheritance, after using things like Tiles, I'm skeptical of the utility of inheritance. Why not just build in the opposite direction? 
A templating engine should not have an [escape filter](http://www.mitchellbosecke.com/pebble/documentation/filter/escape). It is extremely poor design from a security point of view. Google's `ctemplate` provides a glimpse what is possible with [auto-escaping](http://ctemplate.googlecode.com/svn/trunk/doc/auto_escape.html). (People who tell you that proper HTML encoding is an input validation problem try to solve the problem at the completely wrong end.) The documentation doesn't say explicitly if templates are type-safe. Do you report missing fields in input types prior to run time?
As a consultant that is not always an option.
Or TomEE if you really need JEE support. However, TomEE only supports JEE 6. This article discusses JEE7 support.
Little question on the name -- do you know about Pebble the iPhone watch thing that got a lot of publicity last year? https://getpebble.com/ Not that anyone is likely to get a watch and a template engine confused, but there is probably a lot of overlap in webapp developers and tech-y gadget people
Yeah, fortunately businesses have little need in the 2014-2015 time frame for anything past a good implementation of the servlet spec. That's why JEE6 and JEE7 old style EJB application servers are a massive waste of IT investment, when there are things you can buy which will actually advance your business.
And if you really want to "compile Java on Windows 8.1", here are the instructions for that, as well: http://hg.openjdk.java.net/jdk8/jdk8/raw-file/b1e9396fb8af/README-builds.html#windows
We do this too (Nexus), even for a small software team (~6 people, most part-time) it makes sense.
You do realize that Java EE is much more than EJB right? I believe all of the servers mentioned on this thread are free so I am not sure what you think you wold have to buy. Java EE is a very popular platform with a lot of success. 
Username: bugless Password: bugmenot
Templates being compiled to bytecode sounds like a cool feature. Not many templating engines can boast that. Can we get some examples of the inheritance feature in action? Have you ever looked at Scala's [string interpolation](http://docs.scala-lang.org/overviews/core/string-interpolation.html) feature, in the context of using it like a templating engine? How do you feel Pebble compares? (For what it's worth, I've had some success in doing this, and I quite like it.) By the way, your site has a minor formatting glitch. If text is scaled up (like on my display), the code in the example bubble may overflow its bounds. Consider using a [Flexbox](http://caniuse.com/flexbox)- or table-based layout instead. (Or maybe just making it `float:right;width:auto` would work?)
Given that these are part of two different fields (specific hardware and a software library), I suspect it won't be an issue. 
Wonderful! One of the first things I'm going to do is add a "Contributors" page to the main website as a way to acknowledge all those who help out. 
Thanks. I hate that dzone expects you to give them your phone# address, etc for a damn refcard.
Unfortunately, the POM actually being clean is almost impossible unless you don't need to do anything even remotely out of the ordinary. And even then, at a minimum, you need to configure `project.build.sourceEncoding` in `project/build/properties`, which is ugly. Building a mixed Java/Scala project with Maven, for instance, involves some rather hideous configuration hacks (due to the inflexibility of the build phase system). Including Scaladocs in the `mvn site` is also hideous—I have to configure the `scala-maven-plugin` in two separate places. Yuck! It's still better than the alternatives (Gradle is uglier, Ant is uglier, Buildr is uglier, and SBT would make Cthulhu shit its pants), but that doesn't make it good. Another thing that would beat a nice clean `pom.xml` is a dependency manager that isn't wide open to cross-build injection attacks. As far as I can tell, every single Java dependency manager does absolutely no signature verification of downloaded artifacts, which means you could easily end up shipping malware to your users every time you pull down a dependency (unless you pay Sonatype a fuckton of money for Nexus Pro, and then configure Maven to pretend that your Nexus server has a mirror of every single repository ever, which is a gigantic kludge in itself). Sad. I yearn for a build system that isn't complete crap. So far, no such thing seems to exist. *headdesk*
Been using Wildfly 8 for a while, the startup time alone has been a huge improvement over JBoss AS 7 for me and it's welcome when I'm spinning up my vagrant box to get to work.
[This video might help](https://www.youtube.com/watch?v=kPRA0W1kECg), you can see and hear the selection sort as it works down a chain of values. The selection sort is the first in that video, but it's worth watching to see the other sorting algorithms and how they differ. You can tell the approximate efficiency in the video by how wide the bars are for each sort. The more bars there are the more work they had to add to keep the sort times roughly in-line. 
The second loop is just iterating through to find the smallest value of all the numbers. It is set to the value of the first array cell initially and is updated if the loop finds a smaller value.
What is the correct answer? 
What do *you* think it is, and why do *you* think it is the right answer?
Sure you can. The compiler is going to simple create a collection object and add the given references to it. It's just syntactic sugar. The compiler may do some analysis if what your adding however and automatically infer the best concrete type to use. For example, you can imagine that a literal set with enum values as the contents would use an EnumSet. Similarly, the number of entries could be a factor in the decision.
Are you a java beginner? Shouldn't be too surprising that you aren't familiar with common java APIs then eh? The java world is all about APIs and specifications. The applications here are what are called application servers. We use them to host applications; they themselves just provide functionality to the applications running on them.
Let's write it out just for easier understanding. int a = 4; int b = 3; a = b; Never is there a line that assigns value 'b' to anything other than three. Just because you said that a = b, that is not affecting the b value at all. 
This looks promising. I'm interested in seeing where this leads. Keep up the good work!
because sorting through runtime classpath issues buried deep in transitive dependencies, and manually maintaining binaries and their dependencies by hand is much more fun than writing code 
Is this a comment about how bad the book is? Or are you asking us for the answer? Have you read the material before the question was posed?
&gt; It is possible that one understands the topics, without knowing the fancy names the Java community likes to give them. For example, who'd have taught 20 years ago that a self-evident principle like "pass all values a function needs to know about as arguments" is nowadays called "dependency injection"? If I was interviewing you, this statement would lead me to believe that you have an incomplete understanding of dependency injection. 
Is TomEE anywhere near as good as JBoss/Wildfly? i've never thought to try it... 
Jetty doesn't have the tooling and featureset of JBoss/Wildfly and Glassfih... 
 That kind of question is just to gauge a relative familiarity with some basic software development ideas, but will never indicate skill level. It's gotten to the point where people just memorize patterns and regurgitate examples but don't even really use them in their day-to-day design. The same guy who studies how to mention "singleton, visitor, strategy, factory" in an interview will go gladly add more lines to a class with 10k lines on it ...
Looks promising! But in my opinion, templates should be DUMB. It just need to do what we say. Having lot of control/logical operators will tempt people to misuse it by writing logics in template which is a recipe for maintenance disaster in long term. I'd say don't add any more flexibility which might bring more logic to templates but make existing things rock solid. 
We're using Archiva 2.0-SNAPSHOT. It got awesome as of 1.4-M4.
This is honestly the most exciting addition to Java 8 for me. Functional interfaces, lambdas, etc. are all cool and remove verbosity, but dates/time are something that is the cause of many little bugs. I only hope that libraries and utilities make the "jump" to Java 8 like they did for Java 5. 
I totally, 100% agree with you. Thanks for the feedback. If anyone here is looking for completely logic-less templating engines, I highly recommend looking at [StringTemplate](http://www.stringtemplate.org/) or [Moustache.java](https://github.com/spullara/mustache.java). They are both incredibly impressive in their own way. Logic-less, however, is not for me. 
Thanks!
I'm definitely working on getting some good examples put on both the website and github. Also, I don't know much about Scala but that looks very cool! For very basic templating I think that might work well, but for larger applications you might want something that provides you ways of maximizing code reuse (such as Pebble's inheritance feature or macros). Also, thanks for the heads up about the formatting glitch, I'll take a look at that when I get a chance.
Absolutely you can. Pebble would be used as a complete replacement of JSP or Tiles. Pebble is itself a standalone "view" technology. When I get a chance I'm going to create the following bare-bones projects in github to display as examples: - Servlets + Pebble - Spring + Pebble - Struts + Pebble Hopefully at least one of those will help you out and if you want an example of Pebble being used alongside another type of technology or framework, let me know.
I am still very new to this. Actually giving me the answer and explaining to me how to test it really helped.
Every time I start digging into a new project and see it uses Maven or Gradle I cringe, because invariably there's going to be a bunch of work to get the thing to compile. Maybe I'm too old school, but to me the idea that my build depends on hitting some remote sites and the contents of some hidden, global caches (.m2) seems just completely wrong. For our own projects I mandate that it must be possible to grab a full project from the version control, build it with one command, and the build must always come out identical (which means using make or ant in most cases). I.e., all dependencies must be checked into the version control, which also ensures that development, testing and building gets done against specific versions of the dependencies and moving to a new version of a dependency is done rigorously (someone reads the changes, analyses impact on the codebase, tests everything, and then commits the new dependency). We are also much more conservative than most with introducing new external dependencies in the first place. There are significant hidden long term costs to external dependencies that most don't consider when it's so easy to just add a few lines into your build tool and then start depending on some external library. This, of course, is largely driven by our use-case, which is infrastructure components that must be rock solid and run for years with very few update opportunities.
Looks Nice!
Cool. I'm using Spring so I'd definitely be interested in seeing the Spring + Pebble one. I'll also download it myself and give it a go but it'll be interesting to see how the guy who made it thinks it should be used :P
I like JSF framework too, but it's inherent complexity makes it unfit for newcomers. See http://www.thoughtworks.com/radar/#/languages-and-frameworks/683
You could create a Java proxy server. Like this: http://www.jtmelton.com/2007/11/27/a-simple-multi-threaded-java-http-proxy-server/
I didn't do a very in depth look at the code, im not really sure how it all works, but here are some of my findings. Inputs with small differences result in very similar hashes. Inputs of the same amount of bytes result in very similar hashes. For example the string "aaaa aaaa aaaa aaaa" collides with "zzzz zzzz zzzz zzzz". I noticed the data loading method only tallies value of the bytes for each block, effectively reducing the entropy per block from 1024 bytes to 32 bits. However even when the tally was vastly different I still ended up with a similar hash, so there is clearly much more wrong with the algorithm than that. 
Could you elaborate on your reason to do so?
Looks pretty cool
There is no such thing as out of date skills. Rather to the contrary. Even if many Java guys are believing that Java has somehow re-invented or revolutionized everything, it's simply not true. 
Who is ThoughtWorks? Why is one companies move away from ant important?
The point was not to make a hash that could compete with MD5 or other hashing algorithms. It was just to see if I could make it without spending a ton of time programming prime number derivatives. It would be cool and all if it would catch on and everyone use it. But I don't really care, I just want to make my own that worked.
Well I guess the only reply I have to that is "inteviewing is hard".
It's built in with String.format but you could also use Freemarker, Velocity, the Script API in Java which supports JavaScript, Ruby, Groovy, etc.
I disagree. 
Reads mostly like basic common sense.
That sounds like you havent worked on a very complicated project with custom steps for xsd achema generation or setting up and tearing down for integrarion tests or running ant acripts. Theres more to it than just the directory structure
These are pretty good. I definitely laughed at this comment: &gt; It is **extremely rare** to override Object.finalize. &gt; &gt; **Tip:** Don't do it. If you absolutely must, first read and understand [Effective Java](http://books.google.com/books?isbn=8131726592) Item 7, "Avoid Finalizers," very carefully, and then don't do it.
I think what you see as a collision of the string "aaaa aaaa aaaa aaaa" and "zzzz zzzz zzzz zzzz" is just how the compare method is looking at the hashes. It is comparing the character value of each index and if they are equal increments a counter. Because the hash is always 128 characters long, I divide the counter by 128 then multiply by 100 to get the percent. float per = (counter / 128) * 100; The 6.25% equality that you see from these strings is just the fact that there can only be 16 different character per index therefore you are bound to have an average of 7% equality on non-matching hashes (most I have seen is 8.1639%). I think I will add in the compare() method, a compare of the hash as a hole number, that should get ride of those small percentages. With the blocks in the loading method, these are just a way to speed up loading in large files. Really a block is just the compressed bytes of a file. If you have a block size of 1024, then every index in the ArrayList will have 1Mb in it instead of 1 byte. Nothing is lost, because only simple addition is being used to compress the data. When it enters the hash() method more compression (randomly taking two indexes and adding their values together) is done and all the data is scrambled around for file.size()/2 times.
Do you mean something like Window's Task Manager does in the "performance" tab? Or will the graph just expand to the right on the time axis?
I meant [graph]( http://en.wikipedia.org/wiki/Graph_(mathematics\)) as in the computer science sense. Apologies for not being clearer, perhaps "graphing" was a bad choice of words.
I use Neo4J when I need graphs.
Damn it, came here to post that exact same snippet.
You can have my upvote as a consolation prize.
You are a good person. I accept gladly.
It would be nice to have intellij-eclipse-netbeans formatting templates implementing this.
codingbat.com is quite a fun site for different problems
Take a look at the /r/javahelp wiki - there are some resources.
AFAIK, they already implement the [Oracle Code Conventions for the Java Programming Language](http://www.oracle.com/technetwork/java/codeconv-138413.html) which aren't bad either.
I agree. These are well-written and exact while the Oracle Code Conventions allow for more variation. I prefer to work in a group where the format is very standardized, even if it's different from what I would choose. 
There are for [Eclipse](http://google-styleguide.googlecode.com/svn/trunk/eclipse-java-google-style.xml) and [IntelliJ](http://google-styleguide.googlecode.com/svn/trunk/intellij-java-google-style.xml). Not sure why these aren't linked from the style guide itself.
&gt; That sounds like you havent worked on a very complicated project with custom steps for xsd achema generation or setting up and tearing down for integrarion tests or running ant acripts. Theres more to it than just the directory structure All those things happen in modules that the final module is dependent on. Also, there are plugins for all the things you talked about: * xsd schema generation - http://mojo.codehaus.org/jaxb2-maven-plugin/usage_schemagen.html * integration tests - http://docs.codehaus.org/display/MAVENUSER/Maven+and+Integration+Testing * including running ant scripts - http://maven.apache.org/plugins/maven-antrun-plugin/ Sounds like you need to better modularize your build process and learn the capabilities of tools that you're using (or being forced to use by the sound of it, hence the resistence)
ThoughtWorks just set "HOLD" on Ant http://www.thoughtworks.com/radar/#/tools/719 &gt;We continue to see teams expend significant effort on un-maintainable Ant and Nant build scripts. These are hard to understand and extend due to the inherent lack of expressiveness and clean modularity provided by the tools. Alternatives like Gradle, Buildr, and PSake have clearly demonstrated superior maintainability and productivity.
There's quite a few challenges at /r/dailyprogrammer.
I follow practically all of these guidelines except for this one. I just really hate superfluous braces. They're easy enough to add if you ever need more than 1 statement in a block, so why add them if you don't need them? They certainly don't make it any easier to read, and it essentially adds 1 line per block, so for me it actually decreases readability. 
Thanks! ...did you make a new account just to say that?
I recommend getting this [book](http://www.bluej.org/objects-first/) We use it in our CS1 class and it has taken beginner CS students to proficient. The author does an excellent job of showing Object Oriented Concepts. It has made me more comfortable and I can easily learn another language. Currently I am learning Objective C. 
They're a well-known, respected, and influential software firm. Some of the great minds of our field are there, like Martin Fowler and Neal Ford. They occasionally release their [Technology Radar](http://www.thoughtworks.com/radar/#/), which looks at tools, languages, platforms, and techniques and breaks them into four categories - Adopt, Trial, Assess, and Hold. Several years ago, I attended a talk by Neal Ford at a Boston-area conference where he discussed the methodology behind producing the Radar. It was an interesting talk. Here are some details: http://nealford.com/memeagora/2013/05/28/build_your_own_technology_radar.html
&gt;if(done) return 1; Can someone please explain to me what is wrong with this? Not questioning that it's bad style, genuinely curious as to what makes it bad style. Edit: thanks for the responses.
How about an exampe of an "outdated skill"?
Yes, the engine should handle escaping, not the user. Ideally, there shouldn't even be an escape hatch, which means the escaping mechanism is quite a bit of work. Just adding `&amp;#`*nnn*`;` here and there is not sufficient. Type safety is a huge effort as well, especially with templates-as-subprograms, but I expect there is a huge pay-off with things like internationalization (where you make sure that the customized templates actually fit the code, without testing all web pages in all languages at run time).
Where to declare local variables and line wrapping at 80 are both wrong in the conventions imo. First one is actually a major face palm.
Reading / writing COBOL Reading / writing FORTRAN Using tricks of COBOL to jam extra data in a PicX column Managing a mainframe Writing 2d graphics engines in assembly Playing midi music in assembly Using CVS source control Admin NT 1.0 server Installing SCSI drives Changing mainframe vacuum tubes Running token ring networks Could go on for days. 
The goal here is consistency. I used to think that 80 was silly, but being able to hop through source code written by a dozen different teams over 5 years and not needing to resize my window is a really nice thing. Consistent column width helps with the pace of reading code. 
Yes, when I implement auto-escaping I will make sure that it is on by default and it escapes all variable output. I'll make the user work to get around that in the rare cases that they want to. I'll put more thought into the importance of type safety especially in regards to testability. I don't think mandating static typing is the way to go but here are some things I'll focus on going forward: - Improved internationalization support. I already have a [message function](http://mitchellbosecke.com/pebble/documentation/function/message) but I'm sure there's more I can do. If possible I want users to only require ONE template for ALL languages as opposed to one for each. - Testability tools, i.e. some way to easily (and automatically) verify type correctness of template. I have no idea how I'll do this yet. - The OPTION (not mandate) for users to use static typing within their templates. I have been contemplating this for awhile because yes this will catch type issues during compilation. A lot of thought has to be put into this one. Your feedback is great by the way, much appreciated.
Consistent might be nice but 80 or even 100 is too short. I could probably live with 120 though. Wide screen high definition monitors can easily handle more. It is much more readable then the excessive wrapping.
I am on the fence about the local variables. It states to declare them close to where they are used rather than at the top of the method. The reason is to reduce their scope which is valid but I think the code appears cleaner and easier to read when they are declared at the top together.
I follow this expect for indentation, I would use tabs for indentation resulting from blocks and spaces for the rest. This allows people to decide their tab width without breaking the indentation.
As codingbat has been mentioned, I'll go for [Project Euler](https://projecteuler.net/). It's a collection of Maths problems that you're meant to solve using programming, it improves your maths and coding at the same time!
I'm not at a computer at the moment, I don't understand your first point. you describe your compare logic which seems sound. when I looked at the two grades they looked the same. are you saying there is a bug in the compare logic and the hashes were actually different? you are correct to say that on average your hashes should be 6.25% similar. but that means three should be some both above and below 6.25. I never saw a result below 7. designing a toy hash algorithm can be fun, but don't kid yourself, yours is deeply flawed. if you are interested in crypto stuff like this, you should go the matasano crypto challenges, I'm sure you will learn a lot from it.
This is not even about readability. It is about not accidentally introducing stupid bugs into code. 
Are you trying to start a war there? :D
I recommend www.javapassion.com. It's a nice site, with a lot of good courses and worth the paid subscription. 
I know I'm not on the "popular opinion" side of this, but I can't recall a single bug that's ever stemmed from this type of usage (and I work mostly with Java).
With respect to gradle, have you looked at the files dependency type? You can bypass both the caches and the ivy/maven resolution and use known jars.
Ok so 120 is fine with you. Would you say that it makes sense to stay consistent across the whole codebase? Look, it's already well known from hundreds of years of print design that consistent columns make it easier to scan and read through text. Whether it's 120 or 80 isn't important. Coders spend more time reading than writing code and it sounds like you are optimizing for ease of writing (I could be wrong). Yeah we have bigger monitors now but we are also spending more time working across different files at once. A standard col width let's you fit several files across a screen, and maybe a window for docs or emulator for testing.
You are wrong. http://www.oracle.com/technetwork/java/javase/documentation/codeconventions-141270.html#16817 And doing it by convention makes no sense at all to me. It's not easy to read simply because it's not narrowly scoped and that for larger methods you may need to go back and check how it was declared.
Consistent column width 1+. 80 is simply to little. I use 120 personally unless the project I work on state something else
Not sure what you think I am wrong about. Easy to read is not about right or wrong. It is more of a preference. Frankly you are kind of rude and I am not really sure what you are trying to say because your writing is not clear. 
&gt; I can't recall a single bug that's ever stemmed from this type of usage Huh, case closed. You'd better call Google. 
What is it with people so against using tabs for indentation? 
&gt; I can't recall a single bug that's ever stemmed from this type of usage (and I work mostly with Java). This happens on codebases where the developers may not be particularly familiar with Java, or when someone, in maintenance three years later, does a "quick fix" without reading, and then everyone wonders why the application fails in certain circumstances. Without braces, its actually hard to **find** defects like this, as well. The purpose of some of these standards is to counter human factors out of your control or to be defensive against the future fingers that will be poking around code. It's not just about readability in the now. 
Tabs can have different widths depending on how your text editor is configured.
They're just wrong. Magical control characters appearing within lines, with varying interpretations. I've seen files where the 1st indent was 2 spaces, the 2nd a tab, the 3rd a tab plus 2 spaces, and so on. Then you edit the file with an editor that defines tab as 4 spaces. A space is a space is a space. Tabs are pretty much whatever the editor/ide of the day decides, which is usually wrong.
The style guide says either 80 or 100. Keep in mind that Google's Java style guide is intended for use by thousands of developers. So consistency goes beyond just being "nice" at that scale. It's essential. 
Given that [Google Guava](https://code.google.com/p/guava-libraries/wiki/CommonObjectUtilitiesExplained) already implements a very simple hashing method and Java 7 has also introduced a method very similar to Guava why would you use yours instead?
Readability is a matter of preference in smaller teams (&lt;50) of developers. Once the number of developers increases to hundreds or thousands readability and consistency becomes essential to being able to quickly understand how different pieces of code work together. Fortunately IDEs and other tools exist to help enforce some of this, so it's easier to write readable code. 
The style guide says either 80 or 100. I wouldn't mind 120.
Every argument against tabs (including all the ones below) devolves to "it gets fucked up when you use both tabs and spaces together in the same file". No shit - don't do that. As long as you always tabs for indentation and spaces for alignment your life is strictly better than spaces alone. To the person who said tabs can different widths - that's the point! Tab is a special character that means "indent". How you want to visually display that on the screen is a completely orthogonal concern.
You have to consider refactors performed by tools like Eclipse, and the diffs those generate as well as the stupid bugs reason. If you have a huge codebase (like Google), it becomes occasionally necessary to run a refactor that touches thousands of files, and if you don't make formatting very consistent it takes code reviewers a lot less mental effort to review dozens or hundreds of files that got touched. Ideally, you want to make it absolutely formulaic. If you can do that, then you don't even need human reviewers to look at it because you can guarantee the safety of the change.
Maybe we have a different notion of "skill". You merely list specific activities that seem to be useless nowadays. But even then - if one was ever able to write 2d graphics engines in assembly, I think that person has the following skills: * is able to work with bytes, shorts and ints, signed or unsigned. Especially, do unsigned integer arithmetic in languages that are said to "not have" unsigned integers. (Go over to Stackoverflow and look at the people that are confused by bit shifts, "sign bits" and so on. I bet their managers wished they had any idea how their machines actually work.) * is familiar with certain numerical methods that will also apply to 3d graphics engines with dolby surround sound written in any language. * knows how floating point arithmetic works, and when not to use it. * has iron discipline rgd. program organization, modularization, and so on. (otherwise, you'd never complete a complex assembly project - precisely because you're on your own, the language doesn't help you, nor a fancy IDE). Sees at once what belongs where. * will be good at debugging. Usually, will have a strong idea where or what the bug is from the outset. The debugger merely a tool to prove that hypothesis. Will appear like a magician to others. * will not need to read about "Design Patterns", for the reason cited above: he discovered those (or more general) patterns *himself*; at a time where noobs who think that it takes a genius to discover "decoupling" still pissed their pants. * .... and so on .... could go on for days. 
Just want to plug the idea of a SCID here - http://mindprod.com/project/scid.html Source control in database. It means that programs are stored in a revision control system not as flat text files, but as structured data. Specifically, the AST generated during compilation. Read the link for the many, many awesome reasons you would want to do this. (And don't get distracted by the another part of Roedy Green's site, How to write unmaintainable code, which is hilarious and awesome.)
Awesome, thanks for the info. I think I'll go with 1. but 2. is a really cool option too. Much appreciated. Edit: forgot to mention that detail-wise I can't think of anything specifically; I'm pretty unbiased in the approach and just want to do basically what you said in 1. 
It's usually not made when you're writing the code, but later when you're maintaining it. Including the braces is simply good defensive programming. 
Awesome, thanks for the info.
That's rediculous. It isn't defensive either. If you're doing that lousy of a job maintaining your code, your going to make more serious mistakes. We also live in the 21st century, aren't working with cathode ray monitors and should be putting our braces on a new line.
All code should be 80 columns (in any language). If you need to wrap the lines too much that means you have high [cyclomatic complexity](http://en.wikipedia.org/wiki/Cyclomatic_complexity). It means it's time to refactor your code. Also the point of larger screen is to be able to see more files side by side, not to start writing 500 columns wide code (I have seen plenty of people do just that, because that's how wide their screen is). 
Yes but we still have greenhorn coworkers straight from college to contend with. Rules like these protect the code.
You have evidently never worked on a large project with many developers of varying skills with a 15 year old code base. 
The only bit I disagree with with the 80/100 column limit. We don't work with dot matrix printers anymore, most lines of java code are very short. You may get the occasional long line but I'd rather leave it as a long single line as a quick visual cue to know it's one instruction. 
My first problem is with your title "I created a Java programming course for the beginner, that is free!" Upon visiting the page: "PRICE:$64". I was going to complain about signing up to something that is free because it is just a barrier but now I know why it is there.
&gt; You can tell at a glance the indent level no matter where you are reading the code (your editor or theirs, on a printout, etc) because the spacing is constant. Don't see how this changes with spaces. &gt;People do things like: tab then hit a couple spaces to line things up, then the next person replaces the tab with spaces. Or puts spaces in before the tab. This results in annoying whitespace merges but also just layout problems. That's a problem with _mixing_ tabs and spaces, not a problem with tabs. &gt;Spaces are easier to deal with since you know exactly how many characters there are. Tabs are environment-specific to someone's configurations of what a tab should mean. That is an advantage of tabs, because you can make the code look however you want. &gt;In general, spaces are easier to deal with, even if they are extra keystrokes, so they probably devolve to the KISS principle. They shouldn't be more keystrokes in a competent editor.
Chip meet shoulder
An arguable slight increase in readability is less a concern IMHO than consistency and less chance of screwing something up later. if (x &lt; y) { doSomething(); } Isn't a challenge for any seasoned Java developer to understand. Of course, on your codebase, do what you want :-)
how do i set the path in the terminal?
as soon as i figure out how to run it in the terminal i will post it.
A space is the same glyph size relative to the font. Therefore if their standard is "indent n spaces" then it will look the same on my screen, on yours, on a printout, pasted into a Word document, whatever. It is consistency, as I said. With tabs the indents look different depending on whose environment you are using. Spaces are also more consistent in code review tools and diffing. &gt;That's a problem with mixing tabs and spaces, not a problem with tabs. Yeah, but you always have spaces in code, you never need tabs. Therefore removing tabs and insisting on spaces only makes the most sense in a codebase where multiple people are modifying and working with the code. If tabs are banned, then there is no mixing. If tabs are allowed, there will **always** be mixing. &gt;That is an advantage of tabs, because you can make the code look however you want. On your environment, but it breaks down and makes for ugliness when the code is placed in someone else's environment. If you have e.g. a 120 char line limit, a big tab setting can break that on one display but not on another's. And again, if code is being placed into documents or has to be reviewed, you need absolute consistency, and space-only provides that. &gt;They shouldn't be more keystrokes in a competent editor. True.
1990, meet 2014
You wouldn't need to protect them from messy/obscure/unnatural/asymmetrical/old brace placement initially instated due to monitor constraints in the stone age if you place them where it makes most sense Now that we can afford it thanks to the luxuries introduced a decade ago.
&gt;With tabs the indents look different depending on whose environment you are using. But wouldn't that be the point? If I prefer 2-space width tabs and you prefer 4, we can set our own environments to be whatever we want and we'll always see what we want to see. &gt;Spaces are also more consistent in code review tools Seems like the code review tool should allow you to change how wide your tabs look. Or your browser should. Someone should. &gt; and diffing. Again, only a problem if you mix tabs and spaces. &gt;Yeah, but you always have spaces in code, you never need tabs. Therefore removing tabs and insisting on spaces only makes the most sense in a codebase where multiple people are modifying and working with the code. If tabs are banned, then there is no mixing. If tabs are allowed, there will always be mixing. Ban spaces for indents. Problem solved. Either use spaces for all indents, or use tabs for all indents. There's no sane middle ground. You can't say "oh if you use tabs some people will put spaces so tabs are bad." That's nonsense. You could just as easily say "oh if you use spaces some people will put tabs so spaces are bad", but you don't because for some reason using spaces for indents magically forbids tab usage, while using tabs for indents doesn't. Why doesn't it? It should. So really the only issue is if you have strict line-length limits or you intend to view the code in a manner where the tab size cannot be adjusted (e.g. on paper, in a PDF, etc.). 
Your application is effectively another user of the spreadsheet, so you have to find out whether Excel supports [multiple concurrent users](http://office.microsoft.com/en-za/excel-help/use-a-shared-workbook-to-collaborate-HP010096833.aspx). Have you considered persisting the data in MS Access then letting users connect to the data using Excel? Will be more robust than sharing workbooks.
Thank you so much. This fixed it.
The difference is indentation versus alignment. You use tabs for indentation (eg the extra 2-4 "spaces" you add to the body of an if statement) and spaces for alignment (making parameters to a function split over 2 lines line up). Simple example, if (condition1 &amp;&amp; condition2 &amp;&amp; condition3) //all spaces on this line, assuming the if isn't indented at all { foo(parameter1, parameter2 //1 tab (assuming no indentation for the if) to indent, and then parameter3); //spaces to make the parameters line up } If this snippet is function definition and a for loop deep, you just stick 2 tabs in front of it all, and the code is still lined up. This way, if you prefer the code in the if block to only be 2 "spaces" over, you can set tabs to be 2 visual space characters in your editor, and not break the alignment of the parameters to foo(). I prefer 4 (at least for Java), in which case I set my tab to be 4 visual spaces, and we're both happy.
&gt; Tabs are pretty much whatever the editor/ide of the day decides That's the best part, if I like tabs to look like four spaces, I can view them like that, if my coworker likes them to look like two spaces, that's cool, now we're both happy.
I know you're being funny, but I spend 6+ hours per day with Java and have never misinterpreted excluded braces like that. I guess that's not normal.
I'm still fond of Nick Parlante's original name: [javabat.com](http://javabat.com)
Thanks 1. I'll note that 2. That was leftover from when I had it object oriented but realized it was better to just do it static for this.
Or you like to use very verbose method names
If you're using OS X, the path shouldn't need to be modified. Are you getting a command not found error when trying to use java -jar? 
Coupon code first250 is sold out. It would have to be pretty darn good to pay for considering that there are 100's of java 'courses' available for free. 
Protip: touting your experience programming is not a good way to earn the respect of your fellow programmers.
It's nice so that you can set an editor width and never need to worry about horizontal scrolling. Whether 80 or 100 or some other number is the right number is debatable - but having *some* limit is important, IMV.
&gt; Nothing beats a nice clean pom.xml And there's the problem. They are never nice or clean.
I believe you, but usually developers work in a team and the code has to be readable and maintainable for others as well. Even if a bug would happen once in a couple of years it's worth it to prevent it. Also, it might take a person slightly more time to read braceless code, especially when making modifications. Even though these are small troubles, they are just so easy to avoid altogether that I don't see why not just add the braces every time. Or let the IDE add them.
Java's syntax hasn't changed that much since the 1990's so why would the best practices change just because a few years have passed? Besides, most modern languages have a similar best practice when it comes to braces. Doesn't matter, code how you want on your projects. If you coded for mine you'd be auto-formatted to the standard anyway. 
I'm not touting anything at all. 7 years isn't something to tout about.
Oh yeah, you mean like c#? It takes standards decades to change, it takes technology seconds (ie LCD displays.)
As a vim user, I like the 80/100 column limit. I can vertically split and fit two windows side by side without weird wrapping. It can at times be annoying where its the semicolon that hits 101.
If only you and one other person work on it, say you have 50 developers working on the same code? The bugs will be crawling in
You've lost me. I think you're just saying random things. 
K &amp; R master race!
&gt; Within a group there are no blank lines, and the imported names appear in ASCII sort order. (Note: this is not the same as the import statements being in ASCII sort order; the presence of semicolons warps the result.) I hope they have a tool to automate most of these formatting rules.
Or, perhaps even harder to spot, if(done) log.debug("All done"); return 1;
[I use both.](http://www.reddit.com/r/java/comments/1wglcp/google_java_coding_standards/cf2kr04)
You gotta love the "it's just wrong" rationale.
&gt; Either use spaces for all indents, or use tabs for all indents. There's no sane middle ground. http://www.reddit.com/r/java/comments/1wglcp/google_java_coding_standards/cf2kr04
That's a feature, not a bug.
The main difference between paying and not paying is the amount of effort I've put in to make it professional, easy to follow, and covering all the content needed. Whereas in a free, YouTube 'course', you might find interesting things, it wouldn't be the professional grade that I've aimed for this course to be.
I'm not sure what you mean. This was a free course until the coupon ran out (too many people used it). Of course, the course isn't free. I was giving it away for free for a while!
&gt; If I prefer 2-space width tabs and you prefer 4, we can set our own environments to be whatever we want and we'll always see what we want to see. On a big team, you don't do that. Everybody uses the same standardized settings, that way everybody can work on every part of the codebase without messing the commits.
It's still false advertising. Your course isn't free. Period.
http://google-styleguide.googlecode.com/svn/trunk/javaguide.html#s5.1-identifier-names So they say the Hungarian notation of prefixes before variable names is bad. I agree. However - why is all the Android code in the Hungarian notation then? E.g. https://gitorious.org/rowboat/frameworks-base/source/aa93bcd62482719c146a411008e1eac94135b6a4:core/java/android/app/Activity.java 
You both get upvotes from me because I was just about to override Object.finalize.
I still *want* to code without braces when the body is short, but it has hurt me in the past..
Ah, I see. No. (Commence RWAR.)
http://google-styleguide.googlecode.com/svn/trunk/javaguide.html#s4.1.2-blocks-k-r-style &gt; No line break before the opening brace. I make an exception when it's a method declaration, and I have to line break before the first parameter to stay inside the line length rule. Then I move the first brace on the first line of the method, on method level. public VeryVeryLongType&lt;YeahLongLongType&gt; veryVeryLongMethodName( VeryVeryLongType&lt;YeahLongLongType&gt; a, VeryVeryLongType&lt;YeahLongLongType&gt; b) throws VeryVeryLongExceptionName { // content } Whatever results in better scannability.
Of course it is possible, but it may be complex. First, what kind of application are you talking about? A runnable jar? A standalone java application with a prepackaged VM? An android .apk? A J2ME Midlet? An eclipse app? Java runs in so many environments now that your question cannot be answered easily without further information. In any event, assuming you already know what to change and how to change it, this is only the first step to change the application. See, Java is a compiled language, so you need to build the application. Ideally, the source code you have contains some kind of build script (look for build.xml which can be used with [Ant](http://ant.apache.org), pom.xml for [Maven](http://maven.apache.org), a .gradle script (see [Gradle](http://gradle.org)) or even a Makefile that you can execute - assuming you have the requisite build system. This build process will hopefully result in your application .jar, .exe, .war, .apk or other package. Depending on the type of applications, there may be other steps required (e.g. signing an application) before your package is fully usable. This is all ignoring the question wether it's legal to create a custom build of the application, which depends on the license under which you got the application including the source code. If you only want to extend the application for yourself, this probably won't be a problem, though I am not a lawyer and in case of uncertainty would advise anyone to consult with one before proceeding. ;-)
Thank you for this IN-depth answer. Looks like I underestimated Java a little bit. I will try to make this drop logger from scratch with Visual Basic then, would be alot simplier. Thanks again
You can't sensibly specify line length limits with code that uses tabs, since line length will depend on your environment. It works both ways: for some, lines will appear to long, for others line will appear too short.
 But *what* inherrent complexity? It's easy to say something is complex. Just watch me: "AngularJS is complex!!!" See, I just did it. It's easy and cheap. But telling exactly what is complex, that's the difficulty. Undoubtedly thoughtworks had heard JSF 2.0 exists, but they seem to be base their opinion still on 1.2. And it's also weird they mention 2.0 exists when 2.2 is the current version. &gt; "We think JSF is flawed because it tries to abstract away HTML, CSS and HTTP" This is largely nonsense. For starters, JSF doesn't do this. It's a blatant lie. JSF templates embrace HTML; you can either put HTML around components, or have HTML tags connected to components (pass-through components and pass-through elements). The abstracting away CSS is so silly... everything in JSF is based on using CSS to style and set things. What does it even mean to abstract CSS??? Provide an alternative language on top of CSS? This is absolutely not what is happening! Secondly, all web frameworks do some level of abstraction. If you don't want this abstraction, don't use a framework. CGI gateways are still available to you. 
&gt; These binaries are provided for use by implementers of the Java SE 8 Platform Specification and are for reference purposes only.
Then you couldn't have understood the argument I was making from the start of this discussion at all...
Then you deserve the clubbing. :)
I like this idea, but replace Access with MySQL.
Sweet
| (except for Mac of course) :(
Thanks, O~~bama~~racle
The reference implementations come in only a small selection of configurations. Note that there's no Solaris either and only one arch per OS. As the page states, this release is primarily for JCP standards review. The [early access release](https://jdk8.java.net/download.html) provide all supported platforms.
It is still supported. Nobody here knows this since we only look at free stuff and automatically filter things away that cost money. But there's still paid support available. The risks are mainly (only?) when used client side, such as with applets or java web start.
But if DB are encouraging me to install 1.6 to use their system because 'it doesn't work with 1.7' that's unacceptable, no?
http://imgur.com/sgLBh Imagine I photoshopped a coffee cup over his head...
**Sigh** another one of **those posts** Head over to /r/javahelp and check the wiki. There is a tutorials page with plenty of resources. Or search /r/java &amp; /r/javahelp for the countless posts that ask something similar.
If they ask you to install Java 1.6 on your own system in order to access their online server via some kind of applet, then yes, then it's pretty bad. If you've heard they are still using Java 1.6 server side and you can access their systems with any web browser without even having Java locally installed at all, then it's not bad. 
LOL, because it was so sophisticated? No you've made the claim that you "modernized" your Java coding guidelines for your team. You justify it with two reasons: they were written a few years back and you've never made that mistake. Discarding an idea solely because it is old is juvenile. The possible logic bug braces protect against in Java hasn't been removed by the simple passage of time. New compilers or ides won't catch it. Discarding a rule because you never make the mistake is asinine. You work with other people, use other people's code, and possibly have other people work on your code. You actually may have made that mistake in the past but, like the 1000s of micro-mistakes a coder makes in a year, you simply fixed it and forgot about it. When you say "modernized" what you mean is that you felt the need to be an individual snowflake and go with a non-standard standard. You've made it about your ego, not logic. The only argument you have is that it removes a tiny bit of line noise, which really again all about you, not professional development. I'm sure you still feel you're right. People tend to dig in their heels on feelings. So yeah, show me a professional company's code guidelines for any language that uses braces to define blocks and suggests that one-liners shouldn't also use them. Not going to hold my breath....
+1 for not putting comments at the end of the line they're describing. 
It's just right.
My guidelines are not unique at all. You seem to be all over the map which is why I assume you are clearly missing my argument, so I'll be clear. C# is a much younger language introduce by Microsoft that explicitly targets both entry, intermediate and _java_ developers (it was based heavily on Java.) Microsoft does not bind or encourage any brace placement guidelines on their code (because the standard was made in an era where vertical line space is no longer an issue [unless your functions are very large, in which case you may want to refactor]) The community tended to what is simply the only reasonable and rational choice, which was brace placement on a new line: http://sideeffect.kr/popularconvention#c# Why is this obvious? Well, first of all you avoid the issue of accidentally adding a statement beneath a single statement if (since the code block is more clearly defined and much harder to miss.) Thus it becomes acceptable to omit the braces for a single line if. Automatically assume it is human nature to tend towards symmetrical brace placement as well . C# is also an attractive option to most microsoft based developers (usually C/C++/.Net) (none of these languages "force" convention in the same way java does) who pickup this convention from their languages (see any c++ code repo) I have yet to actually see an argument from you. I have no reason to protect my ego (why else would I spout a widely controversial statement about code guidelines?) On an anonymous internet account. You're taking this way too personally. I understand why people still use the old.conventions proposed by java (its an perpetuating cycle really, because mixing conventions is usually a terrible idea.) But appreciate that some of the less stubborn few have looked at the arguments for either style and have decided to modernize our code base.
That's what it's all about. I have a side project I'm working on that has already been done several times before (several other projects out there that do the same thing), but I'm doing it to learn Spring/HTML5/jQuery/Gradle.
Yep. I have to install 1.6 on my machine to use their web app in my browser. Piss poor!
Very nice! I like the UI design. I noticed a few bugs while I was playing with it. I have to leave the office now, but I will file a few more issues on the GitHub page (I'm the one that filed the issue about the install button staying enabled during installation). Java Swing gets a bad rap sometimes because of its age, but it's nice to see people still working with it.
While it looks nice I do believe there's room for some improvement :) especially the part that handles the actual parse/convert to markdown. 
Thanks! I'm convinced too there's room for improvement, a lot. I had to program this it was a requirement for my app, but hadn't too much time to make it polished as I was focusing on the app itself. When I have time, I'll go back to the library and clean it up a little (where I said a little, I meant a lot).
This is spam.
&gt; Ban spaces for indents. Problem solved. Amusingly, go solved this with gofmt by making it THE style of the language to have leading tabs, and the formatter will fix it when you get it wrong.
I'm on my way home from vacation (and thus do not have access to a computer) but I will have a look at it tomorrow :)
ME is kind of pointless when phones are more powerful than servers used to be.
I also see some magic numbers in generatePassword
&gt; On your environment, but it breaks down and makes for ugliness when the code is placed in someone else's environment. If you have e.g. a 120 char line limit, a big tab setting can break that on one display but not on another's. And again, if code is being placed into documents or has to be reviewed, you need absolute consistency, and space-only provides that. Give it a rest, if you're using something other than vim, emacs, eclipse, intellij, Netbeans, or any other reasonable editor/line printer made in the last 3 DECADES then don't code. &gt;With tabs the indents look different depending on whose environment you are using. Set them how you like, not as easy with spaces. &gt;Yeah, but you always have spaces in code, you never need tabs. in a ot of places you don't need spaces either, but it helps readability, same goes with braces. And with tabs you are provided additional functionality to pre-determine how you want to look at code. 
I feel you've misunderstood. This notation is not "bad". It is simply not used in Google Style. It is used in Android Style.