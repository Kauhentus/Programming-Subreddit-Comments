It looks fine to me on a casual inspection. I would recommend you just step through with a debugger for a case you know doesn't work in order to see precisely what is happening. It could be a silly error, like the words being mixed case or something like that.
It's just ridiculous that it worked fine prechecking, and then bam, broken! 
trying to step through these programs in the debugger leads to a "source not found" :651 error; I don't have 651 lines of code, i have 642 lines. [most isn't used... its just there]
Any guesses if this is related to apache taking open office for oracle?
What did you study before reading "Sams Teach Yourself Java"? What is your goal in learning Java?
I only watched about 14 of these videos on YouTube.After that i wanted to learn more so i bought the book cause some ppl recomended it.My goal is...well idk.If you mean whatdo you wanna do,theb make apps/games and maybe soms web design.And maybe other stuff.Im not sure yet because im only 13 years old.So i thinkover the nexxt few years i think of what i wanna do.
The "editor does not contain a main type" message is just occuring because you are attempting to run your application when you have the wrong resource selected in eclipse. Just click on your project in the project explorer view to select it and then press run. As far as your subclassing question, Eclipse doesn't (or doesn't have to) "do it automatically". It's just a matter of extending one class from another. Here's the Java tutorial on subclasses and inheritance. [http://download.oracle.com/javase/tutorial/java/IandI/subclasses.html](http://download.oracle.com/javase/tutorial/java/IandI/subclasses.html)
if you're just learning java, eclipse might (for now) be a bad choice since it can overs implicate a lot of the architecture and will autofill for you. personally, I suggest bluej (just google it) for beginners. and to make a sub/super class you type "public class MoonRobot extends VolcanoRobot{//code}"
Can you show us how you define your VolcanoRobot class? How about your MoonRobot? To make MoonRobot a subclass of VolcanoRobot, you'd write something like this: public class MoonRobot extends VolcanoRobot { /* this is where you put MoonRobot code */ } The syntax is the easy part. Making a meaningful superclass / subclass relationship is trickier. I imagine that your book will have something to say about that, though.
I don't know if this will help, but I was actually doing something VERY similar and it killed me trying to make it work. eventually, I just went through the board and made it into one string. first I took the rows and concatenated them, then the columns. for spaces and non-letter spaces, I just put them as " ". then I used the line String[] words = biglongconcatenatedthing.split(" "); then you can just go through and throw out all the "words" that are just empty spaces and you should be left with just the real words.
I think the shortest way to do it would be to use a text file (if you've covered that). the code would look like this: import java.util.*; import java.io.*; public class Temp{ public static void main(String[] args){ double highest =-999; Scanner reader = new Scanner(new File("temps.txt")); while(reader.hasNext()){ double current = reader.nextDouble(); if (current &gt; highest){ highest = current; } } System.out.println("the highest number is " + highest"); } } I actually took this class last year, and now I'm a TA this year (as a senior). you might actually also need a try/catch on that code if you don't want to throw an exception on the main method. Hope this makes some sense
excuse my AWEFUL formatting... i typed that on my iPod so it came out pretty damn poorly :/
To enjoy Java, try learning Processing www.processing.org
 dante.speed = 2; Can you change variables in a class like that? I always assumed you had to create a method within the class, for example: dante.changeSpeed(2); where within the Dante class... public class VolcanoRobot { private int speed; changeSpeed(int x) { speed == x; } } If you set a variable to public can you change it directly through an object? Is it primarily through etiquette you create getter/setter methods for all your variables?
As soon as Oracle loses market share? Glassfish may be the only app server that really needs to worry about this. 
Have you used any other programming languages in the past, or is Java your first?
You can change variables like that, if the variable is defined public.
I would encourage you to use http://www.reddit.com/r/javahelp and also check out http://stackoverflow.com As far as your questions here: Use the "extends" keyword to create a subclass class Dog extends Animal {} Your Java code looks like it should compile for me. In Eclipse if you right click on the class in the outline view and click "Run As... Java Application" it should get you started.
I thought about doing something like that, but I've gotten it to work after talking to my TA and changing a variable and eliminating an if statement that was superfluous. Now I just have to make it count them.
From other people I know that were in the same situation than you, I would say that it hurts more than help. *But*, it's good that you brought this up. This means you are aware of that and willing to re-twist your mind. PHP has been a non-OOP language from the start. Object support has only been added later on (rudimentary support at first). With PHP5, OO support has been moving forward. But many things you are used to from the standard PHP library are based on the "old ways". Let's take an example: Reading text files: Java (stolen from [javapractices.com][1]): static public String getContents(File aFile) { StringBuilder contents = new StringBuilder(); try { BufferedReader input = new BufferedReader(new FileReader(aFile)); try { String line = null; //not declared within while loop while (( line = input.readLine()) != null){ contents.append(line); contents.append(System.getProperty("line.separator")); } } finally { input.close(); } } catch (IOException ex){ ex.printStackTrace(); } return contents.toString(); } Now PHP: $filename = "/usr/local/something.txt"; $handle = fopen($filename, "r"); $contents = ""; $contents .= fgets($handle); $contents .= "\n"; fclose($handle); I know that there may be simpler approaches, but I used these examples on *purpose* as they are functionally similar! Obviously Java is *way* more verbose. But this also has it's advantages. It's more expressive... meaning that the code contains what's actually happening. What's even more important, it leaves you freedom to customize the behaviour. Take for example the following line: BufferedReader input = new BufferedReader(new FileReader(aFile)); This looks like one object "wraps" the other one, and looks unnecessarily complex to someone from a less OO-centric language. The great thing here is, that you can - if you want to - create your own customized subclass of `FileReader` and stick it in there as a replacement. In PHP on the other hand you have no real control over *how* the file is read, and to customize it you will probably end up writing a function *somewhere* and use it. This is a typical train of thought of people with a background in imperative/procedural programming. The **risk** you take when moving onto a more strongly structured language like Java, is that you **can** write code in a similar fashion. This in turn will likely lead to so-called [God Objects][2]. Which is not good ;) Additionally, Java is *much* more restrictive than PHP. PHP uses dynamically &amp; weak typing wheras Java lies on the far other side of the spectrum with static &amp; strong typing. So it will complain about many things that you won't expect. For example: Java: int x = 10; // works x = "blah"; // compile-time error PHP: $x = 10; // works $x = "blah"; // works as well! This can be really annoying, but it has *huge* advantages for larger code-bases. But don't worry... Everytime I learned a new language I was frustrated at first. But over time you learn to love it's advantages and plainly ignore the ugly warts ;) One of the stranger things that you may run into is the following: String x = "Hello"; String y = "Hello"; if (x == y) { System.out.println("Strings are equal"); } else { System.out.println("Strings are different"); } The output of this program would actually show this: ~~"Strings are different"~~ "Strings are equal" **NOTE:** See the comments to see why it prints `"Strings are equal"` nonetheless! Still, the point I was making is valid: If you are testing for equality, use `y.equals(z)`! The reason is that the `==` operator compares *references* (think: pointers) to variables, and **not** the content! To do that, you need to use the `.equals` method. **Keep this in mind! It *will* bite you!** One last bit of advice I would like to give you: Get into the habit of "programming against interfaces" as early as possible. This means: Instead of writing this: ArrayList foo = new ArrayList(); write this: List foo = new ArrayList(); As a rule of thumb: Only use *concrete* classes when instantiating new objects. Use interfaces **anywhere else**! Look up the API docs for the concrete classes to figure out which interfaces they implement and pick the one best suited to your task. *phew*.... the only thing left to say is: Good luck, and have fun! ^_^ [1]: http://www.javapractices.com/topic/TopicAction.do?Id=42 [2]: http://en.wikipedia.org/wiki/God_object
It helps - logic is logic - but you'll have to get used to a few new conventions. All variables must be declared, and they are given an immutable type at the time of declaration. You will come to love this. You'll have to start Java from scratch, but your background in PHP, or any other language for that matter, will be helpful.
I have gone the other way around, I went from Java to PHP back at 2004, thing that got my attention is PHP and Java have similar syntax, besides the data types doesn't exists in functions and variables declaration under PHP, which are required by Java. So if you can read PHP you can read and modify Java easier than someone coming form a VB background.
And don't forget to import all the necessary libraries. Your IDE like Netbeans or Eclipse will help, but you must remember that in Java not everything is in the default namespace. That will also mean you often have to know which occurrence of Date or Query you want to import. That and static typing are the biggest differences, I think. The rest is syntax. Bookmark [this site](http://download.oracle.com/javase/6/docs/api/), it will help.
If you run the string/pointer comparison code it will output "Strings are equal". The compiler recognizes the same string and because strings are immutable, points the second one to the one it created before. But yeah, always use .equals when comparing strings/objects.
This is a netbeans problem, not a java problem you did the right thing posting to the netbeans forum. Open a bug.
http://madbean.com/anim/totallygridbag/
Sorry, I've found GridBag to be a total nightmare and don't use it anymore. I use the layout manager from http://www.jgoodies.com/ (site seems down right now), but I'm sure someone that does more desktop Java development will recommend one that's even better.
&gt; The output of this program would actually show this: &gt; &gt; "Strings are different" Actually it would show "Strings are equal" because the compiler would most likely optimize the string space and both objects would point to the same string in memory. A better example is: String x = "Hello"; String y = new String("Hello"); if (x == y) { System.out.println("Strings are equal"); } else { System.out.println("Strings are different"); } So you now have two unique objects with the same value. 
Great post, thanks for writing. Similar to the OP, I too am very familiar with PHP &amp; MySQL and getting up to speed with Java. One question I have had for a awhile is how to go about using my Java knowledge in cooperation with the websites that I run. I understand (and have created) Java applets that appear on webpages, etc, but is it possible to replace a lot of the back-end PHP /MySQL scripts with Java versions to speed these scripts up? How would I go about approaching &amp; integrating this with the front end pages?
http://www.miglayout.com/ I can't recommend this layout manager enough. 
Please use generics to type your lists, too. List&lt;Integer&gt; foo = new ArrayList&lt;Integer&gt;();
hmmm... interesting... I was just retorting what I was told in my Java course.... I always use `.equals`, so I never realised that they are considered "equal". Is this something that was added post Java 1.3? Which is when I started with Java...
thanks for spotting that... also see my related comment/question: http://www.reddit.com/r/java/comments/mfpr2/as_someone_with_a_php_background_what_should_i_be/c30kz2z
Unfortunately, I don't have that much experience with Java as Web-page back-end. For that I tend to use Python.
yes yes yes... please do!.... Forgot about that.... :)
That may be so. Considering the syntax *only*. What many people fail to add to the equation is the standard library and your development setup (IDE, build environment,...). Java and C# are *extremely* similar in syntax, but everything else is different (f.ex. the `GAC`, ...). So no matter what new language you learn,... the biggest chunk of time is spent learning the library. This is also often mis-judged by company superiors: "Hey you know X, and the syntax of Y is very similar. We'll send you to a 5-day course teaching you the ins and outs of that language." And right after those 5 days they consider you being as productive in Y as you were in X. Which is certainly what you will be..... **NOT**!
Doesn't help much. You need to be aware of the following in Java: * The JVM * Classpaths and Jars * There are other environments than just the world wide web. * Strong type system * Primitives * Interfaces 
There are many of us here who started programming on our own at your age, many years ago. It's good to see it still happens. If you keep at it, you can excel.
If you're using Java for running a sever (ie Tomcat), for the love of Christ, don't use inline HTML. It's just as annoying trying to deal with HTML/JS issues as PHP, except to actually push those fixes you'll need to redeploy the server. Use a ten plating engine like Velocity instead, since you can change the templates far, far more easily. 
Probably forget everything you know about PHP, skip Java and learn a modern language.
Well, if everyone is just going to suggest layouts to use instead of GridBag, I pretty much use GroupLayout for everything at this point. It's a free library for Java 5, and is built in in Java 6+. It is a little verbose, though, as you have to add every control to the layout twice, once to establish its horizontal position and once for its vertical.
Does it help if you set the gridx of the color chooser to 3 rather than GridBagConstraints.LINE_END?
Suggestions?
Knowing and having experience in any language is a good start, the first one is the hardest. All you have to learn beyond that is the language and library differences--not to trivialize it, but it's easier than the first language. I come from a similar background, VB3 -&gt; Perl -&gt; C -&gt; PHP -&gt; Java (self taught)... I think if VB didn't *permanently* mess me up, you'll do fine coming from a PHP background :). Beyond the language, the ecosystem is HUGE and it can be intimidating. Use an IDE like Netbeans or Eclipse (the latter is good for Android), because the debugging, auto completion and refactoring features make it really easy for a beginner. Decide if IDEs aren't for you after you've explored what they have to offer--I promise they're worth their memory usage in gold. Explore all that the open source community has to offer. If you want a language like Java/.NET, the reason to pick Java is the community. Good luck and have fun! 
My best advice would be to try and not use netbeans, eclipse is a hell of a lot better. 
I took over a project about a year ago that I reduced from 38 KLOC down to 18 KLOC, but I'm not sure if that counts.
There's a huge ecosystem for Java as a web service. The right place to start, I think, would be Spring.
Ha, no I tried that first and it didn't help. I used padding and other things and for the most part got it to look decent. Thanks though :)
I've seen my students do some ridiculous stuff but I couldn't post that on here.
Theres no karma for self posts. I second the recommendation of using Eclipse, reason? Netbeans is shit.
See The Daily WTF ;) example: http://thedailywtf.com/Articles/Bad-News-Enum.aspx
@WebService annotation
If you want to get all the benefits and good parts of the Java ecosystem, like the huge amount of libraries, stable tooling, great VM, try Scala. It runs on the same VM as Java, is as fast as Java, fixes many problems of Java-the-language, has great libraries, is compatible with Java, can use all the Java libraries and has the best IDE suport of any JVM language (except Java). Another option is Haskell.
What would be very helpful to you would be using some layout managers - specifically, a [GridLayout](http://download.oracle.com/javase/1.4.2/docs/api/java/awt/GridLayout.html). This layout manager will automatically put components into a grid formation, which will be perfect for your game.
I don't think it's necessary for someone just starting to know the details about the JVM just yet. Sooner or later one has to deal with it, yes, but by then you already have some experience with the language ;) Classpaths... in a way... but that's the same as saying: "If you want to learn PHP you should know about `include_path`". And I daresay, someone starting out with PHP is completely oblivious about that setting and can still write good code ;)
Double thumbs up for this post!
Thanks so much!im downloading BlueJ right now and thanks for the tip on how to make it a sub class! 
Hmm...Im not sure.In the bool thats what it says to out dante.speed = 2.Ill try that,thanks of the info!
First
&gt; ... learn a modern language [...] Another option is Haskell. I had to smile at that :) There is some truth in what smcj_ says. Java is getting dated. But since Oracle has taken over, at least they churned out a new version and the next is in the making. Who knows maybe it will pick up... I had a look into Scala as well, but haven't done any serious project yet. It seems that functional languages are all the hype nowadays. And they have their benefits. About eight years back when I said I was falling in love with Haskell, everybody looked at me like I was going crazy. Gullible as I was, I let myself being convinced that functional languages will never take off and stopped using it. If I only had been more headstrong... :)
Thanks!
the trick with gridbag is to use it in conjunction with other layout manager; figure out a grouping for your elements, then create a panel for each grouping with its own layout manager -if it is a complex grouping gridbag may be used here as well but often a simpler layout managers can be used instead.
I was a newbie and I implemented my own .toString() (or something similar) on an object before looking at the API... Always pour over the API first, kids :P
At my previous company we removed IBM Process Server from our stack and replaced the functionality we were using with &lt;100 lines of Java.
I quickly threw something together in a couple of minutes that displays the basic structure you're after: http://pastebin.com/pjT7vp7U . Basically for my main container I used a BorderLayout so that when you resize the window all the components get nicely filled out. The center panel is divided into 4 pieces in which you would lay out your components, I just used some colored panels out of ease. It's pretty simple but it should get you going. One thing I would change though is using an *int* variable for the x and y counting. It makes it easier when you have to add another component in between two other components in a GridBagLayout. But I left it out since this decreases the readability a bit. 
Sweet, thanks!
Basically any method in Apache Commons Collections will have that effect on code.
Thank you! This was very helpful. I used it like the method said to put in the buttons and it worked great. How do I access the buttons? I want to access either 1 button or all of the buttons. Is it possible to save them in a variable and call them all at once? If I know how to do any of these, then the rest is simple.
Some contractor really wanted to use Ruby for something, even though we told him we did not want to introduce it into our environment. He wrote this really complicated tool to manage branching our codebase in it, which I promptly replaced with a 2 line shell script...
Java might be a tricky first language as you need to understand things like object orientated programming before it's going to make much sense. Have you considered Python, just to get comfortable with the basics of programming? If you are determined to stick with Java, I am not familiar with "Sams Teach Yourself Java", but I can highly recommend "The Java Programming Language", it's by the creator of Java himself.
Solving GridBagLayout problems is really easy: ditch it and use something else. I use TableLayout (umm... http://java.net/projects/tablelayout ??? I can't find their website any more). You save yourself a whole lot of time by rewriting the code to use something easier.
pore* not the same word as what you'd do with a liquid
I hope you were wearing [this](http://www.thinkgeek.com/tshirts-apparel/unisex/frustrations/374d/)
That can't be real. That's like failing at failing.
Poor Diego :(
TIL. :)
Hmmm...i might try Python after.heres the link to the book: http://www.amazon.com/Sams-Teach-Yourself-Java-Days/dp/0672329433 On YouTube,there is a Gamer named Pyropuncher, whos in College learning programming,and a required book for this class was this book and he recommended it.
Sure, you can still store the buttons in that 2D array you coded. Inside your loops, you would just create a new button, store it in the array, then add it to the frame, something like this: JButton button = new JButton(); button[r][c] = button; add(button); Of course, you'll also need to add the code that actually makes the button do something when its clicked; for that, take a look [here] (http://docs.oracle.com/javase/tutorial/uiswing/components/button.html) Good luck.
Sadly no, the company required business attire. Though I do have many ThinkGeek shirts that I often wore under so its always possible
Mind posting that 2 line shell script?
* dir.listFiles may return null array (bad API design in Java, NPE in for loop) * isNullString actually does not check for null string :)
Your code is formatted as a mess here. Try pastebin.com. 
What's up with isNullString? When the string is null it throws an NPE and when it is not null but empty it returns true, which is incorrect. An empty string is, by definition, not null. The only time it returns an intuitive result is when the string is not null and contains one or more characters.
The shit load of security role, user based codes and audit trail that was used in an internal course management system - all of this designed and specced by the manager responsible (with many omissions that had to be pointed out to him). So now the project phase has been completed and it has been deployed into production he has decided every single piece of security should be replaced with **if user=the_manager_in_question** and the audit trail has been removed. Months of work reduced to a line of code... FML.
Sorry, does that work?
Ok, so the problem you have with the matching, firstly, isn't even related to the matching logic itself. In the main method, you declare your 3 symbol variables, and these are the vars that you pass to the method to determine matches. The problem is that these variables always have the value 0. See how in your main method, you declare the symbols int symbol1 = 0; Then in your symbol generating method displaySymbols(), you declare brand new variables again with this same code. So your displaySymbols() method has distinctly different variables, that only exist inside the scope of that method. So in order to make these symbol variables globally accessible, you need to pull them out of the main method, and into the class level, like this: public class SlotMachine { static int symbol1 = 0; static int symbol2 = 0; static int symbol3 = 0; Now if you just remove the declaration of these variables from both your main() and displaySymbols(), you can use these anywhere in the program. Now on to the matching logic itself. When writing this kind of logic, its best to just say out loud what you need the logic to do, then write it. So we need matches. Let's start with the biggest - everything matching. So I want to check if symbol1 matches symbol2 and symbol2 also matches symbol3. Now to write the code for that, it would be: if(symbol1 == symbol2 &amp;&amp; symbol2 == symbol3) See how the code reads exactly as the English description. That should be enough hints for you to get that working properly. Good luck.
Much better! The other commenter has some good ideas. Posts like these actually emphasize how much learning happens from early programming to later programming :) Take your displaySymbols method. You do int comparisons all over the place. [You should do something like this](http://pastebin.com/dgBHRuzd). The problem, still, is that it only prints the results to the screen, and doesn't return them so you can see if they won any money. But you should take a similar approach with your bet amounts. Have you gotten to objects yet, or is this still super early in the class? 
We know Scanner objects and File objects so far. I took the commenter below's ideas and now the matching logic works. I shoved in the matching comparisons into the same method as "display results" so i'm not sure how to print the results to the screen and return a variable I can use to add or subtract money from the current amount. 
was creating a web scraper and was pulling out links from the html source. Spent a good while trying to make it work just right. After a bit i found out about an api that would return them all in a array. Needless to say ive learned quick to google for apis
i'll fix that, thank you
i meant blank, or does java call a blank string null?
we're replacing the usages of a deprecated API in our code base and have so far deleted &gt;10k loc that was either already replaced or no longer used... talk about building tech debt in &gt;.&lt;
You probably wanted to call that method isEmpty(String). Or rewrote it to check for null as well, then called it isEmptyOrNull(String).
I downloaded it as well the other day. There mist be something on the jmonkey forums. 
There is a 'documentation' link on the jmonkey front page with a couple tuts behind it. http://jmonkeyengine.org/wiki/doku.php 
You should use StringUtils from Apache commons-lang. They use isNull(String) for null, isEmpty(String) for empty, and isBlank(String) for empty or contains only whitespace.
The two "Hello"s are not just equal, they are *the same object*. It's a compiler optimization and not something to be relied on. You use == to tell if two variables reference the same object, and you use .equals() to tell if the objects referenced to by two variables are considered equal by the first one.
My finger almost smashed my phone because I wanted to upvote you so hard. Annotations (with the right framework) can be real time savers. See: Hibernate Annotations and JSR-303.
I was writing an Eclipse-based graphical modelling environment using GMF. As part of GMF, you need to have `.gmftool`, `.gmfgraph`, `.gmfmap` and `.gmfgen` files to specify a graphical editor; these are all serialised in XML, and can easily top &gt; 100k lines for a single graphical editor. Eventually, I decided to write my _own_ metamodel for describing GMF editors. This allowed me to replace these four files with a single `.simplegmf` file, easily under 300 lines, which can then be used to generate these four files automatically. This then turned into the [SimpleGMF](http://openiaml.org/simplegmf/) project which I need to clean up and release properly :D
I consider myself fairly fluent, and I didn't know this. TIL indeed.
&gt;` return null; //Shouldn't never happen` ...so was it supposed to happen or not?
Thanks.
that's no problem, but no we haven't covered text files or hardly anything for that matter. thanks for the help though! i'll look into it.
For a student project I was given the task of creating a new backend for a client-server system where the frontend was implemented using Java Applets (this was in 2002). So I had to adapt the frontend applets to work with my new backend. Those applets were a huge mess of copy-pasted code. Lots of duplication, and security problems as well. The applets made JDBC connections *from the client* to a database server, using no SSL, no authentication, no DB user accounts, nothing. Just to deal with the duplication, I made a shell script that diff'ed every source file against every other source file, making a note of the number of lines in each diff. I often found 5-6 nearly identical classes scattered throughout the sources. I refactored and abstracted and reduced that ~45k LoC mess into about 10k LoC, making it more reliable, maintainable, secure, and a whole lot faster in the process.
[before](https://gist.github.com/ec8378cde232d53a3e25) [after](https://gist.github.com/2997e3282530163434b1) a little more refactoring to generalize the after @override to do the same thing as the before, would reduce lines even further, because the before code doesn't include the actual permissions defnition. it's inlined here for out-of-band reason but life is full of compromises.
That's how you identify a C programmer! 
I don't work there anymore, but it was basically a for loop and an svn copy
I've got a funny response to your comment. But why bother.
The previous dev had hard-coded a hierarchical list output... 3 or 4 levels deep... I replaced it with a recursive. It was less than 1 quarter the LOC and allowed for arbitrary node depth. 
Yea those were the first place I looked at but I don't really follow them too well
TIL I'm not actually wasting time when browsing Reddit!
Replace a conditional if-else statement that had 150 different paths to a hash map.
The CloudBees Ecosystem gives Java developers a one-stop shop for building and deploying applications in the cloud. Email service from SendGrid and Apache Solr search/index are the newest services available, augmenting CloudBees' deployment environment, Jenkins in the Cloud, Sauce OnDemand (Selenium in the cloud), JFrog Artifactory (binary repository), Xwiki (wiki), Sonar (continuous inspection), New Relic (application performance monitoring), Cloudant (CouchDB), MongoHQ (MongoDB), and Papertrail (logging).
Oh yeah i've had several "dude, why didn't you just use a map" moments looking at my co-workers code.
not allowed this assignment, only one java file and java se libs &amp;#3232;\_&amp;#3232;
Try downloading Java 7; 6 is obsolete, IMHO, anyway. http://www.oracle.com/technetwork/java/javase/downloads/index.html (top download, JRE)
You could use the same terminology though, since it's one of the most used java libraries.
I just tried the exact same path as in your screenshot, and it's working (downloading for me now).
Im a pure Swing rich client developer for 3 years now and I learned to love and hate it :) Yes GridBagLayout is a good thing. I wouldn't recommend the other two if your interface isnt very small. The Netbeans editor is very good. And if you don't need to change the user interface dynamically (Like changing the position of components) you shouldnt need to understand the code completely. Of course you need a basic understanding of the event handling, but it seems you got that. If you want to try another excellent Swing editor try Google's Eclipse plugin "Window Builder". It has excellent support for a lot of Layouts (not only Oracle's) My personal Layout favourite is GroupLayout btw. Best Layout for Drag &amp; Drop editors. Not so good for code editing.
I've had that happen to me with any of the Java downloads. Just try again in a minute.
Somewhat bad advice. 7 is still experimental and 6 is very far from obsolete. Oracle still recommends 6 over 7 and installing 7 requires a bit of digging around Oracle's website, meaning only developers have installed it. Class files compiled by 7 are incompatible with 6, which is what your users are still running. So the correct advice is to get both, because you still need to target 6 (or even 5) if you plan on distributing binaries. 
I guess they are using download mirrors and the one you got wasn't synced properly (or broken)?
What planet are you from? A lot of enterprise level code is still Java 5. Obsolete &amp;#3232;\_&amp;#3232;
A buddy of mine does the gwt right now. It's pretty cool, but you need webspace obviousyl.
Might want to block out the name of anyone that is on your screenshot (assuming that is a name on the top right corner). Edit: Saw your reddit name....never mind.
&gt; 7 is still experimental How so? It's not an alpha, not a beta, not a RC, not a preview build. It's a **standard release**. &gt;6 is very far from obsolete True, but it's almost older than Reddit. &gt;installing 7 requires a bit of digging around Oracle's website What? Just google "java 7", first link is http://jdk7.java.net/ and the first link there takes you to the Java downloads, the first download of which is Java 7. Googling "Download Java" has the link on the 5th or so place. &gt; Class files compiled by 7 are incompatible with 6, which is what your users are still running. True, that's why I recommend JRE 7 and JDK 6. The newer JRE runs older classes perfectly and since it's newer it should be more optimized. &gt; So the correct advice is to get both Correct: JRE 7 &amp; JDK 6.
I'm not an enterprise developer; I'm a student open source developer. The sooner we switch from obsolete Java versions (5) to mainstream (6) or even latest (7) JRE versions, the better - I'm sure we can agree here. Sure, if you are *forced* to use an older version, do it, but put up at least some resistance; if nobody resists, then nobody will upgrade, and everyone will be (hyperbole) stuck with IE6.
Because JRE7 is broken... http://www.lucidimagination.com/blog/2011/07/28/dont-use-java-7-for-anything/ is just one example.
Did you even read the over 4 month old article you linked to? &gt; UPDATE OCTOBER 28, 2011: As noted on Uwe’s blog, Java 7u1 is documented to include the patches to address these issues. There's also a very good comment underneath the article: &gt;It’s alarmist overreactions like this that cause soooooooo many problems on the internet, and in the development community. Please refrain from doing things like this in the future. I even suggest deleting this posting. &gt;This bug only occurs under very specific and not too common circumstances. And you can easily be worked around (while waiting for the fix in Java 7 Update 1) via a compiler switch (-XX:-UseLoopPredicate). Readers might want to read http://www.infoq.com/news/2011/08/java7-hotspot for a rational discussion of this MINOR issue. Also, &gt; In fact, although there is a valid bug (in which loops may be incorrectly unrolled or cause SIGSEGV crashes), **this optimisation bug has been present since Java 6** if either the -XX:+OptimizeStringConcat or -XX:+AggressiveOpts optimisations are enabled. .. as reported on http://www.infoq.com/news/2011/08/java7-hotspot
Mine was working a few days ago, but so slow I gave up. I found an old install a couple versions back and just installed and updated that one.
&gt; I'm a student That explains everything.
:) I believe in the Platform, no matter what.
true
&gt; How so? From the [official website](http://java.com/en/download/faq/java7.xml), &gt; The new release of Java is first made available to the developers to ensure no major problems are found before we make it available on the java.com website for end users to download the latest version. That is, Oracle thinks it's not yet ready for end users. &gt; and the first link there takes you to the Java downloads Searching for "java" only gets you to Java 6. Your search for "java 7" takes you to a page that is 5 clicks away from the actual download, where the last click requires the user to pick from a number of operating systems and architectures. That's practically unaccessible to most end users, especially the ones who don't know to search specifically for 7. &gt; True, that's why I recommend JRE 7 and JDK 6. You didn't say that the first time. :-) 
&gt; 6 is very far from obsolete Jul 2012 is not so far... http://www.oracle.com/technetwork/java/eol-135779.html
&gt;In fact, although there is a valid bug (in which loops may be incorrectly unrolled or cause SIGSEGV crashes), this optimisation bug has been present since Java 6 if either the -XX:+OptimizeStringConcat or -XX:+AggressiveOpts optimisations are enabled. Yeah, but in Java 7 they're enabled by default, which is why Java 7 shipped as broken. To be fair, I use Java 7 anyway.
I still have to deal with Java 4 at work on occasion. It's going to be around and used for years after July 2012. 
ouch
I'm pretty sure there's a class built into java called "JFileChooser" probably under java.io or something. it's sort of like what you want except it opens a windows-style file browser like you would get on an upload link in a browser. I know it doesn't have the name prompt, but It might be easier for the user to have it graphically. 
This it the answer.. Substring the first 4 chars, and then contat to build your dir structure. Insert 2 quarters into the machine and you're done.
Once you've constructed your file path using String.substring, you'll want to Runtime.exec(new String[]{"explorer", "/e,"+path}); to open the folder in Windows file explorer.
6 is obsolete? not true at all.
Well, now we know he is not Arinda McHoudhury
Why did you stop reading at "6 is obsolete"? Why didn't you note the "IMHO, anyway" part? The sooner we stop looking back at old versions and start looking toward and **using** the future, the better.
still ... not working
You are completely right. Obsolete software limits our capabilities and leads to stagnation and decline. 
can somebody provide me a private link for jdk-6u29-linux-i586.bin best if in mediafire
Thanks champ, that looks like the method I need 
Thanks for the tip! 
Try supplementing with this: http://www.amazon.com/gp/aw/d/0596009208/ Hang in there!
I felt exactly the same way when I first took a Java class in 1997 in college. It was verrrry confusing at first for me too. My advice is to just hang in there and also take breaks from it when you can. In time you will get it, but there is a big learning curve.
This. I tried for so long to get grid bag to work, and then came across this and it effortlessly did everything I was trying to do with gridbag. Also, if you are using eclipse use the[ Google Window Builder](http://code.google.com/javadevtools/wbpro/). You can visually edit components, and then view the source code to get an idea as to what is going on. You could do the same with grid bag if you really needed to.
I upvoted him so hard, I punched a hole in my screen.
MigLayout. Use the quicksheet as reference and you will need no other layout manager. It is built for usabillity for the programmer. Minimal dsl for controlling the layout.
it's search engine based (lucene). But nutch has crawler functionality in it: http://nutch.apache.org/
If you just need simple web page interfacing: check out [jSoup](http://jsoup.org/).
I'm a java n00b, but crawler4j has been great for me. I needed an image scraper, and it delivered. However, image scraping is just an extension of it, it has readily available source for you to expand upon. I highly recommend it. 
http://www.jhlabs.com/java/layout/index.html seems interesting, though I've not used it...
jsoup is where its at. you can pull all the links out of a webpage and then just recursion with threads to branch off of them.
[pyquery](http://packages.python.org/pyquery/api.html) is pretty good at doing this if you can use jython
&gt; True, but it's almost older than Reddit. Great logic, therefore all Reddit users must be nearing obsoletion! 
Too true, nice to hear from someone living in the real world.
jSoup. jSoup. jSoup. It is irritating how much people put effort into web page parsing and crawling when this exists.
Instead of Bully.java being posted, you posted Board.java twice. You seem to have a lot of duplicate variables, too. If you want help with a section of code that doesn't seem to work, it's best to reduce it to the simplest example where it doesn't work, and then post that. And often the process of doing that will result in you solving the problem on your own.
Thanks for the advice. I'm simplifying it now, looking where it could've gone wrong. 
Use reflection to find out its value.
[yep](http://pastebin.com/weeFCs51)
how has email ever not been "in the cloud"? &amp;#3232;\_&amp;#3232; 
You didn't post Bully, so we can't see what's going on. First, get this into source control. It will be *much* easier to share with other people, like you're doing now. I recommend Git, with [GitHub](https://github.com/) for free hosting. Override `paintComponent()`, not `paint()`. Loading images from an absolute path is bad practice. Use a relative path or, much better, [load them as resources](http://download.oracle.com/javase/6/docs/api/java/lang/Class.html#getResource(java.lang.String\)) from the classpath so they're packed up with your game. Rather than manually shift everything around based on the player's position, let the [Graphics2D do it for you](http://download.oracle.com/javase/6/docs/api/java/awt/Graphics2D.html#translate(double,%20double\)). Player and Bully should probably inherit from some more general class or interface, such as Creature or Actor. You can focus your effort on making that base interface nice and clean. With proper inheritance, your game engine manipulates everything the same way and graphics engine just views everything the same way, knowing only that a particular Creature is the player. # Longer term: You only started writing your game now so what you have isn't unreasonable, but you'll want to move your game logic out of Board. Board is merely displaying the state of your game and shouldn't drive any game logic. Try to abstract all the key pressing stuff, especially keeping it out of Player. This makes it a lot easier to test your program's logic and it will allow other forms of control in the future. 
Think of 2D arrays as a table. A table has rows and columns. So lets say we have a 2D array declared as so. Object[][] objArray = new Object[2][3]; If we think of the array as a table, we've essentially declared something that has 2 rows, and 3 columns. Now we can use this snippet of code to traverse this 2 dimensional array. int rows = 2; int columns = 3; for (int r = 0; r &lt; rows; r++) { //here we're traversing through the rows one by one. for (int c = 0; c &lt; columns; c++) { //here we're traversing the columns of each row. } } note** this isn't the greatest code, i know, but its meant to give a basic understanding of the concept. 
think of a 2-d array like a chessboard. int a[8][8]; would give you 64 spaces that you can access kinda like coordinates. So, if you wanted to get to the 5th space up, and the 3rd space over, you'd access it by a[4][2]. That will give you the data at that space. 
It is a list of lists. One helpful analogy would be to imagine a box full of other boxes. The outside box represents the master list, which contains many other boxes, each of those being a child list. As you pull each box out of the outside box (analogous to looping through the master list), you can then look through the inside box you pulled out to find the values it contains (analogous to looping through a child list). 
Think of a [six pack](http://media.lightburner.com/0/394/115320_00448_Six_Pack_Top_View-w.png) of soda. A 2D array has the form: "someClassName[][]". An array is nothing more than chunks of data, be it numbers or words or anything, where each can of soda is. When considering how many rows of cans there are in a a six pack of soda, there are two rows in this example, the first row and the second row. This is what the first [] is used for in a 2d array( so someClassName**[]**[]). It tells you how many **rows** of cans there are. Now think of how many cans of soda are in **each row**. This is used by the second [] in a 2d array (so someClassName[]**[]**). This will tell you how many cans of soda are **in each row**. So when considering a 2D array, it would be a 2 x 3 array of soda cans which has 2 rows of soda cans, each row having 3 cans, or maybe you like to buy soda in bulk like a 24 pack, so you'd get an array of soda that has 2 rows, each row having 12 cans. The "for" loop **within** another "for" loop is simply saying hey, I have a pack of soda which has 99 cans of soda by 99 cans of soda. But how can I tell the computer that? Well I tell the computer hey, my pack of soda has 99 rows. Each of those rows has 99 cans of soda in it. go row by row, and tell me something about these cans of soda.
OK, so think of it like this: Do you remember the old school card catalogs? They were cabinets, and each cabinet had a letter on it (A-Z). When you pulled out a drawer, you found a bunch of cards that represented a book. So there is an array (A, B, C.... Z), and each of the elements in that array hold another list of values (A has cards for all of the books by authors Anderson, and Z has cards for all the books by Zola and Zinn). Another way to look at it is to think of an outline. The first dimension is the alpha values, and the second dimension is the roman numerals: A. Zero i. Zero ii. One iii. Two iv. Three B. One i. Seven ii. Three iii. Five Does any of this make sense? Do you have questions?
SO you understand 1D arrays? If so a 2D is a array of 1D arrays. so arr[0] is an array and arr[0][0] is the first element of the the first array stored in arr.
Yes, I understand this, but i do not understand how to write a for loop which works u_u
They are conceptually similar to a matrix in linear algebra. 1 dimensional summations apply to 1d arrays and 2d summations apply to 2d arrays.
It might be that you have not yet grasped the concept of looping yet. because it should make sense if you comprehend what is happening in a loop. let me try explain without any code. when you loop through something you start at a number ( lets say 0) and you end on a number (lets say 3) A loop will have an index number of where the loop currently is. lets called that x. so when the loop runs for the first time and you print out its index it will say 0 and then 1 and 2 then the loop will end. you can use this index to point to a place in the array you wish to work with. Now imagine two loops, one inside the other. the first time it loops x will equal 0 and then the second loop starts with an index y starting at 0 (the y loop will need to complete before the x loop moves to the next number) so lets say the y loop ends on 2. your print outs will look like this x = 0 y = 0 x = 0 y = 1 x = 0 y = 2 (here the y loop ends its cycle and the next x loop starts) x = 1 y = 0 x = 1 y = 1 x = 1 y = 2 (the y loop ends again and the x loop starts again etc..) now when you are in your second loop you can use both variables to point to a particular place in a 2d array. just like a 1D array you would use the x variable in array[x] = "x element" a 2D array will have array[x][y] = "element at x and y" Hope this clears some things up, and good luck.
Before I wrote my own crawler I used webharvest. ...Apache HTTPClient is all you need to cut through most of the boilerplate.
Yep it's down since Thursday at least. BUT yesterday (Sunday) was uptime for a while! I did an script and cron'd (0 * * * * ${HOME}/download-fucking-java.sh) it because I need JDK 6 and JCE Policy files for work... #!/bin/bash if [[ ! -e ${HOME}/JDK_DOWNLOADED ]]; then wget --tries=1 http://download.oracle.com/otn-pub/java/jdk/6u29-b11/jdk-6u29-linux-x64.bin -O ${HOME}/jdk-6u29-linux-x64.bin &gt; /dev/null 2&gt;&amp;1 if [[ $? -eq 0 ]]; then echo `date -R` &gt; ${HOME}/JDK_DOWNLOADED fi fi if [[ ! -e ${HOME}/JCE_DOWNLOADED ]]; then wget --tries=1 http://download.oracle.com/otn-pub/java/jce_policy/6/jce_policy-6.zip -O ${HOME}/jce_policy-6.zip &gt; /dev/null 2&gt;&amp;1 if [[ $? -eq 0 ]]; then echo `date -R` &gt; ${HOME}/JCE_DOWNLOADED fi fi This morning results: $ cat *_DOWNLOADED Sun, 20 Nov 2011 22:00:17 +0100 Sun, 20 Nov 2011 22:00:16 +0100 But... download server is again down...
That's the most annoying presentation I've ever seen.
I think [this video](http://www.youtube.com/watch?v=9BU8ne-ehR0) did a good job of describing it. If you don't fully understand the concept of nested for-loops (a for-loop within a for-loop), that's a whole different (understandable) story. Basically, the snippet is adding increasing values to a 100 x 100 table. The outer loop is keeping track of the row number, while the inner loop is doing the same for the column. It ensures it doesn't add a value to a location in the table that doesn't exist (hello, memory allocation errors!). The first time it runs through, it's going to pass through the first for-loop with rows = 0, and proceed with columns = 0. It then puts the value of 0 (counter) into array[0][0]. The inner-most loop isn't finished, so the outer-most loop doesn't increment. 'columns' is incremented again, so array[0][1] will now hold the value 1, and so on. The inner loop runs 100 times before it is done, and then the outer for loop (containing rows) can be incremented to 1. The column loop runs through another hundred times and rows increments to 2. By the end, counter will equal 999. The table will look like so (excuse the '0's before single and double-digit values. Java won't do this, but it makes my table look neater): 000 001 002 003 004 005 ... 099 100 101 102 103 104 105 ... 199 200 201 202 203 204 205 ... 299 300 301 302 303 304 305 ... 399 400 401 402 403 404 405 ... 499 500 501 502 503 504 505 ... 599 ... ... ... ... ... ... ... ... 900 901 902 903 904 905 ... 999
Downgrade Java? 
if you use netbeans it will autogenerate a gui for you and you drag and drop them. you can do something like textbox1.getText() to get the values. Just get all the values at once and then set them to seperate labels, ie min max avg...
You'll need atleast a Jframe, a jpanel, 6 jtextfields, a button, and a few jlabels...what do you have done thus far?
Using current Java (6). It freezes while loading and I get this message in the console: java.lang.ArrayIndexOutOfBoundsException: 2 at lib.gui.BmpButton.MakeEmbossImage(BmpButton.java) at lib.gui.BmpButton.addNotify(BmpButton.java) at java.awt.Container.addNotify(Unknown Source) at java.awt.Panel.addNotify(Unknown Source) at java.awt.Container.addImpl(Unknown Source) at java.awt.Container.add(Unknown Source) at lib.gui.Constrain.constrain(Constrain.java) at ChessTutor.init(ChessTutor.java) at sun.plugin2.applet.Plugin2Manager$AppletExecutionRunnable.run(Unknown Source) at java.lang.Thread.run(Unknown Source) Exception: java.lang.ArrayIndexOutOfBoundsException: 2 Not sure what to suggest. Java is **supposed** to be backwards compatible. It must not be a very robustly written applet I suppose. Using an old version of Java might work ([they're all available](http://www.oracle.com/technetwork/java/archive-139210.html)), but you oughtn't to leave it like that due to the possibility of old security vulnerabilities. That website also uses Flash 4 for the header, so yah.. really old. 
If I write int[] a = new int[] { 1,2,3 }; I'm creating an array with 3 elements and assign that value to a. So a =&gt; [1,2,3] a is a reference to that area. if a is a twodimensional array then a =&gt; [ =&gt; [1,2,3] =&gt; [4,5,6] =&gt; [7,8,9] ] A is a reference to an array (int[][]) in which every element is again just a reference to the row or column array (int[]).
If you like annotations, try [Project Lombok](http://projectlombok.org/). For a typical "bean" with fields that have getters and setters, and toString/equals/hashCode, a single @Data annotation replaces every single method and leaves only the fields. You can literally go from 150 lines down to 4 (inside the class body).
You probably want to look at the [Servlet API](http://www.oracle.com/technetwork/java/javaee/servlet/index.html)
second that. unless you want to download http web pages ... in which case urlconnection ....
&gt; Also, if you are using eclipse use the Google Window Builder. Whoa, this is awesome! I've used C++Builder and Qt Designer very extensively in the past, but having one that actually parses and recognizes my own GUI code and then allows me to work with it in the GUI builder is well ahead of those.
Thanks.
Neet i'll check it.
I've used it in the past. I didn't like using the java agent and such. I've been planning on looking at it again.
It's completely transparent now; you just need lombok.jar on your classpath when you compile. And if you use Eclipse, you need to install it there.
Thanks for the great input! I had the sprites folder set to 'c:/abw/' so I could play with the sprites easier, would using just 'abw/image.png' work as a relative path? It's only a small game so I can learn Swing, but I understand that bad habits will roll into my future works. I really appreciated your comment, enjoy the upvote.
That works as a relative path if your working directory is your C drive, which is probably wrong. Say you run your game while you're in "C:/abw/mygame/", the relative path to an image would be "../image.png". That's not much better than the absolute path. You want the images to be somewhere under your working directory, so the relative path is something like "images/image.png". If your working directory is "C:/abw/", which seems likely, then you can leave the directory part of the path off altogether: "image.png". That's also a relative path, pointing to a file in the current directory.
You are wizard. Thanks man.
this is an example how prezi should not be used. interesting materials drown in a fancy tool that makes people dizzy
Great article. This should be required reading for anyone working on a non-trivial system. Especially #9, I can't even count how many times I have seen people log *only* ex.getMessage(), which is pretty much useless. There's no point in logging if you aren't going to log properly.
You could try using JLabel(s) instead, and let Swing do the hiding for you.
Are you using a 64bit version of Windows? If so you might be updating the 64-bit version of Java. Last I checked Chrome was only available in a 32-bit version. If you are using 64-bit Windows try updating the 32 bit version of Java on the PC and see if the error goes away.
you should see how many of my catch statements are empty until something goes wrong.
The problem given is "Write a program that generates 100 random integers between 0 and 9 and displays the count for each number. hint: use (int)(Math.random() * 10) to generate a random integer between 0 and 9. Use an array of 10 integers, say counts, to store the counts for the number of 0s, 1s, etc. The program compiles correctly, spits out a count equalling 100, but Livelab refuses to say it ran correctly. So what the hell is happening?
Learning the topics of network intrusion and malware typically occurs outside of the realm of any one programming language. (There are concepts and techniques that need to be understood first... then you can learn how each language is affected or unaffected by such techniques.) You certainly aren't going to find any reputable sources willing to teach you how to build worms/viruses/etc... and especially not in Java which is a language and environment designed to prevent such things. (Security Mangers, verified bytecode, yada yada) I'd suggest that if you are interested in learning about computer security you take a trip over to [/r/netsec](/r/netsec) and ask there. You should make it clear you'd like to learn about computer security and not "viruses" since that implies you want to become a script kiddie. They should have some good pointers for you. Since your class is specifically about Java, and even moreso about Computer Programming itself since this sounds like only your second class, You should submit another entry (either here or in [/r/programming](/r/programming) ) to see if the community(ies) have suggestions for areas you might want to look into. Its important to know what fundamentals of languages you already know as well, (For example, have you programmed with Sockets yet?) because there are some important areas not covered in intro courses that you really need to know before you venture into the crazy java world of Frameworks and Web Application Servers and whatnot. (A good question would be to ask all the College programmers what they wished they'd learned before starting.) Good Luck. 
First off thank you for the response. Second, I thought that might be the case, but I would really love to center my Java education around exploitation. I have no interest in becoming a script kiddie, but merely want to understand how viruses work to achieve greater understanding. I posted my entry there, so far no responses. We are actually doing Socket programming as we speak. Again, thanks. :d
There are more than enough topics in [Java security](http://www.oracle.com/technetwork/java/javase/tech/index-jsp-136007.html) to learn. Programming malware is not nearly as interesting as you think. The interesting part is finding the vulnerabilities, and that can have little to do with programming. If I was your teacher, I would want you to learn how to write secure Java applications, which is much more of a useful skill in the long run. Even if you decide to become a security researcher (and I'm not trying to dissuade you of that) having a knowledge of the Java security frameworks will be helpful. Check out the [OWASP Top 10](https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project). Learn what it takes to avoid these security risks when writing Java applications.
Maybe your output format isn't matching? Have you tried just printing the counts? If that is an automated grading system I would assume that you need to have your output in a specific format, but from what you pasted of the problem I don't see that specified. 
Apart from the opinionated bits (log4j is fine if you already use it, just use String.format(), it's far more important you use whatever the rest of your company uses than shoehorn in some quasi-preference) this seems like what you learn after coding professionally for about 2 months… does this really need to be an article?
I'm a little concerned with randomNum = new Random(1,3); if (randomNum == 1) { Three reasons: 1) I don't see its declaration, but it looks like randomNum is a java.util.Random. 1, 2, and 3 are ints, so even if it lets you compile, those =='s are on lying going to be asking if your randomNum object is the same object as an auto-boxed Integer 1. It never will be. 2) I don't believe java.util.Random has a two argument constructor. The fix to both 1 and 2 is you want to use the no-arg Random() constructor, probably called Donut's constructor and kept as a class variable. A Random is a random number generator, not a random number itself. Call [Random.nextInt(int n)](http://download.oracle.com/javase/7/docs/api/java/util/Random.html#nextInt(int\)) to get a random integer between 0 and n. (In your case, n would be 2; use 0, 1, and 2 as your possible values rather than 1, 2, and 3, or add 1 to the result of nextInt.) 3) If you're checking a single integer against multiple possible values, it's generally better practice to use a switch rather than a series of ifs. It's less typing and more readable. switch(randomInt) { case 0: ... break; case 1: ... break; default: ... break; //not strictly nessesary, but gets you in the good habbit of breaking after every case in a switch. } **Edit** Fighting with reddit formatting.
Just wrap the line(s) in an if(shouldDrawString) {} block, and when your ready to make it disappear, set shouldDrawString=false and repaint. Also, to get reddit to format code cleanly, precede each line with four spaces. 
SQL injection is very simple to understand, albeit not a problem restricted to one language. You may want to look into that, since it also lets you explore how proper Java can deal with it (PreparedStatements vs Statements). If you find that the other things people are mentioning are well beyond your understanding, you can look this up.
Well if you find a random number then check if it matches the excluded numbers, if not return the random number, if so, pick another random and repeat Also look up lists, they are basically like arrays that have varying lengths instead of a set length.
in dos console / cmd java -version what do you get?
Instantiate `JFileChooser` from the `javax.swing` package. IIRC, set `chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY)` so that the user can see only directories and select only a directory. 
create a loop. In that loop, generate a random number, then compare it to the array of banned numbers. If it doesn't match any of them, return the value. You might want to put another escape condition in, or check to see if the input numbers cover every integer between 1 and 54 (which would mean the loop never ends).
Hey there amigo, Java isn't really a language you can use to do things like that - lots of the low level things you need to mess with are (blissfully) hidden from you. This does not mean it is impossible, I recently did a final-year uni assignment in which I built a tool that uses a man-in-the-middle attack (although it hijacks the connection in order to force a layer of security around it - it is a security tool). I did it in Java, using a Java interface to a C++ library. THIS WAS VERY STUPID OF ME, I chose that unusual application architecture because I needed to bash something out quickly for an assignment. I am happy to send you a copy of the report and application - but deployment is extremely difficult (assignment - built not for comfort). The report doesn't explain any code, however, only some of the theory. You're still in a stage of your learning where you should learn ALL THE THINGS. Don't stress about it - when you're at Uni, so much will come to you naturally.
Sounds like you're confused about how to get the exclusions from the user when you don't know ahead of time how many there will be. Using an [`ArrayList`](http://download.oracle.com/javase/6/docs/api/java/util/ArrayList.html) would be simplest. But here's an idea if your course requires you to use an array. Tell the user to input all the excluded numbers on one line separated with spaces, so that the session looks something like this: Please input the numbers to exclude, separated by a space. 3 16 47 20 Tell the scanner to store [`nextLine`](http://download.oracle.com/javase/6/docs/api/java/util/Scanner.html#nextLine\(\)). Now all the numbers are in a `String` as `"3 16 47 20"`. Use the [`String.split(" ")`](http://download.oracle.com/javase/6/docs/api/java/lang/String.html#split\(java.lang.String\)) method to split the line into an array of `Strings`. Now that you know the length of this `String` array, you can make an `int` array of the same length and fill it with those values. 
use java.util.Random to get the random numbers, and then if you get one in the exclude method, reject it and get another.
Others have already mentioned their version of the algorithm, I think I'll try to help you with finding the arguments. I'm not sure how you run your program. Seeing as you mentioned a scanner, I'm going to assume that you use the command line (ie. you run it by typing something like `java YourClass` after compiling it with something like `javac YourClass.java`.). To give the program your arguments, you should run it like this: `java RandomNumberChooser 25 46 2`. This can be accessed as the parameter to your `main` method. I usually write my `main` method's declaration as follows: public static void main(String[] args) { // Code goes here. } You can then access the arguments from the `args` array. As you can see from the method declaration, these are stored as `String`s. To convert them to integers, we simply pass each one to the static `parseInt` method in the global `Integer` class. // Define the array to hold the banned numbers. int[args.length] bannedNumbers; // Iterate over the list of arguments using a for loop. for (int index = 0; int &lt; args.length; i++) bannedNumbers[index] = Integer.parseInt(args[index]); This saves fiddling about with Scanners and so forth.
Thank you SO much. It finally hit me that although all of my previous problems would ask for user input, the reason this one wasn't autograded was because it needed to be run in this manner.
You're welcome. For the purposes of this exercise, however, you should ignore my answer. I've just re-read your question and it turns out that I've missed something quite important. Apparently, you seem to have to write a public, static method called `getRandom`. It says that the parameter definition is `(int... numbers)`. Turns out that this is a relatively new feature to Java and I was never taught it. This means that, in the context of the method, `numbers` is a variable length list. This means that you could run `getRandom(1)`, `getRandom(2, 34, 13)` or even `getRandom(1, 7, 2, 4, 23, 50, 15)` without Java complaining. (You could put these statements in your `main` method to test the program. What that essentially means that `numbers` is pretty much the same as the final value of `bannedNumbers` in my initial post.
I've noted a correction on my [advice](http://www.reddit.com/r/java/comments/ml9g4/help_creating_a_random_number_chooser/#c31u21o), but `int... numbers` in the method declaration apparently means that it's a variable length list argument. [See here for more info.](http://docs.oracle.com/javase/tutorial/java/javaOO/arguments.html)
Combination of a BorderLayout with one or more GridBagLayouts. At my swing project I was perfectly able to create whatever UI the users wanted with just those two.
Virus/Worms are not the sort of thing you will want to write in Java. You've chosen quite a tough topic and also one that is a bit of a gray area legally. To do properer system level exploits you will need to get right down to the metal for the given operating system. Exploits for webservers (SQL injection, XSS, oracle padding, man in the middle) could be written in Java as these are slightly different. Even something as simple as capturing form data can be quite useful and could be done in Java. For example, a site may remove a form but if you've got a replay tool you may still be able to submit the form for more free vouchers etc.. You might find it quite hard to find good material online especially relating to Java. Ruby on the other hand is something very powerful and can be used to create your own exploits using [metasploit](http://metasploit.com/) I think if I had a choice to learn something new with Java now I'd go for Neural Networks, Genetic Algorithms, Data Mining, Statistical data analysis. Good luck!
Have a look at the web application security. Especially relevant if you're just doing sockets. A great open source tool (in java) is here: https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project Full disclosure - I know the author.
This sounds like cheating!
No, your answer is good. You can pass the array of `ints` as-is to `getRandom(int... numbers)`. Per the docs, "The method can be called either with an array or with a sequence of arguments. The code in the method body will treat the parameter as an array in either case." 
Thank you. I assumed that they used some sort of automated testing software to grade the work. I suppose it could have been used for testing at home.
I put an edited version of my latest code in there. I think I got the jist of it but I have no idea how to code if the random number is 1 then it should notify homer_shell or if its 2 to notify homer_sprinkles, ect. 
I think I got that part down. Do you know of a way to notify other threads in the critical section of the lock?
Thanks man, that helps a lot. I'm just trying to think of something cool and interesting to learn. The way I see it I am getting class time to learn about anything I want, (as long as it relates to Java) and I want to take advantage of that.
Every time you call nextInt, it re-rolls the dice and give you a new random number, so you may be checking ==1 against a different number than when you drop down to ==2. Call nextInt once, store that to a variable, then run your ifs against the variable.
Every time you call nextInt, you re-roll the dice and get a new random number, so your probably using a different number at ==1 than at ==2. Instead, call nextInt once, before the ifs, and store it in a variable, then use the variable in the if blocks.
It's been a while since I've had to use Semaphores; synchronized have been enough for me. I do see your calling this.wait() (i.e. wait() without a variable in front) in the homer_ functions, but I don't see where it gets notified. Also, you seem to be both acquiring and waiting in some places. Acquire has a built-in wait if the semaphore is out of resources. Not sure if you need the wait, but I'm also not sure what your intended function is.
The easiest answer is that while your heap might only be 90mb, Java may have already allocated much more than that. The empty allocated space is where new objects will be created. Java allocates memory in blocks ahead of time to improve performance. Also, some of Java's memory goes towards the stack.
Check which segments of memory are using up the space, one way to do this on windows ( I'm assuming because of task manager ) is to use pefmon ( add virtual and private bytes ) or add the "Virtual memory size" column to task manager. The JVM will occupy some memory ( native memory ) and then a large segment of the remaining memory will be the java heap. A thread dump will contain a lot of the information you require.
I was planning on looking into Android app development with Java soon. So I guess, that.
Try scan.next(). Also research the difference between == and .equals(...)
For comparing two Strings on whether they have the same value you have to use the *equals(String s)* method. Strings are Objects and when you compare two Objects with *==*, *true* or *false* is returned based on whether the two Objects references are pointing at the same instance. if("+".equals(op)){
Encryption and other math based things.
You could learn about audio synthesis. You would first learn how to output sound at all, either in applet form or in standalone form (command-line or Swing GUI), getting a Wav file to play for example. You would then implement a few basic sound generators (white noise, sine wave), maybe with some interface to control them (a config file, a GUI, etc.) You would also try implementing sound effects, such as echo, and apply them to Wav files of your choice. Finally, if you've got the time, you could implement a whole sound synthesizer. :-)
Congrats! However, don't expect people to just download and run programs from anonymous people on the internet.
How to make an amazing turret defense mod for Minecraft
Try String-in-switch (since Java 7) switch (scan.nextLine()) { case "+": ... break; ... }
We can always run with security manager: java -jar -Djava.security.manager javacalc.jar
Minecraft mods arnt that difficult. Learn some Polymorphism and just look around the source code. There are plenty of youtube videos showing how to do differnt things. Check out minecraft coder pack (MCP) to deobfuscate the jar and then poke around in it.
graphics and mobiles like android
congrats ! float support - nice. keep it up. and keep in mind sastrone's advice. 
Improve your knowledge of NIO and concurrency If you haven't done so already. 
Perhaps this doesn't sound as much fun, but doing some server side stuff would be a great idea! Maybe create a small webapp that manages bookings for a fictional laundromat. Check out [Spring Roo](http://www.springsource.org/spring-roo) If you've played around with this stuff, you might want to check out Java EE in general, but maybe that can wait until college :)
Scala
Garbage collection is a great field of study/experimentation. About bytecode manipulation: [Byteman](http://www.jboss.org/byteman) is an interesting project to mess around with bytecode too.
I think you understand now how Arrays work. I woul'd like to show you how to display them so you could visualize it better. But you have to know before how loops work. Here is one of the possibilities(let's do a 2x3 table): int i = 2, j = 3; // we fill our array first row with numbers 1,2,3 and second row with 4,5,6 int[][] array2d = {{1,2,3},{4,5,6}}; // this "for" goes over rows for(int row = 0; row&lt;i; row++){ // this "for" goes over columns for(int column = 0; column&lt;j;column++){ // here we print it out, and little tabulator between them to look nicer System.out.print(array2d[row][column]+"\t"); } // Here we add just two empty lines to make it look nicer :) System.out.println(); System.out.println(); } This prints a 2x3 table. In the first row you have number 1,2,3 and in second 4,5,6. To fully understand 2d arrays, try to make it on your own with different measurements. If you can handle that, try to fill it with random numbers, then with different row lengths and so on.
Google is your friend: http://leepoint.net/notes-java/summaries/summary-random.html and http://www.java2s.com/Code/Java/2D-Graphics-GUI/Imagecrop.htm Finding those wasn't too hard.
Class loading
I've been looking into it too, but with the versions all over the place and no solid book people recommend; I've been putting it off.
Maybe if he puts the source code
Sure... I can put up the source later today. I'm just finishing some minor stuff... (i.e., checking if the input values are valid, using try/catch blocks...). /taylor
I could not get through much of this. It is just a bunch of unexplained numbers with no background as to what they mean.
I agree with the dizzy part but the material was not compelling either.
Okay - here is the source code! https://gist.github.com/1388898
Google has everything you need to get started. The API and documentation they have is great. 
Hadoop!
If you use Java 7 you can put that if else block in a switch statement. Also, I woud have a Calc class and a CalcRunner class to run the app. Just my 2 cents but good job on getting it done. Also, it is convention to use CamelCase for class names. http://www.oracle.com/technetwork/java/codeconv-138413.html
I was going to post this so +1.
Look at writing a GUI. either Swing or FX.
lwjgl, I can't wrap my head around it :( just got a book on it though, so that might help :) also I would like to learn i/o
Great work! Care for some "challenges"? 1) Make *op* a character instead of a String. 2) Make the program use a [switch statement](http://docs.oracle.com/javase/tutorial/java/nutsandbolts/switch.html) instead of all of those if statements, and make it so it only does the arithmetic. After the calculations have been done is when you should output the information. 3) Either remove the *void askNum1* function, or create one function that you can call from *void main(String... a)* to acquire all the needed input. 4) Use a [java.io.DataInputStream](http://docs.oracle.com/javase/6/docs/api/java/io/DataInputStream.html) object instead of the *java.util.Scanner*. *Hint: new DataInputStream(System.in);* I'm not your teacher or anything, but if you're up for any of the challenges above, have at, and feel free to PM me for help. I ordered the challenges from (in my opinion) easiest to hardest. Keep up the good work!
~~http://pastebin.com/jsC5SmXU~~ [Turns out he posted it already.](http://www.reddit.com/r/java/comments/mmbum/calculator_finished_first_actual_java_project/c325ku8)
You can also check for memory allocated using JNI or JNA. Or memory used by java standard library, like leaked opened files or sockets, maybe awt/swing frames not disposed of.
It sure is. I wanted to develop a Android application as well but I'm waiting for ICS before I get started. I want to focus on the 4.0+ devices only at the moment.
You have 4 or 5 posts on my frontpage for this thing... anyway, congrats I'm glad you got it done.
AWS free tier for playing around. For anything more serious, I'd recommend a vps such as SoftLayer. There are a small handful of hosting providers that offer Tomcat environments (I think Heroku, for one), but I really think building out your own in a vps is the way to go - too many variables that need to be "just right" for your app; it's not like a LAMP stack.
If you are just looking to play around, install it locally on your machine. It's free, and give you some experience with administration.
I'm interested in this too. I'm personally not familiar with any managed Java hosting. I personally have VPS that requires I install and configure my own software.
I don't recommend them... but GoDaddy offers $7/mo servers that include Tomcat sharing. Your application is shared with other java apps on a single Tomcat instance. You have no control of the server and the best you can do is schedule to have it restarted once per/day. There's also some free/cheap cloud services that only cost when you exceed bandwidth and/or CPU utilization limits. One of them was named 'staked' (I think) but can't seem to find them anymore. I think someone bought them and changed the name.
Thanks! I ended up doing something similar, but I never saw this comment until now.
Thanks for the advice. I found a method that worked for me, but I'll look at this too.
Free ec2 instance is what I use. Little short on RAM, but for prototyping and having something on the 'net, it's perfectly fine.
I guess you want to turn, 1 1 1 1 2 1 1 3 3 1 1 4 6 4 1 into, 1 1 1 1 2 1 1 3 3 1 1 4 6 4 1 ?
&gt;building out your own in a vps is the way to go This is almost always a bad idea and a waste of time.
If so, you'll just need to add spaces and stuff. The exact number is up to you to decide.
I'm not going to do your homework for you, but I will give you a clue. You will need to insert spaces at the appropriate points between the numbers, like so (hyphens substituted for spaces): -----------1 ---------1---1 -------1---2---1 -----1---3---3---1 ---1---4---6---4---1 -1---5--10---10--5---1 You will have to work out the maximum line length before outputting anything to the screen. You will also have to work out the spacings on either side. I've used three spaces for the gaps, missing out one for two digit numbers. Best of luck!
Rimuhosting. 
Thanks for the challenges! I'm currently working on a GUI version of the calculator that has a new algorithm for accepting inputs such as 4*3+12-6/2, and pulling that all into order of operations, and then solving. You can check out the GitHub post here: https://gist.github.com/1389236 But again, thanks for the challenges! Much appreciated.
Ha! I win! I bet a friend that someone would have decompiled the code, and you did! Cheers!
Thanks!
I agree. Amazon AWS is a great option.
I've looked at [cloudfoundry](http://www.cloudfoundry.com/). The open source version you can install locally was meh, but I'd hope what they've got running on their own cloud service worked a lot better. I just run a VPS myself, because I do much more than java software and like to play around with the entire stack.
In ChangeLights, run checkForWin at the end of the method, and not after you change each individual light.
I guess you could check for the victory conditions after you updated the board. So instead of calling CheckForWin in each step in ChangeLights, you call it once at the end.
You sir are a genius. Thank you!
Thank you!
If I understand what you mean the debugger in Eclipse will let you do this: 1 Window - &gt; Open Perspective -&gt; Debug 2 Set breakpoint 3 Attach or begin debugging 4 Window -&gt; Show View -&gt; Variables
Eclipse has a nice built-in debugger, just pick "Debug" instead of "Run". Be sure to set some breakpoints by clicking in the margin to the left of the line, and when it asks you to switch to the Debug perspective, say yes. There will be a section in the top right with variables.
Have you tried the Display window? Set up a break point when it stops type in the Display window, highlight and evaluate, it lets you call methods and display data as code fragments.
Free? Wow I didn't know they offered it. How much disk/ram do you get?
Ok, so I'm having trouble seeing variables from a Class after I call it. I set the break after I call a function from a class(set the break right after I call the function) and I can't see any of the variables from that class.
JSON stands for JavaScript Object Notation, and it is a serialization format for data. You would read that in with a library like GSON or Jackson. JSON is effectively a huge map of keys -&gt; values, and the JSON library will wrap that up into a Java object you can easily work with. The runescape API docs should tell you the best ways to retrieve data, then just parse the response with the JSON library of choice, then analyze away!
Nice work! I [made](http://codepad.org/3Tkp73Qw) a few changes, you can take from it what you will. I cleaned up a little bit of the GUI code. It's not perfect since it doesn't place the numbers in the "correct" location, but that can be done reasonably easily. I wasn't sure what the purpose of the `lastType` variable was, but it looked like it ought to be an Enum, so I made it one. If you're making a Frame you shouldn't do things like set the DefaultCloseOperation in the constructor, nor make the frame visible. That should be up to the caller, in this case just the main function, but still. It may be that I incorporate your Calculator frame into a larger program, I don't want the whole program to close because they clicked the 'X' to get rid of it. Rule of thumb, if you have to start numbering things you're probably doing it wrong. Not sure what your plan is for the Solver, but you might take a look at converting the text into reverse polish notation then using a stack to calculate it. Search for Expression Solvers using Reverse Polish Notation (or RPN). 
You get a free micro instance. The specs change because it's based on some crazy formula, but the details are here: http://aws.amazon.com/ec2/#instance
Set a breakpoint inside the function of the class? Otherwise if you hover over the class instance the inspection popup ought to appear with the information you're looking for.
So that should be in the Variables window. Did you switch to Debug perspective, Variables window is part of it and Display window is used in conjunction to dynamically evaluate function calls without adding them to code.
Well, I don't know that any professional software shops use BlueJ as their development tool of choice. I suspect NetBeans and Eclipse are the front runners there. That said, I'm not quite sure what you're worried about. You write the same code in whichever editor you choose, some just make certain things easier like content assist, automatic import, refactoring tools, etc.
GSON is really easy to use. It is google's implementation of a JSON system in java.. I would highly recommend using it. 
Thank you for the reply. So you can code anything in BlueJ? I had only previously coded in VB.NET so I am just worried about the UI side, I don't see how I could effectively make a UI, or a game interface or anything, while using BlueJ. I've had the impression since the start of term that BlueJ is simply a dumbed down code editor which was created with the sole purpose to teach the basics of OOP to beginners.
You've become adjusted to having drag and drop GUI editors. They exist for Java IDE's as well. I'm pretty sure Netbeans ships with one and there are plugins for Eclipse. The truth is that most GUI development in Java is done by hand, which is actually a lot easier than it sounds.
I don't know if you are familiar with Runescape- but where would I find the Ruescape API docs? I tried googling but couldn't find anything useful - just deleted forum posts. Thanks a lot though :D
I don't think you'll be hurting yourself by using BlueJ, but using too many tools can hinder your understanding of what is happening behind the scenes. Build as much as you can manually while you're learning, then switch to GUI builders and other tools once you understand. As Neres28 said, Java is Java, and IDE choice is an important, but secondary concern. Eclipse, Netbeans or IntelliJ are the IDEs you'll usually find in the professional world. Netbeans and IntelliJ have out of the box GUI builders, and there are plugins for Eclipse like Jigloo. I have never used BlueJ, but I'm partial to Eclipse. The plugin ecosystem is vast and diverse, and I like the editor the most. The quality of the code editor is most important, IMO, as that's where you'll be spending the vast majority of your time within the IDE. Learn ALL the keyboard shortcuts! 
Sorry - I just kind of assumed there was an API, as that's what your URL looks like, and I have no idea where any documentation would be (I don't play runescape) :P Random other notes: Is the number some kind of item id? You could just experiment by sending requests for 0.json through a billion.json, and record which actually returns results to find the upper limit. I would implement caching, so you're not constantly hammering their servers (that might get your IP banned or other sad things). You'd do this by periodically (daily?) scanning the whole range of items, then saving them all to file somewhere. Your code would then read from these files through your own abstraction, rather than from the webservices. 
We used BlueJ too I even installed in on my home computer. I stopped programming for a while and I decided to try eclipse. I will never go back. You have so many more options, line completion type System. and you see all the options. You have a nice project list on the left and the debugging mode is superb but all in all you programming will be the same. I just find eclipse 10x better myself.
Netbeans has a great built in tool to build a gui. Drag and drop what you want and then change fields. You can then switch over and look at the code it auto generated and take notes.
Didn't think about that. I'm kind of new to programming (I'm a finance major lol) but I'll try to figure out exactly how to do all of this. Thanks.
Apart from using breakpoints some quick and easy ways to track variables is to use print statements and temporary variables. It's not the *right* way to do it but it's quick and easy because you can run it without debugging and see how the variables change while the program is running. During a games programming module this was the quickest way to debug. If I had used breakpoints it would have required me to step through the program which is slow compared to watching the variable change at run time.
Cool story bro
I used to use BlueJ for development and I had no idea how to open up my programs without it. But I started using vim and now I know how to compile and run my programs without an IDE. My advice for you would be to learn how to do it all without an IDE that way you aren't dependent on any one particular setup, and then later if you think you need an IDE go ahead, and then you'll have knowledge of how it works behind the scenes which is very useful.
I second the Eclipse debugger. It is amazing, although it can struggle if you suspend during execution rather than at a breakpoint.
The introductory CS class i'm taking right now uses BlueJ. Sure it is nice too be able to visualize objects vs classes and walk through the object hierarchy, but I hate writing code in it. No in-line error checking, no auto-completion, no easy refactoring. It's good for teaching absolute beginners about objects, but I would never use it for anything else.
kattare.com
Im not sure about writing the same codes,but BlueJ is better in my opinion.Eclipse is sooooo too easy.It does like half the things for you.Bad in my opinon unless you need to do somthing quick.
I used BlueJ in my entry-level compsci class as well. At first, switching to Eclipse confused me but as I played around in its settings and window layouts, I became comfortable enough to begin using it instead of BlueJ. It's definitely a switch worth making. BlueJ does have a few great features that I miss in Eclipse, mostly the ability to instantiate classes and run their methods without writing tester methods, but Eclipse is a great IDE that you'll probably end up using. Coding is coding, and source code will work the same no matter where you write it, but Eclipse helps you out a lot more.
Yeah but with eclipse you see your mistakes and start to learn that youre making them and are more aware of them. Also the auto complete shows you a method you might not have seen in the api documentation or learning something new such as swing.
I don't know what you mean by "on the right track", but it's good you're enthusiastic. I can't really offer you any tips, because especially in computer science you have to learn your own lessons, but if there's one thing I've learned, it's that Google is your very best friend, especially for learning new techniques. 
First, don't use == to compare Strings, use .equals(String) Second, your real problem is: if(op=="+"){ System.out.println(num1+" + "+num2+" = "+(num1+num2)); } if(op=="-"){ System.out.println(num1+" - "+num2+" = "+(num1-num2)); } if(op=="*"){ System.out.println(num1+" * "+num2+" = "+(num1*num2)); } if(op=="/"){ System.out.println(num1+" / "+num2+" = "+(num1/num2)); } else System.out.println("Invalid operation, try again."); The "else" at the end *only* links to "if(op=="/")", not the rest. This might help illustrate how this looks to the computer: if(op=="+"){ System.out.println(num1+" + "+num2+" = "+(num1+num2)); } if(op=="-"){ System.out.println(num1+" - "+num2+" = "+(num1-num2)); } if(op=="*"){ System.out.println(num1+" * "+num2+" = "+(num1*num2)); } if(op=="/"){ System.out.println(num1+" / "+num2+" = "+(num1/num2)); } else System.out.println("Invalid operation, try again."); //This code will run if op is anything except "/". This includes if "+", or "-", or "*". Instead of a series of ifs, use else-ifs. if(op=="+"){ System.out.println(num1+" + "+num2+" = "+(num1+num2)); } else if(op=="-"){ System.out.println(num1+" - "+num2+" = "+(num1-num2)); } else if(op=="*"){ System.out.println(num1+" * "+num2+" = "+(num1*num2)); } else if(op=="/"){ System.out.println(num1+" / "+num2+" = "+(num1/num2)); } else System.out.println("Invalid operation, try again."); If you have any trouble understanding why, let me know and I'll try to explain it better, but make sure you understand why.
Thanks. Your comment has inspired me. +1 would comment again.
Due to how Java handles Strings, you can often actually compare them with ==, because they're immutable objects in a pool and String hi = "hello" and String howdy = "hello" both point to the String literal "hello". This doesn't hold if one of the Strings has been interned, or was created with new String(String s) That being said, it's good practice to use .equals(String)
disagree. I spent about 8 months on a shared host that offered lamp and java and 8 or 9 more things... had nothing but problems there in that time, from wars not exploding properly to the site throwing 500s for no apparent reason. the support guys spent a good bit of time trying to fix the root cause but never got it. I spun up a vps with only what I needed on it and have had 0 problems since.
It's not the wrong way either. If you're debugging a for loop, for example, I would argue that it's the best way, aside from perhaps setting conditional breakpoints if that's even possible for your code. But an informative print statement goes a really long way in my opinion. I rely on them almost as much as the debugger, though for different reasons. 
Like everything it all comes down to how much you put in. Get involved in projects that interest you (If you cant find any create your own) and start your assignments early.
It's absolutely the right thing to do, if done right. That's the point of logging levels, and any logging framework will let you configure what levels actually get logged. So, you can turn off debug logging for production deploys and leave it on for development. No spammy logs, yet the fine detail will still be there if you need it - that kind of information is invaluable for field troubleshooting. For Java, there's log4j (optionally combined with Apache Commons Logging), which everyone should use for every single project, IMO. 
Give OpenShift a try: it is completely free PaaS you can play with Java, PHP, Ruby, Python, super simple and enforces good deployment practices https://openshift.redhat.com/app/platform
Check out [Jackson](http://jackson.codehaus.org/). It's awesome for parsing JSON into convenient objects. Super easy to use, and very fast. It's one of my favourite libraries ever.
Would you care to elaborate as to why it is a waste of time? I've been doing VPS management of various websites over the last few years and I'm very much a fan of them.
&gt;I've had the impression since the start of term that BlueJ is simply a dumbed down code editor which was created with the sole purpose to teach the basics of OOP to beginners. We have a winner. From my experience with BlueJ at University, that was the whole point of using it. That newbie programmers could see Objects represented, and interact with them easily. Trying to do GUIs in BlueJ nearly drove me insane, but saying that, the drag-drop editors for Eclipse and Netbeans do their fair share of that.
..on that note, I always thought if I was to ever write an instruction book for java I would call it "Java for the lazy" it would anger purists but It would be for.. well, the lazy. I would teach the fundamentals using an IDE like eclipse, I would teach how classes and inheritance work the MVC method and then the rest would be how to google what you are trying to do. In other words.. how to build your framework then copy code from google examples. hah. So yes, I totally agree with your statement "Google is your very best friend" Its near impossible to know everything.. or at least remember everything, so fill in the blanks with a all knowing community of help. Then try to retain what you have learned so you dont have to google the next time.
Eclipse can do debugging (which includes the features you're looking for), as others have mentioned. You may also want to play with [VisualVM](http://visualvm.java.net/) which lets you poke around at the JVM, including memory allocation, performance, etc.
Yeah I think I'm gonna have to stick with this. The debugging in eclipse isn't Behaving how I expected it would. Can't see the variables I figured I should be able to. 
Yes I'm in that view. I can only see one layer of class information. I have my main program file. It creates an object. One of the functions in that object creates another object (different) and I can't see any info about it. 
Start with blue j, it's easy to use and makes you do everything manually which is a great learning tool. With this in mind note that you aren't going to see blue j after your first or second OOP class, you will want to move on to something like eclipse for more advanced work. Blue j will in no way inhibit your programming abilities, it will make you learn the fundamentals well which is very important, best of luck!
Well the image thing was what I was after, I wasn't sure what to google, as for the randomthing, I hadn't tried yet but since I was posting I threw it in, I googled it right after, but thanks loads for the image link
IntelliJ does the same, and is my preference. YMMV.
Ive been waiting for a switch statement with strings since forever
I'm a Second year CS student in South East England who uses BlueJ. I came into this degree with some basic concepts of programming but not any of object oriented software design. BlueJ's [interface](http://cl.ly/3I0f2w2Q3I1q1F101f0i) (that's my current coursework) shows you what classes use what other classes, inheritance and even allow you to create objects in the "bench". When I started programming in BlueJ I found the concept that we'd be stuck in this crappy application troubling, however it's been a very useful learning tool over the last 14 months. BlueJ doesn't actually add or take anything from your project so anything that can be done with Java can be done in BlueJ given time. With regards to other IDEs like Eclipse, I wouldn't worry to much about applying your coding skills. Learning the language is learning the language at the end of the day, you should still have a decent grasp of the Syntax and API when you move on from BlueJ. Eclipse is something you want to start playing with ahead of time download it and start messing about, do your class work in BlueJ then try those tasks in Eclipse and see if it adds anything to your experience. Disclaimer: I won't use the text editor built in to BlueJ as it hurts my brain/eyes/soul, I use a real editor and would recommend you do too.
UI in java is generally done by hand. 
Not sure this is even accurate didn't language level collections support move to 8?
I wonder why 0x_cafe_babe is illegal. Underscore after 0x is more readable than 0xcafe_babe.
Language support for collections has indeed been [deferred to Java 8](http://openjdk.java.net/projects/jdk7/features/#deferred). Thanks for pointing that out.. I have updated the blog accordingly.. I have also re-checked rest of the features that I mentioned there and rest of them seems fine.
Is the second object assigned to a variable that is in scope? If not in immediate scope you can try using the Expression window to manually specify the object if it happens to be (say) static member of another class not in immediate function scope. If it is in scope of the class you are debugging it should be in your Variables window under 'this' variable.
You might get some pointers from [here](http://blogs.oracle.com/darcy/entry/project_coin_literal_grammar_hackery)
If you're in Europe then buy a VPS, I recommend Hetzner. For around 120 euros/year you get a very good machine.
I'd say one of the first things you want to learn are methods, along with their different return types, and the different type of classes/how instanctiation works(I probably butchered that spelling) Depending on how you learn, one of my best ways to learn was by looking at the code for some games, my main game was asteroids. paired with google that's where most of my learning came from.
So games that are programmed in Java, all of the menu's, interfaces, etc, are all coded in directly using coordinates and such, with no drag/drop/drawing tools used to help?
There are tools for all of those things you mentioned, but in my experience they are generally unsatisfactory. I'm sure there are people out there that use a WYSIWYG editor for that, but Java isn't exactly the language of choice for game design and the tools for it are lacking.
So for someone wanting to learn Java and OO basics it is good?
Strings in switch statements are only a very minor convenience... of all the great features being added, this is the feature I find least interesting.
Please don't log and rethrow exceptions. 
I would describe BlueJ as educational software. It's best feature is the UML diagrams it generates based on your code, so it's REALLY good at letting you explore Object Oriented Design. As for writing production code, it's not designed for that.
Though this doesn't really help you given your toolset, I feel it necessary to point out that the Netbeans debugger is great (and does what you wanted). It basically does everything Eclipse does, but I find it easier to set up and get working out of the box.
What I did in one of my projects: When the GUI code is instantiated, it runs this function: public void takeOutput() { PrintStream ps = new PrintStream(new OutputStream() { private PrintStream oldps = System.out; @Override public void write(int b) throws IOException { oldps.write(b); String s = new String(new char[] { (char)b }); textOutput.append(s); textOutput.setCaretPosition(textOutput.getDocument().getLength()); } }, true); System.setOut(ps); System.setErr(ps); } textOutput is a TextArea of some sort. This way, if the gui isn't instantiated, then System.out.println() does the right thing. And if the gui is instantiated, then System.out.println() does the right thing and is additionally copied into the gui. None of my other code needed to be aware I'd changed anything at all, and it still runs successfully at the command-line without a display Obviously the same thing works for System.in too. I collapse together stderr and stdout, but you can keep them separate if you prefer. I thought that was pretty simple and elegant :-)
Awww shit I haven't checked that. I bet that's where it is. Thank you Edit: Nvm it's the scope issue. 
My guess is that this is a threading problem. That's a spinlock you've got there and the underlying boolean is not `volatile`, so it's probably not updating as you expect it to. A spinlock is a bad idea anyway; using it is a sign of poor design. Instead, try using a [CountDownLatch](http://docs.oracle.com/javase/6/docs/api/java/util/concurrent/CountDownLatch.html). Edit: Here's the working version: http://pastebin.com/yAHMHhaX You had two more problems. A `keyTyped()` event doesn't set the `keyCode` but the `keyChar`. Second, you were putting the listener on the wrong component (`in` rather than `this`). 
Every keystroke of "while(true)" made my fingertips burn, I assure you. That's a neat class you've got there, and the code was very helpful! Thanks muchly. The other two issues I found shortly after posting and have fixed.
The way I read the comment, KevZero was suggesting writing your own servlet engine, or something like that. building a servlet engine from scratch is a HUGE undertaking. You have to understand both the entire HTTP protocol and the entire servlet api. And, once you've spend all that time rewriting the engine, you still have to build an app to run. Now that I re-read it, he might have meant not using a hosted version of Tomcat, but building a vsp with tomcat and what-ever. Assuming that's what he meant, I agree with with him. Sorry for the confusion. 
Why not?
my java teacher showed this in his class (face palm)
Google is no substitute for a mentor, but it can be a great way of learning new techniques and how to use some of the built-in classes.
Post your source code.
There is a way to do this using Anonymous Classes and sort-of nesting ActionListeners. As skeeto said, if you post your source code we can help much better. :D
Kk, let me know if there is anything else from the source that you may need.
It seems like you're trying to turn the button back into a coordinate position on the grid? You could try to store the coordinates inside the button, through subclassing or sneaking it in as a String in `setActionCommand()` (very sloppy). Or, a better solution, use a Map. Map&lt;JButton, int[]&gt; map = new HashMap&lt;&gt;(); When you generate the buttons, map.put(grid[x][y], new int[] {x, y}); Later in your ActionListener you can pull the coordinates back out, int[] coords = map.get(e.getSource()); /* Check for null if you're listening to other buttons. */ int x = coords[0]; int y = coords[1]; 
Thank you that seems like a good solution.
The cleanest way to do this is to simply do two things (this was alluded to below but I don't really feel like they explained themselves). Oftentimes when faced with the prospect of creating complicated if statements in your code (IE if x = 5, y = 4) for all of your x positions, there is a spot in the code where the context is such that this is already known, and therefore you can avoid the if statements entirely. A great game to play while doing object oriented programming is to see how many if statements you can avoid, simply as practice. In this case, you are initializing n buttons where n = width. Each of these buttons is a JButton, and is being added to a grid. Instead of using JButton, I suggest extended JButton instead, and calling it something like MappedJButton. Create a constructor in this object that uses the same parameter as the JButton constructor you're using, but add in an extra parameter, a point indicating the location you created it at. So instead of new JButton(""+x+","+y+"");m it would be new MappedJButton(""+x+","+y+"", new Point(x,y)); Then, you would just add a getter to this new button. In your action listener, you could simply cast the button into MappedJButton, and pull the point out of it. This is, of course, the same solution offered by skeeto, but a cleaner and more versatile way of doing it, since if you needed more functionality than just knowing the location of object X, you could add it in later using your subclass to JButton. In other words, the map only solves the problem of knowing which point is associated with a button; the subclassing, however, allows you to do a great deal more. For example, you could add a custom image to the button if you wished or cause that particular type of button to have custom mouseover text, draw itself differently, use an enum to indicate what kind of ship it was associated with, etc. If I had to guess, I would say you're making a battleship game.
Take every last assignment seriously; there is always something and more to learn while programming. But more than anything else, develop style. The real name of the game in programming is agility - the ability to code quickly and well. The better your style, the better you will be able to do that. Whatever you write, destroy it and make it better. The first time you create something will always be sloppy. You can always do it better the second and third times. Especially when you're starting out, don't focus too much on design. Sometimes, particularly when you're stumped, the best thing you can do is just sit down and hack. Hack until it works, then go back to the design phase and put it together better now that you know how it works. Also, print statements are your friends, especially early on. Anytime you're confused about output or intermediate state, construct a well-written print statement that explains exactly what's going on, and run the program. One last thing, and this is something that I didn't get for awhile. Computer science isn't about programming, at least not entirely. It's also about math, and lots of it. If you grasp the programming and get good at it, you've learned a lot, but if you do that and also learn the math, then you've really got the key to go just about wherever you want. Take the math seriously (a lot of people in CS don't), and you can write your own ticket.
Sometimes this is the only correct way to handle an error. Imagine you are writing a service which is used by your frontend. Your service interacts with the a DB through JPA. Your frontend knows nothing about JPA, nor should it. So, if you simply let the service throw JPA exceptions, you would have weird unknown classtype errors in your frontend whenever something went wrong with JPA. The correct thing to do is to catch the JPA exception in the service, log it, and throw a service exception.
You have the array Vehicle[] vehicleArr; you maintain a counter of vehicles added e.g. int counter = 0; when a new vehicle is added add 1 to the counter, you use this counter to add to the array e.g. vehicleArr[counter] = new Vehicle();
Yes. Most screen positioning in java is relative to something. You never use absolute coordinates of GUI elements on screen anyway (each screen/device you run on is different anyway). Hand coding GUIs is not only most flexible way to work, it's also the fastest.
Eclipse also has Swing and SWT designer out of the box, but it's not used much. Generally no GUI layout designers are used in Java except perhaps by some people for simple dialogs and property sheets (even though writing code to auto generate one for you is trivial as well). 
Don't use an array for this, problems like these is exactly why you use a Collection, for example ArrayList.
Lazy programmers can use grid[x][y].putClientProperty("myXY", new Point(x, y)) to store additional button data without subclassing :) In ActionListener you can just do: Point xy = (Point)JButton.class.cast(e.getSource()).getClientProperty("myXY");
This. Unless you are trying to eek out the absolute most in performance or memory usage, use a Collection. ArrayList will do exactly what you want, and do it much better. And because you know the max size you want (10), you can tell the constructor the size and it won't need to re-allocate the array. 
Hmm, I will have to look into this, Thanks guys. And who keeps downvoting my posts to this sub-reddit?
Not me. Yet. /r/javahelp is there because at lot (most?) of us don't want this kind of post here. If there's no one in javahelp, then well, unlucky.
I usually use something like [this](http://pastebin.com/7UAsQ147), it makes the movement much smoother.
why doesn't everyone give this horrible advice to newbies? do you want a generation of programmer than has never used an array? that doesn't know underlying data structures? that couldn't tell you what the bounds of an array are?
&gt; you can do this: vehicleArray[vehicleArray.length] = x; No, you are completely wrong. vehicleArray.length is 20 and will so remain.
A few more suggestions: - Instead of using veh1, veh2, veh3, allocate an array with three elements and use veh[1], veh[2], .... This also applies to all the other variables that are allocated like this. - Consider making your function easier to read by splitting it into smaller methods. The general rule is: if your method is longer than 100 lines, it is too long. If you ask me, that number should be ~40 in most cases. - Judging from his biography, if you showed this code to Steve Jobs, he would throw it back in your face and tell you it was "shit". Of course, he wouldn't have read it.
I would rather have a generation of Java programmers that have never used an array, than one who has never used an ArrayList. It's better to learn the prefered method first, and then learn special cases later.
No its better to learn to be a programmer first then how to be a java developer.
If you take that argument to its logical conclusion we would have people learn machine code before learning higher level languages.
No, not really. Everyone should learn as you are taught at good colleges. Fundamentals first, and that most certainly includes arrays. That is typically, 90+ percent of the time taught in a reasonably high level language. Next you'll be telling me he should use for-each loops and who cares when if learns how a loop actually works! sure why not comparators instead of ever learning a sorting algorithm!
Well. If I show my code to Steve Jobs now, he won't be doing that now.
Fair enough, i agree to an extent. I would much prefer if both were taught, but that the prefered way be taught first. 
&gt;Vehicle[] vehicleArray = new Vehicle[20]; As long as vehicle array is not null and length is less than capacity (20 in my example), you can do this: vehicleArray[vehicleArray.length] = x; *cough* ArrayIndexOutOfBoundsException *more coughing*
Make a subclass of JButton that takes two ints into its constructor, x and y. You can use those to build the string to pass to the superclass's constructor, then store x and y as class-level variables. When you get to the ActionEvent, cast the source to your new subclass then retrieve x and y from it.
Swing probably combines the two repaints into a single event : From [here](http://java.sun.com/products/jfc/tsc/articles/painting/#swing) : &gt; NOTE: if multiple calls to repaint() occur on a component or any of its Swing ancestors before the repaint request is processed, those multiple requests may be collapsed into a single call back to paintImmediately() on the topmost Swing component on which repaint() was invoked. For example, if a JTabbedPane contains a JTable and both issue calls to repaint() before any pending repaint requests on that hierarchy are processed, the result will be a single call to paintImmediately() on the JTabbedPane, which will cause paint() to be executed on both components. The point about not calling repaint at the end if nothing has changed is probably good though.
Thanks everyone. I'll try them out. I might do my own and then try amazon too. 
Yup, this is the way you want to do it. The OP's code ties the movement speed to the properties of a particular user interface. That's a bad coupling. 
You need to draw more frames per second. I'm not sure swing it up to the task.
Thank you for your answers, I'll give them a try.
&gt; The Array has 10 slots and I want it to write the new vehicle name &gt; to the next available empty slot. How is this possible? You need the array + one variable that keeps track of the next free slot. However, as kreiger says, it sounds like you should probably just skip that and use a Collection of some sort instead. Arrays are great for high-performance stuff, but usually a Collection is more than enough. &gt; Please don't judge my coding Standards or formatting. It's pretty &gt; messy atm! Never say that. Do yourself a favour, and keep it tidy from the start. Tidying up is much harder than not making a mess in the first place. Particularly as far as formatting is concerned. I've never seen a piece of poorly formatted code that was worth keeping. (FYI: I never saw the code. Pastebin just hung for me.)
Arrays are usually unnecessary complexity. The main thing programmers need to learn is to not to make things harder for themselves than they need to be. Programming is already plenty hard. Yes, doing a course or something on basic datastructures where you implement things using arrays is a very useful exercise. But that's entirely separate from writing working code.
Swing is up to the task, but you probably want to do active rendering rather than passive rendering. See http://docs.oracle.com/javase/tutorial/extra/fullscreen/rendering.html
I hate to be the bearer of bad news, but you'll probably want to re-architecture your program from scratch. For writing a Java game, you'll want to ignore repaint requests, and handle the rendering loop yourself. See, for example, http://docs.oracle.com/javase/tutorial/extra/fullscreen/rendering.html
You don't use coordinates, but rather "layout managers" which describe how to position each UI element relative to each other UI element. In the case of Java, this is a necessity, because the various widgets (buttons, radioboxes, etc.) all look different on different OS, and a Java program is cross-platform. Layout managers is the "right" way to do things even in single-platform languages like VB.NET. I've ran into amateur programs on Windows before which don't handle the zooming feature properly: In Windows, you can specify that you want all the font size to be bigger (e.g. because you have poor eyesight) and if you hardcode the coordinates, the buttons will overlap with each other and/or be too small to contain the text labels.
As a purist, your post is making me very angry.
&gt; lwjgl, I can't wrap my head around it :( Take a look at Slick, which is a wrapper around lwjgl with a slightly higher level API. That is, assuming you're not trying to do 3D, because Slick doesn't support 3D.
not trying 3D
So definitely give Slick a shot: http://slick.cokeandcode.com/
separate to lwjgl or an add-on?
It's a wrapper, meaning Slick includes lwjgl as one of its components.
okay :) thanks :)
Could you be more specific? Callback method is a generic general use term unless I'm missing out on something - and generally involves simply supplying a reference to one object from another and making use of the first objects methods, or setting up something in a static context. If you provide a simple example of what you would like to do, I'd be happy to give and example of how to do it (and why)!
Well, I'm trying to understand how it works. The entire concept is boggling the mind. I know what interfaces are, they're classes that define methods that must be called by the class that implements the interface..I just don't see how it's being used to call a function at some later time.
Are you talking about anonymous classes that are being passed to "AddMouseListener"? Basically, it's just creating a class with a specific interface so that the mouse listener can call that class' method which will call back into your class. It's more revealing when you look at the object files and see these additional object in addition to the object files that you expect. If you compile your MyClass.java, you'll get a MyClass.obj but you may also get something that I *think* looks like MyClass$something.obj which indicates that there's an inner class. If the inner class is anonmous, won't have a clear name. Edit:In short, the magic is that it's just an anonymous class. addMouseListener (new Mouselistener() { public void onMouseDown(MouseEvent e) { dosomething();}}); Keep in mind that I haven't looked at this in ages so I might get the syntax slight wrong. 
Thanks, I have seen this explained like this 1,000 times, I still don't understand. I am willing to pay 10 dollars via paypal if someone can get me to understand how this works
Edit: better example that compiles. This is essentially an event pattern. The three example classes essentially do the same thing. They register 2 callback objects made from callback classes and then trigger an event. you can run each example class. The first one has explicit callback class. The second one has what's called an "inner class" which s really just that. A class within a class. usually, you use inner classes if you don't ever intend on using the class outside of the other class. It keeps a certain scope. An anonymous class is a type of inner class where you don't bother to give it a name. There's a slight difference in the Anonymous example. because technically, you are creating a class definition twice and then implementing it once for each. So in the first two examples, you've created one class definition that has two instances of it made. 1 cookie cutter, 2 cookies. The anonymous classes are like creating a quick and dirty cookie cutter, cutting a cookie and then throwing away the cookie cutter. It's a class definition with the "head" or the name stripped off. It's why there's two separate you can have 2 println statements for each of the anonymous classes. In response to your question about interfaces. You can't create an instance of an interface. An interface is nothing more than a promise that an object is going to contain a method. In my case a "doEvent". you can't create a instance of EventListener. But you can create an object from a class that implements EventListener. The reason you have interfaces, is that you can treat different objects as if they were of that type. In this case EventListener. A more concrete example of an Interface is that "Rollable", A car, a rock and a log all could be examples of "Rollable" so you could call a method "Roll()" because all 3 implement it. How they roll could be completely different... but they will all be guaranteed of having the ability to Roll. But you can't create an object from "Rollable" because you don't know anything about how it rolls. I always imagine them like a person wearing costumes. A guy can put on a "fireman" interface or a "cop" interface and they can do that job... but the person inside doesn't matter... because when they are wearing the fireman costume, they can put out fires... but the costume itself doesn't do anything. Make sense? //================================================ interface EventListener { public void doEvent(); } import java.util.Vector; //================================================ class EventGenerator { Vector&lt;EventListener&gt; collectionOfSomeInterface = new Vector&lt;EventListener&gt;(); void addSomeInterface(EventListener i) { collectionOfSomeInterface.add(i); } void TriggerEvent() { for (int i = 0; i &lt; collectionOfSomeInterface.size(); i++) { EventListener temp = collectionOfSomeInterface.get(i); temp.doEvent(); } } } //================================================ class ExplictEventCallback implements EventListener { public void doEvent() { System.out.println("Event with explicit callback"); } } //================================================ class ExampleWithExplicitCallback { public ExampleWithExplicitCallback() { EventGenerator container = new EventGenerator(); container.addSomeInterface(new ExplictEventCallback()); container.addSomeInterface(new ExplictEventCallback()); container.TriggerEvent(); } public static void main(String[] args) { new ExampleWithExplicitCallback(); } } //================================================ class ExampleWithInnerCallback { class InnerEventCallback implements EventListener { public void doEvent() { System.out.println("Event from InnerEventCallback"); } } public ExampleWithInnerCallback() { EventGenerator container = new EventGenerator(); container.addSomeInterface(new InnerEventCallback()); container.addSomeInterface(new InnerEventCallback()); container.TriggerEvent(); } public static void main(String[] args) { new ExampleWithInnerCallback(); } } //================================================ class ExampleWithAnonymousCallback { public ExampleWithAnonymousCallback() { EventGenerator container = new EventGenerator(); container.addSomeInterface(new EventListener() { public void doEvent() { System.out.println("Event with anonymous callback A"); } }); container.addSomeInterface(new EventListener() { public void doEvent() { System.out.println("Event with anonymous callback B"); } }); container.TriggerEvent(); } public static void main(String[] args) { new ExampleWithAnonymousCallback(); } }
Sort of, yes, it's magic, but more specifically, it's reflection.
&gt; they're classes that define methods that must be called by the class that implements the interface Well, that's not really correct. An interface is an entity that describes various methods, but does not contain any code for these methods. Any class that implements this interface must provide code for each of these specified methods. 
Err.. no, it's not. Or not necessarily.
Don't confuse yourself by imagining it as being more complicated than it really is. All that's happening is that a class is creating an instance of an inner class (likely anonymously, by implementing an interface) which can see the state of the outer class. The inner class is passed to another object as an argument; when that other object wants to send an event back to the class which called it, it uses the inner class to do so. Example below. The instance b can see (and modify) A's state; C cannot do so, except via the callback provided by b. A { int a; b = new B { somemethod() { a = 2; } } C.doSomething(b); } C { void doSomething(B b) { b.someMethod(); } }
Good sir...first..thank you.. Now in these examples I've noticed that instead when the Vector has asked for an interface object you give it the class that implements the interface object instead of the interface object itself, is this standard? Where is the 'dynamic' part of the code running? Callbacks are meant to be called when something triggers it, is it being triggered when we call the addSomeInterface method--at that point it runs the SoomeMethodName() method? 
You're seriously overthinking it. Imaging I pass an Integer as a parameter to something else: Integer foo = new Integer(42); bar.printParameter(foo); Now imagine that bar.printParameter is written like this: void printParameter(Object something) { System.out.println(something.toString()); } If you can grasp the fact that **toString()** gets called on **foo**, congratulations, you understand how a callback works. What you're missing is the concept of the **anonymous inner class**. [Here](http://www.javaranch.com/campfire/StoryInner.jsp) is a quick tutorial I found on how an inner class works. Once you get through that, you can read [this](http://www.tek-tips.com/faqs.cfm?fid=1849) which gives a short and sweet example of what an anonymous inner class does. You can also Google "java inner class" and "java anonymous inner class" to learn more. HTH.
You will need to use swing. If you are using an applet, it will be your top level container so everything will have to be rendered within the applet window, or pop out from it. Netbeans, eclipse and IntelliJ all have a guibuilder. I don't use them but I know they are there. I would suggest playing around the contents of javax.swing.* and reading http://docs.oracle.com/javase/tutorial/uiswing/components/index.html 
InfernoZeus is correct. So what would you use an interface for? Lets say for example that you have three different types of classes, A, B, and C. All are unique and don't really have much in common. However, they do need to share one ability, and that is the ability to print their contents out to the screen. And lets go one step further and say we have a class called Printer. Its only job is to print things to the screen, whatever they maybe. This is the perfect situation for an interface! If we define a method called getTextToPrint() in each class (A, B, C) without an interface, the Printer class doesn't have much to work with. It would have to have a special print method for each class type, something like this: public class Printer{ public void print(A someA){ System.out.printlnt(someA.getTextToPrint()); } public void print(B someB){ System.out.printlnt(someB.getTextToPrint()); } public void print(C someC){ System.out.printlnt(someC.getTextToPrint()); } } That's a lot of repetition! Instead, lets define an interface called Printable, and let each class use it. Then our Printer becomes much simpler: public interface Printable{ public String getTextToPrint(); } Now, lets let A, B, and C implement it: public class A implements Printable{ public String getTextToPrint(){ return "some text unique to A"; } } public class B implements Printable{ public String getTextToPrint(){ return "some text unique to B"; } } public class C implements Printable{ public String getTextToPrint(){ return "some text unique to C"; } } public class Printer{ public void print(Printable p){ System.out.println(p.getTextToPrint()); } } Here is what is happening. Languages like java require you to specify the types of parameters. So, our print method defined A as a parameter type in the first print method in the first example. However, what about printing Bs and Cs? We can't send a B to a print method that expects and A. What to do? We define an interface that guarantees to java that all classes which implement it will have a certain method. How that method works is left up to the class, but if the class implements that interface, then it is guaranteed to be there all the same. So we make A, B, and C implement this interface. We also define the print method in the body of each class (this is the implementation of the interface!). The interface can be thought of as an implied type. A, B, and C are all unique, but they are all *Printable*. Therefor, we can write a method in the Printer which accepts Printable objects (or classes that implement Printable). Since A, B and C are all printable, we only need one method which accepts an object of type Printable. We know the getTextToPrint() method exists because of the interface, so we can go ahead and use it. That is a start with interfaces, lesson 2 will involve casting if this much makes sense!
Is there any reason you do String s = new String(new char[] { (char)b }); instead of String s = String.valueOf((char) b); ?
this is fun. i'm going to try a real world example. you are at a one-man burger place, say, and you ask for a burger, and you tell the guy/gal this .. "and oh, could you add some red sauce to the patty just before you put it on the bun ?" they say "sure, but what kind of red sauce ?" and you say "here, take this small packet I've got, it's special tomato sauce". breakdown you = UI application cook = the piece of code which handles inputs from mouse,keyboard etc ,e.g, UI controller packet of sauce = callback and if you are keen, "red sauce" is the interface and your packet is your implementation of that interface. and just as there's one cook for all burger-eaters, there is one UI controller in the machine for all the programs, if you want something done when the button is clicked, the controller says, "if you give me the packet of sauce inside the implementation of the interface which has the onclick method, i'll run it for you as if it were my own code/sauce " did i win ? edit:formatting
Add the new name to the array before you increment the counter, or else you'll waste slot 0. If you want to be tricky, you can do both in one line vehicleNames[numVehicleNames++]=newVehicleName; ++x adds one to x and returns the new value; x++ adds one to x but returns the old value. (This means that technically C==C++; they really should have called it ++C.)
The variables window is a tree. Click the [+] next to an object variable to expand the node and view that object's internal variables.
Not really. Just an inner C programmer bursting out.
This is what I did: http://www.reddit.com/r/java/comments/mo1xu/a_java_apprentice_trying_to_migrate_from/c32glnt I started by writing a gui that, if instantiated, grabs System.in and System.out, and pushes it through a GUI as well as copying to the command line. Then just added to it organically as needs came by
New programmer here. What does the "b" stand for and do in that line of code?
I am taking Intro to Java and the first GUI that we used was the JOptionPane, which is located in the javax.swing class. Admittedly, it is the only GUI that I know how to use at this point, but it does well for programs that require simple inputs and outputs.
My school has a pre-requisite for Java called "Introduction to Programming and Algorithims." I found this class very useful in understanding Intro to Java and know that the fundimentals I learned there will carry over to most languages. I recommend you take a class like this if one is offered by your school. It has made my Into to Java much easier.
Well, yes, I understand you're calling a function within a function on the parameter that which is the foo object. I was under the impression callbacks occurred dynamically when some code was run at runtime. Like some type of listener or something..but if this is all a callback is then I understand it...
b is the integer parameter passed to this function. It doesn't "do" anything, it represents the character-point integer code that we want to write. Because it's an integer and we want to turn it into a character, we use _(char)_ _b_ to convert, or cast it to a char. Then we use _String.valueOf(char)_ to convert that into a String, which finally we store in the String variable _s_.
Nope, no fancy tricks like that. The only slightly complicated thing is the use of inner classes, but even those are pretty simple once you wrap your head around them.
Thanks.
Yes, this makes sense...so the only reason you're implementing the interface is so that it guarantees that the method is there in the class? Otherwise it looks like it serves no function and we can just skip creating the interface altogether and just have A,B,C do whatever it pleases.
Right, that is the entire point of interfaces, they guarantee that a specific set of methods exist. The interface pattern is used by things like action listeners or mouse/keyboard listeners. Because of interfaces, one need only implement a couple methods in one's class to add keyboard or mouse support to one's app. The other thing they are useful for is to add some dynamic style behavior to static languages. In dynamic languages, you can send any type of object anywhere and do just about anything with them. Java is static and strictly typed though, so the only way to make code generic, is to use interfaces and super classes to genericize objects. This is a common need with web applications (like java enterprise apps) where you frequently deal with mixed data types.
 char[] letters = new char[x]; where X is the user length. To display the underscores instead, just prefill the array with underscores, and replace the entries with letters as you go. Arrays.fill(letters, '_');
thaks dude will give this a shot
Interesting. I wonder effects that may have on performance (Probably totally negligible). A _new String()_ behaves differently to a String instantiated any other way. IIRC, it's something like this Case a: String s = "Hello, world!"; Case b: String s = new String("Hello, world!"); Java handles these statements differently. In case A, the string literal "Hello, world!" is added to a sort of String pool that the JVM maintains. To minimize the ram usage of Strings, each String added in this way is either added to the pool, or passed by reference, and all Strings with that value point to the same Object. In this way, each String is unique and immutable: If the String is changed, it becomes a new String in the pool. However, in case the programmer wanted String foo = "Hello, world!" and String bar = "Hello, world!" to point to different Objects, Java has provided that functionality via new String(String). In more concise, technical terms, remembering that == returns true if and only if both Objects are the same or point to the same Object (As opposed to String.equals(Object), which returns true if both Strings hold the same value): (String foo = "Hello, world!") == (String bar = "Hello, world!") //true (String foo = new String("Hello, world!")) == (String bar = new String("Hello, world!") //false (String foo = new String("Hello, world!")) == (String bar = "Hello, world!") //false (String foo = "Hello, world!").equals((String bar = "Hello, world!")) //true (String foo = new String("Hello, world!")).equals(String bar = new String("Hello, world!") //true (String foo = new String("Hello, world!")).equals(String bar = "Hello, world!") //true So, that is to say, given String foo = new String("Hello, world!"): foo will ONLY return true (when compared with == instead of .equals(Object)) in the following case String foo == (String bar = foo) and neither String foo == "Hello, world!" nor String foo == new String("Hello, world!") will evaluate true. This is the reason it's good practice to use .equals instead of ==, because we have no way of knowing if either of two given Strings was created inside or outside of the pool.
Yes there is. What have you tried so far?
* int a = 1234; * String b = Integer.toString(a); * System.out.println(b.substring(0, b.length()-2)); // $ * System.out.println(b.substring(b.length()-2)); // cents http://pastebin.com/jN0bccDd
I played with String.format and System.out.format...coudln't understand how I should use arguments for them though.
such a simple and elegant solution! Why didn't I think of this ? :( 
This is what I would do. 
1. Instead of an extra System.println it's easier to add a "\n" to the end of your last println. It'll pop a new line in there. I tend to add a .toString() on all of my non-strings in a println statements. It's not better or worse, but it saves me some print-lines :) 2. You should start min = 10000 (or whatever you consider infinity to be for your test) and then set your if statement to be (next &lt; min). If the 'next' value is less than min, it should be your new min. I don't know what your test values are, but with min set to 0, it's gonna be tough to have a lower temp than that. 3. Count should be initialized to zero if you want your sum to be correct. 4. Thank you to coming to /r/java for actual homework help instead of just solutions to problems. 
re 3 - this is what I thought first, but he's getting the first value as max. Sum is still wrong since that first value never gets added. -- Max could be initialized as -273, or whatever absolute zero is in C; then process all the input in the loop. Dunno if zero inputs are in the realm of possibility, but if it is this program is wrong for that input.
I don't much mind about the \n quite yet, would rather get the program working properly. I know it exists though :) I've messed around and come up with this: http://pastebin.com/raw.php?i=ux8EaLpg It's giving me the correct count, min, and max...but not calculating the average correctly. For example, if I use one of my test input files it has the values -40, 0, 100. The count is three, min is -40, max is 100, and it gives me the average 53.33. Any idea what I'm doing wrong still?
You are adding 100 twice, and zero never gets "added". min and max change since you are getting them off the Scanner. And now your program breaks for lists of 0 AND 1. And if the first number is the largest, you'll never notice. STOP - setting min and max to input values directly from the Scanner. DO - what skatastrophy said and make min huge and subsequently what I said and make max tiny. Then read all your values in the loop and let the loop sort out the min and max. 
Actually, \n is worse, arguably. Line breaks are platform dependent. Granted, all we really have to deal with is \n (Unix) or \r\n (Windows). (Classic Mac of \r is not practically encountered anymore.) println will give a platform independent line break. Also, %n in formatters &lt;http://docs.oracle.com/javase/tutorial/java/data/numberformat.html&gt;. Or, &lt;http://stackoverflow.com/questions/207947/java-how-do-i-get-a-platform-independent-new-line-character&gt;. 
Noted. Code is as follows: http://pastebin.com/raw.php?i=6Vf96MDY In my file that has the values -40, 0, &amp; 100, it states the minimum is 10000.
rofl why did he delete it? anyone curious it was a method that used % an / divinsion by 100 to get the dollars and cents and returned it like "$" + (money % 100) + "." + (money / 100) or something like that
Completely Fixed the program for you :) import java.util.Scanner; public class Calc { /** * @param args */ public static void main(String[] args) { Scanner scan = new Scanner(System.in); double num1; double num2; System.out.println("Enter number one"); num1=scan.nextDouble(); System.out.println("Enter number two"); num2=scan.nextDouble(); System.out.println("Enter '+' for addition."); System.out.println("Enter '-' for subtraction."); System.out.println("Enter '*' for multiplication."); System.out.println("Enter '/' for division."); System.out.println("Enter operator\n&gt;"); Scanner kb = new Scanner (System.in); char op = kb.nextLine().charAt(0); boolean invalidOperation = true; if(op=='+'){ System.out.println(num1+" + "+num2+" = "+(num1+num2)); invalidOperation = false; } if(op=='-'){ System.out.println(num1+" - "+num2+" = "+(num1-num2)); invalidOperation = false; } if(op=='*'){ System.out.println(num1+" * "+num2+" = "+(num1*num2)); invalidOperation = false; } if(op=='/'){ System.out.println(num1+" / "+num2+" = "+(num1/num2)); invalidOperation = false; } else if(invalidOperation == true) System.out.println("Invalid operation, try again."); } }
I'm actually going to test this out. BRB edit: it worked. I changed it to a Char instead of a string. It should save ram?
I have two. I plug it in my laptop when I get home. I'm thinking about getting a third. Just because.
I'm very interested. I'd love to work on the Source code. (Sorry, i hate working with UI if its an Android App)
Just do this Scanner scan = new Scanner(System.in); int switchExpression = scan.nextInt();
http://jelastic.com/
First, both conditionals check against min. It didn't used to do that, look at an earlier pastebin. Second, for lists of one value the min and max would be the same number. Your code doesn't account for this. Nix the else, IMHO.
While I agree with you for any files you're formatting or logging for an application you're distributing, we're talking about debug logging for an application. You know which OS you'll be on, so why make your logging take up twice as many lines just so that your temporary debugging is platform independent? 
Ok, I've compiled your code and still fail to realize the importance of the interface itself. I've changed a few things around, I made ExplicitEventCallback not implement EventListener and changed the EventGenerator to have ExplicitEventCallbacks in its vector, etc and was able to have the same exact output without the need for the interface at all. I am failing to see the big picture for the need of any of this whatsoever. edit: Unless of course that interface was merely so that any object whatsoever could utilize this by simply implementing the interface and passing an object of itself to it? edit2: I still fail to see what a callback is..I just see functions inside of functions, where is the dynamic aspect to it? Where does this get triggered dynamically when an 'event' happens? edit3: why don't I understand this?
Objects can implement multiple interfaces. An interface is a way of making an object look like its a different object. You make a bunch of heterogeneous objects look homogenous. Like a swiss army knife, you can hand it off to someone and say "this is a spoon" or "this is a knife" or "this is a screw driver". A "ArmyKnife" class implements "Spoon", "Knife" and "ScrewDriver" interfaces. An interface is a promise that it will implement a certain method so that when you call that method on that object it exists. Your "ArmyKnife" class might have the following functions "SipSoup", "CutRope" and "TightenScrew" and "LoosenScrew" functions... where as you might also have a YellowHandledScrewDriver class in your collection that *just* implements the "ScrewDriver" interface so you can't treat it like a spoon or a knife. 
You don't get this because you have yet to create a conceptual model of how programming works in your head and so they are just names to you. A "class" is like a blueprint of a house. An "object" is when someone builds the house using the blueprint. You can use the diagram multiple times to create multiple houses. We use the term "instantiate" and "instnance". Object myHouse is an "instance" of class House. myHouse instantiates class House. Implementing interfaces is a list of features that this house has to have. So if you look at your blueprint, it might implement "Pool" with the methods "SwimInPool" and "CleanPool", "Kitchen" with methods "PrepareMeal" and "Garage" with "ParkCar". 
I understand this quite clearly actually, it's more the "dynamic events" that happens with callbacks, but I'm beginning to see they are not really dynamic at all...no magic here. Anyway, I've liked your response the best and I appreciate the time you've put into it, if you'd like to message me your paypal email I will happily send you 10 dollars that I mentioned earlier.
Can you clarify what you mean by "dynamic events"? Is there are line or phrase you are getting this from? A code example? Events in java really follow this pattern that I've been showing you. Someone registers an event callback object and then something else triggers the event... And all the callback objects get notified by the fact that their method gets called in the trigger function. Please don't worry about paying me. I appreciate the offer but I just like to help people out. Pay the kindness forward sometime if you're concerned about karmic debt. :) 
You would implement something like [Diffie-Hellman key exchange](http://en.wikipedia.org/wiki/Diffie%E2%80%93Hellman_key_exchange). Once you have the shared secret on both, you can encrypt any further communication with that. You could also just use public key encryption instead, depending on what you're trying to do. Edit: As far as sending the data itself, you can convert the bytes of anything to a String without issue and send it that way. 
After some more researching I realized that I convert the key into byte[]. However, when I send the byte[] via TCP I can't receive it as a byte[] on the receiving end. The InputStream doesn't seem to have a method that receives data in byte value. Am I missing something? 
You can use [DataInputStream](http://docs.oracle.com/javase/1.4.2/docs/api/java/io/DataInputStream.html)
What you want to use is a JEditorPane.. http://docs.oracle.com/javase/1.4.2/docs/api/javax/swing/JEditorPane.html
Or this method of any InputStream: http://docs.oracle.com/javase/6/docs/api/java/io/InputStream.html#read%28byte[]%29
parseInt expects an integer. It doesn't really make sense to use Integer here if you're storing as a float. I'd say decide on what kind of input you expect (whole or decimal) and use the respective primitive wrapper (Integer/Float/Double/etc) to parse. 
I don't have an IDE in front of me, but I'm pretty sure you would use Float.parseFloat (http://docs.oracle.com/javase/6/docs/api/java/lang/Float.html#parseFloat(java.lang.String)) All the Integer, Float, Double, etc. classes do is provide common functions (parsing, casting, etc) used when dealing with their respective primitives (or at least it's easier to think of them as such). Because you're storing fn and sn as floats (num1 and num2) you'll want to use that type (float/Float) to do your work.
 double num1 = Double.parseDouble(fn); double num2 = Double.parseDouble(sn); long answer = Math.round(num1+num2); or float num1 = Float.parseFloat(fn); float num2 = Float.parseFloat(sn); int answer = Math.round(num1+num2); 
[Java 7 link.](http://docs.oracle.com/javase/7/docs/api/javax/swing/JEditorPane.html) Google really needs to get rid of the old ones from their index.
Make sure you read about the difference between float and double; they are different. Most Java developers use double over float (as far as I've eve seen). A double can store larger and more precise decimals.
If you're dealing with something like money or where precision is really important you probably want to look into BigDecimal
Use a `JTextPane` or `JEditorPane` instead. `JTextArea` is mainly there to help in porting AWT applications to Swing and should probably not be used in new code.
 Instead of... `float num1 = Integer.parseInt(fn);` Try... `Float num1 = new Float(fn);`
&gt; variables contained within the string show up as "null." Your variable is probably null. In String concatenation null variables are converted to "null" String ("foo" + myNullVariable == "foonull"). [java.util.Objects.toString](http://docs.oracle.com/javase/7/docs/api/java/util/Objects.html#toString%28java.lang.Object,%20java.lang.String%29) may be useful...
Why not use Key pairs (asymmetric encryption)? You only need to share the public keys between client and server and you do not risk that the symmetric key is sniffed. Also, you can encode the bytes into a base 64 string with DatatypeConverter and back to bytes from the string with the same class.
depending on the contex this may work, but if the intent behind the cipher is to stream encrypted content then fwir public / private key isn't a good choice and symmetric block cyphers like AES are better.
Except that not everybody can upgrade to the current version, so you sometimes need the old documentation to see what was available at that point in time.
 Well, if you want to encrypt, is because you want some security. If you need to encrypt with AES (for performance), you can encrypt the AES key with the public key of the client. Sending only the AES key first and use it later for encrypting is worst than no encryption at all, it gives you a false feeling of security.
agreed on the idea of encrypting the key and sending it over - that's pretty much Diffie-Helmann from what I vaguely recall. I've just re-read your original post and realised I totally misread it originally, so fail on my part :-)
Try to make sure the alpha channel is set to either 0 or 255 in every pixel?
I don't want Oracle to take those pages down, I just want google to stop indexing the old stuff, or at least move them down and put the new ones up.
Fair enough. 
I will definitely get to that, but I am working on a project that deals with symmetric keys for now. I'm already knee deep in it.
Don't use arrays to keep track of the cards, use java.util.ArrayList. 
It appears to be when users increase the size of the desktop in control panel (no resolution but the increase font size option)
Tried that, tried .gif and other types of conversions in GIMP.
Rather than asking us, you should be stamping in a bunch of calls to System.out.println (or System.err.println) and seeing where it hangs, i.e. if(playerWon){ System.out.println("swap(): entering playerWon"); ... for(int i=1;i&lt;playerCards.length;i++){ ... } System.out.println("swap(): playerWon is true, and I made it past for()"); ... System.out.println("swap(): playerWon is true, going to call resetCards()"); resetCards(); System.out.println("swap(): playerWon is true, passed resetCards()"); etc. Seasoned programmers will often write a short little method named debug() just for this purpose: static boolean wantDebug = true; ... static void debug(String str) { if (wantDebug) System.err.println(str); } Then you can set **wantDebug** to **true** if you need a trace, and **false** for production use.
I don't write java, but it looks to me like for every question you just print out a new string, when really you want to clear the whole output and rewrite the new question. Change it so your questions are set to a variable and only output that variable? Or just clear the whole output if that's possible and output the new question. Just some theories because I don't know how your program is set up to output and all that jazz...
I'm on my phone now but I would love to help you out when I get home. Though, just by looking at it, try using .nextLine instead of .next with the keyboard. I vaguely remember that giving me some weird problems awhile ago back in intro to Java haha.
Also, store your questions in an array, and access it for the questikns, that will make it nicer. I want to be home to optimize this so badly :P
haha, my best friend told me to try arrays. im only 10 weeks into my uni course, so I know nothing about arrays yet. thanks for all the interest so far guys.
Well, I rewrote it for you in a very meh way but it's a way that someone who just started out would write if they were good at what they do :P It uses two arrays, so just a heads up: public class RaymondsQuiz { public static void main (String[] args) { Scanner myKeyboard = new Scanner(System.in); String Enter; System.out.println("Press Enter to take a quiz about the history of The Olympics:"); Enter = myKeyboard.nextLine(); quizMethod(); }//main static void quizMethod(){ Scanner myKeyboard = new Scanner(System.in); Random generator = new Random(); int olympicScore = 0; String userAnswerString; int userAnswerInt; boolean userAnswerBoolean = true; String questions[] = new String[8]; String answers[] = new String[8]; int random, questionCount = 0; questions[0] ="Guess the name of the famous British Olympic athlete from the 1990s."; questions[1] ="Guess the name of the current 100m sprint record holder."; questions[2] ="Guess the name of the famous American Olympic Swimmer."; questions[3] ="Guess the name of the British boxer well know from the 2004 Olympics."; questions[4] ="Guess the name of the famous British marathon runner."; questions[5] ="Guess the name of the British gold medal winning cyclist from the 2008 Olympics."; questions[6] ="Guess the name of the British gold medal winning swimmer from the 2008 Olympics."; questions[7] ="Guess the name of the knighted British rower."; answers[0] = "Colin Jackson"; answers[1] = "Usain Bolt"; answers[2] = "Michael Phelps"; answers[3] = "Amir Khan"; answers[4] = "Paula Radcliff"; answers[5] = "Bradley Wiggins"; answers[6] = "Rebecca Adlington"; answers[7] = "Steve Redgrave"; while (questionCount &lt; 5) { random = generator.nextInt(8); if (questions[random] != ""){ if (askQuestion(questions, answers, random, myKeyboard)){ System.out.println("Correct!"); olympicScore++; } questionCount++; } } System.out.println(); System.out.println(); if (olympicScore &gt; 2) System.out.print("Well done. "); System.out.println("You have scored a total of " + olympicScore + " out of " + questionCount + ".") ; }//main private static boolean askQuestion(String question[], String answer[], int random, Scanner myKeyboard) { System.out.println(question[random]); question[random] = ""; String userAnswerString = myKeyboard.nextLine(); return (userAnswerString.equalsIgnoreCase(answer[random]) ); } }//class I'm not saying you have to use it, but I just like doing stuff like this haha. If you have any questions, feel free to ask me!
I like this code! And seeing it working has helped me understand how it works, Thanks dude :D. Would it be hard to implement an image before each question? Like, an image of the athlete, then the question? * pic of michael phelps * guess the name of the american olympic swimmer.. * answer 
Also, in the last method, why is there 'boolean' before askQuestion? 
Erm, yes. Implementing a GUI is something a lot of CS programs don't teach early on (if at all), mainly because it involves learning a lot of new frameworks, creating Windows, and more. You seem to be learning client (CLI) stuff right now, try and think the last time you saw a picture in a terminal window; never, I'm afraid.
You can have a jpanel pop up if you are implementing this in a console. A full explanation with code can be found here: http://www.particle.kth.se/~lindsey/JavaCourse/Book/Part1/Java/Chapter06/images.html And don't forget to cite where you got your code from (for the image part). I'd suggest commenting the URL and comment the changes you made to the code.
Well, if you'll notice a few subtle differences in the code, you'll understand. Notice how the quizMethod() has "void" in front of it and it doesn't end with a return statement. Now, notice how askQuestion() has Boolean before it and returns a Boolean value. Putting a variable type before the function is telling the computer what the function *will return.* See, quizMethod basically does the quiz, so there's no reason to return anything because it's kind of just starting the process. askQuestion asks the user the question and checks to see if they're right or not. We return the boolean value of whether they're right or wrong. So, in the while loop, it basically says "If the user guesses the correct answer, increment olympicScore." I hope this makes sense, if not, just ask!
Don't implement your own logging, just [use the one that's already there](http://docs.oracle.com/javase/6/docs/api/java/util/logging/package-summary.html). 
For more advanced logging, sure, use a proper logging class. But for quick and dirty debugging, writing to System.err doesn't require any thought and has the bonus of a. showing up in red in the Java console if using Eclipse, and 2. being stupidly easy to filter on/out from the command line.
It seems like this would be better suited for an applet, rather than a console program. I've been in a grade 11 course for the same amount of time, and we recently had a similar project. If you haven't learned applets yet, you would probably be better off not going down that road, instead maybe trying something without graphics?
I'm inclined to agree with you, but the design document thats already submitted says there will be a picture quiz, so I must deliver!
I'm pretty sure you can't do images in a console. If you're feeling ambitious you could try looking into applets, but I found those quite hard to do at first ( i was bombarding my teacher with questions for several days before it clicked :P )
&gt; if (questions[random] != ""){ Never use == or != unless you intend on doing a pointer comparison. For Strings in Java it usually works out in trivial problems like this, however it is a misnomer. You only want to use those on primitives, and instead should have written: if (!questions[random].equals("")) { Also, setting the String to an empty string is a horrible way of tracking what has already been used. I'm sure its fine for what the OP has learned so far, but don't plan on learning from that as an actual solution. You will learn about Lists later I hope.
&gt; if(playerWon){ &gt; ... &gt; } else if(!playerWon) { Why not use the else keyword? Didn't really look through the code but that stuck out like a sore thumb to me.
there was another case at one point, but i took it out and never changed this.
Try something like Class Question { private String questionText; private String answerText; private Image image; public Question(String question, String answer, Image image){ this.questionText = question; this.answerText = answer; this.image = image; } public boolean validateAnswer(String answer){ return answer.toLowerCase().trim().equals(answerText.toLowerCase()); } public String getQuestion(){ return questionText; } } Then Question questions[] = new Question[8]; questions[0] = new Question("The question","the answer",imageOne); etc 
The game stops working after 26 pushes of the "Draw cards!" button. Your startButtonActionPerformed method has the following loop in it: " for (int i = 0; i &lt; this.playerCards.length; i++) { if (i &gt; 25) {" Rethink it. 
Could you post some of your code? It makes it easier for everyone to help you :D
I filled in a better solution that the teacher would've believed as him. If it were me, I would've used a map and checked to see if the other value was incremented (a counter for how many times it was called). Sorry I'm on my phone or I'd explain more if necessary haha
I like your solution, but I suggest to dillery not to read it before finding an own working solution. That's not the way practice works.
I think they just started out learning Java, but that's the way you would model it.
&gt; if (!questions[random].equals("".intern())) or even better &gt; if (!questions[random].isEmpty()) 
Try IcoFx
You might need to use a separate thread, with a keylistener and synchronization. The KeyListener can end the thread running the robot stuff. You probably won't want to end it completely. I'd suggest having the methods using Robot split up and checking between each step.
I'm opening a .txt file and writing a string in it, but then adding the string onto itself and printing it in an infinite loop. Example of string and loop: String text = "How much would could a woodchuck chuck if a wood chuck could Chuck Norris?"; for(int i=1; i&gt;0;i++) text+=text; I want it to go until it crashes the computer, but to test i want to have a way to stop it short of turning of my computer.
Well, this project sounds a lot more malicious than I originally thought. I retract my earlier help.
no it's not malicious it's a prank program. I am going to open http://yooouuutuuube.com/ open the trippy alice video, flip the screen then open a text file that prints the example i posted earlier repeatedly. The only rules we were given is that 1. it can't cause PERMANENT or SERIOUS damage and 2. make it as annoying as possible. He said anything else is ok.
You're double-incrementing the loop counter - remove the last line in the for. Edit: It's also safer to check against s1.length() in the loop instead of cell.getContents().length(), as those contents could be altered between execution of those two lines. 
In addition to the listed uses, I also found a Phaser useful when the initial count for [CountDownLatch](http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/CountDownLatch.html) is not known ahead of time (I had Runnables creating new Runnables, so the full number of threads that needed to check in wasn't known when I created the CountDownLatch). I still don't get why they gave it such a ridiculous name, though ;-)
Thanks, s1.length() worked. I double increment to skip the character in the string.
Here's one pretty clean way to do it: Run the Robot as a separate Thread, and store a reference to that thread. Have the Robot loop check for Thread.isInterrupted(), and break and exit if true. Finally, have a key listener setup in your main thread, which will call robotThread.interrupt() when the appropriate key is pressed. 
Ha, I see why now - the cell contents weren't changing, but the SB length sure was. 
awesome, thanks!
Your algorithm is o( n^2 ). Java's StringBuffer implementation isn't a linked list, so insert actually has to move characters around to make space every time you insert. It might be faster to approach it a bit differently. String c = cell.getContents(); // just in case the method call is heavy StringBuffer s1 = new StringBuffer(c.substring(0,1)); for(int j1=1; j1&lt;c.length();j1++) { s1.append(" ").append(c.charAt(j1)); } System.out.println(s1); That also avoids the opportunity to miscount the end of the string, which is why your implementation failed. 
Nice spot!
&gt;I still don't get why they gave it such a ridiculous name, though It goes through various *phases*. 
By the way, you can just use for(int j1=0; j1 &lt; s1.length(); j1 += 2){
this is what i have now: private void ButtonActionPerformed(java.awt.event.ActionEvent evt) { double userheight, userweightmetric, userweightimperial; userheight = Double.parseDouble(height.getText()); userweightmetric = userheight*userheight*25; userweightimperial = userheight*userheight*25/703; String measurement, type, name; measurement = measure.getText(); type = "m"; name = Name.getText(); if (!measurement.equals(type)); { Idealweight.setText("'s ideal weight is "+userweightmetric); but i don't know how to get my final line to work right. it has to include the users name before the "'s ideal weight" but the name is in a string and it is complaining about trying to get a string in there.
Set it to stun. I'm so, so sorry.
OT but in IntelliJ when at a break point I can hit ALT-F8 to open the Expression Eval dialog and type stuff in and hit Evaluate to get the results i.e. run snippets of code with out having to edit a file, is there a way to do it in Eclipse (don't use it that much)
You can also do a bit more with breakpoint filters in IDEA e.g. only break at bp-2 (with suspend policy All) when another breakpoint bp-1 (set with suspend policy None) was hit. 
I would say I'm more likely to read an email than listen to a voice mail if I'm not really in the job market. Once I hear that a voice mail is from a recruiter, I can't hit "delete" fast enough. However, if I get an email, for some reason I'm more likely to take a look. Also, as far as giving you all leads to other potential candidates ... why would we ever do that? If I know someone who is looking, I'm probably going to try to get a referral bonus by bringing them in where I work. It seems to me that the situation where I would turn someone's name over to a recruiter would be extremely rare.
I think he means co-workers that you know are looking for another opportunity. This usually isn't too public but you could have 1/2 good friends you work with and put out a good word for them.
I agree with AllowishusDevedander in that I prefer email (or linkedin invites) over phone calls; there is a very short list of people who I will pick up my cell phone for during business hours, and that list basically involves the safety of my family. Calling me on my work line is just tacky and makes me think that you're not looking for someone with the integrity to do their job searching with their own time and resources. Email, on the other hand, is far less intrusive, and if you give me enough details, we both save some time figuring out if it's worth pursuing (or, if I do know someone I'd recommend, I don't have to remember what you said on the phone - i can just forward your description to them). I am all for referrals, especially when there's an incentive.
My main annoyances: 1. Phone calls. Nah, use email so I can ignore you with less effort. I don't even bother answering calls from numbers I don't know anymore. 2. Don't send me mass emails. Personalize them. Briefly tell me why you think I'm a good match. Show me that you actually read my resume. 3. Provide the necessary information. I need to know the position location, full description, and salary before I would bother to call you back. I'd also prefer to know the name of the company. 4. Emailing me and asking me to reply with my resume or other information. Dude, how did you find me if not from my posted resume? If you don't have my resume, why are you wasting my time? 5. Contacting me for positions for which I'm not qualified. I get WAY to many recruiters emailing me about C# positions. Again, haven't you even read my resume? HELLO! 6. Contacting me for positions for which I am over qualified. I've been a software engineer for 11 years and you want me to do QA or L3 support for half the pay? Are you fucking nuts? 7. Asking me if I qualify for a specific position. I actually just got one of these this morning. The first line in the email is "Based on our criteria skills search inquiry, your resume profile came up. Let me know if you fit the role below?" I didn't even bother to keep reading. Your entire purpose in life is to find people that qualify for the positions that you are trying to fill. If you are emailing me and you don't know whether or not I qualify, you're an absolute failure. 8. Offering my an insulting amount of money. I realize that you don't set the amount, but I do have my salary expectations posted along with my resume. I'm asking for 120k and you keep emailing me about positions in the 60-80k range. Do you even want a response from me? What do you expect me to tell you? 9. Contacting me about out of state positions. I clearly specify that I'm not willing to relocate. But its not about relocation, its about the fact that you didn't even bother to even look at my current location before you sent that bulk message. And of course, relocation assistance is never offered. As for referral bonuses, nah, I just ignore that part of your message along with the "or someone you know" clause. I'm not your assistant recruiter, sorry.
Heh...4 months late. There's gotta be a way to subscribe to changes or something. How often do I do something like this? Historically, not often - it happens a bit in my current project, though. And I use stuff like that for monte carlo simulations. Read the example in context....it's not randomly logging, but rather randomly continuing. Think 85% chance to continue. The logging was extraneous in my example, I guess. 
You win the thread. These are all incredibly annoying things. One last thing: if I contact you about a position you've advertised, it had better be real. The salary had better be accurate, and an *actual, real position*, not *many like this one! (read: sendin' you off to cattle calls!)* should exist.
To sum it up: you want a recruiter to actually do their job and recruit you to a job. 
Precisely.
From our side, we get bombarded with emails and phone calls every day, and so do our colleagues. Being in demand is a nice problem to have, but it is a problem anyway. Referring a colleague is just making the problem of being bombarded with emails and calls worse for them, out of consideration for my colleagues I never refer anybody. No, I'm not interested in referral bonuses. There is strong demand for Java developers, pretty much no Java developer is looking for work, and whoever is looking finds a job in less than a week. It would be very rare for any of us to know someone who's looking.
6 and 8 resonate with me. I've been developing software professionally for over 15 years, and every week I get contacted about some entry level position making 1/3 or less than what I'm making now.
That's a fantastic list, and I agree with all of it. I see a lot of job postings here in Austin that more or less tell me what the employer is looking for (generally, it's an unrealistically long list of skills) but nothing about what's in it for me. I'm past the point in my career where I'll jump on any job to which I vaguely meet the requirements. You have to tell the candidate why they should bother applying to YOUR position when there are so many available. Maybe employers don't get that yet, but from my point of view I have a choice in potential employers, and won't even bother with ones that don't consider that this is a two-way transaction. 
don't contact me, ever, unless you are alpha geek at a dream software shop. ever. auto-spammed.
Try implementing an algorithm like these: [Sieve of Eratosthenes](http://en.wikipedia.org/wiki/Sieve_of_Eratosthenes) [Sieve of Atkin](http://en.wikipedia.org/wiki/Sieve_of_Atkin) The Sieve of Eratosthenes is pretty straightforward, and easy to implement too - you should be able to handle it. It's the classical solution to finding primes up to a specific integer, and should fit your assignment nicely.
The only time I ever even bothered to talk to a recruiter was when one called me up and said "Hi Zomgondo, I noticed that you have a lot of experience with Perl-based Web sites and like to play with hardware a lot too... I have a position open that requires exactly those skills, are you interested?" 7 years later I'm still in that position :)
You want to know if "p" can be divided by a number between 1 and itself, you're just checking 2,3 and 5. This also explains why the loop won't return 2,3 and 5. (2 % 2 == 0, 3 % 3 == 0, 5 % 5 == 0) 
I really hate #3 when I've already got a job. Why can't you just say the name of the company? 
You don't need the first 2 if statements, these are just extra and should be handled with logical expressions. You need 2 for loops and a boolean flag. The first one loops through numbers up to n, as its looping through those numbers it should check if that number is prime. At the beginning of the first for loop set the flag to true. To check if that number is prime you use a second for loop to go through numbers i to p and check if p mod i is zero, if so then set the flag to false and break because its not prime. At the end of the first for loop check the flag, if it is true then print p. Hope this helps, tried to make it simple.
See what the recruiter did there? He/she did their research and made a great pitch at the job, versus the usual "hey, we've got PROGRAMMING JOBS!!1!" where there isn't even a cursory check of your resume/qualifications to see if it's a good fit. 
Thank you for this list.
Apparently the guy who wrote it is [a bit embarassed that it went public](http://codahale.com/the-rest-of-the-story/).
rlee0001 covers almost all of it, but I'll repost my main points: 1. Don't call me. I know, voice is worth more than email, but that's just annoying. I have a specific contact in my phone, "Annoying Recruiter," that gets set to essentially block your call if you call me up out of the blue. 2. If you don't know my current job, why are you contacting me? Did I just ping a keyword somewhere? I expect a basic linkedin search. 3. My priorities: Coworks &gt; Project &gt; Pay &gt; Anything Else. If you have former coworkers of mine I loved working with, there's a damn good chance I'll talk with you. Likewise, if you have a fun project, I'm more likely to talk to you. 4. Don't try to hide the name of the company. I know, you don't want me to end-run you, but that's an insta-delete. I'm going to do research on the company and their jobs before talking to you. If the company is also nice, they'll know you reached out to me first, if you do the right paperwork. 5. If you can contact me about a growth opportunity, that's even better. But make sure it fits within my career path (again, LinkedIn pretty much gives you that). 6. I don't have "15 minutes to talk." Tell me what you might want to talk about, then we might talk. I'm not going to have a random conversation where you try to hard-sell me to apply to your company/companies 7. Referral bonuses are just ok. Usually, though, we are going to reserve our favorite people for when we get hired, and want to bring them with us. You'll get the mediocre people for a referral bonus :) 8. As much as it is your job to recruit people and sell the company, you also have to tell the company what the developers are looking for. Maybe instead of a 5k signing bonus, buy them a new macbook pro (or alienware, or whatever), no strings attached, as their work computer (with a 2-year upgrade plan). Cheaper, and more likely to make the dev super happy and excited. 9. I worked in PHP for 6 years, then moved into Java. I don't want another PHP job. Likewise, if somebody moved from Java into Ruby/Python, they're probably going to be poorer quality leads. 10. I don't know how to do this effectively, but you have to somehow build the trust that you're not just seeing me as a $5k check. I've worked with the same recruiter for 3 jobs now, and there's a damn good reason. We even go to lunch frequently to chat about random shit. She came to my housewarming party. If you pump &amp; dump, you won't last long. And worse than never signing anyone, is getting someone hired who feels duped/cheated/used. They won't use you again, won't recommend you to anyone, and probably will tell the company they're at (unless they're part of the problem), and you might get blackballed there. Keep it professional 
To expound and emphasize the "No Phone Calls" theme. Definitely do not call my company switchboard and ask for me in the directory. If you call me at my work desk and ask to talk to me about a job opportunity I will tell you not to call me, end the call, and report you to HR to cover my ass. You have now also lost the ability to work with my company and me... ever. I have a linked in account which give you enough info to contact me with an offer, and I am much more likely to give you a polite response whether I want to talk to you or not.
Tech recruiter here of 10 years and I don't know why more recruiters don't do this. If I'm doing my job (i.e. actually reading your resume) then there's a reason I'm reaching out to you. Why not just say what those reasons are in the initial email?
I agree with 99% of what you said here and good recruiters wouldn't be committing these sins as it would be a waste of their own time. * Point #1 - there's a simple solution to this. If you don't want to receive calls then just don't include your phone number on the resume that you're posting online. I will send an email first but if you're on a job board, with your number listed and you're a great match for my open position, I'll call. However, if I get you on the phone I will ask if it's a convenient time. Now, if you're currently working and just have a LinkedIn profile and a recruiter looked up your company's phone number and called you at work... well that's another story. * Point #3 - The problem here is that some people will go behind our backs to apply directly. Vermicin mentioned that if the company was nice, that they'll know I reached out to you first and have paperwork to prove it. Unfortunately, it doesn't work this way. I wouldn't submit a candidate's resume unless I actually spoke to him/her first and I think everyone can agree that doing so would be unethical and unprofessional. Thing is, if I simply email you the job and the name of the company, and you decide to apply directly to them before we speak, that doesn't give me credit. Company's aren't going to play nice when it comes to being able to save money on a 5 digit fee. I know most candidates wouldn't do this but, like with the recruiting industry, all it takes is a few bad apples to ruin it for everyone. Regarding referrals, you shouldn't look at it as being an assistant recruiter (I'm not asking you to scour the job boards or LinkedIn). I can't speak for other recruiters but when I ask for referrals I'm thinking more along the lines of, if you know someone who's a right fit for this and who is also unhappy where they are or currently unemployed, please have them call me. Wouldn't you want to help them out? If they get a new job then the referral bonus should just the cherry on top. Hope this doesn't come off as defensive as it definitely wasn't meant to be. I'm just trying to provide a different point of view.
Absolutely, you can add an expression that is evaluated at debug time, which refers to the current execution scope, i.e. you have access to all the method and class members.
&gt; I’d rather suck a dog’s nose dry than lend a hand to the nerd slapfights on Hacker News. Heh.
It's been a long time since I've had any contact with a recruiter, but you couldn't possibly be more right. I'm going to tee off on #9. I live in New York. It's very clear from looking at my resume where I am in the state - a simple Google Maps check will point it out. When I was last looking for a job, I had at least 2 contacts a week from recruiters with positions in "New York." I'd always reply with "well, NY is a large state, you'll need to be more specific than that." The response was inevitably "midtown Manhattan." A few times, I'd press them a bit more, and eventually they'd get to the point where they believed that I'd be open to commuting. I'd ask if they had actually looked up *where* I lived (address on the resume), they admitted they hadn't and were shocked to learn that I lived more than 4 hours away from Manhattan. Yet they still had some notion that I'd be willing to make that trip weekly (without travel/living expenses being reimbursed), or relocate for it after explicitly stating that I wasn't open to relocating. I had another that brought me a position 2 hours from home that did pay for a hotel during the week (drive to the site Monday morning, drive home Friday afternoon). After telling them that I had *just* bought a house, they still thought I might be interested. Apparently after buying a house I want to jump on a job that has me away from it for the majority of every week? The attitude of "you should be grateful I'm bringing you a job prospect, and I assume you're going to rearrange your entire life just to take this position regardless of how good a job it really is" is just so callous and arrogant.
tl;dr version: 1) He had to explain all the features and concepts to programmers (that's sad actually...) 2) Lack of a "strong" community (an opinionated remark I'm sure). 3) In line with #1: lack of experienced capable Scala programmers. 4) Scala issues outside of the programming aspects. 5) Poor / lacking library code. 6) Massive performance issues in critical components. It looks like the overall theme here is dependability.
A recruiter once called my company and asked who the WebSphere guru was, and for whatever reason the person they got ahold of answered without thinking twice. The recruiter then called me (on my work phone) to tell me about WebSphere jobs. *DONT EVER DO THIS* Personally, I don't want a recruiter contacting me unless I've done business with them before, or unless I put my name and resume somewhere looking for a position (though I have never done this). All of my positions I went through a recruiter, but I contacted them, not the other way around. Make yourself known and try not to annoy people. Anyone else get completely annoyed when a recruiter you've never done business with tries contacting you? I flat out refuse to work with any recruiter that does this. EDIT: Also, if you're just a body farm trying to put anyone anywhere, give up now because you are destroying your reputation.
&gt; He had to explain all the features and concepts to programmers (that's &gt; sad actually...) Actually, I find it makes good sense. Most programmers are not very good, and need help even to make the best use of Java. Scala is a much bigger and more complicated language, that's newer and less well known. It's hardly surprising that there will be issues in getting people to use it optimally.
I only know this: If you send me mass emails that are only tangentially related to my skillset you will find yourself in my filter faster than you can say "spam".
You may not find what i am about to say particularly helpful but i'll do so anyway: of course you can, this is not a java problem you don't have a java problem here, you need an algorithm. Unless you simply need to know how to find cos and tan in java? if so just google it.
ok it is not really a java problem and i know how to use cos and sin, but I can't seem to get it to work properly, or the ball just stands perfectly still or it moves at a verry high speed to the left and right, moving way behond its normal length between the two cirlces
I understand that one, actually -- because you'd skip the recruiter and go to the company directly. On the other hand it's annoying when they won't even tell you where it is, or even answer "is within _x_ km of my home, where _x_ is the maximum I want to travel?"
So nobody can help me on this, or redirect me?
did this in my java class on tuesday; we use JGRASP //Program to find all primes between 2 and given number import java.util.Scanner; public class PrimeNumbers { public static void main(String [] args) { int upper=0; Scanner readScanner = new Scanner(System.in); System.out.println("The program gives all prime numbers between 2 and x"); System.out.print("Please input x: "); while (!(readScanner.hasNextInt()) || ((upper=readScanner.nextInt())&lt;2)); { System.out.print("Please enter an integer greater than 2: "); readScanner.nextLine(); } System.out.println("Find all primes between 2 and " + upper); for(int counter=2; counter &lt;= upper; counter++) { boolean isPrime = true; int compareNumber = 2; while ((isPrime) &amp;&amp; (counter &gt; compareNumber)) if (counter%compareNumber !=0) compareNumber++; else isPrime = false; if (isPrime) System.out.println("" + counter + " is a prime number"); } } } 
See [http://stackoverflow.com/questions/6645093/how-to-rotate-a-group-of-2d-shapes-around-an-arbitrary-point](http://stackoverflow.com/questions/6645093/how-to-rotate-a-group-of-2d-shapes-around-an-arbitrary-point)
&gt;Contacting me about out of state positions. I clearly specify that I'm not willing to relocate. But its not about relocation, its about the fact that you didn't even bother to even look at my current location before you sent that bulk message. And of course, relocation assistance is never offered. I was in touch with an annoyingly persistent recruiter -- when I lived in Atlanta no less -- who was located a good ways out of town (in Alpharetta). I told him specifically that I wasn't interested in working in Alpharetta, but he did convince me to drive all the way out there to have a chat with him. While I was there, he sprung an interview on me - the guy was waiting in the office - for a company in Alpharetta. I did chat with the guy - I figured it wasn't his fault - and actually gave a pretty good interview, and told him I would think about it. But that night I called the recruiter and asked him not to represent me anymore, since it was obvious he was only interested in filling the positions he had, and didn't give a shit about what I actually wanted. He called me back and left me the pissiest little message, actually accusing me of being unprofessional and overly picky. I wish I had saved it, but it was hilarious. I didn't return the call.
I'm not sure Scala is a "much bigger language" than Java at all. Scala's language specification is 191 pages long, while Java's is 684. Scala just has a different (and highly orthogonal) feature set than Java, and there is a learning curve.
 // Suppose x0,y0 is the center of the first circle and r0 its radius // and r1 is the radius of the second then double bothR = r0 + r1; double x1 = x0 + Math.cos(a) * bothR; double y1 = y0 + Math.sin(a) * bothR; where a is the current angle going from 0 to 2pi.
what I'd do: public static void main(String[] args) { Scanner sc = new Scanner(System.in); System.out.println("Enter highest value:"); int num = sc.nextInt(); if(num &gt; 2) System.out.print("2, "); if(num &gt; 3) System.out.print("3, "); for(int i = 3; i &lt; num; i+= 2) { if(isPrime(i)) System.out.println(i +", "); } } private boolean isPrime(int num) { if(num == 1) return false; for(int i=3; i &lt;= (num/2) + 1; i+=2) { if( num % i == 0 ) return false; } return true; } Probably astoundingly inefficient though.
That's not what she said; that's a caricature of what she said.
Comparing the complexity of technologies by comparing the size of the specs is deeply misleading. Java is specified in a lot more detail than Scala is. In fact, I'm not even going to argue this. If you want to believe that they're equally complex then be my guest.
Expose it via an EL function instead and it can be even "leaner" than that. You're right though, it's very bureaucratic like this.
Thanks. I'm doing that, exposing each function, etc, but I wish I could just useBean and then call the functions on the instance. 
You can with the Play! Framework ;o)
I said I'm not sure, not that I believe it. In the end, complexity is in the eye of the beholder anyway. And to be fair, even if we established that Scala is a smaller language, a lot of the complexity is moved into the standard library, which is something to take into account when comparing. 
In JSF you can do that with JBoss Seam. But yes, it was a pointless limitation IMO.
Yup, but only through some fairly gnarly compiler hacking.
It indeed makes good sense... It doesn't make it any less sadder. And I'll tell you why... if you hired me for a programming job in some language, and say I didn't know my way around the language, I'd be reading up on it myself. I'd be actively looking for the best practices online and elsewhere. So what's the difference you say? The first is I'm not using up a coworker's / manager's time (and they're probably busy). I'm self-dependent, which is often quite important, and is ultimately what probably truly separates good programmers from the rest... or not, just an opinion I've gathered by my experiences. If it's too much... for sure, go for help, but I mean he's giving basic examples which are easily look up material. The second is that I'm not just trying to learn something when I encounter it, just because I encounter it. Even should, say, before hiring me I didn't know any Scala, but I got the job, I'd have come to my first day with at least some basic research put into it. Of course it's all opinion... and I don't expect everyone to be like me... I just find it sad that he had to explain basic concepts often to programmers.
The problem with Java tutors is that you have to ask why are they teaching and not in the field programming. It's not like there aren't any jobs out there. It's usually because there not very good. This isn't always the case but can be held to be true the majority of the time. In the same vein I went to a Clojure group the other day and got ripped for using Eclipse, they were all on emacs ;)
I think you can do that with JEE6 (at least I could with Tomcat 7). If you are feeling really ambitious you can use OGNL and Struts 2.
Hello, [straw man](http://en.wikipedia.org/wiki/Straw_man).
Yeah, I do this everytime. It really ticks me off that I make sure to find quality talent that will actually be qualified and in the right salary range only to hear that I'm not calling enough people. Sure, I can bust out a ton of calls/emails, but quality over quantity should be most important. Just because someone has "Java" on his/her resume, doesn't mean I should be contacting him/her. It just leads to pissing off potential candidates in the future.
I don't disagree with anything you say, but spend some time teaching Java developers when not to catch exceptions, what sort of collection types to use, etc etc and you'll feel *really* sad.
http://imgur.com/aWhMx Your keyboard most likely has one of these, please use it.
I believe there are a couple of ways. One involves an outside server as a 3rd party for the handshake. Another option involves UDP I believe. The phrase to search for is "NAT Punchthrough". I'm not finding the best of articles on it, but here's [one](http://www.raknet.net/raknet/manual/natpunchthrough.html).
Switch to Velocity then, there are alternatives to JSP. Sounds like your complaint is the library, and not Java itself.
No. You can have positive and negative zero for floating point numbers though: http://en.wikipedia.org/wiki/Signed_zero
I'm pretty sure -0 equals 0 so no.
get(size()-1-index) would not work for a negative number, so it had to be get(size()-1+index). Apart from that I can't help you as int does not support signed zeros.
I wrote a utility to get around this. You can create a special map and overload the get() method to call a method in the class that the map exists in. It is annoying, but it works.
In other languages that support this functionality they use -1 to mean the end of the array. That may be the easier to understand and more common way to provide that feature.
Oh, doof, thanks for catching that.
use -1 to get the last char in a string or you can use string.lenth to get the size of the string and use that when you call it
Local multiplayer would probably be fun and impressive, while not being too hard to pull off. 
thank you i will try this out :D
That's an interesting idea! I might just have to try that
Read up on RMI (Remote Method Invocation) in Java... and have fun!
It would be more sane to have -1 be the last element, that is .size()-1, and have -2 be the penultimate element, that is .size()-2, and so on. That's logical, and that's how Perl does it.
Same with Python. For example: print( list[-1] ) will print the last value of `list`, which is the same thing as doing: print( list[len(list)-1] ) So accessing the value at `-3` is like saying *length of the list minus 3*. Another way to look at it is to start at 0, then going to the left (negative) wraps around to the end of the list, so that it starts at -1 on the right side.
Sure, 0 should represent the "gap" (looking for a better name for this) *before* the first element, or the "gap" *after* the last element. If you take a slice from 0 to 0, or just 1 to 1, you get just that "gap" and no elements, an empty slice. Since elements are referred to by the index of the "gap" *before* it, -1 should refer to the last element. That way the last element precedes the first, and the first element succeeds the last. It's the way other languages do it, and the logical way to do it. 
First, you don't know that i'm not a Vulcan, and "logical" is a perfectly cromulent word in this context. Other than that you make a good point which made me think, and i concede it. Upvoted. I still believe it's more convenient to let subtracting 1 from the index of the first element give the index of the last element, just as you get the index of the first element when you subtract 1 from the index of the second element. 
The rule of thumb for an Interface is that it only holds method signatures, and no implementation. The source needed for your second question would be in the derived Class. Remember that each class that inherits from the interface must implement all method signatures in the interface. 
Let user select color of sections, possibly not changing the color of the previously collected bits
Uh... you are essentially correct in your definition of an interface as described in point 1. Questions 2 are both... wrong? Not right, anyway. The point with an interface is that you're defining the API for a class that is yet-to-be developed. You're going to IMPLEMENT your example as a class, and the compiler is going to complain if that class doesn't have an implementation of void method1 (int x, int y) and void method2 (ArrayList z). The interface provides no actual code that DOES stuff. The answer to 2a is: It doesn't KNOW anything. The answer to 2b is: An interface cannot do this. It's a definition of a set of methods that will be on any classes that implement the method. 
Wait wait what? It's rare for a Java developer to be out of a job you say? Hook a brother up! Haha perhaps we are in very different situations, I seem to not find many Java positions.
One of the elements of object-oriented programming is encapsulation and *data-hiding*. In essence, to the consumers of your objects, the implementation is not relevant. The consumers of your objects only care about the *contract* that the object defines - in other words, the methods that you can invoke on it ... An interface is a particular way of specifying the contract (as you know, the interface has no implementation detail - just the methods). An interface says: "everyone who implements me, provides these methods and obeys this contact. One thing this enables you to do is to have multiple implementations of the same contract, but have this detail hidden from the consumer. Take for example, the Collections API. It has an interface for a List. A list is an ordered set of elements. The contract basically says you can iterate over the elements, and you can get an element referenced by its index. There is no mention of how this list is actually implemented. An *ArrayList* is an implementation of a List that uses an array as the backing storage. It obeys the contract specified in the List interface. A *LinkedList* is a different implementation of a List that uses forward and backward pointers to link elements together. It obeys the contract specified in the List interface. The point of this is that in the code that uses this, you can do the following: List&lt;String&gt; list; list = new ArrayList&lt;String&gt;(); list.add("x"); list.add("y"); System.out.println(list.get(1)); But you can also change the implementation with a single change: List&lt;String&gt; list; list = new LinkedList&lt;String&gt;(); // only this line changed list.add("x"); list.add("y"); System.out.println(list.get(1)); Note also that you declared your variable "list" of type "List". This means that you can assign any concrete class that implements the List interface.
While your understanding of the implementation of an interface does seem to be correct, I think you misunderstand what it is used for. An interface is a class with no implementations (there is no code that does anything) to enforce the existence of certain function in any class that implements the interface. References of the interface type can point to any class that implements the interface. The references, because they are of the interface's type, can then call functions within the interface. Say Puzzle is an interface with the function void getMove() Now say PuzzleType1 is a class that implements Puzzle. the reason that an interface is useful is because you can do this given the above information: Puzzle myPuz = new PuzzleType1(); myPuz.getMove(); Now, this isn't directly useful in and of itself, as it would be better to just have PuzzleType1 and never bother with Puzzle. But if we introduce a PuzzleType2 then we can call either of PuzzleType1 and PuzzleType2's getMove functions from a single reference without haveing to have explicit references to either type of puzzle at any time. What the actual function does is determined by your implementation of getMove in the PuzzleType1 class, as there is no implementation in Puzzle. If you want function in an interface to call other function in that interface, you'll have to do that in classes that implement the interface. (or you could use an [Abstract class](http://docs.oracle.com/javase/tutorial/java/IandI/abstract.html)). 
Thank you, I get it now. You have to call the method (e.g. getMove()) in order for it to execute. Then I've got another question. How does the actionPerformed method (in the Interface "ActionListener") work then? I don't code anything like if (KeyPressDetected) Thing.actionPerformed(...); and ActionListener is an interface, so there's no behind-the-scenes code to call actionPerformed. Is it (and all the other listeners) an exception to the have-to-call-it rule, or am I just missing something?
Typically you'd add an action listener to something like a button: final JButton b = new JButton("foo"); b.addActionListener(listener); When the user clicks the button, the JButton code will call the actionPerformed method on the listener for you. It's essentially a *call-back*. Notice the use of the *contract* again. The JButton will invoke any piece of code you give it, as long as it conforms to the ActionListener contract (ie implements a method called actionPerformed()). Where did *listener* come from? Well, you have to define it. If we ignore the complexity of anonymous inner classes, you would do: public class MyJButtonListener implements ActionListener { public void actionPerformed(ActionEvent e) { System.out.println("Hello, world."); } } The code becomes: final JButton b = new JButton("foo"); b.addActionListener(new MyJButtonListener()); 
This ^. In order for an ActionListener to respond to an action, it has to be explicitly registered with the broadcaster via the addActionListener() method.
Explosions. Teleportation. Leveling. Babes.
Why should you do this though? You are overriding the default functionality of .get() which would be to throw an IndexOutOfBoundsException on a negative number. You would be overly complicating life for anyone that comes along behind you and has to maintain your code. Why not rename the method instead of overriding? Or better yet, clearly document the method via creating .last() or something along those lines?
Someone else mentioned [this](http://en.wikipedia.org/wiki/Signed_zero) . I am guessing the OP is working with problems/solutions using this concept.
The answer to 2b is you can't. You have to put that code in a class that implements your interface.
No, you didn't call action performed, that has been done for you. I am going to assume you are using ActionListener in conjunction with some kind of GUI. (as for as I know that is its only use.) When you use addActionListener on a component, it saves a reference to your implementation of ActionListener inside the component, and calls actionPerformed as specified by the component's implementation. (e.g. when you click a JButton.) This is the exact reason interfaces are used. Whoever wrote the JBotton class can tell it, "when someone presses you, call actionPerformed on any action listeners that have been added to this button." So now you don't have to figure out when to call actionPerformed, that much has been done for you. I won't pretend to know how a JButton knows when its been pressed, but ActionPerformed would be getting called from somewhere inside JBotton's implementation. Keep in mind that there are other components beside JBottons that use can use an ActionListener, this is just the most obvious example to me.
Use -1 as the last element in the array because then your negative integer API will be the latter half of "array.length - n" where -n is the number they provide... which will make for a lot less off by 1 errors when using your library. Debate whether it's logical to do it this way or not, but if you ask a java programmer to get the first element in an array, they're going to give you index 0. If you ask for the last, they're going to tell you idx - 1, if you ask for the 4th from the last, they're going to tell you idx - 4. Keeping in sync with the language's and environment's idioms is pretty key to good API design.
Maybe have a boolean to store the turn, something like: public void Battle() { boolean turn = true; while (DeadPlayer == false) { if (turn) { //player 1 does damage to player 2 //player 1 heals itself } else { //player 2 does damage to player 1 //player 2 heals itself } turn = !turn; // Inverts the turn so next time it will be the next players go. } System.out.println("A player has died."); } Apologies if this is not what you are trying to do, that's just the impression I got from reading your post.
&gt;&gt; Remember that each class that inherits from the interface must implement all method signatures in the interface I may be mistaken, but I believe inheritance in Java is put into practice with extension of classes (keyword extends). Inheritence is when a subclass inherits traits from a superclass. Implementing an interface isn't quite inheriting from the Interface class, it's more like agreeing to adhere to its contract. I believe the OO concept being applied here is polymorphism.
Yes, I was speaking loosely and more conceptual I suppose; it is a high-school CS class afterall
a simple example that is somewhat extensible. works for more than 2 robots, assumes turns are round robin and each robot attacks the next in the list and would be easy to add option to select a robot to attack. public class Game { Robot oRobot01 = new Robot(); Robot oRobot02 = new Robot(); private String sUserInput; private boolean DeadPlayer = false; private Scanner in = new Scanner(System.in); public Game(){ System.out.println("Welcome to Battle Bots! Please configure your characters."); Battle(); } public void Battle(){ List&lt;Robot&gt; robots = new ArrayList&lt;Robot&gt;(); robots.add(oRobot01); robots.add(oRobot02); Robot currentRobot; int turn = 0; while (DeadPlayer == false){ currentRobot = robots.get(turn % robots.size()); System.out.println(currentRobot.getName() + "Would you like to attack (press 1) or heal (press 2)?"); sUserInput = in.next(); if (sUserInput.equalsIgnoreCase("1")){ robots.get(turn+1 % robots.size()).addHealth(-100); System.out.println("You dealt 100 points of damage!"); } else{ currentRobot.addHealth(50); System.out.println("You healed 50 points of damage!"); } turn++; } System.out.println("A player has died."); } }
http://docs.oracle.com/javase/tutorial/java/concepts/interface.html
Tangentially related question: Why use an interface instead of a subclass-superclass relationship? I've rewritten interfaces to be superclasses, since I could write a method only using the functions in the interface (like writing removeAll() using isEmpty() and remove()). Is there a performance hit for doing this or something? And what's the difference between an abstract class and an interface?
you can but u have to use EL 2.2. in tomcat 7 you can change your web xml to reflect servlet 3.0 which will essentially take care of it for you ex: &lt;web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" version="3.0"&gt;
Use -1 to represent the end. Obviously zero and "negative zero" are the same number, and can therefore not be distinguished between. Maybe read up on two's compliment notation if you don't understand why this is. But better yet, don't change the behavior of get. Just because you can do something, doesn't mean you should. And you certainly shouldn't be doing this if you want your code to be maintainable. Instead introduce a new method (getReversed or whatever). Make sure you javadoc the shit our of your new method and class. Use positive numbers and behave like get (throwing an out of bounds exception, etc). Zero would be the last element in the list, etc... Better yet, fuck everything about that plan. Instead, create a new class called "ListUtils" (or better yet: CollectionUtils). Add a static method to this class with the following signature: public static T getReversed(List&lt;T&gt; list, int index) (You can also accept Collection instead of List here to make this method more powerful). It's better to put things like this in utils classes because extending build in classes that are already well understood sucks. And anyway, this way you can use your new method for all implementations of the Collection interface including the various set implementations. Your original plan would have limited the new method to only working with one class (ArrayList or whatever).
Yes that's why in Java you must use the "implements" reserved word instead of "extends" which is used for inheritance.
One aspect is multiple inheritance - Java doesn't have it for classes, but does for interfaces. 
Major differences between an abstract class and an interface are: you cannot instantiate an abstract class (no 'new'), partial implementation is allowed, multiple-inheritance is not allowed (you use 'extends' keyword as any regular concrete class) and you can include instance variables and modifiers such as 'static' in an abstract class.
How's that?
An instantiation, if I'm not mistaken, would look more like this: ObjectType object = new ObjectType(); Otherwise you're just making new pointers. But I'm more confused about the for loop. Why would anyone overwrite the same object 10 times? Context seems pretty important here.
Both ways do the same thing for the most part. The only difference is 'object' will keep a reference to arrayListName.get(9) after the for loop in the 2nd one. arrayListName.get(i) just returns the address of the ObjectType object stored at that location in the ArrayList, it doesn't copy it or make new space for it. If you don't need a 'object' outside of the for loop, I'd say do it the first way.
In neither of these examples is an instantiation happening. The reason being that you are retrieving an object from an arraylist and calling it "object". Both examples will execute at the same speed, but in the top example, you keep "object" inside the scope of the for loop. This is good practice because you always want to keep as few variables in scope as possible. 
 1) Read in each row of the input file 2) Insert it into your BST a) If currentnode = null, insert value into null b) if value &lt; currentnode, traverse left c) if value &gt; currentNode, traverse right. 
RAINBOW SNAKE
Obstacles. 
I like where your head's at. Once I'm done with that I might just head straight into a Michael Bay film!
I did manage to get local multiplayer going. Really wasn't very difficult either. Thanks a lot! PS I'm still taking ideas seeing as it's not due til Monday
Because of //more code here. You might want to do object.foo(); object.bar(); object.foobar();. Sure you can do arrayListName.get(i).foo(); arrayLi.... see I'm even too lazy to type all that out. Also if you're doing a lot of calls to the object reference it can be slightly easier to read as people won't have to wonder about any .get(i) calls. If you make the calls on arrayListName.get(i) you could slip a .get(i + 1) in there or whatever and it might be missed. Slightly more clear with an unindexed reference.
Ability to shoot &amp; break obstacles, if you have them. Limited ammo, and clearly if you shoot yourself, you lose.
Yes, I know that much. I'm just having trouble with the actual implementation of what you said. I'm reading in the file using nextInt(), this is what I have so far, I decided to pass off most of the tree building work to a recursive method public BinaryNode insert(Comparable value, BinaryNode node) { if (node == null) { size++; return new BinaryNode(value); } else if (value.compareTo(node.getElement()) &lt; 0) node.left = insert(value, node.left); else if (value.compareTo(node.getElement()) &gt; 0) node.right = insert(value, node.right); return node; } this method is called with this, which is in the buildtree method; root = insert(sc.nextInt(), root);
Thank you (and everyone else) for explaining this, and also... Holy fuck, /r/java gets up early. Or stays up late. Whichever. :| Thanks!
So.. what's the question? You seem to be on the right track. I see a problem with root = ... You may be losing your reference to the actual root node. (I don't know the rest of your code.. so I can't tell if you store another reference).
**Short answer to your specific question:** No, it's just getting a reference to that object from `arrayListName`. It's already been instantiated by the time `methodName` is called. Furthermore, your second code sample would actually be exactly the same as the first. Where you declare the local variable (`ObjectType object;`) only affects whether code that comes *after* the loop can still see it. --- **If you're interested in a general explanation of what the considerations are, read on:** In general, modern JVMs are pretty good at optimizing instantiations of short-lived objects inside loops. If, in code that is executed a lot, the object never becomes visible to anything other than the local variable in your method (or local variables in other methods called from your method and running on the same thread), the JVM will allocate it on the stack, which is very fast. This is called [escape analysis](http://en.wikipedia.org/wiki/Escape_analysis), and was added to the Sun/Oracle HotSpot JVM with Java SE 6. Avoiding unnecessary instantiations can still help performance. For instance, consider having the choice between: public void methodName() { ObjectType object = new ObjectType(); for (int i = 0; i &lt; 10; i++) { // More code here } } …or… public void methodName() { for (int i = 0; i &lt; 10; i++) { ObjectType object = new ObjectType(); // More code here } } Notice the `new`? In this case you *are* doing an instantiation. Since `object` is a local variable in either case, you're probably better off with the first example instead of the second. However, you do *not* want to keep it around if you don't really need to, like this: private ObjectType object = new ObjectType(); public void methodName() { for (int i = 0; i &lt; 10; i++) { // More code here } } This is fairly likely to make the fast stack allocation I mentioned impossible, since it might become visible to other threads and/or the method that called `methodName`. It'll also waste memory by keeping around a useless object.
Ok, I actually just solved it myself &lt;_&lt;. I changed the insert call to this root = new BinaryNode(sc.nextInt()); while(sc.hasNext()) { node = insert(sc.nextInt(), root); } However, now that I have the tree built, I need to print the tree out in preorder, inorder and postorder. I'm not sure exactly how to actually begin the traversal of the tree with these. How do I start at the exact node I need to for each one?
the three traversal commands are: *print(), *moveLeft(), *moveRight() preorder, inorder, and postorder are just different combinations of those three. Give it some thought, you'll get it...
is there a command for moving to a parent node? Thanks for the help so far btw. 
I know, but (with an int) the signed bit is ignored when it's 0.
There's no need to "move" to a parent node. Think of the tail case of the recursion. What happens when you're at a leaf when leftChild and rightChild are null? What's the next line that gets executed when you get to a leaf?
the traversals are some of the most basic of the BST implementation, and helper methods will help you manage things a little better I think, excuse the pseudo-code/C++: void inorder_traversal(){ Node* n = root; inorder_helper(n); } void inorder_helper(Node* n){ if(n==NULL) return; else{ inorder_helper(n.left); System.out.print(n.data + ", "); inorder_helper(n.right); } } Inorder traversal prints Left, Node, Right, so the recursive calls are wedged between the print-line, those 3 operations are rearranged depending on the type of traversal. Hope this helped. 
I think I can get it now, thanks. :)
Yes, that did help, thank you, I see how they work now. :) 
Actually, I'm still a bit hung, the methods that I need to use don't include parameters, how can I use it without parameters? =/
You can't use recursion if you are unable send the current Node's as parameters.. You can solve this iteratively, using a different data structure called a Stack but it is tricky and confusing.
We've covered stacks, but I just realized that I have 2 instances of this method available, one in each class. I can add parameters to the other one after I use the one the client code calls. I hate my teacher sometimes &amp;#3232;\_&amp;#3232;. Thanks again. (:
You're teacher should have taught contracts and implementations as abstract concepts before teaching you about interfaces and classes and their specific use in Java. Until you understand the underlying concepts involved, you won't understand Java's use of them. Basically, you're teacher sucks.
Impress your professor with a for each loop. for(int i: arrayListName){ ObjectType object = arrayListName.get(i); } and no, a new object isn't being created, because one was already created and resides in the arrayListName. This is just passing a pointer around.
If you go off the edge of the screen, you could reappear on the other side. Off the top: reappear at bottom. Torus geometry. Then, other interesting geometries appear: if you disappear off the top, you reappear at the bottom, but inverted left to right... Portals! Allow you to put down portals, so that when you finally run out of room, you go into the portal you placed earlier, and come out of the other - which you placed earlier.
That syntax won't impress. Edit: Seeing how it's completely wrong and won't compile. It should be for (ObjectType object : arrayListName) { ... } 
what is the difference? i know that implementing an interface allows an object to participate in polymorphism, for example in generics
Unfortunately this is stuff we've already done- so it wouldn't impress him :p Similarly we've also done iterator objects.
Polling can be done with Quartz http://oreilly.com/pub/a/java/archive/quartz.html?page=1 This is quite an in depth article but definitely the right way to go.
I'd say that blocking loop approach is not ugly at all, but: &gt;an arraylist which has been declared as volatile Is not going to be safe for modification from multiple threads - only the pointer to it is volatile. Use a ConcurrentLinkedList!
You could use a DelayQueue: http://docs.oracle.com/javase/1.5.0/docs/api/java/util/concurrent/DelayQueue.html Just put the stuff you want to poll in there, together with a delay when it can be polled. Then you just take() from the queue, the method will block if nothing is ready to poll. This is thread safe, so you can add() and take() from wherever you want. 
that is a good piece of advice!
my initial reaction: wtf is dr java? 
Beauty, eh?
My opinion is have an all powerfull API first. Yes, this will make it ugly and hard to use in some cases. But others, like me, can then take that API an make it easy to use. This is better than the other way around. 
I'm not sure there's really a distinction here. Inheritance describes an "is-a" relationship. Concrete classes that implement an interface constitute an "is-a" &lt;interfaceType&gt; type. The Java language designers decided to forego multiple inheritance in favor of a singly rooted inheritance tree and interfaces.
What you want is a scheduled executor. Create it by calling: ScheduledExecutorService executorService = Executors.newScheduledThreadPool(5); and submit callables using: executorService.scheduleAtFixedRate(callable, 0, rate, TimeUnit.SECONDS);
I'm not saying I'm right. But, could you explain how polymorphism is implemented in Java? It seems that inheritence and polymorphism are two distinct concepts, and that inheritence is implemented in Java through extending classes and polymorphism is implemented through interfaces.
They are definitely different concepts but not necessarily distinct from one another. Strictly speaking, if a language supports inheritance then it allows classes, or modules etc, to inherit **functionality** from parent or base classes in the form of attributes and behavior. So technically you are correct in that one doesn't really inherit from an interface. Polymorphism is essentially the ability for different types of objects to respond to the same messages in a manner specific to the object but transparent to the message sender. In other words, by having different objects adhere to the same interface. Note, my use of the word interface here is in the more generic sense of a common set of actions. Back to Java practicalities; When you define a set of public methods in a class you are still defining an interface, just not defining an Interface. The child classes of that base class must still adhere to the interface (since you can't reduce the visibility of over-ridden methods) and thus we get polymorphism through inheritance of an interface.
What i would like is the "Hi this may not work" text to appear into the JFrame,if you want i can post the code.
System.out.println will not work if you want to put text in the jframe you need to created a text area and fill it with text. Have a look at this http://www.codeproject.com/Messages/3009288/Displaying-Text-on-a-JFrame.aspx
Ah ok i'll try that now :)
lol why would it be on the frame? you're outputting it to console with system.out. you need to add a JLabel set the text then add it to the window label1 = new JLabel("Hi this may not work"); frame.add(label1); 
She did, and I understand contracts and implementations. I just got confused by ActionListener vs Any other Interface.
http://imgur.com/x0iDu
http://imgur.com/x0iDu
Fuck you
You should use [Ant](http://ant.apache.org/) for builds - using Ant's [jar task](http://ant.apache.org/manual/Tasks/jar.html), you can put anything you want in the jar. Edit: Here's a link to a slightly censored build file used in one of my projects. It doesn't just shove everything in the jar file, but it would only need a few tweaks to do so (the jar task just slurps up a directory, so copy anything you want into the directory it slurps - just make sure the relative paths of everything remain the same from your dev environment). It should help get you started at least: [http://pastebin.com/KqSPTuMg](http://pastebin.com/KqSPTuMg)
"new ObjectOutputStream(new FileOutputStream("filename.data")).writeObject(Object);" This line here is probably creating the data in the eclipse binary folder. You need to put some sort of absolute path for your file output or do something completely different.
Either that or maven. Maven will include everything you put in the resources directory on the class path of your jar.
Yeah, I'd say praying to god would throw a NullPointerException, *seeing as god is null.*
My university focuses on java for the first few semesters. While this is good to get you programming, I highly recommend learning C. It will teach you how to construct code carefully and make you learn pointer and memory management, things that java does for you. 
Refresh the project: In the 'Navigator' view, right click the project and select 'Refesh', or left click on the project and press F5. The new file will appear and be available for inclusion in your jar. 
I think you will have to put it in a *source folder*. Just right-click the project in the package explorer, and create a new source folder (via new, blabla, ...), call it 'data' or something and write your files in there. Now what will happen during compilation is that eclipse will copy all (non-java) files in your custom source folder to the bin folder. Anything in the bin folder will go in your jar file. You can then retrieve the files' content via [ClassLoader.getResourceAsStream()](http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/ClassLoader.html). Note that if your files change, eclipse has to notice that, so you will have to refresh the source folder in the package explorer. Sometimes you also have to clean the bin folder via Project-&gt;clean... It is also noteworthy that you could throw the files in your standard src source folder, but that looks messy :)
Creates the files in the project folder. The working path is set to the project folder, the *class path* is set to the bin folder.
True. They show up in the project folder root. I guess I'll try and put them in the src folder instead and see what happens.
Thanks. Ant is a completely new concept for me so I'll have to look into it. I just moved from jGRASP to Eclipse and I'm a little intimidated by all the features :)
Heh, you're right. Although I don't see any way to include files from the project root in the jar file. No prob, I'll just create them in a source folder.
This makes a lot of sense, thanks. I don't think it'll be too messy with only 8 classes and 4 .data files :)
Never go full retard.
This program is a game where you select a number and if the number you selected is the same number as on the screen then you win.What i want is to have an option at the end which says "Would you like to play again?" , if they say yes then it plays again,if no then it quits.
put the thing in a while loop and ask the user to play again by pushing y. If the value is other than y, exit Or put your code into a function, at the end of the function prompt the user, then recall the function.
What I would do is set a boolean variable at the top called correctGuess and set it to false (this will allow the while loop to loop the first time). Make a while loop surrounding the whole game with the condition being correctGuess == false. Now, in the if statement, set the correctGuess to true, causing the looping to stop. In the if else statement, do not change the boolean variable. This will cause the while loop to keep looping. Happy Looping!
How do i place the game into a loop though?
 while(input.equals("Yes")){ SHOVE GAME CODE HERE System.out.println("Do you want the loop to continue?"); input = scanner.next(); } Put everything from the Hello to the Thanks for playing message where I indicated
The problem with recursion is you can eventually get a StackOverflowError. Probably unlikely you'll hit it without playing a couple thousand rounds, but it will eventually happen. (Honestly, though, I've only seen them when I accidentally made an infinite loop.)
Slight tweak: you can move loop condition to the bottom with a do-while loop: do { //game code //ask to play again } while(userWantsToPlayAgain); //don't forget the semicolon here. You could also add a second loop inside the game, arround the guess code. If they guessed the correct number, break out of the loop, otherwise, print "higher" or "lower" and loop to have them re-guess.
But where do i put that code?
True that would work better (haven't used many do while loops, probably should) either way I was just explaining the other person's code
I didn't even know there was a /r/javahelp. /r/java is filled with with people asking for homework help so I figured all things java related went there. I'll keep an eye on javahelp if people are really using that to post problems
One little thing, java.lang.* with all its sub-packages are implicitly imported by the compiler; there's no need to type the "import" directive.
Really?
I'm a fucking noob just tell me god dammit
I did this but what do i do? http://imgur.com/098xE
You never wrote do{ And userWantsToPlayAgain doesn't really mean anything. You still need to get input from the user after each game.
Well then how do i get the input from the user? Do i put "Do you want to play again?: ) int inputLetter = keyboard.nextInt(); What do i put?
What exactly do you want the user to input if s/he wants to continue or quit?
I want them to input "Y" if they want to play again and anything else to quit
try !vote.equals('Q') || !vote.equals('q') instead of vote != 'Q' || vote != 'q' also do it for the y and n options btw : theoretically; your program will run smoother if you replace the second if - test by "else if" - just sayin'
If the vote is Q, then the second part will be true, so the expression will be true If the vote is q, then the first part will be true, so the expression will be true If the vote is anything else, then both parts will be true, so the expression will be true What you want is vote != 'Q' &amp;&amp; vote != 'q'
thank you! i will try this. and i definitely appreciate the advice. It gave me a 'char cannot be dereferenced' error. if (!vote.equals('Q') || !vote.equals('q')) yesVotes++; if (!vote.equals('N') || !vote.equals('n')) noVotes++; } while (!vote.equals('Q') || !vote.equals('q')); } totalVotes = yesVotes + noVotes;if (!vote.equals('Q') || !vote.equals('q')) { int reply = JOptionPane.showConfirmDialog(null, "Quit?", "Warning!", JOptionPane.YES_NO_OPTION); if (reply == JOptionPane.YES_OPTION) if (!vote.equals('Q') || !vote.equals('q')) { int reply = JOptionPane.showConfirmDialog(null, "Quit?", "Warning!", JOptionPane.YES_NO_OPTION); did I do something I wasn't supposed to? thanks again
I didn't realize I signed up for /r/domyhomework
thanks, this helped a lot. i'll be able to figure it out from here.
Ant is complex, difficult to learn and brittle. Don't use Ant unless you have an actual need for it.
haha you're right :D i checked it, but i thought "naah that should be right..."
well, I remember a time you had to actually download them separately. I think you can generate the docs though the Javadoc Tool and the source code.
If (A != || A != ) type expressions are always true, almost always a bug and poor style.
Write a for-each loop that iterates through the list of names and compares each to the entered name. Takes one for-statement and one if-statement.
a side note, you can use the IgnoreCase feature to reduce redundant code, if (!vote.equalsIgnoreCase("q"))
Something like `array.contains(name)`?
Could you post sourcecode? String has a method equals to compare it to another string, if that helps. 
Do you need to use an array? If you use a list instead you can do something like this List&lt;String&gt; testlist = new ArrayList&lt;String&gt;(Arrays.asList("Boba","Han","Chiewie")); if(testlist.contains("Boba")) { System.out.println("Hello Boba"); }
You could also change a small thing to clean up the code a bit: add .toLower() to vote=... so it reads: vote = voteString.charAt(0).toLower(); Then you can skip testing for capital letters.
How is this recursion? It's a while loop, lacks a base case, and lacks any conditions. In this case, nothing is stored either.
The second paragraph of my parent, "put your code into a function, and at the end of the function, it they want to play again call yourself" is recursion.
"switch to IntelliJ"... best Eclipse tip I can offer
Arrays.binarySearch
You can download them from the Java download page: http://www.oracle.com/technetwork/java/javase/downloads/index.html (all the way at the bottom under additional resources you can find the documentation with a red download button)
This means that it is a float (which usually means calculations can be done in less time, subject to some inaccuracy) instead of a double. If you came from a simple version of java such as processing (www.processing.org) all you decimal place numbers such as 1.1 would need to be converted to 1.1f in java
That designates that it is a float and not a double and a long and not an int. I will try to find the documentation for you. 
http://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html There is the documentation. Java just defaults to int and double primitives and that is why you need to indicate that you want it as a long, short or float instead. Let me know if I can clarify anything
Ant is about as simple as it gets for build tools. Ever used GNU autotools? *That's* difficult to learn. Ant is a cakewalk. Ant is only brittle if you write your scripts poorly, which goes for any build automation system. Garbage in garbage out. All projects of any scope beyond a toy require some kind of build automation. For Java, Ant's the front runner - simple, stable, extensible, and great IDE integration to boot.
Longs have to be denoted with an L at the end if you are assigning a number that is more than 32 bits, or else it will be interpreted as a signed 2's compliment 32 bit number and the sign be extended until it is 64 bits. Also, the docs listed by Painframe.
If your only concern is wether the string is in the list, and not what ordinal it's at, consider using a Set like HashSet; you'll get better performance than any sort of array or list search algorithm. Like lists, you'll just use the contains(Object) method.
So is it the same as typecasting like (int)k where k is a long, or is it just saying what it is outside of the beginning definition: (Float f = 5.6;
So is it different from typecasting? Like if I had Long time=62883.827L; Vs (int)time
When you put a numerical constant into your Java source code, the compiler will normally compile it into a double if it contains a decimal point or an int if it doesn't. The f and l suffixes tell the compiler to use the value as a float or long instead. This is really important for floats, as they are a smaller data type than a double, so a line like float x=1.5; would normally give you either a compile time error or warning (I forget which) about downconverting the implied double to a float. 
Why what's wrong with r/java
Ok that makes sense, I really only use inta and double right now but it will be useful info for later
You can also use getGraphics().drawString("what's up",x,y); 
Array.aslist(yourArray).contains(yourString)
this or go through the array with a enhanced for and use the String equals method. 
Else applies only to latest if. Basically what you want is: if (...) { ... } else { if (...) { ... } else { ... } } ...which can be written more nicely this way: if (...) { ... } else if (...) { ... } else { ... }
If you mean that the output is: &gt;Merry Christmas &gt;Nothing happens today. It's so boring! Then that is exactly what your code is doing. It is going in to the first if statement to check if the date is December 4, which it is, so shows the message box. At this point, that first if statement ends. It then goes in to the second if statement which checks if it is Jan 1, which it is not, so goes into the else part (since it is not Jan 1), and shows that message box. To make it only show one of the three boxes, add an else before the second if statement to make it all a part of the same if statement. 
Ok, here's a reasonably efficient loop for ints 3 and up: int N = Integer.parseInt(args[0]); boolean possiblePrime = false; for (int i = 3 ; i &lt;= N ; i += 2) { // increment by 2 in the loop, because we don't // need to check even numbers larger than 2. for (int j = 2; j &lt;= (Math.sqrt(i) + 1); j++) { if (i%j == 0) { possiblePrime = false; break; } else { possiblePrime = true; } } if (possiblePrime) { System.out.println(i); } } The sieve of Erastothenes is a lot more efficient, though, but this is more in line with what you're attempting to do.
Oh, and 1 is not a prime.
Ant is overkill for what he's trying to achieve. The problem isn't Ant itself, the problem is that the advice OP gets is "learn this complex tool" when what he should have been told was "press F5". 
private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) { public String doInBackground() { String L = "Hello"; int Num = Integer.parseInt(m1.getText()); int Num2 = Integer.parseInt(m2.getText()); nu = Num; for (int kk = nu; nu &gt; 0; nu--) { if (O1.isSelected()) { for (int num3 = nu; nu &gt; 0; nu--) { try { try { Thread.sleep(Num2 * 1000); } catch (InterruptedException ex) { } Robot robot = new Robot(); robot.keyPress(KeyEvent.VK_F); } catch (AWTException e) { e.printStackTrace(); } } } } return L; } This is the code I have, I tried to use the SwingWorker but I am getting Illegal Start of expression errors. Thank you for your help.
Try creating a Timer object containing your infinite for-loop. After that just put start and stop methods inside of jButton actionListeners. Timer is part of the javax.swing package Timer(int delayInMilliseconds, actionListner listener) void start() void stop() p.s. Make sure your timer's scope includes the jButtons' action listeners
I know this is somewhat irrelevant but why are your creating a new Robot in every iteration of the for-loop?
Im not sure tbh but does it make a difference if i remove it?
Yes. You're wasting a lot of cycles repeatedly creating it. You should move it out of the for-loop. Just after the line nu = Num; for instance.
Thanks for your help, you wouldn't know how to implement doInbackground would you ;)?
As mandrosen pointed out, SwingWorker might be what you're looking for. Take a look at this: http://docs.oracle.com/javase/tutorial/uiswing/concurrency/simple.html
Personally I think this is the better way to approach it. Its a little more advanced, in that you should never hard code if statements around data that might change. Next week you want to add Aunt Mary's dogs birthday. So I am creating a data structure to hold a Map of dates and messages. You iterates that Map to compare dates etc. Here it goes. GregorianCalendar today = new GregorianCalendar(); boolean bGotHit=false; for (GregorianCalendar date : important_dates.keySet()){ if ( date.get(Calendar.MONTH)== today.get(Calendar.MONTH) &amp;&amp; date.get(Calendar.DAY_OF_MONTH)== today.get(Calendar.DAY_OF_MONTH) ){ String mesg = important_dates.get(date); JOptionPane.showMessageDialog(null, mesg); } } if ( !bGotHit){ JOptionPane.showMessageDialog(null, "Nothing happens today. It's so boring"); }
No it is not quite the same, it is similar in concept though. Typecasting is between objects are are usually upcast from a subclass towards a root or downcast from a super type (up the stream closer to the root class (object in all of java) down to a subclass. These are primitives so it is an instruction to the compiler that the value needs to be stored with this much space and this format. Someone let me know if I missed the point, it has been a long while since I first learned java and I take much of it for granted now.
You're introducing unnecessary complexity. One step at a time. He should master else-ifs before he starts trying to use generics :P Quite nice code though, but there's a problem with your last if: bGotHit is initialized to false and, unless my eyes fail me, there's no statement that sets it true, so your final if there will always run.
You can format code by pressing the spacebar 4 times to indent lines. like this
There's no generics in there, unless my eyes fail me.
where do you call stick.chooseone() ?
Can we see your driver code? I'm a little confused as to why Revealer contains a reference to Sticker, and Sticker contains a reference to Revealer. I think what might work best for you is just calling new Reveler() from your driver, and having Revealer's constructor call stick.chooseone() and then stickertell(). Then there's no need for Sticker to know anything about revealer.
It's in a third class called DoorsClass... It's called 3 times in 3 options of the if statements. Here I'll bold where they are... EDIT: I guess you can't bold in code... Just ctrl + f the two asterisks, sorry. public class DoorsClass { Switcher switch1 = new Switcher(); Sticker stick1 = new Sticker(); Revealer reveal = new Revealer(); ScoreKeeper KeepingScore = new ScoreKeeper(); public void startIt(){ int Door1place = 0; int Door2place = 0; int Door3place = 0; Random WhichSet = new Random(); int Setter = WhichSet.nextInt(3) + 1; if(Setter == 1){ Door1place = 1; reveal.crossoffdoor1(); KeepingScore.adoor1(); ** stick1.chooseone(); ** if(Door1place == stick1.doorchoose){ KeepingScore.stcorrect(); } switch1.chooseone(); if(Door1place == switch1.doorchoose2){ KeepingScore.swcorrect(); } } else if(Setter == 2){ Door2place = 2; reveal.crossoffdoor2(); KeepingScore.adoor2(); ** stick1.chooseone(); ** if(Door2place == stick1.doorchoose){ KeepingScore.stcorrect(); } switch1.chooseone(); if(Door2place == switch1.doorchoose2){ KeepingScore.swcorrect(); } } else if(Setter == 3){ Door3place = 3; reveal.crossoffdoor3(); KeepingScore.adoor3(); ** stick1.chooseone(); ** if(Door3place == stick1.doorchoose){ KeepingScore.stcorrect(); } switch1.chooseone(); if(Door3place == switch1.doorchoose2){ KeepingScore.swcorrect(); } } KeepingScore.total(); KeepingScore.showscore(); } } 
You're not referring to the same Sticker object in the Revealer as you do in DoorsClass. The int is zero because you haven't actually set that variable for that particular Sticker instance. Instead of making a new Sticker in the Revealer class, pass the Sticker in from DoorsClass to the Revealer constructor: DoorsClass: Sticker stick1 = new Sticker(); Revealer reveal = new Revealer(stick1); Revealer (add constructor and remove stick initialization): Sticker stick; public Revealer(Sticker sticker) { this.stick = sticker; }
Ah, thanks. combining your comment w/ others', I see that I did some redundant/unnecesarry things. I'll go and do this now.
look closely at your Revealer class and its attribute "stick". 
[Here's](http://pastebin.com/ss919Q2e) a link to a pastebin, the classes are in order top to bottom-- GameStarter, DoorsClass(The one you want?), Revealer, ScoreKeeper, Sticker, and Switcher. I'm just starting out, I guess I was just running my code in circles from what you said.
You said you were using a Map? As in Map&lt;K, V&gt;?
I'm not the person that posted the code above. But no generics were provided in the original code. They could be, but they aren't. Granted there is no casting either so likely there would be. Plus generics aren't that hard anyway.
My mistake. Anyway, to instantiate a Map in the first place you, have to learn the syntax and semantics. It's simple once you understand it but (And no offense meant to the op) this guy seems pretty novice.
 } else if (e.getSource() == jb1) { if (list1.getSize() == 0) { JOptionPane.showMessageDialog(null, "No Previous Record"); } else { System.out.println("Button 1"); // First inputLine1.setText(list1.get(0).getName()); inputLine2.setText(list1.get(0).getLast()); inputLine3.setText(list1.get(0).getMI()); inputLine4.setText(list1.get(0).getPN()); inputLine5.setText(list1.get(0).getSA()); inputLine6.setText(list1.get(0).getCity()); inputLine7.setText(list1.get(0).getState()); inputLine8.setText(list1.get(0).getZip()); inputLine9.setText(list1.get(0).getBirth()); cur = 1; } Current.setText("Cur: " + cur + ". Total: " + total); } else if (e.getSource() == jb2) { System.out.println("Button 2"); // Previous cur--; if (cur == 0){ JOptionPane.showMessageDialog(null, "No Previous Record"); cur++; } else { int temp = cur - 1; inputLine1.setText(list1.get(temp).getName()); inputLine2.setText(list1.get(temp).getLast()); inputLine3.setText(list1.get(temp).getMI()); inputLine4.setText(list1.get(temp).getPN()); inputLine5.setText(list1.get(temp).getSA()); inputLine6.setText(list1.get(temp).getCity()); inputLine7.setText(list1.get(temp).getState()); inputLine8.setText(list1.get(temp).getZip()); inputLine9.setText(list1.get(temp).getBirth()); } Current.setText("Cur: " + cur + ". Total: " + total); } else if (e.getSource() == jb3) { System.out.println("Button 3"); // List all } else if (e.getSource() == jb4) { System.out.println("Button 4"); // Next cur++; if (cur &gt; total){ JOptionPane.showMessageDialog(null, "No Next Record"); cur--; } else if (cur == total){ inputLine1.setText(""); inputLine2.setText(""); inputLine3.setText(""); inputLine4.setText(""); inputLine5.setText(""); inputLine6.setText(""); inputLine7.setText(""); inputLine8.setText(""); inputLine9.setText(""); } else { int temp = cur - 1; inputLine1.setText(list1.get(temp).getName()); inputLine2.setText(list1.get(temp).getLast()); inputLine3.setText(list1.get(temp).getMI()); inputLine4.setText(list1.get(temp).getPN()); inputLine5.setText(list1.get(temp).getSA()); inputLine6.setText(list1.get(temp).getCity()); inputLine7.setText(list1.get(temp).getState()); inputLine8.setText(list1.get(temp).getZip()); inputLine9.setText(list1.get(temp).getBirth()); } Current.setText("Cur: " + cur + ". Total: " + total); } else if (e.getSource() == jb5) { System.out.println("Button 5"); // Last inputLine1.setText(""); inputLine2.setText(""); inputLine3.setText(""); inputLine4.setText(""); inputLine5.setText(""); inputLine6.setText(""); inputLine7.setText(""); inputLine8.setText(""); inputLine9.setText(""); cur = total; Current.setText("Cur: " + cur + ". Total: " + total); } else if (e.getSource() == jb6) { System.out.println("Button 6"); // Add Entry aPerson = new Person(inputLine1.getText(), inputLine2.getText(), inputLine3.getText(), inputLine4.getText(), inputLine5.getText(), inputLine6.getText(), inputLine7.getText(), inputLine8.getText(), inputLine9.getText()); list1.add(aPerson); inputLine1.setText(""); inputLine2.setText(""); inputLine3.setText(""); inputLine4.setText(""); inputLine5.setText(""); inputLine6.setText(""); inputLine7.setText(""); inputLine8.setText(""); inputLine9.setText(""); cur++; total++; Current.setText("Cur: " + cur + ". Total: " + total); inputLine1.grabFocus(); } else if (e.getSource() == jb7) { System.out.println("Button 7"); // Delete Entry } else if (e.getSource() == jb8) { System.out.println("Button 8"); // Sort by First list1.getAll(); list1.sortFirst(); } else if (e.getSource() == jb9) { System.out.println("Button 9"); // Sort by Last } else { System.out.println("Event was fired from unhandled widget"); } } //_________________________________________________________ import java.util.Collection; import java.util.Collections; import java.util.LinkedList; import java.util.List; import java.util.ListIterator; public class Contacts&lt;T&gt; { private java.util.LinkedList&lt;T&gt; list = new java.util.LinkedList&lt;T&gt;(); private ListIterator&lt;T&gt; iterator; public int getSize() { return list.size(); } public void add(T Name) { list.add(Name); } public void delete(String Name) { for (int i = 0; i &lt; list.size(); i++){ System.out.println("In the For Loop"); if (((Person) list.get(i)).getName().equals(Name)) { System.out.println("Found there name, attempting to remove."); list.remove(i); } } } public T get(int i) { return list.get(i); } public T getAll(){ // This one will print all the names, but not in order. for (int i = 0; i &lt; list.size(); i++){ System.out.println(((Person) list.get(i)).getName()); } T iterator = (T) list.iterator().toString(); return iterator; } public void sortFirst(){ // This doesn't work. for (int i = 0; i &lt; list.size(); i++){ List&lt;String&gt; FirstName = null; FirstName.add(((Person) list.get(i)).getName()); // This is where I'm having problems. Trying to get it to sort the list of persons based upon value of list.get(i).getName() but can't find a way to program it without getting errors. List&lt;String&gt; firstName = (((Person) list.get(i)).getName(); System.out.printf(Collections.sort(FirstName)); iterator = (ListIterator&lt;T&gt;) list.listIterator(); while (iterator.hasNext()){ System.out.print(((Person) (iterator).next()).getName()+" "); } } } } //____________________________________________________________________________________________________________________ import java.util.ArrayList; import java.util.List; class Person extends Contacts { private String First; private String Last; private String MI; private String PN; private String SA; private String City; private String State; private String Zip; private String Birth; public Person(String il1, String il2, String il3, String il4, String il5, String il6, String il7, String il8, String il9) { setName(il1, il2, il3, il4, il5, il6, il7, il8, il9); } public void setName(String il1, String il2, String il3, String il4, String il5, String il6, String il7, String il8, String il9) { this.First = il1; this.Last = il2; this.MI = il3; this.PN = il4; this.SA = il5; this.City = il6; this.State = il7; this.Zip = il8; this.Birth = il9; } public String getName() { return this.First; } public String getLast(){ return this.Last; } public String getMI(){ return this.MI; } public String getPN(){ return this.PN; } public String getSA(){ return this.SA; } public String getCity(){ return this.City; } public String getState(){ return this.State; } public String getZip(){ return this.Zip; } public String getBirth(){ return this.Birth; } } Thanks for any advice. Anything would be helpful.
Jesus...sorry can't help but was simply intimidated . _ .
You can use String.split() to make an array of the individual dates and formulate a regex that you iterate over it. 
Sorry I think I was not descriptive enough. I'm running a method where the dates are passed via a parameter such as: Jan 04 - Jan 08, 2012 and Dec 27, 2011 - Jan 03, 2012, etc.. and so i need these dates checked to see if they follow the pattern as listed above. Thanks in advance.
((JAN ([0-2]?\d)|(3[0-1]))|(FEB [0-2]?\d)|(MAR ([0-2]?\d)|(3[0-1]))|(APR ([0-2]?\d)|(30))|(MAY ([0-2]?\d)|(3[0-1]))|(JUN ([0-2]?\d)|(30))|(JUL ([0-2]?\d)|(3[0-1]))|(AUG ([0-2]?\d)|(3[0-1]))|(SEP ([0-2]?\d)|(30))|(OCT ([0-2]?\d)|(3[0-1]))|(NOV ([0-2]?\d)|(30))|(DEC ([0-2]?\d)|(3[0-1]))), \d{4} Note that this won't check for leap years, but it will make sure that the date is valid, other than that. This also allows the first date digit to be skipped (02 and 2 are both valid). Remove the ? if you only want 02. This also only accepts capitalized months, but it wouldn't be hard to change that. Add (?i) to the beginning if you don't care about case. Edit: Misread what you want. This will extract all single dates, not ranges. Edit2: (((JAN ((0?[1-9])|([1-2]\d)|(3[0-1])))|(FEB ((0?[1-9])|([1-2]\d)))|(MAR ((0?[1-9])|([1-2]\d)|(3[0-1])))|(APR ((0?[1-9])|([1-2]\d)|(30)))|(MAY ((0?[1-9])|([1-2]\d)|(3[0-1])))|(JUN ((0?[1-9])|([1-2]\d)|(30)))|(JUL ((0?[1-9])|([1-2]\d)|(3[0-1])))|(AUG ((0?[1-9])|([1-2]\d)|(3[0-1])))|(SEP ((0?[1-9])|([1-2]\d)|(30)))|(OCT ((0?[1-9])|([1-2]\d)|(3[0-1])))|(NOV ((0?[1-9])|([1-2]\d)|(30)))|(DEC ((0?[1-9])|([1-2]\d)|(3[0-1]))))(, \d{4})? \- )?((JAN ((0?[1-9])|([1-2]\d)|(3[0-1])))|(FEB ((0?[1-9])|([1-2]\d)))|(MAR ((0?[1-9])|([1-2]\d)|(3[0-1])))|(APR ((0?[1-9])|([1-2]\d)|(30)))|(MAY ((0?[1-9])|([1-2]\d)|(3[0-1])))|(JUN ((0?[1-9])|([1-2]\d)|(30)))|(JUL ((0?[1-9])|([1-2]\d)|(3[0-1])))|(AUG ((0?[1-9])|([1-2]\d)|(3[0-1])))|(SEP ((0?[1-9])|([1-2]\d)|(30)))|(OCT ((0?[1-9])|([1-2]\d)|(3[0-1])))|(NOV ((0?[1-9])|([1-2]\d)|(30)))|(DEC ((0?[1-9])|([1-2]\d)|(3[0-1])))), \d{4} Again, this does not account for leap year. Other than that, it should be good. Make sure you are able to figure out what I'm doing, though, especially if this is for class. If you don't want to support single-digit dates, remove the ? after each 0.
I changed your Contacts class a bit. It was fairly confused. It was wrong for it to be genericized ("&lt;T&gt;") because the only class it worked with was Person so it was just adding a lot of unnecessary typecasts. The getAll() method actually *printed* rather than *got* -- maybe you want both but those are two separate tasks. The linked list was also not really the right sort of list to use because you were for-looping by index (which would give it O(n²) complexity (it would step through the list for every call to get(i) in the loop)). I'm not sure if you intend the sortFirst() method to sort the list (implied by the method name) or just print a sorted representation of it (which is what your previous code seemed to be trying to do), but anyway. The general idea behind sorting with Collections.sort is either you get the objects to implement java.lang.Comparable and its `object.compareTo(otherobject)` method, or, you provide a little helper object implementing java.util.Comparator and its `compare(object1, object2)` method. This code does it the second way because it's more flexible because you can implement several Comparators for different sorting criteria. Call printAll() before and after sorting to see that this works -- the people in the list end up in order sorted by first name. import java.util.*; public class Contacts { private List&lt;Person&gt; list = new java.util.ArrayList&lt;Person&gt;(); public int getSize() { return list.size(); } public void add(Person p) { list.add(p); } public void delete(String Name) { for (Iterator&lt;Person&gt; i = list.iterator(); i.hasNext();) { Person p = i.next(); if (p.getName().equals(Name)) { i.remove(); return; } } } public Person get(int i) { return list.get(i); } public void printAll() { for (Person p : list) System.out.println(p.getName()); } public void sortFirst() { Collections.sort(list, new Comparator&lt;Person&gt;() { public int compare(Person p1, Person p2) { return p1.getName().compareToIgnoreCase(p2.getName()); } }); } } It's satisfyingly easy to extend this type of sorting. For example, to sort from Z to A, add a minus sign: Collections.sort(list, new Comparator&lt;Person&gt;() { public int compare(Person p1, Person p2) { return -p1.getName().compareToIgnoreCase(p2.getName()); } }); Or to sort by first name but to use last name for resolving order when the first names are equal: Collections.sort(list, new Comparator&lt;Person&gt;() { public int compare(Person p1, Person p2) { int cmp = p1.getName().compareToIgnoreCase(p2.getName()); if (cmp == 0) cmp = p1.getLast().compareToIgnoreCase(p2.getLast()); return cmp; } }); etc. Check the documentation for [Collections.sort](http://docs.oracle.com/javase/7/docs/api/java/util/Collections.html#sort%28java.util.List,%20java.util.Comparator%29), [java.util.Comparator](http://docs.oracle.com/javase/7/docs/api/java/util/Comparator.html), and [String.compareToIgnoreCase](http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#compareToIgnoreCase%28java.lang.String%29) if you're confused about why/how the above int compare methods work.
THANK YOU SO MUCH!
Thank you very much. 
If you need me to explain it, let me know.
If you need help understanding it, let me know.
This usually happens when you compile against an API that doesn't have full implementations. Your code will compile correctly, but when you try to run it, you get this error. [Here is one example.](http://community.jboss.org/wiki/WhatsTheCauseOfThisExceptionJavalangClassFormatErrorAbsentCode)
Sure thing - thanks again.
https://github.com/Contra/JMD/blob/master/src/net/contra/jmd/transformers/zkm/ZKMTransformer.java Alas, I am not.
 boolean isPowerOfTwo(int num){ return ((num &amp; (num - 1)) == 0); } I wasn't the first to come up with this solution of course but I did do so independently. 
Or just String month = "(JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)"; String date = "(\d\d)"; String year = "(\d{4})"; String regexp = month+" "+date+"(?:, "+year+")? - "+month+" "+date+", "+year+")"; Which becomes (?:(JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC) (\d\d)(?:, (\d{4}))? - )?(JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC) (\d\d), (\d{4}) But i would prefer (?:(\w{3}) (\d\d)(?:, (\d{4}))? - )?(\w{3}) (\d\d), (\d{4}) A lot simpler.
this ridiculous thing: https://github.com/criminy/granola-template/blob/master/src/main/java/granola/template/parser/TemplateParser.java
Thanks for responding! I actually came across this page when looking, but it didn't help. I actually got my code to work again. I reverted my source with the local history through Netbeans and it ran again. I'm still curious as to why this happened though.
Competitor's product target for hackers, warns large corporation.
I do actually. [fernflower.jar was leaked.](https://github.com/Meaglin/worldeditcui/blob/master/libs/fernflower.jar?raw=true) It doesn't appear to be well-known outside the Minecraft modding community, but it works well compared to Jad. And runs via the CLI, while JD does not.
Java should really auto-update (with no user interaction) to the latest version within the major release on desktops. Sun/Oracle doesn't really care too much about java on the desktop anymore as there is money to be made from the server-side of things.
[Java Decompiler](http://java.decompiler.free.fr/)
But then they can't install Yahoo toolbar and tell you its your own fault you failed to notice your need to opt out.
http://java.decompiler.free.fr/
You could also actually learn bytecode. It's a surprisingly simple architecture.
Yes, but mine, while quite a bit more complicated, ignores invalid dates. Which of them you'd use really would depend on how much external validation you want/intend to do. Also, note that there are three possibilities. I also wasn't certain whether single dates (mmm dd, yyyy) should be accepted, but I had that in there.
That is true, but i firmly believe that you should use non-regexp validation, and that doing everything in regexps lead to overly complicated regexps. Thanks for catching the single date, added that to mine too.
&gt; doesn't appear to be well-known The fact that it is [not officially released](http://mcp.ocean-labs.de/index.php/MCP_Releases#MCP_5.x) and that its author is [unsure about which license to use](http://stackoverflow.com/questions/2718814/any-maintained-open-source-java-decompiler#comment-2751474) surely do not help.
Oh, I didn't know that. :(
Been there, done that. :) I think this should be required knowledge for experienced Java coders, as it demystifies a lot of what happens under the hood, and it is not as messy or complicated as many assembly languages. Also, it would be great if the default class-file view that ships with Eclipse would show more of the class file structure, including disassembled byte code, but also String and symbol tables; rather than simply list the signatures of the various class fields and methods. That said, in the case when there is a real need to understand what a class file does, nothing beats a good decompiler.
Thanks a lot! Looks like the best current one. Unfortunately, this is not free software, not even open source. Hopefully it won't decay as Jad did. :-/
Doesn't eclipse have a built-in decompiler?
I can recommend the JD plugin for Eclipse.
You called a method without a body (i.e. the declaration, not the implementation). You either need to add some JAR with the implementation to your classpath or implement it yourself. The link that guy with the username I will not type even though this description is way longer than his actual username pointed to is about someone missing the J2EE implementation, after depending on the API.
I've never tried Java on 'em, but I do use Python on [PC/104](http://en.wikipedia.org/wiki/PC/104) single board computers all the time. They run from 386-level CPUs all the way up to Atoms and above; I'm running Python3 on a 500MHz Geode system right now with 512 MB RAM and a 512 MB CompactFlash card for storage. They're fairly inexpensive (can be had for less than $100 on eBay) and easily expanded. The good news is that many of these boards use standard (if old) RAM so it's usually pretty cheap to upgrade. Unless you need the extended temperature range like I do. :-/
0x636c65766572206e616d65
JDGUI. 
Not as far as I know. By default it shows the name of the fields and methods of the class. When looking for "eclipse decompiler", most of the results are for plugins based on Jad.
I was job searching back in February of this year. I used a mix of LinkedIn, recruiters, friends, and CraigsList (classified posting for tech jobs were great in my area). I guess it's a question if you want to move to a new city or not. That will change some of the tactics to use when job hunting. The only other tip is not to be discouraged about people saying you need experience with framework X, Y, or Z. Unless it's a startup where you have to hit the ground running, most companies will be willing to train you some if you can prove you are capable of understanding the basics of their job and that you can learn. Also, what level do you want to enter a company at? Junior, Senior, etc...
&gt; I guess it's a question if you want to move to a new city or not. Not able to move at the moment, but I'm pretty close to a few cities. &gt; Also, what level do you want to enter a company at? Junior, Senior, etc... I've only got a small amount of professional experience with Java (but I've been doing various programming work for about 5 years). So, I'm guessing it would have to be a Junior to mid level position. 
Avoid tech recruiters at all costs. They are devil spawn. Anyone that tells you otherwise is probably a recruiter. **edit - To clarify I mean tech recruiters who work for commission/head hunters.
RIP!
check out the [arduino](http://www.arduino.cc/playground/Interfacing/Java)
I accomplished something like this in SWT using a StackLayout, where each one of the views is always present, but only one of them is on top and visible. It sounds like there is a Swing equivalent called a CardLayout, but I'm not sure that it accomplishes the same goal in the same way. http://docs.oracle.com/javase/tutorial/uiswing/layout/card.html
You have to remove the UI objects from the parent container. One fairly easy way to do it is to construct your three UIs on identically sized JPanels once at startup (a card layout, if you will - Java probably has builtins for that). This way, you can just swap them in and out by calling something like: container.remove(panel1); container.add(panel2); container.pack(); With this, you're not actually rebuilding your whole UI every time you swap screens, as long as you keep references to your panels. Another option that might work well is to just build a tabbed UI with JTabbedPane, and just enable the manager tab once they enter the credentials (via a JDialog popup, maybe). This way, you also don't have to deal with any UI reconstruction - it's already there. 
I think you can do this reasonably easily by swapping out the contentPane of the applet. JPanel managerPanel = createManagerPanel(); JPanel customerPanel = createCustomerPanel(); ... if(loginCorrect()){ Swing.invokeLater( ... this.setContentPane(managerPanel); ); }
My biggest tip would be to have experience in the specific technology company X is after (Spring, jsp, parallel processing, etc). It helps to have a project/website you can show. IMO everyone should have something to show, even entry levels. Beggars cant be choosers, a "huge corporate codebase" is still experience. I used indeed.com for my job search, but ultimately got hired by a top 3 tech company through referrals/friends. LinkedIn could help you build some of these connections...but I wouldn't hold my breath. 
&gt; It helps to have a project/website you can show. IMO everyone should have something to show, even entry levels. I've got software I can show, though nothing in Java at the moment. &gt; Beggars cant be choosers, a "huge corporate codebase" is still experience. One concern is that I don't want to jump into a situation where I'm setting myself up to fail. If the employer has a huge ugly codebase, maybe it's well-documented and there are potential mentors available to help bring a new employee up to speed. But if not, it sounds like a recipe for new employees to fail. 
&gt; Unfortunately, this is not free software From the site: JD-GUI is free for non-commercial use. This means that JD-GUI **shall not be included or embedded into commercial software products**. Nevertheless, this project may be **freely** used for **personal needs in a commercial or non-commercial environments.**
I disagree. If you don't have good connections, I think a recruiter can be a great help. All you have to remember is that they (generally) don't have any idea what you actually do, or how skilled you are for that matter. However, what they can get you (sometimes) that you can't get yourself is an interview. Also, I would agree that there are a LOT of really bad tech recruiters out there. I've had good luck with TEK Systems, so I might suggest you start out there (I believe they have a national presence).
This means that Java Decompiler is *freeware*, not *free software*. Read the beginning of this article for the explanation of what *free software* means: http://en.wikipedia.org/wiki/Free_software
Here's my biggest tip: attend as many java/programming related things in your area as you can. For example, go to the local Java Users Group (JUG) meetings. Hopefully there you can talk with people, figure out where you might want to work based on their opinions, and maybe even find someone that can help you get an in somewhere.
Not true. It's heavily used in desktop's, just desktop's you don't see. 
You could implement a memento pattern. You could use three JPanels/containers..push the login panel on first, then either the manager/customer panel. If the user clicks on the "manager login" button, you push the customer panel off (and vice versa). Implementation wise, you could use a Stack of jpanels (or your container of choice).
I suck at reddit formatting...
Precede each line of code with 4 spaces. Wrap inline code in \` (backtick) characters. Can you use a hash table? It's better suited to the problem. If you can't use hash tables can you use ArrayLists? You're creating an array with a single row and no columns (or a single column and no rows, depending on how you want to look at it). You probably want something more like: String[][] meaningfulName = new String[NUM_RECORDS][NUM_FIELDS];
I am not familiar with the requirements or benefits to either approach. I will be working with a possible maximum size of [1200][10]. Would a particular option lend itself well to that size?
Im reading that one of the benefits of an ArrayList is that it can grow in size. Is that to say that a normal array cannot? My goal is something that is no defined size at first but is filled and expands as it needed. I might decide to add 200 new items one day. I don't see much information on ArrayLists being multidimensional. Id like to keep things that way so the data is easy to get later.
I asked about hash tables in case this was an assignment wherein you were required to use arrays. Arrays are very primitive, and while it's good to be able to use them well it's probably in your interest to use a higher level construct. A two dimensional ArrayList of strings would be declared like so: ArrayList&lt;ArrayList&lt;String&gt;&gt; records = new ArrayList&lt;ArrayList&lt;String&gt;&gt;(); And then accessed like so: records.get(0).get(0); or for(ArrayList&lt;String&gt; currentRecord : records){ System.out.println(currentRecord.get(2)); } It sounds like you'd be best off to create a class that represents your record: public class Record{ private String id; private String name; private String description; // etc // Constructors, getters and setters omitted // Implement the equals and hashCode methods } Then use a hash table to store and retrieve them: Map&lt;String, Record&gt; records = new HashMap&lt;String, Record&gt;(); records.put("123", new Record("123", "An Item", "It's Awesome!", ...)); Record rec = records.get("123"); or for(Record rec : records.values()){ System.out.println(rec.getID() + ", " + rec.getName() + ... ); }
This is not a school project or homework. I am studying in my free time to get a job in Java one day. I find it hard to learn without applying ideas to a task. My current task is to scan an Market for a game and save the important information to use used elsewhere. This is well above what I am ready for. That just means I will learn more :P. Thank you again for the help. This approach seems much easier to grasp. I will try it out.
Hope I didn't offend, just didn't want to waste anyone's time :) Good luck, and feel free to ask more questions!
Don't use regex's to parse XML? What's wrong with JaxB or XmlBeans or some kind of off the shelf parser?
&gt;I've only got a small amount of professional experience with Java (but I've been doing various programming work for about 5 years). So, I'm guessing it would have to be a Junior to mid level position. Smart employers only care about your ability to solve problems and get things done. If you've done your 5 years in the right kind of problems, or even if you haven't but have the right attitude, gear yourself up for trying for Senior positions. Besides, what do you have to lose for trying it other than a few hours being interviewed if that happens?
It depends. They are evil. If you want a job quickly, any job, then you may contact a recruiter to get some leads on how the job market is. Plus, they will always set you up with interviews. You can ask around with them and see what companies are hiring.
Others may disagree, But pick a stack and become really familiar with it. And I would pick a common stack: Learn all of Spring, Hibernate, JBoss, jQuery for the client side, Wicket, Standard Java. Become intimate with all of the details. Intimate in the sense that you can detect out of memory issues for a JBoss configuration. You know the tools to analyze Java heap/memory issues. When looking at Spring, know the dos and not-to-dos of the framework. ... Once again, people will say, "You don't need to know Java or Java framework, you just need a general idea how programming languages". I think that is a huge mistake. If you want a Java job, then know Java inside and out and what the industry wants from a Java programmer. Don't make the mistake of , "Well, I know C#, I am in". And it is complicated but it makes sense and you can really benefit from vast Java jobs that are out there. ... There are three other options: 1. .NET jobs. I would treat .NET the same as Java in the sense that, if you want a .NET job then learn .NET. If you want a Java job, learn Java. 2. Startups: Startups are hit or miss, they use a variety of technologies and you don't have to know X language technology. But I am wary of startups. 3. Silicon Valley Jobs: The Googles, Oracles. These guys want more generalized programming skills and hire out of college. These are hard to get and they mostly seem to center around SF. 
He/she should at least learn the standards. Spring, maybe Struts, Hibernate, JSF. If you are going learn the ins and outs of Java, it makes sense to learn the common frameworks. You might as well walk out of the interview if you don't know any Java framework.
I've played with assembly on various platforms and have always been tempted to look into Java bytecode. If you have the time, could you link or talk a bit more about how an understanding of the bytecode makes you a better programmer?
I disagree. Everyone can solve problems. They are going to hire someone that is somewhat familiar with their architecture. If they have a Java architecture that is JBoss and Spring and whatever and they want a person that can hit the ground running and start developing. Some companies may even go as far as to hire someone from JBoss or Spring Source that understands their particular architecture. It is not a requirement but it certainly helps. I can't imagine that a Java shop is going, "We are having all of these issues with our legacy Struts2 application on JBoss4 on Linux but don't worry we hired a guy that has 5 years of .NET experience. He will be able to fix everything" Or "We hired this guy, he worked for JBoss for a couple of years and also was a committer to the Struts project" 
Where are you located?
so i tried to do the add/remove panel thing, but it doesn't seem to work in the paint method, only in init. Also what do you mean by container? and what is pack()? I was thinking about doing JTabbedPane but is there any way of preventing the user from just clicking the manager tab?
I have had good and bad experiences with them.
this. There are plenty of bad recruiters, but it only takes one good one to get you (several) offers
By container I'm referring to whatever object contains your other GUI elements (i.e. JFrame). I'm not sure what you mean when you say it doesn't work in the paint() method - I've never actually had to override that when making GUIs. I usually just add components to a JFrame/Panel, then call pack() to force a layout. The pack() method forces a Swing object to re-layout all its children, which should be called after adding/removing objects to/from another object. To disable a JTabbedPane tab, use the method setEnabledAt(x), where you pass in the tab index. 
How'd you make out with this? Seems like between all of the answers here you're probably in good shape.
Just confirming Neres28's answer, but let me see if I can add a bit more detail: Using a Map keyed by ID and wrapping up the other data in a container object is the right approach. He's using the Record object to store all data, and building a HashMap as a kind of "index", to make pulling data by ID much faster than just having an ArrayList of Record objects. Comparing the HashMap with the ArrayList of Records: With the HashMap, get() and put() operations are O(1), which means finding a Record by ID takes the same amount of time regardless of the size of the map. With an ArrayList, finding a Record with a certain ID would be O(n) worst case, which means that it takes time proportional to the size of the list. This is because you might have to try every item in the list to find the right one. You probably won't ever really *need* that speed, but that's the main difference between the two. Be careful when using an object that is not a native type (int, long, string, etc) as the key in the map - you have to implement the hashCode() method so each unique object generates a unique hashCode(). Here, you are using a String as the key, so you'll be fine. With the Records approach, you can also move to some persistent storage like a database using Hibernate without too much effort, since your Record class is acting as a "model" for your data. Creating object models like that is good practice. I hope I haven't confused you more, but let me know if anything is unclear, and I'll do my best to explain. Knowing the advantages and drawbacks of different data structures is critical to success in the software field, so learning Maps is definitely not time wasted! The Map is probably the structure you'll use second most in practice, after the List. 
The problem you are trying to solve is called "tokenization". One simple way to do this in Java is with the Scanner object. To tokenize words from a string, you'd do something like this: Scanner s = new Scanner("Holy crap, this is a string!"); s.useDelimiter(" "); while(scanner.hasNext()) { System.out.println(scanner.next()); } This will split that string by the delimiter (a space, in this case), and you can loop through each token, and output as you please.
This is slightly off topic, but do most schools not teach reader friendly formatting? I keep seeing people type something like public int b(int y){//this method does something stuff stuff;} instead of: public int b(int y) // This method does something. { stufff stuff; } 
Not entirely. Once you're plenty established, yes, but starting out they can be very helpful. It's also important to remember that a lot of companies look for jobs exclusively through their recruiters. So there are a handful of jobs out there you simply can't get except through a recruiter. 
You might to take a look at the [MiniJava](http://www.cambridge.org/us/features/052182060X/) project.
I would recommend these books: [Java for Dummies](http://www.amazon.com/Java-Dummies-Barry-Burd/dp/0470371730/ref=zg_bs_3608_8) [The Pragmatic Programmer: From Journeyman to Master](http://www.amazon.com/Pragmatic-Programmer-Journeyman-Master/dp/020161622X/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1323152916&amp;sr=1-1) [Effective Java, 2nd Edition](http://www.amazon.com/Effective-Java-2nd-Joshua-Bloch/dp/0321356683/ref=sr_1_1?ie=UTF8&amp;qid=1323152849&amp;sr=8-1) Java for Dummies will get you started, but it's by no means sufficient for someone looking for a career in Java. The second book covers general programming practices, which is also suitable for beginners, and is also the most important book in the list. The final book is what you should read once you have a good foothold in Java - it will teach you how to do Java right. Also worth noting is that you should not constrain yourself to Java if you want to be an effective programmer. It's good to start with, but be sure to explore other programming languages and paradigms: * Dynamic, interpreted languages, like Python and Ruby * Lower-level languages like C/C++. Doing your own memory management is definitely a change of pace from Java's garbage collection ;) * Functional programming, with Lisp or Haskell 
Oh okay! Thanks! I had been searching for a while and hadn't found anything &gt;.&lt;
Thanks! I appreciate it.
I'd like to clarify: Java and C#, as languages, are essentially identical. It's the experience with the API and stack that _actually_ matters.
Or you can be even _lazier_ and just use for (String s : "This is a string!".split(" ")) System.out.println(s); :D (Of course, this falls apart for lots of other situations, like punctuation, newlines, and other double whitespace, then you have to get into regexes.)
You know I don't think you can just learn Spring or Wicket out of a book. You actually need to have some professional experience to know how they work and in which situation is framework x preferred to y. For example, you can learn the fact that Struts is a MVC framework, but why would you do a MVC anyway when it's faster to just put everything into a jsp page? If the op has never worked with j2ee frameworks then I think it'll be difficult for him to visualize what's going on around him. Other than that, Java is not just J2EE. If he wants to work as a software developer for controlling machinery, or write games or client-side GUI, then he doesn't need to learn Spring.
Some companies (Microsoft, Google, Amazon) just hire smart people and then teach them the necessary technologies. Of course I agree that the huge majority of companies value experience over IQ.
&gt; I've got software I can show, though nothing in Java at the moment. Perhaps quickly learn Swing and write a simple client-server address book in Java (the server side can be just pure servlets and jdbc). I think it will land you a junior job at any company. &gt; But if not, it sounds like a recipe for new employees to fail. It could also be your chance to shine and prove yourself to your new boss. This is how I got a raise after just 6 months of being hired :)
[Much could be said about the position of that { ...](http://stackoverflow.com/questions/3905238/opening-curly-bracket-brace-position-on-code)
You will still need the Java standard library which makes up most of the JDK.
[http://docs.oracle.com/javase/tutorial/reallybigindex.html](http://docs.oracle.com/javase/tutorial/reallybigindex.html)
Since split() takes a regular expression, you can mitigate some of those things by providing something more advanced than just " ".
Nice try, recruiter.
I think that you can make a pure java compiler that uses only the JRE. I I think that the Eclipse java compiler ECJ is one such compiler. Here's a blog post that shows how to use Eclipse's compiler: [http://blog.deepakazad.com/2010/05/ecj-eclipse-java-compiler.html](http://blog.deepakazad.com/2010/05/ecj-eclipse-java-compiler.html)
just use .split("\\W+") That should do the trick for English text.
Care to explain what you think is so bad about recruiters? The one that I worked with that I had a bad experience was one who tried to convince me to accept an offer that was lower than I wanted, and he REALLY didn't want me talking to my (then) current employer about the potential for countering.
Everything about HTML in this StackOverflow answer goes for XML too: http://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags/1732454#1732454 &gt; You can't parse [XML] with regex. Because [XML] can't be parsed by regex. Regex is not a tool that can be used to correctly parse [XML]. 
I have no idea, I'm not american and I never met any recruiters. It's the GP's joke: &gt; Anyone that tells you otherwise is probably a recruiter. 
What cities are you near? I get a lot of phone calls from the Washington D.C. about contracting Java jobs.
Oops, that's my bad, I didn't look up to see who the previous poster was.
&gt; Perhaps quickly learn Swing and write a ... I've toyed around with Swing in the past, and actually liked it. But I didn't think any employers would be interested in GUI experience. Thanks, may throw together a GUI (client) + servlet (server) project for demo purposes. 
**First, why are you guys down voting everyone like hell?** Now to answer your question: The main thread in which Swing listens to events (and if I am not wrong, renders the GUI as well) is called the Event Dispatch Thread, or EDT for short. When you implement an action listener, whatever you put in your `actionPerformed` method, will be executed in the same thread, and if that's a "long running" task, it will freeze the GUI. As such, it is better to execute long running tasks in a separate thread. There are two ways you can do this: * Use `SwingUtilities.invokeLater`, et. al * Use SwingWorker There are plenty of tutorials about both on the Web. Just make sure you read one of the updated and latest articles published on the subject as SwingWorker was not initially part of the standard `javax.swing` package. Also I recommend you to ask these questions on StackOverflow. Chances are somebody has asked a similar question already!
I just saw mandrosen's answer which is *almost* identical to mine. :)
My opinion is that it makes you a better programmer because you truly understand what each line of code you write does at a lower level. For example: http://en.wikipedia.org/wiki/Java_bytecode#Example. Understanding all that is happening gives you a different viewpoint when working on performance. 
This is how I always find Java Development jobs: Open an account on all job websites that even have a remote presence in the city I am living in.... Monster... Workopolis, techjobs, techottawa... wherever. Then: Put in "java developer" as search... and start firing emails left and right with your resume. Add a little cover letter.. "I would enjoy working for you for this position, these are my skills that would relate to the job at hand..." I'd say 1 in 25 maybe respond for an interview... but only send emails to actual jobs that fit your experience/expertise... if you want to venture off into something else, you have to tailor your resume for that new position and include a little blurb in your cover letter about why you want to change and how that can help the company if they hire you. EDIT: If it is a recruiter, don't respond to them at all, or if they message you more than once, kindly decline.
rather learn gwt i would say.
I'm pretty sure that if you're asking these kinds of questions then you're not experienced enough to write your own light java compiler.
It will not magically make you immensely better, but for example it will help remove any lingering doubt about the way arguments are passed to methods and used by them, about the way inner classes can access attributes from the outer class, about the difference between accessing a local variable and a class attribute, etc.
Books are great, but he requested [web] page[s].
dude, do your own homework
How else would i learn if i dont try ?
I'm going to have to disagree. I mean, even when I used Spring a lot I didn't take the time to learn every last nook and cranny of the API. Besides, what you are talking about could take years. If I was hiring I wouldn't be looking for that from a entry-level Java developer as much as I'd be looking for more general knowledge of what a WAR file is, how to crank up Tomcat and deploy one on it, how to use Git or Svn to bring down a project and set it up in an IDE.
Unfortunately, reading books written by professionals is how you learn to code. No way around it. Reading Oracle's tutorials is fine for learning one specific "how" in one specific language, but useless for learning "why". It does not even cover design patterns, code best practices, available frameworks, or other insanely important things. That is a reference, not a teaching instrument. Web tutorials are most often written by idiots, are not comprehensive, and are not updated. Many books also suffer from these same problems, but the above do not. He only requested "pages", and books have plenty of those. 
[SAXParser](http://www.javacommerce.com/displaypage.jsp?name=saxparser1.sql&amp;id=18232)
No matter how good your regex is, you cannot parse all valid xml. It is a mathematical impossibility. Use a real xml parser and save yourself time, code, and future bugs.
Yes, but I would argue that many sites out there have more up-to-date information than a book that is several months to years old.
Don't shy away from large corporations, you can find shitty code anywhere. Big companies are more likely to give a newbie a break, expose them to a lot of stuff, and you'll be surrounded by other developers who can help you get your skills up. Ask what technologies they are using in the initial interviews to get a sense for the kind of development you'll be doing. If they mention WebSphere or IBM products -- run like hell! :-) Seriously though, if they are using a mix of modern stuff (alternate JVM languages, newer stacks) then there is a good chance that you'll like the job. All big companies have legacy code, comes with the territory, so it is important to ask what projects/teams you'd be working on. It's ok in interviews to ask about what you'll be working on, the make up/size of the team, etc. 
It's true - they will set you up with the job that you have the best chance of interviewing and getting an offer at. Now - whether this job is in line with your goals for the future, desired salary, or even what you want to work on is completely arbitrary. They **only** have their best interests in mind. If they didn't, they wouldn't be a very good recruiter. 
But if you don't accept one of their several offers, they will hunt you down, call you non-stop all day every day with a variety of tricks - blocked numbers, friends cell phones, etc until you cave. Don't forget, you're their meal ticket.
I've been in the industry for 5+ years and the only positions that I've seen available exclusively through a recruiter was for one private hedge fund. All the other positions were publicly listed.
The fundamentals don't change, and books are where you'll find that. Newer is not always better, but usually just "different". Take NoSQL databases as an example. Are they useful and cool? Sure. Will they replace SQL? Absolutely not. There are benefits and drawbacks to both approaches. In my opinion, it is much better to stick to established, proven methods to begin with. There's always time to discover newer, more effective methods of doing something later on, after you understand what you're doing in the first place. 
Another really good resource, assuming you went to a 4 year university are your old classmates. Since most companies offer some sort of recruiting bonus for referring a candidate to an open headcount most will be happy to pass your resume along, sometimes even with a personal recommendation. 
have you heard of [Jikes](http://jikes.sourceforge.net/)?
Not in my experience. Lets not generalize too much here.
I learned my formatting with Perl many moons ago and I cant shake it. I understand the benefits of doing it the other way.
You did not offend at all. I realize most of these questions are usually 'do my homework for me' lol.
Thank you for the detail. I like knowing why things are done a certain way. Everything has its purpose and using the right now one will save me hassle later.
Permalink to comment? Too lazy to click "load more comment" to find it. Also, some people can't take a joke.
You have to figure out how many X'es to display within the inner loop before it executes. Try something like this: //For each row in triangle int numRows = 8; for(int x = 1;x &lt;= numRows;x++) { //Find required amount of X's in this row int charCount; if(x &lt;= numRows / 2) { charCount = x; } else { charCount = numRows - x; } //Print row for(int y = 1;y &lt;= charCount;y++) { System.out.print("x "); } //Next row System.out.println(); } This code should work for any triangle like this, though it will not be pointy if the row count is odd.
Since you're using Swing, check out [GridBagLayout](http://docs.oracle.com/javase/tutorial/uiswing/layout/gridbag.html). You'd configure the GridBagLayout to slice the main panel like you show, then add the buttons for each section to JPanels, and finally add each panel to the layout in the proper position. 
I'm not sure about something as advanced as the Java compiler. If you're interested in it, I'd look at [JavaCC](http://javacc.java.net/). If you really want to build a Java compiler, you need to learn the VM specs. I can't find the link, but just looking at the class files is a start. If you are interested in compilers in general, I'd recommend a great paper, [Let's Build a Compiler, by Jack Crenshaw](http://compilers.iecc.com/crenshaw/), to get started on the basics of compilation. Once you have a base understanding, learning and building on the fundamentals, you may even find you want to build a "better" Java. 
I've found [Meetup](http://www.meetup.com/) great for this.
&gt; I've got software I can show, though nothing in Java at the moment. Proof that you can program is more important then just being able to talk about it. It doesn't hurt to create more programs to show though, and if you want a Java job...
Joke answer... public static void main(String[] args) { for (int x = 1 ; x &lt; 2 ; x++) { for (int y = 1; y &lt; 2; y++) { System.out.println("X"); System.out.println("X X"); System.out.println("X X X"); System.out.println("X X X X"); System.out.println("X X X"); System.out.println("X X"); System.out.println("X"); } } }
That's fair. I'm not trying to generalize, I've had the same experience with 3 tech recruiters from 3 separate companies that I've tried using. One of them left me a 5 minute long curse laden voicemail after I told him a job he recommended wasn't a good match for my skill set. I'm *positive* there are good recruiters out there. I just personally have never come across one.
 public class Triangle { private static final int LENGTH = 7; public static void main(String[] args) { for (int x = 0; x &lt; LENGTH; x++) { int y = (x &lt;= LENGTH/2) ? x + 1 : (LENGTH - x); for (int i = 0; i &lt; y; i++) { System.out.print("x "); } System.out.println(); } } }
Loopita, no!
&gt; if somebody moved from Java into Ruby/Python, they're probably going to be poorer quality leads. Hey!
Wow! thanks very much for the help and the links, its kind of hard to buy those specific books in my country because not anybody loves reading somthing like that, but ill give it a try and search for them and thats a "reallybigindex" as the url said. For me i find more easy to follow the tutorial and more when they are well numbered :P I want to learn java right now, and leave the other ones for later studies :) In fact i was inspired to learn java from Minecraft, such an amazing thing made from java, and the mod making seems so awesome :D Again thanks for the help
Do not use GridBagLayout, quite frankly it is poo. I'd recommend a look at http://www.miglayout.com/ Failing that GroupLayout is good but a little complex if you aren't using Matisse (which is Netbeans WYSIWYG editor - again take a look). Failing all this BoxLayout is also worth considering, simple but you'll need to be smart with how you use it. But honestly I've found it easier writing custom layout managers than using the abomination that is GridBagLayout.
The only language I've learned so far is Java, from one professor, so it is entirely possible I have a pretty biased view on how things "should be". How did you like perl compared to java?
There are a lot of startups and VC-funded things that basically outsource their headhunting to a single person, who is a tech recruiter. You can write their costs off as a capital expense, versus having an employee on the books. 
I meant if you've moved from Java to Ruby/Python, you're not going to be as good a quality lead to a java shop as one who has been doing java recently. Jumping to ruby/python usually means that you're made a bit of a career change. Besides, those developers usually piss and moan about how complicated/verbose java is anyway :)
 for (int i = 1; i &lt;= 7; ++i) { for (int j = 1, size = Math.min(i, 8 - i); j &lt;= size; ++j) { System.out.print("x "); } System.out.println(); } 
Quick and dirty way would be to use a [CardLayout](http://docs.oracle.com/javase/tutorial/uiswing/layout/card.html) in your applet's content pane, then add your three components to that.
Well, you can cut it down to just the character page you described, for entering aggregated wins and losses. All the other metrics can be derived from those numbers and it would also give you a batch enter mode. I guess you won't update the stats after every single match. If you really want to know in which round you played with which character add another field to the character page. And if that is too inconvenient and you really update the stats after every round just go with one form where you select the character, the round and whether you won or lost.
I don't know if anyone would call Java complicated. I can see someone making that argument for Scala, but Java's pretty simple. I also think it's fair to call Java verbose. As a Java developer (trying to move into Python :)) I can see why that can sometimes be a strength and at other times a weakness. But yeah, I don't think I'd take another Java position at this point in my career, so you do have a point about developers in other languages not really wanting to move back.
You could maybe make an easy GUI with a flow like this: * Click the hero portrait of the last played match * Choose win or loss * You are done because you registered the win or loss with that specific hero * Generate reports from your DB stats &amp; done !
isn't this material all covered in the first class?
x||y will skip the second evaluation if the first term is true. Likewise, x&amp;&amp;y will skip the second evaluation if x is false. So, yes, bitwise are inefficient in most cases. Typically, you'll only want them in two cases: if you definitely need both to be evaluated no matter what (a rare occurence), or if you actually want to perform the bitwise operation. Bitwise OR goes through, bit by bit, the two values, and ORs the bits to produce the result. Therefore, 00110110|01000010 would produce 01110110.
I have a few ideas: 1. The "batch" entry mode you describe isn't really very user-friendly for single match results. For single data entry, I would just have the user pick a character, then prompt whether they won or lost. Bam, two clicks and you're done - no keyboard involved. Much less entry overhead, and much easier to use. However, it would still be nice to have a batch entry dialog if you happened to be playing elsewhere that day or to "import" old stats data. 2. You can gloss it up pretty easily by using character portraits instead of just names, as well. I'm thinking a grid of portraits with stats next to each as the main screen. Clicking on a portrait would pop up a dialog allowing you to record a match result, and the stats update once you pick whether you won/lost. Batch entry could be a separate button or a menu item. 3. I would also use JLabels instead of JTextBoxes for displaying the stats, as a text box implies that the value is editable (which it is not, in this case). 