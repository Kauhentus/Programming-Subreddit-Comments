Is it better than the (free) WindowBuilder for Eclipse?
yes, this is excatly what happened to Spring. First you had to register all different kind of classes through xml and now you can just put a simple annotation on top of the class. Other use cases are: * serialisation info, i.e. telling a xml parser how to map specific fields of a class * Dependencie injection frameworks use them to know what they should inject. * mark which methods a testing framework should test * document which methods, classes etc. are deprecated There is also something called Annotation Processor, which is some sort of a compiler plugin that you can write for javac. You can instruct the compiler with something like this to do stuff like, creating configuration files, helper classes, boilerplate code ... 
* http://www.oracle.com/technetwork/java/javase/features-141434.html * http://www.oracle.com/technetwork/java/javase/jdk7-relnotes-418459.html
Huh, it's almost like absolutely no one gets anything done in eclipse, ever. Or... the reality is that probably 75-80% of projects use Eclipse. Which means 75-80% of code is produced using it. About a donzen frameworks use Eclipse as the basis of their IDE (Sprinsource, JBoss, etc). I agree it is annoying sometimes, and only an idiot would use the IBM Rational IDEs, but SpringSource Tool Suite is tolerable, especially since the Groovy plugin has come so far. To say it's useless and complete shit is usual bitchy programmer hyperbole. 
It's also pretty important to recognize the differences among developers. My most productive hours are from 6PM to 10PM. I rarely ever get to work those hours, so they're missing a lot of productivity. 
How would you set up the ADT tools? sorry :/
http://gyazo.com/48b8ec0e55c8ef925be9b43cd10c0833 this? 
Thank you. I have not touched Java seriously since 2004. I'm trying to get back up to speed :)
http://www.reddit.com/r/webdev/comments/13gxcp/is_web_development_considered_programming/ http://stackoverflow.com/questions/3222316/what-is-a-real-programming-language I'm making no claims they support what I think real programming is and isn't. As I said before, it's not important. If you believe it's programming, great! It's also not the topic of the OP. If you want to start your own post on the subject, please do so. Or you can keep asking me, but I'm done answering. I have work to do.
I don't know if you're trolling me or what. You asked a question. I asked for clarification on something you said and you got all defensive for God knows what reason. All I asked you is what you think is the difference between a web-developer and a programmer. Is this such a politically charged issue that you have to dance around trying not to answer my question at all costs? 
Forget it! Figured it out!
"Is this a joke?" Maybe
There is a wealth of information about how to set up Eclipse + ADT on the internet. I would being doing those authors and you a disservice by simply summarizing it here.
This was my original question: &gt; What do you recommend my first portfolio piece be - web, desktop, mobile (I know some Android already), or something else? I can think of projects for each, but what will get me a Java gig quickest so I can make some cash? What's most in demand? What's the quickest path between newbie and money? This was your question: &gt;Someone please explain to me what this means. Is PHP not a programming language? Don't web developers write programs? You asked for no clarification that had any relevance to my original question. Mine being about Java, yours being about web development in PHP.
Google can simply tell you that, as you're not the first person to request personalized attention on this subject.
The actual java 7 way of doing it is to use Google Guava, and: LoadingCache&lt;Integer, Integer&gt; fibonacci = CacheBuilder.newBuilder().build( new CacheLoader&lt;Integer, Integer&gt;() { public Graph load(Integer i) { if ( i == 0 || i == 1 ) return i; return fibonacci.get(i-1) + fibonacci.get(i-2); } }); System.out.println(fibonacci.get(9)); With java 8 lambdas, of course, there is significantly less boilerplate. 
Dodges is the right word. In JavaFX they use MVC so the UI can be expressed in XML and you have an associated class for your code. Nice and clean and no stupidity of partial classes.
I don't think you have to worry about that. Looking at the code, I don't know why you'd be getting a NullPointerException on: mTracker.checkID(0,true); Are you sure you didn't delete any thing by accident when copy/pasting your code? (even an empty line at the beginning?) Also, the line before it looks like it should be generating an "incompatible types" error. You're trying to store an array of Images into a single BufferedImage object. **EDIT:** Yeah I tried to compile the code, I'm only getting an error on your line: BufferedImage imageone = image; and it's for the incompatible types. You also never actually use 'imageone' anywhere... removing it allows the code to compile. There's a different NullPointerException at line 99. I cant help but notice that you've got quite a messy file growing here :P Is this your first dive into coding semi-large programs?
Your 2 raises an interesting quirk of terminology: Generally, any program that translates a computer program from one language to another is called a "compiler". So for example, you could write a "C to Python" compiler. So it would seem that "this file is the output of a compiler" is not sufficient evidence to conclude that the resulting program is a "compiled" one.
Well, we just wrapped up our java 6 transition, so we should be switching to 8 any day now...
Please enlighten me - but seriously - take each out in order, add them to a list, collections.shuffle() and rewrite the values in the array.
Nested for loops one for x and one for y
More like 12 years ago. Seriously, nobody is going to buy it. Sorry to be a "nay sayer" but it's true.
Doesn't IntelliJ do this? 
This is a Java subreddit. My questions specifically ask about Java. I didn't ask what would make me a programmer, I asked what the quickest route to make money in Java is. My opinions or definitions don't matter. EDIT: &gt;you asked what it'd take you to become a programmer I didn't. My major was Computer Science over 20 years ago, and I've been a programmer ever since. I asked how to make money using Java. &gt;I asked you what you think a programmer is and why you think you aren't one I never said I wasn't one, and I don't recall you asking why I don't think I am one. I am one. There's not any ambiguity there. &gt;I think it's pretty relevant I disagree. I don't care what you call what I do. I call it programming, web development, database administration, or any number of things. So feel free to call me a programmer. &gt;it's becoming obvious that you can't answer because you feel you said something stupid and your ego is so fragile that you cannot deal with someone correcting you even on the most irrelevant thing You just said it was relevant. I disagreed then, and I'm agreeing now, it's not relevant. Call what I do anything you want to. Call me a programmer. I said I wanted to get back into real programming. What I consider real programming or what I meant by this statement is really irrelevant. If you must know, I'm wanting to get back into using a strongly typed language that is truly object oriented. That's not to say other languages aren't programming languages or that the people who use them aren't programmers.
&gt; We could also integrate it with desktop items like a tray icon and perhaps even a Linux/FUSE filesystem implementation. Owncloud desktop client do that already. &gt; The sky is the limit with what you could accomplish. No, the limit is developing time :-D 
Yes, Guava's caches are very useful. This post, however, tried to use only JDK libraries. I'll add a comment to the post, though
Great observation! Actually, the whole sequence of Calculating f(6) Calculating f(4) Calculating f(2) is calculated *before* printing f(6) = 8 I'll fix that in the post
It's very hard to say, as everyone has different needs. Why don't you release a trial and see what the feedback is?
Can we all take a moment and think of the poor bastards who still have to support 1.2 code? 
It's useful if you have a bunch of interfaces like "HasChildren" and "HasData" etc. 
Ah I see. Almost like duck typing or structural typing.
Survey by TypeSafe may not be representative of the wider Java world, as it basically surveys Scala proponents. That being said, I wrote a few lines of Java yesterday and my first thought was "List doesn't have .filter()?! laaaame...."
&gt; When the same string literal is created more than once, JVM store only one copy of each distinct string value. This is called “string interning“. That's not entirely correct. In the article's example, the compiler will already make sure that the same string constant is effectively referenced. String interning can still be done at runtime, even if two strings are constructed with constructors: String c = new String("abcd").intern(); String d = new String("abcd").intern(); System.out.println(c == d); // Now true System.out.println(c.equals(d)); // True
We're stuck on Java 6 until Java 7 and 8 stop seg-faulting on OS X when we start Tomcat. It's not Java's fault as such - some OS X C library has a bug, but that bug causes the JVM to segfault. :(
For the abstraction layer, I'd also recommend jsr107 - it's in the final review stages now and one the lawyers clear it, every major cache vendor will have an implementation of it. 
Why would you install a product you don't understand, and not have a discussion with the customer about it beforehand? JBoss AS 5.1 is from 2009. Read the Red Hat pages for more detailed info.
Both of them.
It's a Fibonacci example. It doesn't need perfect tuning to go into production with 100M parallel sessions and 500M transactions per second. But yes, you're right :-)
In terms of the language there weren't any changes between 5 and 6. Between 6 and 7 there were some minor language tweaks (search for "project coin")
We've moved on to Scala, but these features will make dealing with the old Java code much more pleasant.
Not at all. The various versions require and support wildly different JVM and JEE versions. Before installing anything, you need to understand the requirements of the application and how they map to a JEE server.
Interesting. Tomcat works just fine on OS X 10.8 and 10.9 and JDK 1.7 over here. 
&gt; BufferedImage imageone = image; No I'm not new, I'm just a messy programmer.
came here to say similar thing. We only upgraded from 1.4 to 1.5 as part of a major third party system upgrade. We are now in the process of upgrading from 1.5 to 1.6 as WebSphere 6.1 is being decommissioned so we are upgrading to 8.5 which runs 1.6. So it's never about java itself, but about other things that require a new version... We'll never be able to tell the business people look we want to ugprade java it's cool new stuff, would cost a few hundred thousands to a few millions accross the whole estate for 0 functionality... So yeah, whenever some core component will run out of support and we'll have to upgrade, then maybe we'll have a shot at 1.8 (but by then I fully expect 1.10 to be out).
This doesn't make any sense. All of the paths to my files are correct and even if I didn't, it would not matter because if it is not correct, the image just wouldn't show up.
Yes of course, but IntelliJ (specially on Java and Javascript) has lots of great features and workflows that are missing in Eclipse. I think a root cause of the probs in Eclipse is a lack of investment/focus on the core platform. There are lots of paid developers that work 'around' the core platform (on RCP or plugins), but not many on the main IDE. 
Yeah, that was one of the links I posted on the article. And interesting article would be 'Why eclipse is better than IDEA' :)
Damnit, I wonder what it is about our machine build that's different. We get this: https://bugs.openjdk.java.net/browse/JDK-8024045 which has been ultimately resolved by this: https://bugs.openjdk.java.net/browse/JDK-8036555 ..but that's in Java 9 so we have to wait for the back ports to 7 and 8. But yeah, we're dead keen to get off 6 and onto 7 in preparation for 8, for obvious reasons. 
https://www.udemy.com/java-tutorial/ (free) -excellent Java Beginners tutorial Look at the /r/javahelp wiki for an extensive list of tutorials.
I lost it at FizzBuzzSolutionStrategyFactory mySolutionStrategyFactory = new EnterpriseGradeFizzBuzzSolutionStrategyFactory();
For the record I do own a license of WebStorm (http://www.jetbrains.com/webstorm/) and until I was able to modify,extend and program Eclipse (in real-time) to my Javascript development needs (see AngularJS related posts on http://blog.diniscruz.com/search/label/Eclipse), I would agree that eclipse was THAT bad. Now I 'turned a corner', and the more I learn about Eclipse (and SWT) the more I like it, and the more I can see how it can be made to 'work'
Ah the difference is I'm using Oracle JDK, not OpenJDK. Remember Apple donated their JDK code to Oracle, so Oracle is much more likely to have a stable, less buggy implementation. 
Yes this is not a faith-based argument, but I think that thinking that the ones that defend IntelliJ products, do so because of 'faith', is missing the point on what really is going on. I really respect the authors of the blog posts and comments that come out in defence of IntelliJ (and by proxy complain about Eclipse). They tend to be real-world professionals that independently have figured out that IntelliJ is more suited to their needs (usually after struggling with Eclipse for a while). To call this IntelliJ supporters 'fanboys' or say they have 'religious-like' faith in (for example) WebStorm, is to move the discussion into a non-productive state. The reality is that IntelliJ DOES have some really great features, which Eclipse should learn from. But the reality today, is that the status quo and group-think out there (ie. in google, reddit and stackoverflow) is that IntelliJ is much better than Eclipse. And it will be hard for new users to be drawn to Eclipse, since all the energy, kudos and user-community seems to be pointing against Eclipse.
This is the kind of customisation that I think would be much better done via 'Dynamic UI changes' (aka the Groovy REPL plugin or Eclipse Scripting plugin) , versus codifying those deep down in Eclipse's code. For me the key is not WHAT on the UI should be customised, but HOW it can be customised (namely how fast, deep, persistent,distributed and testable those changes are). And as you can see by the techniques I used in (http://blog.diniscruz.com/2014/03/eclipse-groovy-script-to-remove-busy.html) my benchmark is: * sub 500ms to see code changes * no need to restart eclipse to see code changes * easy access to Eclipse internal API
I don't see this mentioned strongly enough: annotations can also be used to generate code or ancillary output at compile time. For example the hibernate metamodel or Google @AutoValue classes. If I remember correctly this was the original use case, but everyone found the reflective access so useful you see a lot of RetentionPolicy.RUNTIME annotations too. The only thing I find annoying is that there's no easy polymorphism available. You can't extend another @interface. There are heavy weight workarounds for this (meta annotations).
very correct, but then again, if that is not tackled, then this is just a massive 'slow motion car crash' , right? The fact that Eclipse is now classified as a 'Standard' should be viewed as a massive asset, one to be well looked after, and nurtured (not taken for granted). Ironically, since Eclipse Plugins are a main reason why eclipse is popular, a lot more care should be put into how they work together. For example a lot of probs in eclipse happen when more than a couple plugins are installed (specially since there is no way to know what they will do once installed)
I think you are right, and this should be a metric that the Eclipse community should track very carefully (since 'new user adoption' it is one of the strongest indicators of the health of a product/community)
Thanks for the link to the defect. Any reason why you aren't using the Oracle JDK?
I don't think you should stop, so please continue :) Those were all good and valid comments Also (ideally) there should be an easy place to put those issues as bugs so that they can be tracked (specially since there are already solutions for them). Actually question: Since some of the issues you are raising feel like bugs, is there a company/group that you could go to that would provide a 'support line' (like the commercial support provided by IntelliJ)
I would support this if work went directly in the open source version of Eclipse but it seems like this will be a conmericial / closed source fork.
IntelliJs POM support is in code completion. You get the same kind of code completion around &lt;dependency&gt; and other elements of the POM file as you do in other code. And I think most developers prefer to work in the "code" (xml) anyway.
It would be good to track those 'Eclipse experiences' and see what exactly caused you to abandon Eclipse (again). You've listed a number of scenarios which I've also struggled with (so I completely feel your pain in this one). THAT real-world feedback would give (if they listen) the main Eclipse IDE developers a good idea of the pain points of using Eclipse (and what should be fixed for the next version(s) re the download mess, how would you solve it? Would the solution be a server-side dynamically generated Eclipse instance with only the plugins required (like currently happens with JQuery)
The reddit ecosystem is a harsh environment, every error will be speculated and the author prosecuted. Your example was written to emphasize a new Java 8 feature which is fine. But somewhere, in a dark room, there will be a developer finding the ConcurrentHashMap cache appealing and he will add it to his enterprise project (after all, how hard can it be to write a caching API?).
I agree with your analysis and it is unfortunate that Eclipse lost that 'Java developer' focus. What happened? Is there a particular reason(s) why the 'Eclipse Java' IDE lost focus
Yap and I think that this is a core prob which should really be taken seriously by the Eclipse Foundation. There should be a focused and pragmatic analysis on why that is happening, followed by an action plan to reverse it. This means that Eclipse needs to at least first match the IntelliJ development experience, and then surpass it (which btw would be great to push this type of development IDEs to the next level) I tend to follow the Eclipse Planet blogs and have not seen much traffic on this topic
that's really cool, you're one of the few that I have seen making that comment. can you expand on that experience?
I share your Maven Eclipse pain, specially the fact that after awhile, there are two complete different ways to build a complex project (Eclipse-way and Maven-way)
That is the plan :) Can you list what made you change? And what type of project you are working on
My main problem is the terrible font rendering in Swing. That is what finally pushed me back to Eclipse. Although I do miss being able to move the cursor freely in the editor (i.e beyond the last character on a line).
I share that worry too These days these seems to be a lot more activity outside the Eclipse IDE, which is healthy, BUT the Eclipse IDE/RCP/APIs are 'the foundation', so there needs to be more focus on it. On the topic of a 'Eclipse Java' IDE, who at Eclipse should be doing it? This crowd: https://projects.eclipse.org/projects/eclipse.jdt
I think just described it perfectly. It kinda feels that way. And the problem is that with complex software like Eclipse (just like with Security), 'things' don't just happen by accident. There needs to be a focus and committed effort in: a) understanding what is not working,b) figuring out what needs to be fixed and c) allocating/focusing/motivating available resources into fixing them
I think it is important that they have a commercial model to fund development, but agree that it is a problem the fact that they are keeping a lot of the code closed
The official Java tutorials are pretty good and cover a wide range of subjects: http://docs.oracle.com/javase/tutorial/index.html
Yeah I didn't bother reading why I got the NPE at 99. The code you gave doesn't generate the error you were asking about and I'm not gonna spend forever figuring out why :P
Get the book Objects first with java. I goes through the concepts of object oriented programming really good.
Yes, but... [duty calls](https://xkcd.com/386/)
Sure. I switched from Eclipse back in 2002? ish.. haven't looked back. I always re-evaluate but honestly not a lot has changed since then. Good UI is king. 
I recommend using WebSockets to receive asynchronous events from the server.
Lombok does this quite well. It would be great if there was a similar solution for AutoValue. Thanks for sharing.
On some level, I feel like all my complaints are things that eclipse does by design, and bugzilla entries would mostly be WONTFIX or NOTABUG. All your settings being tied to the workspace is pivotal to the design and concept of workspaces. People complain that settings don't transfer between workspaces... that's a *feature*. Telling eclipse developers "please could you just put editor settings in my home directory, like everyone else does" is pointless both in idea and execution, because *that's how eclipse works*. Windowbuilder operates the way it does because the whole goal was to not have a netbeans-style xml file alongside the code that's being manipulated. Once you've started with that, everything that antagonises me about windowbuilder logically follows; and some people like that. One man's "setting up tomcat is a mess" is another man's "you can set up tomcat however you desire!". I sympathise with this view, as I think back to my more zealot-y days on Linux, when I loved slackware because I was a student with all the time in the world and thought how awesome it was that I could manually partition everything and cfdisk was super powerful. But nowadays my time is more limited, so what I want is a development tool that already works; in the case of tomcat, netbeans prepares a complete CATALINA_HOME inside of ~/.netbeans, with all the settings it wants. You can then modify to taste, which I didn't need to for the first six months. Same goes for subclipse/subversive; one man's "paradox of choice" is another man's "choice is good". Personally, I would suggest having a formal page on eclipse.org that I can go to, post-install. That page has a big huge table of "this plugin is the recommended tool that provides this feature" with a search box. It'd be cute if there was then a registered eclipse:// URL in my browser to clikky [which will never happen, because people have multiple installs of eclipse because no single install can actually meet diverse needs, *by design*], but I can also just use "install software". Of course, now eclipse risks offending all the subclipse developers. I remember a long time ago, one eclipse version I saw a "UML now doesn't suck!" banner associated with it. Never managed to figure out what the UML plugin I was supposed to use is, there were a million when I searched for "UML" in the "install software" thing. Gave up, because I just don't have time for that. I believe that the eclipse developers know full well all these pain points. That's why you see them [going to Kickstarter](http://www.reddit.com/r/programming/comments/1zfozp/an_eclipse_commiter_launch_a_kickstarter_to_fund/). As I posted in that thread, an extract from the kickstarter page, *which is run by an eclipse developer*: &gt; EasyEclipse for Java is an IDE focused on Java. As such, the first version will focus on the integration with the following technologies. &gt; Java (with support for Java 8) &gt; Maven, Ant &gt; Git, SVN, CVS &gt; XML, HTML, CSS So what you don't have in your *"integrated"* *"development"* *"environment"* targeting *java* developers is: * integration * java language support * everything else a J2EE developer needs * the ability to build anything nicely * the ability to manage your source nicely What the fuck *does* your tool do? As I also said in that thread... I desperately want eclipse to be great. More tools is always good. Every time a new eclipse version comes out [and sometimes in the interim], I download eclipse and use it for two days. And every time it's just a horrible experience for me.
You will likely use it in the numerous changes to various APIs that are likely to come about as a result of the language change. Lambdas are insanely useful and will help us avoid much ugliness in the future. OTOH - They can also be used to create very dense and hard to understand code, so it will need to be used wisely.
 Yes everyone who uses Vi uses it like you use the text insertion interface in an IDE. Let have more pointed strawmen plz. As if searching over a code base when preferring a non-ide work flow is so hard. I have to use grep/awk/ag/find/recoll/beagle/strigi/myretardedhomebrewxapianfrontend and search for "new strawman()" too tough.
&gt; But don’t take your IDE for granted, because if you don’t have one then you’ll need to go to your source server and modify a Java class with vi Lambda's are no more than syntactic sugar over the same anonymous inner classes we have been using for what seems like a century now. The ONLY thing this article demonstrates is avoiding poor API design. If you are using vi to work with Java 8 lambda's it is almost exactly the same as using anonymous inner classes today, pull up the javadoc, figure out which interface the method is requesting and build a lambda that matches that interface. This isn't rocket science.
I don't know much about WebSockets but would you still have to scrub data from news sites on the server? So instead of scrubbing per app you'd scrub on one server? Are there open sockets from news sites that you could connect to?
What is on *your* line 154 (the error code is telling you what is causing the problem) After commenting out `BufferedImage imagone = image;` and adding dummy files so loading the gifs and .wav file wouldn't throw `NullPointerException`, I am getting a `NullPointerException` on line 164 163: bufferdImg = (BufferedImage) createImage(width, height); 164: bufferdImgSurface = bufferdImg.createGraphics(); &gt; `createImage(int, int)` is returning `null`. The reason is explained in the documentation: &gt; **Returns:** &gt;*an off-screen drawable image, which can be used for double buffering. The return value may be null if the component is not displayable. This will always happen if GraphicsEnvironment.isHeadless() returns true.* &gt; http://stackoverflow.com/questions/5893386/null-pointer-exception-in-getgraphics-for-bufferedimage To get the code to compile in its current state I did `bufferdImg = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB)` On another note you are mispelling **buffered** in your variable names and that could cause confusion later. 
I don't understand why you wouldn't. It's another tool in the tool box. No need to avoid them all together because they can be used badly. Hell, conditional statements in the hands of an inexperienced programmer can produce some of the ugliest, impenetrable code on earth. We don't just pretend that `if` doesn't exist because some people use it poorly. 
But you're speaking from a stance of ignorance. You said yourself that you've never touched them, even in C#. All I'm saying is that you should spend time with them before you dismiss them outright. 
&gt;IntelliJs POM support is in code completion. I used that yesterday and I admit that it was pretty slick. There was also a small wizard that came up when I made a new maven project, which made things easy. &gt;And I think most developers prefer to work in the "code" (xml) anyway. I'm not sure that is being fair, and it sounds like you are making excuses where it's just not necessary. In my previous life as a GUI developer I sure as hell wanted to drag and drop my controls and use the object inspector to set the properties of each object. Sure, I could do it in the code, but it would take me 4 times as long. Look into typing out a non-trivial WDSL by hand as well. It's much easier in a GUI, and again I would estimate typing it all by hand would take at least 4x as long as the GUI method. (No WSDL editor in IDEA btw) Use "the code" to view a class hierarchy defined in an XSD file and see if you can remember what you were looking for when you finally find the class you were looking for. In a GUI this takes, maybe, a few seconds. In the code...who knows. (No XSD editor in IDEA btw) The Eclipse POM editor also does neat things like showing me a sort-able, searchable, dependency hierarchy in real time. It's very handy when you are working on large projects. It also allows me to search for jars and add them to the POM with one click. I still haven't found out how to do this in IDEA. In closing, I'm not bashing IDEA. I'm using it *right now.* I like it. I'm just interested in having an honest discussion about where I see that it is lacking. Saying that "most developers prefer to work in the "code"" just doesn't ring true to me.
I will have to check it out later when I get the chance. Thanks for telling me!
&gt; I said I wanted to get back into real programming. And I asked you what you mean by that. If that was too difficult to answer then I'm sorry, I didn't expect you to be borderline retarded.
I've been grudgingly on the (Java) IDE bandwagon for a while now anyway, but the first thing I thought when seeing the changes in Java 8 was that it starts to make vi/emacs MORE viable again. Java 5 completely killed any good autocomplete/boilerplating plugins with generics and annotations, massively bumping their complexity and number of corner cases. Java 8 at least starts to get serious about removing boilerplate.
Obviously, there's not going to be a reliable cross-platform solution when you're dealing with things like process id's and exe names. But if you're ok with relying on some external calls, you could probably manage something. And I imagine it's going to matter how you wrapped your java in an exe. However, my theory is that if you get the pid of the jvm and you could traverse the parent pids until you find the name of the calling exe. Here's my quick and dirty code to do just that (only test on Win7, and very much a POC with a healthy dose of bad practice). Maybe it could point you in the right direction? import java.io.BufferedReader; import java.io.InputStreamReader; import java.lang.management.ManagementFactory; import java.util.HashMap; import java.util.Map; public class Test{ private static class PID{ String pid; String parent; String exe; public String toString(){ return pid+" : "+exe+", parent = "+parent; } } public static void main(String[] args) throws Exception{ String pid = ManagementFactory.getRuntimeMXBean().getName().replaceAll("@.*", ""); System.out.println("My pid is "+pid); Process pr = Runtime.getRuntime().exec("wmic process get executablepath,parentprocessid,processid"); BufferedReader br = new BufferedReader(new InputStreamReader(pr.getInputStream())); String s; String[] vals; Map&lt;String, PID&gt; pids = new HashMap&lt;String, PID&gt;(); while((s=br.readLine()) != null){ if(s.trim().isEmpty()){ continue; } s = s.replaceAll("^(.*?) +([0-9]+) +([0-9]+) +", "$1\t$2\t$3"); vals = s.split("\t"); if(vals.length == 3){ PID proc = new PID(); proc.exe = vals[0]; proc.parent = vals[1]; proc.pid = vals[2]; pids.put(proc.pid, proc); } } br.close(); getParent(pid, pids); } public static void getParent(String pid, Map&lt;String, PID&gt; pids){ PID proc = pids.get(pid); if(proc == null) return; System.out.println(pids.get(pid)); getParent(proc.parent, pids); } } Run from eclipse I get: My pid is 4968 4968 : C:\Program Files\Java\jre7\bin\javaw.exe, parent = 6168 6168 : C:\Apps\eclipse\eclipse.exe, parent = 4840 4840 : C:\Windows\Explorer.EXE, parent = 4796 And if I close eclipse and re-open it with launchy I get this: My pid is 11072 11072 : C:\Program Files\Java\jre7\bin\javaw.exe, parent = 10612 10612 : C:\Apps\eclipse\eclipse.exe, parent = 5884 5884 : C:\Users\spdqbr\AppData\Local\Launchy\Launchy.exe, parent = 4840 4840 : C:\Windows\Explorer.EXE, parent = 4796 
Ah, we are, I linked to OpenJDK because it's easier to Google - same issue on Oracle's bug tracker: http://bugs.java.com/bugdatabase/view_bug.do?bug_id=8024045
I have to admit that I don’t really see a problem with this artificially constructed issue. If you have a method that is overloaded to take three different interfaces you might already have very different problems than lambdas.
&gt; I've been grudgingly on the (Java) IDE bandwagon for a while now anyway, but the first thing I thought when seeing the changes in Java 8 was that it starts to make vi/emacs MORE viable again. I don't know why you WOULDN'T use an IDE with any statically typed language, the benefit of static typing is the crazy amount of static analysis and refactoring tools that can be written around it. When you use Vi you don't even begin to take advantage of the benefits type-safety brings and just make your life miserable. If your preference is a text editor and command line utilities I am the last person to argue against that choice, I do it all the time when it comes to python/ruby work, but those languages are much better suited for it.
Question: What line exactly are you getting the NPE at? From what I see: + You are using fileInput.hasNext() at the beginning of the loop - has it been initialised there already? + You are using a while loop to loop for further rows + Inside the while loop you use a for-loop to retrieve the rows (this already could be a potential problem as you cannot guarantee that there are enough rows - lines in the file left - the while loop might already be at the one before the last line - and this could cause the NPE) + Inside the for-loop for the rows you read a line and then you parse the line into an array of char (another possible problem if the line length is less than the cols you want to loop through) Suggestion: System.out.println the input variable to see whether it's empty or not. Also, you need to tweak your loops. Compare the string length with your cols variable to see if the string has enough characters.
This was very informative but would not work for me. You can set a service to use a parameter but a service also by default gives you the option to forgo using this parameter. We are trying to avoid someone from running our program multiple times to get around licensing. 
&gt; Well said. I really do prefer a more declarative language than having to double guess every strange lambda that pops up in code other people have written. We all can relate to how poorly written code can be hard to maintain. Lambdas are one step away from hell breaking loose in big projects with a large development team. If you are having to "double guess every strange lambda" that pops up in code then it's probably time for you to have a good look over your codebase. The main reason most Java developers I know always ridiculed anonymous functions in other languages was because said languages were dynamically typed and you could easily have runtime failures that weren't detected prior to deployment because just like everything else anonymous functions had no type safety. Lambda's in Java 8 leverage the history of anonymous inner classes that have existed since the very beginning, they are implemented exactly the same, just with a cleaner, more concise syntax. As a result they are just as type-safe and tooling friendly as the anonymous inner classes you are already using, but remove excessive verbosity from your code. Yes, yes, I know many a Java developer that actually "like" the verbosity of Java because it encourages clear code, but we aren't talking about the lack of operator overloading here, we are talking about 5+ lines of useless boilerplate code for a goddamn click handler on a Wicket page.
&gt; If you must know, I'm wanting to get back into using a strongly typed language that is truly object oriented. From my comment immediately preceding yours.
Indeed, many would argue that method overloading is itself an anti-pattern.
Yeah, um. You shouldn't be using executable names to figure that out. You should be using some form of IPC to coordinate between your multiple instances.
Spend some time researching the solutions presented here: http://stackoverflow.com/questions/13861413/prevent-jar-from-running-if-its-already-running
&gt; You are using a while loop to loop for further rows That's my guess. If he doesn't run out of input at the *exact* right time, he'll end back at the top of the i loop and try to read out of a mostly-empty file. For instance, a newline or space at the end of the file might still fulfill the "hasNext()" of a scanner.
http://jetbrains.dzone.com/articles/top-20-code-completions-in-intellij-idea I'd *start* with those features, and then keep copying the other features intellij has had for years. Eventually eclipse will be worth using.
post the whole code PLUS the text file for the labyrinth - on http://gist.github.com (Java formatting) - The reddit code formatting is not sufficient here. But basically, I think that you run out of text from the text file before the end of the loop. As both previous comments suggested.
&gt; Yes, yes, I know many a Java developer that actually "like" the verbosity of Java because it encourages clear code, but we aren't talking about the lack of operator overloading here, we are talking about 5+ lines of useless boilerplate code for a goddamn click handler on a Wicket page. I think you and I are best friends now. Wicket induces the exact same pain for me.
FYI: You could have posted all that in a single gist - that's why I suggested gist.github. (And it would have worked without registration ;)
Huh? What IDE are you using Notepad? Just use IntelliJ and be happy.
I'm a big fan of vi but I have to admit I can get a lot more code written in an IDE when working with Java. If you really want vi functionality I recommend using a plugin such as Vrapper to get vi like commands and editing into Eclipse. 
Good point, overlooked that.
Import F#?
I agree. This seems like some nonsense. He writes bad code and then complains that its bad code... Well.. Don't write bad code then.
Mostly true. I haven't written Java in vim since many years ago when I was learning the basics of the build system and a couple of frameworks with initially poor IDE support. I very much doubt I'll do it again, though I'd say it was an interesting/useful learning experience at the time. I disagree with the "miserable" bit though, I think for some time yet I'll consider the IDE a trade-off of fun to gain productivity - no doubt you get much more done, but how long can you be in a room with developers without hearing rants about IDE memory usage, or random input lag, or a file that the IDE claims doesn't compile when it really really does... :).
How is Tapestry these days? We used it in the early v5 days and had real issues. 
I'd like it a lot more if it didn't insist on using its own IoC container (we have CDI now, can we use it more, please?). The concept is nice, a stateless, component-based web framework utilizing convention-over-configuration and a super-rich templating framework. Ultimately though, the pace of development remains painfully slow, and JSF allows an equally stateless design now with @RequestScoped beans. Honestly, any advantage it previously had is essentially gone now, but it's useful where you can't get away with deploying a full Java EE stack to use JSF (which there really is no excuse IMHO, Wildfly is great!)
&gt; I consider lambdas as human unreadable and hard to use. I consider anonymous classes more human unreadable and harder to use than lambdas.
&gt; but how long can you be in a room with developers without hearing rants about IDE memory usage, or random input lag, or a file that the IDE claims doesn't compile when it really really does... :). You must work with a bunch of eclipse users :)
Hopefully this is just a sting to find the stupidest security leaks imaginable.
Your methods don't follow Java naming convention. Methods should be camel-case with a leading lower-case letter.
Thankfully, scrubbing data is an exception these days. As /u/JavaTrainer pointed out, many sites provide news data API for developers. EDIT: &gt; still have to scrub data from news sites on the server? No, not needed if you don't want to host a news server. If you can make the client do anything, grab anything, using sites API, go for it.
http://en.wikipedia.org/wiki/Comet_(programming) https://github.com/Atmosphere/atmosphere
Interesting that braces used in the context of a lambda expression do not scope the contained code; that seems counter-intuitive and against convention. Braces have the de-facto status as scope enclosures.
It doesn't compile - let alone run. You might want to take a look at running 'javac' on it to see what it tells you. Once you're happy with dealing with those errors, and running it via 'java', then take a look at tools like eclipse or netbeans to streamline that code/compile/run loop. 
String.replace returns a new string with the letters replaced. So you need to set visibleWord = visibleWord.replace(...) 
That's not the point of the code. It shouldn't run as-is.
Yes, after completing the code, it is fine.
We're only about halfway through the curriculum, so certain things aren't accepted yet (not that anyone in the class has mastered anything) but we're limited to the basics. Did you use anything you'd consider higher level? Would you mind sharing it?
I did that. I erased the parts I wanted them to decipher, but didn't save the original version. The only thing I've got saved it what I paste-binned.
$$$$$$$$$$$$$$$$$$$$$$$$$ Maybe try writing it to look less like assembly? Variable names should match their purpose. Dollar sign and underscore don't really tell me what's going on here. 
Looks production ready!
I used fundamental maths, nothing higher level. Of course, you could sub class and instantiate, but I simply followed your code and filled in the blanks. I don't have the code with me right now, but I could paste it for you if you'd like. 
You have your output code inside the letter matching loop.
In case you were wondering, this is called **immutability**. There is a great SO answer regarding it [here](http://stackoverflow.com/questions/1552301/immutability-of-strings-in-java). tl;dr: This is immutability, in which the state of an object cannot be changed once it has been created.
You might want to move your else{} statement out of the inner for loop. The compiler will enter the else{} statement if the if condition is not met. so in this case, 3/4 times the compiler will enter the else{} and output "Not word".
It doesn't seem like the majority of the replies understand that this is humour.
First glance? You forgot a space before the { in the first line.
Hey, I think I work with you!
&gt; Is Swing and laying things out via GridBagLayout something that many programmers still do and still do often? no.
Looks very perl-ish to me, but a lot of it is the _ and $, both of which are pretty common in perl ($_ is the default variable name).
Aka Perl.
Well done! But remember a quote from Clean Code (I think): "Always write code as though it will be maintained by a homicidal, axe-wielding maniac who knows where you live."
:dies screaming:
Looks like someone read that as "Always write code as though you were a homicidal, axe-wielding maniac".
Can someone explain like 2 to me? Isn't that essentially abstract class MyClass { MyClass&lt;MyClass&gt; MyClass; } Edit: And apparently that is completely valid. Just tried it. I guess I just never had the idea to name a local field after the class, I just assumed this cannot be right.
Many of my nuisances with Eclipse go back to 2003, back when Netbeans was even worse with concepts like mounting file systems into workspace. The problem is that Netbeans has improved quite a lot specially with the rearchitecture of version 5. Eclipse on the other hand hardly changed their way of working, and their developers seem to care more for tooling integratiors than developers using it as an IDE. I doubt it will ever change. Me I use it a lot since the early days, because I have no choice in the majority of our customers. When given a choice I pick other IDEs.
My eyes! They goggles do nothing!
"humour"
&gt; https://projects.eclipse.org/projects/eclipse.jdt Doesn't look good :( 
Yep, it's my everyday fight! Customers asking me for installing RHEL 5 and old versions of Jboss or tomcat... It's faster and cheaper to do that than rewrite the whole aplication, adapting it for the new version.
Or /r/shittyprogramming.
What made you think so? Braces in lambdas do produce new scope. But the outer scope is also available...
Yes, that, and this kind of thing: final void doThing(Collection&lt;Thingy&gt; thingies) { doThing(thingies, null); } void doThing(Collection&lt;Thingy&gt; thingies, OptionalParameter what); Interestingly, the Ceylon language has gotten rid of overloading through support of [true default parameters and union types](http://blog.jooq.org/2013/12/03/top-10-ceylon-language-features-i-wish-we-had-in-java/)
I think that given the backwards-compatibility constraints, lambdas were actually implemented very well!
Well, the dollar sign is obviously the monetary value of the class. ;-)
 import java.util.Random; Random random = new Random(); int[] intArray = new int[16384]; for(int i=0; i&lt;intArray.length(); i++){ intArray[i]= random.nextInt(); } it should create an int array of size 16384, then fill it with random integers using a for loop. 
Lombok unlike AutoValue installs itself into your eclipse. Lombok not only generates getters (and possibly setters - Lombok can also do mutable attributes) in the background, but it will not show them in your code (but Outline and autocomplete will have them). You don't need to use an abstract class (it will just fiddle with your classes in transit) with Lombok. Lombok comes with the delombok utility that will output your code with all the generated stuff included, so you don't need to use lombok at runtime. IMHO, if you are using eclipse, there isn't any good reason not to use Lombok. For other IDEs (and the limited use case of immutable value object classes) and for people who are uncomfortable with AST fiddling (who presumably wear belt, suspenders and braces), AutoValue will be the more viable choice.
Cheers :)
Why are lambdas syntactic sugar? Where does it says they compile to inner classes? Can you show byte code where this happens?
Did you see in your byte code that lambdas became inner classes with a random name???
Things like Python and Ruby are older. Scala is just a bit younger, but old too (10 years). Just saying...
 Just one small note. CDI + JSF + plain container is no problem at all. Especially not so if you use only JSF. Thus your argument regarding full Java EE stack is invalid. Otherwise your post was very interesting. For reference, here's a CDI + JSF project that deploys on jetty with mvn jetty:run https://github.com/os890/javaweb-cdi-ds-project-template That example uses Apache OpenWebBeans. Weld also supports plain servlet containers. What you may lack is injection into certain artifacts such as Servlets and Filters. This is easily bridged with Deltaspike core or Omnifaces 1.6.2-SNAPHOT. This is the first time I saw someone listing full EE as requirement for JSF but it's a very common misconception about CDI. CDI supports main applications even...
It depends on how you write your code. For example, I find this very easy to read: public Animal findParrot() { return animals.find((animal) -&gt; { return animal.getName().equals("Parrot"); }); } That said, I would not say lambdas are absolutely better than anonymous classes for all cases. There are situations where anonymous classes are better than lambdas though. Edit: missed a 'return' statement.
Yay for http://www.ioccc.org/ There should be Java entries in this contest... Unfortunatelly it would be less convoluted without the #defines...
Just because it parses doesn't make it right.
Nope. See the docs. http://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html#accessing-local-variables
You only need to add a single jar file to your application to use JSF.
code is no different than an array of size 1 or 2 aside from allocating 16k instead of 2. nothing special about the size. 
...so they just have to rename the exe to get around your licensing instead? more_exercise has it right.
Yes. In 1996. JavaFX is taking over Swing, BTW.
Calendar c = Calendar.getInstance();
Yes. There are multiple implementations available.
Frankly, I don't believe that 3-person team can make significant progress in 9 months. It will also be problematic how to merge their changes with core eclipse in new versions ...
So that the getInstance() method can provide you whatever implementation subclass happens to fit your local situation best. Does your locality have two moons, 28 hours in a day, and 34 day months? Does Unicode have character codes for Klingon? Overengineered? Naaaah. :-) 
Thats what we are trying to avoid. While maintaining a very small footprint. 
Pfft, you know this code is fine, you're just fishing for compliments. How can I tell? The lack of comments; good code comments itself, so as there's no comments this must be good code!
I have almost everything running smoothly except that the frame draws a blank. Nothing is there. Here is the new code. I edited some things and mover over the code when editing it here is irritating: https://www.mediafire.com/?9l2zz3t5k7392ay
i think its called the peter principle. basically anyone in a position to make decisions is probably not going to make good ones, because if they did make good decisions they would have been promoted to another position. a lot of folks tend to level out right about where they can really fuck up an IT department, in my own experience.
Sounds like your problem is memorizing the **syntax**. Simply put, it's something you get used to. Every language has a syntax, and some are widely different than others (compare Java to Python). And I never fail to type Lua's `elseif` when I meant to type Java's `else if`. My advice is to just start working on a small project. Use an IDE, like [IDEA](http://www.jetbrains.com/idea/) or [Eclipse](https://www.eclipse.org/), which will help catch syntax errors. Learning a new syntax is like writing in print all your life and then learning cursive. It takes practice!
Thanks for sharing it. The standard is always the preferred way.
Haven't had to maintain not your own code, have you? He makes a very good point in the conclusion - lambdas should be used only where they really make things easier (as in easier to present and understand). Some people would like to use lamdas everywhere just to avoid typing few more letters. I would like to see those people maintain java 1.3 projects for the rest of their life ;)
&gt; There are situations where anonymous classes are better than lambdas though. That's the message I got from the article, it was not that lambdas are bad, but that if used with bad code design they will make it worse by adding one more layer of wtf.
Not that it's needed in this instance, but you are aware you can instantiate abstract classes, right?
Look at the free Java for complete Beginners Tutorial on Udemy.com: https://www.udemy.com/java-tutorial Http://codingbat.com has some puzzles on logic Other than that, look over at the /r/javahelp wiki for plenty more tutorials.
Here you go: http://docs.oracle.com/javase/tutorial/uiswing/components/combobox.html Especially, the "Custom Renderer" section is what you are looking for. BTW: That has absolutely nothing to do with Netbeans - it's Java that you need. Netbeans is just an IDE
Not sure if Typesafe reaches a significant segment of enterprise Java users, which make the bulk of who's responsible for Java being #2 on TIOBE...
Aha, I see what you mean. I meant that the following variable's scope is restricted by the lambda's braces: Runnable r = () -&gt; { int x = 42; }; But you're right, and it is indeed confusing.
It is, definitely selection bias... For example, anyone using WebSphere has to be using the IBM JVM so they're can't be on 8 or have plans for 8 yet.
I guess where I am confused is to where I put the code. This is generated code for the combo box from netbeans. comboxTeams.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Germany", "Portugal", "Ghana", "USA", "Belgium", "Algeria", "Russia", "Korea Republic", " " })); comboxTeams.addActionListener(new java.awt.event.ActionListener() { public void actionPerformed(java.awt.event.ActionEvent evt) { comboxTeamsActionPerformed(evt); } }); javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane()); getContentPane().setLayout(layout); layout.setHorizontalGroup( layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) .addGroup(layout.createSequentialGroup() .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE) .addGap(66, 66, 66) .addComponent(comboxTeams, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE) .addContainerGap(127, Short.MAX_VALUE)) ); layout.setVerticalGroup( layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE) .addGroup(layout.createSequentialGroup() .addGap(68, 68, 68) .addComponent(comboxTeams, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE) .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)) ); Now, when I double click the ComboBox in the design I get this. private void comboxTeamsActionPerformed(java.awt.event.ActionEvent evt) { // TODO add your handling code here: I'm guessing the code to display the picture should go into the latter?
Here's Typesafe's disclaimer in the report's introduction: &gt; We ran the survey through an invitation to our contact list and a blind open call on the web, so there is a certain amount of bias present in it. Obviously, our customers and developers familiar with Typesafe and Scala are more likely to reply to the call than anyone else. Also, it’s likely that people who find and take such surveys are less conservative in their technology choice than those who don't. So, take this entire report with a grain of salt. I think you are totally right that they are not reaching a high percentage of enterprise users. It's pretty hard (but not impossible) to find Scala usage in an enterprise application.
I'm by no means an expert on SWING, but as far as I understand it, the code for the cell renderer itself is in a separate class. The combobox gets the cellrenderer assigned. The comboboxrenderer is an interface that must implement the method: public Component getListCellRendererComponent( JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) It needs to return a component. So, this would make an individual class (possibly extending from JPanel) - there you could provide room for the label and the image. In the actionlistener, I'd assign an image to the selected element to be displayed (and possibly use ".validate()" to force a re-display.
Short term, no. But long term as Java developers see the value of functional programming I think that they will be more willing to take a closer look at Scala which runs on the same JVM platform.
So sad to hear.
What IDE are you using? Getting help on something like this is a lot easier with properly formatted code. I downloaded your java file and off the bat it doesn't compile. For starters your class files should begin with a capital letter (ie `Game.java`) and your default constructor for Game doesn't have a closing `}` You have two `run` methods, and your main method should ideally be located in a separate class and if anything located more towards the top of your code. Next up you have `AudioPlayer.player.stop(as);` and `as` isn't declared anywhere that I can see. Although its declaration is commented out earlier in the code. I'm also still getting an error with `bufferdImg = (BufferedImage) createImage(width, height);` --- I think I may have found part of your problem though. in `public void update(Graphics g)` your first check is if (!start) { and `start` is initialized as `false`. Changing this to `true` allowed some stuff to show up on the screen, and if your intention was to initialize it to `false` then I would start with this first `if` statement and why that's not working.
I think the Radiobutton solution is very simple compared to the custom cell renderer. If all you want is to display a picture based on the selection of the combobox, you don't need a custom cell renderer. All you need is to write the code to display the image in the actionlistener (the comboxTeamsActionPerformed method) Generally, I'd advise to stay off GUI builders and learn to code the GUIs by hand. For Java, the builders are not really good (yet) and produce unstructured, difficult to maintain code. (I've learned this shortly after starting with Swing. I used a (paid for) tutorial on Udemy.com https://www.udemy.com/java-swing-complete/ to learn Swing programming - was worth every penny.)
I always get thousands of these deprecated messages when i compile the old program i am working on at work. fucking annoying, but we are re-writing. 
&gt;Whats even better is that once you encounter a deprecated feature you can instantly Google what replaces it and with very little reading you will understand what advantages new methods offer over old. This is a very good way to learn the benefits of new programming paradigms rather than just excepting new is better. That's a really good idea! thank you :) &gt;Now if you are writing applets as part of your 2001 introduction to java, you have my sympathy. Looking through the book, 90% of the code starts with 'import java.applet.Applet' ... should i be concerned?
I don't think I understand. &gt; Declarations in a lambda expression are interpreted just as they are in the enclosing environment. The enclosing environment in the example being a method, which also has braces and also doesn't de-scope instance variables, so I don't see how this introduces an inconsistency in terms of the meaning of braces. The only difference I can see between lambdas and anonymous inner classes is that in lambdas `this` refers to the enclosing object. Is that what you worry will cause confusion?
You can easily run java EE on tomcat. Just include the jar files for the parts you are using. If you want all of java we just us open ejb or Tom EE.
Yes, true enough. I was more speaking that often I find people think they need a whole JEE application server and support and their application is really just a couple of servlets or a simple MVC or JAX-RS application where they don't really use much from JEE at all.
I am using Eclipse with Java 7 and 1.7. So no closing bracket on game? Weird I feel like eclipse would tell me that. Also I feel like Eclipse would tell me if I had to methods with the same name. I like having everything in one file usually just because I don't have to go looking for things. I will have to uncomment out the AudioPlayer error. The last error you mention with the buffered image shouldn't be there as I had changed that a while ago. I will see what I can with the if problem though. Thanks for the response. I you so choose, I would like some assistance with making this game if you would like to help, you would get credit for it obviously. Thanks again!
Fundamentals first. It's my understanding that few CS professors expect you to ever build your own linked list or to actually program in MIPS, but teach it so it develops the proper thought processes and experience. In ten years, mobile development and enterprise stuff might be as antiquated as vacuum tubes, but the fundamentals will still be there. It's also about specialization. Paddington_the_bear chose a field (software development?) and disregards everything not relevant to that field as time wasted. However, someone else could have taken the same classes and chosen to go into hardware, meaning that much of PtB's knowledge would be irrelevant. Just like how in high school many people will not need calculus in their lives, but it gives them the option to become something that needs it.
I checked the closing bracket issue and found it wasn't there for me. Also, the !start didn't help anything at all. It's still just grey.
This is what I did, I might have changed some other stuff too in order to get it to compile, sorry don't remember http://pastebin.com/7eQgCdEK That said the point of java is that it's object oriented, and you are putting everything into a single class. You should be splitting off logic into related classes and your main class should simply instantiate the program.
It's the required material for the class. It kind off annoys me that i paid $120 for a programming class that hasn't updated it's material in 13 years, but it's required for graduating.
Well I don't have much experience with Eclipse so not sure. I was using NetBeans to debug. If you're serious about this I'd recommend looking into splitting off into different files; although you don't like 'looking for things' that's the way java was meant to be programmed. I'd be happy to create a GitHub repo for you and show you how to make a pull request from within NetBeans -- I'm sure you can do the same from Eclipse but I'm only familiar with what I've used.
Why all the downvotes? I was just trying to help...
The graphics are now showing up but we have a big problem now. update() is not static and it needs to be for me to run in the main method. What can I do to fix this?
Not really sure what you're trying to do, but `update` is an overridden method and is inherently not static. Have you tried f.update(f.getGraphics());
I'm going to try to put this into a loop. I'm trying to get it to update because if it doesn't the icon of the dragon will stay where it once was, resulting in a windows 95 window dragging type of look only the icon stays there.
Also that didn't help. Thanks though. You clearly are more experianced with GUI's than me.
Also I won't be on for a little bit. I'll be here later tonight though.
Well good luck
Agreed. If you are in computers whatsoever, I think it is very important to think about what you used at the start of your job, and what you use a couple years later. Everything changes so fast, and you need to be able to pick up everything relatively quickly. Knowing the basics makes it that much easier instead of trying to learn each language from the ground up.
I've learned about the -&gt; through C89 so this is very very confusing lol. I see what it does but I don't think I would be a fan of using it. 
Consider: method() { int x; lambda { int x; } } This will not work (presuming you fill out the syntax of course). It will present an error because x is already defined by the method's scope. You can't shadow variables inside of a lambda expression.
Classes are just blueprints. They are like structures in C89, but they also can have methods/functions. IIRC. You still need to make the Object of the class to use it the same way you need to instantiate a struct to use it. 
I understand OOP, got the Classes, Methods and the rest sorted. But its like i just cant wrap my head around the fundamentals of Java. Need it explained really simply. Is it because Java is a high level language, everything is pre-written and you just use the methods/classes already made and make your own to customize the application? If so what is the reference to all the methods/classes?
http://docs.oracle.com/javase/tutorial/ Scroll down to "Trails Covering the Basics" and start there.
No, no, not "everything is pre-written", there is just a standard library like C stdlib. You write all your executable code in methods, which are just functions located in special structures (akin to C structs, to simplify a bit) called classes. I can't reallly say more without specific questions. 
Java from my understanding has two fundamental principles. Classes and Objects. 1. Classes, these are really just the blueprint of Objects. When you have a big program (for instance a game) it runs the entire game in one class. From that class it will make calls, through objects (unless the class is static) to process information and update variables. 2. Objects are the living embodiment of these classes, and they can interact with each other, they can be created in other classes and they can hold other objects inside of them. Just like you have wikipedia's that describe superheros and their powers. So the superhero is the living embodiment of the description of the wikipedia page. For instance we have: public class Main { public static void main(String [] args){ Cat a = new Cat(); //This is an Object using the Class Cat. //Basically the blueprint of //Cat to create the object. Cat.die(); } } This calls the die() method from the Cat class (**You make this cat class to your liking**). But the program runs in the main class and makes the call to just one function in the Cat class, the other functions do not run until they are called in one way or another. public class Cat { int age, size; String color, name; //You can make any variables you want the cat to have. //Want it to have a Laser? Make a Laser class and //Instantiate a Laser object in the Cat class. Laser superLaser; public Cat(){ this.age = #; //whatever age you want this.size = #; //whatever size you want this.name = "I don't care, it's your cat."; this.color = "Magenta"; //I like this color. superLaser = new Laser(); /*Just like how you made the cat object in the main class, you make a laser object in the cat class */ } } Now the laser class public Laser { .... //variables here. .... //methods here, same as the Cat. } 
This is the likely cause. There are also some Spring use cases that create a child context with one-way relationships between the parent and child. For example, if you use Spring MVC, the context of the controllers and beans they rely on can access beans in the main spring context of the application, but beans outside the context can't access the controller beans.
I would disagree regarding GUI's - I've built Swing production applications and it was easier to build them in code when it came to making them consistent - they key is to build utility methods and builder classes to help, creating consistent constraints and the like. I found it faster to build in code once I did this. I think there might be a library that has builders for Swing now, but it's been a while since I've done anything serious. As far as WSDL and XSD, I would agree - but I don't work with those any more than I'm absolutely required to :). As far as adding Jars, IDEA has a great trick - type the name of the class in your Java code, ctrl-shift-space, when it can't be found and you Alt-Enter, one of the options it will present is to search the Maven repositories for the class. Then it will show you any Jars that it found containing the class and add that respective jar to your POM for you when you select it. And I guess by "most", I meant me :), but that's pretty typical right :).
The [r/cscareerquestions](www.reddit.com/r/cscareerquestions) wiki/FAQ has links to common questions regarding software developer jobs and education. Maybe some of them can help. :)
Ok, i think i should re ask the question. How do Java and C differ? From what i can see Java is API based. Methods and the rest are all done. The C i learnt didnt have much in the way of API's. I think explaining this will solve it.
C is not object oriented. C also has a smaller official API but I think you are a little confused about what an API is, you can make an API. Anyone can make an API. Java has a huge Language wide API but companies can have an API for their projects and you can even have an API for a Computer class you are taking or a specific project you are working on. "Methods and the rest are all done." No, there are a limitless # of methods that can be created that haven't been created. There are classes and methods already made though through Java's official API that you can use to make your job easier. "Java is API based" No Java is OOP based, the API shows the different Objects and Classes that are already made that you can use by importing them. 
ok, thanks for your help, i really need to get to the bottom of this. In a C or C++ file i am use to writing the code sequentially and putting for, if, while... loops and statements to get things done. Is this the same in Java? or is it the same as C++ can you explain this? public static void main(String [ ] args) { } this is what im use to: #include &lt;stdio.h&gt; int main( int argc, const char* argv[] ) { printf( "\nHello World\n\n" ); } 
yeah got all that,,, ok... so really they are the same... but different :)
Heads First Java was great for me. 
It seems that Head First Java has been the most popular Java book, by far. I have gone through it, and found it to be very good for learning. However, the most recent edition came out in 2005, just as Java 6 was coming out. We are now closing in on the release of Java 8, which has a lot of changes, so this book may feel a bit outdated (though still valid Java). It's a shame the Head First series hasn't had any additions or changes in quite a while, so I don't expect we'll see any more titles in that unique style - it was probably dependent on the creators Kathy Sierra and Bert Bates. Since you are new to programming, you may also want to look for more general tutorials on computer science/programming, which make use of the Java language. Java is one of the more common languages used for teaching introductory computer science. With the arrival Java 8, I expect it to become even more popular. 
Nononono. People need to stop recommending thenewboston. The majority (if not all) of his stuff is outdated and haphazardly put together. Plus he takes 10 minutes to show/explain something in a video that could have been read in 2 minutes.
Questions like this will get better answers or already be answered on StackOverflow.
You could push every move on the stack, pop it into a position, put a v there, and voila. Backtrcked
Check the [Java for Complete Beginners](https://www.udemy.com/java-tutorial) course (free) on Udemy. As /u/borscht said: stay clear off thenewboston - he will introduce coding style that is totally frowned upon in proper (professional) environments. Also, a very good starting point are the [Oracle Tutorials](http://docs.oracle.com/javase/tutorial/) [Codingbat](http://www.codingbat.com) has quite nice practice methods expecially tio grasp programming logic (but you'd need some knowledge about the syntax already) You can find lots more tutorials and books over at the /r/javahelp wiki.
Hi just wanted to let you know I'll take any advice you have to offer that can help me
Dont learn a bit about everything. Just find two or three areas to specialize. Im focusing now on both Python and Java.
r/learnjava
I would say go all in on Java, learn how to do TDD. Also learn some kind of other JVM language like Groovy, Scala or Clojure. That will give you exposure to other languages which are nice but still let you stay on the JVM.
The big difference, coming from a C background myself, is there is no such thing as a global function or variable. That's why there is no main function outside of a class. If you want to share data between different methods in different classes, they need a pointer to that data. You'll need to share that pointer somehow, either as an argument to a method, or make a class with a static method that returns the pointer to the same object ... a classic thing to do in c, is something like int global = 0; void thingy() { global++; } int main(int argc, char **argv) { global++; thingy(); printf("global = %d\n", global); return EXIT_SUCCESS; } And that'll increment the global variable, without having to pass a pointer to it around in your code. In Java, you can do the same thing, but remember there are no globals, so it's done a different way: public class Thing { static int global = 0; public void incrementGlobal() { global++; } } public class MyApplication { public static void main(String [] args){ Thing.global++; Thing t = new Thing(); t.incrementGlobal(); System.out.println("global = " + Thing.global + "\n"); } } Note, this code has many badness, but it's illustrative, not an example of What To Do. Everything has to be a class, either as a static variable or an instance variable, and methods are tied to classes, and everything has a namespace - there is no such thing as a flat namespace. Oh, and in C, static has a different meaning than in Java. In Java, a static variable is known as a "Class variable" - you can do stuff with it even if the Class isn't instantiated - and there is only one copy of that variable. Thats why it's kind of a "global" variable. Static methods are methods that can be called on the Class itself, instead of on the instantiated Class (ie, an object). Static methods are useful to do things like, instantiate some Classes, assign those object pointers to static variables, and then hand a singleton object back with all the stuff inside that you need - to avoid reallocating it again. 
Learning python right now after coding in Java for 3 years. But that's just hardly an hour a day thing. I would suggest to broaden your skills in java itself. 
Without seeing your code I'm not sure how you implemented the if and else if statements. If you were implementing a separate statement for each I understand why you would find it to be tedious and bulky. An alternative to a separate statement for each would be to use boolean operator || (read 'or') to string together all the possible color option into one statement. if( num == 2 || num == 4 ....... num == 35){ color = black } and similarly for red. Other option's might include a switch statement (however I'm personally not very fond of them). Check out this quick and easy tutorial page from oracle on those if you aren't familiar with them: http://docs.oracle.com/javase/tutorial/java/nutsandbolts/switch.html Lastly, the pre-populated array, as mention by /u/glavata is a good way to go as well. There are plenty of options and with such a small data set you aren't going to lose any sleep over run time for a game environment. Now if you're shooting to simulate a large number wheel spins that's a different story. Hope that helps and gives you some options!
I'm really looking forward to the ability to utilize lambda's in conjunction with streams. I acknowledge I can achieve the "same" functionality now, using more "traditional" methods - but I think the shorter, more eloquent expressions will be a huge productivity boost in my day job.
Combining Java with the web technologies (HTML, CSS, Javascript) might be a good idea.
Learn to program. I mean the fundamentals behind programming - algorithms, data structures, all of that stuff. When you know how to program, learning a new language is just details. I'm currently a Java Developer, and have been for 8 years, but when I started working here I hadn't touched Java in about 4 years - I'd been doing .NET and scripting for jobs before. But picking it up again wasn't hugely difficult because I have a decent grounding in the fundamentals. As far as specific areas go - if you want to stick to the JVM then I'd recommend learning Java, Groovy and Scala. They give you OOP, Scripting and Functional programming all using the same underlying framework. If you then need to jump from Java to .NET it's just different specifics - the names of classes are different, but a Linked List is a Linked List is a Linked List, regardless of which language it's written in.
You're right, sort of. *IF* you are looking for some degree of job security, go talk to recruiters in the area and get their view. But... find an old one - find a recruiter who's been working in your geo area for &gt; 5 years, ideally &gt; 10. They'll be able to tell trends from fads. Nothing lasts forever, so understanding the basics in 2-3 areas will let you pivot when necessary, and buy you time as you get up to speed. 20 years ago "client/server" was the rage, and now "mobile" is. Java/JVM will be around for a long time, as will .NET stuff. Pick something you're comfortable with, and figure out how to find work in that. If you're concerned about employment in your area, yes, talk to recruiters/headhunters in the area and factor in their view, but... don't (for example) go 100% in on .NET just because they say to. If you enjoy Java more, find a way to make that happen (and same for python, php, ruby, etc).
Don't worry about languages and just work on lots of different things. Build systems with puppet/chef/salt. Test stuff with rspec/selenium. Write pages with html/css/js. Automate stuff with bash. Use vagrant to get a clean slate when you need it. Get java code building with ant+ivy/maven/buildr/whatever. Set up Jenkins. Build rpms/debs/msis. Oh, get comfortable with databases, relational or otherwise. Work for small companies where you have to do a little bit of everything. If there is a database team, a storage team, AND an ops team and they communicate via tickets then leave. You need your hands in everything so you'll grow in breadth and you can't do that there.
Good call on finding experienced recruiters to talk to. Also talk to more than one because in my town they tend to specialize. Some do medical industry, others do mainly retail, some do mainly infrastructure, etc. and you'll get different answers depending on the industry. If you live in a larger city, you can also try going to meetups and finding out from other developers where the jobs are. An example of fads, in my town there was a large call for rails developers a couple years ago and tons of people have jumped on it. But in reality, there's only one major rails shop, a few minor ones, and a buttload of startups with little to no funding. That market is already saturated. There are still jobs to be had and work to do, but it's not as lucrative as the .NET and Java stuff and the job security is limited.
I guess my advice would be not to worry too much about this class, it's not going to make or break you. If at the end you don't feel like you really understand the concepts well, take another "intro to some language" class or even the same class again *before* proceeding to more difficult classes. Another option would be self study or some summer course. You really need to be able to look at any of the assignments given in this kind of class and immediately know exactly how to complete them in theory, even if you're not sure about some syntax or minor detail. Things like assignment, pointers/references, loops, subroutines, data types, variable scope, etc are critically important to have a solid handle on. How those translate into Java exactly is less vital. You can always look up how to do X, but you need to know when X is the right thing to do.
I'm personally picking up Python. Eventually I'm going to throw some web into it too. I don't like web, but you can't deny it's good to know.
Try and build something you want to see in the world. Once you've decided what to build, go out and find the best tools to do it with. This way, you'll have fun with the process and you'll have something to show for it afterward. 
Any performance comparison with Tomcat DBCP or HikariCP?
Interesting. Do you have some comparison charts to highlight strength and weakness against Dozer and Orika?
Java will probably give you job security for a long time especially as engineering salaries the world over normalize. Much more so than Ruby, Groovy, etc.... There is probably one language that might be more common than Java and that's JavaScript. Which I'm sad to say, since it's such an unpleasant and unmaintainable platform. 
&gt; If you want job security, learn and use .NET Sorry but given the way Microsoft is trending, this is just bad advice.
Learn other JVM languages, Groovy, Scala, Clojure. It will open you up to conventions like dynamic typing that does not exist in java.
We get these DEMUX posts every now and then, but never any hint of what it actually does.
I disagree with this to an extent - I'd qualify it with when you are in school learn a bit about everything, then as you look towards your career start to try to specialize
Hi, I don't have a comparison sheet, but let me outline some differences between MapStruct and other libraries. The key focus in MapStruct is on type safety. By employing domain-specific interfaces you can't accidentally map e.g. an order entity into a customer DTO (I've seen that happening more than once). Also you'll get compile-time errors in case an attribute can't be mapped from source to target bean (MapStruct does many type conversions automatically, but e.g. you couldn't convert a long into a Date etc.). Or say you want to map one enum type into another but fail to map all the constants from the source enum, again an error would be raised at build time. Runtime based frameworks can't offer this. This all works in command line builds (Maven etc.) and your IDE. So when e.g. using MapStruct in Eclipse you get very quick feedback about possible mapping errors through error/warning markers right in the annotated mapper interface. As the code generated by MapStruct contains just plain method invocations, I'd also be expect it to be the fastest mapping approach. There is no reflection or runtime code generation involved. The generated code is self-contained, i.e. there are no runtime dependencies to other libraries. Also it's very easy to understand (or debug if required) the mapping code by examining the generated source code. In the worst case you could even generate a mapper just once and modify it from hand (though that's not the intended approach and should not be required). Hope that helps, --Gunnar 
Thanks for the info. I'll look into it as soon as I have some time.
Preprocessed C source code is passed to a compiler which produces the object file, and the object file is sent to the linker to produce the final output, which may be a lib or an executable. The final output has a target OS, normally the OS on which the compiling took place. Sun Microsystems wanted to skip the last part and make it so that the final output is OS agnostic (or, at least, *appear* to be), and came up with the Java Virtual Machine - a target OS which will remain the same regardless of the OS on which compilation takes place. The JVM's job is to interface with the host OS. Java source code is turned into JVM bytecode by its compiler. (While on the subject: no, it doesn't mean it's slower. In fact, it's been show to be as fast as, or *faster* in some cases, than C++). As someone else pointed out, both are technically inaccurate, but saying "there are no pointers in Java" is *less* accurate than saying "everything in Java is a pointer". 
I don't disagree with you, but I would like to point out the difference between able to figure stuff out and solve problems in (almost) any programming language, and being *productive* in said language. Being an effective, productive programmer requires a deep knowledge and understanding of both the syntax, the standard library, and the industry-standard third party libraries and frameworks; Experience which takes years to build up.
For me it's just spam. Never an explanation, never any interaction - just the same release posts over and over again. I've pointed the submitter to Reddit's guidelines in [his last post](http://www.reddit.com/r/java/comments/1ybsqt/demux_framework_082_released/), now I've had enough.. I'm reporting it to /r/reportthespammers.
Definitely yes.
&gt; Scala At least Scala had lambdas right since the beginning. That's a big difference to the stuff Java is experimenting with in Java 8.
People still use this? I thought we all moved to Guava already.
I think it's a good idea to know one static compiled language well and also a dynamic language well. Right now a powerful combo is Java and Javascript. Java gives access to powerful back end technologies, variety of libraries, android, and how an IDE can be helpful. Javascript is used by the web, quick scripting with node.js, and how dynamic typing can be helpful for rapid development. Static vs dynamic represent two styles of development and it's good to know what each is good at
thanks for the replys guys.. but i actually ended up fixing it by taking the site off the exceptions list and then it started to ask me every time if i wanted to run it. kind of weird.. but much appreciated 
Yes because Guava does not cover every use case. 
There's some little stuff left that Guava doesn't cover. Especially around exceptions and object "diff"-ing
if you specialize into big data, data warehousing, real-time data, or something of that ilk, you can get out of the web trap. 
[Your question on Programmers.SE](http://programmers.stackexchange.com/questions/152055/jack-of-all-trades-master-of-none). Great answers all around if you ask me. 
I agree with what you are saying and disagree at the same time. The way I word it is: Every thing is pass by value. What you have to remember is that Objects are references so when you pass it's value you are passing the reference. Or in C terminology Objects are pointers so when you pass it into the method you are passing the pointer because that is it's value. Same goes for primitives the value of the primitive is passed to the method but a primitive is the actual value not a reference so when coming from C they work as expected. 
There are globals, you showed it. However, as everything except top level classes, they're supposed to live in a namespace.
This is going to take a few point releases to reach maturity. I don't think client abort exceptions or EOF exceptions are exclusive to websockets though. The common use case for web sockets might exacerbate the issue more so though.
To expand on this a bit, if you use, say, Eclipse, you can have it create all of that structure for you. Tell it to create a class, fill in a dialog box, and hey presto you have a .java file ready to be filled in. All of the brackets are in place, etc. etc. You'll get used to it pretty quickly. It's not that horribly complicated.
Not me, I guess I must not be "hip". Did they fix that bug that the latest JDK7 security patch created back in January?
We have started using these WeMo network-controllable switches to test the performance of our low-level application when power is lost. Since our test code is in Java, we wrote libraries to control the switches.
Right - I'm not saying the Java books are wrong per se - they are right in the context of Java. It's just confusing to programmers with a lot of C experience. Or maybe just me, I don't know :-)
Thank you very much for your comment. Concerning James: I would like to use it because it can easily offer four functionalities: - it can retreive email via imap or pop3 - it can store email via jcr - any local application can easily access email through the james api - it can act as an imap, pop3, smtp server I must admit, that I have not looked into greenmail too much, but I don't think it offers all of the above. SQL is not too much of an issue at the moment, as I hope that JCR and JPA on JCR will offer enough. I imagine the whole software being built on top of a JCR. That way it is pretty flexible and can easily be migrated. As far as GUIs go, I'm not quite convinced by GWT yet either. I'd really like some sort of full-stack solution because it eliminates a lot of double-implementation. *However*, I am very unexperienced when it comes to browser applications and I don't know what is out there that will offer the same sort of static analysis that GWT offers. I'll look around some more.
You are completely underestimating the scope of Microsoft's footprint in corporate settings. There's years of work out there just supporting what's already out there.
I didn't fully check my formulas, but here is *an* answer, just not sure if it is *the* answer :) I also didn't bother filling out all the forms that were there for describing functions http://pastebin.com/9BjCzEGe https://github.com/jensbodal/Project3_Preis [Changes](https://github.com/jensbodal/Project3_Preis/commit/eb3e596008288dc03bd3985b1c0b77df083f4959)
Yes.
&gt; I must admit, that I have not looked into greenmail too much, but I don't think it offers all of the above. Indeed it didn't, but does it allow full testing client/server in Junit ? &gt; SQL is not too much of an issue at the moment, as I hope that JCR and JPA on JCR will offer enough. It is not a matter of SQL vs JCR it is a matter of decoupling. JPA require a lot annotations black magic or XML, both of them are really framework/language specific, them narrow down the chance of participation from community. My 0.02€ are for: use JCR for the blob, use SQL for everything else.
Took me a sec to see the bug, but interesting find.
It doesn't look like a difficult fix. It works using normal anon inner class so hopefully it's not deeply broken. 
&gt; But what they SHOULD say is "everything is a pointer in Java, but the language hides that from you". Coming from C, I initially thought that too... however, I've since come to believe that this is a somewhat misleading way of thinking. The object references used in Java are different enough from pointers that it's worth using a distinct term and calling them 'references'. Here are a couple examples of ways that object references are semantically different from pointers. * Object references must refer to a specific instance of a class (or the beginning of an array). Pointers can point at any arbitrary location within memory. * Pointers support arithmetic to allow different memory locations to be computed. References do not support this. * Given an unchanged reference to an object, the JVM makes the guarantee that it will always remain valid. (The referred-to object won't be freed until it's unreachable.) This isn't true of pointers because you can potentially `free` the memory referred to by a pointer. (Pointers also have the issue that some of them are suitable arguments to `free` and some of them are not.) * Pointers require unique syntax for accessing a field in a structure. It's not true to say that references don't have their own syntax, but it is true to say that since all object access in Java happens through references, you never need to worry about which type of field reference syntax you need to use. Also, it's not even necessarily true that object references are implemented using direct pointers. While most (if not all) modern JVMs implement references as pointers, references have also been implemented using other techniques. Some early Smalltalk implementations (and I believe the [Rekursiv CPU](http://en.wikipedia.org/wiki/Rekursiv)) maintained a table of all object locations in memory. With this implementation strategy, object references were implemented as indexes within the object table, rather than raw pointers. This adds an additional layer of indirection, but it also makes it easier to relocate objects in memory or page them to disk. (This tradeoff probably made more sense in the era where main memory was smaller and closer in performance to the CPU.) 
Shiro is a really nice framework. I hope the new Identity API is similar to this project.
I don't get it. Can someone explain why this is wrong? If it's throwing an IOException, shouldn't it print "KO !"? What am I missing here?
The Object o is null, yet getClass() is called on it, surely throwing a NullPointerException (which is a RuntimeException, of course)
Sun basically use the OpenJDK JVM for Java 7 and later. Not sure what IBM do.
Ah, that makes sense. Thanks!
Are you component-scanning your @Service class's package and is the jar holding that class on the runtime classpath?
I think you'll be fine. Those two books you have a amazing just follow their advice and try not to implement Scala in Java if you can help it. 
There are so many ways to skin this cat. You could create Set&lt;Integer&gt; objects called Black and Red for instance, and populate each with the corresponding values. Each roll could then be made into an Integer and the Sets could be checked with .contains. Indeed you only need one of these as if a roll is not red then you can else it into black. So if (Red.contains(value)) { redCount ++; } else { blackCount ++; } For low and high I would probably just do a single check like if (randomValue &lt;getLowThreshold()) { low ++; } else if (randomValue &gt; getHighThreshold()) { high++; } 
I'm wondering the same thing. Quick, someone test this
Wow thanks alot! This helped me a ton!
Maybe give them some short snippets of code with obvious errors (uninitialized vars, impossible casts, ridiculous syntax) and ask them to point out whats wrong. That way it's not open ended or ambiguous at all.
&gt; If there are "no pointers", then everything is call by value, right? This is the false assertion that leads some folks down the wrong path. Java doesn't have pointers. After all, a "pointer" is so named because it "points" to a memory address. Java doesn't have that. There is no pointer datatype, and you can't do pointer math or any of the fun things pointers let you do. However, this does not mandate call/pass by value because there are more than two possible ways in the world to refer to an object. Java uses *references*, which superficially can seem like pointers but are truly a unique third mechanism, with their own set of rules that doesn't match the pointer rules.
Reordering the catch blocks will not compile becase the IllegalArgumentException will then already been caught by the RuntimeException.
&gt; Well binary files in general don't play well with SVN (or any VCS). Things like cloning a repo will clone the entire version history, including JARs, which is pointless and impractical. Tools like Maven, Gradle, etc. were developed for a reason. This is a complete red herring that I suspect the Maven people started to justify the existence of their project. Source controls tools have no problem dealing with binary files. I use SVN all the time, and it's a theoretical boogieman. &gt; For the m2e problems, I can't really comment. I didn't run into any issues while using it, but clearly you and others did. I would recommend switching to IntelliJ, which has much better Maven support. If I had that choice, I would have done so already, and for reasons unrelated to Maven, lol... &gt; I still don't understand why you're touching these files. You may have a settings.xml there, generated by Maven, but there's no need to change anything to get different versions of a JAR file. Just specify the new version in your pom.xml, and Maven will fetch it into your local repo. Honestly, I have no idea either, I just know that's how it is for us. &gt; True that you can't create them, but why do you need to? Maven does this automatically - you shouldn't be doing it manually. Maven doesn't seem to create it's own config files if you need to config it for a local repo. &gt; What you should have is a distro of Maven for your company with the proxy settings already configured in your settings.xml. Then, every employee uses that, and no more proxy issues. I'm talking about reality, where even with the right settings Maven still seems to have issues with the local proxy. Would also require updating files for each individual user to use their proxy username and password local to their machine (corporate policy). &gt; Which is why I'm saying you're using it wrong. I've been using Maven for years now, along with plenty of other people. Again, whether it can even be used "right" or not, this is completely unnecessary if you just don't use Maven. &gt; That's somewhat like complaining that you have to set up a SVN repository to use SVN - except that you don't need a local Maven nexus. I've used the central Maven repo in several projects (from behind a company proxy) without issue. It also isn't complex to set one up, and there's plenty of products to help, like Apache Archiva. No, it's like complaining that I have to set up a 2nd server with SVN to use SVN-GIT or something - a second, additional setup step of yet another piece of software to get things working. Also, when it's actually easy to set one up, there aren't usually products to "help". Those kind of products usually pop up because it's not easy to begin with, so someone tries to come up with a product to offset or fix the weaknesses of the original product. &gt; Using your system, you now need to manually add and commit 6 different JARs. Also, those dependencies might have further dependencies. In Maven, you add 3 lines to your pom.xml, and you have everything done. You've gone from 6 jars, to 3 lines in your pom.xml, then having to remind every developer on your team to run a maven update in addition to doing an SVN Update. And as I mentioned - that assumes the Maven update actually works, and doesn't screw up your project files like it often does for us. On the other hand, using SVN they'd only have to do the update and they'd be done. &gt; Now, you decide that you actually want to update x.jar to version 2.5.1. Unfortunately, that requires different versions of the dependencies as well. You now have to manually check each dependency, update and commit them. In Maven, you change 1 line. Maven doesn't solve the problem when you have 2 libraries that need 2 different version of the jar (nothing solves that problem). But yes, this is the slight niceness that Maven has. I don't find that to be a terribly difficult task to do by hand though, especially since most decent projects now bundle their own versions of all dependent jars in their own package name to keep them seperate. It's just not enough of a gain to offset all the other pain of using Maven. &gt; Now I don't see how you can tell me there's no advantages of Maven. Also, I've trained plenty of new employees, and it takes a day tops to be familiar enough with Maven to use it without issue. It takes 0 days for new employees to become familiar with getting the jars if they're in source control, because they don't need to learn anything new at all. &gt; Using it in more advanced ways does require a bit of googling, but everything is easily found. It definitely shouldn't take weeks to become an expert. It doesn't take weeks to learn the basics of using Maven, but an "expert"? Weeks sounds optimistic from everything I've read. &gt; That is an incredibly poor analogy, which is nothing like the convenience that Maven (and tools like it) provide. Clearly, I think you're totally wrong, and frankly that analogy is **exactly** how I've found using Maven to be. I've used a lot of tools that provide far more convenience than they cost in time and learning - any modern source control, any modern ide, etc etc. But not Maven. &gt; There's a good reason so many businesses and people use Maven. There's a reason why, despite all the marketing and internet fanboyism, searching for "maven sucks" gets 200,000 results. &gt; It's not right for every project (it can be overkill, or simply nothing really necessary) but it's invaluable for others - especially products with a long lifecycle. From what I've read, it's least-painful for a medium size project. For a small project it's overkill, for a project with a long lifecycle it gets to convoluted.
One thing that I quickly see is that from the constructor for new books, you never increment the counter of books in the inventory, thus storing each new book at index 0 (in the constructor, you even set i to 0 where i should be a static variable which should be incremented whenever you add a new book) In general, your approach is a bit strange. I'd split the whole in 3 classes: The driver, A book, and the Inventory. Your trim function is nice, but there is already a [trim()](http://docs.oracle.com/javase/7/docs/api/java/lang/String.html) function in the String class (Oracle documentation is linked). How is your booklist file structured?
Ouch. So much for unit testing.
But a lambda is not an inner class is it? And nor does it compile to one.
There is certainly a problem in getInventoryCount... while (inventory[I] != null) should be if (inventory[I] != null) Typing on tablet. Capital I unintended.
In order to understand recursion you must first understand recursion.
ParentClass.this.failure()
you should also be able to use super.failure()
Ah, nice.
When the javac compiler compiles your source code, it goes to great lengths to shorten lengthy method and variable names to save memory. I am therefore not concerned about how lengthy they are in my source code, and I use long method and variable names as *part of my commenting regime*. For example, failure() is a *bad* name. In my code, it would be something more along the lines of failOnDataRetrieval(), or failAfterDatabaseCommit(), and so on. Not only does this approach virtually eliminate the possibility of clashes, it also instantly tells me (or other developers) - weeks, months or even years later - *exactly* what the method is supposed to do, or what value the variable holds. 
In my case the context / arguments make it pretty clear which type of failure it is.
The sample code could have been clearer. Printing out the exception in addition to KO would have presented the issue in a way that is easier to undressed.
In your case, naming the method failure() caused a clash, which is part of the reason to name methods/variables verbosely. "Stating the obvious" when writing code is a good thing.
Do you use an IDE? It should catch things like that and show a warning (at least IntelliJ does that, I think).
My question was from the perspective of a C programmer who doesn't understand Java references. In straight C, "pointer" and "reference" mean the same thing. I contradict the question immediately after issuing it. Yes, Java references are similar to but different from pointers. But saying "Java has no pointers" to a C programmer is confusing because they are not familiar with Java references.
yeah, that's eventually how i got it
IBM also has a jvm, maybe he is taking about that one? It isn't based on open Jdk though.
Wow, that's awesome. It shows a different way of thinking is required to use lambdas to their full power. I wonder how many programmers will be able to make this leap properly.
I found this whole thing a bit overly complicated for what it's trying to accomplish. There's no reason, for instance, to use recursion when a simple while() loop could accomplish much the same thing. That being said, I took your code, modified it very slightly (eliminated the 'Name' class and used first/last name strings) and it seems to give correct results, albeit a LOT of them. So: LicenseNumber(RF-2014-0, 0) Returning: License: RF-2014-0 License: RF-2014-0 LicenseNumber(RF-2014-1, 1) Returning: License: RF-2014-1 Returning: License: RF-2014-1 License: RF-2014-1 LicenseNumber(RF-2014-2, 2) Returning: License: RF-2014-2 Returning: License: RF-2014-2 Returning: License: RF-2014-2 License: RF-2014-2 LicenseNumber(RF-2014-3, 3) Returning: License: RF-2014-3 Returning: License: RF-2014-3 Returning: License: RF-2014-3 Returning: License: RF-2014-3 License: RF-2014-3 I added the following: public String toString() { return "License: " + number; } private LicenseNumber (String number, int serialCode) { System.out.println("LicenseNumber(" + number + ", " + serialCode + ")"); this.number = number; ... public static LicenseNumber getInstance(String first, String last, Date dateOfIssue) { char firstnInitial = first.charAt(0); char lastnInitial = last.charAt(0); ... } else { incrementSerial(); try { lnumber = LicenseNumber.getInstance(first, last, dateOfIssue); } ... and public static void main(String args[]) { Date d = new Date(); for (int i = 0; i &lt; 100; i++) { System.out.println(LicenseNumber.getInstance("R", "F", d)); } } 
Actually, the lambda is compiled down to a Method which in turn is invoked using invoke dynamic. See here: http://zeroturnaround.com/rebellabs/java-8-the-first-taste-of-lambdas/
&gt; an initial filtering that is cheap for you (for example, ask them to send you a program by e-mail that does something you stipulate, in good coding style and **with tests**) Can you expand on with tests? Unit testing? 
LOL - I actually got downvoted for pointing out a problem with the code here? One that would absolutely be able to cause the error being reported? That's too funny. 
They have to become an inner class, even in Java 8 there are no first class functions (functions as objects)
You may also want to look into using the Joda time libraries rather than mucking about with Java's Date and Calendar. Java's datetime implementations have long been criticized and have been responsible for more bugs than anything else I've seen in my programming career. Basically, Dreambeast's Calendar.getInstance() works, but if you can, use something else. If you're in an enterprise codebase, it's quite possible Joda Time is already in your classpath.
Yeah, I'm not looking forward to this. Currently I use emacs and I'm thinking of trying something like Intellij just to write snippets of boilerplate for me.
Dice games, word guessing games, Bank account software (with interest maybe), scheduling / calender program, card games, noughts &amp; crosses (tic-tac-toe), connect four, text-based rpg, etc.
So, where's the problem? You can do all of them in CLI
Neither of that is complicated, as all of them have been done before - as CLI programs. 
Depends on the difficulty you are looking for. How about a program that traverses the computer file system that looks for duplicate files via md5sum. Print out the file name, and all locations the file is located. I did this a few years ago, and found it a lot of fun and useful. For something simpler, try to replicate classes in Java (hash map, stack, queues, lists, etc). I found this really helpful going through college. It helped me understand classes in and out. 
Send packets via UDP and compare the md5sum of the sent packet with what was received. See how often packets get interrupted or lost (keep track of how many sent and the packet order) 
Hey I didn't do it...just saying. And thanks for the help!
Sorry I meant Oracle instead of Sun obviously. And IBM have their own JVM hence why I mentioned them
Minesweeper. I've done it before in CLI and it was a very fun project. You could also do a maze solver.
key and n are the same in the context of this particular method. You don't actually have to use it. More details [here](http://download.java.net/jdk8/docs/api/java/util/Map.html#computeIfAbsent-K-java.util.function.Function-)
http://www.reddit.com/r/learnprogramming/wiki/faq#wiki_where_can_i_find_practice_exercises_and_project_ideas.3F
You could write a CLI program that accepts project ideas and bitches about why you're not going to do any of them.
&gt; You are completely underestimating the scope of Microsoft's footprint in corporate settings. There's years of work out there just supporting what's already out there. All indications related to "supporting what's out there" point to non-US work. 
I just woke up, but I suppose you *can't* leave it out because it'd be a different @FunctionalInterface, hence, it'd spit out an error. Similar how you can @Override methods but skip it's parameters.
A good resource is [Java Concurrency In Practice](http://www.amazon.co.uk/Java-Concurrency-Practice-Brian-Goetz/dp/0321349601). Sounds like you'd be interested in *Item 5.3: Blocking Queues and the Producer-consumer Pattern*. Unfortunately I can't share it with you as it's copyrighted, but here's the short code snippet from it: Producer &amp; Consumer: public class FileCrawler implements Runnable { private final BlockingQueue&lt;File&gt; fileQueue; private final FileFilter fileFilter; private final File root; ... public void run() { try { crawl(root); } catch (InterruptedException e) { Thread.currentThread().interrupt(); } } private void crawl(File root) throws InterruptedException { File[] entries = root.listFiles(fileFilter); if (entries != null) { for (File entry : entries) if (entry.isDirectory()) crawl(entry); else if (!alreadyIndexed(entry)) fileQueue.put(entry); } } } public class Indexer implements Runnable { private final BlockingQueue&lt;File&gt; queue; public Indexer(BlockingQueue&lt;File&gt; queue) { this.queue = queue; } public void run() { try { while (true) indexFile(queue.take()); } catch (InterruptedException e) { Thread.currentThread().interrupt(); } } } And startup method: public static void startIndexing(File[] roots) { BlockingQueue&lt;File&gt; queue = new LinkedBlockingQueue&lt;File&gt;(BOUND); FileFilter filter = new FileFilter() { public boolean accept(File file) { return true; } }; for (File root : roots) new Thread(new FileCrawler(queue, filter, root)).start(); for (int i = 0; i &lt; N_CONSUMERS; i++) new Thread(new Indexer(queue)).start(); }
This is the book you want to read: http://www.amazon.com/Java-Concurrency-Practice-Brian-Goetz/dp/0321349601
There is a CLI equivalent (often a predecessor) to nearly everything ever done in a GUI. In many cases not having to implement a GUI lets you spend more time on the actual functionality of the program. If you want a challenge, pick something you don't think can be done in a CLI and learn how/why it actually can be done. Or write a Reddit client.
I have seen a couple posts about this feature now, and I've got to say, saying this is a cache is a misnomer. Don't get me wrong, this is a little better than the containsKey() solution to the same problem, but it is still lacking a major feature that real caches have: an eviction policy.
Actually, pen &amp; paper are still quite valid. I frequently find myself designing whole program parts (not necessarily in Java as this is just a hobby, but for the industrial control systems that I program professionally) on paper. Dabbling and doodling around on paper helps me focus. As for IDE: Eclipse or IntelliJ are the deFacto standard tools, Netbeans is the third big one. (forget about the rest BlueJ, DrJava, etc.)
You can do something similar with Java 6 with Guava caching. Only difference is you have to use inner classes since there's no language support for lambda expressions. https://code.google.com/p/guava-libraries/wiki/CachesExplained
Intellij is not too bad (and the community edition is oss)
I take it you have never interviewed people for a position you wanted to fill with competent people. If people want to learn or practice programming, that’s fine with me but they can do so at home on their own time and sure as hell not on my company’s time. (Usual disclaimer: of course I have learned lots of stuff at work but even at my first job my skill level was way above “entry level,” simply because even back then I loved programming and did lots of it at home.)
All his suggestions sound worthy of discussion and I think I like all them all. &lt;3 CDI
I would strongly suggest that you install either [IntelliJ IDEA](http://www.jetbrains.com/idea/download/) (the open source community edition will suffice) or [NetBeans](http://netbeans.org). Both are fast, stable, fully featured IDEs. Each has strengths and weaknesses, but both have the most important feature of all: neither is eclipse. ;P Seriously, I use IDEA most of the time these days, but used NetBeans until perhaps six months ago, both professionally and on personal projects.
I think best in pen.
&gt; It really isn't. SVN works by storing the diffs for each revision. This works well for text, since the diff will be a few lines. For binary files, the diff is the entire file. That's how binary files work with everything, SVN handles binary files the same way that all other tools do as well. It has no problem with binary files. &gt; That's fair enough. We sadly can't control everything in our work environment. Lol, yeah, I would change it if I could... :-) &gt; True - you'd need to configure a general user for the proxy, instead of having each user manually do it. There might be another way around this, but I don't have a huge amount of knowledge about proxies. It isn't really a maven problem though, but rather a proxy issue. It's corporate policy to not have a "general" id to get through the proxy, since Maven needs to get through the proxy it remains a Maven issue. &gt; Well no...it's really not. If you weren't using SVN, and wanted to, you'd need to setup a repo. If you weren't using maven, and wanted to, you can just use the central repo. If you're having problem with that, then you setup a repo. Don't have to do any of that at all if not using maven. It's addition work and complexity one only has to do because they're using Maven. &gt; Firstly, you're completely ignored the dependency problems that I mentioned. Your developers shouldn't need to be reminded to run a maven update (whatever that is - I presume you mean an install). They should already be running everything through maven. I have no idea what you mean there. Does a developer have to click buttons to run a Maven update? Yes. So they have to be reminded. They also have to be told that a new release is available so they need to run an SVN update, but it's a question of just running the SVN update vs running both an SVN update and also a Maven update. &gt; Well actually, it kind of does. You can exclude transitive dependencies. I was also talking just about one of the original jars that you included needing a newer version of one of its dependencies. The developer of the library will have already updated his pom, and that will reflect back to you when you update your pom to the new version of his jar. Developers pretty much never update a dependency unless they're updating the full release of their project anyways. &gt; I really think that it is. I couldn't imagine setting up and maintaining a full Spring/Hibernate/Jackson/H2/etc. project by hand, when it takes a minute to do with maven. I was doing it before Maven, and it was slightly annoying. "I can't imagine doing it" sounds like you've never done it, so you automatically bought into the Maven that it's some sort of horrible, herculean task. It's not that difficult. It's mildly annoying at worst. &gt; That really isn't an excuse. All new software and technology has a learning curve, and initial time investment. Maven's initial time investment is minuscule. Again with the rhetoric. Wishing it was "miniscule" does not make it so. Any tool should need to prove that the time needed to learn to use it is far less than the time to do it yourself not using the tool. Maven does not pass that test for me. &gt; How do you define an expert? Weeks might not be expert, but it would definitely be more than enough to handle virtually anything that maven can throw at you. There may be a few subjects that you'd have to google, but that's it. By not using Maven, I don't have to waste that time on it. &gt; I just can't agree with that, and can't see how people would have a hard time learning maven. I've seen dozens of developers pick it up with zero experience, and have a good base knowledge days later. Most were up and running within a day. And developers not using Maven, and simply storing their jar files in source control and up and running in 0 hours and 0 minutes compared to Maven. &gt; And searching "eclipse sucks" returns over 800,000 results. Searching "subversion sucks" returns nearly 200,000. Searching "java sucks" returns 4.67 million results. Searching anything "sucks" will return thousands of results. Fair enough, the count isn't really an indication, my point is that if you've been watching for a while a lot of people hate Maven and think it's terrible as well. &gt; From what you're read. From what I've experienced, it's fine for medium and large projects. I've even used it for some small projects with great ease. It wasn't necessary, but it still sped things up. I'm absolutely certain you did not sit down and take the time to figure out if it sped things up or not. You started using it, put the time into getting it to work, then assumed that it's faster than doing it by hand (which from the sounds of it you've never done). I don't think it's saved any time, it's just changed that we spend more time getting Maven to work than we would have if we did it by hand. Does Maven function? Yes. But driving around your house 10 times before parking in the driveway also still gets you into your house, just like parking in the driveway the first time does. All tools take time to integrate into your project, the question is whether the tool saves you time or costs you more time than it would take to do it without the tool. Learning Java, and learning Tomcat take time - but clearly writing a web app in assembly would be far, far more time consuming than writing it in Java using Tomcat. Learning Eclipse (or Intellij) takes time, but greatly reduces the time you'd be spending otherwise doing everything with a notepad and the command line. Etc etc. But getting Maven working for me has taken far more time than managing the jar files myself would have. So I think it's a waste of time.
Honestly, it isn't. When you're working on groups, throwing some pseudocode up on the board is going to be one of the fastest ways to explain your idea in a design meeting.
So you'll need to iterate over the array of ints, use a StringBuilder (not sure if you need this but you do if you are expecting 1 string from all the values in the array) and String functions to get your int a as String, then you'll have to write a method that adds in the comma and dollar symbol to that String. How do you know where to add the comma? try using modulus. 
Thankfully there will be language support as soon as java 8 is out! CacheLoader is a SAM!
You'll probably need to use a combination of [String.format](http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#format%28java.lang.String,%20java.lang.Object...%29) and [DecimalFormat](http://docs.oracle.com/javase/7/docs/api/java/text/DecimalFormat.html). Your conversion code will look something like this: int myNumber = numberArray[index]; DecimalFormat formatter = new DecimalFormat("You format string here."); String output = formatter.format(myNumber); output = String.format("you other format string here", output); Here's a java tutorial on how to use Decimal format: [link](http://docs.oracle.com/javase/tutorial/i18n/format/decimalFormat.html) Formatter can be a pretty rough read for a new programmer, so here's a simplified version for what you will want: "%[width]conversionType" Width is the length you want to string to be, and conversionType is a single character indicating what kind of object the next parameter will be. (e.g. 'd' if you are converting a decimal number, 's' if you are converting a string, etc.) Give that a shot and if you can't figure it out, post some code and I'll try to help you debug it.
You could just leave that up to them, since deciding the appropriate level of testing is an important skill for devs to have; you would hope to get back unit tests, and if applicable to the brief you asked for, they might for example write service / end-to-end / functional tests as well.
Lukas, how much farther do you think this can stretch -- do you think we'll eventually see improvements made in JDBC so the database only retrieves results as needed? I'm trying to think of how that would be possible, but can't see it. I like the idea of Java 8's streams, and this was the biggest place I wanted to apply it to (JDBC), but I'm guessing since databases are designed around a complete dataset (ie. throw in an ORDER BY and a quick pass through the full dataset is required to sort it), that minimizing the data that has to be looked at isn't going to be significantly improved on the database server level. I do like the thought of paging + streams, though, very clean feel to it.
What you're being asked to do is one or maybe one and a half steps beyond writing "Hello World". Have you done that one yet? If you have, then copy HelloWorld.java to Lab7.java and start editing. If not, you really need to get to the point where you can at least edit, compile and run basic programs. What environment are you using? Are you using an IDE or trying to get by with notepad and javac? The Student.java file seems fine, it's quite basic, and once you've nailed getting a program to even run it will be easy enough to create a 'new Student("name", 23);' Then you can start actually implementing the requirements you've been given.
IntelliJ or netbeans
A couple of posts from stackoverflow may be of some assistance: [how-can-i-configure-httpclient-to-authenticate-against-a-socks-proxy](http://stackoverflow.com/questions/1388822/how-can-i-configure-httpclient-to-authenticate-against-a-socks-proxy) [apache-httpclient-4-1-proxy-authentication](http://stackoverflow.com/questions/6962047/apache-httpclient-4-1-proxy-authentication)
Not all indications or I wouldn't have a job. In fact, there are companies looking at bringing their support back the the US due to language and skill gaps, not to mention the fact the time difference between China or India. The town I live in might be completely different, but a skilled .NET developer here can make good money and doesn't have to worry too much about job security. And I don't see any indications that will change in the near term.
This question is kind of tricky when you are first starting. You will need to know how to use the scanner class to some degree, and also have a somewhat firm grasp of how values are passed on to the object through methods. I have written a possible solution below, I apologize if it has some errors, I do not have time to actually test it right now but it should set you along the right path. Feel free to ask me any questions and I will try get back to you as soon as I can. //need to import the Scanner class to be able to take user input import java.util.Scanner public StudentRunner { public static void main (String [] args) { //Scanner object needed to accept user input Scanner kb = new Scanner(System.in); //Here is the instantiation of the Student object Student me = new Student(flames308, 18); //Executing the toString method here System.out.println(me); //Prompting user for a new age and changing the age of the student object System.out.println("Please enter the students new age: "); setAge(kb.nextInt()); //Executing toString to show the change in the age variable of the student object System.out.println(me); } }
http://www.jetbrains.com/idea/ or just vim with maven are what I do all my work on. There's schools of thought on how valid testing is. My opinion is withering on the subject, however, if you merely made a few syntactic typos rather than complete semantic blunders (like for a ; instead iterated an array once too often) you should get nearly full marks from anyone with a soul. I write algorithms by hand all the time. I enjoy it, and find it carthartic.
Love eclipse. I've tried netbeans but nothing compares. 
Demonstrates the steps one can take to convert a skeleton project to a Maven archetype, to store the archetype into a repository and finally to test the archetype by generating a new Maven project from the archetype. 
&gt; do you think we'll eventually see improvements made in JDBC so the database only retrieves results as needed? This is how JDBC currently works. By default (if the database supports cursors), a JDBC `ResultSet` is "lazy" and doesn't load all database records into memory. You can specify the "chunk size" / "fetch size" using the [Statement.fetchSize](http://download.java.net/jdk8/docs/api/java/sql/Statement.html#setFetchSize-int-) property. In that sense, wrapping a `ResultSet` in a [java.util.stream.Stream](http://download.java.net/jdk8/docs/api/java/util/stream/Stream.html) would make perfect sense to me. You can still consume the whole stream using [Stream.forEach()](http://download.java.net/jdk8/docs/api/java/util/stream/Stream.html#forEach-java.util.function.Consumer-), if needed. &gt; (ie. throw in an ORDER BY and a quick pass through the full dataset is required to sort it) Not necessarily. Take Oracle, for instance. Throw in a `/*+FIRST_ROWS(1)*/` hint and a `ROWNUM` predicate, and the database will optimise the execution plan to return a lazy cursor. Which is not so different from paging, btw.
I love that your reaction was to go to the source and fix the problem. No idea whatsoever if your code is correct, but nice work! Have you considered posting this on the lambda-dev mailing list or their bug tracker? https://bugs.openjdk.java.net/browse/JDK-8036942
I do this when I want to map values that contain characters which are not allowed in field names. Something like Type.RDFXML would be returned for "RDF/XML". This example also shows that I usually do this when mapping an existing vocabulary to an enum.
He is probably completely unaware that the compiler automatically inserts `valueOf` and `values`. But one difference is that the compiler generated method is case sensitive, so it might be that. It might be slightly less cringeworthy to at least simplify it to a loop that can be implemented the same everywhere with minimal modifications and maintain some compatibility with the default API ^(*no, don't actually suggest this*) public static &lt;enumclass&gt; valueOf(String value) { if (value == null) { throw new NullPointerException(); } for (&lt;enumclass&gt; en : values()) { if (en.name().equalsIgnoreCase(value)) { return en; } } throw new IllegalArgumentException(); } What do these custom `valueOf` methods do if nothing matches? Personally I'd suggest (really this time) creating an EnumUtils public final class EnumUtils { /** * Not meant to be instantiated. */ private EnumUtils() { throw new UnsupportedOperationException("Not meant to be instantiated."); } /** * Same as the compiler generated {@code valueOf(String)} method but * uses {@link String#equalsIgnoreCase(String)} to compare * the enum constant {@link Enum#name()} to the passed value. */ public static &lt;E extends Enum&lt;E&gt;&gt; E valueOfIgnoreCase(Class&lt;E&gt; enumClass, String value) { if (value == null) { throw new NullPointerException(); } for (E en : enumClass.getEnumConstants()) { if (en.name().equalsIgnoreCase(value)) { return en; } } throw new IllegalArgumentException(); } } Then if he really wants it on each enum he can just call out to that public static &lt;enumclass&gt; valueOfIgnoreCase(String value) { return EnumUtils.valueOfIgnoreCase(&lt;enumclass&gt;.class, value); }
No, you cannot leave it away. The [`computeIfAbsent`](http://download.java.net/jdk8/docs/api/java/util/Map.html#computeIfAbsent-K-java.util.function.Function-) method takes a [`java.util.function.Function`](http://download.java.net/jdk8/docs/api/java/util/function/Function.html) argument type, whose SAM is R apply(T t); Hence, you need to declare that `t` argument in your lambda expression. While your lambda expression can access `n` from its lexical scope, you might also pass a method reference or just any instance of `java.util.function.Function`. Such as: class MyFunction implements Function&lt;Integer, String&gt; { @Override public String apply(Integer i) { return "" + i; } } And then, you can pass an instance of that function to the `computeIfAbsent` method: map.computeIfAbsent("some-key", new MyFunction()); So you'll quickly understand why the key is duplicated as a function / lambda argument. Lambdas are just syntactic sugar for plain old Java. In fact, this is worthy of another blog post in the [Java 8 Friday series](http://blog.jooq.org/tag/java-8/)
Very nice post, thanks. It gave me the incentive to make things easier for our users (who are developers).
VB developers managed to get their heads around [lambdas](http://msdn.microsoft.com/en-us/library/bb531253.aspx). And they never looked back. I'm sure, Java developers will catch on eventually. And also: You don't *have* to write lambdas. You can just continue writing anonymous classes, if you prefer that.
&gt; Lambdas should make working with streams much nicer because they can handle the try/catch closing for you. Unfortunately, they precisely don't do that. Most JDK's SAMs don't allow for throwing checked exceptions, so you'll have to either catch them inside your lambda, or use a wrapper tool like [jOOλ](https://github.com/jOOQ/jOOL). See also [this article here](http://blog.jooq.org/2014/03/07/java-8-friday-goodies-sql-resultset-streams/)
what about valueOf(str.toUpperCase(Locale.?)) That works if you follow the convention of uppercase enum names
Yuck. Of all the things you could use to demonstrate the ternary operator, that's what you chose?
Thank you for your reply! I don't have access to bug tracker. Also I tried to post my message on the lambda-dev mailing list but it's there does not appear. Is there pre-moderation? May be I'm doing something wrong :( I tested my code on example above and it seems correct :)
He might be protecting against obfuscation.
well your reason is legit. But if you're going to return an enum which has the same name as the string value, using .valueOf would be cleaner I reckon
…by creating more obfuscation?
Why? (Seriously: why? Why on earth would anyone publish a tutorial about the basics of a programming language that is old enough to drink and watch pornography in most parts of the world?)
Yep, won't argue that.
My first guess would be to send just a diff between client's and current JAR version. When the client receives a diff, ot applies ot on its JAR, and then reloads it.
I completely agree, there are two books just look for his latest one, it covers some real good patterns
Did you just compare two strings with ==?!
interesting question.. let me assume that your project is really big, and hopefully well organized where code in packages are loosely coupled, also, I will assume that the "update module" should not rely on meta information that resides inside the class (so no class @version annotations, no static int's of version number per class, etc') so it'll be independent as much as it can. also, my solution is good to always update to latest version (no matter how many versions you've skipped in the past) I would implement some form of [file verification](http://en.wikipedia.org/wiki/File_verification) library. I'd add a server job to index checksums for each class and store them in some format (for example, xml) with the package hierarchy. something like this comes to mind: com.test.my.package: c97a5e *(example of some kind of hashing of all crc's in that package)* &gt; student: e31ca1 *(example of crc ouput for that class)* &gt; person: 829a14 I will add the same job to the 'deployer', so on deploy, it will add that indexing to our release. next is pretty straight forward, start comparing by root packages, see if you got a change (so we will use less bandwidth and not send the whole "index" at first), and investigate further where needed. this can be done in parallel fashion. download the files you need and do whatever you like with them. hot swap or restart your application.. 
Honestly I'm a bit surprised that top software engineers at Oracle din't immediately pick up that Object o = null; o.getClass(); throws an NPE ...
This sounds awful, almost like homework.
Not meaning to be rude here, but in general, look first, post then. Because: Had you scrolled down a little in this sub, you'd come across this post: http://redd.it/1ztm8v It was only a couple of hours ago and has basically the same topic with plenty answers.
There are tons of great exercises here: http://codingbat.com/java Start at the very beginning and try to work your way up. 
Collected Knowledge on the Workings of Java String.
This all makes sense but because of the class dependencies you don't want to update Student without also updating Person (for example). So I would have an overall application version number. Update the Student class to the crc required for application version 1.1 and do the same for Person. Once all classes are up to 1.1 switch them over. 
It really depends on the mistakes you made. There is value in perfecting your own knowledge rather than relying on automated tools, for instance a modern author probably uses a spell checker but we still give written spelling tests to students (or at least we did last time I was a student). Making small mistakes when there is no compiler to point them out demonstrates less than perfect mastery of the language. 
Probably you should use user_input.nextLine() instead of user_input.next(). (next() only reads until a space character is encountered) Also, please don't post screenshots of code, rather post the code directly in the post (a blank line above the code, four spaces on each line before the actual code), or on pastebin or gist.github Another little hint: In Java, variable names start lowercase and use CamelCase (no underscores). Underscores are commonly only used for static final variables (i.e. constants). Class names start with Uppercase letters and use CamelCase. In your case user_input should be userInput.
This was only meant to show to reader that it is possible to compare two strings with == operand even though it's not recommended. Of course equals() method would be used. Reason why I wanted to show this is because I'm currently running Java Basics tutorials. This going to be change after this series. I have received lots of requests about making more advanced tutorials since this is quiet boring and I know that myself. My aim was to teach people from scratch to learn Java, but I think it would have better if I just started to post tutorials that are more advanced and beneficial.
Ah, okay, thank you so much! 
Giving better example of Ternary operator was not problem at all, reason why I gave this kind of example is based on the knowledge what we have gone through this far in my blog. If I would give too complex ternary examples then it could have confused reader. Beside I'm currently doing the recap video of the lesson where I'm going to take more examples about ternary in it!
You are not the first one who tells me that :). The scope is going to change after these Java Basics lessons.
http://mojo.codehaus.org/versions-maven-plugin/
I really do like your tutorials. But, please, I urge you to remove the String comparison with "==". This is the single, wrongest thing to show anybody especially in a beginners tutorial. **Never** hint anybody to compare Strings with "==". Nearly every day there are posts here and on /r/javahelp asking why a certain method comparing two Strings (you guessed it: with "==") doesn't work.
Do you plan to restart your application when you update the software? Do you plan to allow for downtime when your application is updated? If you allow for downtime then you could periodically make a check if a newer version of the application is available. If so, restart application, and invoke download of classes to your local directory and then continue the application and let the application start as normally. If you do this, you can make the client update zip packges that are downloaded and unpacked. In this way you can reduce bandwidth usage as well.
If I'm not wrong, this is how SmartGit/Hg does it: basically, check for new versions, download them to the ~/Syntevo/SmartGitHg/&lt;build number&gt; directory, then have a start script which sets the classpath to the latest &lt;build number&gt;/*.jar.
The industry standard for modular, updatable , java software is the OSGi framework. Your application will be composed of "bundles" which are just jars with a manifest. Update individual bundles/services without even shutting down your application. 
Yeah, I read a bit about OSGi when researching solutions and it seemed fairly complex/heavy, but I will take a closer look. If it's the standard way to do this kind of thing, that has enough value in itself to outweight a bit more complexity. Thanks. 
Java Web Start is a pain in the ass, but there are some alternatives. I spent some time looking into this, but haven't tried using them myself yet: Twinkle, a Java '[Sparkle](http://sparkle.andymatuschak.org/)' updater: https://github.com/daniele-rapagnani/Twinkle Getdown: https://github.com/threerings/getdown Apparently, in future versions of Java (JavaFX only?), app developers are expected to bundle the JRE along with their app using the javafxpackager: https://blogs.oracle.com/talkingjavadeployment/entry/native_packaging_for_javafx http://docs.oracle.com/javafx/2/deployment/jfxpub-deployment.htm Unfortunately, auto-updating the app isn't a part of that yet. Here's the bug: https://javafx-jira.kenai.com/browse/RT-22211
Downtime/restart for updates is acceptable, although doing it live with something like a custom classloader is appealing just for how cool it is to be able to do that :) 
this is essentially what I've done, it just felt sort of hackish and like one of those situations where I'm reinventing a wheel that somebody must have already made a robust solution for. I may stick with it though, need to go over some of the other info in this thread.
&gt; It's different with SVN though, since you're storing history. That's why people recommend using a different tool for binary files. A text log of history doesn't change things, other than providing a log (if something stopped working) of who and when something was changed. Otherwise it's exactly the same. &gt; It's really not a maven issue. You're trying to access an external site, so you need to pass through the proxy. Complaining about that in relation to maven is really pointless, since it holds true for anything. You're just trying to stack up reasons you don't like maven. First, it is actually related to Maven because it's a sometimes works / sometimes doesn't problem. One that we don't have with a browser. Second, it doesn't hold true for anything. If you don't use Maven, and put your jar files in source control (which is on our local network so doesn't even go through the proxy), you avoid dealing with the proxy at all. &gt; Honestly, I'm just going to stop arguing now. It's clear that you dislike maven due to your own misuse, and unwillingness to learn. The problems you have mentioned are easily solvable, but you haven't solved them - instead, you're using them to validate your dislike of an extremely useful tool. Maven has a solid purpose (likewise for Gradle, etc.), but you're ignoring the benefit and doing everything manually. I clearly can't convince you in this debate, as you don't want to be convinced - you just wanted to voice your opinion. You're right that I can't imagine how you or anyone on the internet is going to convince me - because I've actually used the tool. It's the classic Maven rhetoric/propaganda - Maven is "quick and easy to use", and when it's not the excuse is that you're "unwilling to learn" to something similar. It's just an endless series of excuses. &gt; I clearly can't convince you in this debate, as you don't want to be convinced - you just wanted to voice your opinion. You're pretty much right. I do consider everything I read, but I've read all the Maven rhetoric before. Like I said, I think using Maven is like hiring a guy to open your front door for you. You spend far more time setting up Maven, "learning" Maven, configuring Maven, and dealing with annoyances from Maven - than you would just downloading the jars and putting them into source control yourself. Despite the hysteria (omg how do you download jars from the internet! it's so hard! - yes, someone trying to convince me to use Maven at work was going on about that) - it's not actually difficult to just download and add library jars yourself. 
if you said you can update the whole jar i'd say yes. you are. but your question suggests that you want to update small parts of your application as the client does not have high speed internet. you can calculate this by 1 KB/s = 3.6 MB/hr .. I don't know about implementing a custom classloader for that.. but I haven't heard of partial updater for low bandwidth... we all live in the 50MB/s era..
I just used a git library (jgit?) And maintain a public repo with the latest binaries. It could probably be a tad more efficient but its incredibly simple and powerful version control.
Best thing would be rsync'ing (or similar) uncompressed .classes and resources and compressing the transmitted deltas- uncompressed rsyncing will help minimize differences, and compressed transmission would reduce bandwidth needs, of course. You'll probably have to roll your own or settle for less.
You want patch/diff or even rsync. You say pure Java but look at how hard it would be to support rsync. You could also look at http://c2.com/cgi/wiki?DiffAlgorithm and https://en.wikipedia.org/wiki/VCDIFF and basically build your own or start with library. The only Java solution seems to be https://github.com/threerings/getdown/. Some installers have updating features, have you looked at those? http://www.ej-technologies.com/products/install4j/overview.html Can you make this an OS admin problem? For example in RedHat we have delta rpms.
That is *so* much not an answer to my question, it’s almost ridiculous.
Dude if you see it problem, then forget it. I wanted to have site which would be diverse. If you don't like those tutorials then don't go to the site. Why bother yourself to such degree?? 
Look mate, I will introduce the proper way later. I'm doing this step-by-step. As I said earlier it was not meant to teach that way for beginners. It was only a way to show that it is possible but not recommended.
Will do. Sounds complicated, but not overly difficult. Thanks!
This is quite hacky, but I've seen it used to update bukkit plugins for minecraft. I don't know how well this would work, but you could pull all the code from a git repo and build that jar. Than launch a new jar and exist the current task. Use the new jar to swap out the built jar with the main jar and then relaunch the main jar. Finally, quit the new jar.
Dont fall for the rplacement of the bundles / jars at runtime. Just write an updater that gets launched from your application, close the application (use a file lock to determine when the application is closed) and do the update. It is much easier to handle than trying to replace the bundles at the OSGi container's runtime. I build that once for a large utilities company to update OSGi based fat clients (based on pure Equinox, without p2). The updater gets a file list from the update server. Then the updater compared this list with the local files and replaced the different ones (version comparison on bundles and checksums for other files). Then, the client gets launched by the updater. I even made sure, that I can update the updater if necessary. The update server was designed so I can just put a new version into a directory, from which the server reads this version and provisions the files list. Everything is accessible through RESt interfaces.
You're on the right path, I think. For this specialized case, I would write an app loader jar. The app loader would essentially control class path and do nothing else. A new update would involve a replacement of the loader (or even a simple config download) and any changed classes in a new jar. Jars higher in the class path get loaded first thus patching is controlled by the classpath and minimal download. Minimal cost on all fronts.
is your servlet one of those fancy annotation-based servlet 3.0? If it isn't, what do you have declared in your web.xml? 
Yes, it's in the `src` folder of a 3.0 Dynamic Web Module declared with an `@WebServlet` annotation.
Alright, so I'm having a pretty odd problem for a beginner (I think). I'm clicking the run class button, but it (eclipse) just terminates the program. NetBeans just builds it but doesn't do anything else. Here's the code. import java.util.Scanner; public class StringVariable { public static void main(String[] args) { } Scanner user_input = new Scanner(System.in); String input_text; { input_text = user_input.next(); String user_name; System.out.print("What's your username dear redditor?"); user_name = user_input.next(); String guild_name; System.out.print("What is thy guild?"); guild_name = user_input.next(); String full_title; full_title = user_name + "" + guild_name; System.out.println("You are hereforth" + full_title); } } 
you wrote this: public static void main(String[] args) {} So, you have an empty main statement. 
Ahh, I completely overlooked that! I was looking all over for syntax errors, yet I missed the most obvious beginners mistake *facepalm* thanks!
Doesn't the second one loop forever? The first iteration will be i=0 and the increment will be i = 0*2, which will always return 0 and will always be &lt; n. If you change it to start at i=1, then what you have are powers of 2, effectively making it log n.
I see that but I don't get where log comes into play? When ever you double a counter is it just always log(n)?
Because the counter is increasing by powers of two, the iteration will take log2(n) steps, which can just be written O(log(n)) for time complexity analysis. For example, if n=8, the counter would be 1,2, and 4. There were 3 steps, and 3 = log2(8). In ad_tech's example, the log2(100) ~ 6.6, meaning that 7 steps will be required. (1,2,4,8,16,32,64) To answer your question, most situations where you are always dividing the remaining space by a constant will have O(log(n)) complexity.
good luck telling my prof that. EDIT: though I will forward this to my prof to see what she says.
Absolutely it is possible. Two things though. Android uses its own version of Java. Also, making an android app is 30% code, and 70% ui design. Grab a Android book (assuming you know Java well) and teach yourself any missing pieces you may need. Good luck!
Why did you delete it? :S And idk basically saying he is completely wrong. lol
I didn't say he was wrong, he just has a bug in his second example.
&gt; if you specialize into big data, data warehousing, real-time data, or something of that ilk, you can get out of the web trap. Yup, that's big for Java use these days.
Get libgdx or something similar, then you can avoid android stuff and concentrate on just the java.... for now....
You still need to write it in web.xml. I know it is a bit odd but it sometimes doesn't work. Does your tomcat works ? 
If it’s not targeted at beginners, then who is it targeted at? Because everybody who is not a beginner doesn’t even need that tutorial anymore. You should really try and make up your mind before you start wasting everybody’s time.
Apache Maven Release *Plugin* 2.5 Released
The tutorials on Android.com are pretty good. Make a new Android project in ADT and put your logic in MainActivity.java. use the gui builder to put ui elements in res/layout/mainactivity.xml . Then just manipulate the ui elements from the activity. 
I think what he meant with "own version" is that not every single library found in the JDK is implemented in the dalvik runtime.
The Android SDK was based off Harmony's implementation of the Java SDK, afaik, and the Dalvik VM is not a Java VM, but compiles Java (syntax) into it's own bytecode. This is why some JVM languages, like Scala or Groovy are not supported in Android by nature.
yes, the latest Apache Maven Release is 3.2.1 (3.0.5 was a sec fix) http://maven.apache.org/docs/3.2.1/release-notes.html and Maven 2.2 is in EOL http://maven.40175.n5.nabble.com/End-of-Life-Apache-Maven-2-x-td5785222.html 
It really depends on what type of app you built but most likely yes, you can just take your code and copy/paste it into your Android project.
https://www.wolframalpha.com/input/?i=sum+sum+sum+1%2C+k+%3D+0+to+j-1%2C+j+%3D+0+to+n%5E2-1%2C+i+%3D+0+to+n-1 Your prof isn't completely wrong, but she is wrong to be teaching you THETA when she should be teaching you BIG O. Fragment 7 is O(n^5 ) not THETA(n^5 ). If you wanna see the THETA function check the link above. For the algorithm to be both THETA and BIG O of n^5 it'd have to be this: https://www.wolframalpha.com/input/?i=sum+sum+sum+1%2C+k+%3D+0+to+n%5E2-1%2C+j+%3D+0+to+n%5E2-1%2C+i+%3D+0+to+n-1 And I deleted my comment to you last night because I did some of my math slightly wrong and was too tired to fix it so I went to bed and came back here in the morning.
i think he is using some kind of glassfish instead of tomcat. for what it is worth, i always use port 8080. what port are you on?
while the goal of some is to become a master of a single programming language, you're gonna have a bad time if you don't expand the number of programming languages you can effectively use. writing pseudocode on paper to work through a particular algorithm is okay. but, since this questions is about whether that seems archaic, my humble opinion is that it is. there is little reason to have code that won't compile. use an ide for crying out loud. a young person i worked on a project with recently refused to code in anything but vim. he had syntax errors and the formatting of the code was always abysmal. i basically had to put my foot down and force him to use an ide. anything else is either masochistic, or sadistic to inflict the mess on your team. sorry for ranting, but anyway. if you use an editor with syntax checking and the like for working though your logic, you will be fine.
i would be more intersted in determining the applicant's interest in participating in team dev. do they know about repos? if someone else wrote a class will they get pissy about debugging it? if they don't know what to use for a task will they find the solution or try to cook up something on their own? do they know any methodologies for building software? agile? scrum? these types of things are so crucial to being able to do the job. sure ask them about mvc, oo, etc but don't forget to guage whether they are a team player with a positive attitude. 
I'm trying to use the J2EE Preview server. Maybe I should give up on that.
I'm assuming you're the author, so I'll offer some constructive criticism (I don't want to make a leanpub account so I can't discuss it there). What exactly are you teaching? Programming to absolute beginners or a couple of JVM-powered languages to readers with some experience? I don't think you can do both. Programming is just too complicated to put all of this in one book. If I were a beginner, I wouldn't make it past the installation instructions. Why Java? Don't get me wrong, I love Java, and it was my first language, but I learned it in a classroom setting. I would've been much less successful on my own, and that might have discouraged me from programming. I notice that many languages with REPLs start beginners off there, learning basic expressions before writing complete programs. What makes more sense to you (imagining you know nothing about programming)? $ cat &gt; Math.java public class Math { public static void main(String[] args) { System.out.println(2 + 2); } } $ javac Math.java $ java Math 4 or $ python &gt;&gt;&gt; 2 + 2 4 And basically all my complaints stem from there. A book for beginners should strip away as much boilerplate as possible. I can remember how confusing "public static void main" was when I started, and it's important that authors targeting the uninitiated keep that in mind. Otherwise, you write very nice prose. Good luck!
Building on zeringus' comment, I would say a lot of the terminology would appear very alien to a complete beginner. We tend to associate words with meanings; for example, the words language, code and even data have different connotations to new learners. Part of the biggest challenge in learning is anything is unlearning your previous assumptions, and language is often the biggest barrier. However, I think your book could be really helpful for non-java developers learning the language because the writing is very entertaining but also concise :)
Must read
* IDE config like Google's mechanic * libraries that should/should not be used * license checking * automated deployment standards - chef * Monitoring standards
&gt; Apache Maven Release Plugin 2.5 Released Yeah, this had me confused as well 
yea with java, you can learn other languages easily.
Thanks, I'll take a look at it.
What do you guys think of Thinking in Java? I'm a total noob at Java but have experience in C/C++.
Personally, I'd recommend this video series from The New Boston (Bucky). http://thenewboston.org/list.php?cat=31 As someone who learns best by actually seeing demonstrations vs just reading, these are quick and straightforward.
Just my two cents, but I would start small and make constant incremental changes. Version control is an absolute must. As for coding standards and naming conventions, unless you are finding code absolutely incomprehensible, I would go easy on these. I work at a large company (~400 developers) and we have general guidelines on coding style but we don't autoformat (which I would personally find frustrating). Once you have version control you can implement other Continuous Integration techniques. As for PMD, run it at check in for now and start assigning out fixes. In a few months, have it fail your builds to have blocker/critical violations (my company uses Sonar for this). 
I'm sorry I'm on mobile, but thenewboston is generally frowned upon here on reddit. Something about low quality content, and lack of quality explanations.
I always wondered what Nixon was up to these days...
Perhaps I should have added that these videos are helpful if you already have experience in other languages. Personally, I can't stand reading books when it comes to programming. I need visuals and hands on experience and so these videos were great. Until a few weeks ago, I haven't written a line of Java code. I went from never coding a line of Java to creating an application to move AWS EC2 instances from one region to another. I'm not saying this is the best solution for the OP, but I recommended it since it helped me so much. Head Start Java, as usual, is the recommended book and is much more detailed. But, again, I should have added that these are very helpful especially if you already have experience in other languages.
Your biggest problems won't be with implementing the standards, it will be people thinking you're just a jackass looking for a power grab. Your list is a great start because it's 1) nothing that they shouldn't be doing already and 2) it's not going to add inordinate amounts of time to daily work. Your list only forces people to change daily routine in an effort to ease any downline work. and IMO nobody will like it. To that end, I suggest the following. First of all be absolutely sure that your boss and his boss are on board with these changes. The first thing that Old Schoolers are going to do is attempt to go over your head so that you can get hammered back into place. Spend "significant" time with your bosses telling them how it will help in the long run, and make sure that they know that YOU know they will be getting calls and emails from long lost friends in the department. Once they are on board no less than 100%, then go forward to step 2. Step 2: Documentation. There's a story about old-school NFL. Vince Lombardi (a team coach) used to start his first off season workouts in a simple way. With everyone in the room, 10 yr veterans as well as just signed rookies, he'd hold up an NFL football and say "This, is a football." In doing so he'd be absolutely certain that everyone started with the exact same base of knowledge. By writing excruciatingly detailed documentation, you leave nothing to chance. You make sure everyone has all the same basic information and you leave no holes for the codgers of the department to pick at. You've created a Guide Book which everyone is expected to follow starting Q2, and if there are any questions, well then RTFM. Third, make sure it's a living document. You're going to spend the next year tweaking/adding components to fit things that either you didn't think of or experience in the job yet. Last: Leave certain aspects to group discussion and decision to ease the transition. Ask the group the IntelliJ/Eclipse question. Indent 4 vs 2? Tabs or Spaces? vi, vim or emacs? win, mac or unix line endings? ok some of that is just joking around, but the point is that some things are better left to group. The above is what I would do. Whatever you do, if you're prepared, then it really doesn't matter what changes you propose. If you're prepared for questions (even the sarcastic "I don't get it"), and you've insulated yourself from in-house politics, any policy will go over smoothly.
Programming has never been easy. If it was, there would be no need of trained programmers.
So you know one person who couldn't write proper code without an IDE. Sounds like they just weren't a very good programmer, and you took steps to ensure they won't get any better. Plenty of excellent programmers create beautiful code with needing such crutches. Maybe you just haven't met any.
An Introduction to Java Programming: Comprehensive Edition by Daniel Liang is a good one.
Version Control is non negotiable, absolute must have, even when your team has less than 2 developers. Coding Standards and formatting, I would start with ~~Sun~~Oracle's style guide and work from there. Code Reviews are a great idea, just make sure that they focus on the code not the developer. Also don't hold them on Friday afternoon, they just don't work as well when people are thinking of their weekend. If Unit tests are not yet implemented that is something to get on, before you start fixing naming conventions etc. Reason being if you have no tests you will have no idea if your refactoring has broken anything or not.
&gt; aside: which code-formating standard would be equally usable in IntelliJ and Eclipse? IntelliJ has a plugin to use Eclipse formatter, so you can create formatting rules in Eclipse and have them work identically in IntelliJ. Otherwise, it is close to impossible to create fully identical formatting rules (i.e. rules that would allow reformatting whole files without messing diffs) in two different IDE's.
Then why does Brian Goetz says they don't become inner classes, but compile to recipes that the JVM converts at runtime via dynamic invoke?
But did Scala had everything else right too?
Yeah, I know it's a bit older and a bit of a crappy read because of the machine translation, but it's from the soon to be CDI 2.0 spec lead and quite an interesting read.
Probably Spring DAO module is the most usage component if you used Spring as a dependency injection container in your application. The common pattern of setting up datasource in Spring Java based project is loading the database settings from property file, then loading these values to datasource bean instance. However, we do not want to hardcore property filename and keep this file in application classpath, this blog post demonstrates what we did to load dynamic property file to construct Spring datasource bean
The top answer mentioned something about ambiguity with the parser, but Scala managed to pull it off. Is it really not that viable?
The ambiguity is not to find the right applicable method in a SAM (by default, the SAM itself should be the only applicable method), but the fact that local variables and method names are in a different lexical namespace in Java. This is explained here: http://mail.openjdk.java.net/pipermail/lambda-dev/2012-February/004519.html I still think that Java 8 (or 9) could support such a syntax, but I guess this was - as always - a compromise to reduce project risks...
Yeah sorry for the auto translation. I didn't have courage to rewrite it in english. In the same horrible language but quite interesting regarding Spring and CDI history you can read this : http://www.next-presso.com/2010/03/springs-missed-rendez-vous/ Quite old but most of it is still relevant...
Just a few ideas: Crucible is a nice code review tool. I would recommend Git or Mercurial. Have everyone read Josh Bloch.
Item two is a killer at my current gig, we have five different serialization libraries, really. And that's not unusual, we also have six different versions of Apache Commons Lang. If there's a humor algorithm in Tomcat's class loader it likely falls to the floor when it loads our wars. 
Compromises hardly ever reduce technical risk.
you cant go wrong with http://www.coderanch.com/forums
OK, I phrased it badly. 1. It's not a compromise. There are just features that can be implemented later. 2. The main risk here is the project timeline. Adding features that you can do without and that don't add substantial value might delay the whole project. A project which is already notoriously delayed.
You should also look at LinkedIn.com under the [Java Developers Network](https://www.linkedin.com/groups?gid=118012) group. They even have a place to post job openings.
Thanks for the feedback. I did point out the groovyConsole at the end of section 2.2, but perhaps I should make it more central. That's a good idea.
I hope not. The method to call (i.e. its name and signature, not just its implementation) would have to be chosen as the single abstract method of the type, and that depends on the static type of the variable, and not the dynamic type of the object. It's rather counter-intuitive. We already have something similar with overloading, but this is a hairy part of the language, and it's best not to add to it graciously.
The most important method of an iterator is the "next" method, which advances the iterator and returns the next item. So, if you wanted to use your iterator to get the third item out of a list, you'd do something like this: Iterator it = availableBoats.iterator(); it.next(); it.next(); SmallBoat boat = (SmallBoat)it.next(); You might also want to use the "hasNext" method, if you don't know exactly how long your list is. Otherwise you will get an error if you advance your iterator too far.
Oh!! Thank you, this is what I'm looking for!!
If you have an Iterable (instead of an iterator) you can use an extended for-loop - this will instantiate and use the iterator behind the scenes: Iterable&lt;Upboat&gt; iterableOfUpboats = ...; for (UpBoat upboat : iterableOfUpboats) { ... }
&gt; and that depends on the static type of the variable, and not the dynamic type of the object But the compiler could infer that type and "expand" the symbols, right? I mean, method references work just that way. You can pass `System.out::println` to `Collection.forEach()`. The compiler will infer that the SAM can only be [`Consumer.accept()`](http://download.java.net/jdk8/docs/api/java/util/function/Consumer.html#accept-T-)
I don't know in which context you want to use this. But the first thing that comes to mind is String.substring(start, end); http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#substring(int,int)
Is the class your method is in annotated with @controller? Second, your method can take a parameter httpsession, so you dont have to get it in the method body. You might look into spring boot to do this work, as they have config already sorted for security and that sort of thing. 
Maybe, thank you! ;)
Yes, it could, and it does that already in 7 for overload resolution. But you get strange behavior like this: public interface Base { void call(int i); } public interface Extend extends Base { void apply(int i); default void call(int i) { apply(i); } } static void example(Extend e, int i) { e(i); // Calls apply(int) Base b = e; b(i); // Calls call(int) } 
Well, to be fair, I'm not communicative via LinkedIn if I already have a job and I'm not looking. Or I get offered a job by someone who obviously hasn't read my CV- junior positions with 3x less salary than I'm getting now, or .NET job while I clearly state I'm a Java guy. Believe me, when I go looking for next job, my LinkedIn will be very up to date and I'll be very responsive. And I'll set that I'm open to job suggestions in my privacy options as well. BTW, is that a new team you're trying to assemble? Do you have a team lead? In my opinion, good team leads are worth their weight in gold, so make sure you get a good one, especially if the team is new and if you cannot afford the best developers out there.
Yes, you're telling the truth. It's completely normal behavior on LinkedIn. Yes we have team lead and also we have 2 members of the new team. But I think it's pretty good opportunity, I'd even say one of the best in Czech Republic right now. That's reason I'm trying to reach even to the not very communicative developers. Most of them would take it, but they don't give me a chance to them the qualities. This is why I'm looking for another way to communicate with them. 
I head any dummy can learn it in 21 days...
I agree, this would risk leading to "unexpected" results...
Pardon me, but could you explain this behavior, I'm having a hard time wrapping my head around this. As far as I remember all methods in Java are virtual, so shouldn't Base.call implementation end up being that of the default implementation on the Extend interface? Default implementations in interfaces are such a terrible design anyway, it's like they tried to take Scala's traits and fuck them up.
I would drop mandatory code formatting and naming conventions, as some different styles are equally good. At least make sure that your mandatory rules are minimal and well thought-out. See http://google-styleguide.googlecode.com/svn/trunk/javaguide.html I'd start with source control (w backup!) and unit testing first, and then everything else. Bitbucket is reasonably priced for private repos and has built-in wiki, issue tracker and code reviews. Ensure you have the following environments setup too: - dev environments similar to production with own database servers - CI environment for building and integration testing - slaves for functional, security, performance, and bdd testing (test from) - staging servers for functional, security, performance, and bdd testing (test against) - production servers Try to use environment variables on your environments instead of different property files, so that you can have one build that behaves differently on different environments (see 12-factor apps)
There is no need to write code to do this. You can configure the whole thing in xml. 
If that is the case, it really isn't an interface.
Look into LMAX' disruptor (just Google for both terms) for a high a performance low-latency inter-thread communication option. They have complex but workable examples, too.
You can further optimize your solution by moving the check into the first loop. This way you don't have to iterate over the entire collection twice. Like so: public void printAllPairsEqualTo(int[] nFooBarArray, int nSum) { HashMap&lt;Integer, Integer&gt; nFooBarHashMap = new HashMap&lt;Integer, Integer&gt;( nFooBarArray.length); for (int i = nFooBarArray.length-1; i &gt;= 0; --i) { if (nFooBarHashMap.containsKey(nSum - nFooBarArray[i])) { System.out.println("Pair Found: " + nFooBarArray[i] + " , " + (nSum - nFooBarArray[i])); } nFooBarHashMap.put(nFooBarArray[i], i); } } edit - moved the check before putting the value in the hash map. Otherwise a value of nSum / 2 would cause a false positive.
What do you mean with "everything else right too"? Yes, Scala has tons of language design bugs less than Java, but I'm not sure there is even a debate here. Regarding Java 8 lambdas ... they made them fit right into Java-the-language by making a few wrong and stupid decisions to make them not too useful after all. It's kind of mind-boggling that they had years to learn from other languages and then came up with ... this.
I already am learning java from an online course through videos. Any book recommendations though?
Is it a book?
Have an image, cover it with a mouse action listener and have the button switch through it's animation frames when pressed before doing whatever it's supposed to do.
Iterate through each member if the array. Then do a guided search to see if you can find y where x+y=sum since you have x and Sum
&gt; Head First Java, good choice, they explain with good examples!! 
I'm not entirely sure how big of an issue this would be, a "functional interface" can only have one method after all (no overloads are allowed either as a result). Since there's no overload resolution involved and the signature must be the same, wouldn't the standard method dispatch work in the OP's proposal?
I think you can do even better than linear space overhead and linear runtime complexity.
The article says that is the worst way. But I'm still a relatively new Java programmer so most of his solution went over my head, but I'm going to look at it more when I get home. 
This sounds like the first solution, which is O(n^2 ) since you would have to check every array element for a potential "y".
not sure what a "guided search" means..
I came up with a slightly different n*log(n) solution... After sorting the 50 (for example) items in ascending order, you sum item #1 and #50. If it's less than your target, you try #2 and #50 -- if it's bigger, you sum #1 and #49. Proceed this way until find a matching pair, or end up comparing #23 to #24, at which point you're finished public class PairFinder { public static void main(String[] args) { int target = 101; int[] array = { 86, 25, 10, 25, 52, 2, 59, 43, 14, 97, 10, 31, 23, 68, 84, 10, 81, 10, 26, 85, 58, 51, 78, 80, 59, 57, 75, 84, 28, 99 }; Arrays.sort(array); int min = 0; int max = array.length - 1; while (min &lt; max) { if (array[min] + array[max] == target) { System.out.println(array[min] + " + " + array[max] + " = " + target); if (array[min] == array[min + 1]) { min++; } else { max--; } } else if (array[min] + array[max] &lt; target) { min++; } else { max--; } } } } ------------------------- 2 + 99 = 101 23 + 78 = 101 26 + 75 = 101 43 + 58 = 101
Since you don't care about the value of the map, you could just use HashSet&lt;Integer&gt;
I just mean that you know the value of the element you are looking for
I think you typed the wrong domain name, (.com gives me some email service) I think you meant http://blog.martinelli.ch/2014/03/use-jndi-to-configure-your-java-ee-app.html but there is a better tutorial on this topic at [Oracle's website - Using Java EE Environmental Variables](http://apex.oracle.com/pls/apex/f?p=44785:24:0::NO:24:P24_CONTENT_ID,P24_PREV_PAGE:6317,29)
Yes it is a book.
judge much? i don't judge the quality of a developer on how well they know syntax, quite frankly. sparing someone hours stuck looking at code in vim for a missing semicolon is a kindness. and i actually disagree about "beautiful code". unless you are working completely alone there are other considerations. 
Yep this is a lot better. I mentioned this on my very first comment I think. That would bring that part down to O(n), but the Sort() part would still bottleneck at O(n*log(n)) nice piece of code between ;D
As /u/JustinKSU points out, use a HashSet. Also, why are you doing the weird backwards indexing through the array? I think this is a lot simpler: HashSet h = new HashSet&lt;Integer&gt;(); for(int i : integers) { if (h.contains(sum-i)) System.out.println(String.format("Found %d : %d", i, sum-i)); else h.add(i); } You should also consider what happens if the array contains duplicates, e.g., if you're looking for the sum 7 and your array contains 3, 4, 4 - should you print out two pairs or just one? 
HashSet will prevent duplicate values, hence duplicate pairs from showing up. Since I didn't want to exclude the possibility of our problem having duplicates I just left that piece aside and used a HashMap. I am used to loop through backwards compared to forward, since it provides a tiny performance gain (since you're not checking the array .length every time and you don't need an extra variable. (although there's a readability disadvantage to that). I have a preference of not using for (int i : x) in java. Seems like python to me :P.
Yes the output is the same, but Im telling you the reasoning behind my choice, which was - if we have a HashMap we can handle duplicates. If we want to output duplicates we just need to add a counter to the number of times it a specific number appears. The for each comment, is just a personal preference, nothing to do with what should or should not be done.
&gt; I think you typed the wrong domain name, (.com gives me some email service) I think you meant http://blog.martinelli.ch/2014/03/use-jndi-to-configure-your-java-ee-app.html but there is a better tutorial on this topic at Oracle's website - Using Java EE Environmental Variables You're right, thanks! I'll delete this one and post again. Silly me! 
JavaTrainer previously replied: &gt;[...] there is a better tutorial on this topic at Oracle's website - [Using Java EE Environmental Variables](http://apex.oracle.com/pls/apex/f?p=44785:24:0::NO:24:P24_CONTENT_ID,P24_PREV_PAGE:6317,29)
I'm fairly sure that Openshift is one of the ones puts applications into hibernation when they aren't being used. It's good for some types of testing, but if you have actual customer using it you'd need to go past the free level if you don't want them to wait ~15 seconds for an initial response. 
"features that can be implemented later" is Java-speak for "it will never happen". I'd prefer them doing one thing properly instead of shipping something half-assed, multiplying the accidental complexity users have to deal with.
Two errors: 1. Sorting an array requires o(n) space since you need to store the array, not O(1) - so the hash table solution doesn't actually make the time/space tradeoff. 2. The hash solution only works if your insertions and lookups happen in O(1) time, which isn't always possible - read the section on hashing in CLRS for more details on this (this is one that I see interview candidates get wrong *all the time.* It's important to know the limitations of hash based data structures, they're not just an O(1) solution to everything.)
Great pointers! Shouldn't HeapSort have worst case time complexity O(nlog(n)) and worst case space complexity O(1)? As for the hash solution a friend of mine pointed it out too. I will open CLRS as soon as I go home, but what I expect to find is - we need to find a good hash function, to minimize the number of items per bucket, etc. But on the other hand if we can't make assumptions on O(1) for HashTables.... then why use them at all? Or should we rather use them but make a vocal case about their possible worst case performance if there are tons of collisions?
No matter what, storing n items will require o(n) space, there's no beating that. Your input and output are of size n and you're not in a streaming context, so you can't beat it. And yup, it's fine to use hash maps but as you say, important to note the worst case performance. They usually perform very well, but when you are doing complexity analysis, you are typically considering worst case performance (this is what big-O means.) Remember that you'll need to split buckets too which takes time - unless you know something about the distribution of values ahead of time. Sometimes if you have that knowledge about the distribution or range of values a priori, you can get better performance by using a different method, like maybe counting sort for a narrow range of values.
I think your code handles that case very elegantly.
Yeah I take that back. O(n) space with O(n) runtime versus O(1) space with O(nlogn) runtime seem to be the best.
This was just quoted from /u/Poobslag's post. I don't know if you can quote code like other text on reddit.
if you're worried about performance of checking the length. In this situation, why not just set some variable int length = array.length;?
Your solution does 2 nested loops meaning it's gonna be O(N^2) time :S. 
Your pointers have been very spot on. Very true that all of our input is in memory, so O(N) is the space complexity as soon as we start the problem.
I'm not sure what you're asking can you be more specific or perhaps post a picture?
Consider an array of 1 million integers. An O( n^2 ) solution takes 1,000,000,000,000 (trillion) time. An O(nlogn) solution takes only 6,000,000 units of time. 
Okay, so, I'm thinking there's something you could do based on that method that supposedly Gauss used for computing the sum of integers from 1 and N. He observed that the integers from 1 to N can be formed into N/2 pairs in such a way that the sum of each pair equals (N + 1). The total sum is thus N/2 * (N + 1). First, sort the array. (N*log(n) if you're using a sort that isn't brain-dead.) Then eliminate dupes from the array (order N; just walk the array once and compare each item to the next, if they're the same, delete one of them.) Now compute maxViable = (specificSum - array[0]). Binary-search the array for maxViable (binary search is N*log(N)). The part of the array that contains numbers larger than maxViable should be thrown away. Those numbers can't possibly be the answer because even when added to the smallest number in the array (= array[0]), they are too large. If maxViable is in the array, hey cool! array[0] and maxViable is one of the pairs that sum to specificSum. Note that fact. At this point you've checked array[0] against all possible candidates that could possibly work. So you're done with it, throw it away. Now you have two choices... you can start again with the new array[0] (which used to be array[1], before you threw away the old array[0]) and do the whole thing again. OR you can start with the last number in the array, compute minimumViable = (specificSum - array[lastItem]), and throw out all numbers at the bottom of the array which are less than minimumViable. You could also try some intelligence here, and compute both maximumViable and minimumViable at each step, and choose the one that throws away more array items. ... I'm trying to think of a worst-case input array for this algorithm. It's hard to imagine one. Between sorting, removing dups, and the rapid pruning of the array, I can't imagine a data set that could trip this up. The hardest part of the pruning is finding the slot that's less/more than maxViable/minViable. I accidentally saw a comment about using a hash table for something, but I don't think that would help here. It would tell us if minViable/maxViable were in the array, but it wouldn't help us find the next entry greater/less than it. If space was no issue, we could construct a... I'm not sure what it would be called... a population array? An array the same length as the maximum element in the input array. Each slot in this new array would be an object composed of three fields: - A "present" flag, which is TRUE when the number that corresponds to this array index is present in the input array. So population[17].present = TRUE would mean that the value 17 is in the input array. - A "next" and "previous" integer, which give the index of the next and previous entries in the input array. Suppose the input array was: ( ... , 12, 17, 21, ...). That would mean population[17].previous = 12 and population[17].next = 21. The idea here is that when you compute maxViable, then you can go straight to population[maxViable] (constant time!), and see if A) maxViable is in the input array and B) if not then you have a (constant time!) way to find the next lowest/highest number in the array. Unfortunately, building the population array takes O(k*max(inputArray)). Technically that number is a known constant, even in the worst case. Equal to java.lang.Integer. MAX_VALUE, which should be 2^31 - 1 (just over 2 billion) unless you're on a very weird JDK. But in practice that's one hell of a large constant factor! You could be looking at population[] taking 2 gigs of memory! I think eventually you end up looking at something like a B-tree to efficiently represent population[]. The good news is that all the common operations on a B-tree are O(log(N)). Though it does make me wonder, why not just put the input array into a Fibonacci heap and get constant amortized time for almost all the operations? That's where I'm going to leave this: Use a Fibonacci heap and the min/maxViable approach (and don't delete, instead change the value of discarded slots to +inf/-inf) and you should be able to do this in provable O(N) time.
I like a lot hearing thoughts out! My personal advice keep writing your thoughts out, right or wrong, you will learn your strengths and weaknesses better! You have most part of it right. Some parts i noticed: - Binary search in a sorted array = O(log(n)) not O(n*log(n)). - Your "Population array" is called a doubly-linked List in modern programming language and is a List, which means a dynamic array, which means an array :) at the end of the day, so you're just making an array to a cooler array. - I think that overally you have some things confused. You seem to have the right ideas about a few things but all mashed up, but tend to get tangled up and de-railed. Good luck and keep working on your knowledge and skills ;D.
Also now that I think of it, if I can't kick-start my own project what JEE based projects are out there on Github that I can perhaps contribute to? Difficulty ranging from junior to mid level developers...
&gt; "features that can be implemented later" is Java-speak for "it will never happen". It might happen. Just not in this major release. Or in the next one. Java 13, maybe? &gt; I'd prefer them doing one thing properly instead of shipping something half-assed, multiplying the accidental complexity users have to deal with. I agree. I suspect that the impact lambda expressions and [generalised target-type inference](http://openjdk.java.net/jeps/101) have on the JLS are significant. I'm constantly impressed how little the generics EG got wrong in Java 5 and I'm confident that lambdas are pretty well-done in Java 8
Now that method is also added. I'm going to have different topic about String and their useful methods. Don't know when I would publish it.
Great! Once you publish it, I'll add it to the wiki (or you can add it yourself - I'll prepare everything)
This is because the "Model View Controller" (MVC) paradigm came into being. MVC is a strict separation of + data (the model) + presentation (the view) + "business logic" (the controller) (what used to be the program logic) Generally, the controller handles all the logical operations and connects the model with the view. The view and the model don't communicate directly as the controller interacts with both. Following this paradigm helps changing and maintaining the codebase because a change to any of the underlying parts will (should) not affect the other parts. (e.g. changing the underlying database model will require no changes to the other parts, or changing the presentation - maybe from SWING to JavaFX will not affect the model or controller) More on MVC can be found on Wikipedia: http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller There have been whole books written on this subject. Another resource I can recommend is the free course [Java Design Patterns and Architecture](https://www.udemy.com/java-design-patterns-tutorial) 
Great! Would you possibly care to do some barebones tutorials on Objects, Classes, Interfaces, Polymorphism, Inheritance as well?
They are all going to be covered plus much more. There's going to be at least 40 different tutorials of next level Java tutorials, they will include OOP, Graphical Design, Databases, and lots more. Each of those topics is going to be divided into own chapter.
Superb! Keep up the good work!
Thank you Ajk ;) The only problem about LinkedIn is, that developers aren't the active part of LinkedIn users. I spent most of my time on LinkedIn, trying to reach them. I've sent over 600 invitation v edited text in it and I got only 48 acceptation. From these 48 people only 3 have been interested about hearing the job description and only 1 had actually arrived on interview. So i don't find this a effective approach :/ Do you have any other suggestions please?
I haven't used XML with Hibernate in years now, you can do it all via annotations. I also have worked many places that used Hibernate, and zero places which used ObjectDB. 
Thank you!!
Reified generics, waiting for that fix. And lambdas in Java 8 are barely adequate, little more than syntacic sugar hiding SAMs, functions are not first class objects in Java 8. Scala, even with its unwieldy type system is a joy to use when doing functional programming; it's not Haskell, but what is.
Use erlang, or scala, for parallelizing the operation easily. Other than that, write a bunch of threading code in straight Java to produce a result efficiently, which the given answer does not do since it is single threaded. Bonus points for using SIMD or the GPU.
&gt; I also have worked many places that used Hibernate, and zero places which used ObjectDB. It used to be that one could say similar about roll your own DAOs vs Hibernate.
This is not a common interview question where I come from. But an interesting CS question? yes.
Roll your own vs something that makes life simpler is different then two libraries that both provide a JPA implementation. It wasn't a critique of ObjectDB's library, just a personal anecdote about which may be more recognized on a resume when it is searched for buzz words.
&gt;AutoValue seems interesting, but a maven plugin? :x I'm extremely glad there is a maven plugin. I'm glad Google is adopting Maven from Ant. &gt; I think I'll stick with actual (as in non-magical) code-generation instead. Besides, I like having chained MyClass.create().withX(1).withY(2).etc() stuff rather than having to decide on the constructor order up-front and having obj.copyWithX(3) later on. This puts you at risk for incomplete objects if they're required parameters. 
developing java outside of a fully fledge IDE like eclipse/Netbeans/... is suicidal and a killer on productivity. Unless you work on stuff with a maximum of 5 files which don't have more than 4 methods each... then maybe its manageable. But other than that, an IDE is mandatory.
yes, that was my first approach but in a code review they marked an issue on that. I want words to explain why this is better and this convention to have the private fields doesn't apply.
Why stop at those? There are other solutions (e.g. Spring Data) you can evaluate too.
&gt; impressed how little the generics EG got wrong in Java 5 I wouldn't call erasure and wildcards "little". There is a reason why the Generics FAQ has 300 pages. &gt; confident that lambdas are pretty well-done in Java 8 Having looked at the things they are actually planning to ship, I'm certainly not.
Wanted to post this last night, but Reddit went down just before I clicked "save"... &gt; Binary search in a sorted array = O(log(n)) not O(n*log(n)). Yeah, but in the worst case you might have to do one search for every item in the array. Hence an entire N*log(N) overall. &gt; Your "Population array" is called a doubly-linked List in modern programming language and is a List, which means a dynamic array, which means an array :) at the end of the day, so you're just making an array to a cooler array. Except that searches in a DLL aren't always O(1). You can't just assume a DLL will be implemented underneath with an array. If your implementation guarantees it, great. But it's a mistake to assume so. Take java.util.LinkedList for example: &gt; Operations that index into the list will traverse the list from the beginning or the end, whichever is closer to the specified index. - http://docs.oracle.com/javase/7/docs/api/java/util/LinkedList.html
While both Hibernate and ObjectDB both can be used via JPA, there is a huge essential difference between them: ObjectDB is a *database* and is thus more on-par with Oracle, MySQL, or PostgreSQL; Hibernate is an [ORM](http://en.wikipedia.org/wiki/Object-relational_mapping) tool - it's a big complicated adapter that allows a *relational database* to be used as if it were an *object database*. The JPA spec is largely focused on the concept of an *object database*. ObjectDB doesn't need an ORM to act as an adapter, because the database itself is designed from the ground up to deal directly with objects. But, if you have Oracle, MySQL, PostgreSQL, SQL Server, etc --- these are all *relational databases*, which differ greatly from object stores. The ability to force a relational database to act like an object database is fraught with complexity and compromise; in fact their fundamental differences are quite famously well known in software engineering as the [object relational impedance mismatch](http://en.wikipedia.org/wiki/Object-relational_impedance_mismatch). So, if you can deal directly with an object db, why even bother with relational databases? The tautalogical answer is: because lots of people need to deal with their data in a relational mannar. Also, the industry is filled with DBA's who are experts in relational DBs. And there are lots and lots of other tools (data mining, report creating/running, administrative, etc) *in addition to* your Java application which can point to a relational database and do lots of useful things. Ultimately it depends on the needs of your application and/or your business. If all you need is black-box persistent storage of Java objects to drive your application, an object db might be ideal. But if you need to get at your data with other tools, and you want to take advantage of a relational data schema, then ORM + relational database might be a better choice. **Edit:** Alternatives to JPA for accessing relational databases w/o having to pretend they're not relational databases: [mybatis](http://code.google.com/p/mybatis) and [JOOQ](http://www.jooq.org)
The rise of MVC has nothing to do with package structure, and in fact, many consider having your code split into something like com.foo.model, com.foo.service, etc is a bad way to split code. Consider you have two functional things - a "foo" and a "boo" - many package their source like this: com.foo.service.BlargService com.foo.service.BooService com.foo.model.Blarg com.foo.model.Foo But instead packaging like: com.foo.blarg.BlargService com.foo.blarg.BlargModel com.foo.boo.BooService com.foo.boo.BooModel Will lead to a far less tangled package structure. There are a number of benefits that can be achieved by packaging by feature instead of by layer. If you search for "package by feature vs package by layer" you'll find a wealth of links about this... such as: http://www.javacodegeeks.com/2013/04/package-your-classes-by-feature-and-not-by-layers.html http://www.javapractices.com/topic/TopicAction.do?Id=205 http://www.javagyan.com/useful-tips/packagebyfeaturenotlayer There are very few good arguments for "package by layer", but many arguments for "package by feature"
This. I highly recommend the Head First books.
The style of packages you are talking about are "package by layer". The other view of packaging is "package by layer" You can search for "package by feature vs package by layer" and learn the reasons people give for each approach.
http://docs.oracle.com/javase/tutorial/uiswing/layout/using.html
In my own experience, I have found that the use of this packaging style in Java is associated with single-application frameworks like MVC, where inversion of control is strongly encouraged or enforced, but unrestricted visibility and tight coupling are less of a concern, because the application code is not reused outside of the application. This is a naive use of packages that treats them merely as folders for organization of source code rather than as a means to modularize reusable features. My hunch is that this style is not native to Java, but was sort of adopted by Spring and Grails along with the other conventions used by popular MVC scripting frameworks like Ruby on Rails and CakePHP, in order to make the JVM-based frameworks more accessible to less experienced developers to whom an "architectural pattern" is a completely foreign concept.
&gt; There are a number of benefits that can be achieved by packaging by feature instead of by layer. This is the way to go! Pay attention to this person!
Yep, that's true. I left it as is because it allows you to track the original index of the element, but if all you care about is the value then a HashSet will give you some space savings.
&gt; shouldn't you still create and edit the hibernate.cfg.xml and [EntityClassName].hbm.xml files You can, but there's no need to. Hibernate implements the JPA API, which uses Annotations to mark up entity objects instead of requiring XML configuration everywhere. If you read up on Hibernate specifically, their docs will get into the XML configuration, and all sorts of Hibernate-specific stuff but if you read up on JPA (or [JPA with Hibernate](http://docs.jboss.org/hibernate/orm/4.2/quickstart/en-US/html/ch04.html) )and use it instead, you don't have to worry about most of the Hibernate-specific or XML configuration.
Looks like you might be able to host your maven repos on [GitHub](http://cemerick.com/2010/08/24/hosting-maven-repos-on-github/) Or the cloud version of [Artifactory](http://www.jfrog.com/home/v_artifactorycloud_overview) might work for you!
The same way as 10 is bigger than 9.
That isn't 10. That is 1.1
The example in the article is `1.9.0 -&gt; 1.10.0 -&gt; 1.11.0`, you've even quoted that yourself. 
I don't get your point... It's not decimal fractions, if you interpret them as such? There's three parts to the version numbers shown in the article, let's call them "major", "minor" an "micro". Each part represents an increasing integer sequence. In the example `1.9.0 -&gt; 1.10.0 -&gt; 1.11.0` * Major: always stays at "1" * Minor increases from 9 to 10 to 11 * Micro stays at "0" In this case `1.9.0` would be the "smallest" version (and also be the first of the three to be released), the next `1.10.0` and finally `1.11.0`.
It is inconsistent with how numbers work for everything else - except dates if you don't use the iso standard. As such, it shouldn't be used.
I meant that Scala has made plenty of mistakes as well. They deprecate an awful lot of stuff every time. Why deprecate things when everything was perfect the first time? The answer is that it wasn't! At least Java got the binary format right the first time. We're 10 years in, and Scala keeps changing it. So yes, Java 1.0 wasn't perfect, but neither was Scala 1.0. They both made mistakes and unfortunate choices. Different ones maybe, but mistakes nevertheless.
Not necessarily sonatype, but https://bintray.com/ seems to provide hosted maven repos.
&gt; I just ctrl-shift-t the classname anyway. Who cares what the package structure is? This is why
They are pretty impressive! For a very low traffic site it's true that your instance will be Hibernated. The first request after that will unfreeze it which will take some time indeed, but if your site is really that low traffic that it will frequently Hibernate the question is whether this really matters or not. For a normal low to even the lower end of a medium traffic the specs are quite impressive and the performance is pretty good. You can deploy a normal EAR to either a JBoss AS 7 instance (crappy) or JBoss EAP 6.2 one (pretty darn good). There's also WildFly 8 which at the moment is a bit in between; it's really new and still in an early state. A somewhat famous site that runs on OpenShift is the OmniFaces showcase at http://showcase.omnifaces.org
As said above, it's not a decimal number, which is apparent from the format *n.n.n* (instead of *n.n* for decimal number). You shouldn't expect it to behave as decimal number.
It's a number. It should act like a number.
You said "package by layer" twice.
Bintray is more for hosting released binary artifacts, much like Maven Central repository. It's not that suitable for development needs, where you want to store your private snapshot artifacts. However, like InfoSec812 recommends in another comment, [Artifactory](http://www.jfrog.com/home/v_artifactory_opensource_overview) is an open source binary artifact repository manager, like Nexus, and it has a [hosted version](http://www.jfrog.com/home/v_artifactorycloud_overview). Also, alledgedly, Artifactory is more flexible, easier to integrate with and comes with a better support. It would be my first choice if I didn't want to roll out and host my own repository manager. 
IBM's JDK 8 supports this as well http://www.ibm.com/developerworks/java/library/j-multitenant-java/index.html?ca=drs
First i would find a way to read input from keyboard in a bucle and split it by words. When designing rooms, i would include in everyone 4 rooms for every cardinal point, and in case the first word read by the input was equals to "go", start reading input from the room selected. Also i would include some sort of list with strings representing the items in that room, and display them whenever you enter a room. 
You're posting your own blog articles here? Sheesh.
If the items have weight - create a class "Item" with all the properties needed. Guess the same will apply for the "Room" &amp; the "Player" (classes for each)
I'm paying for a VPS right now and it's around $50+ month. 
Consider this: - Hibernate Tools to generate your POJOs from your database (uses @nnotations). - Spring Data JPA to write your DAOs for you. - Spring Data REST to write your RESTful servlet for you. You can publish your database as a REST api in a few minutes. 
within the item class, would it be a good idea to have many items such as sword, belt lamp ect.. or a seperate class for each item?
I agree- that makes the most sense to me, and follows with what Mumbleton suggested. Create an object model first- then you can use that to guide your coding. Granted, I'm a new coder, myself- so my input shouldn't be weighted heavily. Create a class, assign variables to it that deal with the properties of that object. A character will have traits that you need to track- such as weight allowance and weight usage. A room will have traits as well, such as a description, which directions are acceptable exits, items provided in the room, etc. And item needs to be tracked as well, right? It's location is important: is it in the character's inventory, or is it in the room in which it originates? Or could the character have left it in another room? I don't know how detailed your game gets with that sort of stuff, but it sounds like that is all stuff you need to try to plan out ahead of time to some degree.
You are either overpaying or have way more resources than you need. If it really is just a couple of JSPs you should be able to use OpenShift's free tier but if you don't fit in the free tier and you can manage your own server then I'd suggest just switching VPS providers.
@kineo creating an object model has certainly guided me in my coding
i have used a private HashMap&lt;String, Room&gt; exits; to create my rooms with the exits and i have created my player character and a few zombies. how would i put the zombies into the rooms i desire?
&gt; i have used a private HashMap&lt;String, Room&gt; exits; to create my rooms with the exits and i have created my player character and a few zombies. &gt; how would i put the zombies into the rooms i desire? 
Its 3 numbers separated by dots.
Yeah I think I am. Just had enough trouble setting up the VPS that I'm not too eager to switch. 
Pretty much every CPU is multicore.
It is decent. It will give you the basics that still work in Java 8. The only syntax that changes is the List construction. Both ways work, java 7 just makes it less annoying to type the same thing twice. 
What problem does this solves exactly?
hackathons are a great way to get things on your github. also apply to places that do coding challenges.
Because version strings aren't floating point numbers, and I'm not sure why you think they should be. For starters, it would horribly impractical; you'd have to guess in advance what magnitude of revisions each part of the string might have!
Could you put an ArrayList or HashSet inside of the Room to store Zombies?
 HashMap &lt;String, Room&gt; exits; Doesn't create rooms with exits. It creates a data structure, HashMap, named "exits" that can hold a value/key pair of Strings and Rooms. Along with this, that HashMap hasn't been instantiated yet. exits = new HashMap&lt;String, Room&gt;(); and therefore can not be used yet. If you want your Room objects to hold another object (Zombies) then they need to either hold a Data Structure that can store/access Zombies or some how be related to different rooms. This could mean Zombies holding somer variable that identifies what room they are in, or being in some data structure that is related to some room, etc..
ok i see. So basically i would need to create another HashMap inside the class Room? or would i have to create a hashmap within the zombie class
Ok so you have a Room Class/Object This Object can be stored in your exits HashMap. To store Zombies in your Room Class/Object, then your Rooms class must contain a Data Structure that can hold Zombies. Example public class Room { ArrayList&lt;Zombie&gt; zombies; public Room(){ zombies = new ArrayList&lt;Zombie&gt;(); } void putZombieInRoom(Zombie z){ zombies.add(z); } } 
Ok thats all I wanted to know
but i have a separate class for Zombies. How can i set the putZombieInRoom method to add objects of the Zombie class?
Classes can talk between each other. You see how it says **PUBLIC class room** at the top of my example. This means you can make instances of the Zombie class, in other classes. For example you can have. public class Room { ... //Earlier code form previous example here. void addNewZombieToRoom(){ //Notice how the function doesn't need any Zombie z = new Zombie(Parameters here); //Parameters, we make a completely new Zombie. zombies.add(z); } } This method will create a new Zombie using the default constructor and then place the Zombie in the ArrayList called Zombies. This one of the fundamental parts of Object Oriented Programming. It allows you to have different Objects/Classes interact with each other. You can have a Room Object that Holds Zombies, Cars, Planes, Trash, Money, and even other Rooms. W/e you want it to hold. 
ahhhh. fantastic. many thanks !!!!!!!!!!!!!!!!!!!!!!!!!!
the best part is public final String NULL = "Pretend I'm NULL";
Another cool thing is, say you have more monsters than Zombies. Say you have Bats and you have Ghouls and you have Knights. You can put all of these different monsters in the same ArrayList using interfaces. Example public interface Monster { ...//Here you can have variables that every ...//Class that implements Monster **MUST** have. ...//You can also have function outlines. ...//This means you can have a function that every ...//Class that implements Monster must @Override. public void update(); //This is a function outline, so Zombie and Ghoul //must overide this method. //Notice how you don't have to write any code for it yet. Zombie public class Zombie implements Monster { ... //Zombie code here @Override public void update(){ ... } //Code here. } Ghoul class public class Ghoul implements Monster { ... //Ghoul code here @Override public void update(){ ... } //Code here. } Rooms update example. public class Room { ArrayList&lt;Monster&gt; monsters; //Instead of having an ArrayList that only holds zombies, //Now you have an arraylist that can hold any class that //That implements the Monster interface. //The Code above shows how Zombies and Ghouls both //Implement the Monster interface. }
Nice. Excited to see Java 8. Java 7 was like ... windows vista. 
Don't you mean "Senior High Wizard" or "Senior Archmage". Sometimes it's better to leave out the "i" in "senior".
&gt; we can add an Order **nad** Priority properties to our annotation: *and
Isn't the issue b/c they are attempting to use C#/.NET multiple annotations with Java? PlaceOfDeath (ie Hospital, Nursery) can have those properties (ie order, priority, tablename, etc) defined within each class. And using "default null" like that in a data schema is asking for trouble, which was found; what is "null" for data? It represents "missing" data which is a real problem for statistical analysis. A sensible default should be used. edit: I mainly use java, but I do think C# has some really nice features. Java 8 seems to close some of the gaps.
In short? Nope.
It is quite a bit more than a number as it conveys contextual information about the software and how updates may impact your use of it. Take a look at the rules for [Semantic Versioning](http://semver.org/)
It's not. However, you will likely see another framework used as a facade over servlets (spring MVC, struts, jsf, etc...), along with another view technology in place of JSP; however they aren't dead.
I've been seeing less and less JSP over the past 5-6 years. A *lot* of companies have been switching over and using JS frameworks for web UIs. That said, there are still good uses for JSP and many companies out there still use them. It's just that, for traditional web applications today, most folks see more upsides to using JS frameworks over JSPs.
Server-side generated UI is declining somewhat but it isn't dead by any means. Some people have moved to other technologies like JSF or a different templating technology and some have switched to client-side UI (JavaScript + JAX-RS for REST/AJAX).
They are numbers and should act like numbers.
No thanks. I can not fathom **any** reason to not treat a number as a number.
Spring is pretty ambivalent about what template engine you use. You could easily use JSP, Velocity, Freemarker etc with it. 
It depends. Where I work we've move frontend JavaScript frameworks. Spring MVC is still used on the server, but it just pushes out static HTML and REST services. But my friends who are more on the enterprise side of things still use JSP, and it's not going away anytime soon at their places of work. 
If that's really what that IT manager said, then he's the one who is worthless. If you actually understand what is going on with JSP and servlet programming, you don't just know a corner of java, you know a paradigm of web programming. That's useful. Especially if you do a bit of it - you'll get to know what's easy, what's hard, and what's impossible. Then you can start adding other tools to your toolbox that make that impossible stuff possible. And that will involve learning more about the html / css / javascript side of things. But honestly, if you can understand the interaction between the web server and the web browser, and what pieces of processing take place where, you're already ahead of many of the people I've interviewed.
learning JSP won't kill you - the concepts are pervasive throughout almost every web focused framework out there (aka, templating)
Of course it's dead, everything programming that gets outmoded dies. hahahahahahaa oh god I crack me up. Tomorrow morning I will go into work, and continue work on a program written in Fortran 4 and Fortran 77. Just to clarify: f77 is newer than f4. The "77" is a reference to the year the language standard was written, which *predates my birth*
JSP is not dead. Probably not even on life support yet. But on the other hand not as healthy as some of the competing technologies. If I was looking to build new career skills I would probably not do it in JSP unless I knew of a specific opportunity. The current trend is heavy on JS and JSON for new projects. No matter what else is going on in an application, it is going to have JavaScript in it somewhere. Java itself is still solid for a lot of applications, and a good foundation in Java is likely to serve you well wherever you go. But I would advise anyone new setting out to make sure that they are fully versed on the holy trinity of html, javascript, and CSS. 
Ooh I see.. I'd rather do it the standard JPA way then with annotations than the hibernate specific way with xml mapping files. Could you perhaps point me to a tutorial that lets you start completely from scratch using the annotations method? The "tutorial" in the hibernate docs (found here: http://docs.jboss.org/hibernate/orm/4.2/quickstart/en-US/html/ch04.html) just provides you with a finished maven project and hardly explains what's going on in the code.. Even better, would be a maven archetype that uses hibernate annotations method.
It's not dead, but it's pretty busy looking for a retirement home in Florida. Only a few companies operating fairly sturdily inside legacy land will start new non-trivial projects with JSP.
[Repeating annotations](http://docs.oracle.com/javase/tutorial/java/annotations/repeating.html) is supported in Java 8
But, like old people, you can't ignore it. You still have to maintain it.
Good idea! I'd possibly gone a different route by creating a parent class and subclassing from there.
It depends on how exactly do you want them to act. Create an internal list of zombies inside your room. If you want each zombie to attack, after you read the input you can iterate over each one and print something like zombieName + " attacks you". Eventually you can add to each zombie some values like attack and damage, and use the class Random to determine if they hit and how much damage they inflict whenever they attack.
That's it right there! That's what I'm aiming for.. In my mind that rules out stuff like JSF because having a REST webservice is all you need, then you can expose it to websites, mobile apps, you name it!
That depends on what you're doing. Even with a different front-end framework, you will most likely need html templates, and JSP tags can come in very handy. For example, I'm using JSP tags to print out my `&lt;script /&gt;` and `&lt;link href /&gt;` and `&lt;img /&gt;` tags, so that they link to wherever I'm hosting my static assets. That way, if I ever change my website url or move my assets somewhere else, I'll just need to change the link in one config file, and all html templates will update. Also, for multi-language strings, jsp tags can be very useful. E.g `&lt;x:lang key="hello" /&gt;` for printing 'hello' in the user's current language. This would be quite hard /ugly to do in plain javascript.
Subversion aka SVN
I'm surprised, you just type git revert &lt;sha1&gt;
Yeah, I tried that, and got a message that there were some missing files that i hadn't committed, even though my IDE shows those files as being committed. And when I tried to commit them I got some other gibberish error. So yeah, I'm not very happy with git atm.
in that, if you update to previous version and then make some changes and try to commit them, you get an error that you're out of date, or in conflict, or such. 
What does git status output? Did you try to git stash before git revert? 
I suggest you remove the "advanced" buzzword and replace it with JSON and what other formats are supported. The description of the formats is completely missing from your article. Does it includes metadatas ? Is it aligned like protobufs? How do you handle object cycles ? What about some benchmarks? You mentionned C#, is there an implementation available? Code sample ? Is there a particular reason why you wrote another serialization lib instead of using an existing one ? These are the kind of stuff people want to know before trying it.
I consider a library or a technology dead when nobody have interest learning it and there is nothing in the production which relies on it, so from this point of view, JSP isn't dead at all. People have to maintain the deployed applications, until they decide to leave a particular technology like LinkedIn did with JSP: https://engineering.linkedin.com/frontend/leaving-jsps-dust-moving-linkedin-dustjs-client-side-templates I've started my career with JSP then moved to JSF. Today we're completely moved to client side templating and RESTful architecture. Speaking from experience, if you plan to create something which today runs in a browser and tomorrow runs on a mobile device (because hey, who knows what's going to have internet connection tomorrow, maybe your fridge?), forget the tight coupling, it worked in the past 20 years while desktop computers were the only way to access the internet, but the growing number of different devices connected to the internet forcing us to completely separate the representation layer from the business logic. For example: you create a JSP/JSF application which does exactly what I wanted, great! Later I want a native Android application which uses your services, because I'm constantly traveling and hate carrying my laptop around, or I want to embed a digital display into my fridge which retrieves through your application the number of beers I grabbed today before it gives access to the next one. :) It is about re-usability, write once, access it from any device.
I actually only rarely find myself subclassing something in Java or C#, since multiple inheritance is not possible. Interfaces are the way to go.
Yes.
Thank you very much! This is a real TIL for me and will help me a lot in the future. Since you mentioned C#: How difficult is it (having a solid programming background in prehistoric languages, like C, Basic, and Pascal/Delphi and a reasonable understanding of Java) to learn C#?
Rule number 1 of git: never trust GUIs, always use command line. It's seriously dead simple.
If you know Java, C# is real easy. There are some differences but it's the same style of OOP, but with more syntactic sugar. As someone who came from Embedded C / C++, Java was a big step for me, but Java to C# was not. I just wish .NET was more open like Java. Mono is not acceptable to me.
1) Buy a code signing certificate for your developers. Costs less than a hundred bucks per year. 2) JNI works just fine with the default security settings if you're signed the code correctly and set various codebase-related variables correctly in the manifest. Each new version of the JVM seems to bring a new variable your manifest needs, but it's still possible to write full-permissions code that works with the default settings. I write usb drivers with JNA for a living, send me a PM if you can't figure out the settings yourself :)
&gt; I think AngularJS will emerge as the de facto client side framework in upcoming years Can you expand on why?
Read a book (or wiki) on Design Patterns. That might help with implementing your ideas. http://en.wikipedia.org/wiki/Software_design_pattern OOP is a bit hard to explain in two minutes of typing, but I see it as splitting up functionality and responsibilities into seperate blobs interacting with each other in specific ways. On top of that there's interface-based programming where all outward interaction is dictated by an interface and objects interacting with another object don't care/know about its implementation. This is why extending instead of implementing can be such a pain sometimes. Ie, you need both sets of functionalities, but you can't extend both at once.
Actually, I am currently enrolled in an online course on design patterns on Udemy (https://www.udemy.com/java-design-patterns-tutorial). I slowly begin to have a basic understanding of the underlying concepts. OOP as such is not really the issue, it's more a matter of "how do I build this and what should I include" that bugs me. Yet, I am improving by constant practice (and online courses, etc.) I found that all my previous attempts at learning OOP languages failed because I was still too much focused on structural programming. Now that I haven't done anything in the old languages for several years (besides the occasional VB program or some scripts) I am free enough to understand the concepts. It's just a relatively long and winding road...
 git reset --hard &lt;commit-hash&gt; It's extremely easy.You can't blame the tool if you haven't even attempted to learn how to use it.
That's sure. It's just that my time is currently rather limited and the bite-sized lessons at least give me some ideas. Anyway, the short conversation so far has given me a lot more insight and clarified some issues than reading / following online courses has done in a couple of months. I am really grateful for that. Thank you for your time!
There is also pretty good money in legacy land.
that's not my idea of easy though, I don't want to mess with HEAD. The only head I want to mess with is in my pants.
1) I wish the company would. We spend a fortune on travel and things like that, but won't spend money on things that would actually be worthwhile! 2) JNI works fine with the default security settings. EXCEPT for the one dialog that the users have to click OK to every time the page loads. And frustratingly the JVM Release Cycle is shorter than our Release Cycle, so every time the JVM releases with new security settings we aren't yet ready for them...
`git status` shows a bunch of files which my IDE shows as already committed. **EDIT:** Okay, this was my mistake. My IDE was storing the git repo in a different directory than in my project root, for some reason. In that repo I can interact with it from the command line without issues.
Sure when you work for a startup you can choose to start with anything because anything is new at this point, but when you work for a fortune 500 company which has hundreds of developers that know JSPs and thousands of pages built on JSPs, you need a better reason to change than "all the cool kids are doing it!". Server side rendering is something that will always have its place. 
http://www.thymeleaf.org/
my problem with that is, you have to manually add all new / untracked files, whereas the IDE auto adds them. And you have to give your name + email with every commit message. and new lines in commit messages are a pain.
and then how do you merge the new branch with the master? they would have conflicts
If you do a git reset like that, it is like the commits never existed on that branch - so if you merge, you will get the commits back unless you go to every branch on every instance of the repository and do a hard reset. If anyone else has pulled, doing a reset of a repository will be a pain for them. Reset is more for resetting a local change you have committed but haven't yet pushed. The revert command generates a new commit that sits on top of the existing commits and reverses them, and is more appropriate for changes that you have pushed or someone else has pulled from you, or when you have lots of branches with the commit on them and don't want to worry about fixing them all up manually.
If you do the first method (destroy to old state), there's no merge needed.
I vaguely remember Oracle indicating it was "deprecated" (but not). Take that with a grain of salt, however, they were pushing JSFs format in that talk.
I believe you can skip having to give your name and email every time by setting some global preferences.
With ten years experience in buzzwordJS.
Such grammar. Also though, why would you use n++ when Eclipse is a thing?
Yeah, just built a site based mostly on tag files and it's as good as any templating engine I've seen in any language. I don't know why it's poorly documented and doesn't get mentioned much. It's been around for quite a long time, yet I only discovered it recently.
shameless self plug of my own template engine: [http://www.mitchellbosecke.com/pebble](http://www.mitchellbosecke.com/pebble)
Servlets are not useless. Their role has been minimized due to modern frameworks like Struts and Spring, but it's still a very important skill set. You can't run MVC without configuring the servlet in some manner. If you're going to set up web services you'll run into servlet configuration. It's a skill that you should not have missing as a Java developer. JSP is by no means dead. It's losing its popularity to the alternatives like Velocity, FreeMarker, Webwork, and the JavaScript/AJAX frameworks. If you're going to develop in Spring you'll find that JSP is still a popular language used to implement the views. There're millions of JSP pages that exist, and someone needs to maintain it.
It's not dead, we weren't able to kill all COBOL, imagine JSP. I think we'll be stuck with it for years
It's actually a repost from yesterday. Original got downvoted to oblivion, so OP wages another try.
git add . Adds all untracked/changed files in repo git add src/main/java/. Adds all untracked/changed files that can be found starting at src/main/java
&gt; development is definitely towards a "thick" JS client But why? All the different JS interpreters on all the different OSes and browsers - those are unreliable and dangerous lands! Why put so much work there? So server has easier time? Isn't that harder to develop and support?
Thanks for the feedback! As for the formats you asked about, it can theoretically handle any format that has a key -&gt; value association. I've only implemented JSON as of right now because this is what I used. This is the reason I said advanced, seeing as supporting a new format is as easy as implementing an interface. As for metadata, it can store versioning information, but I couldn't think of much else it would need. If you can think of something please let me know! Looking at the protobuf format, it looks like that's something I could implement. I'd have to make a "keyless" serializer, but it seems easy enough. To wrap up your final points, I did not consider object cycles and will have to fix that, C# has built in serialization features which is actually what the design of this library is based off of, I couldn't find any other extensible libraries that did what I wanted, and what are some good benchmarking tools I can use? Edit: paragraphs
Is this like Rich/Prime faces? 
Eclipse?
JSP is dead in terms of having a bright, exciting future on which new and exciting things are built. It's 100% alive and kicking in terms of hey it's overwrought nonsense, but it's there and if you want Java to deliver a web page, boom, done.
Spring MVC is also dead.
Because JSPs are not limited to generating just HTML I've seen some work recently where instead of writing a coded servlet as a service entry point that returned data, JSP pages were used instead. The reason given was that coded servlets (a class that subclasses the javax.servlet.http.HttpSevlet) were harder to update in a running web application, whereas a JSP could be easily redeployed and it would be re-compiled and reloaded. Combine that with the tags capability and it is fairly easy to construct service endpoints.
&gt; The question is, what values will it print? What values can it print in general, as in what is it allowed to print without being accused in running on a corrupted JVM? In the BitSet example this depends entirely about how BitSet is implemented, which is unspecified. This isn't technically undefined behavior, so there's no risk of nasal demons, but this program is allowed to output literally anything BitSet.get() is allowed to return. 
Seriously? By committing *anything at all* you are: 1) Probably already working on HEAD 2) Creating a new HEAD with your commit 
You are wrong about both of those things. Suggest you read a git tutorial.
&gt; And you have to give your name + email with every commit message. then your config isn't properly set up. &gt; new lines in commit messages are a pain Use a GUI client. E.g. [TortoiseGit](https://code.google.com/p/tortoisegit/). Aren't newlines the same PITA with the svn commandline client? Also there's ways to specify an editor to use when committing from the commandline. Look, I get it, git (and HG which I use mostly) are complex and complicated. But don't hate the tool just because it doesn't work out of the box. You're a developer, it is expected that you take some time to set this up properly. You're comments in this thread feel very frustrated, and a bit on the trolling side. 
Have you also checked out things like Gson, Jackson, etc? How does this differ from those, or what problems did you have with other serializers that led you to this solution?
If you're going that route, at least read "whats new in java 7" as well (search for it on amazon, it's free) and then perhaps later, "whats new in Java 8" ( https://leanpub.com/whatsnewinjava8/read )
Fair point. I think some/most of it stems from the desire for richer experiences in the browser - drag/drop, windowing, etc. Modern browsers are definitely getting better at being consistent and standards compliant, and any "thick" library you're using would abstract any of that stuff away from you anyway. IIRC, Github uses a good balance of AJAX-y interactivity with loading partially rendered HTML snippets that are server-side rendered.
I think it's fine. It will give you basics and that's what you need to start learning IMO. From there you'll need a lot of work and patience to be able to say you know how to code in Java.
&gt;modern frameworks like Struts and Spring, I hope you're not serious there...
Probably slightly different context. JSPs were deprecated for use with JSF in favor of Facelets. Standalone JSP is certainly not deprecated. You don't see a lot of new development for it, but they're not deprecated.
&gt; A lot of companies have been switching over and using JS frameworks for web UIs. Interestingly I've also seen a LOT of companies switching back, since JS can become incredibly slow. Sure, your server response is in 10 ms, but then it easily takes 300 ms to well over a second to crunch through layers and layers of JS. Not nice... 
Your manager is correct in that the current trend is thicker JS clients that talk to Java back ends. It's no different in concept to a decade ago when thick Flash clients or Java applets were a thing. The HTML5 stack (HTML/CSS/JS) beats competing technologies because there is no plugin for the user to install. Plus, for all the griping Java developers do about JS it actually is a pretty decent and powerful language to write a UI in. So yeah, JSP (or page-based apps in general) are kind of a legacy UI platform, but you will run into them in your career. Servlets aren't dead. 99 times out of 100 the framework on the JVM back end that the client is talking to is built on top of servlet technology, because servlet technology is powerful and stable. However, you probably won't be writing your own custom servlets. You'll be using 3rd party frameworks that depend on them. 
I think by "thick JS client", he means a desktop-style application that manages its own state, implemented using JavaScript in the browser. Frameworks like AngularJS, Ember, and CanJS lend themselves to building applications where the user's computer and browser are handling the bulk of data manipulation and interaction, instead of, say, sending a form to a server to have the server manipulate the data, store it, and return HTML, or whatever, to the user. Could you elaborate by what you mean when you say "page based feel"? Are you talking about things like static web pages? You click a link, and move to the next page, and so on?
I agree. I ended up hopping on the bandwagon with the current application that I'm making, and I'm not sure if I want to do it again. I think for the next application, I'll stick to something with a little less JavaScript, and more of the server handling rendering.
I'd already see your template engine but didn't find in what it is different/better at other template engine like velocity, freemarker... It's not to depreciate your work but in a crowed domaine (http://java-source.net/open-source/template-engines) you should explain why Pebble is better.
If you can handle one more person, id love to join. I have knowledge of loops (for, while and do) and know how all of the primitive variable types work. I also have basic knowledge of 1D arrays and multidimensional arrays. If I can be of any help please let me know.
Came here to say this.
&gt; That guy must think "What we use at my company = what everyone else uses." I find it's usually "I read an article that talked about this, so now I'm going to declare it like it's reality" level of thinking. 3 years ago this guy was probably saying "java is dead" and that everyone was moving to Ruby on Rails and using java was "archaic". (Context: This year several well known apps moved back, converted their code base from Ruby on Rails back to java.)
(disclosure I work with Waratek!) @b0b0b0b you're right it has taken an insane amount of JVM engineering ;-) @bronzedturd each JVC is completely self enclosed to the point that doing a get all threads in a container only sees the threads for the app in that container. It's in just the same way multiple OS's on a hardware hypervisor have no idea they are sharing the resources. 
&gt; It's so much a trend in that a bunch of hipsters is yelling hard about this so "everyone" thinks everyone else is doing that and it's the future and such. &gt; But maybe tomorrow a small but very hip crowd will suddenly start shouting about server side web frameworks, heck, maybe even JSP, and then the mass will think that is the future. Couldn't agree with you more, it's basically marketing to go around telling people "no one is using that any more". It's exactly the same as all those "java is dead!" and "iphone killer" b.s. articles you used to see. Java is still here. Tons of people still buy iPhones. It's marketing hype. 
&gt; also you really shouldn't be using rafts of javascript libraries for basic functionality anymore. I agree, but it happens. And with dozens of asynchronous calls at the same time. Amazon and Flickr's websites are perfect examples of sites which favor distributed architecture and "pretty user experience" over speed.
Sit down, look at a Ludo board and decide how you will store the board. (board setup) Look at how the figures move when you play the game (game loop). Check the winning condition (Exit out of game loop) Then work out the finer details, like strategies. Other than that: http://lmgtfy.com/?q=creating+a+ludo+game+in+Java
What about JSTL? I worked with it a while ago and found it pretty buggy, particularly about the amount of jstl allowed to appear on a single page of code.
I choose myself whether I do a graphics game or text based. I will try to do as you say and do a text based game and then add the graphics 'cause I have no idea how to do that. 
Thank you all for your help. I will take these steps now :) 
Yeah, Angular or the very thick Ext JS.
How do you figure? It's easy to pass in an object to the context and call that in your template. Also, you can create macros and put complex logic in there if you want. 
Feel free to add me on Skype: Ismaya0 if you require explanation on anything
This is perhaps the stupidest article I have read so far. Obtaining type safety by wrapping each element in a Map of class to object is wasteful and plainly not very useful. It doesn't deal with multiple elements of the same type, cannot cast and eats memory for the typical single element case like RAM is candy. Create a cast-checking wrapper if you must. Even better, structure your code to use types that are known at compile time. That way your code won't be a headache to reason about.
&gt; You have two ways to go. Hmm. I think there are a lot of other options. IMHO, LWGL and JOGL are nightmares for beginners. I wouldn't recommend this. You should probably start with a game engine. [JGame is no longer supported.](http://www.13thmonkey.org/~boris/jgame/) I don't recommend it. BUUUT it is easy as heck for beginners. [libgdx is the BEST option in several ways.](http://libgdx.badlogicgames.com/). It is a high end game engine that can do most of what we expect modern engines to do. It is pretty complex, but there are a TON of great tutorials. And learning it is a skill that you can put on your resume. [jMonkeyEngine is another option.](http://jmonkeyengine.org/) I've never used this. I don't know much about its 2d support. Finally, I will also point out that [Processing](http://processing.org/) might be a good middle ground. Processing is a simplified dialect of Java. You could write the background classes in pure Java, then the visual code in Processing, which is significantly easier. IIRC Processing can be set up to automatically use the LWJGL bindings pretty easily.
This Article does not explain the concept to use in practical scenario. Its an attempt to explain the pattern mentioned in the book Effective Java. Its more of a good-to-know-but-not-to-use pattern.
Dagnamit, I couldn't find any actively developed, (ultimately) Django-inspired template engines last time I went looking, just Jangod, which hasn't been touched for years. Starred for next time. I ended up using [jade4j](https://github.com/neuland/jade4j) last time as it has very similar block inheritance and makes it even more convenient to append and prepend to existing blocks, plus its mixins are fantastic for creating reusable chunks of template (plus logic if you need it) without much ceremony. I've always found the template space in Java really weird - there are so many of them, but so few which *don't* have terrible syntax or are otherwise unwieldy to use.
intellij
nano is a gui
Strange Loop
Execute the code they want tested within a test, then validate the output. JUnit is fairly straightforward, once you write a few practice tests you should have a basic understanding of needs to be done.
Just to clarify, the call to the server simply fetches an XML file correct? You don't need to convert something else into XML? If so you just need to make a program to read and parse an XML file, then have JUnit test its functionality. If you're wondering which library to use for parsing XML files, I don't know which is the *best*, but I do know there are a lot of options. To be on the safe side, you might want to use one that is included with the default java sdk. [Look at the comparison at the bottom](http://docs.oracle.com/javase/tutorial/jaxp/stax/why.html)
Actually, come to think of it, I believe I need to fetch some JavaScript and parse to JUnit. At least, that's what I remember the hiring manager saying - I didn't have a pen to write it down at the time. That sounds right though. I'm assuming there's an existing method to convert/parse data that I'd need to call, is that correct? Unlikely that I would need to reinvent the wheel... 
Would you mind providing an example of an example test? Thanks! 
&gt; parse to JUnit JUnit is a framework for testing your code, so you would first be creating classes which fetch/read your file, conversion to XML if necessary, then read the XML. How familiar are you with XML? Here's good info on Stax http://tutorials.jenkov.com/java-xml/stax-xmlstreamreader.html
Hi, JUnit is a way to write test-cases. It has provisions for annotating methods that do the testing, there are tools to run such annotated tests, and there are classes/methods in JUnit to do assertions to check that the test results are correct. There are @Before and @After annotations that take care of setting up and cleaning up after a test, which are useful if you have multiple test-cases. If you use Maven, take a look at Surefire plugin. That's pure JUnit. There are many extensions that allow testing databases, or testing Spring applications, etc. But I'm not aware of any XML parsing help in core JUnit. As far as I understand, you need to use JUnit to test some webservice that is already deployed and running somewhere? That's not really a unit test- that's an automated user test or an integration test. You do not set-up and run the actual webservice **server** from inside the test, do you? You just call some tomcat server somewhere where the webservice is already deployed, and check the results? If that's the case, then my advice is to write a JUnit test, that that does following: * @Before method with initialization (read host/port/url from config, etc.) * One or more @Test methods that make an HTTP/HTTPS request to that webservice (user either java.net.HttpUrlConnection, or Apache HttpClient, or something else). * Then the response from the request is parsed. If it's fairly small, use DOM parser, else use SAX. Alternatively, if you have JAXB bound objects, you might want to use JAXB to parse XML into Java Objects. * Then use JUnit asserts to check if the response is correct, i.e. if it has certain values/attributes in the XML. You can use XPath expressions to extract the right data from XML if you want. As you see JUnit will only help you with a nice way to provide methods to set up or run the tests and make assertions about the results. But the actual XML processing you'll probably need to do yourself. But then maybe there are some 3rd party libraries that allow easier parsing/testing of XML with JUnit. I'm not aware of any, so fix me if I'm missing something here. I'm still not sure where JavaScript enters into this. The actual test-case will be written in Java. You don't really care what the webservice-server runs, you are just accessing it over HTTP and retrieving XML.
I would recommend swing, it's a very basic game. No need to spend a lot of time learning OpenGL.
If anything with a textbox counts as having a GUI then `git commit` counts as a GUI too. Again, if you didn't want people to spend time trying to give you advice that you don't want, you shouldn't have asked for it.
that's different.. you interact with git by typing in commands, you interact with nano by pressing shortcut keys. don't be mad, we're having a very interesting philosophical discussion about guis here.
&gt; Frameworks like AngularJS, Ember, and CanJS lend themselves to building applications where the user's computer and browser are handling the bulk of data manipulation and interaction As a consequence, websites using these frameworks for those kind of applications might think about stating their minimal system requirements. 
Might be related to IPv6, see http://stackoverflow.com/questions/12535937/java-7-on-32-bit-windows-7-java-webstart-unable-to-load-resource Or check your proxy settings and experiment a bit there.
&gt; Why put so much work there? So server has easier time? Isn't that harder to develop and support? There are some use cases that really favor the thick client (JS or otherwise). Among them are email clients, and obviously things like most games. Unfortunately, too many people just use Angular because it's what HN and /r/programming says is cool. Whether it's the best tool for the job or the best tool at all, doesn't matter. This is why you can pretty accurately judge when a given site was build based on the specific framework it uses. It largely correlates to whatever was being blogged about that year, and later whatever was being discussed at HN. It's silly, but most people are lemmings. 
Use LibGDX or Swing for the graphics. What is "ludo"? For the gameplay portion, you will need to understand what a game loop is. Basically, it's a loop that checks for input, updates game state based on input (or lack of input), and then updates the picture on the screen.
I second NFJS, great conferences 
That's very helpful, thank you! 
This was a good read, definitely a good starter, thanks for your input! 
Yep, I keep running into great feedback for these symposiums.
I agree with you, actually. A lot of them are getting to the point where a slower PC using an older browser *will not* be able to properly use them. It's kind of funny. I bet things will come full circle in 15 years. Browsers will turn into OSs, and thick-client web applications will turn into "browser embedded applications" that need to be installed.
My boss really liked the offerings for No Fluff Just Stuff's ÜberConf. Actually, he was so impressed by it the whole team might be going now. Thanks for the suggestion!
JDK is the Java Development Kit, I take it. I will try this. I have a 64-bit system so I downloaded the Windows x64 version (rather than the x86). Seems a bit much just to get the thing running, but what the heck. Thanks!
I'm late to the game responding but... You should learn it. JSP is an easy fallback for all kinds of weird situations, and it is another tool in your belt. Would you want to build and entire application using just JSP? no, not unless you are a masochist. I would however suggest you check out Velocity as well - It is like JSP and is insanely useful. You can use it without a servlet container... think templated emails, or pdfs. 
Have you been taught any GUI programming? If so what kind?
I appreciate that. The major problem I'm running into at this point is lack of knowledge about loops. I listed my problems in the original post. I feel like I'm asking a lot because my java intelligence at this point is minimal, but I've got to learn somehow.
Certainly seems like it. We're rapidly heading towards some kind of byte code in the browser, IMO.
I think this page might help you out a bit: https://dev.mysql.com/doc/connector-j/en/connector-j-usagenotes-connect-drivermanager.html When you call Class.forName("com.mysql.jdbc.Driver").newInstance(); the mysql-connector jar needs to be in the same directory as your project or within the class path... If you are using an IDE like Eclipse or NetBeans you can add the jar as a library to your project.
These doesn't necessarily follow any of the guidelines. I changed your NUMBER_OF_ROUNDS = 2 to 10 and it completes the first checkpoint, but doesn't manage any of the other two criteria. Does it matter where that boolean is placed?
Here you go. http://pastebin.com/C1wJKt0X To the letter.
WHOAAAA not what I was going for. I think you misinterpreted my confusion for anger. I was just confused by this since I have no prior experience with loops of any kind. The benefit of seeing one mostly completed gives me a guideline of what I need to see so I'll at least have a baseline to learn from. I'm extremely grateful that you've helped me this much.
For new programmers, it can be difficult to extract semantics / understand the meaning of a given loop and see how that loop helps you solve a problem described in English sentences. In your question, they have made this a little easier by starting each bullet point that should correspond to a loop with the phrase "for each." Java actually has a type of loop that corresponds exactly to this "for each item in a set" kind of thing, and in some languages (such as Java's Microsoft cousin, C#), you write this kind of loop using the keyword *foreach*. The syntax for that kind of loop is a little trickier in Java though, and it seems like the problem wants you to practice using *while* loops, so you can ignore all of this for now. If you think about the problem this way (where each bullet point beginning with "for each" gets taken care of by a loop), you'll see that you actually need two - one loop inside of the other! This is where you're going wrong in the solution you posted; you need a loop to create the quiz questions, and inside of that loop (meaning *for each question*) you need to loop again to check the answer. You 'break out' of this inner loop when the user gets it right or runs out of guesses, and then take another step forward in the big/outer loop. You can see that by nesting loops like this, you can ask the CPU to do a lot of work with just a little bit of code. This is risky too - if the conditions of your loop aren't well defined, or if each loop has to do its work a lot of times, your program might 'get stuck' in a mess of nested loops. In this case, you know that the outer loop always goes through 10 iterations, and the inner one goes through at most 3, so your code won't ever 'do work' more than 30 times (not so risky). Maybe I've over-simplified this so much that it annoys you, or maybe I've given too much information and haven't helped for that reason either - let me know if this was useful. I can never tell. Edit: you can also do this with a single loop as /u/moop__ has done, but I'm making some assumptions about your amount of programming experience and the intent of the question when I tell you to do it this way
This was essentially flawless, except there was one thing that I switched to make it provide the correct answer after 3 incorrect attempts. You had newln there, and after changing it to sum. This was extremely helpful and insightful. Thanks a ton. http://pastebin.com/abt4L9QM
Do you listen to the [Java Posse](http://www.javaposse.com/)? If not, you should. They have a conference every year in Crested Butte, CO. Its more of an un-conference since they have no speakers. Instead the attendees bring up topics, vote, and have sessions on those ideas where everyone contributes. There is still 'leaders' and 'experts' but you won't get any marketing or presenters with hidden agendas. I've only been once but I am looking forward to going back. Highly recommended for anyone from new to experienced (and tired of the same old junk). 
I remember my first steps into the world of dependency hell that is Java libraries. I came from the world of C++/Make where installing dependencies manually or through the OS package manage was perfectly reasonable. With Java, it is worth biting the bullet and using a dependency management tool. I prefer Maven, the two other common tools are Ivy and Gradle. Next I would use a higher level ORM library for interacting with your DB than JDBC. I like using JPA and the implementation I generally choose is Hibernate. Then what you need comes down to Hibernate Maven dependencies, and a persistence.xml with the correct connection settings. As for MySQL settings, they should be in /etc/mysql/my.cnf IIRC
As a rule, float/double values are not accurate, and should not be used for anything requiring accuracy (such as equivalence checks). This is because a computer only has a certain amount of bits to represent the number, so it cannot be perfectly accurate. 1/3, for example, cannot be exactly represented by a fixed number of digits, so the machine must approximate. As with any approximation, you will see accumulated error over time. 
Floating point calculations can be less than straightforward. Rather than attempt to explain what is happening in a reddit comment, I suggest looking around the web, there are lots of documents on this subject. Here is one that I like: [What Every Computer Scientist Should Know About Floating-Point Arithmetic](http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html) This appears to be a slightly more practical version: [What Every Programmer Should Know About Floating-Point Arithmetic](http://floating-point-gui.de/)
http://stackoverflow.com/questions/8194917/comparing-a-double-against-zero
Check IEEE754 for floating point standards.
0.1 in binary is a recurring decimal, so it can't be represented accurately in a binary computer - at least not with floating point.
Thanks for pointing that out, but this is an anti-pattern in my book. The solution doesn't even reach a desirable level of type safety - it will *not* show a compile error if you happen to try to get the wrong type out of it. You will just get null instead. How safe is that? Apart from writing an interpreter for a dynamic language (which usually has different trade-offs and needs to be fast, so it has no time for the tomfoolery layed out in the article), I have yet to find a case where I don't know at least a useful type-bound of the objects I am dealing with at construction time - that's what generics are for, moving type binding from declaration to construction/use time. That's the level of type safety we want. @ygolecha: Sorry, but I feel I need to downvote this post. Hopefully it will get downvoted so much that less experienced programmers won't see it and mistake it for a viable implementation technique (after all, it was featured in "Effective Java", wasn't it?). I just want you to know that it's nothing personal. I don't have anything against you, just against the idea of the article.
Everyone pretty much explained it , so I don't see the need to add anything other than to read into java's BigDecimal if your wanting to get the precision you desire. http://docs.oracle.com/javase/7/docs/api/java/math/BigDecimal.html
Additionally, from the perspective of readable code this is beyond stupid. Imagine including the student class by library without being able to look into its source code. You have no idea which methods said class / object contains. I'd rather have a getStudentId function instead of a getInfo(Integer.class). When you want to be able to scale dynamiscally to a database table layout ORM or Code-Generation is the way to go with my current knowledge. PS: Ah wait. That's even better. There is no way to see which classes are inside the Map, you will have to find out which class populates the Map how. Or get the whole map and read the keys...Jesus this is awful
When you talk about mobile apps, you start diverging into different types of Java. Android is the easiest to deal with because the UI is mostly defined in manageable xml files. Swing kind of sucks for complicated UIs. There's also Java ME which I have never touched. Can you be more specific on your target? Why do you want to work with GUIs? They tend not to be very... Expressive of a language. 
&gt; As you realized yourself, the huge difference is that Scala developers have always spent a lot of effort on improving the good parts, as well as deprecating and removing bad parts I've experienced this slightly differently to be honest. Scala developers cannot make up their mind and don't care for people actually having to maintain code written with their shit. They add and remove features on a whim without taking anything or anyone into consideration. And no, Scala does not just fixes a few bugs in their native binary representation. They bloody well change everything every frakking release, making us recompile everything from scratch again, and having to wait for every freaking dependency to be recompiled just as well. Nice... Not! The creators of Scala looked at Java once and could fix a few mistakes Java had already acknowledged were mistakes. Pretty easy. From there on they made tons of mistakes themselves, and after 10 years they are not even close at the maturity level where Java was after 10 years. Scala is like a small child that just doesn't want to grow up, finding new shiney toys at every corner and not understanding its own immaturity yet. 
How triggering the zombie to randomly travel to a room, every time the player makes a move? 
yes. thats what im stuck on. everytime the player makes a move i want he zombies to move. heres my code for the movement of players code: /** * Try to in to one direction. If there is an exit, enter the new * room, otherwise print an error message. */ private void goRoom(Command command) { if(!command.hasSecondWord()) { // if there is no second word, we don't know where to go... System.out.println("Go where?"); return; } String direction = command.getSecondWord(); // Try to leave current room. Room nextRoom = currentRoom.getExit(direction); if (nextRoom == null) { System.out.println("There is no door!"); } else { currentRoom = nextRoom; System.out.println(currentRoom.getLongDescription()); } //checking if zombie is in room if(currentRoom.isZombieThere() == true) { zombie1.roar(); } else { System.out.println("There are no zombies in this room"); } 
Ok, let me try to give you a simple explanation. Java has a concept of CLASSPATH. It's a bit like unix PATH, but for Java classes. It's a command line option or an environment variable which has a list of following: 1. Directories where Java needs to look for class files. 2. Jar files that contain the class files. ClassNotFoundException means Java was unable to find that class. This means either the directory where the class is located, or the jar file is not in the CLASSPATH. Set the CLASSPATH correctly, and then try again. You can specify classpath via comamnd line: java -classpath ./app_binary_dir:/usr/share/java/mysql-connector.jar com.package.MainClass
Oh, and before I forget. Please consider using PostgreSQL instead if you have a choice. Believe an old software developer- it's a much better database than MySQL. Java side doesn't change much though, you still need JDBC drivers in your classpath.
Spring missed the boat because: * They were late to adopt annotations * Ignored the existence of EJB 3 * Didn't have a good answer to the concept of state The second point was especially painful. By ignoring EJB 3 and keep arguing against the complexities of EJB (pretending in their heads there was only EJB 2) they not only made a fool of themselves, but they also didn't came into action to provide an answer to EJB 3. After al, why provide an answer to something that supposedly doesn't exist? In reality of course EJB 3 DID exist, so they lost a lot of their competitive advantages by resting on their laurels for too long.
JavaOne was considered, but they have gone every year for the last few years. I think they wanted to try something new. I have heard that it is something that I should go to at least once just for the experience.
I have never heard of the Java Posse before now. I'm looking forward to checking out their podcast. Thanks!
That's a strange article. Migrate from Glassfish 3/4 to TomEE? Why would I want to do that (now)? The open-source story of JBoss is also not entirely without issues (JBoss AS 7 - not EAP - has been abandoned a long time ago, who knows how long Wildfly will actually be updated)? That's not to say the Glassfish doesn't seem like an ideal choice when starting a new project, however. 
I am using Eclipse, and also have NetBeans installed. So, in Eclipse I added the .jar as a Library and now there's no more ClassNotFoundException! Thanks a lot! That page was helpful as well. Bookmarked!
&gt;JBoss AS 7 - not EAP - has been abandoned a long time ago JBoss AS 7 is not really abondoned. At some point the releases are just renamed to EAP, but internally they still use an AS 7.x version number. For instance, JBoss AS 7.3.0.Final-redhat-14 has just been released, but you'll download it as JBoss EAP 6.2.0.GA. &gt;who knows how long Wildfly will actually be updated A few more releases will probably be made until the new EAP will be released from that branch. That new EAP will keep getting updates for a long time.
lol what the fuck is this guy on :) Great food-analogies though. 
I really like CDI but I have not used Guice at all. Anyway, good question but I object to exampling with Weld. One advantage with CDI is the fact that it is standardized and thus implemented both by Apache, Jboss and Caucho (and other more or less unknown impls). Your CDI project written with OpenWebBeans and deployed to TomEE will work as expected if you instead deploy to WildFly in 99% of the cases. The only problem could be vendor specific settings for using CDI with jax-rs or similar. This pain might be eased considerably in Java EE 8 due to high demand for Java EE configuration standardization. CDI everywhere is also one of the most requested features for Java EE 8 and if you like other specs in Java EE it will only get better in terms of CDI integration. The portable extensions functionality in CDI is also very useful. The people behind Weld, OWB and many others have created a ton of useful extensions in the Deltaspike project. 
Here's my test you cant reproduce.
Hey, do keep back and ask if you get stuck. If you run your app from an IDE (Eclipse, Netbeans), you need to add that library (JDBC driver) to the project in IDE. If you run your app from command line, you need to specify classpath. Usually Java apps ship with a shell script (or an native executable like Eclipse) to set up classpath, environment and start them up. app_binary_dir is the directory where compiled .class files are saved. Eclipse will usually keep them separate from your .java files, so you need to specify that directory in your classpath otherwise java won't be able to find compiled classes for your own code. Another alternative approach is to package everything into a single jar file and run that with "java -jar file.jar". It's not that widely used. If you are familar with C/C++ "make" command that compiles, builds and packages the project, there are similar tools available in Java, most popular are Ant and Maven. Ant is similar to Make, it will just build stuff. Maven also manages dependencies- it will download mysql drivers from net automatically if you specify that your app needs mysql drivers. Stick to shell scripts at the beginning, but I advise to switch to Maven when you become sufficiently familar and confortable with Java. I guess for class assignment you'll be running things from Eclipse, but you'll need to learn how to use build tools and command line sooner or later if you want to do professional Java development. Regarding writing XML from Java- you'll probably need to use DOM, google for "writing XML java" and you'll probably find examples. And you'll need to use JDBC to query the database, and iterate over ResultSet to get the data from the database. 
Or if you want to be bleeding edge you could go with JavaFX 8 which has 3D support now.
You might get some inspiration from the design of [PacMan ghost behavior](http://home.comcast.net/~jpittman2/pacman/pacmandossier.html) that is described in this posting. The concepts aren't very complicated but it leads to some interesting conditions.
n++ is helpful for beginner.I use eclipse only for android.and use bluej for java.My beginner friends also use n++ .
There are a number of template engines listed in /u/shadymilkman_ reply below. I will state that the last time I looked at the view technology integration section within Spring's documentation (3.0.X) it wasn't super helpful in how to integrate another view technology. Spring's Velocity support at that time was out of date as well, which also made that integration a bit painful. Perhaps with Spring 4.0 it has been improved?
I'd try to apply something like zombie1.move();//the zombie takes its turn to move if(currentRoom.isZombieThere()) { //I'm assuming isZombieThere() compares zombie location with room identifier zombie1.roar(); }
You mean Java in 2014 has equivalent functionality to .NET 2.0 in 2005? (in regards to annotations)
Thanks for the reply! In terms of what's not clear. The code starts with this: import java.util.Hashtable; import java.util.Enumeration; import java.text.SimpleDateFormat; import java.sql.*; I'm assuming here it's loading helper files that can be used to run in the code. 
What's the point of comparing a Ram based vs disk based storage? 
&gt; At some point the releases are just renamed to EAP, but internally they still use an AS 7.x version number. For instance, JBoss AS 7.3.0.Final-redhat-14 has just been released, but you'll download it as JBoss EAP 6.2.0.GA. ...which has to be licensed for production. In theory you can download the source code and compile it yourself, but AFAIK (I never tried it, last JBoss 7 I compiled myself was before the EAP switch) 1) it's a total PITA because many dependencies have Red Hat-internal version numbers 2) you'd still have to remove all ocurrences of the trademarked "JBoss" name in the resulting application server. 
I see. Don't take it in a wrong way, but you should probably read some book or tutorials on Java. There are a lot of places where "imports" are explained, there's no point in repeating it here.
I'm not 100% sure I know what you are trying to do here. Are you looking for some example code? If so, this question [**How Classloaders Work**](http://stackoverflow.com/questions/1301261/how-java-classloaders-work-for-regular-circumstances-nonexplicit-use-of-class), has both a discussion of how classloader work and example code. I would suggest using [Stackoverflow](http://stackoverflow.com), for these type of questions.
Also note that head first java doesn't cover annotations 
[Thymeleaf](http://www.thymeleaf.org/thvsjsp.html) if very good, popular, and often used with Spring MVC.
1) A bit but far easier than you think. In a nutshell; remove the red hat suffix and everything compiles. There are de-obfuscation scripts readily available (this French guy Alexis something comes to mind) 2) not true if you run it on your own servers (which most people do), true if you offer the software for download or otherwise distribute it to third parties. I think the trademarked name is "Red Hat", so a grep/replace by "Rod Gat" should be all that's needed.
Sorry to tell you (and please don't get it wrong), I think, based on your comment, that this piece of code is way above your head. You should possibly start at beginners level. [Java for Complete Beginners](https://www.udemy.com/java-tutorial) free course on Udemy.
My issue here is that the site is really nice and super flashy, but I'm a java developer. I don't want that, I want to see code, I want to see what it is I'm getting into. If you want me to start plugging in libraries by myself, with no maven, you need to show me a really good reason - and I don't need my strings turned into arrays that often. Common code snippets that are much shorter now would be good to show off, but really even just anything besides having to download this folder which is I guess a tutorial website, but...one you have to download off the site instead of hosting it there? It's a strange way to get me to be interested in a product.
I'm adding the .Config file to the class path using the addPath method, then i'm reading a configuration file for the names of the classes in the .Config file, then i'm initializing those classes using their names in the configuration file using Class.forName() method. I'm trying to implement the strategy pattern while programming to interface and not implementation. To have the code have NO reference to any concrete class, only the interface. That way the program is completely dynamic and never has to be recompiled in order to change its behavior. Converter is the interface.
Yep, I will! I'm somewhat familiar with the DOM and I found a site that should give me a good idea of how to go about parsing it. I'm also going to be using Eclipse or NetBeans to build the GUI so I can add a few options. I will definitely look into Ant. I've seen it come up in job descriptions I've been looking at. I'm not entirely certain what its purpose is at this point but that should be identified in my research. Does it build an "executable"? Also, do you know if its possible to compare an XML file to an XSD Schema in java? In class we've been using a JavaScript file to do the validation. As long s it is possible, I'll look into it. Basically the assignment is to pull data from a database, put it into an XML file, then validate it against a schema, and use XSL-FO to convert it into a few different document formats. Thanks again! 
I will look into that. Thanks a lot. 
Nothing. We are barely through "classes and arrays". 
Why did you post this? There's no jar (the download link downloads the website itself). There are no examples. There are no docs. There is a half-working website that can't even decide whether it's alpha or beta. It also seems that you don't know the difference between a library and a framework. There's no maven artifact. And last, but definitely not least - Your library seems to do the work of Guava / Apache Commons which we all love and use. Why and how are you different? Or even when compared to JDK - how is explode different from `String#split()`? I'm sorry, but this seems to be some kind of a joke. Or a bad amateurism with a potentionally nice site. Java is awesome, but please show us you actually know some. If you don't, we're here to gladly help. I'd love to see some fresh wind in the Javalands, so I hope you won't give up. I'll check on you later to see if it works.
Hi, DOM is ok. Regarding XSD validation- as far as i remember it you can associate a DOM parser with an XSD schema, and parse XML from a text file after it's generated and do the validation when parsing. In a way the XSD validation step is a bit pointless, as YOU are generating the XML, you are not getting it from some 3rd party and parsing it. So you have it in DOM format already, there is no point in parsing it. I guess this is an exercise, so you might as well generate the XML file and parse it. Another framework that's handy to use in XML parsing/generation with java is JAXB. It can use XSD schema to generate Java domain object classes, and it can parse XML into java objects directly, with validation. I'm not sure how much time you have for this exercise and how good you are with Java in general, but if you have time, it's worth looking into. Again, Ant is like unix Make. You can define a numer of steps with dependencies, and they get executed. Steps can be things like "Compile these .java files" or "copy this file there", or "package these files into a .jar file" or "run this class with following classpath". Out of build tools I prefer Maven, as it can manage 3rd party dependencies (you'll be dealing a lot with those if you become a professional developer), and the standard compile, test, package steps are already defined. On the other hand it's a bit more difficult to get the hang of, and it's less flexible- which can be a good thing, as you know what will happen without having to read through countless lines of build scripts. I've never worked with XSL-FO.
Artifactory cloud looks PERFECT. We've signed up for the evaluation. Thanks so much, this saved our bacon! :)
From the article &gt; Java requires the use of checked exceptions. If the exceptions are not caught or thrown out then the code fails to compile &gt; Static typed languages require that each variable name must be tied to both a type and an object. Dynamically typed languages only require that a variable name only gets bound to an object. Immediately, this puts Python ahead of the game in terms of productivity since a static typed language requires several elements and can make errors in coding more likely. This "article" reads like it's written by someone heavily biased towards Python, and who has a very limited Java experience. 
indexOf(String str, int fromIndex) will work better.
Ok, thanks for the feedback, that's helpful to know!
And - most important: Strings are **never** compared with "=="! Use **.equals(String other)** **Remember:** Strings in Java are Objects. Objects can not be compared with "==" as "==" compares Object references, not the contents.
Hello, thanks for your reply. Your criticism is valid, and understood. The main reason I posted this was to get some feedback from the community. The download link has been fixed now. I realize that it's incomplete (and thank your for pointing out the identity conflict between beta and alpha), and it's still a work in progress. I do know the difference between an library and a framework, and the classification will also be re-visited. The library may share some similarities with others, however one of the key differences I have been working on is speed and power. Most libraries work in a linear fashion, and hence I made one that uses threading to help speed up more complex operations. This was not actually designed to be a standalone project originally, it was just something that I wrote for an actual company project. I decided that it might be helpful for some other people to use, and hence I threw together the website and posted on reddit to try to get some feedback. I realize that it's not helpful for everybody, certainly not for people who are more experienced. I do however think it could potentially be helpful to some people who are newer to Java. Maybe it's not at all helpful, but I plan to keep building on it for personal use, and keep it out there for anybody who might have any use for it :) Thanks again for your comment, Sincerely, Hirsh Agarwal P.S. Out of curiosity what is your programming experience/are you a professional? (You can look me up if you would like to know about me first)
I haven't worked much with CDI, but have a lot of experience with Guice. Guice by itself is a really neat and lightweight dependency injection framework. Configuration is done completely in Java which means it's typesafe and you won't have to deal with non-Java configuration files. There are quite a few integrations for Guice, so it's quite easy to plug it into a Java webapp or even into an Android app. As for CDI, my understanding is that it's a capable framework, but it is tied to Java EE servers/applications. If you're working in a JEE environment, your best bet is probably CDI. If not you should definitely look into Guice and give it a try. 
No not at all thank you for the feedback that's why I'm here. So is the code I pasted here Java or Javascript? I'll review the course.
I think I figured out why the download was more confusing...is it possible that you uploaded the wrong thing, or at least the wrong readme? It's talking about something called big picture
Thank you for your feedback and time.
The code is definitely Java. But it's quite advanced. Dealing with databases is definitely not basic stuff.
This ends up on /r/java all the time, we really should have it in the sidebar in HUGE letters.
That's pretty much the way to do it, using Class.forName(...) The only change I would recommend is is calling .trim() on the classname string. Class.forName(...) does not trim the string, which might lead to it claiming it can't find the class.
ok ive restructured it to look like this but i am still getting an error public int countOccurences(String t) { int i; for(i = 0; i &lt; sentence.length(); i++) { String subString = sentence.substring(i,i + t.length()); int j = 0; if(subString.equals(t)) { j++; occurences = j; } } return occurences; }
What error are you getting exactly? I just found something else wrong with the code: public int countOccurences(String t) { int j = 0; // initialise j outside the loop, otherwise it will not work the way intended for(int i = 0; i &lt; sentence.length(); i++) { String subString = sentence.substring(i,i + t.length()); // int j = 0; //this will reset the counter on each pass of the loop - not what you want - remove it if(subString.equals(t)) { j++; // increment the counter - correct way // occurences is not defined anywhere inside the method // guess that this is what causes the error. // and actually, it is completely unnecessary // remove it //occurences = j; } } return j; // just return the counter variable - that should suffice }
Oh well. I actually went through the pain to test it. Guys. It's awesome that you love to code and that you build things, that's how we learn. But you have a lot to learn, this is not a useful library for anyone. By far. Mostly because the methods you introduce ALL are in the JDK :). The most basic things about your code include: The methods are not `static`. They should really be `static` as they do things statically. -------------------------------------- Your `explode()` method is just wrong. -------------------------------------- - Use [`"Some String".split()`](http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#split%28java.lang.String%29) instead of your magic. It does the same thing, but much better! - Use the Guava [`Splitter`](http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/base/Splitter.html) if you want something really fancy. - Don't ever return an `ArrayList` to me again. Return a `List`. Google "programming against an interface". - If `input` is `null`, it throws an NPE ungracefully. - What is worse, when `tag` is `null`, it doesn't complain and returns an empty list. - If `tag` is longer than one character, it returns an empty list. Should the `tag` be of type `char` instead? - Using `substring()` in your code does a lot of String copying in the background if the code runs on Java 7u6 or later. It's bad, slow, memory inefficient. Google "Java 7 substring". If you really want to handcode this method, do it in a different way than with substring(). - Don't use `System.out.print()` unless you're testing your code or something (you won't use it ever again when you'll know your stuff). Those file read &amp; write methods ... wow --------------------------------------- - Accepting a String as a file name is not the best thing ever. Google "stringly typed". If the argument should represent a path to a file, treat it like a path. Accept a [`Path`](http://docs.oracle.com/javase/7/docs/api/java/nio/file/Path.html) as an argument. By the way, don't use `File` anymore if you're using Java 7. - Also, if `file` is `null`, it fails horribly. - `FileReader` sucks. It doesn't accept an argument for a charset. Use [`Files.newBufferedReader()`](http://docs.oracle.com/javase/7/docs/api/java/nio/file/Files.html#newBufferedReader%28java.nio.file.Path,%20java.nio.charset.Charset%29). Always use a charset when reading / writing text. - You don't `close()` your readers, you are an evil boy. Always close your resources (and learn how to do it well). Google and use try-with-resources. - Don't ever use "/n" again. Look at [`System.lineSeparator()`](http://docs.oracle.com/javase/7/docs/api/java/lang/System.html#lineSeparator%28%29) and search for why it is useful. - Don't use a `StringBuffer` in single-threaded code. Use a `StringBuilder`, it's faster. - Your exception handling is really, really poor. I know that checked exceptions are a pain in the ass, but they tend to be useful sometimes. And even if they weren't, the thrown exceptions themselves are absolutely useful. Don't just throw them away. The way you have your code, you don't know _why_ the read/write failed. Does the file not exist? Are we out of disk space? Did we do something bad? Not to mention that your "threads and performance" are nonexistant :). Write JavaDocs. Use and love [the Oracle tutorials web](http://docs.oracle.com/javase/tutorial/). It's not bad at all!
Haha, thanks for the feedback :)
Ping me if there's ever a new version of your utilities, I'll take a look and tell you what I think if you want. Otherwise - the methods mostly worked, so good job there :). Really. Keep coding!
Thanks man, I appreciate it! Good luck in the future to you too!
Maybe try changing the for loop to: for(int i = 0; i &lt; sentence.length()-t.length(); i++) One more thing: **Where** is your **sentence** variable declared? Maybe you need to change the method signature to: public int countOccurences(String sentence, String t) And in your main method call it like: int x = countOccurences(theSentenceVariableGoesHere, theTextToBeChecked);
OWB and Weld support Java SE and also plain servlet containers just fine. 
In your addPath method, I would create a new URLClassLoader instead of using reflection and typecasting to exploit the system classloader.
You may want to investigate suffix trees. http://stackoverflow.com/questions/13213783/finding-all-distinct-substring-of-a-string
I would like to add JavaFX as an option. Not really mobile friendly (yet?), but an awesome option for UIs.
Depends on what you already know about computer programming.
This is one of the most difficult questions to answer because there are so many variables that can't be predicted. Also, it strongly depends on how deep the knowledge should go, how much background knowledge in programming is there, how easy one picks up new concepts, and much more. The basic language is fairly easy to grasp. Couple of weeks to a few months should suffice. When it gets advanced, it gets complicated. Too many different directions. SWING, JavaFX, JavaEE, Frameworks, etc. Usually, the language is not really the problem for a beginner. It's getting to think like a programmer, creating algorithms, abstraction that affects many aspiring programmers. This part can only be achieved by practice, practice, practice, and practice. Practice takes time.
What the others points out. But if you want to start learning programming, you can always check out the subreddits [/r/learnprogramming](http://www.reddit.com/r/learnprogramming/) and [/r/javahelp](http://www.reddit.com/r/javahelp/). These wikis has some good information to get started. :)
The Oracle Javadocs are the best reference available and they are free of charge. The Javadocs are part of the standard JDK and are also available at: http://www.oracle.com/technetwork/java/javase/documentation/index.html Direct access to particular information is fairly easy. A quick google search in the style of "Oracle Java &lt;SoughtForClass&gt;" will usually return the Javadocs in the first few results. Note should be taken to use the "7" docs (visible in the link) as they represent the latest state.
Okay, I'll have a look into JAXB and some other options! Thanks a lot!
It's an ear that's about ~150mb in size. I'm deploying to a VM that I'm running locally. My computer is decently powerful. It's got 16 gigs of ram.
I've been coding Java for four years and still don't really understand what an EJB is or why i'd want one. I don't use spring because its a pain in the arse with all its config when I could use something like Guice that lets me config it with *gasp* real java code.
The [Java Language Spec](http://docs.oracle.com/javase/specs/jls/se7/html/index.html) plus the standard API docs is probably as close as you are going to get. The Java APIs are huge compared to K&amp;R C, you just can't fit it into a book like that.
JRebel is gonna be your best bet for quick turnaround. Unit tests are a must regardless of JRebel or not. Other options include running Glassfish inside of your IDE (aka, hot deploy). not quite as fast as JRebel, but it's free. Look at eclipse + Glassfish Connector. I'm not sure how to do it in IntelliJ or Netbeans, but I'm sure they have equivalents.
You should have a look on the ServiceLoader class: http://docs.oracle.com/javase/6/docs/api/java/util/ServiceLoader.html 
That's not easy to do in our situation. We're using EJBs and JMS queues. Also, I think we're using timers. AFAIK, those don't come with Jetty. Either way, do you think merely switching to Jetty would speed up my build/deploy time significantly? 
It doesn't really support repeating annotations, it is just syntactic sugar on top of the what already was implemented... @Repeatable(Schedules.class) public @interface Schedule { ... } @Repeatable specifies the repeating annotation which contains the Schedule annotation.
I think the point they were illustrating is null on the annotation means "not applicable". For example: a complex type wouldn't necessarily require the use of a "format" string for display because it isn't applicable. Remember most of the time annotations are meta-data properties used for adding additional information for apis which do things like persistence, marshaling, etc. so null in the annotation doesn't mean the data is null, it means the meta-data about the data is null. I agree the example was contrived, but some things surrounding annotations are .. ahem.. inconsistent.. Also, the issue of using multiple annotations to represent a "choice" of paths is common for things like xs:choice in XML marshaling... PS: Posting a link to whyjavasucks.com on Javait sounds like a wee bit of trolling as well ;)
Awesome thank's!
Thanks for the Java lanauage spec link. I normally use the API but sometimes It doesn't feel like its enough maybe. 
Hibernate is great for CRUD operations, especially when persisting object graphs. The optimistic locking mechanisms may offer a good solution to the "lost update" problem that not even the SERIALIZABLE database isolation mode cannot protect you against, when dealing with a multi-request operation. The querying part is not that simple. There are many rules. For instance, the "Java persistence with Hibernate" book has almost 1000 pages, and you can't say it covers every aspect of its usage. There are passionate developers, always wanting to do better, that recognize that a manual is meant to be read prior to using a framework rather than when problem start arising. So, there are many who don't really get "Hibernate", but this applies to SQL as well. You'd be amazing how many senior developers don't know about brilliant stuff SQL can offer you, like window functions for instance. Hibernate doesn't offer those and it was never designed to replace native queries, especially on large enterprise projects.
&gt; 1.) Arquillian - you can run your unit tests on your container. You can know if your stuff will work without having to deal with deployments. &gt; Good idea. We were on glassfish 2 a few weeks ago and I don't think that tool worked for glassfish 2. Now I can reevaluate it. &gt; &gt; 2.) Do you have a ton of web content in your app? It sounds like it. Move your images, videos, etc. to your web server. Your app shouldn't be ~150Mb. &gt; No I don't think so, but that's a great point. I assumed it was our dependencies and transitive dependencies that were taking up all that space. I should really investigate this to get to the bottom of it. &gt; &gt; 3.) A Profiler - consider VisualVM or a Profiler that comes with your IDE. There are alternatives that you can pay for as well (YourKit, JProbe, etc.). Figure out where your bottlenecks are during app startup. Point #1 could make this point entirely irrelevant. Good idea. Of course half the time is the building process. 
Just because you have no clue, doesn't mean you have to make things up. Nevertheless, I'd like to nominate your comment as the most-butthurt-sounding-thing-of-this-month. You really need some help to learn how to deal with facts you don't like. :-)
Do you use any libraries/tools/frameworks? My environment is Windows/Galileo, not RHEL, but my first instinct would be to go to Eclipse and attempt to Project&gt;Clean and Validate the project after checking out. Any use of Maven/Ant may necessitate a Clean/Build task, and possibly Update Maven Dependencies. Good luck.
Thanks for the response. I do use libraries, sure. And I have done a project-&gt;clean and it compiles fine in eclipse (that's what I meant when I said "clean build in eclipse"). Not sure what you mean by this: "Validate the project after checking out.". I don't check anything out with eclipse so this may not apply to me. And I do use ant, so anywhere I say "javac" I mean compiling with ant javac, but I don't see how that would be relevant. Thanks again for the reply!
If it's as easy as removing all red hat suffixes, it's not as bad as I thought. Still, I am under the impression that this issue is kind of ignored in many of these recent "abandon Glassfish, move to JBoss" articles - and since JBoss used to be "100% free", without strings attached, it's easy to see why people can think that this is still the case.
&gt; Good idea. Of course half the time is the building process. What build tool/IDE combination are you using? If you have e.g. a "vanilla" Maven project and use IDEA, you can build/deploy the application with IDEA's own, incremental project builder. Then you should always deploy the "exploded" WAR/EAR files, so that changes to non-Java sources get picked up immediately (e.g. HTML/CSS/Javascript files). Even without JRebel, if you start Glassfish in debug mode, you can still use the JVM's own Hotswap for changes in method bodies (it's far more limited than JRebel, though, i.e. adding or removing methods always requires a redeployment).
You mentioned checking out codes on Computer B. Even if this was done in the file system, Eclipse may still need to be "notified" about the update, yes? There is a Validate option in the context menu when I right-click on a project in the Package Explorer. I assume you have that, or something similar. This should trigger a manual refresh of the resources in Eclipse. Since it probably hopefully likely wouldn't mess up the codes, I was thinking that you could give it a shot, given your mysterious circumstances.
It has always been confusing, ever since JBoss introduced EAP next to AS. A while ago I wrote this article about it: http://henk53.wordpress.com/2013/01/09/the-curious-case-of-jboss-as-7-1-2-and-7-1-3 Many articles fail to address the real essence of the AS/Wildfly vs EAP split, and just take over the marketing speak put out by Red Hat.
Actually I wouldn't mind looking at some JavaPorn...
pretty much it :) 
Small correction; WildFly 8 == JBoss AS 8 ;)
Why does this sound like a bad homework assignment.
glad I could be of some help
Well, some projects work better with JRebel than others. My last company actually refactored the build process to work with JRebel (it was about a 3 man weeks - me for a full week and a jr. dev for about 2 weeks). That was the cost, but after that the dev process was amazing. My current company's build is pretty complicated (one project, ant, building ~ 12 jar files ~ 3 wars ~ 2 ears). JRebel won't work so easily there, but it's possible. I didn't even bother when I started working here, but we recently hired a new dev and he's pretty hell-bent on using JRebel. So far, he has the main 2 wars and 2 ears working with it. If your project is a standard 1 project, 1 build target - you can expect a MUCH easier time.
Check the tutorials section on the /r/javahelp wiki http://www.reddit.com/r/javahelp/wiki/tutorial_list
If you were to ditch all that JEE stuff, sure, but then you'd lose all the JEE stuff which is why you're on a full container anyway. Don't switch to Jetty if you're invested in JEE :) 
Effective Java.
I think the problem with APIs in general, and certainly for the SSL one, is that you initially start without understanding the problem. Then, you learn over a period of years. When you finally do understand everything, you've built so much that it's nearly impossible to go back and re-do everything. Wrappers are probably the best way forward.
My best guess is that the default compiler compliance setting is different between the two eclipse installs (preferences-&gt;java-&gt;compiler). If it's not that, I'd check your error/warning settings for generics (preferences-&gt;java-&gt;compiler-&gt;errors/warnings)
An EJB bean is a POJO to which (container) services can be applied. For example an asynchronous method, or a security protected method. E.g. Adding an asynchronous method: @Stateless public class MyClass { @Asynchronous public void myMethod() { // stuff in here happens async } } Security: @Stateless public class MyClass { @RolesAllowed("manager") public void myMethod() { // only managers can access this } } By default every method is also transactional, since in the overwhelming majority of cases this is what you want. If you don't want this, you can disable it with 1 extra annotation. There are many more such services, these are just 3 examples.
I don't think there is a book like that. K&amp;R was written to explain the ANSI standard for C, which is a very small language. Also at the time was written it assumed most people were seeing the C style syntax for the first time. As other people have pointed out, the Java Documentation is the closest to that in style, but not in how succinct it is.
Maybe you're doing it the wrong way? Try using some java technology that is quite hipster and recent. Eg. try lambda, dropwizard, spring boot, spring loaded, vert.x, the new and shiny JavaFX 8, gradle, grails, thymeleaf, mybatis, guava, gwt, spring 4 with groovy config/no xml ... and many more.
Do you work with Java EE? I've found it very hard to fall in love with enterprise level programs and by proxy, Java EE.
Could be a classpath issue. Can you think of any changes you've made recently such that an older version of your code, when compiled with the newer would create a cyclic dependency? I'd first compare the classpath between eclipse and the ant build to see if there is maybe a jar there that contains an old version of some code.
16gb of rams doesn't do much, if you have not higher iops. Do you have a hdd or ssd?
That is dangerously close to Javanese porn.
This is a bit of a long shot, but are you using maven plugin for eclipse? An issue that has bit me in the past is that m2e puts test and main classes on one big class path whereas a command line build will keep test classes out of the main build's classpath. 
FitNess
Good suggestion, I should have mentioned that I indeed do a "refresh" on the project, as I have to do this every time. Thanks though!
Thanks for the suggestion. But there's actually only 1 eclipse running that is important (i.e., eclipse is only compiling it once on Computer B as Computer C doesn't use eclipse). Thanks though!
I don't think this is it but good suggestion. Thanks!
Nope, I don't use maven, thanks for the suggestion though!
sqlite is known to have some damn good code
Or you could just to the actual site which describes the API. http://www.unitsofmeasurement.org/ 
We've got an ear with 2 wars and ejb jar and a few other jars in it. 
I've done all sorts of combinations. I've taken your suggestion in the past but even then it was slow. It was just faster than now. Now my glassfish is running on a VM. I've got to have a way to get the ear on there. The only way I know how is to package it up into its ear form. I'm curious why he is getting downvotes. What's wrong with his advice? 
Spring MVC can use JSP for its views. They are kept as simple dumb templates, and the real processing is done in the models (usually database entities) or controllers (classes used by the main servlet). Spring can use other view technologies such as Velocity, Freemarker, Thymeleaf. Thymeleaf is the newest. Other ideas to consider: 1. Pure JavaScript / AJAX single page application "SPA" (like Dojo), calling a REST API on your server. 2. Java Server Faces (see PrimeFaces). An AJAX-friendly component based GUI framework. 3. You could also consider Android as your GUI, talking to a REST API on your server, or even JavaFX / Swing as a desktop client. If your site needs to be indexed by search engines, then server-generated HTML is the way to go (such as Spring MVC). If you want something more interactive, that doesn't need to be indexed by search engines, then consider a SPA.
Fair enough thanks. :D 
If you have a budget of zero dollars, you probably want to host on Tomcat or TomEE and leverage either Spring MVC or JSF with your application plumbing residing in beans behind the page logic (don't follow in-line JSP examples). JSP is just a front-end language that compiles to a servlet on execution, so you can use it (properly) just as easily as anything else. JSP and Spring are not mutually exclusive. You'd really be comparing between JSP and JSF or some sort of view engine like Thymeleaf, GWT, etc...there are lots to choose from.
Spring is very well tested as well.
&gt; Since you're running on GlassFish 2 That was a few weeks ago. I'm running on GlassFish 4, now. I don't really get how Java EE 6 makes this ear size issue better. It seems like you're saying, "You're using GF2 and everyone knows Java EE sucked back then so I can only *assume* you're using Spring with it. Spring has large jars. Therefore if you upgraded to Java EE 6 you could get rid of the Spring and jars and your ear size would be much smaller" Well, we may have a few Spring jars in there, but it's not really responsible for much of the size. 
The wiki url in 2.14 is dead :/
[Grails](http://grails.org/) is like rails but with the power of Java.
twitch.tv justin.tv 
Have you ever consider the Play framework? http://www.playframework.com
This is the [other file](http://imgur.com/CMQFhrp) and it's for school so I have to write it this way. 
At line 50: backwards += newString.chartAt(i); backwards has a default and initial value of NULL in your Palindrome class. When you use the += you're really doing backwards = backwards + newString.chartAt(i) which translates to backwards = null + newString.chartAt(i) so the first 4 characters are translated to "null". You might want to put a default value of empty string ("") to your string backwards at line 18.
Great that fixed it. Thanks
nope. why is it awesome?
FABULOUS!
Lol, that has hints, this part makes it clear - &gt; While a programmer will continue to argue for the language that makes it easiest based on the programmer's current level of knowledge, new software compiled with Python takes less time and provides a simplified coding language that reduces the chance for errors. When things go right, Java works well and there are no problems. However, when errors get introduced into the code, it can become extremely time consuming to locate and correct those errors. Python generally uses less code to begin with and makes it easier and more efficient to work with. There's no doubt that if you have errors in your code, Python is as good as java at best, or very bad compared to java (because of it's dynamic typing) at worst. I'm not even sure it's as much the author having a bias as them copying and pasting info not really understanding what it means.
Sorry for the late reply. I'm taking a graduate course in UI design and implementation on an android OS in the fall and they recommend a strong background in java. Sorry about the vaugeness. Let me know if you need more clarification? **EDIT: Oops, hit the wrong "reply" on mobile.** 
Even without using a trendy web framework you wouldn't use *just* JSPs otherwise, yes, you'd end up with a mess that looked like a lot of most PHP apps. Instead you would use Servlets and JSPs. Only the Servlets would have accessible URLs. It goes like: * HTTP request hits a Servlet subclass you created, we'll call it MyServlet * In MyServlet you have a `doGet` method that runs. * Within `doGet` you use JAX-RS and JAX-WS client code to talk to your internal web services and capture any data they return * The captured data is placed in RAM, specifically in the HttpServletRequest as request-specific attributes * MyServlet's `doGet` method then uses a `RequestDispatcher` to lookup a JSP, that JSPs will be tasked with displaying HTML to the end user * The JSP *ONLY* focuses on presentation. Using EL, it looks up the request scope data the servlet earlier retrieved. While JSPs *could* have a bunch of code in them or call other code that talked to your web services (view helper pattern) you end up with a much cleaner design when the JSPs only focus on displaying data from in memory POJOs. This is MVC, but specifically it is a Model 2 architecture.
I think it needs more orange. 
You should call it "Nyan cat".
Thanks. This cleared a lot up for me.
Check out Vaadin if your skills are primarily Java. If you want the ultimate flexibility take a look at Angular.js or Ember.js. I would still write back ends in Java though.
&gt; There's no doubt that if you have errors in your code, Python is as good as java at best, or very bad compared to java (because of it's dynamic typing) at worst. Clearly authored by somebody that's never built anything significant or had to maintain it. Nothing like a runtime error many lines away from origination that a static compiler on a strictly typed language could have caught,
For historically context. This the third JSR for a units API. * [JSR-108](https://jcp.org/en/jsr/detail?id=108) - Withdrawn in 2004 after 3 years of little activity. * [JSR-275](https://jcp.org/en/jsr/detail?id=275) - Voted down during the review phase. Same spec leads as this one. 
Look at the apache httputils classes and examples for cookie handling and basic authentication
And a download link.
Thanks, I looked around and messed with it but there doesn't seem to be any current documentation, it all seems to be for the 3.x versions. I will look more into it tomorrow.
I shit you not. My coworkers code looks exactly like this. At work I am the debug guru, so he asks for my help quite a bit. When I look at his screen, I feel like I need sunglasses. 
nice writeup. we use capistrano to deploy our java backend services (we were already using cap to deploy rails and sinatra mri &amp; jruby apps so it seemed like a logical choice), but we use chef to manage nodes/environments. it's worked relatively well.. cap wants to do a bunch of stuff by default that our java (dropwizard) apps don't actually need, but it was easy to integrate gradle so it builds a fat jar (sha tagged) to s3, has all the nodes download it to a releases folder, and then symlink to current when restarting. 
any reason to use Chef for this when you can use Maven or Gradle, which are about 100x times less buggy and have no ruby dependency?
lol because it is =) 
Whoops, my mistake. Another thing to consider is that Eclipse doesn't use javac to compile - it actually uses its own 'special' compiler. I've run into issues in the past where Eclipse will compile something and javac won't. You can actually extract the eclipse java compiler and use it externally [Eclipse JDT](http://www.eclipse.org/jdt/overview.php) When I worked with this on an automated build, we'd have eclipse generate an Ant task for compiling our project. Then we installed Ant and the Eclipse compiler on the build machine. Good luck!
Just like in many unityped languages like PHP, you can make changes to your code and press F5 in your browser to see the modifications. Additonally, most of the things you are using (code, templates, routes, JavaScript, CSS, ...) are (type-)checked at compile-time, so Play can detect mistakes without having to run your application or tests. Ignore those bitter persons below and make up your own opinion.
Hey. I broke it down. Do you have time to review my breakdown?
Hey. I broke it down. Do you have time to review my breakdown?
I haven't really used Tomcat much, but I was under the impression you can "deploy" by simply copying the war file to the appropriate folder?
There's some color extension or eclipse, on the website the color scheme's name has rainbow in it. I'm not at home so I dot have specifics. 
Yeah, it is theoretically 100% free, but red hat scares you into thinking EAP is commercial/closed source. So yes, it's free, but there's a web of confusing and hidden strings attached. Only if you can see those strings and fully understand them is the product free. If you don't understand them and use the product wrongly you may be subjected to legal action, which every half serious company wants to prevent at all costs. The mere idea of potentially violating the rules is enough to just buy the contract for many companies "just to be sure".
You misunderstood so much it would be better to read a book. "Head First Java" is a recommendation. Furthermore, there were errors in that code, probably as part of your assignment. More important though is that the assignment is *way*, *way* over your head.
none
Because it's actually not a Java framework but a Scala one! and some people think Scala is awesome since one guy a HN said it was awesome, while they think Java sucks since lobster83 at /r/programming says it sucks. /sarcasm mode
Damn really. I'm not even close? I thought for sure this is program for giving employees a raise. I'll review that head first book.
So you are saying that you never have a need for recompiled libraries in Scala and that every existing binary just keeps working with a newer version of Scala? I know this to be true in Java. In a test Java 8 project I could still use a binary that was compiled for Java 1.0 in 1996.
The Java web landscape is pretty much focused around Java EE. It has its own framework called JSF which is pretty good. There are many alternative stacks but nearly all of them build on Java EE or use parts from it (Servlet, JPA, JAX-RS and bean validation being the most common, but non-Spring stacks build around say Wicket not rarely use CDI as well). Here's a example to yet you started: http://jdevelopment.nl/minimal-3tier-java-ee-app-xml-config 
The real WTF is not using UTC timestamps.
great job! hope you've backed this up by Junit Tests?
Both Java and Scala are first-class citizens. You seem to be frustrated that Play developers themselves chose a less painful language develop in.
&gt; any reason to use Chef for this when you can use Maven or Gradle, which are about 100x times less buggy and have no ruby dependency? Think of Chef bridging aptitude &amp; maven to make a complete solution. Although it also abstracts away things like aptitude and yum. It does suck that it's in ruby though
None of this matters because only a moron would want to run on the *closed* and *DYING* Microsoft platform and pay 4.5k for an MSDN subscription and some ungodly amount for "data center" editions of SQL Server. I conceded that C# is a better language. It would be stupid if it wasn't since it had Java to base it off of. But being confined to their libraries and not having the source really ties your hands. From a system maintainers standpoint, you can have guys that know how to click on the deploy code button through RDP one at a time, or you can have linux system adminsitrators that can ssh and keep 1000s of machines updated per admin. 
Chef is definitely overkill if you are just deploying a war. @tootle is right that you might want to consider Chef if you are deploying and configuring other infrastructure pieces along with the application, such as nginx, redis, etc...
The ... notation is called varargs. It can take a n-number of arguments. The arguments will behave as an array. Here is an example. public static void sum(int... a) { int result = 0; for(int i = 0; i &lt; a.length; i++) { result += a[i]; } return result; } public static void main(String[] args) { sum(1); // 1 sum(1, 2); // 3 sum(1, 2, 3); // 6 }
Thank you very much, it helped me a lot!
If you're frequently adding servers, why not deploy your custom VM image which already has all your required dependencies installed? Saves you a bunch of time as well. And if you occasionally need to tweak stuff, what's wrong with plain old shell scripts and SSH? I'm sorry, but I really don't understand what value Chef adds, other than another potential point of failure to worry about + a Ruby dependency.
Oh, no, preventing the user from changing focus to something else is not my goal. Alt-tabbing out, Alt-escaping out, etc. are all fine with me. I'd force my game to do a pause if that was the case. But really, I'd unlock the mouse if the user decides to pause the game or if the user goes into any type of menu, basically. It's only during the gameplay in which I'd want the mouse locked inside of the frame to prevent any annoyances of having to get my game's focus again, etc.
VM images are another option. Chef works on non-VMs too. Local envs for instance.
Good programmer then, safeguarding the system from invalid input.
You got invalid data from a vendor*? Right, like that ever happens. * Read: "somebody else"
As a PHP developer trying to leave that community and get deeper into Java, I'm ok with this.
The code block after... &gt; Now that you know how to build an if statement, how you would add more condition in one statement? Here’s an example of syntax: Is missing.
Mouse.getGrabbed is a method in the [Mouse](http://www.lwjgl.org/javadoc/org/lwjgl/input/Mouse.html) class of LWJGL - The Lightweight Java Game Library. You might be very interested in the [Mouse.setGrabbed()](http://www.lwjgl.org/javadoc/org/lwjgl/input/Mouse.html#setGrabbed(boolean\)) method, which "grabs" the mouse. Basically, it does exactly what you are asking us how to do. You will have to learn more on your own. All I know about this is stuff I googled from what you gave me. 
Man both of you guys raise strong points, excellent advice! I can definitely a agree with the notion of just learning programming, especially focusing on data structures and design patterns. I've always felt like looking at a piece of code and being able to identify the pattern being used really goes a long way in understanding what the application's intent is. Also, digging trenches and making mistakes with new libs and frameworks shows you very quickly not only how to handle architecture but how to debug problems and subsequently fix them. Breaking stuff is the ultimate educator imo. Awesome advice in this thread for anyone at any point in their development.
Don't feel like being a jack-of-all-trades is a bad thing. There's hardly a part of the tech world that doesn't include tooling and resources from multiple languages. Polyglot is most certainly the name of the game as integration becomes more important than writing new code in many cases. There's so many fun tools to play with out there too. Grab Yeomon and setup a JHipster app, AngularJs fullstack, etc and you get a really nice seed application you can start changing to see how it works. Analyzing side affects and understanding the impact of changes goes a ridiculously long way when it comes to self-learning. Eventually you can see a behavior and with a very high confidence infer the cause. After about 15 years in the industry, a lot of development work, sys ops/devops, and working with many teams in all kinds of roles I can say it really depends on what kind of work you want to do as well. Since my background is mostly in web apps, being familiar with Ruby, nodejs, PHP, and the design stuff like HTML5 and CSS etc, will go a long long way. There's a ridiculous amount of tools written in ruby and js/node now so it helps to be familiar with those. PHP is great for when you're doubting your decision being a Java developer and you want a "scared straight" kick back into gear
&gt; VM images don't repair themselves So, does Chef magically repair an environment? Also, the whole point of a VM is that you don't repair it. You just reset it to the original snapshot and run Maven to deploy your code. &gt; Having to create a VM for every build is a pain in the a$$ And why would you need to do that? &gt; You can make a chef recipe that can grab the latest from your "qa" repository and another reciepie that can grab the latest from your "prod" repo Or you could just use a single repo for your code and checkout the "prod" tag for "prod", the HEAD for dev and so on. Why would you need separate repos for your QA and prod code is beyond me.
Can you elaborate on this practice of using UTC timestamps?
The real wtf is using java to bulk load when there is fast functionality built in to most databases to do that for you, and much much faster. Or not using a piece of optimized etl software. Edit, I know this is /r/java but seriously, java does not belong in this situation. There are way better ways to accomplish loading data than various java jobs. Get your heads out of your asses.
You cannot always use UTC timestamps. The easiest example would be a calendar application, where users record the date and time of their appointments, which happen in the future. When the user says that their doctor's appointment is on March 10 at 2:00 PM local time, they don't mean some predetermined UTC time; they mean whichever point in time will correspond to that local time on that date, and this could change between now and then. What to do about the "2 AM job" really depends on context. At what point in time are the preconditions for the running the job met? How long does the job take? Is the job required to be done by a certain point in time? Any of these might be driven by human calendars in such a way that it makes UTC inappropriate.
Did this before using Robot, Its not an elegant approach but does the job, After weeks of messing around, I found the most acceptable way as not to upset the user. Calculate the center of the app, When the mouse pointer goes over the frame / range, calculate by using a straight line from the current mouse position to the center. Approximate the edge of the frame location from the line above, Move the mouse cursor to that position. Hope it helps. 
&gt; So, does Chef magically repair an environment? Also, the whole point of a VM is that you don't repair it. You just reset it to the original snapshot and run Maven to deploy your code. Yes periodically it looks for corrupt installations (files missing, configs not correct) &gt;And why would you need to do that? To test insfrastructure with your releases &gt;Or you could just use a single repo for your code and checkout the "prod" tag for "prod", the HEAD for dev and so on. Why would you need separate repos for your QA and prod code is beyond me. You're talking source repository, I'm talking about an artifact repository. You don't compile on your production servers do you? 
Even in your example when the user records the date/time of their future appointment, you can calculate the UTC timestamp and store that along with the timezone. I've never found a situation in which I couldn't use the UTC timestamp+timezone to get exactly the behavior I need in a safe way.