This book is great, a must, will help you a lot in your career.
Honestly, I'd much rather use backticks for string interpolation than this. Another sticky thing. I think I'd only really want this if we had operator overloading (ala C++ user provided type literals). Where this would be most useful would be in the case of numbers representing different things. For example, meters and liters. I might say Liter(100) + Meter(100) and that should be a compiler error. On the other hand, Liter \* Meter could result in LiterMeter (IDK why you'd want that... but maybe you do) which would throw a compiler error if you later added a meter. I have not often ran into the case where LocalDate\`2019-011-01\` would have really saved me much more than a few seconds of exasperation. Almost always the error is LocalDate(userProvidedData) which is trickier to solve in the long run.
I'm doing this course and it's awesome: [https://www.udemy.com/spring-hibernate-tutorial/](https://www.udemy.com/spring-hibernate-tutorial/) &amp;#x200B; I got it for 20$, Udemy has a lot of sales, so perhaps you can get it really cheap.
&gt;Once Java Amber is complete there will be little reason to use Scala I always find this comparison strange. If you're just using Scala as a cleaner syntax for Java, sure - but in that case you've probably already switched to Kotlin. It's a better OO language that Scala. Scala's primary selling point is pure functional programming. It doesn't compete with Java or Kotlin, because neither of those are particularly good at FP (nor are they trying be). Scala competes more with Haskell than Java. 
Scala continually gets knocked as being too OO. The FP folks don't like the OO-ness and the OO folks don't like the FP-ness. It's like a jack-of-all-trades and no one is happy.
Thank you for this great answer! I was worried it would mainly focus on Java, but this is exactly what I was looking for. I'd say I am still a beginner programmer. I know Java's core concepts very well. However I'm not familiar with all of the APIs and have virtually no experience with major frameworks such as Spring. Still though, I believe it's good time for me to start learning good code practices. At least I want to avoid forming bad habits early on.
Absolutely my experience! Also, the programmatic configuration is much simpler, with much more and better JavaDoc, too. 
That's the same reason why I hate it when people start threads out of constructors. I see this way too often. Makes testing almost impossible. 
&gt;The book gives good guidelines on how to write readable, maintainable code Sounds like just the kind material I was looking for. And of course it doesn't hurt to have examples in Java. Thanks!
It would be great and sensefull, to add a reference to the outstanding book "Java concurrency in practice" from Brian Goetz et alt. Imho still the bible of grasping concurrency topics, including the advantages of immutable data (and the pitfalls of designing an immutable object in Java) Also the incredible lib [immutable](https://immutables.github.io) could have been mentioned. What I still dislike is the violation of LSP if your class exposes the ``List`` interface but the implementation forbids mutation. It is simply not clear to the client code and could lead to runtime errors. But because of Java's collection api we will have to live with it...
&gt; Scala's primary selling point is pure functional programming. It's exactly not pure, or not pure enough for the Haskell zealots.
not just a black day, this is the tombstone. &amp;#x200B; Just realize that kotlin has x2 the commits and industry support compared to groovy. Also adopters tripled last year. Indeed goodbye groovy.
Guava ImmutableList sort of fixes that. Of course it still implements List, but if you type it as ImmutableList, the mutating methods would be marked as deprecated.
To be fair, Python used to get the same criticism. I know quite a few people who “defected” to Ruby because “it’s fully OOP”. Then the multiparadigm approach won and now it’s not even a competition anymore.
&gt; the above code was still mutable because I didn't make a copy of the list of Addresses in the constructor. Even after fixing the class it's still mutable because the caller can modify the list returned by getAdresses.
Eclipse. It's free. It's the most common in the job market (maybe 60%-80%). 
I would not mind them adding a `ReadOnlyList` and a `WriteOnlyList`
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
We're all fucked now they're gonna destroy us at every aspect
I've been writing Java since 1996 and have not needed to read bytecode yet.
It makes you cooler
Great video, where is the the video for the speaker from Twitter?
Unless you are working on improving the JVM, you don't. 
Not even for debugging something?
&gt; Why is it a useful skill? It will help you understand how the JVM works, as well as some of its limitations. Some universities use it as a target language for their compiler construction classes. Native architectures are often quite convoluted and take time to understand. Building a VM can be a major timesink as well. Compared to that, bytecode is quite easy to figure out, and the JVM is a very mature runtime environment. &gt; How will it improve my java programming? Not much. You might realize that micro-optimisations often don't matter, and start to worry more about writing clearer, more maintainable code instead (we all should). Or you might get ideas about implementing fancy low-level libraries like Lombok or Mockito. &gt; Is it useful for something job-wise? Unless you're gonna work for Oracle, IBM or another company that maintains a Java implementation, you're probably never going to use it directly. But there are companies that want engineers that has in-depth knowledge about their Java stacks.
No. Unless you are debugging the JVM. 
There are people who program in C++ and don't know anything about assembly. It doesn't make learning assembly useless.
Thanks for your answer. In a paper I read some time ago about automatically finding logic bombs in android apps, there was this tool that found triggers for logic bombs by analyzing the Dalvik Bytecode. I don't think it's a skill so useless as the others are saying, especially in cyber security. 
I too have been programming in Java since the mid-90s. I have not had a good reason to read bytecode. But I'm an application developer; I don't develop the Java language. It is good to know what bytecode is and why it's needed.
Unlike many here state that it's only useful for very specialized areas, i beg to differ. While main users are jvm implementers and bytecode library writers, many libraries do some class instrumenting or generating or gather detailed info from classes(ever think how Spring implements wiring by method parameter name?). Just do a quick tour of the class format, different attributes and bytecode and you might get some crazy ideas. Even then, java bytecode is an intermediate representation that separates a high level language from a runtime that provides many important things. If a new jvm language pops up, it's a good idea to see how it maps to bytecode to figure out what some of its constructs really mean, especially if you profile them and see some odd results. Or if you want to design a language yourself... Heck, i feel lucky to work at a place surrounded by people who know their bytecodes. I couldn't really imagine using something without knowing how it works.
Dalvik is an entirely different beast again. It's a custom VM and instruction format that Java bytecode is translated to. As in the example you cited, it can be very useful to know it, but it's an even more niche skill than Java bytecode.
Use a single robot, and have multiple threads put command objects into a queue. The commands should be complete and atomic (i.e., they should have all the information necessary to complete a whole task, not just a step of a task). And make sure you're using a threadsafe queue, like java.util.concurrent.ConcurrentLinkedQueue.
Thank you very much for the information, is there a way to start flushing the queue as soon as an object hits it?
The simplest way to do that is to just loop over the head of the queue. Just poll the queue for an object, if it's not null, process it.
Perfect, thank you I'll look into that
Spring uses bytecode instrumentation for auto wiring? Can you please expand on this. 
To be fair, Haskell isn't really pure enough either for the Haskell zealots. Most of the Haskell zealots I've met actually couldn't write more than 5 lines of Haskell. The guys that use it in production tend to be a bit less preachy. 
There are only two kinds of languages: the ones people complain about and the ones nobody uses. -- Bjarne Stroustrup 
Also Dalvik was replaced by ART several years ago. But to express how different Dalvik is from the JVM, Dalvik was register based while the JVM is a stack based architecture.
Why are you ignoring people's answers or arguing against them? Did you just come here trying to confirm your opinion?
&gt; ever think how Spring implements wiring by method parameter name? Yes, using the reflection API for parameter names introduced in Java 8.
I'm not ignoring anything, I've commented on almost every post. To a comment that says "Until now I have never had to use it" what should I say other than "Ok."?
There is two scenarios when you need to read bytecode: 1. You have encountered some unexpected frame in stack trace. This can be caused by trivial constructions with non-trivial implementation under the hood: lambdas, inner class private member access etc. Newbie Java programmer can be surprised when see NPE at something like com.reddit.MyClass$Inner.access$500 — instead of going mad because of some dark magic, you can simply read bytecode and understood what compiler really did to your code 2. When you encounter JIT bug (I had encountered them twice for the last 7 years and they have been fixed). By reading bytecode you can gain confidence in your sanity and start investigation towards JIT, thus saving time
WriteOnly? Does that make sense?
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
[https://www.youtube.com/watch?v=PtgKmzgIh4c](https://www.youtube.com/watch?v=PtgKmzgIh4c)
I specifically hooked that example after mentioning "detailed info from class files" and i meant the pre java-8 implementation that read names from LocalVariableTable: https://github.com/spring-projects/spring-framework/blob/master/spring-core/src/main/java/org/springframework/core/LocalVariableTableParameterNameDiscoverer.java
Kotlin will be Scala in 2 years.
Well, how far do you want to go? Let's first consider the benefits for these constructs. It feels like these benefits run across 2 entirely unrelated axes: 1. raw strings; avoid issues with backslashes in regexes and the like. But, really, project amber's string stuff seems like it'll be the way forward on this. 2a. Compile-time checked: If you try to go for a date like 31st of feb, it'll fail __at compile time__ and there's a lot of value in that. 2b. Compile-time constants: Various bobs and bits of the VM either require a so-called 'compile time constant', or perform better or differently with CTCs. Such constructs might presumably be CTCs, though there's a lot to be done to make this happen. I'm going to pile 2a and 2b together as a single concept. But, let's look at something like: `"HeLlO!".toLowerCase()` this is not a compile time constant. But there's no reason for why it couldn't be. toLowerCase (the method) can be evaluated during compile time. The result is 'stable' (it doesn't matter where or when you run tLC, or what the state of the VM is, it always does the same thing), requires no external parameters, and has no side effects whatsoever (its only effect is in what it returns). If we expand our list of requirements and state that the method must also be provably bound in time, we can even do that: Java already has notions of doing static analysis on methods (for Definite Assignment and unreachable code and such), and we can expand this system a little bit to for example detect bounds on whiles and fors which cannot be conclusively determined to be guaranteed ending, and use a recursive concept (if you call any method inside your method, if that method is not marked as 'will definitely end', then your method loses its 'will definitely end' property too. I think this is feasible, and useful. Right now the compiler does some hardcoded magic (for example, 5 + 2 is straight up translated to 7 at compile time, and concatenating a bunch of string literals, such as: `String x = "a" + "b";` is turned into a single compile time string constant by the compiler, and I somewhat dislike the notion of hardcoded magic. I complicates matters considerably when looking at for example annotation parameters, which must be compile time constants. So let's say this feature is added to java. Presumably, the idea would be to mark a method (or constructor) somehow with `@CompileTimeConstant` or whatnot (let's not get bogged down in syntax just yet), which implies that the call is done at compile time, and requires for the method to be compile-time-provable ending before the compiler even tries. Combine that feature with amber's raw strings and there appears to be no further point to your proposal: We've covered all the use cases. The compile-time-constant functions are evaluated at compile time, and can therefore throw errors at compile time. Take the expression: `LocalDate.of(2019, 2, 31)` If the `of` method is marked as CTCable, then the compiler can apply some logic: all parameters passed to the of function are themselves CTCs, and the of method is marked as CTCable, therefore, the compiler will then evaluate this invocation _at compile time_. At which point the method throws an exception and the exception is relayed to the programmer as a programming error, all at compile time. You'd type this into your smart editor and when you stop typing for about a second, a red wavy underline appears informing you that this is a bogus date. Awesome. And no need to mess with syntax much; all we need is a way to mark methods as CTCable. At runtime a lot will change; we need a dynamic take on CTCs which is going to require lots of work on the class file format and such. But, how far do you want to go? The thing about string and numeric literals is that the editor _itself_ tries to support you: If I paste text _INSIDE_ a string literal, many editors will automatically apply escaping for you. This can only work by way of hardcoding right now. If I write a `0x1p0D` style literal, my editor might inform me about its actual value by way of a mouseover popup or something in a status line somewhere, or if we want to get real fancy, eclipse (and intellij too IRC) has the ability to render, in the editor, info about your code in-place even though the text shown isn't actually in the source at all. But that's all hardcoded. What if I want the ability to put in `LocalDate`'s code a date selector, somewhat like how browsers have date pickers. This is a huge can of worms (in what language do you write the GUI component? intellij and netbeans use swing, eclipse uses SWT or HTML depending on which mode you're in, Microsoft's visual studio stuff is as far as I know C, and they alllll use entirely different toolkits for rendering so this is quite the conundrum!). What if I want the regexp literal to automatically highlight groupings? What if I want auto-complete popups when I type backslash or colon or open paren to show available kinds, auto-complete style? What if I want the ability to 'test inline', where I write a few input strings along with what I want the regexp to do with them (match or not, and if match, which sections form which groups)? Can the editor highlight as I type that the regexp passes theses tests or fails them? Can the editor hide the tests unless I highlight the literal? Probably going way too far. But it would be very cool. 
&gt; You might realize that micro-optimisations often don't matter, In particular the JVM and JIT spend a lot of time optimising common bytecode patterns such that attempting to do something strange in Java in the name of performance can often negatively impact your code. This is why is better to just write idiomatic Java and use JMH if you really need to prove that you've optimised something (and then remember to re-benchmark it on each new release in case they've changed the optimization in the JVM).
You could inject yourself an `Instance&lt;FundsReport&gt;` and iterate through all possible choices or use `CDI.current.select(FundsReport.class) `
Same when you have a setter but no getter. The original creator of the list can still hold the way to access the data. I am aware that the situations are not common to restrict a developer to only writing stuff, but I guess it is all about intent. 
Hi I can answer any questions anyone has.
&gt; Language simplicity doesn’t require keywords like implements and extends when Java’s predecessor, C++, required simpler semantics. Calling C++'s multiple inheritance WTF generator "simpler semantics". Now I've seen everything.
&gt; Language simplicity doesn’t require keywords like implements and extends when Java’s predecessor, C++, required simpler semantics. Calling C++'s multiple inheritance WTF generator with non-virtual methods by default "simpler semantics" because it uses a symbol token instead of a keyword token. Now I've seen everything.
Another use-case of bytecode is emitting it. Lots of engineers who don't actually work on a JVM need to emit bytecode.
[removed]
I haven't watched it and I'm not knowledgeable on the subject but I have to ask if the talk isn't outdated today when it was given in 2017? Or things haven't changed that much from back then?
Thanks for expanding on that; it was exactly what I had in mind :)
It will be used exclusively for Android. Nothing else.
The big ideas are the same. Some of the commands to run the demos may have changed.
I forgot to mention that this is one of the reasons that `javac` is so fast compared to other compilers; it doesn't do much in the way of optimization. It leaves that to the JVM.
Okay thanks. Then I'm going to watch it. :)
Groovy has been evolving all the time. Groovy 3.0.0 is coming this year. It enhances a lot on the compatibility of Java syntax: 1) do-while loops; enhanced (now supporting commas) classic for loops, e.g. for(int i = 0, j = 10; i &lt; j; i++, j--) {..}) 2) lambda expressions, e.g. stream.map(e -&gt; e + 1) 3) method references and constructor references 4) try-with-resources, AKA ARM 5) code blocks, i.e. {..} 6) Java style array initializers, e.g. new int[] {1, 2, 3} 7) default methods within interfaces 8) additional places for type annotations 9) new operators: identity operators(===, !==), elvis assignment(?=), !in, !instanceof safe index, e.g. nullableVar?[1, 2] 10) non-static inner class instantiation, e.g. outer.new Inner() 11) runtime groovydoc, i.e. groovydoc starting with /**@; groovydoc attached to AST node as metadata (SEE https://github.com/danielsun1106/groovy-parser ) Apart from the above improvement, you can find more in the video: https://m.youtube.com/watch?v=x14Dmi1AZZM Cheers, Daniel.Sun 
Using java.util.concurrent.BlockingQueue lets you block with the take() method until an element is available in the queue
&gt;Where did i say such thing? I'm sorry if you took offence, that's just my interpretation. I'm a java noob, and I've very little experience with Spring. I always thought autowiring can be achieved by reflection magic. When I saw instrumentation and autowiring together I thought my understanding was wrong and just wanted to know more about internals. &amp;#x200B;
Hey, I created this "library" to improve and speed up my development process, instead of coping the same logic for sending email and others I decided to externalize this and wrap into Spring components. If you got any new ideas what can be added let me know here o on GitHub :) Thanks!
I've used Clojure's PersistentHashMap for this purpose, and was very happy with it.
And what is asymptotic memory overhead per record in this case?
Look into Bloom Filters.
Already considered. Could make things faster, but won’t save memory at all
It *was* a long time ago. All I remember is that it worked.
why are you trying to optimize memory, you have like 10MB of data.
Million of IPs will take way much more that 10MB
Is the set coming from a db? Isnt there a way to keep them indexed so you do not have to load the complete tree at one time? Sorry a bit distant to the topic I might be misinterpreting...
This will make thing even worse and slower
I'd be curious to see what you implemented if you can share... 
You must be storing much more than an IP address then. I'm pasting a listing that show how much memory you need to instantiate char arrays of different lenghts: 10 = 56 bytes 100 = 416 bytes 1,000 = 4 kb 10,000 = 40 kb 100,000 = 400 kb 1,000,000 = 4 mb 10,000,000 = 40 mb A whole IP address requires 4 bytes (2 chars), so 10MB for 1 million IP's is a pretty good estimate.
Considering an IP can be stored in 4 bytes, a million of them would fit in 4 MB.
Eh. Meh. There are other approaches too. How about a sufficiently powerful [@ConstExpr](https://github.com/junkdog/constexpr-java) ? And then just use a normal constructor (or factory static) assignment, that then runs at build time not run time i.e `@ConstExpr var date = LocalDate.of("2019-01-31);` . And, if changing syntax, well, then `@ConstExpr` could become a keyword i.e. `const var date = LocalDate.of("2019-01-31");` Well, `const var` arguably sounds weird, granted, but conveniently in context, `const` is already a completely unused reserved word in Java](https://en.wikipedia.org/wiki/List_of_Java_keywords#Unused), so no breaking changes occur. Or just switch to lisp, lol....
Not if it's ipv6
And how you going to perform IP lookup in contiguous char array? Full scan? For fast lookup you need some kind of HashSet which stores values in nodes and each node contains key, hash, fake value (HashSet implemented on top of HashMap) and has overhead for Object itself. So it will be 40 bytes for node itself and 24 bytes for IP value. So million IPs in HashSet will take 64 MB with huge memory fragmentation
I suppose you would exceed 10MB with ipv6, considering that would result in 16 MB.
A single long can store all bytes of an IP address. Keep them in a sorted contiguous array and lookup using binary search. For better speed and further reduced memory usage you can create a tree. First level allows 255 byte nodes and each one can have 255 byte child nodes. 4 levels of that can store any IP. A new IP will likely need an additional byte at the lowest level. Easy, fast and doable in a few hours.
Makes me feel lazy for only typing the right-hand side of the code and then using Ctrl+Alt+V to create the left-hand side (and add the semicolon for me)!
&gt; Groovy's dynamic nature is phenomenal for testing. &amp;nbsp; &gt; I rarely use dynamic typing in my tests. Whats the other dynamic nature other than typing?
Can you elaborate or refer to some process? I want to learn hopefully
Improving existing conscructors with built-in literals is fine but user defined? Terrible idea.
We are using Lucene index for anything search related and coming from a huge data set. Though that might be overblown for your purpose or not fitting your usecase. Then you could consider a [caching](http://www.ehcache.org/documentation/2.8/apis/search.html) library, I suppose they can handle it? Idk.
I think basically you want the drainTo method. In more detail you can use a BlockingQueue, use the take method to wait on the first value and then use the drainTo method afterwards. Basically, var commandBuf = new ArrayList&lt;Command&gt;(); for (;;) { var command = commandQueue.take(); command.execute(); commandQueue.drainTo(commandBuf); processCommands(commandBuf); } Keep in mind the order drainTo puts stuff into the temporary buffer so that you don't run commands in reverse accidentally. Alternatively you can directly use a simple boolean semaphore to signal a wakeup. Usually I use a monitor object and a boolean to implement a simple utility class. var commandBuf = new ArrayList&lt;Command&gt;(); for (;;) { hasSignalSem.pollForWakeup(); commandQueue.drainTo(commandBuf); processCommands(commandBuf); } There's a few other ways to do it.
Need to show concrete example usage in the documentation if you want to get more than 0 stars.
Library follows the Spring Boot standards, the usage is same as every other Spring library, eg Spring Data, Spring Cache etc. I think every Spring developer will know how to use it :) 
It would make sense if you view it like a Guava ImmutableList.Builder. Like you want to have an object where some other method can (repeatedly) add elements too without needing to access or change the existing ones.
If it is ipv4, create array of 0.5 gb in size, and have every bit represent an ip address. Fast lookups, fixed memory requirements.
I still can't really figure out its usefulness. So you can add objects but never read them. sounds like /dev/null could be a reasonable implementation of that list. What should happen with that unreadable list if nobody can access its contents?
Sparse bit set.
Interesting idea. Probably should try it
Best idea so far. Should check how sparse are IPs
Well, ImmutableList.Builder allows you to create a readable copy of that list once you're finished. 
Multiple arrays, covering predetermined IP ranges can be even better. And smaller overall. And faster when search. 256 arrays. No entry at all? No array to store. 
&gt; It hides your IO boundaries which can be disastrous. This is because it conflates your object model with the Database model. This problem isn't exclusive to hibernate (most ORMs have it). I don't get how can anyone say that this is a con of hibernate. That's the fucking point of hibernate, mate!
Probably not the most memory friendly but you could initialize a series of hashmaps doing a lookup per IP value. I'm not the best at data structures, but at least that would likely be very fast for lookups.
I implemented something like this for 8 million ipv4 iOS that I wanted constant time lookups on: Convert up to 32bit isn’t and use that as an index on a bitmap that’s 2^32 big, there’s multiple libraries that let you store large sparse arrays compactly, I tried RoaringBitmap (https://roaringbitmap.org) which worked great .. i think it only took up like 10-20mb of ram compressed and it could support ranges (future needs will include subnets/ranges)
Fan of Java as a platform and language here. Can you use Graal for dynamically creating new classes and running them inside an already running Java process. Or is there a better tool for that? As a thought experiment, I launch a Swing UI and it records mouse movement. The app would use Graal to generate randomized graph code and run it as machine code. The idea is to run Graal inside a self learning Artifical Intelligence that could learn to create faster code by trial and error and/or using heuristics. Now that I come to remember your main point, Graal is just transforming input byte code into machine byte code, it might not help so much. Except maybe if Graal also provides the Graph class you were talking about in the video to represent the Java code. Not that I have the programming skills to do that. 
Not very, IPv4 addresses are mostly exhausted.
&gt;with **millions** of entries and check **incoming** IPs 
Understanding anything in more depth is useful as it gives you better intuition. As far as Java is concerned, this doesn't apply just to bytecode: it is also useful to understand how the GCs and JIT compilers work. But you can put bytecode for good use directly by with libraries like [ASM](https://asm.ow2.io/) to either generate code at runtime (for better performance) or to transform classes in Java agents to do all sorts of useful stuff, like injecting monitoring/profiling code. Sure, this is relatively advanced stuff, but it can give you a much-needed edge when the need arises.
&gt; Can you use Graal for dynamically creating new classes and running them inside an already running Java process. Or is there a better tool for that? You probably want to use the ASM library for that https://asm.ow2.io. &gt; The app would use Graal to generate randomized graph code and run it as machine code. Like superoptimisation? Could do... graphs are pretty complicated, might take a while to generate a valid one even!
That's called a BitSet.
You've got the confirmation bias in the title of the post. "Why is it a useful skill." It sounds like you're asking where you can buy java penis enlargement pills. 
Thank you for GraalVM. To me, it is the most exciting technology in the Java ecosystem. Are there any new languages that is being planned to be implemented on GraalVM? How much of GraalVM do you think would find its way into OpenJDK?
It's just that I can't see how understanding something more can be useless. And as a lot of comments explained, it is indeed an useful skill, so what's the problem? &amp;#x200B; I'll use those pills to f\*\*\* you up good.
I cannot get it to download. I keep getting a timeout message. 
Is this for a non server use, or do you just feel like this "shouldn't" require so much memory? If it were me, I'd throw a few dozen MB around to put this in the pile of "optimize later if we need to". At least in server land, we default our max heap size to 1G just as a matter of course. And if I can buy simplicity and speed with a few dozen MB, I consider that memory well spent.
Thank you for the detailed response! Lately, I've often found myself using functional interfaces, but sometimes I feel like creating my own functional interfaces for everything is a bit much... after all, I can often do with `Function` or `BiFunction` or whatever is appropriate, sometimes also `Function&lt;T, Function&lt;&gt;&gt;` or whatever nested type with sprawling generics I need. I'm not really sure, on one hand, I like the improved auto-completion I I get when I use dedicated functional interfaces, on the other hand, it sometimes feels like I'm introducing unnecessarily many dummy interfaces. Sometimes I do one, sometimes I do the other, haven't really found a good way to judge when I want one or the other yet. Of course, another benefit of interfaces is documentation, clarity and getting custom default methods for some transformations akin to `thenComparing`. So my thoughts about complex generic types were mostly about functional stuff, or some clever generics trickery to write DSLs or using phantom types. I can relate to your point about not exposing (too many) implementation details... Actually, I've been trying to approach this from "the other end", lately: When doing unit testing, we often constructed objects and related objects in the correct state. To do that, the setup code for these objects would essentially be full of implementation knowledge to get all the bits and pieces directly into the shape they need to be. These days, I often prefer to write a mini-DSL that directly expresses the intent rather than the state I'm constructing manually "accidentally" being the right internal representation. That way, when the internal model changes (lately, it's often been a of *when*, not *if*), it's evident what the setup in the test is supposed to do, and as long as if there's no conceptual change to what's being tested, the user-facing part of the DSL usually remains untouched, only some internal workings need to be changed and all tests can keep working reliably. Of course, that's can be some effort to set up and now you might need tests for the DSL to setup tests... As an example, I'm currently doing some stuff with family allowances and we now need to model children being part of a family for a limited time. This isn't actual code, just something I randomly threw together for the purposes of this post: family(parent , child(born(2018, 5, 10) , adopted(2019, 3, 1) ) , child(born(2018, 5, 10) , givenUpForAdoption(2018, 5, 13) , naturalChild(from(2021, 1, 1)) ) ) With this, it's also quite straight forward to see what the constellation we're testing looks like, the intent is right there, and there aren't any implementation details like how relationships need to be initialized etc. It's almost a bit Cucumber-like, I guess. &gt; For example, did you know that a submap of a navigable map mutates the parent map when modified... ask me how I know this. Nope, I didn't know that but I hope I'll remember it/remember to check when I use that.
In order for it to be interesting to non techs, you'll need a latch point. A link from something they know to something you want them to know. Come up with a problem that they understand that needs solved and properly define it at the start, for instance a text based adventure game and "we are going to write an adventure game in the console, where we can navigate the world with commands". Then show how you would create an OO solution to that problem, explaining concepts as you go. That way, each technical detail can be "latched" to something they understand, like a level or a character or the interaction between the. This means they leave with a better understanding, nobody felt over their heads and without really remembering all the terms they can say things like "what happens if you say 'fly north' rather than 'go north'?".
A BitSet seems like a good solution for this problem. You can even give it a predefined size, so it covers the whole IPV4 range.
🥳
I only work on one bit of GraalVM I should say - there’s about 50 other people behind it. Nobody’s yet tried an entirely new language on GraalVM - that’d be very interesting to try. Graal is actually already in OpenJDK for the AOT tool and can be used experimentally as your JIT compiler.
It's my burthday too. Happy birthday spring framework and me. 😃😃😃😃😗😗😄🎂🎂🎂🎂🎂🎉🎉🎉🎉🎉🎉🎊🎊🎊
Best framework ever!!
What's the best way to learn Spring? I'm more of a depth-first person. I just don't want to cram APIs/Annotations without getting a high level understanding of how they work. I went through many online resources but always its like "use this annotation to get this done" kind of tutorials. Even at my work place people are jumping onto Spring boot even without having basic understanding on the underlying concepts like DI, IoC etc.. I really can't appreciate this because I want my knowledge to be portable, tomorrow if I'm working on a completely different project in a completely different language which doesn't have nearly as rich framework as Spring, my concepts should still help me to get to the solution. What resources/learning paths would you recommend a complete spring newb from a depth first perspective. 
Happy birthday :D
https://docs.spring.io/spring/docs/current/spring-framework-reference/core.html#spring-core pretty good place to do start IMO
Except the ipv4 range of incoming addresses is not going to be evenly distributed depending on your application (e.g receiving log data from IoT hardware only sold in canada.) Different blocks belong to different organizations, countries, kinds of traffic and so if your incoming search space is only in the millions, allocating for the entire 4.3 billion addresses is likely memory wasteful. This is why I originally suggested elsewhere here something called a sparse bit set. Think of an array of bitsets; where you don't need to allocate a bitset for a range you never hear from. 
I have been using the Spring framework for the past five years, it has been great to work with. I started by using Dependency Injection, then Spring MVC, properties classes, Spring AOP, and Spring JDBC. I started using Spring Boot last year and find that it makes enterprise development even easier (including testing). It's well documented and it's emphasis on convention over configuration makes it easier to get started. If you are doing enterprise Java development give it a try, even if you only use DI and application properties support, it will ease testing and encourage better separation of concerns. 
The book Spring In Action helped me understand core concepts like DI and MVC. While all the XML wiring is no longer needed with the advent of Spring Boot, reading about 'classic' Spring will give you a better understanding of the concepts. 
&gt; but always its like "use this annotation to get this done" That is Spring in a nutshell. People that use spring all the time barely know how to write code. They just want the magic spring annotation that does it for them.
I think you meant the most bloated framework ever.
🤮
Thank you for the unparalleled productivity, after Spring Boot was added..
Nope. 
I've only been using Spring/webflux for the last 4 months, but I'm absolutely in love with dependency injection and Spring's overall paradigm. The number of times I've written something I think should work (i.e. 'I wonder if I can inject a list of beans that all implement the same interface type') and have it run on basically the first go is incredible. There are times in which some of the design decisions are made for you, and an opinionated choice was made; however, I've found that if much rather get the benefits of Spring over not using the framework.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
I'd rather spend my time thinking on the implementation of my controller rather than how to map it to an URL. 
Thanks 😀😀😀😀
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
People use Spring to skip the boring, repetetive part of coding. It lets you focus on the interesting bits, i.e. the business logic.
I'm a student that's been using Java for 2 years now, and I'm just wondering if it's worth it to learn Spring? I just used Swing for a project last semester and it looked so outdated, are these old frameworks still even used?
Will definitely check it out, Is it a good idea to start with spring core 1, may be small surface area would make it more approachable to clearly understand what's going on under the hood?
Swing is an older UI library that doesn’t get much use these days. Spring is an application framework that is used all over the place and is constantly improving, it’s definitely worth your time if you want to get a job being a Java programmer. 
OMG I am so old :( I’m not even a spring expert, I just always run across it.. 20 years doin Java, with dabbles of PHP in beteeen 
If you want to list Java on your resume when you graduate, having Spring right after it is a major plus IMO. Even if you don't get a lot of experience with it you should try to grasp the concepts of the framework and understand what it can be used to accomplish. And, yes Swing is still in use some places. But so is COBOL so take that as you will. 
I recommend you develop a simple web service that uses DI, properties with some Spring SPeL. This will give you insight into basics. You can then add an Interceptor, your own annotation with Spring AOP. Wherever you choose to start, always reinforce your understanding with hands on coding 
Late to the party but I was in the same situation at work and these 2 sources were the best, especially Bealdung.
Thanks! I've been looking for tools to learn to make myself more competitive in the job market, I'll have to take a look at Spring then 
My concern is, the moment I go for an end-to-end application, I would have to deal with spring rest, spring-data-jpa etc. which would enormously increase the API surface area. I really want to approach Spring framework with a bottoms up approach. I want to really appreciate the value proposition of DI frameworks in general, with spring-core as my first choice of implementation. I would even like to compare other DI frameworks with Spring core \[once I get comfortable with spring core\]. &amp;#x200B; I'm just thinking out loud, I wonder if this is doable for a Spring newb, or would I be overwhelming myself with so many details that I dont make any real progress at the end. Pls suggest. 
I think you'll find that if you build on top of a simple example like a web service, it will not be overwhelming. You can work at your own pace, but the most important thing is to actually get started. Your web service does need to do anything initially, just return a String. Then learn how to process path and url parameters. Follow that with learning how to support REST verbs beyond a simple GET. You can then learn the different forms of DI by injecting a simple class into your web service controller 
I think you'll find that if you build on top of a simple example like a web service, it will not be overwhelming. You can work at your own pace, but the most important thing is to actually get started. Your web service does need to do anything initially, just return a String. Then learn how to process path and url parameters. Follow that with learning how to support REST verbs beyond a simple GET. You can then learn the different forms of DI by injecting a simple class into your web service controller 
Got it, thanks for the advice I really think it hits the balance between concepts and complexity.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/coding] [Deduplication trick in legacy code](https://www.reddit.com/r/coding/comments/b4ymyf/deduplication_trick_in_legacy_code/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Or simply put all items in a map with the id as key then call map.values()
I must be missing something. What's wrong with: List&lt;LegacyObject&gt; dupes = ...; Set&lt;LegacyObject&gt; deduplicated = new HashSet&lt;&gt;(dupes);
Also, if it’s just a sample/learning application, replace the JPA part with a hard coded set of data that’s just a POJO.
In my or our project team‘s case the reason for switching to IntelliJ in 2017 was NetBeans comparatively weak support for Gradle and related dependency injection with Dagger 2 was also problematic. But I like NB. It requires the shortest time to get productive. 
You should omit the spaces in the classpath: java −classpath "classes;lib\∗" ch.bitwave.ort.driver.Headless
Yep, that fixed it. Thanks. Feel like an Idiot, lol
That's really smart, good thinking! So the whole class business can be replaced by: var deduped = duplicates.stream() .collect(Collectors.toMap(LegacyObject::getFoo, o -&gt; o)) .values();
+1 The moment I read this I started to really understand what was going on. Great at read and very interesting.
Immutable means cannot be changed. Final doesn't mean immutable. Final means the reference cannot be changed, however the object being referenced can be. Take a final List, the reference may not change but the contents of the list still can, so it's not immutable. In terms of streams, I know the original list itself isn't changed by any of the stream methods. If you want a list with the result of the stream methods, you need to collect() into a new list. However, the contents of the original list, if they are mutable, can be changed and those changes will affect both the old and new lists. Lazy means content is loaded upon request. In the context of streams, this means that it will only iterate as many times as is necessary based on the stream methods you call. If the stream represents content on disk, such as BufferedReader.lines(), then the content from the disk will only be loaded if the stream methods cause enough iterations to reach it.
Upvote for JCIP. I never realized how great that book was until I got my first job in the industry and realized how many of my co-workers were writing bad concurrent code. Also, the comment about the collections interfaces is something I like about Kotlin, since it separated List and MutableList into separate interfaces.
Scala too - I didn't wanted to mention it in order to keep down language battles 😉
As a Java EE guy, Spring has a lot in improving the entire Java ecosystem. Here's to many years more of amiable competition.
I just had a 33 inch turd.
The \`hashCode\` of the \`LegacyObject\` doesn't use the correct fields the author wants to filter by and \`LegacyObject\` can't be changed.
Spring is just about the only reason Java is still alive today. I've never heard of company that used Java and didn't use Spring. I don't have a lot of experience in the field, so take that with a grain of salt, but this is what I've heard from others as well.
Oh, I missed that part of the wrapper implementation. Thanks.
Enterprise Java dev, don't use spring. I'm planning on learning it to have on my resume if I ever want to leave my current job but we don't use it at my current company.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
So far I've been using the helper predicate proposed [here](https://stackoverflow.com/a/27872852/3409441): public static &lt;T&gt; Predicate&lt;T&gt; distinctBy(Function&lt;? super T, ?&gt; byExtractor) { Set&lt;Object&gt; seen = ConcurrentHashMap.newKeySet(); return t -&gt; seen.add(byExtractor.apply(t)); } and can then be used as following: legacyObjects.stream().filter(distinctBy(LegacyObject::getFoo)) Though this solution violates the contract of filter method which predicate must be stateless as stated in JavaDoc. 
Nice. Could use `Function::identity` instead of `o -&gt; o`, for all that prefer method references.
What are your interests, other than programming? Think of something to write that meshes with your current interests.
Well coding is my only interest haha. But ok let’s say fishing. Here’s the problem, let’s say I want to build a fishing simulation. I want to handle the boat starting, the boat speed, the use of the fishing rod (when to take it out, when to cast, when to reel in), drive the boat back based on time of day, etc. I can do this using simple getter/setter methods, maybe a few function with if else statements, some classes, etc. How does this improve my coding ability? I already know all this stuff?
toMap throws IllegalStateException on duplicate keys, so you need to provide a merge function. Here we simply take the later element: var deduped = duplicates.stream() .collect(Collectors.toMap(Person::getName, o -&gt; o, (v1, v2) -&gt; v2)) .values();
Exactly. You know how to write the simple parts, but not the bigger picture stuff. Like how to do automated testing and dependency management. So let's start there. With some type of fishing app, can you think of any open source software you would use? Instead of writing everything yourself, is there something you can leverage to do the menial tasks?
Well not really I don’t really know if any open source software. Do you?
What would you do if you had to write to a database? 
I actually have no idea I’ve never used one with java. I guess that’s where I should start right?
Agreed. I'd recommend you read this: https://www.baeldung.com/java-jdbc
Ok thanks, this is for sprint another thing that was asked about in my phone interview 
&gt; Every time I look for a project to make all I find are ideas for card games or bank simulations or whatever, I don't know how thats going to improve my skills. How are your testing skills? A common theme that I see with new grads is that even though they had classes that covered unit testing they only covered the very basic concepts at a superficial level. It's very likely that a lot of code that you write will require tests so this would be a good thing to spend some time on. At least having a basic familiarity with TDD and mocking tools (Mockito for example) would be a plus in interviews. &gt; I also know you have to know maven, jenkins, spring boot While becoming familiar with Jenkins could be useful, I doubt a new grad would be expected to know the details of specific CI tools initially. &gt; Im watching a maven tutorial now but I dont get what I can do with this that I cant do with plain old eclipse. In a small single module project with few dependencies it's unlikely that maven would be worth the effort. In multi-module projects with lots of dependencies it helps a lot. Dependency versions can be managed in a parent pom.xml. Running 'maven clean install' takes your IDE out of the equation and helps avoid "Well, it works on my machine". 
My advice is to write a piece of software you think is cool. Learn to search online for "holy shit how do I do this next step." The need for that skill never ends. Right now, concentrate on learning automated testing. That will force you into Gradle/Maven. 
So I don’t actually know anything about testing. What are dependencies and what do they do?
Gotcha 👌
Interesting, is Enterprise considered “legacy” at this point? I mean I use Spring with SWT so my stack isn’t exactly modern either 
JUnit, Spring Boot are examples of dependencies. Any library or framework that your code uses is a dependency. You can specify the version of spring boot that you want to use in a pom.xml file and maven can manage that dependency. For getting started with testing: https://www.vogella.com/tutorials/JUnit/article.html I found these sites very helpful when trying to get up to speed with commonly used frameworks: https://www.mkyong.com/tutorials/ https://www.vogella.com/tutorials/
JetBrains' products use Swing for UI.
Thanks! It's not the first time that this `IllegalStateException` bites me, I always assume it would behave the same as the corresponding for-loop with `put`-calls. And it also doesn't allow `null` values or keys, which is also different from `HashMap`.
It very well might be. I'm only three years into my career and it's been with the same company, so I don't have a lot of insight to the rest of the Java ecosystem out there. I just wanted to throw my two cents out there that there are companies that create successful products using Java without leveraging Spring. Our stack is definitely not modern (we use Adobe ColdFusion as our app server) but even once we migrate off of CF, which we are actively doing, we will be a long way off from migrating onto Spring. If we ever do.
So after looking at the website and googling gradle and maven tutorials I am still not sure what to do. I feel like I’m lost and all I need is for someone to just point me in the right direction and guide me little before I go out on my own.
So after looking at what you sent me I still don’t know what to do with myself. I feel like I just need someone to guide me just a little bit then I can paddle on my own. I’m lost I feel like I’m going in circles looking at tutorials for things I don’t really understand 
Ok, start with unit testing. Solve an easy problem at /r/dailyprogrammer/ and write tests for them.
Ok I guess I’ll try that. I’m just so frustrated I keep getting turned down for jobs becuase I don’t already know this stuff or don’t know enough backend java or don’t know whatever. I don’t know this stuff cause I had no teachers or employers to teach me this and I’m even more frustrated cause I can’t get this this unless someone can just sit down with me for 15 minutes and just explain it. What other profession are you expected to have experience with things you never been expected or required to use. You never hear a doctor get turned down because they didn’t cut open enough bodies in their free time. No they get taught what they need, get picked up by a hospital and learn. 
What about backend java work? I got turned down for not knowing that. I don’t even know how to begin that. I keep watching these obscure Indian tutorials and I’m still not getting how I can practice or use this. This is crazy, my entire software development teachings in college were literally just sorting algorithms, binary trees, sql statements, and basic methods. Not once did I ever hear of maven, spring boot, backend java work or anything like that and now I’m on the verge of not getting a job before I graduate 😓
&gt; I keep watching these obscure Indian tutorials and I’m still not getting how I can practice or use this. Maybe sign up for a free trial at pluralsight or lynda.com. Their tutorials are much higher quality in my experience than anything you'll find on youtube or the like. They often have downloadable exercise files so you can follow along.
God I really hope so cause I just want a job already, i seriously feel cheated right now. I’m being interviewed on things way more advanced than anything I was taught and expected to have projects under my belt now I’m framing everyday on top of studying for my GRE, homework/tests, and working on my iOS application just so I can find a job 
As long as you never ever save a password in any form in the field named password... &amp;#x200B; Well, ok, not sure if using all those boolean columns (and additional ones when your application expands in the future) for the permissions, is so great, but have no evidence that it's bad
It may be worth considering applying for internships. These skills take time to develop and trying to do so without guidance and under time constraints will be difficult and stressful.
Tell me about it but I don’t have an option. I’m about to graduate I absolutely need a job ASAP I can’t work at an unpaid or low paying internship 
Offtopic, but : Use int to store multiple boolean value. http://blog.millermedeiros.com/using-integers-to-store-multiple-boolean-values/
The short answer is “business”. I spent 20 years as a developer, system architect, and development manager and I can tell you that although the skills you listed are important, they are not necessarily the things that most employers are ultimately looking for. Coding is kind of a baseline skill — it’s expected that a developer can code and can adapt to whatever framework/language/environment the business is using (and there are LOTS of different ones out there). The thing that will maximize YOUR value to an employer is your ability to APPLY that knowledge to solve a BUSINESS problem: manage a customer base, track sales and inventory, automate a process that is now being done manually, provide analysis/reporting/metrics to help determine if the business is profitable, etc. First, if you don’t already know it, learn SQL and how relational databases work — there are lots of free ones like MySQL and PostgreSQL, and even MSSQL can be run for free in a Docker container. Learn what a CRM system is and how to model a customer database. Build a web site that a business might use to sell stuff on the web — how would you process credit card payments securely? How would you model their products/catalog in the database? How would you handle the shipping/fulfillment process? How would you design the site so that it doesn’t require a developer to make changes when new products are added? How do you do all of this and guarantee ABSOLUTELY no data gets lost or corrupted even when your site has hundreds of concurrent users? These are the kinds of issues that most developers deal with on a daily basis. Congratulations on your graduation — it’s a terrific accomplishment and you should feel justifiably proud of what you have done. Good luck. You got this.
There are a few good Udemy courses, like $12 on sale now for a bunch. I like this one: https://www.udemy.com/java-spring-framework-masterclass/ 
I feel terrible about what I’ve done I’m about to graduate and know nothing. I have no experience in maven, spring, node.js, any frameworks, I have no projects to tell my employers about. I know absolutely zilch, nothing I need to know was ever taught to me by my professors and now I’m on the verge of not having a job by graduation. I’m scared as shit not understand anything I’m trying to understand. I don’t understand maven I don’t understand spring boot I don’t understand how to use sql with java I don’t understand how to build an application with java I’m absolutely useless to any employer and I’m scared about my future. I watch video after video, read article after article and don’t understand any of it then when I go to an interview and they ask me what projects I’ve done with spring boot or what java backend experience do I have I have answer. I do not know what to do
&gt; Im watching a maven tutorial now but I dont get what I can do with this that I cant do with plain old eclipse. Without maven, get all of the jar files needed to write a Spring application. Give it a try... its what we used to have to do in days of ant. I've got a script I used for updating a wiki on reddit. Its dependency section looks like: &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;net.dean.jraw&lt;/groupId&gt; &lt;artifactId&gt;JRAW&lt;/artifactId&gt; &lt;version&gt;1.1.0&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;oauth.signpost&lt;/groupId&gt; &lt;artifactId&gt;signpost-commonshttp4&lt;/artifactId&gt; &lt;version&gt;1.2.1.2&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt; &lt;/dependency&gt; &lt;/dependencies&gt; The rendering of the dependency tree for this is https://i.imgur.com/Sbl7PVT.png - and frankly, that's not a tree that I want to go out and download by hand. Maven ensures that the environment that I use has the right dependencies. It also ensures that if you were to get the pom file (and the rest of the project), even though I work in IntelliJ and you work in Eclipse, our environments will be the same. Why use Spring Boot? That ensures that I can easily build the application with the wired in components from a property file (and commit that). The @Services that I write can easily be rewired for testing (so I don't annoy anyone looking at the page with test data). --- &gt; Every time I look for a project to make all I find are ideas for card games or bank simulations or whatever, I don't know how thats going to improve my skills. Actually... a bank simulation is an excellent one to write as a "I want to learn more about..." Spin up a database. Learning docker is good too. You don't need to use a real one, an in memory one that comes with Spring Boot would be sufficient, though having a "real" database outside can make for a more convincing demo of your skills and something to tinker with. My go to for a tinkering project is a school. I'm going to also encourage you to learn a front end framework, though that's not essential. You could do all of this with [postman](https://www.getpostman.com) and work from rest APIs sending data rather than html around. So, create a [rest service](https://spring.io/guides/gs/rest-service/) that responds to a POST request and creates an user. It starts out with $0.00 in the account. Now create a PUT request that updates the amount in the account. Next, update that PUT request that updates the amount in the account to keep a transaction log (in the database). Then, create a GET request that gets the full transaction log for the account. And keep going from there. How does this improve your skills? Because it is practicing the design. How do you change the code? What do you do when you have a bad design? These are lessons to be learned (I have a dozen branches of various school implementations where the design went afoul - its important to recognize a bad design even if you wrote it). Update it with multiple types of accounts - savings, checking... multiple savings accounts. Expand so that the savings account gets compound interest calculated properly. Update it so that it has overdraft fees and such. Port that mess that has been written so far to a business rules engine. Dealing with money is a massive set of problems - and they can be interesting problems to solve. Consider [why payroll is hard](http://wiki.c2.com/?WhyIsPayrollHard). --- You will be a beginner as long as people tell you how to write the code. You will only get better at writing code on your own by [making mistakes](http://thecodelesscode.com/case/100) - they are essential learning experiences. After you've done enough design and made enough mistakes, then you'll be able to say to others how to write code.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Try https://www.udemy.com/java-the-complete-java-developer-course/?locale=en&amp;bw=hb&amp;device=mobile#instructor-1 for the Java Programming Masterclass for Software Developers by Tim Buchalka. You can often pick up his courses for $10 This one has 77 hours of good video and they are well crafted. He goes into the basics of Java with Databases, testing, network programming etc. Hopefully it would give you a head start on these topics. https://www.udemy.com/user/timbuchalka/
Solve the problem then. Go look up some tutorials for Spring Boot. Set yourself a modest goal of something like "Write a calculator app that is exposed through a Spring Boot app". Write that application using Spring Boot. Put this project on your Github page. All the other stuff people mentioned are incredibly important too. I'd seriously recommend reading up on unit test (using JUnit), what Test Driven Development is, and try create a project using it. Go learn about relational databases, and set up a project which uses a database backing. Cloud is incredibly important too these days. I'd be very happy if a candidate had some Cloud experience. Go create an AWS (Amazon Web Services) account. The free tier should allow you to rent a Linux server. See if you can put your Spring Boot on there are expose your services to be called. Linux is also very important too, if you haven't used Linux, install Linux (Ubuntu would be a fantastic starting place) and learn learn learn! There's a million other things too, but the above will get you in a really good place. There are non-technical things you really need to know about too. Go look up common interview techniques. Go look up common ways tech interviews work. 
&gt;As long as you never ever save a password in any form in the field named password... &gt; &gt;&amp;#x200B; &gt; &gt;Well, ok, not sure if using all those boolean columns (and additional ones when your application expands in the future) for the permissions, is so great, but have no evidence that it's bad Password is salted and hashed with PBKDF2, which is stored in the column. I've been looking at ways to map this type of security behavior to Spring, but there doesn't seem to be a clear cut way (or something similar).
Wow. Ok....first, take a deep breath. It’ll be Ok. I know graduation is a stressful time (been there, done that), so I’m going to give you a bit of advice I’ve always told myself any time things get overwhelming: “*Some days you eat the bear and some days the bear eats you*” EVERYONE begins to question their life decisions and feel inadequate when they are faced with that cap &amp; gown. But one thing I can tell you is that no employer (at least not one worth working for) expects you to know EVERYTHING. The truth is your REAL education doesn’t even start until you are out of school. Don’t try to tackle everything at once...start with some simple SQL and JDBC (the library Java uses to talk to databases). Those are probably the most important skills in a general business environment and the basics are pretty easy to grasp. BTW, if it makes you feel any better, I don’t know Maven either...I’ve NEVER had a need or use for it and it always struck me as an over-complicated mess. Your time would probably be better spent learning how and why to use a version control system like git. 
Yes, please. Extremely helpful.
unfortunately a computer science degree isn't always the best at teaching you to be a good software developer. ultimately, many computer science degrees prepare you for studying computer science academically, but are disconnected with what's needed in the workforce.
Kinda wish I knew that years ago so I could practice more
Solid JEP right here. Super useful. Targeted at a real problem. Well defined. Already has a working prototype. Doesn't get much better than that. 
Fuck. Yes.
https://www.baeldung.com/spring-security-expressions
this will get me to upgrade from java 8
We need this in the next LTS release
Yeah that's gonna be a /signed from me
Is there a reason why this couldn't have been done 20 years ago?
From the JEP: &gt; The basic implementation is in use in SAP's internal Java virtual machine since 2006. That's pretty cool.
Personally I define a json file I parse with Jackson. I then define a PermissionNode class which implements GrantedAuthority, and has a single String field per node. These are stored in a map of groups in a HashMap&lt;String, Set&lt;PermissionNode&gt;&gt;. &amp;#x200B; I then have a class which extends UsernamePasswordAuthenticationFilter. In the attemptAuthentication method when returning a UsernamePasswordAuthenticationToken (if it's appropriate to do so) I get the user group, autowire in the map, then the Set&lt;PermissionNode&gt; is passed to the UsernamePasswordAuthenticationToken. &amp;#x200B; This sounds like a great deal more work than it is when reading all that. 
Performances. The kind of metadata that is required in order to be relevant when java is compiled with debug symbols. Nowadays, it is no longer an issue (on the contrary, some framework won’t work without those symbols), but in the early days of java, the JVM was a behemoth compared to the power of the computer it was expected to run on. 
Doesn't java already state in which line the exception occurred?
Yes, but that's where the information ends. If you have a deep accessor in one line (`user.getGroup().getRole().getName()`) then you'll have to debug separately to find out exactly which accessor threw the NPE.
YES!
OpenJDK doesn't have an LTS. Oracle's JVM does. OpenJDK 11 is community supported now.
Hmm our code already has checkNotNull(x, "x") on zillion places. This will mean a lot of refactoring...
man... and here i am thinking that spring magic is terrible and there are still coldfusions in development
People complain that Spring isn't lightweight, but it is compared to JavaEE 5, in the same way that LDAP is lightweight compared to x500. Those early versions of EE were terrible to get anything done and are the reason people make `AbstractFactoryBeanFactory` and XML overload jokes. Spring dragged EE into something actually useable. To the point where EE is similar in weight to Spring, but it's the one that's slimmed down, not Spring getting fatter. (The framework might have gotten larger over 15 years, but the programming model has gotten much smaller over the same time frame; you can make a valid Spring Boot application in a single class these days)
i don't get it. how people can like DI/IoC or any annotation magic.
Java streams are lazy evaluated. The alternative is to be eagerly evaluated. JavaScript uses eager evaluation. var list = List.of(1,2,3,4,5,6,7,8,9,10); var squares = list.stream() .map(n -&gt; n * n) .limit(3) .collect(toList()); The resulting list will contain 1, 4, 9. In an eagerly evaluated system, we would have calculated all 10 squares and then thrown away the last seven answers. In a lazy evaluated system only the first three squares will be calculated because they're only run when you have a terminal operation, which in this case is the `collect()`. The `limit` operation only requests three values from the stream before telling the collect operation that the stream is complete. 
Decent article but nothing profound.
I looked up some examples of SAP stacktraces involving NPE: &gt; java.lang.NullPointerException, while trying to invoke the method com.sap.aii.mapping.api.TransformationInput.getInputParameters() of a null object loaded from nfe2b.test.XmlNFe_To_Mail.input of an object loaded from local variable "this" &gt;java.lang.NullPointerException: while trying to invoke the method com.sap.isa.core.eai.BackendConfig.getId() of a null object loaded from local variable 'config' &gt; java.lang.NullPointerException: while trying to invoke the method java.lang.String.length() of a null object loaded from local variable 'string'
&gt;Author: Goetz Lindenmaier At first thought he is a relative of Brian Goetz, but then thought a little bit more.
Yes yes yes!!, 
Amazing. Could it also explain purpose of life.
Your fishing simulation feels like more of a game. Listen to what others in this thread are saying about solving business problems. Let's look at your fishing simulation as more of a business. You have people doing the fishing (producers) and restaurants buying the fish to serve at dinner (consumers). So what goes in between so you can scale this? You don't have restaurant workers chasing around fishermen negotiating sales, no, restaurants go to markets for their business. Markets are built to make sure the first stuff in is the first stuff out (a queue). They're also built to handle taking in many loads of fish and to fill many orders from restaurants (multithreading). Okay, so sounds like a pretty standard business application that can easily be written in Java. You'll want to use either Maven or Gradle for dependency management and to build the jar. Both have the same folder structure and easily allow tests to be written. You can put a dependency on any library and Maven or Gradle will automatically download it for you from Maven central or JCenter. When I first learned this I was amazed too. Try gradle. If you're on a mac, "brew install gradle" to install it. Then "gradle init --type java-application" to scaffold a template. Maven also has the same thing, see https://maven.apache.org/archetypes/maven-archetype-quickstart/ Anyhow, so you need to be able to handle lots of producers (fishermen dropping off their hauls). You can write a REST api with Spring Boot which uses a thread per request (the servlet based version). In the controller you'll want to put that "haul" in a queue, try RabbitMQ. So you know Java the programming language, you also need to know tools, like RabbitMQ, Elasticsearch, Postgresql. Make it a point to learn what problems these solve. Anyhow, so the haul ends up in a queue (the market). Consumers will need to read off that queue (restaurants), so create a thread which continuously trys to read from the queue. thread.start(). When it grabs something off the queue, pass it into a worker thread's constructor, which implements Runnable or Callable, then pass that worker object into an Executor. The worker's run method will essentially be the restaurant picking up the haul, loading it into the truck, making payment, and driving away. However you want to envision this. The whole point of this is that example of a business approach to your fish idea is a highly scalable business application pattern that's used practically everywhere in business web applications. Want to spin up a VM on AWS EC2? You send a request which ends up talking to Amazon's rest api, which ends up in a queue, which ends up in a worker thread handling the VM's creation. It gets even more fancy than that. Imagine what goes on inside of an e-commerce web app and all of the stages of processing. 
Love the idea of creating a REST-API with a database. From what I've found, this is the bread and butter in my career as a very new developer. 
I've hired many people straight out of uni, they never know the technologies that they need to. Don't worry. I left uni thinking I knew it all, then I got hit with enterprise frameworks and I realised uni was close to useless for a job in programming. &amp;#x200B; Just make sure you're good at what you know and try and pick up the basics of some stuff like dependency, framework, logging and ci frameworks. Know you're language, how to solve problems in it well and be familiar with a few others. That's all anyone wants of you straight from uni.
Then it makes sense to write something more readable like UserGroup group = user.getGroup(); GroupRole role = group.getRole(); role.getName(); Of course it's more boilerplate, but it's a workaround of some kind. Also I don't quite imagine in which situation you want to go that deep in a get chain in single method All in all, nice and helpful JEP, but don't need to dramatize it's absence in the olde versions.
&gt;Don't learn to code, learn to automate. Hypothetical scenario's like a bank vendor machine or what ever can be good for learning initial concepts and give some external context but ultimately isn't useful, the majority of employeer's already have a system in place that they want extending/enhancing/optimising. What employeer's are after is utilising your programing ability for real-world practical applications. Obviously if you haven't worked in a bank you can't be expected to have experience fixing banking problems. However being a person you have your own problems that you can solve or improve using code. &amp;#x200B; A suitable problem to automate with code is one that is mundane, repetitive and follows a pattern. Take being a graduate for example, say every time you submitted an essay you had to go to a web page, upload the document, fill in you name and the date etc... etc... This could be automated so all you have to do is right click a document and select submit to [www.school.edu](https://www.school.edu). The script in the background would then fill the form with the preset details, upload the file and submit. Or maybe you have a favourite video-game and you want a text or notification on your phone everytime they post an update to their dev blog. Write a program for that. &amp;#x200B; It's all about finding something to make and then figuring out the tools best suitted for the task, you don't sit there and learn maven/jenkins/spring boot, they're just things you pick up as you go, and they're just automations in themselves. Maven/gradle/ant are automated dependency handling, so you have a text file of library names rather than downloading each jar and put it into a libs folder manually. Jenkins/teamcity/circleci are automated integration that updates and queues and runs a new build of your program once the previous one has finished. Automate anything and everything.
Your job as a develop is: &amp;#x200B; \- To take a problem space and engineer a solution to it \- To make sure your solution is understandable and extensible &amp;#x200B; This means practising problems and going back to your solution after a break is how you get better at this. Additionally, having others look at your code and taking criticism well, because ultimately you're writing code so that others can understand it. &amp;#x200B; Your job as a productive employee is: &amp;#x200B; \- To time box your solution with the optimal number of compromises &amp;#x200B; This means instead of writing your own collections from scratch, you use library collections. It means using dependency management frameworks such as Maven so that you spend less time compiling, updating and recording lists of libraries by hand. &amp;#x200B; This means the compilation of all three requirements adds another: &amp;#x200B; \- You need to be able to keep up to date with technologies used in the industry
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/coding] [Quarkus, a Kubernetes Native Java Framework](https://www.reddit.com/r/coding/comments/b595op/quarkus_a_kubernetes_native_java_framework/) - [/r/programming] [Quarkus, a Kubernetes Native Java Framework](https://www.reddit.com/r/programming/comments/b595me/quarkus_a_kubernetes_native_java_framework/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Kotlin isn't "fixing" anything. It's a simpler syntax and that's about it. It's only "extremely tied" to Java for the small percentage of people who have convinced themselves it's going to replace Java because the syntax is shorter. It's a post on Kotlin. There's a Kotlin subreddit. No reason to post it in Java.
You think that people subscribe to the Java subreddit so that they can be told how not to code in Java? forealz?
You will need generic. The problem comes when you try and solve problems in your design with generics, you're doomed to fail. It's an OO language, solve them in an OO way and use generics only as a tool in simple cases.
&gt; ... but it's a workaround of some kind. That's the point, it's a *workaround* (e.g. pointless code) due to the limitations of the JVM. &gt; Also I don't quite imagine in which situation you want to go that deep in a get chain in single method How about a deeply nested XML/JSON that's been mapped to a Pojo, for example. There are millions of projects with millions of different coding styles and structures. And I'd also argue that writing and assigning a bunch of useless temporary variables just to get to a nested value is **less** readable then a long chain.
https://adoptopenjdk.net/releases.html &gt; OpenJDK 11 (LTS)
AdoptOpenJDK doesn't backport any fixes. They will only build directly from the OpenJDK hg repo. If no one else does the backports that support is meaningless.
Refactoring that can be automated due to checkNotNull(x, "x") being functionally equivalent to: x And you don't have to do it. Testing parameters is a sensible policy. If you're checking for null in a method chain then that code is going to look horrible.
Not sure what your point is. Your messages are less useful and, arguably, misleading. In your first example, saying 'getInputParameters() failed' implies the error occurred within the method, which isn't actually the case.
I just tried to shorten the messages and emphasize the dereference path, just like the examples in the JEP. I am not claiming that my messages are better.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
That's a huge help in debugging production issues! In the tradition of taking the whole arm when given a finger, will there be a way to use this explicitly? I'd argue specifying the field name in null checks for constructor arguments is a best practice, but it's easy to miss when renaming fields: public class Person { private final String name; public Person(String name) { // Notice "firstName" instead of "name" this.name = Objects.requireNonNull(name, "firstName must not be null"); } }
We extend `org.springframework.security.authentication.dao.DaoAuthenticationProvider` and use its `setPasswordEncoder` to set a `org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder.` This ensures only the hash+salt are stored, and not an encrypted password
There are effectively two answers to your question. What do you need to know, and what would help you out most to know? What do you need to know? Honestly, no more than what you know right now. There are a load of graduate jobs out there and their expectations are no more than what you already know. They know you're a fresh grad and you'll pick up most of what you need to know on the job - it's why they will pay you/grads so little. What would help you most to know? Jenkins, Maven, using IntelliJ well and knowing how to debug and knowing functional programming would probably be the things that will help you get going fastest in an entry level Java job right now.
That's inaccurate, and there are some other inaccuracies on that site, too. Anyone producing JDK builds can decide to provide some form of support, and are free to call their releases what they like, including LTS. But as LTS signifies some support provided by some organization providing the builds, does not affect the development of OpenJDK itself, and you will find no mention of LTS there (e.g. [JDK 11](https://openjdk.java.net/projects/jdk/11/)). It is likely, but not guaranteed, that other organizations providing LTS will choose to provide it for the same versions that Oracle provides it.
Thanks for the article, I'll pick through it today. The reason for a permissions table, is to have a clear-cut way to allow designated admins to give/revoke permissions to certain parts of the application through an admin section of the site. Unless in missing something, this article, via Spring, touches on completely different ways of approaching this? (If at all?) Basically, how would "admin" through the web UI then, give user "Sally" permission to view the "dashboard" page for example (and subsequently through these permissions, I would show the links to it in the top menu?). The manual way I mentioned, allows to me granularly apply permissions throughout the UI, controllers etc. Maybe I'm overlooking something.... 
&gt; NullPointerExceptions are thrown frequently. Ummm... no. Exceptions, including NPE, shouldn't be used for usual control flow. Throwing and catching NPEs instead of using if-s to check against `null` is already significantly slower if it's happening on a frequent happy path in the program so having slight computational overhead isn't really a problem. It's only a problem for badly written programs.
While you are right that someone has to do updates, in this case the community has stepped up. The OpenJDK 11 updates project is active and running: https://wiki.openjdk.java.net/display/JDKUpdates/JDK11u They even have a timeline of next set of updates: &gt; JDK 11.0.3 timeline &gt; &gt; Late February 2019 RDP2 &gt; Early April 2019 RC phase (code freeze) &gt; Mid April 2019 GA &gt; &gt;JDK 11.0.4 timeline &gt; &gt; March 2019 jdk11u-dev forest open &gt; Late May 2019 RDP2 &gt; Early July 2019 RC phase (code freeze) &gt; Mid July 2019 GA &gt; &gt; JDK 11.0.5 timeline &gt; &gt; June 2019 jdk11u-dev forest open &gt; Late August 2019 RDP2 &gt; Early October 2019 RC phase (code freeze) &gt; Mid October 2019 GA
Which is a current road map of an additional 6 months, giving us a total of a year.
Of course it will. Look at the name of the project lead: Andrew Haley. He is also heading [JDK7u](https://wiki.openjdk.java.net/display/jdk7u/Main) and that's still getting updates.
yeah, the one time i tried to get gradle to work in nb i struggled 
I believe they meant that NPEs are thrown, but not directly by the programmer. I help teach Java, and NPEs are a common error amongst our students, haha.
i'm not a spring expert by any means, but based on my experience debugging spring boot apps it looks like spring generates a subclass (presumably using ASM) with implementation methods in it. at the least, calling `getClass()` doesn't return the class that you wrote and [the hibernate portion uses byte buddy](https://www.reddit.com/r/java/comments/5dm586/hibernate_has_migrated_from_javassist_to_byte/) there may be other portions of spring that emit bytecode too - bytecode plays a huge role under the hood of the java ecosystem 
Stewardship of the Java language is passed by name-based inheritance, but the inheritance chains look... weird...
Not really, he didn't remove the object's name, you did. The example shortened messages aren't blaming the method, but the call of it, using those object references, which are nulls.
My god are you me? We have the same dam problems and struggles.
You need to have a comprehensive role schema that meets business requirements and configure each roles permissions using Spring Security Expressions. You would allows admins to view a page and access methods that can update user Roles. If they wanted to give Sally permission to view the dashboard, they would change her role accordingly. See section 4.6 of the article I posted.
&gt; at the least, calling getClass() doesn't return the class that you wrote Is this observed even for basic objects like the ones created with @Bean @component annotations.. ? I presume that Spring uses Proxy pattern to implement @Transactional \[and similar annotations\], because it has to stub in transaction semantics onto the method that only deals business logic. Assuming we're on same page, does spring generate class files or will it directly manipulate byte code of an existing java class ? &amp;#x200B;
Java Mission Control can do this; the source is on GitHub. 
The numbers are stacked in a triangle formation 
Subreddit rules: * No programming help questions here! These should be posted in /r/javahelp Good luck over there and keep learning!
Oh man, I really hope they add this. This would be the best thing ever.
OpenJDK definitely does have an LTS?
Sometimes code has to be chained. This would be a pretty significant improvement.
I would argue if you're having to check for nulls, your program is probably badly written, no?
Again, agreed on that. Emphasis was on not making so much drama llama around this.
^ Oh man, I have no idea if these are great, or petty pendantance, lol. I greatly prefer at least a partial coding interview. But my biggest irritation in those is interviewers being completely unable to deal with the fact that there's like 5 different ways to do anything and they only want to hear it "their" way. Not saying the guy wasn't just handwaving away stuff and didn't know what he was doing, just tired of someone asking "how would you do this?" and me saying "you could do it way 1, or 2, or 3...I can do it any of these ways which one do you want?" and getting this "this is the first time I've had someone mention you could do it several different ways I'm frightened and angry!" reaction. Of course I also just tried doing 1 simple way to not scare the interviewer, but then a lot of times they don't like it if you didn't guess "their" way either. Even worse if there's 2 interviewers, sometimes they have 2 different ideas on the way to do it. For example lets say you want to insert todays date into a column as a timestamp. You can grab the date on the java side and throw it into the query. You can grab is in the sql and put it in the query. Doesn't matter which way you do it...
You need to have a comprehensive role schema that meets business requirements and configure each roles permissions using Spring Security Expressions. You would allow admins to view a page and access methods that can update users roles. If they wanted to give Sally permission to view the dashboard, they would change her role accordingly. Make sure you look at section 4.5 and click the link it provides. If you don’t, you will probably be very confused.
&gt;For example lets say you want to insert todays date into a column as a timestamp. Nah, I don't give a shit about that sort of thing. The question I was thinking about specifically is I asked something like "Make something that can apply dynamic validations against a string" (think, hibernate-validator). What we are looking for is someone that doesn't hard code all the validations into one class. Heck, ideally the candidate doesn't even implement a validation, only the class that zips through a collection of validations and returns a validation result. &amp;#x200B; What this particular candidate did, who talked a big game, was create a crazy system of database interactions that would make your head spin. We didn't ask about storage or lookup of validations, but they went there anyways. And while they were there, they thought the best way to do some of this stuff was to put the string to validate into the database, link it up with all the validators, and then run those validators against the string in the database through a mind boggling system of stored procs and java back and forth. And while they did all of this, the java classes they did make were horribly coupled with the validator class knowing about the database, for example. &amp;#x200B; This is the sort of person you don't want to work with. This is the sort of person that asking coding questions is meant to filter out.
&gt; These should be posted in /r/javahelp Which has the rule: &gt; No "Do my homework" posts! Do not ask for complete solutions. Tell us: What have you tried?
^ The process of thinking that leads to this goes like this: - Look at all the things that "could" be used - Grab only the things that are **not** used - Ask only these fringe trivia questions &gt; Q. What us polymorphism? The ability to execute many different behaviours via a single interface contract, advanced answers can include explaining the 4 types of polymorphism. If you wanted ask about this, put up some code and ask questions about the code you're looking at. Polymorphism is not used (as in building new objects with it) very often in webapps because they don't have the complexity needed for it. Describing the "4 types of polymorphism" is entirely academic. &gt; Q. What's the difference between a Set and a List? Key point: Lists are ordered and allow duplicates, sets are unique and unordered This is also fairly irrelevant nowadays for 2 reasons: - There's little reason to use a Set - You can google the answer in 30 seconds if you need it Java devs use ArrayList like 99.9% of the time. &gt; Q. Is Java pass by reference or pass by value? **It's value, which is (generally) a reference** Don't think there's much to add here, clearly just a sabotaging question, about a pendantic internet argument over terms. &gt; Q. Do you hate anything about Java/Hibernate/Spring? Hint: never say no, it shows you've not used them While I theoretically like a lot of this one, in my experience in reality it's still at trick sabotaging question. Someone in the interview will freak out if there's any negativity, so you're setting them up to fail with you if you say no, but fail with the other person if they actually described something they didn't like. &gt; Coding challenges that people fail at and really shouldn't: - Write me a linked list in Java Outdated trivia. ArrayList is a better choice 99.9% of the time, and people definitely are not implementing linked list's by hand. &gt; - FizzBuzz Trick trivia question. &gt; - Reverse a String without libraries This one isn't exactly a "hard" question as much as it's a bit silly and pendantic, string is odd because it's immutable and most people aren't familiar with the exact method names it just which are different than list. Thing is it takes 30 seconds to google the method names, testing people on memorizing the names is rather silly. 
Even if it's not directly thrown, it shouldn't be part of the good control flow. Exceptions are supposed to be for exceptional situations, it's in the name. It's especially the case for NPEs, which only indicate a programming error and should never be happening. If you see one, you immediately fix it, so it won't be in the program to add any overhead.
&gt; but a gotcha-ish question I seem to encounter a lot is about the difference between the 4 access modifiers But it's just kinda a "gotcha" question. Public and private are commonly used and if you don't know them you probably aren't a regular developer (or you had an interview brain lapse but it's hard to avoid those). Inheritance is pretty rare in web dev nowadays so a lot of people won't even have used protected. "package private" really has no reason to use it ever, it's a weird thing you don't see in other languages that has no real use (marking it protected does the same thing but better).
I imagine I'll get downvotes on this, but what the heck, someone needs to say it. Spring is bloated, over-written and unnecessary. They tend to wrap, or re-implement existing open source projects so that large dev shops can have one-stop-shopping for libraries - McLibraries. Nearly every single component provided by Spring there exists third party libraries that do it simpler and better. For IoC, Guice is much better. For Config, Typesafe Config, For REST, Jersey or Resteasy. And on and on and on. I've now spent a year using Spring. It's fine - it works, but it's complicated, verbose, arcane, and lots of other nasty adjectives. So, downvote away.
/u/pron is an Oracle employee on the OpenJDK team: https://www.reddit.com/r/java/comments/b55drf/jep_draft_add_detailed_message_to/ejc5qgn
Nobody is claiming that you should do flow control by throwing NPEs. They're just saying that they're a fairly common type of exception: https://blog.overops.com/we-crunched-1-billion-java-logged-errors-heres-what-causes-97-of-them/ 
&gt;Sets aren't used? You can Google the answer. &amp;#x200B; Yes, they are. Uniqueness and knowledge of it in a provided collection is a very highly used attribute. If you need Google to tell you which set is unique, you've clearly been using them without thought for as long as you've been a developer. &amp;#x200B; &gt;pendantic internet argument over terms &amp;#x200B; "Terms"? You think not knowing the difference between assigning a value to a primitive type and object inside a scope matters?! &gt;Someone in the interview will freak out if there's any negativity &amp;#x200B; Then that someone is a bad, petty interviewer and probably a bad developer him or herself. &amp;#x200B; &gt;Outdated trivia &amp;#x200B; A core concept of data structures and seeing if someone can implement a 20 line example of an extremely simple data structure is outdated and irrelevant? Clearly you are missing the point. Seeing if someone can implement something (which should be) in a familiar domain has huge benefits. &amp;#x200B; &gt;Trick trivia question &amp;#x200B; No. It's seeing if you can write and control logic through a loop, absolute base developer knowledge. &amp;#x200B; &gt;silly and pendantic &amp;#x200B; Interesting, from someone who went through all my examples which are common coding questions in a question about common coding questions calling them ALL outdated, trivial and irrelevant. I mean, if I was being "pedantic"... &amp;#x200B; &gt;most people aren't familiar with the exact method names &amp;#x200B; What method names? I'm asking you to write pseudocode to reverse a string &amp;#x200B; &amp;#x200B; Is someone angry they recently failed a programming interview because they had no idea the difference between a set and list, or couldn't write 10 lines of pseudo-code and has taken to the internet to let the world have it? Consider us all firmly put in our place.
As far as I can there is no, and never was, an upgrade path for java certifications across major version. That’s part of the business scheme of those specifications. 
Yeah. It's not too late though. And employers do prefer employees who have CS degrees so you have that in your favor
Is this a press release?
Wrong subreddit: /r/javahelp is for such questions and even there you won't get much help without showing what you have tried so far. **Removed**
That is correct. Organizations that provide builds of OpenJDK may offer some sort of long term support, but that support is not part of the OpenJDK project. What *is* part of OpenJDK project are the updates projects (like 11 updates). Some may regard the upgrade projects as a form of "support", and AdoptOpenJDK has decided to call their builds of the 11 updates project LTS.
Besides what others said, which I agree with, say you built a nice fluent interface (or maybe using StringBuilder.append). You'd like to put more method calls on the same line 
Almost all java distributions have some form of LTS and they all fall on the same versions. Oracle's openjdk distribution is an outlier.
This jep should not change your parameter validation style.
&gt; **Computation overhead** &gt; &gt; NullPointerExceptions are thrown frequently. Each time a NullPointerException object is created. Usually, exception messages are computed at Object creation time and stored in the private field 'detailMessage' of Throwable. As computing the NullPointerException message proposed here is a considerable overhead, this would slow down throwing NullPointerExceptions. It is the first statement in the section about overhead as if the additional computations needed to construct the message has considerable impact due to frequency of NPEs. With proper flow, a program will only ever construct _one_ NPE object, which will crash it. At such point it makes a miniscule difference. It only becomes an overhead worry for programs which for some reason try to do something more with NPEs, which is what I'm arguing against here.
why would you say that? OCA 7 users were allowed to take OCP 8 just fine.
The [line numbers are not available](https://marxsoftware.blogspot.com/2019/03/better-nullpointerexception-message.html) if the [Java code was compiled](https://docs.oracle.com/en/java/javase/11/tools/javac.html) with the `-g:none` flag.
^ What you're doing here is a Sheldon Cooper effect: https://youtu.be/OB1aOwmv5_s?t=43 Just read this in Sheldon Coopers voice: &gt; Q. Is Java pass by reference or pass by value? It's value, which is (generally) a reference If you understood language and the problem you'd understand why this is ambigous language. If your goal is to be condescending and internet argue, your phrasing is perfect. Your goal is to be condescending superior, so you skip all of the genuine day-to-day coding coding questions, for a series of fringe knowledge and outright tricks. It's hard to feel superior to someone by going through genuine day to day tasks that people actually work on.
Let him solve any simple problem. The object oriented decomposition can be used in many cases. Or ask him for SOLID.
Do you want to test the applicant for knowledge or for code style? The former can be tested and verified, but the applicant might then in practice just use patterns that are more simple/convenient. The latter is best taught through mentoring and code review sessions. Polymorphism is no panacea after all, and it is important to learn to judge when it is appropriate.
15 years of cooking beans! Congrats
You’re repeating yourself. Read OP then look at what you are arguing about. 
&gt; hyperbolic pop culture reference lengthy, whining flippant pithy Me: You're just in this to be condescending and arrogant You: (Pulls out well practiced condescending remarks) Me: Yup...that's what I was saying.
Hm, I'd like to avoid buzzwords like SOLID, KISS, etc.
Actually, you are discussing the open/close principle. So, the buzzword SOLID is in use ... 😀
I’m in this to be helpful to OP. You showed with an off topic argument. Feel free not to reply. 
Knowledge. Hence pseudocode is enough. Nothing is a silver bullet, but you _need_ to understand polymorphism, and if you're using switch where you should be using a class hierarchy, then there's a problem. Hm. 
Hm, not sure I'd equate polymorphism with open/closed principle. The latter sounds more like healthy class limitations. 
I guess so. Quarkus seems to be something Red Hat is pushing heavily lately.
Coffee, let him describe or build a command line app that you can use to order coffee. You can ask him to add sugar and milk, different beans, espresso, regular etc. Then add tea. Also works with pizza. It works because it's a pretty well know domain which appeals to the regular programmer. This means the applicant can focus on the implementation without having to learn the domain.
Nice one! Do you have a link to a possible solution? Would you add tea from the start, or give it as a second assignment? "How much of the old code do you need to change to add tea?"
Is there an error in the first example or have I drank too much? Seems like it'd always say that mark is older than mark...
I don't have a solution, but the solution is not important, also there is no definitive solution. It's about understanding how to code proper OOP. I would add tea later (in the interview) and just let them explain what they would change to implement it.
Good article, maybe mention something about how combine needs to be associative for example?
The proposed "Coffe application" in one of the comment is exactly about the open/close principle. And also "strategy design pattern". However, the polymorphism wouldn't be used. So, it is your decision - you are the boss.
Adding tea would imply using polymorphism, no? Thanks for the tips!
RedHat, Azul and Amazon have already said they will provide support until later. 
But in those cases you need to be using Redhat Linux, Azul support agreement or presumably be using AWS to get that support.
Finally! It may be Best feature since streams!
There is a bigger thing we could do to get close to this. C++11 introduced the constexpr keyword just for this kind of thing and we could probably pull that into Java. https://en.cppreference.com/w/cpp/language/constexpr
So, for support in the sense of "I have an issue, I need help" presumably yes, you will need to be using their versions or have a support agreement of some kind. But for support in the sense of the project being kept alive, with security fixes and other backports, that is something the whole community will benefit, even if you get your binaries through AdoptOpenJDK (or your distro builds).
Good question, I asked Brian and other JVM people twice about this in the last 20 years. A co-worker of my put in the same request. I think what we got was that we should not ask for something to be solved in the standard library that external tools can also do, or something to that effect.
A colleague of mine with OCA 7 had to take the OCA 8 before she could take the OCP 8, so I'm not too sure about that.
Got it, thanks!
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
I've never seen anyone ask to implement a LinkedList because even 15 years ago, that approach was so old it was embarrassing to be seen asking about it. That is ego but ego isn't always bad. I haven't seen questions Set vs List since about 2015...they might make a reappearance though so not a bad idea to know them. The Java language questions I see nowadays are Java 8 questions. Streams, Lambda's, in one case CompleteableFutures (though that was only one place). I've frequently been asked about basic sql. "select * from table", a few questions answered by the groupby clause. "Here's a User table and a Appointment table, select all the appointments for the User with name 'bob'". I haven't seen trick trivia questions like fizzbuzz for a while. I believe from the rhetoric I've heard about it's become embarrassing to be seen giving them, as the rhetoric is always about trying to secretly give it when no one else is around to see you do it. I guess it doesn't hurt to know it. I would be a bit concerned the OP would spend all their time on this more fringy stuff then run into a decent non-sabotaging test and not know the stuff you really use on a daily basis because they didn't put the time into it.
You still hanging around repeating yourself?
No, you misunderstood how OpenJDK works. Each release of OpenJDK is "supported" (as in, receives bugfixes and security fixes) for exactly as long as the community wants to maintain it. Folks empoyed by Azul are still maintaining OpenJDK 6. You can use OpenJDK 6 with some confidence knowing that the community is still fixing all the known security issues in it. Similarly, folks paid by Red Hat are still maintaining OpenJDK 7, 8 and 11. You can use OpenJDK 6, 7, 8 or 11 knowing that at least some people in the community are ready to fix major bugs and security issues as they come up. That's more support that most versions of any other Open Source project.
I see you are continuing to make my point about you have a sheldon cooper level personality.
&gt; LTS doesn't really mean anything in the OpenJDK context That's entirely my point.
\&gt; update users roles So, permissions tables :). I do agree that spring security is nice, but at the end of the day that information must be stored somewhere, and with tables one have the full power of sql. Considering that many companies can have arcane access rules, sql is a must, imho. Not to mention multi authentication (ex: ldap + db), and many roles due to many (small) crud apps. 
I literally don't know if I've ever used a Set in real world code in 15 years of development. Set is a collection for keeping objects unique in memory. For most web app code, you'd put needed uniqueness in the business logic that hits the database. Typically any needed uniqueness is handled by business logic that interfaces with the database, the data itself is just loaded into a List. Using a Set adds complication: - You have to override equals correctly - You have to keep the equals method up to date or you hit hard to track down bugs where you thought you added the object but you didn't - Set doesn't have get(index) you have to use an interator to access it Rather than trying to maintain 2 points that ensure uniqueness (both the Set and the database code) it's usually done in one place in the database / business logic code. For example, let's say you have a restriction where you can't have 2 users with the same username. You wouldn't use a set for that, you'd query the database to check if the username already exists. 
Java still doesn't have the `option` type to wrap nullable variables in?
Java has the `Optional` object
But it's not enforced for nullable variables?
No, I mean a User_Role table. Sure you could use a permissions table, but that doesn’t answer OP’s question, and I’d argue that it’s probably wiser to stick with Spring Security in a Spring app unless it does not meet the business requirements. But that’s just my opinion. If OP wanted to use a permissions table, I would advise having a Permissions table, a Permissions_Role table that maps permissions to roles, and a User table that stores the users role. (Maybe even a User_Role table to map roles to users if a user can have multiple roles)
This will boost global GDP with the time it saves developers. Nice write up. 
It might be nice to include Spring Data JPA's `@Query` annotation too.
Yes, so it's just a wrapper for the nullable values. I don't think a lot of people recommend the usage of the Optional.
Nothing worse than an NPE on a line like foo(bar.baz()); ... void foo(int bah) {} was bar null? was baz() null? Who knows! This is a great JEP
That's sad. That really is. I can't count the amount of times I've had to specifically run something in a debugger just to find out which part is causing the nullpointer error (yes yes, this is bad code but bad code is a reality). And the only reason for it having taken this long is a pitiful excuse.
The classic solution would be a simple implemenation of the decorator pattern. Adding Tea would require just a single new class to be created.
Why not just a "Beverage" interface?
I can't staaaaaaaand one-off variables. Yuck. You brought that poor creature into this world just to abandon it after you've used it one time?! Do you know what the garbage collector does to poor primitives like that one?? DO YOU?! Smh
&gt; The application is a **command-line tool** to order beverages like tea and coffee to your office. You don't know how hard I cringed when I saw this.
Haha, by suggestion from my previous thread from today. The focus should not be on how to build up a GUI. That could be a completely different assignment (for a front-end position).
Who cares how many people recommend it. But of those people whose opinion on the matter matters, many do. 
This honestly just sounds like you’re testing their ability to write something overly complicated for a simple task. 
How would you do it?
Shapes are good for polymorphism Like a function that returns the area of a shape, but you could give it a circle or a rectangle or s triangle. Provide them all the formulas of course
Hi! And thanks! I already designed a test, you can check it out here: https://www.reddit.com/r/java/comments/b5jx60/suggestion_for_job_interview_assignment_feel_free/
There is no knowable point of life. 
I posted a suggestion here, if interested: https://www.reddit.com/r/java/comments/b5jx60/suggestion_for_job_interview_assignment_feel_free/
Alright. ^ ^
Oh wow I could probably only do half of those things. I'm in school, still haven't learned APIs or Agile. I don't even think API's are in the curriculum (could be wrong)
If you use a decent framework, APIs will be automatic, like throwing up a CRUD. But the _important_ thing to test is to make sure the dev uses proper abstraction layers, so that it's easy to switch between different APIs and add new ones.
what exactly are you trying to find out ? What is the position ? &amp;#x200B; Six hours writing pseudocode sounds painful. &amp;#x200B; &amp;#x200B;
&gt;3) It should be possible to add sugar and milk to coffee and tea, but only honey to tea. This should say "honey only to tea". Otherwise at first glance it looks like honey is the only thing you can add to tea, but you can actually add milk and sugar as well.
This _is_ a homework task. It's supposed to be more reflective and creative than pushing out code/pseudocode. As is written in the assignment, the purpose is to test basic OOP skills - creating class hierarchies, polymorphism, interfaces. You could probably cram in a couple of design patterns in there if you want to flex. ;)
Saving this information for later.. I haven't deviated outside of outputting to the console because my classes have focused more on algorithms, data structures, math, and theory
Good catch, thank you!
Remember the holy graal of OOP design: It should be possible to add new functionality without touching old code. For testing data structures and such, I would actually assume that a dev with an exam knows read/write/sort timings for lists, array, hash maps, trees, etc.
How has this not been a thing since forever? 
Perhaps choose a project focus that doesn't hint at being a "gofer" (someone who simply fetches coffee and runs menial tasks for a superior). I don't think you mean anything by the project but it seems menial, and might put off a few worthy applicants. Something more inline with what your organization actually focuses on?.. Would be funny if that is what your company does, I could be eating my words... or drinking them?... Leave the intention of the assignment up to the applicant, but present the questions and considerations as criteria that still need to be acknowledged and addressed in whatever they choose to do. This would actually allow you more insight into their motivations and interests via what they choose to focus on. Know a persons passion and interests and you can better focus them in a work environment. It would also give you more insight into their ability to be creative and think outside the box.
Hm, I think the project could be thought of as a prototype of a pizza ordering web site. Maybe it's not clear...? So definitely something with real-world application (just replace coffee with pizza and CLI with web site). &gt; Leave the intention of the assignment up to the applicant How would I do this, exactly?
C'mon bro.
A beverage interface forces functionality onto the beverage which it may not want. The decorator allows the beverage to be composed (or extended) dynamically at runtime, independently of any other instances of that class. For example, using an interface a Coffee object will need fields to hold the creams and sugars that it has. This is fine until someone wants a basic black coffee. That’s a perfectly valid beverage and having ingredient fields is giving it knowledge that it doesn’t need or use. This is a violation of interface segregation. Additionally, logic associated with each ingredient is encapsulated in their own classes instead of being associated with the beverage. As a bonus you get inherent dependency injection which decreases coupling and increases maintainability and testibility.
I question a company's ability to meet payroll when I see things like this. 
Talk about disrespecting the candidate's time unless the interviewer is also going to spend 6 hours in the same room not multitasking. At which point it's just a double waste of time.
This post...perfectly illustrates why I say take home projects are a waste of time and I learned through experience just to drop them when they where asked for. Op says: &gt; He/she will have ~6 hours to complete it. Op is trying to get you to do at minimum 6 hours of work for them for free. And are they an important decision maker in the hiring process? Well.. &gt; There will be an interview too, but I'm not usually part of that, I don't have a manager position. This was literally my experience, I got suckered into doing one of these, only to find out the person asking for it wasn't even part of the real hiring process and wasn't even part of the interview. This is why I say "Well, my hourly rate is $50/hour. When I receive your check for $300 I'll start in on your project."
I'm a senior level developer with almost 20 years of mostly J2EE experience. If I got this as an interview assignment, I'd laugh, decline, and find someone else who isn't going to make me spend 6 hours just to get an interview. This is honestly too time-consuming of an assignment. You're asking someone to basically take an entire work day, just to try to qualify for an interview? The kind of person you're looking for will focus on less time-consuming interviews than this one. And jobs that aren't 5 different hats in 1. 
People don't have Six Hours for stuff like this. Very inconsiderate of peoples' time. Given how low unemployment is, someone will almost certainly have to come home and then spend another 6 hrs on this project? Pass.
I don't see any benefit of using Java 8 now for a newly developed product, since it's already on the way out. You could use Oracle JDK 11 if you want to stick with their commercial support, but at least AdoptOpenJDK has LTS for 11, too...
Definitely go with 11. Openjdk will be fine as it’s essentially the same code base as oracles version. Or there are numerous other vendors offering distros. Amazon have a long term support version of jdk8 out and from memory they have an 11 version in prerelease now. Choosing 8 limits your ability to take full advantage of jvm enhancements and language features and will limit your ability to upgrade for security patches etc
11 for sure, but also look at TornadoFX
The architects are working to make both Oracle JDK and OpenJDK builds interchangeable. The only different will be licensing and support. Also, that article has some things wrong: * Both Oracle JDK and OpenJDK will get new releases every six months. With Oracle JDK, though, you also get access to their LTS releases, which come every three years. * Commercial features, such as Java Mission Control, Java Flight Recorder, and the Z Garbage Collector, have been open-sourced. You can download the sources for JMC and JFR and build them yourself or wait for the early access builds [here](https://jdk.java.net/jmc/). ZGC was available starting with OpenJDK 11 builds. I can't speak to the difference in performance, but know that both pass the TCK.
This is terrible. If you showed me this, I'd wonder why these people talking agile were not even able to write a proper user story. Then, I'd run. 
Jesus christ man. Just give them a fkn api to write lolz. Maybe give em a database if you want to jump them right in
&gt; Both Oracle JDK and OpenJDK will get new releases every six months. With Oracle JDK, though, you also get access to their LTS releases, which come every three years. While Oracle doesn't provide LTS builds for OpenJDK 11, e.g. AdoptOpenJDK does. I'm wondering do the LTS changes get pushed to the OpenJDK code base, or is it just each vendor's choice to patch it up?
That is a great question. I’m not entirely sure, but I believe it would be up to the vendor.
thanks guys
11. There's no reason to use 8 anymore. In fact, maybe just roll on 12, since it's already out. 
Don't get how you see Oracle JDK better. The article states that there ain't any performance differences and that "Oracle JDK and OpenJDK builds are essentially identical from Java 11 onward."
Everything is OCP if you are a SOLID fanboy. 
It looks like you're right. There's no jdk11u in the OpenJDK repository, and AdoptOpenJDK themselves say that they "produce builds based upon source code at OpenJDK, Eclipse OpenJ9, and SAP Machine" -- where SAP Machine is "An OpenJDK release maintained and supported by SAP", including LTS for 11.
My recommendation is to not do that. Instead have them build a simple tool. For my previous company it was a file importer (basic CSV names and birthdays) into a database and a stored proc that reads back everyone for a given month. Any UI, any programming language. Your application will be different, but pick something that should only take a couple of hours max. Give them a week and do a code review as the interview. I guarantee you'll learn far more about the candidate this way. 
For some clarification on the matter: Starting from Java 11 OracleJDK and OpenJDK are functionally the SAME! As mentioned before, the differences are in the licensing structure: OpenJDK: - always FREE (also for commercial use!) - support for every version for only 6 months - new version every 6 months, no overlapping support OracleJDK: - free for development, prototyping, presentation - license required for commercial use - LTS-Version, released every 3 years, but you only get the updates if you have a license(subscription) The desktop license is 30$/year/computer. Advantage of staying on version 8: - still uses the old license so that commercial use is free. Disadvantage: - no more Updates from oracle. of course you can switch to a different vendor but this will just postpone the problem to in about 1 year
If you follow offensive programming, then yes, a program should at most throw a single NPE. In practice however offensive program is rarely used, often graceful degradation and other error recovery techniques are preferred.
Yes, we use Vert.x in our projects. I think it is worth to mention, that Vert.x does not stick to one approach and does not force you to follow one concrete approach, as Spring. Although, Vert.x offers a complete ecosystem, including DB libs, messaging, different integrations, it is highly modular. Also I must mention here a polyglot nature of Vert.x, so you can combine modules, written in different languages.
Catching other logic and domain specific exceptions is perfectly fine, catching NPEs is just a massive codebase problem. Even if you catch an NPE, there's nothing you can really do about it. The whole "recovery" is just having the program not crash immediately and silently continue running, but it continues running in an invalid state, where some data that should've been there, isn't there. It just pushes the problem around, most likely causing another NPE in a different place down the line, etc. In the end, you're getting NPEs from locations which have nothing to do with the source of the problem (the first NPE) and the whole thing is practically impossible to debug.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/coding] [Better Default NullPointerException Messages Coming to Java?](https://www.reddit.com/r/coding/comments/b5mrds/better_default_nullpointerexception_messages/) - [/r/programming] [Better Default NullPointerException Messages Coming to Java?](https://www.reddit.com/r/programming/comments/b5mrfw/better_default_nullpointerexception_messages/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Six hours was meant as an upper limit. If you can do it in one hour, fine. This is in Germany, but unemployment is low here too. I believe the candidates we've got so far are not already employed, but I'm not 100%.
That's what we thought about describing what null is, but look at us now!
No idea why that article states that Oracle JDK has better performance: as far as I know that's totally unfounded as they are technically the same as the OpenJDK builds you can get for free from other companies such as Red Hat (including for Windows!).
Sigh. Can you be a little more elaborate?
&gt; This is honestly too time-consuming of an assignment Why? What do you think should be cut? No real code needs to be written, it's just a reasoning test.
Care to elaborate on that?
&gt; He/she will have ~6 hours to complete it That's a great way to filter out the people you really want to hier.
&gt; It's a home assignment, the applicant can spend one hour on it if he/she wishes. Why bother? I'm not going to half-ass an assignment because that would mean the chance of meeting expectations is about zero.
Haha, Jesus Christ, people really react to that number. :D I wrote it that give people slack, not as an estimate to how long I think it would take. It should be doable within 60-90 minutes, which I think is not too much.
&gt; I got suckered into doing one of these, only to find out the person asking for it wasn't even part of the real hiring process. What do you mean, "one of these"?
Is this relevant to the job in hand? I’ve had these assignments which had nothing todo with the job. They should also be clear to what you want; for example if you want a multithreading answer, make sure the question requires a multi reading solution. Also remember that being able to answer with a simple solution is a skill that is immensely practical but weirdly marks you down on these types of things.
&gt; They just want the magic spring annotation that does it for them. Can you point me to the magic "implement complex business logic" annotation please? Can't find it :(
Thanks for the feedback! If I might guess, I assume you don't think just adding a user story would fix everything? What would you do instead of my suggestion?
&gt; do the LTS changes get pushed to the OpenJDK code base Updates are tracked here (I assume it contains LTS changes?): https://wiki.openjdk.java.net/display/JDKUpdates/JDK11u
&gt; Enterprise Java dev, don't use spring. Curious; what do you use?
So you think it's better to have no coding test for a job?
&gt; Spring is bloated What do you mean with this? You use whatever parts of spring you need. Don't need it? Don't include the dependencies. Like any library/framework. &gt; They tend to wrap, or re-implement existing open source projects so that large dev shops can have one-stop-shopping for libraries Yup. So you don't have to do that yourself. People who hand-assemble a web framework generally end up with something similar-but-worse. With the additional downside of custom setup and having to manage dependency versions themselves. And then they move on to greener pastures and leave this Not Invented Here mess to the developers coming after them.
No? Did you read the first reply I wrote to you?
&gt;I can't speak to the difference in performance, but know that both pass the TCK. If I were you, I would choose 11. got it. thanks!
If a single NPE means your entire program is in an invalid state, then you have bigger problems. A well designed application should consist of individual units that work independently and isolated from each other. A critical error in one unit shouldn't cause other units to fail. As a trivial example, consider a standard REST server that handles many parallel requests. If in one of those requests we encounter an NPE then we should fail hard _for that request_. However, there's no reason at all why we should also kill all concurrent requests and shutdown the server. Another example, consider an IDE. Suppose that due to a bug an NPE will be triggered when you perform an "Extract to function" refactoring. There's again no reason to crash the entire IDE and causing work to be lost. Instead, the IDE should catch the error, abort/rollback the refactoring, show a message to the user, and continue to operate as usual. Typically the only places where an NPE is fatal to the application as a whole is during startup or shutdown sequences. At any other places you should be able to isolate the problem.
&gt;Rather than trying to maintain 2 points that ensure uniqueness &amp;#x200B; So what happens when you have two lists that you need to combine? do you write both to the database then read them again to ensure uniqueness? How do you ensure that a programmer is aware that the collection is supposed to be unique all the way up the stack and doesn't mess with it? Creating a unique set and maintaining assumptions throughout your code is the difference between a solution and a hack, been maintainable code with communicated assumptions and a hack. &amp;#x200B; &gt;You have to keep the equals method up to date &amp;#x200B; Which should be the case in anything you write. Are you telling me you don't bother maintaining equals in your objects?! You also shouldn't need to use equals on a collection. &amp;#x200B; &gt;bugs where you thought you added the object but you didn't &amp;#x200B; Or just use a Set like it's supposed to be used: `mySet.contains(myObject)`. Maybe if you didn't try to get List functionality from a Set, you would see the benefit of a Set. 20 years in Java and I've never once written `myCollection.equals(myOtherCollection)` and anyone who did would fail a code review. &amp;#x200B; &gt;Set doesn't have get(index) &amp;#x200B; It's not supposed to. A set is a collection in which you care about uniqueness and presence, not order. In a collection containing confirmed accounts, if you are doing get(i) anywhere then your code is fragile, what use is "the third account in the set of confirmed accounts". In this case you would either want to iterate the collection or make sure an account is present and therefore would never want a duplicate. &amp;#x200B;
Oracle aren't spending any engineering resources on backporting fixes to 11 and neither are AdoptOpenJDK. Other companies are though, like Redhat.
Given your OCA Java 8 certification you have 2 available paths towards OCP Java 11: 1Z0-815 + 1Z0-816 -&gt; Both combined give you OCP Java 11 OCP Java 8 (1Z0-809) -&gt; OCP Java 11 upgrade exam (1Z0-817) I suggest taking the second path because currently there are more learning materials and mock examps for 1Z0-809. The upgrade exam 1Z0-817 is available only if you have the OCP Java 8 certification and it includes the new stuff and some bits from java 7 and 8. Also there is no OCA Java 11. I know it sucks that currently Java 8 OCA essentially gives you nothing towards your OCP 11 career. But there is nothing you can do. 
Basic OOP knowledge is very relevant to the job, yes! We don't have any other exotic requirements, all our job assignments are fairly standard (in my opinion). &gt; Also remember that being able to answer with a simple solution is a skill that is immensely practical but weirdly marks you down on these types of things. Very true!
I'd go straight to 12 and make sure I ship the JVM with the deployable, so it's easy to move to 13 in six months. Make sure you do nightly builds with the 13 EA so you don't get any surprises.
You don't think my suggested test could be finished in one hour, if no working code is required?
That's not how a professional programmer would approach it. You're asking for a program. If you want to show that you're a good developer (which you do since you want to end up in the upper-end of the salary range advertised) you're not going to half-ass the task. It'll work, have unit tests, etc. You were in no way specific but the bit about implementing REST/SOAP API's and your statement about 6 hours makes it rather unbelievable a good developer would only need to spend 1 hour on it. Again; I wrote a top level reply on how we approached it. Which IMHO is a much better idea. 
Nice! Was looking at the wrong place, the repository has moved since 10: http://hg.openjdk.java.net/jdk-updates At least it looks like it's still being maintained after 12 was released...
My question was whether those backported fixes get pushed back into jdk11u. At least it looks like there is some concerted effort to keep the main OpenJDK patched, too.
Yes, I saw your other reply. Thank you. I'm in fact _not_ asking for a program - at least that's not my intent - but for an _architecture_. Maybe I need to make that more clear. Anyway, in such a case, the "REST API" can be a just a box representing a module or a class. The abstraction layers between the different modules is what matters, and how to make a program work with different APIs in a modular fashion.
&gt; There's no jdk11u in the OpenJDK repository This is why a lot of people are jumping on the Amazon build (Corretto) — they assume Amazon will actually patch it up continuously since they have more skin in the game. Azul is also an option.
&gt; I'm in fact not asking for a program - at least that's not my intent - but for an architecture. You're asking for (psuedo)code, that's not an architecture. You can't really blame people for not understanding what you want if you go into all kinds of directions. IMHO if you want to ask architecture questions it's best to just do that in a technical interview. If you want to know if people can write an application; do a one hour peer programming session. 
Even though there is a jdk11u in OpenJDK, it's still completely unclear which distributions are patched and by whom, and whether the upstream gets patched, too. I hope everyone behind OpenJDK would get their stuff together to clarify the situation, instead of everyone just trying to sell their own solution...
Wow...long time no see the King. Good stuff!
The project lead is Andrew Haley of Redhat, so I'd be surprised if Redhat didn't push them to OpenJDK.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
OpenJDK 12.
Ask him/her to design a wrapper, an OOP library, over a RESTful API. Tell them they are not allowed to use models (getter/setter classes) and also they should have a single public class in the library. &amp;#x200B; There are 2 simple rules I have when it comes to OOP, and from them everything else derives: &amp;#x200B; 1. Every single object has to implement one or more interfaces (all public methods declared in interfaceS) 2. Never try to transform object A into object B. Rather, add a new implementation of B (which is actually an interface) based on A. &amp;#x200B; A second good test is: ask them to desing a builder without using if/else structures. E.g. rewrite this misery here: [https://github.com/eclipse-ee4j/jsonp/blob/master/impl/src/main/java/org/glassfish/json/JsonGeneratorImpl.java](https://github.com/eclipse-ee4j/jsonp/blob/master/impl/src/main/java/org/glassfish/json/JsonGeneratorImpl.java) without any if/else :) 
Red Hat offer LTS for J8, too.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
As it's Github, you can always create an issue or do a PR ;)
&gt; You think this is good or bad? It's bad, really bad. It's not clear what you're trying to test _for_, it's not clear what deliverables you're asking the applicants to produce for the test, and most of the questions you expect them to ask are impossible to answer without making assumptions about the intent and use of the system -- which goes directly against the nature of a take-home test. For example, most of the failure situations you have listed have _no_ connection to the requirements you've listed -- you've specified a tool to place beverage orders, not to track them or handle payments. Further, 4) would be a bad imposition to make as a system requirement at the best of times, but it goes directly against the grain requirement of 1). The whole thing is a mess.
[https://github.com/eclipse/microprofile/releases/tag/2.2](https://github.com/eclipse/microprofile/releases/tag/2.2)
&gt; Basic OOP knowledge is very relevant to the job, yes! What about the assignment tests basic OOP knowledge?
Sorry, I'm not sure what a wrapper around a REST API would look like. What and why would you need to wrap? I have two rules, too: 1. It should be possible to add new features without touching old code. 2. No method should be longer than 60 lines. I'm no enemy of if-else statements as long as they're readable, but there are a lof of switch statements in the file you linked.
&gt; it's not clear what deliverables you're asking the applicants to produce for the test An architecture described using pseudocode and diagrams. Is that more clear? Yeah, I agree to remove 4).
Cheers!
&gt; An architecture described using pseudocode and diagrams. Is that more clear? No, that's just more confusing: You don't normally describe an architecture with pseudocode. And "diagrams"? What kind of diagrams? To what level of detail? 
\&gt; I'm no enemy of if-else statements as long as they're readable, but there are a lof of switch statements in the file you linked. &amp;#x200B; Yes, me neither, but if the builder has many cases (like that Json builder/generator) then it gets messy. Switch statements are just as messy. &amp;#x200B; \&gt; Sorry, I'm not sure what a wrapper around a REST API would look like. What and why would you need to wrap? &amp;#x200B; I meant to say a REST client. A library that would encapsulate the actual HTTP calls and give meaning to the data. For instance: [https://github.com/amihaiemil/docker-java-api](https://github.com/amihaiemil/docker-java-api/tree/master/src/main/java/com/amihaiemil/docker) \-- this is a Java client for Docker's RESTful API. It follows the requirement I gave above and is also filled with polymorphism (see how Container, Image and others are at the same time JsonObjects) &amp;#x200B; I agree with your first rule. For the second one, however (" No method should be longer than 60 lines. "), I'd say no class should be longer than 60 lines.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
To me it looks like its a fair test it will be easy for someone who is hands on and specialist. So if your goal is to hire someone with a bit of everything then yes this could work. However there are not lot many to sit and go through solving this patiently. 
&gt; A library that would encapsulate the actual HTTP calls and give meaning to the data. I see. Wouldn't that mostly be generated by your framework, though?
I think this is a good idea. Keep up the good work! To encourage adoption, I would imagine it would be best to, where possible, use existing APIs, like the s3proxy.
Thanks. Glad to see not everyone is super critical. \^\^ Well, it's OK if there are gaps, but we as a company also need to know what to expect from a newly employee. So you think it's too long? What would you cut if you could choose?
Depends, I'm not aware of any framework that automatically generates that. At least not to the extent of encapsulation and fluency I have in mind. Surely there must be something to generate some sort of client, but I guess it would be more of an SDK -- a set of public classes that you have to learn how to assemble in order to make something with it so, not really OOP.
Some of the problems with JPMS are inherent, which makes it problematic to use. E.g. that there is no notion of versioning. The module-info and the build file (pom, build.gradle) needs to stay in sync and this can hardly be done automatically. There's [no way to generate](https://www.sitepoint.com/maven-cannot-generate-module-declaration/) the module-info from build file effectively. Another is the automatic module name based on jar filename. OSGi was a much cleaner solution with better tooling support. All in vain as any traction it got is now completely gone with the introduction the "official" JPMS. In this situation neither module-system is going to be used.
UML class diagrams? But you could also use code to describe it, as I understand UML is not so popular these days.
it's not LTS
You're talking about a different thing. You're talking of general uncaught exception handling. I've been talking about catching NPE specifically.
See what I mean? _You_ don't even know what deliverables you want.
Because it _doesn't matter_! What ever he/she delivers, the design skills will be visible.
With this improvement you can just call name.getClass() as an implicit null check, the exception will tell you that name was null
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
The whole point of the new structure is basically that there is no more free LTS! As mentioned by Simon Ritter at SpringDeveloper (https://youtu.be/mFyzyVnYcoY): Pick 2 out of 3 ( Free, stable, secure): Option #1: (Free and stable): -&gt; keep using Java 8 (maybe a different vendor with longer support like RedHat) Option #2: (Free and Secure): -&gt; use OpenJDK and upgrade every 6 months Option #3: (stable and secure): -&gt; pay subscription and use OracleJDK LTS-Versions
Honestly it's asking far too much. &amp;#x200B; Last "homework" exercise I had gave me 3 unit tested classes and asked for the coverage to be improved, broken tests fixed and making sure requirements were met. It was 90 minutes and pretty reasonable. &amp;#x200B; The question I'd ask is what is your current problem that this is trying to fix? Are you hiring developers who can't code? Would this be another barrier for entry or is it just something to talk about on interview day?
Bit of an essay here. &amp;#x200B; I'd suggest cutting that down to a simple, implemented command line interface (under 3 hrs) that does the beverage work and if it's at the level of OO design you're happy with and has all the tests that you are happy with then you invite them to a technical interview. At the technical interview you ask about their implementation then discuss the future of the product and other concerns, containing all the stuff you mentioned. This approach does a few things: &amp;#x200B; \- It keeps the at home assessment small and manageable yet you are able to see the applicants design/code skills \- Gives you a common domain to discuss and expand on in a technical interview. You can ask "how would you make this multi-process", "what are useful log points from a client, then a developer point of view" and get all of the information from them that you were wanting up front. \- Let's you see how the applicant deals with technical discussion, suggestions and if they are a personal fit. &amp;#x200B; Important Points \- "6 hours", whether it's a guide or not is off putting. I love coding challenges and that part of being an applicant but reading the words "6 hours" would sour the application for me. Anything more than 3 and I'll generally be out, developer time is expensive. \- A huge spec is off putting also, too many corners for making huge mistakes, which is fine when you work in it but when you have a given number of hours and no more. Before you've started it feels like you're bound to fail \- Documentation: Your spec is mostly documentation. No developers want to do a technical interview that involves doing the least popular thing in their job spec. &amp;#x200B; &amp;#x200B;
Use the latest version (it's 12 these days). Treat JDK as node.js or browsers now - it's an ever moving target and you should use the latest one.
Thanks for your comment! &gt;no notion of versioning &gt; &gt;module-info and the build file need to stay in sync True, but if there was versioning, you'd have one more thing to keep in sync (and a frequently changing one, to that!). As far as I understand, it was a [deliberate choice to leave this to build tools](http://openjdk.java.net/projects/jigsaw/spec/reqs/#version-selection). &gt;There's no way to generate the module-info from build file effectively It can be (mostly) done with a tool like [ModiTect](https://github.com/moditect/moditect#generating-module-infojava-descriptors) by /u/gunnarmorling (it has plugins for Maven and Gradle). &gt;Another is the automatic module name based on jar filename. True, this is bad, and that's why it's important to provide at least minimum support for JPMS (by reserving a proper module name). &gt;OSGi was a much cleaner solution with better tooling support. All in vain as any traction it got is now completely gone with the introduction the "official" JPMS. I've never used OSGi, but having had a cursory look at it, it seems quite nice. &gt;In this situation neither module-system is going to be used. I hope it won't be that bad. I hope in 5-10 years JPMS adoption will be high enough. Even assuming OSGi was better than JPMS, I believe JPMS is still better than using no module system at all. That's why I bother with JPMS support now - to promote it so that we all can benefit from it in the (distant) future.
Not a bad description as such, but you're barking at the wrong tree (i.e. posting in the wrong subreddit). /r/java has a clear **"No tutorials"** rule. **Removed**
Hm, you don't think your assignment was a bit trivial? Anyone with an education should be able to do that. I'd like to get an overview of the applicant's OOP design skills, as an addition to their CV and the interview.
Great ideas! I'll suggest this to my boss. Maybe I'd also need to cut down the coding spec if it's supposed to be working code. All the discussion point can be put forward to an interview or further email contact then.
Shapes or animals are pretty much the default thing to use for this. Don't overcomplicate it, basics are the basics.
This is the last feature release of Javalin 2.x. Bugfixes will be added to 2.8.X if necessary, but most of the work going forward will be on Javalin 3. Javalin 3 will not be hugely different from 2.X though, so no need to worry. If you want to dicuss breaking changes, please use this issue: [https://github.com/tipsy/javalin/issues/514](https://github.com/tipsy/javalin/issues/514)
Amazon Corretto JDK 11 is what I would go with 👌 
If you're not willing to do it or want to validate against a boilerplate answer why would you give it to someone and expect a good result? Based on both the threads you've posted I'm going to conclude you've never interviewed before. This isn't the way to go about it. Filter on cv, do a quick phone interview talkong about how they see programming and throw in some technical bits that would catch out bluffers and cut it down to a shortlist and then pair program with them on an actual work task where you type and they think / suggest. Long tedious technical tests too early in the process select for the wrong kinds of developers
Ah, sorry. Should have read rules more carefully. Thanks for letting me know.
Go for the JDK 11. There are some cool features and more are coming up. Migrating JDK 8 to later version is painful. 
One example: @Cacheable 
what’s the advantage there? aside from it being battle-tested by amazon who probably runs more JVMs than anybody else haha
&gt; Filter on cv, do a quick phone interview talking about how they see programming and throw in some technical bits that would catch out bluffers and cut it down to a shortlist and then pair program with them on an actual work task where you type and they think / suggest. That's already our routine, minus the pair programming. &gt; Long tedious technical tests too early in the process select for the wrong kinds of developers Why do you think that?
It's free, has a large user base, and will be supported going forward by Amazon. It also has the advantages of being Java 11 over Java 8. 
Correto JDK is also for the most part a drop in replacement for Oracle's, so if you are abandoning ship like I was it's a rather soft landing spot. 
That's clever, but that obfuscates the intent to the point where you almost want to comment it. And you can't put it in a method either, because the context will be lost. The JEP is a big improvement, but now it's more attractive to check for null implicitly rather than doing the explicit `Obects.requireNonNull`.
How is stuffing something in a cache complex business logic? 
&gt; True, but if there was versioning, you'd have one more thing to keep in sync (and a frequently changing one, to that!). You'd need a system where which can generate the other or even better, just *one* file. Leaving versioning to build tools is a choice that could only originate from disconnected ivory tower developers / architects. &gt; It can be (mostly) done with a tool like ModiTect It needs a lot of configuration, you will never be confident that the result is correct. See link I posted &gt; I've never used OSGi, but having had a cursory look at it, it seems quite nice. It has problems of its own ofc. :) &gt; I believe JPMS is still better than using no module system at all. My opinion is that JPMS brings more issues than solves problems. 
Are you saying that you would let an NPE crash your entire webserver?
IMO, your cheapest, safest, best bet is to go with JDK 12. * For the past decade, the Oracle/Sun JDK has been a build of OpenJDK + some proprietary components (to be more precise, OpenJDK is the name given to the open source parts of the Sun/Oracle JDK). * As of JDK 11, those proprietary components have been open sourced (or discontinued) and are now parts of OpenJDK. * Oracle provides free builds of OpenJDK; Oracle JDK is the name given to the product that includes the JDK and a support subscription from Oracle. If you're not interested in buying support, Oracle JDK is irrelevant to you. * The JDK release process has changed considerably. Instead of three different kinds of releases -- a major release every ~3 years, a "limited update" release containing new features but no spec changes every ~6 months, and patches roughly every quarter, the major and limited updates are gone, and instead we have a new “feature release” every 6 months, that’s somewhere between a major and an update release, but closer to the latter. This means that the upgrade process is now much more gradual than before. Some people are confused by the fact that the new feature releases get major version numbers (10, 11, 12 etc.). But don’t be. They are not major versions, and upgrading from one to the other should be quite easy. * If you're not interested in buying support, long-term support is also irrelevant. Some organizations offer OpenJDK builds of the OpenJDK updates project under and also name those builds "LTS," but all they mean is that the updates include just bug/security fixes (i.e. patches) backported to the updates project without new features. This is also a new model, one that’s *less* gradual than the old one, as there are no (or hardly any) new features at all, but some people need that. Regardless of whether you choose to remain on an LTS version or use the latest feature version, you will still have to upgrade your JDK at least every six months, and run a full set of test for each upgrade — just as was the case under the old model. But unless you have a very good reason to prefer this non-gradual model, you should default to just using the latest feature version. In summary, picking the latest JDK release (currently 12) is free, secure, guarantees you get not only the latest security updates but also performance improvements. In addition, it offers a much more gradual (and likely easier) upgrade story than either the old release model or staying on LTS. (I work at Oracle on OpenJDK, but I speak only for myself.) 
Well, you start with saying it's basically an OOP assignment and then you expand it into a cradle-to-grave app lol. I'd confine it to the pure Java stuff - have them real-code the OO stuff. "class Coffee extends Drink implements Billable () { .... }" etc. You can then just ask questions about "How have you approached security, logging, etc" in a face-to-face interview. "What do you know about REST vs SOAP?" etc.
Amazon have a relatively little experience with the JDK (see the relative work on [11](https://blogs.oracle.com/java-platform-group/building-jdk-11-together) and [12](https://blogs.oracle.com/java-platform-group/the-arrival-of-java-12)). Red Hat are better staffed and more experienced.
I didn't say anything about webservers and I didn't deny general uncaught exception handlers. I said I wouldn't ever use nor want to see `catch (NullPointerException e)`. Whatever "recovery" that'd do, is just better done/avoided by a simple if. If you're catching NPEs specifically to handle them, it's not any less work than avoiding the throw-flow by respective conditionals.
Other than Oracle, Red Hat and SAP have a good track record of considerable contributions to OpenJDK (see the relative work on [11](https://blogs.oracle.com/java-platform-group/building-jdk-11-together) and [12](https://blogs.oracle.com/java-platform-group/the-arrival-of-java-12)).
What sort of position is this? It looks like you're looking for a PM, Sr. Architect AND a Sr. Developer all in 1 package. Does the pay match this 3-jobs-in-1 role? Architects don't normally do any PM tasks and PMs sure as hell ain't architects! Frankly, I think most of the good people are going to avoid this job description. This screams that I'll be paid for probably the lowest of those roles but be expected to work 50+ hrs/week and be available 24/7. No thanks.
Why not to do something connected with your hobby or interest? Some kind of 'toy project', like they call it.
Jdbi member here: the criticism of Jdbi's documentation being too vague / sparse was definitely fair at the time, for the version reviewed (2.77). We've since released Jdbi 3.x, and put together a developer guide with a lot more details. I'd be interested to see his thoughts for the present version, and docs.
Create an issue! [https://github.com/bwajtr/java-persistence-frameworks-comparison/issues/new](https://github.com/bwajtr/java-persistence-frameworks-comparison/issues/new)
Yes, someone else suggested this too. Keep the OOP assignment, make it real code instead of pseudocode, and then postpone all questions and discussions to a technical interview. Thanks for the tips!
It's a small company. The employees are expected to be versatile and fully responsible of their own projects. But it's something you can grow into, of course. Sorry, what's a PM? Code-monkey?
You are moving the goal posts, you better give me your definition of "complex" first. Cacheable is an example of spring developers wanting an annotation to accomplish something, because it is perceived as complex, where no annotation is really necessary. Calling the methods on a good caching library directly is trivial. Cacheable adds nothing.
A much better solution for both of you is starting out small and then adding complexity during the process. This allows you to hit the eject button early (fail-fast). It also lets you tailor the questions more to the candidate's skill and the job. For example, start small and ask for a description/walkthrough of an object hierarchy for modeling coffee and tea. Discuss the pros and cons of what the candidate designed. Then you can add additions like milk and sugar. Then you can go on to discussing how to expose this via an ordering program. And so on. As you see though, this requires actual interaction with the candidate and not just giving them a homework assignment. Because realistically, how long are you going to spend reviewing the work? 10 minutes? 30 tops? You are saying to that candidate you value your 30 minutes of review equal to up to 6 hours of the candidate's time, practically a full work day. Not a place I would want to work. The interview is not just you deciding on a person to fill the job, but also them deciding on wanting to work for the company. The #1 rule in sales is 'don't make it hard for a customer to give you their money'. The #1 rule in interviewing is 'don't make it easy for a candidate to decide not to want to work with you'
Any way you’re thinking of doing this, except for using Docker?
I'm not moving goal posts. You're stating that with annotations I don't have to do programming. Adding a single @Cachable line to a method versus a single retrieve-and-if-not-exists-update line inside a method; I don't see the difference other than that the second has a bit more visual overhead. It's both trivial shit. I don't see why you're complaining about trivial shit. Most of what we do (or well, I hope it's true in your case) is a lot more complex than doing a glorified computeIfAbsent on a Map.
Project Manager. And a PM growing into an architect or a sr-level coder is highly unlikely. Good luck in your search!
&gt;You'd need a system where which can generate the other or even better, just one file. Sounds good. &gt;\[ModiTect\] needs a lot of configuration, you will never be confident that the result is correct. Well, it depends. AFAIK, in [this example](https://github.com/moditect/moditect/blob/master/integrationtest/undertow/pom.xml#L82) most of the configuration is related to adding module infos to non-modular dependencies. Once they got modularized, it'd be much simpler. &gt;you will never be confident that the result is correct. It's hard to get the `requires` wrong, because the compilation mostly fails then. It's much easier to get the `exports` and `provides` wrong but: * you must specify the `exports` manually anyway (you can use [ModiTect wildcards](https://github.com/moditect/moditect#generating-module-infojava-descriptors), though) * that's why, with JPMS, you should also add some [black-box tests](https://github.com/java9-modularity/gradle-modules-plugin#blackbox-testing) * finally, ModiTect can actually generate `module-info.java` (in addition to `module-info.class`), so you can simply inspect it. That said, I don't use ModiTect (yet), because my OSS projects are too small so I prefer to type my `module-info.java` by hand. &gt;See link I posted The article you linked (published before the release of JDK 9) talks about: * "Class Paths and Module Paths" * As Nicolai Parlog writes [here](https://stackoverflow.com/a/46289257/2032415), mixing class-path and module-path is possible, but I don't think it's a good idea. For example, [Gradle Modules Plugin](https://github.com/java9-modularity/gradle-modules-plugin), when applied, will place all the dependencies on the module-path. * "Reading the Module Descriptor" * "Once tools like ASM can read the module descriptor" - ASM can already do so since v.6.0 from September 2017; ModiTect uses ASM * "The Module Declaration Generator" * "But there are also requirements, which are not mapped to a JAR. Instead they refer to a java or jdk module" - I actually don't know if ModiTect handles that or not. /u/gunnarmorling? * "With the `transitive` modifier \[...\]. Such information can only be provided as configuration." - Gradle discerns between `compile` and `implementation` configurations, so it should certainly be at least possible in Gradle * "What is its name, is it open or not?" - this must be specified explicitly, true * "And how about the exported and open packages?" - as above * "Conclusion" * "If there were a module declaration generator, it still required quite a lot of configuration \[...\]" - as mentioned before, I believe it depends * "This would not be less work than just writing the file directly" - I guess it depends on the size of your project * "I am more hopeful that IDEs will resolve this for you." - IntelliJ IDEA already has quite decent support for JPMS, but I hope it'll get better as the adoption of JPMS increases
Docker is how I do it, but jlink or GraalVM's native images might be an alternative.
Sure, but a coder can grow into an architect or project manager, no? Isn't that the standard career path?
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Yes there is a concerted effort to backport all the patches. This is being led by Red Hat and supported by just about everyone else (loads of vendors and other community members)
AdoptOpenJDK isn’t officially as an org but we facilitate a whole bunch of fixes as our community consist of many of the same folks who work on OpenJDK directly 
Eh yes and no. I didn't find it difficult but I don't think that was the intention. It's really just a small window into how someone thinks and for that I think it worked well. I talked about it for like 5 minutes in the in person interview then went onto whiteboard-stuff. So are you finding that the people currently being hired don't have good OOP design skills? Or ones that you can't teach better? 
for some people, yes. Others might be content being code monkeys. I'd ask about their long-term-growth goals on the interview. Again, a PM and an architect have been mutually-exclusive roles in every place I've ever worked.
This is the goal of AdoptOpenJDK - we will be testing all of the various providers through our 100K+ test pipeline and encourage all providers to upstream their patches. It’s working well so far!
For OpenJDK you can get free updates for longer than 6 months for each LTS version (so 11, 17 etc) as the updates projects will be maintained by multiple vendors usually led by Red Hat. You can also get commercial support for OpenJDK from a bunch of providers - for AdoptOpenJDK that’s IBM and jClarity 
That's an interesting approach, to be interactive! Will write down. Forget about the 6 hours! I put an upper limit to lower the pressure, but yes, I do realize that a home assignment should be able to fit within 60-90 minutes and that I should adjust it.
Not quite correct - All of the OpenJDK providers are offering LTS (there is consistency there) so you can rely on those being updated and support for a much longer period
I don't think I understand your viewpoint. Previously you were saying this: &gt; With proper flow, a program will only ever construct _one_ NPE object, which will crash it. At such point it makes a miniscule difference. It only becomes an overhead worry for programs which for some reason try to do something more with NPEs, which is what I'm arguing against here. And I replied to that, arguing that it's perfectly acceptable that NPEs can be thrown more often and that they typically shouldn't crash your program. But now it seems like you're saying it's okay to throw more NPEs, and recover from them, as long as you only catch them in general uncaught exception handlers. Isn't that the contradicting with what you were stating earlier? (Honest question). 
&gt; So are you finding that the people currently being hired don't have good OOP design skills? Or ones that you can't teach better? We don't have any code assignments at all in our hiring process, and I though an OOP test could be a solid start. I've seen people fail this in other places, and sometimes a lot of work needs to be replaced.
This looks nice. Hope they release a guide to use it on cloud services, like AWS
I'll think on one. It is challenging though.
I’m of the opinion that Android apps are a great project for a jr - intermediate java dev. Mobile has some nuances that can often seem like barriers to new devs but mobile has some great benefits: 1. Great documentation - android libraries have good documentation and tutorials 2. Great community - if you have a question I can almost guarantee it exists on stack overflow 3. Easy to show off - mobile apps are really easy to show off to friends, family or in job interviews since it’s right on your phone 4. Building decent UIs is fairly easy - compared to using the desktop frameworks I find building UIs for mobile to be more simple I grew up as a gamer so when I was a newer dev I enjoyed making simple mobile games. Games like snake, connect4, etc. I made my first app on iOS. That app landed me my first internship which eventually led to a full time position at a company that didnt have any mobile applications at the time. 
I think they'd like you to use it on OCI ;)
Thank you. I am looking for a good book, course or anything that can help me from now to 3-5 months become an Android developer if possible. I am still looking.
Thanks for the mention! :)
If you haven’t already, I’d recommend going through the tutorials and write the code line by line for those simple apps yourself first. (Don’t just clone the repository, compile, and call it a day) It will help you build a foundational understanding of the concepts that the books will build on. It’s hard to absorb the material from technical books if you have nothing in your experience to tie it to. The best place to start is the documentation from google. The docs explain all of the foundational concepts. From there you can learn higher level topics like design patterns and best practices from the books you find.
A general uncaught exception handler is quite different from specific exception handling normal execution (exceptional situations are caused by runtime environment, e.g. filesystem, not by programming mistakes, like NPEs). The latter are actually doing specific exceptional situation recovery, e.g. trying an alternate way to do something. The former aren't actually recovering anything, they're preventing the entire program from crashing, but that's about it. Uncaught exception handlers will just drop everything of a context (a request, a session, etc) instead of recovering from the problem by doing something to allow that context to continue working in a valid state. There's a difference between recovering to a valid context state and not crashing. Moreover, the exceptions (including NPEs) that reach the uncaught exception handler (e.g. in a web server) are more on the programming mistake type, as in something should be done about them. If there's an NPE caused by your code, you still don't want it happening in the first place, even if it doesn't completely crash everything. The other exceptional situations should not reach that point and instead should be considered somewhere inside. The point of that is to make the intent of the programmer clear that such situation has been explicitly considered. It's beneficial for monitoring (logging) to clearly be able to distinguish a problem caused by a bug from a problem that wasn't a bug but just a malformed request or whatever.
It's not a major version, either (neither is 11 for that matter). The feature releases give you a more gradual upgrade process than the old model. The new update projects/LTS give you a *less* gradual process than the old model. Pick whichever you think suits you, but do so based on actual data, not comparisons with the incomparable old model, which is unlike *any* of the upgrade options available now.
nyan progres bar
I will do my best to follow a path especially the one you recommend. I promise myself to be a better developer in few months ahead.
No JPA you get out bae &amp;#x200B; I like my common portable interfaces and annotations
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Go post dude!
Most of your post is just "attacking" I'm not going to get into a pointless internet argument of whatifism's on that. There was one actual points here: &gt; What if you don't have a database? My current company has a very highly performant product which is compiled into memory and avoids run-time database usage in favour of performance This is exactly what I said Set was actually useful for. When apps were expected to keep their data sitting in memory. Nowadays most apps don't do this, for those apps Set has typically lost it's usefulness. There are plenty of apps that require unique objects but when you have a database, but typically it's done in the code that talks to the database for numerous reasons. I mentioned one already, another is that the only way to guarentee uniqueness in the db is by starting a transaction then checking if it's in the db already, if not, then add it. There's a lot of stuff in the jdk that is occassionally used, but it's not used commonly, so I find it to be a poor interview question unless the person is saying specifically that they've worked with it before.
I've used JDBI and MyBatis. I find JDBI very simple to use and easy to understand. MyBatis is nice but far too cumbersome to configure. 
/r/androiddev 
I mean whatever you want to call it - a "take home project" "homework" "job interview assignment" - that's what I'm referring to. I personally find it offensive that you think telling someone to do 6 hours of work after their regular full time job is ok. I mean if you want to pay them their hourly rate, then that's fine with me, but you're asking them to do it for free after hours from their regular job. On a purely practical level, I find that people who are directly influential in the hiring process don't do this. They are concerned that anything they ask you to do remotely you might just get someone else to do it instead. 
Ideally, I was thinking of having the following tables: * Users * UserRoles * RolePermissions ONE user could have MANY roles, which in turn could have MANY permissions. Maybe that's over complicating it... So a user could have one or more role, and inherit those permissions. The main, or top-level question I was struggling with, was does this map to the way Spring Security handles things, or should I just handle all the access granted/denied actions manually in the app? I've done that before, while a bit tedious, it wasn't the end of the world. But I know there is also the "proper" way of doing things, which is what I would ideally like to do. Coming from an ASP.NET app, in the "Users" table I had a column "roles" with either one or more values, separated by a comma and just stored in a List. So I would check if user "jsmith" had *a*, *b* or *c* (etc.) roles and they were denied or granted. It wasn't the standard .NET way, but I'm trying to get away from *re-inventing the wheel* type of approaches.
&gt;E.g. that there is no notion of versioning. I think JPMS are getting an unfair reputation for this. Version selection is known to be NP-Hard (reducible to 3-SAT though). People act like it is something simple that a 5 year could implement. Just like a joe-average developer would never be able to understand how it works. Versioning was included in the first drafts but was taken out. Because of this and other problems. In the end I much prefer a simple static module system. People can the use something like ModuleLoader if they actually need multiple versions of the same jar running in the same JVM. &amp;#x200B; &gt;OSGi was a much cleaner solution with better tooling support. OSGI does not solve versioning, try and google OSGI and LinkageError. On top of that there are numerous of other problems. For example, bundle activation order which is determined by class loading order. Which happens to not be defined by the Java SE specification. OSGI is anything but clean. &amp;#x200B;
\&gt; \[ModiTect\] needs a lot of configuration The idea certainly is that you require \*less\* configuration with ModiTect than when writing the module descriptor by hand. Exports described via wildcards help with that (e.g. try maintaining the public package list of a larger library such as Hibernate ORM without forgetting exports clauses when adding new API packages). Also deriving requires clauses based on project dependencies helps there, i.e. you need to keep that information only in one place instead of two. Other things just naturally need to be configured by hand, such as the module name. \&gt; With the transitive modifier \[...\]. Such information can only be provided as configuration." No, this actually is a perfect candidate for something which \*can\* be automated. It's just not implemented in ModiTect yet, but high on the wishlist. By analysing the signatures of the exported packages the tool can determine which dependencies need to have the transitive modifier and which ones not. \&gt; But there are also requirements, which are not mapped to a JAR. Instead they refer to a java or jdk module" - I actually don't know if ModiTect handles that or not. I'm not quite sure what that means? \&gt; "This would not be less work than just writing the file directly" After applying ModiTect to even a medium-sized library such as Hibernate Validator, I'm pretty confident in saying that this is not the case. Wildcard export/open alone simplifies config a lot.
I've been using [Apache Cayenne](https://cayenne.apache.org/) for the past few years. Amazingly nice framework with some exciting things in development at the moment.
A company that has a person that doesn't know how to hire in charge of hiring points to an underlying dysfunction and thus the question of how the company actually makes money and is able to pay people is often the first rudimentary thing that goes through an experienced candidates mind when their bullshit detector goes off. Don't assume your title infers some ability you didn't have yesterday or that the person that put you there had a choice giving it to you; you're still the same person with the same abilities, lacking or not. Wisdom isn't granted so if you don't have a lot of experience hiring people, expect to hire shit people and the fallout that often comes with it. There's really nothing you can do about it. Look at the scope of the problem, hiring in tech is fundamentally borked and your company is just a data point in the why of it. When hiring people is a skill unto itself and the industry that you need to hire people in is growing at a rate beyond the ability of people to gain wisdom about it hiring for it... you get posts like this asking for some kind of magic beans.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
https://www.azul.com/java-stable-secure-free-choose-two-three/ works very well and the team rocks
Does this kind of improvement really matter?
I find it unlikely that most real code will wrap it more than once.
Two answers: &amp;#x200B; 0) Yes, if a specific use case makes heavy usage of unmodifiable collections either directly or indirectly, this improvement will help that use case. 1) If a specific use case uses similar operations or strategies that wrap objects like the unmodifiable collections classes do, then this technique will help that use case. 
Really, this was more meant as a brainstorming session about how to design a test that checks OOP skills. And I got a lot of good feedback. So it's all good.
Thanks OP. Putting this on my watch later list for sure. Looks to be quite a good primer on Java web technologies.
OpenJDK has no concept of LTS. LTS is a service provided by various JDK vendors. What you're referring to is builds of the OpenJDK 11 updates projects. As to your question, Oracle developers will not regularly backport fixes to the updates projects (although they may occasionally), but both the 8u and 11u projects are led by Andrew Haley of Red Hat, and in addition to Red Hat's own backports, they accept contributions.
I'm terms of performance, no. In terms of code quality, yes. As it is, there is a bug in the current release of JDK 11.0.2 where under certain conditions, the TLS library will do this exact same unbounded wrapping of a List and will eventually overflow the stack. If `toUnmodifiableList()` behaved properly, this bug wouldn't be a bug. The workaround in JDK 12 is for the TLS code to copy the entire list into a new ArrayList every time because it's impossible for client code to check whether something is already an unmodifiable collection without reflection since the class is package private. This entire problem goes away with the fix the author is talking about.
Tell that to the standard library authors. There is a bug in the TLS code in JDK 11.0.2 (the current LTS version) that does exactly this and it will eventually overflow.
Simplified Startup Logging: Is that a flag or the default and verbose startup logging can be enabled with a flag?
Thanks for feedback, Gunnar! &gt; &gt;But there are also requirements, which are not mapped to a JAR. Instead they refer to a java or jdk module" - I actually don't know if ModiTect handles that or not. &gt; &gt;I'm not quite sure what that means? I thought it's about e.g. `requires java.sql`, i.e. requiring anything outside of `java.base` (cf. [JDK module graph](https://docs.oracle.com/javase/9/docs/api/java.se-graph.png)). I don't know if you have to require this manually or whether ModiTect detects usages of the `java.sql` package.
OSGi and Maven handle versioning reasonably well. It doesn't need to solve the complete version selection problem, but the parts that matter. JPMS just doesn't know "version" at all (yet. There's a manifest parameter with no effect). OSGi isn't without its problems, but its still much cleaner and nightmare-free compared to JPMS.
No, they were just muted. Were you using them?
No Spring Data JDBC? Why leave out the greatest?
No, but sometimes if there are issues being tracked down, it would be nice to see. Not a huge issue really. Just wondering.
This is the right answer. Don't do OpenJDK 11, it is already out of support. Instead, go with OpenJDK 12 and keep your stuff up to date. &amp;#x200B; There is no reason a new project shouldn't use the latest java and stay on the release train.
Oracle OpenJDK does not provide LTS support. That is the most likely one you'll stumble onto. I agree that most of the other providers are doing LTS, but at least one big major player is not.
Fair enough. Will add a toggle for 3.0.
Oh hey, cool. Thanks.
It might handle it reasonably well, but the complexity you add is tremendous. And I much prefer something comprehendible that works 100% of the time. Working with 50 bundles and multiple versions of the same library is a full-time job. The whole OSGI architecture is a nightmare. Long on vision, short in execution. What is the first thing Eclipse, the premier OSGI showcase, does after you update a plugin? It needs to restart. But I was promised I would get on-the-fly updates???? Also looking down the road a couple of years from now. If you want to get serious about something like Graal, you are going to have a bit of a headache if you rely on OSGI. I predict a slow but inevitable death. &amp;#x200B; But back to JPMS, could you name some of these issues you have beside versioning? I agree writing a module-info file can be tedious. But what is the alternative? Annotations? Then you would need a package-info in every package to annotate. 
It looks interesting but it's only intro to paid Udemy course...
The thing is, if you way it should take no more than 6 hours, you are implying that the depth of answer you are looking for will take 6 hours of work to get down. If you say it should take around 1-2 hours then you are implying the depth of answer you are looking for should take about 1-2 hours to get down. Someone can spend 6 hours on that question and have a really in-depth answer which will be way more than what you are probably expecting. By setting a time limit you are implicitly also saying how much work you expect from the person doing it. Which is also why you got so many responses about the time.
I need this, thanks.just starting with spring boot
Thanks buddy :) 
&gt; The whole OSGI architecture is indeed a nightmare. For our team it works like a charm. The problem is people trying to modularize their old huge monolith after the fact or they don't follow any best practice at all (e.g. 3rd party bundling). Also due to low adpotion and missing experience in the community. The Eclipse platform has a shitty architecture itself. &gt; I predict a slow but inevitable death. Me too. Though it will not be replaced by JPMS. We will keep the status quo with most applications running on the classpath. Mini-Applications are encapsulated by runnning in a (Docker) container. &gt; But back to JPMS, could you name some of these issues you have beside versioning? Versioning is the biggest issue. Followed by concealed packages, cyclic dependencies and one-module-path. Many issues were raised and are theoretically [addressable](https://openjdk.java.net/projects/jigsaw/spec/issues/), but there has been no progress in any of the proposals since the Java 9 release. I guess they were just propsed to satisfy the committee.
Did you not read the title of the post?
&gt;The problem is people trying to modularize their old huge monolith after the fact or they don't follow any best practice at all (e.g. 3rd party bundling).Also due to low adpotion and missing experience in the community. Thats because OSGI is too complex for mere mortals. The specification is &gt; 500 pages long. That is only a bit shorter then the whole Java SE Specification. But, lets just agree that OSGI is not for everyone. \&gt; Me too. Though it will not be replaced by JPMS. I think the cat is out of the bag. Libraries really have no choice but to support it. I don't think it will be JPMS alone driving the adaption but tools and libraries built on top of it. \&gt; Followed by concealed packages, cyclic dependencies and one-module-path. Concealed packages I'm with you. Cyclic dependencies I think they made the right choice to not allow it. one-module-path I'm not sure what you mean? \&gt; Many issues were raised and are theoretically [addressable](https://openjdk.java.net/projects/jigsaw/spec/issues/), but there has been no progress in any of the proposals since the Java 9 release. I think this a matter of priority with regards to other OpenJDK projects. As well as waiting for real world experiences. I don't expect to see any changes in the near future. 
A comparison of non-JPA ORMs that in my opinion shouldn't exist.
Interesting read. I just recently fixed an issue in our code base where we were wrapping collections into infinity and getting stack overflows as well. So maybe not as uncommon issue an issue? I did have to get a hacky by checking that the class of the collection to wrap was not already the same as the class of the returned collection which meant doing something along the lines of: Collections.unmodifiableSet(Collections.emptySet()).getClass().isInstance(setToWrap); You might have hidden your class as package protected but I can still get at it via Reflection! So having the methods themselves do this would be very nice. \---------------------- Random Rant: It's been close to 5 years since the initial java 8 release. Can we please stop doing this side effect laden stuff with streams: Set&lt;Integer&gt; underlyingCollection = new HashSet&lt;&gt;(); new Random().ints(size) .mapToObj(i -&gt; i) .forEach(underlyingCollection::add); And just do it nice 'pure' like so: Set&lt;Integer&gt; underlyingCollection = new Random().ints(size) .mapToObj(i -&gt; i) .collect(Collectors.toCollection(HashSet::new)); /rant
Isn't that what "Spring JDBCTemplate" is?
All you need to do is to take Java SE Programmer II (1Z0-816) if you're coming from OCA 8, OCP 11 doesn't exist. &amp;#x200B; Source (page 4): [https://www.oracle.com/a/ocom/docs/dc/ou-5021-java-se11-faq-4.pdf?intcmp=WWOUCERTBLOGECIHA032019](https://www.oracle.com/a/ocom/docs/dc/ou-5021-java-se11-faq-4.pdf?intcmp=WWOUCERTBLOGECIHA032019) 
On your rant, I prefer the latter as well...but what do you mean by "side effect laden"?
Yep, good point.
&gt;OpenJDK has no concept of LTS. LTS is a service provided by various JDK vendors (which usually involves much more than just patches). What you're referring to is builds of the OpenJDK 11 updates projects (that some also choose to call "LTS"). I wouldn't be expecting active support for OpenJDK, but I would call a long-term passive support as a form of "LTS", too, even if it's not called by that name. If OpenJDK 11 will have patch releases for longer than other versions (as it seems), then what should it be called if not LTS? I believe that just designating some name for the longer-term versions within OpenJDK would clarify things a lot.
There are update projects for each feature versions, and how long they're maintained is not predetermined, but up to the community on an ongoing basis. So you could have OpenJDK versions 11, 11.0.1, 11.0.2, 11.0.3 etc., but whoever is maintaining the 11u update could decide to stop backporting tomorrow, or the community could decide to maintain a long-running 10u project. As the S in LTS stands for support, I think it makes more sense for companies that deliver a product to commit to some sort of support, rather than an open source project which only delivers source code. Anyway, I think that of the several points of confusion about the new model, this is not among the big ones. E.g., some confuse LTS as being similar to the old model. It is not. Some confuse the new feature releases with the old major releases. They are not.
The former example modifies a locally scoped list in the foreach loop which is side effect behavior
Reddit being Reddit I think.
If Oracle has open-source'd it in their usual way ... chuck it over the wall ... that means they just laid-off their development team 
That's terrible, I would be typing so many `break=with`s.
Lot missing here for Rest, API design, etc. Looks like it covers a lot of info but not a lot of detail on most of it. API first design is completely missing, the use of RAML or OpenAPI is missing, and should be the thing most teams/developers look to use if they want to really save a lot of time and iterate fast on APIs.
Interesting. How does your code use the Collections.unmodifiableSet() such that nested wrapping can occur (in the absence of your workaround)? The usual protocol of defensive-copy on input and unmod-wrap on output never results in nested wrapping. Re the rant, yes, Collectors are usually preferable to side effects on captured variables, but the latter technique comes in really handy sometimes if Collectors can’t be used.
This was so helpful. Thanks for taking the time to make this post. The content floating out there has been rather confusing to a new comer like myself. Could you recommend a source to help stay caught up on such things?
The TLS bug that resulted in arbitrarily-nested wrapping was ill-conceived from the start. A couple classes would unmod-wrap a collection on intake, storing the ref to the unmod wrapper in a field. This achieves little other than preventing this class from modifying the collection (which does have some value). More importantly it leaves this class’s internals exposed to changes to the underlying collection, which could result in misbehavior or security holes. I’m not sure, but I think the original author misunderstood how the unmodifiableX() methods work.
Using v3 yet?
Done. Cheers
No - it's quite new ... [https://spring.io/projects/spring-data-jdbc](https://spring.io/projects/spring-data-jdbc)
This article is quite old. Early 2017.
That's just using JPA in the background and thus not valid for the comparison.
never heard of querydsl, huh?
Java Magazine just ran a [long article](http://www.javamagazine.mozaicreader.com/MarchApril2019#&amp;pageSet=34&amp;page=0) on getting started with Helidon 1.0 
Which one is that?
wow that page 4 is extremely helpful, thanks.
I am a senior developer as well and I'd also run from your company unless you paid me for this assignment. &gt; Six hours was meant as an upper limit. It's a home assignment, the applicant can spend one hour on it if he/she wishes. Also, we will not use it as a filter for interviews, but as a complement. This answer is exactly why I'd run! This is an assignment with dozens of aspects to consider. Saying that such a thing takes 2 hours is just not taking software development seriously, unless you want me to half-arse it - but I won't do that because I am a professional. You have to understand that it's possible to write pages (without fluff) on each of those topics. Candidates who actually care about getting the job will feel obligated to perform their best, therefore they won't spend an hour on it - they will spend multiple hours and review their work dozens of times. If you want to check planning/architectural skills of a candidate then check them during the interview. Ask them about each of the topic you have listed and interrupt when you are satisfied with the answer. If you make it collaborative, it will also be a test of a work-like situation. 
Oracle _are_ spending engineering resources backporting fixes to Oracle OpenJDK 11 LTS (which you have to pay for). They _are not_ spending engineering resources backporting fixes to the Open JDK 11, which you don't have to pay for to use in production. RedHat is leading this.
Sorry, yes I should have specified OpenJDK 11.
Author here, the \`forEach(underlyingCollection::add)\` is indeed embarrassing - what the fuck was I thinking?! Oh, the answer is actually pretty obvious: not much. Fill get that fixed soon. &amp;#x200B; &amp;#x200B;
Could you explain this? Is it really that bas?
&gt; Ask them about each of the topic you have listed and interrupt when you are satisfied with the answer Yes, others have suggested this, and I agreed. The discussion topics are better for an interview situation. OT, but do you wanna tell me more about your senior position? Always interesting to hear about.
OpenJDK 11 is not out of support. It is being led by RedHat You can see the release timeline here https://wiki.openjdk.java.net/display/JDKUpdates/JDK11u Alternatively, you can pay for support from Oracle or Azul, or another vendor, if your company needs specific bugs fixing.
This is incorrect. You can pay for Oracle OpenJDK LTS.
Well sure, but what do you want to know specifically? Main difference in my day to day work between now &amp; previous positions is just that I spend more time mentoring other and I drive (or take part in) most of the architectural decisions; I still simply code most of the time.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
I agree. I use c++ and Java daily, but just picked up go for some server stuff on a small project, and it was nice enough.
I think with time, wrappers and APIs will evolve for Go. In the starting days of Java, think of developing a web application without having servlet container and APIs. Spring framework is 15 years old today. Let "go" take it's time.
Are there any particular examples of things you found difficult to do? I've written numerous enterprise production backend/web applications in Go over the past 3 years and love it because it reduces a ton of bloat, runs exceptionally fast and efficiently, and still has convenient garbage collection. Java used to be my go-to language, and I still use it when it makes sense, but Go has become my new standard/primary language.
How do you mentor? Reading code or design documents?
I learnt golang and rust just for fun, but I can really tell it made me a better java developer. Looking at same code from different perspective was really beneficent.
ModiTect should detect this usage and add the requires clause to the descriptor automatically.
We used Golang for a fairly big API project. Devolved quickly - expressing business logic in Go wasn’t my best experience ever - and I craved for Java/C# or any other language. My learning for that was that Go is perfect for tooling. For APIs that have a ton of business logic - Go will not be my first choice. 
My experience is pretty similar. Go is just too much of a step back for me compared to Java. You'll soon notice how much you miss simple things like generics and method overloads, not to mention the shitty error handling and horrible API. The only benefit of Go is that it can be compiled to a statically linked executable. The main reason for me to go for Go was to build some simple services to run on a raspberry, since Spring just uses too much memory. But going for a Java microframework (or actually; Kotlin, I do most personal work in Kotlin) solved that issue just fine.
&gt; it reduces a ton of bloat Curious what you mean with this. Because in my experience Go pushes you towards copy-pasting code instead of code reuse a lot. 
Agree, I build some scheduling services in Golang, it's incredibly easy and fast, it takes only 11M memory usage for the while process.. in Java, JVM takes too much cost 
&gt; in Java, JVM takes too much cost Did you measure it? Because a Hello World Spring Boot service takes 35MB and that's mostly Spring. And frankly even 35MB is peanuts if you see how wasteful applications (looking at your Slack) are nowadays with memory.
Have you heard of reactive programming? Servlet is so last year :) Have a look at RxJava or Vert.x.
Go is definitely a lower level language and should be regarded as that. When you do, it's pretty nice. Statically linked is a benefit, but when you need dynamic linking it's pretty hard actually.
That's not OpenJDK, That's Oracle JDK. Oracle publishes the OpenJDK you can download at jdk.java.net.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Then you need to learn about the code generation, and this will be a truly eye-opening thing. A ton of things can be automated, the closest Java-world thing would be probably Lombok.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
and still 90% of market is spring/javaee (jakartaee nowadays) with tomcat
Not everyone has the scale to need an async app.
&gt; Then you need to learn about the code generation, and this will be a truly eye-opening thing. Yeah, copy-paste based developing. Like that person who abused different &lt; and &gt; characters to build his own templating. Stuff like generics should be part of any modern language. If Rust can have it, so can Go.
Almost no one does 
Well, I wouldn't call code generation a copy/paste driven anything, for starters you can operate on AST. I do things with macros in Scala all the time, and certainly I will pass that opinion about copy/pasting monadic transformations to the peers, that would crack the lunch. Thanks :)
Your complaint really lacks reason without examples. I've used both languages as a backend developer and even though I like Java (or Kotlin) more I think Go is a nice language to work with. Truth to be told, you have to think about things that the Java frameworks often hide from you, especially with error handling, but that's mostly just because you are not used to that. Go makes other kinds of things much much much easier than Java, for example multi threading. Go routines are a blessing to work with, [take a look at this blog post if you are interested](http://marcio.io/2015/07/handling-1-million-requests-per-minute-with-golang/). You just can't do these things with Java's threading model. Fortunately Kotlin is coming up with their own roll of coroutines, which is highly inspired by Go, not by an accident. I think both languages can fit in even the same company's technology stack. Also, by your logic you could make the same conclusion if you compare Java to Rails, Django or even .NET. Classic MVC web development is a huge pain in the ass even in the most modern Java frameworks, when you compare that to these frameworks. There is a reason why nearly every company nowadays just use an SPA framework for their frontend instead of MVC Java.
I've used it for a few command line tools but for that kind of stuff I currently prefer Rust over Go. And like I said; as far as I'm concerned the statically linked aspect is the only benefit. I personally much rather just write a simple program in Kotlin and package it as a docker container. 
[https://blog.bradfieldcs.com/you-are-not-google-84912cf44afb](https://blog.bradfieldcs.com/you-are-not-google-84912cf44afb)
It’s a fifty minute video. Spring can take over a decade to learn. My PM has been learning it for 20 years and still doesn’t fully understand it. Your criticism is misinformed. 
I prefer that latter option too, if it's on the table I certainly go for that, but it does depend on what a customer wants. Re Kotlin, I wonder how attractive it really will still be when Java 17 comes around, but for now it's a nice option.
To allow calls with both REST and SOAP there needs to be an abstraction layer. Coffee and tea is an object hierarchy with polymorphism. Encoding the rules for what you can add to a beverage is not OOP but still interesting, I think. 
Alright, thanks for the feedback! 
&gt; I wonder how attractive it really will still be when Java 17 comes around, but for now it's a nice option. No idea. We'll see. As for now I enjoy using it way more. We'll see how much Java will pick up all the quality of life stuff. With the huge debates around var and val and multiline strings, I doubt it'll get to the level Kotlin is at within the next 3 years.
Not sure what this guy is taking about. I've written a few restful services in go. It's great. Creating web app isn't that different, I don't really see it being more difficult in go than any other language. The only drawback is the lack of something similar to jsp for the frontend but that can be easily remedied. 
I mostly was referring to memory usage, especially for web applications/HTTP server implementations. Without the overheard of the JVM and a servlet container like Tomcat, the memory utilization is at least an order of magnitude smaller. Lower resource utilization results in lower run-time costs over time. With a statically-linked binary, migrating across servers or containerizing is also significantly easier. Additionally, application start up times are faster without needing to start the JVM, start Tomcat, and load all the classes before handing control over to the business logic.
We are using the unmod collection as a view of data that can see updates. The underlying collection in essence contains a bunch of immutable DTOs. A view is given to an observer so that when a change event happens the observer can see the entire updated collection. Depending on the event, the original observer may spawn a new observer, at which point the collection gets wrapped again. Just recently we added a new event type which causes many more new observers to be spawned. There was actually a comment from 2012 at the place of wrapping making note of the fact we may be wrapping an already wrapped collection but that we will probably only ever wrap it a couple of times max so it shouldn't be a problem. Wah-wah. It's not the best design ever but it has worked for over 10 years so it's not likely to be rewritten any time soon. The initial debug/test fix was with the reflection hack but once the issue was identified we just ended up writing our own copy of the unmodible collection and static wrapping method just to do the instanceof check :'(
&gt; I mostly was referring to memory usage, especially for web applications/HTTP server implementations. Without the overheard of the JVM and a servlet container like Tomcat, the memory utilization is at least an order of magnitude smaller. But if memory consumption is such a large issue why are you using Tomcat? It's rather an unfair comparison; there are tons of microframeworks with a much lower footprint. Heck; if you're on 8 you can use Sun's internal HTTP server. It's tiny. I have had these discussions with SRE people tons of time comparing the memory usage of a "hello world" type Go program with the memory usage of a Spring Boot webservice with all the Actuator bells and JPA whistles. That's just cherry picking. The Go VM has roughly the same overhead as the Java VM. A bare-bones Java hello-world will have similar memory consumption. 
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
&gt;opsian.com/blog/c... No it's not. It's solely based on \`JdbcTemplate\`.
The latest update to the project seems to have been done about two years ago. Spring Data JDBC didn't exist back then.
It looks like in your [submission](https://www.reddit.com/r/java/comments/b64xd0/the_end_of_java_web_start_solution/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Hi. Great content. :-). Although it might not help you directly, I’ve faced a similar situation so I make my functions in my functional library “FunctionalJ.io” — Functor agnostic …see here [https://github.com/NawaMan/FunctionalJ/blob/master/docs/functions.md#flexible-inputs-functor-agnostic](https://github.com/NawaMan/FunctionalJ/blob/master/docs/functions.md#flexible-inputs-functor-agnostic) Basically, every function can accept the functor of parameters instead of just the parameter itself. For example, the function below: `Func2&lt;String, String, String&gt; func = f((s1, s2)-&gt;s1+” “+s2);` Can be used with string but also for Result of string, Supplier of Sting, Function of string and so on. For example: `Result&lt;String&gt; text1 = Result.valueOf(“Text1”);` `Result&lt;String&gt; text2 = Result.valueOf(“Text2”);` `System.out.println(func.applyTo(text1, text2));` `// “Result:{ Value: Text1 Text2 }”` This attempt to solve similar problem you have, as the function takes more parameters, you will need to use \`map\` many times to actually use the function, so why don’t we make the function automatically do that for us. Of course, this does not allow mixing different functor types and (without type class) the functions must know about that the functor type. :-)
I haven't had the need to - so no.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Interesting. I am in no hurry to leave Java for backend simply because its so mature and there's really nothing I crave (ok, better ML libraries.. that's it.) And it's getting so much better with each release. Sounds like Go isn't all that (yet).
And this is a another reason we as a developers should spread the knowledge about new technologies in Java. I don't know if you know but Spring has Webflux which is reactive. So, I guess, you meant SpringMVC.
Developer using Golang for app with 20 million active users here, I'm not sure what you are talking about. We have a lot of backend services using Go and never had a problem with business logic.
The disdain for verbosity is more about reading, not writing. The assertion is that verbosity is an indicator of poor communication of ideas, and that a "verbose" language forces you to "beat around the bush" instead of just saying what you mean. Consider for-each loops vs. looping over an index, for example. It only saves a few characters, but that's not the point. The point is that the higher level intent is clearer. Compared to a more compact language, the extra verbosity just becomes distracting visual clutter that your brain has to learn to pattern match away. But that pattern matching can easily have false positives/lead you to miss subtleties. If you generally use a more compact notation, then the more verbose ways of doing things can serve as a signal to the reader that you're doing something less-straightforward, so they should pay more attention.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Where can I read about this Go VM? This is new to me
Point taken, I meant Oracle JDK. However Oracle OpenJDK will also have community LTS support. RedHat have stepped up to lead this. I guess the difference is one is contractually obliged, whereas the other one isn't.
Not misinformed.. just stuff that I feel is missing. I have seen several teams that code APIs with no "direction", they just dive in on a video like this and build an API without knowing about API first design, tools to help facilitate that, etc. To be fair, the title is web service and I hit on the API portion of that. But it does say Develop Java Rest API, which is why I said what I said.. there is an unfortunate number of developers/PMs/etc that just dont know enough or anything about API first driven/designed architectures, and more so the incredible ease and yet good using a tool like RAML or OpenAPI offers by ensuring the API is not only defined well, but documented, and more so, when you use it correctly (e.g. the definition file(s)) you can generate documentation, server side, client side, mocks, tests, and more without any man hours wasted. It does take a bit to learn/use/put it in place. But that is minuscule compared to the amount of manual labor hours wasted trying to keep all these bits in sync every time a change/fix/feature occurs. 
I don't think Tomcat would be unrecognizable for you after 10 years. I like using it. I think it is still one of the easier ones to use. I also use WebLogic but that is a huge application compared to Tomcat. I am sure if anyone else chimes in you will have some good opinions on it.
Servlets in Java have been around far longer than Spring. The Servlet API was released in 1996 and Jeeves (Sun's Servlet container) came out in 1997.
Fair enough. 
I think you can give this assignment but do not share your questions that you have listed above in your question. Once the candidate submits the solution, look on the code and consider - 1. Use of design patterns (in current situation builder ?) 2. Exception handling 3. SOLID principles After that, have a Skype call, ask them to share the code and discuss your questions that you shared initially. 
To avoid parsing the output of jcmd, It would be possible to do somethindg similar with Flight Recorder. &amp;#x200B; // Allocate static objects by JFR try (Recording warmup = new Recording()) { warmup.start(); warmup.stop(); } Path p = Files.createTempFile("object-count", ".jfr"); try (Recording r = new Recording()) { r.enable("jdk.ObjectCount").with("period", "everyChunk"); r.start(); // do work r.stop(); r.dump(p); List&lt;RecordedEvent&gt; events = RecordingFile.readAllEvents(p); long startGC= [events.stream](https://events.stream)().map(e -&gt; e.getLong("gcId")).min(Long::compare).get(); long stopGC = [events.stream](https://events.stream)().map(e -&gt; e.getLong("gcId")).max(Long::compare).get(); System.out.println("Before:"); printObjectCount(events, startGC); System.out.println(); System.out.println("After:"); printObjectCount(events, stopGC); } &amp;#x200B; void printObjectCount(List&lt;RecordedEvent&gt; events, long gcId) { [events.stream](https://events.stream)().filter(e -&gt; e.getLong("gcId") == gcId).forEach(e -&gt; { RecordedClass clazz = e.getClass("objectClass"); long count = e.getLong("count"); long totalSize = e.getLong("totalSize"); System.out.println(clazz.getName() + " count=" + count + " totalSize=" + totalSize + " bytes"); }); } 
We use Tomcat at work to run our JAX-RS backend API. Works great. 
About 2, what kind of exception handling would you advise? I'm always conflicted between error return values and exceptions. 
&gt; Libraries really have no choice but to support it. As long as the users don't demand modularization, libraries have no incentive to adopt JPMS. The big frameworks / libraries have it in their backlogs (like JUnit or Spring), but the majority of small libraries out there has no resources or motivation to do this. Most have not even set an automatic module name in the manifest. &gt; Cyclic dependencies I think they made the right choice to not allow it. Its the right choice to disallow cyclic dependencies at resolution and link time. It's the backbone of a good module system. What I mean is that cycles are inevitably going to arise at runtime. E.g. dependency injection, plugin mechanisms, service loading, dynamic class loading, observer pattern, .... It is currently only allowed when occurring through reflection or automatic modules. It is not possible to fix these issues on the developer side in reasonable manner. 
I think the benefits of Go is that you wouldn't write a web server like Spring. I think y'all are coming at Go too much as Java developers.
If you switch to jetty you slim down to 10MB, if a race to the bottom is what you need. 
It really doesn't matter in case of command line apps - they should make some sense like - "NO_MILK" etc. Return values mostly matter when things are REST. In case of REST, try to map as much as to HTTP response code. Like 202 for request accepted and so on.
Are you completely set on using JSP and managing a servlet container for your new project? A lot has happened in the web world in the last 10 years...If a markup based approach to frontend development is your preference, Tomcat is fine. Also, take a look at Thymeleaf - it is a popular replacement for JSP. With that said... Many of the Java devs I knew that previously used markup based approaches to frontend development (e.g., JSP, JSF, Thymeleaf) find themselves relying on frontend JavaScript libraries/frameworks like React/Angular instead. Rightly or wrongly, this trend is likely to continue. A lot of the backend Java work I am involved with deals with creating simple REST APIs that are consumed by more complex JavaScript frontends. If learning this workflow is something that seems worthwhile for you, consider looking at Spring Boot for new greenfield projects. Spring Boot embeds a Tomcat/Jetty/Undertow (your choice) instance into a single executable jar file that serves as a single unit of deployment. Complex configuration is still possible, but it will feel different than messing with web.xml and server.xml configuration files that you may have grown accustomed to with Tomcat. I won't lie - learning Spring and Spring Boot are going to be substantial investments of your time, but they are also highly marketable skills.
Ok, so I think I'll replace 2 with defensive programming in general. General question, but in which cases would you build an exception hierarchy?
You can read more about the Go VM, specifically how it does not exist, here: https://golang.org/doc/faq#runtime &gt; **Does Go have a runtime?** &gt; Go does have an extensive library, called the runtime, that is part of every Go program. The runtime library implements garbage collection, concurrency, stack management, and other critical features of the Go language. Although it is more central to the language, Go's runtime is analogous to libc, the C library. &gt; It is important to understand, however, that Go's runtime does not include a virtual machine, such as is provided by the Java runtime. Go programs are compiled ahead of time to native machine code (or JavaScript or WebAssembly, for some variant implementations). Thus, although the term is often used to describe the virtual environment in which a program runs, in Go the word “runtime” is just the name given to the library providing critical language services.
OK, thanks, this is helpful. I hate those "smoking gun" comments. I remember debugging something for hours and finally narrowing down the problem to one function call in a section of code that was prefaced with a comment like this: /* I don't know if this is necessary, but it can't do any harm, so I'll just call it anyway. */ The fix was to remove the function call *and* the comment. :-) Sorry you had to write your own unmodifiable collections. Just in case, make sure that the various collection views (iterators, sublists, entry-sets, etc.) also prevent modification. It's pretty easy to forget that these views can also sometimes modify the underlying collection.
Remember that go was developed with a different goal than replacing web programming languages. It's been pretty successful in some systems programming like Kubernetes because it being so much easier to use than C and C++ for that purpose.
A big problem we experienced with Go on an API was dealing with optional values in JSON bodies. You need to use pointers in your Go models to differentiate. But when you have nested things with pointers, you end up going down a rabbit hole of verbose syntax, \*and\* you lose some of the performance benefit of Go since all your fields need to be garbage collected.
Nice concrete example. Thanks.
Leaving aside the choice for the frontend (JavaScrapt, JSF, SSR with Templates), Spring Boot + Tomcat for the backend works anyway and is a great combination.
In all of my apps.
&gt; If toUnmodifiableList() behaved properly, this bug wouldn't be a bug. It still would be bad - because it smells like something somewhere else is done the wrong way. This "bug" has exposed an actual bug somewhere else. Ideal solution would be to make ````toUnmodifiableList()```` throw an exception in development and qa environments, but return the same object in production just to be safe.
I haven't heard of Webswing before. This is really neat. It seems to be similar to the HTML5 Broadway backend for Wayland (Linux).
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
My bad, I meant the runtime that handles the garbage collection. 
personally i think it's more beneficial to dig into concurrency/immutability (how that nonblocking trend really works/vavr library) or jump into new language (Haskell is trendy, but there's Clojure, Elixir or go down to Rust) that learn "new technologies in Java". I don't wanna java community to turn into javascript kiddies chasing the next big thing. python community maybe but not javascript.
some of that can be advantage- there's not a better recommendation that being contribute to open source project and with such small pool possibility of recognition is bigger than in java
Jetty?
generics are under development (there's proposal i think). golang has 9 years, and java got generics 8 years after release (at version 5). golang is 13 years younger where java is 23. method overloads- only thing i know that there's discussion what to choose productiveness of programmers vs performance of code.
I've been using Tomcat for ten years. I would use it again. It has had continuous improvement, as has Java and the JVM runtime. The entire stack is widely used, battle tested, mature, hardened, and well understood with a big ecosystem. There are plenty of frameworks you can use on Tomcat or other java web application containers.
it won't due to back compatibility. things like not implicitly final methods/function parameters or no val because same thing can be achieved by "final var tmp" will stay there for ever. on the other hand [dataclass](http://cr.openjdk.java.net/~briangoetz/amber/datum.html) looks great. being established is main advantage and disadvantage of java.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
A few years ago, I fell in love with Node.js and dropped Tomcat like the plague.
You could have a running service in any language you wish. That doesn't mean that it's optimal or pleasant.
&gt; The only benefit of Go is that it can be compiled to a statically linked executable. I am waiting for Graal native-image to be production ready for AOT compilation, that will be a huge boost to use java/kotlin for commandline tools.
Code reviews, pair programming, giving some hints without giving away the whole solution, contributing to style guides, sometimes workshops on various topics from best code practises to agile. We rarely produce design docs
Unless you need the complexity that a full J2EE server gives you, Tomcat is still the standard choice for a servlet container. Feature-rich, reliable, actively-developed, and with a large mindshare. And, I suppose, there's always TomEE if you do need more.
I would take C / C++ over Go for web development any day. Go is an infant with plenty growth potential, but currently not a feasible language for any bigger project.
You tell me!
Rust and Go are about the same age and Rust has generics - I think it's more about priorities and resources than simple age. Java would have had generics earlier I think if the early language designers weren't so adamant that Java should remain a simple language - since that changed we've got generics, auto-boxing, lambdas, method references, default interface methods, try-with-resources, for-each, annotations (and plenty I'm sure I've missed) - more of a productivity language. Heck, for some definition of 'soon' we'll have Raw-Strings, multi-line strings, Expression-Switch, Value-Types, Records and Pattern-Matching... And I hope, eventually, Rust-style enum-variants (and suitable matching support), String interpolation and Async/Await support.
This post feels like an ad for Webswing.
You dropped the entire Java ecosystem buddy, not just Tomcat. :-)
I had a pretty similar experience. Writing a REST API in Go vs Java/Spring was night and day. But part of that is because the Spring ecosystem does a lot of the heavy lifting, and there are a lot of example/tutorials out there. In Go, writing business logic felt clunky — I wasn't a fan of the error handling, lack of generics and relying on `interface{}`, no method overloading/overriding, no annotations, etc. But the compile times for me were blazing fast. I used a watcher like [refresh](https://github.com/markbates/refresh) and the app compiled every time I saved a file. Big plus there.
Looks like it, it was sitting at -2 when I asked. I've been a little worried about releasing a new major every 10 months, but hopefully people are okay with it!
J2EE??? Now that's a term people haven't been using for almost 15 years! :O
Tomcat is still pretty cool indeed. It's supports not only Servlet, but the Servlet Jaspic extension as well, and WebSocket.
Mark Reinhold writes quite convincingly about not allowing cyclic dependencies: &gt; A primary goal of this JSR is, however, to create a module system that's approachable by all developers \[...\]. \[...\] this module system imposes some constraints that are intended to make working systems easier to reason about, and to guide developers toward better practices. \[...\] Forbidding cyclic module relationships is one of these new constraints. &gt; &gt;That such relationships are generally a bad idea is not just my personal view; see, e.g., Kirk Knoernschild's compelling arguments against them in his fine book, \_Java Application Architecture\_ \[2\], specifically in §4.4, "Cyclic Dependencies -- The Death Knell". But I know little about this, so I can't tell how serious the problem you're writing about is.
I've never found that to be useful. If an exceptions is reached at top level, we know it's fatal, otherwise it would have been catched earlier. And vice versa for exceptions lower down in the call stack. That being said, I make reasonably small scripts to process payments and such. Are any of your apps open source?
Big company? 
Nope, ~20 devs, but I followed similar approach in my previous company (20k devs)
LOL , no. I still like Java. But I hate that Oracle imposed a commercial license on it.
LOL , no. I still like Java. But I hate that Oracle imposed a commercial license on it.
Oracle did not impose license. If anything, they clarified and simplified the commercial support of *their* binary. You can get Java binaries from elsewhere, for free.
ye and golang has features that rust don't have and vice versa (probably, i know really little about rust). btw i don't know if annotations should be mentioned with auto-boxing, lambdas, for-each in one line- frankly i find annotation driven development terrible. not that i don't understand spring magic but it's really annoying how unnatural it is (i used to code quite a bit in c and python).
There's the difference between *denotation* and *connotation*. J2EE doesn't denote the same thing as JavaEE (or even JEE) or I suppose now JakartaEE. But it has the same connotation. That is, I'm pretty sure everyone knows what /u/heliologue is talking about.
Look at the techempower benchmarks, now before anyone throws a fit. Look at Jetty's throughput and then look at the max and average response times. It's not the fastest but it performs very smoothly and consistently. For embedded or outside of the servlet spec, I like Undertow
He's talking about resolution time cycles. Runtime cycles are inevitable.
Is the HTTP serialization protocol not SOAP? The benefit of doing RMI over IIOP is that IIOP is a common communication protocol for CORBA based services, allowing for interoperability with ORBs for arbitrary languages and platforms. Using SOAP, EJBs could be interoperate with arbitrary SOAP-based services.
I think that's why it's an alternative and not a replacement. If you're using only remote EJB in a Java only environment, and don't care about arbitrary language and platforms, the CORBA stack is quite heavy, as is the client library. I fought epic battles having JBoss 5 communicate to JBoss 6, and 6 to 6.1 back in the days (the evidence should still be on the JBoss forums somewhere) 
Node? That's old news. The cool kids use [Deno](https://deno.land/) now. ^((sarcasm)) Here is Ryan Dahl's [conference talk](https://www.youtube.com/watch?v=M3BM9TB-8yA) where he discusses all of his regrets creating Node.JS and why he is creating Deno. 
Yeah, well, I'm not talking about JEE here. It's more like a Mike who became a Lisa, and then 15 years later some people still calling her Mike.
We use annotations and RTTI extensively - enforcing validation, performing serialisation, documentation and numerous Spring boot features - DI, proxy generation, aspect programming, service and component discovery, JPA (Spring Data), REST API definitions and more (our own business layers use them too for attributing common patterns of behaviour or declaring rules to enforce). This is fairly common in other languages too - though not to the same extent (and annotations don't work the same in other languages - in Rust they're more compiler-guides for code-generation). 
Really depends a lot on what you are after. Docker is the current hotness for system administration. For that, the ideal docker image is completely self contained and isolated from other applications. Somewhat counter to how the JavaEE servers have worked in the past. That being said, Tomcat works well, and there is even Embedded tomcat, this is somewhat more container friendly [https://devcenter.heroku.com/articles/create-a-java-web-application-using-embedded-tomcat](https://devcenter.heroku.com/articles/create-a-java-web-application-using-embedded-tomcat) &amp;#x200B; I'd say that Jetty is probably the biggest player followed closely by Undertow. Also probably look into Wildfly (formerly JBoss).
Can't tell if serious... This is a terrible idea. Why would the standard library authors make it behave differently if it's in production? Not only is it a lot of work, it's a lot of work for a terrible idea that makes certain things impossible to debug.
That's kind of a different thing. JavaEE isn't a person, and mixing up terms isn't violating anyone's rights or disrespecting a person's identity. I'm not all that bothered by precise usage of terminology (denotation) when the statement is otherwise clear (connotation).
I meant the EJB remote protocol is RMI over IIOP, which \*allows\* interoperatibility with CORBA. It's a nice benefit that adds value to the platform. If EJBs could respond to remote calls over HTTP, and the remote protocol were SOAP (instead of something proprietary to Java), it \*would allow\* interoperability with other SOAP services. For example, you could ideally have .NET web service clients generated using Microsoft's tools connect to EJBs. That would be a nice value add.
Can't you use jax-ws for that?
annotation driven development is java and javascript thing- python's django and flask, ror, scala's akka (not sure) have no DI/IoC/writing (meta)data without code. for me using containers/beams is similiar how tv shows teenagers' crush - really wanna ask her/him out but (of course) it can't be straight forward.... check out [that presentation](https://www.youtube.com/watch?v=-6zT60l5hDc) to see other side. btw that guy has also other presentations about Ratpack and event sourcing.
VS Code and Sublime text key maps! Also love the Scala decompilation to Java even if it doesn't affect me.
If you were designing a *specifically designed* SOAP web service, yes. Which you should absolutely use for new development (if you're not using JAX-RS). EJBs are for all intents and purposes legacy technology. But you could rig an EJB to run off of SOAP, since it's a managed component and how it's wired up is a detail of the application server, you could increase the mileage of your existing EJBs. Or, if you're lucky, you could just rewrite them.
Now I just have to impatiently wait for the community to produce some awesome themes
Trying to do the same thing actually on my end actually.
Material UI plugin with firacode + iScript for sweet ligatures and cursive italics
I’d stick with Tomcat. Biggest change in last 10 years has been more around refactoring code base to support running in an “embedded” mode and Tomcat is still the default web server for one of the most popular web development frameworks for Java — Spring Boot.
Being wasteful at the client is a cost that the provider doesn't carry - at least not as long as it's just below the typical customers hard-limit. It shouldn't be that way but it is. Server infrastructure costs are directly based on the resources you use - especially important when running in virtualised environments where many 'machines' must share the host memory and you may want to spin up or spin down resources in response to demand. I'm a Java developer and have been since the start. Almost all of my experience is on the server end and like it or not, Java is a memory-hungry beast, with many causes - the JVM, pointer-heavy data-structures, high-per instance costs (relative to the instance data itself) and the lag between no longer needing resources and being GC'd. There has been, and still is, huge effort to improve this - modularised JDK, G1GC returning memory more willingly, Value Types. But it will always be a cost that Java has to trade against developer productivity, industry support and competitive performance (because Java _is_ very fast - and Value Types will have a massive effect in some of the places it currently isn't). My criticisms of Java memory costs should be read as a recognition of a problem for Java to tackle, not one with which to demonise it. It is a huge platform that delivers huge value to my customers every minute of every day. But weigh up Java against something like Rust and you see how amazingly low the memory footprint can get (whilst dancing a remarkably clever little jig around the question of high-level vs low-level programming). The costs in Rust are it's learning curve, developer productivity and industry support (the latter two improving fast). I expect Java will have the productivity/performance edge for quite some time but it mustn't stay still.
What are those JBR options for Linux? What did I miss?
Its the internal java 11 runtime for the IDE.
Is the Java 11 one considered stable? Seems to run fine as far as I could see. (I did not use my Linux system for a while)
&gt; the remote protocol were SOAP (instead of something proprietary to Java) Nothing Java-proprietary in JSON...?
It looks like in your [submission](https://www.reddit.com/r/java/comments/b6c3p4/anyone_know_c_can_convert_it_to_java/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Haven't crashed in the 30min I used it ;-)
Have you looked into D? I did a bit of raspberry pi development with c++ and grew to hate it even more so started looking at alternatives and D looks pretty nice. For example the vibe.d web framework looks very simple to use: import vibe.d; void main() { auto router = new URLRouter; router.get("/hello", (req, resp) =&gt; resp.writeBody("Hello, Web!")); listenHTTP(new HTTPServerSettings("localhost:8080"), router); runApplication(); } And generating REST api-s shouldn't be too unfamiliar to someone working on Java: http://vibed.org/api/vibe.web.rest/
i haven't gone though an entire app in detail to check what gets augmented. but eg, for a rest controller i get `class tutorial.SpringChat$$EnhancerBySpringCGLIB$$7f13754c` the real class is `tutorial.SpringChat` i mostly only do simple rest stuff, but if i come across something more complicated i'll try to remember this post and get back to you. or try it yourself - set a breakpoint and use `getClass()` on a bunch of different objects 
It's really hard to know what to expect, and roles differ between companies very dramatically. It really depends on what specific technologies they use, and how they use them. There's a few things I'd recommend learning: Spend time understanding the application itself, and what it does for users. Try and learn how the users interact with the app, and their general perception of it. Try and find technical/ non-technical documentation of the app and really study it. You want to become an expert at it. Learn about the software/ technologies your app interacts with. You'll almost certainly be integrating with other systems. At the least the app will likely save data to a database. It may also use queuing technology. It might talk to some other system to provide functionality/ use functionality. Go through and learn what aspects of Spring your app uses. Go and study those in-depth. Learn what other libraries your app uses (e.g. Apache Commons, Joda Time, Google Guava, etc). Learn about the business itself. How does the app fit into the organisation? Does it generate the majority of revenue? Or is it a less important product? Learn about the development lifecycle your company uses. E.g. is it "Agile". How do the devs know what to implement. Do you have Business Analysts to write requirements. Are there testers to validate what you develop. How does deployment work? Who does deployment? Go have a look what tests there are for your app. These will give you a great place to start to understand how the app works from a code point of view. There's a lot more, and I don't want to overwhelm you. Try to enjoy the role. The company likely won't put too much pressure on you since you're new. Good luck, and congratulations!
Thanks for such a detailed response : )
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Go is quite convenient for highvolume web or network apps. Goroutines and channels really makes multithread programming easier. And language is really simple. This is his obvious advantage . However, I would not want to implement complex business logic on Go after working with C# or Java.
Not yet, thanks for the suggestion! :)
I definitely agree with you on most parts. It's just that I'm a bit allergic to "Java is a memory hog" discussions when I hear most SREs' claim that Java uses 500MB minimum for any process. There's a lot of FUD around it.
Yeah definitely. We did some experiments with it and it's pretty damn awesome. 
&gt; only thing i know that there's discussion what to choose productiveness of programmers vs performance of code. Err what? THat's resolved at compile time. It should not impact the performance at all. They basically stopped developing the Go grammar when they got to the hard parts. Method overloads being one of them.
Lol technology just exists to solve real life problems. Asking what you expect technically is for you to see; its the problem that you have to solve only that can give you information what "good" part of spring you can use. So welcome to the professional world where you will find spring is just another tool, better read about the application you will work on what it solves and what it lacks things like that. Good luck and success. 
expect lots of meetings talking about bullshit. Dont read a thing before you start because its a waste of time. Real world coding aint what uni or fucking around in your own spare time is starting things from scratch. It goes like this - have pointless meetings - do some piss poor estimation to satisfy scrum master - get some vague as fuck ticket that no one can explain - google shit until you find something that could work - hack some shit together - some how write so half ass unit tests to satisfy said teammates to pass code review - repeat 
&gt; golang has 9 years &gt; golang is 13 years old Which one is it? 
Generally companies who hire a starter like yourself will expect there will be quite a bit of hand holding. Don't worry about it. You'll find out what is expected of you and whatever you don't know you'll be able to figure out (with internal or external help). Just be positive and eager to learn.
Well there's truth and fiction in that - at least for most GC configurations. While you _can_ allow a very low minimum heap-size (and be careful to avoid large heap-hogs to stay referenced) and configure aggressive GC parameters and goals, because of the way allocation and GC interact, you do need to allow for significant heap growth or pay penalties in throughput (in the form of many small GC's - or worse, a full GC). If your application doesn't produce adequate periods of low activity then GC won't likely return much memory to the OS even with heap-utilisation often quite low. That's the negatives of GC. A positive is that it often proves to be much easier to think about many algorithms when you give up responsibility for tracking deallocation responsibilities are removed. Another is that at least some of the deallocation effort occurs outside of your thread. Java's problems are often overstated - that it's slow and bloated - but I am also frustrated in equal proportions by the pretence that these challenges don't exist - they need to be acknowledged if the platform, it's tools, and the ecosystem's many library developers, are to be willing to put the effort into addressing those challenges. Looking at the efforts going in project Valhalla (and in related topics beyond the current scope of Valhalla) and in project Loom I see a lot of future potential on the horizon - and likely to deliver non-trivial portions of this value with the same impressive backwards compatibility that makes for quick, broad adoption.
By now the standard for web applications has shifted to providing a REST API and then having a JavaScript SPA (Angular or React) consume that REST API. Typical frameworks are either application server agnostic (so you can use Tomcat, Jetty, Undertow) or don't even use a servlet container at all anymore. Servlets are something you're generally not exposed to either anymore, and only really old systems are the ones where JSP is still in use. Tomcat as an application server is fine, but workflows have changed a lot since then. War deployments are becoming rare, there's a shift towards deploying docker containers with runnable jars instead. Rendering HTML on the server side is also rare, and when it's done it's typically with simpler templating engines like Thymeleaf. So even if you're sticking with Tomcat (most of the work I do with with Spring Boot and that's using Tomcat by default) you'll need to learn new patterns and tools.
&gt; Java's problems are often overstated - that it's slow and bloated - but I am also frustrated in equal proportions by the pretence that these challenges don't exist - they need to be acknowledged if the platform, it's tools, and the ecosystem's many library developers, are to be willing to put the effort into addressing those challenges. Definitely agree there. Progress on that part has been slow. The container aware mechanisms in Java 8 for example were completely broken. I'm glad it's something they've been working on because taming the Java memory beast when running in containers isn't fun. Spring made a lot of progress there as well; the start-up phase is a lot faster now and a lot less memory and CPU intensive. 
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Using annotations as a core part of framework design is becoming pretty common now in many languages - how annotations are implemented varies and some are more directives to the compiler rather than RTTI. Consider the similarity of a [Spring Boot (Java) REST controller](https://stackoverflow.com/questions/28228068/spring-boot-full-rest-crud-example/28230056#28230056) (example chosen at random) and a [simple example in Rocket-rs (Rust)](https://github.com/SergioBenitez/Rocket/blob/master/README.md). The approach is completely different - The Attributes in Rust are not runtime information, but you can see how they're used declaratively to drive runtime-behaviour in very similar ways. This use of annotations exists in many languages.
The little maven improvements seem kinda neat.
&gt;As long as the users don't demand modularization, libraries have no incentive to adopt JPMS. The big frameworks / libraries have it in their backlogs (like JUnit or Spring), but the majority of small libraries out there has no resources or motivation to do this. But users will demand it. Next major release of Spring it supposed to be modularized. Their main problem is dependencies that are not yet modularized. And it is only a question about time until Jakarte EE adopts it. So if you want to stay relevant as a library you really have no choice. Yes, there are a lot of libraries that will reach the end-of-line with Java-8 compatibility here. But in the end it is only a question on time until the whole ecosystem is modularized. &amp;#x200B; The question is then regarding the applications people developer. And I think, that will probably be a slower uptake. But i'm sure it will happen. But unless they deprecate the classpath. I think there are some people that will still be using the classpath 10 years from now.
I'm downloading.... Yayyyy
JSON is a data format, how it is used proprietary to Java. &amp;#x200B; In other words, using JSON, could you use Microsoft's tools to create a .NET client with JSON transport that would be able to use an EJB? You could do that with SOAP as the transport.
Ligatures is one of those love or hate things, but I love it. I think I'm using firacode but there are several good options.
They've been offering both 8 and 11 runtimes for the EAP for the last few months so I suspect they've caught most incompatibilities.
Sounds like you have a terrible scrum master 
Use Gephi toolkit! I’m just doing the same But currently I have some trouble to implement it :/
&gt; In other words, using JSON, could you use Microsoft's tools to create a .NET client with JSON transport that would be able to use an EJB? You could do that with SOAP as the transport. There's no automatic service discovery as standard (though there are efforts to provide that, too), mostly because of JSON's ad-hoc nature, coming from JavaScript. The data format itself is easy to produce and parse in any language. I think using gRPC would make the most sense for a new remote EJB protocol, though... 
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
&gt; Navigation from Java stack trace to the relevant position within a line Sold.
I'm not sure this should be turned into a multi-process application since every part is tightly coupled. I mean, you _could_ make the website and the database module separate processes, but what should the website do if the database is unavailable? The only thing is throw away the data, which is not an ideal solution. Redeploying the entire application for every change is part of the process, as well. You could use auto-deployments of some kind to make that part easier. One thing I'd personally do is make the application multi-threaded and put the communication with discord in a different thread. At that point, you make a message queue that posts to the discord part which can then do the necessary work on its own. That way, the application doesn't lock up if discord is unavailable.
&gt; I made some simple Spring and JavaEE Web APIs for university projects If you want to go in refreshed and strong ... You could try reviewing those projects, or try building a new hello world application from scratch to refresh your memory on the bits and pieces. But what your employer will likely be looking for is energy, drive, a good attitude, and ability to solve problems. Once you get settled, let them know you're looking for a task to work on. Ask them if they have a problem you can try solving. Be the helpful "I'll go work on this and figure it out" guy. Good luck! 
You can expect to be overwhelmed. You know nothing. Hopefully your employer gives you the time to learn or all the preparation you did will be for nothing. Don't get fired.
I don't know the scope of your the application. But I assume you are a single developer, and we are not talking hundreds of thousands of lines of code. If you go ahead and split the application into 3 parts for those reason you listed I think you will end up in a situation where * You now have 3 processes that needs to be up to have your system running, if **any** of of them goes down the whole system goes down. * What ever time you save by splitting up your deployment into 3 pieces will be eaten by managing a docker/linux services installation. * Likewise functionality will in some cases be easier, but in many cases you now also have to implement functionality for communication between layers each time you add a new feature. I'm not saying modularization in general is a bad idea. But you add a lot of complexity which can take the focus away from actually getting the job done. So only apply it if necessary. Nothing wrong with monoliths (until a certain point). &amp;#x200B;
What support will there be for method handlers when Graal gets Java 11 support? Will there be any support for non-direct method handles? I assume handling of direct method handles will be more or less identical to how reflection works in Graal now. &amp;#x200B;
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
I usually go with Tomcat, unless I want to embed the web container directly into my code/jar - in that case I'd go with embedded Jetty. Anyway both are pretty solid.
Will OCA8/OCP8 be phased out soon?
Shut up and take my money
It also does that for kotlin. So nice
There is usually nothing wrong with a monolithic application ;) - as far as the overall size and complexity is not huge. I actually have seen developers introduce much higher level of complexity (and thigh coupling) by trying to separate things that should have stayed coupled. [https://martinfowler.com/bliki/MonolithFirst.html](https://martinfowler.com/bliki/MonolithFirst.html)
Yummier than ever! Powerful than ever! Darcula + Material Theme is so very eye candy! Kubernetes support, Java 12 support! 
I can confirm this. Somebody posted an e-mail from Oracle OCP team about the possibility to take 1Z0-816 if you have OCA Java SE 8.
I was in similar position like 13 years ago - back then I read Spring in Action - that definitely helped - and also looked at some Spring libraries that one would use in real life - e.g. these days it would be Spring Boot, MVC, JDBC etc. Last but not least (and you can maybe save that for later) what really helped me as a developer was to look at how different languages and programming paradigms (e.g. functional programming) are doing this.
Once you go material UI you never go back 😂
Thank you for the article, interesting read
I'm not sure what you mean by clustering, but I recently learnt of the Kmean algorithm to group n dimensional points in an arbitrary number of cluster. I used it to identify the principal colors of an image 
I'm aware of the k means algorithm. I want to cluster geographical regions in a map. I asked in this sub, because I want to know whether there is a library that implements a clustering algorithm. In case there is, I don't want to waste time implementing it myself. Thank you!
&gt; But users will demand it. I don't see much demand now (next to none) and I doubt this will change in the future. Modularization as of now is too much a hassle with barely any benefit (especially in the eyes of managers), with the way we create applications nowadays (microservices, dockerization).
What you fail to take into account is demand that is not explicit. If you choose to use the Spring Framework in the future you implicit also end up saying I want JPMS. Because any library that is part of Spring will need to be modularized. The same goes for Jakarta EE. So by the sheer amount of Spring users you send a very clear message to library owners... Either you modularize or we are not going to use your library. This will take time, but it will happen. And I would take a modularized monolith over a bunch of microservices any day.... 
I think the answer to the question is no. I really liked the article and am going to give Testcontainers a spin but this doesn't strike me as what Arquillian sets out to do. Arquillian aims to provide you access to the internals of the application server. On the other hand I think this technique is closer to fulfilling the Arquillian motto "Write Real Tests" because you test your actual distributable and not some shrink-wrapped subset that you've created specifically for the test. So maybe the answer is yes?
Another vote for the monolith over here based on the description you have provided. Try to figure out why the application is crashing and try to streamline the development and deployment processes so that redeploying doesn't feel like an obstacle. It is possible to achieve sub-second (okay, maybe sub-three-seconds) automatic redeployment-on-save on many application servers.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
My test now are not highlighted in green in the Project View :( why you do this MATERIAL?!
Spring is waiting for the optional dependencies they are using to declare a stable module name. These are libraries like db access, hibernate or security, because they are wildly used. Spring is passive here. It's for the few users that want to try out running Spring on the module path. Even every other dependency the user has in their project doesn't need to be modularized (lifted to automatic-module). I expect the grand part of users to just keep Spring on the classpath as before, simply ignoring its internal modularization.
Man I just read my story .. damn we all live in same world lol.
Don't test it on H2. You could try [https://www.testcontainers.org/](https://www.testcontainers.org/)
That stuff happens too often at too many places.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
What you have in `@Query` is [JPQL](https://en.wikibooks.org/wiki/Java_Persistence/JPQL), not SQL. But I guess Hibernate is letting you use an H2 function which is not a part of the JPQL specification. For portability, you should only use the functions [defined in the specification](https://en.wikibooks.org/wiki/Java_Persistence/JPQL#Functions).
Use sql standard function, or use jpql with jpa. 
Having multiple one is not useful. depending on which version is referenced where, different program may use different jvm. However, the jvm is particularly compatible between version and I would not expect any problem. 
I went back and some colors stayed
I have about 8 or 10 Java versions on my Mac. I use [jenv](https://github.com/jenv/jenv) to manage this.
It is fine. Every Java application will use default system JRE defined in system variable, unless it comes with it's own jre. Check that default jre is overridden with older java version or not. 
Don't ever run integration tests or development on a different database and expect it to work. There will be differences. 
Lots and lots of money in the medium to long term. Also, boring meetings.
That is not correct. As a developer it is often useful to test if your application is working with different java versions. So the actual answer is "for most people it is not useful". Also if a program is really prefering an older version (e.g. because it is more stable there for some reason) and you have it installed additionally, then why not? But this case should be very rare. Mostly programms just use your default java installation (e.g. linked by JAVA_HOME).
&gt; golang has 9 years, and java got generics 8 years after release (at version 5). golang is 13 years old and java is 23. That's like saying that Ford only added seat belts when they were 52 years old, so it's OK for Tesla to build cars without them until 2055. When Go was released at 2012 it was already well established that storing and passing `void *` and casting it whenever you want to use it is not something that should be encouraged.
I have Oracle 8, 8-graal, 9, 10, 11, and OpenJDK 11 just a matter of which one I set as the JAVA_HOME
Or implement your own JPQL function, but make sure you define it in every dialect you use.
Other people have giving you the answer to your question so here's a useful tip: I highly recommend using the `@Param` annotations on the method parameters so that you can use name based placeholders instead of number based.
It looks like in your [submission](https://www.reddit.com/r/java/comments/b6sbup/whats_the_book_that_everyones_read_on/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Just finally subscribed when I saw this. Personally I think Baeldung is mostly good at SEO, they keep popping up when I google something Java-related. However, the blog posts themselves a) are often half based on the official Spring docs and b) never quite go into the detail that you need to actually get things done. Sometimes there are bits and pieces of useful information but I would be hesitant calling them an authority on Spring.
I agree with the ML libraries. I doubt Java would ever catch up to the maturity of Python ML libraries. At this point, I hope that GraalVM polyglot works out. My plan is to just call the popular Python's ML libraries from Java in GraalVM's clean manner.
I doubt async/await is coming to Java and honestly, I think it is for the better. Project Loom's approach of implementing [Fibers](http://cr.openjdk.java.net/~rpressler/loom/Loom-Proposal.html) means that our existing synchronous code will suddenly get all the performance and scalability benefits that async/await code has.
OpenCV has an implementation of k-means, and IIRC has Java bindings... 
This is not a potential buggy situation. This is fine.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
It looks like in your [submission](https://www.reddit.com/r/java/comments/b6u0bi/java_8_features_tutorial/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
They're all Java 8 JVMs. If there was an incompatibility between 8u171 and 8u201 we would probably know by now.
This host have to support Apache Tomcat or another application server like JBoss. You need deploy your war/ear on the host. 
You have any idea if linux hosring by godaddy supports tomcat?
Check out embedded tomcat or springboor.
If you have a root shell on the server, you can run Tomcat. Even if you have a non-root shell you could run it on a high port. The main issue you'll have is how much memory you have. Not knowing your application, I'd say anything less than 512mb would be an issue, but I wouldn't expect to scale your app very far on a basic host.
There's already a lot of themes made Link: http://color-themes.com/?view=index 
Buy VPS.
That doesn't change anything; only how you deploy it. If OP doesn't have shell access (or any other method of launching a process) it doesn't matter how it's deployed.
put it in docker and you can run it anywhere. offtopic: people still use jsp, huh
Pls tell better alternatives to jsp. I mostlt use mix of servlets and jsp
It does not hqve to be incompatibility. It could also be some performance issue/improvement or a bug fix.
&gt;Go is an infant with plenty growth potential, but currently not a feasible language for any bigger project. Lol, what are you talking about? Kubernetes is written in Go Istio is written in Go NATS is written in Go (not the clients) How is it not feasible for any bigger project? Plus all of HashiCorp's tools, how much have you used Go or how extensively have you researched it? Your opinion is not based on any facts from what I can see.
Éclipse doesnt do such things. It ils no deployment tool. Best way to go ils scripting your deplyment and use remote debug when needef
I'll look into GraalVM. I am hopeful for Deeplearning4J.. specifically that it reads some common model formats. Data scientists are probably always going to prefer training models in Python. But for using the trained models I am hoping that Java will be able to suffice (just to keep the architecture from being too fragile).. I always get scared trying to call one language's ecosystem from another, reliably.
I am not sure that we're talking about the same thing, but I have written some basic code to generate gexf files from a bunch of inputs (mostly spreadsheets). This works: the resulting gexf file is read, parsed, and displayed properly, which means that I must be doing something right :-/... Cutting a long story short, not sure that I can help, but ask away and I'll see if I have anything to contribute.
thanks for the tip ;)
thanks, now i understand the problem :)
People still use PHP, so...
Maybe you can make a symbolic link (something like netlink) between the server and your cmputer (if they are on the same network) -- then, Eclipse should treat that folder as if it were on your machine.
Yes, it can. All you need is a webhost with linux (I use Ubuntu &gt; 16.04) and a remote access to it. 
Thymeleaf or RESTful apis with a js framework frontend is what's popular now.
Our enterprise is on Java 8. Moving to any new dependency version is such an overhead for us, the validation cycles, the rollouts. Not fun.
Plus the latest releases were a bit underwhelming to say at least hence not many companies actually see any incentives in moving to recent versions. Pretty much every customer I work with is still on Java 8.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
If you want to simplify the deployment as much as possible then you can also go without Tomcat and just directly embed Jetty in your jar (or use Spring Boot). Then if you embed all dependencies in your (uber)jar you pretty much can just run `java -jar youruberjar.jar` Voila... and you can now run your webapp on any server/OS that just has java, no Tomcat or dependencies needed...
Yeah! I have to do the same at first: Just my problem ls: I have a Matrix as input, with labels and springweights, And a nodes list with some extra info, I have to append the extra into list to the existing workspace and i don’t know how to do that in code. (It works fine in the gephi program tho) And i have to change some columns up, eg create a new one called image, with the Id information from the dataset And put the column from the extra info nodes list, as the label and display it. Do u have an idea? So the Matrix input works fine and i can display my Cluster graph, but I cannot append the extra Info Nodes list 
I think it’s going to take a major rewrite of their software before businesses upgrades to 9+. Most people are happy with 8, and every thing supports it. I’ve got production software on 8 right now, and until that whole entire stack is shutdown, it will continue to run 8. That might be for some time to come, a long while.
&gt; until that whole entire stack is shutdown, it will continue to run 8 Careful with updates though, you now have to pay for any new JDK/JRE from Oracle. I doubt there are no security vulnerabilities whatsoever in 8_192 (which *I think* was the last release before cutoff date)...
The hardest part of the move from 8 to 11 wasn’t modules (obviously because you don’t have to use modules) it was realizing what was pulled out of the standard jre between 8 and 11 and finding the maven dependency to bring it back in. Like the xml/Jaxb stuff.
I’m not nuts, I don’t run the Oracle JRE’s And for my stuff, it doesn’t handle user inputted data. Mostly UDP stuff.
The validation cycles need not change. The new feature releases have roughly the same probability of breaking your app (in a way that requires a code change) as the old semi-annual "limited update" releases (8u20, 8u40), which also requires a full validation cycle, as do the quarterly patch releases. Both feature releases and patches try not to require code changes, but both occasionally do (8u202/11.0.2 had [some significant impact](https://pangin.pro/posts/computation-in-static-initializer) that [broke some apps](https://cl4es.github.io/2019/02/21/Cljinit-Woes.html)). As under the old model, whether you choose to remain on an LTS feature release and upgrade only patches or upgrade to each new feature release, you must upgrade your JDK every 2-6 months and perform a full regression suite. If somehow you got away without doing that under the old model, maybe your luck would continue under the new one. However, as JDK 9 was the last major release, upgrading to it requires some work. If you then keep up with the feature releases, you won't need to ever do another major upgrade again.
&gt; I think it’s going to take a major rewrite of their software before businesses upgrades to 9+. This is simply not true. Few applications require anything more than updating their dependency and maybe adding some command line flags (if the application is using internal, undocumented JDK APIs, for example). 
I don't think you have to pay just for using it per se, only if you use some specific features - like the profiler - and even then you have to use it directly in production. Or did I miss anything (I do not read all the fine print)?
That's the old policy, afaik, which differentiated by feature. Now it's blanket.
Have you ever worked on major deployments before? Like distributed systems that are core to the business? Multiple servers with a few Java applications running on each server?
https://docs.aws.amazon.com/corretto/latest/corretto-8-ug/downloads-list.html
Ha! but maven is way too modern for the archaic software that's hanging around stuck in older versions of the JDK. 
Ya. :-( 
I am not sure that you can do what you want in the matrix input format. It is, however, trivial to do it using the gexf format - you just declare attribute sets for the nodes and edges, and that "additional information" is loaded into Gephi, where it is usable (ie, you can filter based on it, colour code based on it, etc). You can find a description of the way to do it [here](https://gephi.org/gexf/format/data.html). That example shows how to do it for nodes, but it is trivially extended to edges. 
I‘d need it as java code :/ Mhmm I ve found how to import data and filter and make graphs as java code, But can’t find examples for my problems.. that’s what I need :( 
Not sure that u understood: I want to write a program with java, to create the clustergraphs automatically and export them as svg/pdf directly So there’s no need to open Them with gephi again 
Well, "all" you need to do is write a piece of code that reads your matrix, plus your additional attribute data, and writes it out as a GEXF file. There's even a handy library to write out those files (see [here](https://gephi.org/gexf/lib/)). 
Ok - isn't [this](https://github.com/gephi/gephi/wiki/How-to-manipulate-attributes) what you're after? 
Yes that’s what I’m after, I already use some code of these examples to create my graph, but for now only from the imported matrix. I cannot append the second data import to the existing workspace, and i can’t find anything about it. I’d show u my code but it’s on my work pc and I won’t work till Wednesday :( So: first import of the springweights, creating new workspace etc works great in my code, I have an output that looks great, But it needs to be labeled with the information from the extra info nodes table (as I’d import it in gephi) It just creates an extra column in my data set with nodelabels I want to use. But I can’t figure out how to do it. And without my graph is kind of useless as one can’t retrieve any information from it 
I've been testing and found that I can move from Oracle 8 to OpenJDK8 from AdoptOpenJDK without any currently identified impacts. AdoptOpenJDK indicates they'll continue supporting Java 8 at last through 2023.
Academia loves it when you release new versions a matter of days before the start of the semester! It makes for a very short turn around time on testing class activities in order to stay with the most current version. It was obviously a huge hit for changing standard process flows with the recent change to JavaFX.
Yeah, there are a bunch of options for alternative JDKs - I was just reminding people that "staying on 8" won't mean just "carrying on as before", if you are on the traditional Sun/Oracle one.
It looks like in your [submission](https://www.reddit.com/r/java/comments/b6xkcn/new_subreddit_for_discussing_programming_languages/) in /r/java, you are looking for code help. /r/Java is not for requesting help with Java programming, it is about News, Technical discussions, research papers and assorted things of interest related to the Java programming language. Kindly direct your code-help post to /r/Javahelp (as is mentioned multiple times on the sidebar and in various other hints. Should this post be not about help with coding, kindly **check back in about two hours** as the moderators will need time to sift through the posts. If the post is **still not visible after two hours**, please **message the moderators** to release your post. Please **do not** message the moderators **immediately** after receiving this notification! Your post was removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
I wouldn't use such approach, because it makes domain layer depending on technological library. I think, this is an antipattern for "pure architecture" (or hexagonal architecture). You pay very high price (the dependency) for very little benefit (the interface). Now, your domain model is in the hands of library provider. It they quit, you have a problem.
Well, that and dealing with third party apps that are still dependent on JDK 8. I'm looking at you JIRA. 
Could you clarify what iScript is? Having a hard time finding what you may be referring to.
This is my opinion in the context of web development, Kubernetes is a "mission critical" software, not your usual microservice. Go is difficult to express abstract business logic with. Of course it is possible to write a complex project in Go. It's possible in any language. I just stated my opinion and my personal preference (:
Yes. I don't see how this matters, though. Any kind of Java deployment must be able to upgrade the JDK every quarter or so to stay secure, and also to upgrade the application itself. Sometimes, you need to do both at the same time (even security fixes, like the recent 8u202, can break your app). Upgrading to JDK 9 is like upgrading any major Java versions, perhaps somewhat more than usual (it used to be higher but has decreased now that popular libraries and tools have migrated).
Just stay on 11, whats the issue?
for me, the biggest cost is the huge portion of the library ecosystem that's now being left behind. the main projects have updated to support java 11, but there are 1000s of java 8-compatible projects out there that will never be updated to support java 11 it's no longer possible to be a casual Java library developer - you have to be prepared to do releases on the same schedule that Oracle is following the internal data structures and APIs that the library ecosystem depends on (and which enable many of the elegant and performant aspects that end users love) are dramatically less stable than they were prior to java 9
Also academia is constantly behind the times by several years anyway. 
Yes. As the top post says, we just needed to add in a few dependencies and everything worked. It took us a day of testing.
It's all good though, there's still plenty of jobs in WebForms! 
I've spoken to teachers in private before and quite logical (and sad) how content of a semester is decided, but within that context it's still possible to at least limit the old/outdated material or mention its an old way when using it and showing the alternatives. I was lucky JavaFX is only mentioned for two sessions and things quickly moved over to web based ui. There is nothing wrong with using JavaFX but there's also the reality why it got moved out of it.
Academia isn't known for using the latest trends. Your argument doesn't even make sense
Follow your passion. If you’re passionate about something, you’ll not likely feel “lazy” about those pursuits. Follow your heart. If you are truly passionate about what it is you do, you will become a valuable asset for your employer. Choose your path accordingly. Good luck!!
Yeah, initially it seemed to be simple: Oh it's just an --add-modules command line flag (in Java 9 and 10). And then, when we get to Java 11, the first version to be really supported by application servers like Wildfly, the solution has changed again, now we must add external modules and hope that they have worked out the little details of split XML packages and whatnot. No matter how many times they say that upgrading 9-&gt;10-&gt;11-&gt;12 is just like updating 8u20-&gt;8u40-&gt;8u60, that's not what I've seen in the real world. The deprecation and removal rate is much faster now.
I haven't looked into Deeplearning4J before. This looks really good. &gt;I always get scared trying to call one language's ecosystem from another, reliably. I can't blame you on that one. In the past, interop between languages on the JVM were filled with limitations and corner cases since it was done at the bytecode layer. With GraalVM the interop is at the language's abstract syntax tree layer. Many of the issues we have seen previously goes away and the overall experience is better. 
I am not arguing anything. I am pointing out the release date compared to the academic calendar. It may not mean anything to you, but you shouldn't bash on people who live a different experience. 
In the classroom, I usually have a wide set of JDK's so I can test the same thing across different versions. I also drag the current version right in and deal with the issues live in class, which is not the typical approach for faculty. I like that students get to see troubleshooting strategies so there is more than the one-time perfect programming approach. So to me, it isn't a problem but an observation on how it has an impact on academia. The issue, if there was going to be one, is most faculty do not like to look bad when things don't go in the pristine sequence they've previously rehearsed. This is another reason people may perceive academia as being behind the times.
It matters because of existing practices and policies in major corporations. Software versioning schemes have been **major.minor.build** for quite a long time now and it is baked into many devops processes that a change in **build** is considered safe enough to push out, run a quick smoke test and deploy to prod. Changes in the **minor** number generally indicated either addition of or removal of some capability and those updates triggered longer testing cycles. Changes in the **major** number expected potential code changes and full blown regression testing and are usually planned as a release of their own. Going to N, N+1, N+2 now provides no such understanding of the level of change being presented so each one will have at least the **minor** number level of testing. I find it interesting how with Java we keep being told how there's no difference in the changes and *you had to do it anyway* whereas the Oracle Database engine uses a numbering scheme of **major.maintenance.applicationserver.componentnumber.platformnumber**. If this numbering scheme and bi-yearly update is so much the wave of the future, why doesn't Oracle adopt it for their database engine?
Wow, JEE got retarded version of Spring Data JPA 
There is no doubt psychology and habit are important factors, and people will take time to adapt, but that people made wrong decisions in the past is not a good reason to keep doing them. The whole idea of semantic versioning is deeply flawed, but it is especially irrelevant to the JDK (as well as to many other projects). Numbering versions based on the probability of breakage is particularly hard (especially since the goal is to break as little as possible in any kind of release -- patch, (old) minor, (old) major or (new) feature), and if you follow arbitrary rules, the numbers become completely meaningless. For example, the number of applications broken by the removal of, say, `java.util.jar.Pack200.Packer.addPropertyListener` in JDK 9 is likely much smaller than the number of applications broken by an internal security fix to how HotSpot initializes classes in JDK 11.0.1/8u202. In any event, people will need to internalize what the new version numbers mean, but if behaving recklessly worked for them in the past, maybe it will continue working for them. &gt; If this numbering scheme and bi-yearly update is so much the wave of the future, why doesn't Oracle adopt it for their database engine? Maybe they will, but OpenJDK is an open source project [led by the OpenJDK community](https://youtu.be/W-l0Huhb40s?t=1312) (most of the leaders are Oracle employees, but the control is not direct). The [original proposal](https://mreinhold.org/blog/forward-faster) did, indeed, call for a different, time-based version numbering scheme, but it was disliked and rejected by the community.
What do you think has changed in this version of Java which would have an impact on an academic course?
In my 20 years of knowing Java since when has this become a concern? 
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
&gt; The deprecation and removal rate is much faster now. Yes, but that doesn't mean that the breakage rate is faster. Removing a deprecated method that no one uses is often less disruptive than a change to the GC algorithm. The real question is how much effort, and what kind of work you need to do to upgrade 9-&gt;10-&gt;11-&gt;12 (while trying to separate the disruption that 8-&gt;9+ caused).
Except early-access is available from pretty much the moment the previous version is released, and as the version is finalized about 3 months in advance, you have at least three months to tests, and as there are no more major features and upgrades are easier and more gradual, the chance you will need to work hard on migration in those 3 months is very low.
Why are you comparing dates as strings in the first place? Just compare `lastModifiedDate = CURRENT_DATE` directly.
the xml jaxb stuff has always caused issued on jre version changes, it just had to cause one more headache on the way out.
There's been a 13 EA docker image from before 12 was released. I assume ever since 12 was branched.
Tl; dr: if you think running a REST server in every module is overkill, then it probably is. Reasoning: Microservices are not a panacea. If you don't split your app exactly right, then what you end up is a distr
Can you elaborate why this is a "high price". High in terms of what? How is the model "in the hands of the library provider"? The price you pay is a dependency on an interface that – if in doubt – could easily be replaced by a 1:1 copy and according implementation. Don't get me wrong. I am all in favor of separation of concerns, separating domain from technology and avoiding to leak persistence technology into clients but at some point the rubber has to hit the road and I'd much rather see a pragmatic solution for that over cargo-culted endless indirection adapters that just boilerplatedly forward calls 1:1. It's an interface after all. Can't be easier mocked than that.
It's obviously inspired by Spring Data JPA. It's made some design decisions that – from a Spring Data JPA point of view – would be considered suboptimal. However, calling this "retarded" though does not add anything to the discussion.
&gt; you have to be prepared to do releases on the same schedule that Oracle is following You really don't. Most Java 1.0 code should run, unchanged on 12. Libraries that have issues are libraries that use undocumented internal APIs that people were warned not to use as they could be removed without notice (although ultimately warning was given). But yeah, you can't casually write a library that uses internal APIs that you're asked not to use, and not maintain that library, and expect that it will continue to run. 
Read the side bar &gt;
Enabling Java code to run in a blockchain environment: https://github.com/aionnetwork/AVM Aion: New Version of the Java Kernel and Docker Images, Vision on Public Networks Roadmapping https://medium.com/paradigm-fund/aion-new-version-of-the-java-kernel-and-docker-images-vision-on-public-networks-roadmapping-new-19bf677b1f68 
Blockchain and crypto currencies are taking over every aspect of our lives that's why it's good to start learning this technology as Java Developers
A Java based blockchain VM sounds very interesting indeed.
For those interested, here are a few resources available to learn more: &amp;#x200B; • Aion Virtual Machine documentation - [docs.aion.network/docs/aion-virtual-machine](https://docs.aion.network/docs/aion-virtual-machine) • Java Smart Contracts Hit The Testnet - [blog.aion.network/java-smart-contracts-hit-the-testnet-ef0b8810f26e](https://blog.aion.network/java-smart-contracts-hit-the-testnet-ef0b8810f26e) • AVM Starter Guide - [github.com/BlockDevsUnited/Aion-AVM-Starter-Guide](https://github.com/BlockDevsUnited/Aion-AVM-Starter-Guide) • Hello World… from the Aion Virtual Machine! - [blog.aion.network/hello-world-from-the-aion-virtual-machine-25038ac62f17](https://blog.aion.network/hello-world-from-the-aion-virtual-machine-25038ac62f17) • Debugging Java Smart Contracts - [blog.aion.network/debugging-avm-contracts-4a3256e86221](https://blog.aion.network/debugging-avm-contracts-4a3256e86221) • Migrating to Java smart contracts from Solidity - [learn.aion.network/docs/migrate-solidity-to-java-smart-contract](https://learn.aion.network/docs/migrate-solidity-to-java-smart-contract) • Java vs. Solidity Fuction Comparisons - [learn.aion.network/docs/java-vs-solidity-function-comparisons](https://learn.aion.network/docs/java-vs-solidity-function-comparisons)
Yes indeed, it definitely makes writing smart contracts and Blockchain Development easy
I think until they figure out some of the scaling issues we'll be okay for awhile.
seriously
Aion is all these 3 things at same time: 1. Dapp platform with a VM 2. Router that transfers Value &amp; Logic between different networks 3. Framework for spoke chains that enable infinite scalability. You’ve heard me say it over over again...AION is leading the way in interoperability and scale. They will be the dominant force in enterprise solutions...I am betting on it! Proud to be a teammate! Check out @JRegenor’s Tweet: https://twitter.com/JRegenor/status/1088574647594037249?s=09 James Allen Regenor joined Moog Components Group in 2013, and his responsibilities include new capabilities development, business development, innovation strategies, and scenario-based strategy designs. Currently, he is tasked with creating solutions for customers’ aircraft sustainment challenges by leveraging Moog’s market-leading 3-D printing, blockchain, and AI capabilities. Additionally, Regenor is innovating traditional supply chain strategies with his patent-pending blockchain-based solution, VeriPart Trust me scaling solutions are being implemented and AION is leading the way, I don't know about you but I'm a Java engineer and I'm getting into smart contracts and Blockchain dev now
Scaling solutions are being implemented as we speak and AION is leading the way in that regard through Interoperability but the main reason for this post is to introduce Java Developers to the AION virtual machine which is based on the Java Virtual machine
Here is my Java library which does the encoding/decoding required to interact with Ethereum smart contracts https://github.com/esaulpaugh/headlong
crypto currency is garbage.
Is that why JP Morgan chase and Facebook are creating their own coins and implementing Blockchain technology? Those are only two examples out thousands Blockchain and crypto currency are different things anyway
until you can spend the stupid things somewhere, it's garbage. Plus, you need a room full of computing power to find anything these days.
That's where adoption comes in and it's happening at a fast rate, you can chose to ignore it but it's coming
I have been using vert.x on various projects over the last 6 years, since version 2.x. it's my goto framework for most things. The hardest part for me is getting most engineers to be ok with the non Spring approach. I have also used Spring on and off for the last 15 years... And have always disliked the black magic. In our current stack we use vert.x to serve our graphQL layer, but ended up using spring boot for our services. The use of spring here was mainly a compromise to allow developers to feel more comfortable with a framework they already know. I do agree that spring has lots of parts that makes some things easy, until it doesn't work... Then we usually roll or own solution or remove the spring layer. One example was using spring integration for interacting with GCP pub/sub... We were having connection issues, ended up reverting to removing spring integration, until the bug was fixed. The main issue with vert.x that I see for most junior developers is that it's not a framework, so there is no one way to do most things. With all that said : vert.x is awesome, community is great, I'm a fan.. don't forget to RTFM :)
&gt; Blockchain and crypto currencies are taking over every aspect of our lives Name a single _actual_ example where either of those thing is "taking over".
&gt; MODERATOR OF &gt; r/AionNetwork &gt; r/AionTrader &gt; r/AIONgineering I guess it's a coincidence that you post a handful of "aion.network" links in a post about AION by a 21 day old account whose activity on Reddit consists mostly of posting &amp; commenting about AION?
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
Power consumption
I'm curious how you found this post &amp; comment 16 minutes after it was posted. Seeing as you never post in /r/java, but a lot in /r/AionNetwork and subs like that. https://imgur.com/NC47EPM
You could look into more lightweight editors like [VS Code](https://code.visualstudio.com/docs/languages/java#_intellisense), Atom, Sublime Text.. I am not sure how fast they load the path for quick editing of individual files. At any rate, what is the problem with your workspace and actual IDEs? Why would it matter that you have other files there?
I'm not sure how to not compile the entire folder tree.
Also I remember using Geany which has autocomplete I am pretty sure. For IntelliJ at least, it is definitely possible. If you say "run" I am assuming all these have main functions and all? The command to run the current file is cmd+shift+f9 if I recall correctly (or right clicking the file and run just that, not the entire tree). I don't have the IDE on this computer to check now, but you should be able to google around for it if you like the IDE otherwise.
Problem I was having as well is that it wasn't compiling to the local folder but a predetermined one.
Sublime seems pretty good for what I want to do. I can build but not run? Is there a way to run it a display through a console in Sublime?
Sure, https://dzone.com/articles/compile-and-execute-java-c-and-php-from-your-favou
Awesome, thanks for your patience. I know I tend to ask a lot of questions. :D
/r/javahelp And there, make a *proper* post that also sjows what you have so far. **Removed**
I tried them briefly. They seem fine to me.
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
/r/cscareerquestions is the appropriate subreddit for such questions. Your question is not Java related and thus off-topic here. **Removed**.
Use intellij and just configure the Java project
&gt; arbitrary name given to versions It is far from arbitrary, [Semantic versioning](https://en.wikipedia.org/wiki/Software_versioning) is a well agreed upon and understood standard still in use across most major software offerings. &gt;Breaking changes are indicated by increasing the major number (high risk), new non-breaking features increment the minor number (medium risk) and all other non-breaking changes increment the patch number (lowest risk). The presence of a pre-release tag (-alpha, -beta) indicates substantial risk, as does a major number of zero (0.y.z), which is used to indicate a work-in-progress that may contain any level of potentially breaking changes (highest risk). Definition: Arbitrary &gt;based on random choice or personal whim, rather than any reason or system. The new Java versioning scheme more closely meets the definition of arbitrary than [Semantic Versioning](https://semver.org) does.
**Software versioning** Software upgrade versioning is the process release of assigning either unique version names or unique version numbers to unique states of computer software. Within a given version number category (major, minor), these numbers are generally assigned in increasing order and correspond to new developments in the software. At a fine-grained level, revision control is often used for keeping track of incrementally different versions of information, whether or not this information is computer software. Modern computer software is often tracked using two different software versioning schemes—internal version number that may be incremented many times in a single day, such as a revision control number, and a released version that typically changes far less often, such as semantic versioning or a project code name. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/java/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
Good bot
Thank you, oldprogrammer, for voting on WikiTextBot. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://botrank.pastimes.eu/). *** ^(Even if I don't reply to your comment, I'm still listening for votes. Check the webpage to see if your vote registered!)
&gt; is a well agreed upon and understood standard still in use across most major software offerings. That doesn't mean it's not arbitrary. &gt; Breaking changes are indicated by increasing the major number (high risk), new non-breaking features increment the minor number (medium risk) and all other non-breaking changes increment the patch number (lowest risk). Yes, the problem is that there is just no way to determine that. Almost no Java version intentionally breaks applications that use public APIs, and when they do, they do it in a way that rarely requires code changes. On the other hand, the chance that an application *unintentionally* breaks for a security patch (in a way that may require a code change) can be greater than the chance that it breaks with an API change. I understand the good intentions behind semantic versioning, but its goals are unachievable in practice (it's impossible to represent a probability distribution with a single small integer, and some of the requirements amount to solving the halting problem) and how it's applied in practice (represents API changes) does not achieve its goals. In particular, for Java it would express virtually no meaningful information (remember the "semantic" `1.` that prefixed all Java versions for like 15 years?). The reality is that now, as ever, to get meaningful information you need to look over the release notes, and run a full test suite for each and every Java release, be it a patch release or a feature release, as companies have been doing for the past 25 years or so. &gt; The new Java versioning scheme more closely meets the definition of arbitrary than Semantic Versioning does. They're both equally arbitrary. The new Java versioning scheme is just more logical and appropriate for Java.
Take a look at [JShell](https://docs.oracle.com/javase/9/jshell/introduction-jshell.htm). It's a REPL for Java (since Java 9). You can run a java script (don't confuse with JavaScript) files using `jshell java-script-file.jsh` syntax. All you need is to google how to integrate JShell with your favorite text editor or IDE. As I can see IDEA, VSCode and Sublime all have JShell support (built-in or through plugins). NOTE: jsell files and java files are similar but not the same. JShell file contains a list of instructions to execute line by line so there is no a main class or a main function. JShell script by itself is a main function.
I hate the idea of "Preview" features. Just put it in the language and if it's not fit for purpose remove it, given these aren't LTS releases. Why should we have to enable a flag to use them?
LTS is a support service provided by a JDK vendor. OpenJDK's development is agnostic to them (you will find no mention of LTS in OpenJDK; the concept doesn't exist). All OpenJDK versions are equal, regardless of whether some company sells LTS for it or not. Even long-term update projects (like 11u) that people also sometimes call "LTS" are not technically known in advance. Someone may as well offer to maintain 12u tomorrow.
Because Java is very big on stability, they rightfully want to avoid code that stops working if you upgrade versions. Feel free to ignore the preview features and pretend they're simply added a release later.
LTS is irrelevant. You do understand that non-LTS releases must still be forward compatible with future releases, right? Otherwise they would be completely bloody useless and nobody would ever use them.
Ha! If you were a "casual library developer" you should not have been using internal APIs to begin with. And you need to understand two things: - In general the functionality of those internal APIs has been replaced with public API that will *not* be subject to the same deprecation. - Going forward any new internal API will be protected, from the perspective of most deployments, by the boundaries enforced by JPMS, meaning that very few *new* dependencies on internal API should ever be introduced. So really the ecosystem should be *more* stable moving forward.
And as no one has explicitly explained why you need to use a flag, it's so you have to explicitly state "I understand my code may fail to compile on future releases".
https://github.com/kencrocken/FiraCodeiScript 
Not Java EE. DeltaSpike provides extensions compatible to Java EE.
[/r/Java](https://www.reddit.com/r/Java) is for News, Technical discussions, research papers and assorted things of interest related to the Java programming language, not for help with Java programming. Such "help with programming" posts should go to [/r/javahelp](https://www.reddit.com/r/javahelp).
I'm a Java developer but I've been getting into Blockchain Development since last year, I started learning on Ethereum and recently moved to AION after I heard they created an AVM based on the JVM, I thought I'd post it for discussion on the Java subreddit to see what people thought here
Yes I started posting there because I'm getting into Blockchain Development I see no problem to post this here for discussion
You do not have enough *comment* karma and as a result your post has been automatically removed. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/java) if you have any questions or concerns.*
You keep making this argument but the fact still remains that Semantic Versioning is understood by "the majority of users", the level of changes indicated by the changes in the various positional numbers has a defined expectation and even Oracle's own flagship product follows that model. It is only Java that was changed. Yes Java was 1.x.y for all of those years because there was not a massive breaking change that warranted 2.x.y or 3.x.y, Sun made every effort to retain backward compatibility where possible. But perhaps Java would benefit from a 2.x reworking that removed all currently deprecated capability, added newer features that are being requested, fixed other things being kept around for backward compatibility. That would be perfectly fine as everyone would know what that number change meant. So please cite some evidence that "people just found it pretty useless". The new Java numbering scheme is basically no better then simply labeling release Q12019, Q32019, Q12020, Q32020. That tells you just as little as N+1, N+2. &gt;The reality is that now, as ever, to get meaningful information you need to look over the release notes, and run a full test suite for each and every Java release, be it a patch release or a feature release, as companies have been doing for the past twenty years or so. Release notes are reviewed for every release, but I've been in companies for more than 20 years and patch releases, which quite often are connected to security fixes, are expected to work with less than a "full test suite", and if it is a security fix quite often there is a very short SLA requirement to get it applied 
thanks!
Static methods cannot be instantiated, and because of this each use of a static method or variable is guaranteed to call the same code. It ensures a method or variable is not effected by state changes in the parent class. 
Static methods can only use static variables and they are very useful if you are trying to keep track of the number of objects being created (Singleton Design Pattern). Another use can be if we are trying to auto increment the ID of the users. 
[https://stackoverflow.com/questions/2671496/java-when-to-use-static-methods](https://stackoverflow.com/questions/2671496/java-when-to-use-static-methods)
Static methods are used when we just want to call the method. Instance method (methods without static) must create an object first before we call it. 
static members belong to the class and can interact with the class's state. instance members belong to a specific instance and can interact with that instance's state or the class's state
Whatever versioning scheme Java uses (and feedback is most appropriate *before* the decision is made, not after), the fact remains that *all* Java versions try to maintain backward compatibility, patch and feature versions differ in their impact on the spec, not in the impact on applications, the probability of a particular application breaking is hard to predict and may not be much greater for a feature version than for a patch, and that each and every Java release requires a full test suite, unless you feel comfortable rolling the dice (no one is doing some probabilistic impact analysis before a release). If you do, you may continue doing so.
Here's an analogy... Computer memory is cookie dough and a class is a cookie cutter. When a Java program creates a new instance of a class, the JVM gets new cookie dough (memory) and shapes it according to a class (cookie dough). The program gets the cookie in the shape of the cookie cutter and uses the cookie directly. Static variables/methods belong to the cookie cutter directly, like a label saying who the cookie cutter belongs to. There is only one cookie cutter, so anyone changing the label (which is static), will be seen by anyone using the cookie cutter directly. It's a very basic analogy and it's not perfect, but it may help when trying to explain to a beginner. Hope it helps. 
It's a nice library and a job well done however this is not the same as a fully featured Virtual machine where you can build Dapps natively in java
LTS is an OpenJDK thing as well (see e.g. https://wiki.openjdk.java.net/display/JDKUpdates/JDK+Updates+Guidance which talks explicitly about backporting to the latest LTS release). But, since OpenJDK is technically a community of volunteers, there is no guarantee that anybody will pick up a backport request. Of course, if you want that guarantee, you'd need to get a support subscription from some JDK vendor.
I created an issue for this in NetBeans a while ago. See https://issues.apache.org/jira/browse/NETBEANS-1783. I suggest looking and creating or voting for similar issues in IntelliJ and Eclipse. The auto-completion in one of the major IDEs is always going to be better than a text-editor.
You use JIT? How do you calculate the worst-case compile time?
Starting wih Java 9, the 1.x nomenclature for version x, is gone. Finalization and methods marked as unsafe since the early days, e.g. Thread.stop() part of the APIs being removed. Which I am fine with.
In a non-static method you have a `this` reference. You can imagine that this reference is passed as the first argument instead if it were a static method, for example `myList.add(x);` is rougly equivalent to a static method call `ArrayList.add(myList, x);` where the first argument has the name `this`. The major difference between these versions, is later when learning inheritance, that you can't override static methods, only instance methods.
Of course they do, it is the default template in Spring, everything else requires additional configuration.
Yep Spring still required several configuration steps to enable it.
&gt; The considered function returns the index of the first space character, starting from the i index. What's wrong? We have the analyzer warning that s.charAt(i) != '\t' is always true, which means the expression (s.charAt(i) != ' ' || s.charAt(i) != '\t') will always be true as well. Is this true? I think, you can easily make sure of this, by substituting any character. Does anyone know what the author means by this? It's trivial to come up with an example where this statement is false. jshell&gt; "\t".charAt(0) != '\t' $1 ==&gt; false Also Character.isWhitespace() would be a lot more readable.
Static methods are class methods. They are used per class. Non-static methods are object methods. So used per instance.
The one that I've seen that while not entirely accurate works is; "they happen before anything else"
Might not be "Java" interpretation, but here's another way to look at it: * All methods (static or class method) are just functions with a namespace (fully-qualified class name) * Class methods have a hidden argument called "this". * Static methods doesn't have this hidden argument. 
This. This is how is used to be taught and it clarifies the subject entirely IMO. A few more words: You can think of the class itself like a sort of singleton. It only has one definition and it can have methods. Objects are instances of a class. Objects can have methods too. Those are non-static methods. Simple. Right? 
Really, you shouldn't be explaing what a static method is. Start out with what a non-static method is. Beginners should be introduced to OOP and using classes after learning the basics. While learning the basics, you should just use static methods. 
Static: class-level Instance: object-level Static functions can be called without creating a new object. Instead of: Balls myBalls = new Balls(); myBalls.setNotBlue(); You could have a static class Balls: Balls.setNotBlue(); 
&gt;The price you pay is a dependency on an interface that – if in doubt – could easily be replaced by a 1:1 copy and according implementation. If the interface could be easily replaced by a 1:1 copy, what benefit brings the framework at all? Why should I use it? I'm not talking about the interface implementation - it is OK to use a tool. However, I don't see a benefit in tool providing the repository interface. There are few lines of code to be written. The repository interface in domain-driven design should be driven by domain, not by a tool. Every method in the interface should have a domain reason for existing. Otherwise, the design is not driven by domain, but by the tool. 
There’s a car analogy for everything... Static method: hire a car, use it and give it back for someone else to use Object: buy the car, customise it to your needs, use it and then dispose of it. 
That analogy is a lot more confusing to me than the actual definition of static methods lol
Not really a way to explain it, but it's interesting to see how the concept is expressed in Scala. In that language classes and objects are separate. Everything that would have been static goes in the object (which is a singleton), everything else is in the class (and has to be instantiated).
You should check out sdkman.
If you think of classes as blueprints, static members are variables/methods you can access without building the house.
With cars. I am convinced everything in programming can be explained using cars as an analogy. 
Like the floor of the house as a static field, where you gonna put the house, right?
Static methods are the analogue of free functions in other programming languages. The only difference is that static methods are inside the namespace of a class.
Simply put, a static method is one that can be used without creating an object of that type. So if you have a class called Class1 with a static method or variable, you can just say Class1.Method() or Class1.Variable. If it was non-static you would have to do Class1 C; then C.Method() or C.Variable.
Finalization is deprecated and some uses of it in the JDK have been removed, but I am not aware of any plan to remove it altogether. 
Except to be disallusioned at how inadequately school has prepared you for actual developer work :P but don't worry! You will learn so much on the job so quickly, and it'll be great. 
&gt; LTS is an OpenJDK thing as well No, it isn't. There is a mistake in the wiki (you'll note that *no* OpenJDK version is designated as LTS). They are using the term LTS to refer to some updates projects, but they really shouldn't do that. &gt; But, since OpenJDK is technically a community of volunteers OpenJDK is a community of developers, but it is far from being a community of volunteers. The vast majority of the work is done by full-time OpenJDK developers, most employed by Oracle, but some by Red Hat, SAP, and others. &gt; there is no guarantee that anybody will pick up a backport request, or that you will be able to get a distribution/build with the fix included. Backports are related to *update projects*, which are, indeed, an OpenJDK concept (and what the authors of that wiki page refer to when they say "LTS"). There are no guarantees for anything in any software project, open source or otherwise, but contributors do have track records, and when it comes to OpenJDK, those contributors are usually employed by some large company, usually Oracle. Now, *Oracle* engineers will not contribute regularly to the updates projects after 6 months since the release of a new feature version, but Red Hat has committed to devoting resources to maintaining the 8u and 11u projects. (I work on OpenJDK at Oracle, but I speak only for myself) 
Python makes this more explicit as you have to pass self. The nand2tetris course is pretty good at explaining this stuff, mainly because you have to implement it at the assembly and bytecode levels, so you really see how it works even if it is simplified.
instance methods are for use on individual, specific instances of an object(self). Static methods are for use in aggregate or where no instance is required. Public static can be very useful for creating generic "tool" libraries that perform repetitive functions throughout different pieces of code. Seems that most of the other comments appear to focus on the how rather than the why.
It’s because of the OR clause and the preceding check against ‘ ‘. The latter part is only evaluated if the first char is a space, in which case it can’t be the tab char, resulting it always evaluating to true.
Just one note here. While in most cases you're right, the problem with saying that classes are like singletons is that they are unique only per classloader. So, mostly you're right and for a beginner this is good enough. But be mindful that if there are multiple classloaders this may not be true. 
Kind of depends on whether they have experience with non-OO languages. If they do, a static method is just a function that happens to be defined inside a class and had access to the class's private members, and a static variable is just a global variable that can be made private to the class it's defined in.
I would say at the end of the day it’s a concept on how to organize your code. I think of static methods like math formulas. They are constant, and you don’t need an instance of the formula - you just need the formula. For example, a Cryptographic algorithm could be a (collection of) static method(s). You can pass it parameters, like an Initialization Vector, a key, a counter, etc. Static variables are obviously similar - like Gravity’s acceleration of ~9.80 m/s^2. But for an encrypted connection, like a TLS connection, this is an instance of a Class because the connection is not static (not a constant) - each connection is unique. You might want to run some cryptographic algorithms on the instance of that data, so it makes sense to organize the methods as instance methods. Think about a method like sendData(), that would take in several properties of the connection, like the session key, that would be unique to the instance. To be clear you could run static encryption methods on your TLS connections, but try to imagine how messy that would get!
Tbh, I wouldn't be surprised if there was a mistake on the wiki ;) I also work on OpenJDK, but not for Oracle. I work as a volunteer. I did not know about RedHat committing to 11u. I guess then updates to 11 are not done by volunteers after all (although I guess such a commitment is _voluntary_ on RedHat's part as well). I've heard statements of various different flavours about the subject, and it's hard to keep track of what is the truth (in part due to all the safe-harbour statements). 
If you have the chance to run code while you're explaining, define a class with a static integer variable and two non-static methods: one that increments the variable and one that prints it. Create two instances of the class and keep incrementing/printing the variable to show that the two objects share the same variable rather than having their own copy. As for static methods, I think they're easier to explain. If you want to get more technical, you could say that given a class `Foo` with a method `void bar(int x)`, if `bar` is static, than that's the actual signature; while if it's non-static then the signature is `void bar(Foo this, int x)` (i.e. each non-static method needs an instance of the class which is implicitly passed in whenever the method is invoked).
They’re used per class *per classloader*. So if the same class is loaded by two different class loaders (like in a hot-deploy type setup), all your static stuff will be defined twice.
I kind of like the explanation on this website. https://www.baeldung.com/java-static I like to think of static members as something that belongs to the datatype/class. Basically when you use a static variable or method you reference the class itself rather than having to create an instance of the class with it's own instance variables and instance methods. It is kind of hard to come up with an analogy unless you go all metaphysical and mention that the static belongs to the world of forms and instances variables are manifestations of the ideal form. You really do have to go into the nature of their existence. A plain english way of saying it might be with a static method it is like asking "Hey &lt;class name&gt; do this action" while with instance method it is like "Hey specific member of &lt;class name&gt; do this thing" Actually . . . writing this explanation gave me an idea using tribal identity as an analogy. Static would be like something that belongs to the whole tribe. Maybe the tribal lore, the name of the chieftain, the tribal things. You have to ask the tribe for those things. While with instance variables and methods it is like asking individuals of the tribe. 
Not at all because each house has a floor, so that's an instance field.
A method is static when it depends on nothing else but itself, while an instance method implicitly depends on an instance being constructed, its fields, current state, a reference to said instance, etc. Of course they also depend on a namespace but that's something that comes from the Java version of static methods - for example: you could (but shouldn't) have a StaticStuff class that only contains all your static methods. In fact, many projects have a `Util` class exactly for that but it's pretty bad code design and should be avoided, with instead each method being present in the most-relevant class. Of course, you can also have a class that is mostly meant for static methods, like `Math` in the Java API and that isn't a bad practice, as long as it's a cohesive, self-contained grouping of methods.. Using Math again as example, examples of static methods would be "square" or "root power" or a number, which are common functions that operate on a given set of parameters. Instance methods would be something like `Light#turnon()`, where a "turn on" operation makes zero sense without an object to operate upon.
Access them by class instead of by object
Scala makes clear. Static methods belong to an object (doesn't need to be initialised - can think of it as already initialised) and instance methods a class (needs to be initialised, class is a template for an object).
This is how I understand them too. If function does not access any member variables of a class, I will often make it static. I understand static functions will have access to static members, but I avoid static variables unless they are final (const).
The [docs](https://docs.oracle.com/javase/tutorial/java/javaOO/classvars.html) are pretty clear: &gt; Sometimes, you want to have variables that are common to all objects. This is accomplished with the static modifier. Fields that have the static modifier in their declaration are called static fields or class variables. They are associated with the class, rather than with any object. Every instance of the class shares a class variable, which is in one fixed location in memory. Any object can change the value of a class variable, but class variables can also be manipulated without creating an instance of the class. I wouldn’t bother with analogies.
I think the problem with "classes are like singletons" is that you have to know what a singleton is to understand it
https://docs.oracle.com/javase/7/docs/api/java/lang/Math.html Don't use analogies, use examples. Does it look like a static method on the Math class? Why can't I create an insurance of the math class? Why don't I want to create an instance of Math? Far too often we get lost in navel gazing when hard facts and concrete examples are literally right in front of us. 
interfaces arw for stuff too broad for the `is-a` relationship, OR something that can have extemly different inplementation for the first one, `Serializable` and `Clonable` come up. (though both are written poorly) A Square `is-a` Rectangle, but both can implement Clonable. Because Java has singular inheretence, interfaces allow for the subobject to still extend an object. They also can be used in places where the underlying implementation can varry so much it's not useful to have an abstract class. This is in cases where an abstract class only has abstract methods and no constructors. Interfaces are used a ton more in Java because an abstract class is normally **too much** for what it's needed for. It's better to give more control to the object and interfaces enforce less restrictions
[https://en.wikipedia.org/wiki/Representational\_state\_transfer](https://en.wikipedia.org/wiki/Representational_state_transfer)
**Representational state transfer** Representational State Transfer (REST) is a software architectural style that defines a set of constraints to be used for creating Web services. Web services that conform to the REST architectural style, termed RESTful Web services (RWS), provide interoperability between computer systems on the Internet. RESTful Web services allow the requesting systems to access and manipulate textual representations of Web resources by using a uniform and predefined set of stateless operations. Other kinds of Web services, such as SOAP Web services, expose their own arbitrary sets of operations."Web resources" were first defined on the World Wide Web as documents or files identified by their URLs. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/java/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
Google Maps has a RESTful service you can play around with that'll return Maps information / directions in JSON or XML. https://developers.google.com/maps/documentation/javascript/tutorial https://developers.google.com/maps/documentation/directions/intro https://cloud.google.com/maps-platform/#products They ask for a credit card, but it's free to use for small numbers of calls to the API (it's like 25,000 or 50,000 if I recall correctly). 
Is it easy to use? Im really just looking for something simple so that when my next intervier asks what rest apis have I used to dont give them a blank stare
Thanks! Also, since taking the mock I only missed 4 of the questions because I didn’t fully understand the use of interfaces lol I’m going for a perfect score 😜