Yes, I would prefer to have control of the remote server. That's what I used to do, I used rsync often, then SVN, and a few months of VNC &amp; RDP. but I have many machines &amp; I am in places where there's heavy lock down in terms of app installations. (Office suites &amp; Browsers are allowed but no applets - due to the nature of my work). Outgoing SSH are blocked as well, so no sshfs sadly. The only option I see is a semi featured web ide. I could access shell via http. The reason I asked is that I noticed RAP is doing pretty well these days. I do have the budget to mobilize a small team to create a half baked ide (around $6k-$10k) but its better to have Eclipse 4 running on the web with RAP. 
Like several others here (I assume), I'm an active reviewer (not a mod, just 10k+ rep) so I'll shed a bit of light. Very vague questions get closed for "unclear what you're asking" or "must describe the specific problem" and usually get reopened once you've made the necessary changes. Homework questions aren't closed. The thing about these questions is that they're often breaking other rules: requiring a minimal effort, describing the specific problem, etc. The motivation behind a question isn't judged, it's the way it's presented. Quick-to-google questions are often closed for being a duplicate or "must require a minimal understanding". Asking how a switch statement works is a no-no: MSDN explains it just fine.
The tangent approach is the correct approach. Also, the degress-to-radians conversion factor is pi/180; i.e, angle_rad = angle_deg * pi/180.
Given the alternative of XML. I prefer to have this any day. Reading and writing XML is plain frustrating. 
I disagree. I have 13k rep at the moment (1 year member, 500 answers, 50 questions): the first few months I asked questions, then for a few months I started answering more and more where I was able and now I answer almost exclusively. I started actively actively programming exactly one year ago, when I made my SO account. My first language was Java, a few months later I added C#. These are two of the most used languages and yet I've reached a high reputation level. There are plenty of people who use and learn the "traditional" languages, you can get rep just fine.
No, it's not got anything to do with MD5 it appears. The exception says "access denied" and that's Windows' administrator rights that you need. Can you post your code that gave that error with correct line numbers?
It's also much easier to get community support because other people are on the same train as you.
Eclipse from http://www.eclipse.org/downloads/ 
what exactly is eclipse? is it just an editor? I've seen from different redditors that they use Sublime Text 3. and others use Notepad++. Same as Eclipse or something completely different?
No, not just an editor, it compiles and runs your code as well. 
That's an interesting idea, can you point me to a good example of that in action?
IntelliJ community edition is a free Java IDE. I personally prefer it to eclipse by far.
so we have compilers, which is basically the program that is the IDE and compiles the code (in this case IntelliJ or Eclipse) but then you also have editors? ST3 and Notepad++? are these just editors and they need another program to serve as the IDE and compile?
Yes, ST3 and N++ won't compile and run your code, so IDEA is a lot better idea.
You have compilers (such as javac if you're working on the command line) which convert your code into a program you can run. Editors (like Notepad++ and Sublime Text) allow you to create and edit code files (which you can also do in very basic tools like Windows' built-in Notepad, but coding specific programs have a range of helpful features like syntax highlighting and autocompleting closing brackets - a small feature but a useful one). Then you have IDEs (which stands for Integrated Development Environment) which allow you to create, edit, compile and run your program, all within the same piece of software. This is the course of choice for many people, purely for the convenience of being an all-in-one option. Some people don't like to do it this way, however, as there can be a fair amount of unneccesary software-generated code (depends on the IDE). Netbeans, Eclipse and IntelliJ are all IDEs. Hope this helps clear things up a bit for you :)
It does not give me an error when I am not generating and MD5, I will try to post the code soon.
&gt; This is used quite often, while it shouldn't even be possible. The myService field is private, thus it's inaccessible from outside the class. Nevertheless it's possible and people do it. In reality it is a hack. The DI-framework sets the field using reflections doing setAccessible(true). You don't want hacks in your code, do you? Lets have a look at the alternatives: * All *runtime* annotations work by reflection, invoking reflection methods while using annotations is not a hack. * The annotation makes it quite clear that the DI-framework should have access to it * using setters makes the field public and mutable, using constructors makes the code verbose and unable to use a default constructor. &gt; @Override Makes sure that a wrong override is an error and not just a warning, not everyone is a perfect developer 7days/week 24h/day. &gt; @SuppressWarnings Interacting with legacy code comes to mind (raw types or otherwise ugly code). Of course every use of it should be backed by a unit test to ensure expected behavior. Lastly: In context of @Override he mentions that his IDE already takes care of that. I would like to know why he can't find the property if he uses an IDE. It should take care of that too, either using code folding or a list of properties on the side. Edit: added runtime to the all runtime annotations point
So why do people use them? How are they better than the program that is capable of compiling the information. Wouldn't it be annoying to keep having to go from one program to another over and over every time you want to compile? I would assume IntelliJ can compile with a push of a button.
It does. Thank you. I just asked someone else why not just use an IDE instead of using a Editor since you'd have to go back and forth from one editor to another that can compile. Is it just because of unnecessary software-generated code?
Premature optimization is one of the worst things any programmer can do. Please do not put these thoughts in a beginners head. It is pretty clear that this program is not meant to scale.
IntelliJ and eclipse both use the compiler you have on your computer. So when you click "Run", it will compile and run your program within the IDE. 
Yeah, that could be it, sometimes its just personal taste though - I mean personally I prefer using Sublime Text and compiling using command line to cut down on generated code, and because I much prefer Sublime over the editing in the IDEs I've used. You've just got to find whatever works best for you really.
Not really answering your question, but... I'm not hugely impressed by the taint mechanism, as it's fairly trivial to bypass the 'taint' flag, so it's better to think of it as a first line of defense against casual coders but not as an absolute protection. Because of this it doesn't really protect against malicious usage of String objects...and therefore fails its main objective. One example of bypassing the taint flag, is to loop through each of the characters in the String and extract each characters integer value. Then rebuild a new untainted String object with these character codes. Another example is to write the String to disk, then read it back.
There are many different ways people operate, you can use an IDE or a text editor and compile it yourself. In fact sometimes you have to compile the program in terminal. But it all depends on what you want to do. For java I use an IDE whereas for python I compile it myself. 
Thank you for the very full answer. So let me ask one more question. Is that all I need? I mean, aside from websites to learn from and this Java book I have. I just need one program to really develop Java code? There are no other programs that I'll need?
IntelliJ (or Eclipse) should be all the tools you need in addition to a good book. I recommend *Head First Java* as a great intro if you don't already have a book. As a side note, it might be worth your while to code a simple hello world example in notepad, compile the .java file and execute it in the terminal, just so you get a feel for how all these tools fit together a bit better. That being said, you might also need to install the jdk (java development kit) from Oracle, just so you have the tools available that your IDE will then take advantage of.
You can leverage annotations in an annotation processor to generate code. No reflection.
What kind of project is it? If it's a command line application, then try reading the input into a string, aka, pausing the app.
text-based game. it has scanners in it. reads it all into strings. OH EXCEPT..oh WAIT! I do have some int scanners. let me go change that.
In his code he has both @JsonIgnore @JsonProperty Unless I'm crazy, those are contradictory. Also, who wraps a POJO with *both* XML and JSON serialization? *AND* has it be the same POJO they are using for their database? I am not as big a fan of constructor DI since it is very ambiguous as to whether the element is being built by Spring or manually instantiated. So I guess as for this blog post, I think it is a rant about a non-issue.
Are they bad? Or are they just different to what you've used in Qt? Can't say i've had a problem
TL;DR - Swing is about 17 years old, and JavaFX is still really young. JavaFX, in my opinion, isn't ready as a Swing replacement. It has a lot of niceties, particularly if you're embedding media, but Swing has been in development for about 17 years. It's going to take a lot of work to get JavaFX up to the same level of polish. For example, most of the Swing applications I work with involve a lot of customized text editing. In Swing, I have complete access to the underlying Document, I can add custom views to JTextArea ... basically, I can do whatever the hell I want. In JavaFX, I can set a listener to tell me when the text changes, and not much else. Hell, try to implement customized spell check in JavaFX. As far as I can tell, it's just not possible.
You should just be using the normal Scanner object I thought. Try putting some println statements in when it starts up to see when it stops. Also, try putting a String temp = *whatever you called your scanner*.next();
The property is obviously just made up. Private property injection is like bearing a kid with no arms, and and attaching them later with tixo
that's not the problem it never actually runs the program. it says it cant find the jar file.
Try making a batch script that starts it. Can you run it from the ide?
You often have to set a widget's maxWidth property, or it won't stretch. Try setting them to Integer.MAX_WIDTH.
So we have a few things in application development: * You have an editor -- This is where you edit your code. This could be something simple like sublime text, or notepad++, or even just plain windows notepad. It could also be something more feature rich/complex, like [eclipse](http://www.eclipse.org/downloads/) or (my favorite) [Intellij](http://www.jetbrains.com/idea/). * You have a compiler. Compilers take the specially formatted text output by the editor, and compiles it into java code that the java virtual machine can execute. The more feature-rich editors typically have wrappers to the compiler included (menu items like compile and run). Your compiler will typically come with a virtual machine. You should get yours from [Oracle](http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html). * You have a virtual machine. The virtual machine takes the compiler output and actually executes it, running the service or asking the operating system to render a user interface.
it runs from the ide, the problem i have with batch/command prompt is that it says java isn't a recognizable command. and it's in my path. so im lost. lol
Try copying your .jar and batch script to your JRE's bin folder (Usually C:/Program Files/Java/jre7/bin/) and run the script. This makes the script default to the java in the directory instead of the path java.
Thank you all for your wonderful suggestions. 
Download Netbeans it is the easiest to set up. All you have to do is run the .exe file and you will have a full Java development evironment ready to go complete with Application servers. They also have some really good tutorials. If you do not already have the JDK (Java Development Kit) download it here first. http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html Then Choose the Java EE version of Netbeans here. https://netbeans.org/downloads/ The next stop is the tutorials. Depending on what you want to learn you might want to start with the General Java first then move on to Java EE &amp; Java Web Applications. https://netbeans.org/kb/index.html https://netbeans.org/kb/index.html
Why not try http://pivot.apache.org ?
&gt;So why do people use them? You don't need an IDE for scripting languages like Ruby, Python, Bash, etc. Lightweight editors are also nice for quickly opening/viewing files that aren't a part of the project you working on. I learned Java on Linux using Gedit and javac at the command line. This would be very similar to using Notepad++ and javac at the comand prompt on Windows. For your first simple programs I recommend this approach because full-featured IDEs like IDEA and Eclipse can be overwhelming at first. As soon as you start needing external libraries I would switch to an IDE. 
Use the static methods setHgrow and setVgrow when you want a node to stretch with the layout. Eg: Hbox.setHgrow(node, priority); Or just bind their width/height property to a percentage of the total layout.
pretty cool so far.
It looks like a random dump of annotations, the @JsonIgnore and @JsonProperty annotations alone look like they contradict each other. 
I'll take a look. EDIT: It seems to be geared around applets. I just want to be able to make a normal desktop application quickly and easily.
How would you do that in FXML?
First things first: if it is a text-based application, does it print anything to the NetBeans console if you hit the run button? Because if your application is non-interactive and only prints text to the screen you won't be seeing anything if you launch the jar outside of NetBeans. For future reference: try [/r/javahelp](http://www.reddit.com/r/javahelp) and always post your full source code or at least the part that's relevant.
Based on what you are describing it sounds like you would need to synchronize the use of the array itself, not just getters and setters of objects. The functions you describe sound like they need to fully operate on the contents of the array without the array changing until the functions end. So here's a couple of suggestions. You indicate the arrays are not large, 100-300 items each, and X/Y data. I'm assuming they are primitive data types like an integer. What you might consider doing is making one array (not two) where you store the X/Y data in positions x = data[n]; y = data[n+1]; Then, you only have a single array to work with. At this point you could try to use the **java.util.Arrays.copyOf** method as I mentioned, but it isn't listed that that is threadsafe and you can't shrink/grow an array so if the number of points isn't fixed, that could be an issue. Another idea to consider would be to use a [**java.util.concurrent.CopyOnWriteArrayList**](http://docs.oracle.com/javase/6/docs/api/index.html?java/util/concurrent/CopyOnWriteArrayList.html) object instead of a raw primitive array. Then you could use an **Iterator** off this collection object during calculations as &gt;This array never changes during the lifetime of the iterator, If you decide to go with the concurrent collection approach and have it hold other objects instead of primitives (something like a Point class that has an X/Y component), keep in mind that changing the content of a contained object is not protected, only changing the content of the collection itself. So if the collection is of primitives you would be fine, since primitives are *immutable*.
A good example of the use of JVMTI? I'm pretty sure there are some Oracle tutorial on simple usages. I assume you could also dig up the source code for any modern Java debugger too. I can't say I've ever done anything like this, but JVMTI would seem like a fairly good fit.
I don't think they are intending to use this to enforce security on a production system. Instead it's intended to help programmers probe for security holes in their existing code while working in a non production environment.
Yes that is the idea, which is why we are exploring the concepts of modifying the JVM or base classes like java.lang.String (kinda off not the thing it should be done on production systems :) )
Related thread about this issue at http://r2.reddit.com/r/programming/duplicates/1tgfq6/xstream_remote_code_execution_exploit_on_code/ (namely http://r2.reddit.com/r/programming/comments/1tgfq6/xstream_remote_code_execution_exploit_on_code/ce7y4fu) which pointed me to the Checker Framework (see http://types.cs.washington.edu/checker-framework/current/checkers-manual.html#tainting-checker) which looks REALLY good (definitely something to take a good look at)
what software do you used for timelapse recording?
You could use anything that makes a video recording of your screen (like fraps) and then just speed it up.
I used Microsoft Expression Encoder for recording the video itself(it is very good for programming videos, but will not work for games). After that, I put the video into Windows Movie Maker and sped the video up to 8x.
Look very closely at your code, specifically the "if" line; there's something there that shouldn't be there.
&gt; if (test == 9); Getting rid of your semicolon will solve your problem :) With it, you're asking to end the if statement w/o doing anything
Thanks a lot! 
From what I'd seen you were making a much better effort with your proof-reading of late, but this is a massive step backwards; the sentence structure seems clunky, and there's enough errors in your opening paragraph to have put me off completely (e.g. "it make a lot of sense for me to share all these resources with me", and "learn Java 8 sooner than letter").
So I'm assuming you're using Windows. Have you tried: C:\Program Files (x86)\Java\jre7\bin\java.exe -jar C:\path\to\my\app.jar to rule out your JDK installation isn't broken?
Fraps can do that, but you lose a lot. It is much better to record at 60 fps, then remove every other frame. You get much more control over how much you are speeding up so you aren't just losing possibly important things.
How does Orika compare to Dozer? Orika seems faster than Dozer, but other than speed, what are the benefits of switching from Dozer to Orika?
So you're a developer that advocates piracy.
Really neat video. Will you post the source code? It looked like you had a really well laid out style, and I'd like to also teach myself the methods you used. 
Some people do actually do your homework for you. I disagree with those and I personally believe they should be deleted. That place should be for helping with flaws or pushing you in the right direction, not for doing homework for you.
I really enjoyed that. Thanks. I haven't done any game programming as I mostly do web services but this inspired me to try my hand at something simple like this.
Tree's is one thing I often miss support for in Collections. 
Thank you I will look into this.
The point of an interface is to describe the API that implementing classes expose to the outside world. Protected or private methods don't make any sense.
interface is just that an interface to the rest of the world, how you talk to other classes If an interface was not public other classes could not use it. loosely, interface public implementation private.
Sure :) you'll need to add class names and imports at the top but here's the source. Game class: public static void main(String[] args) { JFrame frame = new JFrame("Pong"); frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); frame.setResizable(false); frame.setLayout(new BorderLayout()); frame.add(new GameCanvas(), BorderLayout.CENTER); frame.pack(); frame.setLocationRelativeTo(null); frame.setVisible(true); } GameCanvas class: private static final long serialVersionUID = 1L; public static final int WIDTH = 800; public static final int HEIGHT = 800; public static Dimension size = new Dimension(WIDTH, HEIGHT); public boolean isRunning = false; private int FPS = 60; private long targetTime = 1000 / FPS; private Play play; public GameCanvas() { setMinimumSize(size); setPreferredSize(size); setMaximumSize(size); start(); } public void start() { addKeyListener(this); setFocusable(true); isRunning = true; new Thread(this, "Game Loop").start(); } public void stop() { isRunning = false; System.exit(0); } public void run() { long start; long elapsed; long wait; play = new Play(); while(isRunning) { start = System.nanoTime(); tick(); repaint(); elapsed = System.nanoTime() - start; wait = targetTime - elapsed; if(wait &lt; 0) wait = 5; // sleeps amount of time to keep FPS consistent try { Thread.sleep(wait); } catch(Exception e) { e.printStackTrace(); } } } public void tick() { play.update(); } public void paint(Graphics g) { play.draw(g); } public void keyPressed(KeyEvent e) { int key = e.getKeyCode(); play.keyPressed(key); } public void keyReleased(KeyEvent e) { int key = e.getKeyCode(); play.keyReleased(key); } public void keyTyped(KeyEvent arg0) {} Play class: public Paddle p1, p2; public Ball ball; public static int leftScore, rightScore; public Play() { init(); } public void init() { p1 = new Paddle(new Rectangle(0, GameCanvas.HEIGHT / 2, 20, 100), KeyEvent.VK_W, KeyEvent.VK_S); p2 = new Paddle(new Rectangle(GameCanvas.WIDTH - 20, GameCanvas.HEIGHT / 2, 20, 100), KeyEvent.VK_UP, KeyEvent.VK_DOWN); ball = new Ball(GameCanvas.WIDTH / 2, GameCanvas.HEIGHT / 3, 10); leftScore = 0; rightScore = 0; } public void update() { p1.update(ball); p2.update(ball); ball.update(); if(leftScore &gt; 6 || rightScore &gt; 6) { try { Thread.sleep(5000); } catch (InterruptedException e) { // TODO Auto-generated catch block e.printStackTrace(); } System.exit(0); } } public void draw(Graphics g) { g.setColor(Color.BLACK); g.fillRect(0, 0, GameCanvas.WIDTH, GameCanvas.HEIGHT); p1.draw(g); p2.draw(g); ball.draw(g); g.setFont(new Font("Arial", Font.PLAIN, 100)); g.drawString(Integer.toString(leftScore), GameCanvas.WIDTH / 2 - 120, 100); g.drawString(Integer.toString(rightScore), GameCanvas.WIDTH / 2 + 80, 100); for(int i = 0; i &lt; 16; i++) { g.fillRect(GameCanvas.WIDTH / 2 - 10, 10 + i * 20 + i * 30, 20, 20); } } public void keyPressed(int k) { p1.keyPressed(k); p2.keyPressed(k); } public void keyReleased(int k) { p1.keyReleased(k); p2.keyReleased(k); } } Paddle class: private boolean up = false, down = false; private int upKey, downKey; public Paddle(Rectangle r, int upKey, int downKey) { setBounds(r); y -= (height / 2); this.upKey = upKey; this.downKey = downKey; } public void update(Ball ball) { if(y &lt;= 0) up = false; if(y + height &gt;= GameCanvas.HEIGHT) down = false; if(checkCollision(new Point(ball.getX() + ball.getR(), ball.getY())) || checkCollision(new Point(ball.getX() - ball.getR(), ball.getY()))) { ball.setDx(ball.getDx() * -1.5); } if(up) y--; if(down) y++; } public boolean checkCollision(Point p) { boolean colliding = false; if(contains(p)) colliding = true; else colliding = false; return colliding; } public void draw(Graphics g) { g.setColor(Color.WHITE); g.fillRect(x, y, width, height); } public void keyPressed(int k) { if(k == upKey) up = true; if(k == downKey) down = true; } public void keyReleased(int k) { if(k == upKey) up = false; if(k == downKey) down = false; } Ball class: private int x, y, r; private double dx, dy; public Ball(int x, int y, int r) { this.setX(x); this.setY(y); this.setR(r); this.setX(this.getX() - r); this.setY(this.getY() - r); dx = 1; dy = 1; } public void update() { // colliding with top and bottom of screen if(getY() - getR() &lt;= 0 || getY() + getR() &gt;= GameCanvas.HEIGHT) dy *= -1; // outside of map?... if so, add score and reset if(getX() + getR() &gt;= GameCanvas.WIDTH) { setX(GameCanvas.WIDTH / 2 - getR()); setY(GameCanvas.HEIGHT / 2 - getR()); Play.leftScore += 1; dx *= -1; } // same as above, but for left side instead if(getX() - getR() &lt;= 0) { setX(GameCanvas.WIDTH / 2 - getR()); setY(GameCanvas.HEIGHT / 2 - getR()); Play.rightScore += 1; dx *= -1; } setX(getX() + (int)dx); setY(getY() + (int)dy); } public void draw(Graphics g) { g.setColor(Color.WHITE); g.fillOval(getX() - getR(), getY() - getR(), getR() * 2, getR() * 2); } public void setDx(double d) { this.dx = (int)d; } public void setDy(int dy) { this.dy = dy; } public double getDx() { return dx; } public double getDy() { return dy; } public int getX() { return x; } public void setX(int x) { this.x = x; } public int getR() { return r; } public void setR(int r) { this.r = r; } public int getY() { return y; } public void setY(int y) { this.y = y; } 
If interfaces are the only way to multiple inherit why is losing the ability to modify access for all your implementing/sub classes all of a sudden irrelevant? Why is there a necessary tradeoff between access level control and the ability to multiple inherit? 
While inheritance is considered questionable by some people, multiple inheritance is even worse. An interface describes the public interface of some none-of-your-business service. The access modifiers on the implementer side should be of no relevance to anybody. The whole point of the interface is to not expose them / make them known. Other confusion might stem from the wish to express things as inheritance (IS-A) relation ("I'm this hyper-complex thing and that there and for technical reasons this") when they most often should be expressed as composition (HAS-A). "Yes, I'm the FooService and have this BarThing and that QuxStrategy."
With an interface you're telling the world what methods you provide. Anyone implementing an interface can't suddenly decide that the methods offer by the interface are no longer offer by that implementation.
Because interfaces don't contain implementation. They are only documenting APIs. They allow you to say "This object looks like one of these" and that's it. I'm guessing you come from a C++ background. Multiple inheritance isn't really a big problem in practice.
Thanks, this helped me get it. So you could say interfaces weren't designed with "multiple inheritance" in mind, it just happens to be a bonus of sorts. 
It's pretty simple. The hardest part is getting the graphics to display correctly, but once you're there, it's basically logic :P
The function of the interface is independent from that of class inheritance. Interfaces are exactly what they sound like. They describe a contract that the implementing class (or its children) must fulfill. This is different from standard inheritance. Standard inheritance describes an object that provides a specific or adapted implementation of its parent class, usually with predefined business logic that can be finalized at any level of the inheritance tree.
Man, I can't really answer your question with enough confidence. What I can tell you is that I've always seen interfaces as functionality offer by the object that implements it. Therefore the `able` suffix in most of the interfaces you'll find in the java api. What they say is "any class that implements this interface can do this things". So in the case of `Serializable` it means that that object can be serialized. When you say `Iterable` it means that that object can be iterated; and so on.
&gt; The point of an interface is to describe the API that implementing classes expose to the outside world. Why does it have to be the outside world? An interface could be used within the package scope if it weren't for the "all interface methods are public" restriction, currently you are limited to a base class if you want to keep implementation details hidden.
The calculation (splitting the triangles) and the painting are done by two different threads. If you put the 'synchronized' keyword before the SierpinskiSplit method and the paint method, it will avoid that problem. It takes longer (3x longer) to do the split 7 times than 6. Sometimes this is enough to cause the concurrent modification. I don't know much about Swing in general to tell you what is the typical pattern for not painting until you want to. Can you alter it some way to only call paint() explicitly after you're done calculating the triangles?
~~Note that default scope is fine, if you're looking for something narrower in visibility than public.~~ Edit: That'll teach me for just mocking something up in an IDE rather than actually properly checking - thanks for the info /u/sanchopancho13
Nope, see: https://amyfowlersblog.wordpress.com/2011/06/02/javafx2-0-layout-a-class-tour/ (specifically the "Overriding Min/Pref/Max Sizes" section). Ippytraxx mentioned that you can bind the height/width - and that is a more robust solution - but if you just want a button/combobox/etc to fill the width, I find this easier. Edit: example: &lt;AnchorPane prefHeight="200" prefWidth="200" xmlns:fx="http://javafx.com/fxml" fx:controller="jfxtest.FXMLDocumentController"&gt; &lt;BorderPane fx:id="pane" AnchorPane.topAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.bottomAnchor="0.0" &gt; &lt;center&gt; &lt;Button fx:id="button" text="Button"&gt; &lt;!-- Remove this line and it no longer stretches--&gt; &lt;maxWidth&gt;&lt;Double fx:constant="MAX_VALUE"/&gt;&lt;/maxWidth&gt; &lt;/Button&gt; &lt;/center&gt; &lt;/BorderPane&gt; &lt;/AnchorPane&gt;
Binding the height/width... how do you do that in FXML?
[JAXB](http://docs.oracle.com/javase/tutorial/jaxb/intro/) is the standard. This API converts between Java objects and XML. [dom4j](http://dom4j.sourceforge.net/dom4j-1.6.1/guide.html) is a really popular library that lets you create XML documents without the verbosity of the plain old `DocumentBuilder`.
Jacob as mentioned, or you try XMLbeans. Or look into Json instead of XML?
Should have: int end = numbers.length - 1; Then the for loop should be : for (int i = 0; i &lt; end; i++) { .. } end--; Also, please stop spamming this sub this these. Put them in /r/learnjava. There is another/different optimization that can be done as well if you so choose. If you're going to discuss algorithms, you should also discuss optimization to go with them as well. int[] arr = {1,2,7,6,5,4,3,8,9}; boolean done = false; int end = arr.length - 1; int newEnd = 0; int temp; int ctr = 0; while (!done) { done = true; for (int i = 0; i &lt; end; i++) { if (arr[i] &gt; arr[i+1]) { temp = arr[i]; arr[i] = arr[i+1]; arr[i+1] = temp; newEnd = i; done = false; } ctr++; } end = newEnd; } for (int i = 0; i &lt; arr.length; i++) { System.out.print(arr[i] + " "); } System.out.println("\nDone after: " + ctr + " loops"); See how this optimization can see it is done in 5 loops where what you programmed still goes through all 9. edit: my ctr is in the wrong place from where I meant it to count. I also was adding and subtracting where I didn't need to. So for the original in the video int[] arr = {9,2,7,6,5,4,3,8,1}; this array has to loop in the for 72 times before the sort is finished. With the optimization of tracking the end point, it only loops 36 times. Having the 1 at or near the end is basically worst case for a bubble sort.
need to actually render data to page. Need to build markup. Only reason for using Json. Thanks for the input!
JAXB if you want the "standard" way of XML marshaling. If you're just looking for DOM manip that doesn't suck, I'd recommend [JDOM](http://www.jdom.org/)
It's called expression binding: http://docs.oracle.com/javafx/2/api/javafx/fxml/doc-files/introduction_to_fxml.html I've never bound sizes in FXML this way, so I can't give an example.
Thanks, making the methods synchronized seems to have worked. I tried moving the SierpinskiSplit() method call to the constructor so it would split them before painting, and that worked for 7 and 8, but at 9, I got the ConcurrentModificationException again... weird.
The apache stringutils library has a lot of null-safe string methods. Use their library and make your life much easier.
i have also used that in the past, i prefer this for integer validation. Thanks for the comment!
I looked at that, mind got a bit confused. For another day ;)
OP, look up the FontMetrics class.
I don't think the JFX layout options are that bad. I will admit that I miss the supreme flexibility of SpringLayout from Swing (which is the only layout manager, I believe, that doesn't have a corresponding FX pane), but otherwise haven't found something that I was flat out unable to accomplish. When I first started using it there was an adjustment period where it took me a long time to get a UI to look how I wanted, but now that I'm familiar with it all I can whip stuff up in no time, and even as unfinished as some portions of JFX feel, I prefer it to Swing by a long shot. The event model specifically is far superior, I think. There are lots of options for dynamically sizing nodes: * Use HBox.setHgrow/VBox.setVgrow as Ippytraxx suggested. * Use AnchorPane, and set the node's anchors to the sides of the pane, as jsheets suggested. * Use GridPane, and provide RowConstraints and ColumnConstraints (with their respective grow properties set) * Use TilePane, which arranges all of its children to fill its own area in equal measure (all children are sized the same) * Nodes/panes in each of a TabPane's tabs fill the entire Tab area by default. I have never done any of these in FXML though (although I'm sure you can), because I detest FXML and would *never* use it over raw code.
I would think a GridBag Layout. Specify a single column. Also, netbeans IDE's gui generation would make this a snap.
With some clever use of factory methods you can have a package-visible only interface implementation.
The best part is checking stackoverflow
I made a couple tweaks and reposted at http://pastebin.com/hs7P1cew In short, you don't need to delete the old triangle from the list as you are processing it. The ConcurrentModificationException you were seeing is because you are removing from the list that is being used to draw. In the updated code, the list is simply replaced at the end of SierpinskiSplit,so the same list isn't being used for two things at once. So synchronized isn't necessary. Due to this change, it is now possible that the drawing and the updates are out of sync, so I threw in a repaint().
No, actually interface members without a scope are defaulted to public. This is from the JLS: &gt; Every method declaration in the body of an interface is implicitly public. &gt; &gt; It is permitted, but strongly discouraged as a matter of style, to redundantly specify the public modifier for interface methods. Note that this is different than a class method, which is what you're probably thinking of. No access modifier on a class method defaults to package-private.
Go to your local library and check out some books in the technology section.
I found the Head First books to be pretty handy and get you a basic introduction.
This gets asked so often it should be in the sidebar.
The eckel book is probably dated now but I thought it was good at the time. http://www.mindview.net/Books/TIJ/
My Java book pretty much goes over the tutorial videos found at http://thenewboston.org/list.php?cat=31 I know your looking for books, but I'd go through these in the mean time.
Some good ones are DevNation (devnation.org) and JaxEnter (jaxenter.com) 
So you can still kinda do this, just not directly. Take a look at the following gist for an example of how to control access to interface implementations. It's not as direct as you want, but it works, and in some ways might be better anyway: [https://gist.github.com/bdavisx/8108899](https://gist.github.com/bdavisx/8108899). And here's a link to the raw Gist: (https://gist.github.com/bdavisx/8108899/raw/008e90697c57163d2982f0b3fd78559e6b29356f/gistfile1.java) 
Can interfaces implement interfaces?
Just read the javadocs. Plenty of free information online.
Interfaces can't implement anything (besides some "default" methods"), but they can extend other interfaces.
One way to avoid updating the data while it's being used to paint would be to precompute it. Just call SierpinskiSplit() before setVisible(). If you want to wait until the data is needed to compute it, you could do something like this: 1. The first time paintComponent() is called, start computing in a background thread. 2. When the computation is finished, trigger another call to paintComponent() by calling repaint(). private boolean isSplit = false; ... public void paint(Graphics g) { if (!isSplit) { doSplit(); return; } ... } public void doSplit() { SwingWorker&lt;Object,Object&gt; worker = new SwingWorker&lt;Object,Object&gt;() { public Object doInBackground() { SierpinskiSplit(0, 6); return null; } public void done() { isSplit = true; repaint(); } }; worker.execute(); } 
One issue with what you are asking (in one of your comments) is that RAP is not yet compatible with Eclipse 4 SDK applications, so it cannot be used to run the Eclipse 4 IDE (see RAP wiki here: http://wiki.eclipse.org/RAP/Eclipse4). There is something called vaaclipse, it is a Vaadin renderer for Eclipse 4. I am using it quite successfully for a web-enable Eclipse 4 application I developed. It includes a demo application called Cassandra, which is almost exactly what you are looking for. Screenshot below... (Disclaimer: I have not used Cassandra at all other than to start it up and take this screenshot for you. I do not know what it can and cannot do.) http://i.imgur.com/6L2d4oq.png And one last thing, in the past I have had decent results using NX for remote desktop (https://www.nomachine.com/). It is not like sitting at the desktop, but for me provided a very "usable" experience.
When I learned Java, I just used online YouTube tutorials. If you don't want a book, you can try watching http://thenewboston.org.
Not sure what sort of background/development experience you have but I found "Learning Java" (O'Reilly) to be really useful. Covers pretty much everything that you'll need to know to get up to speed. 
Orika is very flexible, you can do a lot of things with, as use it to map JDBC ResultSets, DOM Elements, .... Orika has a great support of generics, can map to constructors, can support other conventions (beyond set/get), conditional mapping via Filters API, support intelligent mapping via DefaultFieldMapper. There is a lot of other features that should be documented. Orika is two years old (so still relatively young but have established code base )
Effective Java is worth having as a second book on the subject http://www.amazon.com/Effective-Java-Programming-Language-Series/dp/0201310058
I have to disagree. I find the format of the head first series to be utterly obnoxious, but it does depend on your learning style. I would read a sample before buying a headfirst book to be sure the format is tolerable. 
Start with HeadFirst Java to get a basic idea. Then move on to the official java tutorials. http://docs.oracle.com/javase/tutorial/ You can also get some good hands on practice to go with the theory by downloading Netbeans and doing the tutorials. www.netbeas.org
partially agree. Javadoc is good but not enough, it is a reference rather than a tutorial.
OK, so there's the regex way below, and then you could convert say, a string into a char array, and use possibly the isDigit() method, which takes in a char. This might be faster, might not. pssst - there's also isLetter() You've almost got the regex way in the above comment. Here's some further clarification on regex - you don't need the text.length check: [0-9]+ will match 1 or more digit. [0-9]{2} will match 2 digits exactly [0-9]{1,2} will match 0 and 00 but not 000 Then the Regex Or (the pipe |) can be used So to answer your original question, the regex (x|2|B) will match either x, 2 or B, but not X, 0 or b. You can then get more elaborate using things like above, and have things like [A-F]{2}|[0-9]{3,10} which for example would match AB123 or FF1231236549 Some further food for thought: https://www.google.co.nz/search?q=java+speed+of+regex http://www.codinghorror.com/blog/2005/02/regex-use-vs-regex-abuse.html https://xkcd.com/208/
Packtpub is having a eBook sale: https://www.packtpub.com/ebookbonanza You might find something there, only $5 
I read it a few years back and I still have it for reference. Some parts are dated but I would still highly recommend it as a great place to start. He is able to subtly throw in design patterns and idioms into learning the basics.
1. Head First Java 2. Java Generics and Collection 3. Java Concurrency in Practice 4. Java Performance 5. Head First Design pattern You can also check out my list of Java books here http://javarevisited.blogspot.com/2013/01/top-5-java-programming-books-best-good.html
I ended up buying mock exams from [EnthuWare](http://enthuware.com) for about 20$, which is a fair price. Most of the mock exams are in fact more difficult than the actual exam. Thanks to those, plus a study guide, I ended up scoring pretty damn high on the official exam! Best of luck to you!
If you use Oracle, don't overlook their excellent PL/SQL functions, like [XMLElement](http://docs.oracle.com/cd/B28359_01/server.111/b28286/functions230.htm#SQLRF06168), [XMLAgg](http://docs.oracle.com/cd/B28359_01/server.111/b28286/functions223.htm#SQLRF06165), etc. Nice, clean way to go from relational data to XML. The Java work is just elementary JDBC.
I do not get it. This seems like a really complex solution to a simple problem. The custom mappers seems particularly useless. You could easily create a method like that anywhere. It also seems to me that this should not be a very common occurrence where you have a huge number of identical properties that need to be stored separately in different beans. I am probably missing something since there are two libraries created to do this.
I learned about 7 months for the exam. The first 5 months I just randomly read the "SCJP Sun Certified Programmer for Java 6 Exam" and was doing some question found on the web. The last 2 months I organized my learning: I made notes from the topics in the SCJP examp book and I stared to do at least 10 Whizlabs questions a day. The Whizlabs exams were a little harder then the actual exam... some of the real questions were really easy, but the stress lvl was higher so I scoorred only 78% (average on mocks was above 80). I also found some usefull youtube videos for the exam, this channel has some good stuff: http://www.youtube.com/user/java9s
I would recommend that anyone who wants to understand thread interruption read Brian Goetz's excellent Java and Theory article [Dealing with InterruptedException](http://www.ibm.com/developerworks/java/library/j-jtp05236/index.html?ca=drs-).
The interface itself need not be public. Only the methods it defines. But if the interface itself is not public then it has the same effect as making the methods default/package private access.
It is pass/fail, but you do see your final percentage As far as employers go, that depends on what they ask for. Most places I've been (If they cared), getting a pass was good enough.
You don't inherit/extend from interfaces (although an interface itself may actually extend multiple other interfaces). You implement them. Inheritance and implementing interfaces are different concepts. Don't conflate them.
Actually, in Java, an interface can extend more than one other interface: interface Bar {} interface Baz{} interface Foo extends Bar, Baz {} Is perfectly legal for interfaces. Any non-abstract class that then implements Foo must implement any/all the methods defined by Foo, Bar, and Baz. In Java, interfaces are immune from the concept of single inheritance only, but only because they don't actually implement any code/behavior.
Well there's always that or you could just not put 'public' in front of 'interface'
If you fail, then take the test again, are the scores combined or is it reported that you failed once?
Correct. But the public implementing class wouldn't be able to pass itself off polymorphically as an instance of that non-public interface to anybody outside the package. To that end, I don't really see much point in having a non-public interface implemented by public classes.
The point is having the Interface methods visible within the package, but hidden to the outside world. In other words the interface and its methods would be an implementation detail of the package.
EAP 6 or AS 6?
You can achieve this I guess if you design your code carefully such that no public classes implement any of your non-public interfaces. In such a design the public classes might encapsulate non-public instance members that implement the non-public interfaces and delegate to them rather than exposing the methods of the non-public interface directly on a public class.
+1 update continuously. Not because you HAVE to have the newer version, but to stay in the cycle. The classical thinking that skipping a few versions so you'll only have to pay the update costs once for a much larger benefit never pays off.
Little example I cobbled up: interface NonPublicIntf { public void someMethod(); } class NonPublicMember implements NonPublicIntf { @Override public void someMethod() { //do whatever... } } public class PublicClass { private NonPublicIntf npm; public PublicClass() { npm = new NonPublicMember(); } //Effectively lowers visibility of //interface method from public to protected. //Nevermind that classes outside this package cant see the interface anyway. protected void someMethod() { npm.someMethod(); } }
They're really hit-or-miss. I found Head Start's iOS book to be decent, but Head Start Java was *utterly unbearable*. The books look shiny and attractive, but the information density is pretty damned low.
What I mean is: What is the difference between if(x &gt; 0) x++; and if(x &gt; 0) { x++; } Why would you use one instead of the other? 
Are you talking about ternary operators as opposed to if-statements? like: int a = isSomeBoolValue? 3 : 4; /* VS */ if(isSomeBoolValue) { a = 3;} //...etc
There is no difference, just slightly shorter form without the braces. If the body if the if-statement is just one line, you can leave off the braces. You also don't need to insert returns in c-style languages (most of them anyways) since they're delimited by characters rather than white-space. I personally think leaving the body of the if-statement on the same line is just asking to get your butt kicked in a code review. In my opinion, you should always insert a return for the body of a conditional statement as it's well-understood practice and won't confuse anyone.
Both versions perform equally. The main difference is that the later (with the braces) is more legible than the former (without braces) and the later is the commonly accepted standard for java coding. Any whitespace added to code makes the code easier to read but has no performance implications at all (because the compiler ignores whitespace). Theoretically, a Java class (program) could be written in a single, consecutive line, but it would be totally unreadable and unmaintainable. In Java it is common practice to use the braces (also stated in the Code conventions)
It's good for assignments and returning stuff depending on some condition. If/else is a construct for controlling program flow... It seems to be overkill and pollution to have to write if/elses if a ternary doesn't reduce readability
Thanks I can see what you mean now.
I stand corrected.. HS Java is a cruel joke and probably not representative of all HS books. 
Exactly. Learn how to use interrupts and please don't override `Thread.interrupt()`.
If I have several if statements in a method, I'll sometimes code them like this to save vertical space. if (x &gt; 0) { x++; }
http://www.stack.nl/~dimitri/doxygen/
stmt ? true_stmt : false_stmt is nice because if evaluates to an expression that can be used in places like assignment, etc... You can think of if more like a functional style if-else stmt in that if and else are required and that the entire thing returns an expression. If blocks are more for control. They can't be assigned but don't require else portions.
I've seen someone stare at this: if (x &gt; 0) x++; y++; and not work out why y++ is always executed, no matter what the value of x. I always put the braces in, and have IntelliJ configured to insert them automatically.
Maven javadoc with jdk7
You can use the ternary operator to lay out a truth table, for example for a turnstyle: nextState = currentState == Locked &amp;&amp; input == coin ? Unlocked : currentState == Locked &amp;&amp; input == push ? currentState : currentState == Unlocked &amp;&amp; input == coin ? currentState : currentState == Unlocked &amp;&amp; input == push ? Locked : Error; This works because the ternary operator is right associative. This is true for all languages that have a ternary operator, except interestingly for PHP. PHP stupidly makes the ternary operator left associative (the above code won't behave the same in PHP), which destroys one of the key advantages of the ternary operator.
This. One thousand times this. Always, always use braces. Your ancestors will thank you.
Having merged a few other teams into my current project, this behavior is almost always a growing pain of taking our Python devs into a Java environment.
I teach students to always use braces. As others have noted, not including the braces out of habit can lead to some errors that are hard to spot. Alson you may only have one statement now, but the chances are fairly good that a second statement will be added later.
In my opinion it was a mistake to make the braces optional. This is one place where Java should not have followed C syntax.
As a Python dev moving to Java, what are some things to watch out for?
Yuck. That's exactly the sort of code smell that makes me dislike ternary statements.
One word. Swing Check it out
oh ok thank yea thats what i meant about JFrame i forgot the class name though. can that be used to make a maze game where i have a listener look for arrow keys then goes through a maze with walls 
Pedantic correction: It will parse the first following statement as subordinate for the if branch. Grammatically, you can think of braces around a sequence of statements as a statement.
It's kind of a YMMV thing anyway, but yeah. The HS books all have different authors and aren't written to a single, consistent style like, say, O'Reilly's reference books are.
And a different word. JavaFX.
This is probably only valid reason to use them imo
Even then, it's dangerous. Plus, you should not need to test for debug level before logging. Your logging framework should do that for you.
Can you give more details on pivot? What advantage does it really have over swing, beyond building interfaces from XML (like android, as it seems)? It doesn't seem to be something that was meant to replace swing.
Always use braces! { :o) }
Depends on the complexity of the logging statement being constructed - if it replies on non-trivial method calls, I'd wrap if in an if block. That's definitely an exceptional circumstance though.
&gt;it seems to me the teacher isn't the best, i teach my self most of the time That's the basis of a computer science degree. It's not that your teacher is inept it's that you have to teach yourself no matter what. As far as Graphics programming you're talking about a large beast. Explaining the hassle of Java GUI programming is more than my brain can handle at 5 am. Read [Java Killer Game Programming](http://it-ebooks.info/book/805/). I hope your OOP programming is strong and you're as dedicated as you say cause this is a very large task. Also read up op the Java Swing API and Oracle's GUI examples.
Firstly do you really need a database? If both applications are running as part of the same application? There are other ways to offer persistent storage. Have you considered using a connection pool such as C3P0 or DBCP to manage your connections?
On which OS are you trying that?
[Pivot](http://pivot.apache.org/) has more out of the box components than Swing, and the components generally work better together. You don't have to use XML; you can code a Pivot application using Java similar to a Swing application. As far as I know, there's no comprehensive Pivot tutorial to get you started. The Pivot website has lots of individual component examples, but you're on your own putting the examples together to make a complex GUI. 
Windows Vista 
Depends on how performance critical your code is. Here is log4net on the issue, I assume it is similar for log4j: &gt; **What is the fastest way of (not) logging?** &gt; For some logger log, writing, log.Debug("Entry number: " + i + " is " + entry[i]); &gt; incurs the cost of constructing the message parameter, that is converting both integer i and entry[i] to a string, and concatenating intermediate strings. This, regardless of whether the message will be logged or not. &gt; If you are worried about speed, then write if(log.IsDebugEnabled) { log.Debug("Entry number: " + i + " is " + entry[i]); } &gt; This way you will not incur the cost of parameter construction if debugging is disabled for logger log. On the other hand, if the logger is debug enabled, you will incur the cost of evaluating whether the logger is enabled or not, twice: once in IsDebugEnabled and once in Debug. This is an insignificant overhead since evaluating a logger takes less than 1% of the time it takes to actually log a statement. http://logging.apache.org/log4net/release/faq.html
Oh thank you, it looks like there is a alot more than just exporting it. I'll try this in the morning. Thank you 
It might be too much but if you want to do games in Java go to libgdx. For a first project though a JFrame game is also fine you can do a lot with it.
This is brilliant – pretty much exactly what I was looking for. Thanks lots!
I always use braces even for one liners unless I'm using a ternary operator or a branching statement. e.g. : Regular one liner: if(i == someVar){ //dostuff; } Ternary one liner: otherVar = (i == someVar) ? value1 : vlaue2; Branching statements: if(i == someVar) continue; if(i == someVar) break; if(i == someVar) return; I think it's perfectly okay to ignore braces in those scenarios.
To each their own of course. Since a code smell indicates a design weakness, what weakness do you see with using ternary to represent state transitions and do you have any suggestions for a better approach?
Most logging frameworks take a format string and a variable lenght list of arguments. log.debug("WTF happened %s", "some text"); looks like a simple method call, in reality you get Object[] args = new Object[]{"some text"}; log.debug("WTF happened %s",args); Depending on the placement and frequency of your logging you might end up putting a lot of pressure on the garbage collector for objects that are never used. Some more complex statements might even invoke multiple methods to get the arguments. 
Are you using Swing? Swing won't block because it is event driven (except for modal dialogs, but that blocks window events too). A better approach is to hook into the right event that signals application exit. If you want to manage the connection class from the Main class, you could [hook a window close event](http://docs.oracle.com/javase/tutorial/uiswing/events/windowlistener.html).
Transactions isolate concurrent changes from each other by the [ACID](http://en.m.wikipedia.org/wiki/ACID) principle. Commit makes database updates permanent and visible to everyone else. A rollback undoes all database updates, as if you were never there. Conflicts are handled by another principle known as [locking] (http://en.m.wikipedia.org/wiki/Lock_\(database\)).
Transactions are not handled by jdbc. The rdbms is responsible. Each has its especific details about transaction isolation. There are differents strategies for your problem. Right now I think "select for update" should work.
That's why locking strategies are left to the application. Do you care if someone commits changes to the same record before you commit? Is it okay to overwrite changes made by the other transaction? Then don't worry about locking. Do you want to prevent others from making changes at all while your transaction is editing the record? You can pessimistically lock the record, which will raise errors for everyone else when they try to update. This introduces lock contention, because now everyone has to wait for you to finish. Do you want to just be notified when someone else updated the record while you were editing it? You can take an optimistic lock on the record, and you'll get an error when you update if there was a concurrent modification. You'll have to figure out how to reconcile differences though.
I've heard that the for loops can cause some grief (indexed vs iterated sets) but with many of java structures you can cope without any real strain. You will probably need to train your eyes to stop looking at the whitespace depth, too...
its not blogspam, i just want to share something that i created. i´m gonna keep sharing
You could run reddit's python code in jython...
The Log4j interface is *very old*. SLF4j corrected that mistake several years ago. With SLF4j, you write: logger.debug("Entry number: {} is {}", i, entry[i]); The String building happens inside the debug method if and only if the debug log level is activated. Basically, they put the "isDebugEnabled" test inside the debug method, which cleans up your code *a lot*.
This is why SLF4j has two distinct methods for logging with one argument and with two arguments, respectively, in addition to the more generic method you described.
A transaction is bound to a connection. That's the boundary. In most JDBC drivers (native ODBC is a bit more complex), the statements are sent to the server along with the data (if any). And data is transfered back if necessary. Always on the same connection. Usually, transactional updates to the database are kept in the transaction table or inside the real table, but marked as dirty (and the journal). The lock is always bound to the connection. Edit: BTW. There are also distributed transactions. That usually means, that a transaction coordinator controls several transactions and offers them as a single transaction.
Gets worse if the data you are logging has significant access time (say, from a db). Then you have to resolve the data access before sending it to the logger. The if-statement avoids this.
I think I may have figured it out... seems almost too simple. Creating a WindowAdapter and hooking it into the main GUI, listening for "closing" and then using that action to terminate the DBConnection. WindowAdapter wa = new WindowAdapter(){ @Override public void windowClosing(WindowEvent e) { System.out.println("Window Closing"); ConnectionManager.getInstance().close(); } }; If this is a bad implementation or there is a better way to think about this, please let me know. 
I also saw this implementation, any thoughts on doing it like this? Runtime.getRuntime().addShutdownHook(new Thread() { @Override public void run() { updateZonas(); db.close(); } });
Read the Kathy Bates book at least twice, practice the questions without an IDE, so it's you and not the IDE that's catching compiler errors. The questions are a lot harder than on the actual exam. The actual exams tells you the exact number of correct answers, and the majority of questions only have a single correct answer. I would recommend you check out Test Killer (there's gotta be a PDF somewhere). At least 60% of the questions in my OCJP6 exam were also in Test killer questions. 
Typically, the data you are logging is data you have gathered or computed for other purposes. If you really are pulling data out of a DB for the sole purpose of logging it in a debug statement (have you really done that?), then of course you should protect it in an if statement.
Most answers suck in this thread IMO. The right way to build text-based docs is via templates. See Velocity or FreeMarker.
Check out gui builders... https://developers.google.com/java-dev-tools/wbpro/ is really good. Manual GUI programming is a WASTE OF TIME. Study the output from the GUI builder, but don't waste time programming desktop application GUIs, especially in Java.
I haven't, it was an example. Another example could be a collection count. Anyway, I don't expect my peer's code to be optimized under debug conditions. Accessing a database to gain more info on a calculation, or what not, isn't that far fetched. Say, you in production simply need to pull customer transaction data from a table with only customer ID as identity, but under debug logging want more info on the customers involved thus having to pull customer data from another customer table. I see no problem with this if you protect, as you say, the additional access with a debug if statement.
For the lazy: /r/bukkit --- I provide direct links to lesser known subs mentioned in the title if one isn't already provided. Let me know if I need to try harder: /r/LazyLinkerBot
How many players do you expect? How often will their stats/abilities be changed? How important is speed of lookup?
My take is that data goes in databases while XML/YAML are generally used to store configurations in source. If it were my project, you'd have to have a very specific reason and compelling argument to back it up to get me to use XML over SQL.
sql. If it's on the client side, I'd use sqlite. if it's server side, postgres.
A DBMS like Postgres is a great idea. It takes away a lot of worrisome situations that you probably haven't thought about. For instance, what if your XML/markup of choice file is only half-written due to power failure? Something like Postgres has already solved that for you. Also, it will make data integrity much easier. For instance, if you add property X to all players, you'll have to make sure to add it to all the player nodes in your XML. There's lots of room for mistakes there. In SQL, just alter the player table to add an X NOT NULL column.
The difference is that one has curly braces, and can have more than one statement inside. The other does not. That is the only fundamental difference. Choose whichever you like. As usual, neither is fundamentally bad, but you should make sure you do not write unreadable code. If you are following coding conventions/style guidelines, they may force you to always use braces.
&gt; you'd have to have a very specific reason and compelling argument to back it up to get me to use XML over SQL. Give that SQL has more dependencies than XML/YAML, shouldn't it be the other way around? I.e. "you need a specific reason to justify adding a 10MB+ dependency to the project".
first transaction to open with a read for update lock will "own" the record. And no other transactions will be able to access it. Subsequent transactions will have to wait. How successful and easy this works, depends on which RDBMS you are using. There's tons of rules for these kinds of race conditions-- and your RDBMS plays a huge part. Your application, if responsible for handling multiple types, must play a huge role in handling discrepancies and exceptions. Cause they don't all work as well as you'd like.
Since your requirements might change quickly I would use Json/nosql since it seems like you would have one record per player with unstructured stats associated with each player.
&gt; I think you'd be very hard-pressed to find any serious production IT system using XML as its datastore. I think this is a "true scottsman" problem. I'm saying you need a "specific reason to use SQL", and I'm guessing within your "serious" qualifier, you're imagining some reason to use SQL. I could surely find you projects that don't need (and thus shouldn't use SQL), and I suspect you're reply with "Well, those aren't *serious* systems." For example, I bet the vast majority of games out there do not have any SQL database as a dependency. Some games do, but the vast majority (Pacman? Galaga? Etc.) do not. (And it sounds like the OP is writing a game)
You're right - I was making the assumption that the game has an online component. If that were not the case, then XML could be considered (though my personal preference would still be SQLite).
Don't waste your time on Java UI. It's hard to use and there is barely anyone actually using it today. Generally speaking, Java is used for building backend applications except Android. Try building your small game with Javascript in a web browser, or ios/android. If you need to persist your data, build a Java server to connect your front end and back end applications
That's Javascript though, not Java.
If your dB fits in memory and your query results too: just use whatever you want.
Seconded. No need to setup a "proper" db
Probably just go JSON or an even simpler CSV then.
Hell, you can just serialize the object that holds the list. Why bother with anything else?
Ant
Put your 'slight disliking' aside and use maven. It's just a directory structure. ;) Also: gradle
Thanks, Gradle looks really nice and fully featured!
The directory structure is also customisable 
Please no. If you're going to shoot yourself on the foot at least don't do it the XML way. Use gradle. Let's give ant the deserved RIP. We've got better things now. 
Funny you liked gradle since well, most of it's defaults are quite like maven ones. Of course being gradle what it is you can always change the dir structure but you will surely regret it. Also you could change maven defaults too, and you would regret that even more.
If you can restrict yourself to ASCII you may just as well use an array indexed by the character code of the character. This avoids boxing both the key and the count. This is the kind of question I ask to see what kinds of questions the interviewee will ask since the problem's constraints can have a huge effect on the storage or algorithm chosen. 
I got this problem in one of my first interviews. When I asked "is this for a string of any Unicode characters or is it just ASCII?" I got chewed out pretty stridently...."In the real world we *always* design for all Unicode you n00b!" was pretty much the reaction. 
In the real world, we don't solve this problem, either...
That isn't true at all. User input should be Unicode, but a config file or something can still be ASCII. 
In a single pass: import java.util.*; public class FirstNonRepeating { public static void main(String[] args) { Set&lt;Character&gt; repeating = new HashSet&lt;&gt;(); List&lt;Character&gt; nonRepeating = new ArrayList&lt;&gt;(); String word = args[0]; for (int i=0; i&lt;word.length(); i++) { char letter = word.charAt(i); if (repeating.contains(letter)) continue; if (nonRepeating.contains(letter)) { nonRepeating.remove((Character) letter); repeating.add(letter); } else { nonRepeating.add(letter); } } System.out.println(nonRepeating.get(0)); } } 
You might look at the JVM bytecode and how that works. Once you perform a compile from Java source code to JVM bytecode, a lot of the expressions you see in Java source don't really translate to bytecode. For example, manipulating on which line the 'if' statement. ... To answer your question, it really depends on the style of coding you are using or if you are following any code conventions. 90% of Java developers and static code analyzers prefer if statements with braces, regardless if it is a one line block.
&gt; nue; &gt; if(i == someVar) break; &gt; if(i == someVar) return; Ick 
Just sort the array ascending and loop through checking if n+1==n and increment array position by one if true
yeah except you're searching through the array and then removing an element in the middle of it. 
that's nlgn time
List.contains() is an O(N) method. For the worst case input, "abcdefghijklmnopqrstuvwxyz", your algorithm is O(N^2), so you may as well just forego data structures altogether and scan the string each time.
Yeah, but sometimes there might be a chance that you might need to solve something similar... [other bullshit] ...and I'm the interviewer and you don't have a fucking say in this. REJECTED. Next!
That's pretty much how you should hook application shutdown a Swing application. In terms of "better" ways, you could use an application framework. [JSR 296](http://www.oracle.com/technetwork/articles/javase/swingappfr-136951.html) was designed for this, providing an Application object with an exit method that gets called when the application is terminated. Unfortunately, this is not a part of the JDK, so you would have to download it separately. It is available for [download](https://java.net/projects/appframework/) or you can get it from Maven (org.jdesktop.appframework). This is the lightest weight app framework. Heavier weight ones include the various "RCPs" (Rich Client Platform), such as NetBeans RCP or Eclipse RCP, which allow you to build apps that take care of the lifecycle things and also look like the respective IDEs.
The interviewer was an asshole for chewing you out. It's a completely valid question on your part. 
what do you not like about directory structure? (and please don't say "I don't like having test sources in a test/ directory, I'd rather have them in the main source tree with everything else")
Last I checked javaFX wasn't mature enough yet... Then again.. It's been a while since I last checked...
Remember kids, when working with JPA, keep your SQL traces on and check your logs to ensure that the SQL you expect is being generated. Anyone who tells you that JPA lets you forget about SQL is fibbing!
This won't give the correct answer as the question asks for the *first* non-repeated character. So for "stress" your approach would return 'e', while the correct answer is 't'.
Yup. I got this interview question and lost the interview partially because I assumed it would be unicode. If i had asked what the character set was or what the encoding was, I probably would have figured out this solution faster. I did figure it out by only after a lot of hints. 
Yeah, I know but you always get those people who say "It's not really O(1) though!" I just shake my head, so I add these wishy-washy statements to quiet them down.
I know your pain... Haha
 public char getMagicChar(String str) { Map&lt;Character, Integer&gt; counts = new LinkedHashMap&lt;&gt;(str.length()); for (char c : str.toCharArray()) counts.put(c, counts.containsKey(c) ? counts.get(c) + 1 : 1); for (Entry&lt;Character, Integer&gt; entry : counts.entrySet()) if (entry.getValue() == 1) return entry.getKey(); throw new RuntimeException("Undefined behaviour"); } 
Well spotted. I believe making the List a SortedSet instead would fix that.
&gt; in this case since it IS just O(n) As I replied to Buckwheat, thats not correct. It is amortized O(n) if you are relying upon amortized O(1) lookups. 
We'd like the option to view the files through FTP (one of the reason's we're leaning towards YAML).
What if I said I was using an infinitely large hash table with a perfect hashing function to prevent any collisions and resizes? :P Buckwheat originally said "O(1) in theory", though you are definitely right that in a realistic implementation it is amortized O(1).
Thanks for the resources.
Thanks for posting this. I recreated what you did with pong and then I used what I learned to create Asteroids. It's a bit buggy and the physics isn't the best but it was a hell of a lot of fun.
&gt; an infinitely large hash table Then you would have O(infinity) time and memory for allocating your table ;) I find questions like this are mostly asked specifically to tell if a person has the theoretical understanding to quickly identify when an "ideal" O(n) algorithms is not possible, and can identify the alternatives and their trade offs. 
Thanks!
SortedSet probably uses a balanced search tree under the hood, right? So you'd get potentially up to log(n) lookup time, and the for loop in the worst case could take O(n log(n)) time.
Gradle looks more similar to latter/newer languages' built-in toolchain, such as Clojure/Scala/Go; it provides official Java capability to builds, tests and runs programs, unlike Maven which only builds and tests programs, but relies on external plugins for almost every other task.
Intellij, it is awesome!
Do yourself a favor and try a few. Everyone finds their favorite, but often we're at the mercy of corporate whitelists or some tech lead with a lust for a very specific IDE plugin that everyone must use. Simply put, get a little fluent with the heavy hitters (Netbeans, eclipse, and IntelliJ) and in that process see where you find your comfort area. 
Eclipse simply for the fact that I've been using it since I first learned Java. It is a robust IDE and I haven't encountered any lacking features that I needed. That being said I jumped ship over to Android Studio for Android development and it's making me want to come over to IntelliJ. AS is an IntelliJ clone specifically aimed at Android development and through its use I've found that IntelliJ is just plain faster at developing. The auto-complete is much faster than Eclipse and allows for a much better flow when programming. *edit:* Also IntelliJ has an actually working 'Darcula' theme. You have to perform dark wizardry to darken the Eclipse layout and even then the outlines are still white.
definitely. just feels right.
http://i.imgur.com/sfeq6SN.jpg
What about JCreator? Someone told me he hated Netbeans because the way it saved the compiled code, it saves it in a different folder.
I just tried IntelliJ and I think the Darcula theme is awesome!!
Why not httpand Jason. Far more standardised and popular than httpyaml.but you've got to ask yourself if you really need to view this in plain text in the first place? Is this intended to be a human readable file. Youre taken too long to make this decision in the first place. Just make it plain text tab or comma separated values and get to work. You can make a clearer decision later when you've hit the need for a more complicated system. 
I recently started using IntelliJ and I am loving it. It just feels so solid, and everything seems to flow together perfectly. That is for personal projects though. At work I am required to use eclipse. While there is nothing wrong with eclipse, I have never grown to like it. To me it has always felt thrown together, like a Frankenstein with each limb from a different species. Don't get me wrong, there are tons of great things about eclipse, they just don't fit together nearly as nice as they do in IntelliJ.
My brother is autistic. I'm changing my keyboard layout to programmer dvorak and vim may not remain my editor of choice throughout the transition. For the time being it is the editor I am most productive using.
I would use Intellij if I were doing all Java all the time, but Eclipse works so well for the other languages I use it's just convenient to stay with it.
ant does have its own, albeit odd, uses. I don't use it, though.
I'm using eclipse. My main problem with intelliJ is that I can only have one project open and I find the package explorer less clear other than that too. I wish eclipse looked half as good though. Looks matter when you stare at the same thing the whole day.
There should be an option for that. I always have a few projects open. Each gets its own window. But I think you are correct about multiple projects in the same window.
I prefer Vim, but it happens that I fire up Netbeans just to use it's glorious debugger.
Absolutely. Trust your ORM "solutions" like you'd trust your ex-wife with your new checking account. I like hibernate for small amounts of data. It's great for that. But any mass loading, updating, deleting, or tricky queries I go to straight JDBC. Hibernate sucks at that-- either generating terrible sql, or it's too difficult for me to figure out the query, or it's just too slow.
I've always been a big NetBeans fan. Though I'm reasonably comfortable in Eclipse (and continue to use it for a couple projects), since NetBeans 6.x, I've simply found NetBeans to be more stable, faster, less hassle to configure, and just an all around more pleasant experience. That said, because the Android support in NetBeans is ... suboptimal, and because I've had an Ultmate Personal license for some time anyway, I've been giving Intellij IDEA another go. So far (less than a week in), I'm finding it to be at least a match for NetBeans. In fact, with the newly releaseed version 13, it's looking very much like I'll not be going back to NetBeans (or Eclipse) from here on out, with one exception. The only thing that IDEA is lacking that will possibly keep a NetBeans and/or Eclipse install on my machines is C support. Though I still often use good old Vim (augmented with ctags, cscope or global, and clang-complete), make, and gdb, I've more and more often been using an IDE (usually NetBeans, but sometimes Eclipse/CDT). On the up side, JetBrains is working on a C &amp; C++ IDE, and their specialized IDEs are all built on top of IDEA, so it should get that functionality via a plugin sometime shortly after the new IDE is released. Anyway, I'd suggest at least getting somewhat familiar with Eclipse, since it is far and away the most popular Java IDE. I'm not suggesting you'll necessarily like it, nor wish to make it your main IDE, but if you stick with Java, you'll certainly cross paths with it one way or the other, so it's good to have some familiarity. I'd certainly suggest trying out IDEA, as well, especially if you think you'll want to branch out of plain Jane Java development. There's an open source ("Community") edition, so cost shouldn't be an issue unless you need some of the features in the Ultimate edition. Even then, IDEA's personal license is very reasonably priced, and they run sales on occasion. 
I use NetBeans. I know Eclipse is more powerful but using it just feels unnatural to me and I find that I need to look up tutorials to do any little thing in the IDE.
GlassFish has manuals in PDFs available for download, which is very useful when looking for a specific command or how to perform common administrative tasks. Does JBoss AS and WildFly provide similar documents?
If you're doing *other things (like HTML, CSS, Javascript, Python, PHP, LESS, or Ruby)*, I would *still* go with IntelliJ. If you document your code properly, IntelliJ's Javascript support (completion and error checking) is on par with most statically-typed languages, which is just amazing. Both Eclipse and IntelliJ are very powerful polyglot IDEs (multi-language), but for the same reasons that IntelliJ is the way to go with Java, it's *also* the way to go for any of the other languages with first-party support (Web, Php, Python, Ruby). 3rd party language support is also good, but I haven't done much comparison to Eclipse 3rd party language support.
I use IntelliJ IDEA because it has top-notch Scala support. Scala is not optional! :P
You certainly don't know. You especially don't know the true interviewer reaction since you only have the subjective retelling of the interviewee. I don't mind in interviews, but in the real world, anything that don't handle Unicode is suspicious and prone to errors. Maybe you don't care in the US, but in Europe, accents are everywhere, and encoding issues become a problem if they are not dealt with swiftly at the start of projects.
From the limited anecdote provided and my own experience with interviews and software development, stridently chewing out someone for asking a valid technical question is ignorant, arrogant, and prickish (now if the interviewer had said specifically that this should be a general case algorithm for a java String, it would be less ignorant and arrogant, but still kinda prickish if the tone relayed was accurate). In the real world, there are all sorts of contexts where being able to handle unicode is unnecessary, like the config file suggestion above, or parsing defined messaging protocols that are always in ascii, such as market exchange data. 
Eclipse projects map to IntelliJ modules if I'm not mistaken. So to open multiple projects import/open them as modules. In fact, I have multiple multi module maven projects open in a single IntelliJ window and it maps out the same way as the eclipse package explorer does.
You can definitely feel that it was made from programmers for programmers. 
But IntelliJ IDEA Ultimate has a zillion official plugins for other languages. E.g., I recently had to write some PHP code, the plugin does a terrific job. Same goes for the Javascript, Python and Ruby plugins (in fact, they have cheaper IDEs based on these plugins - PHPStorm, WebStorm, PyCharm, and RubyMine).
If you are using Maven, open the 'Maven Projects' tool window, click '+' and you can add another Maven project. Works great to work on a project and its dependencies at the same time.
I use JCreator at my university. Although some professors use Dr. Java or jGRASP. After reading this I think I'll give intelliJ a try as well
I use Vim as well. With a few add ons it does everything I want or need.
IntellijIDEA, because Eclipse permanently damaged my brain.
Vrapper is what I use, it's great mostly, but every so often, I'll make a change, :w to save, and instead of saving it'll revert to it's previously saved state. It happens mostly with the first save of a file, and it might just be a weird interaction with perforce, but if you notice that, it's vrapper, not you going insane.
Since the last two versions modifying the theme became rather easy as they changed some inner workings concerning the UI try this: https://github.com/guari/eclipse-ui-theme I'm still an eclipse guy because even though autocompletion has some problems I prefer to type instead of autocomplete, sure it takes a little bit longer but in the long run I prefer writing slow but good code.
As much as I like the idea of Eclipse being the ubiquitous open-source IDE, I still feel more and more let down by it. Quality seems to declining, seems to get slower with every release. To me it seems that they're just focusing on the wrong stuff, have to much solved by student volunteers who just disappear after the first release of a feature, etc. I also recently developed RSI-like problems in my hands which gave me the final push to Intellij which is much more streamlined to be really used by keyboard. You can control every dialog by keyboard alone, you can go back and forth the window keys reliably with only the keyboard etc etc. The javascript support is so much better.
I use NetBeans simply because it does the job and it's predictable. Works every time with minimal (if any) glitches. I use it since 2007 in a very large project. I also use it to build websites. Couldn't say the same for Eclipse: it bitches about missing classes and stuff that are right in front of your eyes until you restart it. Such unpredictable behavior is all over the IDE. IMHO, NetBeans vs Eclipse is like PostgreSQL vs MySQL. The former is much more stable and capable, but the latter is most talked about by journalists, so people with zero confidence end up going with the horde. 
Great free vim plugin, too!
Which version of Java? Not mandatory in Java 7. I do recall something like this before, at least with Java 5, but I don't remember if it was a warning or an error. The cast applies to methods which take var args and tells the compiler if you mean that the parameter is an array (Object cast required) or array of parameters (Object cast not required). That is because var args are indistinguishable from an array of parameters (backwards compatibility is a bitch). 
Some good things here. Extract method/variable and alt+arrow look particularly nice.
You have *completely* missed the point of my response. Completely. The point **is not** that you ignore characters outside of 7-bit ASCII. Obviously you don't do this in the real world. But the interview situation is not the real world. The question being asked has no real-world application. The two aspects of the problem are algorithm selection (leading to a discussion of runtime complexity) and data structure selection (leading to a discussion of both time *and* space complexity.) It also leads to a discussion of internationalization issues. The OP's solution uses a hash table mapping a `Character` to an `Integer`. If that solution was presented to me I could ask about the cost of boxing/unboxing (which in turn tells me if they know what that means) and the impact of that. From there we can talk about ways of avoiding the unboxing, and I'll see if they ask about restricting the range of character values, and if they don't I could ask them what they would do differently if an artificial restriction on the range of character values was put in place. From there I can see if they know how to use an array for this. When they suggest using the hash table in their solution, I can ask them why they chose that particular data structure. I can see if they're even aware of Unicode, which can segue into discussions of that. 
You are trying to access static methods of the WineBean class (which not exist). You want to access the wine object: ps.setInt(1, wine.getID()); ps.setString(2, wine.getBrand()); ps.setString(2, wine.getFlavor());
This. You can find out pretty quickly who the assholes are when the respond to a question like this. I'm not asking the question because it's a problem I expect you to solve in the real world, I'm asking the question to see what questions you ask back and to see how you approach a problem. Very often the person who responds to a question like that is also someone who is a "Senior Software Engineer" two years after graduating from college and think they are the shit. 
Auto completion is a tool for preventing errors as much as it's a tool for speed IMO.
+1. The community edition is equipped with most of the features you will ever want (baring those 'enterprisy' stuffs, spring integration, code coverage etc). Once you get a hang of it (esp latest version 13), you will never touch any other IDE willingly. Guaranteed!
You have to be kidding, otherwise you are uninformed. NetBeans is awesome for web development https://netbeans.org/features/html5/
I use all of these daily. If you're not using keyboard shortcuts in eclipse, you're really missing out. One meta-shortcut that's very helpful is Ctrl-Shift-L - this shows all the keyboard shortcuts that are available in the current perspective / editor. It's also important to note that if you're using OS X Ctrl maps to the Command key by default.
did you add driver location to classpath(include jar if using any modern IDE)?
Thirded. SQLite or H2 is definitely the way to go here. XML would be kind of OK for a smaller amount of data, but typically it would be config files and those are sometimes better off using properties. SQLite would allow what they are storing to grow, plus it allows for easier drop in replacement if they choose to go with a more grand route.
You are totally free to bundle a Oracle JRE with anything if you don't change it somehow as I know. I'm not an expert, so I don't know if there is a problem with GPL, but there should be no problem from side of Oracle.
The single line if statement isn't really just a matter of taste for java. It goes against pretty much every code standard out there. Braces should be used for every if statement regardless of the contents.
Why is upcasting funny? It's textbook single dispatch, statically typed OOP. You want to represent Object[] with a more abstract type to alter the static binding.
Hard to tell which lines you are talking about and the pastebin link goes to your ConnectionFactory only which doesn't include the code you list in the post. What errors exactly are you seeing and from what source file?
Most of the time I use Emacs with the old JDEE (Java Development Environment for Emacs) mode combined with Ant scripts that use Ivy for dependency management. Have done this for so long that I have Ant scripts that behave like Maven archetypes and pre-setup just about any type of Java project structure I use. Run a quick setup and I'm ready to start coding. I started playing around a bit with Netbeans and really do like it. I have even been using it with the C/C++ capability working with MinGW, it does a decent job. There are a couple of Makefile tweaks I have to make on each new project because there is no way (that I've found) to update the default Makefile template, but those are minor. One of the things I wanted to test with Netbeans was doing JSF, JPA and EJB development since the IDE helps with managing the application server, database connections, EJB generation, JSF to EJB hookups, etc. The big problem I ran into was that I use TomEE (now more than ever since Glassfish is no longer going forward), but current builds of Netbeans don't fully recognize the TomEE system as a true EJB application server, so much of the automation Netbeans provides isn't available yet. It is supposedly in the Netbeans development tree so I'll wait. I know Netbeans also supports JBoss, but I prefer the Tomcat/TomEE tools.
How large is your codebase on average? I can't imagine working with vim while having to navigate multiple module tree with few thousands of classes, crazy inheritance trees in some old code everyone is afraid to touch, etc.
Netbeans has quite powerful build file system which allows to do quite a lot of magic before/during/after compilation. Just need to be sure not to hurt yourself. I used to work using netbeans cause it felt more organic to me than eclipse. Now I'm using IntelliJ and must admit it feels as good as netbeans.
So true. People are downvoting us who say Java GUI is a waste of time... It freaking is. It is a borderline defunct technology.
Might be time to consider a switch then.
Can we get the top 1000 not so popular IntelliJ shortcuts next?
my favorite list of shortcuts: [Essential Eclipse Shortcuts](http://www.rossenstoyanchev.org/write/prog/eclipse/eclipse3.html)
I never thought I could be pulled away from my Vim, but doing a lot more Scala &amp; Java at work, I really liked Intellij with IdeaVim
Prove me wrong buddy
Java is verbose so is generally used by more than just a single person, however it is very scalable and quite nice to just add new stuff to. I've got a few Java projects on the go myself on my Raspberry Pi, so it really depends on your perspective. 
Best typo: ctrl+shit+enter &gt; I can't find the Shit key!
Java comes in various "editions". Java EE is the Enterprise Edition, which contains the stuff you would associate with enterprise applications. But, it does contain a few things you might not consider "enterprise", such as web servers, a web framework and dependency injection. Java SE is the Standard Edition, which is the basic stuff. Like Python, it's Java the programming language with "batteries included". There's even the Java ME, the Micro Edition, for phones and other embedded devices. Interestingly, Android is not Java ME, but uses a version of Java SE. But, Java ME runs in places you might not even imagine, like smart cards. Objections to Java for "personal projects" might be that it takes a (short) while for the JVM to boot, but quickly thereafter Java will hit its stride. On the other hand, languages like Python and Ruby start up faster, even if they do run slower. Although, Advances in the JVM have been significantly closing the gap with each release!
Few months ago I switched from Eclipse to IntelliJ and there is no going back. IntelliJ is supperior product. Once you get used to its shortcuts, everything feels natural and logical. Eclipse was great but now it shows its age. It is like a lot of puzzle pieces put together without really making sure that they all belong to the same picture.
I like your description, I feel like you get this effect pretty well just by browsing the maze of eclipse drop down menus.
I have used Netbeans and Eclipse, I haven't tried IntelliJ yet but I think I will now after seeing so many positive comments. Netbeans is better than Eclipse on UI/usability IMO, but the constant pop up helpers on netbeans are pretty annoying.
Don't we always want to select the optimal language for the problem at hand? 
I only use vim (with Maven of course) when it's a quick strategic bugfix, but eclipse for browsing large codebases or putting down lots of code
How long does it actually take to boot up the JVM now? I tried a simple HelloWorld program, and it must have took like 100ms or something, almost instantaneous. I feel that compiling presents a bigger bottleneck than running, moreso by the fact that you would be compiling multiple times before a run, since the type checker and compiler can catch most errors by themselves.
Why would you do 3 (or more depending on how many classes need imported) keystrokes to import the class when you can just Ctrl+Shift+O?
I try to use different languages and runtimes for every personal project. Primary to understand other languages and to learn new mechanics. It's cool to take a look into C# or Go to see how they work. And it makes me sad to see what Java is missing in the language.
There are useful plugins for that but I find the built in bookmarking sufficient most times. I also frequently split files. When you really get the hang of vim other tools tend to feel like they're in your way.
Here are reasons why you might want to choose Java for personal projects: * If you want to remember why things were written the way they were or ever plan on open sourcing it and you want others to understand. * If you want to have a "supported" language in the future, as opposed to using a fad platform/language that will have changed so drastically you wouldn't recognize it. * If you want to take advantage of the rich libraries that are available * If you want the flexibility to use things like Spring boot for rails "like" behavior and Lombok for no getters &amp; setters * You are creating a server side component as opposed to command line tool * you plan to run it on a machine that will be taxed unless you get the benefits of Java and you don't want to take the time to write it in C++ * You want to take advantage of the strong IDEs * You'd rather be coding and letting the compiler/ci/ide find your issues, than waiting for runtime errors like the scripting languages.
&gt; And it makes me sad to see what Java is missing in the language. Curious, what is missing that isn't added through libraries or features in Java 8? 
&gt; I have tried Maven but do not quite like the directory structure. Whatever you prefer you can override with a single line in the pom, but I have to say whatever it is, Maven's is probably better.
&gt; use whatever directory structure is standard in the builder you pick and use a reasonably common builder Gradle also uses this structure.
&gt; Eclipse works so well for the other languages No way. Eclipse other language support sucks ass, I've tried it. IntelliJ IDEA has official plugins for almost every major language (Python, Ruby, PHP, the HTML/CSS/JavaScript trio, their own little JVM language Kotlin, Scala, even HaXe) and numerous other unofficial ones. They also have other IDEs that are basically IntelliJ IDEA with the Java part stripped out and the other language plugin put in, which proves how flexible their platform is. Plus, open source edition!
Scala is meh now. JetBrains have their own little language Kotlin, which is pretty similar to Scala, and I like it a lot better. You should check it out, even if you don't use it a lot.
&gt; ANT or Gradle. Ant is outdated and doesn't have the support that Maven does.
I don't know about Eclipse, but IntelliJ IDEA has a pretty damn good Vim plugin.
When I used to code in Java I was big into JCreator. It's a nice fast Java IDE for Windows and you don't have to use project files if you don't want to.
Eclipse workspace = IntelliJ project. Eclipse project = IntelliJ module. That should explain it for the n00bs here.
This is such an open ended question that it's impossible to answer. You need to learn more about the modern languages and their characteristics instead of asking Reddit vague questions since you are too lazy to pinpoint your needs and research yourself.
Only if we want to solve the problem as effectively and painlessly as we can.
Unless your working on very specific problems, there isn't really an "optimal language". It's most about how you use the language at hand rather than the language you are using. Different languages definitely have different pros and cons, but for the most part, you can use whatever language you please or whichever one provides you with the strongest foundation for whatever you're doing.
The problem with this pursuit is that it is highly subjective. The "optimal language" is the one you can use to get the job done with the least fuss. In nearly all cases, there is one factor that dwarfs all other factors, combined. This factor is, what language *you* are most comfortable with. If you go around trying to solve problems with a language you're not very skilled with because someone said that particular language was "perfect" for your problem, then you're going to be wasting a lot of time. Stop worrying about the "best" language for a problem, and just start solving problems in whatever language you like. If there are clear deficiencies in the language you're using for your problem (say, you want to write a device driver, but all you have is Java), then go ahead and learn a new language. Until you hit such a roadblock, stick to what you know for new problems. If you feel that your language toolbelt is lacking, then go back to a previously solved problem, and re-do it in the new language. This way, you're not figuring out two things at the same time, and can give the topic of a new programming language the attention it deserves.
I just read up on Kotlin. I like the terse syntax for option types, but I really don't like the lack of implicit conversions/values and stateful traits. Kotlin seems to be aiming for simplicity over power. I don't like that. That mentality is why Java suffers such crippling limitations in the first place. Simplicity is useless to me if I can comprehend the more complex alternative, so I would be sacrificing expressive power for basically nothing. I'll keep Scala.
post full code or at least for GameStateManager and main()
this wasn't the original code. I just edited it to show the original code.
You might find an answer [here](http://stackoverflow.com/questions/2141029/unreachable-code-error-vs-dead-code-warning-in-java-under-eclipse)
Reachability has [a very specific meaning](http://docs.oracle.com/javase/specs/jls/se7/html/jls-14.html#jls-14.21) according to the Java language specs. So, the simple answer to your question is that the unreachable code is an error because the language spec says so, and the dead code is not unreachable only emits a warning because it does not meet the criteria for unreachability.
Unreachable code causes a compiler error. If you try to compile a program with unreachable code outside of Eclipse, it still will not compile. Dead code is something that Eclipse detects as a nice feature. If you try to compile a program with dead code outside of Eclipse, it will still compile (and give no warnings). In fact, it's probable that in the compilation process the dead code is simply removed from the program altogether.
All of the java Math functions take their arguments in radians, not degrees though. Math.atan2() will return a number in radians, and you can pass it as an argument directly to the Math.sin() and Math.cos() in your for loop. Try fixing this and see if the polygon stops spinning.
http://en.wikipedia.org/wiki/Comparison_of_C_Sharp_and_Java is a pretty in-depth comparison. It's silly to think that Java does everything C# and Go can do just like it's silly to expect C# and Go to do everything Java does. One of the biggest annoyances I have with Java is that the JVM can't to tail call optimization.
So I remove lines 12 through 14 right? they still rotate as they move. EDIT: Never mind. The spinning problem was because of something else.
You shouldn't be calling getGraphics() at all. Instead, override the paint( Graphics g) method and do your painting there. In order to force this to happen on-schedule, you can call repaint().
Well you sound like a really mature and professional person so I imagine you are pretty busy. Apologies. Cunt. 
The spec explains OP's question in the note at the bottom of that link. Basically, if statements are an exception because of programmer convenience, so that you can write conditionally compiled statements like if(DEBUG){...} without a compiler error.
Check out: JComponent paint methods and then try using Graphics2D (which extends Graphics) objects, you could literally write a photoshop with all the things you can do from it. http://docs.oracle.com/javase/7/docs/api/java/awt/Graphics2D.html For more modern, higher level stuff, take a look at JavaFX. 
* try-with-resource is an ugly way to auto-close resources such as streams. A much more elegant way (IMHO) is Go's [*defer*](http://golang.org/doc/effective_go.html#defer) * tail call optimization * named parameters * maybe even Mixins Don't get me wrong, I like Java. I write code in Java for slightly more than 10 years to earn my money. And I just like to get some fresh air from time to time and sometimes I happen to like features of other languages.
Yes, at least in my case, every time I stumble upon something new I realize that there's a plugin for Eclipse. However, in my case the reason is the same as others... it's the one that I've been using for a while and so far I didn't find anything that I wanted to do and it wouldn't do it.
I think Netbeans has better Maven integration actually. A Maven project is simply also a valid Netbeans project. No need to import anything. But IntelliJ has other pros. 
I generally use Python for my personal projects, but that's probably because it the was first language I ever learned. 
Thanks, I was genuinely curious of others comments. Here are my thoughts: &gt;A much more elegant way (IMHO) is Go's defer I like the block notation and the upfront handling to represent the resource scope. Looking for sprinkled defers in some long blocks would be tedious. &gt;tail call optimization Java &amp; the JVM on the server still perform way better in most situations than pretty much everything else out there except C++ &gt;named parameters Yeah, Java's technique of builders &amp; types to serve that purpose can get tedious. Of course annotations in Java support named parameters. &gt;maybe even Mixins This would be nice, there a couple other features from Scala that are nice too. Composition is just a lengthier way of accomplishing the same feature. Of course, there are plugins in Eclipse and IntelliJ that create the builders for you. 
Unless you plan to write something close to the hardware like operating systems or drivers Java is suitable for a lot of projects. I have been using Java for a long time to write small tools and programs and there exist several small to medium game projects written with it (for example Minecraft). The large and mature standard library makes it a good starting point for many projects, compared to languages that have a small or less stable standard library. 
Ok, I'm guessing (not seeing your import statements) that what you are doing is importing using wildcard statements something like: import java.util.*; And the order in which you are doing the import you are picking up a package that contains a **Connection** class that is not the **java.sql.Connection**. This happens quite often when doing full package imports and then the compiler uses the first encountered **Connection** class it finds. If you specify exactly the classes you want imported, this will generally correct this problem. Based on the code you have listed here, the minimum set of imports you would require are: import java.io.IOException; import java.sql.Connection; import java.sql.PreparedStatement; import java.util.Map; import java.util.HashMap; import javax.servlet.ServletException; import javax.servlet.http.HttpServlet; import javax.servlet.http.HttpServletRequest; import javax.servlet.http.HttpServletResponse; A side note, you have a potential issue with this code in the lines: if (brand.trim().isEmpty()) { errortexts.put("name", "Give a brand"); } if (flavor.trim().isEmpty()) { errortexts.put("name", "Give a flavor"); } If the HTTP request does not have parameters **brand** and/or **flavor**, the variables *brand* and *flavor* will be null and calling *.trim()* on a null will result in a NullPointerException. You may want to add a null check in each **if** statement.
That is a correct error message based on your code. The call to **getConnection** in your ConnectionFactory is tagged with throwing an SQLException, but inside your **doPost** you are not handling that. You need to wrap your data access code in a try { //Next line is giving error: "cannot find symbol. Symbol: class Connection, location: class AddingWinetoDB". Connection con = ConnectionFactory.getInstance().getConnection(); //Next line is giving error: "cannot find symbol. Symbol: class PreparedStament, location: class AddingWinetoDB". PreparedStatement ps = con.prepareStatement("INSERT INTO Wines (brand, flavor) VALUES (?, ?)"); ps.setString(1, wine.getBrand()); ps.setString(2, wine.getFlavor()); ps.executeUpdate(); ps.close(); } catch(SQLException ex) { ----do something here---- } then inside the catch block you decide what you need to do. You could rethrow the SQLException inside a ServletException: catch(SQLException ex) { throw new ServletException(ex); } or you could have the code generate a different error response to the caller. The "try with resources* is part of the JDK7 where it will handle closing resources for you, such as closing the Connection you are retrieving but never closing. The structure of that looks like this: try(Connection con = ConnectionFactory.getInstance().getConnection(); PreparedStatement ps = con.prepareStatement("INSERT INTO Wines (brand, flavor) VALUES (?, ?)")) { ps.setString(1, wine.getBrand()); ps.setString(2, wine.getFlavor()); ps.executeUpdate(); request.getRequestDispatcher("WineAdded.jsp").forward(request, response); } catch(SQLException ex) { throw new ServletException(ex); } The Connection and PreparedStatement are closed automatically in this case.
So if num has more bits set you're adding more to res? That would mean that x/0b10 &lt;= x/0b11 for x&gt;0
Don't tell me what to do. You're not my real dad.
Swing is probably the best one to get a job with, simply because it's been around longer and it is used more widely. On the other hand, JavaFX is "the future" and it would be wise to at least play with it.
If u want to get job with java, focus on server side. There is no future in client side java. 
*Unless you count Android as client side java. :)
There is no future in virtually any client side language beyond gaming for 90% of the jobs out there. Web is king today. It is easier to roll out and massive companies can keep the bulk of their processing power "centralized".
Android is very specific case. It is fairly good from job prospects point of view. But neither Swing no JavaFX will help with Android. 
Have you tried \\\\[\\\\] ?
Mobile (both iOS and Android) is going fairly strong. But other than this, you are correct. There is no Client Side job market regardless of the language. 
The '\' character is called the escape character. It is used to quote a literal character when you need to match it. It is used pretty ubiquitously across many systems and languages. "[AB\[\]CD]*" But because it's Java code, all strings are parsed for the escape character before passing it on to the regex engine for matching. Thus you must escape the escape char and so your final regex would look like this. Doing this is common when you are preparing strings to be handled by other libraries or templates. The java compiler will look at the below and create the above. "[AB\\[\\]CD]*"
You should also explain what java is and is not. Where and when to use it etc.
Thank you! I didn't know you could write it that way.
Thank you! :)
If you are thinking that you might be getting in to java programming as a career, then java server faces is probably the direction you want to take. By the time you graduate post secondary, a good knowledge of javafx would be good as well.
I come from a php background. I am about 2 chapters into head first java and it's great. I think it's in the sidebar on /r/learnprogramming.
I think as a beginner you really cant go wrong with learning either. Try to focus on concepts and design patterns when develop ing Ui. Those things you can carry with you regardless of what framework or language you will develop on next. 
I've been writing Java for about 10 years now. I haven't done much in the GUI space and my impression is that there isn't a hell of a lot of paying work there. But again, I've not looked. Like it or not, JavaScript seems to be our up-and-coming overlord. [AngularJS is magically delicious.](https://www.youtube.com/watch?v=C7ZI7z7qnHU) Edit: -4? You guys need to get out more.
In all honesty, it depends on how often the server updates and if you care to possibly miss an update. I created a java program that pings an API to check for changes in bitcoin prices. My computer has 8gb of ram, and it pings the server every second. This takes up roughly 6gb of ram to do, which is fine is i'm not using my computer. But when I do anything else, the computer delegates RAM to my current task and causes my program to occasionally miss an update. So, it just depends. I would need more info to be able to fully help you. 
I'm creating a multipurpose thick client and one of its functions includes keeping track of donations through the PayPal API. It doesn't have as high frequency as bitcoin prices so I only need to poll once every 5-10 seconds. My current problem is whether to poll the files creates by the python script or whether just rewrite the polling straight into the client in Java. 
"This takes up roughly 6gb of ram to do"..... *blink* unless you're doing something way more complex than what you described, you're doing something wrong. (sounds like something is causing a memory leak) 
Well... Honestly. I don't think it'll make much of a difference. With the frequency in which your polling, either way would be perfectly acceptable. Just whatever is easier for you I suppose.
As I said above I'm creating a multipurpose thick client and one of its functions is to poll for incoming payments from the PayPal API. The user would have to be notified of the incoming payment within ~10 seconds of it happening so once an hour is out of the question. 
You've piqued my curiosity. How on Earth could polling a single website take up ~500MB of RAM? Surely bitcoin prices are just floats? How many of them do you store and for how long? I don't mean to come off as confrontational, but that seems a huge amount of memory for what seems like a simple task.
yes, some are floats, but some are JSON's and some are even .txt files which need to be processed. So, the actually retrieval doesn't take that much memory. The processing does, and it is only a function of a larger application which also manipulates the data in charts and tables. There is room for me to tighten up memory, but I never released the application to the public. I'm the only one who uses it, so I didn't bother.
Ah, it's a fully-fledged GUI application, is it? It's still a mind-boggling amount of memory, but goes at least some way towards explaining it.
Probably, there are plugins for just about anything, I just tend to use the bookmarking system for things like that. I'm still new enough to java coding that I'm not that familiar with debugging tools. I'm aware that these tools are often built in to IDE's but I'm more familiar with command line tools like GDB as I come from a C/C++ background. Perhaps you can recommend a CLI debugger? As I mentioned above I am in the middle of transitioning to Programmer Dvorak and I'm touch typing for the first time, albeit slowly. I've also bought an ergonomic keyboard that's taking some getting used to. Since I basically have to relearn all that vim conditioned muscle memory I'm viewing this as an opportunity to become more proficient with tools that I previously had difficulty adjusting to, such as eclipse. As I study ant and the java build process in general I find myself coming back to eclipse and understanding more of what's going on under the hood, which allows me to work more effectively with it and to customize its behavior knowing what those customizations are doing and that I made changes safely. I owe it to my time working with tools like make, ant, and vim for the level of understanding I've reached. Also a bit of gratitude to this subreddit as the users here were always ready to help when I got stuck on some detail. I've got a long way to go but I feel like the biggest obstacles are behind me and one of those obstacles was how much the IDE presumes to do for you. If I don't understand the build process taking place I struggle to design acceptable code.
Eclipse, but am leaning towards Intellij more and more. 
Quite a few "enterprise" places I have seen write C#/.NET frontends that use Java backends via REST webservices. I think that's pretty much the "standard" approach these days for internal corporate applications. Personally, I would write a web UI, unless there is a requirement for high "richness" and "interactivity" that would be hard to achieve with current web technologies. For example game UI or content creation UI or if your app needs access to resources on client computer (files, network, video, audio, 3D)- all of those would require a traditional UI, not a web-ui
I wrote a compiler for [Brainfuck](http://en.wikipedia.org/wiki/Brainfuck). I am so irrationally excited that I literally can't contain it and have to share it with the web. I don't even care if it means nothing to you :P Basically it's a programming language which exists only to challenge new programmers, and I wrote a compiler. It's not even a big compiler, but I love it. I used [learnXinYminutes](http://learnxinyminutes.com/docs/brainfuck/) which is actually really useful for learning most languages.If you've never seen it, and need to learn a new programming language, use it. It's great for picking up the basic essentials of a language really quickly. [Here's the file again.](http://www.filedropper.com/brainfuck) Let me know what you think.
Edit: I don't think what I've put is of any help, sorry - Spnego is for automatic authentication against AD for the Java application, but that won't help with authentication against an external application. Unless anyone else knows of a way to propagate the credentials from the Java app server over to Sharepoint, how feasible is it to communicate with Sharepoint via the browser, then push the results back in to the java app via a second ajax call? What I think you're after, and what I've used in the past to carry this out, is [Spnego](http://en.wikipedia.org/wiki/SPNEGO) - I've successfully set it up before on WAS using IBM's guides, and on Glassfish using [the sourceforge project](http://spnego.sourceforge.net/index.html) (which contains details for setting it up on Tomcat and JBoss too).
As a first check could you not simply check the file's last modified timestamp - if that's been altered then check the last entry to see if it differs from the old entry.
Yes, you're right, it's an interpreter. I generally just say compiler to mean either, but I know the difference and should use the right word really :) The learnXinYminutes site is awesome for learning the basics of loads of languages (and good for referencing when you "already know it" too! )
I've looked a bit into that but it looks like I need to have access to the server side to set some things up for that unless I'm misunderstanding? I just need my java application to impersonate the currently logged in Windows user without any help from admin Edit: corrected spelling
If you ever get the chance take a class in compiler programming and you will understand the difference very fast. Dead code can still be compiled properly and executed (although it won't be reached of course). Unreachable code is impossible to compile. The compiler does multiple conversions to compile the code and this will fail during semantic analysis (or earlier depending how you check for consistency in the syntax tree). TL;DR (not entirely correct): unreachable code is a syntax error which the compiler can't understand and thus can't compile. and here is my most favorite unreachable code: int getValue() { return 0;; }
I really don't know why people downvote you, this is the best way of learning to program. No syntax checking, no syntax highlighting and by hand compiling and reading compiler errors. Java is not like c++ where the compiler errors are unreadable (at first). Java has very good compiler errors and even if you can't understand it a single google look up usually leads you to the right direction. People need to learn coding and not using IDEs. IDEs are good for fast/large software development and not for learning a language.
Now only if Java 8 had introduced property references next to method references. Would have been awesome for JPA.
Takes me back. First company I've worked for as a student requiered me to write Brainfuck IDE as an exam. It didn't compile anything, was just interpreter + debugger.
It doesn't mention some issues with brainfuck: - No required length of cell array (30000 was randomly chosen) - What happens if the cell pointer becomes negative? - What happens if you decrement a cell below 0? Does it get negative/wrap/crash/nothing? - What happens if you increment a cell above its maximum positive value? The problem here is that there is no official brainfuck specification. BTW: A challenge for you: Make your interpreter as fast as possible!
See phaggocytosis's post below for fix.
Nice username
Glad you've got it working, sorry again for being completely wrong in just about every way with my earlier response. As for your comment: &gt; but how does it automatically use my windows password What I've put may be of use; if you look at the image at an [IBM Spnego page](http://pic.dhe.ibm.com/infocenter/wasinfo/v8r0/index.jsp?topic=%2Fcom.ibm.websphere.nd.multiplatform.doc%2Finfo%2Fae%2Fae%2Fcsec_SPNEGO_explain.html), it shows how this particular authentication happens - without the user ever needing to re-enter their password. This almost certainly won't be an exact match for how Sharepoint does it in your scenario, but it does show how it's possible for Window logon based authentication can be carried out.
Additional info... http://prntscr.com/2ev6i1
I will try to help. If you installed Java 7, they have really come down hard on security (especially with javaws applications). Is the application yours? It looks like the certificate that signed the jar expired. You can try a couple things, go to control panel -&gt; Java and clear your cache (there are two ways to do it, should be easy enough to figure out). If that doesn't work, and you really want it to run, you can try turning down the Java security, though I really don't recommend that, it is there for a reason.
Could you grab the result of "View Certificate Details" too (unless it is already shown in one of these two screenshots)
Which part of the certificate details are you interested in ? http://prntscr.com/2evhby
Hey! I write java software and recently did an on site installation at a client where we had this issue. Our problem was solved by deleting .cert files that had become unreadable/unwritable (these files don't get deleted during java uninstall or even by those programs that are supposed to do "full" uninstalls). If you're on windows, cert files (should be) located here: C:\Users\YOUR USERNAME HERE\AppData\LocalLow\Sun\Java\Deployment\security Hope this helps! Good luck.
You sir are a legend. Thank you very much.
Let's just replace "property references" with "properties" in general. getter/setter methods work and aren't necessarily 'wrong', but I find it aggravating to use the same syntax to do work AND get/set values on an object. We've got lightweight lambda syntax finally, can we please steal properties from C# next?
So the certificate is from an authority that should be trusted (i.e., not self-signed). Could you double check that it is not expired, though I think it's unlikely since it started in January 2013. My guess is %JAVA_HOME%/lib/security/cacerts is somehow messed up. On my Linux box, this links to /etc/ssl/certs/java/cacerts... unfortunately I do not know where that equates to on Windows. My guess is that cacerts file is somehow corrupted, and uninstalling and re-installing it isn't removing/replacing it because it's under C:\Windows\System32 or somesuch.
Am I the only one that thinks that is a horrible test of merit?
There is still the issue of how they became corrupt in the first place. Have you checked your hard drive recently?
It's a test of will and devotion.
Important assets, SAP would surely agree.
Wow thank you! This is exactly what I was looking for. I might have been a little misguided because when I was learning OpenGL for Android it specifically focused on object pooling as to avoid the GC kicking off at unexpected times. Just another case of pre-optimization I guess. Thanks again!
If it helps, it says on the Wikipedia page that 30,000 is the classic cell array size ([link](https://en.wikipedia.org/wiki/Brainfuck#Array_size)).
There is a lot of example when you have similar properties on two separate models DTO/Entity/Jaxb/ UI If you do not encounter this kind of solution I suppose you do not work on Enterprise Data centric applications or maybe you use the same object on persistence, business, presentation and integration layers may be your applications did not have such layers... You're lucky 
Using M$ really makes you seem like a shill. The WPF event dispatch model isn't the greatest, but async isn't the only tool available to deal with it. JavaFX still lacks any real databinding or templating support, which I'd trade for having to do a dispatcher.Invoke(() =&gt; Action()); almost any day.
To the question: no. To your example: yes. You should try to gravitate towards immutability. Especially with static. Everything static should be final (and private). Break this rule only when absolutely necessary. So here, having a static final file object, assuming you aren't ever modifying this, is fine. You shouldn't need a static block to do it, just assign it at declaration. But that bufferedreader is not. Especially if you reinitialize, as there are no gains here to be had by declaring it static. Minimize the scope, create it in the method to be read. The other poster here is wrong. A static file will work fine concurrently as long as you aren't modifying it, which you don't seem to be. You would, however, have bugs if you tried to run it concurrently with the static bufferedreader, because that is not immutable in your function. There is a potential issue if you're trying to write to that file at any point, though, and this is a problem regardless if anything is static or not. ... &gt; Should I be looking into a singleton rather than static methods? Please don't. The singleton pattern is the most overused and abused pattern in existence. There are almost no gains to using it over a static class unless you're using a framework requiring them. Singletons have a ton, and I do mean a ton, of downsides that are ignored, simply search for singleton antipattern and you'll get a host of reasons not to use them. There are a few uses of them, but unless you have a situation where you need to... don't. For example, is there really a reason you need a singleton here, even if you convert it from a static helper? How many classes are using this? Could you simply just create a regular object? In fact, you could create it as a regular object, and then take in a string file name as the constructor. Then you create the object when you create the thread or wherever you set the static method to pull, and then just setup that method to be pulled (you could create it as a static object even). There are tons of options really.
&gt; This happens about once every 10 seconds. Sounds like a waste of CPU resources ;P Cache it!
Well the contents of the file change and the purpose of the check is to verify if the contents have changed.
When doing graphics you should definitely avoid creating objects for each frame. But there is a huge difference in creating objects once every 10 seconds to 60 times per second.
'change' attribute? Can you elaborate? If you're talking about checking whether the file has changed I optimized it to cache the files 'last modified' timestamp and compare the cached timestamp with the current timestamp.
Right, that's why I asked if there are any disadvantages. If it's more efficient when doing 60 FPS, you'd think it'd be more efficient even when doing 1 thing every 10 seconds. Not 'much' more efficient, but more efficient nonetheless. 
Those sure would be nice too, but not absolutely necessary for property references ;) EL defines value-expressions for instance, which are kinda like property references but based on library code and reflection. But if Java would get property syntax like C# than references to them might be a more logical step.
There are important reasons not to use static state in your program, but they have nothing to do with performance. The issue is maintainability - static state causes two problems: it hides dependencies and it makes initialization undefined. Typically state dependencies are expressed in your program by scoping references to state within an object. By declaring state variables static you lose this scoping which makes it much harder to see the dependencies. Furthermore, you lose all control over when this state initialized. It works OK for a while to use static blocks but you will probably end up with intertwined static dependencies eventually if you keep doing this. All of this probably doesn't cause any problems for you now. However, as your code grows it will eventually bite you (especially if multiple people work on the code.) You will be much happier if you get to the habit of encapsulating your state in objects and properly declaring dependencies between them.
I took a class in grad school on RESTful web services, and the "textbook" for the class was "Rest in Practice" by Webber, Parastatidis, and Robinson ([available here on Amazon](http://www.amazon.com/REST-Practice-Hypermedia-Systems-Architecture/dp/0596805829)). The have some Java/.NET examples for setting stuff up, but I really enjoyed the book because its the first book on the topic where the lightbulb really went on for me, especially when it comes to HATEOAS vs. CRUD services, etc.
Here's what I mean, in WPF I have the following view &lt;Page&gt; &lt;ListBox x:Name="Employees"&gt; &lt;ListBox.ItemTemplate&gt; &lt;StackPanel Orientation="Horizontal"&gt; &lt;Image Source="{BadgeImage}" /&gt; &lt;TextBlock Value="{Name}" /&gt; &lt;/StackPanel&gt; &lt;/ListBox.ItemTemplate&gt; &lt;/ListBox&gt; &lt;/Page&gt; and the following viewmodel public class EmployeeListViewModel : Window { public ObservableCollection&lt;Employee&gt; _employees; public ObservableCollection&lt;Employee&gt; Employees { get { return _employees; }; set { if (_employees != value) { _employees = value; NotifyOfPropertyChanged(() =&gt; Employees); }; } public EmployeeListViewModel() { // setup data here } } THIS is what I mean by templating and databinding, in this example WPF will iterate through my entire Employee's collection and render the template for each employee in the list, and since I'm using an observable collection any changes to the list will automatically trigger the UI to refresh. Better yet, this all happens with no annotations or any manual wiring on my part, I could even bind an action to happen on click of an employee name and I would have the source Employee object passed back to my action method for free. If I tried doing any of this (and this is a really simple example) with JavaFX I'd have to go and manually create the controls and add them to the scene graph, I'd also have to handle updating the UI every time the contents of my Employee list was modified. It's a lot of tedious work and WPF is the only desktop UI framework that has this figured out right now. EDIT: I'd also like to mention I use Caliburn.Micro, so I get some extra functionality here for free, like my Employees ListBox in the View is automatically bound to a property of the same name in my ViewModel if it exists. Tools like this make development much faster and the code much easier to maintain.
Thank you for the resources ! I'm going to check them out and start learning!
Thank you for the resources ! 
Switches are your friend. Whenever you're dealing with a definitive set of values for something, and want to do specific things depending on what the value is, your first thought should be switch. The code is crazy object-oriented. This isn't necessarily a bad thing, but it is a simple brainfuck interpreter - there's no real need for classes. Just parse a string and change state. If you're set on having objects, then why not create some parser / executor object in your main loop and go from there? Your current program flow is: * Grab string from user * Check correctness * Make new "command" object, spin through a loop until it exists, grabbing info from the "command" object every time. Why not something like: * Grab string from user * Throw in command object * Have command object parse / change state in loop. You're relying on the command object to give you the commands. Why not also have it tell you when it's done? Expand on it's capabilities! As far as actual brainfuck implementation goes, depending on how "correct" you'd like to be, unsigned bytes would be the more appropriate data type for the cells. On your increment pointer, you don't bounds check, whereas you do for the decrement. You have some duplicated code in canIncrementPointer and incrementPointer in the "command" object when manipulating the PC. Why not have something like: bool ok = canIncrementPointer(); if(ok) incrementPointer(); return ok; Or better yet, have a more generic check-to-set-pointer type method, where you give it a tape position and it returns true if valid. Then, your increment / decrement method could use it to check validity (ifPointerPos(currentPos - 1 / + 1)), as well as your setPointer method. You could potentially make this more generic and have it validate both the program counter and the data pointer. Pretty neat man. Good job. 
Coolio. We had a good class covering JSON and restful services with a jquery frontend in a 300 level class at my university! :) I'm pretty interested in SOAP ATM. I like RestFUL services, and understand they are more performant than SOAP, but I really like the SOAP development paradigm. You can more easily interact with the services by treating them as a Java object. The same can be done with RestFUL services, but it takes more code.
Except neither of those examples match what I did, the first post is about CSS/styling, which has nothing to do with the list template example, and property binding is still a very manual process (sure, you can bind specific properties of controls via FXML with a @FXML annotation on your controller, but you still have to do it per field and per control and it doesn't handle iteration).
&gt; However, I felt that it was truer to form to keep it all in a Makefile. Very few Java programmers use Makefiles, instead preferring build tools like ant, maven, or ivy, etc. I get that it's an extra setup vs a Makefile but if you're going to blog about programming Java then you might as well do things the 'java way'. &gt; Just seeing the sheer number of required casts reminds me of why I dislike ~~Java~~ **Static Typed** languages. I think returning deeper JavaScript data structures could be done smarter. For instance I'd consider using JSON.stringify to return a Java String and then use Rhino's [JSON parser](https://github.com/mozilla/rhino/blob/master/src/org/mozilla/javascript/json/JsonParser.java) to parse the JSON string into a hierarchy of Java List/Map instances, which are much more natural to traverse in java: foo.get("bar").get("baz").get("qux") Java arrays should be avoided in favor of Java collections except when performance is a primary issue (and some other edge cases). Java collections offer much more built-in functionality than Java arrays. &gt; The workaround is to call `java.lang.System.out.println` (what a mouthful) Of course calling native Java classes will require accessing them by package (java.lang) and name since they aren't natively imported by default. Rhino does provide a [Global object](https://github.com/mozilla/rhino/blob/master/toolsrc/org/mozilla/javascript/tools/shell/Global.java) which provides a basic "print" function as well as several other good utility methods like "readFile" It seems remiss to write about JavaScript on Java and not mention [Nashorn](http://openjdk.java.net/projects/nashorn/) coming in Java 8 this March (although you can download and build nashorn separately today). This project is a new lightweight and high-performance JavaScript engine built for the JVM. It will be interesting to see if Nashorn on the JVM beats Google's V8 performance. &gt; But then again, Java really leaves much to be desired. 3/10, would advise others to re-evaluate decision to use Java in the first place, Nobody is interested in your contribution to the tiresome programming language debate. Only a silly young peacock would sqawk about recommending a language or platform blindly without knowing anything about someone else's requirements. Especially don't be that guy who rags on Java in his blog and then submits it himself to /r/java.
The high low game is a classic. Let the user guess a number in a range and then let them know how their guess compares to a randomly selected number. If you want to try one with a GUI, tic tac toe is another common beginner program.
You don't really need a GUI to do tic-tac-toe; just use battleship-style labels for the grid and print the board after each move. High-low is definitely a good starting point, and tic-tac-toe will teach you to use 2d-arrays / for-loops well.
Dice games in general are quite easy. + 21 - the player can roll as many times as he wants to reach 21, but if a 1 is rolled, the player loses everything and it's the next player's turn. + yahtzee - reduced to three dice, or the full + Ship, Captain, Crew [rules here](http://en.wikipedia.org/wiki/Ship,_captain,_and_crew) + Connect four - is already a little more complicated + Battleships - [rules here](http://en.wikipedia.org/wiki/Battleship_(game))
Are you sure it's a problem? Ten seconds is a long time for a computer that runs billions of operations per second. Measure it with a profiler to see if it is before trying to optimize it. Famous quote: The First Rule of Program Optimization: Don't do it. The Second Rule of Program Optimization (for experts only!): Don't do it yet. 
Here: http://www.guigarage.com/2013/12/datafx-controller-framework-preview/ 
Definitelly JavaFX. Swing is better supported at the moment but JavaFX is better designed and will replace Swing in the future.
I can't speak for jobs around you, but around me, converting away from thick client towards portals seems to be all the rage.
&gt; JavaFX still lacks any real databinding Good. Databinding breaks fundamental architectural design choices.
[This is processing.](http://processing.org) It is the first hit (most likely) on your favourite search engine you should learn to use. Have a nice day :)
sorry for my short comment, was on my phone. Pretty much everything is specified on the Pattern class javadoc: http://docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html
The JDK includes that javax.script packages which provide direct support for scripting languages, and JavaScript is one that is built in. The examples from the [documentation](http://docs.oracle.com/javase/6/docs/technotes/guides/scripting/programmer_guide/index.html) are a lot cleaner than this article: import javax.script.*; public class EvalScript { public static void main(String[] args) throws Exception { // create a script engine manager ScriptEngineManager factory = new ScriptEngineManager(); // create a JavaScript engine ScriptEngine engine = factory.getEngineByName("JavaScript"); // evaluate JavaScript code from String engine.eval("print('Hello, World')"); } } To create and use an array inside a JavaScript function: // create Java String array of 5 elements var a = java.lang.reflect.Array.newInstance(java.lang.String, 5); // Accessing elements and length access is by usual Java syntax a[0] = "scripting is great!"; print(a.length); The **ScriptEngine** class has a collection of **eval** functions that can return an **Object** to the Java calling program, then a single cast is needed. Since inside the JavaScript it is possible to create a regular Java object as a *var*, as seen above with the array, the returned object from the eval could be castable to a proper java type. That whole **NativeObject** casting in the article seems intentionally designed to look bad.
Yeah, I found that the other day when I was researching regex in java. Thanks for the link!
Did a fair bit of processing for a class I took. I'm assuming that, by using processing, you want to do some drawing, so here's some ideas: Tic Tac Toe Snake Pacman (no ghosts unless you're feeling ambitious) Pong Breakout almost any atari 2600 classic You might get a few more responses over at /r/learnprogramming and /r/gamedev
I disagree, without databinding it's almost impossible to provide a clean separation between your UI and your logic. Manual twiddling of controls impedes testability.
http://archive.apache.org/dist/ant/RELEASE-NOTES-1.9.3.html
I'm impressed, just starting to learn Java myself (I'm 31 and fancied a new hobby) and hope to write simple games in the future!
`destory()`
Just use IntelliJ, because it is the best. 
What IDEs? The big (free) three are Eclipse, Netbeans, and IntelliJ Idea Community Edition. Others are out there, but these are the main ones. Why should you use/avoid them? That's not for us to say, it's down to personal preference. Try them all, and see which one you like the best. For what it's worth I switch between Netbeans and Idea; I would exclusively use Idea if it weren't for the EE 7 stuff being reserved for the (non-free) Professional edition v13 - roll on them having a sale so I can upgrade my license from their end of the world sale.
I really do not want to repeat all that comparisons that was already made in this subreddit, just use search.
I don't swear by IDE's, and like to keep the alternatives around for whenever a need arises. I primarily work in Intellij, but I keep Eclipse around and I do one-off editing in Vim. I find Intellij has the most convenient Maven integration of the three, so I use it with my maven projects. Not only does it have the normal Run/Debug configurations, it also provides a "Maven Projects" panel with one-click enable/disable of available profiles, and double-click execution of maven lifecycle phases and plugin goals. It's just a small piece of functionality that I use so often that it is the killer feature for me.
Another one http://www.jedit.org/
Has Eclipse fixed its absolutely abysmal Maven integration yet? Because that's why my team switched over to Netbeans.
1. Check your certificate(s) with http://portecle.sourceforge.net/ 2. You may need to re-enable your Java Cryptography Extension (JCE) Unlimited Strength Jurisdiction Policy Files: http://en.wikipedia.org/wiki/Java_Cryptography_Extension alt: http://www.bouncycastle.org/
People still use ant?
I believe it comes down to: "right tool for the right job". * I use Eclipse for Android development. Because it integrates so well. I have the impression that the community is larger around Eclipse. So: more plugins available. * I use NetBeans for desktop applications. Because of the beast they call "NetBeans Platform". I prefer the NBPlatform over the Eclipse Platform mainly because I find applications run much faster and smoother when they are based on the NB Platform than when developed as Eclipse Platform Plugin. The integration for J2EE applications is also awesome, but I have not yet done any J2EE development on Eclipse. So I can't say which is better. NetBeans has an "Eclipse" keybinding setting which I also use. So I don't need to re-learn all the shortcuts. * I use vim &amp; Python for everything else. The reason I state this is to make it clear that I am biased. My few experiences with doing web development on Java are a bit two-fold. I've done a few web-pages using NetBeans and was *very* happy with how well everything integrated out of the box (see the J2EE comment above). But I just don't like Java for web-dev. A few other side-notes: I am wary of large communities like NetBeans and Eclipse (but also including anything large like jQuery, PHP, vim and so on). The larger the project, the more derivatives it will spawn. With derivatives I mean plugins, documentation, how-tos, tutorials and so on. With growing numbers it becomes more and more difficult to separate the wheat from the chaff. Some derivatives are pure gold, some are utter nonsense. I'm not saying you should *not* use large community projects. Just be aware that you should *always* look at derivatives with a critical eye. No matter *who* wrote it! One last thing: The editor/IDE you will chose will by no means make you a better developer. Good code comes with experience. No matter the editor. On the contrary even... I am currently maintaining a codebase *littered* with typos, but it compiles and runs because automatic code-completion just dragged these typos along anywhere. A tiny snipped for your viewing pleasure: &lt;nav:pagging pagination= ... This is one of the reasons I prefer a powerful text-editor like emacs or vim over any IDE. While they *can* do refactoring, code-completion and all that jazz, they *encourage* you to think before you write instead of mindlessly hammering the TAB button! ;)
Would jEdit not fall more into the category of a text-editor than an IDE? I have not followed it yet, I used it about 8 years ago, and back then it was far from being an IDE ;)
Assuming that you haven't made any games yet, a good way to start would be to try and make tic tac toe on your own. It is simple to code once you get most of the he basics down and as you get better you can improve on it with things such as a GUI.
I have the same question. I think Ant is still useful in some places.
I use Eclipse for Java and Sublime Text for C, C++, JS, etc. - Google's WindowBuilder visual GUI Editor - Easy code templates - Lots of plugins - Huge community - Open Source and completely free - Heavy Android Integration - LibGDX integration - Workspaces - Debugging - Savable perspectives - Easy automatic runnable jar creation - Automatic completion I have tried using both IntelliJ and Netbeans, and found that I enjoy the workflow and layout of Eclipse more than I enjoy that of IntelliJ or Netbeans. I'm sure many of the previously mentioned features are included in other IDEs, but I like their implementation in Eclipse recently. I've stuck with Indigo for a long time because of how bad Juno was, and recently moved to Kepler. [I make Kepler not ugly using this plugin.](http://marketplace.eclipse.org/content/eclipse-4-chrome-theme#.UsGUWtzxpoE)
Is Maven 3.x still built on top of ant? As far as I'm concerned (for Java, at least), maven &gt; make &gt; watching "Keeping Up with the Kardashians" &gt; ant.
I don't get one thing. If you write getters and setters for every private member, then why the fuck do you even bother making them private in the first place?! 
You should read about [encapsulation](http://en.wikipedia.org/wiki/Encapsulation_(object-oriented_programming\)).
Nice one to watch. Most of them don't show decoupling the engine updates and rendering.
OK, let me rephrase it. If you write trivial getter and setter(i.e. return x; this-&gt;x=x;) for private member, why bother making it private?
Ant is fantastic for what it does.
Why? Fine, you don't like ant but mind giving us any reason? Or is this a blind hatred? 
Netbeans is far more common than IntelliJ from what I have seen. I have only heard of IntelliJ on this reddit. Maybe IntelliJ is more populare among hobbyist? The real enemy is Eclipse though :) It is still the most popular among professional developers despite shortcomings of complex configuration, poor Maven support and just plain too many bugs.
Oh, I thought that ant was the bee's knees when it first came out, because it was easier to understand than the arcane make. But dependency management was still a joke, and the sheer verbosity of ant was a real drag. ant files grew to hundreds of lines long, just to do the usual compile-jar-deploy stages. When maven came along, things made a whole lot more sense, provided you didn't need to do anything really unusual. And if you did, odds are that someone already wrote a plugin to do it for you.
Thank you. It would be great if you converted it into a tutorial.
I'm not sure what you mean? Rhino runs directly on the JVM, as in: generates JVM bytecode unless you force it into interpreted. I find it equally interesting, no matter whether the scripting language is Py or Js. I just think that typically there's some "core" stuff in a lower-level language (Java) and on top of that you do some scripting. Another way to see the difference: does the lower-level code (Java) trigger scripting code or does the scripting code trigger lower-level code.
for consistency, it makes the code easier to read and understand if something is done the same way all the time.
Eclipse shortcuts are your friends. I also have a CTRL-SHIFT-C set up to run the Refactor &gt; Clean Up dialogue (which, in my case, organises imports, runs the formatter, makes things final and whatnot). I did find myself disagreeing with: "We all know how productive a big screen is". The problem isn't the size of your screen, but the quality of your window manager. I run eclipse under awesome, with multiple windows arranged under multiple virtual desktops. One with code, one with console for logs, one for tests etc. All on my Thinkpad X230 with 12.5" screen. 
One that's missing from that list is CTRL-SHIFT-G (though now I can't remember if that's standard or customised?). It searches for all occurrences of whatever you have selected. So if you select FooClass it'll search for all places where FooClass is used, extended, whatever. Quite handy.
Don't forget that you had to "read the XML" to understand where the hell your inputs and outputs were since nothing is standardized on an Ant project. Especially if it had multiple deliverables or relied on a properties file that wasn't documented anywhere but in the build.xml.
When I saw him/her make this mistake...INSTANTLY had to check to see if someone had called them out. 
That's funny, when I was younger I wanted to get girls and alcohol but got distracted by code.
Not to mention that it's future proof. Realize you were a fool to implement using an Array instead of a Vector? No problem if you've got a getter and setter. Change the internal private variable and then when people ask for it, just give them an array version like you used to. That way you don't break backwards compatibility and you can update your implementation freely.
&gt; But dependency management was still a joke What dependency management? I don't believe ant has any and if the lack of it is the joke then you shouldn't be using ant, or maybe supplement it with ivy. &gt; When maven came along, things made a whole lot more sense, provided you didn't need to do anything really unusual. And if you did, odds are that someone already wrote a plugin to do it for you. The exact same thing could be said about ant. If you did anything complicated, someone's probably written an ant task for it.
http://www.apache.org/dist/httpcomponents/httpcore/RELEASE_NOTES.txt
Off-topic but: I can't understand Maven so far. I don't understand why I need to be "restricted" by archtypes designed by someone else. In Eclipse or NetBeans, I can create a web application project, add libraries I need and then start coding. At the end I can "export" the project as a \*.WAR with a few clicks, then use send the \*.WAR to development server with *scp* and deploy it using commands over SSH. I just use Apache Ivy for dependency management. If some libraries aren't on Maven Central repository/ Java.net Maven repository, I can simply copy the library to /lib directory of web application. Perhaps Maven is suitable for "enterprise" applications, but I'm not experienced enough to meet such a use case.
I am in the same boat which is why I use ant with Ivy. Much more control over the structure and build process.
Calling it in a separate thread is easy. Just create a subclass of [Thread](http://docs.oracle.com/javase/6/docs/api/java/lang/Thread.html). The documentation at that link is pretty good. But if you're asking this, I'm wondering if you're prepared for the implications of multithreading. Your checkCollision function is going to be using internal state from a lot of different objects. (Maybe indirectly.) Unless those objects are specifically written to be thread-safe, you're going to end up with some very tough bugs to track down.
I'm pretty sure they have not and I use it right now. I'll take a look at netbeans again though.
How would I go about making objects thread-safe? 
This is a poor use of multi-threading. Why do you want to multithread your collision detection? Do you think it will take a long time? If it's going to take a long time, like say half a second -- how will it help to have it in a different thread? Like let's say you're writing an asteroids game at 30 FPS, but collision checking takes half a second. What is your strategy? Do you think you will simply check the 1st frame, and the 15th frame of every second -- and ignore all other collisions? Even assuming that's your strategy -- why would you want to do it in another thread? Threads behave unpredictably. It's completely possible you could launch a thread, and it might not run for 5 seconds. Would that be acceptable for your game? You want to run collision detection on every frame. Don't multithread it. Your computer is faster than you think. If it ends up being too slow this way, you want to look into something called a "Quad Tree", which is an efficient way for checking collisions in 2 dimensions.
Not yet, plenty of time to mess around though!
Shoot, this is all way beyond my knowledge and Poobslag pointed out a lot of major flaws with multithreading. I think I am going to stay away from multithreading at this point, but thanks for all the info!
This would actually be awesome, a tutorial for complete beginners :)
The probably that a quadtree solves, is that if you have 2,000 objects, and I ask you, "Is there an object at (60, 230)?" it's really slow to find the answer. You have to search through all 2,000 objects one-by-one. A quadtree is a way of grouping objects so that it's easy to find objects near a given point. Kind of like how it's easy to find a name in a phone directory, since it's organized alphabetically -- it's easy to find an object in a quad tree, since it's organized by coordinates. A collision detection algorithm usually works by looking at each object, and asking, "Are any other objects here?" So, a quad tree will improve this from O(n^2 ) to O(n log n). Of course, if you only have 100 objects, then you don't need a quad tree -- it'll be fast enough already! So, do it the simple/slow way first, it's probably good enough for you. Good luck!
Start out with TicTacToe. If you can get it down to &lt;300 lines you'll be in good shape. 
I use NetbeansGuiBuilder (swing)
It's an English mistake...Destory instead of Destroy
&gt; Maybe IntelliJ is more populare among hobbyist? Maybe where you live but downunder IntelliJ usage in the dev community has been strong for a good 15+ years now.
Dis is destory all about how, I typed coded pong right from da ground.
Everyone loves to claim it's future proof, but it rarely ever is. This is because it's not proper encapsulation. If you need to change the underlying data type, often the behavior must be changed as well (which is typically why the data type needs to be changed in fact). It's pretend encapsulation. It's like people read about all the great benefits of encapsulation and then instead of fully incorporating what it means just slapped a wrapper around their variables.
Alt + Shift + S -&gt; Generate getters and setters or get -&gt; CTRL + Space set -&gt; CTRL + Space Even if you make getters and setters that have other functionality besides the minimum, this saves quite a bit of time by creating the methods.
He mentions dumping an if statement and catching an exception instead for performance gain... Id just be curious if there's a net performance gain on that after optimization. 
No, **encapsulation** is what I propose. Actual encapsulation. Which means encapsulating the behavior inside the object. You give the object relevant data, it does stuff with it and potentially returns the result.
His check method was quite heavy presumably because of the complexity of the data to be checked. As the wrong type of data was extremely rare, the performance hit of hitting a runtime exception by passing the wrong data was insignificant compared to validating all data.
Sounds like something that wouldn't be terribly hard to test. I'll see if I can come up with something sensible if no-one beats me to it before I get home. Interesting subject for sure.
Threw this together quick. Reducing the error frequency makes catching exceptions better and better. I wrote this in about 5 min, so it might have errors and dumb assumptions. http://pastebin.com/bpFTUKBW
The reason you get an exception is because the system checked that you didnt do anything naughty. If you check for that error before running the function, you are basically checking for the same error twice. That way of working makes little sense to me.
Catching runtime errors is expensive. If the likelihood of errors is very low, it's better than validating data, but it's never a safe thing to do unless you know what you're doing.
Since exceptions (ignoring edge cases of retarded libraries) shouldn't be a means of normal control flow, there should be no performance implications to using them. If your performance is even slightly influenced by the amount of exceptions you throw, you have far more severe problems than the performance of exceptions -- your code sucks badly.
Why does no one ever talk about *throwing* exceptions and which to throw and which not?
I've never seen anyone using Netbeans outside of an academic setting. Seems like it's all Eclipse and IntelliJ.
&gt; ...so I can upgrade my license from their end of the world sale. That sale was the best! 
Erm, so people shouldn't be able to get the radius of the ball that they made?
I think Maven is beyond managing dependencies, as we can build archetypes that can automate project setup (or project templates), e.g. Spring MVC project template.
There's also the question whether or when it makes sense to throw checked exceptions vs unchecked ones. What not to do.
I'm extremely guilty of rarely (if freaking ever) throwing exceptions... I should really correct that sometime, but I would like to know more about others' best practices.
Runtime.exec(String) splits your command ("ping 8.8.8.8 &gt; ping.txt") into a String[] array on spaces (so {"ping" "8.8.8.8", "&gt;", "ping.txt"}) and then runs the first command ("ping") with the rest of its arguments. Your problem is that ping doesn't know anything about redirecting its output, so it complains about the option "&gt;". Output redirection is something that your shell does. You could try passing the command "/bin/sh ping 8.8.8.8 &gt; ping.txt" (Or, if you're running Windows rather than *NIX try"c:\windows\cmd.exe ping 8.8.8.8 &gt; ping.txt") (NOTE: I have not tested either command, so don't blame me if your machine catches fire). 
I agree that everyone should know it, pretty basic but still a good read. But the example in the end, why RuntimeException and not Exception? In my applications RuntimeException == bug and never checked. Did I miss something?
Article somewhat addresses this, but I'll try to reiterate: This is actually not that hard, when you understand the concept of pre-conditions. Pre-condition is a requirement stated out by an operation for the arguments and overall system conditions (e.g. "setup method needs to be called before calling this operation"). This is ideally documented explicitly (i.e. "division operation requires that denominator argument is not equal to zero"). If you have an avoidable (from client's point of view) pre-condition violation, such as previously discussed division by zero, then you should throw an unchecked exception, because using checked exceptions leads to redundant error handling, as client can check beforehand that denominator is non-zero, yet he still has to try-catch the division by zero exception. The most common general case here is somehow invalid argument values given to the operation, but there are other such cases as well. The key point here is, that if client users the operation correctly, these exceptions should be never thrown. Another case of exceptions are operations, which are inherently not fail-safe, such as IO operation, network operations and such. No matter how hard client tries, he can never be truly sure that an IO will succeed, i.e. they are unavoidable, but expected exceptional situations. Checked exceptions should be used for these, as it assures that the client is aware of all these expected problems in the operation and has to deal with them somehow. Third and rarest case for exceptions is a bug in the operation. These map to post-condition violations, i.e. even if the pre-conditions are met, the operation cannot for some unexpected reason yield promised results. Java standard library has an AssertionError class (unchecked exception) that can be used for this, but some other exception classes might be used as well. This is the most difficult class of problems to pin down exactly, and the best way to handle them probably depends on your availability and correctness requirements, as in: is it better to crash to avoid continuing with possibly incorrect state (unchecked exceptions would fit this scenario, as there is no need to catch them) or try to deal with the problem somehow to guarantee high availability (checked exceptions would do well here, as it requires client to take actions).
&gt; that the client is aware of all these expected problems in the operation and has to deal with them somehow. That seems very much like a "cover your ass" strategy. Point is that the client cannot possibly do anything about the failed network connection or corrupted file, just saying "he must deal with it" doesn't solve the problem. It also violates very much the interface principle. An abstract service interface shouldn't have to care what kind of technology thus checked exceptions the implementors might occur. Which then leads to the declaration of "throws Exception" to at least not have to wrap the occurring exceptions thus destroying all semantic within the original exception type. But on the other hand just lowering the level of expression for that method to "if shit happens".
Very cool From a relative beginner standpoint it's very interesting to listen to the thought process behind what he does. It's incitful to see someone scratch out some working code then rework it into a seperate class and then further clean it up with some helper methods. 
That makes sense. The *nix version errored out saying it couldn't execute binary files. The windows one didn't seem to work either but no output was returned, error or not. Coworker told me he always uses the apache exec lib so I'll give that a shot and see if they can handle it better. Apparently you can use ProcessBuilder to do this as well. I'll just have to write some custom parsing logic to build the commands. Thanks for the insight though.
I have no first hand experience, but the caching parts of guava are quite popular
I'm assuming this you're referring to [LoadingCache from Guava](https://code.google.com/p/guava-libraries/wiki/CachesExplained#Eviction)? LoadingCache doesn't have anything to do with opening and closing files on it's own - what matters is your CacheLoader implementation and whatever the rest of your code does. There's nothing terribly magical about a LoadingCache - if you forget to close an InputStream or something that you opened in loading something, that's still just as much a bug as it would otherwise be. If you need more specific help, you need to be more specific about your problem.
The `arguments` array is the list of command line arguments, split by whitespace, passed to the program when you run it. Line 4 checks if there are any command line arguments. Line 5 parses the first command line argument to an integer, if command line arguments were specified. 
I'm sure that will be the difficult part. I wonder how long it would take to go through all the tutorials from scratch and make the engine as well. 
So is line 5 saying for the program to use line 3? 
Probably a while. He stated at the beginning of the first engine tutorial that if you can't program Tetris by yourself then you should work on your general programming knowledge first. I have to do some work before I start the engine tutorials.
I'm sorry but I don't follow your example. Specifically, "Now if you need to check collision with the ball and paddles, just pass one of them into the other." Do you mean pass a Ball to a Paddle to check collision? I don't think that's what you meant because that's of course far too specific. Perhaps my example was a bit hard for me to understand. What about a playing card? If I am making the game Hearts with special rules for if a card is a Heart or not, should I not be able to ask the Card class what it's suit is so that I can check against that and do what I will? It would of course make no sense to put the logic for the game of Hearts inside the Card class or the Suit class. However, how could you do the special rules of Hearts/Blackjack/Poker without access to the Suits and Values of the Cards? I feel perhaps there are certain variables where getters and setters make sense and others where it doesn't. For example, it isn't revealing implementation to know that a Card contains a Suit. Showing that it contains some random Array that you use for keeping track of data or whatever else would reveal some of your implementation. Maybe I'm on the wrong track with that thought though. As far as needing to get a Radius for a Ball you made, it's pretty common to use default constructors or constructors only requiring some of the instance variables. In that case you could want to get the value because you wouldn't know it. Sorry, I only ask because I feel like Ball example I asked was unclear to me and I'm really curious what you're getting at. I think it could be an interesting new way to go about encapsulating variables.
No. Line 3 sets the value for the variable year to 2000. If someone provided at least one parameter when invoking your class (checked in line 4) the first parameter is interpreted as an integer and assigned to the variable year, thus overwriting the previous value of 2000 (this is line 5). If the first parameter cannot be interpreted as an integer there will be a runtime exception. If no parameters are provided line 5 is skipped and the value of year will be 2000. A bit more background. When you run a Java program you are actually only executing one class. In orde4 for this to work this class must have a static and public main method that accepts an array of strings as a parameter. This array will hold any parameters that you passed to the java call after the name of the class you are executing. java MyClass one two three The above command line would mean that the array of strings, which is named arguments in your code, holds three elements, "one", "two" and "three". The length field of the array would return 3 and the first field has the index 0.
&gt; Do you mean pass a ball to a paddle to check collision? Sure, or the other way around. After all, they are both Box objects, and we've created a method that compares them for collision. I've done it myself in games. ... &gt; It would of course make no sense to put the logic Then why are you asking this question? There is no rule you should adhere to without understanding its role. If it doesn't make sense for the task you have, don't do it. Make it a struct with immutable fields. Here's the point of what I said again: if your behavior is located outside the class, wrapping it in a getter isn't going to change the dependency. It's not going to be any more future proof, because you are in fact depending upon the object state. It's a dumb data object, like an integer. And doing some fancy mess with uh, true data, such as converting things is bad for getters in the first place. Take whatever it original is in a constructor, then parse it into fields, and just use getters for the fields. You're not "supposed" to do complicated things in getters and setters in the first place. You can though. The whole point of the object is to share the data it contains. It is intended to not be encapsulated. So don't. You aren't encapsulating this object anyways. Writing a getter on it isn't encapsulating it. But... is there a way? The answer is actually yes. Have functions on the card class that checks if the card is of a certain suit, or value. Then you don't have to expose the variables. That would be silly roundabout way though. It is, however, possible if you're trying to maximize encapsulation. There are tradeoffs to everything.
Whenever you write a catch statement for a run-time exception you are obviously expecting this to happen, so you should actually be thinking "what am I expecting a run-time exception for?" This is augmented by the possibility of a really unexpected exception, and now you'll be catching it and assuming it was the expected case and allow your program to keep running in an invalid state. I could go on and point out many more reasons why you shouldn't be catching run-time exceptions (like the explicit if-statement makes your code more readable) but hopefully you'll get what I'm driving at. http://www.javalobby.org/forums/thread.jspa?threadID=15191
Is it just me or did everyyone else go "Huh?" on seeing this link.
As a suggestion, try breaking it down into smaller methods, and out of the main() method. Also, you could take the path as the first command line argument, and have any remaining arguments as the extensions to process. From a quick read through one thing that stands out is that none of your for loops are nested - as such there's no need to use i, j, and k, when you could just use i every time; breaking the code up into smaller methods would highlight this. Your code also isn't very defensive - it doesn't check the existence of the directory, or that buffImages has a zeroth element, etc.
You can convert if(buffImages[j].getHeight()&gt;height){ height = buffImages[j].getHeight(); } to one line: height = Math.max(buffImages[j].getHeight(), height);
&gt; javax.script packages which provide direct support for scripting languages, and JavaScript is one that is built in that is rhino. The JS engine in sun's jdk is the very same rhino he is using (older version...)
Nice catch! I will put that in.
Commenting because I want to ring this later. Very cool. 
quoting rules apply, of course.
What do you mean by the archetype restriction? You don't need to define the archetype, just skip that.
Yup, Windows does respect quotes!
No, I don't really get what you're driving at, and the javalobby article you linked to seems to be giving a different reasoning (naive optimization) from the one you're giving (misattribution of cause?). It sounds like you're saying "Instead of catching the runtime exception, catch the REAL cause of the problem." But what if the real cause is also a runtime exception?
Looks interesting... worth a shot!
SUMMARY Some guy has a lot of stack overflow points writes something people do not like and gets down votes so he is not writing to stack overflow anymore. EDIT: This has nothing really to do with Java
Everything ends up catering to the lowest common denominator and sociopaths end up leading and running any system in existence until their eventual ruin. Rinse and repeat. It is the circle of life.
Meh. He has legitimate points about the shortfalls of the reputation system, but he's throwing the baby out with the bathwater. The only thing that matters to me is that when I Google something, and one of the results is a Stack Overflow post, I can be about 90% sure that's the only link I need to click, because it is the most likely to have a useful answer for me. SO is the first and probably still only site with both a usable interface and a large and knowledgeable and active community, and thus I will continue to use it to get actual work done, regardless of how "vaguely distasteful" the gamification is.
I'm aware that it is the Rhino package for JavaScript, but the javax.script packages doesn't require working directly with the Rhino classes. You use the ScriptEngine and Bindings classes. The engine allows using different scripting languages and different implementations if you didn't want to use Rhino. 
The most wrong way of doing something pointless.
I think you should clarify in your article that you are just learning to program, to let people know that your solution might not be ideal. There are a few things that are wrong with your solution, and other beginners should know about it.
Not sure exactly what you are asking for regarding *setting foo.bar.baz.qux*, the error: String out = scope.get("foo.bar.baz.qux", scope).toString(); (error) org.mozilla.javascript.UniqueTag@442a15cd: NOT_FOUND makes perfect sense here because in your evaluated JavaScript function you only declared the variable **foo**, so that is the only variable inside the engines scope map. The **bar**, **baz** and **qux** are inside **foo** not separate variables in the script engine's scope map. If you wanted to access the value of **qux** you need to ask the engine to give it to you: Integer qux = (Integer)jsEngine.eval("return foo.bar.baz.qux;"); Now, if you want to work with this as a matching Java object, you need to define a Java class that represents the structure of the JavaScript object. If you don't tell the engine what type of Java object to use, it has to use its own internal format, and that is what is returned if you ask for it, the internal NativeObject. So String script = "var foo = {bar: {baz: {qux:1}}}"; internally creates a JavaScript *object* held by the variable **foo** that has one element **bar** which is an object that has one element **baz** which is a object that has one element **qux** this has the value 1. JavaScript's dynamic nature allows you to create the *class* on the fly, Java can't do that. Since you didn't define that to have an actual class structure from the Java side it by definition is a NativeObject. What else is the script engine supposed to do with it? However, if you know you externally want to use it like an object instead of a NativeObject, then you have to tell the engine to create a known Java object. First, create your class structure: package test; public class Baz { public int qux = 1; public Baz() { } } package test; public class Bar { public Baz baz = new Baz(); public Bar() { } } package test; public class Foo { public Bar bar = new Bar(); public Foo() { } } This would allow for something like this in Java: Foo foo = new Foo(); System.out.println("qux: " + foo.bar.baz.qux); Then make these classes available inside your JavaScript by importing those classes in the script engine and then internally create an instance of the Foo class. Then in the Java code using the scripting engine: ScriptEngineManager mgr = new ScriptEngineManager(); ScriptEngine jsEngine = mgr.getEngineByName("JavaScript"); String script = "var fooIn = new JavaImporter(Packages.test.Foo, Packages.test.Bar, Packages.test.Baz);"+ "function testFun() { " + " with(fooIn) {" + " var foo = new Packages.test.Foo();" + " foo.bar.baz.qux = 10;" + " return foo;}}"; jsEngine.eval(script); Invocable inv = (Invocable)jsEngine; Foo foo = (Foo)inv.invokeFunction("testFun"); System.out.printf("foo: %d%n", foo.bar.baz.qux); and now you have your Foo object available and modifiable in both Java and JavaScript. As with using any scripting language (particularly a dynamic scripting language) embedded inside any non-dynamic language there is going to be some level of impedance mismatch and conversion code required. The key question to ask then is how difficult is that conversion? In the case of the Java scripting engine when using JavaScript, because you can declare *classes* inside the JavaScript engine that map to the outside world, a simple cast is all that is required, so long as you keep the classes and the scripts in sync. Don't do something like adding a new field inside the script: String script = "var fooIn = new JavaImporter(Packages.test.Foo, Packages.test.Bar, Packages.test.Baz);"+ "function testFun() { " + " with(fooIn) {" + " var foo = new Packages.test.Foo();" + " foo.bar.baz.qux = 10;" + " foo.bar.baz.zip = 1;" + //added new field here " return foo;}}"; and expect this to work. The scripting engine will now report this as an unknown method (field) on the native Java object. My point on the NativeObject example is it didn't have to be so complicated. If you need to move objects in/out of the script engine from the host environment, you can by telling the script engine about those classes. You will lose some of the dynamic nature for those particular data types, but you also eliminate the need for the helper function you created. It's a trade off.
I do the same thing with a collection of setup.xml Ant build files that I've created over the years. I invoke one of those setup files with a few parameters (project name, package root, etc) and it blows out a complete directory structure and Ant build.xml file for the project. And these being xml text files, I can tweak them as needed. The Maven archetype approach is a little more difficult to modify.
Well, you've not put anything in the "Package name" field, and the error's telling you that the package name is invalid, so what do you think you've got to do... Anyway, /r/javahelp's a better place for questions like this.
Yea, you should enter a package name.. This can be virtually anything, but the normal is a reverse URL, fx. org.talkingzero This would mean that the fully qualified name of your project is, org.talkingzero.AndroidApplication1
&gt; There is almost no good reason for laying out your project in arbitrary ways. Maven has intelligent proven standards Depends on your definition of *arbitrary ways*, not sure how these are *proven*, but hey if you like the Maven defined structure for your projects, go for it. But I can easily work with a Maven mandated structure inside my Ant scripts with no problem. But if I don't like that structure, and have a model that I have worked with for years, or perhaps I can't work with that structure for one reason or another, then Maven just gets in the way. &gt; One top level build file Have that. Can have a build.xml in the root of a multi-module project that calls the build.xml files in the module directories, and can pass any common environment data needed. But I can also do *multi-module* projects with a single build.xml if I choose too as I explain further down. &gt; one module per directory I have more choices with my Ant scripts here. I can choose to have physical directories per module: client/src/org/myproject/client server/src/org/myproject/server shared/src//org/myproject/shared or I can have one source directory with multiple subdirectories aligned to packages src/org/myproject/client src/org/myproject/server src/org/myproject/shared which simplifies builds and testing (a single javac on src builds all classes to a target directory), but I'm still able to package them as modules by filtering out based on package name: &lt;jar destfile='${server.jar.file}'&gt; &lt;fileset dir='${classes.dir}'&gt; &lt;include name='**/server/**'/&gt; &lt;include name='**/shared/**'/&gt; &lt;exclude name='**/client/**'/&gt; &lt;/fileset&gt; &lt;/jar&gt; &lt;jar destfile='${client.jar.file}'&gt; &lt;fileset dir='${classes.dir}'&gt; &lt;include name='**/shared/**'/&gt; &lt;include name='**/client/**'/&gt; &lt;exclude name='**/server/**'/&gt; &lt;/fileset&gt; &lt;/jar&gt; My biggest gripe with multi-module Maven projects is that module A must compile, then be "checked in" to the repo (local or remote) so that module B can now depend on it because Maven assumes dependencies are in the .m2 directory. &gt;modules may be hierarchally specified but should keep deliverables at leafs Not sure what you're saying here exactly, but if I understand it seems the an Ant approach where the modules can be physically separated or logically separated fits this point. &gt; all dependencies strictly versioned and available online on either your own server or the internet As others mentioned, Ivy is available for dependency management and the resolver chain can easily be setup to point to your own repo's or public repos. Interestingly though because invocation of Ivy is just another target in my build.xml Ant script, I'm able to do a little more than just fetch from a server. For example, prior to Java 8, JavaFX is an addition to the JDK and not in the default classpath, but the jfxrt.jar is in the $JAVA_HOME/jre/lib directory, but not in any repositories. So in my Ivy fetch task in Ant, I can add: &lt;target name='_lib-fetch' depends='_property-check, _proxy, _ivy-init' description='fetch dependent jars'&gt; &lt;ivy:retrieve pattern='${lib.dir}/[conf]/[artifact]-[revision].[ext]' conf='*' type='*'/&gt; &lt;copy todir='${lib.dir}/runtime' file='${java.home}/jre/lib/jfxrt.jar'/&gt; &lt;/target&gt; My ${lib.dir} is the default classpath for all my Ant targets, any jars that need to ship with the app are in the ${lib.dir}/runtime directory and I also support the idea of *provided* by using a ${lib.dir}/provided directory for apps targeting an app server. I can handle the jfxrt.jar with Maven if I choose to by uploading the jfxrt.jar file to my own controlled repo. I've actually done that approach as well for my Ivy (though the repo in this case is a simple Apache web server with some defined directory structures that Ivy recognizes). I think the simple Ant copy is easier. &gt; non-shippables (tests) should be in a separate directory src/test/java src/test/resources src/test/liquibase Ok, if that is the way you prefer, Ant doesn't care. Or if you prefer, the word **test** could be in a package name or class name and you could use the above excludes model I mentioned when building the jars. &gt;shippables should be in the same directory src/main/java src/main/resources src/main/liquibase Again, if you like this model it is easily supported by Ant. But if you don't like this model, Ant won't complain but Maven will. So others using a different structure that isn't what you use is not necessarily *arbitrary* or any less understandable than Maven's. 
 String ANSI_RED = "\u001B[31m"; String ANSI_RESET = "\u001B[0m"; System.out.println(ANSI_RED+"This is a red colored String"+ANSI_RESET); You can try [ANSI escape codes](http://en.wikipedia.org/wiki/ANSI_escape_code) like the code above to color coat your console applications. You can find more color codes [here.](http://bluesock.org/~willg/dev/ansi.html) 
[I believe he meant System.out.println("\u001B31;1mhello world!");]( http://stackoverflow.com/questions/565252/how-to-set-a-strings-colour-before-printing-it-to-screen) String red = "\u001B31;1m"; System.out.println(red+"this should be red"); Edit: Looking at the comments, I believe that the Color change may be impossible without a Gui? Just a hunch, however.
 String s1 = "Hello world!"; String s2 = "Goodbye world!; boolean result = s1.equals(s1); The .equals method is a boolean which returns true or false if two strings are equal. It is not for setting the value of a variable. In the above example, boolean result would be false because the Strings are not the same. As for the colored String itself, did you use my exact code? It is possible that it is eclipse. I know it doesn't work within some consoles (For example, windows console.)
Yeah it was your exact code, I copied and pasted :D I think I'll download Eclipse and try out the example codes!
&gt; It is possible that it is eclipse. but I said I don't use Eclipse :P what do you use? 
Sorry, I misread your comment. I'm using netbeans and the escape characters work fine. [Here is an examples from the netbeans console.](http://i.imgur.com/847TuxK.png)
They are indeed possible without a GUI. I used ANSI codes back in my Computer Science I class for the final. They worked within netbeans and unix terminals.
Did you give him the ANSI code that worked for you, out of curiosity? It may have to do with the terminal being used, if this is the case.
I did. I think you are also right about the console as the cause for the issue.
Okay, I see what you mean now with the Ball and Paddle example. Instead of Box though you would probably want a CollisionObject that can choose it's own shape and what not. Box would be a subclass of that in my head. I see what you mean but I still don't know if I'm totally convinced on the blanket statement that getters/setters are evil. I think that Card.getSuit() == Card.HEART; is something I would be more comfortable using than Card.isHeart(); but I at least see what you mean now. It seems you could really easily get function bloat. In your example, that grows one function into four which isn't bad at all but for other objects I could see avoiding getters and setters and turning them into questions about the state of the object could create a mammoth of a Class. Thanks for explaining, I'll definitely use some of those ideas in the future.
This will only work in Unix in some shells.
 Array[r++] = row.split("\\|"); that won't even compile, as "Array" (horrible variable name btw) isn't defined. Did you try googling this? there's a zillion tutorials about how to split strings... also: /r/javahelp.
I did pong for my first game to get familiar with collision and tetris as my second to get familiar with data structures.
Yeah wtf
For [windows consoles](http://jansi.fusesource.org/), Otherwise you can just use raw ansi codes.
In actuality, most games don't require much more than simple rectangle collision detection. For the given example, Pong, there is no need at all (since there is no sphere vs sphere collisions possible). Adding additional shapes also drastically increase performance concerns. One of the quickest and more effective boosts in performance for games with many objects in concerns with collision detection, is to add bounding rectangles to them. If you *really* want more precise collision detection, a good method is to first check for rectangle collisions, and then if that occurs, do additional more precise detection. Often times, in fact, you don't want pixel perfect detection because it doesn't "feel" right to players. There was an article about this over the game Cobalt I believe. He made the collision box for the character much smaller than the sprite. But sure, a CollisionObject could work as well yes. ... &gt; Card.isHeart(); The original intention from what I said was this: Card.isSuit(Suit.HEART); So it's not much different from you're equality. It just gets more complicated when you start to get into the rules of any specific game though. But I've thought of a way to make this example more defined. So we have our cards all setup already... what happens when you add a wild card to the mix? If you haven't encapsulated the object, you now have to do this with all your code: Card.getSuit() == Suit.HEART || Card.getSuit() == Suit.WILD While, my example stays the same: Card.isSuit(Suit.HEART) And this is what I mean by getters/setters aren't future proof. They just put the work necessary on the calling classes, which is in general much harder to actually revise around changes. Note that depending upon the language you could instead override the equality behavior for the Suit enum instead. My point stands though. ... Most of the mammoth issues you might think of are already a problem in an of itself. If you have so much behavior surrounding an object but it's not in the class, such that it would create mammoth class if in the class, you have some pretty big coupling issues. When you have it in the class, you can normally solve this through a well done hierarchy. It's all about tradeoffs, which again, for a Card class I don't consider it worthwhile. I want it to be like an int, or boolean, and immutable dumb data object that has a one to one mapping. But most classes are not like that. Most classes are created with specific behavior in mind. Put that behavior in the classes, and you have encapsulation and the object takes care of the behavior associated with the data. It's now truly future proof, you may modify data and behavior without breaking and dependencies. This is the whole purpose behind OO, and that is why getters/setters, in most cases, are evil and code smells. Of course, often times it's much easier to do it. Because designing good encapsulated classes is actually quite hard to do. It is definitely something you have to alter your thinking about.
&gt; http://www.javalobby.org/forums/thread.jspa?threadID=15191 That *rant* is completely pointless, you might as well argue against using Integer, since setting a breakpoint on the Integer constructor will halt in some random library and not magically on the spot a specific instance is created. The author of the rant could have placed a breakpoint in his catch block to get a look at the stack trace or just printed it out in the first place. &gt; This is augmented by the possibility of a really unexpected exception A trick to it is: do not catch Throwable, Exception, RuntimeException, Error unless you are trying to keep the program running at all costs, otherwise be as specific as possible. You can create your own RuntimeException classes and catch these. With NullPointerException and other generic exceptions you can assume that the Objects covered by the catch block are in an invalid state, if they are isolated enough the remaining application is still fine and depending on the functionality provided by these objects you might be able to recover from it by replacing them with new objects, disabling the functionality, trying an alternative implementation, etc..
cool project, but the use of Twitter Bootstrap is killing me
I'm doing some extra reading on the subject and I definitely see what you mean now. I think I will avoid getters/setters wherever possible now. However, I don't follow the wildcard example. Wouldn't Card.isSuit(Suit.HEART) dealing with wildcards mean that Card would need to have the rules for wild cards built into it? That wouldn't make sense because wild cards are a concept brought in by specific games so they should hold the logic for that. Cards in and of themselves do not have anything to do with wildness or being trump or whatever else, games should hold that. In that case, the logic is equally messy with your proposed differences. On that note though, I think that sometimes logic is just going to be messy and hidden away in game-specific method. I would probably have a method within the game logic to check for if a given Card is wild. Thanks for talking with me about this at such length. It's very helpful! EDIT: Doing reading on this I found this article http://www.javaworld.com/article/2073723/core-java/why-getter-and-setter-methods-are-evil.html with the follow-up here: http://www.javaworld.com/article/2072302/core-java/more-on-getters-and-setters.html both very good. That helped me understand more what you mean. As a tangent, that site also taught me that extend is evil (though I already subconsciously knew that. I always design with interfaces in mind). However, he used the example of getX() and didn't really say what he could have done differently. The example I'm churning over in my head that I can't figure out is mouse positions. Say we have a Mouse class with no way of getting the X and Y co-ordinates. We want to make a minesweeper clone. How do we get Mouse to do anything useful for us? Is this just a case where you don't consider X and Y to be implementation and are more of parts of the class?
&gt; The only problem with a RuntimeException is that it might propagate through code that is not exception safe. So what do you think we should do to prevent it from propagating through code that is not exception safe? (Hint: I'm expecting you to say "catch it").
In both your load and save functions you are using ObjectInputStream and reading an object. For saving you need to use an ObjectOutputStream and FileOutputStream to write the serialized object. Something to keep in mind though is that object serialization of this manner is version specific, meaning if you serialize your Player object out using this approach, then change the Player object by adding or removing a field, the data can no longer be serialized back in. This is why you'll often see objects transformed into something like JSON or XML for storage as you have more control in your code for handling changes.
&gt; mean that Card would need to have the rules for wild cards It's an example, don't overthink it. I've repeatably said encapsulation for a card class isn't ideal. If I was making a single card game, however, I could shove all the rules into the card class. Sometimes we get overconsumed with handling every circumstance in code and overdesigning things, when it's much easier, and quicker, to simply solve the problem at hand. Do we really need this card class to be suitable for every card game imaginable, when we're only dealing with one game right away? It's a bit of a form of premature optimization almost. And sometimes, getters and setters are the quickest and easier way to get things done. I just want to impress the tradeoffs of these concepts, and that in general these are something we want to avoid, and I think I've done that. &gt; However, he used the example of getX() Well, let's give the class here: int x; int getX() { return x; } So the issue comes, when we do this: long x; int getX() { return x; } Well, that won't work right. So let's go over option 1: long x; int getX() { return (int)x; } So here are two problems with this... first off, you aren't actually getting the X variable anymore now are you? It's not just a simple getter. What's worse, is that you will have bugs here. The whole purpose behind using a long is to have increased range of values, outside the normal range of ints. So what happens, when X is outside the normal range of int when you do the case? Well, you're going to get a value that is different from X, it will be truncated I believe. So that is bad, you'll get bugs anytime X is sufficiently large enough. And it doesn't match the field anymore. So solution 2: long x; long getX() { return x; } So, it's back to just a simple getter... only one problem now, every place you used getX, is probably not working right. You'd likely get a ton of compile errors, as well as small bugs. That's because all the code was depending upon that value being an int for return, and now that it's long, well, all that behavior has to be checked to verify that it is in fact, working properly with longs. ... So he didn't provide an exact solution. That's because he never specified why getX had to be used in the first place. The solution is exactly what we've been talking about, which is to take all that behavior that needs getX, and put it in th eclass itself. &gt; Say we have a Mouse class User interfaces are tricky. My suggestion to you is to get used to always hand coding them if you don't already. Most people use generators and it almost always turns the whole program to crap, it makes one of the most important things (the user experience) and bogs it down. It's a really difficult thing to learn, but you get a lot of gains from it down the line. That was an aside. So how would you fix this? So, we have the Mouse class call whatever it clicks. Are you thinking of polling the mouse for the X and Y? How would you know when it was clicked? A boolean? That's passive design, think active! When the mouse clicks, have the mouse do the work! Either it figures out what it clicked using the X and Y it has, or *pass it*. This is another way of getting around getters and setters that I kind of neglected. The principle is tell, don't ask. Go ahead and define a method that takes x and y wherever you need it. And just let the mouse call that method whenever it clicks. This is how Java (I think, it's been a little while since I've done a UI in Java) behaves anyways. You implement a mouse listener on an object, define a method onclick, and it takes in a variable that contains the x and the y. That's the basics, there are quite a number of ways to go from there really.
Is this something that's frowned upon?
a little bit, mostly only by web devs. it's just so overused now adays.
To change the color of the entire console in Windows you can use Runtime.getRuntime().exec("color XX"); Replace XX with the color codes.Open the command prompt and type "color help" to see the color codes. I don't think you can change the color of specific words inside of the console if you are using Windows.
I never said you can't do any of that with Ant. You can do all of it with Maven as well. My point is, Ant takes a significant amount of effort to set things up correctly. Most projects don't have that kind of effort devoted to building. Maven gives it to you for free. When a new team member comes on board it's easier for them to pick it up.
Do you have any other recommendations?
Id really like to know if you have any alternatives :)
How are you getting started with it?
jQuery UI comes to mind.
It may be overkill for what you need to do. If the goal is to load classes derived from some interface or base class, they don't all need need the same fully qualified name just to find them. I believe ResourcePatternResolver from Spring could be used to scan for classes in a jar. (You then just check via reflection if the class implements your designated interface). There's also examples I've seen of opening a jar via zip and scanning its contents. I think that sort of approach is easier and safer than your own class loader. (Not to take away from what you learned here. It's good stuff to understand)
you can skip it, but when you are first starting out, it doesn't make it readily apparent that you can just start from scratch. Lots of the pre-defined archtypes are bloated and suck anyway.
I don't think you are even supposed to use those predefined archetypes anymore, but yeah it's not apparent you can just skip it.
Depends on what companies that you would like to work for. Intel, General Dynamics, and other high tech manufacturing companies require a MS before you even get in an interview. There a lot of jobs out there that don’t care about an MS. I would take the time to look at the companies that you would want to work at and see what their job requirements are. I just have a BS and a MBA. I would get an MS if I was a different point in my life.
I didn't mean to imply you said Ant can't do it, I was responding more to your comment about *arbitrary ways* when not using Maven. There are many perfectly sound approaches to laying out projects that don't follow the Maven required models. And it is probably because I have been using Ant for so long that I don't agree with your statement that &gt;Ant takes a significant amount of effort to set things up correctly. Just as someone wrote for you the Maven archetype plugin that takes a defined archetype and can blow out a project directory structure for you, so too do I have Ant scripts that do exactly the same thing. I can simply execute a setup.xml script with ant -f setup.xml -Dproject.name="My New Project" -Dpackage.name=org.mynewproject and it creates all the directories, a build.xml file (with targets to drive Ivy), any source files I want it to create, any default property files I want it to create, like a default log4j.xml file, IDE specific files (like .classpath for Exclipse) that reflect the structures, other files as needed, etc. I have versions of these scripts that create structures for single jar standalone programs, multi-module desktop client and server projects, multi-module webstart client and server projects, web application based projects, JavaFX based projects, Android based projects, etc. So I have all that *for free* too as it only had to be created once. But a big difference between my Ant scripts and the Maven *for free* archetypes is that since mine are single-file XML scripts, if I want or need to adjust the generated output in any way, it is a simple edit of a text file. If you want a different project archetype in Maven that requires creation of at least 3 XML files (pom.xml, archetype descriptor, and a prototype pom.xml), or you use an archetype that generates the base archetype files for you or generates an archetype off an existing project (but that project must follow the Maven proscribed model for directory layout to work right as far as I can tell) which then must be installed into a repo to be usable. But from what I've seen/read, your new archetype will still force you into the Maven defined layouts for directories, even if you need something different. So for both of us, once the project structure is all blasted out, then all our team members have to do going forward is execute **ant** or **mvn** or let their IDE do that for them. That's the difference between a program that tells you what to do and a tool that does what you tell it to do. I prefer to use the tools approach even if there is a one time cost of configuring it myself instead of using what someone else decided was the *right way*. But I recognize that both approaches are perfectly reasonable and I'm not one to say one is right and the other wrong. As always, use the right tool for the job. 
The job market in my area consists more of smaller software dev companies. I have been scanning the openings for the past 6 months or so and I don't see many that list a M.S. I was thinking that if I have my B.S. and can demonstrate a knowledge of the language that maybe I could get my foot in the door. As always though, getting the initial interview can be the toughest part of the process. I guess my question should have been: What is the best use of the next year or 2 of my life? Developing on my own and working on what I want to work on or, a more structured path which would give me a degree but I may spend time working in/on topic that I don't find as interesting.
Well, the classes do need to have the same fully qualified name, because we can't just tell people to name their classes differently, if that's what you're implying?
This is not a bad solution. I have worked on systems that have done the same thing, but where the dynamically loaded code was much more under my control. If your situation is potentially adversarial, and it sounds like it is, you will probably be better off spinning up separate jvm's and shooting them in the head between test cases and/or test suites.
Wow, nice horse! Where'd you get it?
Why is it a requirement to run all the submissions sequentially within the same runtime? Even if you unload a class, maybe it had side effects while it was running (which could be as simple as garbage collection type stuff), and you wouldn't want that to affect other competitors. Maybe I'm a bit low tech, but since the goal is just to run some unit and security tests, I would have thought about something like a shell script. Or, because I don't trust anonymous internet coders, run each jar in isolation in a clean VM.
I don't know to be honest. I've read through some of that link, I've made a folder in chrome to save pages I think are particularly important. I've gotten as far as [here](http://www.openworm.org/projects.html); I'm now going to download Gepetto Eclipse, get it running properly and try their Hello World example and see where to go from there. I've started learning Java EE recently in college, and this project looks like a really nice way to get a proper understanding of it while building something worthwhile. I hope I can contribute something in that area after I get up to speed it on the project. edit: here's a good start: https://www.youtube.com/watch?v=C12d11z8OIo 
My experience on the hiring end is that a master's degree makes no difference whatsoever, unless it is in another field that happens to be relevant. In other words, if you are applying for a programming position in electronic trading, a M.S. Computer Science degree probably won't help you, but a Master of Financial Engineering might. The other time when a M.S. might help is if you did your undergraduate in something other than Computer Science, in which case you would probably be better off with a M.S. Computer Science than without. But even in this case, you'd probably do just as well getting a few years of practical experience under your belt instead.
I'm going to be working as a software developer using java for the next 9 months, and then will hopefully be starting a PhD in elegans neural network modelling, so I may well be of some use to them at that point! I've spoken to a couple of the people on the project while doing my grad school applications. 
For coding there is not much point into having an MS. Having said that, it depends hugely on the market. I'm French working in the UK. In France you need an MS (education is free though), while in the UK very few company care. The US seem to be similar (as usual the top companies are more picky). To start java, I'd recommend you looking into getting the Oracle Java dev certifications. You can learn that on your own, and so just have to pay for the exam (100-200$), way cheaper than 2years college in the US, will learn exactly what you need and will shine amongst all other graduates. 
Thanks, this seems like a good mix of the 2. Are there other industry standard certifications for JAVA that may be useful to obtain to prove my knowledge?
Uh-oh. What if anything are you doing to ensure you're not reading the file while it's in the process of being updated? Also, a better approach might be to use a wait/notify pattern to have notifications sent to some listener only when the file is changed rather than potentially polling needlessly. Or better yet, if you are on Java 7, maybe this will help: http://docs.oracle.com/javase/tutorial/essential/io/notification.html
On top of that, using one of the sandboxed JVM security policies that prohibit using the filesystem, network, etc.
I'd skip any college level programming courses unless they go into specific technologies like Java EE, Spring, etc. Most college level courses that are just on "programming" are shit. They are typically way behind on what technologies are being used and generally only teach syntax and the very very basics. To better educate yourself look into building Spring or Java EE applications in some of your free time.
But that's not a requirement. I'm implementing parallelization with threads right now. I'm having some difficulties with it, so I definitely am considering the option of firing up separate JVMs. A shell script isn't really necessary.
When doing your initial .listFiles(), add a FileFilter as an argument. http://docs.oracle.com/javase/7/docs/api/java/io/File.html#listFiles(java.io.FileFilter) Instead of: File[] files = new File(path).listFiles(); //getting the list of files Try: File[] files = new File(path).listFiles(new FileFilter() { @Override public boolean accept(File arg0) { if (arg0.isFile() &amp;&amp; arg0.getName().endsWith(".jpg")) { return true; } return false; } }); This will ensure that you will only be getting files (not directories) and only ones that end in .jpg. You then can just uses files.length to get the count of how many you have. Edit: I just looked at version 2. First off, you're putting your code into Git which is good, but don't rename it to version 2. Github will keep your old version when you check in the new one. No need to rename your stuff to "v2". Second, why are you extending Exception? That's really odd and likely not needed. Your class should be "Wallpaper" not "wallpaper". Class names should be capitalized. All your public variables can and should be private. In this instance, all your public methods can also be private. **Init method** In your init method you should print a message to the screen if args.length &lt;1 and &gt;2. Otherwise you won't know if you had insufficient args or your program just crashed with no message. You can use *else if*'s for the 2nd and 3rd if statements. **getImgFiles** You can use the listFiles I mentioned above in here. Here you're catching *all* exceptions. You shouldn't be. If for instance, you somehow get an ArrayIndexOutOfBoundsException or a NullPointerException the message you see on the screen will say, "This file doesn't exist.....". Only catch IOException here and just do a simple e.printStackTrace() in the catch block. You can then remove *throws Exception* from the method since you are no longer throwing one. **Finally** You should look at the [Java Standards](http://www.oracle.com/technetwork/java/codeconv-138413.html) doc. A lot of it's handled for you via autoformatting in most IDE's, but will be good habits to form for the long term. I know it doesn't matter because this is just a small one-off project to try something, but bad habits formed on small projects are hard to break when you transition to real projects.
You could assign a number to each person or team and give them a pattern for their package names. Since the number of applicants and the names of their classes are known in advance, running through all of them is much easier.
If one of the criteria is speed, then you don't want to run the submissions in parallel, because thread management will have an unpredictable effect on the results, and it will be more possible for the submissions to affect each other by tying up resources.
MS in "IT" isn't worth much this early in your career. I would suggest you start working at a large organization that has resources to at least help you with evening classes to get an MS in comp sci after your acclimated to working there and have proven your value. The problem is most of those programs are going to assume you went through a BS in Comp Sci, so it might be a rocky road, and you will be missing some key information. The prerequisites (which you will have to make up) are going to help a little, but you will still be lacking a significant background that you will have to learn on your own. Most comp sci programs don't actually teach you a programming language but help you learn things like: * Algorithms and BigO Notation * Performance * Data Structures * Operating Systems * Language &amp; Compiler Design * Karnaugh Maps and simplified digital logic &amp; Boolean algebra * Applied Mathematics for problem decomposition * Processor Design &amp; Concurrency * Engineering Physics for simulations They expect you pick up the programming language parts on your own. That being said, the market is hot right now, so you don't really need one to get a job, but it would be nice to have one early in your career. Later, it doesn't matter as much other than getting you an interview. At least this is for good colleges and universities, the ones that just teach you "programming" are lame and should probably be avoided because they often count against you on your resume. It implies that you don't have the drive to pick it up yourself.
These are excellent critics. I will definitely look into and fix these issues, thank you!
I did something similar, but people were submitting Java source code, not JAR files. My system then would compile it inside the runtime (javac is available via JavaCompiler class). The benefit was my ability to modify the source code and come up with unique class name (a qualifier added to the end of the original class name). I also used custom class loader and file manager implementation (compiled classes were stored in a simple virtual FS in memory). Extra advantage was full control over which JARs were available to the compiled code. Even when my runtime had apache utils, guava and some other libraries loaded in its class loader, those classes were NOT available to the code submitted to me. Unfortunately, the implementation was under proprietary license and I can't share it. Sorry. But it could be that you'd consider that direction as well. Even when they upload compiled byte code, it may be easier to use java agent to modify the bytecode when it is loaded by the default class loader to make the class names unique.
 &gt; So I have all that for free too But you have to maintain that, and nobody else will support you without you asking for help. With Maven, others maintain those archetypes. &gt; If you want a different project archetype in Maven that requires creation of at least 3 XML files (pom.xml, archetype descriptor, and a prototype pom.xml), or you use an archetype that generates the base archetype files for you or generates an archetype off an existing project ... Those three XML files help modularize what you're trying to do rather than having to read through a giant file. This seems like a minor issue since the only time you view those files is when you edit them, and you simply run *mvn archetype:generate* to select it and use it. &gt;(but that project must follow the Maven proscribed model for directory layout to work right as far as I can tell) which then must be installed into a repo to be usable. But from what I've seen/read, your new archetype will still force you into the Maven defined layouts for directories, even if you need something different. You can override where your source, target, test, resource, etc... directories are in maven. It's just not recommended because people have come to expect them there and some of the less popular plugins don't dereference the directories properly within the maven plugin API so they get confused when you do that. &gt;So for both of us, once the project structure is all blasted out, then all our team members have to do going forward is execute ant or mvn or let their IDE do that for them. That's great when things are working as expected, but when something goes wrong the team members using ant will have a debugging session through the XML files, and for the ones using maven a Google search will probably get them the answer. &gt;That's the difference between a program that tells you what to do and a tool that does what you tell it to do. I prefer to use the tools approach even if there is a one time cost of configuring it myself instead of using what someone else decided was the right way. Maven actually has intelligent defaults, you can override all of them. But like I said it's not recommended. If you try to use a plugin that doesn't work, you might end up pulling it down, making changes and using it out of your own artifact repository until they accept your fixes to their plugin. &gt;But I recognize that both approaches are perfectly reasonable and I'm not one to say one is right and the other wrong. As always, use the right tool for the job. Agreed :) but having used both heavily, I don't see why anybody would use ant. If I truly had a vastly different case outside of the maven build lifecycle (the only part that's fundamentally hard to change, but usally workable with multi-module projects) then I would use Gradle. But Gradle is still a bit immature with features and plugins, but it took a lot of great learnings from Maven. 
Programmers with an actual degree in Computer Science are actually fairly rare. Degrees are common. Lots of Engineering majors, history majors, english majors, etc. But also plenty of dropouts and guys that never hit college at all. That said, what LevonK stated is absolutely true. But if you just want to work for a standard business writing apps to keep things running (we call them CRUD apps, as in Create/Read/Update/Delete Data), no IT degree will be required.
This does not apply to a situation where continuous integration is an issue and it assumes you are the only person developing and deploying the app.
Alright, so you want to use split(). So how does that work? By looking at the javadoc we have String[] split(String regex) Splits this string around matches of the given regular expression. What does that mean? It means that we can split a string into an array of strings with the appropriate regular expression. So what would "Hello World".split(" ") give? From that, you might construct a loop that applies the effect of compute to each word individually. As a note, while I understand that sometimes people can be honestly stumped by fairly basic things, you should try and check [javadoc](http://docs.oracle.com/javase/7/docs/api/java/lang/String.html) first, it often has examples.
I use maven and I still need to read the xml to know what's going on. Once you hit a point where theres a sufficently complicated test suite and various stages plugged into the lifecycle you need to read the pom regardless
Same for Google servers
Visual Studio is really hard to beat. If you're looking for IDE Alternatives, I recommend trying out IntelliJ, it's pretty snappy compared to Eclipse.
It's hard to go back to Eclipse/NetBeans after using IntelliJ. Everything just feels faster, more solid. If nothing else, the autocomplete alone is way better than Eclipse. 
For Java, I prefer [Intelli J IDEA](http://www.jetbrains.com/idea/index.html). It's very fast auto-completion because it does full indexing of your project. It's a solid IDE, and I prefer it to Eclipse any day of the week.
I can understand the logic of the split method in my head and how it works, but I can't seem to get it to work. "Hello World".split(" ") would give * Hello * * World *, I think. Yeah I know how to make it loop, it gets the initial split method to work, once I know that part I can do the rest. 
Personally I found that having a zero millisecond delay was more intrusive than having to wait a bit of time for it to appear automatically - however I normally just use Ctrl + Space when I'm after the suggestion popup.
&gt; I don't understand why I need to be "restricted" by archtypes designed by someone else. That is your problem. Archetypes in real-life are not meant to be used as a restriction. They're there to get you started with a project or a framework. They setup useful defaults like the project packaging and the dependencies. If you want your POM to demonstrate additional capabilties, you'll need to edit it. You can in theory write a project POM with an archetype and not touch it later, but I've seen few or no projects in the real world that do this. &gt; If some libraries aren't on Maven Central repository/ Java.net Maven repository, I can simply copy the library to /lib directory of web application. And this is not how you go about integrating your project with a build server. Or bring in a new person to help in development. One does not simply copy over the stuff time and again in multiple machines with different OSes, directory structures etc. Part of this problem lies with the absolutely abysmal documentation that Maven has for beginners. Once you get over the hump, it's easier. And to be honest, going by your post, you're quite far away from seeing what Maven and/or Gradle brings to the table. In any typical project of mine where I spend 100 hours or more, the POM is the one where I spend an hour at most over the entire duration of the project. To get there, I estimate to have invested nearly 100 hours over ~4 years.
Google servers vs standard desktop PC.
I don't know who is downvoting all the intellij comments, but I'll right that ship!
You can create a test post at /r/testpost to work on formatting before posting to a sub. Within the while loop in your pseudo-code, you are creating a new object for each iteration, but assigning the same reference each time. You're going to need to work out a way to assign unique names to each object, and a way to store those references. Not sure what you intend to do with the objects after you create them, but keep constructors in mind when coding the class.
I got the same thing, I'm using Blue J.. I should switch to eclipse
 Sorry. This was the first time I've posted anything with code. And thanks. Could this work if I made an arraylist? 
This makes sense, but in this example we are defining Hellow World onto the String words. What would happen in my actual app when the String words is user input and unknown until the user inputs. 
Maybe commas?
I really like IntelliJ too. Eclipse feels laggy and bulky. 
The correct thing. split() isn't evaluated until run time.
I think this is a sensible policy (and I emphasize that it explicitly involves catching runtime exceptions). That said, I think the more important API design choice is that your exceptions explain in as much detail as possible (e.g. limitations due to security issues?) what went wrong, which in Java would typically be by having multiple subclasses to your exception class. IMHO this is more important than whether the exception you throw is checked or unchecked.
Elaborating on what ajanata said, words is the array of splits, but it not evaluated until runtime, which means that if I have: String word = JOptionPane.showInputDialog(null,"Enter a word"); String[] words = word.split(" "); Then words will not be evaluated until after word gets filled by the JOptionPane. So if I type in "Hello World", words will equal {"Hello", "World"} as expected. 
No worries on the formatting. I just wanted to let you that test sub is available. &gt; Could this work if I made an arraylist? I don't know, maybe? You haven't presented enough information on what you are attempting to accomplish. What is the objective of your project?
I'm making a program based on the website MyAnimeList. Its has to incorporate file-reading, inheritance and sorting in addition to the basics. Its going to have a database (the text file) of shows with the variables title, genre1, genre2, and number of episodes which is what needs to be filled in by the text file, and the parameters episodesSeen, status and score filled in by the user later. The other stuff I think I can handle myself but I had no clue how to go about this and its pretty important 
&gt;Parsing strings to determine what exception occurred is less robust than using Java's type system, IMHO. If you're trying to determine different actions to take based on different exceptions yes, I agree, but I find that most of time of that granularity is unnecessary for client code and it becomes a burden on the client to maintain. Most of the time the generic "ServiceFailedException" is enough for the client to know it didn't work. Often the client doesn't even deserve that simple message as to what exactly happened in the service, other than it failed, as then they try to go and do foolish things just like basing application logic on the parsed message text, which in no way should be any kind of real contract. &gt;I DO like doing that (assuming that all these failures are related), because it allows the client to say "I don't care to deal with the specifics. Just let me know if it worked or not" or to say "I want to do something different depending on exactly what went wrong". That's what multicatch is for. If I actually need to throw that level of granularity, I make sure the client specifically has to address it. If things are out of control and they have to declare catches on 50 different checked, then something is already fundamentally wrong with the API. 48 of those exceptions could probably be combined into that generic MyServiceException, and then you'd have the one or two other actually meaningful, distinct, exception cases that the client potentially could handle differently. Granted though, that everything is situational. There very well might be situations where you need to use that inheritance model with your exceptions to get across the behavior you want. &gt;That said, I avoid inventing my own exceptions, and use the ones that are part of the standard library where possible. Agreed. Any custom exceptions I do write are generally no more than like markers to designate the service boundary in which the failure occurred. I just implement the constructors which delegate to super(String msg, Throwable cause) and keep things nice and simple. Any complex logic should be in some exception handling service, that handles when the custom excetpion type is thrown, not embedded as part of the custom exception itself. An Exception class should not know how to send emails, for example, but a handler should know how to send an email, given the occurrence of WhateverSpecificException
They got to you too! Don't worry, IntelliJ-brother I'll fix your karma! Eclipse feels like you have to build it piece by piece so you don't get much consistency in how anything works. IntelliJ feels more put together and professional.
words[] is evaluated at runtime and becomes the array that String.split() returns. It doesn't matter how many words you enter into the JOptionPane, it will create an array of words and words[] will become that array. Within the same program and using String.split(" "), we get the following examples: "Hello World" becomes {"Hello","World}. which means words.length == 2; "Yo, Last night I ran into your momma." becomes "Yo,","Last","night","I","ran","into","your","momma."} which means words.length == 8; 
&gt; ...I had no clue how to go about this and its pretty important I just had a look at your history. Your [post](http://www.reddit.com/r/java/comments/1s4l90/help_with_creating_a_my_anime_list_application/) from 29 days ago caught my attention. So a couple of questions: - Why didn't you initially detail this post as much as you did in your previous? - Why didn't you respond to the comment in your previous post? - How are you still working on a final project 29 days later?
It doesn't address the question at all. So far [this](http://www.reddit.com/r/java/comments/1u9dtj/autocomplete_in_google_and_bing_faster_than/ceftqen) is the only answer that has. That's why it has a few downvotes most likely.
Also the deadline isn't the day we get back to school so I have time but I need to have yet another progress report done for that week so I need to have finished at least some of it. Any help along the way would be greatly appreciated
My draw to Eclipse is the modularity, and my completely custom keybindings that would be hell to re-do anywhere else.... 
how is this not top comment?
Thanks! So here's my first attempt at implementing the solution v0.1.0: https://github.com/chendaniely/java-regression-pcalculator
I love jython, actually doing a talk on it in a few days. If we could somehow get some more people interested in jython, and if the community picks up, (like pypy) then I'm sure we could beat CPython in performance. Example: cruby vs jruby. Hopefully when 2.7b2 comes out with SSL, we can get pypi and then a community. 
It was just a question of time I suppose...
i guess that is fitting... it is the theme of the thread!
Switching to some like Computer Science is probably the best ... But I'd also apply for entry level programming positions; 4 courses should have given you a decent grounding ... Try
Instructions on how to do this?
[[Source]](http://pastebin.com/MueZMMz4) is messy, but the intent wasn't to create a well written game, simply a functional one - and with all the recent time-lapse videos coming out I thought it'd be interesting to see how long it'd take to write a simple Snake game at my normal typing rate. To anybody wondering, the game runs in MJDE (Mobile Java Desktop Environment) - It's a java application I wrote which allows you to run any java class dynamically - and supports rendering as well as keyboard / mouse input. To put it simply, it saves me the time of defining a frame and work area each time - without it the game would have taken about 5 more minutes to make.
The problem with that approach is that even if they all implemented the same interfce, it wouldn't have to mean that their classes would be loaded by our URLClassLoader. The point of my article was to show how URLClassLoader, in these situations, doesn't help you much. 1. You need the test classes and stub classes in your project 2. URLClassLoader first delegates, and then searches itself This means that it would simply return stub classes, and not load/unload them from JARs that people submitted. What I did was made it first try to load, and only if that fails, to delegate.
I am beginning to wonder if IntelliJ also includes a fancy sticker in the box.
How customizable is Intellij's GUI? I haven't used it, but looking at some screenshots it looks terribly bulky.
I second this. How would one do this in Eclipse?
I second that. Have seen how fast Eclipse loads on a friend's Mac Book Air!!!
How does the licensing work if I have it on my laptop and desktop?
Very nice for 30 minutes. Kudos to you.
I don't have Eclipse installed to try this out, but [Auto activation delay](http://help.eclipse.org/juno/index.jsp?topic=%2Forg.eclipse.jdt.doc.user%2Freference%2Fpreferences%2Fjava%2Feditor%2Fref-preferences-content-assist.htm) in Preferences -&gt; Java -&gt; Editor -&gt; Content Assist sounds right. For Netbeans I can't see any option - only reference I've found is for [a request for it to be configurable](https://netbeans.org/bugzilla/show_bug.cgi?id=193266) in PHP editor, with a comment that this should be applied for all languages.
&gt; But if you need something changed you have to ask those maintaining the archetype to do it for you. I find that it is a better situation that I can simply edit my XML file then having to wait for some faceless person to make changes I might need. You could make your own archetype and you could base it off a previous project or one in the catalog. You could check it out, modify and put it in your own artifact repository (the same place all the dependencies get cached which is your local ~/.m2 repository, or a central repository if you have one). Not sure what the difference is here other than there is a chance somebody else would maintain it. &gt;The key difference is, if I do need to make changes, it takes very little time to do so. I'd say this is more about familiarity of your own code, but it is a legacy way to do things. &gt;This is part of my point -- if you can't follow the Maven proscribed directory structure, you quite often find you're fighting the tool because some plugin you need created by others insists on the one way. I don't have that problem. Ever tried to use Maven with Eclipse on a project that doesn't follow the pattern? Doesn't work so well because even Eclipse is coded to that pattern. It sounds like the options are: * build ant scripts the way you like it * update the plugins to the way you like it. Almost all the ones that you would use are open source, so check them out and make the change. Update the embedded version, type mvn install, and you have it in your local repository. Request a pull from the maintainers to have everybody benefit. With Maven, I've only had to do that with one plugin. With ant, you have to copy and paste from project to project. &gt;Where as you are Googling to see if someone else has run into the same problem, figured out why it is happening, and hoping someone has a working solution and not having to wait on update code. Generally if my Ant scripts aren't doing what I expect, it is because I'm not using the tasks correctly, not that the tasks are broken. The other option is to pull open the pom, or to even look at some plugin code if you really need to. Again something that I've only had to do a couple of times. &gt;But as you point out above, it might not work with plugins and plugins make up the bulk of Maven's functionality. Ant tasks don't make assumptions about structure. You can change the code of the plugins. Generally it's: * Find the git repo hosting it * Check out the code * make the fix * update the version * type 'mvn install' Updating some ant plugin would have the same behavior, as updating the ant build files. In maven &amp; ant plugins it's java, and in the pom and build.xml it's xml. &gt;I have never had to change an Ant task nor have I had to write any custom tasks. I have, though, used the built in ability to execute JavaScript a bit, but very lightly. In maven, there is a plugin that lets you run arbitrary ant tasks. So you could still grief new team members ;-) I will confess though, I did have to make changes to one maven plugin, and I did workarounds for another. But that's many many years of experience. Although, based on your arguments, I'm sure yoru build.xml files are clean and easy to grok. Sadly that's not how most of the ones I encounter are. 
&gt; I use maven and I still need to read the xml to know what's going on. Once you hit a point where theres a sufficently complicated test suite and various stages plugged into the lifecycle you need to read the pom regardless Unless somebody went to the extra effort to change inputs and outputs: * src/main for inputs * src/test for test inputs * target/ for outputs everything should just run when you use * mvn install * mvn test * mvn clean * mvn jetty:run etc....
I used to use Eclipse, then I found IntelliJ IDEA like you said and have never looked back since. For me at least, it's a million times better than Eclipse in every way.
The community edition is free (and I believe that open source too, though I'm not sure) and it will be probably enough for anything you'll want to do. As for Ultimate edition (which is basically community edition with some bundled plugins, see comparison) I do not know, you'll have to look that up yourself.
Also the database behind the IDE auto-complete has to stay current whenever the user changes imports, adds or removes classes, members, local variables, etc., Google does not have to support that. 
If your auto-complete is stuck on disk I/O you should invest in getting more RAM. It will help with a lot other things too. 
I'm happy you enjoyed it :) If it at all matters I put in another 20 minutes and made it a lot more appealing :) [[Final Source]](http://pastebin.com/v78YnDvJ) [[Screenshot]](http://i.imgur.com/rTgq2rB.png)
Thank you, I'm happy you liked it :)
Intellij is licensed per user. You can install it on as many machines as you like so long as you only use one at a time.
&gt; Comparing the outcome to the heap sizes allocated, we concluded that the problem is not large enough, at least if waste is defined as unused heap. What also made us drop the research in this direction was fragmentation – this waste was often spread over 100′s of different collections, making the optimization harder and more error prone - See more at: http://plumbr.eu/blog/on-java-collection-waste#sthash.tQBibzQe.dpuf So, TL;DR is that generally you needn't worry too much about collections being backed by larger-than-necessary arrays, unless you are very, very tight on memory. I think in general though, if people were that concerned about memory they would want to use a language with manual memory management.
Not Python fan (far from it), but what's the point? You lose every advantage of Python with no added value...
In my opinion: Just apply for the jobs, dude. Buy a couple text books and get your Oracle certifications. Lots of people say that certifications get you nowhere, but they are wrong. If it's between you and another candidate, the one with the certifications wins.
There are metric tonnes of java certifications. http://education.oracle.com/pls/web_prod-plq-dad/db_pages.getpage?page_id=457&amp;get_params=pillar_id:5 Here's a good place to start. You would want to start out with the Java Associate, then Java Professional: http://education.oracle.com/pls/web_prod-plq-dad/db_pages.getpage?page_id=458&amp;get_params=p_track_id:JSE7Prog From there, where you want to move on to is totally up to you.
I dunno about that. I personally don't know of business close by that will typically hire a programmer without either a degree, diploma with heavy programming influence or certifications. Of the 3 or 4 people I know who got a programming job without some higher education backing it, they tend to contribute worse code and use the wrong tool for the job.
Yes, I would actually rather slow it down and use ctrl-space.
lol
&gt;I'd say this is more about familiarity of your own code, but it is a legacy way to do things. Code familiarity definitely, don't know that I agree with the view that it is legacy. Legacy by what definition? Because it isn't a cool shiny new way of doing things? As we've both said, build tools should be an afterthought in a project, once setup and working they should be ignored. Ant, Maven and I suppose Gradle, once up and running all fit that bill. They all do the job, they all do it well, if a bit differently. Maven's raison d'être was because Jason felt the various projects using Ant were doing it all differently, so he purposefully built an *opinionated* piece of software that enforced a set of standards as he thought they should be. It started out as a layer that simply controlled the use of Ant. I have no problem with that reasoning or approach as I suppose it makes sense in a world like Apache projects where you can't enforce particular approaches, only encourage others to adopt, whereas in an enterprise setting there is more control over standards that can be exerted if needed. So providing others with a tool that simplifies their lives but encourages your chosen standards is a way to achieve your goal. The second issue he wanted to resolve was around the proliferation of mechanisms for managing dependencies, jar files everywhere. To me, that is the real contribution Maven made and why I'm a very happy Ivy user. So from a legacy view point, the criteria I use when deciding if something needs to be replaced is how much time do I spend working around issues, having to write my own code to overcome deficiencies or inability to work with newer technologies I need to use. Since I've yet to need to write or modify a single Ant task and have had no issues incorporating Ivy into the picture, I've not seen any compelling reason to move to something new. Honestly the main reason that my current enterprise is moving in the Maven direction is because so many new hires know nothing else. They also often do not know how to write code without the help of an IDE and finding folks capable of actually debugging something is a surprise. So new projects are Maven based and follow a Maven model of standards, older projects work better with Ant. &gt; Although, based on your arguments, I'm sure yoru build.xml files are clean and easy to grok. Sadly that's not how most of the ones I encounter are. They have shown to be, but mainly because they have years of use and revisions in them. For other people's Ant scripts, I have seen some serious nightmares, almost always because the scripts were broken up into multiple files and scattered. Makes figuring out what is going on a pain that is definitely self inflicted. Lower-level tools tend to give you more power and flexibility, but that then lets you shoot yourself in the foot and people always do. I have to admit that my Ant scripts tend to follow the [suggestions](http://www.onjava.com/pub/a/onjava/2003/12/17/ant_bestpractices.Html) from about 10 years ago, modified as they've progressed to include capabilities around testing, managing app servers, etc. So even though Ant doesn't push you to use a given approach as much as Maven encourages its model, best practices in any tool are essential and using a recognized *standard way* is never a bad thing.
Show me a list of sites using jsf AND who's code isn't a bloody mess, then I'll be impressed.
What is GlassFish? The page only says it is a Java EE 7 "application server". By application server, do "they" mean a package, everything needed to run a web app? The JVM, JDK, the enterprise libraries, a web server, a servlet container ( a nicer version of Tomcat ) and a database also nicely integrated together? 
[GlassFish](http://en.wikipedia.org/wiki/GlassFish) is/was the reference implementation JEE application server. I added the *was* because it was recently announced that the Oracle was dropping the commercially supported version going forward, so whether it remains the reference implementation in the future as an open source project is unknown. 
Well my quesiton is basically "what is an application server?" Is an application server the JVM,JDK,EE libraries, web server and servlet container ( a nicer version of Tomcat? ) all bundled together? What do you mean by "reference implementation"? An implementation that conforms to all of Oracle's standards, put forth as an example to other vendors?
Application server is hard to define, as most of them are application servers, they host applications. The thing is what features does your application require. Tomcat provides support for servlet and JSP based applications. It doesn't have EJB or JPA built in. TomEE is a Tomcat bundle that includes those features. Glassfish as the JEE reference implementation provides all of the JEE capabilities for the latest JEE specification. You might want to look at the [wikipedia](http://en.wikipedia.org/wiki/Java_Platform,_Enterprise_Edition) entry on JEE to get some more details.
A reference implementation is an implementation of a specification created by the lead of that specification. Oracle leads Java EE, so it has the responsibility to create a reference implementation of it. A reference implementation is kind of an example that other people who like to implement the specification can look at. Java EE specs don't necessarily have to be lead by Oracle. JBoss for example is the spec lead of CDI (arguably the most foundational Java EE technique today) and Bean Validation. This means JBoss has to provide reference (example) implementations for both these two. JBoss indeed does that. Weld is the reference implementation for CDI and Hibernate Validation is the reference implementation for Bean Validation.
Show me a list of sites using any technology who's code isn't a complete mess!
I would imagine that is the plan. I'm just watching to see if the open source project that derives from this continues to be viewed as the reference implementation or if one of the other JEE offerings (like JBoss) become the defacto lead.
Thx! I'll give it a shot!
Believe me, I'm dying to put an SSD into my work computer XD The HDD in this thing is slow even for a HDD. I turn the thing on and go use the restroom and grab some joe. Meanwhile my desktop takes longer to POST than load Win8 from an SSD XD
I find this comment strange. JSF code is far simpler than anything else I have seen in Java. Instead of writing a big mess of JavaScript and tags pieced together from all over the place you can use a simple component. Every framework has strengths and weaknesses but clean code is a huge advantage for JSF. Take a look at some of the code at the PrimeFaces showcase for an example. www.PrimeFaces.org
Okay this makes a lot of sense thank you. I am having a tough time getting it into my app though as I have two seperate classes - Translate1 and Translate1App. In Translate1App I have: word = JOptionPane.showInputDialog(null,"Enter a word"); So would I use .split in this class or would I use it in Translate1 as this is where my logic is? My code is in the OP for reference. Thanks a lot.
&gt;You should add a default constructor and initialize your member variables there. the run method is where I keep things - it's a threaded program and I want to ensure everything is ready to go before I move on. &gt;moveTail is inefficient. Moving a snake only includes adding a new head and removing the last Coordinate. No need to loop over all coordinates. You got me there. I hadn't thought of doing that - it was a "design-as-you-go" sort of program. :) &gt;isGameOver could return a boolean and put in the while(!isGameOver()) doesn't serve any usefulness here. &gt;You could use a Direction class containg the x,y changes when moving in a certain direction. For example: Direction RIGHT = Direction(1,0) // x will increase by 1, y does not change This and all other directional changes work great for other top down implementations - seeing as how you can only go 1 of 4 directions here having no other combinations is fine. &gt;You could use a Coordinate class containing an x,y (could be either part of a snake or a wall) Again, yes I could - but it wouldn't save time,it would lead to more legible code which was not the intent. :) -~ Thank you for taking the time to read it, I agree on pretty much all your points, if time hadn't been a concern here it would have been done a lot better- regardless, thank you again for taking the time . I do appreciate it :)
Dude... From http://beehive.apache.org/: 2010/01/11 - Apache Beehive has been retired. I wouldn't bother, really =)
This year I'm going to use violence, blackmail and extortion to get an SSD into my work PC. Last year our department ran out of budget. Last place I worked for, I bought one out of my own pocket. In here I cannot do that because of "security"... Oh, and things in a Debian Linux VM running on corporate Windows 7 work faster than similar things running on Windows 7. I run the IDE and do all development inside that VM. I blame the stupid antivirus (McAfee), which apparently gave up on checking VM image but does check each file I open on windows. I still don't get it how corporate IT can screw up Windows installation that bad...
It looks like you are calling the split method too early. When you create the language1 object word = " ". Are you getting blanks as an output? Also, can you paste your main method?
Here is a gist with all of the code : https://gist.github.com/anonymous/8242868
I'm not sure if I added the right person on skype. I just copy-pasted your skype name and it came up with somebody that has a different first name than yours. Hopefully I didn't add some random person. haha.
There may be a defacto lead, as-in the most popular server, but which server is the one and only reference implementation is set by the JCP process. For JBoss to become the RI, it has to take over the Java EE umbrella spec from Oracle. Anything is possible, but there are no signs that anything like this is about to happen. The JCP is a pretty formal process so this won't happen overnight if at all.
You might have, you can PM me your skype name and I'll add you
Yeah, but that term is already taken! It's Java code on a JSP page.
&gt; Instead of writing a big mess of JavaScript and tags pieced together from all over the place you can use a simple component. Wrong, this code has to be written somewhere. Every framework that comes out claims you "don't have to write bla bla bla", but of course either - 1. You do 2. You don't, but when something goes wrong, or you need to customize something, it's impossible and you're sol.
I'd be interested in this. Why skype, though (just curious)? 
By code do you mean the generated markup, or the facelet/source code? I'm not a fan of the HTML generated by the default renderers (specifically the javascript "onclick" parts), but at a source level I don't consider JSF code to be any messier than alternative.
Google Chat works a bit better IMO.
And by that you mean google hangouts right?
I just don't use skype. Had to install it. I have the same problem as the other guy. A "julian" comes up. 
Yes this is me, didn't realise my nickname was so offputting :D
Yeah, whatever they call it now.
While it is true the code is somewhere you do not always have to worry about it. You could make the same complaint about JQuery. Building on top of things like this is how we evolve. Otherwise we would all by typing 1's and 0's all day long. One of the nice things about JSF is if something does not work like you expected it is very easy to customize. If that fails just use a different component or revert back to writing your own JavaScript and html. The only thing I have had to customize with PrimeFaces so far is the CSS for look and feel. This is easy to do with either plain old CSS or using something like theme roller. Everything else just works like you would expect it too. 
I'd be interested; however, I taught my self java.
&gt;private String[] array = word.split(" "); This should be done in the setWord method or compute method, not in the initialization of array[]. So just keep it to say private String[] array; Your setWord method, then, should be: public void setWord(String word){ this.word = word; array = word.split(" "); } Now your array[] is setup with all the words the user has typed in. You need to wrap each word processing in a loop. Also your for loop signature will fail to process 1 word with how you have it setup. Your loop that you have now is only appending the first letter of every word into a string, not actually doing what you want. So if you typed hello world, the resulting string would be "w" with what you have now right after the loop. Line 21 and 22 will make that string be "whay", which I don't think is what you intended. What are you trying to do with line 21 and 22 need to be done somewhere in the for loop. Your loop should then look like: for (int i = **0**; i &lt; array.length(); i++){ String temp = array[i].substring[1]; //this will return the string held in array[i] but without the first letter, so Reddit becomes eddit. String appends = array[i].charAt(0) + "ay"; //not sure if this part will work, let me know if it doesn't, but it looks like it should. temp = temp.append(appends); //it is now edditRay newWord = newWord.append(temp + " "); //space is needed here } This should work with what you are trying to do. Let me know otherwise. Get rid of line 21,22, and 23.
Given the rest of the offerings, I think that WildFly / JBoss EAP are likely to be the leads for smaller business. WebLogic and WebSphere AS will likely still command the party for massive business. Not sure where TomEE will go. Will have to watch it, but with WildFly already relatively mature, that's a tough place to be.
In the loop that I gave, when I compile it, I get a lot of "cannot find symbol errors". public class Language1 { private String word; private String[] array; private String newWord; private StringBuffer strBuff; public Language1(){ word = " "; newWord = " "; strBuff = new StringBuffer(); } public void setWord(String word){ this.word = word; array = word.split(" "); } public void compute(){ for(int i = 0; i &lt; array.length(); i = i +1){ String temp = array[i].substring[1]; //this will return the string held in array[i] but without the first letter, so Reddit becomes eddit. String appends = array[i].charAt(0) + "ay"; //not sure if this part will work, let me know if it doesn't, but it looks like it should. temp = temp.append(appends); //it is now edditRay newWord = newWord.append(temp + " "); //space is needed here } } public String getNewWord(){ return newWord; } }
Hmm. What IDE do you use? Also, does it tell you what line the error occurs at?
okay, I think I know where it is messed up. Wherever you see .append, use .concat
I might give it a go. Been gearing up to tackle it for the New Year. I have some things in mind and have been studying, and I have all next week off of work so I was going to do some major cramming. I'll add you later when I get home.
TextPad. It doesn't tell me. I went back to my original code and changed it up based on some stuff you said and others. This is the code that I have came up with. public class Language1 { private String word; private String[] array = word.split(" "); private String newWord; private StringBuffer strBuff; public Language1(){ word = " "; newWord = " "; strBuff = new StringBuffer(); } public void setWord(String word){ this.word = word; setArray(); } private void setArray() { this.array = this.word.split(" "); } public void compute(){ for(int i = 1; i &lt; word.length(); i = i +1){ strBuff.append(word.charAt(i)); } strBuff.append(word.charAt(0)); strBuff.append("ay"); newWord = strBuff.toString(); } public String getNewWord(){ return newWord; } } Now I have the same problem with this code, as the app only takes the first letter of the string and puts it at the end, followed by ay. This should happen to each individual word in the string and not the string as a whole. So the reason this isn't happening is because of my compute method here: public void compute(){ for(int i = 1; i &lt; word.length(); i = i +1){ strBuff.append(word.charAt(i)); } strBuff.append(word.charAt(0)); strBuff.append("ay"); newWord = strBuff.toString(); } The compute function is only working with the word variable, not the split array varaible. I don't know how to fix this but im sure once I do, the app should work properly. 
This got rid of some of the errors, there is two left in this code . public void compute(){ for(int i = 0; i &lt; array.length(); i = i +1){ String temp = array[i].substring[1]; //this will return the string held in array[i] but without the first letter, so Reddit becomes eddit. String appends = array[i].charAt(0) + "ay"; //not sure if this part will work, let me know if it doesn't, but it looks like it should. temp = temp.concat(appends); //it is now edditRay newWord = newWord.concat(temp + " "); //space is needed here } } The first error points to the . (dot) in array.length for(int i = 0; i &lt; array.length(); i = i +1){ And the second error points to . (dot) in array.substring String temp = array[i].substring[1]; 
your compute function needs to look exactly how it was before when you copied and pasted what I had said, otherwise it won't work. the "ay" is only getting appended once since it is outside your for loop.
The app works now! As it is intended too. Thank you for your time, I didn't realize it would take this long. We haven't used .split in class so I'm unsure as to why it's on my exam revision paper that I'm doing now. There was some stuff you used in that code that I've never seen before so I was wondering if you could briefly explain it. String temp = array[i].substring(1); //this will return the string held in array[i] but without the first letter, so Reddit becomes eddit. String appends = array[i].charAt(0) + "ay"; //not sure if this part will work, let me know if it doesn't, but it looks like it should. temp = temp.concat(appends); //it is now edditRay newWord = newWord.concat(temp + " "); //space is needed here The code I am unfamiliar with is "temp". Is this just a name, you could have called it String Reddit if you wanted to? .substring. Does this take each individual word from the array? Making it a "substring" of the initial "String"? .concat. I have no idea what this is but it seems to be an alternate for .append? Thanks again!
I've done something similar using Groovy and Eclipse. see what is going on in this example http://blog.diniscruz.com/2013/12/executing-eclipse-plugin-junit-tests-in.html?m=1 and notice that I'm loading the class files from a local folder before each script execution (that process lasts milliseconds, ie not noticeable by the user)
&gt;To solve this, you can modify the .split(" ") to say .split(" +") This is a great piece of information. I hope I get a question similar to this in my exam so I can impress my lecturer with all this new info I learned today haha. Thanks for all the information, it really helped a lot. 
If you are regularly tutoring, I assume you actually have a job as a programmer? Running something like this could cross the boundary from "general helpfulness" to "breaching your code ownership agreement". If you do this, make sure that whoever you work for is ok with it! The company I work for make a lot of money from providing courses. If I was to say that I am creating a free set of Java tutorials and publish them to the web, they may decline it or have legal grounds to request their removal. Remember that working as a programmer often means that your place of business owns everything you do regardless of if you are on the clock or not.
Sounds awesome! Thanks for doing this, I found that when I began learning HTML with my teacher it became a lot clearer and I would love to have a talk with you. I've tried learning Java but I don't really understand it yet but I would love to pick it up this year. I'll contact you when I get back from holidays (like 2 weeks).
I would also be interested and have also self taught myself Java.
It happens all the time actually. Type 1: they are looking for a junior developer. They want a little bit of skill and are looking for youth. Type 2: you are the nephew/niece of a business owner. (not what you know, but who -- but connections are an absolute requirement). 
Since you have a lot of questions, Google would be a good choice.
I don't see any objections? You will probably have more merit from it
Can you please tell me how you did that? Its just so hard for me to understand the logic. :(
I'm in uni learning Java at the moment but I'd be interested. I dislike Skype though but I could easily set up a small forum on my site for you. It'd mean you can effectively keep track of what's going on, people can freely post more info/request help and more. 
I used to play Runescape and I was too lazy to grind. So, I found a bot and read lots of tutorials. From there, I found a couple of books and used them for references. However, I still do not understand many of the main points of programming.
I appreciate your offer, but I have a hosting setup for a website in case I need one. For now I'll stay at Skype even though shortly I might revert to a forum.
Ah fair enough. If you do move off skype, I'd be very interested in following this!
I will post the actual lessons on a temporary blog, any questions about the material can be asked on Skype for me to consider and possibly add explanation for.
I'm going to be learning java over the next few months, being trained from scratch in a corporate environment (experience in Matlab and a bit of python). Am I any use? 
This was really cool. I'm mostly a J2EE guy, and I've never tried my hand at (even simple) game development. This inspired me to write my own quick snake clone. Took me an hour or so, and I've been refining it all day. :-)
I'm the technical lead and program manager of a small dev team (between 5 and 10 people, depending on when you catch us). FWIW, YMMV, IANAL, etc: When I'm interviewing someone, the degree they have is mostly meaningless to me. My company won't hire someone who doesn't have their BS, so I have to check that box, but some of the most talented programmers I've ever met either had GEDs or Associate's degrees. An MS in comp sci won't win you a position, and *lacking* an MS won't disqualify you, at least on my team. That being said, a BS in "IT," whatever that means, would raise a warning flag. I would expect a guy who *wanted* to be a programmer to get his BS in comp sci (or the equivalent). So if I was interviewing you, your mission would be to convince me you weren't just a guy who was jumping on the Java bandwagon because you think that's where the money is / the jobs are more stable / whatever. I want to hire someone who *likes* to program, not someone who is applying because it's better than flipping burgers. The best way to do that, in my opinion, is to walk in with a portfolio of stuff you've done on your own time. All of the really good developers I work with program as a hobby, not just as a job. When I applied for my first job, I showed them a dozen or so programs, from toy code to utilities to full blow applications, that demonstrated just what I was capable of. If you can show me that you're the real deal, by explaining how you've learned your craft and showing me how you use Java in day to day life, you'll be miles ahead of some guy who has a Master's and no practical experience.
Any input is valuable, I will post the link to the lessons, once I have written several.
Just search stack overflow for questions with &lt;= 0 votes with just the java tag.
&gt; A problem I am noticing however is that some of these people have gone through their Java course pretty much writing code that they do not understand. This is certainly a problem with many of the ways people learn programming today. Underdeveloped video tutorial series that don't spend nearly enough time on the fundamentals, or explain them in enough detail. Following a tutorial, copying line by line when you don't understand how or why that code works is not effective learning! Newbs need to take their time, be patient, and actually understand everything they read and write. This is why I firmly believe a beginner intro book should be read first. 
Same motivation here, except I wanted to make automated gun shops in Garry's Mod DarkRP
Woosh
In highly networked systems, being able to insert a Python-like component (Jython or Groovy or Scala etc.) in your architecture amidst the Java provides flexibility for data filtering, system test, and customization. Jython's power is not "lost" here, its power is being added into the larger Java system; that is the value-add.
I don't know much about Gary's Mod, but for Runescape, there were bots set up, all I had to do was make a script to tell them what to do. What I learned from that was all the syntax.
I'm halfway through my second unit of Java (just about to hit GUI's), and I'd be really keen too! Adding your skype as soon as it installs haha.
There's actually an entire site explaining this, [kind of](http://threevirtues.com/).
It shows quite a lot of interactions common in today's smartphones and tablets!
["laziness is a necessary attribute of a good programmer"] - Larry Wall
I would be interested however I am self taught (or more accurately, self teaching)... The uni course I will be doing however starts from no prior knowledge. I would like to see OOP covered :)
Are you from the Netherlands, or is that the wrong person?
Bookmark for later.
Oracle provides [paid Java SE support](http://www.oracle.com/us/technologies/java/javase-support-ds-401380.pdf) for enterprises. I think that Oracle also sells Java performance tools, but I couldn't find a link. Otherwise, the development of Java leads enterprises to consider Oracle relational databases over other relational databases. You know, in case there's some future incompatibility between Java and other relational databases.
No, this is me :)
Besides they offer a variety of [Java certifications](http://en.wikipedia.org/wiki/Oracle_Certification_Program) such as the OCPJP (formerly SCJP) and middleware technology such as the [Oracle GlassFish Server](https://shop.oracle.com/pls/ostore/product?p1=OracleGlassFishServer).
*First paragraph from linked [Wikipedia article](http://en.wikipedia.org/wiki/Oracle_Certification_Program):* --- The **Oracle Certification Program** is a professional certification program offered by the Oracle Corporation. There are three levels of Oracle Certification in several disciplines: **Oracle Certified Associate** (**OCA**), **Oracle Certified Professional** (**OCP**), and **Oracle Certified Master** (**OCM**). --- ^[(?)](http://www.reddit.com/r/autowikibot/wiki/index) ^| ^[(CC)](http://creativecommons.org/licenses/by-sa/3.0/) ^| *^Automatically ^deletes ^comment ^if ^score ^is ^-1 ^or ^less.*
That's exactly what bothered me about most of the tutorials. Either they just threw info at you without explaining anything, or just gave you a new example every video. Very frustrating. 
They sell enhanced versions of the JRE/JDK with more support tools, extensions for soft real time requirements, etc.. Not sure if this is still current: at least Sun also made money from selling Java ME licenses, which was likely the main reason Google build Android on top of Dalvik VM and the Harmony libs instead, also any full Java implementation had to be verified by a closed sourced Sun test suite .
I won't be adding you on Skype, but I would like to say that after a few years of Lua then jumping in to Java, I find the concept of static and the concept of swing confusing. 
Hi Taylee, maybe you've filled your quota but I'm interested. Thing is, currently I'm trying myself in very basic Android development rather than raw Java (I'm also taking a really slow-paced Java course, but I've a teacher to guide me through that). I'm finding a lot of trouble understanding components and their interactions within a package. Hopefully your mission has space to help me out? If so, I'll add you to Skype.
Ok, Well I can try, my own knowledge regarding the android package is not that extensive, but maybe I can help.
You guys are all forgetting that infamous Ask.com toolbar bundled with the installer.
It's pathetic, sad, and annoying, but at most defrays a small part of the cost of distribution for the JRE (which is one of the reasons they should eliminate the stupid leachware). The real money is in embedded and enterprise. 
I used this a few months ago to implement a 'login via facebook' function in our system, and then to act as a internal single sign on provider amongst our 50 or so different customer systems. Confusing as hell at first, but once I got over the initial learning curve it's been fairly decent imo.
Great, if you're interested we can learn together. I already conctacted you in Skype. 
Could you give some additional information? Specifically, do you mean that each word is according to the code, or only the last one? In the former case, you have the code for a single word and just have to split the string first; in the latter case, nothing changes. (I have some problems with former/latter so my apologies if I used them incorrectly.)
I'm not home right now but if you haven't figured this out later give me a shout and I'll give you a hand.
This seems like a homework problem and I don't want to give you the answer, but you should try Googling string splitting in Java. It's really quite simple and very important if you ever have to parse text, read command line input, etc.
I'm studying for an exam I have on Monday , this is a question from last years exam.
That's pig latin, and sounds entirely like homework to me. Still, Googling "pig latin Java" gives you [some source code](http://pages.cs.wisc.edu/~ltorrey/cs302/examples/PigLatinTranslator.java) which looks like it'll do what you're after. Doesn't look like particularly good code, but that's only a problem if you're trying to pass this off as your own work.
&gt; I believe String has a split method [You believe correctly](http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#split\(java.lang.String\)).
Are you sure you added the right person, I dont think I've got you. I've made an android app before, but I am not really interested in it, since I don't use smartphones. :p
 decipher(String message) { // String[] String.split(String data, String delimiter); // takes a String and a delimiter and returns an array of Strings split up at the delimiter String[] wordList = message.split(" "); // Now you just iterate over all the Strings in the array and decipher them one-by-one for (String word : wordList) { decipheredMessage += decipher(word) + " "; } // Now we just return this String return decipheredMessage.trim(); } I've modified your original word method, now it has no sideeffects, it takes a String and returns the deciphered String, you'd use this in the usecase above. String decipherWord(String word) { int len = word.length(); return word.substring(len - 3, len - 2) + word.substring(0, len - 3); } In other languages or using Java 8 you could also map the method compute onto the String[], but as I assume you don't have access to Java 8. Also the variable allocation for decipheredMessage would not have been necessary, we could've just put the content of the register directly on to the stack, but this way it improves readibility.
I don't really buy it. I find it strange that an exam at this level would have much coding. Typically it would have a bunch of code and ask to write one unimplemented method. The code provided here doesn't have any prewritten look to it. Thus, my conclusion is that this is likely a homework assignment.
There is a lot of IPR in Java, and as long as Java continues to be widely used, Oracle can get royalties for the IPR. Microsoft, for example, paid Sun $900M for the use of Java patents and Oracle is aggressively going after Google for royalties. JavaME used to also bring in around $100M/year in royalties, however, I don't know the current situation.
I love Java. I use it every day. Do not build a website in Java. If you do, consider Scala + Play or Lift. But even then, don't do it.
Spring.io has examples of building lightweight java spring sites. 
Why not?
 take a look at primefaces (www.primefaces.org), one of the best JSF frameworks out there.
Asking questions like those will most likely start a holy war. To answer your question you could use google web toolkit (GWT) to write Java and it will generate the JavaScript for you. You could use frameworks built around GWT like Smart Client GWT to build your site. With that being said, you should choose the right tool for the job. Pick the technology that best solves the problem not the other way around. To better answer your question could you be more specific?
Thanks in advance for viewing this project and providing any feedback you'd like to give. What motivated this is that I found it difficult to start a large number (&gt;10k) of tasks that need to block for long periods of time. It's impractical to create 10k threads, and I don't know of any simple way to let a task wait without occupying a thread. So I built this to try to solve that problem...behind the scene there is a task queue and a thread pool that operate on Task objects. Task objects can return either a return value, Status.RetryLater, or Status.RetryNow. If you need to block for some reason, you can return Status.RetryLater, which will cause the Task to return to the end of the task queue. This lets you essentially pause execution for a while without occupying a thread. I'm not as experienced in concurrency as I'd like to be, so I'd appreciate some feedback about this from Java developers. Does this design make sense? Can you see anything fundamentally wrong with it? 
What do you mean web *site* vs. web *app*? What would you need this web site to do that requires a back end? The answer to that question will start us on a line that will lead to an appropriate back end framework, if needed.
Others have mentioned Spring already which is what I would normally recommend. Another option you have is using Jersey which is pretty awesome for REST services. Beware the religious zealotry that surrounds this topic.
Because he said so!
check out dropwizard [http://dropwizard.codahale.com/] if you consider this route. Jersey + Hibernate + Jetty + a bunch of other libraries stitched together. Can use templates for the front end (the sample project shows a good example) or use Angular, Ember, etc Also, Stripes [http://www.stripesframework.org/] is a nice framework for websites. Easy to get started, stays out of your way.
Interesting. I've never heard of Ninja (upvote for that because that is kind of amazing). So, what's the deal? What do you like about it? What kind of projects is it good for? Bad?
That would certainly work for the client side.
Oath can be confusing all by itself. I've used several implementations, can't say I'm ecstatic about any of them.
I'll check that out. Let me know if you smell anything wrong in the source code.
The link you have us a JSF component library so yes it is building with Java EE. If you are building a website that needs to be interactive and connect to a database it is an excellent choice. If you are just building a static web site then there really is no need to use Java.
I use java EE 6 and its not that bad, but I would recommend either Spring MVC, Play framework (has java API, not just scala), or Vertx.io Check out this [post](http://zeroturnaround.com/rebellabs/the-curious-coders-java-web-frameworks-comparison-spring-mvc-grails-vaadin-gwt-wicket-play-struts-and-jsf/) as well
If you are new to Java, stay away from Spring, that's my opinion. You must learn the basics first. I'm a java developer and mostly of the time I use JSP+JQuery UI Layout Plugin + pure Javascript.
Why the downvotes? I use Vaadin(GWT) and Spring. Works great. Fairly simple code.
I would not recommend to start Java projects with *Play*. Java has definitely become a second class citizen in the framework since version 2 with features lagging behind Scala and sometimes not ported at all. The Scala side itself looks more like an experimentation of various language features than a web framework.
Thanks for the reply, /u/rp181 Anyway, that makes total sense. However, how would people go about making their own libraries? That is to say literally writing the code necessary for their OWN window to open? It seems extremely difficult :o -- is it even possible?
Other than what is mentioned in http://www.ninjaframework.org/introduction.html , I like the google group; small (as of now) but very responsive and supportive. I find framework is very robust, flexibile and easy to learn. As a bonus, its very high performing as well. 
Yeah, I had the same experience of having to dig through the source code to figure out how stuff works, and when searching for documentation finding stuff which still refers to Play 1, which is annoying since Play 2 is completely different framework.
Sound's a lot like Play! (not a bad thing. I like Play! but it is definitely a Scala framework despite their claims otherwise). So, "Multiple environment configuration" is mentioned in the ninja-specific library. Is that multi-tenancy support?
&gt; Multiple environment configuration I'm not sure, I think its about dev/prod configuration. Never bothered about that.
If you can use JavaFX, there is a class JFXPanel, which allows embedding of JavaFX controls into a Swing application and JavaFX has a bar chart control built-in.
Here is a [download link](http://www.sendspace.com/file/109fgc) for the exam paper I'm revising. Here is a [screenshot](http://imgur.com/lbc24C3) of my programming assignments. There is none due and the last one was at the end of November. Also here is a [screenshot](http://imgur.com/LtlawjZ) showing my exam timetable, as you'll see, my programming exam which I am revising for is on Monday. I hope now that you will see I am not trying to show someone elses work as my own, I'm simply asking for help regarding a question that was on a past paper. Which you will see if you look at the exam paper I provided.
Love #4. Uncle bob is awesome
I try to find things which the developers don't have time for and then make it myself. For example QA needed to be able to change roles in this one application we are testing. I made an app which does that. 
SmartGWT, gives you Enterprise-candy-compatible experience straight out of the box :)
It's interesting framework. I know even easier framework: [Spark - micro web framework](http://www.sparkjava.com/index.html)
I have made similar comments encouraging non JEE frameworks/libraries before and got down voted, this somewhat seems to be a trend on this subreddit unfortunately. 
Learning by doing! Copy and paste the code below and modify it to get a sense for it. The [Graphics object/context](http://docs.oracle.com/javase/7/docs/api/java/awt/Graphics.html) is a state machine! import java.awt.Color; import java.awt.Graphics; import javax.swing.JComponent; import javax.swing.JFrame; public class GraphicsExample extends JComponent { @Override public void paintComponent(Graphics g) { int width = this.getWidth() / 2; int height = this.getHeight() / 2; g.setColor(Color.GREEN); g.fillRect(0, 0, width, height); g.setColor(Color.RED); g.fillRect(0, height, width, height); g.setColor(Color.BLUE); g.fillRect(width, height, width, height); g.setColor(Color.YELLOW); g.fillRect(width, 0, width, height); } public static void main(String[] args) { JFrame window = new JFrame("Swing Graphics Example"); window.setLocation(100, 100); window.setSize(400, 400); window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); window.add(new GraphicsExample()); window.setVisible(true); } } Happy Coding!
One correction; java hosting is free these days on OpenShift.
Maybe I should have worded better the question. From the articles I read it seems that they think that component-based framework ala JSF and Tapestry are crap for building dynamic web sites and they're great for building complex web apps. If you want to build a dynamic web site action-based frameworks like Stripes and Struts2 are better, according to what I read.
wow, that's a pretty drastic downvote party for a fairly common opinion (since the OP asked). Basically, Java for a website is amazing overkill. The sheer complexity involved with JEE / Spring MVC (or "other" MVC framework). To be honest, it really depends on what the OP means as "website" vs. "wep application". If you're talking about a simple "view only" site (perhaps with some minor DB backend stuff)? Yea, I stick by my statement. If you just need a simple MVC site, consdier Rails, Grails (on the JVM), PHP + The new fancy framework of the day. If there's limited back-end work, just stick with .html / js consumers for a back-end web service (implement in whatever language you want). But, for the site, KISS. 
I'm fairly certain that no one is suggesting any type of monstrosity in any language.
Thanks, I stand corrected. According to my quick research, at least a smaller JEE-Application could be hosted for free. That invalidates my second point, changing my recommendation to: It'll be easier in PHP, but if you want to learn JEE and need an "excuse", JEE is a valid solution.
I am not sure who the "they" are that you are referring to. I am just speaking from my own experience. I work on a pretty large Java web application using JSF and PrimeFaces. I would say I have written less than 100 lines of JavaScript for the whole thing. JSF certainly has made it much easier for me to build a rich web application. I never claimed there was not JavaScript in the application only that I did not have to write or mess with it. You seem to be speaking more from an ideological objection rather than someone who has tried it. 
I more or less agree with you. I think the author was hinging towards huge bug lists, but that is an allocation problem. "Oh, we have X issues to be spread among a team of 3 for a year (and only X/2 can be finished). I suppose if you were a better programmer, this would not have been a problem". Painting it as a problem for programmers to resolve is often a managerial cop-out in the real world.
what exactly are you doing on line 30? Also, you would be overwriting the paintComponent method by doing that, right? Everything else I understand. Thanks!
You'll probably either love it or hate it. The target audience is beginners so it doesn't assume knowledge. And I find it to be easy to read. If you hate cartoons and only want text, skip it though.
I'm almost done with the book and would recommend it. I also half way done with my Java courses in college I've been using this book and the internet with no a single headache.
I actually started with the book you are referencing. I found it very helpful to get started corralating Java code to different terms I had learned from other languages. I also used these two books to get a good beginner grasp on what I was doing. YMMV http://www.amazon.com/Murachs-Java-Programming-Joel-Murach/dp/1890774650 http://www.amazon.com/Head-First-Design-Patterns-Freeman-ebook/dp/B00AA36RZY
I didn't like it. It was great info just the style is odd. Maybe you'll like it, nothing wrong with giving it a try 
Thanks for the feedback! I've taken your advice and fixed the math on the benchmark, and replaced the sleep statement. ForkJoinPool is pretty impressive, especially when compared to ExecutorService in this demo. I'll need to check that out. It looks like that was the solution I was looking for. I'd love to do more work on this though. It should be easier to start tasks--task should be an interface, not a class, so that any code that implements an act() method should be allowed to run. The other thing I've been thinking about is whether the whole concept of building tasks out of subtasks makes any sense. Does it actually add any value, or make it easier to organize the code, or is it just a distraction? I think what I really want is a framework that lets you automatically display your program as a flowchart. Imagine being able to display your program as a flowchart, and being able to see live statistics that show the most-traveled paths through the flow-chart. I'm sure that any framework that reduces programming to something that simple could be extended in all sorts of interesting ways. Perhaps you could set it up to automatically make predictions about what the value of a variable will be, or which fork a process will take, based on information from previous processes and the current value of a process. Now that would be something! Unfortunately, I don't have a clue how to make a framework that can automatically generate flowcharts, while being flexible and easy to use. I tried working on it for a few days, but I don't even know where to start. If you can figure that one out, let me know. 
Def interested.
It is great and teaches you good programming tips. 
I've been meaning to check that out. Do you like it? Also, is that kind of thing possible in akka--generating simple code that can automatically generate flowcharts?
How do you mean? Without an external library/open GL?
I think he means programming java while naked.
Well, we've all done that... right?
Hahaha! It's a textbook, I was asking if anyone has used it before. It's actually free, search it!
So the GraphicsExample class is my Custom Component that holds the code to create the colored squares. On line 30 I create a new Object of that class and add it as a child component to the window object I created before (s. line 26). Now this is a very basic Example. It doesn't use the Event Dispatch Thread (EDT). If you really want to get into it I highly recommend reading [Filthy Rich Clients](http://www.amazon.com/Filthy-Rich-Clients-Developing-Applications/dp/0132413930/ref=sr_1_1?ie=UTF8&amp;qid=1388987532&amp;sr=8-1&amp;keywords=filthy+rich+clients). Not only for creating fancy effects and transitions but also for getting a solid introduction to using the Swing framework right.
I certainly have!
I developed many projects in Java EE 3 - 6. I came to conclusion that it's best to develop client part in HTML5, CSS3, Javascript, and use pure Servlets on server side (Java Application server). For server I would recommend Jboss7 with reverse proxy / load balancer. Practial J2EE stack includes: JDBC Resource pool with JNDI, pure Servlets API, JSP with basic JSTL, JAAS, pure JDBC. Example high level arhitecture: https://docs.google.com/drawings/d/1T3cotcU9-RwcgbxQe12JSvWibMp32YuxCyCRSWTBR5Y/edit?usp=sharing I would decide against frameworks like JSF, Spring, Templating frameworksm, Hibernate (JPA). They are hard to master, and they tend to perform badly if you are newcomer. 
No, but thanks for pointing it out!
That is a valid point, however, the original comment was downvoted because he didn't put any insight on why you shouldn't build a website with Java.
I've been looking to it now for about half an hour and it seems pretty ok. I like how it explains things. But, If you're a new programmer (you haven't been into any other programming language before) it may be a bit complicated because of the way things are explained. He goes deep into every subject without explaining some basics.. So, if you don't have the basics, you shouldn't go for this book. I recommend (if you're a new programmer) to read the oracle documentation ([here](http://docs.oracle.com/javase/tutorial/) ) 
We're lazy. Why don't you link it for us?
OP means this free online [text book](http://www.cs.ccsu.edu/~jones/book.htm). I haven't used it. It was published in 2004. It is now 2014. Java has gone through a LOT of changes in the past 10 years. 
I've been fiddling with it a bit and it doesn't seem too bad, but the way things are explained seem to me a bit overcomplicated for a beginner. I can recommend the free https://www.udemy.com online course: [Java for absolute beginners](https://www.udemy.com/java-tutorial/?sl=E0sTHl89QBNWAUIlTA%3D%3D) by John Purcell. He really explains everything in a very simple way.
&gt; at least a smaller JEE-Application could be hosted for free. A OpenShift it's quite amazing what you get for the free hosting tier. 3 linux virtual linux servers where you can login with SSH and something like 1GB of RAM. Response times are quite okay. It's much better than most free PHP shared hosting options. There's another free Java hosting option at GAE, although it's a slightly restricted version of Java
You already got the answer. Read up on string splitting.
You shouldn't give straight answers to homework questions.
Loved the book, it really helped me learn the concepts.
It's fast but at 246 source files (476 classes) it's not light.
Tomcat is an application server. Why? Because you can run applications on it. That's why "application" goes in front of server. Tomcat *also* a web server. Java EE app servers are a different kind of application server, namely one that implements the full Java EE stack. See [Application Server](http://en.wikipedia.org/wiki/Application_server) on Wikipedia.
JavaFX provides a large very customizable library that can be altered to just about any specification!
He said it isn't homework, and I trust him. Hes only lying to himself.
Help you do what? Do you have an specific question? You could maybe use /r/javahelp.
Theres this one question that follows: Write a program where you can write a swedish word and it's english words translation and that program will write the program out like this: Svenska: häst Engelska: Horse Häst heter "horse" på engelska.
Mind if I ask how the program would look like? I'm really bad at this :S And I'm kinda ashamed of myself of not being able to understand how to work things out with your help :( 
What does your book tell you? Do they tell you how to get user input? And don't be afraid to make use of google
The Syso? I've tried google, but it's so weird with the translations..
This has nothing to do with translations, it is just simple string parsing. Figure out how to read input from the user as a String and store it. You can use a number of different classes to do this, I like either BufferedReader or the Scanner class
Oh alright. I found some "guides" and people asking for help and getting answers on some forums. Thanks for the help kind person :)
"Dynamic web sites" implies a complex site, which also implies use of a database. I haven't used Stripes, but I can tell you from experience that JSF is great for building dynamic sites. However, I would stick to JSF 2.2 and above. I would also suggest MyFaces over Mojarra if you're concerned about performance for a high-traffic site. In many of the benchmarks I've seen posted, MyFaces performs better. Getting back to JSF 2.2, you can easily integrate it with front-end stuff such as HTML 5 Boilerplate and Twitter Bootstrap. JSF 2.2 can be used in Tomcat or Jetty, but you're better off with Spring or something else. If your target platform is TomEE, GlassFish, WebLogic, WebSphere, WildFly, or some other app server, then JSF makes sense. However, keep in mind that you can convert Tomcat to TomEE easily. If your web site requires interaction with a database, then JSF running in an app server makes sense. I've replaced my hosting-provided private Tomcat with TomEE 1.6, replaced the JSF jars with MyFaces 2.2, and got it working with my db. I get the benefit of HTML 5, transaction management handled by EJB's, and CDI. The best part is that TomEE's provided framework integration is consuming less memory than my previous hand-rolled implementation of Weld, Hibernate, and Mojarra I had running in Tomcat 7. I hope that helps.
While a valid point, I don't think that's why the comment was downvoted for the most part. I could be wrong though.
Firewall, proxy, router, etc? Your friend should get a Java Exception, what is the stack trace?
You most likely need to forward the port to your PC on that router.
Did you forget to portforward?
The problem is I have no access to the router, because right now I am connected to my dorm's network.
There are a few factual inaccuracies in this article: 1. Terminology. Tomcat is a Web Container, not web server. Web Container correctly implies that Tomcat can run servlets rather than just static web pages such as apache(without addons). 1. Tomcat cannot deploy ear files because it is a Web container rather than EJB container. Web containers implement the interfaces to run servlets. EJB containers do that + many others. 1. Whether or not the server is a Web Container rather than an ejb server it will need jars for 3rd party libraries installed in order to run those libraries. Certain servers may bundle in a few of the libraries(I believe that JBoss embeds eclipselink, but not certain) but that's implementation specific, not because it is full stack vs web container. 
What if I have no access to the router?
While firewall or port forwarding is likely your specific problem, you should at least consider using a library such as [Kryonet](https://github.com/EsotericSoftware/kryonet) to manage and assist with the connection and serialization code.
Not sure what everyone else recommends but Hamachi is typically used to get around not having access to the router for personally hosted game servers for things like Minecraft, Starbound, ect. 
Does your server actually have a publicly addressable ip? If not, your friend won't be able to connect to it without configuring your router to forward traffic over your game's port to your server's internal private ip. http://en.wikipedia.org/wiki/Network_address_translation http://en.wikipedia.org/wiki/Port_forwarding
Then you can't. You need a public machine with an open port somewhere, either one of you or your friend, or a dedicated server.
Buy a domain name and find a webhost.
Depends what you're building. Java is overkill for a small site. I'd do wordpress for any small site, Drupal for something bigger with a large userbase with CMS, and Java for the enterprise and large applications with multiple interfaces.
Check out [this stackoverflow thread](http://stackoverflow.com/questions/9656198/java-udp-hole-punching-example-connecting-through-firewall) on punching through firewalls with UDP. If you cannot setup an external server then you will likely have to play through a program that virtualizes a LAN like [Hamachi](https://secure.logmein.com/products/hamachi/), [Tunngle](http://www.tunngle.net/) or [GameRanger](http://www.gameranger.com/).
Keep a list of the pages that 503ed and then re-run that list on the method that contains the try block?
Show your code or your pseudo code. It's easier to proceed from there. 
can you make them runnables or a delegate form equivalent, and just add it to a 'failed' list whenever it fails, to be tried again later on. you could attach a 'count' to it, to retry some number of tries in the catch state 
 boolean repeat=true; while(repeat) { try{ *stuff* repeat=false; } catch(Exception e) { repeat=true; } } Should repeat until it gets through the try block without catching an exception.
Retrying something is quite a general thing. Try block is just an implementation detail. I would look into something more general, for example an actor based solution. I'd try a retrying supervision strategy in akka, starting with reading [documentation](http://doc.akka.io/docs/akka/snapshot/general/supervision.html) and [stackoverflow](http://stackoverflow.com/questions/10364654/akka-how-to-schedule-retries-on-failure-with-growing-delay-intervals). 
I saw it in some code from Google, so it's got to be good.
For primitive data types (ie int, double, etc) you can just do basic math and assignment if I'm not wrong. int x; int y = 10; x = (y + 30) / 5; You can just plug them into the assignment like that, and then the work is to adjust the math so that the outcome is what you want. So say if you want to get 10 gold for every level, you can just use x = y * 10. 
Infinite loop is essentially a DOS attack when used here. You want a queue of jobs, and when you start hitting 503's you need a exponential falloff. First failure, wait and try in 1 second, than 2, than 4, etc. Maybe max it out to retrying every minute. When something fails, drop it back in the queue to be retried (perhaps at the bottom of the queue, so all the failures get pooled together). By looping as fast as possible you are just going to hurt the server and the experience for the users.
A while loop with a break statement at the end of the try block should work just fine. Some code: while(true) { try {dostuff...; break} catch (){} }. might be hard to read since I wrote this using my phone. I'll fix it later if I remember. 
There are tons of options. You could either host the server on a public server (maybe on your friends computer) or connect to a VPN
This doesn't deal with the failure case happening twice in a row.
In general I would use a counter with a max value rather than a flag. If it fails some arbitrary number of times in a row you want to know, you don't want to hide it in the 'common failure' case.
Yes, it does. By giving up. Because you shouldn't keep eating resources when there's a persistent failure. I've seen way too many server crashes caused by retrying something that was never going to work.
If you store the address you're getting in an object, you can give the object a Time to Live field which you decrement each time you try to load the site.
Personally I have a rule of 3. 1. It shouldn't fail. Retries are for suckers anyway. 2. If it can fail once, it can probably fail twice in a row. 3. If it fails more than twice in a row, it will likely never work. Not much has changed so there's no real chance it will ever work. So we're already breaking rule 1. We know we're in a screwed up situation. As soon as you get this kind of scenario you have to start thinking about mean time between error, about the error case, whether it's random or based on burst traffic or whatever. You certainly can't drop in an infinite loop, but immediately retrying might not save much either. Maybe you should be thinking backoff algorithms or rate-limiting. Intermittent error handling is more complex than OP is giving enough info on. I disagree that the `if(!try()) { try() }` model is good because it's not a logical structure - it doesn't really match the conceptual idea. As I highlighted in my other post I think private static final int MAX_RETRIES; while(tries &lt; MAX_RETRIES) { try { try(); break; } catch (Exception e) { Logger.warn("Failed"); } } It's easy to analyse, easy to make it try more/less often and easy to debug.
this man knows his stuff. Portforward on routers cause usually they change the port outside your network
Thats true
Use substrings. String sub = original.substring(startIndex, endIndex); http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#substring(int, int)
Didn't see the part about question marks. while(string.length() &lt; 4){ string += "?"; }
I like that difference in thought!
thank you so much!! Is this the only way to do it? 
Thanks for the answer! I've made this code w/ your help: public static void time() { do{ time += 1; System.out.println(time); sleep(); }while (time &lt;5); } public static void start() { money = time + multiplier; System.out.println(money); sleep(); time(); money = time + multiplier; System.out.println(money); } Thanks for the answer, I think it really helped! I'll be sure to come to the best (here) for more questions :)
It needs to be able to work with any word I put in the tester 
The main problem you will get with substring is that it will throw an StringIndexOutOfBoundsException if the original string is smaller than the endIndex in your example 
Wow, really having brain farts today, my apologies. This will work: String firstFour = ""; for(int i = 0; i &lt; 4; i++){ if(string.length() &gt; i){ firstFour += string.charAt(i); }else{ firstFour += "?"; } }
I disagree with this. It's hard to tell what the point of this code is, especially for a beginner. I agree with your first suggestion of using substring(). There are two cases: * String length is &gt;= 4 * String length is &lt; 4 Returning a substring(0, 4) in the first case and the original string + appending "?" until the length is 4 in the second case will convey the point of the code better.
 Hopefully this is easy to understand public String findUpFront(String intitialString) { String newString = intitialString; //This is used when the length is greater than 4 using substring if(newString.length()&gt;4) { return newString.substring(0,4); } /** When the String is less than 4 this will find how many "?" are needed to make the String 4 characters then loops through that many times adding a "?" to the end of the string each time. **/ else if(newString.length()&lt;4) { int lengthTill4 = (4-newString.length()); for(int i = 0; i&lt;lengthTill4;i++) { newString +="?"; } return newString; } //For when the string it already 4 char long else { return newString; } } Edit: added comments for clarity.
I also tried doing it by running a method to set up the window instead of constructor: import javax.swing.*; import java.awt.Graphics; import javax.swing.SwingUtilities; import javax.swing.JFrame; import javax.swing.JPanel; import javax.swing.BorderFactory; import java.awt.Color; import java.awt.Dimension; import java.awt.Graphics; public class myGame extends JComponent { public int x = 20; public int y = 20; public void setUp(){ JFrame f = new JFrame("The most advanced game in the world"); JPanel p = new JPanel(); f.add(p); f.setSize(500,500); f.setVisible(true); f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); } public void paintComponent(Graphics g){ super.paintComponent(g); g.drawString("Hello",20,50); g.drawRect(x,y,50,50); g.fillRect(x,y,50,50); } public static void main(String[] args) { myGame g = new myGame(); g.setUp(); } }
I think you could be right. Here is an image from [my profiler](http://i.imgur.com/w6AYUav.png). The blue memory ("used ps eden space") does kind of a sawtooth but then levels out for a second then drops all the way down for a couple seconds. If that is the case what would you recommend? Tweaking the GC? Thanks for your help btw.
* Try /r/javahelp the next time * Please learn how to format your code properly - it's currently unreadable * Try to ask questions as specific as you can. Yours is somewhat vague - seems like you ask how to assign a value. Read the posting instructions (sidebar) in /r/javahelp for more on this. 
I'd look at reducing allocations. Unfortunately you're always going to have stop the world collection events but you can help reduce the frequency by reducing the number of short lived objects you create. I'm pretty far from a GC tuning expert but I'm sure there would be improvements to make there as well.
The problem is that you override paintComponent for you "myGame" class, but your myGame JComponent is not part of your UI at all. Here's a working example: import java.awt.BorderLayout; import java.awt.Graphics; import javax.swing.JComponent; import javax.swing.JFrame; import javax.swing.JPanel; public class myGame extends JComponent { public int x = 20; public int y = 20; myGame() { JFrame f = new JFrame("The most advanced game in the world"); JPanel p = new JPanel(); // New code p.setLayout(new BorderLayout()); p.add(this, BorderLayout.CENTER); // End new code f.add(p); f.setSize(500, 500); f.setVisible(true); f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); } public void paintComponent(Graphics g) { super.paintComponent(g); // Modified code g.drawString("Hello", 20, 20); g.fillRect(x, y, 50, 50); // End modified code } public static void main(String[] args) { new myGame(); } } The biggest change was setting a layout on the JPanel and add the JComponent to the JPanel as a child in the center of the layout (To stretch it to be the full panel size). Perhaps it was a simple oversight, but if you're unfamiliar with working with Swing UIs and layout managers, I would spend some more time here before jumping into the lower level painting. As evident here, it's often the cause for confusion as to why something isn't rendering in Swing. :) I also moved where the string is drawn since drawing it at a y=50 will draw it under the rectangle you draw right after it. I also removed the drawRect, since the fillRect is effectively drawing over it anyway.
From your description, you seem to be allocating memory inside getTile() and grabImage(). I would try to minimize allocations there.
I haven't used that book, but the one they use at my University and I recommend is Java Software Solutions: Foundations of Program Design
http://zeroturnaround.com/rebellabs/the-curious-coders-java-web-frameworks-comparison-spring-mvc-grails-vaadin-gwt-wicket-play-struts-and-jsf/
What do you have problems with? Could you show your current progress?
This is a sample question for an exam I have in a few hours. Christ I am so screwed
You could use the Java Calendar library which is part of standard Java. [Oracle Documentation for Calendar](http://docs.oracle.com/javase/7/docs/api/java/util/Calendar.html) You can set the calendar date in clear text as your input is and use the fields of the Calendar class to get the day of the year. Something like: Calendar myCalendar = new Calendar(); myCalendar.set(Calendar.YEAR,2004); myCalendar.set(Calendar.MONTH, Calendar.DECEMBER); // or 12 myCalendar.set(Calendar.DAY, 15); int dayOfYear = myCalendar.get(Calendar.DAY_OF_YEAR); 
could i implement this using arrays and switch cases?
Quite, but there's a little more to it: + Years divisible by 400 are leap years (29 days) + Years divisible by 100 but not 400 are no leap years (28 days) - even though full centuries are always divisible by 4 + Years divisible by 4 are leap years except for the above condition. Generally, your Idea is right!
if (condition) **{** //code **}** else **{** //code **}**
the curly brackets around the word else are reversed you have "{else}" instead of "} else {"
Just correct that if{}else{} statement. if ((number - 1.5) &lt; 0.00001){ JOptionPane.showMessageDialog(null, "You are correct"); }else{ JOptionPane.showMessageDialog(null, "You are incorrect"); }
What u/HiiiPowerd, and remember to include in your height check that you first check feet, and if those are equal, then check the inches, no use in checking both if the feet are more than the previously stored. Good luck on your exam! 
&gt; -1000000 You are correct
Thanks a lot bros xD
Sorry but as I have already explained for me at least PrimeFaces and JSF has gotten me away from writing JavaScript. 
You need to increment tries.
10/10
In college you shouldn't be in the mindset to learn a language; instead, look to learn how to program - the language is mostly irrelevant.
Also check out the modulus operator.
I never thought of it that way, thanks for the reply
The purpose of the course isn't to teach you Java, it's to teach you object-oriented programming. The concepts you learn in your Intro to Programming courses will apply to other OOP languages - Java just happens to be the language of instruction. Given the popularity of Android devices, Java should be around six years from now. (And six years from now, you'll probably be done with school and will have picked up a ton of other knowledge anyway.)
Arrays and switches are not the best way to do this. The following should work for you: SimpleDateFormat sdf = new SimpleDateFormat("MMMM d, yyyy", Locale.ENGLISH); Calendar cal = Calendar.getInstance(); cal.setTime(sdf.parse("December 15, 2004")); System.out.println("Day of year: " + cal.get(Calendar.DAY_OF_YEAR));
As he said. if you end up going further into programming in your education, you will most likely visit several different languages. Then you will see that it is more important to know about general programming techniques than languages. As well, you will probably, and hopefully, visit different categories of languages, where each has its positive and negative sides. And do yourself a favor, learn something on your private time as well. Buy a book on haskell when you feel sufficient in java.